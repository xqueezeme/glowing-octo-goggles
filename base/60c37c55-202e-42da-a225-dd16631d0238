{
    "title": "Please, You Take Her",
    "pages": [
        "Chapter 1 That's Her Alright\n\n\"You take her. We've all taken our turn with her,\" Andy said in frustration.\n\n\"Why in the hell can't she find another tour company? This is her third trip with us. You'd think she would find someone else,\" Carl offered.\n\nI watched as Bridget struggled to get a life vest on in preparation for boarding the flat-bottomed boat and gave a sigh. I turned to Andy, \"You can take her one more time as you know how to deal with her better than the rest of us.\"\n\nAndy's face screwed up again in frustration as I looked at him. \"Yeah, but that wasn't by choice. She's one hell of a good looking girl, but she's basically clueless. I bet her parents send her on these trips so they don't have to deal with her.\"\n\n\"So, we're glorified babysitters for a twenty something who's interested in birds and nature,\" Carl groused.\n\nI remained silent as I watched her twist and turn the small life vest around in her hands, then put it on inside out, the buckles against her body, straps hanging down her shapely legs.\n\nShit! I know I have to take her, I thought to myself. The other guys had told enough stories about her last year and thought they would never see her again. I had managed to find a way not to take her in my group last year and so far this year--I guessed that was now at an end.\n\nAndy slapped me on the back, \"Time to grow some balls dude. She's all yours.\"\n\nI picked up my gear and started walking towards the dock. She was holding the life vest in her hands, the other people in the group standing back with amused smiles. They were being entertained and had been for the past three days with her antics.\n\n\"Bridget, do you need some help?\"\n\nShe looked up at me with a frown as she examined the life vest as if it were a three-D puzzle of some sort.\n\n\"Yeah, I guess so. Why do these things have to be so complicated? It just doesn't seem to fit. I've pulled the straps out all the way.\"\n\nI wanted to shake my head in disgust but held myself back; I had to be professional I reminded myself.\n\nThen she looked at me, \"Why are you helping me? Where's Andy?\"\n\n\"He's taking another group and he said you were with me. Have you used the restroom yet? Once we get going there won't be another chance for at least three hours.\"\n\n\"No, I don't need to go. I want to go with Andy. He knows what he's doing.\"\n\nI was certain she didn't really mean to insult me, but it did register nonetheless.\n\n\"Sorry, his group is full and he doesn't have room for you in his boat. So, one more time. Why don't you try the bathroom, and then we'll get your life vest on.\"\n\n\"You're pretty bossy for someone who doesn't know me.\"\n\nOh, I know you well enough. You have a reputation a mile long. I'm only the sucker who got stuck with you this time. Okay, how am I going to handle miss prissy pants?\n\n\"How much do you weigh?\"\n\n\"Why do you need to know that?\" she scowled.\n\n\"Because, the life vests are good for certain weights. It looks to me as if you have a child's size and that's why you can't adjust it to fit you. More importantly, it won't support you if you were in the water unconscious.\"\n\n\"This one will fit me just fine. Just help me get the straps figured out,\" as she thrust the life vest at me with a pout. What's wrong with this guy, can't he see I'm an adult?\n\nI examined the vest and saw immediately it was a child's vest. She had pulled the straps out to their maximum extension, so that much she had gotten right. I turned the vest right side out and handed it back to her.\n\n\"Okay, now slip this on.\"\n\n\"Are you sure this is right?\" as she screwed up her face.\n\n\"Yes it's right side out. Now take the straps and buckle them at the top and bottom, then we'll do the bottom strap that goes between your legs.\"\n\nTrying not to grimace, I watched as she brought the waist straps together and buckled them, then she reached for the top strap and buckle. When she pulled the top straps together her ample breasts moved to the center of her chest within her low-cut, short-sleeved shirt. I watched as she tried to pull the buckle ends together, finally taking a deep breath to get it buckled. It wasn't difficult to see she could hardly breathe as it was much too tight.\n\nWhat a stubborn woman. \"Are you okay so far?\"\n\n\"It's pretty snug,\" as she took a breath.\n\nI looked into her blue eyes. Now this is going to be interesting. She has to reach down between her legs and bring the strap up to buckle in front of her and it's so tight she won't be able to do it without my help.\n\n\"Okay, grab the strap from between your legs and pull it up to buckle in the front.\"\n\nI watched as she tried to bend down and couldn't. How could a girl this attractive be so...so...\n\n\"I can't reach it, I think this life vest is too small,\" she whimpered.\n\nDamn, really! Why didn't someone tell you that?\n\n\"I think you're right,\" as I looked around and saw the other people in the group wearing broad smiles.\n\nI reached over, unbuckled the top, then the bottom buckle, and gently removed the vest; I saw her face turn red. I ignored her expression and walked to the equipment locker, pulled down a small adult size, and walked back to her, \"Here, try this on. It should work.\"\n\nAs she started to don the life vest I gave an overview of the trip to the others in the group, telling them in general what they should expect to see and that there were caimans and piranha in the river.\n\n\"Be sure to keep your hands inside the boat at all times as the piranha will sometimes jump at something skimming the water alongside the boat. That's why we don't want people throwing food scraps to them.\"\n\nGiving a look to Bridget I saw she had the life vest on and buckled but it was too loose. I turned to the others and told them they could start boarding the boat and to pay attention to instructions from the native boatman, then turned my attention back to Bridget.\n\n\"Okay, now we need to get this adjusted better before you get onboard.\"\n\n\"It's fine, I don't need your help,\" she replied as if insulted.\n\nI looked at her with a glare, \"It's not fine, and unless we get it to fit properly you aren't getting into the boat. So what is it, go, or stay?\"\n\n\"I paid for the trip. You can't stop me from going,\" she replied indignantly.\n\nOh, little lady, you won't go if I say you can't. I'm responsible for your cute ass.\n\n\"I can, and will. Now we either get this adjusted so it's safe for you, or you stay here. Do you want me to adjust it, or not?\"\n\n\"You're mean,\" she spat out.\n\n\"Yes, I am. Now do I adjust it, or not?\"\n\n\"Go ahead, you're holding the entire trip up.\"\n\nOh my god! The stories are all too true. This girl is a trip!\n\nI adjusted the top and bottom straps for the buckles, cinching them tight as she was almost too small for the smallest adult size. I gave the vest a good sideways tug in both directions to make sure it fit tightly enough, tugging her from side to side.\n\n\"You don't have to so rough,\" she complained.\n\n\"Is it comfortable or not?\" I asked brusquely.\n\n\"It feels okay,\" she admitted.\n\n\"Alright, just about done. We need to adjust the remaining strap so the life vest doesn't ride up on you. Spread your legs a little.\"\n\nShe glared, \"Spread my legs, you're kidding.\"\n\n\"If you can get it tight enough yourself then do it; if not I'm going to.\"\n\nShe reached down and tugged at the strap with little effect, then looked at me with a look of defiance.\n\n\"That's the best I can get it, it will do fine.\"\n\nI put my hands on the top of the vest and pulled upward. It went over her chin to just under her nose; clearly not tight enough.\n\n\"Not good enough. Stand still, keep your legs spread so I can get a good hold on the strap.\"\n\nBridget looked at me unsmiling.\n\nHow could a man this handsome be so mean? Oh, that was it, wasn't it? He had all the women he wanted on these tours. A good looking man who was knowledgeable and had a great smile was attractive to women. At least when he showed a smile.\n\n\"Just do it, I want to see some birds yet today,\" she grumbled.\n\nShe spread her legs a little and I found the strap, touching her bare skin for an instant, then several hard tugs as the straps pulled the vest downward, tightening into her crotch.\n\nI gave another tug on the top of the vest and it remained below her chin. It was good enough and the other members of the party sat waiting. Several people in the group weren't smiling now, my having to deal with her was cutting into their time.\n\nDamn! Does this woman have a clue?\n\nWatching as she found her way to a seat and sat down facing me I saw she was wearing a frown. There had been no thank you extended for the time I'd taken with her and I wondered if she were like this all of the time. It didn't matter, for the next few hours she was my responsibility.\n\nYippee!\n\nI had packed my smaller flat-bottomed boat with survival gear, extra water, and food. I'd never had occasion to use them, but the Amazon had taken more than a few by surprise and taking precautions was a good marketing tool when someone asked as to why I the towed another boat behind us. There were enough rapids on this reach of the Tere Pires that tip-overs were not unheard of, and people had drowned after being dashed upon the rocks after hitting their heads.\n\nThis was my third year on the Amazon in Brazil for this small company. I had spent a full year here on my own learning the birds, reptiles, and at least some of the plants the year before they hired me. I wasn't an expert by any means, at least I didn't consider myself one, but I was capable enough. I wasn't exactly an extrovert, but when it came to the natural world I found I worked well with people. Working for the tour company had given me the freedom to go to places I found interesting and have some time to explore on my own to amuse myself. It wasn't the best place to have a social life though--at least as far as women near my age.\n\nThis morning I had the tour that went downstream on a main tributary, then looped back by going around several drier oxbow islands in the broad floodplain side channels. It was a maze that took time to become familiar with. After spending days with the native boatmen the company employed to help support the local economy, I knew my way around well enough to go on his own on my own time.\n\nGetting close to wildlife, especially birds, was best by boat and my excellent vision picked out even the duller smaller birds as they foraged along the banks at lower heights. There were two places where the company had cleared a space so spotting scopes could be set up to look for species that lived high in the forest canopy or flew over the river. These landings were not very large and could accommodate about fifteen people at most. If people took a few steps too many they found themselves in mud and stinky water and I frequently reminded people to watch their step.\n\nWhile most of the birders and photographers on the boat failed to point out animals, Bridget proved to be an exception. She pointed out birds that were duller colored while I directed the others to more colorful species. The photographers in particular wanted gaudy subjects; the hard-core listers wanted every species I could find. Therefore I tried to call out birds for both interest groups. Bridget, I surmised was a hardcore lister. She wrote down every species I called out and identified, then checked her field guide as soon as she could to verify the ID for herself after lowering her binoculars.\n\nBridget\n\nI watched him as he spoke and pointed with his green laser to a location near the bird he was showing us.\n\nDoes he see more than what I'm seeing? So far he's identified every species I've pointed out. I can't believe that with about 630 bird species here he's seen them all. Too bad he isn't a bit nicer as he would be good to spend time with. I wouldn't mind picking his brain. I think he's better than Andy.\n\nDick\n\n\"Everybody remember to keep drinking your water even if you don't feel thirsty.\" I reminded the group again.\n\nWe approached the first shoreline location where I would set the spotting scope up hoping to spot the eagles that patrolled this section of the river and the flocks of noisy parrots as they crossed the river in full view. I stepped off the bow of the boat, secured the line to a tree, than started to help the passengers off.\n\nBridget\n\nI adjusted my shoulder bag and binoculars and stood up, eyeing the hand Dick extended to help me off. I met his gaze--it didn't seem as if he were put out with me now. He does have wonderful eyes. Whoa! What was that expression for?\n\nDick\n\nWhen I met her gaze I felt a pang of pain, her eyes looked so much like Lisa's, a little grayer for sure. Damn, I should have stayed away from her. This woman is going to be trouble. No! She's already trouble. Why couldn't I have saved Lisa?\n\nChapter 2 It Only Gets Better\n\nDick\n\nI sat the scope up and scanned the trees along the river for perched eagles. I found a Harpy, locked the scope down and watched as the group queued to take a look, Bridget was in the middle of the pack. She took a look and gave a gasp of surprised delight, and as she stepped back didn't notice the strap of her life vest had snagged on the leg of the tripod. The scope and tripod shifted out of place by almost two feet as a result. Red-faced Bridget caught it before it toppled over. No one said anything other than it could have happened to anyone.\n\n\"Sorry,\" she mumbled as she stepped out of the way. Swift, Bridget. Go ahead, make yourself look good again. He must think you're a real winner by now.\n\nI steadied the tripod, then positioned the scope on the bird again without saying anything. Bridget stepped back and used her binoculars to scan the open area over the river. I was pretty sure it was to hide her embarrassment.\n\nAfter the others were back to using the scope I checked with the group to make sure all had seen the eagle. Then I glanced at Bridget and watched as she scanned the river upstream.\n\nWell, at least she keeps herself occupied some of the time.\n\nI scanned the river myself and found a flock of swallows working their way towards us from downstream.\n\n\"Okay, folks, we have at least two species of swallows foraging over the river--Blue and White and Tawny. These swallows breed in cavities within the rainforest and forage over the tree tops and once in a while over the river. This is a great chance to get a good look at them.\"\n\nThe group turned their attention to the swallows and I assisted several of them by telling them what they needed to key on as field marks.\n\n\"I think there's a White-rumped with them too,\" Bridget offered quietly,\" it's flying a little higher up at eleven o'clock.\"\n\nI shifted my eyes, then raised my binoculars to view a lone swallow where she had indicated. Damn, she has good eyes, it is a White-rumped.\n\n\"Folks, Bridget has found a White-rumped over the middle of the river above the other swallows. This species is seldom found this low over the river. Good spotting Bridget.\"\n\nThe boatman gave me a sign it was time to move along so we got everyone back onto the boat. I untied the line and stepped aboard after shoving us off far enough so the boat motor could get us going again without hitting the bottom. I looked at Bridget as she sat looking at her checklist and field guide. At least you made up for being clumsy.\n\nOver the next hour we cruised slowly, stopping often as birds came into view, then moving on again. I noticed Bridget begin to squirm in her seat after a while, then a firm expression on her face as she kept her legs pressed tightly together.\n\nSuggested you to use the bathroom before we left didn't I?\n\nOne hundred-fifty-six species later we pulled into the dock at the lodge and I jumped to tie the boat off. I'd had no sooner turned back toward the boat then Bridget shot past me before I could offer her a hand, even before the boat had made firm contact with the dock.\n\nMaybe next time she'll listen to what I suggest.\n\n\"Okay folks, end of the line. Remember to leave your life preservers at the storage locker.\"\n\nI walked to the locker and stood waiting. Bridget was nowhere in sight as the others walked toward the bathrooms. Two minutes later Bridget walked toward the locker, her face unsmiling as she handed me her life vest.\n\n\"Are you always so stubborn?\" I asked.\n\n\"I'm not stubborn. I thought I could last longer is all. Are you one of those people who always say 'I told you so'?\" Why is he such a smart ass? I should have been with Andy.\n\nI watched her as she walked away and admired the way her hips swayed seductively with each step.\n\nStubborn and sexy. But smart?\n\nThat night after dinner I went over the species list with the birders in the group. They were very pleased with the species count for the day. After a few more questions I prepared to leave and saw Bridget conversing with two of the younger male birders. They were obviously taken with her and I couldn't blame them--there weren't many female birders her age on these tours. Not that I hadn't noticed her the year before.\n\nMost women I met on these tours were older, and had both money and time to spend. Lisa had been one of them, and after her, I vowed never to become involved with a woman while working tours again. Late last year, and now this year, I'd found it difficult to adhere to that rule--Lisa had come back in the guise of another woman. True, I had spent time with several women after Lisa, but none of them held much attraction for me after a few weeks.\n\nI'd remained in South America now for over three years, not returning to the States but for a few weeks at a time. Even my parents had come down to visit me so they could see me more than once year. The Amazon was a good place to hide, but not a good place to forget. At least it wasn't now--maybe I would have to move on. Of course, if Bridget didn't take another of our tours my problem would be solved.\n\n\"Okay. Everyone get a good night's sleep. We have an early start tomorrow as we'll take the trail into the jungle for a few specialty species. It will be a low species count, but we will see some of the rarer hard to find species.\"\n\nI was walking back to my quarters when I heard Andy call my name.\n\n\"Hey! How did it go?\"\n\n\"You mean how did the day go with Bridget on board?\"\n\n\"Man, I'm sorry. I just couldn't handle her again. She seems to find a way to make a fuss.\"\n\n\"I survived. You know she really has good eyes. She spotted almost every bird I did on the boat tour. I didn't expect that.\"\n\n\"She does alright, maybe she was showing off for you. She doesn't say much to me, she just looks at me all the time. I'd look back if it weren't for the fact I'm taken. I don't want to encourage her interest if that's what it is.\"\n\n\"Why would she show off for me, she hardly said a nice thing to me the whole day? She was pretty much a pain in the ass.\"\n\n\"Well, she is that, I have to agree. An attractive pain in the ass, but still...\"\n\n\"So, you want another shot at her tomorrow?\" I asked, hoping the answer would be yes.\n\n\"No. At least give me another day. Maybe I'll be up to it by then. Like you said, you survived. It's not like...\"\n\nI gave Andy a sharp look, but said nothing.\n\nAndy knew he had put his foot in it and started to walk away chagrined. \"Look, I'm sorry. I didn't mean to...\"\n\n\"I know you didn't. It's fine. I just need to get over it is all. Have a good night, give Pam my best.\"\n\nI decided to walk to the 50-meter tall observation tower. It seldom had anyone on it during dinner and an hour or so afterward. The tower offered an expansive view of the river and the jungle where guests could watch flocks of birds moving over the canopy, or open water. I loved the view, and most of the time the solitude it offered at this of day. Away from people, a place to contemplate, and sometimes to forget. I was sorry I had been so abrasive with Andy, he had tried to steer me away from Lisa saying she was too much a party girl. I should have listened.",
        "Upon reaching the top I scanned the canopy and smiled as I saw a troop of Howler monkeys working over a tall fig in the distance, their calls rough and raucous against the silence, fading in and out as the breeze blew. Then a large flock of parrots flashed their bright colors calling loudly as if their bright plumage where not enough to draw attention.\n\nThen I felt a vibration, someone was walking up the steps of the tower below me. When I looked down the person had stopped at the middle level and stood with binoculars scanning the trees. I wondered if the person would climb the rest of the way to stand with me at the top, but after a few minutes the person turned and starting walking down. I watched as the person disappeared down the path towards the lodge. I was alone again and now wished I weren't wondering who it had been--it was a woman based upon the stride.\n\nHalf an hour later it was time to return to my quarters to begin preparations for the next day. I knew the trail system now as well as I knew my own backyard and neighborhood as I grew up. It had tricky spots at the junctions that often fooled people the first time they set foot on them. The trail map was vague and some of the signage had gone missing lately, or was faded and in need of replacement.\n\nI was passing the guest lodge and saw Bridget with two of the men she had been sitting with at dinner. One of them had continued on and entered his room while Bridget had followed the other man to another guest cabin. I guess it wasn't as tough on them when they weren't responsible for her safety and welfare. I would have to deal with her again the next day and that was more than soon enough.\n\nAfterward I continued on to my room and gathered my notebook and backpack after taking half an hour to complete my notes for the day on my laptop. Keeping accurate species lists helped me to keep on top of where and when I saw each species. That was one reason I thought I was respected for my expertise.\n\nIt was about half an hour before dark when I left my room, large flashlight in hand after donning my backpack and binoculars. The binoculars wouldn't get much use as I was out to identify those species that became active at dusk--the species many other guides didn't spend a great deal of time on, but listers craved for their lists. Twenty minutes later the forest had grown dark on the main trail and the first tinamous had started to call in the distance, a Greater, then a short while later another species, the Variegated gave a series of calls not far away. Soon after an owl, then a nightjar called as it flew overhead in the gathering dusk. Darkness came quickly at this latitude and the jungle became a different place.\n\nI hadn't turned on my flashlight, instead I allowed my eyes to adjust to the darkness. By standing still, with no breeze, the night air felt even more humid. The sound of bats as they began their feeding flights were detectable as they left their roosts in the trees. I stood alone in the dark as tiny flecks of light began to appear amid the trees and shrubs--the bioluminescent light show had begun as insects began moving about blinking on and off.\n\nBridget\n\nI was sipping wine with Brian as I sat in his room. We had compared notes on what we had seen during the day. I knew Brian had been with Andy earlier in the day as he had from the start of the tour.\n\n\"Why did you switch to another group? I thought you liked Andy,\" he asked.\n\n\"I do, but I was told I was with Dick today because Andy's group was completely full. I hope I can be with Andy tomorrow.\"\n\nBrian smiled, \"You know Theo and I missed you. You have good eyes, not to mention a few other things.\"\n\n\"Thanks. This is my third tour here and I've become familiar with quite of few of the most common species. Andy is good, as is Carl. I've learned a lot from them.\"\n\n\"What about Dick? I've been told he's pretty good. I've not been in his group yet. Should I try to avoid him?\"\n\nI fidgeted uncomfortably wondering how I was going to respond.\n\n\"He's okay I guess. I've only been with him this one time and he seemed to have something against me. Maybe he was just having a bad day. He seems to know his birds as far as I can see. It's his people skills that needs improvement.\"\n\n\"Hmmm, I'll keep that in mind. Do you want another glass of wine?\"\n\nI was feeling a slight buzz and feeling pretty mellow already. \"Sure, one more won't hurt. Then I've got to get going to bed.\"\n\n\"Okay, one more coming up. You could stay the night if you wanted.\"\n\nI gave him a shy smile. He's attractive and I have condoms on me. Damn, we have a really early start in the morning and I'm already tired. He should have asked right after dinner.\n\n\"I don't think so. Maybe later this week.\" I watched as a smile spread across his face.\n\n\"No hurry. Just thought I'd ask. You're very pretty and we enjoy the same things. I'd like to add to the list of what we might enjoy on this tour.\"\n\nShe laughed, \"You know that's a really crappy pickup line.\"\n\nHe leaned over and gave me a kiss on the cheek, \"It's only crappy if it didn't work.\"\n\nI smiled a wicked little smile, \"I think it's good for part of a night.\"\n\nHalf an hour later I slipped beneath the covers in my own bed and watched the fan whirl above me, then I heard the tinamous call from outside, Greater, Lesser, and Variegated. That was one nice feature of these guest rooms, the screened in eaves allowed not only for air flow, but for natural sounds to sneak in too. I got up, turned off the light, and wondered why Dick was alone on top of the observation tower. Damn I wanted to see what was flying around. Why did he have to be there? The wine felt warm in my stomach as I drifted off to sleep.\n\nThe next morning I joined the group met for breakfast and was joined by Brian after a minute. I joined the other members in lively conversation until the group leaders stood and begin the morning orientation. I found myself included in Dick's group again and decided, with Brian's encouragement to see if I could switch to Andy's group.\n\n\"Andy, I want to be in your group again. I don't want to be with Dick.\"\n\n\"Sorry, Bridget I'm full up, maybe in another day or two. You could always go with Carl, he may have room, though when we went over the schedule it worked out as we presented this morning. You could always see if someone else would switch places with you.\"\n\n\"That would mean I would duplicate locations, I don't want to do that. I don't want to be a pain, but it doesn't seem fair. I read over the schedule and put down what I wanted.\"\n\nAndy looked at me with a sympathetic expression, \"Sorry, we made the best assignments we could.\"\n\nYou don't want to be a pain in the ass, but it seems to come naturally.\n\nI stomped off to my room to get ready. As I was walking out I saw Brian talking it up with two of the other women in the group and it looked to me as if they were very friendly. Men! When I arrived at my room I picked up my sketch pad and pencils and walked outside to do some sketches before the group left in fifteen minutes. Before I realized it the fifteen minutes had passed and I had to snatch my backpack and binoculars and run to the trailhead on the other side of the complex. I arrived just in time to hear Dick's final words as I stood panting to catch my breath. I saw the expression on Dick's face. Another score Bridget, or was that a demerit?\n\n\"Okay folks. All of us are here now so let's get going. Remember, when I stop and use the laser pointer you need to stop and remain silent and move slowly. The first few people should get a good look and then slowly move to the rear of the line so others can move up. The birds don't always stay still long enough for everyone to get a good look, but this is the best way we have found for most people to get a look.\"\n\nDick\n\nI started out with the group in tow after making sure Bridget got into line.\n\nI doubt she realized I stretched out my remarks to wait for her. I don't need her bitching about missing the trip.\n\nBridget\n\nThings were going well from my perspective as we were finding some really cool birds I hadn't seen before. Then I felt my bladder sending out a message I didn't have much time. I slowly fell behind the group until they were far enough ahead that I could step off the trail and into the thick vegetation. I pulled my shorts and panties down and felt a leaf brush lightly against my left cheek. Finished, I quickly returned to the group hoping I hadn't missed anything. No one seemed have missed me and I felt a sense of relief. A few minutes later the skin started to burn on my butt cheek. I wanted to touch it but there were too many people around. The next two hours were pure agony as the stinging, burning sensation seemed to spread and grow in intensity.\n\nWhen we got within sight of the lodge, the group started to break up. I had remained the last in line as I was walking gingerly. Dick waited as the others filed past and looked at me. It was then he saw the pained expression on my face and how I walked with a weird gait.\n\n\"Why didn't you tell me your foot was hurting? I have wraps you could put on the blister. It happens on these longer trips,\" he offered.\n\nI couldn't hear his thoughts. Not often, but it does happen.\n\n\"It's not my foot,\" I replied irritably.\n\n\"Well, if it's not your foot, arms, or legs where is it?\"\n\nI felt my face go beet red. Even her tanned face couldn't conceal the color change. \"I had to step off the trail,\" as I looked down at my feet while my body twitched.\n\nHe glared at me, \"Where exactly?\"\n\n\"I had to pee.\"\n\n\"Did you clear off a space with your foot so no plant touched you?\"\n\nI don't believe this. I know she didn't.\n\n\"I tried.\" I replied meekly knowing I had to go so badly I didn't have time to do a good job.\n\n\"Come on, let's get you to the medical office. How badly does it itch?\"\n\n\"It doesn't itch as much as it burns.\"\n\n\"How long ago did this happen?\"\n\n\"Over two hours ago I guess.\"\n\nI saw the expression on his face grow annoyed and I think concerned. He didn't say anything more to me as he pulled his phone out, found the number, and touched the screen.\n\n\"I need a four-wheeler to the trailhead for a medical emergency. We have a bad case of dermatitis.\"\n\nThe voice on the phone asked how extensive and where. He looked at me as he answered, \"On her ass. Just get here as it's difficult for her to walk.\"\n\nDick\n\nI put the phone into my pocket and looked at her. \"I would normally look at it to confirm what I think caused it. In this case, I'm not going to as the nurse will be able to tell how bad it is any way. I suspect it's a plant from the genus Urtica because it stings and burns like hell. Did it start within a few minutes after you...ugh...peed?\"\n\n\"Yes. I'm sorry.\"\n\n\"If you had arrived on time you would have heard my instructions regarding going off the path. This is probably going to lay you up for at least a day, maybe two. It depends on how sensitive you are to the toxin and how much area is affected.\" Stupid ass woman. How in the world am I going to explain this?\n\nChapter 3 What Could Possibly Happen Now\n\nDick\n\nAfter the four-wheeler arrived I had Bridget go onto the rear bench seat where she would be most comfortable. It took only a few minutes before we arrived at the small dispensary where the nurse was waiting. She took Bridget into the examination room while I pulled out the accident report form and starting filling it out.\n\nI wasn't happy in the least. By covering for her late arrival I hadn't ensured she had received all of the safety information that could have prevented the episode. That way, it would have been entirely her fault absolving the tour company of blame. I filled out the form in full revealing she hadn't received all of the information. There was no use in blaming her for my mistake even though I could be fired as a consequence. Life can be a bitch, but then I already knew that.\n\nI waited until Bridget came out looking...well...I don't know...pained. She met my gaze and then quickly turned her eyes away as I looked at the nurse, \"Well, what's the verdict?\"\n\n\"No major physical exertion for at least a full day. Two if the swelling doesn't go down. If it blisters and gets infected it will be more than that. So, she should stay put as much as possible.\"\n\n\"Urtica?\"\n\n\"Looks like it, though it could be a few other things. The topical medication I gave her should take care of most of the itching and burning sensation. Keeping the area clean so it doesn't get infected is very important. She's been told what she needs to do.\"\n\nYeah, a lot of good that will do.\n\nI nodded my head in confirmation and thanked Carlita. Bridget was like a walking disaster zone. It was about half an hour before lunch and it seemed as if she were still my responsibility.\n\nHow in the hell had she survived two previous tours? The instructions were pretty much the same for all of them--if you don't know what it is, don't touch it, and stay on the trail. If you don't know, ask your guide.\n\nStill, when I looked at her I couldn't help but feel some pity for her. I'd inadvertently gotten into nettles myself, though my reaction lasted but a few minutes and faded away. I had hoped as much for her but after learning she felt the burning sensation after more than an hour knew it wasn't a good sign.\n\n\"Do you feel good enough to walk to your room, or shall I carry you on my back?\" I offered trying to interject some humor into the situation.\n\nShe looked at me, \"You're pathetic if that's the best you can do to humor me.\"\n\nI felt properly chastised, \"Sorry, I admit it was pretty lame. Do you want me to take you to your room in the four-wheeler and then to lunch?\"\n\nDamn, Dick. Why did you do that? You should have offered to take her to the lodge dining room and let her wait so you can escape as soon as the others arrive.\n\n\"Take me back to my room first. I should change clothes and wash the insect repellent off before I eat.\"\n\nShe gingerly got into the front seat as I walked around to get behind the wheel. It was a short, silent ride and I was unsure of what to offer as she got out. Should I wait outside, or come back to get her? She got out slowly, easing herself off the seat where she had been leaning to one side. She looked at me after getting out, her blue eyes framed by her dirty blonde hair now that she had removed the hair band forming her ponytail.\n\nDamn, she looked cute as hell that way.\n\n\"Could you wait for me?\" she asked cautiously.\n\n\"I could be back in about twenty minutes.\" I offered.\n\n\"I shouldn't be but about ten minutes. It doesn't make much sense for you to leave and then come right back. I'm sorry for making such a mess of things. You can wait on the sofa inside out of the sun.\"\n\nDamn, was that an apology? Almost sounded like one. I thought to himself.\n\nI felt badly as I was sure the ointment hadn't taken all of the irritation away and remembered the one time I had somehow gotten poison ivy on my hands and later taken a pee not knowing it. Having a red itchy penis for the better part of a week wasn't a whole lot of fun. My girlfriend at the time wasn't particularly pleased either. I had learned a very important lesson and now I guess Bridget had too. I laughed to myself--my girlfriend was so horny after a week she almost attacked me when I walked into her apartment after knowing I was clear.\n\n\"Fine, I guess it makes sense,\" as she opened the door to her room.\n\nI sat down on the sofa after moving a large pad of paper and notebook out of the way as she disappeared into the bedroom. These rooms were twice the size of my quarters and well furnished. Not that I was complaining, my quarters met my needs just fine. I settled back and glanced at the notebook that lay open. I turned it text right side up and saw it was her species list from the day before. It was then I noticed some of her letters were backward, some names misspelled. She had nice penmanship as she wrote in blocky upper and lower case letters. I had to admit it was better than my own penmanship in the same style.\n\nMy eyes wandered to the large pad of paper, noticing it was a sketch pad with heavier stock paper. I opened the cardboard cover and saw a beautiful pencil sketch of the guest bungalow she was staying in. It was perfectly rendered with enough detail to see she had a good eye in terms of picking out the major elements, the composition was good, and the perspective spot on. I was impressed, in fact, flabbergasted, this girl had talent. I closed the cover as I heard the door of the bedroom open and she walked out walking with a slight hitch in her stride.\n\n\"I'm ready.\"\n\n\"How does it feel?\"\n\n\"It hurts. Like someone is holding a burning hot pad against one cheek, kind of like when your skin gets scraped taking off the topmost layer,\" she replied with a wince.\n\nShe locked the door of her room as I waited in the four-wheeler. Three minutes later we arrived at the main lodge and walked in slowly. Most of the people on the tour were already present, plates filled with food, talking among themselves. No one seemed aware of what had happened and Bridget got into line at the buffet with a few others while I walked to where Andy and Carl were standing.\n\n\"What the hell happened? We heard the call on our phones.\"\n\nI had forgotten the intercom function sent the call to their phones too.\n\n\"Bridget got a rash that needed to be treated.\"\n\n\"A rash? That shouldn't have been enough to call for a pickup,\" Carl suggested.\n\n\"Yeah, a rash on the leg shouldn't have been that bad. Didn't you have some spray in your backpack?\"\n\nI smiled, \"Yes. I had the spray with me, only I didn't know she had the rash until an hour later when we got back to the trailhead. Then when I found out where it was I couldn't treat it anyway.\"\n\nThey gave me quizzical looks.\n\n\"Why couldn't you treat it?\" Andy asked with a wicked smile.\n\n\"Noooo, you have got to be kidding. She didn't?\" Carl whispered.\n\n\"She stepped off the path,\" I offered.\n\n\"You have got to be shitting me. She got a rash on her ass,\" Andy said softly, his smile wider than before.\n\nI simply nodded.\n\n\"How bad?\" Carl grinned.\n\n\"No physical activity that would aggravate the affected area. So, no walking for a day, maybe two according to Carlita.\"\n\n\"Look, she's standing at the counter eating. She can't even sit down,\" Carl said looking in her direction.\n\nI turned my head to look.\n\nDamn. It must really hurt even with the medication. Maybe I should take her back to get an injection.\n\nThe schedule for the next day didn't include any river trips, only a van ride and hiking. There didn't seem to be anything she would be comfortable doing after the three of us discussed options. She was going to have to sit out at least the next day. I was relieved in a way as I wouldn't have to deal with her.\n\nI watched as Brian got up and walked over to talk with her. Maybe he could take her mind off her...aaahh....problem for a while. It wasn't hard to see Brian was on the prowl as he had been talking up a few of the other unmarried women too. That at least, was not my problem.\n\nI walked over to the buffet, filled a plate, poured a large glass of pineapple juice, and walked to a table to sit down. I had to give the post trip review in an hour and wondered if Bridget would attend or not. I expected she wouldn't want to under the circumstances.\n\nToo bad, but it's her own damned fault. Why would she think the instructions would change from one year to another? I wondered if she had a UTI?\n\nBridget\n\nI watched as Dick walked over to the buffet after talking with Andy and Carl. They glanced towards me once or twice and I wondered if Andy was asking if the schedule would allow me to join his group again. Now, I wondered if I really wanted to, not that I thought Dick was nicer. I could tell he was irritated with me and Andy hadn't ever been. The truth was, he really was skilled in finding more birds, mammals, and reptiles than the other guides. It seemed to me I could be treated nicely, or I could have what I came for with not so nice. I wanted birds for my list and it was less than two weeks, I could handle him for that long.",
        "I had decided Dick's general knowledge of plants and ecology seemed more complete than the others too. I was impressed he didn't seem to mind admitting he didn't know what something was. There were times when Andy had answered a question or made an ID and been wrong. He chose to fake it rather than admit he wasn't sure, or didn't know. And those were only the times I knew enough myself to know he wasn't up to snuff. I guess I knew who I would try to stay with.\n\nNasty ass Dick.\n\nBrian walked towards me with a smile and I knew he would ask if I wanted to do something that evening. Now, with half my behind on fire I had no interest in allowing a man to hold me close as we got to know one another. I was already embarrassed enough and only Dick knew what happened. I would just have to put Brian off for a day, maybe two. To be truthful, I would have been fine if he gave me oral, now even that seemed inadvisable as I wouldn't be able to lay down without pain to enjoy it. Of course, I could give him oral and not have to sit or lay down. That would probably lead to more questions than I wanted and decided against it.\n\n\"Bridget are you up to a glass of wine tonight?\"\n\n\"Sorry, not tonight. After the trip review I think I'm just going to go to sleep for a while as it's been a long morning, I replied evenly.\n\n\"The wine would relax you and we could...well...just relax together.\"\n\nI chuckled, \"And what exactly does that mean?\"\n\nHe looked around to see if anyone were standing close, \"Just a little kissing, maybe you could lose your shirt and bra. You know, so you would feel...aaahh...more relaxed.\"\n\n\"That sounds good, but really, not tonight since I'm tired,\" smiling as I touched his arm gently, my butt burning.\n\nWe talked for a few minutes before he walked off. The guides announced where their groups were going to meet for the post trip reviews a few seconds later. I slowly ambled over to the far side of the room where Dick was standing as the others started taking their seats. I wasn't happy as I remembered I hadn't brought my notebook with me so I could double-check my species list. I would have to remember as much as I could. I found a spot and stood behind the group not sitting down as Dick read off the species list and answered questions.\n\nBy the time he finished I realized I had missed over a dozen difficult to find species because of the itching and burning sensation that had distracted me. When he offered me a ride back to my room I felt pretty bummed, but didn't tell him. He bade me goodbye and I was alone in my room feeling as if I had really screwed up this time.\n\nI took off my clothes and lay down on my bed face down, my forehead resting on my arms, eyes closed. The breeze from the ceiling fan felt good on my exposed tush. Somewhere along the line I fell asleep, a vision of a man standing at the head of a boat, his physique plain to see as my gaze went up his exposed legs where they disappeared into...\n\nI awoke and reminded myself dreams shouldn't be taken literally. Just because saw a specific man in my dreams doing something to md didn't mean wanted him to. Still, it was disconcerting as...well...he was mean, why would I want him to touch me that way?\n\nI got up from bed and walked into the bathroom to look in the mirror. I turned to look at my backside and saw most of my cheek was rosy red. At least it didn't appear blistered, or that the redness had spread farther. I wasn't tired any longer and knew it was going to be a boring afternoon unless I found a way to entertain myself. I decided I could sketch standing up or while bending over the porch railing.\n\nI decided on a blouse and short skirt to wear so I could go out onto the balcony at the back of the bungalow facing the jungle. I decided not to put panties on as the skirt would allow more air to reach my bare skin. That way I wouldn't soil another pair of panties by absorbing the ointment like my other pair had. I retrieved my sketch pad and pencils and went onto the balcony to stand next to the tree branch nearest the railing.\n\nI sketched a branch with several leaves and then noticed a large scarab beetle on a twig. It was huge, just sitting there begging to be immortalized in a drawing. Before I knew it the hours had passed and I heard the phone ring. I made it to the phone as quickly as I could, which wasn't all that fast. I picked up and heard a male voice.\n\n\"Bridget, this is Dick. Will you be ready to go to dinner or would you prefer I bring something to you so you can eat in your room? Your choice.\"\n\nThe mention of food immediately sent my mind back to what I was feeling--wonderful, I was hungry and my butt was still hurting. I decided staying put was best as I wouldn't have to worry about someone noticing and ask why I was walking funny.\n\n\"I suppose I should eat in my room. How long before you expect to be here?\"\n\n\"About ten minutes I guess. I'm at the lodge now. Anything in particular you want?\"\n\n\"No. Not really, I'm pretty flexible. Fresh fruit, black beans and rice, and whatever they have in the way of a meat dish would be fine. Oh, and mango or pineapple juice would be good too.\"\n\n\"Okay. Be there in a while.\"\n\nI walked back to close the balcony door and came back into the living area to put my sketch pad down. Five minutes later I heard a four-wheeler pull up outside, then a soft knock on the door.\n\n\"Come in, it's open.\"\n\nThe door opened and Dick stood there with a large Styrofoam carton and a large plastic cup balanced on top, one hand on the door knob. The expression on his face showed surprise as if he had seen a ghost or something. The smile he had been wearing when he stepped in disappeared.\n\n\"Here, I'll leave this on the table for you. Let me know if you need anything else. Call the lodge if you need to get in touch with me.\"\n\nHe disappeared in mere seconds. What the hell! I had been alone all afternoon, he could have stayed to talk for a few minutes. I heard the four-wheeler start and he was gone.\n\nDamn him! He really doesn't like me.\n\nI finished eating while standing at the kitchen counter. At least the food was good and warm. What was it about him anyway? I shouldn't even care what he thought of me.\n\nAfter all, he was being paid to work for me. Why should I care?\n\nChapter 4 Birding Desire\n\nBridget\n\nI awoke at about three in the morning, my butt with an intense burning sensation. I was amazed I couldn't see it glowing red in the dark as it certainly felt like it was on fire. I walked into the bathroom and applied another layer of ointment. After a few minutes the burning sensation subsided as I lay on my stomach feeling as if I hadn't slept at all. I heard an owl call, then a tinamou, then I must have fallen asleep again. When I opened my eyes the clock read 6:02. I felt I hadn't slept a wink and closed my eyes feeling a milder burning sensation than before. It seemed to be getting better until I went to get up and found I had raw nerves yelling loudly I shouldn't.\n\nDick\n\nI lay in bed and wiped the sleep from my eyes and sat up remembering events from the day before. To say I was surprised when I opened the door to deliver Bridget's dinner was an understatement. The fact it didn't seem to faze her in the least was perhaps what surprised me most as she stood looking at me.\n\nAn image of Bridget wearing a blouse buttoned only at the very bottom, her breasts mostly exposed came into his mind. She was barefoot and her skirt barely covered anything. I sighed, damn those legs looked so fine going up under her blouse. I knew instantly I was in deep shit. My autonomic nervous system had begun responding immediately. There was no way I was going to stand there and embarrass myself.\n\n\"What was with this woman?\" I muttered to myself as I dressed.\n\nHow in the hell did I wind up being this responsible for her? Now I had to get her to breakfast as she had called the lodge requesting pick her up. Maybe the medication was working well enough she wouldn't need to be babied beyond lunch today. I had a trip in the morning and again in the afternoon, a full schedule. No wonder they had me keep the four-wheeler overnight. No one else was going to go near her, she was all mine.\n\nShit, shit, shit! Why me?\n\nI arrived outside her room not wanting to knock on her door. The image of her standing in front of me, with those beautiful breasts and legs flashed through my mind.\n\nDamn, they shouldn't make women who look that good.\n\nI was just about to get out and walk to her door when she stepped outside. This time fully dressed, her hair in a ponytail, walking stiffly. It obviously still bothered her to walk. I didn't know if I should even greet her with a good morning or not. It obviously wasn't as she looked like she hadn't gotten a lot of sleep. That would surely put her in a grand mood so I decided to keep it simple.\n\n\"Ready?\"\n\n\"Yes.\"\n\nIt was the longest three minute drive of my life, at least it seemed that way. She sat leaning to one side and slowly got out and started inside the lodge after I stopped. I pulled the four-wheeler around to the side of the building and walked in a minute later. Several women soon joined her after a minute at the buffet. I saw something approaching a smile appear on her face as she greeted them--I certainly hadn't gotten one.\n\nAfter she sat down with the ladies I could tell she was trying to tough it out by sitting on the bench seat with as much of her rear sticking out from the seat as possible. I got my food and sat down at another table on the far side of the room. What a great start to my day. I saw her look at me and then glance away.\n\nWhy in the hell was I looking her way in the first place?\n\nThe rest of my morning went well after I dropped her off. Again, we didn't say much to each other and I reminded her I would be back to take her to lunch. She nodded her understanding and went inside as I went to drop the four-wheeler off. My afternoon tour went well with just a brief shower that hardly hit the rainforest floor. The humidity was higher afterward but no one complained and only one older gentleman needed additional insect repellent. After getting everyone back in time for dinner I went to pick Bridget up. This time she seemed in a better mood, at least she looked rested. Perhaps she was able to take a few long naps to make up for her lost sleep. She still moved slowly, but the fact she felt comfortable enough to go to dinner indicated the irritation was decreasing.\n\nI wasn't going out of my way to be mean to her, but I needed to keep a professional distance. I had gotten far too close to Lisa and that had turned out to be a mistake. I didn't want to travel down that road again, though to be honest Bridget was a much different woman. Both in terms of personality and physical appearance--that was all but her eyes.\n\nI couldn't explain it to myself, but Bridget was...I...don't know...an intriguing pain in the ass. I was certain she didn't mean to be rude or mean, or even inept. It was more as if she lacked confidence in herself and made up for it by being contrary. Maybe I had her pegged wrong, but she was trouble for me nevertheless.\n\n\"So, shall I pick you up in the morning for breakfast, or do you want to try and get there on your own?\"\n\n\"Look, I know you don't especially like me. And I know this puts you out having to babysit me. I think I'll be able to start moving on my own tomorrow as the swelling should go down overnight. So, unless I call and leave a message for you to pick me up don't come.\"\n\nHer facial expression was firm and I could see a hint of pain in it.\n\n\"I don't dislike you. I don't like the things you get yourself into, but that doesn't make you a bad person in my book. I have a responsibility to keep you safe and to show you what you came here to see. I hope you enjoy it at the same time, but I can't guarantee that.\"\n\nShe sat silent, looking down at her boots.\n\n\"I'm sorry I forgot how I was dressed when you dropped my dinner off yesterday. I didn't understand why you left so quickly until this morning. I thought you hated me,\" her voice soft, sullen.\n\nI smiled, \"If it weren't for the fact I'm working and you're a customer you might have gotten a different response.\"\n\nShe looked up with a grin, \"You didn't mind seeing boobies in the jungle did you?\"\n\nI laughed, \"No. I have to admit I didn't.\"\n\n\"Pick me up in the morning for breakfast. I have to go in and put more ointment on as it's starting to itch.\"\n\n\"I thought you said...\"\n\n\"I changed my mind. Women have the right to do that you know.\"\n\nI watched as she walked into her room and closed the door behind her.\n\nShit!\n\nBridget\n\nI locked the door and walked into the bathroom with a smile on my face. I was so embarrassed last night after I ate dinner and went to wash up. When I looked in the mirror my blouse stood wide open, my breasts in full view. Oh my god! I remembered thinking. Now, as I thought about it I wasn't so sure my distraction with the burning sensation hadn't been something of a good thing. The thought seemed completely wrong and I pushed it away thinking I was losing it.\n\nI undressed and pulled the tube of cortisone out and started to apply it. The burning sensation seemed to have faded over the course of the morning. Now, I had the urge scratch the itch that had replaced it. Not something I wanted to do in public and I resigned myself to another day of self-isolation. At least I could sit down now and I would probably be able to sleep better too. The cortisone started taking effect about ten minutes later and I elected to put on a pair of panties and go over the plates in my field guide again.\n\nThe women at lunch had shared a tidbit with me. Brian was making advances on all of the younger single women on the tour. I wasn't special in that respect, so it was disappointing in a way. At least I knew what I was dealing with. Not that it was a big a deal really, what would you expect to get while on a tour with a guy you would spent a week, or two with? I realized if I wanted to get laid it wouldn't take much encouragement--actually none. It was at times like this I liked being a woman--the pursued rather than the pursuer.\n\nDick had left a printed copy of the trip summary with me for the jungle walk where I had gotten into the stinging nettles. I compared it with my field notes and found I had missed 13 species on the list. I was really bummed as they really were hard to find species. I decided then I would retrace the trail to find them myself later in the day. I looked at the schedule for the week and saw all of the guides had two trips the next day to other locations. The trail would be all mine so I could scratch myself if I needed to.\n\nI awoke the next morning having only gotten up once to apply ointment feeling refreshed. There was itching for sure, but it was far better than the burning sensation of the previous few days. Dick picked me up on time. Somehow he seemed...well...nicer than before, though maybe I was just giving him the benefit of the doubt for the first time.\n\n\"Hi, did you sleep well last night?\" he asked in a friendly voice.\n\nWell, this is a nice change.\n\n\"Yes, I actually did. The rash is healing and I was able to sleep almost all night.\"\n\n\"Good, it looks like you're walking better. So, tomorrow you'll be back to full strength.\"\n\n\"Yes, I think so. I'll do a test run this afternoon to see how things go.\"\n\n\"Okay. Just don't overdo it.\"\n\nProbably just being his protective guide self. Okay I guess.\n\nWe walked into the lodge together and I went straight to the buffet and started to fill a plate. It wasn't but a minute later when Brian walked up with a broad smile.\n\n\"I've hardly seen hide nor hair of you the past two days. Are you feeling alright?\"\n\n\"Just a little touch of something. I should be fine by tomorrow.\"\n\nHe smiled and whispered, \"I understand, female problems.\"\n\nI decided to ignore the comments implications, though it did serve to push me to make a decision. He wasn't getting any from me unless I got really needy.\n\n\"Something like that,\" I smiled.\n\nHe could have scored a few points if he had joined me for breakfast but he went over to sit with another woman. I sighed, yeah, I had better get really horny by tomorrow if he were to have a chance. I ate and visited with a few others as I felt a strong itch come on making me squirm. I was sure someone was going to ask if I had ants in my pants--no one did. I waited until I saw Dick take his dishes to the drop-off and followed suit so he could take me back. He had been sitting with Andy and a few older birders, including another woman I had talked to the day before. Dick dropped me off and he bade me farewell saying he hoped I could find something to myself occupied for the rest of the day. It seemed to me I felt better about him now than I had before.\n\nI spent the day at the edge of the lodge complex sketching boats at the dock, the river and exposed rocks and woody debris near the shoreline and some plants with intricate leaves. I loved the pattern of the venation on the leaves and the different shaped leaves as they overlapped one another. By the time lunch rolled around my need to scratch had diminished considerably. My ordeal was almost over and I was determined not to get into anything that would draw attention to myself.\n\nAfter lunch I did a little more sketching and then gathered my backpack for walking the trail to find the birds I had missed three days before. I packed plenty of water, a light snack, and a folded plastic poncho in case it rained. Since I would be under the canopy I put on my short-sleeved shirt and shorts along with my lightweight socks and waterproof hikers. I checked the trail map again. It still looked a little confusing, but I was sure I would remember the route once I was on it.\n\nI left a note on the door handle of my room telling where I was going and the time I left. I itched a little, but I felt good and was tired so sedentary. I set a slow pace and fifteen minutes later arrived at the trailhead. I checked my map, I was at 'a', and set out.\n\nI was pleased as my bird list grew. I had time to use my field guide to insure my IDs were good. It was nice not having to jostle for position with other people. I guess I kind of lost track of time and when I got to the first major intersection checked my map again. I looked around and thought the route to the left was the one we took on the field trip. My bird list continued to grow and I saw a few mammals and a couple of lizards. I was pleased not to have encountered any snakes, I wasn't afraid of them, but I didn't know them well enough to feel comfortable.\n\nI heard thunder in the distance, not uncommon, so I continued on. I came to another junction in the trail and veered to the left again. I encountered a few birds that remained hidden in the leaves at mid-story and it took a while to get a good enough look to get a firm ID. I heard the dull sound of something coming from behind me and it took a few minutes before I realized the storm had moved in my direction--what I was hearing was the heavy downpour hitting the leaves in the high canopy. It took a few minutes before scattered large drops penetrated the layers of leaves to reach the ground. I glanced at my watch. What! That can't be right. I looked again, yep, the hands were in the right place.\n\nI grew uneasy as I realized not only had I missed dinner, but the darkness I had attributed to the thunderstorm was actually an indication of how late it was. It would be dark in about half an hour and I was at least two hours at a fast walk from the lodge. I started jogging as fast as I could retracing my path, it was when I reached the first junction on the trail about ten minutes later when I felt bewildered. I took out the map and looked at it, okay go to the right.",
        "The rain had stopped, but the light had grown dim beneath the canopy. I trudged on keeping a quick pace all the while knowing it was going to be close. I stopped at the next junction and looked at the post--it had 'd' on it. I looked at the map as I didn't remember passing a 'd'. It must be 'b', which made me feel better as I was about an hour away now at a slow walk, it would be almost dark when I arrived.\n\nDick\n\nI scanned the room as I put his plate down next to members of my group. It had been a good day with a number of excellent observations, including three bird species I had seen but a few times before. Bridget was nowhere in sight. When I asked if anyone had seen her no one had. If there was one thing I had noticed about her it was she didn't miss a meal. It didn't make sense to me as I was good at picking out patterns of behavior, and this didn't fit ditzy Bridget.\n\nI didn't finish my meal, instead I went to her room to see if she were feeling well. When I read the note on the door I noticed several of the letters reversed and out of place in three of the words.\n\nShe's dyslexic. Crap, if she's using the trail map she's going to be confused as hell. No wonder she's not here. She's out there somewhere.\n\nSeconds after reading the note I took off for my room at a run, picked up my backpack, and shoved a large flashlight into the center pocket as I dashed out the door. I was at the trailhead in about five minutes as another flash of lightning streaked overhead and a few large drops of rain fell. Stooping, I saw a fresh set of boot prints in the damp soil. They had to be Bridget's as there were no other prints present suggesting a group had used this section of trail.\n\nI better get a move on because if it rains hard it will wash any footprints away and it's going to be dark soon.\n\nJogging I covering the section in record time bringing me almost to the first junction, which would be 'b'. Looking down was the same boot track veering off to the left. It was dusk and the crepuscular species where beginning to call, though the rain had held off. I was panting and sweating heavily as I reached 'c'. Tugging my water bottle out I took a long drink as I knelt down, thinking I saw the same footprint. After pulling the flashlight out I placed it at an angle to reveal the raised portions of the print. She had gone left when she should have gone right. I called out several times and didn't get a response.\n\nGoddamned woman. Still a pain in the ass.\n\nI pushed onward with the flashlight beam leading the way. Almost an hour had passed and the jungle was pitch black except for the bioluminescent insects flashing on and off with the greenish glow of fungus on the decaying vegetation made it look surreal.\n\nBridget\n\nI was standing confused in the dark after passing 'c'. There was nowhere to go now as each sound seemed eerie, flashing green pulses seemed to float in the air in a bewildering spectacle of beauty. It was the low growl in the distance that had terrified me most. Jaguars roamed the forest and though I knew they seldom looked at humans as prey it did happen. The high pitched drone of flying mosquitoes looking for a blood meal surrounded me and I was thankful the DEET laced insecticide I had applied was mostly working. Still, I was smacking my bared arms and legs all too often, and those that came into my ear deepened my misery.\n\nI should have told someone where I was going. I should have done more than left a note on the door. This was going to be so simple. Just a quick hike, some good birds, and something to talk about at dinner.\n\nI stooped low so my legs were together to reduce the amount of bare skin I couldn't reach and pulled the sides of my broad-brimmed hat down over my ears. It was when I felt something run across my boots that I felt a surge of fear course though my body. I'd never felt as helpless in my life as there was nowhere to go in the dark. After placing my hand in front of my face I'd not been able to see it. Only the absence of the green flashes of the insects around me showed it was there.\n\nIt began to rain hard as the lightning flickered above and the dull roar of rain upon the leaves increased--it was going to be a very long night. I felt myself fill with despair as it was unlikely anyone would find my note until morning and being alone out here terrified me when something small bit me hard on the leg.\n\nChapter 5 Changes in Latitude and Altitude\n\nDick\n\nTwenty minutes later I called out in the hope of getting a response. The jungle can be a noisy place when water is dripping everywhere. I walked on and stopped again to call several times--again, no response.\n\nDamn it! Where is that woman? I may have to go back and assemble a search party. That should be fun.\n\nThe thing about wearing a plastic poncho in the hot humid tropics was an enigma I realized. You get wet from the inside out rather than the outside in. The only reason I donned a poncho was to keep my books and gear dry rather than myself. The sound of water dripping off leaves and branches echoed around me as I walked up the trail. I hoped Bridget hadn't gone much past the junction at 'c', because if she passed 'd' it was a very long way before the trail would swing around and head back towards the lodge. The section labeled 'd' was actually the cut-off that formed a short loop, with 'd' showing at two points on the map. Since 'd' angled off from this side I hadn't gone as far as 'd' during the tour I led while on the other trail section. In essence, the trail was a balloon with a tail, with a smaller balloon inside the larger.\n\nBridget\n\nI couldn't help it. Tears came to my eyes as I slowly settled down onto the trail. I'd passed 'b' so I was closer if someone were looking for me. I covered myself with my plastic poncho to keep the mosquitoes away, tucking it under me. It muffled the sound of the dripping water by way of the rain pelting the plastic which was louder. An animal hadn't called in quite a while and I figured even they were waiting the rain out. I sat looking into the darkness and noticed a greenish glow all around me, recognizing it as bioluminescence. It gave an otherworldly aspect to my surroundings, but did nothing to improve my disposition.\n\nI closed my eyes and wondered what I should do when I returned home to Spartanburg. My business was doing well. My clients liked my art pieces and graphic designs and had spread the word. Most of them had remained loyal to me for years. My last boyfriend had been harassing me since our breakup and I'd taken the tour a bit earlier than I usually did to get away from him. I still had a decision to make--I could move, or I could try to make the restraining order work.\n\nThe rain was falling steadily when I thought I heard a voice. I pulled the plastic from over my head and listened. It was! It was someone calling my name. I jumped to my feet feeling relieved, \"I'm here! I'm over here!\"\n\nI watched as the beam from a flashlight shone on the trees down the trail, the light swaying back and forth slightly. A male voice called out again.\n\n\"Bridget!\" long and drawn out, then again, \"Bridget.\"\n\n\"Here! I'm over here! I yelled as loudly as I could as rain spattered and splat around me, my heart racing wildly.\n\n\"I hear you. I'm coming,\" the deep voice called back from behind the light as it bobbed ever closer.\n\nAs the light fell upon the trail I walked towards it sobbing in relief. I fell into the person's arms as the rain fell around us. It was when his voice came into my ear I recognized it.\n\n\"I'm sorry Dick. I didn't mean for any of this to happen. I just wanted to see the birds I missed.\"\n\nI felt him pull me a little closer, then his voice, soft, but commanding, \"You stupid ass woman. Next time ask and I'll take you.\"\n\nI looked up half crying, half laughing I was so relieved, \"I will. I won't do anything like this again.\"\n\nHe slowly released me, took my hand, and led me down the trail towards the lodge. It was an hour before we stopped at the door to my room. He hadn't said but a few words the entire time. I knew he had a right to be upset and I couldn't really blame him. I should have done it differently. It was now almost ten o'clock and there was no one around as I looked up at him not knowing what to say.\n\n\"Get some sleep, you're on the boat with me in the morning.\"\n\n\"I know. Thank you for coming to find me.\"\n\nI saw a grin flicker across his face. \"I don't get paid to lose customers in the jungle. Just don't do it again.\"\n\nI locked the door behind me and undressed, my soggy clothes hitting the floor with a dull, wet, thud. There was still a hint of inflammation on my butt, but several bright red welts on my arms and legs were evidence of my latest misadventure. I used the cortisone on the itchy area, then onto the mosquito bites after showering. After turning off the lights I lay on my stomach in the dark, the air from the fan flowing over my mostly naked body. I'd expected him to be furious with me. Smiling, I recalled he called me a 'stupid ass woman', but he hadn't yelled, or said it harshly as if he were mad. It seemed...it...seemed...as if he cared.\n\nDick\n\nI walked into my room, stripped off my soggy clothes after removing my soaked boots and socks, and stepped into the shower. After drying off, I turned off the light and lay in bed beneath the fan naked.\n\nYou're a dumb ass. You're getting too close to her and there is almost a week left. Don't go down that road again.\n\nThe next morning I walked to the lodge to get breakfast early and read over the message from my parents again. I was due to return home and they wanted me to come home after this tour ended rather than staying in Brazil for another two weeks. It wasn't as if I didn't want to return to Asheville, or didn't want to see my parents, I did. But, it was where Lisa had lost her life due to a drug overdose after she returned to Charlotte. It was too close not to feel the pain when I was home. If I had stayed with her rather than returning to work I could have stopped it from happening. I would have been at the party, I would have been able to dissuade her from taking anything, I would have...\n\n\"Dick, are you ready for your trip with your best ever customer?\" Carl offered cheerily.\n\n\"You know you're getting a lot of mileage out of this. Maybe you should take another turn,\" I replied evenly.\n\n\"Nooo thank you. I think if you give it enough time she's going to grow on you.\"\n\nThat's exactly what I'm trying to avoid.\n\n\"You know she's has dyslexia don't you?\"\n\n\"Nope, had no idea. How do you know?\"\n\n\"I've noticed she prints some letters backwards and her spelling is off in her species lists. I didn't actually think about it until yesterday. I think that affects her in ways we don't understand. Maybe that's why see seems a little off to us.\"\n\n\"Could be I guess. We don't see people with disabilities other than age related on these tours. I mean most of our clients are well educated, make good money, and are in reasonably good physical shape. I noticed she sometimes doesn't come up with the right words in conversation, but then she doesn't say much come to think of it.\"\n\n\"She's good at hiding her condition,\" I offered.\n\nI watched as Bridget walked in with another woman and they headed straight to the buffet to get breakfast. Bridget glanced our way, smiled and gave a small wave.\n\nShe didn't look like the stress of the night before had affected her from what I could see.\n\n\"See, she's getting your attention. I'll bet she comes over to sit with us,\" Carl chuckled behind his hand.\n\n\"You don't know that. She could be coming to sit with you,\" I retorted.\n\n\"Dick, that smile and wave wasn't directed at me. Cheer up buddy. Only a week left and she'll be history.\" He smiled and patted me on the shoulder as he left to return his dishes and silverware.\n\nIt's going to be a long week.\n\nThe older woman and Bridget walked over to the table and sat down on either side of me. The older woman spoke first and asked a few questions. Then I heard Bridget's voice.\n\n\"Good morning,\" it wasn't a cheerful good morning, but it didn't seem perfunctory either.\n\n\"Are you alright?\"\n\n\"Yes. Everything is fine this morning. You're not upset with me are you?\"\n\n\"No. No reason to be.\"\n\nShe looked at me with a faint smile, then dug into her scrambled eggs and hash browns. I finished eating and said goodbye telling them I'd see them at the dock.\n\nBridget\n\nHelen looked at me. \"You know he's a pretty good looking man, makes me wish I were twenty years younger. I understand he's from close to where you come from. You're from South Carolina right?\"\n\n\"Yes, Spartanburg, but I didn't know he was the same state as me.\"\n\n\"No honey, he's from near Asheville, North Carolina. I don't know how close that is to where you come from, but it's the same part of the country.\"\n\n\"Asheville is about two hours away I guess. Higher elevation, but it's a nice area.\"\n\nI never would have guessed he was from there. It was close.\n\nI'd checked my email while I was in the lodge and read a message from my parents. They told me my ex had called them again and asked when I was coming home. He just wouldn't leave me alone despite the restraining order. They knew when I would fly back, so I told them to call the police and see what they could do. I really hated that my parents had to deal with him. Even in the Amazon I couldn't entirely get away from him, and it didn't make for a good start to my day.\n\nI was glad the day was productive, adding another twenty-two species to my life list. I took a few photographs with my point and shoot camera so I could work up a few sketches later. For the first time in over three days I was able to sit down without any problem. I was able to get a few good looks during the day at Dick so that helped too as I began to view him differently.\n\nHe hadn't gone out of his way to engage me during the boat trip, but I knew he was trying to avoid being too obvious about his concern for me. It was better than his being upset with me and I tried hard not to be a klutz, or do something ditzy.\n\nThe next few days flew past without any further incidents and I was enjoying myself. I dreaded the thought of what I had to deal with when I got back home. Brian had cozied up to me again and I had come close to accepting an evening glass of wine. I had entertained the idea it would relieve the stress, and if I found myself in bed with him, it wouldn't be a bad outcome. I wasn't sure why I decided against it at the last second, but I did. I was glad I had a good right hand that night as I lay in bed. Not what I really wanted, but it helped.\n\nWe had a social the evening before we departed and we all shared what we had liked best about the tour. There were funny stories and I had a few myself which surprised me in a way. The guides were praised for their expertise and how they handled the tour with seeming ease. There was no indication anyone knew about my brush with the nettles, or my extracurricular birding after dark in the rain. For that I was grateful. Dick had done well by me as had the other guides.\n\nAfter breakfast the next morning those of us leaving for the airport boarded the shuttle van. I was surprised to see Dick get on board with his backpack and a suitcase. He had made no mention of leaving to anyone on the tour. I looked at him as he scanned for a place to sit and when our eyes met they held, my heart raced a little, than sank as the older woman made room for him to sit next to her two rows ahead.\n\nAt the airport we boarded the aircraft after our luggage was loaded and we took off for our major departure point, Manaus International Airport. Dick was seated at the rear of the plane while I was ahead of the wings during the two-hour flight. We deplaned and found we were on the same flight to the States along with several other members of the tour. We talked as we waited to board the flight, though Dick didn't make any special effort to spend time with me. Perhaps he didn't want to give the impression to the others he had singled me out as a single woman--still, I felt disappointed even though I had no reason to be.\n\nThe flight to Miami was almost six hours after a departure from Manaus at noon, then getting through customs took another hour, even with but two carryon bags. The next available flight on the final leg of the trip wasn't until the next day at eleven making an overnight stay in a hotel a necessity. I had lost track of Dick while in customs and didn't see him as I boarded a shuttle for the hotel.\n\nIt was mid-afternoon when we landed at Greenville-Spartanburg International Airport after a delay of the flight while still on the ground in Miami. Several of us from the tour, including Dick, headed to baggage claim, collected our luggage and bade each other goodbye. Dick actually said goodbye to me with a smile as he walked out the door with his cell phone in hand. I planned to take the shuttle to reclaim my car in long-term parking but when I went to cross the street a car pulled up in front of me. My ex-boyfriend came around the car and took me by arm before I realized what was happening.\n\n\"About time we had a talk,\" he said gruffly holding my arm so I couldn't get away.\n\n\"Let go of me!\" I shouted \"I'm not going anywhere with you!\"\n\nHe hissed into my ear as he tightened his grip, \"Shut the fuck up bitch.\"\n\nI wrenched myself away from him, but couldn't break his grip. I looked into his eyes as tears started to form in my eyes. I was desperate. He had threatened me before, but I didn't think he would do this.\n\n\"Let her go!\"\n\nI felt myself being tugged towards the new voice, as I jerked to a stop.\n\n\"Who the hell are you?\" I heard my ex's voice thunder.\n\n\"I'm the guy who's going to kick your ass if you don't let her go.\"\n\nIt was Dick's voice, it had to be.\n\n\"This is none of your goddamned business. Get lost.\"\n\n\"Let her go now, or I'll let that cop stop me from beating the shit out of you,\" Dick replied calmly.\n\nI looked and saw a deputy looking at us from the other entrance. I felt my ex's grip loosen as he stepped away.\n\nHe looked at me with a cold stare, \"This isn't over.\"\n\nI was shaking as I watched his car pull away. Then I felt a hand on my shoulder and turned into Dick's arms. I felt his arms come around me and knew I was safe.\n\n\"Are you okay lady?\" came another male voice from behind me.\n\nWhen I opened my eyes and turned I saw it was the police officer.\n\n\"Yes. I'm fine now. That man in the car who pulled away was my ex-boyfriend. I have a restraining order against him and I don't know how he knew I was coming home. I didn't expect him to be here.\"\n\n\"So, you're okay with this guy? He's not forcing you to do anything?\"\n\n\"No. I mean yes. No, he just helped me. I know him. He's fine,\" I stammered.\n\nI felt Dick lower his arms as I turned to face the officer as he asked, \"You're sure?\"\n\n\"Yes,\" as I reached for Dick's hand.\n\nI watched as the police officer turned and walked away. Then I turned to face Dick as I swiped a tear away from my eye.\n\n\"Thanks.\"\n\nHe stood looking at me not speaking, my hand in his. I didn't want him to let go as...it...as...it told me I was safe.\n\nDick\n\nI could hardly believe my eyes when I saw the guy jump out of the car and run to see Bridget. For a few seconds I thought it was a happy reunion. Then I heard her shout and try to pull away from him. I hesitated at first.\n\nYou don't need to get involved in this. She's not your responsibility anymore. Let that police officer handle it. Shit! He just turned in the opposite direction. She looks terrified. Dammit all.\n\nNow here I was, involved as she stood holding my hand, or was I holding her hand? Hell if I knew at this point.",
        "Dummy, you just can't leave her alone like this now.\n\n\"Bridget, are you taking a cab home, or do you have a car here?\"\n\n\"My car is in long-term parking, I was going to catch the shuttle before...well...you know.\"\n\n\"Okay. I'll go with you to get your car. I doubt he's still around, but it makes sense to be sure. You never said you had a boyfriend.\"\n\nWhat was I thinking? That a good looking woman her age wasn't attached?\n\n\"Ex-boyfriend,\" she replied in a harsh tone.\n\nI listened as she called her parents and explained what had happened. It sounded as if they wanted her to stay with them but she refused. After she hung up she looked at me with a frown.\n\n\"I don't want my parents to have to deal with this mess.\"\n\nI saw a flash of anger, then her face grew taut, muttering half to herself, \"He broke into my apartment and looked at my calendar. That's the only way he could have known I was coming home today and at what time.\"\n\nIt was at that moment I lost my bid to stay clear of her. I had let Lisa down and now couldn't do the same to her. I just couldn't leave her like this.\n\n\"Do you think he'll be waiting for you to come home?\"\n\nThe question brought fear into her eyes as she looked up at me.\n\n\"Oh my god!\" as she covered her face with her hands, \"He would, he definitely would. I can't even go home.\"\n\n\"You can if I go with you,\" I heard myself say.\n\n\"I can't ask you to do that. You have to get home.\"\n\n\"You didn't ask, I offered.\"\n\nWhat the hell was wrong with me? Who was the stupid ass now?\n\nThe shuttle pulled into long-term parking and we got out. She pulled the ticket out of her backpack pocket, it said 'B' on it.\n\n\"Okay, section 'E',\" as she headed in that direction.\n\n\"Bridget, it's section 'B', not 'E'.\"\n\nChapter 6 Tracks to Nowhere\n\nBridget\n\nThe drive to my apartment took about thirty minutes, and when I pulled off the street into the parking lot, Dick asked me stop and let him out. I looked at him with a puzzled expression.\n\n\"Why do you want me to do that?\"\n\n\"What's your apartment number?\"\n\n\"Thirty-six, it's the end unit right over there,\" as I pointed.\n\n\"I'll meet you there. You park where you usually park, take your stuff inside, and lock the door behind you. We may as well know if he's here waiting for you, or not. If he sees me with you he may not come to see you until after I leave. This way you'll know for sure.\"\n\nI looked at Dick with a dubious expression, \"Okay. I'll watch for you from the window.\"\n\nMaybe he was right. I hadn't thought of that. Kevin could just wait until he knew for sure I was alone.\n\nDick\n\nI watched as she drove off and started walking towards her apartment watching as she parked and got out of her Subaru Outback. She pulled her suitcase out and walked to her door. A guy got out of his car and looked both directions as he started to walk towards her. I sped up and gained the sidewalk a few doors down as her ex stepped onto her porch steps.\n\nHe hammered on the door. It wasn't hard to see he wasn't in a good mood. He hammered on the door again and yelled her name. I saw her peek out the window and he saw the same thing, his attention now focused on the window.\n\n\"Bridget open the damn door. We need to talk,\" he yelled.\n\nI stood on the sidewalk behind him waiting to see what he would do next. He was about six-inches taller and about my weight. We were pretty closely matched physically from what I could tell.\n\n\"I don't think she wants to talk to you,\" I said, startling him.\n\nHe turned and glowered, then took a step down onto the sidewalk making himself look big. \"You, what are you doing here? This is no business of yours and I'm not going to tell you again. This is a personal matter and no concern of yours.\"\n\n\"I guess we see things differently. If she wanted to see you she would have opened the door for you. I guess that makes you something of a dumb ass.\"\n\nI could see his anger growing as he clenched his fists. I wanted him mad, as it would work in my favor. But, if he landed a first solid punch I would pay a price. Her ex was trying to bluff me and I was doing the same--typical male behavior I knew.\n\nHer ex took another step closer, his fists still clenched at his sides. \"That stupid bitch isn't your concern. So scram.\"\n\n\"Sorry, she has to get me to the rental car agency. So, I think you can talk with her later.\"\n\n\"Who the fuck are you? Take you to get a rental car? You could have done that at the airport, moron.\"\n\n\"You know, you're right. I should have thought of that. It could have saved me from dealing with an asshole like you.\"\n\nHe charged me and landed a glancing blow right off my left cheek as I ducked away. His momentum carried him past me and I gave him a hard shove sending him off-balance. The guy tried to regain his feet but landed hard on the sidewalk. He got up slowly, angry as hell, rubbing his bruised arm charging again. This time I was ready and ducked low sending his body over mine into the large shrub next to the porch. Her ex clawed his way out of the large bush screaming profanities, his face scratched from the rough bark of the major limbs he had encountered.\n\n\"I better not fucking see you again or I'm going to tear you apart, he growled as he stomped off wiping blood from the scratches on his face. I watched as he got into his car and left. Then I touched the tender spot on my cheek--it hurt like hell. I wasn't sure if I would get a black eye or not, though it didn't seem to hurt that far up and my eye hadn't started to puff up yet. I stepped onto the porch as Bridget opened the door looking frightened and concerned.\n\n\"Dick are you hurt?\"\n\n\"I'll be fine. Probably some bruising is all.\"\n\nLooking around I saw the room had been trashed, with things thrown all over, a lamp smashed on the floor. It didn't take a genius to see her ex had gotten in and taken his anger out on her as best he could. This guy was bad news and I watched as Bridget sat down on the sofa and started to cry. I sat down next to her and waited until she looked up before placing my hand on hers.\n\n\"Are you going to feel safe staying here?\"\n\n\"I don't know, he broke the window on the back door to get in. I'm sure he has my spare key now as I had the locks changed to keep him out. I feel violated. The bastard broke into my home.\"\n\n\"Is there someone you can stay with for a few days? Your parents, or a friend?\"\n\nHer eyes were red and teary as she shook her head.\n\n\"He's already been at my parents' house and I don't want them to have to deal with him again. He knows all of my friends and I'm sure he has called them too while I was gone. I don't want them involved either. I have to decide what to do now. I was thinking of moving before, and now I think I don't have a choice. He obviously isn't concerned with the restraining order, and I've heard enough stories on the news to know the police can't be around all the time. I'll go to a hotel for a while and start looking for someplace else to live.\"\n\nShe looked at me and I saw her expression change, \"I'll get you an ice pack, your face is starting to change colors.\"\n\nWe sat and talked for a while as I pressed the ice pack against my face. It felt good and I could feel the swelling where my face was tender. I had to use the bathroom and when I looked into the mirror I saw a reddish bruise forming over my cheek bone. I grimaced, pleased my jaw wasn't broken.\n\nYeah, swift move dude. You had to play the big guy and protect the girl. Shithead!\n\nI sat back down next to her thinking there might be a better short-term solution--at least for a few nights. She might not care for the idea, but it was the best I could offer.\n\n\"If you want, you can spend a few days at my place. It's nothing fancy to be honest, but you're welcome to stay until you make other arrangements. It doesn't make any sense for you to stay here tonight that's for sure. I don't trust the guy at all from what little I've seen.\"\n\n\"He's always had something of a temper, but his drinking has gotten so bad I couldn't stand it any longer, and when he hit me I told him we were finished. That was six months ago and he's still at it. I need to keep working and he knows it. That's probably the only reason he didn't smash my computer and printers.\"\n\nI glanced over to her office space in the far corner of the room.\n\n\"So you work from home?\"\n\n\"Yes, most of the time. Once in a while I need to see someone face to face.\"\n\n\"Can you fit everything you need into your car right now? I mean enough so you can start work tomorrow if you wanted to?\"\n\n\"Sure, I've done it twice, so I know I can. Why?\"\n\n'There's plenty of space and power at my place for you to set up. That is, if you want to.\"\n\nAre you sure you want to put up with me? I mean...well...given the past two weeks...I...\n\n\"I can manage another few days,\" I grinned, \"I don't have stinging nettles at home.\"\n\n\"You know that really isn't very funny,\" she frowned.\n\n\"So?\"\n\n\"Okay. It won't take but about twenty minutes to put my computer, printer, and plotter into the car. I have plastic bins everything goes in. Once the bins are in I'll get some clothes around so I have something to wear other than what's good in Brazil.\"\n\nAn hour later we were driving north headed towards Asheville. We stopped at a fast food place to get a salad and use the restrooms. I could see Bridget begin to relax a little and wondered if I was an idiot or not. My accommodations were a bit unorthodox, but they would work well enough. I decided I would leave it as a surprise and watch her reaction.\n\nAbout an hour and a half later we pulled off the paved road onto my driveway, a broad gravel road cut into the hillside. I got out, pulling keys out of my pants pocket and unlocked the swinging gate. Bridget pulled ahead and waited as I relocked the gate and got back in. We had traveled about an eighth of a mile and I could tell Bridget was beginning to wonder how much farther it was. When she saw what appeared to be railroad tracks with two rail cars sitting on them as we rounded a shallow curve she asked. \"What are those doing way out here?\"\n\n\"This is where I live. This is home. That's a baggage car and a dormitory/coach. My grandfather worked on this section of the railroad before it was abandoned. He purchased the property knowing the track was on an easement and would revert to the landowner after rail service ended. He purchased the cars as the railroad had no need of them and had them moved here before the rail was taken up.\"\n\nBridget sat spellbound not speaking, the expression on her face blank as she looked at me.\n\nAre these things heated? Is there electricity, water, and internet? Is he nuts?\n\n\"Bridget, are you okay?\"\n\n\"You could have told me,\" she said quietly as she surveyed the huge rail cars through the windshield.\n\n\"Okay, let me show you around. If you don't like what you see I'll take you into town and get you set up in a hotel room.\"\n\nShe got out and followed me to the rail car with a series of windows and climbed the stairs at the end of the car going under an overhanging roof. The cars were painted in a green color that blended into the wooded hillsides, the word 'southern' in gold letters above the windows. She held her breath. I was sure thinking the smell would be old and musty as the door swung open. I turned on the lights and she gasped\n\n\"It's beautiful! Dick, what is this?\"\n\n\"It's a former business car used to transport the big shots of the railroad. My grandfather paid a lot for it and I have invested a lot over the past three years to upgrade its equipment. It has natural gas for heating and cooking, electricity with a backup generator, well water, and internet service via the fiber optic cable that runs along the old right of way.\"\n\nBridget walked into the observation area with its sofa, chair, and small table. She followed my lead and removed her shoes as we walked into the next section. The floor was carpeted, the ceiling and upper walls painted in a cream color that reflected the indirect lighting. This section held a lustrous wooden dining table with six chairs at the far end near a wall, with a corridor leading down one side. There were another sofa and two overstuffed chairs in the room too.\n\n\"Come, I'll show you to your room,\" as I gently ushered her ahead of me.\n\nI stopped at an open door and Bridget stepped inside to find a double bed on one side, a small sofa, a dresser and closet, and another small door leading to a small bathroom. I knew the finishes were fantastic, the bedding soft, luxurious as I watched her run her hand over the fabric.\n\nShe turned to me with a smile, \"You're a very strange man.\"\n\n\"Thank you, I'll take that as a compliment, but you're not the first one to say that,\" as I quickly pushed the memory away.\n\nLisa told me that when she was here. Why am so goddamned strange?\n\nShe placed her hand on my arm, \"It was meant to be a compliment.\"\n\nBridget\n\nThe next door down was another stateroom equipped the same as the one we had just looked at, though I could see his personal items on the small table. The next door proved to be a full-sized bathroom complete with vanity, toilet, and shower. All modern, though with a design that complemented the older interior d\u00e9cor of the car. At the very end of the car was a kitchen with modern stainless steel appliances, including a microwave oven. It was a complete compact home with all the conveniences, comfortable without a doubt.\n\n\"Dick, it's really nice. I wasn't expecting anything like this. But, I don't see a place where I could set up my computer, printer, scanner, and plotter unless I took over the dining room table.\"\n\nHe smiled, 'We're not done yet.\"\n\nWe were standing at the end of the car with a door leading into a dark vestibule. It didn't look very inviting as far as I was concerned. Dick opened the door and I followed him over a metal ramp under some sort of canvas diaphragm that led to another metal door with a window in it. Dick flipped another light switch as a room with large windows along one side came into view. The workmanship of the wood paneled interior was gorgeous. Two large desks faced the windows, shelves running below the bottom of the windows provided ample counter space on top. One desk held a desktop computer and standard office equipment, the other appeared to be unused.\n\nI turned to the floor to ceiling built-in bookcases opposite the windows and perused the titles as I walked the length of the car. There were books on the flora and fauna of South America, on Brazil, Costa Rica, Belize, and the United States. There was a small library of field guides too, anything needed to prepare for doing field work in the tropics seemed to be represented.\n\nHe's married to his work. He has to be to have all of this and still be single.\n\nI looked at the expression on Dick's face and saw his smile. He took obvious pride in what I was seeing and I was about to speak when he asked.\n\n\"So, do you think this will work for you? If not, we should go back into town and get you a room.\n\nI was still looking at the book titles, having a difficult time reading many of them. But, that wasn't what mattered now.\n\nA hotel room or this? He has to be kidding.\n\n\"I want to stay here. I promise not to be a nuisance. I'll cook and clean to help out, and help pay for groceries.\"\n\n\"Good, that's settled. I'll bring in your suitcase and your clothes and you can put them away as I bring in your office stuff. This empty desk is yours so do whatever you need to set your office up. I'll run into town to do some grocery shopping as the refrigerator is empty. If you can think of anything else before I go tell me so I can get it.\"\n\nI walked into the stateroom and sat down on the bed. I felt a tear form and dabbed at my eye.\n\nI can't believe this is happening. He saved me from Kevin twice, now he's giving me a place to stay until I can get a new start. I better not mess things up. Don't do anything stupid girl. Not now.\n\nIt didn't take long to put my clothes away and as I walked back to the baggage car to assemble my work station I felt myself relax. I really didn't know Dick that well and I had been anxious about what I was getting myself into.\n\nAs I set up my computer and added my peripherals I was pleased my decision to use Bluetooth connections was paying off as there were no wires to have to run between components. I looked out the windows at the beautiful view down the narrow valley with its rocky outcrops and rhododendron thickets and thought this would be a wonderful place to call home.\n\nHow much time does Dick actually spend here?\n\nDick\n\nHer only request was for me to pick up a bag of pistachios as she had a craving for them. I was sure she heard the door shut and knew I'd returned from the store. She quickly walked to the dining area to intercept me and took a bag from my arms.\n\n\"Here, let me help you.\"\n\n\"Thanks.\"\n\nChapter 7 Challenges\n\nBridget\n\nI led the way to the kitchen and placed the bag on the counter and started to remove the contents one by one. Most of the items in the bag needed to be placed into the refrigerator and one into the freezer--vanilla-bean ice cream! My favorite with pistachios. I placed the ice cream into the freezer compartment, turned while taking a step and ran smack into Dick's chest. He reached out instinctively to stop my forward momentum but it was just a little too late. I found myself in his embrace, my breasts pushed firmly onto his chest.\n\n\"It's a little tight in here,\" he said quietly not taking his arms from around me.\n\nI felt my body go warm as my heart raced. I felt the urge to press harder against him, not wanting the contact to end quite yet--but I felt him start to pull away.\n\n\"Sorry,\" I muttered and stepped back.\n\nDick\n\nI instantly remembered the feel of her body as we stood in the rain on the jungle trail a week earlier. She had felt so delicate and fragile then--she felt the same now. She wasn't sturdy like Lisa was it seemed to me, this despite the fact Bridget was close to my height. A strange thought entered my mind--she wasn't Lisa. All of a sudden I realized I was looking into her eyes--those tantalizing, blue-gray eyes that had a quality to them I had experienced before, but had pushed away with the pain I felt.\n\nBridget\n\nI felt myself start to melt as I looked into his soft brown eyes. I bit my lower lip, as I looked away, but I couldn't resist, I had to look up again. It was as if there were a force drawing us together despite my previous reservations. The kiss was hardly more than a brush of our lips, but my body exploded into small shivers of excitement and anticipation. It seemed as if I could hardly breathe.\n\n\"Dick...I...I...didn't...I...\"\n\nHis lips met mine firmly, passionately as the room seemed to fade away. The empty paper bag I held in my hand fell away and hit the floor making a sound I couldn't describe, yet it was there, mingled with the whispered sound of his lips on mine. I felt myself being pulled into him, my breasts registering their delight with their deformation. I pushed my lips harder onto his and felt his passion for me expressed with his eagerness to accept them without hesitation. Then, when our lips parted I fell against his shoulder, my arms around him. My body gave an involuntary shiver as his arms left me and I released him.\n\n\"Bridget, I'm sorry...I...if...\"\n\nI pressed my fingers across his mouth, \"Don't be, I needed that more than I thought I did. It's been a long, stressful two days and if there were something I needed it was to be held and kissed. Let's call it my reward to you for the bruise on your cheek,\" as I brushed my fingers across it gently.\n\nWe finished putting the groceries away without another word between us--both of us lost in our own thoughts. I was about to ask what we should do for dinner when I got a hint of something in another bag sitting on the counter.",
        "\"You didn't!\" As I stepped over and opened the bag releasing the wonderful aroma of Chinese cooking trapped inside. It had to be chicken and broccoli, maybe even chicken and cashew nuts. It turned out I was right on both counts.\n\nWe ate ravenously as it was late, the sun setting behind the nearest ridge, the room dim in the soft glow of the interior lights. We finished eating and Dick took our plates and silverware to the dishwasher in the kitchen. When he returned, I was sitting on the sofa eyes closed--I hadn't bothered to turn on the flat screen TV.\n\nDick\n\nShe sat with her eyes closed, the TV off, it seemed to indicate she was ready for bed as I stifled a yawn and sat down next to her. She opened her eyes and looked at me with a smile.\n\n\"From Brazil to North Carolina in two days. I'm beat, how about you?\" she asked.\n\n\"Same. Do you want me to hold you for a while?\"\n\nBridget didn't answer as she moved over and snuggled into me. I closed my arm around her knowing my invitation had been accepted in full. The warm feeling I felt was invigorating and I had to admit more enjoyable than I expected it would be.\n\nShe has baggage, but what did you expect? You have baggage too.\n\nBridget\n\nI closed my eyes and felt his chest rise and fall. My heart was beating just a little faster thinking it had been a long time since had I felt this good. About five minutes later I sat up with a smile I hoped told him I liked him holding me.\n\n\"Sorry, I need to take a shower and go to bed. I can't go any longer. I can't keep my eyes open.\"\n\n\"Go, I'll be right behind you. I'll see you in the morning. Get a good night's sleep.\"\n\nDick\n\nI watched as she disappeared down the corridor amazed that she was with me here of all places.\n\nWhat a day! You didn't see this coming. You're in up to your eyeballs dude and you didn't know it until that kiss. One damn kiss and you're toast.\n\nBridget\n\nI stood beneath the cascading warm water feeling as if my world had turned right-side-up for a change rather than upside-down. I hoped my troubles with Kevin would be at an end as Dick should have been enough to dissuade him to leave me alone. I would call my parents the next day and tell them I was safe, but wouldn't divulge where I was staying until I made plans for where I would move next.\n\nI toweled off, looked into the mirror, and realized my deep tan was confined to my arms and legs in a pattern matching my tropical apparel. I'd never spent much time in a bikini as I knew from my aunt what too much sun exposure did to a person's skin. I never wanted to look like that by the time I reached my forties. Now the white areas spoke of places Dick had only glimpsed, or not seen at all and in my mind I saw him kissing my breasts.\n\nWhat a strange thought to have girl. One kiss and you're thinking of showing him all the goods. Slow down. Two weeks ago you didn't care for him at all and now you're fantasying about him.\n\nI pulled on a fresh pair of panties and my oversized tee-shirt, turned off the light, and got into bed. The bed seemed to pull me in and welcome me--the sheets smooth as satin, the pillow firm, and inviting. I wondered how it was Dick seemed to fit this weird style of housing. As my eyelids grew heavy, I wondered why I felt so comfortable here. Dick was so different from what he appeared to be like while on the tour--he was actually nice. A smile graced my tired face as a memory appeared--the kiss we shared was more than nice, much more. Sleep took me quickly and the dream I remembered as I woke in the morning made me smile. This time he was in the very next room, not just in a fantasy while I lay in a faraway place.\n\nI lay in bed, the sun already up, and I heard small noises outside the door. Dick was already up as when his phone rang he answered on the second ring. I glanced at my watch and groaned--it was almost eight o'clock! Moving quickly, I dressed, opened the door and heard the final few words of his conversation.\n\n\"Yes, I understand. I'll get there as quickly as I can, but it might be a day or two before I can get a flight out.\"\n\nI walked out and sat down at the dining room table as Dick set his phone down with a frown.\n\n\"I must have been very bad in a previous life as I'm sure paying for it now. I'm going to have to leave you here on your own as they need me to replace one of the guides in Belize who was injured in an automobile accident.\"\n\n\"I can get a hotel room.\"\n\n\"Why would you do that? You need to have a place to work and you already have your gear set up here. It doesn't make sense to do that.\"\n\nI couldn't argue with his logic, nor was I really interested in leaving for other reasons I realized.\n\nI wonder if the kiss last night was just a fluke, something we both needed to relieve the stress? Maybe it really didn't mean anything more than that.\n\n\"Are you sure? I could still be a pain in the ass,\" I asked cautiously not knowing if he would like my response.\n\n\"Could be?\" he grinned back at me.\n\n\"You know that's not what a girl would like to hear.\"\n\n\"Let's just say it's a pain I think I can live with. Now, are you comfortable being here on your own, or not?\"\n\n\"Yes, it'll be fine.\"\n\nHe always forces me to make a decision and each time I do I decide to stay with him.\n\n\"Okay, I need to get online to check flight times and get my reservations made. You don't have the passwords for the router and network yet, so I'll get you set up and running after we eat. We should know everything is working before I leave. Does that sound good to you?\"\n\n\"Yes, that makes sense. I'll start making breakfast for us while you get your reservations made. That way we won't waste time in case we find a problem we have to solve.\"\n\nI got up and headed towards the kitchen as Dick came around the table to go to the office in the former baggage car. We almost ran into one another and Dick took me by the shoulders before we collided.\n\nI looked up at him with a smile. \"Sorry, I guess we're both in a hurry.\"\n\nHe smiled as he leaned towards me and gave me a kiss on the cheek, \"You look beautiful this morning by the way.\"\n\nWhat did he just say? I look beautiful! Damn, he did, I know he did. I'm a beautiful pain in the ass. But he's married to his job. He just got home and now he's going off again after a phone call.\n\nWe sat down to eat breakfast together twenty-five minutes later.\n\n\"Okay. My flight is this evening. I'll give you my spare set of keys so you can come and go as you need to. I called my parents and told them I had to leave again and would be back in a week. I told them you were staying here so when they come to put salt into the water softener they won't be shocked to find someone here. That's it in a nutshell.\"\n\n\"Were your parents surprised when you told them a woman was staying here?\"\n\nHe looked at me with a grin, \"Somewhat,\" he replied after hesitating a few seconds.\n\nI wonder what that means? What am I thinking! Of course he's had women here before. Duh! Way to put your foot in it girl. Think before putting your mouth in motion.\n\n\"I'm going to leave to go back to my apartment after we get my office stuff set up. I need to talk with the complex manager to end my lease and get my other stuff put into a storage locker somewhere until I decide where it is I'm going to move to.\"\n\nI saw the expression on his face change.\n\n\"Don't worry. After yesterday I don't think Kevin will show up again. Unless he's had a few drinks, he's not aggressive. I wish I'd known that before is all.\"\n\n\"Well you know him, I don't. I'll have to take your word for it. Just give me your cell number so I have it. You have mine already don't you?\"\n\n\"Yes, don't you remember you gave it to me yesterday before you left to get groceries just in case I thought of something else I needed?\"\n\nAfter getting my computer connected to the network and testing out the internet connection I left for my apartment as Dick was getting his gear around. We shared a hug, but not a kiss before I left, as if each of us were being cautious regarding our relationship. The hug was close and long enough to suggest we were a little bit more than...well...friends. At least it seemed that way to me.\n\nI went over the list of things I needed to do when I got back to my apartment during the two hour drive. When I pulled into my parking space I looked around and didn't see Kevin's car. I walked to the manager's office and explained I was leaving at the end of the month. I also told her the window in the back door had been broken by my ex-boyfriend and needed to be repaired. She told me it would come out of my damage deposit. I felt a flash of anger, but it wasn't the manager's fault I had gotten mixed up with Kevin.\n\nI pulled the storage boxes out I had kept from my last move and proceeded to pack them and placed them in the living room near the front door. It was almost seven when I glanced at my watch, Dick should be waiting for his flight. I would be back to his house by nine if I left now and would catch some fast food before getting on the expressway. That was when the front door opened without a knock--it was Kevin and he was obviously drunk. I cursed myself knowing I had forgotten to lock it. Then my phone rang.\n\n\"You goddamned worthless woman. I figured you'd be back tonight. Ya got another boyfriend just like that didn't ya? Well, the next time he sees ya you're going to look a little different.\"\n\nThe knife he held in his hand started to wave at me as he closed the door behind him. He was obviously drunk as he staggered a bit with his next step. I was terrified as my heart went into my throat and stuck there.\n\nDick\n\nI couldn't explain the strange feeling I felt as I sat in the boarding area. It was a feeling that seemed to grate on my bones. I'd never had a feeling like this before and I tried to shake it off. It was as if something was going to happen and it wouldn't be good. I took out my phone and called Bridget--she didn't pick up and I looked at the time, then walked up to the boarding counter.\n\n\"I'm sorry. I'm not going to be able to make this flight. An emergency has come up and I have to leave immediately.\"\n\nAll the while I drove exceeding the posted speed limit I felt anxious as I headed towards Bridget's apartment. I told myself I was acting insane, but the thought kept coming back to me that if I had stayed for the party that night with Lisa our lives would have been different. Still, I hadn't been able to shake the feeling I took as a foreboding. The only person I thought it could pertain to was Bridget.\n\nI pulled into the parking lot of her apartment complex, found a parking spot and starting walking to her door thinking she probably wasn't even there. Then I saw her car sitting there and then a car I thought was Kevin's. I walked up onto the porch and found the door ajar and I could hear voices shouting voices inside--one of them male, the other female. I pulled out my phone to call 911.\n\n\"I've already called, they're on the way,\" I heard a voice say.\n\nI turned to see an older lady standing there a phone in her hand.\n\n\"How long have they been in there?\"\n\n\"He got here a little more than half an hour ago and I could hear her talking with him. Then I heard something get slammed against the wall about five minutes ago and that's when I called 911. Her ex-boyfriend is a mean drunk and I'm not sure he'll listen to her this time.\"\n\nI heard a scream \"Put that knife down! Don't come near me!\"\n\nI saw the rolled up new.spaper on the lawn next to the sidewalk and picked it up and looked at the woman.\n\n\"I'm not waiting for the cops.\"\n\nMy heart was racing as I slowly pushed open the door and stepped inside. They were standing in the kitchen, Kevin with his back to me as I started forward as he waved the knife at Bridget who was hidden from view. I couldn't make up my mind as to what to do as I didn't want to knock him holding the knife into Bridget. I was within feet of him when he raised the knife and took a step forward.\n\nI simply reacted and kicked him square between the legs hoping the impact would force him to drop the knife and fall backwards as he leaned into the pain. He screamed in agony and bent forward, the knife clattered onto the tile floor. The look of terror on Bridget's face was plain to see, her hands in front of her to ward off the blow she knew was coming. Kevin was on the floor his hand searching for the knife as I reached for Bridget where she was frozen in place.\n\nPulling her toward me I shouted, \"Get outside!\"\n\nShe stood staring at me as if in a daze.\n\n\"Outside now!\" as I gave her a shove towards the door.\n\nThen I looked around to where Kevin was searching with one hand while on his knees and the other hand. Either he was too drunk to know he was hurting, or I hadn't connected with him hard enough. No matter, his hand was just inches from the knife as I threw the rolled newspaper in front of him. He was confused when his hand touched the paper and I placed another kick into his side. He rolled over and groaned as I took a giant step back. I had Bridget in the clear and that was all I really wanted to do. A drunk with a knife was for someone else to handle, not me.\n\nI took two steps back when the first police officer came in the door and ordered me onto the floor. I fell down like an autumn leaf knowing it was going to be okay--my heart still beating hard in my ears. Then I heard another voice and footfalls rush past me.\n\n\"Sir, you can get up now.\"\n\nI rolled over and sat up. Two officers had put handcuffs on Kevin and were hauling him to his feet. A hand reached down and I grasped it as it pulled me upward. It was over, Bridget was safe, and the weird feeling that had settled into me was gone.\n\nChapter 8 What to do now\n\nIt took an hour before we finished giving our statements to the police and Bridget locked the door to the apartment as we left. She was still shaken--I could see it in her eyes. We decided we would leave her car and drive back to Asheville together. She was quiet for the first half hour of the trip north and I could hardly make out her facial expression in the dim light.\n\n\"I thought I was going to die,\" she uttered as her entire body shook.\n\nThe statement came out of nowhere and I wasn't expecting it. I didn't know what to say. Not a thing came into my mind that seemed to fit.\n\n\"Dick, if you hadn't shown up I'd wouldn't be here right now. I'd be dead.\"\n\n\"Try not to think about it. You're not. That's all that's important.\"\n\n\"I can't help it. I thought you were on the way to Belize. Why are you even here? I mean, I don't understand. Don't you need to work?\"\n\nHow do you explain something in a way that makes it sound like you're not crazy? Explain that I had a strange feeling she was in danger. It didn't make sense to me even now as I sought an answer to her question--I didn't believe in precognition.\n\n\"I had a feeling you needed help, so I canceled my flight. I still have to go unless I tell them I can't make it. I figure they can find someone else to cover if I can't do it anyway.\"\n\n\"What if they don't like it? I mean they might let you go.\"\n\n\"Some things are more important than a job. I can find work of some kind if they want to let me go.\"\n\nBridget was silent the rest of the way home. We walked into the business car a little after ten and prepared for bed. I was dead tired and I knew she was too. I never wanted to go through another day like that again. I used the master bathroom and started towards my bedroom as she walked in, her face expressionless.\n\n\"Get some sleep, you'll feel better in the morning, I offered hoping it would help.\n\nShe didn't reply and I gave her a little hug not knowing what else to do.\n\nI was in my bed, my bedroom door open, my eyes closed hoping she would feel better in the morning. I remembered seeing the fear in her eyes and knew there was no way I could completely understand what she had felt at that moment.\n\nI heard a soft voice in the dark, \"I don't want to sleep by myself.\"\n\n\"Come here,\" I replied as I pulled the covers back.\n\nI can't send her away when she needs someone to comfort her. You would have done the same thing for Lisa. Only you loved Lisa, do you love Bridget? Does it matter right now if you don't?\n\nShe slipped into bed and into my open arms, laying her head on my shoulder at first, then she settled in, her face at my neck. I pulled her close and felt her sob softly. I figured I was doing what she needed most and didn't say anything.\n\nAfter a few minutes she whispered, \"I'm sorry.\"\n\n\"Shush don't be. I'm glad you're safe and here with me. Now go to sleep, you need to rest.\"\n\nBridget\n\nI awoke in the night feeling warm with somebody next to me. I could detect a manly odor, at least this time, not one tainted with the smell of beer. I heard and felt his breathing slow and steady as he spooned me from behind, his arm over my waist, his hand on the mattress next to me. It was a glorious feeling knowing I was safe from harm. I closed my eyes after placing my hand on his arm as if I would slip from his grasp without his noticing.\n\nIt was barely light out when I opened my eyes and remembered where I was. I had to pee so I got out of bed as quietly as I could and walked down the hall to the main bathroom where I hoped I would be silent enough not to wake him. I washed my hands and walked back towards the bedrooms hesitating at the door of my own room.\n\nYou feel better, you really don't need to get into bed with him again. I don't need to, but I want to. There's no reason not to if you're willing to take the chance he might want to have sex.\n\nI slipped into bed and closed my eyes. It felt so good to be with a man again and I knew how much I missed what a man could do if I wanted him to. Even Kevin had been good some of the time, though towards the end his clinging and jealousy made my life miserable. At first, I thought it was love that made him act that way--I had been wrong. My parents had tried to warn me and I had ignored them and I had been paying a price ever since.\n\nI felt movement in the bed, opened my eyes, and rolled over to find Dick looking at me.\n\nI smiled, \"Good morning. Before you ask, yes, I'm feeling better. You don't need to baby me.\"\n\n\"Okay. I guess that means you don't want me to hold you for a few minutes before I get out of bed.\"\n\n\"Aaahh...aaahh...I don't 'need' you to hold me. That doesn't mean I don't 'want' you too.\n\nHe laughed, \"Okay I guess. But I need to use the bathroom first.\"\n\nI watched as he got out of bed in his briefs and walked into his bathroom.\n\nGood gracious, what a bulge! I haven't seen that before.\n\nHe returned to bed and went onto his back where I moved onto him face down so he could hold me. I closed my eyes and felt good as his hand caressed my arm and shoulder. The warm tingle my body generated immediately told me I had made a mistake--maybe it wasn't him I needed to worry about. I stopped myself from exploring beyond his hairy chest which thrilled me as I absently ran my fingers through the thick curly hair.\n\nA few minutes later we got up and I went to change out of my panties and tee-shirt. I couldn't say I was self-conscious as he watched me get out of bed. I had never spent the night in bed with a man without having sex and I admitted to myself it was strange. The events of the day before had left me more vulnerable than I had ever been before and I had needed him. He had protected me and helped me over the worst of the trauma I had suffered and I was thankful he seemed to understand.\n\nWe ate breakfast together and I was pleased to fix something for both of us as it took my mind to a place that relaxed me. He was making toast as I fried the eggs and ham, our occasional bumps against each other in the small space seemed natural, reassuring in a way. His smile warmed me as we headed with loaded plates to the dining room table."
    ],
    "authorname": "rawallace",
    "tags": [
        "birds",
        "dyslexia",
        "love story",
        "sex",
        "amazon rainforest"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/please-you-take-her"
}