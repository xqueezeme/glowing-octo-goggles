{
    "title": "Surefoot 14: Shakedown",
    "pages": [
        "\"USS Surefoot-A, Captain's Log, Stardate 42474.19, Captain Esek Hrelle, Commanding: I LOVE THIS SHIP! Sleek, clean, new, with up-to-date equipment and a fresh new mission ahead of us! I love this New Ship Smell! And, my wife is having my cub! MY SPERM ARE MAGNIFICENT!\n\nI shouldn't be so happy. It smacks of tempting Fate.\n\nBut I can't help myself.\n\nTo get back into a more official tone for this log: the Surefoot is currently undergoing a shakedown cruise before beginning its mission mission as fleet tender and strategic operations assistance to our ships on the Cardassian front line. And I intend to take advantage of the relatively quiet time to get to know my ship better...\"\n\nDeck 1 Fore, Captain's/Counselor's Quarters, 0745 Hours:\n\nHrelle stepped out from his quarters, straightened the delta-shaped combadge on his jacket, subconsciously tugged the folds of his jacket around his belly for the thousandth time, and held out his arm for his wife. \"Shall we, Milady?\"\n\nCounselor Kami Hrelle stepped out into the corridor beside him, her uniform a bright Medical Blue contrast to his Command Red, and her demeanour a curt grump to his morning cheer. \"Shut up.\"\n\nUndeterred, Hrelle slipped his arm around hers and guided her along. \"Yesterday you thought a tour of the ship every morning, for a bit of exercise and to get to know the new layout was a great idea.\"\n\n\"That was before I was up half the night to pee twice my body weight.\" She touched her distended belly. \"The Bump loves waking me up in the wee small hours.\"\n\n\"He takes after his father,\" Hrelle noted with a sly, proud grin.\n\n\"His father is usually after something else.\"\n\n\"Which would you rather do, have a pee or have a-\"\n\n\"I'd rather sleep, Horncat.\" She groaned, barely acknowledging the crewmembers as they walked past and greeted the couple.\n\n\"We'll stop in the Lounge and get you a soothing herbal tea,\" he suggested. He knew, albeit only from indirect experience, that Caitian pregnancies, while slightly shorter than usual compared with most humanoids, could be intense. He also recognised that the pheromones she was producing now was augmenting his caregiving tendencies, to the point where she was cursing him for smothering her with kindness, and he had to curb himself.\n\nShe grunted. \"Make it a double strength Raktajino and you've got a deal.\"\n\nA horrible wail emerged as the Lounge doors slid open, and for a second Hrelle thought there was some sort of emergency ongoing, until he saw the Klingon woman in black robes on the dais in the corner of the room, singing out to an audience of one, sitting at a table closest to the dais, watching and listening in appreciation.\n\nHrelle could at least appreciate the increased space in this Surefoot's Lounge, as well as the Holostage, a dais where simulacra of singers, musicians, comedians, lecturers and other entertainment and educational programs could play for the benefit of personnel assembled.\n\nHrelle let Kami drift off of the replicators in the back of the room while he approached the lone occupant at the front, shouting over the wailing woman, \"Doctor Klein! Enjoying the facilities, I see?\"\n\nThe ship's new Chief Surgeon rose to his full two-metre height, his wiry dark hair ponytailed back to accentuate the row of bony ridges up along his bronzed skull. His jagged teeth glistened. \"This is very acceptable! I might kill you all, steal this technology and get it installed back on my old ship!\"\n\nHrelle laughed. \"Or, you know, we'll just give it to you. We wouldn't want the Galactic Exchange Program to have to deal with the paperwork involved in mass slaughter.\"\n\nKlein bellowed with laughter and slapped Hrelle on the shoulder with a huge hand before returning to his bloodwine and wailing. Hrelle turned and walked away, wincing to himself - and kicking himself again with the memory of first hearing the name Klein and expecting someone other than the huge Klingon who had arrived.\n\nReturning to his wife, he saw that she wasn't alone; there were a half-dozen cadets sitting around a table devouring a selection of foods from different worlds, while their Chief Operations Officer Lt. Neheru stood, PADD in hand, asking questions and taking notes of everyone - except in the case of Kami, who hissed at him and set off his threat tendrils. \"Good morning, Lieutenant. What's going on here?\"\n\n\"Good morning, Captain. These fine young people agreed to participate in testing out various offerings from our replicators. I obtained some software upgrades ahead of schedule that were said to improve taste and texture by up to 20%, and I was curious as to the results.\"\n\nHrelle nodded. \"And how are the results?\"\n\n\"Overwhelmingly positive.\" He glanced at a scowling Kami. \"With one exception.\"\n\nHrelle chuckled. \"I didn't think that customer satisfaction surveys fell within the purview of your job, Neheru.\"\n\nThe Kelpien rose up to a height that dwarfed even the Klingon at the front of the room. \"A contented crew is less likely to become bored and take unnecessary risks. I also plan numerous activities and get-togethers, especially to help the cadets from the established and new squads acclimate - with your permission, of course.\"\n\n\"Of course, carry on, Lieutenant. I'll remove Grumpy Gertie there before she skews your findings with her negativity.\"\n\nKami growled as they returned to the corridor. \"Ugh, that music went through me like a laxative.\" She cradled her coffee mug in one hand and patted her belly. \"Sorry, Little Bump.\"\n\n\"Klingon opera is an acquired taste.\"\n\n\"If you ever acquire it, I'll divorce you.\"\n\nHe smiled. \"Don't worry, when I'm in there Saturday night I'll be in my leathers rocking it onstage with Jimi.\"\n\n\"What's a Jimi?\"\n\n\"Jimi Hendrix? Earth's greatest guitarist.\"\n\n\"Never heard of her.\"\n\n\"Him. The man was a living god.\" He suddenly stopped and played air guitar, singing loudly, \"Scuse me, while I kiss the sky!\"\n\n\"Kiss my furry ass,\" she growled, continuing on her way.\n\nOn the deck below, as they approached the open doorway into the gym, they caught the less-than-pleasant collective scent of the sweat of a half-dozen races, and heard a sharp falsetto voice snap, \"Come on, Deltas! Epsilon Squad has you lagging behind! It's pathetic!\"\n\nThe Caitians stopped outside the doorway and peered in to see ten cadets on the floor, all clad in Academy grey exercise vests, shorts and trainers, performing push ups with varying degrees of difficulty.\n\nWith the exception of one purple-haired, pale-skinned cadet near the front, hir lithe, muscular body rising and falling with ease, while the voice continued to chastise them. \"Come on, Deltas and Epsilons! Let's show those lazy bastards on the other squads how it's done!\"\n\nHrelle frowned. \"Rude boy.\"\n\n\"Not a boy,\" Kami reminded him between coffee sips. \"S/He's Hermat.\"\n\n\"I know. Still, my squads aren't lazy.\"\n\n\"It's just banter to get them motivated; the new squads have a lot to prove to the established ones. And they're all your squads now, Papa Bear. No favourites.\"\n\nSuddenly the presence of the senior officers was picked up, as the purple-haired cadet shot to hir feet. \"Captain on the Deck! Squads, Ten Hut!\"\n\nWith less speed and grace, the other cadets returned to their feet and formed a single line, most of them caked in sweat, lungs heaving, some visibly grateful for the break, others visibly grateful to still be conscious. As Hrelle approached hir, the Hermat somehow shot even further to attention. \"Sir! Delta Squad Leader Ledit 137 reporting as ordered, Sir! Delta and Epsilon Squads stand ready for your approval, Sir!\"\n\nHrelle blinked; it was the third encounter he'd had with Ledit, and he still felt exhausted just being in the cadet's presence, such was the intensity on hir face, stance and overall attitude. Hrelle had never met a Hermat before - like the Kelpiens, the hermaphroditic Hermats were rare in Starfleet, although in the latter's case their isolationist natures and intense, shorter lifespans made ordinary interactions difficult at times. Hrelle could at least appreciate their canine teeth and increased olfactory capabilities, qualities Hermats shared with Caitians. \"At ease, Squad Leader. Go get some water, all of you look like you need it.\"\n\nSome of them had started to break ranks, but stopped with one shot from Ledit, as s/he announced, \"We don't need water, thank you, Sir! We stand ready for your orders!\"\n\nHrelle glanced at Kami before folding his hands behind him and nodding, \"Is that right? Good, good, Squad Leader. Then I order you and the other cadets to do the following: go get some water. Then, stop this additional physical training, and go enjoy yourselves doing whatever you want before your next academic or work shifts.\"\n\nLedit stiffened at that, clearly not liking how quickly the squads broke up to follow Hrelle's orders, but nodded formally, \"Yes, Sir.\"\n\nAt the Hermat joined the rest, Squad Leader Naavos Bal, a Bajoran male with ginger-auburn hair and a scar running along the top of his node ridges, drew up to Hrelle and smiled. \"Thank you, Sir. Especially from my aching limbs.\"\n\nHrelle smiled back. \"You know you're of equal rank, don't you? You don't have to do what s/he says all the time.\"\n\nNaavos nodded, a little embarrassed, admitting, \"It's tough to refuse hir. Impossible, really.\"\n\nHrelle made a sound - and then noticed that the Bajoran was missing the earring his people wore in their right ears, as a symbol of their faith; he had worn it every time Hrelle had met the young man, once it was clear about Hrelle's dress code onboard. \"Where's your d'ja pagh?\"\n\nNaavos flushed, clearly appreciative of Hrelle's knowledge of the name for his earring, but also embarrassed by the response he had to give. \"Um, Ledit thought that it'd be more appropriate for us to maintain a uniform appearance-\"\n\nHrelle never let him finish, glancing at some of the others, knowing who wore crosses or sashes or gages, and seeing none of them on the appropriate cadets. \"LEDIT! FRONT AND CENTRE, NOW!\"\n\nThe Hermat was by the water dispenser, but immediately returned. \"Sir, Delta Squad Leader-\"\n\n\"Have you been dictating dress code on my ship?\" Hrelle demanded loudly.\n\nLedit was startled by the response, but maintained composure to reply, \"Sir, no disrespect intended, I was merely-\"\n\n\"You were merely exceeding your authority! And you may not have intended disrespect, but you've certainly exhibited it! To me and to your crewmates! The dress code on my ship allows for reasonable displays of religious and spiritual beliefs, and it's not for you to tell people otherwise! Is that clear, Cadet Ledit?\"\n\nThe cadet was almost shaking from the exchange, but recovered. \"Yes, Sir.\"\n\n\"Glad to hear it. Dismissed.\" As he turned to go, he stopped at Naavos, his voice low and controlled but no less filled with rebuke. \"Did you feel comfortable removing your d'ja pagh when you didn't have to? Do you think your squad, the ones who count on you to defend their rights, felt comfortable?\"\n\nThe Bajoran looked thoroughly ashamed of himself. \"No, Sir.\"\n\nThe Captain nodded. \"Good. Next time someone wants you to compromise yourself, remember that feeling, and don't be so eager to bend over and take it like a dog. You Bajorans have had more than enough oppression from the Cardassians without you agreeing to more. Is that clear?\"\n\n\"Yes, Sir.\"\n\nAs Hrelle departed, walking briskly down the corridor, he slowed down enough to let Kami catch up and ask, \"You don't think you were too harsh back there?\"\n\n\"On which one?\"\n\n\"Both.\"\n\n\"Ledit has to get that pole lodged up in hir toches removed. S/he's too intense.\"\n\n\"Ledit's people only live to around forty years of age! Their whole lives are intense!\"\n\nHe shrugged. \"And Naavos should know better! His people fought and won a war for the freedom to express their beliefs-\"\n\n\"It wasn't that long ago. Before that so many of them spent generations as refugees, trying to fit in, not cause a fuss-\"\n\n\"Then he needs to grow up, or grow a pair.\"\n\n\"Now who's the Grumpty Gertie? I told you the new squads will feel insecure compared to the established ones, we can't show favourites.\"\n\nHe growled in reply.\n\n\"You're not getting enough,\" she diagnosed, teasing.\n\nHe was about to retort, when his combadge chirped. \"Commander T'Varik here, Captain. The shuttle from the Vigilant has arrived ahead of schedule.\"\n\nHrelle smiled, shaking off his foul mood like rain off his fur. \"Thank you, Commander, we'll meet you in the shuttlebay. Hrelle out.\" He looked to his wife. \"Come on, let's go witness a C'Rash Landing.\"\n\nShe rolled her eyes. \"Bet you've been waiting to do that joke since you heard she was coming. You go on, I have to pee - again - and warn Sasha about C'Rash's arrival.\"\n\n\"What? You haven't told her yet?\"\n\n\"We've all been working our tails off getting this ship ready for service, Captain Bossy Boots. Tell my niece I'll see her later in her Initial Counseling.\" She started off, calling behind her. \"And don't forget to thank your First Officer for selecting C'Rash.\"\n\nHrelle watched her depart, admiring the swish of her tail, before he started alone towards the forward shuttlebay, not sure if he should thank T'Varik, or rebuke her. He first met Lt. C'Rash Shall on Cait during the wedding of Kami's firstborn son, and found the young female to be rude, capricious and disrespectful, as well as seemingly on a permanent heat - and looking to add Sasha to her list of conquests.\n\nKami had assured him that it was just the nature of the Caitian clan gathering lowering all barriers of rank, the presence of arousal pheromones in the air - and his own protective nature towards Sasha colouring his perception of the young Caitian. He took his wife's word on it.\n\nSo when T'Varik announced that C'Rash was on her way to take the new position onboard the new Surefoot, Hrelle remained optimistic; it could be good to have another Caitian onboard, and he'd loved being in the midst of them after so long away from his homeworld.\n\nThe shuttlebay here was larger than on the old ship, and better organised, and he arrived in time to see the outer doors parted, and the Vigilant's shuttle pass through the atmospheric shield. T'Varik stood nearby, turning to him. \"Captain, we need to speak about Lt. Shall.\"\n\n\"Agreed. I just wanted to say-\"\n\n\"Sir, I realise that unlike matters involving the cadets, you have final say over crew appointments. And I also realise that Lt. Shall is a relative of yours. But I have certain reservations, now that I have been given access to her record.\"\n\nHe blinked. \"Excuse me, Commander? What about her record?\"\n\n\"Although she has scored very highly in her qualifications, and has earned commendations for valour during the Cardassian conflict, she has also earned a series of reprimands and warnings from various supervisors and commanding officers, who have found fault with her attitude towards them.\"\n\nHe grunted. \"I'd like to say that surprises me, except I've met her.\"\n\n\"Then, Sir, with all due respect, why did you arrange for her appointment?\"\n\nHe started. \"Me? I thought you had.\"\n\nBefore they could talk further, the Vigilant's shuttle door flipped open, and a Caitian female in a uniform with Security Gold colours emerged. Her fur was coal-black, except for lighter patches around her eyes and elsewhere, and she sported a short tuft of fur on top of her head instead of a traditional feminine mane. Her tail was low as she drew up to the senior officers, shoulder bag slung under her arm as she stopped and straightened up. \"Lt. C'Rash Shall, reporting as ordered. I believe I'm expected?\"\n\nT'Varik nodded. \"Indeed. I am Commander T'Varik, First Officer, and I understand you are already familiar with the Captain. Welcome onboard the Surefoot-A.\"\n\nThe Caitian glanced around. \"Well, I'm glad you called me to be on this one instead of its predecessor. I heard that one was a piece of crap.\"\n\n\"Lieutenant,\" Hrelle spoke up, shelving the talk with T'Varik for a later time and seeking to gain some footing right away. He held out his hand. \"Welcome aboard. It's good to see you again.\"\n\nShe smiled and accepted his hand. \"It's good to see you again too, Captain.\" She let go of his hand and dropped it to pat his belly. \"All of you.\"\n\nHe frowned. \"We're not in a Caitian clan gathering now, Lieutenant. As far as you're concerned, rank matters here.\"\n\nShe nodded. \"Sure, sure, whatever you say. So where's the Lounge? I could do with a drink or three.\"\n\nT'Varik raised an eyebrow. \"You are scheduled for your mandatory Medical Exam at 1100 Hours with Dr Ling, and an Initial Counseling Session at 1300 Hours with Counselor Hrelle. Before this-\"\n\n\"I don't need Counseling, thanks,\" C'Rash interrupted. \"Aunt Kami knows me well enough already.\"\n\n\"The session is mandatory, Lieutenant, and not open for negotiation, regardless of your familiar associations with Counselor Hrelle. As I was saying, before this and your medical exam, you will receive a guided tour of the ship at 0900 Hours.\"\n\nC'Rash grinned, her gaze narrowing and focusing on T'Varik with a distinct level of flirtatiousness. \"Oh? And will you be the one taking me places I've never been before, Commander?\"\n\n\"The tour will be conducted by our Second Officer and Chief of Operations, Lieutenant Neheru. I will, however, escort you to your quarters now.\"\n\nThe Caitian female chuckled. \"And if you're lucky, I might let you get out again-\"\n\n\"Lieutenant Shall,\" Hrelle cut in sharply, \"In the interests of amity I am prepared to forget the past friction between us, and the present attitude you are displaying... for the moment. But take note: Commander T'Varik and I have an established agreement that Sasha is to be treated like every other member of this crew regardless of her kinship to me - and I'm officially informing her that this agreement now extends to you.\"\n\n\"Duly noted, Sir,\" the Vulcan replied.\n\n\"So,\" Hrelle continued, still staring down C'Rash, \"When you leave this shuttlebay I expect you to conform to the standards of professionalism expected of one of your rank and position. Is that understood?\"\n\nShe straightened up formally. \"Yes, Sir. I will comply - as soon as I leave this shuttlebay, just as you stated.\" Then she leaned in and added, \"But since we're still here, I guess that means I get to tell you: lighten up, Esek, your heart can't handle all that weight and being a tightass.\" Then she looked to T'Varik. \"Shall we go, Cute Stuff?\"\n\nHrelle looked to his First Officer, too dumbfounded to react in any other than with a silent nod, staring ahead to see the Vigilant's shuttle begin to rise and turn for its departure, almost considering signalling it to stop and collect the hellion it had just deposited on his proverbial doorstep.\n\n*\n\nKami ran into the people she was looking for as they emerged from one of the ship's guest quarters - still straightening up their uniforms. \"Sasha! Giles! Good morning!\"\n\nThe young couple stopped, blushing a little in that adorable human way, though Sasha always managed to turn a deeper shade of scarlet than her lover, though it was probably more of a contrast with her strawberry-blond hair compared to his darker colour. \"Morning, Counselor! We were, ah-\"\n\n\"You were having sex in the unoccupied guest quarters, because it's private and has a double bed?\" Kami prompted.\n\nGiles shifted in place, suddenly reminding Kami of those times when her own cub Mirow would be caught sneaking food from the kitchen, and couldn't grasp how easily adults could work things like that out. \"Well, it's never been used, so we had to test it out, for health and safety reasons-\"\n\n\"How conscientious of you both, to sacrifice your time and effort to do that; in future, however, see if Commander T'Varik might be amenable to the idea of requesting time in the guest quarters. I'll even support the notion. But I didn't come looking for you because of that.\" She looked to each of the squad leaders in turn. \"I wanted to give you some warning, that our new Chief Security Officer has arrived. And it's someone Sasha has met before: Lieutenant C'Rash Shall.\"",
        "Sasha's jaw dropped open. \"Stroke off! She's not! You're making this up!\"\n\n\"Sorry, I'm not.\"\n\n\"Shall?\" Giles echoed, bemused, looking between the women. \"'Shall'? She's Caitian? Related to you, Counselor?\" Then it seemed to finally connect. \"That's her, isn't it? The one you-\"\n\n\"Yes,\" Sasha snapped, looking appalled, and chagrined, and ready to return to the guest quarters and hide out for a decade or more. \"How could Dad bring her onboard? Knowing what happened between us?\"\n\n\"I don't have the full story, but I'm guessing T'Varik was the one who initiated the appointment, and she wouldn't be aware of your past relationship with C'Rash.\"\n\n\"It probably wouldn't matter to her anyway,\" Giles muttered, his expression uncomfortable but struggling to overcome it. \"She'd just say that it's irrelevant, and that we should just act professionally and ignore the past.\"\n\n\"Yes,\" Kami agreed. \"And you know what? That's very good advice, and I concur with it. You two seem to have worked the incident out between you - unless you're using the guest quarters to just fight, which seems like a waste of time and sweat - and there's no reason why you can't behave professionally with my niece, who will outrank you and probably be too busy getting to grips with her new role onboard. I just didn't want you two to run into her without prior notice.\"\n\nSasha considered the words, and finally nodded. \"Thanks. You're right, we can act professionally.\" She looked to Giles. \"Right?\"\n\n\"Mmm? Yes, yes of course. I won't give it a second thought. I haven't done so anyway.\"\n\nKami suppressed a smirk at the bald-faced lie he gave - she was certain that he'd given it a lot of thought, especially when he was alone in his own bed - but just nodded politely. \"That's good to hear.\"\n\n*\n\nIn his Ready Room on Deck 1 adjacent to the Bridge, Hrelle accessed the origin logs of the final orders received transferring C'Rash to the Surefoot and promoting her, and found that the audit trail did not include T'Varik past her initial request, but ventured through the labyrinth of Starfleet Command bureaucracy.\n\nIt piqued his curiosity; it seemed too much of a coincidence that not only another Caitian, but a member of his clan, would be assigned to his ship, and that she would be deserving of a promotion given her alleged chequered record. But as he accessed C'Rash's personnel file and skimmed through the aforementioned reprimands and comments, it dawned on him that the actions had most likely been driven by her former commanding officer, in an effort to get her off his ship and handed over to someone else.\n\n\"Thanks a lot,\" he muttered to no one in particular.\n\nThen he started as his combadge chirped, as if the computer had misunderstood his reason for speaking, and the voice of Gamma Squad Leader Falok spoke. \"Pardon the interruption, but we are picking up an automatic distress beacon from a freighter, the SS Carolina.\"\n\nHrelle's hackles rose. The Carolina was the freighter attacked by pirates two weeks before, when Lieutenant Neheru was conveying this very ship to Starbase 154, and intercepted to evacuate the crew. \"On my way, Mr Falok.\"\n\nHe rose and entered the bridge, watching the young Vulcan rise out of the Captain's chair. \"Sir, it appears to be a standard repeating distress signal on a low band, originating 2.3 light years ahead.\"\n\nFrom her position at the helm, Cadet Wileve Drill's blue Bolian face darkened. \"I thought all the crew was evacuated from her? Why would it be sending a signal now?\"\n\n\"It's automatic,\" Cadet Nancy Yeager informed them from the Engineering Station. \"Set to activate in the event of a catastrophe that might have killed the crew and prevented them from sending a distress signal themselves.\"\n\nHrelle nodded in agreement. \"Tactical display of its location.\"\n\nAt the Security and Tactical Station, the Saurian cadet Orogg called up an image on the main viewscreen, replacing the starfield with a graphic dominated by a large black amorphous mass. \"The Carolina's signal is originating from the edge of a Class-4 dark matter nebula.\" His salmon-pink skin flushed as he extended his elongated neck a little further. \"It is a ten-cubic-light-year nebula listed as a Medium-threat navigational hazard, something pirates will often exploit because of the difficulty in using sensors, shields and weapons targeting within and surrounding their proximity.\"\n\nHrelle nodded again. \"They probably left the Carolina there after stripping it. Helm, set a course for the freighter, Warp 6, engage when ready. Mr Falok, send a message to Starfleet Command, update them on the situation, and that if it's still spaceworthy, we'll set the Carolina on autopilot and send it back to Starbase 154. Think your squad is up for an Away mission over to it to make the assessment?\"\n\n\"We are indeed, Sir.\"\n\nBut then from her station, Yeager muttered, \"How exciting.\"\n\nIt was just loud enough for Hrelle to pick up - and a look at Falok confirmed that the Vulcan had heard it too. Immediately Hrelle countered with, \"On second thought, Mr Falok, it sounds like your squad would rather stay onboard and finish your shift in peace. Contact Mr Naavos and inform him that Epsilon Squad will go on the Away Mission, and you will brief them.\"\n\nFalok controlled his visible disappointment admirably - at least to someone whose senses couldn't pick up the signs. The others on Gamma Squad, however, made no effort to shoot daggers in Nancy's direction.\n\n*\n\nLt. Neheru had optimised the delay outside the quarters of the new Chief of Security, when she did not answer his hails, before tapping his combadge. \"Lt. Shall, this is Lt. Neheru. I am outside your quarters, waiting to take you on a tour of our vessel. Please respond.\"\n\nWhen she didn't, he repeated it twice, and then considered the appropriate protocols, before asking, \"Computer: where is Lt. Shall?\"\n\n\"Lt. Shall is in the Security Bay.\"\n\nHe straightened up further and proceeded, concerned that there had been some miscommunication involved, and additionally concerned that there was some malfunction in the combadge system that prevented her from responding.\n\n*\n\nCadet Neraxis Nemm had been down in the Security Bay, silently racing to reassemble a phaser rifle before her Andorian counterpart, Atiaro Thykrill, did the same on the opposite end of the table. Neraxis had never gotten along with her fellow blue-skinned Security cadet; their temperaments were always too similar, though Neraxis never imagined herself to be as tightass and serious as Thykrill. Recently, however, shared experiences in combat had softened the antagonism between them.\n\nAs did a common subject of more than a few attempts on Thykrill's part at small talk. \"And how is Jonas Ostrow doing? I do not see him much with Soo lately.\"\n\nNeraxis glanced up curiously, only for a moment wondering if the question was the start of some taunt between the rival squads. But the Bolian dismissed it almost immediately; ever since Jonas had publicly praised Thykrill's father, a prominent statesman and philosopher on their homeworld, Thykrill had been protective of Jonas - at one point literally, when the cadets faced their Ferasan counterparts in order to save Captain Hrelle.\n\nAt first Neraxis just thought it a means for the Andorian to reclaim honour or some other crap. But the girl proved consistently supportive. \"They're not a couple anymore. Friends still, but nothing more.\"\n\nThykrill nodded, her antennae turning downward as her eyes focused on a transtator circuit in her hands. \"Was a reason given?\"\n\nNeraxis paused in her work again, wondering if this was all some ploy to make her slow down so that Thykrill could win the impromptu race to rebuild their respective rifles. \"They were okay intellectually and emotionally. It might have been physical.\"\n\n\"Ah,\" Thykrill nodded. \"That makes sense. Rigelian Jelna exofemales have... singular needs I would not expect the average human male to be able to provide. As she is my squadmate, I have seen her naked-\"\n\n\"Well, I don't know for certain,\" Neraxis lied. In fact she did know, and it had all come out during the last group Counseling session with Kami, and Jonas had been quite upfront about it, and seemed to be handling it well; he had changed so much to Neraxis since the days when he would blush at even the slightest innuendo, and at one stage was ready to quit Starfleet over an embarrassing incident.\n\nStill, Neraxis was outraged on his behalf, and said as much about the unfairness of a nice guy like Jonas getting dumped because of something he couldn't change. Kami's response had been as measured and sensible as always: \"There will always be people for whom something about you is a dealbreaker. It could be the size of your genitals, the colour of your skin, your height, your weight, your hair colour, your laugh, your favourite food, the way you say a certain word. It doesn't make you inadequate or inferior, or the other person unreasonable and demanding. It just makes the two of you incompatible. You just have to remember that statistically, there are innumerable people out there for whom those same features are intensely desirable.\"\n\nStill, it was said in Group Counseling, and Neraxis was sure that Jonas, for all his confidence, didn't want it spread around the ship the reason for the breakup. \"Anyway, it's done.\"\n\n\"So he's free to select another? Someone worthier of him-\"\n\nNeraxis set down the rifle parts. \"Do you wanna go out with Jonas?\"\n\nThykrill scowled, her blue skin flaring. \"Suppose I do, Bolian. So what?\"\n\n\"Why are you asking me?\"\n\n\"Because you... you are like his older sister. It is only right to get your permission. And... to assure you that I would not hurt or humiliate him in any way.\"\n\nNeraxis leaned back, folded her arms across her chest and regarded her crewmate, almost ready to refuse permission, just to see the look on the Andorian's face.\n\nInstead, she relaxed herself and admitted, \"He's a big boy; you don't need to ask me. If you want to ask him out, and he wants to go out, have fun.\"\n\nSuddenly the door slid open, and a strange uniform Caitian female with dark fur and a short tuft on the top of her head entered, carrying a crate with a dozen beer bottles. \"Greetings and salutations.\" She set the crate down. \"I am Lieutenant C'Rash Shall, and for the short time I'll be on your ship, I will be your Chief of Security, so use this time wisely to kiss my tail so I'll leave you some positive feedback on your performance reports. Have some freshly-replicated booze.\"\n\nThykrill rose to her feet. \"Lieutenant! Forgive us, we were not aware that you would be arriving so soon.\" The Andorian glanced at Neraxis, silently frowning at her crewmate for not rising in the presence of their superior officer.\n\nNeraxis was too stunned, having recognised the name - and the appearance - as being the Caitian female Sasha said she'd met on their captain's homeworld during Sasha's leave there. Met, and Bumped with. But no, it had to be a coincidence... she rose, as C'Rash stared at her. \"Sorry, Ma'am.\"\n\n\"Sorry? For what?\" She reached into the crate and extracted a bottle for each of them. \"Oh don't worry, I don't stand on ceremony, it never stood on me. So, is it just you two, or will we have to share this beer with others?\"\n\n\"Others?\" Neraxis recovered quickly. \"Yes, three other cadets, one from each squad, plus three Security crewman, including Ensign Gorman-\"\n\n\"Bored now.\" C'Rash opened the bottles when the cadets made no effort to do so themselves. \"Come on, ladies, drink up while it lasts.\"\n\nThykrill shot Neraxis a confused, disbelieving look, one Neraxis understood and shared. \"Um, Lieutenant, alcohol isn't allowed in the Security Bay, and we're on duty.\"\n\nC'Rash regarded the Bolian for a heartbeat, before drawing closer, leaning into Neraxis' neck and sniffed, long and slow, before stepping back and smiling. \"You know Sasha, don't you?\"\n\nNeraxis blinked. \"Sasha? Um, yes, she's my squad leader. You, ah, know her?\"\n\nC'Rash bared her teeth in the approximation of a grin. \"Very much so.\" She let her tail curl teasingly along Neraxis' leg. \"Oh, the things I could tell you.\"\n\nThen the door slid open again, as Lt. Neheru entered, dipping his head beneath the doorway and straightening up again as he regarded the Caitian, the cadets... and the alcohol on the table next to the partly-assembled phaser rifles. \"Excuse me, Lieutenant C'Rash? I am Lieutenant Neheru, Second Officer and Chief of Operations. We were supposed to meet for a tour of our ship.\"\n\nC'Rash drank from her own bottle. \"I know, but I thought it'd be a waste of our time. I did find the Lounge, and the replicators-\"\n\n\"So I see. Alcohol is not permitted in the Security Bay-\"\n\n\"It's a special occasion. Come on, Neheru, put your hooves up and share a beer with us-\"\n\n\"Absolutely not!\" He glanced at the cadets. \"And I am shocked that you two would participate in such a flagrant disregard of regulations!\"\n\nNeraxis felt her stomach drop - not a small feat, given her people's digestive capacities - knowing that their new Ops Chief was correct, that she'd even pointed it out, but-\n\n\"Hey, hey, hey,\" C'Rash stepped in, glaring at the Kelpien. \"Don't blame them! I just opened those beers for them, if you look at the bottles you can see they haven't even been touched! In fact, they were the ones who pointed out the regulations to me!\"\n\nNeheru did indeed examine the bottles - for such a passive-seeming character, he was as relentless and meticulous as any Security instructor Neraxis knew at the Academy - before focusing on the Caitian. \"You should know better, Lieutenant. I am frankly shocked at this! You realise I must report this, don't you?\"\n\nCrash shrugged. \"Do what you must, Daddy Long Legs.\" She drank from her bottle and made smacking sounds. \"We all do what we must.\"\n\n*\n\nThe dark matter nebula filled the bridge viewscreen - not that one could tell, not until Mr Falok helpfully adjusted the view to provide colour to illustrate the borders and density of the phenomenon. But there was no sign of the Carolina.\n\n\"I'm picking up a slight ion trail,\" Nancy announced. \"A similar intermix ratio that you'd expect from a freighter of the Carolina's age and class. The trail leads into the nebula. I should be able to track it for a short distance inside, Sir.\"\n\nHrelle smiled to himself; Nancy had practically been bursting to try and make up for her earlier blunder. As it happened, he doubted if their scanners would function more than fifty metres in any direction once they were in the thick of that thing, but he decided to humour her. \"Good work, Crewman Yeager. Helm, follow the trail inside, using manoeuvring thrusters only... We don't want to bump into her inside and scrape the paint on our new ship.\"\n\n\"Aye, Sir.\"\n\nHrelle watched the gradual approach of the Surefoot to the nebula... and felt his hackles rise. He had no exigent reason to be apprehensive, but now he glanced over his shoulder. \"Mr Falok... take us to Yellow Alert, have senior bridge officers report immediately.\" Louder now, for the benefit of the rest of his squad, he added, \"This is not a reflection on any of you; your performance is more than satisfactory. But something's wrong...\"\n\nMoments later, he turned in his chair to see T'Varik, Velkovsky, Neheru - and C'Rash - step out, all of them assuming their usual positions with the cadets moving to auxiliary stations, except for T'Varik, who stepped down to stand beside his chair. \"Sir?\"\n\n\"The Carolina's signal was picked up in this immediate area, but as we arrived, she appears to have conveniently entered the nebula.\"\n\n\"Your tone suggests incredulity, Sir.\"\n\n\"I have no logical reason to be suspicious. I was hoping for a more rational second opinion.\"\n\nAs the ship entered the nebula, feeling a slight resistance to the greater density within, T'Varik glanced at the viewscreen, eyes scanning the adjoining tactical data, her brow furrowed before she finally replied. \"The density of this particular nebula, lacking any perceived gravimetric eddies, would make the likelihood of a vessel, abandoned and depowered, drifting into its event horizon rather than simply bouncing off, unlikely.\"\n\nHrelle nodded, smiling. \"Good. I like it when the both of us agree on something. Which reminds me, Kami and I wanted to talk to you about the cub-\"\n\n\"Captain!\" Velkovsky snapped. \"Proximity alert, vessel thirty metres away at Mark 0-0-1! Taking evasive-\"\n\nFor a second, Hrelle felt something strike the ship.\n\nThen the Seven Hells opened up.\n\nThe air itself seemed to boil and churn, and a noise like a thousand klaxons pierced his skull, setting his blood on fire and sending him out of his chair and to the floor. Distantly he felt T'Varik collapse beside him, spasming - as he was doing. His limbs wouldn't work, and his insides were writhing like snakes. His eyes and ears and nose filled with horrific phantasms, and he could swear he felt ghost beetles crawl over his fur and burrow into his flesh, as the Great Mother whispered in his ear about how unworthy a father he was and would be.\n\nBut then the entire ship lurched in reverse, and he rolled forward and smacked his head against the toppled helm chair. His head rang, but the other nightmares were dissipating, and he forced his limbs to work, rising to all fours, and then back to very unsteady feet. He glanced around: the bridge crew were all on the floor, some having vomited over themselves or onto the adjacent floor, and his nose told him that for a couple of them, the bodily evacuations extended to their bladder and/or bowels. A moment later, he realised he was one of them; so much for that New Ship Smell.\n\nHe nearly fell over to check the helm, confirming what the viewscreen had told him: that Velkovsky had somehow managed to get them out of the nebula and whatever that effect was. Soon, the sounds of the Red Alert klaxon and the moans and curses of the people around him dominated his hearing, and he started helping his crew back into their station chairs. \"Cancel Red Alert. Tactical, keep watch on that nebula; if anything, anything at all, comes out, target and fire. Ops, initiate Emergency Medical and Damage Control Protocols.\"\n\nA shaken Neheru nodded. \"Already on it, Sir.\"\n\nHrelle nodded at nothing in particular, glancing at his First Officer. \"You okay?\"\n\nT'Varik swallowed and visibly struggled to regain composure. \"Some sort of attack on sonic and subsonic levels...\"\n\n\"You and I got the worst of it, with our hearing...\" Louder now, he ordered, \"Gamma Squad, get to your quarters, get changed and clean up and get back to relieve the senior officers.\"\n\n\"Sir,\" Falok began, trying his best to straighten up. \"That- That will not be necessary. My squad will not leave their posts to-\"\n\n\"Mr Falok, my senses tell me that half of us have vomited, peed or defected ourselves because of that attack - myself included, so don't feel special about it. This is no time for bravado or coyness. Now get going, and be quick, so your older and more decrepit crewmates can do the same, and before my nose divorces itself from the rest of my body.\"\n\nAs the cadets reluctantly departed, Hrelle turned to Neheru. \"Damage report.\"\n\nThe Kelpien's threat tendrils were on full extension from the back of his head, fluttering madly even as his voice sounded composed. \"Some external impact damage on the fore-starboard bulkhead... slight damage near Cargo Bay 1, as if by some sort of cutter beam... and strangely enough, glass and crystal objects throughout the ship appear to have shattered.\"\n\n\"Not that strange,\" Hrelle muttered, his skin still crawling from the subsonic waves that had battered him. \"What about the crew?\"\n\n\"Initial medical reports indicate shipwide instances of varying levels of symptoms, from migraines, nausea, dizziness, to debilitating feelings of dread and anxiety, to supernatural hallucinations to the, ah, loss of various bodily functions. No casualties.\"",
        "Hrelle nodded in gratitude, turning to T'Varik. \"I want a briefing in the Ready Room in 20 minutes, all departments-\"\n\n\"Sir,\" Neheru interrupted, looking alarmed. \"Sickbay have requested you come immediately. It's the Counselor.\"\n\nA chill ran through him, and he only had to look at T'Varik long enough to get the nod from her before he was out through the doors, barely waiting for them to open up enough.\n\n*\n\nHis heart rate doubled as he entered, seeing Kami in the Isolation Unit, pacing around like a caged animal, looking annoyed but not injured. Nearby, Dr Klein was administering something in hyposprays to a line of disoriented-looking crewmembers, as Dr Ling and Cadet Eydiir stood near the Isolation door. \"What's happened? Is she okay? The cub?\"\n\nLing held up a reassuring hand. \"The Counselor fell and banged her head on a tabletop; that's been patched. The foetus is fine, too... for now.\"\n\n\"For now? What does that mean?\"\n\nLing looked to her Medical cadet. \"Go on, you're the one who discovered it.\"\n\nThe tall Capellan girl looked pale and shaken as the rest of them, but to her credit composed herself to report. \"The sonic attack we underwent had a component of infrasound - vibrations at frequencies below the range normally perceived by the hearing of most humanoids, and more felt than anything else. I wrote a paper once on infrasound and historical concerns about the biological effects of exposure to it; the reported effects mimicked what we felt, including loss of bodily functions, nausea, experience of seemingly supernatural events like ghosts and hallucinations-.\"\n\n\"That isn't telling me why Kami is in Isolation!\"\n\n\"Sir,\" Ling continued, \"Can I assume that we might face another attack like the last one?\"\n\n\"It's possible.\"\n\n\"Then I recommend keeping the Counselor in there as a precaution, for the sake of the foetus.\"\n\n\"Captain, there wasn't much research on the effects of infrasound on foetal development,\" Eydiir admitted gravely. \"But what there was... was not good. It included a strong danger of miscarriage. The Isolation Unit's bafflers will protect it.\"\n\nHe nodded. \"You've sold me. Thank you, she stays in there for the time being.\"\n\n\"Esek,\" Kami protested, catching his attention. \"I have work to do! I'll be fine!\"\n\n\"You can conduct any work in there,\" he assured her, \"Let them come visit you. It'll be just as private and secure as your office.\"\n\n\"I can't spend my life wrapped up in cotton-\"\n\nSuddenly he slammed his fist against the clearsteel panel. \"I have enough to worry about without adding you two to the mix, IS THAT CLEAR?\" Almost immediately, his anger was eclipsed with anxiety. \"Please, Kami. Indulge me this one time...\"\n\nShe regarded him, reaching up and placing her furred hand on the clearsteel, where his fist remained. \"I'll stay here, I promise.\" She touched her belly with her other hand. \"The Bump and I will both be waiting for you to take us home.\"\n\nHis own hand opened up and mirrored hers. \"Thank you.\" Then he turned back to Ling. \"Staff meeting in ten minutes, in my Ready Room, send someone up there if you can. I have to go get changed.\"\n\n*\n\nHrelle's Ready Room, like most everything else onboard, was an improvement on the old ship, and he was especially eager to test out the holocommunicator pad on the floor beside his desk. Now, however, his focus was on the people around the table. \"So, no serious medical issues among the crew?\"\n\nKlein had appeared on behalf of the Medical team. \"No, Captain; I have administered anaprovaline to deal with the headaches and nausea, and variants for the more severe neurological symptoms. The infrasonic effects have ranged significantly according to race, age and general fitness.\" He took on a smug expression. \"Being Klingon, I have proven to be the most resistant to the effects.\"\n\n\"That's good to hear,\" Hrelle noted dryly. \"If you only knew how to operate the ship single-handedly, you could fly us into the nearest sun and straight to Sto-Vo-Kor.\"\n\n\"Doctor,\" T'Varik asked, \"What would the effects of a sustained attack be?\"\n\nHis smugness evaporated. \"It would have killed all of you,\" he said simply, with reluctance amending it to, \"All of us. Klingons are resistant, not immune. Had you not withdrawn when you did-\"\n\n\"How did we do that, anyway?\" Velkovsky asked. \"Because when that attack hit us, I was on the floor and couldn't reach the helm.\"\n\n\"I am afraid it was my doing, Lieutenant,\" Neheru confessed, looking somewhat abashed at the attention now on him. \"I have of late been experimenting with designing an emergency helm control to be used in the event of the bridge crew being incapacitated at a critical time - I believe such failsafes were once called 'dead man's switches' - and had one in place when we entered the nebula.\"\n\n\"Lieutenant,\" T'Varik began, \"As laudable and efficacious as your override system was, you were not authorised to implement such a control without prior clearance and proper tests-\"\n\n\"We can discuss this later,\" Hrelle interrupted. \"Have we any clue as to how we were attacked? How can sound even travel through space?\"\n\n\"My turn, I think,\" C'Rash brought up some images from her PADD, displaying them on the main screen beside the table. A vessel appeared, resembling a Klingon Bird of Prey in size and shape, but with subfeatures more recognisable as either Starfleet or general Federation design. \"Here are some images taken from outside our ship. You might recognise the Ju'Day-Class raider, a medium-level fighter popular among private security firms and local colonial forces.\"\n\nKlein cursed. \"A theft of one of our own designs!\"\n\nC'Rash nodded. \"Hence the use of 'Ju'Day', the Klingon word for 'Stolen'. Now, normally a Ju'Day would be no match for a Saber, but the interior of the nebula, blocking standard scanners, targeting systems and transporters, tends to even out the odds a little. Now, watch what they do when they draw closer...\"\n\nThey watched, seeing two round magnetic plates being fired from an array on the underside of the raider, plates connected to heavy-looking cables fed from the array. The plates attached themselves to the starboard-fore section of the Surefoot, where Neheru reported the impact damage; the set-up reminded Hrelle of the grapplers ships once employed before the days of tractor beam technology.\n\n\"These plates are resonators,\" C'Rash continued, \"Once they clamp onto the hull of their target, the pirates could transmit the sonic and infrasonic waves, which will travel unimpeded to every part of the ship; the Isolation Unit appears to be the only secure area. The cables also allow them to reel themselves in close to their victims, ultimately attaching themselves directly and using cutter beams to enter and loot us. They were in the process of doing this when we unexpectedly withdrew.\"\n\n\"But how did they locate us in the nebula in the first place?\" Neheru asked. \"No standard sensors can operate within this type of phenomenon; that is why it is listed as a navigational threat, and the general lack of light makes conventional visual means impractical.\"\n\n\"Wait.\" C'Rash rose to her feet, staring hard at the image of the raider. Then she asked, \"Close your eyes. All of you.\"\n\nHrelle glanced at a bemused T'Varik.\n\n\"Come on,\" the young Caitian urged. \"Humour me.\"\n\nHe sighed, shrugged, and closed his eyes, expecting others to do the same. Seconds later, he heard what he identified as a PADD sailed through the air and hit the far corner of the room and slid down behind the couch. He expected that was his cue to open his eyes again, and found the others did the same.\n\nC'Rash was still standing, bereft of her PADD. \"Where did it go?\"\n\n\"2.27 metres behind and to your left,\" T'Varik replied. \"If you are suggesting the pirates are employing a sonic-based detection system, I should not need to point out that sound waves do not travel through the medium of space, hence their use of the resonator clamps.\"\n\n\"But sound waves do travel through the medium of gas, such as in the nebula. The vibration of impulse engines, of heat and waste vents, even the slight expansion and compression of parts of a vessel as they enter and leave areas of heat or cold.\" She pointed at the image of the Ju'Day. \"Those objects on the tips of the wings look like passive acoustic detectors, using sound to determine the distance and direction of the source without alerting the source. I've seen very similar perimeter security devices employed planetside along the Cardassian border.\n\nNow, having those on your spaceship is usually pointless as you pointed out, Commander, but I'm betting they can employ them for tracking another ship in the nebula.\"\n\nHrelle's jaw tightened; even if the infrasonics were employed outside of the nebula, it could still be a potentially devastating weapon against a vulnerable target. Within the nebula, the Kingdom of the Blind, where the pirates were the One-Eyed Men... \"Okay. What do we do about it? What are our options?\"\n\nC'Rash shrugged. \"Not be around. Don't let strange ships attach things to our hull. Go for backup. There you go, three options.\"\n\n\"I have a fourth: go back in there, disable their weapon and stop them.\" He looked to T'Varik. \"Assemble the cadets, everyone with Engineering, Science and Medical primary and secondary studies.\"\n\n\"What?\" C'Rash snorted. \"You expect a bunch of shavetails to sort this out?\"\n\n\"These are no ordinary cadets; they are brilliant in their respective fields. And they're eager to do their job - unlike you.\" To T'Varik he added, \"Keep them focused on the task, don't let them get sidetracked. We need a solution we can apply here and now, and quickly.\"\n\nC'Rash tapped on the tabletop with a claw. \"Hey, Esek! Aren't you listening to me?\"\n\nHe glanced at her. \"I'm better equipped to respond when you use proper protocol, Lieutenant.\"\n\n\"Go get help! Backup! There's plenty of ships to call on: The Iberia, the Tortuga, the Columbia-\"\n\n\"That is not possible, Lieutenant Shall,\" T'Varik informed her. \"Those vessels you mentioned have their own vital assignments. Further, we are scheduled to rendezvous with the Winterborn in 9.5 hours, to receive its cargo for eventual transfer to our ships on the Arkady Cluster. She would be a prime target for the pirates, and delay re-equipping the ships patrolling the Cluster.\"\n\n\"We can't get backup,\" Hrelle concluded, \"Out here, we are the backup.\"\n\nC'Rash folded her arms across her chest. \"Nice line. Did it add a few extra centimetres to your piece? I'm sure Aunt Kami will be pleased.\"\n\nHrelle regarded her, and without looking away ordered, \"Commander T'Varik, Lt Shall is relieved of duty pending a Counseling evaluation. Doctor Klein, please escort the Lieutenant to Sickbay and lock her in with my wife. If she gives you any trouble, spank her. Lt Shall, that is, not my wife. My wife would kick your ass back to Qo'nos.\"\n\nThe Klingon made an amused sound and rose to his impressive height. C'Rash rose too, glaring at Hrelle, but saying nothing further as both of them left the Ready Room.\n\nHrelle looked to Neheru. \"Bring the next shift up two hours earlier than expected; I want people on working at peak efficiency. And prepare more of your dead man's switches for when we re-enter the nebula. Dismissed.\"\n\nAs the Kelpien departed, leaving Hrelle alone with T'Varik, he turned to his First Officer. \"Update Starfleet Command on our status, include all data on this sonic weapon. And while you're at it, run an audit trail on the source of the orders transferring C'Rash here. It can't be a coincidence that she showed up here.\"\n\n\"Do you wish me to order a replacement for her as well?\"\n\n\"No.\" He stared at the door. \"Maybe Kami can straighten her out.\"\n\n\"One would hope so, for the sake of her continuing career. She is at times professional and self-destructive; I cannot imagine how she might have graduated from the Academy with such an attitude. The dichotomy is puzzling.\"\n\nHrelle smiled and leaned back, letting his tail drift up to his lap. \"Did I ever tell you about the first time I met Kami? I had escaped captivity two weeks before, was still reeling from years of physical and mental abuse, I had learned my wife had been killed, that Sasha had grown up without her mother, and that I was facing a Starfleet hearing. I wanted to wallow in my bitterness and self-pity, and Kami was the third Counselor they sent to try and get through to me.\n\nI wasn't having any of it. I warned her, warned her that I was a monster, that I hurt people, and if she didn't leave me alone, I'd hurt her too. She seemed to take the hint and started to leave... but then doubled over in agony, claiming it was because of her baby.\"\n\nT'Varik expression furrowed. \"I was unaware that she was pregnant at that time.\"\n\nHe smiled at her. \"She wasn't. It was a ruse to distract me, to shake me out of my self-imposed funk. I get the same feeling from C'Rash; this Bad Girl act is just that, an act. Why, I don't know. But if anyone can cut through the crap to find the truth, it's my wife.\"\n\n*\n\nKami was on her feet, eyes narrow, hackles raised and tail swishing in agitation as Klein led C'Rash into the Isolation Unit. \"Oh, has my misbegotten husband decided to lock up all the Caitians onboard, or is it just the females?\"\n\nThe Klingon smirked at her. \"She has been suspended from duty. The Captain wants you to evaluate her.\"\n\n\"Oh, does he? Well, you can give him this evaluation: Hab SoSlI' Quch! And it goes double for you, p'takh!\"\n\nKlein chuckled and stepped back. \"Why don't you calm down, Counselor? I'll bring you some herbal tea.\" He departed and closed the door in time, laughing, as the chair she threw at him bounced off the clearsteel surface.\n\nKami was panting, teeth and claws bared as she paced in a tight circle. \"That bastard mate of mine! How dare he lock me up in here like an animal! Who does he think he is? I'll contact my mother, she'll skin him alive!\"\n\nC'Rash stared warily, never having seen her aunt in such a state before. \"Listen, the doctors say that the infrasound waves are dangerous to cubs in the womb-\"\n\nKami stopped and glared at the younger Caitian. \"Are you taking his side, bitch? After he did the same to you?\"\n\n\"No! I mean, my reasons for being here are different-\"\n\nKami snarled. \"The son of a bitch has been like this since he heard I was pregnant! Always watching out for me, making sure I eat only healthy foods, I don't strain myself.\"\n\nC'Rash shrugged. \"Males are always like that. They're natural carers, that's why most of them stay at home.\"\n\n\"But what about him? I have a duty to watch over him, make sure he's safe! I can't do that when he leaves me behind!\"\n\n\"Aunt Kami, he's a big boy, he knows what he's doing, he can take care of himself. You have to trust his judgement.\"\n\nKami strode up to her. \"You think so? He's gonna go over to that Cardassian ship, and get himself killed!\"\n\n\"No, he-\" C'Rash frowned. \"What?\"\n\nKami suddenly picked up the chair she had flung at the door, set it upright, and straddled it backwards, folding her arms over the back and resting her chin on her forearms. \"No, wait, that isn't Captain Hrelle, is it? That's Captain Jason Myrick, of the Cutlass. Your first ship, and your Commanding Officer.\"\n\nThe younger Caitian stepped back. \"Shut up.\"\n\n\"You were his prot\u00e9g\u00e9, according to the Counselors' reports sent to me. He was very important to you, for several years. But when he went over to that Cardassian ship to arrange for an exchange of prisoners of war at the end of the conflict, for once he refused to let you accompany him. Which turned out for the best, at least for you; a rogue Cardassian with a grudge from the war killed him.\"\n\n\"Shut up!\"\n\nBut the Counselor continued. \"You appeared at the Starfleet inquest and tried to claim responsibility for Myrick's death, for not protesting hard enough to come along. You claimed that if you had, he would still be alive. The inquest found differently, and rightfully so. But you never accepted their verdict, and since then, you have tried to sabotage your career through acts of insubordination.\"\n\nC'Rash bared her teeth now. \"I'll rip your throat out!\"\n\n\"No you won't. Anyway, you've managed to wear out welcomes on two other ships since then, and then out of the blue, you get this inexplicable transfer and promotion to us. Well, inexplicable, until I checked my mail and found an incoming message for Esek and me-\"\n\nC'Rash strode up to her, raising a hand with claws extended. \"I'll-\"\n\nBut Kami just raised her chin. \"You'll do nothing. Even if you had it in you to hurt me, you've been in this enclosed space soaking in the pheromones I've been pumping out since I got here - especially with that fake outburst from before. Hurting me is the last thing you want to do.\"\n\nC'Rash ground her teeth, eyes narrowed with rage - before she turned and stormed into the far corner, slinking down and facing away. \"You kussik.\"\n\nKami smiled. \"If I had a credit for every time I've been called that... or an equivalent body part...\"\n\n*\n\nHrelle resisted the urge for the hundredth time to interrupt the brainstorming session, before rising from behind his desk as T'Varik and several of the cadets entered. \"Well? You worked out a countermeasure?\"\n\nThe Vulcan straightened up \"Not... directly, Sir.\"\n\n\"What? Is that a joke, Commander?\"\n\n\"Hardly, Sir. The Surefoot possesses exterior acoustic speakers for public communication during planetfalls, and we have attempted to adapt these to form a counterfrequency, but our efforts were unsuccessful.\"\n\n\"Sir,\" Jonas Ostrow spoke up, smiling, \"We can't stop the weapon with what we have, but we can knock out their delivery system, hit those magnetic resonance plates before they can get attached to us.\"\n\n\"That's all well and good, Jonas, but they have an advantage over us in navigating and tracking within the nebula - unless we can duplicate their acoustic sensors?\"\n\n\"Well, Sir, we were thinking that instead of sound, maybe we should try scent?\"\n\n\"Excuse me?\"\n\n\"If I may, Mr Ostrow?\" T'Varik ventured, taking over. \"As you will already be aware, a scent is merely a collection of individual particles within the medium of air, water... or nebula gas. Particles that can be detected by olfactoral senses... or probe sensors that we can feed the data on the Ju'Day's thruster waste ratios. We can send a number of probes ahead of us to triangulate the pirate's estimated position based on this data.\"\n\nHrelle nodded. \"Like bloodhounds.\"\n\n\"Meanwhile,\" Jonas jumped in, \"We go in on Grey Mode, reduce our power signatures to a minimum, and give them as little as possible to pick up!\" At the expression from T'Varik, he looked more chastened. \"Sorry, Ma'am.\"\n\n\"However,\" the Vulcan continued archly. \"There is no guarantee that we would detect them before they detect us. Their equipment may be more sensitive than ours.\"\n\n\"That's not necessarily an advantage.\" Hrelle moved to the window, stared out at the inky blotch in space, reminding him of the nightfog that used to roll into the Archipelago when he returned from the village pub. \"Years ago I dated a rather fetching young zoologist on the Republic who had a penchant for exotic creatures. She once lost a Tiberian monkey in the ship's arboretum, and asked me to rescue it. I crawled through the trees for almost an hour, listening very, very carefully for its breathing among the dense foliage, blocking out everything else around me.\n\nI learned that Tiberian monkey screeches can reach 125 deciBels, when the little bastard leapt onto my shoulder and shrieked in my ear. I nearly threw up from the experience.\" He looked at T'Varik and smiled. \"Let's see if we can be little bastards ourselves, shall we?\"",
        "*\n\nKami had helped herself up onto the table, while C'Rash crouched down and massaged the older Caitian's feet. \"He was my mentor. I was there on every one of his shifts, always nearby, even during routine meetings where I had no reason being there. 'Myrick's Cat', they called me when they thought I couldn't hear - or even when they knew I could. I didn't care.\"\n\n\"You loved him,\" Kami opined. \"You weren't lovers. But you loved him.\"\n\nC'Rash never looked up. \"He reminded me of my Papa, all smiles and encouragement.\" She stopped, stared at the floor. \"I should have disobeyed orders and gone over with him anyway.\"\n\n\"He was protecting you.\"\n\n\"It was my job! I was there to protect him. Do you know anything about Security?\"\n\nKami's expression turned sad. \"My first husband, Mirow's father, was in Starfleet Security. He died in the line of duty. So, yes, I do know.\"\n\nC'Rash looked up again. \"I'm sorry.\"\n\n\"I don't want you to be sorry. I want you to listen. Despite the hazards of your job, Captain Myrick would still have wanted to protect you - just like Esek would. The best Captains will never see any of their crew as mere names on a roster, and they will charge into a mob of Ferasans to protect every one of them - or keep one of them from going into danger.\"\n\n\"He shouldn't have done that.\"\n\n\"But regardless, he did. And now he's dead, and you're alive. He saw something special in you, the potential to be a fine officer. What you're doing now is throwing all that away. Killing his efforts. Making his sacrifice meaningless.\"\n\n\"I don't care.\"\n\n\"Liar.\"\n\nOverhead, the intercom chimed, and the Captain's voice filled the air. \"All hands: prepare for Grey Mode. We are about to re-enter the nebula to engage with the pirates. We will try and avoid another infrasonic attack, but if it does happen... watch out for each other, as best you can. Hrelle out.\"\n\nC'Rash kept staring at the ceiling. \"I need to get back up there.\"\n\nKami pulled her foot out of the younger Caitian's hands. \"Do you think you can stop being an ass long enough to do your job?\"\n\nShe seemed to consider the question. \"Suppose I can?\"\n\nKami swung her legs away and stood up, moving to the intercom. \"Dr Ling, release Lt. Shall, she can return to duty.\"\n\n*\n\nHrelle ensured a final message was sent to Starfleet Command before entering the nebula. Then he ordered the launch of the three pre-prepared probes, seeing them shoot forth and pierce the event horizon, before he finally announced, \"Grey Mode.\"\n\nImmediately the light strip circling the ceiling of the bridge changed from yellow to grey, and the main lighting and other features went black, the warp and impulse drive shut down, and the outer running lights and heat exhausts went dark and cold. They entered the nebula with a slight jolt, carried only by inertia, gently assisted with quick microbursts from the manoeuvring thrusters.\n\nHrelle was gripping the arms of his chair, and forced himself to release them and lean back, glancing around. The crew was silent, a psychological tool to assist in the overall maintenance of a minimum of vibration, of energy, of anything that the pirates might pick up out there. All focus was on the crewmen and cadets manning the Primary and Secondary Tactical, Engineering and Science Stations, earpieces and data display glasses, reading the telemetry from the probes ahead.\n\nThen he caught the familiar scent, and rose to see C'Rash emerge onto the bridge, looking far more vulnerable, exposed, than he had ever seen her before - a good session with Kami could do that to a person. He looked at her quizzically, murmuring, \"Lieutenant?\"\n\nShe swallowed, her tail hanging still from behind her, as she whispered in reply, \"Sir, requesting permission to man my post. Please.\"\n\nHe knew the answer right away - his instincts told him none of the glib, unpredictable hellion of before stood before him now, and he could use someone with her experience and talent manning the phasers when they couldn't use the targeting systems in the nebula - but still waited a heartbeat or two before nodding towards the Primary Tactical Station.\n\nHe remained standing, trying to look casual, trying not to keep thinking about his wife and cub down in Sickbay, or Sasha, at her emergency station. This could go wrong in so many ways. Maybe C'Rash had been right, and they should have sought help- no. No, they could handle this. He had faith in this ship. More, he had faith in this crew.\n\nSuddenly Jonas rose from his place and looked expectantly in Hrelle's direction, before moving to the main viewscreen, Hrelle following. The view was a black-on-black melange; he couldn't even see the tiny lights from the probes.\n\nThen Jonas pointed to one area - and Hrelle identified the outline of the pirate ship.\n\nHrelle patted the boy's shoulder and sent him back to his chair, before nodding to Velkovsky at the helm, and C'Rash at Tactical, and raising a hand expectantly. He watched the ship draw closer, purposefully, obviously having spotted something with their highly-sensitive equipment. Maybe they've even got it turned up to maximum, straining to listen. Yeah, you bastard, open up those ears and get ready... \"NOW!\"\n\nFrom the acoustic speakers on the outside of the Surefoot, the metallic assault of electric guitars in a relentlessly driven chant vibrated across the medium, ridden by a single male voice crying out, \"PURPLE HAZE ALL IN MY BRAIN / LATELY THINGS DON'T SEEM THE SAME / ACTING FUNNY BUT I DON'T KNOW WHY...\"\n\n\"Lights!\" Even as the Surefoot left Grey Mode for full power and Red Alert, the three probes now surrounding the pirates flared like miniature suns, lighting the area head - and the Ju'Day, as it fired its resonators towards the Surefoot.\n\n\"Phasers!\"\n\nTwin red beams shot forth, striking the starboard wing of the pirate ship, destroying it completely and sending the ship into a backwards spin. The resonators continued shooting towards the Surefoot - until the spin of the pirate ship reeled them back in, entangling themselves. One of the clamps struck something on the underside of the pirates- something vital, apparently, as the ship disintegrated into a blossom of fire.\n\n\"'Scuse me,\" Hrelle muttered, \"While I kiss the sky...\" He looked to C'Rash. \"Nice shooting, Lieutenant.\"\n\nShe frowned, a little abashed. \"That was, ah, more spectacular than I was aiming for, Sir.\"\n\n\"It can't be anything less than spectacular when Hendrix is involved. Commander, stand down from Red Alert, retrieve our probes and get us out of the nebula and on our way to the rendezvous with the Winterborn. Then we can get some exciting work done for a change.\" He headed for the doors. \"Meantime, I'd better go get my wife out of Isolation while she's still speaking with me.\"\n\n*\n\n\"Captain's Log, Stardate 52613.8: we have sent a full report to Starfleet Command about the destruction of the pirates and their weapon, and are now engaged in cargo transport from the Winterborn. My First officer had helpfully informed me that now would be an opportune time to offload Lt. Shall in preparation for finding a replacement Security Chief. But my wife has made me aware of extenuating circumstances... as well as solving the mystery of who arranged the Lieutenant's promotion and transfer to us in the first place. With this in mind, I have other plans for the young cub...\"\n\nHrelle swivelled in his chair as C'Rash entered the Ready Room and strode up to him. \"Okay, Fatso, let's cut to the pounce: I never unpacked my bags, so this'll be easy for both of us.\"\n\nHe smirked; he expected this reaction. Even his wife couldn't work miracles with just one Counseling session. \"Easy? This isn't going to be easy. Not for either of us. You think you're leaving? Think again.\"\n\nThe younger Caitian rolled her eyes. \"Whatever Aunt Kami told you, you can forget it. Nothing is gonna make me stay, so you might as well sign the orders, or I'm just gonna make it hard for both of us - and not in a good way, either.\"\n\n\"Have you thought about what you'll do with yourself when you're finally kicked out of Starfleet? Where will you go?\"\n\nShe shrugged. \"Who cares?\"\n\n\"I care. Kami cares. The Matriarch certainly cares.\"\n\nC'Rash frowned. \"Ma'Sala? What does she have to do with this?\"\n\nHrelle rose to his feet and stepped around to the front of the desk to face the Lieutenant. \"It turns out that even though she's Fleet Captain in the Caitian Planetary Navy, she still keeps an eye on all her clan in Starfleet. She knows the trouble you've been having, and she arranged for your transfer and promotion to my ship. And when I spoke to her, she asked that we straighten you out. And I agreed.\"\n\nThe frown twisted into a scowl. \"Well, you can go back and tell that interfering old kussik to mind her own damn business.\"\n\n\"I don't think so. You know what I do think? I think you're going to stay onboard and eventually become the superlative Chief of Security I know you can be. I think you're going to have Counseling sessions with your Aunt, who I promise you will see through your shit as easily as she's seen through mine and everyone else's. And I think that every act of disrespect and insubordination from you will result in punishment, but none of it will ever get you kicked out.\"\n\nShe bared her teeth. \"I resign!\"\n\n\"Resignation refused,\" he replied simply.\n\nShe tensed - and he saw her arm swing up, claws bared to cut him.\n\nHe was quicker, twisting around, grabbing the younger Caitian and slamming her face down on his desk, her arm twisted back behind her as he pressed her into immobility. She fought and cursed and struggled and cursed some more, her tail smacking against him. With some adjustment to his own stance, he rendered her completely immobile. \"Stop it! You'll hurt yourself if you keep this up!\" When she continued, he snapped, \"STOP IT!\"\n\nThe sharp rise of his voice did the trick. She remained face down, panting, her breath fogging the black reflected surface of his desk. \"Let- Let me go-\"\n\n\"I will, once you promise not to try that again. You're a member of my crew... and you're family, something I've gone without for decades. You have no idea how much being a part of your clan means to me... and I don't want to hurt you. I want to help you.\"\n\n\"Then let- Let me leave-\"\n\n\"No.\"\n\n\"I'll tell Ma'Sala you assaulted me!\"\n\nHe froze, released her and stepped back. \"You don't have to. She's been watching and listening to everything.\" He looked to his left, watching as the holocommunicator pad on the floor beside his desk flared white, and a fountain of colourful photons rose and coalesced themselves into the image of a large-framed, elderly Caitian female with ash-grey fur, ancient scars on her muzzle, nicks in her pointed ears and tail, and a heavily-decorated crimson-red Planetary Navy uniform.\n\nThe holographic image looked to C'Rash with a tight fury. \"You call that an assault, cub? If you had tried raising your hand to me, I would have left your tail limp and your muzzle bloody. Now pay attention, because if I have to repeat myself, you'll regret it.\" She pointed to Hrelle. \"This male is now a respected senior member of our clan, and he and my daughter have our full support in helping you. You will listen and obey them. They are your family. They will protect you.\"\n\nSofter now, more sympathetic, the Matriarch added, \"And in return, you will protect them. Esek, Kami, Sasha, my grandcub, all the cadets and crew onboard, all of them need you. You were born with the Watcher's Patch of fur over your right eye. It is in your nature.\" The holographic image turned to Hrelle. \"Thank you again, Esek.\"\n\nHe nodded respectfully. \"I'll keep you informed, Ma'Sala. Farewell.\" As the image dissolved, he shrugged. \"When I first met her, I never thought she'd be treating me as an equal...\" He looked at C'Rash again. \"And I never thought I'd have a family again. I look at you, and I see someone that could be on the road to being like me: driven, but alone for so much of it. But it doesn't have to be that way. You need us; we need you, too. This is a new ship, new job, new territory, and the Matriarch's right; I could do with someone keeping an eye out for Kami, Sasha and the Bump. Someone I can trust.\"\n\nHe held out his hand.\n\nShe stared at him, as if expecting another trick or martial arts move.\n\nUntil she accepted it. \"This is probably the stupidest decision you'll ever make.\"\n\nHe chuckled. \"Wait 'til you get to know me.\"\n\n*\n\nDeck 1 Fore, Officer's Lounge, 0750 Hours:\n\nSasha stood in the corner, shielded by Giles and Kami, as she scanned the rest of the occupants. \"I should go, call in sick, transfer off, put myself in stasis.\"\n\nBeside her, Giles was tucking into a sausage and egg muffin breakfast carried over from the replicators and somehow not having devoured it entirely before now. \"You're getting worked up over nothing. Right, Counselor?\"\n\nKami was staring intently at his breakfast as she replied, \"I talked to her, warned her. She promised she wouldn't embarrass you, Sash.\" Then she indicated the muffin. \"You're not really going to finish that, are you, Giles? Your uniform's starting to look tight, and you don't want to have to worry about a poor fitness rating in your last year at the Academy. Not to mention the health risks-\"\n\n\"Enough already, you win.\" He handed over the food, watching the Counselor rapaciously tear into it. \"Anyway, Sash, I think you need to stand your ground with her. Let her know that you can't be embarrassed. Let her tell all the dirty stories she has about you. Let her flirt with you, even kiss you in front of others-\"\n\n\"Down, boy,\" Kami teased, her mouth full of food. \"Your uniform's getting very tight now.\"\n\n\"Both of you shut up. Damn, here she comes.\" She forced a polite smile on her face as she saw C'Rash approach. \"Hi, Cousin, long time, no see.\"\n\nThe young Caitian drew up formally, smiling. \"Indeed, Squad Leader Hrelle. A pleasure to see you again, and to serve with you.\" She left Sasha looking bemused as she focused on Giles. \"You must be Beta Squad Leader Arrington. A pleasure to meet you too, young man. Sasha and Kami have had nothing but praise for you. I look forward to serving with you, too.\" She offered her hand.\n\nGiles offered a smile and accepted the hand. \"Thank you, Lieutenant. So do I.\"\n\nThey shook hands - but then C'Rash suddenly drew up to him, pressing her body against his, breathing heavily and sultrily against his ear as she whispered, loudly enough for Sasha and Kami to hear, \"When you get tired of my boring little tailless cousin and are looking for some real excitement... you know where to find me.\"\n\nThen she departed, leaving Giles looking flushed and flustered.\n\n\"You okay there, sport?\" Kami asked teasingly.\n\n\"Yeah,\" he squeaked.\n\nSasha growled.\n\nThen someone in the crowd announced, \"Captain in the room!\"\n\nThe assembled Department Heads and Squad Leaders drew together to stand at attention as Hrelle and T'Varik entered, the First Officer joining the others, while Hrelle ascended the three steps to the dais, where a podium was set up, with controls for the holographic displays behind him. \"Good morning, hope you're all settling in on the new ship, because we're going to have our work cut out for us in the coming days and weeks. This will be especially true for our cadets, now in their final year at the Academy; while the additional squads will provide more study time, there will be more instances when you are called upon to assist with ship duties.\n\nI also wish to welcome to our crew our new Chief of Security, Lieutenant C'Rash Shall. She has extensive practical experience serving on the very front line vessels that we'll be tendering. And you may as well know now that the Lieutenant is my niece through my wife's clan. But I assure you that I will not be playing favourites with her. On the contrary, I'll be expecting her to work twice as hard as the rest of us.\"\n\nStanding between Sasha and Kami, C'Rash smirked and quipped, \"Someone's missing his Second Breakfast.\"\n\nHrelle looked up at her sharply, and then pointed to the steps at the side of the dais. \"Sit there for the duration of the meeting.\"\n\nShe blinked. \"What?\"\n\n\"Oh crap,\" Giles muttered, flushing. \"He's brought back the Naughty Step.\"\n\n\"You heard me, Lieutenant,\" Hrelle insisted, amidst the amused sounds from the older members of those assembled. \"Sit down there, now.\"\n\nShe crossed her arms. \"And if I don't... Sir?\"\n\n\"Then for the next two weeks the replicators will produce nothing for you but water and drusel. And the crew will be under orders to give you nothing else.\"\n\n\"Drusel?\" Sasha asked.\n\nKami was picking muffin out of her teeth with an extended claw. \"A traditional Caitian gruel of cold watered oats with starch and salt, and historically eaten only by penitents and characters in ancient melodramas. It looks like white lumpy vomit and tastes worse. Personally I'd rather eat my own foot.\"\n\nAt the end of the line, Lt. Neheru looked to T'Varik with mild alarm. \"Commander, this is not standard Starfleet procedure!\"\n\nThe Vulcan nodded in agreement, but explained, \"You will find that serving under Captain Hrelle is a singular experience. But it can also be an illuminating one.\"\n\nHrelle was still pointing to the steps and staring at C'Rash. \"Well?\"\n\nHer fur hid her blushes, but her chagrin was obvious as she stormed over to the side of the dais and made a showy, defiant display of sitting down. But she did sit down.\n\nHrelle nodded and looked back at the group. \"Right, now where was I...?\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... FLINCH"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "starfleet",
        "federation",
        "caitians",
        "aliens",
        "fanfic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-14-shakedown"
}