{
    "title": "Cheating 101 from Literotica",
    "pages": [
        "This is in homage to rpsuch. He started this whole thing. Blame him!\n\nThis is a humorous discussion of avoiding the pitfalls of adultery.\n\nHotels\n\nAlways count the smoke detectors in your hotel room. If there is more then one, get out, hopefully before she gets there!\n\nNever go to a cheap motel with outside doors and windows. Always close the curtains all the way if you do, no matter where you are or what floor. \n\nNever get into an elevator with her. Make her take her own damned elevator and go to a different floor. Fire stairs are there for a reason and she can probably use the cardio to warm up. On a related note, never touch her in the hotel lobby.\n\nAlways get adjoining rooms. Yes, it costs more but it's less then a divorce or an alienation of affection lawsuit.\n\nMake sure you buy prepaid credit cards for your hotel assignations. Receipts are NOT your friends. For that matter, buy prepaid cell phones and arrange very specific times to call one another.\n\nIf someone knocks on the door of your little trysting place while you are both there, save yourself the hassle and just jump out the window now (Bet you're sorry you didn't get the adjoining rooms NOW asshole!) Yes, you may be on the third floor, but it will be less painful in the long run.\n\nWhile we are on the subject, never get a hotel room higher then you can survive being pushed out of. Just saying.\n\nDo not let her answer her cell phone or hotel phone when you are having sex. Treat that ring tone with the same caution you treat a rattlesnakes rattle. It might mean you're about to get hurt real bad. Make sure she calms down before she talks. (We are assuming she's a good actress already. She has YOU convinced she's having mind blowing orgasms...)\n\nIt is probably a good idea to bribe the staff before the hubby gets a chance to. They might at least give you a shot at a running start before the mayhem begins.\n\nNever ever use the same hotel room twice.\n\nBe a gentleman. Make sure the hallway is clear before you let her sneak out of your room.\n\nHome\n\nWhy the hell are you in her home in the first place? Don't be cheap. Get a hotel room. He can bug his house much easier then he can bug a hotel room.\n\nIf you are an incredible dumb ass and are sleeping with her at her home, always check the closet.\n\nNever EVER park in her driveway. On an added note, make sure that you have a key locker on the car in case you need to exit fast without your clothes.\n\nRe: Screwing in the pool/jacuzzi. Just Don't. Save yourself the time and rent a billboard declaring your affair instead.\n\nYou know what's a rush? Sleeping with some cuck's wife in his own bed. You know what else is a rush? Getting your gonads kicked into mush. One leads to the other. Consider Carefully.\n\nDon't be a slob. If you leave your clothes strewn all over her house, most husbands are more then willing to pick them up after you. This is NOT in your best interest.\n\nNever carry identification with you when you are with her. Ditto Cellphones, money, credit cards and car keys. Laptops are RIGHT OUT! Remember those key lockers! Keep your clothes in a nice, easily grabbed bundle next to your shoes. Yeah, at this point you're probably screwed in the bad way, but make hubby work for it.\n\nIF you just HAVE to screw her in his bed, make sure that you face the door. Those seconds might make the difference between baritone and soprano.\n\nWork\n\nDo not meet her with any of her co-workers.\n\nDo not flirt in the office.\n\nBe aware of any moral clauses in your company handbook before you start dipping your pen into company ink. Is a screw with her worth $30,000 to $150,000 per year? Get someone else to fire her first. Then commiserate with her.\n\nNever have sex during her lunch break. That is when hubby is sure to stop by unexpectedly to drop something off. At this point, it's a divorce for her and an ass whupping for you.\n\nWhy are you sharing her with everyone in the office? Don't you know that if she gives out that many blow jobs, she won't have time to file your reports and make you coffee? More for them is less for you. I thought you went to business school...\n\nGeneral Knowledge\n\nNever dance with her in public. Ever.\n\nIf you are sleeping with someones wife, avoid any dark alleys, bars or parking lots as a matter of course. Bad places those.\n\nAlways use condoms. Do not trust to any birth control she uses or which hubby might have access to.Plus God help you if her husband is as much of a slut as his wife is. You'll catch something for sure. Sometimes intentionally.\n\nDo not get her pregnant. A kid is a little bundle of DNA which means 'Divorce Now Asshole' if the blood test, much less genetic test comes back wrong. Postpartum child support is a killer. I thought you were screwing her because you wanted to save money on pros and didn't want to pay the upkeep on a wife.\n\nNever park right next to each other. Park on opposite sides of a mall, and have her go through to your car. Instant excuse for 3 hours.\n\nFor the love of God, do NOT leave any marks on her! Guaranteed you'll be sporting some of your own in the near future.\n\nIf you are buying her incredibly sexy underwear (or better yet, SHE is buying it) make sure you bring it to her and you take it away with you after you are done. Besides getting gentleman points for doing her laundry, you avoid sending a nice DNA affidavit of her screwing to her husband.\n\nAlways have an extra set of clothes in your car. It will be worth the bail money.\n\nDivorce your wife before you start to sleep with someone else's. It saves time and avoids a worse shellacking at the division of assets.\n\nAlways rent a car when you are seeing the woman, particularly if you drive a unique automobile.\n\nHusbands\n\nIt might behoove you to get a DD 214 (Military records) of the husband of the woman you are about to sleep with. While you are at it, get his criminal record too. An ounce of precaution is worth a pound of nad swelling. Ask a little background information. \"Does he have any guns? How about steel toed boots? What was his size again?\"\n\nAlways know what her husband looks like. Surprises are not your friend.\n\nAlways speak in the most respectful tones regarding the husband when you are together. After all, you're fucking his wife. Show a little gratitude! He might show some mercy if you get caught.\n\nNever fuck a rich man's woman. Yes, they are more decorative, but even if he doesn't care about her, he certainly cares about his money. You have an even chance that the little gold digger you are pronging is about to drag you into some idiotic scheme which winds up with you getting fucked up the ass in a Bolivian prison.\n\n\n\nPlease feel free to use the comment section to add your own rules."
    ],
    "authorname": "FD45",
    "tags": [
        "humor",
        "adultery",
        "cheating",
        "how to",
        "cheating wife",
        "list",
        "satire"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/cheating-101-from-literotica"
}