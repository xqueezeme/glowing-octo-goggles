{
    "title": "Dawn's Anal Awakening Ch. 05",
    "pages": [
        "Dawn was very pleased with herself. \n\nHer first semester at Wheaton College was progressing very nicely. Her classes were all introductory and with a bit of time in the library, it wasn't difficult for her to get decent grades. She got along with her coursemates, and she enjoyed the newfound freedom of living away from her parents.\n\nParticularly the freedom to fuck as many cocks as she wanted, whenever she wanted. \n\nDawn, 18 year-old anal slut extraordinaire, was insatiable when it came to ass-fucking. Her roommate, Kennedy the dominant lesbian, was more than happy to indulge the blonde teen's anal desires.\n\nThe fateful first meeting had set the tone for their future interactions, which was to say that Kennedy had no holds barred access to Dawn's rectal passage and was in charge of Dawn's anal wellbeing. It was a duty that Kennedy took very seriously. \n\nEvery morning, Dawn would get up at 7 and then start eating out Kennedy's pussy while the older girl slept. She would lick and suck and lap until Kennedy woke with a squirting orgasm. Dawn would swallow every single drop of Kennedy's girl cum, sealing her lips over Kennedy's piss hole until the older girl finished her orgasm. \n\nKennedy, awake and rejuvenated from a good morning cum, would then pull out her strapon and bend Dawn over the side of the bed for a good anal reaming. \n\nTo think, Dawn had been worried that she wouldn't get good anal sex in college! She was living with a lesbian brunette who loved to inflict hardcore and intense ass-fucking on the assholes of young girls like Dawn!\n\nKennedy was living a real-life fantasy. She had been hurt, angry when her ex had suddenly broken up with her and moved out to fulfill her dreams of becoming a star. But then, the teenaged Dawn Simmons, with her perky tits, bouncy ass, and deep-seated love of anal had moved in.\n\nSomewhere, somehow, the stars had all aligned and whatever deities out there had seen fit to provide Kennedy with a younger roommate whose anal lust far outstripped Kennedy's own. While the brunette did enjoy a nice hard anal drilling from time to time, she much preferred being the one doing the drilling instead. \n\nThe sight of Dawn, panting as she spread her buttcheeks and struggling to take Kennedy's strap-on, would forever be burned into Kennedy's psyche. \n\nAnd that was just the beginning. \n\nDawn had taken Kennedy's instructions easily, obeying the brunette with little to no complaints. Kennedy forbade her from anal for three days, and Dawn had obeyed, albeit reluctantly. When Kennedy ordered her to show up to an unknown location, Dawn had also obeyed quickly. \n\nThe blonde girl had dropped to her knees for two strangers' cocks without a moment's hesitation, based purely on Kennedy's instructions. \n\nThat was an intense power trip for the older girl. None of her exes liked being ordered around but Dawn seemed to welcome it. Kennedy thought she might have pushed past Dawn's limits by torturing the poor girl's clit while she was still cumming from the rough double penetration of both nether holes by Maxwell and Winston's hard cocks, but Dawn had blown Kennedy's expectations out of the water by cumming even harder! She wasn't just an anal slut, Kennedy was coming to realize, even though anal made Dawn cum the hardest, Dawn just liked fucking. She loved cock, she loved being split open, and pain on her clit, or her tits, or her shithole, it all made her cum harder. \n\nDawn loved to be used, and used hard.\n\nIt didn't matter whether the cock was silicone or otherwise, as long as it was fucking into one of her holes, the blonde girl was happy.\n\nKennedy pondered this, wondering how to work this into their future shared sex life. The younger girl wasn't going to be satisfied with just Kennedy, and the twins weren't always going to be available.\n\nThe brunette tapped her lips with her fingers. Well, the twins were throwing a party this weekend...\n\nRAP RAP RAP!\n\nKennedy blinked, surprised by the knocking at the door.\n\n\"Delivery for Miss Simmons!\"\n\nKennedy opened the door. The delivery man gave her a bored look and handed her a fairly large package. \n\n\"Here.\"\n\n\"I'm not-\"\n\n\"I don't care, you're her roommate right? Just sign.\" The delivery man shoved the pen and clipboard into Kennedy's face. \n\nKennedy scowled, but signed it and shoved it back anyway.\n\nShe brought the package in and closed the door behind her.\n\n\"Who was it?\" Dawn asked, coming out of the shower. She was damp, her hair up in a bun, towel held loosely around her waist, her 32C tits bare in the cold air.\n\n\"Delivery for you,\" Kennedy said, setting the package down on Dawn's bed.\n\n\"Oooo!\" Dawn squealed. She bounced over, her tits bouncing as well, Kennedy was mesmerized by the way her flesh jiggled and quavered. \n\n\"It's from Eric!\" Dawn exclaimed. She started ripping open the paper.\n\nKennedy couldn't help but feel a spike of jealousy. Eric had been the one to awaken the anal slut in Dawn. He had been the one to introduce Dawn to the joys of cock and the pleasures of being fucked silly over and over and over and over again. Kennedy wished she could have been there to see the first expression of wonder on Dawn's face as the blonde girl had her very first intense orgasm. \n\n\"Oh my god!\" Dawn said softly in shock and awe. She reached into the box and pulled out ...\n\n... two double headed dildos\n\n... bejeweled anal plugs\n\n... anal beads\n\n... two remote-controlled vibrators\n\n... leather cuffs\n\n... a blindfold\n\n... a penis shaped gag\n\n... three suction cup dildos of different shapes and colours\n\n... and a bottle of lube.\n\n\"There's a note!\" Dawn breathed, pulling out the piece of paper and reading it aloud.\n\n\"Dear Dawn, I've been missing the feel of your tight holes on my cock. I must thank you for telling me all about your lesbian encounter and the double penetration experience you had. I wish I had been there to witness it. I'm relieved to know that you've found someone who can give you the anal drilling you so truly need while you're in college. Although I can't be there for you, I still want to make sure you're sexually satisfied in every way. These are gifts for you and your roommate to enjoy. I've included a gag because I know you are really loud. I hope that you're being considerate about the neighbours. Much love, Eric.\"\n\nKennedy couldn't help but stare open-mouthed at the multitude of sex-toys that had just been delivered to their room. Eric was really invested in Dawn!\n\n\"I've never had a chance to try this,\" Dawn said slowly, picking out the double-headed dildo. She gave Kennedy a shy look from under her lashes. \n\nDespite reaming Dawn's ass on a daily basis, despite seeing the blonde undressed and screaming from orgasm after orgasm, Kennedy still felt flustered at being propositioned for a double dildo session with Dawn.\n\nThey hadn't scissored yet, even if they had eaten each other out. It was one of the most intimate things lesbians did, and Kennedy didn't often do it with her exes.\n\nDawn pushed all the toys aside and leaned back on her elbows, spreading her legs. Her hairless cunt and inner thighs were already slick with juice, proof of her excitement and arousal.\n\nWordlessly, Dawn brought one head of that 20 inch long double dildo to her pink pussy lips, rubbing it up and down, spreading herself open for Kennedy to see.\n\n\"Ooooh,\" Dawn whispered, sliding the purple coloured dildo into her pussy. Her pink hole opened up beautifully, fulfilling its intended purpose of being a cocksheath, and swallowing the silicone slab of meat. \n\nThe blonde girl pumped that purple cock in and out of her pussy slowly, sliding it in and out of her squelching pussy.\n\n\"Kennedy, please, I wanna share a dildo with you!\" she begged, spreading her legs wider.\n\nHow could Kennedy resist those pleading blue eyes? Of course she couldn't.\n\nAnd to be frank, she didn't want to resist, her own cunt was starting to gush, pushing out a wave of slick in anticipation of grinding up against Dawn's pornstar cunt. Kennedy wasted no time in crawling over to Dawn and spreading her legs as well. She scooted closer to Dawn, lining up their cunts, then grabbed ahold of the other purple head. \n\nIt was thick, a decent size for a good stretch. Kennedy threw back her head and moaned softly as she eased the dildo into her sopping wet pussy. She rocked herself forwards and backwards, her cunt greedily slurping the silicone cock into her body inch by inch.\n\nDawn was looking down between their bodies, open-mouthed in naked admiration of how Kennedy's bald pussy slid so easily onto the faux dick, and how their pussies got closer, and closer, and closer until -\n\n-their cunts kissed with a loud, wet, smack!\n\nKennedy reached for Dawn's hips, pulling her forward and mashing their pussy lips together completely around the double dildo buried deep inside both of them. \n\n\"Oh gosh,\" Dawn whispered, eyes fixated on where their bodies were connected by the purple dildo. Every time Kennedy rolled her hips, their cunts would separate for a few seconds, allowing a glimpse of that thick, massive slab of silicone piercing both of their cores at the same time. Then in the next instance, it would disappear, completely tucked away out of sight in each of their front holes.\n\nDawn caught on quickly, even if she had never scissored before, she was a natural at fucking and this was no different. She swayed her hips side to side, moving one leg over Kennedy's so that they could get even closer together. She rocked forwards roughly, driving the dildo deep into their cunts at the same time, and moaned loudly. Kennedy's cunt was slick with their shared juices and her clit slid against Dawn's own, stimulating both of them at the same time. Her cunt walls were also stretched out, forced wide apart by the new invader. It was long enough to press up against her cervix, the slight discomfort making Dawn hotter than ever. Dawn moaned again, rolling her hips to grind her slick pussy against Kennedy's slit.\n\nKennedy couldn't help but grin. She pinched Dawn's nipples and twisted hard, making the younger girl yelp in pain, but Dawn didn't protest or try to get away. She just stared up at Kennedy with wide blue eyes, panting as her pussy was invaded by the purple monster. \n\n\"Look at us, our cunts are french kissing,\" Kennedy purred. She canted her hips at an angle until her pussy lips were pressed down diagonally over Dawn's pussy lips. With each clench of her cunt, her nether lips would twitch, making it seem as if her cunt was really french kissing Dawn's nether lips.\n\nDawn was completely mesmerized. She clenched her hole as well, and moaned as her pussy walls were rubbed by the dildo in her. But Dawn, teen slut extraordinaire, didn't let that distract her from 'french kissing' back using her pussy lips. \n\nThe combined slick from both their cunts made obscene wet slapping sounds as the two girls rolled their hips in unison, intent on chasing their cum peaks.\n\n\"C'mon Dawn, let's come together!\" Kennedy goaded the younger girl. She leaned over the blonde, their tits mashing up against each other, jiggling and swaying to and fro as they continued to hump onto the dildo between them. \n\nDawn pushed herself up and kissed Kennedy roughly, twining their tongues together. She pulled back for a breath.\n\n\"Let's french kiss on both ends,\" she said mischievously.\n\nKennedy laughed and nodded, leaning forward for another kiss.\n\nThey kissed with both their mouths, and their pussies, all making the same wet slurping noises. The double dildo in their holes stimulating their inner walls with glorious friction, stretching out their sensitive insides. Their holes were so open, so receptive to cock that every time their hips slapped together, the purple dildo would disappear completely from sight, forming a solid internal bridge from one young cunt to another, linking them from inside to out. Although Kennedy had lots of lesbian experience, she couldn't recall having ever done something quite like this. They were grinding, cunt to cunt, mouth to mouth, tit to tit, skin sliding against each other as they scissored frantically towards their mutual orgasm.\n\nKennedy was so attuned to the lust of the girl under her, that she knew when Dawn was about to cum. She reached between their bodies and gave Dawn's clit a hard pinch, at the same time hissing 'Cum, you little slut, cum!'\n\nThe blonde yelped in pain, her young body tensing up on the double-headed dildo. Whether she knew it or not, Dawn had subconsciously started to associate pain in her love nub with an orgasm. With a few twists and flicks of Kennedy's expert fingers combined with the horny ache in Dawn's cunt, it was easy for her to cum, and cum hard!\n\n\"Oh oh oh!\" she moaned, grinding her cunt down on the dildo inside her, forcing it deeper.\n\n\"That's it, slut, cum for me, cum like the slut you are!\" Kennedy kept up a litany of slutty affirmations, assuring Dawn that she was a young, teen, whore who loved getting her pussy and ass fucked, and that she could and would cum on any cock. \n\nDawn, flustered and aroused at having her true nature repeated over and over again, could only listen and moan, her holes twitching with every affirmation. \n\n\"I love cock, I love cock,\" Dawn panted as she rode out her orgasm on the dildo. \n\nKennedy started to pump her hips again, slamming their bodies together on the monster inside them. \n\nSLAP! SLAP SLAP! SQUELCH! SLURP SLAP\n\nTheir cunts squelched loudly at the rough fucking, each full of arousal and love for getting dicked hard.\n\n\"I'm cumming too!\" Kennedy gasped, she leaned back and let her pussy squirt its juice all over Dawn's hole and nether region. The younger girl made no protest, only watched wide-eyed as liquid spurted out from Kennedy's pink little pisshole, drenching Dawn in girl juice!\n\nKennedy moaned loudly and then slammed herself down a few more times until her cunt had stopped throbbing. \n\nThen she slowly eased herself off the purple dildo. Dawn made as if to take it out but Kennedy stopped her. She bent the dildo back on itself, backwards to touch it's cum-slick head to Dawn's asshole. \n\nThe younger girl's eyes widened in realization and enlightenment immediately, understanding what Kennedy wanted her to do. \n\nDawn raised her legs higher, spread them wider, then moaned as Kennedy forced the other tip of the dildo into Dawn's asshole. \n\n\"That's it, slut, you can do it, you can take this!\" Kennedy praised as Dawn's sphincter opened up. It, like Dawn's pussy, was meant to be a cock sheath, and it took to its job eagerly, slurping up the purple dildo with practiced ease. Dawn moaned as the purple monster was slowly forced into her anus, expanding her sphincter. \n\nKennedy admired the stretch of the pink rosebud, puffy and red as always with the amount of anal Dawn did each day. \n\nDawn's rocked back and forth slowly until at long last, the only thing left of the double ended dildo was a bridge connecting her cunt to her ass.\n\nKennedy couldn't resist pulling out her phone and snapping multiple pictures of her blonde roommate, legs spread and a long silicone cock penetrating both front and rear holes at the same time. \n\n\"Fuck me please,\" Dawn begged. Kennedy obliged, setting her phone down and using her hand to manipulate the dildo in and out of Dawn's young cunt, pulling it halfway out and shoving it back in completely again and again and again.\n\nIt didn't take long for Dawn to cum again, her anal desires winning out every time. She went into another orgasm, her large chest heaving as her cunt and asshole squeezed their occupants happily, massaging and milking like the holes of a true slut.\n\n\"I hope you enjoyed that, Dawn, because you're not getting any more anal for the next four days.\" Kennedy remarked with an evil grin.\n\nDawn, who had been relaxing in her post-orgasmic bliss, was instantly shocked into sitting up straight, the dildo still buried inside her.\n\n\"What, why?\" Dawn protested, gesturing at all of the toys.\n\n\"Well, the twins have been inviting people to their boys party on Friday night. There are going to be about 15 hot men there, and they asked if you could be the star of the night.\" Kennedy said, getting up in search of a cloth. She came back and shoved Dawn back onto her back, easing the toy from her well-fucked holes and wiping Dawn down with the cloth.\n\n\"Star?\" Dawn asked, still not quite understanding, what was she starring in?\n\n\"Yes, the star of the anal train.\"\n\nDawn's mouth dropped open, pink lips parting in surprise. \n\n\"15 men?\" she squeaked \"In my asshole?\" \n\nKennedy shoved three fingers into Dawn's pussy and curled them forwards. Dawn's pussy was starting to juice again.\n\n\"You like the idea, don't you? You want a night of anal depravity, a night of non-stop anal drilling by 15 men. Your little shithole will be used for its intended purpose - a cock sheath and a cum dump!\"\n\nKennedy punctuated each word with a wiggle of her fingers. Dawn moaned out loud. \n\nShe couldn't deny that the idea of being passed around, cock after cock slamming into her rear hole was incredibly arousing. These men would use her hole relentlessly. She wouldn't be able to stop them if she wanted to! Well, not that she wanted to. If one man could fuck her through three or four mindblowing orgasms, then 15 men could give her 15 times as many!\n\n\"What do you say, Dawn?\" Kennedy asked.\n\nThere was only one answer Dawn could give.\n\n\"Hell Yeah!\"\n\n--\n\nThe four days leading up to Friday were not pleasant for young Dawn Simmons. The 18 year old loved having her shitter filled. After months of frequent anal, it was strange to leave her asshole empty. Like the previous anal ban, Kennedy tried to make up for it by giving Dawn's pussy a lot of attention. \n\nAnd just like the previous anal ban, it wasn't quite enough. There was still an ache in Dawn's bottom, a yearning to have a thick cock shove its way inside and ream her pert ass out. \n\nWhen Friday night rolled around, Dawn dressed in her sluttiest outfit - no bra, no panties, her shirt knotted just under her large tits, and a skirt that barely skimmed the bottom of her asscheeks. She headed to the twins' apartment, full of nervous anticipation of getting reamed in the ass by 15 different young men.\n\nKennedy opened the door for Dawn, pulling her into a filthy kiss to the catcalls of Maxwell and Winston.\n\nThe older girl wasted no time in pulling Dawn into the spare bedroom and then yanking Dawn's shirt open to expose her perky tits. \n\n\"You look so good like this,\" Kennedy whispered against Dawn's lips. She slid one hand down and frigged Dawn's pussy hard, making the blonde girl gasp.\n\n\"Now, before they start arriving, I think we're going to put these few toys to good use.\"\n\nKennedy held up the leather cuffs and the blindfold.\n\nDawn looked at her doubtfully.\n\n\"Are those, really necessary? You know I'm going to be a good little anal slut, right?\" she asked, feeling a little insecure.\n\nKennedy patted her hair and kissed her gently.\n\n\"Of course, I do. I just love the idea of you restrained, blindfolded, not knowing the identities of the cocks you're taking up the ass. Wouldn't it be exciting? Walking around campus and not knowing which of the boys had taken your shithole and pumped it full of their sperm? It would be interesting, wouldn't it?\"\n\nDawn couldn't argue with that. How would it feel like to be so helpless at the mercy of so many men? Each of them would know that they fucked her ass, fucked her mouth, came inside her little bottom. But she wouldn't know them, wouldn't recognize their faces. \n\nAt any given time, the men she was talking to on campus could have been the one to ram their dicks deep inside her rectal cavity. They would know how her hole felt, clenching on their cocks, know how she looked as she came helplessly from anal sex. ",
        "They would know she was an anal slut.\n\nAnd she wouldn't be able to do anything about it.\n\nThe thought excited Dawn more than she thought was possible.\n\n\"You'll be here, right?\" Dawn asked, still feeling a little insecure. Kennedy nodded and gave her a lingering kiss.\n\n\"Of course. I won't be taking part this time, but I'll stay to make sure they play nice,\" Kennedy reassured the 18 year old.\n\nDawn nodded.\n\n\"Okay, I'll do it!\"\n\nKennedy sat Dawn down on the bed on a towel to soak up her pussy juices. She stripped the younger blonde out of her clothes, then gently pulled Dawn's hands behind her. The brunette gently buckled the leather cuffs around Dawn's slender wrists, making sure that they were not too tight. Then, she carefully slipped the blindfold over Dawn's eyes to ensure the younger girl wouldn't see anything.\n\n\"Wait here, alright? I'll come and get you for the main event afterwards.\"\n\nWith that, Kennedy slipped out of the room to help get ready for the party.\n\nDawn sat in the room alone, shivering a little in the cool air. If she was not blindfolded, she would have seen goosebumps rising on her supple skin. She could hear people arriving outside, guys exchanging excited 'Hey bro!'s and 'My man!'s as they came in. There were sounds of cutlery, someone starting up the television to play videogames, and the delicious smell of pizza. \n\nThe horniness in Dawn's bottom increased with every new voice, she could hear people cracking open beers, ribbing each other about classes, even if she couldn't hear their names. To think, all those guys out there would soon be fucking her ass!\n\n\"Guys! Listen up! So the twins asked me to bring my roommate as a little treat for everyone.\"\n\nThat was Kennedy's voice! Introducing Dawn as the main attraction tonight!\n\n\"Now my roommate, she's a huge anal slut. She loves getting fucked in the ass and she would love for every single one of you here to blast her shitter full of cum.\"\n\nThere was a stunned silence following this proclamation.\n\n\"Now, remember the no names rule? It's because she's blindfolded. She doesn't know any of you, but you'll know who she is. Before we start, I have a couple more rules. One. Her pussy and clit are off limits. Alright? You can slide your cock between her cunt lips cause she gushes like a fountain and you can use her slick to lube your way into her tight asshole, but aside from that, no cocks in her snatch, understood?\"\n\nA murmur of 'Yes' and 'Sure' ripples through the captive audience.\n\n\"Two is that you'll cum inside her ass. Use her mouth and tits however you like, but cum in her ass. She loves it.\"\n\nDamn right, Dawn loved it!\n\n\"Without further ado, I give you, Dawn Simmons!\"\n\nThe door swung open and there was a brief silence before someone said 'Holy shit' in the background.\n\n\"You're serious?\" a dude shouted.\n\nKennedy came over and took a hold of Dawn's elbow, guiding her up and out towards the living room where she stood, unable to see but able to feel the weight of the stares of many horny men on her curvy body.\n\n\"Say hi, Dawn. Tell them what you are.\"\n\nA shiver of excitement ran down Dawn's spine.\n\n\"Hey guys,\" she bit her lip, swaying in a shy manner. \"I'm Dawn Simmons. I'm an utter anal slut who loves getting my asshole reamed. I love it when cocks pound my hole until it gapes open and I love getting my anus glazed with cum. I'm looking forward to being pounded by your cocks tonight! Please fuck me hard!\"\n\n\"Oh wow,\" someone said to Dawn's right.\n\n\"Well, I don't mind if I do,\" Someone else muttered. Dawn drew a sharp breath when two large hands started to massage her tits sensually. A mouth descended and latched onto her right nipple, teeth grazing over the sensitive nub while fingers rolled and pinched her left nipple.\n\n\"Oh gosh, she's so wet!\"\n\nA finger slid up the inside of Dawn's thighs. She moved her legs apart to give them better access. The same finger swiped down her cunt, gathering her juices and then smearing them all over her asshole.\n\nWhomever it was wasted no time, jabbing his finger right into her unprepared shitter. \n\nDawn's anus, tightened from days of not being fucked, was quickly reminded of its intended purpose. She gasped at the sudden sting, a stream of juices oozing from her bald pussy.\n\n\"This ass is well-fucked,\" one of the guys remarked. A large hand found its way to her pert buttcheeks, spreading them. From somewhere, Dawn could hear the shutter sounds of a camera and her pussy creamed even more. After tonight, more people would have these pictures of her, eagerly offering up her ass to cock in hopes of a good anal orgasm. They would jerk off to those pictures, probably, jerk off and fantasize about fucking her shithole again. Dawn loved the idea.\n\nHands guided her in stumbling steps towards the sofa. Dawn bent over the back of it obediently. A cock slapped at her mouth. Dawn parted her lips and sucked the head into her mouth immediately, licking at the bulbous head and pressing her tongue into the slit. Someone else came up beside her. She could feel the heat radiating from him. The newcomer poked his cock against her soft cheek and started rubbing it along her jaw as she sucked off the one in her mouth.\n\nMeanwhile, there were three, maybe four people gathered at her bottom. One was busy keeping her asscheeks spread, another gathering slick from her pussy, which was a fountain of arousal by now. Someone was licking at her rim while another kissed the back of her knees.\n\n\"Open up slut,\" someone singsonged. Dawn's asshole twitched as something large and hard was pressed against it. She gasped around the cock in her mouth. \n\n\"Ohhhhh!\" she moaned, unable to contain her relief at finally getting her asshole penetrated after four days of no anal.\n\nThe cock, pleasantly large and thick, was slowly but surely plumbing the depths of Dawn's bowels. Its owner moved in short, shallow thrusts, intent on getting balls deeps before starting a good solid drilling.\n\nDawn pushed her hips backwards, enjoying the sensation of her anus being forced open, gasping as her rectal walls were rubbed by the thick head of the cock. \n\n\"I've never met an anal slut,\" someone remarked \"You lucky bitch, you stay with this teenage wet dream and she begs you to fuck her ass every night?\"\n\nKennedy replied with a very smug 'Yup!' then went on with \"You all are lucky I'm sharing her with you for tonight.\"\n\nA chorus of 'thanks' went up around the room, but Dawn wasn't really paying attention anymore. She was focused on the cock in her ass, which had started to pump her bottom with steady, firm thrusts. Their hips came together with loud smacks that resounded through the room. Not to mention, there was a tasty and delicious dick in her mouth. The men in front of her took turns to use her orally, thrusting deep between her pink pouty lips, then withdrawing to let the other do the same. Every time she swapped dicks, the other would rub all over her face, up against her ear, on her cheeks. She could feel precum and saliva on her skin, but Dawn wasn't too bothered. That was what showers were for, right?\n\nA cock slipped between her bound hands. Dawn instantly curled her fingers and formed a loose ring for the guy to fuck her hand. \n\n\"Got any lube?\" The guy asked.\n\n\"Just use her pussy slick, there's enough of it,\" the guy fucking her ass said. \n\nThe cock in her ass and her hand withdrew for a moment. Dawn felt the dick slide between her pussy lips, teasing at her front hole for a moment. Her cunt gushed immediately, covering the cock in her juices. \n\n\"Oh geez look at her go!\" someone said in awe. Dawn flushed, feeling embarrassed and proud at the same time. The cock sawed back and forth a few more times until its owner deemed it well-lubed enough, then returned to Dawn's hands for a handjob. Another dick slid between Dawn's thighs. This one rubbed all over her inner thighs and her labia, gathering up the slick, then slammed all the way home into her tight asshole in one powerful thrust!\n\n\"Ahhh!\" Dawn squealed. It was definitely a different cock, judging by the drilling technique. This man thrust at a downward angle, meaning he was a little taller than the previous man. He pumped his hips roughly without rhythm, intent on getting a solid dicking into Dawn's hole.\n\n\"Gonna make you remember my cock, slut,\" the man taunted. Dawn could only sob her agreement as yet a different cock came over and forced its way between her lips.\n\nDawn was in heaven.\n\nA cock splitting her ass open at the seams with a rough drilling, solid dicks taking turns to fuck her mouth, the promise of a minimum of 15 cumloads in her horny cock-loving rectum, what wasn't to love? \n\nThe intense scrape of cock through her rectal walls was an on switch for the pleasure centre of Dawn's body. The numerous nerve endings along her anal passage were lighting up repeatedly, sending mind-numbing signals to her brain. She was being fucked stupid and there was nothing she could do about it! No, she could only succumb to the callous treatment of her cum-dump hole and cum hard on the cock!\n\nDawn moaned as her first anal orgasm of the night rolled through her body. Her hole clamped down hard on the cock currently pounding it, squeezing, spasming and convulsing. Her chest heaved up and down, large tits swaying under her as she choked on the cock in her mouth. The guy who was fucking her face pressed in deeper, his cockhead flush with the back of Dawn's throat. Her throat, perhaps finally having caught up to the fact that Dawn's purpose in life was to please cock, opened up and allowed the man to bury his thick rod inside her throat and press his pubic bone up against Dawn's cute nose.\n\n\"She's cumming!\" someone shouted, sounding delighted.\n\n\"Of course she is, she's an anal slut!\" Kennedy hooted, clearly pleased with Dawn's performance. \n\nDawn, filled with cock on either end, could only shudder and shiver through her anal cum, moaning as waves of pleasure crashed through her young body, starting from her eager cock-hungry shithole and radiating outwards through every fibre of her person.\n\n\"Her throat's fantastic too!\" the man exclaimed. \n\n\"Let me try!\"\n\nHe pulled out and stepped aside. Dawn turned her head this way and that, thrown off by the sudden lack of dick to suck.\n\nShe didn't have to wait long. Strong hands grabbed the back of head, tilted her face up and then there was another cock sliding past her lips and deep into her throat. The man didn't bother to fuck her hard. The other guy fucking Dawn's ass was pounding her bottom so hard that each thrust would force her forwards, pushing her throat directly onto the cock of the man in front of her. \n\nDawn never thought being throat-fucked would turn her on so much, but the way she was becoming nothing but a cock-sheath for these men was a huge turn on. The guy in front of her was just using her throat to masturbate while waiting for his turn to paint her rectal walls with his white spunk!\n\nThe cock in her mouth withdrew and was quickly replaced with another.\n\n\"Fuck, I nearly came!\" someone groaned out loud.\n\n\"No cumming unless it's inside her anus!\" Kennedy reminded all of them \"We can have a separate cumshot party in the future.\"\n\nDawn's mouth was too occupied for her to say anything, but she felt her pussy juice even more at the concept. She would love to see what she looked like after that particular party. If there were 15 of them, maybe some would cum in her ass, and others would cum over her tits, her face... or maybe Kennedy would get more men in here and Dawn could ride a suction cup dildo while all the men took turns spraying their cock juice all over her! She loved the feeling of cum sliding down her forehead, slightly warm, gooey and so delicious when it reached her mouth!\n\nThe guy fucking her ass slammed his hips against Dawn's hips several times, then pulled out. There was a whoop of delight from the men watching as Dawn's hole winked at them, inviting their cocks inside. \n\n\"Look at it!\" someone crowed. In the next second, there were fingers hooked in Dawn's asshole, tugging at her rim and stretching her out to maximum capacity.\n\n\"Get a light in here!\"\n\n\"I've never seen a girl cum from anal alone -\"\n\n\"Her hole's still twitching-\"\n\nDawn waggled her ass side to side, desperate to be filled again. \n\n\"Damn, she's so slick!\"\n\nThe cock in her mouth was also withdrawn, and Dawn felt the plastic rim of a bottle press against her lips.\n\nShe gulped at the water, some of it escaped her mouth and ran down her chin, dripping onto the couch but no one seemed to care. The moment Dawn was done with the drink, a cock was back inside, rubbing up against the soft insides of her cheeks. \n\nHands were massaging her buttcheeks. Someone spanked her roughly, which prompted a few slaps from everyone within reach. The fingers in her asshole withdrew and a cock slid between her pussy lips again. The man fucked her thighs for a moment then slapped his cockhead on Dawn's gaping asshole.\n\n\"Clench up, slut!\"\n\nDawn obeyed as best as she could, tightening her anal muscles. The moment she did, the guy plunged his cock in deep. \n\n\"Fuck yeah!\" he growled, snapping his hips back and forth, driving his rod deeper and deeper into Dawn's clenched hole. Dawn moaned, the friction of that thick rod sawing into her ass was unbelievable! It scraped into her, then scraped outwards, the cockhead catching on her rim, it felt like she was being turned inside out!\n\n\"She's so open-\"\n\n\"What a slut-\"\n\nAll the while, there were click clicks of the camera, and Dawn could hear people still eating, or drinking their beers while they waited for their turn at her asshole. \n\n\"Tighter!\" someone shouted, smacking Dawn's ass. Someone grabbed her tits and pinched her nipples roughly, twisting them. She squealed, body tensing even further. \n\nThere was a chorus of appreciative groans from behind her as her asshole tightened even further on the cock fucking it!\n\n\"That's the hottest thing I've seen,\" a guy said in almost a whisper. There were a series of agreements. Knowing that all those men were staring at her slutty hole, twitching as it swallowed cock repeatedly, it was enough to drive Dawn into her second anal orgasm of the night. \n\n\"Unnngh!\" she moaned around the cock in her mouth, hole starting to spasm again.\n\n\"Woah she's cumming again!\" \n\nThe cock in her ass was yanked out in a hurry, replaced by fingers that stretched her wide open. \n\n\"Someone get a light in here!\"\n\n\"Oh wow, look at it-\"\n\n\"So that's what an anal orgasm looks like!\"\n\n\"Fucking aces-\"\n\nThe guys commented as they watched Dawn's hole try to milk and squeeze a cock that wasn't there! She whined loudly in protest. Her spasming hole felt incredibly empty and cold, making her orgasm feel flat and unsatisfying! It was a very uncomfortable feeling that could only be solved with a good hard fuck! \n\nShe pulled away from the cock in her mouth.\n\n\"Nooo guys! Fuck meeee! Fuck my ass! Don't leave it empty please!\" she begged. She wanted to cum and she wanted a hot, thick cock buried balls deep in her rectum while she did it!\n\n\"Sorry,\" someone said and in the next second, the itch in her hole was immediately soothed by a thick cock being hilted into her rectal cavity.\n\nElectric tingles raced up Dawn's spine, starting off a mini-cum. \n\n\"Guh\" she moaned, mouth opening. The guys in front of her poked two cocks into her mouth at once, content to let her lap at their cockheads while their friends fucked her ass. \n\nPump pump pump, switch, thap thap thap, switch. There was a veritable revolving door of dick at her rear entryway. Sometimes when a new cock came and pushed into her mouth, Dawn could taste her pussy juices and her ass juices on it, meaning that it was one of the men who already had a turn with her shitter. \n\nPretty soon, all the cocks started to taste of her own rear fuckport, every guy having had a go at drilling her shithole. Dawn lost count of how many times she came. Her hole was starting to feel a little sore, but her pussy was still pushing out wave after wave of slick, a signal that she was still craving more and more anal. It didn't matter how many times she was fucked in the ass. As long as there was a cock stimulating her rectal walls, the horny ache would build and build and build until Dawn came!\n\nThe cocks all blurred together. Dawn no longer knew which one belonged to which man, no longer had the presence of mind to try and classify them by fucking style. She only knew that she was being thoroughly drilled and that knowledge was enough to satisfy her. \n\nAll of a sudden, Dawn was pulled upright, dragged to somewhere, and made to sit down on a thick rod. She moaned as her weight pulled her down onto it and then spread her legs to show her audience her pornstar cunt.\n\n\"Amazing-\" \"Incredible-\" \"So hot-\"\n\nStrong hands grabbed her by the ankles, keeping her legs up and out in a spread out V shape.\n\nThen she felt someone move closer.\n\n\"No pussy fucking!\" she panted our as a reminder to the dude.\n\n\"I know,\" he said. \n\nDawn only had a split second to wonder what he meant, then realized what he was going to do! But her hands were bound and her legs were being restrained, there was no way she could escape!\n\nTwo strokes of his cock against her sopping wet slit, and the man was pushing the head of his cock against Dawn's sphincter.\n\nRight next to the cock already in it.\n\n\"Nnnnghhh!\" Dawn cried out as her shithole resisted the second intruder! One thick cock was doable, but two?\n\n\"C'mon, you're an anal slut, right? All anal sluts do double anal!\"\n\n\"Yeah! If you're an anal slut you should be able to take two cocks in one hole!\"\n\n\"I can't!\" she gasped. \n\n\"You can!\" the guy currently assaulting her shitter exclaimed \"Just relax and it'll be fine!\"\n\nDawn, helpless, couldn't do a thing to stop the slow insistent progression of a second dick into her shithole. \n\nHer hole, well acquainted with cock and well used to fucking, started to stretch a little, then a little more, then a little more... but it wasn't enough.\n\nAll the while, there were words of encouragement from the men watching. \n\n\"You can do it!\" \"C'mon slut!\" \"Almost there, Dawn!\" \"You're a great anal slut!\" \n\nA few more guys tried to help, massaging her rim to help her relax, teasing around her labia to take her mind off her shitter, and holding her firmly in place so she wouldn't be able to move. \n\n\"Just a little mo-!\" the guy groaned, shoving his cock hard against Dawn's taut hole.\n\nHe drew back and stabbed forward.\n\n\"AAAAH!\"\n\nDawn squealed! \n\nHer shitter, tired of resisting, had simply given up and opened for the second cock! \n\nThere was not one, but two cocks currently invading her rear fuckport! Her rim was stretched to breaking point. She was so open, so vulnerable, and so helpless. \n\n\"Fuck that's tight!\" the guy cursed, but he thrust shallowly, pushing in another tenth of an inch. The man under Dawn gave her a little bounce, bringing her hole down on their cocks. \n\n\"Guh!\" Dawn said, anal pleasure ripping through her body. The burning stretch of her hole was similar to her first painal experience with Kennedy. She had cum so hard then, what was stopping her now? The answer was of course, nothing.\n\nAnal sluts like Dawn could take anything up their asses and still cum from getting their holes destroyed. \n\nIf one cock in her ass was already sending electric tingles up Dawn's spine, two were a high voltage input constantly jolting every part of her body with pleasure. She shivered and shook with every shift of the men's dicks in her. Every thrust of their cocks into her young and vulnerable shithole was a step up the ladder to anal nirvana. Even if Dawn wanted to turn back and try to be an innocent young woman, she was too far gone. Anal was her passion and there was no going back!",
        "\"Cum, slut, cum!\" Kennedy shouted from somewhere else in the room and Dawn did!\n\n\"Nnnnngh!\" she screamed as her hole started to squeeze again. Her chest heaved as she gasped for breath, trying to comprehend how the pain of being stretched to her limits could feel so good!\n\n\"Fuuuuck!\" \"oh my gosh\"\n\nIt was a common sentiment. Dawn couldn't really believe it either. \n\n\"What are you doing, Dawn?\" Kennedy snapped.\n\n\"Cumming on two cocks!\" Dawn panted, trying to control herself but failing miserably. Her hips were moving on their own, pushing down on the invaders in her ass.\n\n\"What are you, Dawn!\"\n\n\"I'm an anal slut and I'm cumming on two cocks! I'm cumming from being drilled in the ass by two cocks!\" Dawn wept as pleasure swept through her lithe body.\n\nThe men, encouraged by her enthusiasm and obvious enjoyment of their anal attack, thrust in unison. They began pounding her shitter like it was the end of the world and this was their last chance to fuck a hot teen dream's willing asshole. \n\nDawn's asshole yielded as the men pounded, surrendering to being abused in such a callous fashion. She slammed her hips downwards over and over again, not caring that she was going to be sore tomorrow, riding out the marvelous sensations coursing through her body.\n\nWave after wave of pleasure crashed through her, all stemming from one focal point: her abused asshole. She rode those waves like a champion surfer, enjoying each one, letting go of her control and simply allowing the men to hold on to her while she convulsed wildly with anal joy.\n\nAfter what felt like an eternity of anal delight, Dawn was sagging, breathless and sore as hell. \n\n\"Let's get her into the anal train position.\" Kennedy said.\n\nDawn, dazed from being double dicked, was subjected to the torturous sensation of her rectal cavity being vacated again.\n\nSome of the guys shifted the furniture and then picked Dawn up, setting her down in the middle of the living room with her head down and her gaping asshole pointed upwards. Dawn, exhausted from all the orgasms she had throughout the evening, just laid her cheek against the carpet and tried to catch her breath.\n\nLarge hands grabbed her buttcheeks, spread them, and then a cock plunged downwards into the depths of her bowels.\n\nThe man fucked her hard and fast, not caring if Dawn enjoyed it or not. The double anal had left her a little too loose to enjoy the cock in her, but she was too sore and too tired to clench up. \n\nShe moaned as the first man mashed his hips up against her bottom, then grunted his release. \n\nOne, two, three spurts into her ass. Dawn could feel the warmth of the cum in her abused rectum, a sensation that she sorely missed. \n\n\"Count the cumloads, Dawn!\" Kennedy ordered.\n\n\"One cumload!\" Dawn counted dutifully.\n\nThe cock was swiftly replaced with another. Like the first, he didn't bother with trying to fuck another orgasm out of Dawn's anal passage. He pounded into her rectal cavity like she was a fleshlight and he was in a hurry to jack off before his date.\n\n\"Fuuuck!\" he grunted and Dawn was treated to another gush of cum into her sore hole.\n\n\"T... two cumloads!\" Dawn said out loud again, pleased to hear Kennedy praise her with a 'Good anal slut!'\n\n\"Three cumloads!\" Dawn called out as the third man jackhammered her shitter and pumped his sperm into her bowels.\n\nIt was sort of meditative, really, Dawn thought. The feeling of cock sliding in and out of her sore hole, followed by hot gooey cum coating her inner walls. The hot jizz that the men sprayed onto her insides soothed the ache of being fucked so roughly the whole night.\n\nOne by one, the men came and paid their homage to Dawn's slutty shitter, Dawn calling out each one until she finally reached the last.\n\n\"Fifteen cumloads!\" Dawn said as the final cock withdrew from her ass. Her hole twitched in the cold air, open like a mouth of a baby bird. Only this baby bird had been fed well and fed thoroughly!\n\n\"Good job!\" Kennedy praised her. \n\nDawn sighed in relief. She had satisfied all the men successfully and gotten so much anal pleasure out of it! \n\nThere was only one problem. \n\nShe couldn't get up.\n\nHer hole was still gaping. If she stood up, the cum would slide out and she hated that. Not to mention, it was rude to get cum all over the carpet!\n\n\"Kennedy? Can I get a plug? So I can get up?\" she asked.\n\n\"Nope! Not yet, you're going to stay like that until they've all gone!\" Kennedy chirped. Dawn gasped in outrage. She had half a mind to just stand up, but that wouldn't be fair to Maxwell and Winston, who had been kind enough to host the party. And it would be rude to just release the presents that their friends had been kind enough pump into Dawn's ass. \n\nShe had no choice but to stay in her head-down-ass-up position, wiggling her butt from time to time as the men got dressed to leave.\n\n\"Had a great time! Let me know when's the next party!\" \n\n\"Love the slut, wish I had one.\"\n\n\"Can I get her number?\"\n\n\"Next time, I wanna host!\"\n\n\"Next round of beer's on me!\"\n\nDawn heard the door open and shivered as a draft of cold air blew in. The guys gathered at the doorway, saying their goodbyes, completely uncaring of the fact that Dawn was still ass-up in the living room and that anyone walking by outside would catch an eyeful.\n\nThough, to be fair, at this point, Dawn felt too fucked out to care either.\n\nShe waited impatiently until the voices dwindled and the door closed.\n\nA cold hard metal surface pressed against Dawn's sphincter. Dawn moaned as it slide into her rectal cavity easily, lubricated by 15 loads of spunk. Her asshole stretched out around the flare of the plug and then managed to settle around the narrow base. \n\nKennedy undid the leather cuffs and massaged Dawn's hands to get the blood going again. Then she removed the blindfold.\n\nDawn blinked, trying to get used to the sudden brightness of the room. \n\nMaxwell and Winston were grinning at her, both nursing their beers. \n\n\"Great performance, Miss Simmons,\" Maxwell said.\n\n\"Yeah, you should sell tickets next time,\" Winston agreed.\n\nDawn flushed at their praise. She got up on unsteady legs, relishing the soreness of her anus. She followed Kennedy to the bathroom and got into the bathtub. Kennedy stripped off as well and got in alongside Dawn. The older girl grabbed the body wash and squeezed out a good amount onto her palm, then used it to work up a lather on Dawn's skin. \n\n\"Mmmngh\" Dawn moaned as Kennedy mashed their chests together, their slippery tits moving against each other sensually.\n\n\"Down, girl, that's enough.\" Kennedy warned with a grin.\n\nShe made sure to clean between Dawn's legs, wiping carefully around Dawn's pussy and the plug firmly embedded in that pert ass. The only visible evidence of the drawn out ass-fucking was the redness and puffiness of Dawn's anal ring. \n\nAs soon as Kennedy deemed Dawn clean enough, she drew the younger girl out of the shower and helped her back into her short skirt and her tight shirt. \n\n\"Thanks for hosting, guys!\" Kennedy called out to Maxwell and Winston as she collected their toys back into her bag, and then guided Dawn out of the apartment.\n\nThey walked, or in Dawn's case - limped, back to their shared dorm. Kennedy kept one hand on the back of Dawn's skirt, lifting it from time to time to show off the bejeweled plug nestled firmly between Dawn's asscheeks. Dawn kept swatting at Kennedy's hands in exasperation, but she actually didn't really mind that much. After all, what was one more person knowing of her slutty nature?\n\n\"I'm going to sleep for a hundred years,\" Dawn sighed as they reached their room.\n\n\"Oh no you won't, little slut,\" Kennedy said affectionately, giving the younger girl a peck on the cheek as she opened the door. \"You'll be up early as always begging for my dildo in your holes\"\n\nDawn flushed because it was true. \n\nIn her heart, she knew that despite the good, long, hard anal gangbang she just experienced, she would always want more. Her anal cravings would never abate. She would always need a hard cock in her ass.\n\nAnd Dawn, 18 year-old anal slut, was completely fine with that.\n\n--\n\nSTILL NOT THE END. I won't have time to write till January. Until then, please use this to tide you over."
    ],
    "authorname": "kinkbugs",
    "tags": [
        "bdsm",
        "bisexual",
        "gangbang",
        "lesbians",
        "light bdsm",
        "multiple orgasms",
        "scissoring",
        "tribbing"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/dawns-anal-awakening-ch-05"
}