{
    "title": "Business or Pleasure?",
    "pages": [
        "Chapter One\n\nI saw her the first time at the bagel shop. It was the briefest of encounters, a quick \"excuse me\" from me, as I slipped past her to take my purchase to the register, then another moment as I held the door for her as we both left the shop and headed to our cars. \n\nTwo hours later, when I could grab a couple of minutes at my desk between meetings, I was still thinking about her, about her smile, about the way her crimson silk blouse molded itself to her body, about the way her brilliant white teeth and red lipstick contrasted with her dark skin, about the way her heels clicked on the floor as she walked. Work being what it was, I was distracted soon enough, but my thoughts returned to her more than once during the day.\n\nI'm no kid. I'm not prone to infatuation the way I was in my teens, or at least I didn't think I was. But the next morning at the bagel shop, I ordered my bagel then sat down at a table.\n\n\"Hey, Mr. H, taking it easy this morning?\" asked the young guy who ran the store when he brought my breakfast to the table. \"You're usually in and out.\" \n\n\"Yeah, Rory, trying to slow down and smell the coffee,\" I said.\n\nHe snorted. \"That'll be the day.\"\n\nHe knew me too well. It was rare that I sat down at a table to eat in. Today, I tried to tell myself it wasn't to allow more time to see if she came, but even I only half believed it. \n\nAbout ten minutes later, bagel gone along with my pretense of slowing down, I grabbed my coffee and started toward the door when who should I spot walking in from the parking lot. I took just a second to check my reflection in the dark glass of the bagel shop windows, tugged my cuffs down over my watch and buttoned my blazer before I met her at the door. She had something of a frantic air about her today, like she was a little late.\n\n\"Good morning,\" I said, as I held the door for her again. \n\nThat earned me another one of those brilliant smiles and mumbled thanks before she was gone. \n\nAs I walked to my car, I replayed the contact in my mind. Was that smile recognition? Did she remember me from the day before? And then, as I realized what I was doing, I just shook my head and laughed at myself. Here I was, sixty-one years old, CEO of the company I founded and had run for the last twenty-odd years and I was behaving like a teenager. Or worse, I thought wryly, a lecherous old man. \n\nI own an advertising agency called HSDO Advertising. The \"SDO\" referred to a group of partners whose companies I bought out in the early days, but who have long since gone their separate ways. The \"H\" refers to me, Collin Halloran. Advertising has been good to me. The work has supported me and my family comfortably and put two kids through college, but the idea that some people have that \"because you own a business, you're rich\" makes me laugh - they act like you're on easy street, no worries, be happy. Those people have never met a payroll, never faced down a big bank loan or faced a major crisis before you got to your desk. \n\n\"Collin, we've got to talk.\" The ominous words came from Bill Beatty, who would be my number two guy if he ever could figure out how to solve problems without involving me. Bill was in his mid-thirties and his work was outstanding. Clients loved him, he was always alert to new opportunities, made more than his share of sales. But put a significant obstacle in his way and he forgot how to think. He intercepted me just as I got off the elevator at our floor of offices in the downtown high rise that had been home to HSDO for 10 years.\n\n\"OK, Bill. Let me get some coffee and take my coat off.\" \n\nFive minutes later, Bill was in my office, wringing his hands and looking like he lost his best friend. \n\n\"OK, so what's going on?\" \n\n\"You know we have a crew in Tallahassee this week, shooting commercials for Florida State?\"\n\n\"Yes, of course.\"\n\n\"Well, one of crew members showed up drunk, and got arrested by campus police for DWI. Now campus police is telling us the whole crew is banned from campus and they have the grip truck impounded.\"\n\n\"Jesus Christ, that's a problem.\" The grip truck was a big cube truck chock full of lights, C stands, reflectors, flags, sound blankets - all the stuff needed to shoot a commercial. \"Who is the crew member?\"\n\n\"A grip named Spike.\" \n\n\"Spike? Who the hell is he?\"\n\n\"He's a local, apparently.\"\n\n\"Was he in an accident? How did they figure out he was drunk?\"\n\n\"Not clear. No accident that I know of.\"\n\n\"Ok, first things first. Who have you talked to at Florida State?\"\n\n\"Sharon O'Dell in Mar-Com, and this guy,\" Beatty referred to some notes, \"George McDonald who is head of Campus Safety - that's what they call the campus cops.\"\n\n\"What did they say?\"\n\n\"Sharon seems to be powerless to do anything. She's completely intimidated by Campus Safety. And this McDonald guy is just being an ass. Won't budge. Says the truck is 'evidence.'\"\n\n\"Well, you know my rule?\"\n\n\"Huh?\"\n\n\"Never be too surprised when a cop acts like an asshole.\" \n\n\"Oh, that rule. Yeah, I've heard that before.\" \n\n\"OK. Do you have McDonald's number?\"\n\nBeatty pulled a sheet out of his notebook, and copied a number to it.\n\n\"Thanks. While I'm on the phone trying to talk some sense into him, will you call Sharon and tell her we're on it, and we'll get back to her shortly?\"\n\n\"OK, boss, will do.\" Beatty started to leave my office.\n\n\"Wait, Bill,\" I called to him as he disappeared through my door. \"I thought Letourneau was bringing his own crew with him?\"\n\n\"He apparently decided to hire local crew to save money.\" \n\n\"I seem to remember having this conversation with him and deciding to pay more to have crew we could rely on. Am I imagining that?\"\n\n\"No. I remember that, too.\"\n\n\"Then that is not cool. Do you know if that got into the contract?\"\n\n\"I don't know but I have the contract on my desk, I'll check.\" Beatty started to leave again. \"Oh, one more thing. In addition to the production schedule being totally blown up, the crew is threatening to find other gigs if they're not getting paid.\" \n\n\"OK. Buy us a day by telling the crew we'll pay them their usual rates for today. And call Phil Letourneau and make sure everyone else on that crew is sober.\"\n\n\"OK. Will do.\"\n\nFive minutes later, I was talking to George McDonald, the head of Campus Safety. I had looked him up online and was able to learn that while his title is \"Director\" he fancies being called \"Chief.\"\n\n\"Chief McDonald? This is Collin Halloran, from HSDO Advertising. We're the advertising agency of record for FSU.\"\n\n\"What can I do for you?\"\n\n\"Well, chief, we have a problem, and I'm hoping you can help.\"\n\n\"You certainly have a problem,\" he said \"We're very unhappy that you brought a drunk onto our campus and put our students at risk.\"\n\n\"Well, to be honest, Chief, I'm pretty unhappy about that, too. The production company we hired for this work was supposed to bring reliable crew with them, but they seem to have hired a couple of guys locally and this grip was one of them. I apologize for his behavior. Obviously, if I had known he was drunk, I would have never let him come on campus. But you know how it is Chief - you hire people and expect them to do their jobs and sometimes they disappoint you.\" \n\n\"I hear you, but I'm not sure how that affects the current situation.\"\n\n\"Well, Chief, I was hoping you could reconsider your decision to ban the rest of my crew from campus and release the grip truck from impound so we can get our work done.\"\n\n\"Why would I do that?\" There was a note of hostility in McDonald's tone that didn't surprise me. \"You people come down here and think you can do whatever you want with no regard for our rules. It's my job to draw a line.\" \n\n\"Chief, I'm sorry to hear that. When Jim Edwards hired us, he put his faith in our ability to help restore FSU's brand after those tragic shootings last year.\" Edwards was the FSU president, who was in the midst of a valiant PR battle to reassure parents of prospective students that FSU was safe after a lunatic shot four students last year in the library. \"I'd hate to have to tell him that our efforts are being derailed because of the actions of one irresponsible person.\" \n\nMcDonald was silent for a moment. I was hoping he was pondering just who was being irresponsible.\n\n\"I certainly don't want to get in the way of that effort,\" McDonald said. \"But if I hear one more report of your people acting irresponsibly...\"\n\n\"You won't chief, don't worry. Thanks for helping us out. We appreciate it, and I'm sure President Edwards will appreciate it as well. Where do I send someone for the truck?\" \n\n\"Just tell them to come to my office. That's a big truck - the tow was expensive - like three hundred bucks.\"\n\n\"We'll pay it, no problem.\"\n\nFor the last couple of minutes I was on the phone with McDonald, Beatty was standing in my doorway with what looked like a copy of the contract in his hand. \n\n\"OK, Bill, we're all set with McDonald. The crew is free to go on campus and get started. Send someone to McDonald's office to liberate the grip truck. Is that the contract with Letourneau?\"\n\n\"Yeah, and we did call it out specifically in the fees section.\"\n\n\"OK. I can deal with him later. Let's make sure he gets the message that any more drunks on his crew and I'll hold him responsible. What's your day like, today and tomorrow?\"\n\n\"Meetings, mostly internal.\" \n\n\"OK. I want you on the next flight to Tallahassee. Buy clothes down there if you don't have time to pack. Before the day is out, I want you in FSU's communications office talking to Sharon and reassuring her that we're on this. I also want an adult on the ground down there making sure we dot our i's and cross our t's. We can't afford another incident.\"\n\n\"You know Rick Stewart is already there.\" Rick was the creative director on this project.\n\n\"I know. You're the cavalry, riding in to the rescue. I send you down, it sends a message to FSU about how seriously we take this.\" \n\n\"OK, boss. On my way.\"\n\nI made a mental note to tell Amy about this crisis when I got home tonight. Then, I experienced an awful, sinking feeling as I remembered that I couldn't tell her. Amy, my wife and confidant, the person I had shared all of these details with for the last 35 years, was dead. \n\nWhen Amy died about eighteen months ago it left me pretty much adrift. There isn't an hour that goes by that I don't think of Amy. Not an hour that I don't feel a little lost and a little guilty that I'm here and she's gone. But every so often the habits of a lifetime together cut in and I think \"I need to tell Amy about this\" or \"Amy will get a laugh from that.\" And when that happens, the next thought that comes into my head is that she's gone. And I feel awful all over again. It doesn't last long. I've grieved for Amy and tried to move on, but that's easier said than done.\n\nI live alone now. My kids are grown and have lives of their own. I haven't dated; haven't really wanted to. Instead I work all the time. Often seven days a week; always six days. The sole comfort I have is my dog, who comes to work with me now that there's no one at home to entertain him. He barks at people, from the UPS guy to clients who come to visit, but I figure barking is his job. I tell people he's my Director of Security.\n\nThe Florida State debacle hijacked my morning. Three meetings I had scheduled were interrupted or cut short as I fielded updates from my guys on the ground there. It was about 10:30 that Rick Stewart called in to say that the crew was on campus setting up for the first shot. That was later than it should have been, but at least Letourneau got them moving. I would deal with Letourneau later, when we knew what this was going to cost us. We were now almost certainly going to have to add a half-day of shooting to make up for the lost time.\n\nIt was noon before I had a minute to myself. When I did, I closed the door to my office, turned on some music and sat at my desk for a minute to gather my thoughts. When I tried to remember where my day was going before it was hijacked, I remembered the stunning black woman from the bagel store. I found myself daydreaming about her as I went through the rest of the day, occasionally to the point where I had to almost shake my head to clear it. \n\nIn my two o'clock meeting, my COO and our tech guy were yammering on about the new phone system they wanted to install. Voice Over IP - VOIP - it was taking over the phone business. I knew this from reading the Wall Street Journal, not because of anything I heard in that meeting. I was replaying the bagel store encounter from this morning, except in this version a wittier me had grabbed her attention and...\n\n\"Collin? You with us?\" Peter and the tech guy were looking at me like they expected me to say something. I tried to do an instant replay on the conversation, but I had been too far gone. I missed it entirely.\n\n\"Sorry, Pete,\" I said. \"I must have zoned out there for a minute. Let's cut to the chase. What do you guys recommend?\"\n\nI could tell from the looks on their faces that it was their recommendation that I had missed, but it was one of the benefits of being the boss that neither of them was about to scold me for not paying attention. Now, I hyper-focused, asked a couple of pertinent questions and made a quick decision. \n\nThis girl had really gotten under my skin, and I wasn't sure why. She was black, and I've always been attracted to black women, but I work with black women all the time and they don't have this kind of effect on me. She was vastly appealing to me in a way that I hadn't felt in a very long time. She was young enough to be my daughter, but the thoughts I was having about her were far from paternal, and this made me feel irrationally and inexplicably guilty. \n\nIt was a familiar feeling. I'm no saint, and, as much as I loved my wife, over the thirty-five years of our marriage I had strayed. Someone told me once that an affair in the mind is a much a sin as an affair in real life, and while I didn't quite buy it, I know where she was coming from. I had affairs of the mind, many in fact, but I had an actual physical affair as well. It happened in a moment of weakness, when things at home were going poorly and I was stressed. That's not an excuse, it's not even an explanation, it's just context. \n\nIn the end, my wife learned about it from me. I came clean, ended the affair, and worked to restore trust. When she got sick, I cared for her, held her while she was dying, and did anything and everything I could to make up for my transgressions. Her last words to me, with a wan smile and a squeeze of my hand, were to tell me that she had always loved me. I cried, and thought I might never stop. \n\nMy kids and I eventually picked up our lives where we had left them and soldiered on without her. For months it was a dark, joyless existence. Then my son announced that he and his new wife were having a baby, and despite the bittersweet knowledge that Amy would have loved to have shared this, the sun peeked through the clouds. My younger son graduated from college, Summa Cum Laude, and more sun. The holidays were hard, and I'm guessing they always will be, but spring is coming and the sun is out regularly now. I can look at her picture on my desk now without tearing up. My kids and I can talk about her and remember the good times without me choking up. Time heals. \n\nBut this was new. I had not been attracted to anyone in a long time, and my emotional self was having trouble reconciling my new feelings with old guilt. I knew, of course, that my guilt was irrational. Amy was gone, and me living my life and being happy was no sin. And, anyway, this girl was half my age. It was confusing, so I did what I guess a lot of men would do: tried to ignore it. \n\nThat was easy enough for the next couple of weeks. Work took me out of town, first to Houston, then to the West Coast scouting talent for a major new series of commercials for a big client. The work was relentless. Twelve-hour days, watching auditions where beautiful but utterly talent-less women tried to read lines from one of our scripts with remarkably little affect. Lines that seemed to me and my creative team to be chock full of drama came across as listless and ordinary. No amount of direction could tease a little life out of them. \n\nNow this was no surprise. I've been doing this for a long time, and it is remarkable how hard it is to find \"talent\" that actually has some. This production was well into six figures to make one commercial, and it rested on our ability to find one person who could make the concept work. I know it seems easy, when you're watching the finished product, but as an experienced producer told me my first year on the job, \"Actors practice their whole lives so they can sound natural on camera. You want some kid to do it for $400 a day.\"\n\nAnd so we slogged on. We looked at more than forty \"actresses\" in Houston; seventy-five or more in LA. It was utterly consuming and exhausting. But at the end of it, we found an attractive girl with the best \"girl next door\" looks I've seen in a long time who seemed to get it. And she was new - no major commercials under her belt, just a handful of regional theater productions. She had come to LA to make it big, but was still waiting tables. This could be her big break. I hoped so, for her sake. The fact that she was new was important. The client wanted a fresh face for their sporting goods line, one that we could sign to a multi-year contract. She was perfect. \n\nWhen I called her to ask her to come back for a second read, her reaction told the whole story. \n\n\"Hey, Karen, this is Collin Halloran, from HSDO. How are you?\"\n\n\"Oh, hi. I'm good thanks. \"\n\n\"Karen, we're wondering if you would be available to come back in tomorrow morning to talk and maybe do a second read?\" \n\n\"REALLY? Oh my God!\" she could barely contain her excitement. \"Just tell me when and where.\" \n\nI gave her the details, and even as we were hanging up I could hear her tell someone, \"Oh, my God! They called me back.\" \n\nWe met her the next morning over breakfast and I got to see her in a new light, literally. California sunshine flooded the hotel restaurant, reflecting and glancing off the glassware and table settings. The white table cloth served to bounce the light up onto her face in a way that allowed me to see what she would look like in close-up and I liked it. She was gorgeous. Flawless skin, blonde hair, a runner's physique; long, muscular legs, flat stomach, toned arms. That was the director in me talking. The man in me saw a great ass, perfectly proportioned breasts and eyes that could be seductive without even trying. Her eyes were an almost startling shade of blue, so much so that I had to ask her if that came from colored contacts. I admit to being a little mesmerized by her as she sat there at our breakfast table. She had this incredible combination of sexiness and innocence that was utterly irresistible. \n\nWhen we said goodbye, I walked her out to the hotel lobby to fill her in on a few details. Before we parted she put her arms around me and hugged me, out of gratitude, I guess, but it surprised me - more so because she molded that insanely hot body to mine. I responded, like any man would I imagine, by putting my hands on her back and feeling the warmth and firmness of her tiny frame though the mostly see-through fabric of her blouse. I'm a lot taller than her, so her head was under my chin. I learned that her hair smelled vaguely like strawberries, that her breasts felt bigger than I would have guessed and she was a physical girl. She liked to touch and be touched. In that moment, the months I had gone without any feminine touch in my life surged over me, my longing for a woman's attention nearly overpowering my generally good judgment, and I had to consciously pull myself back. ",
        "For a second, I toyed with the idea of inviting her to join me for dinner one-on-one. There's no doubt in my mind she would have said yes. No question that any request I made of her short of actually asking her right then and there to have sex with me would have been accepted. She would look amazing in my client's warm ups, better in their running shorts, hair in a ponytail tucked through a cap with my client's logo on the front. In six months' time, she'd be the newest ing\u00e9nue, and she and I would spend a lot of time together making that happen. Acting inappropriately with her now would make that all weird and uncomfortable. But, more importantly, she was beholden to me for a major step in her blossoming career, and exploiting that to satisfy my own sexual needs would have been terribly wrong. I stepped back, looked at that huge smile on her face, and reminded myself that she was almost exactly the age of my daughter-in-law. We said our goodbyes and I gave her my card with my cell phone number on it, and half hoped as she walked out to the parking lot that she would call me. \n\nWe met with her agent that afternoon - I'm pretty sure he had to look up her file to know who we were talking about when we called - and were able to work out the framework of an agreement that my client could live with. He was trying to be a dick about residuals, but I could be a dick, too, and I was sure he'd get over it. We wanted rights for three years, and with the money we were offering, his client would make him see reason. \n\nI had a couple of hours at O'Hare between flights, and I used that time to call Phil Letourneau. We had needed to add a half-day to the schedule at FSU, and it would cost someone about ten thousand dollars. \n\n\"Phil, Collin Halloran here. How are you?\"\n\n\"Good, Collin, thanks. How are you?\"\n\n\"Oh, I'm ok. I've got an hour between flights and wanted to take a minute to call you and talk about FSU.\"\n\n\"Oh, great. I just looked at the footage this morning, and it looks great.\" \"Footage\" was an archaic term referring to film, but lots of older guys still used it. If I had been talking to someone in his twenties, they would have said \"files\" instead.\n\n\"Well, I wouldn't expect anything less of your outfit, Phil.\"\n\n\"Thanks, Collin.\" \n\n\"So, I spoke to Bill Beatty yesterday and he told me that you had billed us about ten grand for the extra half day of shooting.\"\n\n\"Yes. I know that wasn't in the budget, but we had to add the half-day to make up for lost time. The half-day rate was in the contract.\" \n\n\"I think the issue, Phil, is where does responsibility for that half day lie? I'm sure you would agree with me that we can't make the client responsible for that.\" \n\n\"Of course not.\"\n\n\"You know where this is going, Phil. I don't feel that HSDO should be responsible, either.\"\n\n\"Collin, the contract is clear - all production expenses are HSDO's responsibility.\"\n\n\"Well, funny you should mention the contract, Phil. Because the contract is also pretty clear that you were supposed to hire your regular crew and pay their travel expenses. The idea of that was to avoid this kind of issue and make sure we have responsible crew given the importance of this client. Your production day rates were predicated on you bringing your home crew and paying their expenses.\"\n\n\"Well, I ...\"\n\n\"I know what you did, Phil. You thought you could get away with hiring some local grips - I mean who would know, right? You could save a few hundred bucks a day that way. The trouble is, this one bit you in the ass, Phil.\"\n\nPhil was silent.\n\n\"I'll tell you what, Phil, I'll make you a deal. I'm not going to let you profit from this. But I will pay the half-day rates of your crew, so at least you're not out of pocket on this.\"\n\n\"Thank you, Collin.\"\n\n\"But Phil, going forward, I can't work with partners who don't do what they say they will do. Understood?\"\n\n\"Loud and clear, Collin.\" \n\n\"All right. Well, have a great weekend. We'll talk next week.\"\n\nI got into town just in time to rescue Max, my dog, from the kennel. He was overjoyed to see me, and he and I spent the evening together - a long walk, then we had a couple of beers sharing the sofa while I watched a Yankees spring training game on TV. Well, I had the beers. He sat there content beside me, his big brown eyes watching my every move. If I looked at him, he'd wag his tail. His chin was in my lap, and every so often he'd lick my hand. Even my kids don't love me as completely as he does. \n\nSaturday I went into the office. Had to, really. If I didn't sign off on the payroll, no one would get paid the next week. I had checks to sign for vendors, emails to write, mail to sort through. This is what my predecessors in this industry had secretaries for, but our margins were too slim for such an outdated luxury. Secretaries came with big retainers, which, it turns out, are not a twenty-first century concept. \n\nI stopped for a bagel on my way in, and standing in line waiting to pay, I thought about the young black woman again for the first time in a week. I looked for her, of course, but no dice. I guess I'd have to wait a while for my beautiful African American girl fix. She was beginning to fade a little from my memory, which maybe was a good thing. Obsession is disquieting. In fact I made a silent promise to myself that I was done obsessing over strangers in the bagel shop. That promise lasted about twenty-four hours.\n\nSunday morning I was back at the bagel shop for my usual - an everything bagel with plain cream cheese - and the place was packed like it was every Sunday. I spotted a table outside on the patio and grabbed it, then ran over and got Max out of the car so he could sit there with me. I bought him a bagel, too - plain, no cream cheese (his favorite) - and used it to keep him quiet and focused. It was still chilly out, since spring didn't officially begin for a few days yet, but the sun was out and I was comfortable in a light sweater and my old, worn but comfortable, Harris Tweed jacket.\n\nI felt a little bad for taking up this table for four, as other people with their hands full of bagel and coffee went looking for a place to sit, but not so bad that I was willing to give it up. Several people looked at the empty seats, and I lost a couple of chairs to other parties who added them to their table, but no one actually asked if they could sit there, which was a relief. Losing the chairs helped, because now only one other person could join me, and most of the crowd at this hour was couples and families. I had my head in the New York Times, reading about the latest recruiting scandal in college sports when I sensed someone standing nearby. \n\nWhen I looked up, it was my fantasy girl, looking around for a place to sit, stylishly dressed in workout gear that did a great job of showing off her trim physique. It took me just a beat for my brain to engage after I realized her problem. \n\n\"You're welcome to this chair if you don't mind sharing a table,\" I said.\n\nShe hesitated, looking around for an alternative solution, clear that she didn't want to sit with a stranger. I went for broke, flashing my most genuine smile.\n\n\"I won't bite, I promise.\"\n\nShe laughed, just a chirp, really, and grabbed the lone chair opposite me. She dragged it to the far end of the table, and sat there quietly, looking at some magazine and keeping to herself. A few minutes later, a little disagreement broke out nearby over who had first claimed a table that had emptied and we both looked up and watched while they sorted it out. Or, rather, she looked over at the ruckus while I looked at her. When her eyes came back my way, I pretended to be busy reading the paper. \n\n\"I never thanked you for offering to share your table,\" she said. \"I don't know what happened to my manners. Is this place always so busy?\" \n\nI revised my assessment of her immediately. This was no African American woman. African, for sure, but her accent did not allow for the possibility of her being raised in the states. She wasn't Canadian, of course - they sounded like Americans who dropped their H's and turned simple statements into questions. Was she Australian? I didn't think so. Her speech was too clipped, too precise. \n\n\"Sundays are always jammed here,\" I said, without missing a beat. \"The rest of the week, not so much. But, I've seen you here before during the week, right?\"\n\n\"Yes.\" She smiled. \"You're always the gentleman, holding the door for me.\"\n\nShe sounded vaguely English, but I spent enough time in London to know it wasn't a British accent. \n\nNo, this woman was African. I smiled back. \"Ah, yes. Force of habit.\"\n\nAt that moment, Max noticed that my attention was no longer focused exclusively on him and got up to investigate. One sharp bark got her attention.\n\n\"Oh, you brought your dog?\" she said. \"What's his name?\"\n\n\"This is Max.\" Max went over to greet her, and this reserved beauty I'd just met, squatted down to greet my dog, petting his back, ruffling the hair on his head and making silly noises to him. Any woman who likes my dog is pretty special in my book. She looked to be in her element with Max, honest and natural. It was like I had a little window into what she was like when she was being herself. I liked what I saw through that window. Liked it a lot.\n\n\"Be careful. He's quite the lady's man.\" \n\n\"He's so beautiful.\"\n\n\"Handsome.\" She looked at me a little quizzically. \"He's very sensitive about his masculinity. Insists that he's handsome, not beautiful,\" I added with a grin. \n\n\"Yes, you're a handsome boy,\" she said to him, just before he reached out and licked her face. She squealed just a little, and ducked back in time to miss the second swipe. \"Oh you are the lady's man, aren't you?\" She gave him a final pat on the head and sat back down.\n\n\"I so envy dogs,\" I said. \"He gets away with murder.\" \n\nShe laughed, then sipped her coffee, and turned her attention to her food, a yogurt and a cup of fruit. I went back to the Times, but had trouble focusing on it. Changed sections, and went to The Week in Review. I kept stealing glances at her as she sat kitty corner across from me. She really was gorgeous. Looking at her up close, I noticed things I hadn't seen before, like a tiny dimple in her chin and a smaller beauty mark just under her lip. Her eyes were big and brown, but really dark, just this side of black. She was in great shape, clearly worked out regularly, but she was no skinny little girl. She had curves and a softness to her that came through despite the workouts. \n\nShe was looking at some newsprint magazine with something of a perplexed look on her face, going back and forth between it and her phone. \n\n\"I'm sorry to disturb you,\" she said. My ruse of pretending to read the paper had worked. \"I'm trying to find an apartment but I just don't know what parts of town I should look in. What would you recommend?\"\n\n\"Happy to help.\" More than happy, really. There was nothing I wanted to do right now more than engage this beautiful young woman in conversation. \"So the first question is, city or suburb?\"\n\n\"Um... city, I guess? But only if it is safe. I've only been here a couple of weeks and I've heard some horror stories.\" \n\n\"Well, parts of the city are safe, and parts aren't.\" \n\nShe had her magazine open to what looked like a map of our town. \n\n\"These parts,\" I drew a big circle around two neighborhoods, \"are safe enough. These,\" I X'd out two others, \"are very much not safe.\" \n\n\"Oh, ok, thanks. What about suburbs?\"\n\n\"They're all safe enough. East side is more affluent. West side more working class.\"\n\n\"Thanks. That helps a lot, actually.\" \n\n\"So I take it you've just moved here?\"\n\n\"About three weeks ago. My company put me up in one of these extended stay hotels. I thought I'd be out of there by now, but, well... this has been a bigger adjustment than I bargained for.\" \n\n\"Where are you coming from?\" \n\n\"Johannesburg.\"\n\n\"Ah... I've been trying to place the accent. I had it narrowed down to Africa.\" I smiled again. I seemed to be doing a lot of that.\n\nShe grinned. \"Narrowed down to a whole continent? Very perceptive of you.\" \n\nI laughed, and she joined in.\n\n\"I'm sorry, that sounded snarky.\"\n\n\"In my defense, we Americans are a little isolated over here. And beautiful women with an accent usually leave me very distracted, so it's a miracle I came that close.\" \n\nI watched her eyes for a reaction and for just a moment, she looked down. When she looked back up, she had what looked to me like a forced smile. \n\n\"Well, I guess I've distracted you enough, she said, suddenly all business. \"I need to get moving and call some of these apartments. Thanks again for sharing the table.\" \n\n\"Thanks for joining me.\" \n\n\"Bye Max,\" she said, giving him another pat on the head as she left. He wagged his tail happily.\n\nI watched as she walked away from me, cursing myself for my \"beautiful woman\" line. Well, at least she likes my dog, I thought, and hoped I would get another chance with her.\n\nThen, I realized, I never asked her name, nor offered mine. I clearly had been away from this boy-meets-girl thing for too long.\n\nMonday dawned on a frantic new work week, and it was noon before I came up for air. I was beat. I hadn't had enough time to recover from the previous week, and it was looking like this week would not be much better. I no sooner had opened my laptop to check my email when Bill Beatty was at my door. \n\n\"By the time I got back from Tallahassee, you'd left on your trip, so I never got to tell you that sending me down was exactly the right thing to do. Sharon was tickled pink to see me there and I think we're in good shape with that client.\"\n\n\"Great Bill, I'm glad to hear it. They're so important to us as we try to build that part of the business.\" \n\n\"I know they are. Letourneau called me this morning. I don't know what you said to him, but he was contrite, to say the least. Told me to tear up the bill, that he's be sending us a new one without the half-day charges on it.\"\n\n\"Glad to hear it. Phil's not a bad guy, but I sense that he was taking us for granted.\" \n\n\"Are you going to use his company for this campaign you were just casting for?\" \n\n\"I'm not sure. I'm inclined not to, to be honest. But he has some good people. I'll wait and see how the FSU work comes out.\"\n\nBill had no sooner walked out than Jim, an account executive who had been with the company for four or five years stuck his head in the door.\n\n\"Got a minute?\"\n\n\"Yeah, come on in. Have a seat.\" \n\nJim had been a slow starter, but I had the sense over the last six months that he was beginning to reach his stride. He'd brought in a new client, a nonprofit organization dedicated to improving the lives of children, and they were slowly starting to turn into a decent money maker. We had recently completed a big series of billboards for them, and they had loved them, and had ordered a series of smaller versions they could use at events. \n\n\"So this Thursday is the big fund raiser for the Children's Fund,\" Jim started out hesitantly, perched on the edge of his chair like he was a little kid being called into the principal's office. \"They really want you to come.\" \n\nI will admit that a little groan may have escaped my lips before I could stifle it. My reluctance to go to work related social events was legendary. I loathe cocktail parties. Abhor political fund raisers. Get physically ill at the thought of rubber chicken dinners. \n\n\"Why me?\" I asked. \"You know I hate these things.\" \n\n\"Because you know everyone,\" he said. \"They like the idea of you being there, mixing with their donors. They think if people know you support them, they'll raise more money.\" \n\n\"That's bullshit,\" I snapped. \"They overestimate my influence.\" \n\nAt that point, I wasn't thinking, just reacting. \n\n\"OK, OK,\" Jim said sheepishly, starting to get up from his chair. \"You're right. I'll let them know.\" \n\nHis obsequiousness pissed me off even more. \n\n\"For Christ's sake, don't back down on something that's important to your client just because your boss is a little irritable,\" I said. I could see he was completely confused. \"I pay you to do what's right for your client, not kowtow to me.\"\n\n\"Yes, sir. This is right for the client.\" \n\nI considered it a moment. I knew what I needed to do, but I didn't like it. \n\n\"OK, I get it. When and where? \"\n\n\"Hyatt Regency Ballroom. 7 p.m.,\" Jim said, relief evident on his face. \"Here's your ticket.\" \n\n\"Thanks. And I've told you to quit calling me sir.\" \n\nI threw the ticket on my desk while Jim beat a hasty retreat. I let it rankle for a while, really resenting that my Thursday evening would be ruined. Then I took a deep breath. I know that I intimidate some men, but I have always worked at setting my own employees at ease under the theory that I want and need them to be honest with me. I don't know if it was my height, or the look on my face or some other subtlety, but my efforts seemed to be lost on Jim. And, God knows, I had not improved the situation. \n\nI have an old friend I call Farmer John who was a recovering alcoholic. He shared some AA wisdom with me once when he saw me in a state much like the one I was in after Jim left my office. \n\n\"Bearing resentments is like drinking poison and waiting for the other guy to die,\" he'd said, and it had always stuck with me. So I made a conscious effort to let it go. I grabbed the leash, and got a very excited Max to sit long enough to attach it to him, and we went for our walk. \n\nWhile we walked, I thought about how it used to be easier to make excuses, when I had a wife who I could claim kept me hopping with social engagements. In truth, we both had been homebodies, and really cherished that time together as a family when my kids were younger, and later as a couple. Now, the best I could do is claim Max needed me, but then one of the young women who work for me would volunteer to bring him home with her and I'd be out of excuses. \n\nAs Max and I walked down into a little pocket park by the river near my office building, that thought led inexorably back to my favorite obsession of late - the woman I had shared my table with at the bagel shop yesterday. I had been too focused on how sexy she looked to even think to introduce myself. Maybe if she knew something about me, she wouldn't have been so frosty after I made that stupid remark about beautiful women. It frustrated me that at this point in my life I could still feel like a bumbling fool in the presence of a pretty girl. The whole thing was maddening. \n\nBack at the office, I idly picked up the ticket Jim had put on my desk and groaned again when I read it: Black Tie Optional, which meant I had to dig out my tux, and get it to the cleaners along with the shirt and get it back before Thursday. It said \"Optional\" yes, but I knew that anyone who was anyone would be wearing a tuxedo, and if didn't wear mine, my hosts might think it showed a lack of respect. \n\nGoddammit.\n\nOn Tuesday morning I got a call from the Children's Fund's Executive Director, Judith Christopher. \n\n\"Collin, how are you?\" \n\n\"I'm well, Judith, how are you?\" No one who knew her ever made the faux-pas of calling her Judy. It simply wasn't done, and, if it was, it was promptly corrected.\n\n\"Jim tells me you're coming to our little event on Thursday. I'm so glad - it's been ages since I've seen you.\" \n\n\"I'm looking forward to it, Judith. Happy to show my support for your organization. How are Jim and his team treating you folks? Well, I trust?\"\n\n\"Oh, Jim is terrific. Your agency has done so much for us in just a few months. Collin, I was wondering, would you mind looking me up when you get to the Hyatt? There are some people I'd like to introduce you to from my board, and if we have a few minutes, I'd like to get your take on our plans for a new project we're thinking about for next fall.\" ",
        "\"Sure, Judith, I'd be happy to. I'll look for you when I come in.\" \n\nWe made some polite small talk, and the call was over in a couple of minutes. I admit I was curious about what Judith wanted to talk to me about, and whether there were implications for our business. I had known Judith for years, and she had never sought my counsel before, so I was guessing it was another of the free services we offered our clients. \n\nThursday came soon enough. I dropped Max off at the sitter after lunch, feeling guilty and imagining that the look he gave said, \"I can't believe you're doing this to me again.\" But I could pick him up late tonight after the event and I could always use Max as an excuse to leave if it dragged out too late.\n\nAll day, the tuxedo hanging on the back of my office door tormented me. When it finally was time, I closed the door and changed, struggling a little with the gold cufflinks to my shirt, and making sure they could clear my watch. My forearms had always been big and muscular, and I have big hands. To look right, my watch had to be big as well. I own three or four watches, but this one was hands down my favorite. A big, gold Rolex Oyster that Amy had given me for my fiftieth birthday. Other than my car and my house, this watch was the single most valuable thing I had ever owned. Amy had been so proud of herself, managing to order it and pay for it without me finding out. She had even had the band sized correctly, by bringing in one of my other watches so the jeweler could make the appropriate adjustments. She gave it to me over dinner at Sardi's, just off Times Square in New York. She had planned a whole weekend away for my birthday. The boys stayed with friends, and she picked me up at the office early on Friday to go to the airport. We had tickets to a Broadway show Friday night, tickets to a Yankees game on Saturday afternoon. Dinner at Sardi's Saturday night and at brunch on Sunday, she had arranged for my best friend from college to join us. I had never felt more loved and cared for than I had that weekend.\n\nThe memory was sweet, and I congratulated myself for being able to savor it without getting all choked up. Looking at myself in the mirrors in my ensuite bathroom, I had to admit I didn't look bad. The black tux and white shirt went nicely with the gray at my temples and otherwise black hair. It was just a little snug around the waist, reminding me I needed to get back into my gym habit asap, but otherwise, not bad. The Hyatt was only a couple of blocks from our office and it was a glorious night, so I took my time walking down there, stopping for a minute on the bridge to admire the view of the river. It was nearly 7:30 when I got there, and the ballroom was already quite full. I sighed, and made my way into the room. Jim spotted me right away, and immediately put a drink in my hand and led me over to Judith. \n\n\"Collin, so nice of you to come.\" \n\n\"Happy to be here, Judith,\" I said. \"Looks like you have a nice crowd.\"\n\n\"Oh, we're very fortunate tonight,\" she said. \"This event always draws a crowd. I think, personally, people like an excuse to dress up. That's why I won't hear of dropping the 'black tie optional.'\"\n\nI smiled, and nodded my head like I couldn't agree more. \n\nJudith turned and whispered a couple of directions to a subordinate who dashed off on a mission, then returned to me. \"Bill Brandt and his wife are just over there. Do you know Bill?\" \n\nThere was no doubt why Judith was in this job. She was a whirlwind of energy, and immediately started dragging me around introducing me to people, even though it was clear after a few moments that I knew half the people there. More than twenty years in business even in a relatively big city like ours, meant that I knew most of the movers and shakers. And all the usual suspects were there.\n\nFor an hour, I endured merciless small talk as Judith and I walked around engaging people in conversation. At one point, Judith put her arm through mine and it put me immediately on guard. Judith was an attractive woman, no doubt, and was very much single and had been for quite some time. Her ex was well-known in town, and there had been talk that he had run off with a younger woman, but I had learned never to rely on scuttlebutt. But regardless of her attractiveness and her availability, if there was one rule more ironclad than the rule about talent, it was the rule about mixing business and pleasure with a client. No good could come from that, and whether I was just imagining it, or whether it was real, I managed to escape Judith with the excuse that I needed to freshen up my drink. \n\nAs I wandered over toward the bar I heard a familiar voice. \"Where's Max tonight?\" \n\nI turned toward the voice, and what I saw made all the torment of the evening suddenly worthwhile. My new African friend was there greeting me with a big smile and looking beyond gorgeous in a green cocktail dress that set off her brown skin so perfectly that she seemed to glow. \n\n\"What are the chances that I'd run into one of the two people I've met here outside of work?\" she said to me, offering her hand. \n\nI must have been standing there with a stupid look on my face for just a minute, surprised to see her here as well, and, honestly, a little taken aback by her beauty and simple, raw sex appeal. The pause went just longer than I could get away with. \n\n\"You remember, at the bagel place on State Street?\"\n\n\"Sorry, surprised to see you here... No chance of me forgetting you, none at all,\" I said, recovering. Then, in burst of honesty, \"You look amazing tonight.\" I was doing my best to look at her face, but it wasn't easy. The dress was perfectly sculpted around her breasts, leaving just a hint of cleavage and hung beautifully on her frame, emphasizing hips and pelvis and trim thighs. \n\n\"Thank you,\" she said, holding my gaze and, I thought, blushing just a little. It was hard to tell in that lighting, and with her skin tone. \"You look great in your tux.\" \n\nI smiled. \"This meeting of the mutual admiration society is now called to order.\" \n\nShe laughed, and I noticed she had a little twinkle in her eyes. Positively bewitching.\n\n\"What brings you here?\" I asked.\n\n\"The company I work for bought a table,\" she said. \"I don't know a lot about it, just trying to get to know all the players. And you?\"\n\n\"We recently signed them as a client, so I'm here, showing the flag and making nice.\" \n\n\"You don't sound thrilled.\" \n\n\"Really, am I that transparent?\" I asked. \"I need to watch that.\" \n\n\"Maybe I just recognize a kindred spirit.\"\n\n\"Cocktail parties with complete strangers not your cup of tea?\"\n\n\"It's been a long day,\" she said, smile gone. \"My brand new car wouldn't start this morning and had to be towed, so I'm doing cabs and public transportation and arguing with the dealer about a loaner while they work on mine. Very frustrating. I don't want to be stuck in that hotel all weekend with no transportation.\" \n\n\"Really? What could be wrong with a brand new car that would take that long to fix?\"\n\n\"They have to replace the computer, apparently, and it will be days before a new one comes in. They claim they don't have any loaners. I'm really losing my mind...\" she tailed off a little and closed her eyes. When she reopened them, she added, \"And now I have to get a cab home. A bus in this dress and these shoes just isn't happening.\" \n\n\"Well, I can maybe help there, if you'll take it.\" \n\n\"How?\"\n\n\"Well for starters, I can give you a lift home,\" I offered. \n\nHer face brightened at that, but then, drooped a little, \"I couldn't ask you do that.\" \n\n\"It's no trouble, really. I'd love to do it. In fact, I would love it if you went to dinner with me. There's a really nice little place between here and my office, and we would need to go that way, anyway, if you're going to let me drive you home.\"\n\n\"I ... don't know...\" she was hesitating, I thought about to make an excuse, looking anywhere but at my face. When she looked at me again, the forced smile was back.\n\n\"Your wife might object,\" she said crisply, with a deliberate glance at the wedding ring I still wore on my left hand. \n\nIt was like a sucker punch. I had been struggling with these feelings of guilt, worried that I was somehow being unfaithful to Amy for the feelings I had, not really ready to move on at all, and yet yearning to do so. And in a simple statement, it felt like she had cut me to my core. Now it was my turn to force a smile. \n\n\"I see,\" I said, trying to think of a graceful way of exiting. \"My wife died a year ago January. I sometimes forget I still wear the ring,\" \n\nSomething shifted in her eyes, but I couldn't look at her anymore.\n\nMy tone and rigid spine were beginning to tell on the emotion her careless accusation had evoked. \"Excuse me.\" \n\nWith that, I turned, and resumed my walk toward the bar. I made it only a couple of steps before she grabbed my arm. I turned back to her, confused and hurt and a little pissed off.\n\nHer hand left my arm, and took my hand, which she then held in both of hers. The warmth of that gesture added a layer to my confusion. When my eyes settled on her face, I saw the familiar warmth there, mixed with embarrassment and genuine regret. \n\n'I am so sorry,\" she pleaded. \"I didn't know. I saw the ring and made an assumption about you that was so wrong. It's just... I ...\" She stopped herself, and I could see a struggle play out over her face. \n\nI waited.\n\nWhen she spoke again, it was just a bit quieter, and she stepped closer to me, her hold urgent now on my hand. \"There's no excuse. What I said was uncalled for. Please, can you forgive me?\"\n\nI didn't know what to feel. In the space of two minutes I had gone from being totally enthralled by this woman, to being devastated by her, to standing here, with my hand in hers and looking down into those huge brown eyes, her warmth slowly thawing my resolve.\n\n\"You couldn't have known,\" I said grudgingly, not quite ready to forgive. \n\n\"Yes, but I shouldn't have jumped to conclusions about your intentions. I'm so sorry for doing that,\" she said, smiling again, just a little. \"At least give me 'til after dinner to decide whether you want to toss me into the trash bins.\"\n\nThat drew a little laugh from me. \"I don't want to throw you into the trash, not by a longshot,\" I said. \"It's ok, really. I should probably stop wearing the ring. I just haven't had the heart to take it off.\" \n\n\"I think it's sweet that you still wear it,\" she said. \"You honor her memory by doing that.\" \n\nI looked at those big, dark eyes, and thought it just might be possible to get lost in them. \n\n\"You know, I never asked you your name. \" \n\n\"I'm Mthandeni Mdimba,\" she said, \"But my friends call me Deni.\"\n\n\"So pleased to meet you,\" I said. \"I'm Collin...\"\n\n\"Oh, I know who you are,\" she said, cutting me off, the twinkle back in her eyes. \"Everyone here knows Collin Halloran. I did my research, though not enough, obviously.\" \n\n\"So, I don't know if that's a good thing or a bad thing,\" I said, my eyebrows going up just a tad.\n\n\"I'll never tell,\" she said, and the twinkle dissolved into a genuine laugh.\n\nThat's when I realized we were still holding hands. And that the crowd had thinned markedly, the event winding down. \n\n\"Dinner would be lovely,\" she said. \"I didn't eat a thing here.\"\n\nWe made our way to the door, now with Mthandeni putting her arm though mine. We stopped and congratulated my client on a well done event. Judith seemed a little shocked to see me with someone else, and made no effort to hide her annoyance. I was, after all, leaving with the best looking woman in the room and a woman at least 25 years my junior at that. I did not know Judith well enough to know if her age - about five years younger than mine - was a sore point with her. But given her somewhat proprietary affect earlier, this felt awkward for me. From the look on her face, I gathered it was more than just awkward for her. It dawned on me that her request to go over some plans with her was laying the groundwork for her having some time with me to herself. My spontaneous dinner invitation to Deni, in effect, was a rejection of that plan. It seemed that, by extension, Judith considered it a rejection of her. \n\nGoing to dinner with Judith would have been a business obligation. Going to dinner with Mthandeni was pure pleasure. At the same time, I didn't want to alienate Judith, and the look she was giving me was not good. So I called an audible. \n\n\"Judith, perhaps we can get together tomorrow or early next week to go over those plans you mentioned? Maybe for lunch?\" I asked, hoping to limit the damage. \"I'm very eager to hear about them.\" \n\n\"Oh... Yes, I'd like that,\" Judith replied, perhaps somewhat mollified by my offer. She was still looking daggers at Deni, but there was nothing I could do about that. \"I'll call you in the morning.\"\n\nI figured tongues would be wagging tomorrow at the Children's Fund, and for a moment that bothered me, until I turned back to Deni and saw the twinkle again. \n\nScrew them.\n\nChapter Two\n\nMy alarm went off at six the next morning and I got up, thinking I had drunk at least one glass too many from the bottle of wine I had shared with Deni. Dinner had been pleasant. We talked and laughed for almost two hours, and in the end, Deni had indeed allowed me to drive her home. \n\nBefore we left the restaurant, Deni had excused herself to go to the lady's room, when the owner, my friend Vito, came over to clear the table. He had waited on us personally, which I was pretty sure had more to do with my dinner companion than any fealty to me. Vito and I had known each other for many years. His restaurant had been our favorite when Amy was alive, so much so, that after her death it was months before I could come back. When she died, Vito had been there for me, bringing me food and comfort, even closing his restaurant after her funeral to accommodate my family and friends. \n\n\"Your date is a very pretty lady, Collin,\" Vito said. \n\n\"She's not my date, Vito,\" I responded, a little taken aback by the concept. \"I just offered to drive her home, 'cause her car is in the shop. I'm... We're not dating.\" \n\nVito nodded, as though he accepted my explanation and fussed over the table some more, handing some glassware to his busboy, who quickly disappeared. He shook out Deni's napkin, then folded it carefully and put it back on the table at her place. \n\nHe gave me a long look, leaning over the table to put his hand on my shoulder. \n\n\"It's been what, Collin, eighteen months?\" Vito asked, not expecting me to answer. The look of genuine concern on my friend's face, coupled with the whirlwind of conflicting emotions I had been feeling came together to form a huge lump in my throat. I didn't trust myself to respond in any case.\n\n\"It's ok, you know. It's time.\" \n\n\"Time for what?\" Deni asked, coming back just as Vito straightened. \n\nHe glanced at me then smoothly covered. \"I was just telling Collin that I'm going to have to throw you two out; it's closing time.\" \n\nI sat on the edge of my bed the next morning, looking at the picture of Amy and I that had been on my bedside table for years, replaying the whole incident in my mind. I knew on some level that Vito was right, but I felt this awful combination of guilt, loss and denial about the idea of moving on. Moving on seemed to me so utterly disloyal to Amy and her memory and all she had meant to me. It seemed like the ultimate act of selfishness. \n\nBut I was torn, because there was no question about my attraction to Deni, this exotic creature who had come into my life and had immediately commanded my attention. Dinner with her had made last night the most pleasant night I've had since Amy died. \n\nDropping her off last night, we sat in my car outside the hotel and it was clear neither of us wanted the evening to end. \n\n\"Thanks so much for dinner,\" she said. \"I had a lovely time. Your friend Vito is a character.\" \n\n\"He is that,\" I said, chuckling at the memory of Vito fussing over Deni the whole evening. \"He seemed pretty taken with you.\" \n\n\"Well, tell him I'm pretty taken with him, too,\" she said. \n\n\"I've got a better idea,\" I said. \"Come back with me, and tell him yourself.\"\n\nWe had both turned in our seats to look at each other, and I loved how the lights of the hotel played off the highlights on her skin and eyes, and made her seem so darkly mysterious. When she laughed, even in the darkness, her smile lit up her face. \n\n\"I would love to do that,\" she said, quietly. \n\nI never really decided to kiss her, but our heads drifted closer together and then we were kissing, gently, sweetly at first. Then she put her hand on my neck, and slid her fingers up into my hair and pulled me closer, mouth opening, tongue playing over my lips, suddenly more urgent. My left hand found her side, just below her breast, and worked up as her other hand slipped under my tuxedo jacket. Deni dropped her hand under my jacket to my lap, briefly tangling with the seat belt. My mind recorded all of this in some kind of auto mode, while I was completely in the moment, focused on her mouth and mine. \n\nWe broke to take a breath.\n\n\"You're so beautiful,\" I said, losing myself in those eyes. We kissed again, and held each other briefly, to the extent the console would allow, while I breathed in her scent, feeling the softness of her cheek against mine. I loved the contrast of her skin against mine. We were really polar opposites. My once entirely black hair was part of my Irish heritage, but so was my skin which is quite pale, especially after a long winter with little sun. When I put my hand on her face, even there in the dark, the contrast was sharp, which made me appreciate the beauty of her chocolate skin tone even more. \n\nWhen I kissed her again, I was really on autopilot, and I'm pretty sure she was too. My hand went to her breast, fondling and squeezing just a little, then playing with her nipple as it bulged through the fabric of her dress. She responded with a sharp intake of breath and began rubbing my erection through the trousers of my tuxedo, then quickly unzipped me, and let her fingers play over the tops of my boxers. My hand dropped to her leg, and moved quickly up past her thigh-highs to her panties, where my index finger traced a pattern in the rapidly dampening fabric. I eased her panties aside and started fingering her, as she stroked my hard cock in the darkness. I was able to move my thumb under her panties as well, found her clit and rotated my thumb slowly around it, as Deni got more and more worked up. She leaned over and put her head on my far shoulder, making it slightly harder for my thumb to reach her clit, but I never lost contact completely. Now I was just lightly brushing the tip. I could feel Deni tensing, and her arm had my neck in a vise, with little moans escaping her lips. \n\nMeanwhile her stroking my cock had me right on the verge of making a mess of my tuxedo. I was almost ready to say something, when Deni reached her orgasm and all bets were off. She convulsed once, then twitched a little, but without missing a beat, dropped her head to my lap and took me into her mouth, where I exploded. When I was finished, she put her arms around my neck again and pulled me close. \n\n\"Oh, Collin, I .. I didn't plan that, not at all,\" I looked at her then, and she looked a little stunned. \"I'm really not a sex on the first date kind of girl.\"\n\n\"It's been a really, really long time for me...I wasn't expecting...\"\n\nThe headlights of another car pulling in broke us apart suddenly, and we both laughed. It was a little like we were a couple of teenagers, caught making out by an adult. \n\n\"Would you think I'm horrible if I didn't invite you in... I need a little time... \" \n\n\"No, it's ok. I'm sorry, I got carried away.\" \n\n\"Don't apologize,\" she said, as she reached up and straightened my hair. \"And as for getting carried away, well, that makes two of us. We kissed again, briefly, and she hugged me and thanked me for a lovely evening and was out of the car and on her way into her hotel room. I stayed in the parking lot for another few minutes, letting my heart rate settle, and absorbing what had just happened. Then I drove off to pick up Max and bring him home to a house full of memories. ",
        "I sat there the next morning replaying that in my mind, still conflicted, but I knew where I was leaning. It was, at the same time, thrilling and terrifying. Thrilling that this beautiful woman was interested in me, and terrifying to think about how my sons would react. Would they see this as a betrayal of their mother's memory? Would they disapprove of the age difference? I was pretty sure I could live with the disapproval of anyone else on the planet; just slough it off without another thought. But my boys? I'm not sure I could bear disappointing them. \n\nIt was Max who pulled me out this reverie, barking at me and jabbing me with his nose. He would not tolerate a delay in his morning walk, and soon he was sniffing every bush in my yard, deciding which one he should try to kill next. \n\nMy first meeting Friday morning was one of those necessary, but distasteful things one has to do in business. Karen Dennison, my young ing\u00e9nue from the west coast, had signed releases as part of the audition process, allowing us to tear her life apart if she was selected for the role. My clients had spent billions building their brand, and they wanted no stone left unturned making sure we protected it. It was in my calendar as \"Due diligence,\" and few on the team knew what we were doing. \n\nWe had hired a private detective agency to do a thorough background check on Karen. This was my first exposure to a private detective, and I have to say, the agency man who came to meet with us Friday morning was not what I expected. He was more corporate suit than Phillip Marlowe, and came complete with a PowerPoint deck we threw up on the flat screen to dissect Karen's life bit by bit. \n\nTo tell the truth, I was a little disappointed. I would have been happier with a rumpled gumshoe straight out of the imagination of Raymond Chandler or Robert B. Parker. But I found no cause for complaint with our detective's thorough look at the uneventful life of Karen Dennison.\n\n\"Our approach with this subject was to look for any kind of youthful indiscretion that could be embarrassing to the client, including looking at her social media, interviewing her friends and colleagues all the way back to high school,\" he said. \"In addition, we looked for any criminal record, child abuse record, any history of prostitution or employment as an exotic dancer, etc. We checked her credit record, her employment history and her educational background.\" \n\nHe carefully went through each area, describing how they obtained access, who they interviewed and what they found. \n\n\"So, in summary, \" he said, after about twenty slides, \"no criminal record, nothing too salacious on social media, aside from a few bikini photos from last summer's vacation, a couple of late car payments on her credit report and that's about it,\" he said, handing out a printed version of his report. I'll admit, I might have looked at the bikini shots a little more carefully than I needed to. \n\nAfter the detective left, I went back to my office to find a message from Judith waiting for me. I had hoped that she would have had a change of heart over night, but no dice. I called her and set up a lunch date for the following Monday. The annoyance was gone from her voice, at least, and we had a pleasant enough chat. \n\nThere was a mountain of work to do on this account, but most of it would hum along in the background while I did other things. The one thing I needed to do, however, was bring in a public relations agency partner who could team up with us to promote the hell out of our new campaign both in social media and in traditional media.\n\nBut this was tricky. I needed to partner with a PR only firm - one which had no advertising arm. Our business wasn't dog eat dog, not really, it was more like shark eat shark and I had no desire to introduce our client to potential competition.\n\nI met with our team Friday afternoon and after an hour of discussion, I was pretty comfortable going with an agency that was local, and whose owner I had known since high school. I called Jack Morse and asked him if he wanted to compete for the business, and we agreed to meet with his team Monday afternoon to hear his pitch. I had outlined the job for him, and wanted him to come in and give us a plan on how he would attack it. I also needed to meet his team. If they were going to interact with my client, they would reflect on me. I needed to be sure they could handle a stressful situation and come off as professional. \n\nIn between meetings and throughout my day, my thoughts kept straying back to Deni, our dinner and Vito's timely advice. We had exchanged phone numbers last night, but I knew the chances of her calling me were slim. The ball was in my court. I debated it all day, but in the end the reality of Deni's beauty and mesmerizing smile carried the day. Suddenly, my quiet weekends working and hanging out with Max didn't seem so appealing. I called her about 4:30 in the afternoon.\n\n\"Hey, Deni, this is Collin. How are you?\"\n\n\"Oh, hi. I'm good thank you,\" she said. \"I wanted to thank you again for dinner and the ride home. I had a really nice time.\"\n\n\"Believe me when I say the pleasure was mine. So, I wondered what your schedule looks like this weekend. I'd love to see you again\" I said, holding my breath, nervous as a schoolboy. \n\n\"I was hoping you'd ask,\" she said. \n\nI exhaled, relieved. \"I was thinking we could grab a quick bite to eat somewhere, and then go to a movie, if you're up for that.\" \n\n\"That would be great,\" Deni said. \"But I don't think I could do it this weekend, honestly. I'm suddenly slammed with work and I'm supposed to move on Saturday. I honestly don't know how I'm going to get everything done over the next few days.\"\n\nI tried to keep the disappointment out of my voice. \"That's fine, what looks good for you next week?\" \n\n\"Any time, really, I have a big deadline Monday, then I'm good. \" \n\nWe made plans to meet Wednesday evening and then said goodbye. It was going to be just me and Max again for another weekend. \n\nMonday morning dawned clear and bright, the kind of day that made you want to smile a lot. I stayed out of the office over the weekend. There was plenty of yard work at home that needed to be done, so Max chased sticks as I raked and swept, and I went to bed tired every night. I had made my usual treks to the bagel shop, but no Deni. Either I missed her, or she had been too busy even for bagels. \n\nI did have my lunch with Judith to look forward to, and the morning flew by. I left myself just enough time to get to the restaurant by noon, but, even then, Judith beat me to it. \n\n\"Judith, so sorry to keep you waiting,\" I said. \n\n\"Oh, no trouble. I've been catching up on my email,\" she said, with a nod to her phone.\n\nWe carried on with small talk for a few minutes, interrupted by our waiter taking our order and delivering our drinks. \n\n\"So, Collin, how is business?\" Judith asked, once we were alone again.\n\n\"Business is very good, Judith.\" I answered honestly, but would have said it was good even if we had been hours away from turning the lights out. \"A decade ago, I decided to focus more on growing national accounts, and it was a very good decision. Local work is great, and remains a big part of our business, but the national work adds a lot of stability.\" \n\n\"It must be a pretty demanding job, running all of that.\" \n\n\"Yes, and no. I work hard, yes, but I have some very good people in place who do most of the heavy lifting.\" \n\n\"Do you ever think about retirement?\"\n\n\"Honestly, no. Maybe if Amy were alive, I would, but now my business is my life.\" I had been more open than I had intended to be, but it was all true. Amy and I had talked about a life in retirement that was heavy on seeing the world and visiting our boys and, eventually perhaps, caring for grandchildren. But without her, the idea of retirement seemed dark and lonely.\n\n\"Yes, I guess I know what you mean,\" Judith said. \"But I would like to try to get to the point where there was a retirement I could really look forward to. You know, with a partner to travel with, to see the world.\" She went on, \"In the meantime, though, I guess I should be grateful for work - gives me something to get up for.\" \n\n\"Who are you kidding, Judith? You love your work as much as I love mine.\"\n\n\"I do, Collin, I do. But ... I guess I thought there would be more at this point in my life.\"\n\nOur meals came at that point, and we went back to small talk. But after lunch, Judith pretty much dispensed with subtleties. \"So Collin, are you seeing anyone?\" \n\nI was a little taken aback by it. When she was talking vaguely in the third person, I could pretend I didn't know what she was asking. No ducking this one.\n\n\"Well, I have had a date with someone, and have another scheduled, but that's about it.\"\n\n\"That young black woman you left my event with?\" \n\n\"Well, yes, as a matter of fact.\" \n\n\"Who is she?\" \n\n\"Her name is Mthandeni Mdimba. She recently moved here from South Africa.\" \n\n\"Really, what does she do?\"\n\n\"For work? Um ... I guess I don't really know,\" I admitted. \"We went to dinner and talked a lot, but I don't think I ever asked her.\"\n\nI felt odd, admitting that I knew really very little about this woman I was \"dating,\" but our conversation had been mostly about my life, and my kids, and her adjustment to life in America and her family back in SA. We hadn't talked about work at all - hers or mine. It was refreshing, really, to talk to someone about something other than work. \n\nJudith raised her eyebrows a centimeter, but made no further comment. Our lunch done, we left the restaurant and Judith gave me the briefest of hugs, with a promise to call me for lunch again in the near future. It wasn't until I got back to the office that I realized that if she had ever had some project to discuss with me, it never made it into the conversation. \n\nMy meeting with Jack Morse and his team was scheduled for 2, and hoping to present a mostly professional appearance, I brought Max to a sitter I use for such occasions. She immediately started talking baby talk to him and reintroduced him to her Golden, so he hardly knew I'd left. \n\nI was on the phone when Jack and his team came in, but my staff showed them to the conference room. A couple of minutes later, I got off the phone and walked out to greet him. \n\n\"Jack, how are you?\" I asked, as I shook his hand. I was genuinely happy to see him. \n\n\"I'm great Collin,\" Jack said. \"I wanted to thank you again for this opportunity. I know we can do a great job for you.\"\n\n\"I'm eager to see your plan and meet your team.\"\n\n\"I've got some great people Jack, including a super new team leader you're going to love,\" he said, turning a little, to reveal the person behind him. \"Collin, I want you to meet Mthandeni Mdimba, who joined us a couple of weeks ago. We call her Deni.\"\n\nJack droned on in his introduction and I didn't hear any of it. For her part, Deni looked uncomfortable, but not surprised. I gathered she expected to see me here. I took a couple of steps and reached out to shake her hand. \n\n\"Jack, no need for the introduction - Miss Mdimba and I have met.\" Then to Deni, \"I had no idea you worked for Jack.\"\n\n\"How do you two know each other?\" Jack asked. \n\n\"We're friends from the bagel shop,\" I answered, my eyes never leaving Deni. \"She's a big fan of my dog Max.\" \n\n\"I asked Deni to head up this team, so it's great that you already know each other,\" Jack said, before launching into other introductions. I was shaking hands and trying to remember names as Jack brought up his team members, but out of the corner of my eye, I could see Deni, looking nervous and uncomfortable. I introduced my team to Jack and by the time everyone had exchanged business cards, Deni seemed to have recovered her composure. \n\nWe took our seats, and Jack thanked us again for the opportunity to pitch this work, and turned the meeting over the Deni to make the presentation. \n\nDeni did a great job. I was doing my best to divorce my personal feelings for her from my analysis of her team's proposal. They laid out a well thought out plan to leverage social media and traditional PR to boost my client's new campaign and to help make Karen Dennison a universally recognized face. And I was mesmerized by Deni in this setting too. She was confident and comfortable at the helm, despite her earlier discomfort, and I just knew my client would be well served by her and her team. Jack wrapped up their presentation. \n\n\"Collin, we've known each other for most of our lives, and are friends. But I'm not here as a friend today,\" Jack said. \"I'm here as a businessman who can bring to your client a professional team and a plan to work with you to boost this campaign. In the end, it's our job to make you guys look like heroes with your client, and we do that by bringing the considerable talents of Deni and her team to bear on this brand. We can do this, Collin. You have my word on it. \" \n\nWhen they were done, I asked Jack's team to step out of the room for a few minutes so we could confer, but I was pretty sure it was a foregone conclusion. My team agreed wholeheartedly and seemed to be excited to have a partner we could work with. \n\nI went out into the lobby to share the news with Jack. This was a big deal for Jack, maybe a game changer as well. I had made my old friend a happy man. After our goodbyes, I went back into the conference room to grab my file, and Deni was in there, unplugging her laptop and packing up her briefcase. \n\n\"Sorry to surprise you like this today,\" she said. \"It looked like it was quite a shock.\" \n\n\"It was, but a pleasant one as it turns out. How long have you known?\" \n\n\"I figured it out over the weekend when I was prepping for this meeting. I went to your website to learn more about your company, and there you were. I thought about calling you, but I just wasn't sure how you would react.\" \n\n\"Well, I'm happy I get to work with you - that's how I react. Are we still on for Wednesday?\" Deni was suddenly very busy with her briefcase. When she finally looked at me, the forced smile was back.\n\n\"Collin, I don't know. I have a strict rule about mixing business and pleasure, and this... this bothers me,\" she said. \"I know you didn't plan this, but if I date you, it looks like...\"\n\n\"You know you earned this business, right? You did a great job, and you'll do a great job on this account, whether we go to a movie together or not.\" \n\n\"I know, Collin, I really do, but... I hope you can understand.\" \n\nI had this sinking feeling, and my disappointment must have shown on my face. Deni reached over and squeezed my hand very briefly, and let go when Jack stuck his head in the door.\n\n\"Deni, you all packed up? \" \n\n\"I'm ready,\" she said, and turned to me and offered her hand to shake. \"Mr. Halloran, it will be great working with you. \" \n\n\"I'm looking forward to it,\" I said to her, and to Jack, added \"Jack, we need to schedule a trip to Dallas to introduce you to the client.\"\n\n\"Oh, that would Deni's job, Collin,\" Jack said to me. \"I'm done travelling. You guys are going to get to know each other better, I guess.\" \n\nI glanced at Deni just in time to see her go back to the forced smile from what could only be described as alarm.\n\n\u2003\n\nChapter Three\n\nI met Deni at the airport the following Thursday, in the departure gate area. We had made our reservations separately, so it was likely we weren't sitting together, which would be a waste of four or five hours of flight time. \n\n\"Where are you sitting?\" I asked. \n\n\"I think it's seat 23C,\" she said, looking for her boarding pass.\n\n\"That cheap bastard makes you fly coach?\" I teased. \"We'll have to see about that.\" I dragged her up to the counter, where I arranged to have Deni sit next to me in first class. She protested, but not a lot. \n\nSitting in the gate area waiting for our flight to board, I couldn't keep my eyes off her. I loved watching the way she interacted with other people - so warm and genuine, even with complete strangers. People responded to her so well. I'm sure some of it was her accent, but most of it was just her natural charm and ease with people. \n\nShe moved with such grace, it made me think she must have been a dancer in her youth. Her movements were fluid and beautiful. In a business suit, she managed to pull off being sexy without being inappropriate in any way. \n\nOver the last week and a half, we had talked three or four times on the phone, and had one brief meeting when she came to my office to drop off signed contracts and insurance certificates. In my office, she looked at my photo wall, with pictures of my kids growing up, many of them with Amy. She settled on a photo I took of my guys just last fall, when we had rented a cabin in the Adirondacks for a weekend.\n\n\"Your boys are very handsome,\" she said, looking over at me, then back to the picture. \"So, this would be Kevin?\" she asked, pointing to my older son. We had talked a lot about my boys over dinner. I was flattered that she remembered their names. \n\n\"Yes, That is Kevin on the right and Thomas on the left.\" \n\nShe looked back and forth a couple more times, and shared her appraisal. \"They look a lot like each other. No one would ever be surprised to learn that they're brothers. And both of them look so much like you.\"\n\nI laughed. \n\n\"That's what people tell me. I don't see it, really.\" \n\nBefore she left we stood close to each other for a couple of minutes, talking about the upcoming trip. Her scent was intoxicating to me and eventually I had to step away from her, as the urge to grab her and kiss her again was almost overwhelming. \n\n\"I need to be going,\" she said. \"So I'll see you at the airport in the morning?\" \n\n\"I'll be there, bright and early.\" We had commiserated about this brutally early flight, it left at 6, meaning I had to leave my house no later than 4:30 to make it to the airport on time. For Deni, it was more like 4:15. \n\nI walked over to show her out, and as I came close to her, her hand sought out mine and squeezed it, just a for a second. She looked at me and gave me a little Mona Lisa smile. \n\nThe gesture confused me. I'd spent the week before getting used to the new Deni identity - co-worker or colleague, rather than ... than what? Girlfriend? Love interest? Sex partner? After the phone calls and emails I had begun to resign myself to this fate, but that day her warmth was back. I had so wanted to pull her to me and kiss her - it was palpable. Now the little gesture with the hand implied an intimacy that I thought was gone. \n\nI was back to behaving like a teenager - I might as well pick a daisy and do the whole \"loves me, loves me not\" routine. It would be no less productive than what I was doing now, vacillating between hope and despair; wavering between guilt and excitement. \n\nWe boarded at 5:30, and made our way to first class, where the flight attendant greeted us and immediately asked us what we wanted to drink. Coffee, black, for both of us. Deni looked at me and grinned. \n\n\"They don't treat us this way back in coach,\" she said. \n\nI laughed. \"That's why we're in first class.\" Then I did my best Humphrey Bogart impression, \"Stick with me, kid, and your coach flying days are over.\"\n\nAs soon as we were on our way, we got our coffee and I asked Deni to take out her laptop, and for the next couple of hours, we went over her presentation to the client, with me playing the role of the skeptical client peppering her with questions, and testing her answers. It was effective, but also exhausting, and when we were done, we both put our seats back to catch a little sleep before the whirlwind day we had planned was upon us.\n\nI don't sleep well on planes, never have. Deni, on the other hand, seemed to nod off in a few minutes. Eventually, I closed my eyes and I must have dropped off for a few minutes. I don't know if it was the flight attendant's movements that woke me, or some noise, but I gradually came to with a great feeling of satisfaction and well-being that I couldn't quite identify at first. By the time I was fully awake, though, I had it figured out. Deni was sound asleep next to me with her head on my shoulder and her arm entwined with mine. We had put up the separating arm rest while we were going over the presentation, as it just made sense, so her side was pressed against mine from our shoulders to our knees. I reveled in the sensation for a few minutes, and watched out of the corner of my eye as the flight attendant who had served us pointed us out to one of her colleagues. I was curious about her reaction - I didn't care really whether she approved or not, but I couldn't say I didn't want to know. In the end I think they were more amused than anything - sixty something white executive and his hot young black associate sharing a little closeness before the big meeting. I know it seemed pretty improbable to me.",
        "Those few minutes before the sounds of flight attendants preparing to serve more beverages and what passes for food on an airliner finally woke Deni were heavenly. Feeling her next to me, feeling her warmth and having her hair tickle my nose was something I was going to remember for a long time. \n\n\"Good morning, sleepy head.\" \n\nShe stretched, then, realizing that her head was on my shoulder, straightened up a little. \n\n\"Oh, I'm so sorry...\" \n\n\"Don't be,\" I said. \"Best flight I've had in a long, long time.\" I looked over at her, and we shared a smile and she gave my arm a little hug as she disentangled hers from mine. \n\nWe each ordered more coffee, and played with a nasty looking Danish and some lukewarm egg-like substance in silence, as I pondered what had just happened, and what it meant, if anything. If I had to guess, I would guess that Deni was thinking along the same lines. \n\n\"You deserve to know why I was so freaked out when I found out I would be working with you, and why I canceled our date,\" she said at length. I was still enchanted with her accent, with words like \"found\" which seemed, somehow, to have and extra letter or two in them and were drawn out more than I would. \n\n\"Deni, there's no need to justify what you've done. If you're uncomfortable with it, that's that. No need for explanations.\" \n\n\"But there is,\" she said, \"because I obviously find you attractive, apparently even in my sleep.\" She grinned. \n\nShe composed her thoughts for a minute and continued. \n\n\"When I was home, in South Africa, I worked for the SABC - the South African Broadcasting Company. I wasn't an on-air talent, I was strictly behind the scenes, mostly working on promotions and public relations, which was a mess.\n\n\"I worked there for four years, and by the time I left, I had a lot of responsibility. I was running the PR office, and was interfacing with the Communications Ministry office almost every day. Eventually, the minister began to notice me.\"\n\n\"So, is the SABC part of the Communications Ministry? I'm confused.\"\n\n\"Sort of quasi-independent, or at least it was supposed to be. There was always a lot of talk that the ANC - the African National Congress - used the SABC to control the flow of news. Never anything explicit, but there was always this feeling that we shouldn't look too hard at the ANC's flaws.\"\n\n\"Hard to believe - corrupt politics.\"\n\n\"Anyway, there was a scandal about selecting a vendor to upgrade internet services to the schools in Gauteng and to create wired classrooms, which would allow them to replace textbooks with tablets and chalkboards with smartboards...that sort of thing.\"\n\n\"So they gave the contract to a crony or something?\"\n\n\"The brother of the Foreign Minister, to be exact, but somehow the news on SABC kept forgetting to mention that. And the newspapers figured out that the Communications Minister, who is like some distant cousin of the Foreign Minister, was putting pressure on the SABC to tread lightly on the story.\"\n\n\"And the SABC news people went along with this? \n\n\"Yes. Reluctantly, I'm sure, but not their finest hour. Anyway, I worked on that problem for weeks, and eventually the Minister began to take notice of me. I wish I could tell you he was impressed with my professional skill at bailing his sorry arse out of trouble, but that wasn't it,\" she said. Deni had a grim look on her face, the memory clearly painful. \n\n\"So one evening, I'm in the minister's office waiting for approval on a news release, and he comes out and calls me into his private chambers. I start explaining to him what we had prepared, but after a couple of minutes it's obvious that he could care less,\" she shudders a little. \"For weeks whenever I was in a meeting with him, he would say these things that made me uncomfortable, like, 'That dress looks outstanding on you, Mthandeni.' Little inappropriate remarks, but nothing too outrageous.\"\n\n\"But it made you uncomfortable.\"\n\n\"Yes, but I could handle that kind of thing. Sexism is rampant in the government. I got used to it.\"\n\nShe stopped for a minute, like she was gathering her strength. \"Then that night, after I'm in his private chambers, he starts talking to me like we're intimate, calling me 'Baby.' I just ignored it and sat down in front of his desk, thinking we were going to talk about this statement, but instead of sitting down in his desk chair, he comes up behind me and puts his hands on my shoulders and starts giving me a massage.\"\n\nAt this point, Deni looked down at her hands folded in her lap, where she was nervously playing with a ring on one of her fingers. And then she looked up at me and made eye contact and I saw pain there for the first time. \n\nHer voice got so quiet I had to lean in to hear her, so that our heads were just a few inches apart. \n\n\"And then he leaned down and ran his hands over my breasts and squeezed them, like we were lovers or something.\" Her voice cracked a little, and she had to take a deep breath. \"You have to understand, he is an enormous man with these huge hands. I tried to stand up, tried to get away from him, but he was so strong. I was struggling and crying, and he kept squeezing my breasts like they were his personal playthings. If his secretary hadn't knocked on the door, I'm sure he would have raped me right there in his office.\"\n\n\"Deni, I'm so sorry.\"\n\nShe was quiet now, lost in her thoughts for a minute. \"Over the next four or five weeks I did everything I could to avoid him. I would send male associates to any meeting if I thought there was a chance he would be there. I would messenger things to his office for approval, rather than bring them up in person. I know this is irrational, but I felt so ashamed. I did nothing wrong, but I was so ashamed and guilty that I tried to just stay in my office. I didn't want anyone to see me.\n\n\"I was spending more and more of my time trying to figure out how to avoid him, and everyone on my staff knew something was wrong. Finally, he tired of my little game and summoned me to his office. \n\n\"I was literally sick to my stomach going up there. When I was finally called in to see him, he was all business at first, tearing apart things I had worked on, belittling my efforts. But then he just stopped and stared at me and said, 'I can make your life miserable or I can make you a wealthy woman. Your choice.' Then he got up from his chair and came around his desk, and I moved back toward the door and stopped with my hand on the door knob. Deni gritted her teeth a little before she went on, struggling to keep her composure.\n\n\"I never have been so angry and focused in my life. I told him he was a pig, with not just one wife at home, but three. I said 'How dare you speak to me like this?' And when I said that he just laughed, and told me he could say whatever he wanted to me. And then he started to approach me. I opened the door behind me and fled and he just stood there laughing. He didn't care who knew that he was abusive to me.\"\n\n\"Couldn't you file a sexual harassment complaint?\" \n\n\"Oh, I could have, I suppose. But he would have buried it. You can't imagine how much power these people have. I went home and cried, and tried to figure out what to do with my life. I kept trying to figure out some way to keep my job, but never did I consider letting him touch me ever again. When I went to work the next morning, my badge didn't open the door, and security brought me into an office where there was a box full of my personal possessions - pictures of my family, of our dog, copies of personal papers that had been in my desk, old receipts for takeout food, a postcard my mother had sent me while on holiday, even a box of tampons I kept in the bottom drawer of my desk.\n\n\"That felt like more of a violation than him touching me, to be honest. Every little bit of personal privacy I treasured had been violated and was sitting there in that box in security. The director of security came in and handed me a letter, saying I had been dismissed for cause - namely insubordination - and I was disqualified for any kind of unemployment benefit.\"\n\nDeni looked up and made eye contact with me again. Her eyes were tearing up, just at that stage before the tear forms and rolls down her cheek. \n\n\"I went from being a modern, middle-class South African woman one moment to felling like I was more like a possession than a person. I was just stunned. I stood there for a couple of minutes taking it in, until my young guard became impatient with me. 'Come along, Sissi. You must leave now.'\" \n\nI reached over and took Deni's hand in mine, and gave it a gentle squeeze. She gave me a little smile. As we held hands, the rest of her story came tumbling out. \n\n\"A week later I started applying for jobs, sending out resumes and trying to network to find out about openings. But many of the people I thought were friends wouldn't even take my call. I never got a single call back on any of the resumes I sent out. I don't know how he did it, but he had poisoned the well. No one would touch me. It was outrageous and unfair and there was absolutely nothing I could do about it.\" \n\nShe sat quietly for a couple of minutes were her eyes closed, and then looked up at me and smiled again. \n\n\"I looked for jobs in SA for a year, taking the occasional freelance job to survive, and watching my savings dwindle. Eventually, I knew I would have to get out of the country to get away from this horrible stain on my reputation. That's how I came to the States. So some good has come of it. I have a great job, the best, most exciting work I've ever done and I've met some wonderful people.\" She looked at me, and gently squeezed my hand again. \"Including you. You've been really kind to me. When I told you I wasn't going to be able to date you, I had these flashbacks - like I was reliving that awful experience again. It was like I was standing in that security office again, with my life stripped bare for anyone to see. I knew you weren't like them, but I was vulnerable, and my experience was so fresh, I just couldn't see anyway that it could work.\n\n\"And, honestly, it brought back to me something I thought I had put behind me. After he groped me, and I was fired, I felt a little like I had brought this on myself. I've always been a very tactile person. I touch my friends and my coworkers, like with you when I took your hands at that fundraiser. I feel - I felt, I guess - like I had been putting out the wrong signals. I don't know why I do it, why I feel the need to touch people and I've been consciously trying to stop.\" \n\nMy hand holding hers suddenly seemed so inappropriate, so awkward. I started to disengage\n\n\"I'm sorry, Deni, I...\" \n\n\"No, don't be,\" she grabbed my hand and wouldn't let go. \"With you... with you, it just seems so natural. Like I have this connection with you...I trust you. I've only known you a couple of weeks, and yet I feel like it's been so much longer. You're the first man I've met since that happened that I have trusted. Honestly, you're the first man I've touched at all in a year.\" \n\n\"Collin, I know you were disappointed when I canceled our date, but I haven't seen a hint of resentment or recrimination. We've been able to work together like nothing happened. Honestly, I can't quite believe it.\n\n\"I just felt you should know this about me. I'm still a little gun shy when it comes to men, especially powerful men. Just know that it's not you.\" \n\nI admit I was a little overwhelmed. I didn't know what to say, and wasn't really sure what this meant for Deni and me, or if there ever would be another dinner or movie. Right at that moment, I realized there was a lot of hustle and bustle in the cabin, and the flight attendant came over and asked me to raise my seatback and tray table to the upright and locked position, and then we were in Dallas and other than a couple of lingering moments of eye contact with Deni during the day, it was eight or nine hours of back to back meetings with a client who was as enchanted with Deni as I had been.\n\n\u2003\n\nChapter Four\n\nIn the cab on the way back to our hotel, Deni was quiet. We talked for a couple of minutes about the day's meetings, and it was clear that we agreed - they could hardly have gone better. But then she withdrew a little into her corner and closed her eyes. I sat there and watched her, also quiet, noting, not for the first time her extraordinary eyelashes, long and black with a graceful curve upward. Combined with the soft curls of her hair, she was photogenic enough to be one of the models - like Karen Dennison. I could see her, in fact, in a commercial shot in a gym, improbably perfectly put together with just the right makeup and hair in place with a close-up that allows readers to see those beautiful brown eyes and eyelashes. \n\nWhen I came out of my little daydream, I realized Deni had opened her eyes and was watching me, watching her. And she just laughed at me. \n\nLater, we met for dinner, and as we were waiting to be seated, I reached over and fixed the collar of her blouse, which must have gotten tangled up in her coat when she took it off. Then I allowed the back of my hand to just graze her cheek a little. Her eyes met mine, and she smiled. \n\nOver dinner, we celebrated our success with the client with a bottle of wine, and I was impressed at the steak Deni ordered and proceeded to demolish. \n\n\"I was so nervous at that lunch presentation, and I really couldn't eat anything,\" she confessed. \"You must think I'm a glutton.\" \n\n\"I love a woman who can tackle a big steak,\" I said. \"Makes me feel less guilty about ordering one. My doctor wouldn't approve. He wants me to eat seeds and nuts, I swear.\" \n\n\"If anyone deserves a steak tonight, it's you. I am amazed at your relationship with this client, especially Mr. Jorgensen. He's so intimidating.\"\n\n\"Ken?\" I asked. \"I guess he is a little intimidating. I've known him forever, and he no longer has that effect on me, if he ever did. I was in his office once when his daughter stopped by with his grandchildren, just to drop something off. He just stopped what he was doing and got down on one knee and hugged them and played with them and was just their Grampa for a few minutes. Now, mind you, I wouldn't want to be on the opposite side in a dispute with him, but he's a decent guy.\"\n\n\"How do you do it?\" she asked. \"Everywhere we go, you have these friendships that go back a long time, with Mr. Jorgensen, with Jack, with Vito, with Judith. You seem to be surrounded by people you've known for ages and I can tell by just watching them; they respect you and listen when you talk.\" \n\nI considered what she said for a minute, and was a little uncomfortable with the look on her face, which bordered on admiration. I still wasn't sure what I wanted from this woman, but the admiration of a junior associate wasn't on the menu. Still, it was an important part of my business philosophy, and she would be an important part of this client's business going forward. \n\n\"When I was your age, I was all about the deal and the work, and, honestly, I stepped on a lot of toes. At some point I figured out that life is all about relationships and I began to be very careful about how I treat people.\" \n\n\"Well, it has worked, clearly.\" \n\n\"I still have to step on toes, occasionally. It can't be helped. But about 10 years ago, I went to this seminar on mutual gains negotiating. It was run by this MIT professor, and the whole approach is, basically, you don't have to lose in order for me to win. It really opened my eyes to a new way of doing business.\"\n\nWe sat for a while in silence, enjoying our wine, and letting our meals settle. \n\n\"Deni, I'm so glad you told me your story today. I know it wasn't easy for you to relive that experience.\"\n\n\"I really felt you ought to know.\" \n\n\"I hope you know that the last thing I would want is for you to go out with me because I hold some power over your career. That's not me.\"\n\n\"I know that, Collin. I never once thought that of you. You know, ever since that experience with the minister, my first impulse is to pull away. I'm acting out of fear, and, honestly, that's not like me. It's like a flight or fight response. And I have to consciously decide not to be afraid anymore.\" \n\n\"Deni, if we had met for the first time that day in my conference room, I would have been right there where you are - no mixing business and pleasure. But we didn't, and I have to tell you, brief as it was, that dinner we shared was big for me. Since Amy died, I haven't been on a date. You're the first woman I've kissed in all that time - really the first woman other than Amy I've kissed in decades. It made me think that maybe there is something left in this world for me other than work and my kids.\" \n\n\"Don't talk like that, Collin. I don't know how old you are, but you act very young. You talk like you're some old codger.\"\n\n\"So, how old do you think I am?\"\n\n\"Collin, you're putting me on the spot.\" \n\n\"Just guess, I won't be mad. C'mon. One guess.\"\n\n\"Well, you have a kid in his mid-twenties, so I'd guess, maybe late forties, early fifties? Mid-fifties, maybe?\"\n\n\"OK, I can live with that.\" \n\n\"You're not going to tell me now?\"\n\n\"Nope, You'll just have to get to know me better.\"\n\nI was still laughing at her when our waiter came by with the check, and I took a quick look at it and handed him a credit card. In a few minutes, we were walking toward the elevators, each of us a little lost in thought. I know I could articulate all of my reservations about getting involved with someone again, my kids' objections, the age issue, the fact that we were from such different cultures. The whole idea seemed improbable and risky, like my emotional well-being was at stake. But I also knew that when I was with her, I didn't care about any of those things. And when we weren't together, she was mostly what I was thinking about, and it had been that way since that very first moment in the bagel shop.\n\nI remembered that scene in Pride and Prejudice, where the older Mr. Darcy confesses his love for Elizabeth. \"You have bewitched me, body and soul.\" I wasn't ready to say that I loved Deni. But she definitely had cast a spell on me.\n\nThe elevator doors opened, and Deni and I stepped in, and reached over and pressed the buttons for our floors - eighteen for me, and twenty-one for Deni. Then Deni came close to me and slipped her arm around my waist. My arm went around her shoulders, and I pulled her to me. \n\n\"I would invite you to my room for a nightcap, but I'm afraid I have nothing to offer you,\" she said to me, looking up. \n\n\"Well, rank hath its privileges,\" I said. \"I have a suite with a complete bar. Would you like to join me?\" \n\nJust about then, the elevator doors opened and we stepped out onto the eighteenth floor and walked to the end, where my suite was located. Inside, I poured us each a whiskey - scotch for her, Jameson for me - and touched our glasses together in a silent toast. Then Deni put her glass down, and took mine and put it on the table next to hers, and put her arms around me and held me tight. When she looked up at me, I kissed her, hungrily and without any of the reservations I had been thinking of just a few minutes earlier. I put my hand on her back and pulled her closer. She must have felt my erection poking into her, and I was conscious of not wanting to push her too fast. But I was beyond the point of restraint. I moved a hand from her back to her breast and was frustrated by the suit jacket she was still wearing. She sensed this and broke for a moment to take the jacket off and then was back, with her hand feeling my hard cock through my pants and mine her breast through the silk camisole she wore under her suit jacket. Deni was fumbling with my zipper, and my hand had moved to her ass, never once breaking our kiss. But then, my phone rang, and the moment was broken. I grabbed it off the table where I had set it when we came in, and looked at the screen. ",
        "\"It's my son. Damn... I forgot, I told him we could talk now.\"\n\n\"Take it,\" she said, and picked up her scotch to take a sip. \n\nI answered Kevin's call, and as we were greeting each other, Deni kissed me on the forehead, grabbed her jacket and coolly walked out the door. \u2003\n\nChapter Five\n\n\"Sorry, did I interrupt something,\" my son Kevin, asked, in all sincerity. \n\n\"Er.. No, not really. A colleague was just leaving,\" I said, a half-truth, of course. \"How's Christina?\" \n\n\"Oh, she's good. Getting really big.\" My daughter-in-law was eight months pregnant, and I knew the anticipation was building. A happy time for the junior Hallorans, but an anxious time, too. \n\n\"You still going to the birthing classes?\"\n\n\"Yeah. Last one is next Tuesday. It's beginning to feel real to us. You said you're travelling? Where?\"\n\n\"We're in Dallas,\" I said, and immediately regretted the \"we.\" \n\n\"Who's we?\"\n\n\"Oh, me and an account supervisor from Jack Morse's firm.\"\n\n\"Oh, yeah, you said you were introducing his firm to Jorgensen's people. Why didn't Jack come, though?\" \n\n\"I think he felt his team leader would be better suited for this.\" I don't know what made me go there, but I suddenly had this need to tell Kevin about Deni. \"You haven't met his new team leader, but she had them eating out of her hand today.\" \n\n\"Oh, who's that?\"\n\n\"Her name is Mthandeni Mdimba, but we all call her Deni. She just moved here from South Africa. A great choice for this account. A real sweetheart. The men in the room couldn't take their eyes off her. Even old Ken Jorgensen was charmed by her. And she really knows her stuff, she put together a great plan for them.\" It all came flowing out, and I realized just a bit late than I had showed my hand, to my very perceptive son.\n\n\"Sounds like Dad is charmed by her, too,\" Kevin said with a little laugh.\n\n\"Well, honestly, I wanted to talk to you about ...\"\n\n\"Dad, are you seeing her?\"\n\n\"Well, we aren't exactly dating yet, but, we went to dinner once and...Why? Do you have a problem with me dating?\"\n\n\"It doesn't really matter, does it? It's an adjustment, is all. I have no right to tell you what to do.\"\n\n\"No you don't, but I do care what you guys think. You know part of me feels like it's really disloyal to your mother. But, I don't know, Kev. I'm really attracted to her...\" \n\n\"Tommy and I have talked about this. I mean we knew you'd start dating again. I just don't know that I'm ready to have a stepmother in my life now.\"\n\n\"Deni would never try to take your mother's place, with you or me.\" \n\n\"It will be fine.\"\n\n\"Doesn't sound like you're fine with it.\"\n\n\"Dad, I'm just having a real hard time with this whole idea of you replacing mom with someone else. I still can't believe she's gone, and now there's going to be someone else with you, it's like... I don't know... makes it harder somehow,\" Kevin's voice broke, just a little, and I knew this was a very emotional topic for him.\n\n\"First off,\" I said gently. \"I'm not replacing your mother, not at all. No one can replace her with me, Kev, you know that. But I not going to live the rest of my life alone, mourning your mother. Kev, I'm still pretty young, and I have a lot of good years left. I might want to share them with someone. I'm not saying Deni is that person, I don't know, but I like her, and need to find out.\"\n\n\"How old is she?\"\n\n\"I don't know, exactly, but mid-thirties I would guess.\"\n\n\"Jeez, Dad, she's closer to my age than yours\"\n\n\"Does that matter to you?\"\n\n\"Well, it'll be awkward as hell when we meet. You said she's from South Africa? Is she black?\"\n\n\"Yes. That's not an issue, is it?\"\n\n\"No, of course not. I'll just have to tell my friends that my dad is dating this hot young black woman half his age... \"\n\n\"What makes you think she's hot?\"\n\nKevin laughed, which cut the tension a little bit. \"Because I know you. Mom was beautiful and I can't imagine you with someone who isn't. I'm right, aren't I?\"\n\n\"Yes, she is definitely hot.\" \n\n\"See...\" \n\nWe changed subjects and talked for a few more minutes about his work, his life in Boston, and he and Christina's preparations for the baby. \n\n\"Are you coming when the baby's born,\" he asked. I knew it was important to him, and I wouldn't disappoint, but at the same time he had no idea how much his life was going to change overnight. \n\n\"How about I come after Christina's mom leaves?\" I asked. \"You guys are going to be overwhelmed.\" \n\n\"Ok, if you say so. I just will want you to meet the baby.\" \n\n\"Don't worry, Kev...\" Just then there was a knock at the door. \"Excuse me, someone is at the door.\"\n\nIt was Deni, back in shorts and a t-shirt, with a bottle of red wine and two glasses.\n\n\"Er, I need to go.\" \n\n\"So is that Deni?\" Kevin asked. \n\n\"Yes.\"\n\n\"Dad are you...No, never mind, none of my business. Listen, don't worry about Tommy and me. We'll adjust. But don't expect us to welcome her with open arms just yet. It's too hard.\" \n\n\"Ok, Kev, that's a deal. Love you.\"\n\n\"Love you too, Dad.\" \n\nDeni set the bottle and glasses down on the sideboard in the living room of my suite, and came back and put her arms around my neck. She had a quizzical expression on her face, but didn't ask. \n\n\"I told Kevin about you. He said he's not ready for a stepmother,\" I laughed a little at that image. \n\n\"Ok,\" she said. \"I'm not ready to be a stepmother, either. But, more importantly, are you ok with this? You said you were concerned about your sons' approval. I don't want to...\"\n\nI put my finger to her lips. \"We'll sort this out. This is between me and Kevin and Tommy. It's a process - I can't expect them to be overjoyed about this. If it gets to the point of you meeting them, we'll worry about it then.\" \n\nArms around my neck, she leaned back to get a better look at my face, then treated me to a big smile. \"Ok. I can accept that.\" \n\nWith that, I kissed her again, and ran my hand up her back under the T shirt, as she rubbed my renewed erection though my suit pants. \n\n\"No fair that I'm all dressed down and you're still business formal,\" she said, as she worked to unknot my tie and unbutton my shirt. As she worked on my tie, I leaned over and kissed her neck, just behind her ear, and began to work my way down to her shoulder. As I kissed her neck, I could hear a sharp intake of breath as I hit a particularly sensitive spot, and she sped up her work on my shirt, pushing it back over my shoulders, then hitting a speed bump at the cufflinks. She cleared that obstacle and my shirt drifted to the floor as she tried to figure out how to get my watch off. \n\n\"Just squeeze the catch on the bottom.\"\n\n\"Oh, right here?\" She pinched it, and slid it over my hand. \"Jeez... this thing weighs a ton.\"\n\nAs she was working on my cufflinks and watch, I worked on unclasping her bra under her T shirt, then raising them both up over her head and arms. They joined my shirt on the floor as I pulled a half-naked Deni to me and for just a minute, we enjoyed the contact of her skin against mine. \n\nHer shorts were loose around her waist, and with no belt, I was able to just push them down, leaving Deni standing there in just her panties. She kicked her shorts away and her hands went to my belt buckle, then to the button, clasp and then inside button on my suit trousers. \n\n\"Why do they make these damn things so hard to get into?\" Deni asked, laughing. But in a moment she had them around my ankles and I was the one kicking off my shoes and stepping out of my pants. Her arms went back around my neck and we kissed again, playfully, nibbling on each other's lips, tongues exploring. My hands were on Deni's ass, fingers exploring under her panties, gripping her cheeks and squeezing as I pulled her to me. Deni started kissing down my neck, then over my chest hooking her thumbs into my boxers, pulling them down as she went. In a heartbeat, she had my very hard cock in her hands, licking it, kissing and taking it in her mouth in one smooth motion. Once there she barely moved her mouth at all, but her tongue was in constant motion, swirling around the head, then the shaft, then the head again. In a minute of this, she had me so close, I thought I would explode. I reached down and grabbed her under her arms and pulled her back up. \n\n\"You don't like?\"\n\n\"I like too much. I want to make this last.\" \n\n\"Umm... me too.\" She kissed me again, and grabbed my hand to lead me to the bedroom. Just then, my phone dinged with an incoming text. She rolled her eyes a little as I retrieved my pants from the floor and pulled out my phone. \n\nThe text was from Tommy, typical for him, short and to the point. \"Talked to Kev. Go for it. Love you.\"\n\nI showed it to Deni. \"From my son Tommy.\" \n\nShe read it and laughed. \"I'm going to like him.\"\n\nDeni stretched out on the bed, and I joined her, stopping to pull off her panties, before laying down next to her so we could wrap our bodies around each other. Her hands were all over me, running up my back, and down my legs, over my ass, whereas I focused mostly on her breasts. \n\n\"I told you I like to touch,\" she said, with what had to be the sultriest smile I've ever seen. \n\n\"Umm... me too.\" I kissed her again, and started to work my way down her neck to her shoulder, and eventually to left breast. I licked and kissed it thoroughly, before sucking an enlarged nipple into my mouth and causing another sharp intake of breath. \n\nShe had put one leg up over mine, so her very wet pussy was rubbing against my leg with increasing urgency. I got the message, and worked my way lower, kissing and licking her taut abdomen and down to her pelvis. I kissed and nibbled on the inside of her thighs, only brushing against her pussy occasionally. I grabbed her legs, and rolled her over and started again lower, this time at the back of her knees, licking and kissing up the inside of her thighs until I got to the crease between her buttocks and her leg, which my tongue followed all the way to her soaking wet sex. Then I tasted her for the first time, licking her labia and that little patch of skin between her labia and her thigh. I flipped her over, and took each labia into my mouth in turn, sucking on it, licking it and just lightly nibbling on it. When I judged it was time, I let my tongue follow her wetness up to her clit, which I took into my mouth and sucked on it. \n\nDeni's first orgasm was almost immediate, with a low almost animalistic growl, she came and bucked on my face until I had to pull back or get hurt. \n\n\"Oh my God, Ohh... Ohh...Ohh.\" I laughed a little, and she cracked her eyes open enough to see me laughing, and couldn't help joining, even as she had these little convulsions that made her jerk, two, three or four times. As soon as she settled down, I went back to kissing, licking and getting her worked up again, and she could hardly believe it.\n\n\"Damn not again, Collin, Oh... oh .. right there, Oh my GOD! That feels so good. I can't believe you're doing this to ... Oh... Oh God!\" she came again, and while it was a fraction of the intensity of her first orgasm, it rolled over her for at least a minute of intense pleasure. \n\n\"Jesus Collin, I've never come like that.. Fuck...\" \n\n\"Is that the very proper Mthandeni Mdimba using the 'F' word?\"\n\n\"Goddamn Collin, yes, I was saying 'Fuck'.\" She almost yelled that last part, which made me smile so much. She had curled up in a little ball at this point, facing away from me. I crawled up beside her and put my arms around her, and pulled her tight. In a couple of minutes, she rolled over to face me, arms around my neck kissing me.\"\n\n\"Oh, you wonderful man,\" she said between kisses. \"Wherever did you learn to do that?\"\n\n\"It sort of comes naturally.\" \n\n\"Not to anyone else I've ever known.\" \n\n\"Maybe it's based on experience, you know, older and wiser,\" I said. \"You know you're not so bad in that department either... I almost lost it out there in the sitting room.\"\n\n\"Let's see how long it takes you to lose it now...\" She started working her way down to my neglected cock, playing with the hair on my chest, and giving me little kisses here and there. Meanwhile, I just admired her outrageously sex body. Long toned legs, a full ass and wide hips narrowing to a slim waist, toned belly and beautiful, round, firm breasts, which I refused to let go of. \n\nThis time Deni started with my testicles, gently licking and sucking on each one, gradually licking from my scrotum up to the base of my cock multiple times, until I was out of my mind with tension, waiting for her to get to my cock. I put my own hand on it at one point, but Deni slapped it off, as if to tell me that it was payback time. When she finally did get to my cock, she licked the length of it once, and when I thought she was about to put it in her mouth, she kept going and planted a kiss on my navel. I groaned when she did that, and it elicited a little giggle from her. She clearly enjoyed tormenting me. And instead of going back to where she had interrupted herself, Deni worked back up, eventually kissing me sensually for a long minute then kept going until her breasts were in my face. The torture she was giving me might kill me, but, oh, what a way to go.\n\nI lavished attention on her breasts as she suspended them over my face, both with my mouth and my hands, licking, squeezing, sucking, biting, pinching, all gently and lovingly. I was in heaven...I adore being able to please a woman in this way, and the fact that Deni was reveling in it also was just another sign of our compatibility. By now, Deni was straddling me, and as I played with her breasts, her wetness was just teasing the top of my cock.\n\nI broke away for a moment to take a breath and looked up at her face, where I saw a passionate woman, enjoying herself immensely. \n\n\"You know you're torturing me, right?\" \n\nShe laughed out loud. \"What is the torture? This?\" She rubbed herself on me more aggressively, and the head of my cock just barely pierced her opening once or twice. \"Poor baby,\" she teased, \"Are you all frustrated?\"\n\nAt that moment, though, she pushed back and down, and in a heartbeat I was completely inside her. \n\n\"Jesus, Deni, that's incredible.\"\n\n\"You like?\" Her hands were on my chest as she leaned back on her haunches and ground into my pelvic bone. \"Do you like back and forth, or up and down?\" She kindly demonstrated each technique. \n\n\"God, either... whatever you want.\" \n\n\"Well if I do it this way,\" she demonstrated the back and forth again. \"I might just come again before you do.\"\n\n\"That would be OK with me. I'd love to know what it feels like inside you when you come.\" \n\n\"Really?\" She started with the back and forth motion in earnest now, grinding her clit into my pelvic bone on each motion. I decided then that it was a race - not of who could come first, but of who could hold out the longest. I was determined to win. \n\nI put my hands on her hip bones to help her motion, and push down to grind her clit harder into me. And I pushed up with my hips at the same time, so that now the contact was almost continuous. But at the same time, she made each motion longer, so that on the back stroke, my cock almost left her pussy, and buried itself again as she came forward. \n\nDeni's face was a portrait of concentration. Her head was bent over, and her hair framed her face so beautifully, her eyes closed, mouth open, expressions of pleasure paying out over her face on every stroke. I was watching her as I began to tense, and I could tell she was close as well. When she came again, her head shot straight up, almost like she was howling at the moon.\n\nWe came together in the most intense pleasure I had known in a very long time. Deni seemed to be having little convulsions, twitching almost uncontrollably, then collapsed onto my chest, her head on my shoulder, arms around me. My arms went around her, too, and held her so tightly, as if I might lose her when this moment ended. My mind, to the extent it was working at all, was a tumble of emotions. I wanted to say \"I love you\" in the worst way, and in that moment, I think I did love her. But I knew there was a long way to go before what Deni and I had could really be called love, and we might never get there. I also didn't want to spook her, nor was I completely ready to lay to rest my mourning for Amy. All of those things, tumbled together, confused and confusing. So, I said nothing, but held her more tightly. \n\nDeni eventually rolled off me, and lay by my side, both of us spent completely, and content to lay together, holding each other. I couldn't keep my hands off her, running a hand down her back and over her ass, then further down her thigh, which she had pulled up and laid across mine. My other hand played with her hair, moving it where it was plastered to her face with sweat, petting it to admire its softness and resilience. When we had recovered just a little, I sought out her mouth and we kissed deeply, the urgency gone; replaced by a kind of intimacy I knew at once had been absent from my life for too long. \n\nWe may have dozed off, in the most pleasant cat nap ever. When I had recovered enough to stir, I went into the bathroom to grab a couple of towels and tossed one to Deni while I dried off and cleaned up with the other one. I grabbed the bottle of wine Deni had brought in, along with the glasses and a corkscrew off the bar and popped it open, pouring a glass for each of us. Then, I flicked on the Bluetooth speaker I always packed, and pulled up the satellite radio app on my phone, and treated us to a little Brahms. \n\n\"What is this? It's lovely,\" Deni asked. \n\n\"Brahms, the ultimate Romantic,\" I answered. \"He was, you know... a hopeless romantic in his personal life. He fell madly in love with Clara Schumann, the wife of his mentor, Robert Schumann. Most people think that it was never consummated, but they lived together for more than two years, while her husband was dying of syphilis. He had no self-confidence, Brahms. He would work and rework his pieces sometimes dozens of times before he would send them off to Clara for her opinion. If she didn't like a piece, he destroyed it. \n\n\"She was a great musician in her own right, a world-renowned pianist, but she could never be a composer - that was men's work. They met when he was 20 and she was 37. Age never got between them, apparently.\" \n\nWhile I was telling her this, I was lying next to her, kissing her between her shoulder blades as she lay face down on the bed, and running my hand over her utterly spectacular ass, which I could look at all day. \n\nShe rolled over to face me. \n\n\"I told you, age is just a number,\" she said. \"I don't want to have babies with you, so I don't think it matters at all.\" \n\nWhen Deni mentioned babies, I had this moment of panic. \n\n\"Jesus, Deni, I never even asked you about birth control... \"\n\nDeni laughed at me. \"Why do you think I went back to my room? I'm not so irresponsible to just leave it to chance. I went back to my room to change and put in my diaphragm. I told you, I don't want to have babies with you.\" \n\n\"Well, I'm glad to hear that. I still feel like I should have at least asked. I'm a little out of practice.\"\n\n\"You're so funny,\" she said. \"Nothing kills the moment faster than talking about birth control. That's why I was prepared.\" \n\nI took that in for a minute, but then it dawned on me.\n\n\"Why did you pack a diaphragm?\"\n\n\"The honest answer is that I don't know. I mean, when I was packing it, I was thinking about you. But it's not like I decided to have sex with you - nothing so definite as that. Honestly, this whole thing has taken me by surprise. But, how can I deny it? The electricity between us is always there. It was there at the bagel shop three weeks ago. It was there at Vito's. It was there on the plane. Surely, you must have felt it?\"\n\n\"I felt it, for sure, but honestly, I thought it was one-sided. Just my fantasy about a woman who was unattainable.\" "
    ],
    "authorname": "Damned_Yankee",
    "tags": [
        "south africa",
        "older younger",
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/business-or-pleasure-11"
}