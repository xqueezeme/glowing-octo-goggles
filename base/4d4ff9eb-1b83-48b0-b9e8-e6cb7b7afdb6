{
    "title": "Yours Ch. 06",
    "pages": [
        "Rose, Jessica, and I were hanging out on a Friday night. It was the first time the three of us had been alone together since Rose walked in on us last week, but surprisingly things weren't that awkward. \n\nRose had always been wary of the two of us, given our past, and that hadn't really changed. Obviously now she was watching us for a different reason. Rose and I hadn't really talked about it, other than me telling her again that I wanted things to stay private. \n\nReally, she'd taken the news that her twin brother was secretly banging her best friend pretty well. Better than expected. \n\nJessica and I hadn't been alone at all, which was bothering me. I wanted to talk to her about last week. It had been a huge step for us, our first real conversation about our relationship. \n\nI was dreading it, but I had to know where she was with it. \n\nRose left us alone only once, to go to the bathroom. She glanced at us both nervously on the way out, as if unsure about leaving us alone together. \n\nAs soon as she walked out the door, Jessica turned to me. \n\n\"I've was reading that stuff you sent me.\" she said excitedly, \"About BDSM.\" \n\n\"OK, good.\" I said, glancing at the door, \"This probably isn't the best time to-\" \n\n\"It's so exciting though, all the stuff about control and power. It's fascinating to think there are people who base their whole lives around this stuff.\" she said. \n\n\"Yeah, it's cool but-\" \n\n\"You're actually a really good Dom, did you know that?\" she said, \"The way you explain everything, and, like, I always knew you would stop if I asked you, and the way you-\" \n\n\"Jessica-\" \n\n\"And, like, I was reading stuff about submissives, like the role of a submissive, you know? Like, how I'm supposed to please you better, or-\" \n\n\"Jessica.\" I pleaded, \"Wait 'til we're alone, OK?\" \n\n\"Right.\" she said smiling, \"Yes Sir.\" \n\nShe winked at me, and I rolled my eyes. \n\nIt was strange, her knowing about this stuff. It made it feel less... dark. Less dangerous. But strangely it was just as exciting. In fact, as I sat back in the couch with a smile, I felt excited about what I had planned for the night. The guilt had faded, but that erotic spark remained. \n\nIt wasn't long before Rose came back, again glancing nervously between us as she entered. We kept the conversation light when she got back, but I could tell Jessica was excited to talk later. \n\nIt was getting late, and the night had been relaxed so far. \n\n\"So...\" said Rose, a sudden tension in her voice, \"What happens now?\" \n\nShe looked at Jessica, who was sitting on the couch beside her, and then over to me, sitting alone opposite them. She looked back to Jessica, who looked at me. \n\n\"I mean...\" Rose continued, \"You normally wait until I'm asleep to sneak over to his room, right? And then sneak back when you're... you know, when you're done?\" \n\nNeither of us responded, knowing she wasn't really expecting an answer. \n\n\"But now, you know, it's not a secret any more.\" she went on, \"Now that it's all out in the open... well, not really in the open but... I mean... you could just go up now, together, right? Would that be weird?\" \n\nI shrugged. \n\n\"It doesn't really matter.\" I said, \"I know you two like to get your alone time, to talk about... you know, girl stuff... tampons and bras or whatever...\" \n\nThey both laughed. \n\n\"So... yeah, I'll just head up to bed now, I think.\" I said, \"I'll probably be awake for a few hours, and if Jessica wants to visit me later, it's up to her.\" \n\nJessica smiled at me, and nodded. \n\n\"Sounds good.\" she said. \n\n\"So I'll see you later.\" I said, standing up. \n\n\"Night bro.\" Rose said. \n\n\"Later.\" answered Jessica. \n\nThis was unexplored territory for all of us, but it seemed to be going well. So far, anyway. \n\n== \n\nA few hours later, Jessica knocked on my door. \n\n\"Come in.\" I said. \n\nShe did. \n\nShe was wearing a tiny black slip, the hem barely reaching her thighs, and the material was so thin and tight across her ample chest, I could see the outline of her nipples. \n\n\"Hi.\" I said, sitting up in bed. \n\n\"Rose is still awake.\" she answered, ignoring my greeting. \n\n\"Uh... OK.\" I said uncertainly. \n\n\"She said there was no point in me waiting, you know? So when we got into bed, she was like 'I'll probably be asleep soon so you might as well go on over'. It was... awkward.\" \n\n\"That's... that's good.\" I said, \"Not the awkward part but... I'm glad she's taking this so well. I mean, we did lie to her for months.\" \n\n\"Yeah... But she seems... I don't know, weirdly supportive of the whole thing.\" she said. \n\nWe both looked away, and were silent for a few seconds. \n\n\"So anyway.\" I said, breaking the contemplative silence, \"Get on your knees, slut.\" \n\nShe beamed at me, and gracefully sank to the floor in the middle of the room. \n\n\"Right away Sir.\" she said playfully as she knelt. \n\nI considered reading for a while, maybe relaxing by listening to some music with her just waiting there for me, but I decided against it. Maybe it was enough that she knew I could keep her waiting. There was no point to proving it again, other than to frustrate her. \n\nI stood up out of bed and walked over to her. I liked standing over her like this, her staring up at me. The perfect height for a blow job too, if the mood struck me. \n\n\"So... what are we going to do tonight, sweetheart?\" I asked. \n\n\"Anything you want, Sir.\" she said, smiling. \n\nThe perfect answer. \n\nBut then she frowned, and glanced away. \n\n\"But first... I want to show you something.\" she said. \"If that's OK.\" \n\n\"Show me what?\" I asked. \n\n\"I... I bought something for you.\" she said nervously. \n\n\"Oh? Another sexy little outfit?\" I asked. \n\n\"No...\" she said quietly. \n\nI waited for her to continue, but she didn't. \n\n\"Then... what?\" I asked \n\n\"I... I didn't get you anything for Christmas... I felt bad about it and... and Valentine's day is next week...\" \n\nShe'd gotten me a Valentine's present? I was stunned. \n\n\"It's next Thursday.\" she continued, \"And we won't be alone until Friday... I could have given it to you then, but I didn't want to be late... so I... I have it outside.\" \n\nShe was nervous, rambling, and I was still too surprised to interrupt her. She wasn't looking at me, but staring at the ground. \n\nI'd never received a Valentine's... anything before. From anyone. Not even so much as a 'just friends' card from a polite girl. \n\n\"Can I give it to you?\" she asked, \"I know you said you weren't expecting a Christmas present... and, you don't have to get me anything, I just... I just wanted to get you something.\" \n\n\"Get it.\" I said. \n\nShe smiled up at me, then excitedly jumped up and ran to the door. She opened it, and outside was a little brown bag. She snatched it up and walked back, forgetting to close the door. She seemed to remember so doubled back to close it, then turned to walk back. \n\nShe stood in front of me and made a motion to hand the bag to me, then seemed to re-think it and sank back to her knees, looking up at me. I stood watching all of this, unmoving and expressionless. \n\n\"Relax, sweetheart.\" I said, though as more of an order than a comfort. \n\n\"Sorry.\" she laughed, \"I'm just really nervous.\" \n\nShe looked down at the bag in her hands, then slowly raised it to me. \n\nI took it from her, and held it for just a second. \n\n\"It's not much...\" she said quietly, \"I just saw... I mean, I saw the... Well, it doesn't matter, I mean you'll see it...\" \n\n\"Stop talking.\" I ordered quietly. \n\nShe nodded quickly, and looked down. \n\nI stood and stared at her for a moment, collecting myself. \n\nFor some reason I thought of the night this all started, way back when I first overheard her talking to Rose about Mike. Back when the only thing I wanted from her was to leave me alone, and to get that the best thing I could think of was to flash her. \n\nThe memory made me smile. \n\nAnd now... now she was actively teaching herself how to better submit to me. How to please me. She was kneeling at my feet and handing me a gift that she had no obligation to give, but that she wanted me to have anyway. To make me happy. \n\nAgain, I smiled to myself, staring at her kneeling form. \n\nI opened the bag, and pulled out the object inside. A small, brown box. Jewellery's? I opened it. \n\nIt was a wrist watch. I took it out of the box, dropping both it and the bag on the floor. \n\nThe watch felt heavy, and it looked expensive. It had a black leather strap, and the metal around the face was a dull, metallic gray. The face itself was black, with nothing more than thin, silver lines to indicate the places of the numbers. I stared at it, literally watching the time tick by on the slender, silver hands. \n\nI flipped it over. On the back were the usual markings; the brand, the depth to which it was waterproof, and the indication that it was made of titanium. \n\nBut right in the center, in an elegant yet simple script, two words were engraved. \n\n\"Forever Yours.\" I read aloud. \n\nShe looked up at me, and I stared back, keeping my expression neutral. \n\n\"It...\" she started, then stopped. \n\nI raised and eyebrow, then after a second, nodded. \n\n\"It was one of the default messages.\" she said quickly, \"Anything in the men's section of the jewelery store... there were three different messages, free to engrave. Anything custom would have... would have cost extra... Not that the price mattered or anything...\" \n\nShe trailed off, seeming to realize she was rambling again. \n\n\"I mean, I just... I noticed you don't wear a watch. I thought it would be a nice gift... I saw that one, with the leather and the... the face. And then I saw the sign, right above it. 'Complementary Engraving... Forever Yours.' It just seemed... perfect.\" \n\nShe looked up at me, fear in her eyes. Was she afraid I was going to throw it away? Smash it in front of her? Or maybe just refusing it would be enough to hurt her. \n\nI looked back at the watch. I liked how simple it looked; no extra dials or complex designs that so many pieces seem to have. Just a black face with a few silver markings. \n\n\"It's a nice watch.\" I said, \"Very... minimalist design. I think it suits me.\" \n\nI slipped the watch on my wrist and fastened it. I stared at it, thinking about the words now pressed against my skin. \n\n\"Thank you, Jessica.\" I said, looking down at her. \n\nShe beamed up at me. \n\n\"You like it?\" she asked, \"I have the receipt, and... like I said it was one of the default things so I can return it-\" \n\n\"I like it.\" I said. \n\nShe smiled again, and nodded. \n\n\"But... I hope you don't think this going to make me go any easier on you.\" I said, turning away from her. \"I was planning something... fun, for tonight.\" \n\nI walked towards the bed. \n\n\"You mean... fun for a... for a masochist slut like me, Sir?\" she asked hesitantly. \n\nI stopped in my tracks and turned to look at her over my shoulder. I gripped my fist tightly to stem the sudden tide of lust that flowed through me. She was so... tempting. \n\n\"Exactly.\" I said. \n\nI sat down on the bed and tapped my leg, calling her over. She crawled without hesitation, coming to kneel between my legs. \n\n\"We're going to play a game tonight.\" I said. \"It's... probably going to hurt.\" \n\n\"I like it when you hurt me.\" she replied, smiling, but I could hear the fear in her voice. \n\nI let out a deep breath, trying to ignore my already rock hard cock. When this had all just been a way to torture her, it was sexy. When she was afraid, ashamed, in pain... it was sexy. But when she was like this? Openly willing, knowing exactly the treatment she was likely to get... and still saying things like this? \n\nAgain, the only thing stopping my from pinning her to the floor and fucking her brains out was my quickly weakening will power. \n\nI got a loose grip on her hair and stood up, forcing her to stand with me. As she looked at me her eyes darted to my lips, and her own parted slightly. I reached down and gripped the hem of her tight, revealing slip and slowly peeled it upwards. \n\nHer skin seemed to tremble against my fingers as they slid along her body, revealing her matching black panties, then her toned stomach. I looked her in the eye and continued to undress her. She raised her arms as I reached her full tits. I paused for a moment, then yanked the tiny dress over them, bouncing them into view. \n\nShe raised her arms and let out a tiny whimper as I pulled it up over her head, then dropped it carelessly to the floor. \n\n\"I like you in black.\" I said quietly. \n\nShe leaned in to kiss me, but I put my hand against her throat. \n\nWithout speaking, I sank to my knees. I ran my hands up the outsides of her thighs to her waist, where I sank my fingers under the waistband of her black panties. \n\nI slowly slid them down, ignoring the whimpering moans she was letting out. After sliding them down about an inch, I paused. I could smell the arousing scent of her pussy, but even more erotic, I could see a thin strand of her natural lubricant clinging to the material as it fell away. I resisted the urge to yank them away from her, and continued my slow undressing. \n\nWhen her panties reached her ankles, she delicately stepped out of them and spread her legs slightly. Without looking up at her, I ran my middle finger upwards along her pink lower lips, collecting the warm liquid. I licked my own finger, tasting her. I closed my eyes and knelt forward, using my tongue to trace the same path my finger had just traveled, then lightly flicked it against her erect clit. \n\nShe gasped with pleasure and grabbed my shoulder to steady herself. I knew this was a somewhat submissive position to be in, kneeling at her feet, but I didn't care. I wanted to taste her. \n\nI reached under her leg and raised it over my shoulder. I wrapped my arm around her hip to steady her, and again tasted her pussy. This was only the second time I'd done this, but already I found myself enjoying the taste. After all, this heat and wetness just meant she was ready for me. \n\nShe gasped and moaned above me, and grabbed both my shoulders hard. I savored the taste, but I didn't want her to cum yet. I licked her clit a few more times before pulling away, and letting her leg slide off me. \n\nI stood up slowly, wiping her juices from my lips and again tasting my finger, before looking at her again. She was blushing a deep red and seemed out of breath. She put her hands against my chest and leaned forwards, desperately wanting to kiss me. \n\n\"Get on the bed.\" \n\nShe hesitated, staring into my eyes, but pulled away and walked quickly past me. She lay down on the bed, throwing the covers over the edge. \n\n\"The rules of this game are the same as always, sweetheart.\" I said, taking off my t-shirt, \"I'm going to fuck you, and you're not allowed to cum. For every orgasm, you'll get a punishment. Understand?\" \n\nShe nodded, staring at my body. I took off my pants and squeezed my cock through my boxers, before sliding those off too. Naked, I took off the watch she'd given me and put it on my nightstand. \n\nI got on the bed and lay over her, my thick cock pointing straight out from my body. She eyed it hungrily. I grabbed the base of my cock and pushed the head down against her pussy lips, then gently tapped her clit a few times. \n\nShe moaned frantically and pushed her hips upwards, trying to grind her pussy against my cock. I pulled it away from her, laughing. \n\n\"Oh sweetheart... this isn't going to take long at all, is it?\" I taunted her. \n\n\"No, Sir.\" she answered breathlessly. \n\nI laughed again, and pressed my cock against her pussy. I slowly pushed myself into her, sighing at the pleasure of her tightness. She sighed with desire as I filled her. \n\n\"Mmm... Oh, Sir...\" she whimpered. \n\nI pinched her right nipple hard. \n\n\"No talking.\" I said, as I began to pull out. \n\nI groped her tits with both hands, pinching her nipples and squeezing her. I picked up the pace, quickly thrusting in and out of her with my hips, groaning at the heat of her silky pussy. \n\nShe was whimpering constantly, letting out gasps and whines as I fucked her. She reached up and dug her fingers into my shoulders, her nails hurting me. \n\n\"Sir...\" she whimpered. \n\nI reached up and slapped her lightly, causing her eyes to open with shock. \n\n\"No talking.\" I grunted, as my hips sped up. \n\nI kept toying with her nipples as I fucked her, and it made it a lot harder for her to keep control. After only a few minutes she had that desperate, panicked look on her face. \n\n\"Sir... I'm... Oh fuck, I'm...\" she moaned. \n\nI didn't slow down, and pinched her nipples harder for speaking. \n\nThe extra pain sent her over edge and she came hard, already apologizing to me as her body shook with pleasure. Even at the height of her bliss she knew that her pleasure belonged to me. \n\nI kept up my pace and fucked her through her orgasm, but slowed to a stop when her pussy stopped spasming around my shaft. \n\n\"That's disappointing.\" I said quietly, pulling out of her. \n\nI let my wet cock rest on her lower lips, and again she lightly thrust herself forward to grind herself against it. \n\n\"I guess it's time for the first punishment.\" I sighed, pulling away and getting off the bed. \n\n\"I'm sorry...\" she sighed, her voice filled with lust, \"I couldn't help it Sir... Your big... your big cock just felt so good.\" \n\n\"I wonder if you know what 'Don't talk.' actually means...\" I said, reaching into my closet. \n\nI pulled out two things, one in each hand. A thick, black leather strap in my left, and in my right... \n\nA riding crop. It was brown, about a foot and a half long. A thick handle with a long, thin shaft leading to a flat head of brown leather. \n\nI didn't look at Jessica as I revealed it, but studied the crop itself, holding it flat. I suddenly tightened my grip and sliced it through the air, hearing a distinctive whooshing sound. \n\nI'd practiced with this earlier, of course. Even going as far as to try it out on myself, whipping along my left forearm in different ways, different speeds. I couldn't get the full range of motion from that angle, but I had a pretty good idea of how much force to use. And, going by the bruises on my skin, a good idea of how much it would hurt. \n\nI finally looked at her, and her eyes were wide. She was biting her lip, and I honestly couldn't tell if she was more afraid or more aroused. \n\n\"This is a new toy I bought just for you.\" I said, walking back to the bed. \n\nShe didn't respond, but just nodded, still staring at it. \n\n\"It's called a riding crop.\" I explained with a casual tone. \n\nI reached the bed, and put both the strap and the crop on the bed, then grabbed her by the shoulders. I flipped her roughly over on to her front, surprising her. \n\n\"It's usually used on horses, you know, like for racing.\" I continued, my calm voice contrasting my rough treatment. \n\nI guided her to put her legs under her, thrusting her ass into the air. \n\n\"Wild animals that need to be whipped to understand they have to do what they're told.\" I continued. \n\nShe was now in the perfect spanking position. \n\n\"So I guess... it's perfect for you.\" I said thoughtfully, picking it up. \n\nI stood behind her, staring at her glistening pussy presented to me from behind. My cock was throbbing, as if begging me to ignore all this BDSM bullshit as just fuck her brains out. I squeezed it with my free hand, and smiled. \n\nI swished the crop through the air a few times, causing her to whimper at the sound. I placed the head of it against her round, firm ass cheek, but then pulled it away. \n\n\"So sweetheart... what am I about to do?\" I asked. \n\n\"You're about to... to...\" she stuttered. \n\n\"Come on sweetheart, don't waste my time.\" I said, \"You know this.\" ",
        "\"You're going to punish me, Sir.\" she said quietly. \n\n\"And why?\" \n\n\"Because I disobeyed you.\" she said. \n\nI didn't respond. \n\n\"I... I disobeyed you... I had an orgasm without your permission, and I spoke...\" she said, \"Um, without your permission, um, Sir.\" \n\n\"Right.\" I said. \"And you need this punishment in order to do better in future, don't you?\" \n\n\"Yes, Sir.\" she said, \"I want... I want...\" \n\nShe hesitated. \n\n\"Jessica, speak up.\" I prompted, \"Tell me what you want.\" \n\n\"I want you to punish me.\" she said quickly. \"I mean... please punish me, Sir. \" \n\n\"You're begging me to hurt you?\" I asked. \n\n\"Please Sir.\" she repeated. \"I... need it. To... to be better. I want to be a good girl for you.\" \n\nAs soon as she stopped speaking I lashed out with the crop, unable to hold myself back any longer. \n\nHer body jumped in surprise, and she squeaked with pain. \n\n\"Oh, I suppose I should ask you to count.\" I said. \n\n\"One.\" she gasped. \n\nI smiled and whipped her again. \n\n\"Mmmm... two!\" she said. \n\nI could tell it was hurting her, and red marks instantly rose to the surface of her creamy, smooth skin where I struck her. \n\nI whipped her again, and again, waiting for her obedient count each time. The crop felt good. It had a certain feeling of control to it that I liked. The belt took my whole body, my arm reaching all the way back to be able to hit her as hard as I could, but with this thin tool all it took was a quick snap. \n\nI reached five, but decided to push to ten. She seemed to relax after the fifth, and I smiled when the sixth made her jump with surprise. \n\nShe stopped when we got to eight, pausing for about a minute. She seemed to be handling this pain a lot better than in the past. When I'd first spanked her she'd cried, and that had only been with my hand. But the last time, she'd taken dozens of hits with the belt and stayed standing. \n\nWell, until she fell. \n\nI didn't have a good idea of her pain threshold yet. How much of her hesitation was because of the pain, and how much was the humiliation? \n\n\"Jessica...\" I said slowly, \"We don't have all night.\" \n\n\"Nine.\" she said calmly, and I whipped her as soon as the word left her mouth. \n\n\"Ten!\" she gasped. \n\n\"Good.\" I said, placing the crop on the bed beside her. \"Now let's see if you can behave yourself.\" \n\nI knelt on the bed and mounted her, lining my cock up with her wet, lower lips and plunging myself into her. \n\nShe squealed at the sudden sensation, and I grunted too. She felt incredible like this, so much tighter, if that were even possible. I grabbed her by the hair, bunching it up in my hand and pulling against it each time I pulled out. \n\nI fucked her slowly, deeply, each thrust lasting a measured few seconds. I found a steady rhythm and lost myself in it, allowing myself to feel the intense pleasure of her sex. \n\nBefore too long she let out a squeal of pleasure, and came hard around my cock. I loved the feeling, but sighed with disappointment, knowing I'd now have to stop again. I fucked her through her orgasm and knew I should stop, but I couldn't. \n\nInstead, I picked up the pace, slamming my cock into her. \n\n\"Oh... God, Sir!\" she squealed, and I slapped her bruised ass hard. \n\n\"Shut the fuck up.\" I grunted. \n\nI thrust into her hard and fast, again and again, until I felt my own orgasm approach. \n\nI let it overwhelm me, for a few seconds not caring about Domination or pain. I just wanted to fill her pussy with my cum. \n\nI sighed as the waves of pleasure faded, and pulled out of her. \n\n\"Fuck Jessica, you only lasted a few minutes that time.\" I said, getting my breath back. \n\nI backed off the bed stroking my semi hard cock. \n\n\"I'm sorry Sir.\" she said, a sultry smoothness to her voice, \"This bad slut needs to be punished.\" \n\n\"I think you're right.\" I said, picking up the crop. \n\nI whipped her hard across the ass, and after jumped and gasping in pain, she actually giggled. \n\n\"That's one, Sir.\" she said. \n\nI continued to punish her, first whipping her across the bottom of each thigh, then the top of her ass, close to the bottom of her back. \n\n\"Four.\" she said, excitement clear in her voice. \n\nShe was loving this. \n\nFor the final lash, I aimed right at her pussy, bringing the leather down hard. She jumped forward so fast she almost slammed her head into my headboard. \n\n\"Ahh... five Sir.\" she whimpered. \n\n\"Hm.\" I answered, dropping the crop. \n\n\"I... I spoke too, Sir.\" she said. \n\nI paused, then smiled. \n\n\"Yes, you did.\" I said, picking up the crop again. \n\nI hit her five times in quick succession, mostly on her cheeks with one or two dipping to her well fucked pussy. She gasped and sighed, but didn't bother to count as I didn't give her time. \n\n\"Thank you Sir.\" she said when I finished. \n\n\"Any time.\" I answered. \n\nI picked up the black strap and bound her arms behind her back, pulling it tight into her flesh. I did it quickly, eager to get back to it. \n\n\"Sit up.\" I said, pulling her up by the hair. \n\nIt was tough without her arms, but she sat up on her knees. \n\nI lay down on the bed and grabbed my hard cock by the base. \n\n\"Sit.\" I said simply. \n\nShe smiled and started to wiggle her legs, trying to get on top of me without falling over. It was sort of funny to watch, and she blushed when I let out a small chuckle. \n\nWith my help she raised herself over me, and sank slowly on to my cock. \n\n\"Mmm... fuck...\" she moaned, enjoying the sensation. \n\nI'd left the riding crop beside me, and I picked it up. I quickly reached behind her and whipped her hard across the back. She hissed at the pain and arched her back, thrusting her tits forward. \n\n\"Don't talk.\" I said simply. \n\nShe bit her lower lip and nodded, and slowly started to fuck me. I lay back with my arms resting behind my head, and closed my eyes. \n\nShe felt incredible around my cock, as always, and she was really trying to keep a steady rhythm with her hips. Unfortunately, every few strokes she'd falter, and either sink too quickly downwards, or hesitate too long moving up. \n\n\"Here sweetheart.\" I said. \n\nI reached behind my pillow and took out a little brown bag. Out of it I pulled a blindfold, and I sat up. \n\n\"You need to concentrate.\" I said. \n\nShe bit her lip when she saw it, but just nodded as I slipped it over her head. \n\nI sat back with her effectively blinded, and enjoyed the site of her. \n\n\"Move, slut.\" I ordered, lightly whipping her shoulder. \n\nShe grunted with pain and started to ride me again, biting her lip in concentration. Her rhythm was more consistent now, and I was able to just enjoy the pleasure she gave me. \n\nShe rode me quickly, falling into an easy rhythm. \n\n\"That's it slut, ride my cock.\" I grunted, pushing my hips up. \n\n\"Yes... yes Sir...\" she gasped. \n\nThe stimulation was getting to her, I could see that. As I watched her body twitch and shake, her large tits bouncing and shaking with every thrust; and as I listened to her addictively erotic moans and squeals, I was once again amazed by the sheer eroticism of her. \n\nAnd again I was amazed by her capacity for pleasure. After mere minutes of riding me, she was again about to cum. \n\nShe let out a series of distressed feminine grunts as her soaking wet pussy captured my full erection over and over again, her toned stomach tensing and flexing with effort. \n\n\"I... I'm sorry!\" she barely managed to squeak, as yet another orgasm washed over her. \n\nShe sat still as her tight pussy twitched and squeezed around my cock, but after a few seconds she began to shakily ride me again, trying to prolong her pleasure. \n\n\"Oh.. fuck Sir, oh my God!\" she squealed, as she squirted her juices around my cock. \n\nShe eventually slowed, and sat panting with her mouth open wide. \n\n\"That was two orgasms, wasn't it sweetheart?\" I asked, forcing my voice to remain calm and casual despite the constant arousal and pleasure she was providing. \n\n\"Yes Sir.\" she sighed, her voice becoming hoarse. \n\n\"And you spoke quite a few times.\" I sighed, picking up the crop. \n\n\"Yes S- Ah!\" she squeaked, as I began to whip her chest. \n\nI attacked both her nipples, first one then the other, over and over, then whipped along her collar bone, leaving a trail of slowly appearing red blotches along her perfect skin. She gasped and twitched with every light, stinging stroke, but never once tried to shy away from the pain. \n\nI stopped at fifteen, and dropped the crop beside me. \n\n\"I'm really sick of you talking.\" I said casually, \"A good slut should know when to shut up.\" \n\n\"I'm sorry Sir.\" she said, her voice unsteady. \n\n\"That wasn't an invitation to speak.\" I said, my voice stern. \n\nShe wisely clamped her lips shut, just as she was about to apologize again. \n\nI reached into the brown bag and pulled out another toy. The very first thing that had been delivered to me, my first real tool. \n\nThe ball gag. \n\n\"Open your mouth.\" I ordered. \n\nShe parted her lips slightly. I roughly stuck two fingers between her lips and spread them, making her open wide. \n\nI placed the bright, red rubber ball into her mouth, and quickly pulled the black leather strap behind her head. \n\nShe grunted in surprise and turned her head quickly to the side as I tightened the gag. I wasn't sure how tight to make it, but when I fastened the buckle it looked a lot like it did in all the pictures. \n\nHer perfect white teeth stood out against the deep red of the ball, and she was squeaking with terror. I grabbed her chin and turned her face towards me, taking the opportunity to pump my hips a few times, grinding her clit against my pubic bone.  \n\n\"There, isn't that better?\" I asked soothingly, \"Now you won't forget.\" \n\nI reached up and lightly tugged on her hair. \n\n\"Now get back to work.\" \n\nShe didn't respond at first. She just sat there, impaled and gagged. \n\nShe let out a quick, garbled squeak, as if trying to speak but realizing she couldn't. \n\nShe looked down, although still blinded, and seemed to shiver. She was breathing heavily through her nose, and she uselessly moaned again. \n\n\"If you want to stop, just get off.\" I said lazily, as if it didn't make a different to me. \n\nBut I knew, of course, that she couldn't tell me to stop if she couldn't speak, which is why I'd moved her on top of me before gagging her. \n\nShe sat for another minute, then eventually started to move. \n\nShe squeaked with pleasure, then stopped again. \n\nI valued my self control, but even I had my limits. Sitting like this, fully buried inside her tight, warm pussy without actually moving was driving me insane. \n\n\"Hurry up!\" I grunted, whipping her chest again. \n\nShe reacted to the pain and jumped up a few inches, then slowly sank down. She quickly found a rhythm, finally getting back to a decent pace. \n\nI sighed with frustration and lay back. She'd been in my room for what had to be almost an hour and I still hadn't cum. \n\nShe suddenly fell forward, without her arms to stop her. Her chin fell against my shoulder, but she didn't stop moving. In fact, with this new angle she took the opportunity to ride me even harder, her sexy hips rolling wildly. \n\nI held her head and turned to her, loving the erotic, desperate, yet muffled gasps of pleasure she was panting into my ear. I buried my face in her neck, biting and licking her throat. \n\nShe squealed, and came again, hard. \n\nShe stopped shaking her hips, and her body sagged against me. \n\nI grabbed her shoulders and pushed her off, sitting her up right. \n\n\"Naughty slut.\" I said, \"When are you going to learn?\" \n\nI reached into my bag and pulled out yet another toy. I hesitated, looking at her. \n\nShe was crying, I realized, tears slowly falling from her covered eyes. She was sitting too steadily either, looking like she was about to collapse. \n\n\"If this is all you can do, you might as well get off.\" I said. \n\nShe shook her head violently and started to move again, grunting with each thrust. I let out a sigh of relief. I'd worried I'd pushed her too hard, but she didn't need to stop yet. \n\n\"Stop.\" I ordered. \n\nMy final toy was a pair of nipple clamps, connected by a thin, but long steel chain. \n\nI held the small clamps open with my fingers. Again, I hesitated. \n\nBut not for long. I released the clamps at the same time, slowly letting them bite into her erect nipples. She whimpered with pain, gasping through the gag. I let the chain hang down between them, tugging on it gently before letting bounce off her tight stomach. \n\nI saw more tears leak out from under the blindfold, and she let her head hang back. The sight was so erotic, I couldn't stop my hips from thrusting upwards. \n\n\"You better be careful, sweetheart.\" I sighed, stroking her face. \"A few more orgasms and I might run out toys...\" \n\nI smacked her ass hard, making her jump. \n\n\"Go.\" \n\nShe whined loudly, but took a deep breath. \n\nShe pushed down with her knees, but again lost her balance and fell forward. I wordlessly grabbed her by the throat and pushed her upright. \n\n\"Go.\" I said again, more sternly. \n\nAgain, she let out a delicious little whine. She breathed deeply through her nose, and slowly started to rise off my cock. \n\nI stayed silent, watching her beautiful, quivering body lift upwards, her tight pussy clinging to my shaft as it went. She reached about half way up, then quickly sank down again, whimpering at the sensation. She did this a few more times, and I was getting impatient. \n\nI picked up the crop and flicked my wrist backwards, catching her lightly on the back of her shoulder with the stinging tip. \n\n\"Jessica, I know you don't want to cum again...\" I sighed, sounding bored, \"But you're not being very fun.\" \n\nI saw her jaw clench slightly as she bit into her gag, then started to move with more purpose. \n\n\"That's it sweetheart.\" I encouraged, \"Let's see if you can make me cum.\" \n\nTo be honest, I could have finished at any moment. Having her bound like this was powerfully erotic, and her wet pussy always felt incredible. But this was as much about the control of my own pleasure as it was about controlling her. \n\nI reached over to grab my camera from the night stand, putting a hand against her shoulder to stop her toppling as I leaned. \n\nI lay back and snapped a few more loud pictures, enjoying the way she'd tense and squirm with every click. I gently put the crop against her face, taking a few shots with it included. \n\nShe started to slow again, so I suddenly whipped one of her tightly clamped nipples. \n\nShe froze and fell completely on to my cock, and her back stiffened. She let out a strangled squeak while her pussy gently quivered along my shaft. She was trying not to cum. \n\nI grinned and clenched my fists, excited to see if she'd make it. After a few tense seconds, she breathed out slowly and started to rise again. \n\nI wanted to laugh. She was so sensitive, it was so much fun watching her hold back. I knew that the pleasure she could experience could be literally mind-blowing for her, and yet she wouldn't let herself feel it until I said so. \n\nSo much was perfect about these quiet moments, just watching and feeling her try so desperately to pleasure me, and deny herself that same pleasure. Everything else; the gag, the blindfold, the bound arms, the nipple clamps... She was like a living fantasy, so perfectly sexy. \n\nI was breathing heavily and the incredible eroticism was sending warm, pleasant waves through my abdomen, as if I could feel the hot blood rushing through my body to my engorged cock. \n\nI needed to cum, but more I needed not to. I wanted to wait and wait, for this moment to last forever, for this moment to stretch on and on, holding her here, holding us both at the edge of pure pleasure. \n\nI waited as long as I could, watching rapt at every movement of her body, every jiggle of her full breasts still connected by the loose chain at her nipples, every flex of her stomach muscles under the light sheen of sweat, every jerk of her head as she sank down onto my cock and tried yet again to hold back her incredible building orgasm. \n\nI hated my weakness, but eventually I had to end it. I knew I had to finally release the on-coming flood of pleasure that was waiting for the both of us. And I knew just how to do it. \n\n\"Good girl, Jessica.\" I said lightly, breaking the long, long silence. \"You're doing such a good job sweetheart.\" \n\nI reached up and gently stroked her face. \n\n\"I think you've earned a reward... Why don't I take one of these off for you? Would you like that?\" \n\nShe nodded slowly, hesitantly. She didn't trust me. \n\nI grinned. \n\nI slowly gripped the handles of one of her clamps with the ends of my fingers, careful not to move it, or to touch her directly. I squeezed, releasing the warm metal from her body, and she breathed a huge sigh of relief. \n\nAnd then she froze again. She jerked her head back and let out a panicked whine, breathing heavily and not daring to move. After being clamped for so long, the blood was rushing back into her abused nipple, flooding it with sensation. With pain. \n\n\"Oh, that's right.\" I said, \"I've heard these things are actually more painful when you take them off.\" \n\nShe didn't seem to hear me, but just kept make this high pitched squeak of panic with every breath. \n\n\"Better take the other one off too, just to be safe.\" I said reaching up. \n\nShe shifted her body backwards, as if to avoid me. I laughed, and grabbed her clamped nipple hard, twisting it roughly before yanking the clamp off it. \n\nShe screamed through the gag, tears running down her cheeks. \n\nAnd then she came. Hard. \n\nHer pussy convulsed and spasmed so powerfully that I gasped with pleasure. She screamed again as her orgasm assaulted her. \n\nI threw my head back, and my hips thrust upwards almost of their own accord. I grunted and grabbed her hips, trying to fuck her while still buried inside her. \n\nI suddenly grabbed her tits with both hands, digging my fingers deep into the soft flesh and twisting my palms against her hard nipples. \n\nHer orgasm was either extended or repeated by this as her body shook with continued pleasure. The sensation around my cock was unbelievable; I didn't think I'd ever felt her cum this hard before. Without moving again, the sensation was enough to trigger my own orgasm. \n\nI practically roared as I filled her frenzied pussy with my cum, then gasped at the sheer amount of pleasure I was feeling. \n\nShe fell on top of me, squeaking and squealing as her body still shook. My cock stayed buried inside her, and I thrust deeper into her a few times as my long orgasm ended. \n\nWe lay for a few minutes just recovering. She didn't make any move to sit up, or to free herself. She just lay on top of me, shivering. Her face was against my chest and she was breathing heavily. I reached up into her hair and pulled it gently, before burying my face into it and kissing the top of her head. \n\nEventually, when my mind had returned from wherever the pleasure had banished it to, I gently lifted her face, undid her gag and pulled it off. \n\nShe breathed out heavily across my chest, then sucked in a huge breath. She didn't speak. \n\nWithout sitting up, I reached behind her to undo the strap holding her arms. She let them fall limply to her sides, but still didn't move. \n\nI slowly sat up, holding her body. She let herself be moved, and when I was upright she was still leaning all her weight against me. For a second I wondered if she'd passed out. \n\nI slipped the blindfold off, holding her face in front of me so I could see her eyes. They seemed huge, the vivid green dwarfed by her dark pupils before they shrank in the light. \n\nTears were still rolling down her cheeks, but she didn't make a sound. She seemed stunned. I wiped a tear away from her eye with my finger, then cupped her face in my hand. She closed her eyes tight and leaned in to my grip, sobbing heavily as she rubbed her cheek against my palm. ",
        "She wrapped her arms weakly around me and clung to me, pressing her face into my neck. \n\n\"I'm sorry...\" she wept quietly, \"I'm suh- sorry...\" \n\nHer body shook with sobs, interrupting her words. \n\n\"I didn't muh- mean to... I couldn't... I couldn't stuh- stop it...\" she stuttered, \"I couldn't buh- beg... I sssorry...\" \n\nI held on to her, kissing her head a few times. \n\n\"It's okay sweetheart...\" I said, trying to reassure her, \"It's okay, you're a good girl.\" \n\n\"I'm sorry...\" she whispered. \n\nI held her as she continued to cry, gently shushing her and stroking her head. I had to fight down my feeling of anxiety, of panic. Once again I found myself wracked with guilt as causing such a bad reaction in her, but still couldn't stop myself from enjoying it on a deeper level, my cock threatening to get hard again. I tore her apart and still she clung to me, seeking comfort from me. \n\nEventually she settled, her cheeks drying, though she still sobbed occasionally. \n\nI just lay down, holding her against me, and reached over to turn off the light. I didn't know what she was feeling now, in this moment. Were these tears of frustration? Of pain? \n\nOr maybe they were tears of relief? Of release? \n\n\"Sleep now, sweetheart.\" I told her gently, \"Just go to sleep.\" \n\nI felt her nod against my chest, and sigh deeply. \n\nWithin a few minutes she was out cold, and it wasn't long before I joined her. \n\n== \n\nI woke up to the alarm, and quickly shut it off. \n\nJessica slept soundly, looking wonderfully peaceful. \n\nI felt a strange sense of understanding as I watched her. It was one of those weird moments where you seem to suddenly understand everything at once, even things you already knew. \n\nFor so long I'd seen her as just some bitch who hated me for no reason, who ruined my life. Then I saw her as just a slut who wanted my big cock, and was willing to do anything to get it. \n\nThen as a latent submissive who had no idea about her real nature. Then as a stressed out over-achiever who'd do anything to find a way to relax. And now a willing participant, a submissive woman ready to explore this side of herself with me. \n\nIn that moment, in her, I could see all of these aspects, all these stages of her life in which I knew her. And there was still so much about her I didn't know. \n\nShe was my childhood bully, my sister's best friend, my first real crush. \n\nMy first crush... \n\nI'd actually forgotten about that. Again, I smiled and shook my head. The memory filtered through the fog of time before my eyes. I'd liked her. Like, I'd like liked her. When we were kids, she was the prettiest thing imaginable. Before she started to hate me, and I her. Before she took my sister from me. Before anything was anything. She was little Jessica, practically the girl next door. \n\nHow could one person be so many things? Contain so much? \n\nI wanted to wake her. I wanted to talk to her. I wanted to kiss those red lips, and feel her hair between my fingers. \n\nWell... why couldn't I? I owned her now, didn't I? \n\nI gently stroked her face, and softly said her name. \n\nShe stirred slowly, and opened her eyes. She smiled when she saw me, and moved to sit up. \n\nI kissed her suddenly, not forcefully, but not exactly gently either. She giggled and returned my kiss, her hands gripping my shoulder and neck. I ran my hands up into her hair and kissed her passionately. \n\nAfter a few minutes of kissing, I pulled away a little breathless. \n\n\"Mm... What a way to be woken up.\" Jessica smiled. \n\nI laughed and lay back down. I stretched my arm out behind her, as she was already moving to rest her head against my chest. She nestled in to me and sighed. \n\n\"So how do you feel?\" I asked. \n\n\"Really good.\" she said, sighing again. \n\n\"Good.\" I said. \n\nI waiting a minute for her to elaborate, but she seemed content to lie in silence. \n\n\"What about the... the session? It seemed to hit you pretty hard.\" I said. \n\n\"Oh... this is... a 'briefing', right?\" she asked. \n\n\"A what?\" \n\n\"Or a debriefing? Like, where we talk about the scene we had, and how we felt about it and stuff.\" she said, \"It was in one of the links I found.\" \n\n\"So you've really done some research?\" I said. \n\n\"Yep. Except, I had to go into my internet browser's settings and disable all the pictures for a little while. Some of those websites were just filthy.\" \n\nI chuckled at this, then suddenly laughed out loud when I realized she wasn't joking. She looked confused, and I just kept laughing, trying to get my head around the idea of Jessica, the woman I'd just tied up, tortured, and fucked into near unconsciousness still not wanting to see any nudity. \n\n\"What's so funny?\" she asked, slightly offended. \n\n\"It's just...\" I said, getting my breath back, \"For a slut, you're just such a prude.\" \n\nShe laughed with me, seeing the joke. \n\n\"Well, that's different. I mean, I don't look at that stuff... porn stuff.\" she explained. \n\n\"No, no, I get it.\" I said, still chuckling. \"OK, so. Let's talk. You were crying pretty hard, and I thought you had a higher pain tolerance than that.\" \n\n\"Well, you should try it!\" she said, \"That crop hurts.\" \n\n\"How do you think I got these?\" I asked, slowly pulling my arm out from under her head. \n\nI held out my forearm, showing her the bruises. \n\n\"You did this to yourself?\" she asked, gently touching one of the darker ones. \n\n\"I wanted to know how much it hurt.\" I explained, putting my arm around her again. \"So I'd know what you were feeling.\" \n\n\"So... is that like a sadism thing?\" she asked. \"Wanting to know exactly what... what kind of pain you're inflicting?\" \n\nThat question was worrying but her tone was genuinely curious, if a little nervous. \n\n\"I guess it is.\" I said, \"But don't change the subject. Was it really just the crop? Plus the clamps I guess...\" \n\n\"Yeah the clamps were insane. Like, probably the most painful part.\" she said, \"I was so happy when you took them off for like, half a second, and then I thought you were burning me or something.\" \n\nMy mind briefly went to the thin, red candles I had secured in my bag of tricks. \n\n\"No... no burning yet.\" I said ominously. \n\nShe laughed, not sure if I was joking. \n\n\"Well... anyway, I don't think it was the pain. I think it was actually the... the gag.\" \n\n\"Oh really? That seems like a pretty extreme reaction for just a gag.\" \n\n\"Was it? It was really intense... like...\" \n\nShe paused, and started to absently trace my collar bone with her finger. \n\n\"It's like... when you tell me not to talk, it's still my choice, you know? Like... I guess it's not scary because I have to resist the urge to speak, but I still can speak... but with the gag it was... terrifying.\" \n\nShe continued to lightly caress my chest with fingers, and started to do the same against my arm with her other hand. She went quiet, gathering her thoughts. \n\n\"With the gag, I was completely helpless. I know I was on top, which meant I could stop if I wanted. But I didn't want to stop. I wanted... well, I wanted to cum. But I couldn't! I couldn't even beg! I felt so... powerless, so...\" \n\nShe sighed, as if searching for the words. \n\n\"It's like the last thing I have, you know? You've bound me, blinded me, whipped me... and it's all exciting and scary and... but when I couldn't speak... It just seemed to add this whole other terrifying layer to it, like... like I was completely in your power... at your mercy.\" \n\n\"I see.\" I said. \n\nI really hadn't expected it to effect her so much. The binding seemed to have barely any negative effect, even the first time. The idea of a punishment had shaken her pretty bad at first, but after she got used to it, the pain itself didn't seem to scare her. \n\nBut it made sense, in a way. She used her words to express herself, to defend herself, like we all do. For someone so unsure of who they really are, or for someone who used to be so unsure, anyway... her voice, her eloquence, her venom were a huge part of her. \n\n\"So you have a weakness for being gagged.\" I said thoughtfully, \"I'll keep that in mind.\" \n\nShe looked up at me, worried. \n\n\"It's not like... I'm not saying you can't do it again, if you want. I mean, it was very... effective.\" \n\n\"Hm. And how do you feel now?\" \n\n\"Well like I said... really good.\" she said, \"That's something I read a lot about, the effect of submission on submissives. It's not the same for everyone, but for me... it just totally clears my head. It's... intoxicating, almost. I can just relax. My head is just empty. I could just lie here forever and never worry about a thing. That's so rare for me... And it lasts, too. For the next few days at least, I know I'll just be so much calmer. Everything's easier now, all the stress from school just doesn't get to me after we... after a night with you.\" \n\n\"Good.\" I said simply. \"Good.\" \n\nI stroked her head absently, letting myself relax. I'd pushed her hard tonight, seen an extreme emotional reaction, but she was better off for it. This is how it's supposed to work, I thought to myself. Pain and pleasure. Cruelty and comfort. \n\nShe rested against me and smiled up at me, knowingly. \n\n\"Yeah, it is good.\" she said. \n\nI knew that smile. The sight of it triggered a memory in me. It had been a few weeks ago... the night she'd gotten back from vacation. She'd somehow got me talking about myself, and smiled this... infuriating, unfamiliar smile. \n\n\"What?\" I said blankly. \n\n\"Nothing.\" she said, her expression not changing. \n\n\"What are you smiling at?\" I asked. \n\nShe smiled wider and hid her eyes, pressing her face into my chest. \n\n\"What is it?\" I asked, laughing. \n\n\"You care about me.\" she said. \n\nShe raised her face and looked into my eyes again, still smiling. \n\n\"At least a little bit.\" she said, \"You care.\" \n\nI frowned, and sighed. \n\n\"Jessica...\" \n\nWas she wrong? And... would it be wrong to admit that she was right? \n\n\"Jessica... if I didn't care about you... at all... I'd kick you out of bed as soon as you stopped twitching.\" I said. \n\nShe giggled, and kissed my bare chest. \n\n\"I knew it.\" \n\nSo that's what the smile was, her seeing that I cared? Why, because I talked about myself? The memory flared into full clarity for a second. No, she didn't smile when I'd talked about myself. She smiled when I stopped. When I got embarrassed. I guess she thought I wouldn't be shy with her if I didn't care about what she thought. \n\nI closed my eyes, and sighed again. She kissed my cheek, and again laid her head against my chest. \n\nFor so long I hadn't cared about people, I'd become kind of bad at understanding them. At least it felt that way. But with Jessica, I was having to pay attention in a way I hadn't bothered to for a long time. The gleam in her eye, the smile so slightly different from any others. I wanted to know what she was thinking, what she was feeling. And this time I did. \n\nIt was hope. Just a simple hope that I would some day forgive her, that I could eventually look past what she'd done to me. Hope that, even if things wouldn't ever be normal, they would at least be better. That maybe I wouldn't always hate her. \n\n\"It's time to go, sweetheart.\" I said, patting her head. \n\n\"Aww...\" she whined, \"But I haven't stopped twitching yet.\" \n\nI laughed, and she giggled with me. \n\nI patted her head a little harder this time, a light, playful slap. \n\n\"Good night.\" I said. \n\nShe huffed, but obeyed. She leaned forward to kiss my cheek, and let out another little huff of disappointment when I didn't kiss her back. She then slipped out of bed. \n\nI couldn't stop myself eying her naked body... her pert, round, well-whipped ass as she turned away from me. \n\n\"I hope Rose isn't still awake.\" she said, \"That would be weird.\" \n\n\"I doubt it.\" I said, watching her get dressed \"It's been hours.\" \n\n\"Mmm... you've been fucking me for hours...\" she purred seductively. \n\nI laughed again, and so did she. \n\n\"Goodnight, Sir.\" she said with a slight sigh in her voice, \"I love you.\" \n\n\"I know.\" I said, \"Goodnight.\" \n\nShe turned to leave, but slowly turned back. \n\n\"And... the watch.\" she said, \"It's really OK? You like it?\" \n\n\"It's... fine.\" I said, keeping my tone steady, \"Thanks.\" \n\n\"OK. Good. That's good.\" she said, \"Night.\" \n\n\"Night.\" \n\nShe walked out, and closed the door behind her. \n\nI sighed, and covered my eyes with my arm. It was always after she left that things got harder. That I really had to think about her, instead of just being with her. \n\nI looked at the watch on my nightstand. Valentine's Day. \n\nJesus. Like things weren't weird enough. \n\n\"Forever Yours.\" I sighed aloud. \n\nI couldn't get that hopeful smile out of my head. Could things ever really be better for us? \n\nA memory suddenly came to me, dark and angry. \n\nWhen I was thirteen years old, Jessica somehow convinced some boys from school, none from my classes, just other random boys, to get together and to piss all over my backpack. Inside it too, all over my books, my homework, everything. I had it with me at lunch, I lost track of it, and then I found it, still wet and stinking of piss. \n\nI threw it out and went to wash my hands. For the rest of the day I told teachers I'd forgotten it, and then I told my parents I left it on the bus. I didn't tell Rose the truth, and I don't think she even suspected. \n\nJessica was good at that. Convincing other people to do the bullying for her. She was more than capable of tearing me apart with just her words, but when it came to the physical stuff she preferred to not get her hands dirty. \n\nOf course she never admitted that it was her, but I could see it. I could see the glee in her smile. She'd asked me, \"What happened to your backpack?\", \"Oh did you get a new one?\", \"What happened to the old one again?\". \n\nI tried not to give her the satisfaction, but she knew that I was just avoiding the truth. \n\nI always knew the boys that had done it, too. Not the exact amount, but usually the main culprits. The way they watched me, that same stupid glee in their smile. Or the guilt. That was far more common. \n\nA guy'd do something to me; trip me up, throw something on my shirt... piss on my books... and then a few days later I could see the guilt. Sometimes they'd even try to be my friends afterward, but I never let them. \n\nI couldn't blame them for it, really. After a while it became obvious that it was just what she did. She manipulated. She smiled and winked, she made them feel special for a little while, then she just twisted it. \n\nYou know that boy Steven? Wouldn't it be funny if...? \n\nA few guys actually confirmed it. Came right out and said it. 'I don't know why we did that, Jessica just... made us. It was all her idea.' \n\nAs a kid, my own twin sister took her side more than she took mine, and ultimately chose her over me. Left me completely alone. That should be a clue as to how she was, how seductive she could be. \n\nI suffered in silence, too angry or ashamed to ever tell anyone. Like they'd even believe me. Like anyone would ever suspect Little Miss Straight A's, pretty little Jessica would just torture a boy for no reason. \n\nAnd now... now I had her. Once again, months after it had started, I still had to shake my head at the craziness of it. \n\nI owned her. \n\nI owned her. \n\nJessica. The strongest, craziest, most aggressive person I'd ever met. \n\nI had her heart in the palm of my hand. \n\nBut all that stuff... that was ancient history. The stuff I'd tried to bury a long time ago. It had all stopped when we were around 15, when she... when she crossed the line. That's when the manipulations had stopped, and she went back to the verbal stuff. \n\nI sighed and shook my head of these dark memories, pushing them back into whatever gloomy corner of my mind they occupied. There was no point in dwelling on this stuff. \n\nAncient history. \n\nYet every single conversation with her, every kiss, every warm embrace was tempered by these memories. A countless collection of examples of her cruelty. How could I really care about her when our relationship was like this? \n\nShe could be my nice, normal, loving girlfriend for literally years, and the good memories still wouldn't outweigh the bad. For every time she'd suck my cock, there'd be at least ten examples of times she'd made me cry with frustration and anger in the past. For every time she makes me feel good about myself, strokes my ego with her submission, there's twenty memories of her casually stripping away my confidence with her snide remarks and vicious insults. \n\nI sighed, and tried to get back to sleep. \n\nFucking Valentine's Day. \n\nLike things weren't complicated enough. \n\n== \n\nThe next day I decided to wear the watch. I needed one, and it was a very nice watch. It didn't have to mean anything. \n\nI ignored Jessica's wide smile when she noticed it on my wrist as I walked into the kitchen that morning. \n\n\"Nice watch.\" said Rose, \"Wow, it looks expensive.\" \n\nShe obviously already knew where it came from, but I didn't react. \n\n\"Thanks. It was a gift.\" I said simply, sitting down to eat breakfast with them. \n\nThey shared a knowing look, and I ignored them. They didn't bring it up again, nor did Rose pry further into our relationship. At least, not until Jessica went home. \n\n\"So, are you getting her something back?\" she asked the second Jessica walked out the door. \n\n\"Yes.\" I said, meeting her eye, \"And I want your help to pick something out.\" \n\nShe seemed surprised at my answer, but grinned widely. \n\nI'd already gone over this decision alone. It was what you did; you get a gift, you give one back. And I couldn't help but think there was an opportunity here too, although for what I didn't know. \n\nAs strange as it felt, I was getting Jessica a gift for Valentine's day. \n\n\"Good.\" Rose said. \n\n== \n\nWe went to the mall after school on Monday, after Jessica left to start studying again. Only a few weeks after our exams and she was already back at it. I had to respect the determination, even if it pissed me off a little. She made the rest of us look like lazy assholes by comparison. I mean, when it came to school work I definitely was a lazy asshole, but still. \n\nI drove us to the mall in our car, and we started the search. Rose took me around the mall, bringing me to look at jewelery, perfumes, flowers, cards... all stuff I didn't feel comfortable buying her. Too relationship-y. Too normal. \n\nAll the while she quizzed me about exactly what kind of gift I wanted, how I wanted to make her feel with this gift, why I was bothering if this really was \"just sex\". \n\nI avoided the questions mostly, but I couldn't deny she had a point with that last one. What was the normal protocol here? I wanted to get her something, but she wasn't my girlfriend. But it wasn't just sex either, though I couldn't tell Rose that. She belonged to me. She not only accepted this dynamic herself, but was now actively engaging in it, talking about what it meant and how it made her feel. \n\nWas it normal for a Dom to buy gifts for a sub? Did I even have to return it, couldn't I just accept the gift and give her nothing back, like she'd said? \n\nBut none of that really mattered, or at least I didn't want it to. I wasn't buying this because I had to. \n\nRose led me over to a fairly pricey clothing store that I recognized. In fact, I'd worked there for a few months one Summer. \n\nRose led me around the aisles, pointing out cute scarfs or adorable boots, but I wasn't really paying attention. I was just waiting for inspiration, waiting for this decision to make sense to me. ",
        "Out of the corner of my eye I could see an attractive woman approach me. I smiled when I glanced up at her, and she smiled back. She was in her late twenties, and wearing the uniform of the store. \n\n\"Hey kid, it's been a while.\" she said. \n\n\"Yeah. How've you been?\" I asked. \n\n\"Oh not too bad, you know...\" she answered. \n\n\"Hi.\" said Rose, appearing beside me. \n\nRose looked at me, questioning how I knew this woman. \n\n\"This is Rose.\" I said gesturing to her, \"Rose, this is Pauline, she was my manager when I worked here.\" \n\n\"You worked here?\" she asked, surprised. \n\n\"Yep.\" I said, not bothering to elaborate. \n\n\"And you got an employee discount and everything?\" she asked, obviously annoyed I hadn't told her. \n\n\"Yeah.\" I answered, smiling. \n\nClothes and fashion never really interested me but we got a great discount on them, so for a little while as a teenager I actually dressed in the latest style. \n\n\"Heh, you're exactly the same, Steven.\" Pauline said, \"One word answers, whenever possible.\" \n\n\"Yeah, that's Steven.\" Rose said, patting my shoulder. \n\nI smiled. Pauline had been a pretty great boss to have, one of the better ones. She was pretty liberal with our breaks, and didn't mind us taking things slow if there weren't many customers. It had been maybe two or three years since I worked here. She'd never minded my shyness when working with customers, telling me that as long as they got help it didn't matter whether I was \"charming\" or not. \n\n\"So, Pauline.\" said Rose, \"We're looking for a Valentine's Day present.\" \n\n\"Oh. You... took your girlfriend with you to get her gift?\" Pauline asked me, smiling but confused. \n\n\"She's my sister, actually.\" I said. \n\nThere was a moment of confusion, and a hint of disgust crossed her face. \n\n\"The gift's not for her.\" I said laughing. \n\n\"Oh!\" she said, realizing her mistake. \"Right, of course not.\" \n\n\"It's for his... not-really-girlfriend.\" said Rose, \"Like, apparently it's just sex but she got him that watch, so...\" \n\nI frowned at her, annoyed at how casual she was with my private life. \n\nPauline glanced at the watch on my wrist, then at me and raised her eyebrows. \n\n\"Wow kid, I didn't think you were the 'just sex' type.\" she said, a strange hint of approval and amusement in her tone. \n\n\"God, I know right?\" said Rose, \"I don't really get it because she's seriously gorgeous, but apparently he wants to just keep it casual. So yeah, I'm thinking like a scarf or a shawl or something?\" \n\n\"Well...\" said Pauline, finally turning that amused expression away from me and looking at Rose, \"It's February, so a scarf would only be good for a little while longer. Actually it's a little hot already so that might not do...\" \n\n\"That's a good point, the weather's been heating up lately.\" said Rose, \"So, how about like a thin shawl, like a see-through sort of blah blah blah...\" \n\nI tuned them out and started looking absently around the store. I was grateful they both seemed so interested in helping me, but I honestly didn't care about clothes. I'd had to learn about all these things when I worked here, but they still held no interest for me. \n\nThey chattered on, Pauline seeming to understand who was the expert of the two of us and not turning back to me for my opinion. \n\nI left them to it and started to wander around, randomly picking up or stroking items of clothing, more acting interested than anything else. I did a few laps of the women's section, occasionally looking over at the two girls. I shook my head and smiled when I noticed Pauline holding a t-shirt up against Rose to judge how it looked. Seemed they'd forgotten why we were here. \n\nAfter another lap or two, I suddenly saw a mannequin I hadn't noticed before. A female one, wearing a thin black jacket that came to about mid-way down the thigh. \n\nFor some reason, the position of the jacket inspired an image of Jessica in my head wearing it. It was pretty cool looking, all silver buttons with a black sash around the waist. She would look good it in. \n\nI smiled as I explored the image in my head. She would look good in this jacket. \n\nI picked one off the rack next to the dummy and found Rose again. They turned to me as I approached, and I could tell from Rose's slight surprise that she probably had forgotten that she wasn't here for herself. \n\n\"What about this?\" I said, offering it to her. \n\nShe took the jacket and held it up. \n\n\"Hmm...\" she said appraisingly. \n\nShe put it on and buttoned it up, while Pauline quickly reached over to tie the sash. It seemed to fit her well. \n\n\"It looks good.\" said Pauline, \"It's a new item, I personally really like it.\" \n\nRose walked over to a full length mirror and studied herself. She posed a few different ways, her expression serious. \n\n\"She's taller than me.\" she said thoughtfully. \"And bustier... and prettier in general I suppose...\" \n\nPauline laughed. \n\n\"Well I can't help with that last one, but it does come in a longer size.\" she said. \n\n\"Let's have a look.\" she said. \n\nThey walked off together in the direction I just came from, and I followed silently. \n\nRose took off the jacket and replaced it with a different one from the same rack, and quickly put it on. This one didn't fit her quite as well, reaching farther down the leg and seeming loose around her shoulders. \n\n\"This should be perfect.\" she said, looking at me and smiling widely, \"And it's so something she would wear too, I could totally see her in this.\" \n\n\"It's a little strange though, isn't it?\" I asked, \"A jacket... it's not like, a normal gift thing.\" \n\n\"It's clothes.\" she said simply, \"Girls like clothes.\" \n\nPauline laughed, and Rose winked at her. \n\n\"This should be great, I think.\" she said, taking the jacket off. \"Great job little brother, looks like you didn't need me after all.\" \n\n\"If you're sure it's Okay...\" I said, suddenly not very confident about my choice. \n\nBut then, I still wasn't even sure it was right to get her something. \n\n\"Thanks for the help Pauline,\" Rose said, throwing the jacket over her arm, \"Now while we're here, tell me more about that skirt from before.\" \n\nShe linked her arm with Pauline's and walked back towards the other section. \n\nIt was amazing how quickly she got comfortable with people. I'd seen Pauline a few times a week for months and didn't have this good of a bond with her. Maybe I was just that awkward... or she was just that cool. \n\nThe next hour and a half were sort of a nightmare. Because she'd helped me, Rose guilted me into staying with her while she did some shopping herself, she and Pauline asking my opinion \"as a man\" on every single thing Rose tried on, as if I cared what my sister dressed like. \n\nThen they pressured me into trying on some clothes myself. I mean, yeah, maybe most of my clothes didn't really fit anymore, so I only had like a few t-shirts and pairs of jeans that I rotated around, but trying on clothes was somehow even more boring than watching someone else do it. \n\nAnd their constant comments, and occasional wolf whistles when I tried on something that apparently suited me weren't really helping my mood either. \n\n\"See, I think this one really shows of his shoulders.\" Rose said when I came out wearing a light blue shirt. \n\nShe walked up and brushed off my chest with her hand, staring at the fabric as if trying to find some secret it was hiding. \n\nPauline nodded. \n\n\"Yeah, it's really sexy on him.\" she agreed with a serious tone. \n\n\"This is really inappropriate workplace conduct.\" I joked quietly, trying not to blush at her frank appraisal. \n\n\"Suck it up, you don't work here anymore.\" she laughed. \n\nThen Rose piled another few shirts and pairs of pants into my arms and pushed me back towards the dressing room. \n\nAs annoying as parts of it were, it was actually pretty fun. I'd really missed doing stupid things like this with Rose, and some of the clothes did look pretty good on me, in an average sort of way. \n\nAfter another hour or so, I had a few more things to add to the rotation that weren't basically coming apart at the seams, unlike some of my other clothes, and of course a brand new jacket for Jessica. \n\nRose had managed to wrangle the \"Friends and Family\" discount out of Pauline, partly because I used to work there, but mostly because she was just so likable. \n\nAfter promising to come back soon to see Pauline, Rose and I got some ice cream together. \n\n\"So...\" she said a few seconds after we'd sat down, \"This thing with Jessica.\" \n\nI sighed and rolled my eyes. \n\n\"It is what it is.\" I said, \"That's all.\" \n\n\"Mm hmm.\" she said, clearly not believing me, \"So are you going to get her some chocolates too, lover boy?\" \n\n\"She got me this.\" I explained desperately, holding up the watch, \"Look at this thing, it probably cost a fortune. I can't just not get her something.\" \n\n\"Oh, so it's just an obligation thing, Oookay.\" she said, winking at me. \"I guess a card and chocolates would've almost made too much sense then. Something personal and unique is way better for an obligation present.\" \n\nI just sighed at the sarcasm dripping from her voice. \n\n\"Whatever, think what you want. It's a gift, but it's not like a... Valentine's gift, you know? It's just... just a jacket.\" \n\n\"Whatever Romeo.\" she said, before taking a long lick of her ice cream. \"Why does it matter anyway? Why can't you just be her boyfriend? You like her, right?\" \n\nI flinched at the blunt statement. It actually stung, how casually she put things. \n\nI frowned down at my ice cream, not meeting her eye. Had she really forgotten how bad things had been? \n\n\"And it's pretty obvious she wants more than just sex, so why not go for it?\" she said, \"I mean, you're better off having her as a girlfriend before some other dude catches her eye, you know?\" \n\n\"I don't want that.\" I said, trying to keep my voice even. \n\n\"Well why not?\" Rose asked, \"I'm just saying, you know-\" \n\n\"I don't-\" \n\n\"I think you're being a little unfair to her too, honestly. I think she's like, into you, and leading her on like this-\" \n\n\"Rose!\" I hissed, \"Jessica is the fucking last girl I would ever want as a girlfriend, understand?\" \n\nShe stopped talking, and her eyes widened. \n\n\"Oh... I... I mean...\" she stuttered, seeming to realize she'd offended me, \"I know things were always... tense between the two of you... but...\" \n\nI glared at her as she trailed off, trying to hold my anger back. Fucking tense? There was overlooking things for the sake of a friend, and then there was just plain willful ignorance. If she knew half of the things Jessica had put me through... she'd... \n\nShe'd what? Never speak to her again? Choose me? \n\nI doubted it. \n\nI sighed and shook my head. It didn't matter. I let the bitter feelings fade away from me, replaced by a cold emptiness. This was how it was with Rose... how it always was. When it came to Jessica, I had to forget that I even cared about my sister, because she always ended up hurting me like this. \n\n\"But, I mean... what is this? Really?\" she asked desperately. \n\nI just glared at her. I'd said all I had to say. \n\nShe frowned, but seemed to accept that I wasn't going to move. \n\n\"OK fine... I'm sorry, I won't ask anything else.\" Rose said. \"It's none of my business anyway.\" \n\nI looked up at her, and forced a small smile. \n\n\"Thanks\" I said. \n\nI tired to enjoy the rest of our day together, but it was hard to shake the dark bitterness that had spoiled my mood. I hated that I was still so sensitive about this, but... It was bad enough that my sister flat out ignored all the abuse while it was happening, but now she was actually trying to pressure me into being nicer to Jessica. Trying to make me date my abuser. \n\nI'd already told her I was more comfortable with things being \"casual\" between Jessica and I, but that didn't matter to her. Only Jessica mattered, and if Jessica wanted things to be more serious, which this stupid watch showed that she obviously did, then Rose saw it as her job to make that happen. Even if I didn't want it, even if it made me uncomfortable. \n\nWhat Jessica wanted was just more important to her. \n\nWe drove home in almost silence, our conversation feeling stifled and awkward. I wanted to go up to my room as soon as we got home, but she stopped me, grabbing my shoulder. \n\n\"Hey, I'm really sorry about before.\" she said, \"I don't... I don't know how things are between the two of you. I've always sort of... tried to keep my distance from that, you know? I just think you should... I don't know, consider it. The girlfriend thing. She really likes you.\" \n\nI scowled at her and walked away. Why didn't she get it? Why couldn't she see that constantly making Jessica her top priority was the main reason we'd barely been friends for years? \n\nI just wanted to stay in my room and avoid her for the rest of the night. I knew something like this was going to happen when she found out, I just knew it. Jessica I could handle just the two of us it could be stable, manageable. With Rose in the mix, things were going to get... complicated. \n\n== \n\nLater that night, around 9, there was a knock on my door. For a brief moment I thought it would be Jessica sneaking over for a Saturday night session, but she was too dedicated to her studies to waste two nights in a row like that. \n\nAfter knocking Rose walked right in, not waiting for an answer. I appreciated that she'd knocked at all this time, and glad this time I was just sitting in bed reading, and not looking at pictures of her best friend tied naked to my bed. \n\n\"Hey, I want to talk to you.\" she said, sitting down on my bed. \n\nI closed my laptop, curious about her serious tone. \n\n\"I'm sorry about earlier... we were having a nice day and it sort of felt like I ruined it.\" she said. \n\nI shrugged, faking a smile. \n\n\"Don't worry about it.\" I said. \n\nShe smiled back, relieved. \n\n\"I mean... I said I'd stay out of it, and I will.\" she continued, \"I just wanted to say that.\" \n\n\"Thanks, Rose.\" I said, \"I know this must be weird for you. But... I just kind of need my space with this, you know?\" \n\n\"Yeah, I get it.\" she said. \n\nShe smiled again, and nodded to herself. \n\n\"OK, well, now that that's out of the way, let's go get wasted!\" she said, jumping up. \n\n\"Let's... what sorry?\" I asked. \n\n\"Come on, there's a little get-together happening tonight. I was going to tell you about it earlier but I forgot. We're meeting everyone there.\" \n\nShe made to leave, not waiting for an answer. \n\n\"But I... I'm in my pajamas.\" I said dumbly. \n\nShe turned around and laughed. \n\n\"Come on, try out one of those new outfits we got you.\" she said, walking out and closing the door behind her. \n\nI frowned, thinking about how my sister had yet again conveniently left out the part of the conversation where I make any sort of decision. \n\nBut I couldn't help but smile. I missed this about her, her spontaneity balancing out my caution. She'd always been the fun one. \n\n\"I guess I'm going to a party.\" I said to myself. \n\n== \n\nAnd so I was finally at a party. We were at Josh's , a very cool looking senior from another school. Rose introduced me and he merely nodded, saying \"Welcome.\", before walking off. \n\nI'd been nervous about coming here, one of the reasons I'd been ignoring Rose's invitations for so long, but I found that it was exactly the kind of relaxed atmosphere that she'd described. The music pumping through the house wasn't too loud, no one was chugging from a beer bong, and no one was passing around a joint. The whole house had maybe 20 or 30 teenagers in it, just talking and laughing, everyone enjoying a few beers or those brightly colored, sugary alcopops. \n\nWithin a few minutes of entering, Rose and I spotted Becky and Frank talking closely on one of the couches in the huge lounge and joined them. The normally quiet Frank already had a bit of a buzz going when we got there, and he was a lot more talkative than usual. He turned to me and greeted me warmly, patting me on the back. I fell in to their conversation easily, laughing along with them. \n\nAfter that, it was pretty much the same as lunch at school, except I was drinking beer. I sipped my drink and enjoyed the music, looking around the huge house and the mingling horde of kids. \n\nIt was a lot more mellow than I'd feared. Or maybe I'd just been expecting something unrealistically crazy, given my total lack of experience. \n\nI ignored the strange feeling of it, trying to ignore years of social isolation and awkwardness. These people were my friends now, right? \n\nBy the time Lissie showed up, I'd had two more beers and was feeling pretty relaxed. \n\n\"Hey new kid.\" said Lissie, sitting down beside me. \"Didn't think I'd ever see you here.\" \n\n\"I'm as surprised as you are.\" I joked, \"I never thought I'd be invited to a party this cool.\" \n\n\"Oh please, you're the coolest guy here.\" she laughed. \n\n\"Yeah yeah, I know.\" I said, \"I figured I'd spend one night with the losers, see how the other half lives.\" \n\nShe laughed and sipped her drink, brushing her hair behind her ear. \n\n\"So really. what's the story? Just felt like a night on the town?\" she asked. \n\n\"Rose didn't really give me a say in it.\" I said, \"It was her decision to make, apparently.\" \n\n\"Yeah, she does that.\" Lissie agreed, \"Just makes decisions. It's good though, otherwise we wouldn't get anything done.\" \n\n\"Yeah, it was the same when we were kids.\" I laughed, \"She always had the fun plans, and I just tagged along.\" \n\n\"I've been meaning to ask you about that.\" she said, \"If you two were so close as kids, why had we never met you until recently?\" \n\n\"Oh, that's... kind of a big question.\" I said. \"And a long story.\" \n\n\"Mhmm, and I imagine you're probably a little too sober to tell it?\" she said. \n\n\"Yeah it's definitely something I'd need a few more drinks to talk about.\" I laughed. \n\n\"Deal.\" she said, and handed me an open beer bottle that she'd set on the floor when she sat down. \n\n\"Hey, that... that was sneaky.\" I said smiling, taking the bottle from her. \n\nShe just winked, and took another drink herself. She was about to speak again, but Rose called her name and she turned away. \n\n\"Hey, Steven, what do you think?\" said Frank, suddenly grabbing my shoulder with one of his giant hands, \"Who would win in a fight... Jessica or Derek?\" \n\nI laughed, and pretended to think hard on the question. \n\n\"Jessica, definitely.\" I said after half a second. \n\n\"Right?\" he said loudly. \n\nBecky was talking to the girls, but Frank nudged her on the back with his elbow. \n\n\"Jessica.\" he said, pointing at me. \n\n\"Oh come on!\" Becky said, \"Derek does all that judo shit, he'd kick her ass!\" \n\n\"We're talking about the same Jessica here?\" I asked, \"She'd rip his face off!\" \n\n\"Exactly, girl's got a lot of anger.\" Frank agreed. \n\n\"See, I don't know about the anger thing, to me it all feels like a big mask, you know?\" Lissie said thoughtfully. \"Like, sometimes she seems more scared than angry.\" \n\n\"Oh what like inside she'd just some crying little girl?\" Frank laughed. \"No way. The girl is tough, she's strong, and she's full of rage. She'd destroy him in a one-on-one.\" \n\n\"But don't you feel like...\" said Rose, \"I don't know, like she's been a lot less angry lately?\" \n\nShe looked directly at me. \n\n\"Almost like... I don't know... Like she's got some reason to be all content and happy?\" \n\nI had to force myself to not glare at her. I was about to say something, but nothing came to mind. Was she about to expose us, or just playing a game? ",
        "\"I guess so, actually, yeah.\" said Becky thoughtfully, \"But she's so quiet anyway, it's sort of hard to tell... Wait, what are you talking about?\" \n\nShe seemed to at last pick up on the hinting tone in Rose's voice. \n\n\"You know something!\" she accused excitedly. \n\n\"No!\" interrupted Frank, \"No gossip, no girly bullshit. OK, new match-up, place your bets...\" \n\nHe smacked the arm of the sofa with his open hand. \n\n\"Rose versus Steven; who would be the alpha twin?\" he asked. \n\nWe all cracked up laughing. \n\n\"Well, me obviously.\" said Rose, \"My little brother's never been in a fight in his life!\" \n\n\"Oh and you have?\" I asked, smiling, \"And getting your hair pulled by Tina Carmichael in third grade doesn't count.\" \n\n\"Hey, that was in fourth grade. It was practically a street fight!\" she laughed. \n\nWe kept the conversation going, all of us weighing up the physical advantages and disadvantages of me and my sister for about ten minutes, until we ended up with the two of us flexing at each other to compare the size of our arms. \n\nLissie grabbed one of our biceps in each hand, squeezing them. \n\n\"Oh, that's actually really close.\" she said, \"Which is kind of sad for Steven, when you think about it.\" \n\nI pulled away from her, acting like I was outraged by her analysis, then laughed along with the others. \n\nI don't know what I'd been afraid of the whole time. It turned out to be such a cool night. Like me, Frank was usually quiet, but his relaxed attitude was infectious. My head was buzzing after a few more beers, and I decided to slow down my drinking. \n\nLast time I'd gotten this drunk, I'd ended up ordering dozens of BDSM toys online. No telling what I would end up doing tonight. \n\nLater in the night, I was in a short line for one of the many bathrooms this seemed to have when Lissie strode up to me. \n\n\"Hey cool kid.\" she said smiling, \"So we never got a chance to talk.\" \n\nI sighed, smiling, and leaned back against the wall. \n\n\"So let's talk.\" I said, \"What's with Frank and Becky? Am I crazy or is there some chemistry there?\" \n\nShe laughed loudly, surprised. \n\n\"Oh man, you're way off.\" she said, \"They're best friends, basically brother and sister. They were like, raised together, almost.\" \n\nI frowned, thinking about how Frank looked at her while they talked. Becky was hot, but it felt like there was more there. Maybe it was just the best friends thing I was picking up on. \n\n\"Why, are you curious about Becky?\" she asked, leaning against the wall beside me, \"Rose hinted you might have kind of a thing for her.\" \n\nI smirked, thinking about how she'd half-assedly tried to set us up a while ago. Before she knew about Jessica, obviously. \n\n\"Like Rose would know.\" I said, neatly avoiding the question. \n\nThe bathroom door opened ahead of us, and the line shifted forward. \n\n\"Ah, but that's the point, isn't it?\" she said, \"Why wouldn't she know? What's the whole story with you two?\" \n\nI sighed. This again. \n\n\"There's no... story, really.\" I said, \"We just stopped hanging out. And then we started again.\" \n\nI shrugged. \n\n\"No, I think there's more to it.\" she said, \"Rose doesn't talk about it, and when a gossipy bitch like your sister doesn't want to talk about something, it usually means its serious.\" \n\nI sighed again. \n\n\"Well, we were kids, you know? We argued.\" I said, \"All hormones and anger and puberty... we just stopped getting along. Now we're a bit older, more mature... I guess we're just over it.\" \n\n\"Hm.\" she said, \"That's sort of boring.\" \n\nI laughed. \n\n\"Sorry about that.\" I said, \"Next time I tell a story from my tortured past, I'll make it more interesting.\" \n\n\"Yeah, maybe put like a kung-fu fight in it or something.\" she laughed. \n\nAgain the line moved forward, and I was next. \n\n\"Still, it feels like there's more there.\" she said, \"She basically doesn't even say your name to us for years, hell I didn't even know what you looked like. I mean, I'd seen you around so I knew what you looked like, just not that... you know... you were what...\" \n\nShe paused, seeming to have confused herself. She took another swig of beer, which I can't imagine helped. \n\n\"And now you just show up, all cool and mysterious.\" she continued. \n\nI laughed. \n\n\"I've never been cool in my life.\" I sighed, smiling. \n\nI really wished she would stop talking about this. It seemed than no one really knew about Jessica and I, our long, violent history, which had actually surprised me at first. But then, why would they? The worst of it was always just between the two of us. Our little secret. \n\n\"So, do you have your eye on anyone?\" she asked. \"I could be your wing man.\" \n\n\"No thanks.\" I laughed, \"I'm good. For tonight, anyway.\" \n\n\"Yeah, tonight's sort of a bust.\" she said, \"There's just no one worth my time here.\" \n\nI laughed. \n\n\"I imagine that's a common problem for you.\" I said. \n\nShe smiled at me. \n\n\"Well... I'll leave you to it.\" she said, then suddenly turned and walked away. \n\nI looked behind me, realizing the bathroom was free. \n\n== \n\nA few hours, and a good few drinks later, we called a cab to bring us home, and to drop Lissie off too. Frank and Becky decided to split a cab together. \n\n'Just Friends' my ass. \n\nOnce we got into the back, Rose leaned heavily on my shoulder. \n\n\"I'm sorry Jessie didn't come.\" she slurred quietly, \"She had to study.\" \n\n\"Probably getting a jump on next month's homework.\" I muttered. \n\n\"She really wanted to come out.\" she continued, \"She said she-\" \n\n\"Why didn't Derek come?\" I asked, interrupting her. \n\nCouldn't risk her spilling anything in this state, not with Lissie still in the car. \n\n\"Oh... Derek... Derek did something...\" she said uncertainly. \n\n\"He just didn't feel like it.\" Lissie said from the other side of Rose, \"He only comes out half the time anyway. On a side note; how drunk is your sister right now?\" \n\nI laughed, and Rose giggled. She'd had more to drink than I thought she would, and I was glad it apparently was something worth commenting on, so probably not normal. \n\nI wanted to say something to Lissie, maybe to thank her for being cool with me, but I caught myself. What, was I thanking her for not hating me? Compared to Jessica it was a relief, but hardly worth thanking her for. \n\nI sighed and shook my head, wishing I'd drank more so my restless and anxiety filled thoughts would simmer down. I really wasn't used to all this. But it was getting easier. \n\nBefore long we were home, and I paid our fair before getting out to help Rose out of the car. \n\n\"Good seeing you tonight, man.\" shouted Lissie as we left. \n\n\"You too.\" I shouted back, shutting the door. \n\nIt was around 3 AM, later than Rose normally came back. I hoped so, anyway. She didn't need that much help walking, but she still leaned heavily on my shoulder as we got to the house. \n\nShe started rambling again as soon as we got in, but was sober enough to stay quiet. \n\n\"I'm soooo glad you came out t'night.\" she half-whispered, \"I was so nervous 'bout it. I prob'ly drank too much.\" \n\nShe giggled lightly, and I laughed with her. \n\n\"Yeah, I'd say you did.\" I said. \n\n\"You had fun, right?\" she asked, \"We should do this again, we so should do this again!\" \n\n\"Yeah, why not?\" I said. \n\nI turned around to lock the door, and she walked off towards the stairs. I locked the door and followed her up, making sure everything looked presentable. \n\nShe was sitting in the hallway between our two rooms, resting against the wall. \n\n\"Jessica really wanted to come.\" she sighed, looking up at me. \"She wanted to drink with you and stuff... she just has all this stuff she has to do. That girl works too hard.\" \n\n\"No argument here.\" I said, offering her my hand. \n\nShe took it, and I pulled her back on to her feet and pointed her towards her room. \n\n\"She needs more fun.\" she continued, \"More fun with you.\" \n\n\"Come on, we can talk about it tomorrow.\" I said. \n\n\"Yeah, yeah...\" she agreed, \"Tomorrow, tomorrow...\" \n\nShe staggered into her dark room and flung herself on to her bed. She just lay there for a second, then started to awkwardly kick her shoes off, while trying to get her t-shirt off at the same time. \n\nI laughed at her drunken, uncoordinated struggle. \n\n\"Night Rose.\" I said, turning away. \n\n\"Byyee little brother.\" she sighed, still wriggling out of her clothes. \n\nI closed the door to her room and wandered back to mine. \n\nIn bed, my thoughts were stirring again, but it felt like there was nothing to worry about for once. For the first time in years, there was no dark cloud looming over me. I was pleasantly drunk, my sister was my friend, Jessica was my secret lover, people at school seemed to actually like me... \n\nAt that moment, everything was good. \n\n== \n\nThe next morning I was surprised to find Rose and my parents all in the kitchen. We usually didn't have much of a plan on Sunday, we would just get up whenever we wanted. It was rare for all four of us to be just waking at the same time. \n\nRose was obviously having a tough time. I found her standing at the kitchen sink with her head in her hands, our parents eating breakfast at the table. \n\n\"How's she doing?\" I asked them, assuming they knew where we'd been last night. \n\nMy mom smiled at me. \n\n\"Well, she-\" \n\n\"I'm dying.\" Rose croaked, interrupting her. \n\nMom laughed. \n\n\"She's dying.\" she repeated with a smile. \n\nI laughed and sat down, pouring myself out a bowl of cereal. \n\n\"You don't seem too worse for wear son.\" Dad said over his newspaper. \n\n\"Yeah, I'm not too bad. Slight headache.\" I said. \n\n\"Good.\" he said. \n\nIt might have seemed strange to some people that our parents were so comfortable with our drinking so much at 18, but as far as I knew it had been months since Rose had had a hangover this bad, and she'd known even at the time she was drinking too much. \n\n\"It's good you learn your limits with alcohol now.\" Dad went on. \n\n\"I know.\" I said, \"Better now that when we're hundreds of miles away in college, right?\" \n\n\"Exactly.\" he said, \"When I first got to college, I had a friend who'd never had a drink before in his life. First time he went to a party, he went crazy, actually had to go to hospital for alcohol poisoning! Had no idea how to pace himself, ended up slamming down glasses of spirits like they were water!\" \n\nHe'd told this story at least a dozen times, around the time Rose first got curious about drinking. \n\n\"Yeah... there's no chance that friend was actually you, right Dad?\" I asked. \n\nHe spluttered taking a sip of coffee, and looked up at me surprised. \n\n\"Well... uh...\" he said guiltily, then after a few seconds seemed to accept he'd been found out. \n\nHe smiled. \n\n\"A similar thing might have happened to me.\" he said, winking. \n\nMom and I laughed, and Rose groaned from the sink, disturbed by the noise. \n\n\"Oh, go on up and shower.\" Mom said, \"It'll refresh you a bit, make you feel better.\" \n\n\"Yeah...\" Rose said blankly, walking past the table and out to the hall. \n\n\"She'll probably be fine.\" Dad said, turning back to his newspaper. \n\nNow that I was older and could look at it more objectively, the way our parents raised us was actually kind of genius. We had a safe environment to make all the mistakes we wanted, and they'd only help us if we really needed it. And thanks to them teaching us how to do everything from re-wire a plug, to clean and bandage an open wound, we usually didn't need it. \n\nIt was a weird mix of careful, planned education and preparation on the one hand, and then a total \"hands off\" style that seemed almost neglectful on the other. But it worked. \n\n\"Oh, I got our reservation booked yesterday.\" Dad said to Mom. \n\n\"Good.\" she said. \n\nShe sighed wistfully. \n\n\"Remember when our dates used to be so full of surprise and romance?\" \n\n\"You hated half of my surprises, why risk it?\" Dad said with a smile. \n\nMom laughed with him, before turning to me. \n\n\"So...\" she said. \n\nShe stopped and awkwardly cleared her throat. \n\n\"Have... you got any plans for next Thursday?\" Mom asked, failing to seem casual. \n\nThey both stared at me, expectantly. \n\n\"Other than school?\" I asked. \n\n\"Uh... yeah.\" she said. \n\n\"I might have something planned.\" I said casually, shrugging. \n\n\"Really?\" she said, then caught herself. \"Oh... that's good.\" \n\nDad just winked at me. \n\nOne area they'd never really approached with me was romance, seeming to prefer the hands off approach all the way. \n\nBut I didn't really have a plan for Valentine's Day yet. \n\nI was sure I could think of something fun. \n\n== \n\nValentine's Day. \n\nWell, for another few hours it was, anyway. \n\nI was sitting alone on a park bench, resisting the urge to check my phone. My car was parked in front of me and I was staring out at the otherwise empty parking lot of the small local park. Really just a clump of nature just outside the suburbs with a few paths and streetlights jammed into it. Ever since I'd bought Jessica's jacket on Saturday, I'd been searching for a place like this. It only took me Tuesday to find it, and I'd been researching it since then. \n\nI was waiting for Jessica. \n\nI'd texted her to meet me here, and to dress nice. Wear something short. \n\nBut she was late. \n\nI finally gave in and checked my phone, in case she'd texted to say something had happened. It had only been four minutes since I'd last checked it, which made her almost exactly five minutes late. \n\nI couldn't stop fidgeting, tapping my foot or rifling through my pockets. The night was strangely warm for February, something I appreciated as I was only wearing a light jacket. \n\nWhere the hell was she? \n\nSix minutes late. \n\nFinally, I saw headlights at the other end of the lot. The rumble of her engine broke up the otherwise still silence of the park, and I had to close my eyes as the light beamed into them. \n\nShe parked her car beside mine and got out. She looked amazing, and the view got better as she got closer. She was wearing heels, and a very short skirt that only came a few inches down her thigh. She also had on a pink t-shirt, which peaked out behind a bright red hoody she had zipped half-way up. \n\n\"Hi.\" she said happily, walking up to me and sitting down. \n\n\"Six minutes late.\" I said, probably because my mind went blank when I saw how good she looked, and it had been the last thing I was thinking about. \n\n\"Right... sorry. Were you waiting long?\" she asked nervously. \n\nOnly about two hours. \n\n\"No, not really.\" I lied. \n\nShe smiled at me, then turned away, looking out over the now slightly less empty lot. \n\n\"You look good.\" I said. \n\nShe spun her head back to look at me, grinning. \n\n\"Really?\" she asked, \"Thanks, I didn't really know what you meant by 'dress nice', so I just put together this outfit.\" \n\n\"Well... good job.\" I said, returning her smile. \n\nShe turned away again, and though I couldn't tell in the harsh glare of the streetlight, I would have bet that she was blushing. \n\n\"So... is this... like a date?\" she asked quietly, not meeting my eye, \"Like... a Valentine's-\" \n\n\"Stand up.\" I interrupted. \n\nShe looked at me again, and quickly stood up off the bench. \n\n\"I got you something.\" I said, reaching under the bench to pull out a backpack, \"As thanks for the watch. To show you I appreciate it.\" \n\n\"You didn't have to do that.\" she laughed, the excitement in her voice clear. \n\n\"I know.\" I said, standing up. \n\nI unzipped the bag and pulled out her present, folded neatly. \n\n\"Turn around.\" I said. \n\nShe stared at the cloth in my hand, eager to see what it was, but after a few seconds quickly turned. \n\nI dropped the bag and jacket on the bench and stepped behind her. I wrapped my arms around her waist and pulled her to me, kissing her on the back of her neck. I then reached up to take off her hoody, slowly sliding the zip down until it came free. I slid it off her shoulders, and felt her shiver lightly despite the warm night air. \n\nI dropped her hoody on the bench and picked up the jacket, gently unfolding it. I draped it over one arm, and she instinctively reached up to slide her arm into the sleeve. I dressed her, and took a step back. \n\nShe turned around, looking down at herself. She examined herself in it, excitedly taking in every detail. \n\n\"I love it!\" she gushed, holding it out to look at it, \"Oh my God, thank you so, so much.\" \n\nShe bounced forward and wrapped her arms around my waist, leaning in to kiss me. I returned her passion, holding her against me. \n\n\"Thank you.\" she said again when the kiss ended. \n\nShe pressed her head against my neck, kissing me softly. \n\nIt was just a jacket, but she seemed thrilled that I'd actually gotten her something. \n\n\"Thank you.\" she said again, still kissing me. \n\n\"Alright, alright.\" I said laughing, gently pushing her away, \"I'm glad you like it.\" \n\n\"I do, I love it.\" she said. \n\n\"Let me see you.\" I said, grabbing the front of the jacket and pulling her closer. \n\nI slowly dressed her, just as carefully as I'd undressed her moments before. I took my time to fit each silver button in to place, and finally tied the sash tightly around her waist. \n\nShe took a step back and posed a little, a huge smile still on her face. \n\n\"It looks good on you.\" I said, \"I knew I liked you in black.\" \n\nShe giggled, and again stared down at her present. \n\n\"And with your skirt so short, it really shows off your legs.\" I said. \n\n\"Is that why you wanted me to wear this?\" she asked. \n\n\"That's right.\" I said, laughing, \"It's funny though...\" \n\nI fell silent, not finishing my thought. \n\n\"What is?\" she asked. \n\n\"It's just... With the jacket all buttoned up like that... and with your skirt so short...\" I said thoughtfully, \"You could almost be... I mean, it looks like you could really be... completely naked under that thing.\" \n\nShe laughed, looked down at her bare legs that disappeared into the hem of the jacket. \n\n\"Yeah.\" she laughed, \"Yeah, it does kind of look-\" \n\nShe stopped, suddenly staring up at me. The fear, the sudden look of understanding on her face was obvious. \n\nShe suddenly looked around, taking in the complete stillness and silence of our surroundings. \n\nI grinned at her. She'd figured it out. \n\nI stepped forward and wrapped my arm around her waist. \n\n\"Come on sweetheart, let's go for a walk.\" \n\n== \n\nWe walked for a few minutes to a public bathroom that I knew wasn't usually locked overnight. I knew that because I'd checked it last night, and the night before. \n\nWith Jessica silently keeping pace with me, I strode into the men's room. \n\nShe hesitated at the doorway, but a quick tug convinced her to follow. \n\nThe bathroom was small, just a few stalls and two urinals against the back wall. Surprisingly clean, as public bathrooms go. The place was dimly lit and completely empty, as usual. \n\nI turned to her, and reached behind her to lock the door from the inside, then pushed her against it. I kissed her roughly, wrapping my arms tight around her. She seemed too stunned to properly respond, and only stared at me when I pulled away, the terror clear on her face. \n\n\"Sir...\" she almost whispered, \"What are we doing here?\" \n\nI smiled, and turned away from her. I walked towards the sinks, still talking. \n\n\"Tonight, sweetheart, we're going for a walk. I want you to wear that lovely new jacket of yours that I bought... and I want you to wear those sexy little heels you've got on.\" \n\nI paused, turning to look at her and leaning against the sinks. ",
        "\"I don't want you to wear anything else.\" \n\nShe gasped, and a look of despair fell across her face. \n\n\"Steven, we can't do this. We can't... I can't... Please... I can't do this...\" she stuttered desperately. \n\n\"Come here, sweetheart.\" I said kindly, gesturing to her. \n\nShe was terrified, that was obvious. Immediate protests, even going as far as calling me by my name. I'd expected this. \n\nI took her into my arms and hugged her. \n\n\"Sweetheart you know I'd never make you do anything you don't want to.\" I said soothingly. \n\n\"I can't, please, please...\" she whispered, obviously not soothed. \n\n\"Jessica, listen.\" I said, pushing her back to meet her eye, \"Just listen to me. Can you do that?\" \n\nShe opened her mouth to speak, but then frowned and nodded quickly. \n\nI was actually surprised she was willing to hear me out. I'd been fully prepared for her to not even listen to me and just storm back to her car, but it seemed she trusted me more than I thought. Just being here proved that. \n\n\"Sweetheart... we're completely alone here.\" I said calmly, \"Trust me on this. No one even comes here in the middle of the day, never mind in the middle of the night. It's dead out there.\" \n\n\"Steven...\" she interrupted, but didn't continue. \n\n\"I know you're afraid. I know that. But I want you to trust me.\" I said, \"I really think this could be fun. It'll be exciting, I know it will. I'll be right here with you the whole time.\" \n\n\"Steven come on, think about what you're suggesting here.\" she pleaded, \"I can't just walk around naked under a jacket, that's... it's... ridiculous, not to mention dangerous, what if... what if someone sees me!\" \n\nI just nodded, thinking of how best to convince her. Would she run if I just ordered her to strip right in front of me? Probably, she wasn't even calling me Sir, the fear completely overriding her normal submissive habits. \n\nForce probably wasn't the answer, but asking her wouldn't work either. \n\n\"This is why we're here, sweetheart.\" I said. \"I saw this jacket... and I just couldn't get the image out of my head. You wearing it... and nothing else...\" \n\nShe frowned again, and looked away. \n\n\"It's dangerous... I can't do this.\" \n\nI pulled her closer to me, trying to comfort her with my presence. \n\n\"I'll be right here beside you Jessica.\" I said, kissing her cheek, \"Nothing will happen.\" \n\n\"I can't...\" she said. \n\n\"But I think you want to...\" I said, \"You know it. You're a slut. A pervert. You like being tied up, right? Being spanked? You love all of this... this kinky stuff.\" \n\nI kissed her cheek again, keeping my voice low. \n\n\"It makes you feel alive doesn't it?\" I said, \"It makes your precious little heart beat so fast, you know it does.\" \n\nShe looked up at me, begging me with her eyes. \n\n\"I don't know if I can do this...\" she said. \n\n\"Well let's find out.\" I said, \"One lap around the park, that's all I'm asking.\" \n\n\"It's not just in the jacket though, right?\" she said, \"You'll make me... do other stuff.\" \n\nI laughed. She suddenly didn't sound completely terrified by the thought. \n\n\"I might.\" I said, \"That would up to me, now wouldn't it?\" \n\nI kissed her, softly pressing my lips against hers. \n\n\"You'll love it.\" I whispered to her. \n\nI slipped behind her, pulling her back against me. \n\nI turned her to face the mirror above the sinks, and reached up to slip the jacket off. I threw it neatly to land between two of the basins, safe from the tiled floor. After all, no public bathroom is that clean. \n\nI gripped the hem of her t-shirt and started to raise it up, exposing her stomach. I'd wanted to do this again since last week. There was something so erotic about undressing her, stripping her for my own pleasure. \n\nShe lifted her arms as I took the shirt off, exposing a bra I didn't recognize. Black, with a swirling red design. More new clothes for me to enjoy. \n\nI looked at her chest in the mirror, then up at her face. She had her eyes closed. \n\n\"Look, sweetheart.\" I said gently, \"Look at you.\" \n\nShe opened her eyes, and stared at herself. \n\n\"You're so beautiful.\" I whispered. \n\nShe shivered again, and I kissed the back of her neck. \n\n\"Go sit down.\" I said, pushing her towards the bay of sinks. \n\nShe walked over and turned, raising herself up with her arms to sit down. She crossed her long, sexy legs, and waited. \n\nI followed her, and reached for her skirt. She sat back and pushed her hips out, as if offering herself to me. \n\nNo hesitating any more. \n\nI unzipped her skirt slid it down, helped by her lifting herself so I could slide it down over her hips. I was surprised to see she was wearing a thong, a black one with the same design as the bra. \n\nI slid the skirt off over her heels, and drank in her body. \n\nShe stared at me, biting her lip. Was that still fear I saw? Or maybe that had already turned to lust... \n\nI ran my hands down her smooth stomach to her thong, and slipped it off her as well. I let the thong drop down her calves where it hung off her ankle, and then I ran my hands back up her legs, wrapping them around her ass and pulling her close to me. \n\nShe pressed her pussy against the crotch of my jeans, no doubt feeling how hard I was already. She wrapped her legs around me and sat up, pressing her body to me. I looked at her bra strap in the mirror, suddenly realizing without the reflection I probably wouldn't be able to get the thing off. \n\nI smiled at myself, reaching up to inexpertly unclasp it. I didn't exactly fumble with it, but it probably could have been smoother. \n\nI leaned back, sliding the bra off with me. She was wrapped around me, and completely naked save for her heels. She was just staring at me, that same look of both fear and lust that I'd become so familiar with. \n\nShe leaned forward to kiss me, but I pulled back. \n\n\"Not yet, slut.\" I said gently, stepping back. \n\nShe tensed her legs, not wanting to let me go, but eventually relented. I stepped back and again just admired her naked body, her absolute sexual perfection. \n\nShe glanced at the locked door just once, before meeting my eye again. She lay back and let herself be seen, her intense blush and shallow breathing exposing her nervousness. \n\nShe looked down at herself, then noticed her thong still draped around her ankle. \n\nShe slowly looked up at me, then raised one perfect leg up, pointing her toes at me. \n\n\"You forgot this.\" she breathed. \n\nI didn't react, lost in the complete eroticism of the moment. \n\nEventually I stepped forward again and slid the soft piece of cloth off of her. \n\nMy cock throbbed in my jeans, but I ignored my urge to take her right there and then. I smiled to myself as I started to pack her clothes away into my backpack, where I'd stashed her hoody. \n\nI thought about how much I had to resist when I was around, and how if I'd instead just relented every time I'd myself held back, I probably wouldn't have even gotten around to trying to punish her yet. \n\nI zipped up the backpack and turned to her. She was just staring at me, her body in the exact same position. \n\n\"Stand up.\" I ordered. \n\nShe gently lowered herself, her heels meeting the smooth floor with little twin clicks. \n\n\"Turn.\" I said. \n\nShe turned her back to me, and as I admired her naked ass, I regretted taking off the thong before I got to appreciate her in it. \n\nI draped her new jacket around her shoulders, and helped her put it on. She turned, and I buttoned it up for her, again taking my time, and finishing by tightly tying the sash. \n\nI stepped back. I was right, she looked exactly as she had before, the long hem of the jacket stopping short enough to be enticing, but long enough to hide whatever short skirt she was wearing under it. Or not wearing. \n\nI held my hand out to her, and she gave me hers. \n\nI stepped beside her, her hand tightly clasped in mine, and together we walked out into the night. \n\n== \n\nWe walked in silence for the first few minutes, heading to the path I was planning on using. She was walking confidently alongside me, her stride even. The only sign everything wasn't normal was the vice-like grip she had around my hand. \n\n\"You know what I just realized?\" she said suddenly, breaking the silence. \"This is the first time we've ever held hands.\" \n\nI smiled, realizing she was right. \n\n\"Well, I think we're close enough now for it to be appropriate.\" I said, \"Unless you think we're moving too fast...\" \n\nI relaxed my hand, and her grip increased. \n\nI laughed at her reaction, and she couldn't help but laugh too. \n\n\"How are you feeling?\" I asked quietly. \n\n\"Terrified.\" she answered quickly, \"I have no idea what I'm doing out here. No fucking idea.\" \n\n\"You're just having a walk in the park.\" I said. \n\n\"Yeah, just a walk in the park...\" she repeated sarcastically. \"Just a walk...\" \n\n\"You sound nervous.\" \n\n\"Yep.\" she said. \n\nI laughed again. \n\n\"Well, try to enjoy yourself.\" I said, \"I know I'm having a good time.\" \n\n\"That doesn't surprise me.\" she said quickly. \n\nI chuckled again. \n\nWe walked up a small flight of stone steps to a path. It was basically in the middle of the small wood the park was designed around. There were trees in every direction, and the whole place felt closed off and isolated. There was only one other way to reach this path, and it was by a joining dirt path on the other side that I'd never seen anyone use, and seemed to go nowhere important. \n\nWe actually had a choice of direction, left or right, but it didn't matter as it was one big circle, with a clump of woods in the center. Like a doughnut shape carved into the forest. \n\nI'd stopped at the top of the stairs while I prepared myself, and Jessica's breathing had started to quicken. She saw the path, how private it looked, and she no doubt knew what was coming. \n\nI relaxed my hand again, and her grip tightened. I pulled away, and she reluctantly let my hand go. \n\nI stepped in front of her, staring into her eyes. Without looking away from her, I slowly started to untie the sash of her jacket. \n\n\"Sir...\" she breathed. \n\nShe looked terrified, but made no move to stop me. I continued to undress her, keeping eye contact as I undid the buttons. When I was finished, I slowly pulled the jacket open. \n\nShe gasped and her body shook when I started, and her hands came up to grip tightly on to my arms. I couldn't believe I was really doing this. I couldn't believe she was letting me do this. \n\nI exposed her body to the cool night air, finally looking down. \n\nI moved to step back from her, to expose her, but she clung to me. \n\n\"Sir...\" she said desperately, not really trying to say anything except communicate how utterly afraid she was. \n\nI pulled her naked body to me and kissed her, my tongue slipping between her lips. She kissed me back, still clinging to me, but undoubtedly passionate in her response. There was a lot more than just fear there. \n\nI finally ended the kiss, and pressed my forehead against hers. \n\n\"Trust me, sweetheart.\" I said. \n\n\"I do, I do...\" she whispered, \"Just... just wait.\" \n\nShe closed her eyes, seeming to concentrate hard for a few seconds. \n\n\"You have to promise me nothing's going to happen.\" she said with her eyes still closed. \"You have to promise me you won't... you won't let or... or do anything bad, or dangerous-\" \n\nI softly kissed her lips, cutting her off. \n\n\"I promise.\" I said quietly, \"I promise nothing bad's going to happen.\" \n\nShe finally opened her eyes, meeting mine. \n\nShe nodded. \n\nI kissed her cheek and held her for a final moment, before stepping back. \n\nShe flinched at my absence, but resisted the urge to cover herself. She crossed her arms over her stomach, the jackets of the sleeve covering it, but her proud, firm tits and neatly trimmed landing strip were still visible. \n\n\"How does it feel?\" I asked, \"To be naked outside. Where anyone could see you.\" \n\nShe stood up straighter, and slowly dropped her arms. She didn't answer me, but just stared right into me eyes. \n\n\"Come on, slut.\" I said, taking a step backwards. \n\nHer eyes widened in fear, and she walked quickly towards me. \n\n\"Slowly.\" I ordered, taking another step backwards. \n\nShe stopped. \n\nI wanted to see her. I wanted to enjoy this moment. \n\nI started to walk slowly backwards, but stopped after a few steps. \n\n\"Come on.\" I repeated. \n\nShe followed me, slowly walking towards me. I stayed ahead of her, watching how her sexy body moved, how her big tits, unrestrained, jiggled back and forth with every step. \n\n\"You look so good, sweetheart.\" I encouraged, \"So fucking good.\" \n\nHer walk became more confident as I watched her hips swinging just that little bit more, and her back becoming straighter. \n\n\"That's it sweetheart, show yourself off.\" I said. \n\nShe blushed, looking down, but surprised me by obeying. She started to walk more sensually putting each foot in front of the other like a model on a runway. \n\nJesus, she was gorgeous. Her perfect young body strutting along a dimly lit path... it was like some sort of surreal masterpiece. I watched every inch of her body, but kept staring back into her eyes which never left mine. \n\nEventually I stopped, and she kept going. I pulled her into my arms and kissed her, reaching around to grab her ass. \n\nShe whimpered submissively as we kissed, but stopped herself from clinging to me. There was a space between us, meaning her body was still exposed. \n\nI stepped beside her, taking her hand again. \n\n\"Come on slut, we haven't got all night.\" I said, deliberately setting a slow pace. \n\nShe squeezed my hand tightly. \n\n\"So how does it feel?\" I asked. \n\n\"My heart's pounding.\" she said quickly, \"I feel like... like I can't breath.\" \n\n\"I bet you like it though, right?\" I said softly into her ear. \"I bet Jessica the prude loves walking around the park with her tits hanging out, with her tight little pussy exposed for anyone to see.\" \n\nShe gripped my hand tighter, but didn't respond. \n\n\"I wonder what your friends would think if they saw you now, hm? Your parents... oh, what would our teachers think of everyone's favorite star pupil streaking through the forest?\" \n\n\"They'd... they'd probably think I was a slut.\" she answered. \n\n\"Hmm, yes they would.\" I said, gently nipping her ear with my teeth, \"And they'd be right, wouldn't they?\" \n\n\"Yes Sir.\" she breathed, \"Yes they would.\" \n\nShe actually smiled, and I kissed her cheek. I felt incredible, such an awesome rush of dominance. I was leading her around completely naked, and she was obeying my every word. No threats, no force, just a suggestion and a casual undressing and here she was walking proudly through the night. \n\nI knew she wanted this. Maybe not this exactly, but an experience like this. \n\nShe'd revealed to me last time about what the word 'slut' meant to her. Something she'd never wanted to be. It was more than just a casual insult to her, it was the what her dad called her mom when she cheated, what he'd heard him shout whenever she'd sneak out of her bedroom to hear them argue. \n\nBut in being a \"slut\", she'd discovered a certain feeling of freedom, it seemed. She'd been so afraid of that word, but I'd unwittingly freed her of the taboo. She could be a slut, and could enjoy all of the things she'd been so afraid of her whole life, not to mention a lot of stuff she'd never even dreamed of, and still be herself. \n\nI tried to imagine how this must feel to her, literally exposing this sexual side of her that she'd always rejected, always feared. Was it worth the fear? The sense of danger? Or maybe they made it even better for her. Maybe that was the whole point. \n\nWe kept our slow pace, enjoying the silence. I wished the lights that dotted the inside of the path, though already dim, weren't so bright so I could see the stars better. \n\nA slight breeze rustled through the trees, and Jessica sighed at the cold air rolling across her skin. I laughed, and she giggled with me. She leaned in to me, and I squeezed her hand. \n\nSuddenly I frowned, looking up. There was a sound up ahead... almost like... \n\nMy heart leapt into my throat, and my blood ran cold. \n\nSomeone was coming. \n\nIt was distant, but there were definitely voices up ahead. For a second I froze in panic, my mind emptying of all possible plans. \n\nJessica still hadn't heard them, there was no tell-tale squeezing of my hand or gasp of shock. I had maybe seconds before she noticed. \n\nI suddenly span around, facing her. She jumped back slightly, but only watched as I quickly pulled the jacket closed and started to button it. My fingers were shaking slightly, but I managed somehow to get the whole thing done up tight, tying off the sash quickly. \n\nThen I stepped to her side and put my arm around her waist, pulling her close to me, squeezing her left hand with my right. I started to walk again, and guided her over to the edge of the path. When the people ahead passed, I'd be between them and Jessica. \n\nShe stiffened when she finally heard them, and stopped walking for a second. I knew her instinct would be to curl up in fear, so I gave her hand another reassuring squeeze and kept on walking, pulling her with me. \n\nTwo men turned the corner. They were wearing disheveled suits, and staggering slightly. They were arguing about something, not quite shouting but talking louder than necessary. Lucky for us, or I might not have heard them in time. \n\nOne was quite tall with mostly gray hair, although he looked too young for it. The other was clearly balding, and a little heavy around the middle. Two drunk businessmen, walking through the park. A drink after work, lamenting at the thought of a Valentine's day alone, perhaps? \n\nI kept my stride as the two approached us, then passed us without even a glance, too lost in their own drunken world. \n\nDespite the fact that nothing had happened, my heart was pounding in my chest. I slowed to a stop a minute or so after I heard the voices fade away, then again turned sharply to face Jessica. Looking over her shoulder, I couldn't see any trace of the men. \n\nJessica was shaking, and I could see tears in her eyes. She was terrified. \n\n\"That was close.\" I breathed, smiling easily. \n\nI couldn't let her see how close to panic I'd come. I had to keep calm for her. \n\n\"Good thing I heard them coming.\" I said, \"Who knows what they might have done if they'd seen you...\" \n\nHer eyes widened further in shock, and suddenly my own fear was forgotten. We were alone again, and I didn't want to let this stop me. On some level I knew it was dangerous, but honestly almost getting caught had made my cock even harder. \n\nThere was no sound around us anymore except for our own breathing. \n\nI reached up and slowly unbuttoned her coat, pausing slightly after each button, before sliding the two ends of the sash out of the knot I'd tied, and pulling the whole thing apart. She dropped her arms and stayed completely still as I exposed her nude body, seeming too stunned to even protest. \n\n\"I'm almost disappointed.\" I said with menace in my voice. \"Maybe I should call them back. I'd be curious to see what two middle aged men might would do with you, looking like this...\" \n\n\"Don't...\" she whispered, too terrified to even use her voice, \"Please don't, please... please...\" \n\nI stared into her eyes, watching tears form in the corners, as if I was actually considering it. \n\nThen I laughed. \n\n\"Oh, sweetheart.\" I said, stroking her face, \"I'm just teasing you, you know that. Why would I want to share you?\" \n\nI kissed her just once on the lips, a slow but shallow peck. \n\n\"You're my little fuck-toy, aren't you?\" I whispered. \n\nShe let out a small whimper and wrapped her arms around me. ",
        "\"We're going to play a little game now, sweetheart.\" I breathed into her ear, \"And it involves your slutty little pussy.\" \n\nI reached behind her and grabbed her ass, digging my fingers in hard. \n\n\"I'm going to run my hand up the inside of your thigh... all the way up to your pretty cunt.\" I whispered, \"And if you're dry... if you're really not having a good time... then we'll go back to the bathroom and get you dressed. Then we can have a nice, normal walk around the park. Like a lovely date.\" \n\nI massaged her firm ass with my fingers as I paused, letting her think about what I'd said. \n\n\"But...\" I hissed suddenly, making her jump, \"If your little pussy happens to be wet... if you're leaking all over your legs... basically, if you are having a good time... then I'm going to bring you into those trees behind me... and fuck you.\" \n\nShe gasped and whimpered, clinging tightly to my body. \n\nThis had always been part of the plan. I was torturing her with this game. I knew this was still a part of her that craved normality, and a date in the park would perfectly satisfy that need; make us feel like a nice, normal couple. But that wouldn't happen, and I'd made it her fault. Her own arousal would be the reason we were about to go into those trees. And I already knew this was all going to happen just as I planned... because I could already smell her arousing feminine scent. \n\nJust as I'd told her I would, I brought one hand down to her knee. She was trembling, and whimpered when I started to move my hand up, cupping it around her lower thigh. She sighed as I caressed her, moving closer to her bare pussy. \n\nI stopped for a second and grinned like a maniac, looking down so she couldn't see. I was only half way up her thigh, and I could already feel the wetness on her legs. I hadn't seen her this wet in a while. \n\nStill, I continued my journey up the inside her smooth, creamy thigh, all the way up until the edge of my finger was just about to touch her small, pink pussy lips. I could feel the heat of her arousal from here. \n\nSlowly, deliberately, I reached up and slid the tip of my index finger from the bottom of her drenched, hot, lower lips to the top, resting for a second on her clitoral hood. Without a word I slid my finger slowly inside her, enjoying the heat and tightness. \n\n\"I don't know...\" I sighed, twisting my finger inside her, and making her knees buckle slightly, \"That feels pretty wet to me...\" \n\nI twisted my finger again, expertly seeking her out her most sensitive spots, as well as thrusting in and out. She moaned sensuously into my ear. \n\nI was about to speak, tease her or insult her about her sexual appetite, but she suddenly grabbed me by the hair and pulled me away from her, only to force her lips to mine. She kissed me ferociously and wrapped one leg around mine, as if trying to mount me right there on the path. I returned her passion, and my cock throbbed in my jeans. \n\nShe was incredible. As scared as she obviously was, her lust had clouded her entire mind. \n\nI growled and pushed her away. \n\n\"Slow down, sweetheart.\" I panted. \n\nI looked quickly around. This was the place I'd staked out the last two nights. Right behind me was a fairly clear patch between two bushes, where we could walk into quite a densely wooded area. There were no big rocks to trip over, and no poisonous leaves of any kind. \n\nI grabbed her by the hand and led her into the darkness. \n\nI found the spot I'd picked out, close to the center of the wooded enclosure, a decent space between us and the path. I found the tree I'd chosen and put my back to it, knowing the space in front of us was relatively clear and flat.  \n\nI pushed her to her knees, then lifted her chin. I reached into my bag and pulled out my camera. \n\n\"Take it out.\" I ordered calmly. \n\nShe practically ripped my belt off trying to get it undone, and yanked my jeans and underwear down to my knees. My cock sprang free, and she immediately reached up to caress the shaft and balls. \n\n\"Stop.\" I grunted. \n\nShe whined and let go. I pointed the camera down at her face and flicked on the night vision. In expectation of this moment, I'd set the camera up to display on the screen in night vision, but swap to the high intensity flash for the actual picture. The washed out, slightly creepy green and black of the night vision just wouldn't do for this. \n\nStill, I took her by the chin and led her mouth to the very tip of my cock, just holding it there. She leaned forward to lick the tip and I instinctively, but lightly, slapped her for taking the liberty. She moaned with frustration, but didn't speak. \n\n\"Look at the light, sweetheart.\" I said lightly, turning her face towards me. \n\nOn the screen I could see her look up and find the small red dot above the lens. I took my hand away. \n\n\"Don't move.\" \n\nI gently squeezed the button, and the flash went off. \n\nI smiled and looked at the image I'd taken. It was... amazing. The flash had brought out so much color, revealing the blush of emotion on her face, and her full, heavy breasts her clearly visible, right down to her hard nipples. What was also amazing was... well, my own cock. Maybe it was the sense of detachment that came from seeing it in a picture, but my cock actually looked a lot bigger than it normally did. It seemed to jut out terrifyingly, taking up a huge amount of the image. \n\nThe picture blinked from existence, and I was left with the night-vision screen again, ready for another picture to be taken. I blinked and felt myself blush, embarrassed that I'd basically been fascinated by the sight of my own cock for the past few seconds. \n\nI shook my head and turned back to Jessica. \n\nI grabbed the back of her head and led her eager lips to the tip of my cock. She waited until I started to pull her closer to open her mouth and take me inside. What a good girl, I thought. \n\nI let her pleasure me with her tongue for a while, savoring the incredible thrill of a blow job in the great outdoors. I pointed the camera down and watched her through the lens. Being outside wasn't slowing her down at all; she still seemed just as determined to suck my brains out through the end of my cock as always, using everything she could to pleasure me. \n\nShe couldn't really see, but her eyes were closed anyway. Did she always look like this? So eager? So worshiping? Again, maybe it was just the fact that it was happening on a screen, or maybe it was the strange green-gray tone the night vision gave her skin, but she looked completely different. \n\nI pulled her closer, letting her know what I wanted. She looked up at the camera and took one deep breath before inhaling my entire cock, her lips firmly sealed around the base. I sighed with pleasure as she stared up at the camera, waiting. \n\nI snapped another picture, and waited for the image to show up. \n\nI smiled, even gently laughed when it came into view. My entire thick shaft from the previous image had completely disappeared, leaving a beautiful slut with wide green eyes staring up at me. \n\nI laughed again and pulled her back, letting her breath again. She started to lick my head, but I kept pulling her until my cock was free of her incredible mouth. I took a final picture, a perfect ending to the little blow job trilogy. \n\nShe was staring up at me with a look of frustration, her full red lips pouting in disappointment at being denied my cock. There were a few strands of saliva connecting her lips and my shaft, which was now glistening from base to tip. \n\n\"Jesus, Jessica...\" I said lightly, \"Don't let anyone ever tell you don't take a good picture.\" \n\nShe giggled in the darkness and kissed my cock. Despite her laugh I could hear the tension in her voice. She was literally sitting bare-ass naked in the middle of a park at night. Who wouldn't be nervous? \n\nI grabbed my cock by the base and pressed it to her lips. \n\n\"Back to work.\" I said, tucking my camera away. \n\nIn seconds I was back inside her hot mouth. She pressed her tongue hard against the underside of my cock head, and forcefully bobbed her head over and over. I jerked my hips forward and grunted with pleasure. \n\nI held her head as she worked. Sometimes when she sucked me she took her time, seeming to enjoy the experience, but now she seemed determined to get me off as quickly as possible. \n\nIt wasn't going to take long. This whole situation was getting to me, weakening my self control, and faced with her enthusiastic, and ever inventive technique, it felt I had no choice but to cum. \n\nBut just as I was on the brink, she slipped me out of her mouth and suddenly attacked my balls with her tongue. She sucked them into her mouth while my cocked bobbed freely in the cool air. \n\nI grunted with frustration and tightened my grip on her hair. I pulled her back, and shoved my cock back into her waiting mouth. She angled her head to allow me right into her throat, and I almost came straight away. \n\nI fucked her throat hard, barely remembering to keep quiet as I pumped into her. \n\nAfter less than a minute the pleasure overwhelmed me, and I came. She swallowed every drop, and as I released my grip on her head and relaxed against the tree I was standing against, she softly licked the head of my cock, cleaning the last of my sperm. \n\nAs usual, her gentle licking preventing me from going soft, and I was soon as hard as ever in her soft mouth. \n\nI pushed her off me. \n\n\"Stand up.\" I grunted. \n\nShe reached out to grab on to my legs, and tried to stand. She failed, barely managing to stay on her feet. \n\nI grabbed her under her arms and lifted her up, holding her steady. \n\n\"Careful...\" she whispered, holding on to me, \"I just... I came, Sir.\" \n\nMy cock throbbed at her words, and I handled her even harder. I span around and slammed her back against the tree. \n\nOf course she came; a rough throat fucking was enough to get her off in my bedroom, so why would her being naked in public do anything but make it better? \n\nThe thought made me insane with lust. I grabbed one of her legs and lifted it up. She wrapped it around my waist, and I quickly pushed my thick cock against her hot pussy. I held it there for just a second, and felt her juices sliding down my cock. \n\nI pushed myself into her, gasping at her tightness. Even this wet I had to push hard with my hips to stretch her. \n\nShe whimpered and wrapped her arms around me, suddenly making me take some of her weight. I lost my balance, and for a second I was sure I was going to fall, but I held myself against the tree behind her pushed my hips up even harder. \n\nWe found an steady position, holding each other up and both of us mindlessly pumping our hips. She kissed me hard, nipping my lower lip with her teeth. I kissed her back, then pulled away to lick and bite along her jaw and neck. \n\nWhen I lightly bit her throat she let out a squeal of passion, and a few seconds later she came hard around my cock. \n\nI wasn't going to last long. It was rough, frantic sex, no hint of teasing or patience. I growled as I pounded her, drunk on the sensation of taking her out here and making her do this. \n\nShe came when I did, our bodies freezing at the same time, pausing for one incredible pleasure-filled moment, before we released our breath. \n\nShe dropped her leg and leaned back against the tree, her arms becoming looser around my neck. I pressed my forehead to hers, not able to see her in the darkness, and we slowly kissed. \n\nI didn't want to linger, but couldn't help but steal a few more kisses. \n\n\"Time to go.\" I said eventually. \n\nIn response, she just kissed my cheek, and dropped her arms. \n\nAfter I made sure the jacket was tightly secure, which was hard to do in the dark, I picked up the bag and took her arm. \n\nWe walked slowly back down the path, no real hint of fear or nervousness from either of us. She rested her head on my shoulder as we walked, seeming perfectly content, despite only having one thin layer protecting her naked body from the elements. \n\nThe park was still totally deserted, and we didn't see a sign of our two friends from earlier on the way back. \n\nWe got to the bathroom with no problems, but I still breathed a sigh of relief when we made it inside. \n\nAfter entering, I turned to see Jessica locking the door. She faced me, and walked passed me over to the sinks. \n\n\"Aren't you going to take this off?\" she said, resting back against the counter. \n\nI smiled, and stepped close to her. \n\nI undid my hastily fastened knot, and again worked my way down the buttons. I pulled it open, and she gracefully let it slide off her shoulders. \n\n\"I hope we didn't make a mess.\" she said, her voice calm and breathy. \n\nShe turned and held the jacket out, running her fingers along the inside lining. \n\n\"Nope... dry as a bone. Good.\" she said. \n\nShe turned around and raised herself up on to the bay of sinks. \n\nShe sighed and gently ran her fingers over her nipples, then put them on her lap, before awkwardly running them through her hair. \n\nShe bit her lip and looked at me expectantly. I'd assumed by this point she'd be desperate to get changed and go home, possibly even angry with me for fucking her against a tree. \n\nI was so happy to be wrong. \n\nI walked towards her and she sat up, wrapping her sexy calves around my waist. \n\n\"Sir... I wanted to ask you something.\" she said quietly. \n\nShe leaned forward and pressed her body against mine, leaving our face inches apart. \n\n\"You have all these sexy names for me... slut... whore... and of course... sweetheart.\" she said with a smile, \"But all I get to call you is Sir.\" \n\nI gently took her cheek and pulled her close to me. She pursed her lips for a moment, thinking I was going to kiss her. I stopped just as I felt her breath against her lips, and she pouted. \n\n\"Do you have a suggestion?\" I asked, my voice low and quiet. \n\n\"Well I was thinking...\" she said, \"Seeing as how you own me... that there is a certain term that might be fitting.\" \n\n\"And what would that be?\" I asked. \n\nHer playful smile faltered for just a second, and I could see her nervousness at bringing this up. But it was just a moment, and she found her confidence again. \n\n\"I'd like to call you... Master.\" she breathed, looking in to my eyes. \n\nI reached up and grabbed her hair tightly, pulling her close to me. I pressed my lips to her ear and said; \n\n\"I didn't hear you sweetheart. Say it again.\" \n\n\"Master.\" she squeaked, barely above a whisper. \n\nI tightened my grip and yanked her head to the side, away from me. \n\n\"Again.\" I ordered. \n\n\"Master!\" she shouted, her voice filling the small room. \n\nI pulled her lips to mine and kissed her hard, still clinging tightly to her hair. . She wrapped her arms around me and kissed me passionately. \n\nI let go of her to undo my belt, and she slid away from me, trying her best to lie comfortably along the bay of sinks, even with an arm resting inside one. \n\nWith my cock freed, I followed her on to the sinks and leaned over her. It was an awkward position, and she giggled as we moved to try and line up, making me laugh. She lay one of her sexy black heels on my shoulder, and I moved forward to press my cock against her pussy. \n\n\"Fuck me Master... please fuck me!\" she squealed. \n\nI thrust into her, making her yelp with pleasure. I panicked for a second, realizing we still weren't really safe, and clamped my hand over her mouth. \n\nShe didn't seem to notice, just moaned and tried to move her hips despite how awkwardly we were joined. \n\nI slipped out of her for a moment to better line us up, then thrust my full length in to her. Again she squealed, this time muffled by my hand. \n\nI fucked her hard, like I had outside. I wasn't giving any thought to the movement of my hips, or the rhythm of my movements, I just wanted to fuck. \n\nWith one hand over her mouth, I'd grabbed her shoulder with the other to steady myself. I gripped it tightly in frustration, realizing that despite how fucking horny she made me, it was going to be a while before I could come. \n\nThe word kept echoing in my head, 'Master.' \n\nShe called me Master, wanted me to be her Master. Just when I thought I'd pushed her as far as she was ready to go, she was finding knew ways to degrade herself to me, to be even more submissive. \n\nShe was mine. My beautiful slave, my gorgeous little whore. \n\nI owned her, and I felt it with every thrust, every time I filled her tight little pussy with my hard cock, every time her body shook with pleasure. She belonged to me. \n\nWhen I finally came, it hit me hard, and fast. A few lightning bolts of pleasure, and suddenly the energy drained from me. \n\nI felt my cock rapidly soften inside of her, exhausted for the night. I looked down and noticed I was still holding her tight with my hands. Her eyes were closed. \n\nI loosened my grip on her shoulder, and released her mouth. She opened her lips wide to pant heavily, her breath warm against my palm. I gently cupped her cheek, and she kissed my hand as it moved closer. \n\nShe finally opened her eyes to me, but didn't speak. She was smiling. \n\nI leaned down to kiss her, but my knee slipped out from under me and I fell. My head bumped into her collar, and she slid her leg off my shoulder. \n\nShe laughed at my fall, and I could feel her whole body moving under me. I laughed too, the sex leaving my head feeling light. \n\nOur giggles died down, and I pushed myself up with my arms to look at her. She took my head with her hands and leaned up to kiss me slowly and sensually. \n\n\"I love you, Master.\" she said quietly when we parted. \n\nI kissed her again, lightly on the cheek. \n\n\"Happy Valentine's Day, sweetheart.\" I said. \n\nShe laughed at that, and so did I. I lay together, her naked and me with my jeans around my knees, and just laughed at the situation we were in. \n\nBefore too long I managed to untangle myself from her and get to the floor without hurting anybody. \n\nI dressed myself, then held my hand out to her. I helped her sit up, but she didn't stand right away. She looked incredible, and I suddenly got the urge to take a picture. But it wouldn't have worked if I had, the moment would be ruined if there was a lens between us right now. \n\nShe looked so happy, so relaxed. So full of love. So understanding of the bizarre situation she was in, and completely accepting of it. I looked in to her eyes, knowing I'd probably remember this little walk in the park for the rest of my life. \n\nI blinked and the feeling vanished. I smiled. \n\n\"Let's get you dressed, sweetheart.\" I said. \n\nThe first step was to deal with the mess we'd made of her inner thighs, the mixture of our sexual juices, some of which had already started to dry. \n\nI ran some toilet paper under the cold water and gently wiped her clean, even lightly running it over her swollen pussy, making her gasp and giggle. \n\nWe didn't speak as I helped her step into her panties, or her skirt. I slipped her bra on and again used the mirror to help me work out how the strap fastened, which I hope she didn't notice. \n\nI leaned back to check if the bra was on properly, which it seemed to be, and I noticed something on her skin. A dark bruise had started to form where I'd been grabbing on to her. \n\nI ran my finger along it, and she looked down. She saw it, and stroked it with her fingers. I put my hand over it, fascinated with how it almost perfectly fit the shape of my hand. \n\nFor a second I was worried, but she just smiled at me. \n\nShe raised her arms as I pulled her t-shirt out of the bag, and I slid it on to her. \n\nShe stood for this, and faced the mirrors. I put it on the same way I'd taken it off, standing behind her and gently kissing her neck. ",
        "I left it open, and met her eye in our reflections. She turned quickly and kissed me, not seeming to care if I tried to stop her. \n\nWe stood for a few minutes, just quietly kissing and holding each other. \n\nEventually I took her hand and led her outside again, slowly walking back to were we'd parked. She still didn't speak, and I didn't want to break this silence. I held her hand, and she leaned on my shoulder. \n\nAs we walked to the cars, I didn't want to leave just yet. I sat down on the bench, and she sat next to me. \n\nWithout saying a word she put her legs over mine and curled up in my lap, kissing my cheek once before burying her head into my chest. \n\nI held her for a long time, not caring when I felt her fall asleep. \n\nAfter... probably too long, I felt my own eyes start to droop. I shook my head and sat up. There was no way I was going to fall asleep on a park bench. \n\nI tried to wake Jessica a few times, but eventually figured it wasn't going to happen. She was basically passed out, not really surprising after all the excitement tonight. \n\nWith a strange certainty I reached into my bag and fished out her hoody, reaching into the pocket to find her car keys. I wasn't sure if I'd known they were there before, but it made sense. \n\nI pulled her off me and left her asleep on the bench for a second, getting up to open her car passenger seat. \n\nI got back to her and picked her up, thinking I would just carry her over to it. I immediately regretted my decision. \n\nJessica was in fantastic shape, but she was also tall, athletic, stacked, and by this point completely dead weight. Add that to my completely average strength, and it's a wonder I managed to get her in to the car without dropping her or falling on my ass. \n\nI buckled her up and got into the driver's seat. \n\nI was a fairly short drive back to her place, but she woke up along the way. \n\n\"Where are we going?\" she asked sleepily. \n\n\"I'm taking you home.\" I assured her. \n\nI don't know if she heard me, but she didn't answer. \n\nWhen we got to her place, I managed to get her conscious enough to show her where she was, and where she needed to go. I couldn't very well carry her in to her house and up to her bedroom, now could I? \n\nWe kissed on the doorstep before she went inside, just once, but deeply. \n\n\"Goodnight Sir.\" she whispered, quietly sneaking inside. \n\nWhen she shut the door, I turned to look at her car, then sighed. \n\nI was five minutes away from my house, but my own car was still at the park. There was no possible way of driving back to it without leaving one stranded. \n\nI sighed again, slung my bag over my shoulder, and started walking. \n\nIt took about 40 minutes to get back to the park, and that wasn't helped by the fact that I got lost twice despite just having driven the exact route. \n\nBy the time I got back home with my own car parked outside, and into my own bed, the February sky was tinged with the light blue of a coming sunrise. I briefly considered staying up to watch it, since I'd been awake this long, but I passed out seconds after having the thought. \n\nBut not before I thought of Jessica one last time, her arms and legs wrapped around me, her tongue pressing playfully against mine, her bright green eyes... \n\n== \n\nThere was a knock at the door, and I woke up. \n\nIt was Friday night, the day after Valentine's Day. \n\nI was lying in my bed, still dressed, with my laptop open in front of me, the screen blank. There was another knock, and I turned to look at the door. \n\n\"Shit.\" I mumbled, sitting up. \n\nI'd fallen asleep watching a movie on my now drained laptop, waiting for Jessica. \n\n\"Yeah.\" I said, then cleared my throat. \n\nShe opened the door and stepped in. She was wearing a black bra and panties, patterned but not overtly sexy. My cock twitched at the sight of her. \n\n\"Hey.\" I said, running my fingers through my hair. \n\n\"Uh, hi...\" she said, \"Are we not... are we doing something tonight?\" \n\n\"Yeah...\" I said, lying back down. \"I mean, we were. I fell asleep.\" \n\nShe laughed lightly. \n\n\"Oh.\" she said, \"I guess last night was pretty tiring. You seemed pretty out of it at school.\" \n\nI was well practiced at getting through a school day with barely any sleep, but I always crashed when I got home. \n\n\"Yeah, I had to walk back to the park to get my car.\" I explained, covering my eyes with my arm. \n\n\"Oh shit, I didn't even think about that. Thanks for driving me, by the way.\" she said, \"I was in no real state to drive...\" \n\n\"No problem.\" I grumbled. \n\nI had a plan for tonight, of course. Another few of my New Year's purchases selected for their first use. But the lack of sleep had caught up with me, and now I felt terrible. Exhausted. \n\nI was half hard in my pants from just seeing her, but all I wanted was to curl up in a warm ball and go back to sleep. \n\n\"Come here.\" I said impulsively, looking at her. \n\n\"Yes Sir.\" she said, getting to her knees. \n\n\"No, no, just get over here.\" I said. \n\nShe looked up at me and smiled. That God damn coy smile again. \n\nShe walked over to the bed, walking around it to the other side. She moved my laptop to the floor and slipped under the covers. \n\nI struggled of my uncomfortable jeans, sighing at the simple pleasure of being without pants. \n\n\"Come here.\" I said, stretching my arms out. \n\nShe moved over to me, and I ran my hands up in to her hair and pulled her closer. Her body molded against mine, and she sighed deeply. \n\n\"So... we're just going to sleep?\" she asked. \n\n\"Yeah...\" I sighed, trying not to yawn. \n\nI was too tired to think about what I was doing, or what it meant. I was exhausted, and sleep felt inevitable. I just wanted the warmth of her body against mine. \n\nShe giggled, and wrapped her arms around me. \n\n\"Can I take my bra off?\" she asked. \n\nWithout thinking reached down to the strap behind her back. After last night I had the basic idea, and was able to undo the clasp without any trouble. \n\nShe laughed again, pulling away to wriggle out of it, then threw it off the bed before sliding back into my arms. My thoughts were already starting to drift and mix with the oncoming dreams. \n\n\"Should I... should I turn the light off?\" she asked quietly. \n\n\"Probably.\" I sighed, holding her tight. \n\nShe pulled away again, and leaned over me to shut off my lamp. When she returned, I buried my face into her soft hair and squeezed her. \n\n\"Sir...\" she whispered in the darkness. \n\n\"Hm?\" I grunted. \n\n\"Um... nothing.\" she said, \"Good night.\" \n\n\"Night.\" I sighed, and finally allowed myself to drift back into sleep. \n\n== \n\nI woke up slowly, some insistent sensation pulling me inch by inch back to consciousness. I opened my eyes to the darkness. Jessica had her back to me, her head against my chest, and my left arm holding her tight. She pulled against my arm as if trying to leave, but not hard enough to actually move me. \n\nAfter a few seconds, she pulled away again, lightly resisting my grip not going anywhere. \n\n\"What are you doing?\" I asked sleepily. \n\nShe jumped in surprise. \n\n\"Sorry, did I wake you?\" she whispered. \n\n\"Yeah.\" I said quietly, \"Do you want to go?\" \n\n\"No, I wasn't... I'm good here.\" she said. \n\n\"What are you doing?\" I asked, again letting my voice raise to a normal volume. No point in hissing at each other if we're both up anyway. \n\n\"I was just...\" she started, \"I liked the way you were holding me. Even in your sleep, it felt... possessive.\" \n\nShe was right, I had her in a pretty firm hold. \n\n\"I woke up like this, you holding on to me. Like you weren't going to let me go. I... I liked the feeling, and when I moved you held me tighter. I was just... testing the restraint, I suppose.\" \n\nShe pulled away again, and I instinctively tightened my grip. She laughed, and I squeezed her tightly. \n\n\"I think it says something about you...\" I said, \"that it wasn't the intimacy of the moment that you liked, but the feeling of 'restraint'.\" \n\nI yawned widely, shivering a little. I felt so comfortable. \n\n\"I guess... that's why I'm your slave, and not your girlfriend, right?\" she said, a smile in her voice. \n\n\"Right.\" I agreed, chuckling. \n\nShe leaned away again, but this time turned around to face me. She kissed me on the cheek, just once, then pulled away. \n\n\"Is this OK?\" she asked. \n\n\"It's fine.\" I said, not really caring which way she faced. \n\n\"OK.\" she said, and kissed my cheek again. \n\n\"Last night was fun, wasn't it?\" she asked. \n\n\"Was it?\" I answered. \"I know I had fun...\" \n\n\"It was!\" she laughed, \"Oh my God, I was terrified something was going to happen. And when those two guys showed up... Jesus, I thought I was going to pass out!\" \n\nI laughed, remembering how tightly she'd held my hand. \n\n\"It didn't bother you at all though.\" she said, \"You were just... cool and collected, like always.\" \n\nI didn't reply to this. I was glad I'd managed to hide my panic from her, but at the time I'd been every bit as terrified as she was. \n\n\"You're always so calm. I never really know what you're feeling.\" she said quietly, \"It makes me... sort of nervous.\" \n\n\"Don't worry about what I'm thinking.\" I said, \"Just do whatever you want. Until I tell you to do something else, I guess.\" \n\n\"OK...\" she said. \n\nWe lay for a while in the darkness, and I almost fell asleep again. \n\nShe eventually broke the silence. \n\n\"Sir?\" she asked. \n\n\"Hm?\" I answered. \n\n\"I've been talking to Rose a lot about us.\" she said, \"I haven't revealed many actual details... but I think she knows that I... you know, how I feel about you.\" \n\n\"I know.\" I sighed, \"She keeps pushing me to make you my girlfriend, doesn't get why it's just sex when you like me so much. It's pretty annoying.\" \n\n\"Wow, sorry...\" she said, \"I know you value your privacy.\" \n\n\"Don't worry about it.\" I said, \"Rose and I... we've got our own problems. Nothing you have to worry about.\" \n\n\"OK...\" she said, then fell silent for a few seconds. \n\n\"Like I said, I didn't tell her anything important... but just talking to her has been so good.\" she said, \"It's made me feel a whole lot better about everything.\" \n\n\"Good.\" I said simply. \n\n\"I was just... I mean, you don't really talk to her about this sort of stuff, do you?\" \n\nI chuckled lightly. \n\n\"No, Rose and I haven't been close enough for that kind of thing for a while.\" I said. \n\n\"So who do you talk to?\" she asked, \"About... you know, important things?\" \n\nI opened my mouth, but she continued before I could answer. \n\n\"Because I think it's important, you know, to have someone you can share things with. Like, if you're stressed or worried about anything... or if you just want to talk... Do you... do you have someone like that?\" \n\nI frowned. Why was she suddenly so curious about my social life? \n\n\"I don't need anyone.\" I answered simply, \"I'm fine on my own, always have been.\" \n\nI laughed, remembering who I was talking to. \n\n\"I mean, you should know.\" I joked lightly, \"After all, it's your fault I'm used to being alone.\" \n\nShe suddenly pulled away from me, as if flinching. \n\n\"I...\" she said, but paused. \n\nShe let go of me, and pulled away from my arms. \n\n\"I should go.\" she said quietly. \n\n\"Yeah it's pretty late.\" I sighed. \n\nShe slipped away from me, and backed out of the bed. I briefly wished the lights were on so I could see her body, but I quickly got over it by spreading out and enjoying the new space. \n\n\"Goodnight.\" she said, before slipping out the door. \n\n\"Night.\" I called back. \n\nI was vaguely aware that something was off, but I was too tired and close to sleep to pay any real attention. \n\nWhy was she always so curious about me? What did it matter to her if I had someone to talk to? \n\nI sighed, getting comfortable under the covers. \n\nI didn't need anyone. \n\n== \n\nThe next morning Rose made breakfast for us. Well, for Rose and me, not for Jessica. She was happy with her coffee. \n\nRose kept asking Jessica pointed questions about the jacket she wore to school Friday, and again complemented my new watch. \n\nI laughed it all off, keeping the atmosphere light. I'd figured out that shutting her down every time she got too personal with me wasn't going to help anything, so I just kept things light. \n\nIt was sort of interesting actually, watching her. She wasn't very subtle, just made occasional references to what she might do is she were going to take someone out for a date, or ask Jessica where her favorite place to eat out was while trying to meet my eye. \n\nShe was still forcing this idea of being a couple, albeit in a less direct way than before. \n\nThe morning passed quickly, and Rose decided to go to the mall again for new clothes. Like she didn't just buy enough clothes to last a year. \n\n\"Come on Steven, we'll get smoothies and stuff too.\" she said, \"You like smoothies, right? Well, we'll get some, you'll like them.\" \n\n\"No thanks.\" I said in an easy tone, \"I've got some reading to catch up on. You two have fun.\" \n\n\"Oh come on, we can get you some new clothes while we're there.\" she insisted. \n\nFor the first time in a few weeks, I wasn't willing to go along with my sister. \n\n\"No thanks.\" I said steadily, meeting her eye. \n\nShe frowned, but shrugged. \n\n\"Fine, have fun by yourself.\" she said, just a tad coldly. \"I'll be right back, just need to get changed.\" \n\nShe shot Jessica a quick look before she walked out, and Jessica gave a small smile in return. \n\nThey were working together on this, trying to get me to spend more time with them. Or rather, with Jessica. I knew before she even opened her mouth. \n\n\"I mean... you don't have to come.\" said Jessica, \"But it would be fun... We could-\" \n\n\"I wonder...\" I said, cutting her off. \"If Rose would be so quick to pair us up if she knew how I treated you...\" \n\nShe looked surprised, but didn't answer. \n\nI stood up and walked over to her, closing in until our bodies were almost touching. \n\n\"If she saw all the bruises I give you... all your sexy little scars... would she still want you to be my girlfriend?\" \n\nShe looked away from me, and her hand reached instinctively up to her shoulder, as if to cover the already hidden marks that my grip had left on her. The evidence of our first date. \n\n\"Would she want you to be around me at all...?\" I asked. \n\n\"I... I think she-\" \n\n\"I think...\" I said, cutting her off again, \"That sometime soon... very soon...\" \n\nI reached behind her, and grabbed her ass hard. \n\n\"That I'm going to fuck this tight ass of yours.\" I growled. \n\nShe gasped. \n\nI let my body relax and pulled away from her, smiling easily. \n\n\"Have fun at the mall, sweetheart.\" I said lightly. \n\nI leaned in to give her a quick peck on the cheek, then turned and walked away. \n\n* \n\nApologies for the long wait for this chapter, once again real life gets in the way of fantasy. Thank you all for being so patient, and a big thank you to the readers who decided to share a few personal notes and pictures. \n\nOn another note, as far as I can see the stolen version of my story has been taken down from Amazon, so thank you to everyone that reviewed and reported it. I'm aware there are some other copies of my work floating around, but as long as no one's trying to make money from them then I don't consider it urgent. \n\nAnyway, this was Chapter 6. Honestly not feeling too confident about this one; it took so long to write that I'm not sure if it all fits together properly. Well, you can let me know what you think of it. \n\nAnd as always, all characters in the story above are over 18 and fictional, and you should probably read the first 5 chapters if you have the time. \n\nThanks for reading. \n\n-BB"
    ],
    "authorname": "BackyardBottomslash",
    "tags": [
        "bondage",
        "clamps",
        "big cock",
        "gag",
        "public nudity",
        "exhibitionism",
        "crop",
        "punishment",
        "female submissive",
        "male dominant"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/yours-ch-06"
}