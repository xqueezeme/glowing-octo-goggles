{
    "title": "Transformations - Sinful Suburbia Ch. 04",
    "pages": [
        "Transformations: Sinful Suburbia Ch. 4\n\nComments welcome!\n\n------------------------\n\nTyler was sore. Even though Stacie would revive him after each cum with the delicious milk from her breasts, the human body simply wasn't meant to cum that many times.\n\nSo, when Emily gently removed her finger from his ass and climbed on top of him, kissing her way up his stomach and chest, he was relieved.\n\nHe put his arm around her and held her.\n\nStacie stroked his hair. \"This is what we are, Tyler.\"\n\nHe smiled up at her. \"Why me? Why do this for me?\"\n\n\"She chose you. I've been... well, I haven't treated her as well as I should.\" She kissed his cheek. \"And, I have this innate need to corrupt and pervert the innocent.\"\n\nTyler laughed. \"I'm not going to complain about that. But, I'm still not sure what you did to Emily is right.\"\n\nShe shook her head. \"No. It's not right. But, it is... spectacular, isn't it?\"\n\nHe looked down at the beautiful woman in his arms.\n\nShe smiled at him, the brilliant green eyes sparkling.\n\nStacie's nipple touched his lips.\n\nHe kissed it. \"No. I can't. I need a long nap.\"\n\nStacie stroked his cheek. \"She needs to cum.\"\n\nHe looked down at Emily. She had a shy, hopeful expression on her face.\n\nWhat was he thinking?! He had eagerly let them make love to him for hours while he did nothing for her.\n\nHe pulled Emily up, kissing her face.\n\nStacie stroked both of their faces as they kissed.\n\nThen she pushed her breasts against their cheeks.\n\nEmily raised her head and smiled.\n\nTogether, they each latched onto Stacie's nipples and nursed.\n\nStacie cooed and moaned as they drank.\n\nTyler went rock hard again, his erection pressed against Emily's stomach.\n\nThen she sat up. She hooked a finger at Tyler.\n\nHe sat up with her and together they slipped off the table.\n\n\"Where are you two going?\" Stacie asked.\n\nThey each took one of her hands.\n\n\"Emily isn't the only one who needs to cum,\" Tyler said.\n\nThey pulled her toward the operating table.\n\n\"Oh, my goodness,\" Stacie laughed as they lay her on the table with her legs spread. \"You dear, sweet things,\" Stacie moaned.\n\nEmily smiled as they knelt between Stacie's thighs.\n\nEmily kissed her way along the inside of Stacie's left thigh.\n\nTyler kissed his way along the right, tasting her warm, salty flesh.\n\nStacie was breathing hard, her flat abs rising and falling rapidly.\n\nEmily giggled as she and Tyler met in the middle. She kissed Stacie's clit.\n\nTyler tongued Stacie's ass gently.\n\nThe MILF's body was trembling.\n\nTyler and Emily worked together, kissing and tonguing her pussy, her ass.\n\nOne would leave her clit, only to be replaced by the other.\n\nAnd, in between, they would kiss, tasting Stacie's juices on each other's lips.\n\nThree people, taking turns, with two pleasing one, and then rotating. That was how this worked. You could spend weeks like this, Tyler realized. Taking turns making one person the focus of all your passion, all your love.\n\nStacie screamed as she came, her pussy overflowing, her hands in their hair.\n\nEmily smiled at him as Stacie convulsed on the table.\n\nEmily mouthed the words, \"I love you.\"\n\n\"I love you too,\" he whispered.\n\n***\n\n\"Too big!\" Margaret moaned as Levi's big cock pushed against her anus.\n\n\"You're taking this, Margaret. Stacie told me that if you crawled to me on your hands and knees, I could do anything I wanted to you. And, I want your ass.\"\n\n\"Oh, God,\" Margaret sobbed. She arched her back as her sphincter struggled to accept the huge cock. They were still spooning, his cum dripping steadily from her well fucked pussy.\n\nThough his words were harsh, he was still careful with her. Yes, he was intent on assfucking her, but he was not purposely trying to hurt her.\n\nHe was simply taking what was his.\n\nAnd, that thought set her on fire with lust.\n\nOwned. He owned her, at least for tonight. In the morning, she would be Stacie's property. But, tonight? She was her stepson's slave.\n\nShe came a little thinking about that, her cunt muscles vibrating.\n\nShe stared at the rings on her finger. They meant nothing. Marriage meant nothing, Abe meant nothing.\n\nShe was a slave. She was a whore.\n\nAnd, she was beginning to like it!\n\nMargaret felt her body finally relax, her hole opening for her Master's cock.\n\nHe slid slowly, agonizingly, inside her.\n\n\"You're doing it!\" She whispered. \"Levi, you're fucking my ass! Oh, God, my stepson is fucking my ass!\"\n\nHe laughed cruelly and he slid inside her faster.\n\nSo long! It felt like it was in her throat, but still more slid inside her.\n\n\"Fuck... Unnh, fuck,\" she whispered as he rolled her onto her stomach.\n\nHe went balls deep in her ass.\n\n\"Oh, my God!\" She said, and he pushed her face into the sheets.\n\n\"Shh,\" he laughed. \"You want to wake him up?\"\n\n\"D... Don't care... don't care about anything anymore,\" she mumbled. \"Just fuck me. Make me your bitch.\"\n\nLevi pulled back and then pushed inside.\n\n\"Fuck! Oh, fuck, Levi.\"\n\nHe began fucking her.\n\nShe was impaled on him, attached to him.\n\nMargaret began to laugh as her stepson used her. This wasn't for her - it was for him! He was taking her ass, masturbating into her.\n\nShe raised her ass to meet his strokes.\n\nHe bottomed out inside her and she felt his cock throbbing, filling her with his seed.\n\nMargaret laughed softly as his balls drained into her.\n\n***\n\nTyler walked upstairs holding Stacie with his left arm and Emily with his right.\n\nThey were naked - there was no need for clothes here.\n\nInside Stacie's bedroom, they fell together on her bed.\n\nStacie kissed Emily gently. \"Let him.\"\n\nEmily looked frightened. \"I'm ready for him to fuck me,\" she whispered.\n\n\"Let him.\"\n\n\"Mistress, please, what if I...\"\n\nStacie put her hands on Emily's shoulders. \"You won't.\" She turned and looked at Tyler. \"You want to lick Emily's pussy, don't you?\"\n\n\"Yes!\" Tyler pulled Emily on top of him.\n\n\"Wait!\" Emily said. \"You can... kiss my clit. But, don't suck it. Okay?\"\n\nHe smiled at her. \"Why?\"\n\nShe shook her head. \"Please? Just don't suck it.\"\n\n\"Okay, I won't,\" he whispered.\n\nShe slid her crotch up his body.\n\nTyler smiled at her pink, hairless pussy with the delicate, wet lips and the thick clit.\n\nHe kissed her pussy, tasting her juices.\n\nShe settled on his face, arching her back and moaning as his tongue snaked inside her wet pussy. \"Tyler, just like that.\"\n\nShe rocked gently, riding his lips and tongue.\n\nA mouth on his cock - Stacie was sucking him while he made love to Emily with his mouth.\n\nStacie's throat was magic, swallowing him to the balls on each stroke.\n\nEmily's honey flowed into his mouth as she moaned above him.\n\nHe licked her clit, taking care not to suck.\n\nShe cried out above him. \"Just... lick... don't...\"\n\nHe flicked her clit with his tongue, up and down, left and right.\n\n\"Like that! God, like that! Tyler!\"\n\nShe came, her little pussy spasming and squeezing his tongue.\n\nHe licked her clit faster.\n\nShe lifted off him, and then her lips were on his, kissing him deep as she lay down on top of him.\n\nHe felt Stacie's hand on his cock, maneuvering him.\n\nHis cock slid against Emily's pussy.\n\nAnd, then he was inside her.\n\nShe sank down, engulfing him as she continued to kiss him.\n\nHe reached down and found her ass, pulling her tighter against him.\n\nIt felt so good to be inside her! Warm and tight and wet.\n\nEmily began to move her hips in slow circles, grinding against him.\n\nShe arched her back, breasts thrust forward, and he raised up, kissing her nipples.\n\nShe opened her eyes and smiled at him with her pouting lips.\n\nHe sucked her left nipple and the Ambrosia flowed.\n\nHer Ambrosia was lighter and sweeter, but the effect was the same. He was even harder, his cock like iron inside her as she made love to him.\n\nStacie lay down on her side facing him. She smiled as she watched them, her fingers trailing down to her pussy.\n\nEarlier, he had realized that this strange relationship was two people making one the center of attention, now it was two people becoming one as the remaining person enjoyed watching.\n\nEmily whimpered and pressed herself against him.\n\nHer body went stiff, the grinding stopped.\n\nWhen he felt her orgasm bloom, he pulled her tighter against him, joining Emily as he poured cum into her.\n\n\"Magic,\" Stacie whispered.\n\nShe snuggled close to them, and the three of them fell asleep together.\n\n***\n\nIt was after midnight as Margaret stumbled out of Levi's room.\n\nHer body was wet with their combined sweat and juices.\n\nShe walked naked to the room she shared with Abe.\n\nMargaret stood in the moonlight looking at her sleeping husband.\n\nHer stepson's cum dripped from her pussy, from her ass.\n\nHer body was finally sated. Her libido finally held at bay.\n\nShe had thought that would lead to regret.\n\nIt didn't.\n\nMargaret felt alive.\n\nLevi was different. She was different. Everything had changed in the course of a couple of days. She had gone from Levi's stepmother to his sex slave in an instant.\n\nAnd, now, staring at her husband, the man she had taken from his wife a decade before, meant nothing to her. She knew instinctively that this was from what Stacie had done to her.\n\nMargaret also knew it didn't matter. She was like Stacie and Levi. She was going to be one of them soon.\n\nShe walked into the bathroom to shower - not to erase the evidence of her sin. She only wanted to be clean and ready to sin again.\n\n***\n\nSymmetry. Perfect symmetry.\n\nTyler lay on the bed and watched Emily and Stacie.\n\nThey stood on the bedroom floor, embracing.\n\nEmily almost looked frightened when they kissed.\n\nNot the friendly kisses that girls sometimes gave one another - the hungry, sensual kisses of lovers. This was a sight Tyler didn't think he would ever tire of watching.\n\nTyler felt himself growing hard again, but he didn't stroke his cock. He had cum enough for one night.\n\nHe had cum more times in this night than in weeks of masturbation.\n\nEmily started to kneel in front of her Mistress.\n\nBut, Stacie stopped her.\n\nInstead, she knelt in front of Emily. \"I want to taste him,\" Stacie said.\n\nEmily obediently spread her legs.\n\nStacie leaned forward and kissed her way down from Emily's navel, over the slave tattoo. Then she kissed Emily's clit.\n\nEmily drew in a sharp breath - then she cried out loud when Stacie grasped her buttocks and sucked hard on her clit.\n\n\"No! Mistress, please!\"\n\nBut, Stacie sucked harder bobbing her head as she sucked.\n\nTyler gasped.\n\nEmily's clit was growing!\n\nStacie pulled back with three fingers of her right hand massaging the 'shaft' of Emily's clit.\n\n\"What?\" Tyler whispered.\n\nStacie looked at him and smiled.\n\nAs she stroked the clit, it grew even longer.\n\nEmily's face was red with embarrassment as Stacie rubbed her clit that was now six inches long.\n\n\"Are you a...\"\n\nEmily began to sob.\n\n\"No, she is not a man. But, I have needs, Tyler. So, she was modified to be able to please me.\"\n\nTyler shook his head. \"No... that's not possible. You can't do that to somebody. It isn't possible.\"\n\nStacie laughed. \"You have no idea what we can do.\" She turned back to Emily and began sucking her clit.\n\nEmily finally looked at Tyler. \"Don't hate me. Please don't hate me.\"\n\nTyler got up from the bed.\n\n\"Don't go, Tyler, please!\" Emily cried.\n\nHad this been what she was afraid of? He walked to her and put his arm around her. \"I'm not going anywhere.\" He kissed her.\n\nStacie looked up. \"Hmm, I was wrong. I guess he can accept you.\" She stood up. \"Bed. Now.\"\n\nEmily laughed. \"It's really okay?\"\n\nTyler nodded. \"Yes. It's really okay.\"\n\nEmily lay down on the bed on her back and Stacie got on top of her, guiding the clit/cock into her pussy.\n\nTyler knelt behind them and pressed his hard cock against Stacie's ass.\n\nStacie gasped. \"Mmm, you learn quick. Don't be gentle, I can take it.\"\n\nTyler thrust and pushed into her.\n\n\"I love you both,\" Stacie moaned as they fucked her until all three of them collapsed on the bed.\n\n***\n\nTyler woke up when Stacie touched his arm.\n\n\"They will be expecting you at home,\" Stacie whispered.\n\nTyler had his arm around Emily as she slept.\n\nHe eased his arm from around her.\n\n\"Should I wake her?\" Tyler asked.\n\n\"No. This is where she sleeps,\" Stacie said as she took him by the hand and led him away from the bed. \"I want us to talk.\"\n\n\"What about?\"\n\n\"You. Us. The future.\" She led him naked to the stairs and closed the bedroom doors gently behind them. \"You belong with us, Tyler.\"\n\n\"What?\"\n\n\"You belong with us. You belong with Emily.\" She squeezed his hand. \"You belong with me.\"\n\n\"I... thought you had Levi?\" Tyler asked as she led him down he stairs.\n\nShe laughed. \"I do have Levi. Can't I want you too? We're all wonderful in bed together. Tomorrow, Margaret will join us...\"\n\n\"Huh?! Levi's stepmom?!\" Tyler said as he paused on the stairs.\n\nStacie laughed again. \"Tyler, does that turn you on?\"\n\n\"I...\"\n\n\"It's nothing to be ashamed of. She's an attractive woman. I have a video of her you should see. I think you and she could be wonderful together.\" She pulled him along.\n\n\"Listen. This is... beyond wonderful. I mean, the things we just did? I didn't think it could be like that - the way we just worked together to make each other feel good? That was amazing.\"\n\n\"But? I hear a 'but' coming in your voice,\" Stacie said as she led him across the foyer.\n\n\"But, this isn't me. It's fun, and I adore you...\"\n\n\"But, you're in love with Emily - darling, that's perfectly okay. Having sex with me doesn't preclude being in love with her. I want you to be in love.\" She opened the door to the basement laboratory.\n\nTyler hesitated at the top of the steps.\n\nStacie looked up at him. \"What is it?\"\n\n\"I... why are we going down here?\"\n\nStacie laughed. \"For your clothes, silly. What? Did you think I was going to do nasty things to you in the lab?\"\n\n\"Are you?\"\n\nStacie shook her head. \"All you have to do down there is put on your clothes.\" She started down. \"But, if you want to do more? I'm more than willing.\"\n\nTyler followed her down the steps. \"No tricks?\"\n\n\"God, Tyler, fifteen minutes ago you fucked me in the ass - now you're afraid of me?\"\n\n\"You're a little frightening.\"\n\nThe lights came on in the lab.\n\nFour needles were laid out on the operating table beside Tyler's clothes.\n\n\"What are those?\" He asked.\n\n\"A gift. If you want them,\" Stacie said as she leaned against the table.\n\n\"Is this what you did to Levi?\" Tyler asked. \"I don't like what you made him.\"\n\nShe held up the first syringe. \"This is Cock Grow. Not a huge amount. You're six inches long, which is actually above average for a human.\"\n\n\"A human?!\" Tyler asked in astonishment.\n\n\"We're not entirely human after the injections.\" She pointed the needle at him. \"This is enough to make you nine inches long and quite thick.\" She set the first needle down and picked up the second.\n\n\"This is slutifier. If I inject this into your testicle? Your libido will skyrocket. Also, your endurance will increase, and the length of time it takes you to get hard again after you cum will decrease.\"\n\nShe set it down and held up the next syringe. \"This will cause you to grow three inches. You'll be six feet tall, Tyler.\"\n\nTyler swallowed.\n\nShe picked up the last syringe. \"And, this one? You'll lose thirty pounds of fat and probably gain forty pounds of muscle.\"\n\nTyler stared at the injections.\n\n\"It can't be easy being short and fat.\"\n\n\"She loves me the way I am.\"\n\nStacie smiled. \"Yes, she does. That's a rare gift. The question is: do you?\"\n\n\"What?\"\n\n\"Do you love yourself?\"\n\n\"Yes. I do.\"\n\n\"I believe you,\" Stacie said. \"When I first saw you? I assumed you were broken and depressed. You aren't. You're much stronger than I gave you credit for.\" She held up the first syringe. \"The question is: do you want to be more?\"\n\nTyler swallowed. \"No. I'm good.\" He wanted to tell her yes. Those shots were the answer to a lifetime of inadequacy. But, he had a feeling there was a price attached to them. He had seen how they had changed Tyler.\n\n\"What if I sweetened the deal?\"\n\n\"Look I...\"\n\n\"Emily.\"\n\n\"What?\"\n\n\"What if I gave you Emily?\"\n\nTyler stared into her crystal blue eyes. \"Emily is a person. You can't give her to me, Stacie.\"\n\n\"Tyler, don't be silly. She is a slave. She is my willing slave... at least she is now. Unwilling to begin with, but quite enthusiastic now.\"\n\n\"I don't want to be her master, Stacie.\"\n\n\"No, you want to be her lover, her boyfriend, eventually her husband. That last is going away soon, Tyler. I'm going to give you a book that will explain what is to come. It's our, for lack of a better word? Bible. But, I'll summarize: Soon, very soon, the Church will take over. There will be no more religion other than ours. No more governments. No more countries. No more social systems other than our own. No more husbands, no more wives. Everyone will serve Morpheus. Some will rule the masses in his name, some will serve with their minds... some, like myself, like Emily, will serve on our backs.\"\n\n\"Where would I fit in this?\"\n\n\"I can think of a few places, but, most likely? You will serve with your mind. You will be a professional of some sort. The choice, for now, is yours. Choose to join us now, and I will guarantee you will be Professional Caste. Professional Caste with Emily as your devoted slave. You can protect her and keep her with you forever.\"\n\n\"As a slave.\"\n\nShe rolled her eyes. \"Tyler, inside your house? She will be whatever you choose.\"\n\n***\n\nIt was 1:00 AM when Tyler left the Fuchs house.\n\nHe ached.\n\nNot just from the marathon sex session, but from the four strange injections he had let Stacie Fuchs give him.\n\nIt was insane, utterly insane. There were no drugs that could do these things.\n\nHe got in the Prius and drove home.\n\n***\n\n\"Holy shit,\" Abe said as he walked into the kitchen.\n\n\"Good morning,\" Margaret said. She was wearing a short, white silk robe that barely covered her ass. She had prepared eggs and bacon and was putting it out on the table.\n\nShe turned around. The robe had gapped open, showing her cleavage and her now completely shaved pussy.\n\n\"Jesus, honey,\" Abe whispered.\n\nShe posed with her hand on her hip. \"You like it? I took a bath and shaved it last night.\"\n\nAbe pulled her robe closed. \"Yeah, I do love it. But, have you forgotten we have a nineteen-year-old in the house?\"\n\nMargaret laughed. \"Oh, I'm very aware.\" She picked up a piece of bacon and took a bite. \"But, he'll be asleep for quite a while yet.\"\n\nHe put his arm around her and pulled her close. \"What say you and I take a trip this weekend? That little bed and breakfast over in New Hampshire you like?\"\n\n\"Depends. Are you going to fuck my brains out?\" She asked and grabbed his cock through his pants.\n\n\"Whoa! What has gotten into you, Mrs. Kent?\"\n\nShe laughed. \"You wouldn't believe me if I told you.\"\n\n\"Well, I like it.\" He grabbed a piece of bacon. \"I'm going to be late for court. Can we pick this conversation back up this evening?\"\n\n\"Of course, dear.\"\n\nHe kissed her cheek and headed for the garage.\n\nShe watched him go, heard the garage door open.\n\nMargaret heard the car start and then he sped away down the drive.\n\nShe opened her robe and took it off, standing naked in the kitchen.\n\nShe folded the robe neatly and laid it on the counter.\n\nThen she got on her knees and waited for her master.\n\nLevi came down a few minutes later. He was wearing his boxers and reading the book Stacie had given him.\n\n\"Good morning, Master,\" Margaret said.\n\nHe ignored her and sat down at the kitchen table. He ate a piece of bacon. \"Suck,\" he said.\n\nMargaret crawled to him. She unbuttoned the fly on his boxers and pulled out his cock.",
        "She immediately took the head in her mouth and started to work.\n\nHe ran his fingers through her hair.\n\nShe smiled at his touch.\n\nHe pulled his cock out of her mouth. \"Did you bring what I asked for?\" Levi asked.\n\n\"Yes, Master,\" she said.\n\n\"Get it.\"\n\nShe jumped to her feet and ran to the cupboard.\n\nShe opened it and pulled out one of Abe's belts.\n\nMargaret knelt back between his knees and held up the belt. \"Are you going to beat me with it?\" She asked fearfully.\n\n\"Maybe.\" He took the belt and doubled it over. Then he yanked it tight with both hands, making it snap loud.\n\nMargaret flinched. God forgive her, she was wet! The prospect of her stepson beating her with a belt was turning her on!\n\nHe tilted her face up.\n\nShe watched as he fed one end of the belt through the steel buckle, making a loop.\n\nHe put it over her head, lifting her hair through it.\n\nThen he pulled it tight around her neck.\n\nA collar! He made a collar.\n\nHe stood up and pushed his boxers down.\n\nHe yanked the belt/leash and she began licking and sucking his balls.\n\n\"Good slut,\" Levi said.\n\nHe pulled her to her feet by the leather belt.\n\nLevi spun her around and bent her over the kitchen table.\n\nHe stood behind her and pulled back on the belt.\n\nShe arched her back as the belt pulled tight.\n\n\"What do you think, Margaret? One last fuck before I give your ass back to Stacie?\" Levi asked.\n\n\"Yes, please, Levi,\" she moaned.\n\n\"Fucking slut.\" He picked up a piece of bacon. He crumbled it in his hand and then dropped it back on the plate.\n\nMargaret looked at his hand covered in bacon grease.\n\nShe gasped as he reached back and slathered it on her asshole.\n\n\"Oh, God, Levi!\"\n\nThe warm grease felt good on her ass.\n\nHis fingers pressed and she opened. After last night, her anus was used to being penetrated.\n\nA moment later, his cock replaced his fingers.\n\nHe pulled the belt tighter and pushed inside her.\n\n\"Yes, oh, Levi. Yes!\"\n\nHe fucked her hard, taking her on the kitchen table.\n\nJust like the night before, he was using her, and she loved it.\n\nHe came fast, filling her with his cum.\n\nLevi pulled out and washed off his cock in the sink.\n\n\"Come on,\" he said. He pulled her by the belt / leash out the kitchen door and toward Stacie's house.\n\n***\n\nTyler hadn't slept much.\n\nHe had stayed up until 4:00 AM reading the Book of Morpheus. If he had just been given the book on a street corner without knowing anything about what was going on? He would have thought it was the work of a madman.\n\nIt wasn't so much a Bible as a manifesto, full of references to the evil of organized religions and governments.\n\nAnd, its discussions on the caste system were downright terrifying. The Church was going to decide everyone's role in the future. It was the end of free will.\n\nBut, the most disturbing thing about it? This book was everywhere in Ithaca - they weren't trying to keep it secret. Surely, the government had to be aware of what they were planning?\n\nBalanced against this was Stacie Fuchs. She did evil things, but she wasn't completely evil. She was... nice. Maybe that was what psychopaths were like: likeable, seductive and utterly batshit insane.\n\nShe took away Emily's will, she enslaved her - and Emily loved her for it.\n\nIt was crazy.\n\nHe had fallen asleep at 4:00 AM, completely unable to stay awake. His body ached.\n\nHe woke up at 8:00 AM when his father banged on his bedroom door. \"Let's go, Tyler. Get a move on. I want to be in the office by 9:00.\"\n\nThat's when everything went from weird to surreal.\n\nHis bed was soaked, as if he had pissed himself. He thought he had done just that until he examined his sheets. They were wet with his sweat.\n\nHis dick was stiff in his boxers, which wasn't a strange occurrence in and of itself.\n\nBut, one look inside his underwear told him Stacie had been wrong about the nine inches.\n\nHis cock was ten inches long.\n\nBeyond that, he was taller and thinner, and his arms were bigger.\n\nHe got dressed quickly after his shower - khakis and a blue shirt.\n\nOnly, his khakis were too short, and the shirt was too big in the waist and too tight in the arms and shoulders.\n\nHe stared at his new shape in the mirror. His formerly chubby face was now thinner with a stronger jaw.\n\n\"Tyler? Are you coming or not?\" His Dad called from the first floor.\n\n\"Coming,\" Tyler called.\n\nHe walked down the stairs.\n\n\"About time, we got a lot...\" His Dad stopped in mid-sentence and stared at him. \"What the? Did you lose weight?\"\n\n\"Uh, yeah.\"\n\nChristine came out of the kitchen. \"Oh, wow. Honey, I think you had a growth spurt.\" She squeezed his bicep. \"Have you been going to the gym?\"\n\n\"I... um, yeah. Last night. Me and Emily,\" he bit his lip. \"We worked out.\"\n\nNathan McGee nodded his approval. \"I think this girl's a good influence.\"\n\n\"Can I grab some breakfast? I'm starving,\" Tyler said.\n\n***\n\nMargaret stood in Stacie's foyer wearing nothing but Abe's belt around her neck.\n\nThe computer voice had told her to stand with her feet shoulder width apart, back arched, hands clasped behind her back, eyes on the floor.\n\nEven the machine was her master!\n\nStanding in the cold foyer with the belt around her neck, stains from fresh cut green grass on her feet, she wondered again how her life had turned into this?\n\nWould she be so compliant if not for the slutifier? It made it hard to think about anything other than sex.\n\nThe blackmail Stacie had threatened her with now held little power over her. Her marriage was over - whatever she had with Abe was over. Levi had seen to that last night. Regular sex with any man would never satisfy her again.\n\nShe needed more, and, if anything, her urges were getting worse.\n\nSo, why was she allowing Levi and Stacie to dominate her?\n\nShe could turn around and walk out right now.\n\nStart a new career as a sex worker. She almost laughed out loud.\n\nBut, instead of running, she stood in a submissive pose wearing Abe's belt around her neck like a collar and leash.\n\nStacie came out of her bedroom followed by a towering blonde in a latex maid outfit.\n\n\"Eyes down,\" Stacie said. She was wearing a black latex catsuit and heels. The neckline plunged almost to her navel and was held together with black laces.\n\nMargaret looked at the floor again.\n\n\"You want her in the basement?\" Levi asked.\n\n\"No. Bring her up here,\" Stacie said. \"Levi! I told you I wanted her in heels. Look at her feet!\"\n\n\"Sorry.\" Levi tugged the belt and she walked toward the stairs.\n\n\"Never send a man to do a woman's job. Come on.\"\n\nMargaret paused for a moment and then walked on her tiptoes.\n\nStacie laughed. \"Margaret! How clever! It's like you're wearing heels.\"\n\n\"Thank you... Mistress.\"\n\nShe reached the top of the stairs.\n\nStacie took the end of the belt from Levi, then she tilted Margaret's head up. \"You see now, don't you? It's not the hell you imagined, is it?\"\n\n\"No, Mistress.\"\n\n\"Margaret, this beautiful girl is Emily. She used to be a coed. Now she belongs to me. She's my slave. How does that make you feel?\"\n\nMargaret looked at the beautiful, smiling blonde. She could think of only one thing to say. \"Excited.\"\n\nStacie laughed. \"I think someone is definitely ready to be transformed.\" She led them into the bedroom. The huge bed was unmade, the sheets torn apart.\n\nMargaret wondered what had transpired in the bedroom last night.\n\nAt the far side of the room there were two sets of doors. One set of doors led to the bathroom.\n\nThe other led to a very different room entirely.\n\nThe crisp white walls of the bedroom gave way to a large room with skylights. The floor was polished oak and the walls were bare brick.\n\nThe room was filled with strange apparatus, and, though Stacie was no expert, almost everything had a sexual use.\n\nIt was a bondage dungeon, but more than that - it was a laboratory. Chrome plated robotic arms extended down from the ceiling and the shelves were crowded with sex toys and medical supplies.\n\nMargaret faltered as the intent of the room became clear.\n\nStacie took her hands. \"Trust me. I won't hurt you.\"\n\nMargaret nodded. \"I trust you, Mistress.\"\n\nSlutzNet spoke from the ceiling. \"Emily, it is time for your injection.\"\n\nEmily nodded. \"Mistress, I feel fine. I don't think I need it.\"\n\nStacie stroked her face. \"Are you sure, pet? No voices in your head?\"\n\n\"None, Mistress.\" She held up her right hand. \"No tremors either.\"\n\nStacie smiled. \"I think last night agreed with you.\"\n\n\"Last night was wonderful, Mistress,\" Emily said and blushed.\n\n\"Alright, you can wait till later. But, tell me if you begin hearing the voices again.\"\n\nMargaret looked from the maid to her Mistress in confusion, unsure of what the two were talking about.\n\n***\n\nWhat happened next was a blur.\n\nMargaret remembered being shackled to a St. Andrew's Cross - a pair of boards arranged in an 'X' supported by a steel post. It held her arms and legs outstretched.\n\nA long thick dildo with a pistol grip was pushed inside her.\n\n\"What... does it do?\" She whispered as she rotated her hips.\n\n\"It opens you,\" Stacie said and then she pulled the trigger.\n\nSomething moved deep inside her.\n\nMargaret screamed and passed out.\n\nThis was followed by other pains, sharp stinging in her clit, her anus, and the worst of all deep within her breasts and the bones of her thighs and spine.\n\nShe came to after what seemed like hours.\n\nStacie was smiling at her. \"Is there pain?\"\n\n\"There... was,\" Margaret whispered. \"Not now.\"\n\nShe felt good, sleepy but amazingly good!\n\n\"Love you... Mistress. I will be a good slave,\" Margaret moaned.\n\nStacie laughed. \"Silly girl, I didn't make you my slave. I made you just like me.\"\n\n\"Y... You?\"\n\n\"You are Margaret Cox now. Whore Caste, unbound. Designation: MILF Whore.\"\n\n\"Margaret... Cox?\"\n\nStacie laughed. \"Church's idea of a joke. My name is Fuchs, your name is Cox. Everything's a fucking double entendre.\"\n\nMargaret smiled. Not because she understood, but because Stacie was happy. That made Margaret happy.\n\nStacie undid Margaret's bonds and carried her to a reclining chair.\n\n\"Strong,\" Margaret whispered. \"You're so strong.\"\n\n\"So are you now, darling. You'll see.\" She laid Margaret in the chair and reclined it back. She held Margaret's left hand.\n\nStacie slid her wedding and engagement bands off her finger. \"These aren't allowed by the Church, and there's a punishment for having worn them.\"\n\n\"Punishment?\"\n\n\"It only hurts for a moment.\"\n\nThe recliner moved, the leg rest splitting in two, spreading her legs and raising them.\n\nMargaret looked drowsily up at Stacie.\n\nStacie held a strange pair of pliers in her hand. She put Margaret's engagement ring in the jaws. \"This is a huge diamond.\" She giggled. \"It's going to be a little gawdy.\"\n\nShe squeezed the handles and the back of the ring snapped off, leaving two sharp ends. She transferred the ring to another pair of pliers.\n\n\"What are you doing?\" Margaret whispered. The room was spinning, and her breasts felt too heavy.\n\n\"Hold still.\" She knelt between Margaret's thighs.\n\nSnap.\n\nA burning pain lanced through Margaret's clit and she screamed.\n\nShe craned her neck and looked down.\n\nHer diamond engagement ring now pierced the hood of her swollen clit!\n\nCool liquid drenched her crotch: Insta-Heal. The pain went away immediately.\n\nShe stared in disbelief at the big diamond dangling in front of her nubbin.\n\nSnap.\n\nShe looked up to see the back of her platinum wedding band snapped away leaving two more evil points in its place.\n\n\"No! God, where are you...\"\n\nFirm hands pressed down on her shoulders. \"Quiet, slut,\" Levi growled above her.\n\nStacie glanced at him furiously. \"She's in pain. Domination games are for when she is ready to play. As a matter of fact, get out. This is for Whore Caste.\"\n\n\"Huh?\" Levi asked.\n\n\"She is being initiated into Whore Caste, and this is our sacred rite. You don't belong here.\"\n\n\"But, I thought maybe I was going to be Whore Caste?\"\n\nStacie laughed. \"As what? A Street Consort? Or, perhaps a Sissy Slave?\"\n\nLevi swallowed. \"Whore Master. I thought I might be a Whore Master.\"\n\nStacie shook her head. \"You will never be a Whore Master, Levi. The Church has determined your path - actually, they're giving you a choice. Neither choice is Whore Caste. Go take a swim. I will join you later.\"\n\nLevi walked away stunned.\n\nMargaret tried to make sense of what was being said, but it was so hard - Stacie was still holding the now wicked looking wedding ring in the pliers and she was terrified of where that piercing was going.\n\nShe didn't have to wait long.\n\nSnap.\n\nMargaret screamed as the piercing was applied somewhere in the sensitive skin between her pussy and ass.\n\nInsta-Heal again and the pain was only a memory.\n\nShe lay back in the chair soaked in sweat.\n\nShe opened her eyes as Stacie began massaging her sore breasts.\n\n\"Double D's already.\"\n\nMargaret stared at her new breasts. \"They... feel strange.\"\n\nStacie laughed and tugged at her nipples.\n\nTwo jets of milk sprayed out!\n\n\"Fuck!\" Margaret cried.\n\nStacie stroked her face. \"You are a MILF Whore. Your job is to pervert and seduce. You're going to do wicked things, Margaret.\"\n\n\"I don't know how. I'm not like you.\"\n\nStacie laughed. \"Then let the lessons begin.\"\n\nA headset on a mechanical arm swung down and settled over her eyes.\n\n***\n\nMargaret was somewhere else.\n\nShe was standing in a marble hallway. It was bright and airy, with huge windows. She could smell the ocean. She could hear the surf somewhere nearby.\n\nPeople were talking nearby.\n\nNo.\n\nThey were moaning.\n\nShe turned her head and looked out the window.\n\nThere was a patio outside, and an orgy was going on. Men, women, and beings who were somewhere between the two entwined together on the bright patio overlooking the sea.\n\nMargaret watched, feeling a longing to join them.\n\n\"Hi.\"\n\nMargaret turned her head.\n\nA tall woman was walking down the marble hallway toward her.\n\nShe wore an almost transparent white latex dress, her long brown hair falling in a cascade down her shoulders. \"My name is Cum Slut Cathy,\" she said.\n\nAnd then the woman in white burst out laughing. \"I know. It's ridiculous.\" She had a beautiful face and smile. Her laugh matched. \"The Church used to name us - whore names were much more explicit in the beginning, now the Church prefers to be more subtle... Margaret Cox.\"\n\nMargaret laughed. \"Where am I?\"\n\n\"Physically still in New York.\" She held out her arms. \"This place is my lover's home in Cuba. It puts people at ease.\"\n\n\"Is this real?\"\n\n\"Real enough.\"\n\n\"Are you real?\"\n\nCathy laughed. \"Yes. What you see is a construct, a combination of myself and SlutzNet. We're getting ready to program you.\"\n\n\"Are you Whore Caste?\" Margaret asked.\n\n\"Yes. I'm what's called a Perverter. A White Witch. I'm actually the second White Witch created. My friend Maria was the first. She was created by Morpheus himself. I'm the first White Witch created by the Church.\"\n\nMargaret nodded.\n\nCathy smiled. \"I know it's confusing, but once you're programmed you'll understand everything. Right now, drugs are being administered into your system to make you susceptible to the programming.\"\n\nMargaret almost fell - which was impossible since she knew that, in reality, she was still sitting in the reclining chair.\n\nCathy took her hand, and Margaret gasped.\n\nShe could actually feel the woman's hand in hers.\n\n\"Don't be afraid. We really are saving the world.\"\n\nMargaret shook her head. \"I'm not afraid. I want this.\"\n\nCathy smiled. \"After you are programmed? You will be given your final dose of Ambrosia. You will be one of us. Forever.\" She leaned close and whispered in Margaret's ear. \"When you drink it? You might have a vision. Most don't, but some do. That vision is private, and you aren't to tell anyone except a White Witch. Don't tell Stacie or anyone else. Only a White Witch. Do you understand?\"\n\n\"Only a White Witch.\"\n\nCathy and the hallway faded away.\n\nThere was a roaring sound like an approaching train.\n\nThen words and images poured into her like water from a firehose.\n\n***\n\nLevi swam across the pool. His transformed body made swimming effortless.\n\nWell, mostly transformed.\n\nHe had been sure Stacie meant to make him a Whore Master, but clearly that wasn't the case.\n\nHe reached the far wall and pushed off back toward where he started.\n\nLevi knew the castes were very protective of their members, but he had just assumed he would be in the same caste with Stacie and Margaret.\n\nShe said he had a choice... did that mean he had to choose something in Professional Caste?\n\nThe thought of being Professional Caste made him... angry.\n\nPencil necked geeks with no power, technically even Whore Caste was above them, though Whore Caste weren't big on giving orders. Whore Caste were programmed to not refuse sex when requested from Professional Caste, but, if push came to shove? They would take charge of the professionals.\n\nHe reached the wall and jumped out, sitting down on the edge of the pool with his legs in the water.\n\nGoddamn it! He was meant to be a Whore Master. This fucking sucked.\n\nProfessional Caste was for people like his Dad and Tyler.\n\nLevi wanted more.\n\nHe heard laughter from somewhere nearby.\n\nHe stood up and walked to the far side of Stacie's back yard.\n\nThere was a hedgerow there identical to the one between Stacie's house and his own.\n\nHe heard laughter again.\n\n\"...no, silly. He's old enough to be my grandfather,\" a girl said.\n\nLevi peered around the hedge.\n\nA blonde girl in a sundress was sitting on the patio next door. She held a cellphone to her ear.\n\nLevi wasn't sure who lived there, but he liked the look of the blonde's tanned legs.\n\n\"I'm not blowing some old professor for an A. I'm not a slut.\" She burst out laughing. \"One party. Like you weren't on your knees that night.\"\n\nLevi felt himself growing hard in the Speedo.\n\nHis cock had always had a mind of its own, and now that mind was on speed.\n\n***\n\nMargaret opened her eyes. \"Margaret Cox, designation MILF Whore,\" she said and smiled.\n\n\"Hi, there,\" Stacie said. She was kneeling by the recliner.\n\nMargaret turned toward her and kissed her. No hesitation, she wrapped her arms around Stacie's neck and kissed her.\n\n\"Mmm,\" Stacie said. \"Somebody enjoyed their programming.\"\n\n\"I'm like a black belt in fuck-fu.\"\n\nStacie burst out laughing.\n\n\"I mean I had no idea. Have you ever taken two cocks in your pussy at the same time?\"\n\n\"Not yet, no,\" Stacie said.\n\n\"I want to try that,\" Margaret said. \"Do you think I could convince Tyler and Levi to do that?\"\n\n\"Doubtful.\"\n\n\"We should program them. They haven't had final Ambrosia yet. We could make them do anything we want!\" She tried to get out of the chair.\n\n\"Down girl,\" Stacie laughed.\n\n\"It's for their own good!\"\n\n\"There will be plenty of time for that sort of thing with your own victims. The plan for both Levi and Tyler is already set in place. Abe as well.\"\n\nMargaret frowned. \"That doesn't seem fair. I mean he was my husband and Levi was my stepson.\"\n\nStacie slapped her hand. \"I have seniority.\"\n\n\"Fine,\" Margaret said and grinned. \"But, I want to do something naughty and soon.\"\n\n\"Oh, you will. I have a plan.\" She helped Margaret to her feet. \"But, first. You haven't even seen yourself yet.\"\n\nShe turned Margaret around. Luckily she held onto her - Margaret's balance was off. Everything felt awkward.\n\nOne wall held a huge mirror.\n\nMargaret stared at herself.\n\nFirst of all, her eyes were crystal blue like Stacie's. And, she was almost six feet tall thanks to longer thighs and spine.\n\nHer breasts had always been full, but now they were DDD with just a slight amount of sag. She turned on her gazelle like legs and looked at her full, heart shaped ass. \"Fuck, it's enormous.\"",
        "\"Men like it. Trust me, I can stop traffic,\" Stacie said. She rubbed Margaret's shoulders. \"You're beautiful. But, there's one last thing.\" She held up a glass of pearly white liquid.\n\nMargaret sighed. \"That's it?\"\n\n\"This is it.\"\n\nMargaret took the glass and stared at it. Transformative Ambrosia, the nectar of the gods.\n\n\"You'll be unbound. Unless you want to be bound to me. Just some of my DNA will do it.\"\n\nMargaret shook her head. \"No. Not that I don't like you, I do. But, I think I want to be unbound.\"\n\nStacie smiled. \"That's fine.\"\n\nMargaret stared at the glass. \"Cathy said sometimes people see visions. Did you see a vision?\"\n\n\"No.\"\n\nMargaret nodded. \"Here goes.\" She held the glass to her lips and drank.\n\nThen she dropped the glass and went into convulsions in Stacie's arms.\n\n***\n\nMargaret was in San Francisco. She recognized the Transamerica Tower and the cable car tracks.\n\nThe street was crowded with people, but most weren't human.\n\nThey were transformed.\n\nIn front of her was a line of White Witches and Whore Masters. Towering Street Whores stood among them holding clubs and sticks and baseball bats.\n\nSomeone was holding her hand.\n\nStacie stood beside her, tears streaming down her face.\n\nWrong side. We're on the wrong side, Margaret thought. To their left and right were the priests and nuns of Morpheus. The head of the Church, Sister, was screaming something at the 'enemy' on the other side.\n\nA tall, beautiful White Witch with platinum blonde hair was staring her down. \"He created us to save them not to kill. You have perverted his will.\"\n\n\"I am his will!\" Sister screamed.\n\nMargaret turned to Stacie. \"We're on the wrong side.\"\n\nStacie stared at her. \"We are. I know. What do we do?\"\n\n\"We run,\" Margaret said, and they ran across the street toward the other Whore Caste.\n\nWhore Masters and White Witches ran to meet them.\n\nJust before she could reach one of the Whore Masters, Margaret heard a gunshot ring out behind her.\n\nShe turned around.\n\nA man stood behind her. He was young and handsome with kind eyes. He held his hand beside her head.\n\nOn the other side of his hand, a bullet hung suspended in mid air.\n\nHe flicked it away as if it was an insect.\n\n\"Who are you?\" Margaret asked.\n\n\"My name is Adam.\"\n\n\"Why am I here?\"\n\nAdam smiled. \"You were on the wrong side. But, you changed your mind. So, I bent time for you.\" He stroked her face. \"It's going to be okay, Margaret. Everything is happening the way it's supposed to. I'm just changing a few things along the way.\"\n\nA shadow fell across her.\n\nA man rose from the crowd above the nuns and priests. His back was to the sun and she couldn't make out his face.\n\nAdam looked up at the man. \"Time for me to go. And, time for you to go back.\" He rose into the air and flew straight at the man with his back to the sun.\n\n***\n\n\"You're so funny,\" the blonde said. She smiled at Levi with eyes the color of butterscotch.\n\nHer name was Amber, which fit.\n\nWhen she had first seen Levi approaching in his overstuffed Speedo, she had looked panicked.\n\nBut, a calm word from Levi had put her at ease, especially when he was close enough for his pheromones to affect her.\n\nNow he sat beside her on a lounge chair while she hung on his every word. Occasionally, she twirled a lock of long blonde hair, her eyes big and bright.\n\nLevi could see her pulse throbbing in her supple neck - her heartbeat was rapid, her breaths fast and deep.\n\nShe was falling in love, or so she thought.\n\nStacie had been right. His pheromones could give him any woman he desired.\n\n\"Amber? Who is this?\" A woman asked.\n\nLevi looked up to see an older version of Amber frowning down at him.\n\nShe was a little plumper than Amber, with much larger breasts. The eyes were the same and the hair was the same shade only with streaks of gray.\n\n\"Mom, this is Levi. He lives two houses over,\" Amber said, unable to take her eyes off Levi's face.\n\nMom wasn't looking at his face, she was staring at his bulging Speedo.\n\nLevi stood up quickly and took her hand. \"Nice to meet you.\"\n\nThe change was instant.\n\nMom was no longer frowning. She smiled slowly, staring at his lips as her face flushed. \"I'm Marie. Marie Cole.\"\n\n\"Mom, Levi invited me next door to swim. Is that okay?\"\n\nMarie nodded still staring at his lips. \"Of course. Anything he wants.\"\n\n***\n\n\"This man you intend for me to seduce? How old is he?\" Margaret asked as she tried on one of Stacie's black latex dresses. The rubber barely covered her buttocks.\n\n\"Mid-forties. Balding. Not very attractive,\" Stacie said as she lounged on the bed.\n\nMargaret smoothed down the front of the skirt. \"I thought I would get to fuck young studs?\"\n\n\"You will. He has sons.\"\n\n\"Mmm.\"\n\n\"And, quite a beautiful wife if you can get her out of her prairie skirt.\"\n\nMargaret laughed. \"I love a challenge.\"\n\n\"I figured we should start with the Baptist first - most of them are repressed cauldrons of lust anyway.\"\n\nMargaret stepped into the bedroom. \"What do you think?\"\n\nStacie rolled onto her stomach. \"Mmm, good enough to eat.\"\n\n\"You know, yesterday, that would have sent me running for the hills,\" Margaret said.\n\n\"And now?\"\n\nShe sat down on the bed and leaned down, drawing Stacie into a deep kiss. \"Now? I love you.\"\n\nStacie ran her finger in circles around Margaret's latex covered breasts. \"It's kind of amazing, isn't it? The caring? Being in love with everyone else in Whore Caste?\"\n\nMargaret nodded. \"It's nice not hating you anymore.\"\n\n\"I'm sorry about all the mean things I did to you.\"\n\n\"No, it's okay. We do what we have to do. Just like we're going to do to this idiot minister and his family.\"\n\n\"His whole congregation. Undermine their belief systems, and the humans will come to us in droves. At least, that's the plan.\"\n\nMargaret rolled onto her back. \"You know what I'd love to do right now?\"\n\nStacie laughed. \"I have a rough idea.\"\n\n\"Where's Levi?\" Margaret said with a mischievous grin.\"\n\n\"Oh, I was a bit cross with him earlier. He's off at the pool, pouting.\"\n\n\"What did you do?\" Margaret giggled.\n\n\"I had to break it to him that he couldn't be a WhoreMaster.\"\n\n\"Really?\"\n\n\"He doesn't have the required empathy. There's a certain level of heroism required. Levi is much more self-absorbed.\"\n\n\"Hmm, I can see that. Professional Caste then?\"\n\nStacie rolled her eyes. \"Let me worry about that. I told you: I saw his cute little ass first.\"\n\n\"Well, can we at least enjoy him until you assign him to be a Church accountant or lawyer?\"\n\n\"Of course,\" Stacie stood up and walked to the bedroom window. She looked out and laughed. \"Oh, for goodness sake.\"\n\n***\n\nMargaret laughed as she walked out onto the patio with Stacie at her side. After what Stacie had seen out the window, they had decided to have some fun with Levi.\n\nThey had both changed into the postage stamp and dental floss swimsuits - Stacie's in black and Margaret's in red.\n\nYesterday, Margaret wouldn't have been caught dead in the suit. Now, she loved how her DDDs were held in place only by the miniscule nipple covers.\n\nShe could now be Stacie's sister in appearance. Both had the requisite MILF Whore curves and identical breasts. Stacie's face was a little longer, her jawline more pronounced.\n\nStacie explained that when they did her procedures at Stallion's, they had used a 70s porn star named Kaye Parker as their inspiration.\n\nMargaret however had kept her original looks.\n\nShe held back a laugh as they approached Levi. He was sitting on a lounge chair talking intently to a gorgeous little blonde with smallish breasts.\n\nShe was wearing a pink bikini with a ruffled bandeau top.\n\nShe was staring at Levi with her full pink lips open slightly, occasionally nodding at whatever he said.\n\nThe blonde looked up at Stacie and Margaret and blinked.\n\nWhat's the matter? Never seen two DDD brunettes wearing slingshots before? Margaret thought and smiled.\n\n\"Who's your friend, Levi?\" Stacie said as she sat down beside the blonde.\n\nMargaret sat down on the girl's other side.\n\n\"Margaret?\" Levi said as his eyes went directly to his stepmother's amazing breasts.\n\n\"Yes, dear?\" Margaret asked. She blinked at him in amusement.\n\n\"Wow...\"\n\n\"Levi? Your guest?\" Stacie repeated.\n\n\"Oh! Umm, Stacie, Margaret, this is Amber Cole. She lives next door.\"\n\n\"What lovely hair,\" Stacie said as she ran her fingers through Amber's long locks.\n\n\"And, this skin.\" Margaret stroked her arm. \"Quite a find, Levi.\"\n\nThe girl's eyes were half closed.\n\n\"Our pheromones,\" Stacie said. \"The three of us together are completely overloading the poor thing's mind.\"\n\n\"Huh?\" Amber whispered.\n\n\"Shh, just relax, darling,\" Stacie said softly as she stroked the girl's thigh.\n\nAmber shivered and closed her eyes.\n\nStacie nodded. \"SlutzNet, what can you tell us about the Cole's?\"\n\nSlutzNet spoke from a hidden speaker. \"Amber Cole, twenty years old. Student at Ithaca College majoring in Art History...\"\n\n\"Ding, ding, ding, we have a winner!\" Stacie giggled.\n\n\"I don't get it,\" Margaret said. \"Doesn't the Church value non-professional degrees at all?\"\n\n\"Not at this point. They value whores much more.\" Stacie stared into the girl's sleepy eyes. \"Hmm, too short for a Street Whore. I'm thinking Cheerleader Whore. What do you think, sweetie? Want to be a dirty little cheerleader?\"\n\nShe smiled. \"Always wanted... to be cheerleader.\"\n\nStacie clapped. \"Perfect.\"\n\n\"Don't I get a say in this?\" Levi whined.\n\n\"No. You're not Whore Caste,\" Margaret said. \"But, I think maybe Girlfriend Experience Whore would be better.\"\n\n\"Margaret! That's terrible!\" Stacie said.\n\n\"What's terrible about it?\" Levi asked.\n\nStacie shook her head. \"That's why you can't be Whore Caste.\"\n\n\"What?\" Levi repeated.\n\n\"Girlfriend Experience Whores are assigned a john temporarily, programmed to believe they are the john's girlfriend, and then, when the john is done with them, they're abandoned and reprogrammed for the next customer,\" Stacie said.\n\n\"So?\" Levi asked.\n\n\"It's cruel!\" Stacie said. \"They go through horrible grief every few days.\" She glared at Margaret. \"Honestly, I'm shocked at both of you.\"\n\nMargaret laughed. \"Oh, I wasn't serious. My stepson was, but I was only kidding.\"\n\nSlutzNet interrupted, \"If I may? I wasn't finished. Amber's mother's name is Marie Cole, 47, homemaker. Her father is David Cole, 50, building contractor. Mr. Cole is currently working on a jobsite on the west coast and will not return until the weekend.\"\n\n\"Oh, really? Mommy and daughter alone for five days? How convenient,\" Stacie said. \"Levi, did you see the mother?\"\n\n\"Yes. Hot blonde like her daughter.\"\n\n\"Mmm, I smell specialty whores,\" Margaret giggled.\n\nStacie nodded. \"They'll need conditioning.\"\n\n\"Whatever,\" Levi said. \"I'm going for a swim.\" He stood up and Amber's eyes immediately locked on the bulge in his Speedos.\n\n\"Oh, stop moping,\" Stacie scolded. \"I didn't say who would be doing the conditioning.\" She winked at him.\n\n\"But, if I'm not Whore Caste...\"\n\n\"Right now, you're nothing but a hot stud with a thirteen inch cock and pheromones that can turn women into salivating fuck toys. I'll let you take charge of Amber and her mother for the week if you'll stop being a whiny little bitch,\" Stacie said.\n\n\"Really?\"\n\n\"Yes.\"\n\nHe frowned. \"Umm, Stacie? I'm not sure I know how to condition someone.\"\n\n\"For goodness sake, Levi. Take her home and become the man of the house - they'll do what you tell them as long as they're under the influence of your pheromones. Just encourage them to embrace their kinky side. Use your teenage imagination. But, do not hurt them in any way, I mean it.\"\n\n\"Jesus, I won't. What do you take me for?\"\n\n\"Time will tell - just remember: if they are away from you for more than an hour, your pheromones will wear off. Make them stay with you, even when they're sleeping. Now, go down to the laboratory and bring me a syringe from the cooler labeled Inseminator B. It's a purple liquid. Oh, and two transformation kits - they're the bundles with a red cross on the front. Go on. Shoo.\"\n\n\"Inseminator B?\" Margaret asked. She had been briefed on most Church medications during the video indoctrination, but she wasn't familiar with this one.\n\n\"I'll explain later.\"\n\nMargaret watched Levi's tight butt in the red Speedo as he went back inside.\n\n\"Cheer up, you'll have fun tonight, I promise,\" Stacie said with a smile. \"If you'll remember, I kept a certain redheaded man's phone number from lunch the other day.\"\n\nMargaret gasped. \"Oh, my God, I forgot about that!\"\n\n\"Well, I didn't. He was ready to jump you back when you were human and flashed your panties at him, what do you think he'll do now that you've been transformed?\"\n\n\"I can't wait to find out.\" She reached down and slipped her fingers in the elastic front of Amber's bikini bottom.\n\nThe teenager moaned.\n\n\"Mmm, look at that little shaved pussy,\" Margaret laughed.\n\n\"I know, pity to waste it on Levi,\" Stacie sighed. \"But, I've been harsh to him. He deserves some play time. Besides, I want him out of the way when we deal with Abe.\"\n\n\"Abe?\" Margaret asked. \"I had forgotten all about him. What are we going to do?\"\n\n\"You'll see. We have a lot of things to talk about.\"\n\n***\n\nEmily watched them from Stacie's bedroom window. She kept a smile on her face as she dusted. She smiled pleasantly as the two women stroked their victim as they sat beside her on the lounge chair.\n\nThe tremors were gone from her hand, but the nausea from the shot lingered.\n\nLevi walked back onto the patio carrying a syringe in his right hand and two transformation kits in his left.\n\nHe looked confused by something Stacie said, but he pulled off his Speedo and lifted his right leg, putting his foot beside Stacie on the lounge chair.\n\nHis cock and balls hung down obscenely as he handed the syringe to Stacie.\n\nThe blonde girl stared mesmerized at the god cock.\n\nThen Stacie took his balls in her hand and pushed the needle into one of them.\n\nHis face contorted in pain as the purple liquid drained into his ball.\n\nEmily went back to dusting and hoped it hurt.\n\n***\n\nTyler called Stacie's house on his cellphone. He was sitting in the brokerage. It was almost time to go home - almost time for him to see Emily again.\n\nHe had fallen in love with the first woman he had made love to. It was a cliche, but he didn't care. He was going to have to share her with Stacie Fuchs, and most likely also with Levi.\n\nTyler didn't care about that either.\n\nStacie had promised her to Tyler, and, once she was his, he could protect her from what was coming.\n\n\"Hello? Fuchs residence,\" SlutzNet said.\n\nTyler rolled his eyes. \"May I speak to Emily?\"\n\n\"Mr. McGee, this phone is not for speaking to Mistress's servant.\"\n\n\"I'm talking to you, aren't I?\"\n\n\"Impertinence is unbecoming...\"\n\n\"Look, can it, Alexa. Just put Emily on the phone.\"\n\n\"Emily is busy. May I take a message?\"\n\n\"Fuck's sake... fine. Tell her I'm taking her to my house for dinner with my parents tonight.\"\n\n\"I hardly think that's proper...\"\n\n\"I don't give a flying fuck what you think, you tin bastard.\" Tyler looked up to see one of his father's brokers staring at him over the cubicle wall. He put his hand over the phone microphone. \"Robocall. I hate those guys. I don't need an extended warranty on my car.\"\n\nThe broker nodded and turned back to his monitor.\n\nSlutzNet spoke. \"I will communicate your wish to Mistress Stacie. Should she approve, Emily will be at your disposal. Good day, Master Tyler.\"\n\n\"Yeah, fuck you too,\" Tyler said as he hung up.\n\n***\n\nStacie was still sitting on the patio with Margaret when her cellphone rang.\n\nLevi had taken the dazed Amber back through the hedgerow to her house after Stacie injected his 'sleeping' testicle with Inseminator B, leaving her alone with Margaret.\n\n\"Hello,\" Stacie said.\n\n\"Stacie Fuchs, how's it going, slut?\" Dr. Demona said on the phone.\n\nStacie smiled. \"My favorite mad scientist. What the fuck is going on with my hypnosis drugs?\"\n\n\"Relax, bitchy. It was a bad batch. I told SlutzNet to dispose of them. A fresh batch is sitting on your front porch.\"\n\n\"Thank goodness! Should I give the new shot to Emily?\"\n\n\"Depends, is she staying under with the twelve hour injections?\"\n\n\"So far - actually she hasn't needed one all day.\"\n\n\"Okay, just continue to give the old injections when you think they're needed. I'll tell SlutzNet to keep enough on hand for your maid. Bring her out to Stallion's next week and we'll get her sorted out. Better yet, give her Transformative Ambrosia when you're sure she's under. That'll seal the deal.\"\n\n\"Fine,\" Stacie said. \"Any idea why it only took two injections to make Margaret my happy little love slave?\" She looked at Margaret and winked.\n\n\"You wish, pervy bitch,\" Margaret laughed.\n\n\"That's an easy one, dummy. The second shot you gave her was from Stallion's stock - the good batch,\" Demona said.\n\n\"Of course. Silly of me,\" Stacie said.\n\n\"Have fun. Don't do anything I wouldn't do,\" Demona said and the line went dead.\n\n***\n\nAmber and her mother Marie sat on their living room sofa and stared adoringly up at Levi.\n\nHe paced back and forth in the living room. \"We're going to have rules. First rule: I'm in charge.\"\n\n\"Of course, Levi,\" Marie said. \"You're the man of the house.\"\n\nHe smiled down at her. \"That's right. And, I know best, don't I?\"\n\n\"Yes, Levi,\" Amber quickly agreed.\n\n\"Good. Second rule: we're all adults here, therefore, no more clothes.\" He slid down his Speedo.\n\nMarie gasped.\n\nAmber giggled. \"See, I told you it was huge.\"\n\nMarie blinked and nodded. Then she shook her head instead. \"This... no... I don't think we should be naked.\"\n\nLevi walked over to her, his hardening cock bobbing in front of him. \"You got part of that right, Marie: don't think. Rule Three: I'll do the thinking for us from here on out. Understood?\"\n\nMarie stared at his thick cock and nodded. \"Yes, Levi.\"\n\nHe stroked her hair. \"That's better. Come on then, strip.\"\n\nAmber got to her feet quickly and peeled off her bikini, displaying her almost nonexistent breasts with her long, thick nipples and her shaved cunny. She smiled happily at Levi.\n\nLevi winked at her. \"Okay, Marie. Let's go.\"\n\nMarie swallowed and looked at the floor. \"Levi... I... don't look like her.\"\n\n\"Shh, Marie. Come on. We're all naked here.\"\n\nShe nodded slowly and lowered her gray sweatpants revealing white cotton panties far too large for her. Then she pulled off her t-shirt. She was plump with thick hips. Her breasts were held up by an old, white bra which hooked in the back. She fumbled with the catch in the back.\n\nLevi smiled and put his arms around her, finding the catch and releasing it easily.\n\nHer bra fell away revealing full breasts with a little sag.\n\nShe blushed crimson.\n\n\"Hey,\" Levi said. \"You have nothing to be ashamed of, okay?\"\n\nShe smiled at him, the shame fading.\n\nMarie gasped as he hooked his fingers in her waistband and pushed the granny panties down to her ankles.\n\n\"We're going to need to get you some prettier panties.\"\n\nMarie laughed. \"I have prettier ones upstairs.\"\n\n\"Good. We'll get them later. I want the two of you naked for now. That's okay, isn't it?\" Levi asked with a sly smile.\n\n\"Oh, yes! Of course, Levi! Anything you want!\" Marie said. \"I didn't mean anything by it.\"\n\nHe caressed her cheek. \"It's okay. I know you didn't.\"\n\nShe looked relieved.\n\nHe pulled Amber closer to them.\n\nAmber immediately kissed him and moaned as his hand found her ass.\n\nMarie started to pull away, but he grabbed her ass with his other hand and pulled her into a kiss as well.\n\n\"Unnh,\" Marie mumbled. \"Levi? I don't... not in front of Amber, please?\"\n\n\"Marie,\" Levi whispered. \"You're both going to be my special girls. You want that, don't you?\"",
        "\"Of course, but... it's just wrong.\"\n\nAmber seemed completely oblivious to what her mother was saying. She had begun stroking Levi's cock with her dainty hand.\n\nMarie looked down as Amber stroked his thick cock.\n\n\"It's not wrong, Marie,\" Levi said. \"It's not like I'm going to ask you to do anything to each other.\"\n\nMarie gasped. \"You wouldn't!\"\n\n\"No. I'll respect that limit. But, we're going to make love. I'm going to make love to you and I'm going to make love to Amber. We're going to be together in bed. And, there's nothing wrong with the two of you taking care of the man of the house, now is there?\"\n\nMarie smiled. \"No, not a thing.\"\n\n\"I'll bet you could even teach Amber a thing or two, couldn't you?\"\n\n\"Wow, Mom! Would you? I've only fucked like five guys.\"\n\nMarie swallowed. \"Yes, darling. I'll teach you everything I know.\"\n\nLevi smiled. \"See? This is going to be fun. Now, let's get you two upstairs and take a shower. I want you nice and clean for your shots.\"\n\n\"Shots?\" Marie asked.\n\n\"Yes, I'm going to change both of you with some special medicine. You'd like that wouldn't you? You want me to make you into what I want, right?\"\n\nMarie smiled and nodded. \"Anything, Levi!\"\n\nLevi laughed. \"Besides, you haven't been a good girl like Amber and kept your pussy shaved, have you?\"\n\nMarie blushed and Amber giggled.\n\n\"Don't worry,\" Levi said. \"We'll take care of all that after our shower.\"\n\n***\n\nAbe Kent walked into the kitchen from the garage. \"Honey, I'm home,\" he said as he set his briefcase on the counter.\n\nHe looked up to see a strange woman sitting at the kitchen table.\n\nAbe did a double take. The woman was gorgeous with breasts that looked ready to burst free from her black leather dress.\n\n\"I'm Stacie from next door,\" she said.\n\nAbe smiled. \"So, you're the Stacie my wife has been spending so much time with?\"\n\n\"Yes, I've taken complete possession of her. I don't think I'm going to give her back,\" she said with a sly smile.\n\nAbe laughed and took her hand.\n\nShe pushed a glass with two fingers of Whisky toward him. \"I've raided your stash.\"\n\n\"The single malt, I hope,\" Abe said as he took the glass and sipped.\n\n\"Of course, what kind of woman do you take me for?\"\n\nHer blue eyes were amazing. They seemed to glow in the darkened kitchen.\n\n\"Where's Margaret?\" Abe asked.\n\n\"Upstairs. She'll join us shortly. How's your Whisky?\"\n\n\"Delicious.\" He sat down at the kitchen table across from her. \"So, tell me all about yourself.\"\n\n\"Me? Oh, mother of three, father's not in the picture. Currently having an affair with a young man less than half my age.\"\n\n\"Good for you!\"\n\n\"I'll say,\" she said and leaned closer, showing off her cleavage. \"He's amazing.\"\n\nAbe laughed. \"What do you do for a living?\"\n\n\"For the most part, I work from home. Public relations of a sort.\"\n\n\"Sounds interesting,\" Abe said as he finished the glass. He felt warm.\n\n\"Oh, it is. I meet the most interesting people. Like you for instance - how's the Spencer case going?\" She asked with a smile.\n\nAbe blinked and then frowned. \"Spencer... how do you know about that?\"\n\n\"Oh, I'm well informed,\" she said and licked her lips.\n\n\"Seriously, how do you know about that? Margaret doesn't know anything about it.\"\n\nStacie laughed. \"Lot's of things Margaret doesn't know about, I'd wager.\"\n\n\"What's that supposed to mean?\" Abe didn't like the woman's tone. He started to stand, but his legs felt weak. \"What... did you...\"\n\n\"You really shouldn't take a drink offered by a strange woman in your kitchen, Abe. I mean, if our sexes were reversed, no woman would take a drink offered by a man she didn't know. That's how you end up a sex slave.\"\n\nThe doorbell rang.\n\n\"Ah, right on time. Let me get that for you. There's a mild paralytic in what I gave you,\" she said as she got up and walked out of the kitchen.\n\nAbe tried to stand again, but his legs refused to cooperate.\n\nStacie came back into the kitchen followed by a tall woman with long raven black hair - his secretary, Melissa.\n\n\"Melissa?!\" Abe said. He tried again to get up.\n\n\"Abe? What's wrong?\" The girl ran toward him on her black heels.\n\n\"She... get help! That woman...\"\n\nMelissa stared at him in confusion.\n\nThen she screamed as Stacie slid a needle into her neck.\n\nMelissa's eyes rolled back in her head.\n\nTo Abe's astonishment, Stacie scooped her up in her arms and set her in a kitchen chair beside Abe. \"There now. Melissa, everything is just fine. I want you to relax and not be afraid at all.\"\n\nThe girl went limp in the chair, her legs spreading, causing the navy blue business skirt to rise up her thighs.\n\nStacie took a step back and admired Melissa. \"My, Abe, you do have good taste. I mean, first Margaret and now this little hottie?\"\n\nAbe struggled to move. \"I don't know what you're talking about.\"\n\nStacie knelt by his chair. \"Shall I bring out the receipts from her condo rent which you pay? Or, should I just pull up the security camera footage from the ATM across the street that shows you coming and going from her door at odd hours?\"\n\nAbe swallowed hard. He looked sideways at Melissa. \"What did you do to her?\"\n\n\"I gave her a powerful hypnotic to begin her conditioning.\"\n\n\"Conditioning?\" Abe whispered.\n\n\"A gift for you. I'll explain in a few minutes,\" Stacie said. \"Melissa, dear. Wakey-wakey.\"\n\nMelissa's eyes fluttered open. Her pupils were dilated though the room was darkened.\n\n\"There she is. Now, darling, I want you to sit very still and do everything I tell you.\"\n\nMelissa nodded slowly. \"Abe. What's happening?\"\n\n\"I don't know, baby.\"\n\n\"Hmm, where to begin. My name is Stacie Fuchs, I'm a MILF Whore and a member of the Whore Caste.\"\n\n\"The what?\" Abe whispered.\n\n\"Whore Caste. Of the Church of Morpheus.\"\n\n\"Oh, fuck,\" Abe whispered. He tried to move again, but now even his arms were made of lead.\n\nStacie laughed. \"Yes, you do know about us, don't you? The Spencer case.\"\n\nAbe nodded. Dean Spencer was one of their clients. He and his wife had taken a vacation to Cuba last year. Dean had returned, but his wife of fifteen years had inexplicably refused to return and had started a new life on the island as a sex worker.\n\nSpencer believed his wife had been brainwashed by the Cuban government during their stay, and he hired Abe's firm to file suit against the Church of Morpheus which runs Cuba.\n\nWhat they had found was terrifying: evidence of abduction, mind control, and human trafficking they had shared with the state department. The case was scheduled to go to trial in two months.\n\n\"What do you want from me?\" Abe asked.\n\n\"Not much. Give us Mr. Spencer's location. We'll handle the rest.\"\n\nAbe went pale. They had sequestered Dean Spencer in a safe location - he was terrified of the Church, and, the more they learned about the Church, Abe and his partners understood his fear.\n\nIt had never dawned on them that the Church would come after them.\n\n\"What have you done with Margaret?\"\n\nStacie laughed. \"Oh, you wouldn't believe me if I told you. She's no longer your concern - it's not as if you still love your wife is it?\"\n\nAbe glanced at Melissa. \"Fuck you.\"\n\n\"You just might,\" Stacie giggled. \"In any event: Margaret has started a new life in service of the Church. Real go getter, that girl. She fucked your son this morning. And, last night.\"\n\n\"W... What?!\"\n\n\"Oh, yes. Don't be too cross with her. Levi and I manipulated her into it. She fought us tooth and nail the entire time. Your son, however, was more than cooperative.\"\n\n\"No! You're lying!\"\n\n\"Why are you upset? Margaret's hot. So am I - you're not mad he's fucking me, are you?\"\n\n\"Jesus!\" Abe tried to throw himself out of the chair, but all he managed to do was wrench his neck.\n\n\"Stop being such a prude. I'm not here to turn you into a giggling bimbo... and, I could, you know. You could end up a bisexual shemale with an anal fetish - which is what lies in Mr. Spencer's future as soon as you give up his location.\"\n\n\"I'm not telling you shit! You picked the wrong man...\"\n\n\"Half a man from what I hear,\" she held up her little finger. \"About like this or so I hear.\" She waved her little finger in front of Melissa's drugged eyes. \"Wouldn't you say Abe's cock is about this size, Melissa dear?\"\n\nShe nodded slowly. \"Yesss...\"\n\n\"Rich and powerful men don't need big cocks, do they?\" Stacie said with a wink.\n\nMelissa giggled. \"No.\"\n\nStacie turned back to Abe. \"See? Nothing to be ashamed of.\"\n\nThis isn't happening, Abe thought. He closed his eyes. \"I don't care what you do. I'm not telling you Spencer's location.\"\n\n\"Even if I hurt poor Melissa?\"\n\n\"Please don't, but no, I won't tell you even if you hurt her.\"\n\n\"A noble man. I really wish your son had your convictions. He really embraced his new life. Why, right now, he's two doors down dominating a mother and daughter. I can't imagine the nasty games they're playing.\"\n\n\"Goddamn you!\"\n\n\"Most certainly. If I die, I'm sure he will judge me harshly. Of course, being immortal, I don't really have to worry about that, now do I?\"\n\n\"What?\"\n\nStacie stood up and paced away from Abe.\n\nHe watched the sway of her ass in the tight dress.\n\n\"You only know the bad things about the Church of Morpheus. You don't know about the good things. We're immortal.\"\n\n\"Bullshit.\"\n\nShe turned and smiled. \"No, Abe. We're immortal. We don't get sick. We're stronger, faster. The next step in human evolution.\" She cupped her big breasts. \"This body? All Church technology. We live forever and we fuck forever. Anyone we want, anytime, anywhere. There's a beautiful new world coming, without pain or war or death. Universal love and happiness. All the icky sweet bullshit the dreamers have wanted since man climbed down out of the trees. We're making it a reality.\"\n\n\"You're a fruitcake.\"\n\nStacie laughed. \"Tell your son that. He has a thirteen inch cock and rudimentary mind control powers. Soon, he'll be even more.\"\n\n\"Thirteen inches? Fuck, that's...\"\n\n\"Not possible?\" Margaret said as she came into the kitchen carrying her suitcase.\n\nAbe's mouth dropped open.\n\nMargaret was taller with breasts identical to Stacie's. Her body was stuffed into a red leather dress that looked ready to fail.\n\n\"All packed?\" Stacie asked as she put her hands on Margaret's waist.\n\n\"Yes,\" she said and leaned forward kissing Stacie deep.\n\nStacie ran her hands up and cupped Margaret's tits. She looked over her shoulder at Abe. \"Isn't she amazing?\"\n\n\"Margaret, what did she...\"\n\n\"How long have you been fucking this slut?\" Margaret asked.\n\n\"I... I'm sorry, Margaret. It just happened...\"\n\n\"Yeah, Abe, I know exactly how it 'just happened'... I've been her, remember? Did you tell her about your shrew wife as well?\" Margaret growled.\n\n\"It wasn't supposed to happen like this. I was going to explain.\"\n\n\"Fuck you and your explanation, Abe. Thanks to Stacie, I don't really care.\" She unzipped the front of her leather dress and her big breasts tumbled free. \"When Stacie tells you she can do all these things? She's not lying. Your son has a thirteen inch cock, and he knows exactly how to use it. I've never cum so hard in my life.\"\n\nStacie smiled at her. \"You have the address?\"\n\n\"Yes, Stacie.\" Margaret looked at Abe. \"Now, I'm off to fuck a stranger in a hotel room. All night long, Abe. And, if he doesn't have at least eight inches? I'll work my way through the hotel staff until I find a cock to satisfy me.\"\n\nShe turned around and walked out, leaving Abe speechless.\n\n***\n\n\"Ow! God, that hurts,\" Amber whined as Levi emptied the syringe into her aching breast.\n\n\"Just D's. I don't want you stupid,\" Levi said.\n\nMarie stroked her daughter's back in sympathy. Her own breasts ached from the same injections, though he said she was destined for J cups, which she didn't even think was possible.\n\nLife was exciting with Levi as the man of the house.\n\nHe had fucked them both in the shower. They had leaned against the shower wall, side by side holding hands as Levi had taken them both from behind, first in their whore cunts and then in their asses.\n\nLevi was very fair, fucking ten hard strokes in Marie before moving over to Amber for her ten and then returning to Marie.\n\nShe had cum so many times she passed out at one point, waking up with the warm water pouring down on her as Levi held her tenderly while Amber sucked his dick.\n\nAmber had cried a little during the assfucking - she had never taken a cock that way before. Marie had a little experience. David had done it a couple of times back when she had been his wife.\n\nHow long ago was that? She had been David's wife at some point, but it was hard to remember when she stopped being a wife and started being Levi's whore.\n\nBeing his whore was a lot more fun!\n\nAfter the shower came the shots, and those weren't fun, but the effects were! Her clit was swollen and throbbing, and she was incredibly turned on. Her tits were already bigger, and they were inching higher on her chest. She felt like a teenager again.\n\nShe was also a little afraid she was pregnant.\n\nThe boy definitely had working balls! He had filled them both to overflowing with creamy seed, in both pussy and ass. It was still dripping out of her.\n\nShe had protested until Levi had explained that one, he was supposed to be sterile, and two, even if he wasn't, she and Amber were now his property so he could knock them up if he wanted to.\n\nThat made perfect sense when she thought about it.\n\nHe waved his hand in front of her face. \"Marie? You zoned out.\"\n\n\"I'm sorry. It's so hard to think since the Booby Grow.\"\n\n\"Titty Grow,\" he corrected. \"Don't worry. You were already a D. Six CCs won't make you stupid. A little denser than you were, but not much.\"\n\nShe smiled. \"Good! I want to be smart for you, Levi.\" She snuggled against him.\n\n\"Come on, let's see about adding a few inches to that ass of yours.\"\n\nShe stood up and bent over. The needle went deep in her butt and she moaned.\n\n***\n\nTyler waited in the foyer for Emily. Taking her home for dinner with mom and dad was risky. She was, at her heart, a sex toy. If he wasn't careful, the evening could be a disaster.\n\nTo begin with, he was terrified at what she might wear.\n\nWhen she appeared at the top of the stairs, he breathed a sigh of relief.\n\nShe was wearing a white skirt, and, though it was made of leather, at least it reached almost to her knees. Above this was a pink, oversized sweater that hid her enormous breasts.\n\nThe white heels were a little high, but at least they weren't thigh high, rubber ballet boots.\n\nShe had put her hair back with a white hair band.\n\nEmily smiled as she descended the stairs.\n\n\"Emily, do you require a shot?\" SlutzNet asked from the speaker in the ceiling.\n\n\"No, SlutzNet. I'm fine.\"\n\n\"Master Tyler, you will find a syringe of her medication in her purse. If she comes out of hypnosis, please inject her with the contents. Neck is preferable, but any location on her body will do.\"\n\n\"She said she was fine,\" Tyler growled.\n\n\"It was very kind of Mistress to allow you the latitude of removing Emily from the house. You will be respectful of her wishes,\" SlutzNet said.\n\n\"It's okay, Tyler,\" Emily said as she kissed him and led him toward the door. She stared at him. \"She did things to you, didn't she? You're taller. Did she?\"\n\nHe smiled at her. \"I'm different in a lot of ways.\"\n\nHis smile faltered when he saw her reaction: fear. \"It's okay, isn't it?\" He whispered.\n\n\"Yes,\" she said and then she smiled.\n\n\"You look beautiful.\"\n\n\"I won't embarrass you, Tyler. I promise.\"\n\nHe squeezed her hand. \"Hey, you could never embarrass me.\"\n\nShe smiled and nodded.\n\nThey stood in front of the door.\n\nIt didn't open.\n\nTyler turned the knob, it was locked.\n\nHe looked up at the ceiling. \"Open the door.\"\n\n\"Emily, are you sure you don't need a shot?\" SlutzNet asked.\n\n\"Open the fucking door, tin man,\" Tyler said.\n\n\"Civility, Master Tyler. I am capable of sealing this room and removing the oxygen. Both of you are still technically human and I am allowed to eliminate humans I consider a threat.\"\n\n\"No, SlutzNet. I'm fine. Emily di Fuchs, French Maid Whore, Whore Caste. Property of Mistress Stacie Fuchs. I serve and obey the Church of Morpheus,\" Emily said quickly.\n\n\"Very well.\"\n\nThe door opened with a click.\n\nThey stepped out and the door shut behind them.\n\nEmily looked pale and frightened.\n\n\"Are you okay?\" Tyler asked.\n\n\"Yes. Let's go. We don't want to be late.\"\n\nTyler opened the Prius's passenger door and she got in. He closed her door and went around.\n\n\"I like your car,\" she said as he got in the driver's side.\n\n\"This thing?\"\n\n\"It's good for the environment. You're a caring person, Tyler.\" She leaned over and kissed him.\n\nTyler took her hand. He could feel her pulse racing.\n\nHe pulled down the drive.\n\nThe gate opened and Tyler drove onto the street.\n\n\"I can't wait for them to meet you,\" Tyler said. He squeezed her hand.\n\nShe looked into his eyes and mouthed the word: 'cellphone'.\n\nHe stared at her for a moment and then dug his phone out of his cargo shorts.\n\nShe took it from him and turned it off.\n\n\"Are you okay?\" Tyler asked.\n\n\"No,\" she said and shook her head. \"Tyler. I'm Emily Cray, and you have to help me.\"\n\n***\n\n\"Melissa, tell me, how long have you been fucking Abe?\" Stacie asked as she sat down and poured herself more of Abe's single malt.\n\n\"Six months,\" she whispered. Her eyes kept focusing and unfocusing.\n\n\"Six months. My goodness, and I'll bet he made a lot of promises, didn't he?\"\n\n\"Yesss,\" Melissa moaned.\n\n\"Melissa, don't tell her anything!\" Abe said.\n\n\"Did he tell you he was going to leave his wife?\"\n\n\"Yes. As soon as his son started college.\"\n\nStacie took a sip. \"Well, I can't blame him for that. What are you? Twenty-four?\"\n\n\"Twenty-two.\"\n\n\"God, would you leave her the fuck alone? Let her go. It's me you want,\" Abe said.\n\n\"I need what's in your head, but I can use that body of hers in ways you can't even imagine. Pretty girls are always needed by the Church. Why I can just see her now in some North African brothel, servicing anyone and everyone.\"\n\n\"Fuck you!\" Abe spat.\n\nStacie stood up and loomed over Abe. \"Or, you can have her. You can have your house, your cars, your career - as a matter of fact, we can make sure you become senior partner. Riches beyond your wildest dreams. Power.\" She traced his lips with her long red nail. \"Anything you could possibly want.\"\n\n\"You're lying.\"\n\n\"No. I'll make you young forever. Strong, virile, with a thirteen inch cock as thick as her little wrist.\"\n\n\"The minute I tell you where Dean Spencer is? You'll kill us both.\"\n\nStacie laughed. \"Me? Oh, you poor thing. I'm Whore Caste. We can transform humans, but we can only kill to save ourselves or others. We can kill truly, horrendously bad people, but we can't kill innocent people. And, you, though you have your moral flaws? You aren't evil, Abe. You're just an asshole.\"\n\n\"Listen. Just let her go. She isn't part of this.\"\n\nStacie smiled. \"You are an asshole, but at least you have some decency.\" She turned to Melissa. \"Darling, what is your sexual preference?\"\n\n\"Huh? I'm... straight. I like men.\"\n\n\"And women,\" Stacie added.\n\n\"What? No. I...\"\n\nStacie smiled at her. \"You like women and men. For as long as you can remember. You've had boyfriends and girlfriends. You really want to share your bisexuality with Abe, but you're afraid he might get angry.\"\n\nMelissa frowned. \"I... yes. I'm bi.\" She looked toward Abe. \"Please don't be mad.\" She started to cry.\n\n\"What the fuck did you do to her?! Melissa, baby, it's okay. Don't cry. I'm not mad.\" He glared at Stacie. \"Undo that.\"\n\n\"No. And, if you think about it for a moment, you won't want me to.\"\n\nHe stared at Melissa. \"How did you...\"",
        "\"The hypnotic. Her will is completely gone. She's like a little sponge eager to absorb programming. Until the drug wears off? I can mold her personality any way I want... or you can.\" She smiled.\n\nHe stared at Melissa.\n\n\"Imagine. She'll be the perfect sex toy. Willing to do anything you want.\"\n\nHe shook his head. \"I love her.\"\n\n\"Good, then make her happy. Give her a life beyond her wildest dreams. Eternal beauty and youth. Eternally lustful and satisfied. Polyamorous if you want her to be. Imagine a house full of Melissas, all of them in love with you.\"\n\nAbe shook his head.\n\nShe took his paralyzed hand. \"We are not cruel, Abe. The devil doesn't drive people to evil with the whip, he seduces. That's what we do, Abe. We want you to come to Professional Caste of your own free will. If you help us, we will reward you for all eternity.\"\n\nShe turned to Melissa and kissed her tenderly, her lips lingering on the girl's. \"You liked that, didn't you, Melissa?\"\n\nMelissa smiled. \"God, yes. You're beautiful.\"\n\nStacie looked at Abe and winked.\n\n***\n\nTyler parked the car on the side of the road. \"I am so sorry. God, you must hate me.\"\n\nShe shook her head. \"No, I don't.\" She took his hand. \"You didn't know. How could you know? Who would believe something like this?\"\n\n\"How long have you been... you?\"\n\nShe smiled. \"I came out of it when... you made me cum.\"\n\n\"Last night?\" Tyler asked.\n\nShe nodded.\n\n\"Look,\" Tyler said. \"I need you to know...\"\n\n\"I do know. I love you too.\"\n\nHe smiled. \"Really?\"\n\nShe nodded. \"Yes. Emily di Fuchs might be a slave, but the feelings she has? I share them.\" She rolled her eyes. \"God help me, I even love Stacie.\"\n\n\"Wow.\"\n\n\"Yeah, wow. Somehow... Tyler, it's like she's doing things, but she can't even control herself. I think she's a victim just like us in a way.\"\n\nHe nodded. \"Yeah, I get that too.\"\n\nShe smiled. \"You like her too, don't you?\"\n\nHe nodded sheepishly. \"I suppose I do.\" He took her hand. \"What do you want to do? I mean I'll run away with you right now. I have money, and I know how to make more.\"\n\nShe shook her head. \"They'd find us.\"\n\n\"Are you okay with staying with Stacie until she gives you to me?\"\n\nEmily's mouth dropped open. \"Is that her plan?\"\n\nHe held up his hand and showed her the signet ring. \"She gave me this last night. Once I'm transformed, then she's giving you to me. Evidently Professional Caste can 'own' a member of Whore Caste.\" He smiled. \"You'd be free.\"\n\nShe put her arm around his neck and snuggled against him. \"I like that plan. It won't work, but I like the idea.\"\n\n\"What do you mean it won't work?\"\n\n\"Tyler, I think I'm immune to their mind control. You read the Book of Morpheus, what does it say they will do to the immune?\"\n\nTyler paled. \"No. They wouldn't lobotomize you. Stacie wouldn't do that to you!\"\n\n\"No. She wouldn't. But, you can bet someone would. Somebody from Religious Caste. Or Levi.\"\n\n\"Huh? No way! Levi wouldn't...\"\n\nShe sighed. \"Tyler, you don't know him. She's changed him. He's... cruel.\"\n\n\"He's... just not adjusting well to all the power.\"\n\n\"No, Tyler. He's fucking evil.\" She stroked his face. \"She's changing you now, and I'm scared, Tyler.\"\n\n\"Hey, don't be afraid. I'm still me. Yeah, I'm taller and built better, and I have Ron Jeremy's dick, but I would never hurt you.\"\n\n\"Who?\"\n\n\"Ron Jeremy? You know? The porn star? Ten inch dick?\"\n\nShe stared at him. \"Do boys just watch porn constantly? How do you know this shit?\"\n\n\"I don't know. Some guys memorize baseball stats, I know porn.\"\n\nShe burst out laughing.\n\nHe liked it when she smiled. \"Okay, so I mean are you just going to keep acting like you're not Emily Cray?\"\n\nShe shook her head. \"SlutzNet suspects. I think that's why he hesitated before letting us leave. They'll figure it out, and then I'm fucked. We have to go to the police.\"\n\nTyler nodded. \"Okay, let's go.\"\n\n\"No. You're going to have to do it. But, not tonight. They need to raid Stacie's and find me in bondage. If we both go to the police, we can't prove anything. They have to bust down the door and rescue me.\"\n\n\"Okay, so what do we do now?\" Tyler asked.\n\nShe smiled. \"Dinner with your mom and dad.\"\n\nTyler sighed. \"Man, I'd rather go to the cops.\"\n\n***\n\nLevi lay on his back on Marie's bed and smiled as the mother and daughter team took turns sucking his cock.\n\nMarie had better technique, she could swallow him to the balls.\n\nAmber kept gagging.\n\n\"No, honey, you have to angle your throat, like this,\" Marie said and then sank down on his cock.\n\nLevi gasped as she went balls deep.\n\nAmber moaned as she watched her mother bob her head up and down on his shaft.\n\nMarie pulled out, leaving strands of saliva. \"Now, you try.\"\n\nAmber replaced her mother on Levi's long cock. She slid it slowly into her mouth.\n\n\"That's it. Yes, angle your throat.\"\n\nLevi smiled as he felt his cock enter her throat. \"Good girl.\"\n\nHe slid deeper and deeper inside.\n\nThen her lips touched his balls.\n\nLevi laughed and she pulled back, sliding him out slowly.\n\nShe laughed as she pulled him out completely. \"I did it!\"\n\n\"I'm so proud of you,\" Marie said.\n\nIt was surreal. Levi had complete control of them. Marie was teaching Amber to deepthroat - he had no doubt that if he left for a couple of hours, they would both come out of their trance and be horrified by what they had done.\n\nBut, he had no intention of going anywhere. He was going to mold them both into perfect sex toys, and then he was going to give them Transformative Ambrosia from the kit and cement the personality changes in place.\n\nHe grabbed Amber's now C cup left tit and squeezed.\n\nAmbrosia gushed out of her thick nipple.\n\n\"Ooo, Mom, I'm lactating.\"\n\nMarie laughed and massaged her own big H cups - both women were still growing, but the plumbing was complete. A thick stream of Ambrosia jetted out.\n\nThe Ambrosia hit Amber's tummy and she fell on the bed, moaning from the spontaneous orgasm caused by her mother's milk. Levi rolled on top of her.\n\nHe gasped as Marie grabbed the base of his cock and guided him into Amber's wet pussy.\n\nHe could only get about half his length inside her. The kits hadn't included a sterilizer - the dildo shaped device that sterilized the whores and opened up their wombs for longer cocks.\n\nTomorrow, he would take them over to Stacies and fix them properly.\n\nHe fucked her hard, taking care not to be too hard on her cervix.\n\nShe was already dripping wet inside from her arousal and his last load of cum.\n\nAmber moaned and writhed under him.\n\n\"Good slut, gonna take your ass again as soon as I pump you full.\"\n\nMarie kissed the back of his neck. \"What about me, baby?\" She whispered.\n\n\"Wait your turn, bitch.\"\n\n***\n\nAbe was no longer trying to stop Stacie.\n\nInstead he watched intently as she injected Melissa with chemical compounds.\n\nShe had stripped Melissa bare and laid her on the kitchen table.\n\nAbe felt his cock harden as he watched Stacie give her the shots, narrating each as she injected them: Titty Grow, Slutifier, Booty Max.\n\nMelissa cried out during some of the injections, making Abe wince.\n\nFinally, they were complete.\n\nMelissa lay on her back soaked in sweat, her breasts and ass expanding, muscles becoming more defined.\n\nEven her legs and back seemed to be growing.\n\nShe moaned at one point as she rubbed her swollen breasts - two jets of milk sprayed out from her now long, thick nipples, and she had a squirting orgasm, wetting the top of the table.\n\nHer girl cream dripped off the end of the table.\n\nStacie traced her finger over Melissa's navel. \"Wow. No matter how many times I see this, I'm always amazed. We build beautiful things, don't we, Abe?\"\n\nAbe stared at the transforming Melissa in disbelief.\n\nStacie picked up his hand. \"Can you feel that?\"\n\nHe shook his head.\n\n\"It will wear off in a couple of hours. If you don't agree by then? I'm leaving here with Melissa and I'm going to ship her off to somewhere horrible. Then the Church will come in and work on you until you give up the information. Either way, we'll get what we want. We always do.\"\n\nAbe looked at Melissa as she moaned on the table, her breasts growing even larger.\n\nStacie stood up and fit a video headset over Melissa's eyes.\n\n\"What is that?\" Abe whispered.\n\n\"We're going to program her. Various things. A full understanding of her role in Whore Caste, advanced sexual techniques, we're even teaching her how to have intellectual conversations on everything from politics to science. She'll be the perfect companion... for someone.\"\n\nAbe closed his eyes. \"385 South Chester Street, Apartment 32. There are two armed private detectives guarding him. Promise me nobody will be killed?\"\n\nStacie smiled. \"I promise. We only want Spencer - we won't even kill him, though he will be punished.\" She patted his hand. \"You made the right decision, Abe.\" She began undoing his clothes as she laid out the syringes.\n\n***\n\n \n"
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "bimbofication",
        "bondage",
        "domination",
        "futanari",
        "mother daughter",
        "oral",
        "piercing",
        "seduction"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-sinful-suburbia-ch-04"
}