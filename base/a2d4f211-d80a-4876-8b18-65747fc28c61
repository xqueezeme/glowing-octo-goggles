{
    "title": "Milly Scott Pt. 02: The Artist and Her Young Lover",
    "pages": [
        "This is a continuation of 'The New Assistant' and 'The Artist and the Cop.' It does not matter if you've not read the other stories, but it might help a little. There is a tragedy at the very start of this story which is about a grieving woman and her young friend. Then it becomes a simple love story. It includes two people who are under eighteen at the beginning, but they are not involved in any sexual activity until after they both become eighteen. \n\nThere is some mild bondage and all sexual activity is consensual. All the people involved are fictitious. \n\nI am very grateful to Maonaigh for encouragement, critical comments and editing skills. I suggest that you read his submissions. \n\n***** \n\nI heard the doorbell and dried my hands on a dishtowel before heading to the door. It was Isha and another police officer in uniform, a chief inspector I think. \n\n\"Isha?\" I asked. \n\nI stepped back and Isha led the way to the lounge. I stood looking at her and had a very bad feeling. \n\n\"Milly, Jenny was on a drugs raid this morning and she's been stabbed. It's serious, she's in hospital and we're going to take you there.\" \n\nI stood there with my mouth open. For just a second there I thought she said that Jenny had been stabbed. When I looked at the male officer I realised that I'd heard her correctly. \"What?\" \n\n\"Milly, grab your bag and let's go. Jenny needs you.\" \n\nIsha sat in the back of the police car with me, holding my hand. \"What happened?\" \n\n\"A guy tried to run, grabbed a kitchen knife and it went under Jenny's stab vest.\" We were in a queue of traffic and going nowhere fast, the driver picked up the microphone and I heard him speak. \n\n\"Alpha five to control, en route to the hospital, urgent, using blues.\" With that the car lit up with blue lights, the sirens came on and the traffic parted for the next twenty minutes as we sped along the lanes, all the time the driver repeatedly muttered, \"We need to get there.\" \n\nWe screeched to a halt at the hospital door and he told us to go. Isha grabbed my hand and ran through the hospital dragging me along. We reached a waiting room where half a dozen men waited, some in uniform, a couple that I knew and not one of them could look me in the eye. The chief inspector dashed in behind us and asked, \"Well?\" \n\nOne of the officers said, \"In the theatre, boss.\" I turned to him, he was close to tears as he hugged me and we sat down. \n\nTwo hours passed and a doctor came to speak to me. I felt the others pressing close behind me. \"Jenny has a serious injury and we've operated, but now we need to wait. There are several things that could go wrong, but hopefully, she should recover. She's being transferred to ICU just now; a nurse will come and get you shortly.\" She looked around the room, \"Just Milly that is.\" \n\nI'd never seen anyone look that bad. There were tubes and leads everywhere. There was a nurse hovering constantly and she never stopped checking or adjusting something. I was worried, I loved her and she'd made me feel whole again. Isha came in to see me and brought coffee a couple of times. I eventually fell asleep for about an hour that night but the rest of the time I was in a daze. \n\nAbout nine the following morning the chief inspector, John Waters, arrived. He asked how things were. I told him what I could and thanked him for the previous day. \"Jenny was one of my staff. We try to look out for each other and it gets a bit personal sometimes. I've known Jenny for a long time and liked her; that makes it harder.\" \n\nA few minutes later we were interrupted by an alarm, then a second, then all hell broke loose and we were pushed out. I'll never forget the next forty minutes. I've never seen so many doctors and nurses or such frantic activity. It was clear that things were serious. John stood there saying \"No, no,\" repeatedly. \n\nQuiet, total and complete silence. So many faces that looked defeated and dejected. One doctor in green scrubs came over to me. \"I'm so sorry, so very sorry. I've no idea what happened, we tried everything.\" John burst into tears before me, but I'm glad that he was able to hold me up or I'd have fallen down. \n\nI looked around. Standing there were about a dozen police officers, they looked broken as well. They'd lost a colleague, a friend, and were taking it hard. As John led me away almost all of them patted my shoulder or shook my hand, most said sorry as if it had been their fault. A couple of them were crying. \n\nIsha was waiting at the house when John and I arrived. She was making tea when I heard the door. It was Alan, the Vicar, he came over and I stood to hug him, as I did so I let go and I sobbed very hard. I've had a difficult relationship with religion, but not with Alan and I asked him to pray for Jenny. I don't know why but it seemed appropriate; the four of us joined hands and Alan said some nice words. \n\nIsha stayed with me. I have no idea what I'd have done without her. The next couple of days were a blur, lots of police officers came round and they were all very kind. Mary Wilson was a regular visitor and stood in when Isha had to go away. She was married to Jenny's first Sergeant and had befriended me a few years earlier. She understood. There was talk about the funeral but the police made all of the arrangements and I was grateful for that. \n\nFuneral \n\nVictoria, Jess, Jane and Fiona arrived the evening before the funeral. I don't remember much about anything that happened that day except that I was pleased to have some more friendly and supportive faces round about me. \n\nThe funeral was a formal affair with dozens of police officers, many in dress uniform who formed a guard of honour. The coffin was draped with the police flag and it was carried by her colleagues. She would have liked that. I was in a daze, this was the second time. What had I done to deserve this? \n\nAs I walked into the crematorium behind the coffin Fiona came alongside me and put an arm around my waist. I no longer looked down on her as I had done for so many years as she was now taller than me. She smiled at me and it made me feel a little better. Her sister, Jane, was on my other side; she touched my arm and held my hand. It too made me smile but only briefly. \n\nI don't remember much of the service or the funeral tea. Fiona never strayed very far from me and later, at home, she took me up to bed and tucked me in. The last thing that I heard was her saying to Jess, \"I'll stay here tonight, just in case she needs something.\" \n\nWhen I woke the next morning I saw Fiona sitting on the floor leaning back against the wall holding a mug of something. She saw me, smiled and said, \"Good morning, would you like tea?\" I nodded and she went away. \n\nTen minutes later she came back and sat on the bed. I was sobbing gently; she held me in her arms, cradled my head and gently rocked with me whispering words of comfort. I don't know how long we were like that but I thought about Fiona holding me. Suddenly I felt the need to move and headed for the bathroom. I stood holding myself upright by clinging onto the basin and stared at my reflection in the mirror. I looked at myself with disgust and silently said, \"You really are a horrid bitch, your wife's funeral was yesterday, then you entertained 'that' thought about your niece. Sort yourself out, girl!\" I never told anyone about that thought, not even Fiona, but I'd wanted her to be there to hold me, always. I was embarrassed by it. \n\nAfter a quick shower, I pulled on some jeans and a sweater. When I reached the kitchen I found Victoria, Jess, Jane and Fiona making breakfast. \n\nThey were very kind to me, we chatted about the funeral and memories of Jenny. I laughed a couple of times, but I was distraught. I needed to clear my head and told them that I wanted to go for a walk. Fiona and Jane offered to come with me and from the looks, on their faces, I realised that they would probably just follow me whatever I said. \n\nWe walked around the lake and it gave me a chance to think, but I couldn't seem to focus on anything so I gave up. Fiona and Jane stayed quiet for the most part, although they did chat between themselves occasionally asking me something. I just nodded at whatever they said and I saw them look at each other, clearly, I was not making any sense. I didn't really care about anything; I just had a feeling of grief and loss. \n\nWhen we got back they tried to engage me in conversation but I shut off, apologised and headed for my room. I lay on the bed remembering good things; Jenny's smile, her laugh, how kind she was, how she stared at me when I stood naked in front of her and the look of lust in her eyes. The facial expression when I made her come, the new swear words she'd taught me when I teased her. How she'd rescued me from loss and yet here I was again. \n\nI looked up. Fiona was there checking on me, I smiled at her and waved her away. I fell asleep. \n\nJess had cooked some food and Fiona came to fetch me. I picked at it and tried to join in, but it was no use, I heard nothing they said. \n\nStaying \n\nI'd been to the loo and was about to re-enter the lounge when I heard a raised voice that stopped me. \"Mum, have seen the state of her? She can barely do anything; she can't think straight, can't or won't make a decision. I'm staying here for a few days until Milly's better than she is now.\" \n\nI couldn't hear what was being said in reply, but I did hear Fiona again, \"You know how I feel about Milly, she's been wonderful to Jane and me. I love her; I can't just walk away and leave her. I'm staying and that's that!\" \n\nThey all turned towards me as I walked in, looking as if they had been caught stealing from my purse. Fiona came to me and said, \"Milly, I want to stay for a few days until you feel a bit better. Is that okay?\" \n\nI nodded, I did need someone around and Fiona would be a perfect choice. I'd been captivated by her for years, she made me smile, teased me and I loved being with her. I gave her a hug. \"Thank you, a couple of days would be nice.\" \n\nThe next morning I got a hug from Victoria before she got behind the wheel of their car. A big hug and kiss from Jane, then Jess stood holding my hands and looking at me. She took me into her arms and whispered, \"Look after yourself, remember we're a phone call away, you can come and stay any time that you want. Send Fiona home when she gets too annoying.\" With that, she got in the car and I waved as they went away. Then I realised that Fiona was beside me and holding my hand. She looked at me with such love. The little girl was all grown up. \n\nOver the next few days, Fiona looked after all of the things that I'd neglected, laundry, shopping, paying bills, housework and cooking. She gave me lots of space, but when I wanted her she was never far away. \n\nWe went for walks but hardly spoke; it was just nice that there was someone there. \n\nI'd been sitting in the sunroom simply staring. I got up to go and make tea, but as I reached the hall I heard Fiona talking on the phone, \"No, she's still in a trance, but crying less each day. I know, yes I will. Mum, would it be okay if I stayed for a few more days? I'm still worried about her.\" There was a pause and then she spoke again. \"Maybe I shouldn't have asked, I've decided that I'm staying unless she kicks me out.\" \n\nI walked into her line of sight, smiled at her and gestured that I wanted the phone. It was Jess, she asked me all of the things that you would expect her to ask and then she said, \"How are you and Fiona getting along?\" \n\n\"Jess, thank goodness for Fiona. Without her being here I don't know how I'd feel, but I'm sure that she must have better things to do than hang around with a grumpy, sad old woman.\" As I said those words Fiona snatched the phone from my hand. \n\n\"Mum, I'll call you back very soon, I promise.\" She hung up, took me to the lounge and almost threw me onto the couch. She knelt on the floor in front of and facing me, I saw tears in her eyes, \"Look here Milly, you're not right just yet. I don't think that you should be alone and I want to stay with you for a while.\" \n\nI smiled at her; she'd been such a part of my life for the past few years. I'd loved her and Jane visiting me although I have no idea why they liked being here with us so much. I often wondered if I had kids of my own would they be anything like them. \n\n\"Fiona, you know that I love you being here and I'm grateful for the last few days, but you've got a life to live and a week still at school. Go home, I'll be fine.\" \n\nThe look of annoyance on her face was not something that I'd seen before; somehow that mischievous little girl had gone as well. Here was a mature and serious young woman. \"My exams are done so there's no need to go to school for a stupid end-of-term week. As for you, you need someone here or you'll decline into depression and you know it. If you don't want me, fine, but I'm not leaving you until there's someone else here. As for an old woman? Why do you think Jane and I came here so often, we loved spending time with you, you behaved like a teenager? I'm staying and that's it, for as long as necessary.\" \n\nI phoned Jess, \"Your daughter has just given me a talking to and, much as I hate to admit it, she's right. I need someone and right now I'd love for her to be here for another week.\" \n\nWe spoke for a few minutes and I handed the phone to Fiona. I went to lie on the bed and fell asleep. \n\nIt was early evening when I woke up, Jenny was holding me. What a nightmare. I thought she was dead and then I knew that Jenny was gone and it wasn't her holding me. I was a bit dopey until I realised that it was Fiona. I felt safe and loved. She was still asleep and must have pulled a blanket over us. I rolled to look at her. I had that feeling again, god she was beautiful. If only she were twenty years older or I was twenty years younger. \n\nShe opened her eyes and looked at me. \"Sorry I dozed off. You were crying when I came through and stopped when I gave you a hug. Want something to eat?\" \n\nThe days drifted along. We walked, we talked and entertained visitors. Jenny's colleagues, some senior ones and those that she worked with were here almost daily. John, his wife and Isha dropped in every couple of days. \n\nAnother week had passed and Fiona was still here so I sat her down. \"Fiona, I've loved having you here, but I worry that you should be home with your mum and sister. What's the deal?\" \n\nShe sat thinking for a half a minute and then she spoke clearly, \"Jane and I loved you from the minute we met you. Every time we came here it was great, we enjoyed being with you. You need a friend and I'm that friend. When you become someone's friend you can't turn it on and off. Right now I'm good for you. I'm not bored, I'm enjoying been here and I'm helping my good friend. Oh, one more thing, I want to stay longer but I need some clothes and other stuff.\" \n\n\"Are you really serious?\" \n\n\"Yes Milly, I feel like a grown-up, responsible. I know that you and Jess are the same age, but you're not my Mum, you're my friend.\" \n\n\"Thank you, I think that I love you.\" \n\nShe scowled at me. \"You only think that you love me?\" \n\n\"No, I love you like my niece, or my daughter or my friend. Thanks for being here. I'd love you to stay. Why don't we go and speak to your Mum and if she agrees we can bring your stuff back and you can stay for as long as you like.\" The truth was I had that thought again, if only... \n\nDifficult time \n\nWe drove south and I was nervous during the whole journey. \n\nBig sister ran out to meet us and we hugged. Jane kept hold of me and led me indoors. It was comforting to be in her arms. \n\nJess greeted me warmly. \"Thanks for bringing her home, Milly. I hope she wasn't any bother.\" \n\nShit, this might be tricky. \"She was great, I loved having her and I think that she may have something to ask you about that.\" Fiona appeared behind me. \n\n\"Mum, Milly is good, well better. I had a great time with her, I've loved helping her and looking after her, I felt grown-up, but...\" She chewed on her bottom lip, \"I came home to get some stuff, I want to go back and spend the rest of the summer with Milly.\" \n\nJess's jaw dropped and she swivelled to look at me. \"Jess, I thought that she wanted to come back for a couple more weeks and I wanted to ask you first. This is the first I've heard about all summer.\" \n\nFiona rounded on me, \"I never said a couple of weeks. You said as long as I wanted.\" She turned to Jess, \"Is there a problem?\" \n\n\"No, but I think that we're all surprised. What's going on?\" \n\n\"Mum, what the fuck? What are you thinking? What do you mean?\" I'd rarely heard Fiona like this. \n\n\"Forgive me for asking but ... No, I don't think anything is going on, it's just a bit... I don't know.\" \n\nJane chimed in. \"Mum, Fiona has been enjoying looking after Milly and being with her. What's the problem?\" \n\n\"You knew about this?\" \n\n\"Yes, Fiona spoke to me about it yesterday.\" \n\n\"This is all news to me.\" I was stunned. \"Look I don't want to cause any trouble here. I thought it might be okay and that's why I insisted that we do this face to face. Clearly, I was wrong. It might be better if I go.\" I wasn't really thinking, but I didn't like this situation so turned to walk away, picking up my bag as I headed for the door. I was running away; I'd done it before. \n\nI got halfway to the car before I heard Fiona's raised voice. She was screaming, she was so angry, it shook me. \"Mum, you'd better fix this right now. She's your friend, your best friend and right now you're being a complete bitch and I don't like it.\" I couldn't make out the rest, but it was heated. \n\nJane chased me down the path; I was in tears when she reached me. \"Milly, please come back, I can't stand you going like this, we all love you and I'm so proud of my little sister for what she's doing. Please!\" \n\n\"I can't Jane, your Mum doesn't like this and I can understand. Just let me go, I'll be fine.\" I opened my car door. I was broken again. I'd lost two people who I loved and now I'd caused a rift in the family of people who cared for me. I just wanted to go home, to be alone and let them heal the damage that I'd caused. \n\nJess opened the passenger door and got in. She hugged me, \"Milly, I'm so sorry. I know that Fi cares for you, we all do, but I'm her mother and I worry. Please forgive me, please!\" \n\n\"Jess, Fiona's been so good for me these last few weeks. I wanted her to stay but I realise that was selfish. I tried to make her realise that. I don't want to come between you.\" \n\nVictoria knocked on the car door. \"I gather there has been a bit of a fall out; Jane's just told me about it.\" \n\nI turned towards her, \"Victoria, I've caused enough trouble here, just let me go and leave me alone damn it!\" I snapped at her as I've rarely snapped at anyone, ever. She closed the door looking resigned and sad. As I started the engine Fiona appeared in front of the car and put her hands on the bonnet, tears streaming down her face, she stood there until I turned the engine off and then she got in. \"Milly, I'm so sorry that she's being like that. I loved being with you and I really do want to stay for longer, I think it would be good for both of us. Please, please come back in, please.\" \n\nThat was hard to resist and in any case, I probably wasn't in a fit state to drive safely. \"Okay let's go and talk about this.\" \n\nIt was an uncomfortable hour for all of us and it was Jane who acted as mediator, the voice of reason. I looked at her with pride; she was as determined and kind as her sister. We called a truce, but only because someone was going to damage their relationship with Fiona. \n\nI spent the next day with Jess and we had some very serious talks. By the time we were done, we'd both said some difficult things but we were laughing if only a little. ",
        "I decided that I should go to see my parents, with whom I'd had no contact for over ten years. Jane drove me over and said that she'd come to the house with me. The two of them must have seen us arriving and came to the door. My father had clearly still got a temper, \"What do you want here and who is she?\" \n\n\"Dad, this is Jane, my friend's daughter, and she kindly drove me here. I came to see how you were?\" \n\n\"Well, unless you tell me you're not a fucking pervert any longer, go away!\" \n\n\"I'm still a lesbian, dad, and will be all of my days.\" \n\n\"And you'll burn in hell!\" He slammed the door. \n\nJane was stunned and as we walked back to the car said, \"That went well.\" I laughed, a full-throated laugh. \n\n\"Thank you for everything Jane. You gave me so much with your visits and for years I regretted not having my own kids. I'd have wanted them to be like you and your sister.\" \n\nShe punched my shoulder, \"Liar, you wanted them to be like me, who would want a kid like her?\" \n\nI would, but I kept that thought to myself. \"Can you stop at the car spares place, please?\" \n\nGoing home \n\nThe next morning we put our bags in the boot, Fiona's keyboard was on the back seat and she fixed her bike onto the rack that I'd bought the previous day. There were lots of hugs as we said goodbye and as they were distracted I fixed something else. \n\n\"Thanks, Jess, Jane. Tell Victoria thanks as well. I'll look after Fiona or maybe the other way round.\" I waved and turned to Fiona, \"Catch.\" She caught the car keys that I tossed. She looked puzzled and I pointed to the L plates. I looked at the others as I got into the passenger seat and grinned. Fiona got in and adjusted the seat and mirrors. \n\n\"Am I covered on the insurance?\" \n\n\"Called them yesterday, all sorted. How many lessons have you had?\" \n\n\"Seven and had a couple more planned that I've had to cancel.\" \n\n\"Okay then. Different route home, we'll avoid the motorways where we can. It'll take longer but there's no rush is there.\" \n\nShe grinned at me, \"No. Thanks, Milly.\" \n\nJane was laughing as we drove off. \n\nIt was a bit nerve-racking as we crossed the city, but as we got out into the countryside Fiona gained in confidence and so did I. I didn't speak much; just let her concentrate until we got to the motorway where I took over. \n\nI told her that Jenny had arranged for some advanced driving lessons and taken me to a skid pan. It had improved my confidence and my driving. After talking for half an hour Fiona found an oldies CD and we spent the next hour singing at the tops of our voices. I loved it. \n\nWe had a quiet spell and I reflected on things that had been said. There was some truth to Jess's fears, Fiona was becoming more than my friend's daughter, but it was stupid and I needed to get a grip of myself. In reality, she was lifting me and without her, I would have slipped to a very bad place. She was infectious. \n\nWe stopped for a bite to eat and sat at a picnic table to enjoy the sun. Fiona made me forget the misery; maybe she was brighter than all of us because she seemed to know what was best for me. \n\nWe unpacked her stuff when we arrived home and got her properly set up in the guest room. I asked her to set up her keyboard in the sunroom where I'd be able to hear her play. We walked down to the pub, arm in arm, to get something to eat. The fight with Jess had been horrible, but I think that we'd, at least partly, resolved that and now the two of us were together for a few weeks at least, and that gave me hope. \n\nAs we ate I watched Fiona and she knew that I was doing so. She'd grown up so much over the years and was developing into a beautiful young lady. She was also obviously clever and very caring. She grinned at me and when I smiled back, I knew that I was going to enjoy her company. \n\nOver the next couple of days, Fiona went out on her bike and gradually increased the length of her rides. She came back smiling but worn out. She told me that she felt so much better for the exercise and enjoyed the new scenery. It was good to see her happy, but while she was away I was at my worst and would spend a good deal of time crying or simply just sad. I was sure that she knew how I was and that she thought it would help me in the long run. \n\nShe liked the climbing wall because it was a different challenge. I liked to go with her and always took my book, but I rarely even opened it, instead, I would sit with a coffee and watch her. She was so keen on climbing that she'd bought herself some proper shoes and a pair of trousers that stopped just below her knees and fitted tight. Seeing her stretch for the next hand or foothold emphasised her physique and I realised that she had a very well toned and muscled body. Each time she started she tried to improve and the effort that she was making could clearly be seen. I needed to be careful because watching her was enthralling. \n\nFiona would play the piano and I'd just sit and listen. On the third afternoon, she suggested that I start sketching whilst she played. She was right of course, somehow it inspired me to draw and I found that I stroked in time with her playing. I drew her at her keyboard. She admired it and then I put it away, it was mine and I was keeping it for myself. \n\nWe drifted along over those next few weeks, walking, talking and cooking together. I missed Jenny dreadfully, I'd loved her very much and I knew that if Fiona had not been with me, my life would have been bleak. \n\nSummer ends \n\nJess put Fiona under some pressure to return home at least a week before school restarted, but she resisted. It was on a Thursday morning that we set off. I had a heavy heart but tried to be cheerful and we had a few laughs during the drive. Jane greeted us with open arms and a cheery smile. I could see that Jess had some concerns, but she didn't voice them, at least not to me. \n\nIt had been a somewhat strained evening or so I felt. I decided that I'd leave the following morning and they seemed surprised that I wanted to go, but I made up some excuse. They escorted me to the car where I received hugs and kisses. Fiona hung back until last and gave me a big hug, as she did so she whispered, \"Call me often and any time you feel low. If you need anything, remember I'm your friend and I'll come.\" \n\nI got about a mile before I pulled over to into a lay-by and sobbed. I was going to miss her terribly and if she'd stayed much longer I may have done or said something stupid. I'd been back on the road for about an hour when my phone rang. It was Jane, \"Are you okay Milly?\" \n\n\"Yes, just a bit sad. I'm going to miss your sister. I don't know how I'd have coped if it hadn't been for her.\" \n\n\"Your baby sitter has locked herself in our bedroom and is in floods of tears. I'm trying to keep the adults at bay; she's going to miss you too.\" \n\nI don't think that I had dry eyes all the way home. The house seemed empty and far less cheerful. There was no keyboard and an empty seat at dinner. \n\nI changed the bed that Fiona had used the next morning and found her note under the pillow. \n\n\"My dearest Milly, \n\nThank you for letting me spend time with you. I wanted to assist and comfort you by staying. I hope that I was able to do that. But you helped me as well, it allowed me to grow up and mature a little. You changed from the adopted aunt, that you had been for years, into my friend, a good friend and I hope that we can remain friends for a long time. Call me if you need a chat or anything else. \n\nLots of love Fiona, X \n\nMy tears had fallen onto the page and some of the ink had run before I got to the end. I don't know if she'd left a nightshirt deliberately or not, but I took it to my room and put it under my pillow. I found another shirt and a couple of pairs of pants in the laundry hamper. I'd keep them for when she came back. I hoped that it wouldn't be too long. \n\nAfter dinner, the phone rang. It was her. \"Milly, thanks for the gift, I found it today. It's lovely and I'm wearing it now.\" We chatted for a while and I thanked her for the note, I didn't mention the nightshirt. I'd seen the bracelet when I was out shopping, one of those modern ones that you could add charms to. I'd added some stones; a cube with the letter 'F' and a small heart. \n\nThat night I pulled the T-shirt from under my pillow and buried my face in it sobbing. I'd lost Jenny and Fiona had helped me through that and now she was gone as well. I wanted her back here with me. If she was here my world would be okay, but she was gone to where she had to be. I pulled the shirt on and slept in it for a week before I had to launder it and I wore it every night for weeks. \n\nDuring one of our regular conversations, she told me that a teacher had challenged her about wearing the bracelet to school. When she refused to remove it, she'd been threatened with detention. She'd been in detention three times that week before they relented. \n\nHalf-term \n\nI'd struggled for a few weeks until I resolved to get on with my life. But I missed Jenny and remained sad a lot of the time. \n\nIn early October Jess called me and after the usual enquires about health, work and an exchange of gossip, she changed the subject. \"Milly, Jane's been badgering me for a few days, the two of them want to come up for a couple of days at half-term, to keep you company.\" \n\n\"I'd love to have them, it'll be a pleasure.\" I whooped with delight as soon as I put the phone down. \n\nTwo hours later I got a simple text - 'see you soon, x.' My reply was equally brief - 'great x.' \n\nI drove to Penrith to meet their train and I fidgeted in my seat all the way. I was early, but it didn't matter, I stood on the platform watching the arrivals board hopping from leg to leg. The train pulled in and Jane ran into my arms, Fiona stood back watching until Jane let me go. Then she scooped me up spun me around and I heard her whisper, \"Thank god!\" \n\nThe next three days had me behaving like a teenager, actually, all three of us behaved like teenagers, but at least they had an excuse - idiotic fun, laughs and lots of cuddles. \n\nI was sad to drop them off back at the station, but the time that they'd been with me had been marvellous, it had cheered me up and I was so grateful. \n\nChristmas \n\nThe train south was busy because of people either trying to get home or to visit loved ones for Christmas, just like me. I had to change trains; it was made more awkward because I had a large suitcase and a bloody great parcel. I should have driven, but I'd been concerned about the weather. \n\nI managed to get a taxi and fit all of my stuff inside. It was a struggle to get it all out again, but Jess came to my rescue and when she saw everything that I had she said, \"I thought you were only staying a few days, not moving in!\" \n\n\"The train seemed like a good idea until I set off. But don't worry, most of it is gifts.\" \n\nJess and I sat chatting and drinking coffee until Victoria came home and gave me a hug. The girls followed soon after, dragging lots of bags with food and other packages. I got a hug from them both, during which Fiona, at least I think it was her, pinched my bum. I smiled inwardly. \n\nAfter a fun evening with lots of wine and good humour, I was up early with another smile the following day. Jess and I started the preparation for dinner and our Christmas feast; we made pate, trifle, soup and lots of nibbles. I had a little time for myself to finish some wrapping and was just about finished when there was a gentle knock at the door. Fiona stuck her head around it and when I nodded she came in. I sat on a pillow at the head of the bed with my legs tucked under me. Fiona lay on her side with her head propped on her arm at the foot of the bed. We chatted about school, her latest climbing adventures, her detentions and thoughts about University. She asked me about village life and my sketching. There was another polite knock and Jess came in. \n\n\"Here you are. You've been gone for over an hour.\" \n\n\"Sorry, Mum we were catching up on village life and school.\" The truth is we'd become completely wrapped up in our own world. \n\nWe spent the evening in front of a big fire. The coffee table was laden with nibbles and there were a couple of bottles of champagne. There were also plenty of jokes and Fiona told tale after tale about the time that we'd spent during the summer, most of them poking fun at me and some were actually true. We played some stupid games and then we went through to sit near to Fiona's keyboard. She struck up playing and Jane joined in on her guitar. They played several songs and we sang along, badly, laughing, possibly because of the alcohol. \n\nI headed to bed in a really happy place and had just got into bed when Jane and Fiona arrived. We resumed the positions that we'd been in during the afternoon, but with Jane resting her head on my lap. We chatted about all sorts of things until we realised that it was almost 1 am. We had a hug and said goodnight. Jane left the room and Fiona closed the door behind her. She came to me and gave me another hug, kissed my cheek and said, \"I'm glad you're here, I've missed you.\" With that she turned and left, leaving me speechless. I didn't dream about Jenny that night and I felt guilty about it. \n\nJess and I took care of the cooking, the girls sorted out the table and Victoria made drinks, champagne cocktails with breakfast, sherry at midday, wine before and during lunch. Karen came to join us; she was the owner of the computer software company that Fiona had connections with and a long-standing family friend. \n\nLunch was great; there was plenty of food, a never-ending supply of wine and most importantly a lot of good humour. Jane and Fiona cleared the table and left the four of us talking. I spent about twenty minutes with Karen who asked about how I'd coped over the last few months. Strangely it wasn't painful and I enjoyed recounting tales of my time with Jenny. \n\nVictoria produced more champagne and made some cocktails before we sat to exchange gifts. My suitcase had been full of them; a large leather shoulder bag for Jess (there were a few gasps when they saw the trendy makers name), a long silk scarf, leather gloves and a very modern statement brooch for Victoria, a pair of earrings by an up and coming local jeweller in Windermere for Karen. I gave Jane some earrings and the very soft waist-length leather jacket that she'd admired and tried on during her visit in October. Her face was priceless, it was a beautiful garment and we all commented how well it suited her. Of course, she told me that I was too generous, the truth was that I owed her far more than the money that I'd spent on the jacket. \n\nFiona was last and I'd struggled with her until I remembered the watch that I'd given to Alex so many years ago. Fiona was all girl, everything she wore was feminine, but she too liked a chunky watch and I'd found just the thing. It was a ladies Omega Seamaster, robust, a slightly smaller version of the man's model and more suited to a ladies wrist. It was stainless steel with a pearl face and at first glance it looked like a nice, ordinary, watch until you studied it and then you realised that it was a quality timepiece. \n\nI looked around the room before I spoke, \"Fiona, I cannot tell you how much I appreciated your help and company earlier this year. Without you being there for me I'm sure that I'd still be in a dark place instead of here laughing and enjoying myself. I struggled with what to give you until I saw this. It's not just a Christmas gift, but also to thank you for that help.\" \n\nShe pulled the paper off and gasped when she saw the name on the box. Her eyes bulged when she saw the contents, her mouth opened, then she smiled that impish smile and simply said, \"Thanks, Milly.\" \n\nJess gasped and, as I expected, said, \"That's too generous, all of our gifts are too much.\" \n\n\"Nonsense, without all of you I wouldn't have survived and finding the things to show you how much I love you and appreciate your support was lots of fun for me. Worth all the hassle of dragging them on the train.\" \n\nJess and Victoria gave me a very smart coat and the girls gave me a lovely brown leather handbag with matching gloves. \n\nIt was Victoria who asked, \"So what's in the big parcel?\" \n\n\"Ah, that's for you and Jess. It's behind the couch.\" Jane dragged it over and Jess helped Victoria to unwrap it. They gasped as they stood back staring at the large picture frame, or more precisely the picture in the frame. It was a sketch that I'd done almost a year ago. It depicted Fiona sitting on the top rail of a stile with her sister leaning against it, next to her. It captured the two of them smiling and looking very happy. I thought that it was one of my best pieces of work and I was very proud of it. \n\n\"Bloody hell Milly, that's stunning,\" Jess said as she stared at it in astonishment. \n\nFiona turned to Jane and with a wry smile said, \"You need to get Milly on a retainer, she's managed to make you good looking!\" The two of them ended up fighting with cushions and rolling about the floor laughing. \n\nJess turned to me, \"Milly, I love my bag a great deal and I know that it cost a fortune. But that picture is worth so much more. Thank you so much.\" I got a big hug. \n\n\"Actually if you did want to sell it I might be able to get three or four thousand for a Milly Scott original. But it might fetch more if the subjects had been better looking.\" The next thing I knew I was on the floor with the two of them on top of me and tickling me. \n\nVictoria was grinning as she watched and asked, \"Is that how they normally behave when they're with you, Milly?\" \n\nI managed to partly extricate myself and smiled as I said, \"Sometimes.\" \n\nLater that evening when things were a bit quieter and I was alone with Fiona I passed her a little box that contained another charm for her bracelet, it was an amber stone with a very small bug in it. She gave me a little felt bag containing a simple gold link bracelet. There was a very small flat gold circle next to the clasp. On one side it said my name and on the other it said hers. You would need to get very close to be able to read it and she said quietly, \"That's our secret, the same as the engraving on the watch.\" \n\nShe slipped away and I went to bed. She'd obviously seen the engraving on the back of the watch case - 'Fiona, Love, Milly x' I fastened the chain around my right wrist and it sat below the bracelet that Alex had given me that I couldn't take off, even if I'd wanted to. The engraving would be my secret. I got into bed and just before turning off the light I looked at it again and felt tears. If only. \n\nA couple of days later Jane and Fiona took me to the station. Jane stayed with the car; Fiona walked me to the platform. As the train pulled in she held me close and said softly, \"It might be a while, but phone me often. Remember that we're friends and I'll be there, wherever that is if you need me. She went to kiss my cheek, I moved and we ended kissing lip to lip. We both looked a little shocked, but I turned away and got on the train. \n\nI waved from the window, as she disappeared from view I wept again. An older lady looked over at me and asked, \"Was that your daughter?\" \n\n\"No, she's my best friend's daughter. I used to be her adopted aunt, but I had a tragedy a year ago and she helped me through it. Now she's my friend, my very good friend.\" \n\nI turned away from the lady and looked out of the window thinking - 'But if she were older or...' I did not finish the thought. \n\nTime moves on \n\nFiona and I spoke on the phone every week, sometimes more often. Occasionally I'd speak to Jane and on one occasion she said, \"I love Fiona's watch, nice gift, I like the engraving too.\" I didn't respond. Later Fiona admitted that she'd shown the engraving to Jane but told me that she'd never show it to anyone else. She wore it every day and it was widely admired. She laughed as she also told me that several people had asked who'd given it to her. \"I tell a different story to everyone who asks; boyfriend, girlfriend, aunt, mother, sister, lover, won it in a raffle, sugar daddy, stole it. Not all of them are lies.\" ",
        "No, I thought afterwards. But which ones were true? \n\nFiona had been right. I didn't see either of them until Easter. Jess called and told me that the girls had thought about coming up for a few days. I tried it play it cool and I hope that I got away with it. I was looking forward to seeing them both, but I had to admit that it was Fiona who I missed the most. \n\nAs usual, they came clattering in creating havoc. But there were hugs and big smiles. Within two hours it was as if they were at home. I cooked whilst they gave me their news and I let them leaf through some of my recent work. We drank far too much wine that evening as we fooled around. I felt half my age with these two. \n\nTen minutes after climbing into bed the door opened, they dashed in and were under the duvet before I could speak. \"Don't tell me you two are homesick?\" \n\n\"No just mischievous!\" They both laughed. Fiona cuddled into Jane's back and I spooned against Fiona. Heaven! \n\nThey didn't have their bikes, so the next day we all went to the climbing wall. I watched in awe as the two of them competed for almost two hours. When they were finished they were smiling, sweaty and had given everything. We bought papers on the way home and sat reading. \n\nLater it got more boisterous and the joking started again. Jane was cutting up some strawberries when Fiona said something that earned a strawberry thrown in her direction. It missed, so Jane smeared another one on her face. When I objected she did the same to me. Fiona grabbed several, raised the hem of Jane's skirt and shoved them down the back of her knickers. I was about to object when she did the same to me. The gloves were off now, I threw the knife into the sink for safety, lifted the bowl and Jane grabbed Fiona's arms. There were strawberries in her pants, down her bra and across her face. We let her go and laughing, she grabbed my ankle. I fell to the floor and they both smeared strawberries over every exposed piece of flesh. \n\nThe three of us lay there laughing, our clothes were covered, the counters and floor a mess, and as Jane pointed out, we had no strawberries! We worked together to clean up and then took it in turns to shower. I loaded the washing machine and we came together again in the lounge wearing T-shirts and shorts. We ate strawberry ice cream, without the strawberries, but actually, I'd enjoyed them more than if we'd eaten them. We watched TV sat together under a large throw, one of them on either side of me. Almost a year ago I was in despair and here I was as happy as I'd been for a very long time. Years ago Fiona had joked about keeping me locked up under their bed; I'd love to lock these two in my house. \n\nIt was raining the next day and we planned to go out later on and then to the pub for dinner. Fiona was reading something and then went to fetch her laptop. She had her head down concentrating before showing something to Jane. \"Milly, how far is Lancaster from here?\" \n\n\"I think it's about 40 miles, 50 minutes to an hour depending on the traffic. Why?\" \n\n\"They offer the course that I want to do and they seem to have a good reputation.\" She left the room and I heard her talking on the phone for a while. \n\nShe came back through to the lounge and looked at Jane. \"Wednesday would be good, can we stay until Thursday?\" I saw Jane nod and they both looked at me. \n\n\"What? Do you want to stay an extra night? You can stay as long as you like, at any time. I love you being here.\" I got a kiss on the cheek and she left again. \n\nTen minutes later she was back. \"Mum says okay.\" She turned to me, \"I need to go to the University on Wednesday. I'm going to meet some of the staff. Lancaster is a possibility.\" \n\nI felt a twitch as I spoke, \"I thought you were considering London with Jane, or Manchester?\" \n\nShe looked surprised, \"Ah, you don't want me?\" \n\n\"Don't be stupid, you're always welcome here. But the most important thing is that you go to the best place to get a degree and education that you need.\" \n\nMy mind was in a complete whirl as I said to myself, but if you want to come to Lancaster and I can spend lots of time with you, please, please do it. \n\nWe all decided to head into Lancaster and after dropping Fiona off, Jane and I went shopping. We went a bit mad. Jane tried on a dress that looked stunning on her and we managed to find some high heels. \"You'll slay them in that,\" I told her. I got lots of things that I needed and a pile of stuff for Fiona, including a pair of jeans, some heels and a gorgeous silk blouse. \n\nJane and I had a long lunch, talked about her Mum and Victoria, and her love life, which was a little troubled. When Fiona phoned us to say she was finished we went to collect her and during the drive home, she shared her thoughts. She was clearly excited about the prospect of attending Lancaster University. \n\nWe changed to head out for dinner. I managed to get into a pair of jeans that were close-fitting, a light sweater and some heels. Jane decided to wear her new dress and heels; she looked astonishing, maybe more than a bit overdressed for our pub. We waited for a few minutes and then Fiona appeared on the stairs. She'd managed to get into the jeans, how, I have no idea, she wore the heels and the blouse and suddenly I felt frumpy. Both Jane and I sucked in a breath and she summed it up, \"Bloody hell, Fi, you'll be fighting them off in those jeans.\" \n\nThe three of us walked arm in arm to the pub and as we entered there was a sudden silence as the customers looked round. We must have made quite an impression and I felt proud of my girls. If only they really were mine. \n\nI gave them both a hug the next morning and waved them away with a heavy heart yet again. No note, no nightshirt this time. When would I see them again? I had no idea. \n\nTwo days later I was sitting having a cuppa and staring out of the window thinking. Would Fiona come to study in Lancaster? I might get to see her a few times, take her to dinner, maybe she would come to visit? Suddenly I realised that I was having the most inappropriate thought - a switch had been tripped, I wanted her sexually. After a minute or two I sat totally ashamed, what a horrible person, preying on a young girl, my almost niece. I was disgusted with myself. \n\nBarcelona \n\nI'd puzzled over what to give Fiona for her 18<sup>th</sup> birthday and she didn't give me many clues. I enlisted the help of Jess and Jane and I suggested a few days city break. It turns out that Fiona and Jane had spoken about going to Barcelona. Jess thought it a good idea, but I sensed something amiss so I asked her what was wrong. \n\n\"I'm sure that Jane and Fiona would love a break together. The two of them are responsible and it's not as if I can't afford it. So why do you seem reluctant?\" \n\n\"It's too generous Milly.\" \n\n\"I'm not hurting for money Jess, I'm better off than I've ever been and I've no one else to spend it on.\" \n\nI spent a while on the phone to Jane planning the trip. Something that she said made me realise that Jess thought that I'd intended to go with Fiona. I would've loved that but it wouldn't have been wise on many levels. \n\nFiona phoned me on her birthday to thank me for her card and the charm that I'd sent, \"You imply that there is something else?\" \n\n\"Wait until Thursday, Jane will fill you in.\" I silently giggled. We spoke about her exams and plans for the summer. I confess I was disappointed that they would not be visiting. But Jane was heading off on a guitar workshop and Fiona had plans to work as an intern for Karen doing some computer programming work that would stand her in good stead for university. \n\nI got a text message as they were about to board the flight to Barcelona\u00be'Milly, what a treat, thanks a million. I love you loads and loads.' I sat on my bed thinking if only, but it was pointless. \n\nActually, the next few days were fun. Fiona sent me lots of photos of the sights and of what they'd been doing; they seemed to be having a good time. My phone pinged about 1 am on Sunday morning with a message apologising for it being so late, they'd just got back to the hotel to access the internet and had forwarded a video. It was the two of them singing 'Barcelona' in front of the 'Magic Fountain' whilst a recording of Freddy Mercury played over the PA system. I laughed, sent back a reply and then shed a tear or two. I realised that I was jealous of Jess, something that was completely new to me. \n\nI was sitting in the sun one afternoon with a cup of tea when I heard a sound that seemed to come from inside the house. It made me jump, I was sure the door was locked and there was only the one other key that the girls had\u00besurely it couldn't be. It was, I knew that smile very well. \n\n\"Fiona, you little shit, you scared me half to death. What are you doing here? Why didn't you call me?\" She took my hand. \n\n\"Not pleased to see me then?\" Eyes flashing with a big grin, \"Want me to go?\" \n\nNo bloody chance, I grabbed her with both hands around her neck and fell against her chest. After half a minute or so I released her and took her by the hand leading her outside. I told her not to move and went to fetch a cold drink. \n\n\"So, what are you doing here? How long are you staying? How was Barcelona\u00beI want the details?\" \n\n\"I had to come to Lancaster to finalise some stuff. As far as Jess knows I'm staying in the halls tonight. But I got everything done sooner than I expected and I decided to surprise you.\" \n\n\"It's a lovely surprise. You could have told me and I'd have met you for dinner or something but I'm glad you decided to come. Why aren't you telling your mum?\" \n\n\"I'm not sure; I just thought that she didn't need to know. Will you tell her?\" \n\n\"I don't like lies, but no I won't tell her. Have you decided to come to Lancaster?\" The very thought made me shiver. \n\n\"Yes. I was going to tell you once it was settled, which it is now. I'll stay in the dorms and maybe come here some weekends if you'll have me?\" \n\n\"Let me see, you'll want decent food, some laundry done, to borrow some money, that sort of thing?\" She nodded. \"I'd love it and you know it. You already have your own key.\" \n\nWe talked for ages then walked to the pub for dinner. Then talked some more. It was after midnight when we went to bed and I had to lend her a nightshirt. Of course, I stupidly gave her one that she'd left behind so long ago. \"Have you been wearing this?\" \n\n\"No!\" \n\n\"You liar.\" She grinned at me. \n\nI slept well that night but I was up early and wanted to make the most of every minute that she was there. I could sleep at any time. Still, she set off early and although I didn't want her to go, just having those few hours with her was a bonus.  \n\nOnce again I sat with tea, thinking. Would I see her? Could I trust myself around her? She was quite gorgeous, very smart and such a lovely person. She liked me and enjoyed my company, which was obvious, but anything more was a stupid fantasy, surely? I need to stop torturing myself with this idiocy. \n\nLondon visit \n\nA couple of weeks later Jess phoned me. After catching up on gossip she told me that Fiona had been up to Lancaster and had been surprised that she'd not come to visit me. I told her that she'd mentioned it when I last spoke to her. I was not comfortable with this. \n\n\"Well, you know that she's going there and will be living in the dorm. I wanted to ask, that as you are close, would you be able to help her out if she had a problem and I guess that she might want to spend a weekend with you sometime during the year.\" \n\n\"Of course I'd be there for her. It would repay her kindness to me and both of them are welcome here any time, you all are.\" \n\nI'd received a call from the London gallery owner who'd shown my work a few times. One of the artists who'd been invited to show his work had pulled out at short notice and did I want to take the place? It was a good chance to earn some money so I snapped up the invite. \n\nA few days later the paperwork arrived along with two invitations to lunch and the gallery show. \n\nI decided to invite Jess and gave her a call. \"Sorry, Milly I have an event at the salon the same day. I know that Fiona's away then for a visit as part of her internship, sorry.\" \n\n\"What about Jane?\" \n\n\"That would be nice; I'll ask her to call you later.\" \n\nJane did call, agreed to come with me and suggested meeting me in London. \n\nShe was standing on the platform when I arrived. Tight T-shirt, tight jeans, heels and her leather jacket - she looked stunning and the three guys standing nearby seemed to think so as well judging by the way that they were ogling her. We hugged and set off by taxi. \n\nWe were sharing a really nice hotel room in the centre of London. Jane surprised me with tickets to see the musical Mamma Mia in the West End that evening and we went for a late supper afterwards. As we walked back to the hotel we sang some of the show songs, it had been a great evening. We were sitting in the room with a nightcap when she told me, \"Fiona was gutted when she heard about this.\" \n\n\"That's a shame, but I didn't ask her. I asked Jess first and when she declined I thought of you.\" \n\n\"Nothing to do with the fact that Fiona is away?\" \n\n\"I didn't know that.\" I was defensive. \n\nShe shook her head. \"Milly, really?\" God she knew! \n\nWe went for lunch at some very fancy place with some other exhibitors and although the food was great we were still hungry when we left and had imbibed several glasses of wine. We spent two hours shopping; both bought new dresses for the evening and then went on the hunt for some new underwear. \n\nAfter a plate of sandwiches in our room, we got dressed up. I'd spent a small fortune on underwear for both of us and I had to help Jane get the seams of her stockings straight. Then we stood before the mirror, \"Shit, Milly we look bloody good, sexy!\" \n\n\"Well, I agree that we look good, but I think it's you who looks sexy.\" \n\nThe look on her face was one of incredulity. \"Milly, just because you're twice my age doesn't mean that you're not one foxy lady, we could both pull tonight.\" By the time we slipped into our new dresses and heels I was tempted to agree with her. But the truth was the woman standing next to me was going to turn the heads of every man we encountered and, I suspected, a few women. \n\nThe gallery showing was very well attended. My work seemed to attract lots of interest and comment. A few displayed sold stickers very quickly. Jane and I circulated and chatted. People kept asking if we were related and she jumped in quickly almost every time. It seems that I was her mother, aunt, older sister, friend and, on one occasion, lover. I narrowly managed to avoid spitting a mouthful of wine on the man who asked the question and I quickly corrected her answer. \n\nBy the end of the show I'd signed dozens of brochures, all of my work had sold and I'd had far too much wine. By the time we reached our room, I'd gone from being merry to drunk. Jane had kept up with me and she performed a striptease. I sat laughing my head off; I have no idea why because people would have paid a great deal of money to see that show. I undressed and threw my clothes onto a chair and climbed into bed wearing my knickers. Jane leaned over, kissed my forehead and thanked me for a fun day. Two minutes later she slipped in next to me and grabbed me around the waist. She held me tight and fell asleep almost instantly. \n\nJane looked a bit sheepish when she woke. \"Maybe I had a bit too much to drink and shouldn't have done that. It was fun when we were kids, but maybe I'm too old now.\" \n\nI looked at her. \"Maybe you are, but it didn't bother me and I liked being held. I miss it.\" \n\n\"You mean Jenny?\" \n\n\"Yes, I loved her holding me in bed, but you and Fiona have both done it, it feels comforting somehow. It doesn't have to be sexual, but perhaps you could remember not to rub your tits against me next time and we'll be okay.\" \n\n\"You liked that then?\" She laughed and dived out of bed. \n\nBreakfast helped us fend off the headaches before we headed to the station. I was staying with Jess overnight. Jane sat opposite me on the train watching the countryside flash by as I studied her. She'd matured into a beautiful young woman, but underneath it, there seemed to be an element of sadness about her. \n\n\"Jane, I know it's none of my business, but you've never mentioned a girlfriend or boyfriend?\" \n\n\"You know my feelings about boys after our conversations. I've tried boyfriends twice because I thought that I should and it didn't go well, we never got as far as sex.\" She was deep in thought and then turned to face me, \"I've slept with two girls, but it wasn't special. I know from what Jess and Victoria have told me that sex should be incredible, so there's something missing.\" \n\n\"I had boyfriends a long time ago and it was so, so. Then I met Alex, as you know, and your mum's right, incredible. But not every time, sometimes it's just nice and loving. With Jenny, it was incredibly loving and caring. It was very special, never as, I don't know, daring? I've said too much. There's someone though?\" \n\nShe looked at me and I could see her thinking. \"This has to be between us,\" I nodded, \"There is someone, someone very special, but she has no idea and I can't tell her, it could never work. I'll meet someone else eventually.\" \n\nI sat thinking about what she has just told me. It wasn't me, was it? No, no it wasn't me. There was something though. \n\nShe looked at me again, \"Tell me how you're doing really; it's been just over a year since you lost Jenny?\" \n\n\"I miss her a lot. I miss having someone to hold, to talk to. She made me laugh with some of the things that she'd seen and was passionate about her work. I loved hearing her tell stories. I miss her brushing my hair. But I don't cry very often anymore.\" The truth is I did cry a lot, but that was because I missed the girl opposite me and her sister. \"I'm doing okay and most of that is due to you and Fiona. You both make me smile even when you're not there.\" \n\n\"I've had a great time in the last couple of days, but would you really have preferred to go with Fiona?\" \n\nI gave her steely a look. \"No, you were my first thought after Jess couldn't go.\" \n\n\"But you do feel close to her?\" \n\n\"Yes, I admit that there's a connection with her.\" The way Jane looked at me I got the feeling that there was something more, but she remained silent. \n\nVictoria greeted us and we talked about the trip. When Jess arrived home from work I suggested that I take them out to dinner. \"Jane and I could show you the fancy outfits that we wore last night.\" \n\nJess gasped when I walked in. \"You look bloody gorgeous Milly. They must have been drooling last night.\" I felt good, but the two of them were looking great as well. \n\n\"They were, but it wasn't at me, it was your daughter, wait until you...\" As she walked in, the purple dress hugged every part of Jane's body. It was low enough to show that there was something interesting just hidden. It exaggerated her already slim waist and was cut to show her knees. It should have been decent, but somehow it screamed sex appeal. \n\n\"Can you check my seams, Milly?\" She saw the look on Jess's face, \"What? We bought fancy undies and I'm wearing seams. They need to be straight.\" \n\n\"And skyscraper heels! Jane, I'm so proud of you, you're gorgeous. As for you Milly Scott, I don't know if I should thank you for encouraging her or beat you for the same thing. We need a picture to send to Fiona.\" \n\nI cringed and wished that she wouldn't. \n\nThe four of us turned heads in the restaurant. No wonder, I hate to blow my own trumpet too loudly, but we made quite a sight. Halfway through dinner, I heard my phone ping, but I waited. When I did manage to look at the message it just said\u00be'Traitor, knew I was second favourite! X'. I laughed and Victoria asked me what it was. ",
        "\"Nothing. Just a funny message from a friend.\" It was the truth, but only just. \n\nI didn't see Fiona whilst I was there and I was more disappointed than I expected to be. \n\nUniversity commences \n\nIt was the day that Fiona was heading for the University and I thought about her. She was just rather wonderful and I was in love. I'd always loved her, but this was different, it went much further. It didn't matter, there was no way that it could work and there was no way that she felt the same way about me. I would just have to be grateful to have her as my friend and see her from time to time. \n\nI didn't hear from Fiona for another two days when she called to tell me that she'd settled in and was getting to know the other people in her dorm. There were a couple of weeks of parties and events to attend and she was going to get involved. She sounded excited. \n\nAfter the call ended I was devastated, I wanted to see her so badly. I sat brooding. I was going to have to be very careful over the next few years, or there was every chance that I could spoil our friendship. \n\nShe called me twice before the lectures started properly. She was fine and having fun, more than I was. I did some very moody sketches over those two weeks and I cleaned a lot; I found that scrubbing was good therapy. \n\nAfter her first week, it was clear that she loved the course and she was meeting a group of her classmates for an evening out. I went to the pub that same evening and sat sipping at my beer a little miserable, selfish and jealous. \n\nI heard nothing all week until Friday lunchtime when I got a message\u00be'Can I visit?' My reply was brief\u00be'Great.' Would it be great? \n\nI heard her car and my heart was almost bursting from my chest. She came in wearing those damn jeans, heels, her hair in a loose bun, lip gloss and a white button-down collar man's style shirt with the sleeves rolled up to the elbows and tucked into her jeans, although how she'd managed that I wasn't sure. Stunning; even more beautiful than her sister had been in a dress that had cost a fortune. \n\nShe grabbed me, lifted me and kissed me on the cheek, my forehead and the lips. Then she put me down. \"Missed me?\" I asked. \n\n\"Nah, not really.\" She grinned at me, \"Yes I have and I tried to resist coming so that I could get involved in stuff. I wanted to come.\" \n\n\"You did the right thing, but you're here now.\" I poured us wine and we sat. \n\n\"So traitor, do you have a thing going with my sister?\" \n\n\"No, why do you ask?\" \n\n\"Well she told me about your trip; over and over, it sounded like you two had fun, I was jealous. Never mind the photo.\" \n\n\"We did have fun, it was great and I loved being with her. I wish that I could spend more time with her, with both of you. She has a thing for someone, but won't tell who and, apparently, can't tell the person, it's not me and in any case, I'm far too old for her.\" \n\n\"I know, she won't tell me either and that's puzzling because we share everything. By the way, you're not too old for anything or anyone.\" \n\nAfter a pub meal, we sat talking long into the evening before we went up to bed. I threw her one of my nightshirts and she laughed when she saw that I was still wearing the one that she'd left behind. \n\n\"You know that Jane and I slept together in London?\" \n\nHer head spun so fast I thought it might detach. \"What?\" There was a look of something, jealousy? Don't be daft I told myself. \n\n\"She held me; it was great, nothing else.\" \n\nShe strode over and with real authority pushed me on the bed. Shit, what was she doing? \n\n\"I can do that too.\" She spooned in behind me and it was wonderful, but I decided not to tell her that we'd been topless as well. \n\nThere was a little embarrassment the next morning and we didn't mention our sleeping arrangements. We went for a long walk and then wandered through Ambleside. I'd noticed a couple of people looking at me and at first, I thought maybe they'd recognised my picture from the gallery, it happened from time to time. Then it dawned on me that we'd been holding hands and from our behaviour, we obviously didn't look like a mother and daughter. If Fiona noticed she didn't care. \n\nWe slept in separate rooms that night. \n\nSunday was spent as we often had in the past with the newspapers, casual chat and lunch at the pub. Then she had to go. \"Don't be a stranger,\" I said as I waved her goodbye. I was as happy as I'd been in weeks. I didn't have stupid unrealistic fantasies about sex. I simply cherished being with her, as much as it could ever be. \n\nShe didn't come to visit for two weeks and when she did, we simply repeated what we had done on her first weekend visit. \n\nFiona arrived again the following Friday and stayed until early Monday morning, having realised that as long as she could put aside a couple of hours to study over the weekend, it would be okay to stay a third night. I told her to bring her laundry so that she didn't have to bother with it; during the weekdays I batch cooked and would send her off with a couple of decent meals. \n\nMost weekends we followed the same pattern; Friday dinner in the pub, walking on Saturday or Sunday, reading the papers, and chatting. We either had dinner out on a Saturday or we would watch TV under a throw. It was a dream come true for me and I could have lived like that forever. \n\nOne weekend I heard her on the phone, talking to Jess. \"No, I decided to come and see Milly this weekend, it's been a while since I saw her. No, she's fine, busy with work.\" \n\nThat evening I asked her about the call. \"For some reason, I didn't want to tell her that I'd been here most weekends. I hate lying too, but...\" \n\n\"Come on what is it? She was suspicious of us last year, but there's nothing to be suspicious of,\" I gave her a steely look, \"is there?\" \n\n\"No, no of course not. I just love being here with you. I always have, it's nice, homely, being here has helped me to grow up and you're good fun to be around. You seem to like me being here.\" \n\nI was sure that there was something else that she didn't say. \"I love you being here, I've always loved having the two of you to stay, all the more since Jenny died. I love the company and fun. I never thought that I'd have kids, but in the last two years, I realised that I've missed out on something. I'd have loved if you two had been mine.\" I felt a tear and she wiped it away with her thumb. \n\n\"I told you that I was your friend and I always will be. Being here these weekends has been great; somehow it's helped me with studying.\" \n\n\"I'll do anything to help you with your studies, anything. At the moment it's the most important thing to me so that you go on to achieve great things I can say, 'That's my niece, my friend'.\" \n\n\"Thanks, Milly, I love you.\" Yes and I love you too, but I can never tell you just how much. \n\nChristmas again \n\nThe Christmas break was coming and I knew that Fiona would go home. I'd not been invited this year and that was okay by me. I waved Fiona off early on Monday morning and knew that at the end of the week she would head south instead of back to me. It was the right thing, but it was going to be a long few weeks. \n\nI kept busy with my work, did some picture signings and helped Alan with his project. I decided to take him out to dinner, to a fancy restaurant and I got dressed up. When I looked in the mirror I was happy with what I saw, mid-forties, but I still had 'it' and laughed at myself. Alan looked stunned when I walked in and he looked around to check and see if anyone had noticed how lucky he was. \n\n\"So Milly, what did I do to deserve the honour of a nice dinner with the most beautiful woman in the Lake District?\" \n\nI laughed, \"Keep saying things like that. Actually, I wanted to get out and I wanted to thank you for being my friend.\" It was a delightful evening, Alan was great company and very funny. He asked about Jane and Fiona and I updated him on their lives. \n\n\"Fiona's at Lancaster isn't she? I've seen her visiting a few times.\" \n\n\"She comes over most weekends; I do her laundry and feed her decent food. She's good company. I wish that I had a daughter like her, actually her or her sister.\" \n\nJane called me early on Christmas day to thank me for her gift. I'd found a very nice watch for her, much more elegant than the one that I gave to Fiona and she told me that it was too generous. I spoke briefly with Jess and Victoria, gave them my good wishes. Jess mentioned that Fiona had popped out and would call me later. \n\nI had lunch with Isha and her family, but things seemed a bit strained and I didn't stay long. \n\nI waited and waited, but nothing, no calls. What had I done? It was just after eleven in the evening that my phone rang and I nearly dropped it in my hurry to answer. \n\n\"Sorry Milly, madhouse here and I wanted to speak to you without ears flapping. I really missed you today and I wanted to tell you that. I've been grumpy.\" \n\n\"My day wasn't so good either. I went to Isha's, she and her hubby are a bit strained and their families didn't help. I'd like to have watched TV with you instead.\" \n\n\"Thanks for the boots, I love them, but you knew that. Damn things have a defect though; there were things in the toes.\" She'd admired the boots, beautiful brown knee-high leather with a two-inch heel. They would cope with poor weather, looked good dressed up with a skirt, but they were astonishing with her tight jeans. I'd purchased two more charms for her bracelet, a birthstone and a pave charm. I knew that she would find them when she put the boots on. \n\nI lay on the bed and we chatted for half an hour. Ten minutes later I got a text message\u00be'Merry Xmas, miss you. X'. I wasn't sure what to make of that. \n\nNew term, a new arrangement \n\nEventually, the new term started and Fiona showed up the following Friday afternoon. She was wearing the boots with her jeans and another button-down man's style shirt. Her hair was fastened back with a barrette, bloody hell; I'd forgotten just how gorgeous she was. \n\nShe scooped me up again and we hugged. An hour after we'd eaten we were sitting at opposite ends of the sofa and she told me all the news from the south. \"Have you found out who the mystery person is yet?\" \n\n\"Jane? No, she's been out with a couple of guys and a girl. Actually, I think that they're sleeping together, but it's as if she's trying to find herself.\" \n\n\"I nearly forgot, I have another gift for you, but you need to wait until morning.\" \n\nShe looked surprised and disappointed at the same time. \n\nFiona was still wearing a robe when we had coffee, I'd told her not to get dressed just yet. I took her outside and pulled a cover off of a road bike. She stood, astounded, staring at it and then turned to me, \"What the hell?\" \n\n\"You like the bike and miss having one here. You can leave that here or take it to the Uni.\" \n\n\"It's incredible, how did you know what to get?\" \n\n\"That's what sisters are for. She helped, she promised not to mention it to you know who.\" \n\n\"Milly, thanks a million I love it. I meant to tell you that there were a few stares and unasked questions when they saw Jane's watch. I was convinced that Jess was going to blow when she realised the make.\" \n\n\"Jess never mentioned it to me. I'm not trying to do anything to make you both like me more. You're the only people I have to buy stuff for and I like doing it, I like the joy that it gives and you've been so good for me.\" \n\n\"I tried hard not to laugh and Jane told her to get over it. She flashed it all day. Now, Miss Scott, I need to find something to wear so that I can get out and test this new machine.\" \n\n\"Check on my bed, you may find what you need.\" I grinned, shorts, cleats, a polka dot jersey, a rain jacket, helmet and gloves were all lying ready. \n\nTen minutes later she grabbed me and lifted me up. It looked faintly ridiculous; she was fully dressed minus the shoes. \"I think maybe I need to marry you before someone else scoops you up.\" She set off. \n\nI retreated to my bedroom. Twenty years too late or too early and I would be scooping you up to my girl. I sat in my chair to put on some make-up. The reflection in the mirror looking back at me said, \"You need to get through your thick head that you can only ever be friends.\" I simply replied to myself out loud, \"I know.\" \n\nFiona came back three hours later exhilarated. She grabbed me and tried to hug me. \"Get off you beast, you stink, get away.\" \n\n\"Seriously Milly, that's fantastic thank you. If you don't mind, can I keep it here, for now, that way I'll have to come and visit?\" \n\nGood plan I thought, but just nodded. \n\nThe next weekend she told me that she had an early finish the following Friday so she wanted to cycle down early Monday and back on Friday to test out how it was. \n\nAfter that first run, she worked out that it wasn't practical to have to carry her clothes, study material and her laptop on the bike. We bought a new bike rack that weekend so that she could take it with her. \n\nI was in Lancaster the following week so I sent Fiona a message suggesting that we meet for an early dinner. She told me to go to her dorm and meet her there. I was shocked. It was depressing. She shared with five others, only two bathrooms which... well they didn't impress me, the kitchen was tired and that was being kind. The common room was bleak and Fiona's bedroom was not what she was used to. The bed looked unwelcoming and sagged in the middle. \n\nShe told me that it was okay and only for the weeknights, that was why she liked spending the weekends with me. \n\nI wrestled with that overnight and the next evening I phoned Jess. I told her about my visit and how shocked I was. \"Jess, it's awful. That's not how she lives or what she's used to at your home. I want to make a suggestion, well two. She could come and stay with me at the weekends and she'd only have to spend four or five nights there. I'd love the company and I could feed her properly.\" \n\n\"What was your second idea?\" \n\n\"Get her to move in here and for her to travel. It might be too much travelling every day, although I suppose she could always find a bed if she needed to stay overnight.\" \n\n\"Would you agree to that, every weekend?\" \n\n\"I'd love it. You'd know that she was safe and getting properly fed. It wouldn't be any hassle for me and she's capable of doing her own stuff. I'd enjoy her company as well.\" \n\n\"I'll speak to her. Thanks, Milly, you're kind and a good friend. By the way, cool it with the gifts; I looked up the price of that watch!\" \n\n\"Who else do I have to treat? I love being around them. I'd steal them from you if I could, but I like you too much to do that.\" \n\nYou lying bitch! Most of what you just said was at best misleading. I sat and wanted to be ashamed of myself, but I couldn't be. \n\nFiona phoned me later that evening, \"Milly, what the hell did you say to Mum?\" \n\n\"I told her about the dump that you're living in and suggested that you could come here every weekend and I'd look after you. At least this way she won't get 'pissy' when she finds out that's what you've been doing anyway.\" \n\n\"She said that you've offered to let me move in with you. Is that true?\" \n\nOh damn, please let me stay calm! I took a very deep breath, \"I offered that as a possibility, yes.\" \n\n\"Do you mean that? I could come and live with you?\" \n\nStay calm. \"Of course, but it'd be a hassle having to travel every day, so it might not be totally practical.\" \n\n\"Okay, let me think it over. I'll see you on Friday when I start my weekend visits.\" She was laughing as she hung up, and I reminded myself what a devious, selfish cow I was. \n\nJane phoned me two days later, \"What have you been up to?\" \n\n\"What do you mean?\" \n\n\"Mum's been telling me about the kind woman who's letting my poor deprived sister come and stay with her a few days each week so that she can care for her, cook for her and even do her laundry.\" \n\n\"I was just making an offer that's in Fiona's best interests. I'd do the same for you.\" I was defensive. \n\n\"I know you'd do the same for me. But what if Jess finds out you've done that for months?\" \n\nOops. \"Let's hope that that the big bad sister doesn't spill the beans. Oh, what time is it?\" \n\n\"Bribery is it? The watch is fabulous I love it, but it did raise an eyebrow or two.\" \n\n\"So I heard, sorry about that, but I like you. I thought that you might like it and I depended on my adviser or poor deprived sister as she is also known.\" \n\n\"So I heard. Thanks anyway. I suppose that the bike is a secret as well?\" \n\n\"I'm afraid so.\" \n\nFiona arrived on Friday and came in looking a bit sheepish. She kissed my cheek, \"Let's talk.\" \n\nWe went to sit in the sunroom. She was biting her bottom lip. \"What's up? Something's bothering you.\" \n\n\"At least Mum knows that I'm coming here, that's good.\" \n\n\"But?\" \n\n\"But, I never thought about moving in. Were you serious?\" \n\n\"Travelling would be a pain, but I wouldn't be doing it. I'd like you here and I'd look after you. We'd be a team.\" I was desperate to get down on my knees and plead with her. It would be almost four years of magical fun, then she would pack up and go somewhere else, but four years would be more than I deserved. Even if she found a girlfriend, I'd still be with her much of the time. \n\n\"Milly, I don't want to be presumptuous, but all of my stuff is in the car. Is that okay?\" \n\nFuck it; there was no sense in hiding it. I grabbed her and gave her a big. \"It'll be wonderful to have you here and look after you. I love it.\" She gave me a squeeze. \n\nWhen we eventually separated I asked what she was going to tell her Mum. \"That I'll be staying weekends and occasional weeknights, is that okay?\" \n\n\"Whatever you want.\" I was lying about my true feelings, but no point in admitting to them or she'd run a mile. \n\nFiona phoned Jess and told her about her decision. She handed me the phone. \"Milly are you really okay with this?\" \n\n\"Jess, think about it, she saved my life almost two years ago and we've become really good friends. I want her to do well, achieve a great deal. If I can help her, I'd do anything. Best of all she will stop me from being a lonely, sad, old biddy.\" \n\nThe next two months were fun as we got to know how to live together full time and to find a routine. Fiona did spend the odd night at the university when it made sense to do so. I felt great; I was happy and cheerful as I went about my work. I was managing to control my feelings for her, but sometimes when she looked at me a certain way it was a struggle. Fiona tried to help around the house, but I insisted that she study and work hard. After all, that is why she was at university. \n\nSomething happened \n\nSaturday was a nice day, with clear skies and no wind as we set off for a mid-morning walk that took us over the hills and around the lake. We chatted a lot but also had long periods of silence. At one point I followed Fiona along a narrow path and my eyes strayed to her backside in the tight walking pants that she was wearing. I had to look away. I told myself to behave, enjoy her company and friendship for the next few years, anything more was fantasy. We were back home by mid-afternoon, tired, but feeling good. We sat with a beer and then went to change. \n\nI was starting dinner when Fiona joined me and we cooked together. I loved having her helping me, being close, sharing things and she seemed to like it as well. Once we'd eaten dinner and cleared up we watched some TV sitting close together on the sofa. \n\nIt was such a simple thing that came out of nowhere. I turned towards her and, at the same moment, she turned to face me. We looked at each other; suddenly we were kissing, full-on, not mucking about kissing. She pulled back and for a moment I was disappointed. I realised that we'd crossed a line, and then we were doing it again. ",
        "I pulled away and gasped for breath, \"Fiona this is a mistake. This is wrong. This needs to stop right now.\" \n\n\"You didn't enjoy that kiss then?\" Damn her grin. \n\n\"On the contrary, I liked it a lot and that's why it needs to stop.\" \n\nI saw tears starting to form; she looked serious as she spoke, \"I'm so sorry Milly, I can't carry on like this, I can't pretend anymore. I've lied to you for so long, I love you. Pandora's box is open and I can't close the lid now.\" She grabbed my head and moved to face me and she kissed me again. I'm ashamed to say that I kissed her back. The box was open; things had just changed in a big way. Within minutes she had her shirt and bra off and, still kissing me with a passion that rated on the Richter scale, she grabbed my left hand and placed it on her breast, then on her nipple and I shuddered. I knew that it was wrong, but I couldn't stop myself, I didn't want to. I squeezed her gently and as our lips parted she moved so that her nipple was in my mouth. \n\nThe feelings running through me right now were nuclear. It'd never felt anything like this, and as I stroked, kissed and gently bit, Fiona came. \n\nFuck, we'd gone beyond all common sense. Fiona grabbed my hand and dragged me to the bedroom. We stood facing each other, grinning, she removed my shirt and bra, I unfastened her skirt and she did the same to me. I lowered my own panties and she lowered hers. We were naked and I looked at her, almost nineteen, firm and beautiful. I don't know what she saw, forty-four and sagging I guess, but she smiled, actually, it wasn't a smile it was X rated or should have been. \n\n\"Are you sure about this? We might be able to step back from here but not if we don't stop now.\" My insides were churning like a runaway washing machine. I wanted to go on through lust and I wanted to stop because I felt that it wasn't right. My head was a mess. \n\n\"Milly, I've waited years for this. I've tried to keep my distance and almost failed more than once. I know that this isn't going to be easy for us, but I want to make love to you right now and I want you to do the same to me. You've got one chance to say stop and we can see if we can repair this, but if you don't ...\" She left it hanging. I felt a tear running down my face, she saw it. \n\n\"Is that a stop?\" I looked at the ceiling, the floor and then into her eyes and shook my head. The next thing I knew I was on the bed and she was arousing me with her lips, stroking with her tongue, kissing, biting and using her fingers gently until I came. She looked up at me, \"Want to stop?\" I shook my head again knowing that I was going to hell for what I was doing. \n\nFor the next thirty minutes, Fiona made me come over and over again, and then she allowed me to go to work on her. She was sensitive and made mewling noises when I got something right and squeaked when I didn't. She made very few squeaks. She grabbed me and pulled me up beside her, we lay holding each other, without words. \n\nWow, that was better than with Alex and I never thought that could be possible. \n\nFiona looked at me, \"Remember all those years ago when I told Jane that we should keep you?\" I smiled and nodded, \"I was bloody right.\" She fell asleep and left me to feel the guilt for all of five minutes until I realised that I was screwed, there was no way that could possibly be the only time that we did that. Even if it all finished in a couple of days it had to have been worth it. She'd been in love with me for a long time, now I understood. She must realise that this couldn't work long term.  \n\nTwo hours later I felt her watching me. \"Hello, lover.\" She leaned over and gave me the gentlest loving kiss, \"This must be scary for you. I'm sorry about that, but I love you, Milly. I want to live with you, be your partner and lover. I'm sorry to dump this on you, but it's been boiling over for several months now. Jane told me ages ago that I needed to be honest with you.\" \n\nI sat up stunned, \"What?\" \n\n\"What?\" she said back. \n\n\"Jane knows about this?\" \n\nShe shook her head. \"No. Not about this. This might shock her actually, but she knows, has known for a while how I feel about you. She told me that I need to come clean.\" \n\n\"Oh Fiona, what are we thinking? This is crazy.\" I was shaking and I was scared. This was insane, but I knew that I wanted to lie beside her like this forever. I also knew that if I wasn't very careful at some point I was going to admit how I felt and then the ball would be well and truly burst. \n\n\"What do you feel, be honest? You've got feelings for me as well, I know you do.\" \n\nMy mouth and heart took over as my brain seemed to have gone on strike. I leaned forward, kissed her, then I smiled as I said, \"I'm bloody crazy about you. I have been for a year and I've loved you for a long time before that. I've tried to suppress how I felt because I knew that it could never be a reality and I just wanted us to be friends. I'm sure that your Mum suspects how I feel.\" \n\nThe cats were out of the bag. The pussy was also damp and I slid down the bed. If I was going to be punished for this, and I surely was, then I was going to make sure that it was worth it. \"Milly, stop, come back.\" \n\nI didn't stop, I didn't look up, I carried on and whispered, \"Shut up.\" Two minutes later she told me to stop several times, then changed her mind and told me to keep going, then wanted me to go harder and then she asked for 'more'. I'm sure that she knew what she wanted, but she hadn't told her mouth, it was clearly broken and acting independently. \n\nI lay beside her smiling. \"If I could have a wish right now I would want to be your lover. I'm crazy about you and that was the best sex that I've ever had. But I also know that I don't have any wishes and this is going to end in disaster for both of us. I'm going to lose my best friends and my lover, but I can't tell you how good I feel right this minute.\" \n\n\"Milly, I need to tell you that...\" she paused, thinking, \"Whatever happens tomorrow or in forty years time I will never forget this night. We might be able to fix this with Mum. I don't care how old you're or how young I am. I know how I feel about you, how I've felt about you for a long time, it doesn't matter to me. I know that I love you very much. Together we can fix this, but it may be tricky.\" \n\nI laughed. 'Tricky' was an understatement. \n\nWe spent hours in bed that weekend, trying to find out about each other. When we were out of bed the touching and fondling continued wherever we were and it lead to sex on many occasions. Fiona admitted to being inexperienced, but she experimented and soon identified what turned us both on. I didn't push her into anything; I was scared to do so and wanted things to develop at their own pace. She liked to instigate and take the lead. I let her; I liked it, so different from how I'd been before. \n\nWe avoided talking about the future that weekend and for the rest of the week. I made sure that we had time to relax and for her to study in the evenings, but we were in bed early each night and I seemed to be getting hornier as the days past. \n\nFiona was home early on Friday and we ate pasta before sitting talking about her studies. She bit her bottom lip and took a breath. \"Milly, I love you and I've been thinking about you all day. I need you to come to bed with me.\" \n\nI was only too willing and we stood at the end of the bed undressing each other. Fiona had a stunning figure and my levels of lust increased with each garment that was removed. \n\nWe lay together kissing and touching for several minutes. I closed my eyes and the next thing that I knew Fiona was tying a scarf over my eyes. \"Ssshhh, my love, trust me and I'll take you to a nice place.\" \n\nI was blind and suddenly I could smell better, hear better and any touch felt sensuous. I wasn't scared; I was excited and quivering with anticipation. Nothing happened for about a week or so it seemed, but it was probably only a couple of minutes. Then something touched the inside of my knee and I jumped. I had no idea what it was until later when I learned that it was the corner of a silk handkerchief that she had rolled up. It reappeared at my ankle and then my shoulder where it lingered making lazy circles and then - nothing. Then my elbow, knee and hip. I screamed at her, first to stop, then for her not to stop and then for her to do something else. I used vocabulary that I seldom used. She kept touching me in random places and I was wound up tight as a drum skin and leaking. \n\nThe handkerchief must have been rolled tight because I felt a more substantial touch on my breasts, the sides, the bottom, the top, then the nipple and I screamed at her. \"Anything, I'll do anything, just fucking get on with it and stop teasing me!\" \n\n\"Would you marry me?\" \n\n\"Yes, yes anything, yes, please, please. I love you, anything.\" She touched my clit and I swear I left the bed, I screamed and screamed, she did it again and I begged her to stop. She ignored me and kept going; I came again and then, nothing. \n\nI came to and she was raised up on her elbow looking down at me grinning. \"I made you pass out! I never dreamed that it could be this good.\" \n\n\"Neither did I. It never was before and I thought that it was great before. Now it's... I have no idea what it is.\" \n\n\"So when can we get married?\" \n\nI sat up with a start. \"What?\" I yelled at her and she laughed at me. \n\n\"You promised me anything. I want to marry you.\" \n\n\"No, no, no. I never agreed to that, are you crazy?\" I was worried now, shit what had I done? \n\n\"You promised! I'm crazy in love and I was serious.\" \n\nI threw my head back into the pillow. \"We can't get married don't be so fucking stupid it's not something to joke about.\" \n\nI instantly knew from the look on her face that she wasn't joking. \"Milly, I'm not joking, I'm serious.\" \n\n\"Fiona, that's crazy. I'm your mother's age, two and a half times your age. I should be locked up for being so stupid as to have sex with you, committed to an asylum. This can't work between us, please don't do this; you'll ruin your life!\" \n\nShe burst into tears and I went to hold her. \"Milly, I fell in love with you years ago. I knew that our ages were an issue, but I've thought about it over and over again, I've spent hours talking to Jane about it. I want you, only you and after this last week, I know that I was right. Okay, I'll take back the marriage thing, for now, but if you tell me this is over I'll never forgive you. You won't forgive yourself and you know it!\" \n\nI shook her. \"Listen to me, a long-term relationship between us is insane and it can't last. I can't deny how I feel about you, but you need to know that it'll kill us at some point, next week, next year, but it will be an issue.\" \n\nShe pushed me back into the bed and sat astride me grinning. \"I'm going to kiss you and when I'm done you'll do anything to have me.\" She kissed me and she used every trick that there is and some that she must have invented herself. It was a kiss like no other and she was right by the time that she'd finished I'd do anything. She was very close to making me come simply by kissing me. \n\nWe woke early on Sunday morning and lay in the bed without speaking. I went to make tea. As I stood at the kitchen counter I shook my head. What was I thinking, she's not yet nineteen and she wants to be with me, and I want her, but it can't be right. I was close to tears when she walked in naked, not a stitch of clothing. \n\nShe came up behind me, held me and rubbed her naked body against mine. I closed my eyes and felt so turned on. She pushed me back against the worktop and lifted me, pushing me back until I was laid flat with my legs hanging off and she opened my robe and pushed my knees apart so that they were in the most indecent position. I felt her tongue on my slit, then on my clit and two fingers inside me. I knew there and then that this was it and that I'd have to fight for us to be together despite the odds, despite my guilt, despite my fears. She made me scream and scream and scream. No one had ever made me feel like that. \n\nI was scared, really scared about how I felt. I told Fiona that I wanted to walk on my own and give myself some room to think, so I set off. I ended up outside the church just as the service commenced. I went in and sat at the very back. As the congregation started to leave I sat there unable to move with tears running down my face. When everyone had left Alan, the Vicar, came and sat beside me. He put an arm around me, \"Milly, do you want to talk about it?\" \n\nIt poured out of me, everything, I told him the truth, all of it and it took a long time. I saw the look on his face as I spoke. It was one of surprise but he was not judgemental. He was silent for a while. \"It sounds like you two have found love. You both seem to know that it'll be a hard road. If you accept that, you'll have to face up to the thoughts of others, which will not be easy. Her family will struggle with this, you know that. Face it together and you'll survive if you have the strength. I'll pray for you Milly; you may need the help of the Almighty.\" \n\nI found my way back home still in tears. She was there waiting and worried. I looked at her and saw perhaps the most beautiful woman that I've ever seen; she had her arms open for me. I gave her a hug and told her where I'd been. \n\n\"I spoke to my minister as well.\" I looked puzzled and raised an eyebrow. \n\n\"Jane, I spoke to Jane and told her. She said that she wants to be there when we go and see them. Would you call her?\" \n\nShe pressed the buttons and handed me her phone, \"Milly is that you?\" \n\n\"Yes,\" I replied as the tears started again. \n\n\"It'll be okay, I promise that I'll help. Fiona is serious, she knows the issues, I know that she loves you and it sounds like you love her. I've known it for a while, it's the way you look at her, and it's so obvious. I promise that I'll help.\" \n\nFiona was in the shower when I reached the bathroom. I saw her and every bit of resolve that I had dissolved; I got in with her still wearing my dress and underwear. The dress came off and will never be worn again as she ripped it from my body. I sank to my knees. As I probed her with my fingers and tongue, I said a prayer. \n\nWe sat later and devised a plan. We'd go to see Jess and Victoria at the Easter break and confess. \n\nI tried not to think about it during the next couple of weeks. I didn't do any work, no drawing anyway, so I cleaned, did laundry and cooked. Each evening I had a meal ready for my girlfriend and we spent the evenings cuddling or in bed making love. It was furious at times and languid at others. \n\nWe had a long conversation about sex and she asked me to teach her. I laughed at her as I replied, \"Based on what we've done so far I don't think that there's much that I could teach you. But we may be able to learn things together.\" \n\nI'd put Jenny aside. I'd loved her, but I'd moved on and I spent lots of time thinking about Fiona. I knew that I loved her beyond any doubt and I wanted to be with her. I had fears, lots of them, mainly about our ages, but I was going to enjoy this whilst it lasted. \n\nConfession \n\nFiona was driving and the closer we got the more I felt my nerves getting worse if that were possible. She was trying to lighten the mood, but it wasn't working, her sense of humour and mischief that I so loved had deserted her. \n\nShe parked in the driveway and we got out. Jane greeted us with a hug, \"Chin up, they know something big is in the air,\" she whispered to me. \n\nJess and Victoria greeted us with smiles, hugs and a kiss, but it looked a little forced. The two of us sat side by side on the couch and Fiona said, \"We have something to tell you.\" \n\nJess's lips pursed and Victoria had a hard look in her eyes. I turned to Fiona. \"Let me do this.\" From somewhere I found an inner strength, had Alan helped me? \n\n\"A couple of weeks ago something happened between Fiona and me. We discovered that we love each other, are in love. There had never been anything inappropriate before then, I promise you. For some reason when we were watching TV we kissed and the floodgates opened. I realised that what I felt for her was not affection for her as a niece, it was something else.\" \n\nJess half sneered, \"So I suppose that you've been 'inappropriate' as you put it, since then.\" \n\nFiona put her hand on my knee and quietly said, \"That depends on your definition of inappropriate. What we did, have done since then, has been very appropriate for people who are in love. I was not forced into anything; actually, it was me that took the lead most of the time. I've loved Milly for a very long time and wanted her sexually for a while. I'd never told her how I felt before that weekend.\" \n\nJane came and sat beside me. She took my hand, leaned in and kissed my cheek and then looked at her parents. \"Fiona and I have no secrets. I've known how she felt about Milly for over a year. We've discussed it dozens of times, she knows the issues and knew that if they ever got together, she'd have to sit here one day and face you. Here she is. Here they both are. I've seen the two of them together when it was only the three of us and I know that there was nothing 'inappropriate' as you put it, but there was something special between them. I envied Fiona, to tell the truth. I knew that Milly had feelings for my sister and she tried very hard to hide it. I've spent quite a while on the phone with Milly in the last couple of weeks. I know that she had to find great courage to come here and tell her best friends that she'd fallen in love with their daughter. I'm proud of them both and I love them both and ...\" Jane didn't finish, she couldn't she was in tears and hugged me as tight as I'd ever been hugged. \n\nI looked at Jess and she was definitely not smiling. \"What are you thinking? Have you both lost your fucking minds? I bloody well knew there was something going on.\" \n\nJane leapt to her feet and I could see her anger. \"Didn't you hear what I just said? There was nothing going on. Jesus, Fiona's found a wonderful, beautiful, marvellous woman and fallen in love with her. I know she's much older and so do they. I just hope I'm that lucky!\" \n\nShe flopped into her seat and smiled. \"Let's face it, Milly must be a bit crazy, she loves my sister, she has to be mad.\" There were at least some small smiles on the other's faces. \n\nVictoria spoke for the first time. \"Fiona, why don't you and Milly go for a walk?\" Jane got up to leave and Victoria spoke again, \"You, young lady need to sit, I want to speak to you.\" \n\nShe ignored Victoria and came to hug the two of us. I whispered, \"Thanks.\" and she mouthed, \"It'll be okay.\" \n\nWe walked for a while, hand in hand, but didn't speak. We went for a coffee and as we sat, Fiona looked at me, smiled and said, \"That went well I thought.\" For the first time in many hours, I laughed. \n\n\"I don't want to have to do that again, I don't want to go back and I'm more scared than I've ever been.\" \n\n\"It'll be okay. If they make me choose, I'm leaving with you. I love you too much to let you go!\" \n\n\"No, I will not allow that. My parents hate me and I don't like them much, I would never allow that same split to happen to your family. We just need to hope.\" \n\nTwo hours after we'd left we were sitting in the same positions. Jane gave me a half-smile. 'That bad,' I thought. \n\nVictoria looked at the two of us. \"Jess is right, the two of you are insane, the age difference is huge and will, without any doubt, be a problem. But Milly is a good person and if she were fifteen years younger we wouldn't be here having this discussion, we would have champagne open. But we are where we are.\" \n\nJess looked at Victoria and then at me. \"When you first walked in here and told us what you did, I wanted to kill you, I hated you and I'm sorry. You are and always have been my friend. I'm sure that you didn't plan this, you're too sensible for that. As for you Fiona, you could have found someone closer to your own age, but you've always been your own person, determined, sensible, above all loyal and loving.\" ",
        "I took Fiona's hand and she closed her other hand over mine. \n\n\"I have to say, Milly, if you deliberately hurt my daughter I will come after you and kill you, I'm not joking! Fiona, if you hurt Milly I don't know what I'll do to you, but it'll be unpleasant. Do you both understand that?\" We both nodded and I was about to speak, but she held her hand up. \n\n\"If you have doubts or change your minds or something else happens, share your concerns with the other one. This is going to be hard enough. Jane\u00bego.\" \n\nI sat back and closed my eyes. I was still alive and there was a girl, my girl, holding my hand. When I looked up Jane was wrestling with a cork and then poured champagne. It was a lighter mood, but there was still tension. \n\nI got to speak to Jess privately later and she issued a few more threats and extracted a few more promises from me, but she did also give me a hug. \n\nBedtime was tricky and we were both in the guest bedroom together alone. I stood naked in front of Fiona and took her hand. \"When you graduate and decide where you're going to work, if we're still together you can ask me again, okay?\" \n\nShe gave me her lopsided grin. \"Okay. I'm going to marry you, Milly Scott, I love you. We need to be quiet tonight.\" \n\nWe held each other close with the duvet pulled over our heads and we kissed. I still think that this is madness, but I can't resist her. I fell asleep much easier than I had for the last couple of weeks. \n\nWe thought that it would be good to get away and decided to set off back north early the next morning having said our goodbyes. I'd been forced to make more promises, but we both left feeling good, cheerful and optimistic. \n\nFiona was driving and it allowed me to sit and occasionally look at her. She knew what I was doing and would occasionally grin or laugh at me. It seemed so easy to be with her. I loved her very much and thought that I was a very lucky woman. \n\n\"Jane was astonishing, without her input that could have been much more difficult. Have you shared everything with her?\" \n\n\"She's my sister, I trust her with everything, every experience, every penny that I have, every thought that I have, my life. I shared my feelings with her a long time ago. I'm sorry if I've told her too much about us, but we've been there for each other. If I had to choose between you and her there would be a real problem, but that'll never happen because we spoke about that a while back. I'd never have allowed this to have happened without her...\" she paused to think, \"I don't know, approval, blessing, I don't know.\" She was quiet. \n\n\"If she needed me, I'd drop everything and go to help her, anywhere, anytime, regardless of what it would cost me. Please understand that.\" \n\n\"I think that I understand. There's never been anyone that I felt like that about except Alex, Jane\u00beI don't know. You, probably, for the last five or six years.\" \n\n\"But you were married to Jenny!\" \n\n\"I was and I loved her. But if you'd called ...\" \n\n\"What about Jenny?\" \n\n\"Oh god, I loved her, but no. I wouldn't have admitted this under torture, but you've no idea how I felt about you. I buried it, deep, very deep, it was so wrong, it could never be, it was so... I knew that you liked me and that there was real affection between us, but come on; I could never have imagined this. Even now I'm not sure that I believe it.\" \n\n\"I am so going to lick your pussy when we get home.\" \n\nI burst out laughing. \"Excellent.\" I was thinking about what would happen when we got home and not just sex. \n\n\"I want to clear my wardrobe; I need to move some things out to make room for my girlfriend's stuff.\" \n\n\"What does she think about it?\" \n\n\"I don't care; I want her stuff beside mine. If she doesn't like it, too bad!\" \n\n\"So that is how it's to be, you making all the decisions?\" I turned to look at her and she was grinning. \n\n\"About this, yep!\" \n\nWe were silent and my brain started up again. \"I've had another thought and this time I do want your opinion, actually I always want your opinion.\" \n\n\"Okay,\" she said clearly wondering where this was going. \n\n\"I would like to decorate our bedroom, new paint, the lot.\" \n\n\"Great, our bedroom, I like that,\" was her reply. \n\n\"Actually, scratch that. I'd like to redo the whole room. New carpet, bed, linen and redecorate. I'd like you and me to select everything together so that it is ours, yours and mine.\" \n\n\"I don't care what the room is like as long as I get to share it with you, but it's a nice idea. Let's do it.\" \n\nI leaned over and kissed her cheek. \n\n\"Play with yourself, take your knickers off and play with yourself. Please, please.\" I stared at her as if she was mad. \n\n\"Don't be stupid.\" \n\n\"Milly we're on an adventure and I want us to do new things. Have you ever masturbated in a car?\" \n\n\"No I haven't and I'm not really sure I want to now.\" \n\n\"Okay, I'm asking you very nicely if you would take off your knickers and play with yourself, right now. No one will see, no one will know except me. Please.\" \n\nShe was right and she'd asked so nicely. I hiked up my skirt, pulled my pants off and passed them to her. She sniffed them and I hit her on the arm. I pulled my skirt partway back down, reclined my seat and slid a finger between my legs and waited for instructions. I had a brief thought - I was crazy. \n\nFiona told me every move that I was to make; she adjusted the rearview mirror so that she could keep her eyes on the road and still watch. I did exactly what I was told to do and she kept me on the edge for a long time. I could easily have just done something very slightly different and climaxed. But I didn't and tortured myself. I'd hated being told what to do for a long time, but right now this girl, less than half my age was in control and I wanted it like that, I needed it like that right then. \n\nThere was one more little instruction, as I obeyed she told me to come and I did. I lay back exhausted, that was quite something. She lifted my hand and licked each finger as she drove. That was so erotic that I made myself come again using my other hand. I was a slut or at least I felt as if I was and I wasn't unhappy about it. \n\nWhat'd happened to me? I'd fallen in love, that's what. I also knew that in the next few days she, Fiona, was going to suffer. \n\nExperimentation \n\nWe cleared a space for her stuff in the main bedroom, our bedroom. The following weekend we bought new furniture, carpet, curtains, bedding, selected wallpaper and paint. It took me two weeks to get it all accomplished and I was very proud of how it turned out, bright, airy and very welcoming, a big change from how it had been. It was just what I wanted, a new start and nothing left from before Fiona. \n\nA few days later Fiona arrived home early in the middle of the week and we had a snack. I looked at her and simply said, \"Clothes off bedroom right now please.\" She grinned at me and I could see that she knew this was going to be payback. \n\nShe was undressing as I walked in and pulled my T-shirt dress over my head. I was naked beneath it. \"Lie down.\" \n\nI took her left arm and tied a rope around her wrist, loose, but it would not come off by itself. I did the same with her other wrist and she smiled at me and bit her lip. I loved when she did that, so cute. I tied the rope around each ankle and moved her to the centre of the bed. I tied each corner and as I leaned over her to reach the opposite wrist she bit my nipple. I looked down at her, \"You're going to pay for that dearly my darling.\" She smiled again, but she was nervous. \n\nI walked away and left her. Twenty minutes later she was calling for me and I ignored her. Then she started to get abusive and demanding. I went, stood beside her and stuffed her panties into her mouth saying \"Foul-mouthed little girl,\" as I walked away again. \n\nShe wriggled and pulled, but it just worked her up. I went back, sat on the side of the bed and reached over. She stared at me wide-eyed, as I held an ice cube against her nipple. She tried to scream and then I held a second one against her other nipple and she almost did manage to scream. I paused and pulled the panties from her mouth. She knew some very filthy words! I held the ice cubes against her nipples and as they melted the water ran down her body. \n\nShe just kept shouting, threats, swear words, pleas, apologies, all sorts and I ignored every one. I moved both hands and she relaxed until I shoved both ice cubes inside her and she started shouting again. I walked out. I could hear her constant stream of abuse. \n\nI returned with two more ice cubes and again placed them against her nipples. Surely she was going to run out of words soon! I stopped and went to the drawer and her eyes bugged as she saw me with a candle, which I lit. She pleaded with me again. It was a low melt candle and wouldn't do any damage, but she didn't know that. I dripped two drops on each nipple and she screamed! I extinguished the candle and extracted the remains of the two ice cubes. \n\nI climbed in the bed with a knee either side of her waist and looked down at her. God, she was beautiful, strong and so very lovely. \"Want to stop?\" \n\nShe shook her head so hard I thought that it might fall off. \"No, please don't stop. It's awful, it's torture, please don't stop, I love you.\" \n\nI had a feather. I spent half an hour with the feather and she just yelled more abuse nonstop. Until I stopped and she demanded that I touch her again. I took something else from the drawer and concealed it behind my back until I was seated again, then I touched her with it, she looked puzzled and then I turned the vibrator on and touched her clit. Her reaction was so violent that I thought that she might actually break the ropes. I kept her like that for ten minutes and I knew that I had to stop at that point or I was going to hurt her. \n\nI let her settle, come down and relax. Then I kissed her and undid the ropes. She hugged me and kissed me and muttered, \"Thank you.\" She closed her eyes and drifted off to sleep. \n\nAn hour later she woke and I checked her wrists, she was going to have a couple of bruises so I rubbed them gently. I smiled and said, \"Sorry.\" \n\nHer retort made me laugh, \"Can we get some proper leather cuffs for next time?\" \n\n\"I'll leave that to you. You can use my card to pay for them.\" \n\nI held her for the rest of the evening. Fiona had not touched me and yet I'd gained huge satisfaction from seeing her like that. Wonderful. \n\nThe following week a couple of packages arrived addressed to me. I opened the first to find two sets of linked cuffs that fit under the mattress so that there were one either side and a set of cuffs that I didn't understand until I looked at the instructions. You wrapped one section around your thigh and the other around your ankle leaving you with your ankle connected to your thigh. There was another cuff to connect your wrists to the thigh straps. I looked at them closely and felt myself getting aroused. What would that feel like? The other package contained a set of cuffs to join ankles to wrists and a spreader bar. At the bottom of the box was a set of nipple clamps. I tried one and it made me squeal. \n\nI didn't tell Fiona about the parcels when she came home. We ate and chatted. I told her I was going to the bedroom but said nothing else. I pulled off my dress, attached the cuffs around my thighs and lay back on the bed. I brought my ankles up, fastened them and then my wrists, the last one was tricky. I had to wait ten minutes and by that time I was as high as a kite and feeling very needy. I looked up to see Fiona at the door. \n\n\"What do we have here?\" I swear that grin was the evilest thing that I've ever seen and I was nervous, but I wanted her to carry on. She reached for a nipple clamp and attached it to my left nipple and I screamed, shit, that was sore and the one on the right side was no better. \n\n\"It's okay my love I won't hurt you. Thank you for giving yourself to me, but you do know that you're going to suffer don't you?\" I nodded my head like a twelve-year-old that had been caught stealing biscuits. \n\nDid I suffer? You bet. She kept me in those cuffs for three hours, ignoring my pleas for mercy and for satisfaction. The nipple clamps were removed, I screamed like hell and wanted them back because taking them off was worse than having them on. She teased me with the feather, a vibrator and her tongue and at some point, I drifted off into space. I felt no pain, no discomfort, just pleasure. \n\nWhen we finished she released me and held me. \"Are you okay?\" \n\n\"Yes, I think so. Thank you. Thank you so much. Will you do that again one day, please.\" \n\nShe laughed as she said, \"Yes.\" \n\n\"Thank you, I love you.\" I fell asleep in her arms. I dreamt about Fiona, it was truly the most disgusting dream that I've ever had and when I woke I hoped that I could remember the details to tell her so that it could become a reality. She'd turned me into a sex-crazed woman and I wanted more. \n\nOver the next two weeks, we tried all the things that we'd ordered. I liked them all, I suffered, but I liked them. Fiona liked being tied to the bed and teased. I liked having my hands restricted; it stopped me from stopping her. My favourite was the thigh to the ankle to wrist restraint. I was wide open and couldn't move. I spent hours like that, most of the time swearing at her and demanding something from her. She could be loving and cruel, I liked both and she liked me being helpless. \n\nI loved her like crazy. She made me feel so alive. Sometimes I wanted to mother her and I did. Sometimes I wanted to be her friend and I was. Other times I wanted to tease her and I did. Of course, I wanted to be slutty for her and I did things that I would never commit to paper or admit to anyone. \n\nSeparation \n\nFiona had to complete some work for the university and had promised that it would only take an hour. I'd just sat down with a cup of tea, almost two hours later, when she arrived and threw herself on the couch next to me. \n\n\"Sorry, took longer than I thought and I was mulling over something in the car.\" \n\n\"What was that?\" \n\n\"Nothing much.\" \n\n\"You can't dismiss it like that, tell me about it.\" \n\n\"I was driving home and thinking about you. \n\n\"Okay, that makes me nervous, come on spill the beans.\" \n\n\"Look, it was never meant to be said out loud, I was just thinking.\" \n\n\"Too late, I need to know.\" \n\nShe bit her lip, that could mean good or bad, but she looked so sexy when she did that. \n\n\"I was thinking about you and us. How beautiful I think you are. I cannot believe that you're so much older than me because you don't look it, anywhere near. I don't care one bit because I love you so much it sometimes scares me. It bites my ass that you promised to marry me, but not until I graduated.\" \n\n\"Was that it?\" \n\n\"No, not really.\" She sucked in a lung full of breath, looked at the ceiling and then at me. \"I had no real idea what sex could be like, most of my preconceptions have been blown out of the water at an early stage of this, us, and I'm still learning and so, apparently, are you. I'm starting to understand what Mum had tried to tell me about love. It occurred to me, again, how lucky I am.\" \n\nI looked at her and sipped my tea. Somehow that little girl that I'd adored for years was now my lover. It was crazy, but I felt things for her that were loving and caring, others that were adventurous and rather filthy. Sometimes she would treat me like a captive and do things that I could not believe. Why would anyone enjoy being tied up in an uncomfortable position to be teased and then go back for more? I also loved having her at my mercy and doing the things to her that she'd done to me. \n\n\"Fiona, thank you for that. I've had thoughts about you as well, most of them pretty filthy ones, but I adore you. Now, do you fancy coming upstairs and we can test out some new ideas I've had? The bad ones!\" \n\nThere was that grin again. No words were required as she grabbed my hand. \n\nFiona's first year was done and she had lots of time off. It should have meant time together, but that was not to be. Nothing simple for two people who had willingly entered a relationship that was fraught with issues and challenges. \n\nShe'd been offered a six-week placement/internship at Fairfield Computing, the company owned by Karen, to do some computer programme development. It was a great chance for her to gain some more real experience and would be good for her future. It was the correct thing to do, but it would mean that we were apart. Fiona suggested that I go and stay with her mum, but there was no way that I could do that and I suspect that Jess might not find that too easy either. I'd have to get used to being lonely. \n\nShe packed her stuff into the car and stood beside it looking glum. I stood facing her equally miserable. \"Guess I'll see you in six weeks. I love you.\" There were tears in her eyes. \n\n\"I've said it so many times, it's what you need to do and you know it. I hate to be parted from you, go now before I drag you back inside and use the cuffs to keep you here. I love you, be careful.\" \n\nShe drove off and I stood staring after her car. My heart was broken; I went inside and sat with a coffee thinking. The time apart would allow us to be sure about what we were doing and see if we could survive our age difference. Could we really carry on as we had? The sex was phenomenal, but we needed more than that and did we have enough in common? I thought so, but we would see. \n\nLater that day I went for a walk and bumped into Alan. We sat in the churchyard and I told him about my troubles. \"I don't know Fiona that well, but over the years that she's been coming here, I formed the view that she was a remarkable young lady and so are you. Have faith in your feelings.\" I would have to. \n\nWhen she called later to tell me that she'd arrived I was hiding under the duvet dressed in her T-shirt and sobbing, I wiped my face and spoke to her. She was hiding in her room and crying as well. \n\nTwo hours later Jane called me, \"You okay Milly?\" \n\n\"No love, I miss her so much. I never knew that it could be like this, so sore. There's no way that I should feel like this for a girl who could be my daughter and yet here I am sobbing. The fear is that she'll realise what a mistake she's making.\" \n\n\"Look, she's in a state as well and has just said the same thing to me. I've seen you two, it'll be fine. This break will be good for you.\" \n\nAn hour later I got a text, simple and clear - 'I love you.' \n\nIt took me a few days to pull myself together and I started to work again. It was not all sunny because when I took the laundry through to put it away I stood staring at her clothes almost frozen. I found myself fondling her underwear and holding it to my cheek. Pathetic! \n\nI spoke to her every day. She was enjoying her work but also missing me. Even Victoria called to see if I was okay. \"No, miserable and I miss her. I've loved her for a long time and always believed that we could be friends at most, then it was like we were electrocuted and, as she said, 'Pandora's Box' was open. I'm supposed to be a mature woman and I'm behaving like a lovesick child.\" \n\n\"If it's any consolation Fiona is a lovesick child right now. Milly, I've never been more certain about how someone feels. She loves you.\" \n\nWhen I spoke to Fiona that night I asked if we could go away together for a couple of weeks when she'd finished her work. She agreed and told me to surprise her. That gave me motivation and something to plan! \n\nIt had been four weeks since Fiona went away and it wasn't getting any easier. I missed her, it was that simple! I was sitting outside with a glass of wine staring at the lake feeling very sad and sorry for myself when I received a message\u00be'Are you at home, I'll call in ten minutes?' ",
        "I replied\u00be'Yes, I'm at home. Look forward to talking. I miss you. X.' \n\nThen I heard a noise at the side of the house and realised someone was there, I jumped and my wine went all over the front of my dress. She stood there grinning. \n\n\"Shit, you idiot, you nearly frightened me to death. Come here and give me a kiss to make up for that you bloody fool.\" The flowers that she had behind her back were put on the floor, she came to me slowly and I held out my hands. \n\nShe kissed me gently and took me in her arms. I looked at her, stared into her eyes and burst into tears. She lifted me up and threw me over her shoulder. As she headed for the bedroom I pulled her dress up and shoved my hands down her pants to grab her buttocks. She threw me on the bed and herself on top of me. We kissed with a passion that I thought might induce thunder. There was no pretence about what we were doing it was animalistic and brutal. She pushed my bra up and kissed one of my nipples, she pushed the leg of my French panties aside and fingered me. Her free hand grabbed my other nipple. I had a hand down her pants and just repeated over and over that I loved her. \n\nIt lasted just a few minutes and we lay there looking at each other. \"I need to go to church on Sunday and give thanks for my prayers being answered.\" \n\nShe whispered, \"You're okay then?\" \n\nI whispered my reply, \"I am now, I've missed you so much, but what the hell are you doing here?\" \n\n\"I was well ahead with the work that I was doing, I'd put in late evenings and did some work at the weekend. This morning Karen told me to leave at lunchtime because she couldn't stand to see me looking so miserable. I went to the salon and told Jess that I was coming. She said 'Thank god for that' and asked me to give you her love. I baled, with my handbag and my laptop, and I drove here. I only stopped for a pee, a coffee and the flowers.\" \n\n\"Are you hungry?\" \n\n\"Oh yes and now I need to eat.\" She didn't get out of bed she just slid down and teased me with her tongue. She eventually relented, made me come and I screamed loudly, but most of that was sheer joy. I asked her to move up the bed and she knee-walked until I could drive my tongue inside her. She held the headboard and writhed with her eyes closed whilst making murmuring noises that I took to be from pleasure. I slid my hand under my pillow and pulled out my little friend who'd been getting a lot of action in the last few weeks. I worked it around and managed to switch it on and held it against her rosebud. She jerked with surprise as I pressed and then she came so hard that I thought that she might suffocate me. \n\n\"Fuck me, Milly, what was that?\" \n\nI showed her and said, \"It's been busy, but she's nowhere near as good as her namesake.\" \n\n\"You've got a vibrator called Fiona?\" \n\n\"No, just Fi. We're in love. I know there's an age thing going on, but she's good looking, never tires, she never causes trouble, doesn't eat much and doesn't leave me her laundry. What more could a girl want?\" \n\n\"And I thought that you missed me.\" \n\n\"Just a little. Fancy a walk to the pub?\" She nodded. \"I need to find a clean dress; someone caused me to spill a full glass of red wine.\" \n\n\"Could you go naked?\" \n\n\"Pervert.\" I gently punched her shoulder and she fell back as if I'd hit her with a baseball bat. \n\n\"And I thought that you loved me.\" \n\nI'm sure that if Fiona wasn't arm in arm with me I would have floated along. We looked at each other across the table and talked about her work. I simply stared at her and wondered why such a beautiful smart young girl would allow herself to fall in love with a middle-aged woman. I didn't know why, but I was so grateful that she had and I hoped she would continue to love me. \n\nI clutched her around the waist as we headed home, just in case she decided to run off. I laughed at her stupid jokes and she teased me. In bed that night we were soft and gentle and loving. No screaming, nothing fast, lots of kisses, heaven, sheer heaven. \n\nIf four weeks had been a test of our relationship, then we'd passed. I knew with a certainty that I'd not felt since the day that I realised I was a lesbian or when I had walked down the aisle with Alex, I knew that I wanted this girl and wanted her badly. Age be damned! \n\nWe stayed in bed on Saturday morning and in contrast to the previous evening, I took control and I was brutal. I used vibrators, I bit, I nibbled, I pinched and when I got my fingers inside her I was forceful. When I heard her swearing and cursing at me I knew that I was on the right track. When she was finished I kissed her and walked away. I didn't need to come, I was satisfied. I'd never known anything like this, I could spend two hours having sex, not orgasm and walk away satisfied and smiling. \n\nLater we went for a walk, arm in arm. She loved me and I knew it for sure. \n\nSunday morning was magical, but it was all going to end very soon and sure enough in early afternoon she had to leave. This time I smiled as I waved, grinning at our weekend and feeling solid about our future. \n\nShe sent a text to tell me that she'd arrived and it was the filthiest text that I'd ever received. I took my girlfriend, Fi, to bed that night and left her under the pillow. My memories were so much better. \n\nTogether again \n\nI managed to survive for two more weeks, but I'd packed my bag three times in my eagerness. I set off and arrived at Jess's salon early for my appointment. \n\nShe greeted me warmly and sent me for a shampoo. After asking what I wanted her to do she asked how I was. I told her. She filled me in on the gossip and then mentioned Fiona. \"She's loved her work and occasionally we've seen her old self, but to be honest most of the time she's been moping around and miserable. I have no doubt how she feels about you, but I must be honest, the age thing still bothers me.\" \n\n\"Jess, I understand a little of how you must feel. You must think that I've betrayed you, you worry that I'll hurt her, that it won't last, that I'm a predator, that she's bewitched. Do you think that I haven't thought all of those things? I can't help how I feel and I don't think that she can either. I've always liked, loved, the two of them, but Jane was right, there was always something a bit special about Fiona for me.\" \n\n\"It's okay; she's talked to me about it, all of it.\" \n\n\"I have to confess after Jenny died, I did need someone and Fiona was perfect. But I knew then that something had shifted for me, I kept thinking if only she was older or I was younger, but I tried to hide it and deny it. Nothing was going on; at least not actually going on, except it was in my head and, as we now know, in hers too.\" \n\nJess said nothing. \"When we were together all the time there was chemistry between us and the night that she kissed me I told myself over and over again to stop, but neither of us could. I've never felt anything like that before. I can promise you that I'd never, ever, do anything to harm her.\" \n\nJess, Victoria and I were sitting chatting when Fiona arrived. I heard her bags drop and she flew through the door and dived on top of me. \"Milly, thank god. I've missed you, I love you.\" \n\n\"For goodness sake behave you two.\" Victoria was laughing. We did slink away for a few minutes and hugged. \n\nWe managed some very quiet sex that night, but the important thing was that we were together again. \"So where are we going?\" \n\n\"You'll see when we get to the airport.\" \n\n\"What do I need to pack?\" \n\n\"Light clothes, swimsuits, sun cream, sunglasses and I have those packed already. You only need your passport. Anything else we can get when we get there. I love you.\" \n\nJane dropped us at the railway station early and we held hands all the way to London. Fiona saw the check-in queue. \"Barbados, are you serious? I thought we were going to Spain or Crete or...\" \n\nI held her close, \"You and me, two weeks, sun, sea, sand, rum and... palm trees.\" \n\nShe mouthed the word \"Sex?\" I nodded and she kissed me. I held her hand as we took off and, apart from going to the loo, I never let it go for more than a few seconds. \n\nWe had a lovely room set in gardens, a few feet from the beach and the Caribbean Sea a few feet beyond that. We were all-inclusive with a selection of places to eat and as much as we wanted to drink. We swam, sailed, water skied, walked and even played a round of golf, badly! But most of the time we gazed at each other, held hands and kissed. A couple of people asked about our ages, although they were not so direct, and we told them the truth. Our ages were irrelevant to us. \n\nOn our last night, Fiona was sitting reading and I was lying on the bed watching her, thinking how beautiful she was and how much I adored her. If I'd harboured any doubts about having a relationship with her, they were gone, well and truly gone. How long would it last? I had no idea, but I was as happy as I could be. \n\n***** \n\nThe story will continue."
    ],
    "authorname": "sandy_paris",
    "tags": [
        "lesbian romance",
        "lesbian sex",
        "light bondage",
        "love",
        "nipple clamps",
        "older woman",
        "teasing",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/milly-scott-pt-02-the-artist-and-her-young-lover"
}