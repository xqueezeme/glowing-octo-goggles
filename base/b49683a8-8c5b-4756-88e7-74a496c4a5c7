{
    "title": "Jack O' Lanterns",
    "pages": [
        "*Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nDisclaimers: This story has been edited by myself, utilizing Microsoft Spell-check. You have been forewarned.\n\n*.*.*\n\nIt smelled of harsh cleaners and mold in the custodian's closet. Deidre Whitehead knelt down, sucking and stroking the young man's five inch erection. If they'd been in a more discrete location, she would have been making loud slurping and sucking noises; boys liked when she made noise while sucking their cocks.\n\nBut noise could alert anyone walking past that something was going on the other side of the unlocked door. If a teacher opened the door, both Deidre and Tommy would be expelled. Holding hands was strictly forbidden in the Cabrini Catholic High School students' handbook. If hand-holding earned a student a detention; then sucking cock would be far worse.\n\nIf they'd been in more comfortable surroundings, Deidre would have been rubbing her pussy; she loved sucking cock. She loved the taste of a man's flesh, his sweat mixed in with traces of soap, even a tinge of urine. She loved the taste of their excitement as it leaked from the tip of their cocks, loved the taste and texture of their semen as it jetted into her hungry mouth.\n\nBut smelling Mr. Sammy's old gray, almost blackened mop strands, the harsh chemicals the man used was not romantic. Deidre's pussy was not wet as she sucked the popular boy's cock.\n\nAnd she had a reason to be in the closet, sucking with purpose. She had something she wanted from Tommy Dawson. And he had agreed, for a little mouth action up front, then a little pussy afterward.\n\n\"Ugh, aw shit,\" Tommy hissed as Deidre's cheeks hollowed.\n\nAt the first spurts of Tommy's spunk, Deidre did feel a little moisture seep into her panties. She really loved the taste of semen. She swallowed the first three thick spurts, then held the fourth and fifth spurts, savoring the salty bitter semen before finally swallowing it down.\n\n\"All right, you come over tonight and I can measure you,\" Deidre whispered as Tommy zipped up his khaki trousers.\n\n\"Hmm? Oh, yeah, that,\" Tommy smirked. \"Uh, no.\"\n\n\"Uh no? What you mean...\" Deidre hissed as she got to her feet, smoothing her pleated skirt down.\n\n\"Taking Lauren, but, uh, thanks for the blow job, Piggy,\" Tommy smirked and flung open the door of the closet.\n\n\"You, but I...\" Deidre stuttered, angered, and hurt.\n\nFour minutes after swallowing Tommy Dawson's sperm, Deidre sat on a commode, sniffling softly. She wiped at her eyes, then put her horn rimmed glasses back on.\n\nMegan Anders came into the girls' restroom and heard the snuffling sounds coming from the last stall. She ducked into the stall next to that stall and did her business. The sniffling continued as she sat.\n\n\"Hey,\" Megan said softly. \"You all right? Can I do anything?\"\n\n\"No,\" Deidre said sullenly.\n\n\"You sure? Deidre? That you?\" Megan asked as she flushed.\n\nDeidre blotted her eyes again, then blew her nose. She opened the door and stepped out.\n\n\"What's wrong?\" Megan asked the short, plump girl.\n\n\"I need a date for the Halloween Dance!\" Deidre wailed. \"It's in two weeks; I already got the tickets and everything, but...\"\n\n\"Good grief! It's in two weeks! So you got two weeks find someone,\" Megan encouraged.\n\n\"No! No, no, no! I got to make their costume and everything,\" Deidre shrilled.\n\n\"Oooh,\" Megan said, nodding her head in understanding. \"Got it.\"\n\nShe smiled as they washed their hands. Deidre did not smile as she wet the lenses of her thick glasses.\n\n\"Well, I'd go with you, but I'm already going with Pat,\" Megan said.\n\n\"I uh, really? Pat? And you?\" Deidre asked, more than a little surprised.\n\n\"Uh huh; kind of keep it to yourself, huh?\" Megan smiled as she dried her hands.\n\n\"I uh, yeah, I mean, who I'm going tell, huh?\" Deidre said bitterly. \"Not like anyone ever talks to Piggy anyway.\"\n\n\"I'm talking to you,\" Megan pointed out.\n\nThe tall cheerleader and the short, pudgy nerd left the bathroom and hustled toward their homeroom. Sitting together, Deidre told Megan of giving Tommy a blow job earlier that morning, only to be rebuffed afterward.\n\nMegan glared over Deidre's shoulder at the smirking Tommy. Then she smiled sympathetically at Deidre.\n\n\"And Roy done the same thing,\" Deidre continued her tale of woe. \"And David, oh, and Chad-O, and...\"\n\n\"Give me your phone number,\" Megan said as Sister Catherine came in to the room. \"Girl, I promise you, by tonight? You going have you a date, hear?\"\n\n(By lunch-time, Pat and Megan told Lauren about Tommy's extra-curricular activities in the custodian's closet. They also informed Rebecca about Roy's dalliance with Deidre, as well as Roy's attempted dalliance with Megan. Ashley shrugged her shoulders when she was informed of David's throat fucking Deidre; as long as she didn't have to suck dick, Ashley was fine with David getting that done elsewhere. Pam was less inclined to forgive than Ashley had been, but was angry with Deidre, not Chad-Oh. Debbie and Charlene were likewise angered with 'Piggy' and not with their boyfriends. Pat had to point out to the three that if their boyfriends had not lied, had not manipulated Deidre, had kept their zippers firmly up? Then they'd have no cause to be angry with Deidre.)\n\nAfter school, after cheerleading practice, Megan called Matthew, her older brother. Matthew lived in McNamara Bridge, a college apartment complex. The building was a four story tall building with four bedrooms, a common living room and kitchen, along with two bathrooms on each floor. Matthew preferred to pay three seventy five a month to share a bathroom with one other young man, and a living room and kitchen with three other young men than live at home for free. But as long as Matthew kept up his4.0 GPA, Mr. and Mrs. Anders gladly paid the three hundred and seventy five a month.\n\n\"Hey dork face,\" Megan cheerfully greeted Matthew when he answered his phone.\n\n\"Hi, lowly high school student,\" Matthew cheerfully retorted.\n\n\"Listen, got a friend, needs a date for the Halloween Dance,\" Megan said.\n\n\"Hmm? When is it?\" Matthew asked.\n\n\"Um, it is...the twenty seventh. Saturday the twenty seventh,\" Megan said, checking her phone to verify this.\n\n\"Aw, damn, I can't,\" Matthew said. \"Got that display in Shreveport that day.\"\n\n\"Mattie!\" Megan whined. \"But I promised her...\"\n\n\"Hey, let me call you back; uh, give me five,\" Matthew offered.\n\nMatthew walked out of his bedroom and rapped smartly on the door of his neighbor, Harold Doucet. He could hear the steady, rhythmic clank of metal touching metal from inside Harold's room and knew Harold was doing his leg curls. He rapped a little harder.\n\n\"Hmm? Yeah?\" Harold called out.\n\n\"Harold, my man, old buddy old pal,\" Matthew put his smarmiest expression on his face.\n\n\"Deck, don't make me kill you, please? Ruins my whole day people do that shit,\" Harold grunted, relaxing his left leg, bringing the bar down.\n\n\"Damn, how much you got on there?\" Matthew asked, looking at the large disks mounted on the padded bar.\n\n\"Enough. Come on, Deck, get to it, huh?\" Harold said, wiping his face.\n\n\"My sister's got a friend needs a date for some Halloween Dance, uh, on the twenty seventh,\" Matthew said. \"I can't; going be up in Shreveport that day.\"\n\n\"Your sister? Isn't she like in high school?\" Harold asked and started doing his exercises with his right leg.\n\n\"Damn, I bet I couldn't even do that once,\" Matthew said, watching Harold's almost effortless leg lifts. \"Huh? Oh, yeah, yeah, she's in high school.\"\n\n\"Come on, man, really?\" Harold asked. \"Really? High School?\"\n\n\"Dude, do this and I'll owe you, huh?\" Matthew wheedled.\n\n\"Twenty seventh? Yeah, shit, guess so,\" Harold said. \"Nothing going on I know of.\"\n\n\"Awe. Some. And, like I said, I'll owe you big time,\" Matthew said and watched for another few minutes as Harold hefted the large disks. \"Hmm, unbelievable, dude.\"\n\nHarold looked up when the flash from Matthew's cell phone let him know his picture had been taken. He threw the sweaty towel at Matthew.\n\n\"Ew!\" Matthew mock-screeched. \"Dead skin cells touched me!\"\n\nMegan squealed when Matthew called her and let her know he'd managed to get a very handsome date for her friend. When Harold's picture came over, Megan joked and said she'd take Harold instead; Deidre could have Pat.\n\n\"Hello?\" a dejected Deidre answered her phone.\n\n\"I got you a date with, oh my God, Matthew? My brother? He sent me this picture? Guy's name is Harold, anyway, girl? He's gorgeous, I swear,\" Megan enthused.\n\n\"You're joking,\" Deidre said, brightening.\n\nHarold finished his cool-down reps then wiped off his sweaty face and chest. He looked over when his phone started playing AC/DC's 'Back In Black.'\n\n\"Hello? I don't need my credit card interest rates lowered, I've never stayed at your resort, and I'm so thrilled I won a cruise but I get sea sick so just send me the money instead,\" Harold answered when he did not recognize the phone number.\n\n\"Huh? I uh, hello? I, this Harold Doucet?\" a female voice asked.\n\n\"I am. Who's this?\" Harold asked genially.\n\n\"I uh, hi, uh, this is Deidre Whitehead,\" Deidre stammered.\n\n\"Who? Oh, oh, wait, Matthew's sister's friend?\" Harold asked. \"Wow, that was quick; he just left out of here five seconds ago.\"\n\nHarold got the girl's address and promised he'd be there in thirty minutes when she explained that she needed to measure him for the costume. He smiled and ended the call.\n\n\"Deck!\" Harold yelled, rapping on Matthew's door. \"Owe me big time, hear?\"\n\n\"Uh huh,\" Matthew yelled in reply.\n\nHarold made quick work of showering; using Matthew's soap and shampoo. If Matthew was lazy enough to leave his shower products behind, when the rules said quite clearly that you were not supposed to leave your items in the bathroom, then Harold saw nothing wrong in using Matthew's shampoo and soap. He also helped himself to Matthew's toothpaste before leaving the bathroom.\n\n\"Hope I got my hair all over your bar of soap,\" Harold yelled through Matthew's door. \"Going meet with your sister's friend now. Bitch, you going owe me big time, hear?\"\n\n\"Damn it; I left it in there again?\" Matthew complained, getting out of his bed.\n\n\"Uh huh, and, bitch, quit getting the Dial, huh? I like Irish Spring a lot better,\" Harold said, shutting his bedroom door.\n\n\"Why you think I get Dial, huh?\" Matthew said, gathering up his shower supplies.\n\nHarold got his bicycle down, strapped on his helmet and pedaled to the Wesley Street address Deidre had given him. The houses were large, palatial houses in a neatly manicured neighborhood. Harold shrugged his shoulders as he looked at the opulent homes.\n\nHe had grown up in a home much like these in Benhurst, Colorado. Dr. Stanley Doucet was a skilled neurosurgeon that made a fortune in his profession. His money bought him cars and a large fancy home and a string of trophy wives that he never had time to enjoy.\n\nThe first Mrs. Doucet, Harold's mother was a professional shopper. She did not buy for anyone other than herself, but she had the finest in jewelry, the finest in haute couture, the neatly manicured lawn, the highly polished furniture.\n\nThankfully, her pancreatic cancer took Kimberly Deborah Ziegler Doucet quickly. It took her before she had time to squander her trinkets and real estate holdings and stocks and diversified treasury notes, frantically searching for a cure that would not stop the disease. Harold had been eleven when his mother passed and lived with his father and his father's wife of the day until he left Colorado for the University of Louisiana at DeGarde.\n\nSo, Harold was not impressed with the homes, or the luxury automobiles, the gleaming sports cars as he pedaled up to the address.\n\n\"Now, who would that me?\" Dr. Maurice Whitehead asked as he looked up from his latest sketches.\n\n\"I got it! I got it!\" Deidre screamed, thundering down the stairs.\n\n\"Slow down before you break your neck,\" Maurice ordered.\n\n\"Deedee, really!\" Maria Whitehead, Deidre's step-mother chided as Deidre barreled toward the door.\n\n\"Hi! You Harold?\" Deidre shrilled, yanking the door open.\n\n\"Aw. Damn,\" Harold said, looking down at the five foot, two inch Deidre Whitehead.\n\nThe girl's face was puffy; she weighed one sixty. Her brown hair was shoulder length, and looked unkempt. Her big brown eyes were magnified by her thick horn rimmed glasses.\n\nHer nose had an upturned tilt to it; this gave her a slightly piggish appearance. Deidre's lips were pouting, light pink on her pale face. Peering up at Harold, her pouting lips were open in a look of astonishment.\n\n\"Man, told Deck he was going owe me big time for this,\" Harold smiled down at the chubby girl.\n\n\"Deck?\" Deidre asked, frowning at the muscled giant. \"And why's he owe you?\"\n\n\"Deck. It's short for 'Pointdexter.' We call him that because he's a total dork,\" Harold smiled, holding out his hand. \"Told him he was going owe me, setting me up with you. But now? Man! I owe him, big time owe him for this.\"\n\nDeidre blushed when she realized she'd just been given a compliment by the handsome man. She took his hand and reflected how much larger his hand was than hers.\n\n\"Deidre, who's your friend?\" Maurice Whitehead asked, coming to stand behind his daughter.\n\n\"Harold Doucet, sir, nice to meet you,\" Harold said brightly. \"By the way, beautiful home you got here.\"\n\n\"Thanks. I like it,\" Maurice smirked. \"What I especially like about it? Keeps all the mosquitoes out. But you two are letting them all in, standing there with the door all open.\"\n\n\"Sorry,\" Harold said. \"Uh, there somewhere I can put my bike?\"\n\n\"Gate's open; put it back there,\" Maurice offered, pointing in the general direction of the gate.\n\n\"Thanks. Be right back,\" Harold said.\n\n\"And, uh, where'd you meet him?\" Maurice asked his daughter as she watched the handsome man jog around to the back gate.\n\n\"Megan's brother knows him,\" Deidre offered.\n\n\"And I know this Megan?\" Maurice continued. \"Or her brother?\"\n\n\"I'm back,\" Harold said brightly.\n\nWhen Deidre turned, Harold looked at the girl's large buttocks, bursting out the bottom of her cutoff jeans. He followed the two magnificent globes of flesh that stretched and undulated as she led the way to the living room.\n\n\"Hey, wait a minute; I know you,\" Harold smiled, extending his hand to Maurice. \"You're Dr. Whitehead! Dean of graphic design, right?\"\n\n\"Mm-hmm,\" the man agreed, taking the offered hand. \"And right now? Worried father of an eighteen year old high school girl.\"\n\n\"That's understandable,\" Harold agreed. \"But, like I was telling Deidre? My neighbor Deck, Matthew? His sister asked him to ask me to ask Deidre out; you've got a Halloween dance or something?\"\n\n\"Yes, God, going have get a bunch more orange,\" Deidre agreed. \"How tall you is?\"\n\n\"How tall I is?\" Harold asked, blue eyes twinkling. \"Glad to see our educational system is alive and well, huh?\"\n\n\"Thank you, young man,\" Maurice chuckled.\n\nMaria also chuckled. Harold nodded politely to the attractive young woman. The Latin woman came and put a loving arm on Maurice's arm.\n\n\"How tall are you?\" Deidre repeated, glaring at both her father and the young man.\n\n\"Six feet, five inches and two hundred and forty one pounds,\" Harold smiled, flexing slightly. \"Was two ninety four, but been doing that Ketosis diet? Works, you hear? Soon as I'm down to two twenty plan on cutting back on it.\"\n\n\"And I know you,\" Maurice said suddenly. \"Played free safety for the Storm.\"\n\n\"Yes sir,\" Harold agreed. \"Even went to the Browns as a walk-on.\"\n\n\"What happened?\" Maurice asked.\n\n\"Defensive coordinator said I was good,\" Harold shrugged. \"Problem is? They don't need good. They need great and they just didn't have the time train me to be great.\"\n\n\"Well, that's stupid,\" Deidre declared.\n\n\"Deidre, when they're paying millions of dollars? It's not stupid,\" Harold patiently explained. \"It's their money.\"\n\n\"Young man? I think I like you,\" Maurice smiled.\n\n\"What. Ever,\" Deidre said. \"Now, I need measure you, okay?\"\n\nHarold and Maurice chatted pleasantly while Deidre left the room. Harold resisted the urge to watch Deidre's buttocks when she walked out of the room. He resisted the urge to look at her quite impressive chest when she came back into the living room, holding a cloth tape measurer.\n\n\"Hey! I'm taller than you!\" Deidre teased as she stood on a dining room chair.\n\n\"Not for long,\" Harold said and stood on his tiptoes.\n\nAfter Deidre had measured Harold twice, making sure to have the accurate measurements, Harold shocked her when he asked her if she'd like to go to Cowboy's BBQ for dinner the following evening.\n\n\"I mean, if that's all right with you, sir?\" Harold quickly asked Maurice. \"I mean, I know I'm twenty three, but...\"\n\n\"No, no, that's fine,\" Maurice agreed.\n\nMaurice hugged Maria around her waist. The Latin beauty smiled at him.\n\n\"I'm fifty six; Maria here's nineteen,\" Maurice joked.\n\n\"Maury, quit!\" she laughed. \"I'm thirty four and you know it.\"\n\n\"That all right with you? If we go get some barbeque? Then after, maybe I'll let you win at golf?\" Harold asked Deidre.\n\n\"Let me? LET ME?\" Deidre hooted. \"Last time I was there? Got a sixty six.\"\n\n\"Wow!\" Harold said. \"And what'd you get on the second hole?\"\n\n\"Oh, shut up,\" Deidre laughed.\n\nHarold took his leave and pedaled back to his communal apartment. Once inside his bedroom, he unzipped his shorts and freed his aching eight inches of thick meat.\n\nDeidre Whitehead wasn't beautiful; at best she was cute. But her puffy, pouty lips would look beautiful wrapped around his cock. Her impressive chest, Harold deduced she had at least a 36DD, possibly even a 36E set, would look beautiful wrapped around his throbbing meat.\n\nAnd just thinking of spreading her magnificent globes, licking at her sweet little rosebud, then spearing that tight little hole with his thick cock had Harold spurting heavily into his wadded up towel. Harold groaned and stroked out a few more spurts, imagining squirting deep into Deidre's bowels.\n\nThe next morning at Cabrini, Megan laughed happily when Deidre bounded over and hugged her tightly. Pat just smiled and walked away. From front door to locker to homeroom, Deidre babbled on and on about meeting Harold the previous evening, and about having a date for that evening.\n\n\"He's going feed you? Hope he's got a bunch of money,\" Roy snapped, angered at Piggy for tattling to Rebecca about the blow job he'd received from the pudgy girl.\n\nPat's foot caught Roy unaware and everyone laughed when Roy tumbled to the floor. Even Rebecca giggled as her boyfriend, or ex-boyfriend got to his feet.\n\nAt lunchtime, Megan surprised Deidre, and Pat, when she waved Deidre over to the cheerleaders' table. Now that Darlene wasn't going to the Halloween Dance with him, Brent plopped down in the seat next to Deidre and offered to go with her to the dance. After all, he did owe it to Deidre for the earth shattering blow job she'd given him.\n\n\"Thanks, but I've already got a date,\" Deidre smugly told the loutish youth.\n\n\"Yeah, right, Piggy. What the fuck ever,\" Brent smirked. \"Hey Megan? What about you, huh?\"\n\nMegan 'scratched her nose with her middle finger. Then she smiled sweetly and told Brent she'd rather give herself an enema with Crystal's Hot Sauce than go anywhere with him.\n\nAt Cowboy's, Harold impressed Deidre when he told her he was going to the University of Louisiana at DeGarde, working on his Master's in Business Administration. He made her laugh with stories of dormitory life.\n\n\"So, why'd you move right back in, then?\" she asked, pushing her glasses up her nose.\n\n\"Cheap,\" Harold admitted. \"But the McNamara Bridge isn't exactly a dorm.\"\n\nAt the Golf-O-Rama, Deidre looked over, actually alarmed when Harold let out a slight groan. She smiled at his embarrassed smile, then bent over again to put her bright yellow ball onto the tee.",
        "\"What?\" Deidre demanded when Harold let out a second groan.\n\n\"Damn, girl, you bend over like that?\" Harold said. \"I mean, damn! You know you got a fine butt, but you don't got do that, huh?\"\n\n\"It's too big,\" Deidre stated.\n\n\"It is big,\" Harold agreed. \"And juicy, and gorgeous and...\"\n\n\"Shut up!\" Deidre squealed.\n\nHarold surprised her by stepping up behind her and pulling her tightly against him. He then put his lips to her ear.\n\n\"And sexy and hot and...\" Harold continued his assault.\n\nDeidre made him groan again when she wiggled her luscious buttocks against his thigh. With a giggle, she then gently pushed him away.\n\n\"Ha! Beat that, huh?\" Deidre hooted when she managed to get a Par 4 in just three strokes.\n\n\"Okay,\" Harold said when he'd managed it in just two strokes.\n\nAt the second hole, Deidre made a display of bending over. Harold smiled at her cheeky little smirk. She lost the smirk when she went one stroke over.\n\n\"How about a little bet, keep this interesting?\" Harold asked as he prepared to putt.\n\n\"Like what?\" Deidre asked, immediately on guard.\n\nShe was very attracted to Harold; he was handsome in a rugged way. He also dressed well, had his blonde hair cut in a flattering style. He was smart and funny.\n\nIt also didn't hurt that he seemed to find her attractive. He had even said that she was sexy. Well, he had said she had a sexy butt.\n\nDeidre looked at Harold's large hands. She could imagine how those hands would feel as they grasped, squeezed her 35E breasts. She could imagine how those hands would feel pinching, twisting her nipples, making her gasp out.\n\nDeidre would gladly suck his cock; she loved the looks of the lump in his nice dress slacks. She would love to fuck him, feel him fill her pussy up.\n\nBut Deidre didn't want to be pressured into it. She didn't want to be coerced, tricked into blowing him, or fucking him. For once, she'd like to have a choice, or at least feel like she had a choice in the matter.\n\n\"A kiss for each hole I win?\" Harold asked.\n\n\"And what if I win?\" Deidre asked, stomach muscles unknotting.\n\n\"What would you like?\" Harold asked. \"I mean, I know this is only our first date, but I'd really like to kiss those beautiful lips of yours.\"\n\n\"A kiss sounds nice,\" Deidre agreed.\n\nShe then squealed in indignation when he managed a hole in one. Their first kiss was a sullen quick little peck on the lips.\n\n\"Aw, come on, huh?\" Harold laughed.\n\n\"That's all you get,\" Deidre grumbled.\n\nBut by the seventh hole, their kisses were long, heated lip locks. Deidre could feel her juices soaking through her cotton panties as her fingers rubbed his muscled arms through his pullover shirt.\n\n\"Sixty four to what?\" Harold teased when they returned the putters to the counter.\n\n\"Shut up; I let you win,\" Deidre declared.\n\n\"All that whining you was doing? Then you a mighty sore winner,\" Harold teased.\n\nHe then drove them to Yum Yum Ice Cream for sundaes. He didn't offer any comments when Deidre ordered the large hot fudge. Over their sundaes, Harold asked about the costumes, asked about the dance.\n\nDeidre told Harold about her hated nickname of 'Piggy,' of always being the fat kid. She told him about being an 'oops' baby; her father had been thirty eight and her mother had been forty when she'd been born. She told him about her mother abandoning her and her father when she was just three years old. Deidre told Harold about her step-mother Claudette French, told Harold how, in front of Maurice, Claudette would smile and say sweet things to Deidre, but when Maurice was not around, Claudette would call Deidre a fat, ugly brat.\n\nAnd then, one day, Claudette too just walked away from the marriage, from Deidre. According to Maurice, there'd been no arguments, no sign that Claudette was unhappy. She just simply walked away.\n\nDeidre definitely had abandonment issues, suffered from low self-esteem. Harold had taken a few psychology classes in his undergraduate studies and figured that the girl was ripe for people to take advantage of her. Her overeating was most likely a symptom of her issues.\n\n\"And I said to myself, 'this year? You a senior. You not going sit at home no more.' Of course? Homecoming Dance? Where was I?\" Deidre continued.\n\nAt home?\" Harold asked gently.\n\n\"Uh huh,\" Deidre mumbled.\n\n\"Well, wish I'd known you then,\" Harold said.\n\nHe smiled when she reached across the table and linked fingers with him. Her stubby little fingers were lost in his large hand.\n\nHer soaked panties became sodden when Harold took her hand and kissed her fingers. She blinked back some tears as he squeezed her hand again.\n\n\"So, uh, what you doing tomorrow?\" Harold asked as they left the ice cream shop.\n\n\"Working on our costumes,\" Deidre reminded him. \"Oh! And I got a paper to do for History. We're in the American Revolution.\"\n\n\"Well, George Washington was pretty tall for that time period,\" Harold said, opening his truck door for Deidre.\n\nHe bent and kissed her. He could taste the hot fudge on her lips. She smiled up at him.\n\nHe chanced a quick fondle of her delectable buttocks as she climbed up into his F150. Again, he was rewarded with a smile.\n\n\"But I bet none of the soldiers at Valley Forge asked him 'how tall you is?'\" Harold teased, then closed the door on Deidre's indignant squeal.\n\n\"You a big old butt hole!\" she yelled when he got into the driver's seat.\n\n\"Uh huh,\" he laughed and leaned over his console to kiss her.\n\n\"No, nuh uh, go away,\" Deidre grumbled, pushing at him.\n\nShe laughed when he grabbed her flailing hands and kissed her. She wrapped her chubby arms around his neck and kissed him deeply.\n\n\"Go down Nineteen,\" Deidre ordered.\n\n\"Okay,\" Harold shrugged.\n\n\"Um...there, go behind that church,\" Deidre ordered, pointing.\n\nFellowship Baptist Church in Baylor Lake, Louisiana was empty on a Friday evening. So, the back parking lot was empty. On Wednesday evenings and Sundays, the front and rear parking lots filled quickly and late comers often had to park along Highway 19.\n\nHarold parked and turned the truck off. Deidre twisted in her seat and kissed him. She took her glasses off and put them into the cup holder on his console. After a few more kisses, she wiggled out of her blouse.\n\n\"Damn, aw damn,\" Harold enthused, looking at Deidre's lacy bra and large breasts.\n\nHer shoulders, chest and belly were pale. In the weak light from the church building, her flesh looked almost sickly white.\n\nDeidre unclasped the bra and let her large breasts tumble. She peered, nearly blind without her glasses, trying to gauge Harold's reaction.\n\n\"Come on, get over on this side, huh?\" Deidre suggested, easing the seat back as far as it would go.\n\nHarold gave her another kiss, then got out of the truck. Deidre twisted around and slid to the floor of the truck.\n\nHarold got into the truck and Deidre pushed his long legs apart so she could kneel between them. She reached up and began to fumble with is belt. Harold's large hands began to fondle and caress Deidre's large breasts.\n\n\"Ah!\" Deidre gasped as she freed Harold's eight inches of thick meat.\n\nEven without her glasses on, Deidre could see that Harold's cock was substantial in length and girth. Her hands wrapped around the thick rod and stroked it for a moment.\n\nHarold's fingers had found Deidre's nipples and he pinched and twisted them until Deidre grunted. She pulled Harold's cock toward her mouth and slobbered noisily over the head of his cock. Then when she had his meat coated with spittle, she slid her mouth over the knob. Her hands jacked his spittle laden length as she bobbed her head along the first few inches. Her tongue lapped at his cockhead, tasting his excitement as it oozed from the tip.\n\n\"Mm-hmm,\" Deidre moaned as Harold's hands continued to tease her breasts.\n\n\"Mm-hmm, aw damn,\" Harold moaned as Deidre now had over half his cock in her hot mouth.\n\nHarold could tell that this was not the first cock the eighteen year old girl had ever sucked. Her hand action and tongue action and throat action were too good, too practiced to be beginner's luck. And it was obvious that Deidre Whitehead liked sucking cock. She had one hand wrapped around the base of his cock, the other hand jammed down the front of her unzipped jeans.\n\n\"Mmph!\" she screamed around his cock and Harold could feel her pudgy body shuddering in orgasm.\n\nThen she increased the noise level of her blow job. She moaned and slurped as she bobbed her head up and down the full length of his cock. Then she stiffened and moaned as a second orgasm racked her body.\n\n\"Damn, girl, here, ugh, here it...\" Harold groaned as the sperm bubbled up from his balls.\n\n\"Mm-hmm,\" Deidre encouraged.\n\nShe swallowed his thick ropes of semen, holding the last two spurts in her mouth for just a moment, savoring the taste. Then she swallowed his semen and bobbed her head up and down the length of his cock, cleaning it.\n\n\"Damn,\" Harold groaned, slumping back.\n\nDeidre giggled happily. Then she squealed as Harold lifted her from floorboard to sit on his leg. Harold cuddled her for a moment, right hand gently rubbing her nude back and jeans covered buttocks, his left hand bobbling her breasts. His thumb circled her areolae, then he pinched her right nipple. She groaned in pleasure as he stretched the nipple out from her chest.\n\nHarold Doucet surprised, shocked Deidre. He bent and kissed her gasping mouth. He put his lips to her lips, then thrust his tongue into her mouth as his thumb and forefinger teased her nipples.\n\nNo boy had ever kissed her after she'd sucked their cocks. Very few boys had ever kissed her anyway. They groped her breasts. They grabbed her pussy. They grabbed the back of her head as they fucked her mouth. But they did not kiss her.\n\nDeidre grabbed Harold in a fierce hug as they kissed. She twisted around and straddled him and kissed him hotly.\n\n\"Mm-hmm,\" she moaned when his large hands now fondled her large ass.\n\nShe felt him sliding her jeans down, sliding her panties down. His hands cupped her nude buttocks, squeezed them quite forcefully.\n\nA car's headlights swept the rear parking lot. Deidre squealed and frantically slithered down to the floorboard. She scrambled, trying to find her bra in the cramped darkness.\n\nHarold stuffed his cock into his slacks and crawled over the console to the driver's seat. He started the truck and put it into gear.\n\n\"Who you think that was?\" Roy asked Chad-Oh as he rolled a joint.\n\n\"Fuck if I know,\" Chad-Oh said. \"Nice truck, though.\"\n\nBy the time Harold pulled in front of the Whitehead home, Deidre was again dressed, hair brushed, and sucking on a breath mint.\n\n\"Hmm, forty minutes early,\" Maurice commented when Deidre and Harold entered the house.\n\n\"Yes sir, well, you know DeGarde,\" Harold smiled. \"The city that never wakes up.\"\n\n\"Should have seen it when I was your age,\" Maurice agreed.\n\nDeidre and Harold contented themselves with a chaste kiss. Then Deidre watched his truck pull out of their driveway.\n\n\"Uh, he's gone now,\" Maurice teased his daughter. \"Think you can go on up to bed?\"\n\n\"Dad,\" Deidre whined.\n\n\"Maury, quit it,\" Maria said gently. \"Deedee is happy.\"\n\nThe woman smiled at her step-daughter. Her smile widened when Deidre gave her a grudging smile of thanks.\n\nDeidre had guessed correctly; she did have to get more orange satin from Wilson's Fabrics. Just to be safe, she also bought a few more yards of black felt.\n\nMaurice watched his daughter as she scrambled around, cutting, pinning sections together, sewing.\n\n\"Deedee is happy,\" Maria smiled, taking Maurice's hand.\n\nShe leaned up and kissed his cheek. He smiled sadly at her.\n\n\"Come on. I make Daddy happy,\" Maria suggested, pulling Maurice toward their bedroom.\n\nHarold and Deidre sent text messages back and forth throughout the week. But both Harold and Deidre had school assignments to keep up with. Burgeoning relationship or not, both had responsibilities to keep up with.\n\nBut Harold soiled a few towels, reliving Deidre's expert blow job. Harold had enjoyed a few blow jobs before. He'd been a football star in high school; cheerleaders were always willing to gobble down his schlong. In college, he'd had his share of cheerleaders and teacher's aides and even two professors suck his cock. He'd fucked most of them as well.\n\nBut he'd never masturbated to memories of any of those cheerleaders, or teacher's aides, or professors. There had been one girl in high school. She had not been a cheerleader, or a popular girl. She had been desperate for attention, desperate for acceptance. Before meeting Deidre Whitehead, Harold had soiled many a towel, thinking of her full buttocks, her tight little brown ring stretching to accommodate his fat meat.\n\nHarold's first fuck had been a gorgeous blonde cheerleader with muscled legs and nearly flat backside. His second fuck had been a carbon copy of the first, the first having moved on to another football star. \n\nHis fifth fuck had been a short, chunky Asian-American with horrible acne. Harold had felt terrible about how he treated Donna Apple. It had been Donna that had turned him on to the naughty, nasty thrills of anal sex.\n\nNo matter what disgusting, degrading sex act he wanted, Donna was willing to let him do it to her. And then he had dumped her for another bone thin wisp, another cheerleader. The look of hurt in Donna's eyes when she saw Harold in the halls of their high school, parading Thelma, Velma, Mary, whatever that cheerleader's name had been still tore at Harold's guts.\n\nHe had seen Donna Apple, the last time he'd been home, Christmas of last year. She was still a short, fat little thing. Her skin still bore the scarring from her horrible acne and there were other splotches of pimples on her face.\n\nHer eyes had looked directly at him, then looked through him as he stood in line at her checkout. She'd been polite, professional when she rang up his purchases.\n\n\"Donna, I'm sorry,\" Harold had said quietly.\n\n\"Yeah?\" Donna had snarled. \"Well, know what? Sometimes sorry just don't cut it.\"\n\n\"I was young and stupid,\" Harold had tried to defend as she dumped his items into a plastic bag.\n\n\"Obviously, I was too,\" Donna said and turned to the next customer in line.\n\nAfter stroking himself to yet another juicy climax, remembering Deidre's noisy blow job, her large breasts and hard nipples, her full, juicy buttocks, Harold called Deidre's cell phone. She answered on the second ring.\n\n\"We're on for Friday night?\" Harold asked Deidre.\n\n\"Yeah, but we're not playing golf again,\" Deidre said, still miffed about losing.\n\n\"Aw, but I love watching you bend over to tee up,\" Harold complained, smiling.\n\nMama's Po-boys fed them; Harold ordering two roast beef po-boys without the bread. He also declined the French fries that came with the meal.\n\nThen they went to the Go-Cart Ranch in Elgee, Louisiana. When Deidre tired of driving, they spent a few minutes in the adjoining video arcade.\n\n\"You know, supposed let the girl win,\" Deidre complained after he'd destroyed her.\n\n\"I'm trying,\" Harold lied.\n\n\"Are not!\" Deidre laughed, pushing him.\n\nClark's Drive-In fed them each a banana split, then Deidre directed Harold to Huvall's Levee, another make-out spot in DeGarde, Louisiana.\n\nShortly after Deidre had sucked Harold to a knee buckling ejaculation, before Harold could get Deidre out of her snug jeans and panties, a DeGarde police officer rapped smartly on the window of the truck.\n\n\"Come on, move it, okay,\" the officer smirked as Deidre tried frantically to wiggle back into bra and blouse.\n\n\"Yes sir,\" Harold quickly said.\n\n\"Hmm, only twenty minutes early this time,\" Maurice commented when Deidre came in.\n\n\"Yes sir,\" Harold said. \"The paint dried.\"\n\n\"Huh?\" Maria asked, wrinkling her brow in confusion.\n\n\"There's nothing to do in DeGarde other than watching paint dry,\" Harold explained. \"But it dried. What else we going do?\"\n\n\"You're such a goof,\" Deidre laughed.\n\n\"See you next Friday?\" Harold asked, bending to give her a kiss.\n\n\"Yeah. Oh! And Friday? Need try the costume! Dance's Saturday,\" Deidre said.\n\n\"Okay Dokey,\" Harold agreed.\n\n\"It dried,\" Maurice chuckled as Deidre again watched the truck backing out of the driveway.\n\n\"Deedee? I think maybe she is in love,\" Maria whispered, looking over Maurice's shoulder at Deidre.\n\n\"Un. Acceptable,\" Maurice said, getting to his feet.\n\nFriday, right after his classes, Harold made sure to wash his set of pots and pans thoroughly. His three neighbors had a bad habit of 'borrowing' Harold's pots and pans; they were of excellent quality. He didn't mind them borrowing the pots and pans, but he objected strenuously to the lackluster manner in which the flat-mates cleaned them.\n\nAfter cleaning them, Harold then put them into his room, behind locked door. He also made sure to have a clean set of sheets on his bed, and hid the towel that had become quite crusted with his Deidre-inspired semen.\n\n\"Hey, Harold? You seen the big frying pan?\" Matt called out.\n\n\"Mean my large cast iron skillet?\" Harold asked. \"The one someone stuck into the dishwasher?\"\n\n\"Oh, is it...\" Matt asked, opening the small dishwasher.\n\n\"No, bitch, it's in my room,\" Harold said. \"Use that big one right there.\"\n\n\"Teflon's flaking off it,\" Matt complained.\n\n\"Because some dumb ass keeps using the metal spoon on it,\" Harold said. \"And clean off the stove when you finish, huh? Got Deidre coming over for supper tonight.\"\n\n\"Ooh, Harry,\" Matt teased.\n\nHarold also cleaned the bathroom. He loudly complained to Matt, and to one of the other roommates that happened to come home. The fourth roommate was in class; did not have to endure Harold's commentary on the condition of their communal bathroom.\n\n\"Uh, nuh uh, dude, my bathroom's right over here,\" the third roommate stated.\n\n\"Uh huh, and saw your ass in here when Roberto had the flu other day,\" Harold pointed out.\n\nWhile Harold was changing into slacks and dress shirt, Deidre was going through her ritual of finding, trying on, then discarding blouses and slacks. This had become a ritual since the first Friday she had a date with the handsome young man. She also checked, for the third time that hour, that she had breath mints in her purse. She did think to herself that she was possibly becoming addicted to sperm; she could think of nothing else but sucking Harold's delicious cock, coaxing out his delicious sperm, savoring the taste, then doing her best to coax more sperm from his fat balls.\n\n\"Now, what was wrong with that?\" Maurice asked.\n\nDeidre squeaked; she'd not heard her door open. She glared at the intruder.\n\n\"The red blouse; said he's making spaghetti? Red blouse won't show how sloppy you eat,\" Maurice teased.\n\n\"Got a rip in it,\" Deidre pointed out a miniscule tear in the arm hole.\n\n\"Oh my God! Call the police! Call the paramedics! A rip in the sleeve?\" Maurice mocked-cried.\n\n\"Deedee, you sew it?\" Maria suggested. \"Take no time, zip-zip, you done.\"\n\n\"Hmm,\" Deidre mused, then did grab the blouse off the discard pile.\n\nHarold's arrival did cement the decision. Maurice and Maria went downstairs and chatted with Harold while Deidre completed dressing for the date.\n\n\"Oh, when do we try on the costumes?\" Harold asked as Deidre thundered down the stairs.\n\n\"Oh, yeah, now, I guess,\" Deidre said and thundered back up the stairs.\n\n\"Do I follow her, or wait down here?\" Harold asked Maurice.\n\n\"Let's go,\" Maurice said and the trio trooped up the stairs.\n\nHarold brought up the rear. He did notice that Maria had the typical Latin buttocks; an almost perfect upside down heart shape, with a nice swell to it. But he much preferred Deidre's buttocks. Two separate globes of full, jiggly buttocks.\n\n\"And, right here,\" Maurice said, indicating an open doorway.\n\n\"You. Are. Kidding. Me,\" Harold smiled as he saw their costumes for the first time.",
        "\"I know, I know, it's kind of silly,\" Deidre mumbled as she stood, wearing the Jack O' Lantern costume.\n\n\"I don't think it's silly; I think it's perfect,\" Harold smiled.\n\n\"And...\" Deidre said, picking up the hat.\n\n\"Too much,\" Harold laughed as she put the hat on her head.\n\nThe shell went from just beneath her crotch to her neck. There were two arm holes for her pudgy arms to stick out. Her bare thighs stuck out the bottom, looking quite pale against the bright orange satin. Her Jack O' Lantern had black felt triangle eyes and nose, and a smiling three toothed grin.\n\nThe hat was also orange satin and had a green felt stem. Standing there, it looked like Deidre had 'popped out' of the pumpkin.\n\nHarold's costume was substantially taller. His pumpkin had black felt slashes for eyes, an oblong nose, and a fanged grimace of a mouth.\n\n\"There a bathroom I can try this on?\" Harold asked, picking up his pumpkin shell.\n\n\"Mm, yeah, there's a Texaco station three blocks away,\" Maurice said.\n\n\"Dad!\" Deidre shrilled.\n\n\"Harold, we get out, you change here,\" Maria smiled, herding Maurice and Deidre out of the room.\n\n\"Watched you put that together, said, 'looks good.' But seeing it on you? That actually looks great,\" Maurice complimented Deidre.\n\nInside the room, Harold had to shift his erection. Seeing Deidre's bare legs, full, heavy, pasty white had his cock sticking straight out.\n\nHe figured how to step into the costume, then pulled it up and stuffed his arms through the holes. The top of the pumpkin reached to just below his throat. He found and slipped his own pumpkin shell hat onto his head. Deidre had put an elastic band in the brim, making it a comfortable, snug fit.\n\n\"All right,\" Harold called out.\n\nHis cock twitched in the costume when Deidre came into the room again, sexy thighs pumping. She pushed her glasses up and smiled happily at him.\n\n\"It's something else, that's for sure,\" Maurice agreed.\n\n\"Stand together; I want picture,\" Maria ordered.\n\nShe took one with her cell phone. Then Harold fished his cell phone from his trousers and had Maria take a picture. The roundness of the costumes prevented Deidre and Harold from getting too close, but they did hold hands for the pictures.\n\n\"Tomorrow? I'm going be able drive in this thing? How's it keep its shape?\" Harold asked, looking around at the costume.\n\n\"Plastic strips; they bend,\" Deidre assured him.\n\nDeidre, Maurice, and Maria trooped out of the room again so that Harold could change. Then it was Deidre that needed to change.\n\n\"Sweetheart, they really look incredible,\" Maurice encouraged Deidre as the quartet traipsed down the stairs.\n\n\"Yeah, I mean, when you told me what they were, I was thinking they'd look kind of silly, but they really look great,\" Harold agreed.\n\n\"I know what I'm doing,\" Deidre huffed at Harold.\n\n\"See that,\" Harold agreed.\n\nIn the truck, on their way to his apartment, Deidre had a thought. She looked at Harold.\n\n\"You thought it was going look stupid?\" Deidre asked.\n\n\"Not stupid,\" Harold said. \"Just kind of silly.\"\n\n\"But you was going wear it anyway?\" Deidre asked.\n\n\"Well, yeah. It's what you wanted, right?\" Harold asked.\n\n\"And you'd worn it just because I wanted you to?\" Deidre pressed.\n\n\"Well, yeah; anything to make you happy,\" Harold agreed.\n\n\"I love you,\" Deidre declared.\n\n\"Pretty crazy about you too,\" Harold smiled and parked the truck.\n\nThey stood at the stove and cooked the meal together. Harold took the opportunity to touch Deidre often. He took many opportunities to squeeze her buttocks through her snug jeans.\n\nThey were interrupted by Mat and Roberto; both whining that they wanted whatever was left over after Deidre and Harold finished cooking. Behind Deidre's back, Matt smirked at Harold. Matt actually felt sorry for Harold, having to date his sister's fat ass friend.\n\n\"And those noodles made with zucchini?\" Deidre asked as Harold dumped four handful into the boiling water.\n\n\"Uh huh. Don't eat carbs,\" Harold said.\n\n\"Seriously, dude, whatever's left over, huh?\" Roberto begged again as the marinara sauce bubbled.\n\n\"Dude! Go away, huh?\" Harold ordered. \"I all up in your face when your girlfriend was here? Then don't be all up in my face when I got my girlfriend here, okay?\"\n\n\"We wasn't cooking,\" Roberto pointed out.\n\n\"Your girlfriend?\" Deidre asked.\n\n\"Said you love me,\" Harold answered her. \"Maybe I'm stupid, but I kind of figured that meant you my girlfriend.\"\n\nAs Matt bumped him out of the way so he could get to the refrigerator, Harold resolved to take some of the money he had from his mother's estate and get a place of his own. Matt and Roberto ignored the fact that he was on a date. The two boys helped themselves to plates of the meal and had the gall to sit at the table with Harold and Deidre.\n\n\"Noodles taste kind of funny,\" Matt commented, stuffing an immense forkful into his mouth.\n\n\"They're made with zucchini,\" Deidre said.\n\n\"Oh, hey, thought, didn't you have some display in Shreveport?\" Harold suddenly remembered.\n\n\"Hmm? Oh! Yeah. That. Got cancelled,\" Matt lied.\n\nDespite his annoyance with Matt, Harold had to smile. Matt had lied to his sister, then set Harold up with Megan's friend.\n\n\"Well, since y'all ate the last of it, y'all can clean it up, huh?\" Harold said, putting his and Deidre's plates into the dishwasher.\n\n\"Bye,\" Roberto said.\n\n\"Man, just remembered...\" Matt said.\n\nHarold again resolved to get a place of his own as he and Deidre cleaned the three pots.\n\nHarold unlocked the door to his room and ushered Deidre inside. As he closed the door, she wrapped her stubby arms around his waist and leaned her head against his chest. He bent and kissed the top of her head.\n\nFor several long moments, they just stood, arms wrapped around each other. Harold didn't know what to say. Deidre was happy, ecstatic to stand, arms around her boyfriend, her very first boyfriend.\n\nFinally, with a murmured 'I love you' into his chest, Deidre released him and looked around the ten by twelve foot room.\n\n\"God, not much to it, huh?\" Deidre asked, looking at desk, bed, weight bench and weights.\n\n\"God, don't need much; I'm a college student,\" Harold chuckled.\n\n\"So, uh, what you uh, want to do?\" Deidre asked, unbuckling Harold's belt.\n\n\"Oh, I don't know,\" Harold said, edging Deidre's blouse up.\n\nHarold turned off the harsh overhead light and turned on the bedside lamp. He then sat on the edge of his bed and helped Deidre edge her jeans and panties down and off.\n\nThis was the first time he'd seen Deidre nude and he very much liked what he saw. Her breasts were two melon halves, with hard nipples. Her belly had a few rolls of flab to it and had a tunnel of a belly button. Her hips were wide and her pussy was covered by a small triangle of dark brown curls. Her thighs were heavy, pasty white stumps.\n\nTurn around?\" Harold asked, cock throbbing and jerking as he looked at her beautiful body.\n\nHis semen almost jetted out as he looked at her flabby back and full, jiggling buttocks. She stood, uncomfortable as her boyfriend looked at her flabby, saggy body.\n\n\"God damn, you are fucking beautiful,\" Harold enthused.\n\n\"I what?\" Deidre asked, peering over her shoulder at him.\n\n\"Come here, God, you're perfect,\" Harold said, pulling her to him.\n\nHe pulled her to sit in his lap. The moment her chubby buttocks came in contact with his hard cock, he groaned and spurted heavily.\n\nDeidre squealed as she felt the warm semen jetting, coating her lower back and buttocks. She realized that her boyfriend had just come, had just ejaculated on her. And she realized, it had been her, the sight of her nude body that had caused his forceful reaction.\n\nShe reached back and scooped up what semen she could with her fingers. She sucked her fingers clean, then reached back for more.\n\nWhen her back and buttocks were cleaned of his semen, Deidre rolled off of his lap and crawled onto the far side of his bed. She then pulled him to lay next to her. They kissed for several long moments, hands caressing and stroking each other's flesh.\n\nDeidre then bent and took Harold's revived erection into her mouth. She gave the cockhead a loud slurp, dribbling saliva down the length.\n\nDeidre let out a surprised squawk when Harold pulled her left leg up and over.\n\n\"Erk!\" Deidre cried out when she felt Harold's hot breath at the mouth of her pussy.\n\nHarold could see Deidre's puffy lips peeking out of her dark curls. Just above the wet slit, he could see her light brown anus barely visible in the deep furrow of her buttocks. He could smell the heavy musky smell of Deidre's excitement. \n\nBeing significantly taller than Deidre, Harold had to strain his neck to reach her pussy with his mouth. He pulled her back somewhat; bringing her pussy and ass closer to his head.\n\nDeidre paused in her sucking and stroking of Harold's cock. Her eyes opened wide as she felt Harold's tongue lapping at her pussy. Despite the numerous cocks she'd sucked, the numerous cocks she'd had pound her pussy, no one had ever put their mouths on her pussy.\n\nHarold used his fingers to pull her inner lips apart. He blew hot breath across her throbbing clitoris and smiled as Deidre jerked.\n\nHe drove two fingers into her pussy, then put his tongue on her earthy tasting anus. She grunted loudly. He used his thumbs to part her buttocks, attempting to open her anus for his tongue.\n\n\"Ugh!\" Deidre grunted loudly, then remembered she had a thick cock in her mouth, in her hands.\n\nShe stroked his cock, sucking almost frantically. She made loud slurping noises as she pumped his cock in and out of her mouth.\n\nThe sensations in her pussy, in her anus were so distracting. Finally, Deidre shuddered, then began screaming in orgasm.\n\nJust as her orgasm racked her body, Harold's cock erupted, spewing sperm into her mouth.\n\nDeidre almost drowned. She was screaming in orgasm at the same time that sperm was jetting into her mouth. She tried to swallow, tried to breathe, tried to cry out in pleasure.\n\nThe need to breathe won out and she pulled his spurting cock from her mouth. She continued to stroke him, allowing him to coat her nose, lips and chin with sperm.\n\nWhen Deidre's mouth pulled off of his cock, Harold pulled Deidre's body closer to his face and continued to alternate between her pussy and her ass. When he was tonguing her pussy, he had two fingers driving in and out of her anus. When he was tonguing her anus, he had three fingers plumbing her pussy.\n\nWhen she began to suck his cock again, Harold lightly bit down on Deidre's clitoris. His cock muffled her scream as she jerked and writhed on his body.\n\n\"No, no more, no more,\" Deidre wheezed. \"Baby, please, no more.\"\n\n\"God! I have wanted to do that since first time I saw you!\" Harold declared as he lay his head on his pillow.\n\n\"Even, even that, that putting your tongue, licking my butt?\" Deidre asked, still stroking his cock.\n\n\"ESPECIALLY that licking your butt,\" Harold enthused.\n\n\"You're crazy,\" Deidre declared, finally wiping her face of his semen.\n\nDeidre licked her fingers clean, then seemed to remember, she was laying across his chest and belly. She rolled off of him, then wiggled around to lay her head on his chest.\n\n\"I need use a condom?\" Harold asked as her hand again began to stroke his cock.\n\n\"I uh, yeah, you better,\" Deidre agreed. \"My daddy thinks putting me on the pill will just tell me its okay to fuck.\"\n\n\"Kind of crazy,\" Harold said. \"I mean, brilliant man like that? Thinking that kind of stuff?\"\n\nHarold gently pushed her away, then got to his feet. He went to his desk, pulled open a drawer and retrieved a box of condoms. She smiled as he opened the sealed box and pulled out a strip of packaged condoms.\n\n\"I want put it on,\" Deidre said, getting to her knees on his bed.\n\nHarold smiled and walked back to the bed. Deidre grabbed his cock and swallowed half of his length. She sucked and stroked him for a few moments, making sure he was fully erect. Then she rolled the condom on his cock.\n\n\"Hands and knees,\" Harold demanded.\n\nHer legs were much shorter than his; this was not the most comfortable of positions for either one of them. But Harold did enjoy the sight of her fleshy globes jiggling with each thrust.\n\nFinally, his back and knees couldn't take the position much longer. And Deidre was beginning to feel frustrated as well.\n\n\"All right, you, on top,\" Harold said, pulling out and lying on his back.\n\nDeidre turned around, crawled up and straddled his hips.\n\nShe grasped his cock and brought it to the mouth of her pussy. Harold chuckled as Deidre's eyes and mouth opened wide. Then she gasped and shuddered.\n\nHarold pulled her forward slightly and played with her breasts, pinching and twisting her nipples. Then he wet a finger in his mouth, reached back and pulled her left buttock. He slipped his spittle slick left middle finger into her ass.\n\n\"Ugh, aw God damn it,\" Deidre whined and shuddered in pleasure.\n\n\"Like that?\" Harold asked needlessly.\n\n\"Uh huh,\" Deidre whined and began bouncing on his cock with vigor.\n\n\"Going stick my whang up there,\" Harold whispered as he wormed a second finger into her anus.\n\n\"Mother fucker!\" Deidre screamed in orgasm.\n\n\"Stick my dick up there, stick my dick up there, fuck you good,\" Harold taunted as she grunted in orgasm.\n\n\"It fit up there?\" Deidre gasped when her orgasm finally subsided.\n\n\"Make it fit. Get it nice and greasy, make it fit,\" Harold said firmly.\n\n\"I mean, that, that's got to hurt, huh?\" Deidre panted.\n\n\"It hurt right now?\" Harold asked as he worked a third thick finger into her rectum. \"My fingers up there?\"\n\n\"Little bit,\" Deidre gasped and grunted as she could feel a second orgasm welling up.\n\n\"Then my dick's going hurt a little bit,\" Harold said, twisting the fingers inside of her.\n\n\"Augh, ugh, aw, God Damn it! Shit!\" Deidre grunted, then screamed.\n\nTwenty minutes later, looking at the three smirking faces of his roommates, Harold determined that he would not be renewing his lease at the end of November. He would be finding either an apartment, or possibly a home to rent.\n\n\"God, what a lard ass, huh?\" Matt giggled when the front door closed behind the couple.\n\n\"Uh huh, but damn, she's got some nice titties, huh?\" Roberto commented.\n\n\"Dude, I was that fat, I'd have me some big old titties too,\" Matt said.\n\nAs they pulled up to her home, Deidre looked over at Harold. Even in the darkness, he was handsome. She couldn't believe that this handsome, smart, sexy, sweet man was with her.\n\n\"I, God, I just love you so much,\" Deidre blurted out.\n\n\"Love you too,\" Harold chuckled, turning the truck off.\n\nHe ran around, opened her door, and helped her down. Then they walked into the house.\n\n\"Three minutes late,\" Maurice said drily when they entered.\n\n\"Would have been three minutes earlier if my dumb ass roommates had just cleaned up after we ate,\" Harold grumbled.\n\n\"And you believe they ate it all?\" Deidre agreed.\n\n\"Good night,\" Maurice said, getting to his feet.\n\nSaturday had been a hot, humid day and was a warm night. Harold pulled up in front of the Whitehead house and mopped his sweating face.\n\nHe loved the food of Louisiana. He loved the people of Louisiana. But, even after almost six years of living in the Greater DeGarde area, he was still not acclimated to the heat and humidity of Louisiana.\n\nHe had sent a picture of himself and Deidre in the costumes to his father. Four hours later, having no reply from his father, Harold called the land line. Steph, his father's latest wife answered and chatted pleasantly with Harold. She had no idea where his father was; she did know he was not at work because the hospital had called, looking for him.\n\n\"Well, sent his cell a picture of me and my girlfriend in our Halloween costumes,\" Harold said. \"Haven't heard back from him, so...\"\n\n\"Oh, Harold! A girlfriend? How wonderful; send me the picture, okay?\" Steph Doucet shrilled, making Harold wince. Steph was a genuinely nice person, but she was typical of his father's women. She was blonde, she was emaciated, she was flighty.\n\n\"Guess that's why I've always had me a thing for the chubbies,\" Harold mused as he approached the Whitehead house.\n\n\"Thank God you're here; she's been ready since five o'clock this morning, Maurice commented when he swung the door open.\n\nHarold followed Maurice and Maria up the stairs again. He then put on his costume and then proceeded Deidre down the stairs.\n\n\"Tickets?\" Harold asked Deidre.\n\n\"Shit!\" Deidre cried out and thundered up the stairs as best she could in the bulky costume.\n\n\"What time she have to be home?\" Harold asked Maurice as they could hear thumbs and exclamations coming from upstairs.\n\n\"Twelve thirty? One?\" Maurice hazarded a guess. \"It's a school function and I'm sure one or two of her friends will have some kind of get-together after.\"\n\n(Maurice was unaware that Deidre did not have one or two friends, other than Megan.)\n\nSitting in the costume was tricky. Driving in the costume was tricky. Harold drove, following Deidre's directions.\n\nOutside, approaching the glass doors of the gymnasium, they could hear the music thumping. Opening the door, they were met with a blast of sound.\n\nInside the foyer, there was a throng of people, many in costumes, some not wearing costumes. Their chatter and laughter was loud, to be heard over the loud music.\n\nSeveral of them stopped talking and turned to stare at Deidre and her companion. Deidre smiled smugly as she held Harold's hand, pulling him toward the sign-in table.\n\n\"O.M.G! Deidre! Look at you,\" the fat, pimple faced girl sitting at the table enthused.\n\n\"Hey Libby,\" Deidre said, giving the girl a real smile. \"And this is my boyfriend, Harold.\"\n\n\"Her...Boyfriend?\" Roy and Brent asked each other.\n\n\"Yeah, right. Probably her brother or cousin or something,\" David laughed.\n\nAfter handing their tickets to Libby, Deidre pulled Harold through the crepe paper streamers that Libby and the decorating crew had strung across the entrance to the gym. Immediately, they were plunged into semi-darkness.\n\n\"Deidre! Oh my God! That's, look at you,\" Megan squealed, rushing over.\n\n\"Megan! Oh my God, you really, you and Pat really did come together!\" Deidre enthused.\n\n\"Told you we would,\" Megan said.\n\nPat was wearing a wedding gown, looking every bit the beautiful bride. Megan had her tall body crammed into a tuxedo, had her blonde hair slicked back.\n\n\"So, you're Deck's sister, huh?\" Harold smiled. \"I'm Harold, Deidre's boyfriend. I really owe you big time for bringing me and Deidre together.\n\n\"My pleasure,\" Megan smiled warmly.\n\nShe then smiled as Deidre let out a happy sigh. Pat then pulled Megan onto the gymnasium floor to dance.\n\nHarold did know how to dance. Dating cheerleaders and athletic girls had taught him a thing or two. Deidre had spent her time in her room, laying on her bed, imagining dancing.\n\nBy the end of the first hour, Deidre and Harold were bathed in sweat. They, along with Megan and Pat, made their way to the refreshment table. As Harold fixed them small cups of unsweetened punch, as well as a few cupcakes, other students that walked right by Deidre in the hallways, never saying a word to her came up and started chatting with her.\n\nSome of it was genuine attempts at friendship. Others were just curious about the tall, handsome man with her.\n\nAt ten o'clock, the music was turned off and Father Brighton, the school's head administrator announced the votes for best costume had been tabulated.\n\nThird place went to Megan and Pat. A collective gasp went up when the two girls kissed each other. A young man, Ryan Luquette, and his date were a pair of very convincing vampires.\n\n\"And in first place for couples costumes, Deidre Whitehead and her date,\" Father Brighton announced.",
        "\"We won? We won!\" Deidre screamed, actually jumping up and down.\n\nShe grabbed Harold's hand and pulled him to the small stage.\n\n\"Come on, Sweetheart! We won,\" Deidre screamed.\n\n\"Coming, Dear,\" Harold said in a monotone, sounding all the world like a whipped man.\n\nBy eleven, Deidre had run out of steam. She had not realized just how hot the costumes would be. But, even with her bare legs sticking out the bottom, it was sweltering inside the pumpkin shell.\n\nHarold agreed; he was likewise bathed in sweat. They did take the time to tell Megan and Pat good night. Harold also promised to pass on Megan's message of 'You're a dork face' to Megan's brother, Matthew.\n\nStepping out into the dank night air, Harold made sure there was no one looking. He quickly slid the shell down and off, then quickly pulled on a pair of running shorts.\n\n\"Aw! Wish I'd thought of that!\" Deidre complained.\n\n\"Oh? What you got on underneath that?\" Harold asked.\n\n\"Just a tank top,\" Deidre admitted, pulling the shell cap from her head.\n\nHarold helped her into the truck. When he opened his driver's door, he did suggest that she at least pull the shell down to her feet, give her body a chance to cool down.\n\nClark's Drive-In was closed. Yum Yum was still open; Harold left a partially nude Deidre in the truck as he ran inside to get two large hot fudge sundaes to go, along with two cups of iced water.\n\nReturning to the truck, Harold handed Deidre the ice water, but refused to let her open the bag, refused to let her get to the cold treats.\n\n\"Hold your horses, Miss Impatient,\" Harold smiled as he drove north on Highway 19.\n\n\"Home's that way,\" Deidre pointed out.\n\n\"Not going home, are we?\" Harold said, pulling up to the Motel Acadiana.\n\nThe bored clerk didn't say much, just rang up the room. Sliding the key to Room 112 across, the man did mention the movies on the television.\n\n\"Thanks,\" Harold said as the man already returned to his cell phone, the game he was engrossed in.\n\nDeidre whined as she pulled her costume back on to go from truck to room. The moment she was inside the room, she slid the costume down and off, leaving her in just tank top, bra and panties and tennis shoes.\n\n\"And,\" Harold said, putting the bag onto the flimsy bed.\n\nDeidre had the second spoonful of sundae in her mouth before Harold figured out the television. She watched as he pulled up the menu, then hit 'Enter' on the Anal category.\n\n\"Oh my God; what are we watching?\" she squealed as the screen pixelated for a moment, then began playing a scene of a large cock plunging into a greasy anus.\n\n\"Eat your sundae, huh?\" Harold chuckled, stripping off his sweaty clothing.\n\nDeidre did eat her sundae. In between bites, she offered commentaries of the pornographic action on the old tube television. \n\nShe then put her empty plastic dish aside and bent over to stroke Harold's hard cock. After verifying that it was hard enough, Deidre began to suck Harold's delicious cock.\n\n\"I can't eat all this,\" Harold said, having only a few bites left.\n\nDeidre took her mouth off of his cock and held her mouth wide open. Harold fed her a spoon of sundae.\n\nThen, with a mouth full of melting ice cream, Deidre again bent and took his cock into her mouth.\n\n\"Erk!\" Harold grunted at the extreme sensation.\n\nDeidre sucked and slurped, bobbing her head up and down his cock.\n\n\"Ah!\" Deidre hinted, mouth again wide open.\n\nHarold put another spoon full of ice cream in her mouth. She sucked and stroked his cock swallowing a little of the sticky treat on each bob.\n\n\"Deidre, I'm about to...\" Harold warned.\n\n\"Ah!\" Deidre said, mouth open for another spoon of hot fudge sundae.\n\n\"Aw, shit,\" Harold groaned and began pumping a stream of semen into Deidre's sucking mouth.\n\n\"Ah!\" Deidre said, mouth open for the last of the sundae.\n\n\"I like that. Hot fudge and sperm,\" Deidre declared after swallowing the last mouthful.\n\n\"Well, I'll get on the phone with Benn and Jerry's, see if they'd be interested,\" Harold joked, helping Deidre out of her tank top and bra.\n\nShe groaned happily as he bent and sucked one hard nipple into his mouth.\n\n\"Ah! Oh God yes,\" Deidre suddenly grunted when Harold bit down lightly on her hard nipple.\n\nHe eased her panties over her hips as he suckled on the other nipple. Deidre kicked her tennis shoes off, then pulled Harold down.\n\nThe sex continued to flash on the screen as Harold sucked Deidre's nipples. The moans and groans and synthesizer music chimed in with Deidre's groans as Harold fingered her wet pussy.\n\n\"Oh God yes,\" Deidre grunted when Harold began to finger her sweaty anus.\n\nHarold wiggled his way down, kissing her belly. Then he pulled her legs apart and began tonguing her pussy. Deidre squeezed her eyes shut as pleasure rippled through her body.\n\nHer orgasm was quick in coming. Deidre squealed out loud as Harold sucked and licked her clitoris. He chuckled as her fat legs clamped tight, trapping him. He licked up and down her puffy lips, then bent his head as best he could with the death grip her thighs had on him, and began tonguing her anus.\n\nDeidre relaxed her grip on his head and reached her hands down. She pulled her buttocks apart, giving his tongue easier access to her ass.\n\nSince their sex last night, Deidre had masturbated several times. She'd even tried inserting a few objects into her anus; her fingers weren't thick enough to provide the desired effect.\n\n\"Yes,\" she hissed when Harold's thick finger pushed into her anus.\n\nHarold wormed a spittle wet finger into Deidre's tight anus and began tonguing her pussy again. He fucked her ass with his finger, her pussy with his tongue. When she began bouncing slightly, Harold then wormed a second finger into her ass and started batting at her clitoris with his tongue.\n\n\"Shit, shit, shit,\" Deidre chanted, pulling her buttocks as far apart as she could.\n\n\"Better not,\" Harold thought, twisting his fingers inside of her tight ass.\n\nShe screamed and thrashed in orgasm, thighs again trapping his head firmly against her pussy.\n\nWhen she subsided, Harold wiggled forward and began kissing her slack mouth. She did revive slightly when he bent and sucked one of her nipples.\n\n\"Fuck me. Need to fuck me now,\" Deidre murmured.\n\n\"Going fuck that ass,\" Harold demanded.\n\n\"Okay,\" Deidre agreed, no hesitation in her voice.\n\nHarold fished the small bag from the bag that had held their sundaes. Deidre put her glasses on and watched as he popped open the tube of KY Jelly.\n\nShe squealed, then laughed when he grabbed her ankles and flipped her around onto her belly. He then pulled her until her knees were at the edge of the flimsy mattress.\n\nOn the television, one woman was thrusting a strap-on dildo into a man's ass while he fucked a second woman in her ass with his large cock.\n\nOn them knees,\" Harold ordered.\n\nDeidre got onto her hands and knees, lower legs dangling off the bed. Harold stepped in between her slightly splayed legs and looked at the beautiful, chubby ass that presented itself to him. The furrow was deep, and just above her puffy, wet lips was a light brown ring, a tiny opening.\n\nHe squirted some lubricant onto his fingers and urged Deidre to pull her cheeks apart. The forty watt light bulb of the table lamp wasn't the best for illuminating the erotic sight of his fingers sliding in and out of her willing anus. The dirty lampshade did not fully light his thick fingers pushing in and pulling out of her tight hole.\n\nThe cheap lamp did not allow Harold to fully appreciate seeing the blunt head of his cock pressing against her quickly constricting rectum.\n\n\"Ugh!\" Deidre cried out when Harold pressed the blunt head of his cock to her ass.\n\nHer face lay against the rough texture of the polyester bedspread. She worried about the rough texture scratching the lens of her glasses, then remembered, her dad had paid extra to have them coated.\n\nHer hard nipples also rasped against the rough texture. Little jolts of pleasure rippled as her breathing caused the nipples to rub, rub, back and forth, up and down along the rough threads.\n\nHer fingers were beginning to tire of pulling her buttocks. Her buttocks also hurt where she was pulling. The fingernail on her left index finger was slightly rough; a file would quickly smooth it out. But Deidre could feel that nail as it dug into her flesh.\n\nHer feet stuck out into empty air. She perched at the lip of the cheap mattress on her knees. It felt like she could slip off the bed at any moment.\n\n\"Ugh!\" she cried out as all sensation was suddenly centered in her rectum.\n\nHarold looked down and saw the head of his cock pushing into Deidre's slimy anus. Her muscles clamped down, even as her fingers pulled her buttocks apart. His cock head was nearly all the way in, just the flared ridge of his cock was outside of her opening.\n\n\"Fuck,\" Deidre hissed.\n\nThere were spasms, jolts of pain as his cock pushed into her. Each slight movement sent a new pain radiating from her anus outward.\n\n\"Ugh, oh God damn it,\" Deidre suddenly cried out.\n\nHarold's cock head was now imbedded in her. Deidre could feel the flared ridge pushing, scraping along the walls of her rectum. She could feel Harold's thick shaft stretching, sliding into her. She could feel her muscles cramping, pushing, trying to force the intruder out.\n\nThen something snapped. Deidre swore she actually heard a 'pop.'\n\nHer fingers fell away from her buttocks. Her whole body tensed for a moment.\n\n\"God damn mother fucker yes!\" Deidre screamed, bellowed.\n\nShe rose up on her hands and thrust back. Harold grunted as he was suddenly balls deep in Deidre's incredibly tight ass. Her rectal muscles clamped down, squeezing and milking his cock as Deidre grunted and cursed, shaking in orgasm.\n\n\"Fuck me, come on, wanted fuck me? Fuck me,\" Deidre commanded.\n\nHarold grabbed her hips in a tight grip and began to pull his cock out. Then he pushed back in.\n\n\"Ugh, yes, come on, harder,\" Deidre ordered.\n\nShe reached a hand underneath and began to masturbate herself. She rubbed her clitoris with two fingers while Harold's big, beautiful cock stretched her ass, pounded in and out of her ass.\n\n\"Augh, aw shit, come on, huh?\" Harold complained as his semen jetted out far too quickly.\n\nDeidre's scream of orgasm was unintelligible howls. She shook and shuddered, grunting animalistic sounds.\n\nThen, to Harold's dismay, she burst into wails.\n\n\"What? What? I, you liked, you told me to fuck you,\" Harold cried out.\n\n\"You going think I'm nothing but a slut,\" Deidre sobbed piteously. \"God damn, let you fuck me up the butt. Now you going hate me!\"\n\n\"Deidre! Deidre, no, no, I don't think you a slut,\" Harold tried to reassure her.\n\nThe loud fart that erupted from her bowels when Harold's soft cock slid from her stretched, angry looking rectum did not help matters. Harold tried to gather her into his arms, but she rushed into the bathroom.\n\nThrough the closed bathroom door, Harold protested his love for her. Finally, the toilet flushed and Deidre wobbled out.\n\n\"Deidre, really,\" Harold said, moving to hug her. \"Really, Baby, I love you. I don't think you're a slut.\"\n\n\"Don't touch me, go clean that thing, huh?\" Deidre said.\n\nHarold looked down and saw that his cock was filthy. He stepped into the bathroom and wet a washcloth.\n\nDeidre sat on the bed and watched the television. A blonde girl lay on her side sucking on one cock while a second man lay behind her. The blonde reached down and guided the second man's cock into her anus.\n\n\"You, you really love me?\" Deidre softly asked when Harold came out of the bathroom.\n\n\"Yeah, really do,\" Harold agreed.\n\n\"Love you too,\" Deidre sniffled and hugged him.\n\nThe kiss grew in intensity. Harold began to toy with her heavy breasts. She reached down and stroked his hard cock.\n\n\"We uh, we try something?\" Deidre asked.\n\n\"Yeah, anything,\" Harold agreed.\n\nShe lay him on the bed, on his left side. Then she lay on her left side in front of him and scooted back until she felt his hard cock against her plump thighs.\n\nHarold rolled a condom on and slid into her wet pussy.\n\n\"Oh, Sweetheart, God yes,\" Deidre hissed.\n\nAfter he got a good rhythm going, Deidre whispered that this would be a good position for ass fucking. Harold thrust hard into her, then reached down and slapped her right buttock. Deidre stiffened, then shook in orgasm. Her throat hurt from her earlier screams; she only let out a strangled bark of pleasure.\n\nThe pumpkin shell smelled of Deidre's sweat; she wrinkled her nose as she put it back on to go from Motel door to truck. But, she realized, her father would not be able to smell the pungent aroma of sex on her.\n\n\"Let me guess,\" Maurice said drily. \"Was watching grass grow and just lost all track of time?\"\n\n\"Oh, uh, so you've heard that excuse before?\" Harold said.\n\n\"Whew, man, those things reek, huh?\" Maurice commented, smelling the two sweaty people as they stood in his living room.\n\n\"Yeah, next time make one? Going put an air conditioner in there,\" Deidre agreed.\n\nAfter kissing Deidre, after whispering into her ear that he loved her, Harold left the house, sans pumpkin shell. He then drove north on Highway 19 again. He kept his eyes peeled, looking for a sign he'd seen as he'd driven Deidre from the motel to her home.\n\nA mile from Motel Acadiana, he saw the sign of 'Carmen Davis Realty' and turned onto the street. He drove west for a half of a mile, then saw the second sign.\n\nIt was a cute little cottage style structure. The small plastic mailbox in front held some Carmen Davis Realty flyers and Harold grabbed one.\n\n\"Two bedrooms, yes, two bathrooms, hmm, workshop in the back...\" Harold read.\n\nHarold looked at the small home again, looked at the price on the flyer and thought he could probably talk them down a few thousand dollars. Those were single pane windows; the house was cooled by window units, not central air. The carport was nothing more than a sheet of tin supported by three posts.\n\n\"And there would be no roommates using my pots and pans, eating all my leftovers,\" Harold said aloud as he put his truck into drive.\n\nHalloween night had a hint of autumn in the air. The temperature had dropped to sixty seven degrees and there was a wind blowing from the northwest. There was a smell of rain in the air.\n\nDeidre had stuffed a few dryer sheets inside of her Jack O' Lantern costume and wore it to answer the door for the hordes of ghosts and super heroes and princesses and ballerinas that crowded into their upscale neighborhood. There weren't that many children that actually lived in their neighborhood; the poorer neighborhoods seemed to bus them in every year.\n\n\"Wow, we're pretty busy this year,\" was Maurice's comment after the fourth time the doorbell rang.\n\n\"Hey, thrown out my costume?\" Harold asked, standing in the doorway.\n\nFor the rest of the evening, Harold and Deidre answered the door, wearing their costumes. Maria laughed when Harold pretended to be afraid of a small boy dressed like Frankenstein's Monster.\n\nMaurice smiled sadly as his daughter gave loving, adoring glances up at her boyfriend. Maria put an arm around his waist and leaned against him.\n\n\"Don't worry, Maury,\" she said. \"In maybe two? Three Years? You be taking our little girl or boy around, okay?\"\n\n\"Uh huh, but it won't be...\" Maury said, then froze.\n\nMaria looked up at his blank expression. She wiggled to stand in front of him. He looked down at her, face still expressionless.\n\n\"You hear me?\" she asked quietly.\n\nBehind her, the doorbell rang. Harold opened the door and pretended to be scared of the bear cub on the door stoop. Deidre gave the cute cub some candy and waved to the young woman standing with the child.\n\n\"Maury?\" Maria whispered again.\n\n\"Did you, did you just say...\" Maurice croaked out.\n\n\"Maybe two three years you take our baby trick or treat, okay?\" Maria said, squeezing him tightly.\n\n\"Oh. I, huh,\" Maurice said, still unable to comprehend the news.\n\nAn hour later, the doorbell had not chimed in at least five minutes. Harold came into the living room and found Maurice sitting on the couch, a giggling, smiling Maria sitting on his lap.\n\n\"Sir? Hate to interrupt,\" Harold said.\n\n\"Interrupt? Interrupt what? We're just sitting here,\" Maurice smiled and gave Maria an affectionate squeeze.\n\n\"Uh, yes sir,\" Harold said.\n\nThey could hear Deidre's heavy step overhead. Maria gave Maurice a kiss, then wiggled off of his lap. She scampered past Harold to the kitchen and Harold gave her a smile.\n\n\"Sir? I know it's a school night, but I'd like to show Deidre something real quick. I'll have her...\" Harold said.\n\n\"Oh, I'm sure she's seen it before,\" Maurice quipped.\n\nHe did not miss the blush that flashed over Harold's face.\n\n\"...back by ten, if that's all right,\" Harold managed to say.\n\n\"Nine thirty; it is a school night,\" Maurice stated firmly.\n\n\"Yes sir,\" Harold agreed.\n\n\"Nine thirty? But it's already...\" Deidre complained, rushing into the living room.\n\n\"Nine. Keep arguing with me, I'll take another thirty minutes off,\" Maurice said.\n\n\"Nine thirty's fine,\" Deidre grumbled as Harold went upstairs to take his costume off.\n\n\"Remember I told you I was doing something other night?\" Harold asked as he carefully negotiated the neighborhood, watching for any little munchkins that might dash into the street.\n\n\"Uh huh,\" Deidre said, still miffed about the unreasonable curfew.\n\n\"Well, want to show you what I was doing,\" Harold said, turning on to Highway 19.\n\nHe pulled up to the small home and got out. Deidre looked at the house, looked around the other homes around them and then looked at Harold.\n\n\"And this is one of the first things I'm going fix,\" Harold said, sliding a frosted glass pane in the side door.\n\nHe reached inside the louvered door and twisted the deadbolt.\n\n\"Harold! What are you doing?\" Deidre hissed, apprehensive.\n\n\"Showing you my, our house,\" Harold said.\n\nThey entered the kitchen. Deidre looked around at the gas stove, the small porcelain sink, the large gap where the refrigerator should have stood.\n\nThe small living room also garnered a glance, but standing empty, there wasn't much to see. She followed Harold down the hall.\n\n\"One bathroom out here in the hall,\" Harold said, opening the door. \"And the master bedroom has another bathroom in it.\"\n\nThe other bathroom did not impress Deidre; it was a commode, a pedestal sink and a shower stall. At least the hall bathroom had a tub.\n\nBut Deidre could tell that Harold, for whatever reason, was excited about the small home. Deidre saw that each room had a bulky window unit for air conditioning. She also saw signs that the unit in the second bedroom had dripped rusted water down the interior wall and had started to warp and crack the hardwood flooring.\n\n\"Yeah, I saw that too and pointed it out to Carmen Davis; she's the real estate agent,\" Harold agreed. He dragged her back to the small kitchen. He pulled her stand next to him at the stove.\n\n\"But can't you see us? Standing here? Making dinner together?\" he asked.\n\n\"Yeah,\" Deidre agreed, the first real smile creasing her face.\n\nShe looked around and determined that no one could see into the kitchen unless they stood on a small ladder and peeked into the small window over the sink.\n\n\"And I can see...\" Deidre said and unzipped Harold's pants.\n\nShe sank to her knees, pulling his growing erection out. She gave a noisy slurp as she sucked the head of his cock into her mouth. Her small hand wrapped around the base of his cock as she swallowed his cock down. She allowed saliva to drool out of her mouth, coating his cock.\n\n\"Fuck! I need this big old dick up my butt,\" Deidre whined.\n\nShe got to her feet and dropped her shorts and panties to the floor. She wiggled up onto the Formica counter, presenting her ass to him.",
        "Harold bent and tongued her anus for a moment. He wet two fingers in his mouth then fingered her ass for a moment. Satisfied, he lined his cock up with her winking anus and slowly pushed in.\n\n\"Ugh, aw God damn it,\" Deidre whined.\n\n\"Want me stop?\" Harold asked.\n\n\"NO!\" Deidre yelled.\n\nIt had hurt, a delicious pain, the first time Harold had fucked her ass. It hurt now; saliva wasn't really a sufficient lubricant. But as Harold pushed into her, Deidre felt a delicious warmth began welling up deep inside of her.\n\n\"Shit, I'm going come,\" Deidre whined. \"Aw, Mother fucker!\"\n\nHarold held onto her hips as she bounced and thrashed on the counter. He used her momentum to push more of himself into her.\n\n\"God, aw, shit, I, here, aw Deidre...\" Harold wheezed, and spurted a thick load into her bowels.\n\n\"Bathroom's got toilet paper?\" Deidre asked after Harold pulled his cock out of her.\n\n\"Think so,\" Harold wheezed.\n\nDeidre did not stop to put her shorts and panties on. She hoped none of the neighbors saw as she dashed through the living room to find the hall bathroom.\n\n\"They got any?\" Harold asked a moment later.\n\n\"Uh huh, about gone, but they got, oh wait, there's another roll on the back here,\" Deidre called through the open door.\n\n\"Okay, we know the countertops are at the right height,\" Harold commented as Deidre again dashed through the living room.\n\n\"Yeah,\" Deidre giggled.\n\n\"Hello,\" Harold said as they stepped back onto the carport.\n\n\"Uh huh,\" an older man said, standing next to Harold's truck.\n\n\"I uh, I'm buying the place,\" Harold defended. \"Was just showing my girlfriend.\"\n\n\"Are, huh?\" the man asked, regarding them.\n\n\"Yes sir, talked to Ms. Carmen yesterday,\" Harold said.\n\n\"We'll see about that,\" the man said, hitting a button on his cell phone.\n\nThe man spoke into the phone. Then he ended the call.\n\n\"And your name is...\" he asked Harold.\n\n\"Harold Doucet,\" Harold said. \"And this is Deidre.\"\n\n\"Oh, okay, Harold Doucet. I'm Jim, Jim Breaux; live right across street,\" the man said, first smile crossing his face. \"Knew the Heberts, hated seeing them go, but hey, huh?\"\n\n\"What a big old butt hole,\" Deidre complained as they were driving back to the Whitehead house.\n\n\"Uh, no, no he's not,\" Harold said. \"Sweetheart, he saw a strange truck at a house he knew was empty. He did the neighborly thing and came to check on it. That's the kind of neighbors you want. Ones that will check on your house when they think something's wrong.\"\n\nTen minutes late, Harold still came in and showed Maurice and Maria cell phone pictures of the house. Maria thought it was cute; Maurice saw a few areas that needed improvements.\n\n\"Got them down to seventy four? Not bad, young man, not bad,\" Maurice nodded.\n\nDr. Doucet did not respond to the series of photographs texted to his phone. He did have a small twinge of sadness; his oldest child most likely would not be returning to Colorado.\n\nSteph did respond, telling Harold it was 'darling' and the perfect house for him.\n\nThe cell phone picture of Deidre Whitehead, standing in Harold's kitchen, a large pot of chicken and sausage gumbo on the stove also garnered no response from Dr. Doucet. He looked at the fat girl, with the unruly mop of brown and the large horn rimmed glasses and wrinkled his nose. The girl resembled a pig with glasses. He did give a little nod of approval at the size of the girl's chest, though.\n\nAgain, Steph declared that Deidre Whitehead looked adorable. And any girl that knew how to cook was definitely a keeper.\n\n\"What?\" Harold said when Steph's text came through. \"She doesn't know how cook. That's MY gumbo, Mrs. Doucet!\"\n\n\"I helped,\" Deidre defended.\n\n\"Uh huh. Standing there, saying 'How long roux take to make? How long I got keep stirring this?' is a Bbiigg help, Deidre,\" Harold said and kissed her.\n\n\"Nuh uh, go away, butt hole,\" Deidre said, pushing him.\n\n\"Uh, speaking of butt holes,\" Harold said, reaching for her butt.\n\n\"Nuh uh! Leave that alone,\" Deidre giggled. \"Baby, seriously. I got this stupid paper do and you still working on yours.\"\n\n\"Hmm? Finished. Handed it in yesterday,\" Harold said, again tasting the gumbo.\n\nThanksgiving was spent with Maurice and Maria Whitehead. Dr. Doucet was far too busy.\n\nChristmas was spent with Maurice and Maria Whitehead. Dr. Doucet and Steph were in Switzerland, skiing.\n\nApril fifteenth, Maria Whitehead gave birth to Robert Martin Whitehead. Robert had been Maurice's older brother; cancer had taken him when Maurice was only nine years old.\n\nApril sixteenth, Deidre approached her father, Harold standing behind her, and confessed that she was pregnant.\n\n\"About two months, best we can guess,\" Harold said. \"Sir? I'd like your permission marry her.\n\n\"I'm so sorry Daddy,\" Deidre burst into sobs, looking at the disappointed look on her father's face. \"We was so careful. I don't know how this happened.\"\n\n(A thin dribble of semen had oozed from Deidre's well fucked anus, dribbled down along her perineum, then dripped along her slick pussy lips. Harold did not see the dribble when he slid his condom covered cock into Deidre's willing pussy. Some sperm travelled deep into Deidre's pussy, hitching a ride on the latex rod as it drove into the wet, warm confines of Deidre's pussy. One sperm found Deidre's egg.)\n\nBeing the fat girl, Deidre's pregnancy was not apparent as she walked the halls of Cabrini Catholic High School. At her graduation she did sport a little more paunch as she sauntered across the stage. She received her diploma and thanked Father Brighton, then returned to her seat.\n\nAt the one and only after-graduation party she and Harold attended, Deidre proudly showed her two carat engagement ring to Megan and Pat. Then she squealed when Pat likewise showed her own, significantly smaller engagement ring. Megan smiled proudly as Pat and Deidre hugged.\n\nDeidre's due date was November ninth. But at one thirty in the afternoon, October thirty first, Harold was at his desk when Whitney, the reception of PC Nation Data Center buzzed him.\n\n\"Sir? Your wife on line three,\" Whitney said.\n\n\"Trick or treat,\" Harold smiled into the phone.\n\n\"Baby, I, Harold, I need you,\" Deidre gasped. \"I don't know what's wrong, but...\"\n\nHarold ran through the lobby, yelling to Whitney that he needed to go home immediately. Whitney called Richard Gerrard, the managing director of the office and informed him of Harold's emergency.\n\n\"Thank you, Whitney,\" Richard said. \"Please keep me posted.\"\n\n\"No prob... You're welcome, Mr. Gerrard,\" Whitney said.\n\nHarold screeched to a stop and jumped out of the truck. He came into the house through the kitchen, calling for Deidre.\n\n\"Living room,\" Deidre sobbed, relieved that her husband was finally here.\n\nHe looked at the beautiful young girl. Nearly nine months pregnant, her belly was huge. Her hips had widened wonderfully. Her ample buttocks were even larger, beckoned to him with every step she took.\n\nBut Harold saw only Deidre's terrified face when he knelt down next to her. She wrapped her cubby arms around his neck and sobbed. She was in pain, the pain was in her tummy. Horrible spasms would shoot through her, taking her breath away. Then, moments later the pain would subside and she would be fine. Shaken, but fine.\n\n\"And now it's happening almost every three, four minutes,\" Deidre sobbed. \"Oh God! Oh God, it's happening again! Baby, do something!\"\n\nHarold scooped Deidre into his arms and carried her, blanket and billows and all to the kitchen door.\n\n\"Hey, what's wrong?\" Jim Breaux demanded, walking up their driveway.\n\n\"Don't know,\" Harold screamed, running to the truck. \"We're going to St. Elizabeth's.\"\n\n\"Go on. I'll lock up here,\" Jim said calmly. \"Remember, name it after me, hear?\"\n\n\"But I'm not due until...\" Deidre said.\n\n\"Uh huh, tell that to Little Jimmy, huh?\" Jim chuckled and walked through their open door.\n\nWhile Harold raced for St. Elizabeth's Trauma Center, Jim made sure no appliances were left on, there was nothing in the oven, nothing cooking on their stove. He checked the gas heaters, made sure they were all in the 'Off' position, then walked back to the kitchen door. His last act, before leaving the house was to steal a beer from the Doucet refrigerator. He then locked the door behind him and walked back down the driveway.\n\n\"What was wrong?\" Lilly, Jim's wife asked. \"And where you get that beer?\"\n\n\"Think baby's 'bout come and you don't worry where I got this beer, you get your own,\" Jim said and took a gulp of the beer.\n\n\"James Robert Breaux, you stole you a beer?\" Lilly laughed and grabbed the can from his hand. \"Ought be 'shamed yeah.\"\n\n\"Uh huh, but I ain't,\" Jim smiled. \"Now you give that back.\"\n\nHusband and wife drank the can, passing it back and forth. They sat on their couch and talked about the seven times they had to make the trip to the hospital to have their six girls and one boy.\n\n\"\"And man! Had go us all way Lafayette!\" Lilly remembered. \"Wasn't no St. Elizabeth's right there neither. Need go get us another one, huh?\"\n\nJim walked across the street, up the driveway and slid up the glass panel in the kitchen door. This time, he made sure to grab two cans of beer.\n\nDeidre Doucet was admitted to St. Elizabeth's Trauma Center's Maternity Ward. Harold let go of her hand, kissed her sweating forehead, then called his father in law and mother in law. He called and left a message on his father's cell phone and called and spoke with his ex-step-mother, Steph and let his father's ex-wife know they were at the hospital.\n\nThen Harold scrubbed up. When he came back into the room, Deidre burst into tears of relief.\n\n\"Baby, Baby, it's going be all right,\" Harold soothed.\n\n\"I don't make it? I die? Harold, I ain't never been so happy when I met you,\" Deidre confessed.\n\n\"And meeting you was best thing ever happened to me too,\" Harold said, taking the soft cloth the nurse held out to him. \"But Baby, you going be fine.\"\n\nHarold gently sponged his wife's forehead. She peered through her large glasses at him, then gasped and groaned as another contraction started.\n\nMaureen Kimberly Doucet was born at five forty one, Halloween Night, just as the sun was disappearing behind the fringe of trees. A burst of deep orange heralded her appearance into the world.\n\nShe was named Maureen after Maurice, her maternal grandfather, and Kimberly, after Harold's mother, who did not live to see Harold's marriage, or the birth of her granddaughter.\n\nTHE END\n\n**Author's Note: This is an entry for the Halloween Contest 2018.\n\nI write these stories for my pleasure. I post them here for your enjoyment. I thank you sincerely for reading my stories.\n\nI especially thank those that take the time to leave comments, good and bad. I also thank those that take the time to rate my stories.\n\nHave a terrific day. And Happy Halloween! Halloween is one of my favorite times of year."
    ],
    "authorname": "JimBob44",
    "tags": [
        "romance",
        "fat girl",
        "desperation",
        "oral sex",
        "anal sex",
        "high school",
        "college",
        "costume",
        "small town",
        "louisiana"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/jack-o-lanterns"
}