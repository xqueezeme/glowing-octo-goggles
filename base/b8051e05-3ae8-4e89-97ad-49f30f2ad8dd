{
    "title": "Succubus Summoning 203",
    "pages": [
        "The problem with the succubi turning Phil's bathroom door into a portal back to their castle was he had to trek out to one of the communal toilets every time he needed a piss. He returned from one such morning call of nature to find N\u00ffte waiting for him in his bedroom. The succubus looked around the spartan bedroom provided for him by Wargsnouts College for Warlocks with an expression of mild disdain.\n\nShe was dressed in a tight black leather corset and thigh-high kinky boots that showed off most of her flawless white skin. She looked like an archetypal whip-wielding demoness from a videogame designed for sex-starved post-pubescent nerds. That was pretty much the default appearance when it came to succubi and N\u00ffte was the scariest of all the succubi Phil had encountered.\n\nHe briefly considered ducking back out and carrying on down the corridor. He knew it would be a bad idea. She hated any outward signs of cowardice and probably already knew he was there. She was also lethally quick with that whip coiled up at her waist. He knew that from experience. Phil sucked down a breath and entered the room.\n\n\"Ah, there you are,\" she turned and said to him with a smile.\n\nN\u00ffte was extremely beautiful in the classical sense: all high cheekbones and icy perfection. Even her eyes\u2014cold black abysses\u2014and lips\u2014plush, kissable, but as black as a moonless night above an open grave\u2014didn't detract from her beauty. Her long black hair was tied back in an austere ponytail. A classic Silicone Valley dominatrix.\n\nNominally Phil was as much master of her as he was of Rosa and Verd\u00e9. That lessened the terror he felt in her presence not one single iota.\n\n\"What are you doing here?\" he asked.\n\n\"I'm to accompany you to your classes today,\" N\u00ffte answered.\n\n\"You're not going to...erm...eat anyone, are you?\"\n\nN\u00ffte elegantly put a hand in front of her mouth and laughed. \"I'm in a college containing hundreds of warlocks, some of whom count amongst the most powerful magic users on this world. Such brazen behaviour on my part would be a little reckless, wouldn't you agree.\"\n\nShe had a point.\n\nHe flinched as N\u00ffte stood next to him and put an arm around his waist.\n\n\"I love how you're still terrified of me,\" she whispered in his ear. \"It's very endearing.\"\n\nPhil was hoping these advanced courses The Scrote had fast-tracked them onto would enable him to better understand what this 'mastery' actually meant. He also hoped he survived long enough to see the end of the course.\n\n\"Let's see what they're teaching young warlocks nowadays.\"\n\nThey left Phil's dormitory room and walked towards the lecture theatres.\n\n\"Where are Rosa and Verd\u00e9?\" he asked.\n\n\"They were summoned to Singapore for a hot threesome with a pimply-faced eighteen-year-old. He managed to decipher parts of an obscure summoning ritual he found on the internet.\"\n\nThis confused Phil. Wasn't he supposed to be the current master? Again he suspected that word did not mean what most people thought it meant. He really hoped the course would clear this up.\n\nN\u00ffte checked an elegant gothic watch on her slender wrist. \"Hmm, it's probably just a twosome by now,\" she said. \"Knowing Rosa and Verd\u00e9, they won't be back for a while. Until then you've got me to keep you company.\"\n\nShe gave his waist a friendly squeeze. If Phil hadn't already gone a few moments ago he felt sure he would have pissed himself.\n\n\"Isn't this going to look a little strange?\" Phil asked as they walked arm in arm down the corridor.\n\n\"Don't be so hard on yourself. It's not all about looks. I think you're adorable.\" N\u00ffte kissed him on the cheek.\n\n\"No, I mean what are the students going to think?\" Phil said. \"They've already seen me with Rosa and Verd\u00e9. Now they're going to see me with you. We're only supposed to have one daemon.\"\n\n\"That's easy,\" N\u00ffte said. \"Succubi can alter their appearance to match their master's desires. Just tell them I'm Rosa...\" She paused, looking for a moment as though she'd swallowed something distasteful. \"...Verd\u00e9,\" she corrected.\n\n\"Are you doing that now?\" Phil asked.\n\n\"Doing what?\"\n\n\"Changing your shape to match my unconscious desires?\"\n\n\"No. You prefer to see us as we really are,\" she said. \"It's quite charming actually.\"\n\nThey reached an archway that led to one of the meeting foyers outside the tertiary Underhall lecture theatre. Two of The Scrote's succubi stood by the entrance, resplendent in their tight black uniforms and long pink flumes.\n\n\"Do you know them?\" Phil asked.\n\n\"No\", N\u00ffte answered with an amused smile. \"The Dominion of Lust contains many succubi.\"\n\n\"Oh, I thought you might,\" Phil said. \"Rosa said you were at the Palace of Infernal and Iniquitous Pleasures for a while.\"\n\n\"She did?\"\n\n\"Um yeah.\" Phil flinched, afraid he'd inadvertently brought up a subject N\u00ffte didn't like to talk about.\n\nN\u00ffte smiled and gave a little laugh.\n\nAbout thirty or so students milled around in the waiting area outside the lecture theatre. Phil again felt the country bumpkin in his tatty black robes. It was still early on in the course and many of the students hadn't had a chance to get to know their fellows. They stood awkwardly alone or in groups of two or three. Phil was in the same boat; the only student he'd spoken to hadn't survived the first lecture.\n\nThere was one exception. There was a group of six students, all male, that stood out. They seemed confident and spoke to each other as if they'd been friends for a long time. Phil was surprised when they noticed him and headed over to talk.\n\n\"Your succubus is looking very intimidating today,\" A man in a sharp suit and spectacles said. He appeared to be the leader of the little group. \"I'm Evan Darvill.\" Darvill was tall, athletically built and had short black hair. Despite the esoteric nature of its studies, there was no real dress code at Wargsnouts. Phil had his singed robes; Darvill wore a smart preppy suit that looked more suited to the trading floor of a stock exchange.\n\n\"Phil Rowling,\" Phil said, shaking the other man's hand. He had a predictably firm grip. \"This is N\u00ffte.\"\n\nThe other students looked so surprised Phil wondered if he'd committed some kind of social blunder.\n\n\"Warlocks don't usually introduce their daemons,\" Darvill said with an amused smile.\n\nHis daemon was perched on his shoulder like a monkey. It was one of the oddest daemons Phil had ever seen. It had the same general build as a monkey, but with twelve, maybe fourteen, spindly arms, each terminating in long grasping fingers. Its eyes were huge and its head so full of them there seemed little room for anything else. Each eye was looking in a different direction, as though the creature was trying to observe everything at once. It was disconcerting watching its red pupils spin round and round as it hopped from one shoulder to another.\n\n\"This is John Brennan,\" Darvill said, motioning to a ginger-haired man in a white lab coat. \"His family have worked in the Underlabs for generations. He's a tech-head. If you need your laptop fixed or your console chipped, John's your man.\"\n\n\"We believe it's time to move on from the Dark Ages.\" Brennan gave Phil's tatty old robes a contemptuous glance. \"Magic and 21st century technology don't have to be mutually exclusive.\"\n\nThe daemon floating above Brennan didn't seem to share his hi-tech ideals. It looked to Phil like several metal plates, like old-fashioned armour, sliding over and around each other in a ball. It was hard to focus on, as if the rotating plates were moving through more planes than the usual three.\n\n\"Where's the other one?\" Brennan asked. \"The one with the long green hair?\"\n\n\"She's...um...occupied,\" Phil said.\n\nOne of the group, a tall fat man, smirked.\n\n\"This big fellow is Herbie Higgins.\"\n\n\"Howdy,\" the fat man said.\n\nHiggins was a big man in all dimensions. He was tall and rounded out like a rugby player or wrestler, albeit one that had neglected their gym sessions for a while. He was munching on a sandwich. Every so often he'd break a chunk off and feed it to the daemon sitting on his left shoulder. The daemon was a squat cone of pink flesh, featureless apart from a mouth filled with square white teeth.\n\n\"The sharply dressed man here is Gary Dever.\"\n\nDever looked like a cheaper knock-off of Darvill. He also had spectacles, short black hair and a suit, but he fell some way short of being Darvill's twin. His frame was skinny rather than athletic; his face pinched rather than handsome; his posture stooped and angular rather than confident; his suit obviously cheaper and not as well-tailored as Darvill's.\n\nHis daemon stood next to him. It was about as tall as a child and wore a patchwork suit of what Phil hoped wasn't tanned human skin. Its mask also looked suspiciously like a flayed human face stretched over an ornate gold frame. Bright green eyes glowed through the eyeholes.\n\n\"How did you end up with two?\" Dever asked, looking at N\u00ffte.\n\n\"It's unusual for students of our level to have more than one daemon,\" Darvill elaborated.\n\n\"I don't know,\" Phil said. \"They sort of came as a pair.\"\n\nOr rather a set. He wondered how they'd react if they realised N\u00ffte wasn't Rosa, or found out about C\u03adr\u03bcl\u0259a and Nurse Honey back at the castle.\n\n\"Succubi are supposedly one of the most dangerous daemons men of our age can summon. We're too easily distracted,\" Brennan said.\n\nN\u00ffte's lips turned up in a smile.\n\n\"I never saw the attraction,\" Darvill said. \"If you have power, money and women will follow. Each to their own.\" He shrugged.\n\n\"Succubi are crap daemons,\" a short man with spiky hair and a fierce face covered in piercings said. His daemon stood next to him\u2014a squat, even fiercer-looking goblin thing with tusks and more teeth than the Osmond family. \"They can't fight. Their magic isn't very powerful. I can't see why anyone would bother summoning them.\"\n\nN\u00ffte raised an eyebrow.\n\nPhil shut his eyes, waited for bad things to happen. He was surprised when they didn't.\n\nBrennan shared a glance with Higgins. \"I can,\" he said. Both looked at the short man and resisted the urge to break out in laughter.\n\n\"You'll have to forgive our exuberant friend,\" Darvill said. \"Joey Chalk here is a Natural Attuned. He also has anger management issues.\"\n\nChalk glanced from face to face as if paranoid they were taking the piss. Phil thought he looked younger than the others, but he couldn't really place his age. Natural Attuned?\n\n\"Lastly we have Jack Stone...\"\n\nThe last member was also short. He was dressed in urban streetwear\u2014baggy hooded top and low-riding jeans with ripped knees. He slouched with his hands hidden in his pockets and his eyes hidden behind a long fringe of brown hair. His daemon was an indistinct squat thing with long hair. It looked like an ambulatory hairball, or maybe a squashed wookie in need of a haircut.\n\n\"...but I wouldn't count on getting much out of him until he's had his second coffee.\"\n\nStone grunted something unintelligible that might have been a greeting.\n\n\"I'd introduce you to Jake, but I gather you already know him, or rather, knew him.\"\n\nThat caught Phil off guard.\n\n\"You knew Jake?\"\n\nJake Pulman had been Phil's roommate, but he'd never talked about Darvill and the others.\n\n\"He was going to complete our circle. If you look around our group you'll see our daemons each represent a different Circle of Sin. All warlock groups, right up to the Shadow Congress, follow this pattern.\"\n\nThey did?\n\n\"How do you know all this?\" he asked.\n\n\"It helps to know John,\" Darvill said. \"The Brennan's are a Favoured Family. They've been working in the Underlabs of Wargsnouts for generations. Hey, how many relatives do you have working down there?\" he asked Brennan.\n\n\"Father, mother, sister, grandfather...\" Brennan counted them off on his fingers. \"...uncle, aunt, other uncle, three cousins... I have a large family,\" he said with an impish smile. \"Most warlock families are. They have to be to counteract the high rate of attrition from working with daemons. Both of my twin brothers were eaten by a mnemmorracx a couple of years back.\"\n\n\"Sorry to hear that,\" Phil said.\n\nBrennan shrugged. \"They were stupid and didn't know what they were doing.\"\n\nJust like me and Jake, Phil thought.\n\n\"Jake was going to be our representative from the Circle of Lust, but that didn't go so well. Eric was killed by his succubus in the first lecture. You're the only one here with a lust daemon.\"\n\nSounds of activity came from the other side of the hall. The doors to the lecture theatre swung open.\n\n\"What's the lecture today?\" Stone asked sleepily.\n\n\"Obedience training,\" Brennan said. \"I have a little surprise for everyone.\" His smile was cryptic as he walked away to the lecture hall.\n\nDarvill put a hand on Phil's shoulder. His eyes sparkled behind his glasses. \"Think about it,\" he said and then turned to follow the others.\n\nPhil was left with N\u00ffte.\n\n\"Mmm, obedience training. I like the sound of that,\" she whispered in his ear.\n\nShe took his hand and they entered the lecture theatre. As with the first lecture, Phil took an anonymous seat up on the back row. Darvill and the others took seats right down at the front. Brennan made sure he was right near the end of the row. Phil wondered what his 'surprise' was.\n\nThe Scrote walked in from a side entrance. He was followed by a short man with a head covered in uneven clumps of wispy white hair. The man had spectacles, no neck and a face that reminded Phil of a mole.\n\n\"Welcome, students,\" The Scrote said. \"All of you have successfully summoned and bound your first daemon. This accelerated course will teach you how to forge that binding into an unbreakable chain of control. You wouldn't be taught this in the main college for another two years, but as you've already progressed to completing your first summoning there's no sense in wasting your time with trivialities. This is the fast track. You are the elite students and here we will prepare you for a life of power.\" \n\nThe Scrote motioned to the wispy-haired man behind him.\n\n\"Now Mr Lutwidge, if you'd please.\"\n\nThe Scrote stepped away from the lectern and stood with his succubi on the side of the stage.\n\n\"Now, as we know, daemons are wilful, capricious creatures,\" the short man, Mr Lutwidge, started. He spoke in a haltering manner and had a phlegmy voice. \"One of the hardest tasks facing a beginning warlock is keeping control over his daemon. If left to their own devices, daemons have an unfortunate tendency to main or kill members of the general public. This can lead to the trainee warlock having to face some very awkward questions from the regular authorities.\n\n\"Of course, later on it might be in your interests to allow or even encourage your daemon to feed on or kill certain civilians. What is the point of power if not wielded. Harrumpth.\"\n\nPhil suspected that was a joke. He hoped it was a joke.\n\n\"We will, of course, teach you how to cover your tracks, hide the bodies and obfuscate the investigations of the regular authorities. For now, however, the key aim is discipline. It is important to know how to curb your daemon's appetites and discourage them from carrying out uncontrolled killing sprees. This lecture we will begin the long and fraught process of\u2014\"\n\n\"No,\" Brennan interrupted.\n\nLutwidge paused and stared over the top of his spectacles.\n\n\"We don't need to. Not anymore. Technology marches on, old man.\"\n\nBrennan stood up and left his row to walk up to the lectern.\n\n\"If you'll allow me,\" he said.\n\nLutwidge looked over to The Scrote for guidance. Amused, the Head of Daemonological Studies nodded. Grumbling, Lutwidge stepped aside and let Brennan take his place.\n\n\"In the past the process of strengthening the bond between warlock and daemon was long and difficult,\" Brennan told the audience. \"Not anymore. Now we have this.\"\n\nHe held up what looked like a simple black leather collar.\n\n\"This is a Collar of Daemonic Compliance. It's a new device I've been working on in the Underlabs. It detects when a daemon is about to disobey an order or endanger the life of a human, and administers a strong shock to dissuade the daemon from pursuing that course of action. In my research I've found it effective on all daemons from feculoid imps to taurenoxes.\"\n\nPhil had never seen one, but he remembered Jake telling him taurenoxes were badass.\n\n\"Rather than take me at my word,\" Brennan continued, \"how about I give you a demonstration. Any objections, Mr Lutwidge?\"\n\n\"This is all very irregular,\" Lutwidge grumbled. \"What kind of demonstration did you have in mind?\"\n\nBrennan looked up at the audience. His gaze alighted on N\u00ffte. He smiled.\n\n\"Mr Rowling, could I borrow your succubus for a moment?\"\n\n* * * *\n\nBrennan was a little disappointed Rowling hadn't come with the succubus with the long green hair. Given the choice, he'd have rather carried out this little stunt with her. The other succubus was perfectly adequate, though.\n\nHow Rowling had ended up with the both of them was a complete mystery. He clearly didn't know what he was doing.\n\nLook at him now. Did he really just ask his succubus if she was okay with this?\n\nClueless. Totally clueless.\n\nThe succubus stood up and walked down the steps to the front. Her costume was an intimidating mix of black leather, metal studs and skull motifs that left very little to the imagination. There was a strange air to her\u2014she looked like a trashy biker chick, yet walked with the confidence and elegance of a queen. Male students slid to the ends of their rows to get a closer look as she walked down the steps. She was hot hot hot.\n\nBut not as hot as the one with green hair.\n\nThat didn't stop his heartbeat quickening as she approached him with a sultry smile on her bee-stung lips.\n\n\"You don't object to playing with me for a little while?\" Brennan gave her his most charming smile.\n\n\"I would love to play with you,\" the succubus purred.\n\nA throb of pleasurable anticipation pulsed through Brennan's genitals.\n\nLutwidge cleared his throat. \"You wouldn't be thinking of...\"\n\n\"Of course,\" Brennan said. \"It will make a perfect demonstration.\"\n\nLutwidge harrumphed. He glanced over to The Scrote, seeking and getting a nod from the other man. He turned and addressed the audience.\n\n\"As you all know, succubi are daemons from the Circle of Lust. They specialise in certain...harrumph...adult activities.\"\n\nSome of the students giggled.\n\n\"I'd like anyone under the age of eighteen to please leave the auditorium.\"\n\nNo one moved.\n\n\"You're all eighteen or older?\"\n\nNo one admitted to being younger.\n\n\"Very well, you may proceed, Mr Brennan,\" he said.\n\n\"This is most unorthodox,\" he whispered to Brennan. \"Most unorthodox indeed.\" He walked away shaking his head and muttering into his whiskers.\n\nUnorthodox, but most enjoyable, Brennan thought. Succubi as daemons didn't interest him that much, but he was curious to find out if sex with one was as good as the lore reputed it to be.\n\n\"What kind of fun did you have in mind?\" the succubus asked. Her voice was molten seduction.\n\n\"I thought we'd go straight to the fucky fucky,\" Brennan said. \"I assume you don't mind an audience.\"\n\nThe succubus looked up at the students, most of whom were perched on the edge of their seats.\n\n\"Not at all,\" she said. \"I like putting on a show.\"\n\n\"Put this on first,\" Brennan said. He passed her the black collar.\n\nMustn't forget that, he thought. For all her seductive appeal she was still a literal man-eater.\n\n\"Kinky,\" the succubus said.\n\nShe took off her spiked collar and replaced it with the one Brennan had handed her.\n\n\"Ooh! It tingles every time I think about doing something naughty,\" she said.\n\nBrennan smiled. It was going to do more than tingle in a moment.\n\n\"As you all know,\" he said to the audience. \"A succubus is a daemon of Lust. She feeds off sexual intercourse and can use it to drain life, will and eventually the soul of her victim. Under normal circumstances it would be extremely hazardous, probably fatal, for someone like me, who isn't her master, to have sex with her. But while wearing the Collar of Daemonic Compliance it's impossible for her to do anything to hurt me. I'll prove this by having sexual intercourse with her right here and now.\"",
        "He winked at the audience.\n\n\"In the interests of science, of course.\"\n\nSome of the audience laughed. Lutwidge continued to mutter into his whiskers.\n\n\"Shall we begin?\" Brennan asked the succubus.\n\nShe smiled and loosened the front of her corset, letting her tits\u2014large, pale and topped with pointed pink nipples\u2014bounce free. She reached down and unzipped her crotch, revealing the secret folds of her sex.\n\nBrennan's Adam's apple bobbed up and down. It was involuntary. Fuck, she really was a wet dream in flesh. His cacodulloughon was superior, of course, but he could see the appeal in summoning a daemon like this. Rowling was one lucky bastard to be getting this every night.\n\nHe even had the green-haired one as well!\n\nBrennan took off his lab coat and dropped his trousers. He tried to get on top of his excitement as his heart boomed in his chest. This was his big moment, his chance to demonstrate his brilliance. The Collar of Daemonic Compliance was going to revolutionise warlockry. He was going to be more famous than his illustrious great-grandfather.\n\nHe stared at the succubus. What. A. Body.\n\nHe wondered what Rowling made of this. The succubus was just his daemon rather than his girlfriend, but it must be odd watching another man fuck her.\n\nTough titty. Brennan had the genius prerogative. He took a step forwards.\n\nIt was a tough job, but someone had to fuck the sex-bomb succubus.\n\nThe succubus held up a hand.\n\n\"Wouldn't you rather we did it on something more comfortable than these hard floorboards,\" she said.\n\nHer other hand went down to her crotch, almost like she was patting her pussy in reverse.\n\n\"Volup Torupulum nidafacii Umbrassix,\" she incanted.\n\nShe lifted her hand away from her pussy. It looked like she was pulling an invisible chain out of her velvet depths.\n\nHe heard a soft noise behind him and turned around to see a black shape, dark like clotted shadow, well up from the floorboards like a fleshy fungus. It unfurled and expanded like an inflatable, finishing up as a large, comfortable-looking cushion.\n\nNeat, Brennan thought as it bumped up against the back of his ankles.\n\nHe turned to find the succubus right in his face.\n\nWhoa, fast, he thought.\n\nShe gave him a sultry smile and prodded him in the centre of his chest with her index finger. Brennan overbalanced and fell backwards onto the cushion. It felt squishily organic, but was also soft and pleasantly comfortable to lie on.\n\nThe succubus was already astride him. Her seductive smile had taken on an edge of feral lust.\n\nVery fast.\n\nIt was okay. The collar would cut in and protect him the moment she attempted to harm him.\n\nShe reached between his legs and grabbed his balls. A dark field pulsed around her hand. He jolted as a warm feeling enveloped his testicles. He let out a gasp as she lightly pumped him and the pleasurable feeling expanded to encompass his entire crotch.\n\n\"Making sure you're fully juiced up.\" The succubus gave him a smile that was pure filth. \"We can't have you running out halfway through your demonstration.\"\n\nHe shuddered as she gave his balls another light squeeze. They didn't look noticeably different, but they felt so tight and fully laden he would have sworn his testicles had swelled up to the size of tennis balls. The succubus's empty black eyes shone with lust. A long-nailed finger crept down his perineum and tickled his anus. A slender snake of dark energy slithered up his ass and sank fangs into his prostate. He writhed in blissful torment as he felt the gland twitch and vibrate inside him.\n\nOh.\n\nSuccubi were a lot more dangerous than he'd given them credit for. He'd allowed her near his sexual organs for a few brief moments and that had been enough to put him\u2014literally\u2014in the palm of her hand. He was thankful he'd made sure she'd put the collar on before indulging his curiosity.\n\nHe moaned out loud as she gave his throbbing balls a third pump. A wave of dark, lascivious energy flowed into him. His testicles churned and boiled.\n\n\"Mmm, nice and juicy,\" the succubus said.\n\nBrennan squirmed on top of the cushion. It felt like he had a pair of swollen grapefruits between his legs.\n\n\"Too tight?\" The succubus ran a teasing finger up the side of his hard and twitching erection. \"I know how to relieve that tension.\"\n\nShe straddled him and wrapped a hand around his eager hard-on. The fleshy lips of her vagina gaped open above him. He could see right inside, saw the fleshy pink interior glistening with her arousal. So sexy, and yet it uncomfortably put him in mind of a mouth, open and salivating.\n\n\"I'll go on top, shall I?\" the succubus said.\n\n\"I prefer doggy\u2014\"\n\nHis preferences didn't come into it as she smoothly sat down and guided his erection up into the silken depths of her pussy. He entered easily enough, his passage aided by the slippery juices coating the inside of her vagina. Then she clenched and the soft walls pressed in, pleasantly squeezing his cock. A languid undulation pulsed through her vagina, gathering up sparks of pleasure and dragging them up his shaft. The pulse reached his glans and became a long, drawn-out suck.\n\nBrennan erupted.\n\nHe writhed and squirmed beneath her on the black cushion. Pulse after pulse of semen flooded out into the irresistible fleshy suction of her sex.\n\nThey weren't exaggerating about succubi. Experiencing one firsthand he understood why some warlocks chose to make them their daemon of choice. That was some ejaculation. A few moments ago his balls had felt as swollen as if he'd gone without sex or masturbation for a month. Now they felt empty, completely depleted.\n\n\"I thought it would aid your demonstration if we skipped a lot of the in-and-outing and got straight to it,\" the succubus said. \"I hope you don't mind.\"\n\n\"Uh,\" was the best Brennan could manage. His chest rose and fell as he took heavy breaths and tried to get his scrambled nerves back under control.\n\nThe succubus shifted position, milking the last weak spurts of ejaculate from his cock with tender pulses of her fleshy pussy. Brennan noted his cock was still hard and showed no inclination of going down.\n\n\"This collar,\" the succubus asked, \"what exactly does it do?\"\n\nBrennan was only too happy to explain. \"When a daemon acts with hostile intent there's a clear and detectable spike in their aura just beforehand. The collar detects this and administers a strong mystic shock to prevent the daemon from hurting their victim.\"\n\n\"Hurting?\" the succubus queried.\n\nShe shifted position in his lap again and his eyelids fluttered as he felt the silky-soft walls of her vagina rub against his engorged member. He sucked in his cheeks.\n\n\"Endangering,\" he clarified.\n\nThe succubus smiled and nodded her head.\n\n\"Clever boy. Countless warlocks have discovered to their cost that a succubus never hurts her prey.\"\n\nOf course. Brennan was a genius after all. No daemon was going to loophole his soul away.\n\n\"Let's try it out.\" There was a smile of amusement on the succubus's lips.\n\nThat smile wouldn't last long once the shocks kicked in, Brennan thought.\n\n\"That large load of cum you ejaculated into my pussy\u2014very tasty, by the way, thanks\u2014should have established a good connection. I think we'll start with a gentle little energy drain.\"\n\nThe fleshy walls of her pussy squeezed around his erection. They felt soft and malleable as they enfolded him. It felt like his penis had been embedded in warm dough. He felt gentle tugs and then an odd tickling sensation as if something was flowing out of his cock to be absorbed by her smothering sex. It wasn't painful. Far from it.\n\n\"Ooo,\" the succubus said, pursing her luscious black lips. \"It's tingling.\" She pointed to the collar.\n\nSo was Brennan's cock. Bliss settled through his body as the soft flesh of the succubus's pussy lapped at him with gentle undulations.\n\n\"I wonder what happens if I start to take more,\" the succubus said, her black eyes gleaming.\n\nShe ground her hips against his. Not riding him yet, but moving enough for the friction to bring his cock back to full arousal. Tickling ripples flowed through her vagina, teasing his cock. From deep within her, a cushioned ring descended to suck on the tip of his penis, gentle like a kiss. The pleasant trickling sensation grew stronger as more of his energy flowed out of him.\n\nNo need to panic, he thought. The collar would stop her from taking too much. He lay back and enjoyed the sensations.\n\n\"Oh!\" The succubus squirmed in his lap. \"It shocked me,\" she said, smiling in surprise.\n\nSo had her squirming. Bolts of pleasure flashed through him as her motions rubbed the soft walls of her sex against his. It hadn't been far off from triggering another climax.\n\n\"Let's see what happens when I really start to slurp up your delicious energy,\" the succubus said and Brennan wondered if she was doing her own experimenting on him and the collar. \"Don't worry. This won't hurt at all. On the contrary, it's going to make you orgasm...again.\"\n\nShe rocked her hips back and forth on top of him with smooth thrusts. Her breathing quickened and came out harder. She clutched and squeezed the gorgeous mounds of her breasts. Lewd squelching noises came from her pussy as his cock moved in and out. A gasp of pleasure slipped from his lips as the succubus rode him with easy grace.\n\nOkay, yeah. She was right. Fuck.\n\nBrennan's hips jerked. He was coming...again. The succubus pressed her hips down on him, drawing his erection all the way up inside her. Her moist pussy squeezed tightly around him. Brennan squirmed and writhed helplessly in the grip of another orgasm. Those liquid sounds grew louder and lewder. It really did sound like she was slurping him up, and not just his semen. A pleasurable numbness settled into his crotch and started to spread up into his abdomen.\n\n\"Yow!\" the succubus yelped. She writhed on top of him like a scalded cat.\n\nThe pleasant slurping sensation paused, but only for a moment. The flow started up again, as strong as before. Brennan heard an audible crackle as the collar shocked her again. She yelped and quivered on top of him. Then she burst out in a fit of giggles.\n\nBrennan hadn't expected that.\n\n\"What a wonderful toy,\" the succubus said. Her pale cheeks flushed red.\n\nThe collar crackled again. This time Brennan saw a bright blue spark flash forth and burn an ugly red welt into the flawless white skin of her neck.\n\nThe succubus mewled and squirmed on top of him. A hot rush of fluids bubbled out of her pussy and drenched his crotch. His cock was right in the flow and responded by jumping back to full hardness. Blood surged into his penis, swelling it to strain right at the limits of his maximum erection.\n\nThe succubus folded her body on top of Brennan. The soft swell of her large boobs rested on his chest. She continued to move her hips up and down with short little bobs. Wet folds of flesh enfolded his manhood and sucked.\n\nHer soft lips brushed against his ear.\n\n\"There's something I should have told you,\" she whispered. \"I'm a dreadful masochist. I adore pain.\"\n\nBrennan's heart skipped a beat.\n\nNo, it didn't change anything. No matter how high her tolerance to pain was, the shocks would still become too much.\n\nThat pain tolerance was freakishly high. Each crackle of the collar set her body writhing, yet provoked only oohs of pleasure from the succubus. Wow, she hadn't been exaggerating about that masochist thing. He could feel the heat of the collar from here and that acrid tang tickling at his nostrils was the smell of her flesh burning.\n\nIt would stop her.\n\n\"Mmm, slurp slurp,\" she whispered in his ear.\n\nThat's exactly what her vagina continued to do to him. The soft walls squeezed his cock with gentle contractions. The fleshy cushion at the end enfolded his glans and inhaled.\n\nBrennan's hips twitched as another orgasm\u2014and more!\u2014was sucked from him.\n\nSo this was how a succubus killed her prey. A numbness like being wrapped up in soft wool was spreading out from his groin. He felt light-headed and pleasantly dizzy, as if his mind was floating away on a perfumed cloud. Hard to believe that something that felt so good was actually killing him.\n\nWell, not killing him really. The collar would stop her from going that far.\n\nThe succubus whispered in his ear again, audible only to him. \"I don't think your toy has enough juice. You're right on the cusp of your last orgasm. I'm going to make you come again and this time you won't stop until I've drained you completely. And this trinket is nowhere near the level of power needed to stop me.\" She ran a tongue along the lobe of his ear. It was hot, boiling.\n\nBrennan's eyes widened. No. It wasn't possible. He'd tested it on everything.\n\nThe succubus sat up and her wings unfurled behind her. She rode him with easy grace\u2014on top and in complete command. The collar crackled and sent out blue sparks. White smoke and the acrid stench of charred flesh filled the air. It didn't stop the succubus as she brought her hips up and down.\n\n\"Mmm, yes. Close now.\"\n\nNo no. Hold on. He had to hold on.\n\nHe squirmed and writhed beneath her. He knew he needed to throw her off him, but it was taking all of his focus just to resist the urge to come, and he didn't think he'd be able to hold that back for long. He felt like he was being dragged to the edge of a yawning black abyss.\n\nThe succubus moaned in pleasure. Her eyes were closed and her head tilted up at the ceiling. Her wings were fully outstretched now, a canvas painted in midnight.\n\nFuck. Hold on! The pain would become too much. All he had to was maintain focus and hold on until\u2014\n\nThe succubus gave a loud orgasmic cry and plunged down on Brennan. Her vagina seemed to melt around him. The swollen head of his cock pushed up into that soft cushion of flesh deep within her. It enveloped the whole of his head and part of the shaft beneath. He felt it contract around him like a fleshy pump taking a final mighty suck.\n\nAnd that was it for holding on.\n\nA final gasp escaped his mouth. His body flexed and he jetted semen\u2014and everything else\u2014inside her. This time the flow would not be checked. Lost to pleasure, he writhed and squirmed beneath her as he emptied his life into her. The comfortable numbness travelled up his body and enfolded his brain. His consciousness melted away until only the mindless bliss of rutting remained.\n\nSighing in triumph, N\u00ffte fell across him and wrapped him up in her midnight wings. Enfolded in darkness, Brennan slipped away until he was one with it.\n\n* * * *\n\nPhil was surprised by Brennan's request and even more surprised when he saw what the other student planned to do with her.\n\nWas he crazy? Didn't he realise how dangerous N\u00ffte was? Phil had seen her reduce a man to ash with a single kiss.\n\nWhat happened next went pretty much as Phil expected. N\u00ffte pushed Brennan down on the bed she'd created and started to fuck him. The collar worked...to some extent. It threw out blue sparks and shocked her. This didn't discourage N\u00ffte at all. If anything, she relished the shocks and mewled with delight even as thick white clouds of smoke filled the stage and the stench of burnt meat reached Phil up on the back row.\n\nUnderneath her, Brennan's moans of pleasure grew less and less restrained until N\u00ffte gave a loud cry of release and fell upon him. Her black wings drifted over both of them like a funeral shroud. The sounds of mutual climax faded away to be replaced by crackles from the collar and a burbling, disconcertingly wet sound that reminded Phil of the last dregs of an ice cream sundae being sucked up through a straw. Then silence.\n\n\"Oh dear. Oh dear.\" Lutwidge stepped back onto the stage and attempted to wave away the thick white clouds.\n\nN\u00ffte sat up. Her pale cheeks were flushed red and she wore an expression of satisfaction. She looked down and put a finger to insouciant lips. \"Oh dear. Was this supposed to happen?\"\n\n\"Dearie me. Dearie me,\" Lutwidge said, still waving his arms around to clear the smoke. \"Can someone please call for the nurse.\"\n\nThe smoke cleared and Brennan's body came into view. Phil doubted calling for a nurse would do much good, not unless they were well versed in the necromantic arts. Brennan's corpse was withered and shrivelled up, as if it had been lying there undisturbed for decades.\n\nBrennan's daemon, the weird ball of sliding armour plates, floated towards N\u00ffte. Phil thought it might attack her in retaliation for what she'd done to Brennan. Not that it seemed to concern the succubus. She even blew it a kiss that shimmered through the air like a glittering star. The daemon didn't rise to her provocation. Instead it span on the spot, the plates folding in on themselves and shrinking until it winked out of existence with a small flash of light.\n\nN\u00ffte stood up, zipped up her crotch, pulled her corset top back up over her voluminous breasts and stepped off the stage. Behind her the artificial black cushion deflated and melted into a black ooze that dribbled away between the floorboards. Calmly, the succubus walked back up the stairs with the same aloof elegance she'd descended with. This time the boys scooted away from the ends of the rows as she walked past.\n\nWhile Lutwidge busied himself with the withered body The Scrote walked back onto the stage.\n\n\"Well, well,\" he said. \"That was unfortunate, but as Mr Brennan has sadly demonstrated, there are no quick fixes or magic shortcuts when it comes to learning how to control daemons. It takes effort, application and discipline\u2014skills Mr Lutwidge and I will teach you over the coming months.\"\n\nN\u00ffte reached the back row. Phil saw the collar had left a black scorch mark about an inch thick around her pale neck. Spidery red welts\u2014burns from the sparking collar\u2014ran like cracks from the base of her jaw to the top of her chest. N\u00ffte didn't seem bothered by them. Her black eyes gleamed and a broad smile was on her lips. Right before Phil's eyes the red lines and ugly black scorch marks faded away until N\u00ffte's pale skin returned to its previously unblemished state.\n\nShe sat down next to him. She nudged him and passed him an object. Phil looked down and saw it was the black leather collar.\n\n\"For later,\" she said with a suggestive wink.\n\nto be continued... "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "collar",
        "shocks",
        "magic",
        "warlock",
        "draining",
        "obedience training"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-203"
}