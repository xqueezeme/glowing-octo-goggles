{
    "title": "Remembering Ava",
    "pages": [
        "Thank you to raconteuse for editing, advice, encouragement and more.\n\n\n\nIt will be nine months, tomorrow.\n\nNine months since Ava passed.\n\nShe was 83 years old when breast cancer took her.\n\nBy the end, that lively (at times, almost fierce) spirit of hers took a beating.\n\nSo, when she finally surrendered the fight, it was something of a mercy.\n\nI won't try to tell you how much I miss her. \n\nI couldn't anyway.\n\nThat language hasn't been fashioned yet.\n\nWhat I will do is introduce you to her. The Ava I first encountered, unbowed by time or disease.\n\n*****\n\nIn May of 1956, I had just graduated from the School of Industrial Art in New York. It's moved since then and changed its name, but it was (and still is, as far as I know) a high school for training commercial artists. I wanted to be, of all things, a newspaper comic strip artist, which was a tough row to hoe for a female back then.\n\nUpon graduating, Mr. Dylan, one of my favorite teachers, had arranged for me to apprentice with an acquaintance of his. Her name was Ava Parker and she was a freelancer for several New York comic book publishers. It wasn't exactly the sort of prestigious newspaper venue that I aspired to, but as Mr. Dylan had said, \"Everybody's gotta start somewhere\". Besides, he had assured me that she was very good at her job and would provide an excellent springboard for the career I wanted to pursue. \n\nWhen I initially voiced some hesitation at the arrangement, Mr. Dylan put his hands on my shoulders, looked me in the eye and said, \"I have tremendous faith in your abilities. You've got talent to spare. All you need now are the skills and polish to match. Believe me, Miss Parker will see that you get those.\"\n\nTo prepare me for the interview, Mr. Dylan told me a little about the artist before I went to see her. \"So long as you give her your best effort, you couldn't ask for an easier person to get along with. She takes a lot of pride in her work and she'll insist that you do the same. But knowing you\", he touched his index finger affectionately beneath my chin, \"I don't anticipate any problems on that score.\"\n\n\"By the way\", Mr. Dylan went on, \"Miss Parker is a pioneer in more ways than one. Not only is she one of the few females currently working in comics, she's also one of the only negroes in the business. You've gotta have a special brand of single-mindedness to persevere through some of the crap she's had to put up with.\"\n\nI am ashamed to admit that upon hearing that information, I felt a hint of trepidation. You see, I had grown up in a small village on the lower Wisconsin River. Almost everyone there was of German ancestry and the few who weren't were certainly not colored. In the short time since my family had moved to New York I had little time for socializing and none of that had brought me into contact with any of that race. Those of you reading this in the 21st century may find it difficult to believe that any of us were so insulated back then. Just remember that this was decades before the Internet and in the small town I was from, most of us listened to the radio regularly, but only a couple of families had television sets.\n\nI was somewhat intimidated by my ignorance. Even though I felt like a complete hayseed, I voiced my apprehension to Mr. Dylan. He laughed in response. Not a caustic, condescending snicker, but a warm chuckle. \"Don't worry, Stephanie. You don't need any special knowledge. Miss Parker will have you feeling like an old friend in no time flat. Besides, she'll keep you too busy to worry about anything. Just don't forget your old teacher when you're a famous cartoonist.\"\n\nThis is how I found myself at the entrance of a five-story walk-up on a beautiful spring morning in the lower east side of Manhattan. The building was an old, but well-kept brownstone row house and her apartment studio was on the third floor. \n\nBefore I knocked on her door, I took a deep breath and tried to calm my nerves. I was still quite shy back then and this would be my first job interview ever. I desperately wanted this to go well. \"Okay...\", I thought, \"here goes nothing\".\n\nWhen Miss Parker opened the door, my first glimpse of her took me completely by surprise. I knew she had been a professional cartoonist for a number of years, so I hadn't expected anyone so young. She couldn't possibly have been thirty yet. She was also the most breathtakingly beautiful woman I've ever seen in my life, before or since.\n\nHer eyes were what snared your attention first. Large and expressive, they were shaded by long lashes and glittered with a lively intelligence. The irises were amber flecked with gold. Above them, her eyebrows were not plucked and redrawn into the artificial arches so popular then, but were natural, full and gently curving. Her skin was a light golden brown unadorned with make-up. The symmetrical slopes and planes of her visage seemed designed especially to seduce the eye into lingering there. \n\nThis was a face on which nature had lavished exceptional care. It was framed by a dark, lustrous mane which she had pulled out of her way into a pony tail, though a few stray tresses draped across her brow. \n\nAs if my astonishment at her loveliness was not yet complete, she upped the ante by smiling. A smile that suffused those already breathtaking features with a warmth and kindness that had me liking her instantly. Extending her hand in my direction, she said, \"You must be Miss Kendall. I'm Ava. Won't you please come in?\"\n\nThe apartment had no foyer, so stepping through the entrance put me directly into the living room. It was simply, but neatly furnished. Miss Parker gestured toward the sofa and asked me to have a seat. \"Please excuse the state I'm in. I've got a job that's due the day after tomorrow and I'm a little frazzled.\"\n\nThe state she's in? Did she mean her attire? Miss Parker had on an untucked blue plaid men's shirt and dungarees. But she filled that plain garb with voluptuous curves that would've made a movie star envious. \n\nA closer inspection revealed ink stains on her hands, blouse and slacks. Maybe that's what she was referring to, though it's hardly surprising to find such smudges on an artist at work.\n\nSeating herself in an armchair that was diagonal to the couch, Miss Parker clasped her hands under her chin and looked directly into my eyes. \"I realize that this was supposed to be an interview for a job as my assistant. But, I find myself in a bit of a pickle and I wonder if you'd be willing to give me a hand?\"\n\n\"How so?\" I asked.\n\n\"Well, do you think you could dive right in today? If you could do background inking, panel borders, filling in black areas and erasing, it would be a great help. Paul... that is, your Mr. Dylan, showed me some samples of your work and I know you're more than capable. Otherwise, I don't see how I'll make this deadline. What do you say?\"\n\nI stood up and gestured down at my clothes, \"Well, I came dressed for an interview, not...\" Before I finished, Miss Parker chimed in, \"Not to worry. I've got some things you can wear. I'm a little taller than you, so they won't fit perfectly, but there's nobody here except us, and we'll be too focused on getting the job done to care much.\"\n\n'Won't fit perfectly'? Now, there was a hell of an understatement. Don't get me wrong. I had a good figure, but I couldn't come close to filling out the simple shirt and overalls she gave me the way she did. But, as she had pointed out, who was gonna see me?\n\nMiss Parker's apartment had two bedrooms, the second of which, while it did have a bed, served primarily as her studio. It contained two drawing tables that faced each other, both with an adjacent taboret for art supplies. She sat me down at one of them and handed me a small stack of original comic book pages in various stages of completion. Some were simply rough layouts in which figures, backgrounds and word balloons were only sketched in to suggest the panel compositions, but none of the details were yet nailed down. Others were tightly rendered pencil drawings with completed lettering and some or all of the main figures inked.\n\nSometime in the 1960's, the size of the original comic art gradually switched to one and a half times the size of the printed page. But, in '56 nearly everyone was still working twice up and the artist, if he or she was so inclined, really had the room to do detailed linework. And, believe me, Miss Parker was definitely so inclined. The quality of her line was lively, fluid and graceful. There was also a bravura quality that I found somewhat intimidating. I wondered how the hell I was ever supposed to match this kind of skill, spirit and sheer daring.\n\nMiss Parker leaned over my shoulder as she pointed to the pages, giving instructions. I found her nearness oddly distracting. First of all, there was her fragrance. No perfume, I think, just her natural scent combined with whatever soap and shampoo she used. Whatever it was, it smelled wonderfully fresh and alluring.\n\nThere was also the matter of having such loveliness so close at hand. I had to resist the temptation to turn and look at her with a more leisurely gaze, giving my eyes time to tarry on the details. But that would've been weird and rude at such close proximity. I became annoyed with myself for acting like a starstruck schoolgirl when I needed to be focused on the task at hand. \"What the hell is wrong with me?\" I wondered.\n\nThank God, I did manage to pull myself together and pay close attention to the rest of her directions. When she was done, Miss Parker (I guess I should refer to her as Ava from here on out, because she told me that's what she preferred) sat down at the other table and we spent the next several hours there in relative silence interrupted only by my occasional questions.\n\nEach of my queries was answered patiently, clearly and concisely. At one point, Miss Par... I mean Ava... came around behind me to observe while I was inking a page. While I was in school, I usually preferred to work with a brush, but Ava had asked me to use a crow quill pen to try to match the style of the pages she'd already inked. After watching me for a few moments, Ava told me \"Don't be afraid of that pen, sweetie. You're not gonna hurt it.\"\n\n\"I didn't want to break the nib or spatter ink everywhere.\"\n\n\"Let me sit there for a moment.\" She took the pen from my hand. \"You're moving the pen slowly, carefully... never varying the pressure you're putting on the nib. The result is exacting, but dull.\" \n\nAva dipped the pen into the India ink, then made a mark on scrap paper to get rid of the excess ink. After that, with a quick swipe of the pen, she began a thin delicate stroke which morphed into a bold and voluptuous thing that might have been made with a brush. \"Do you see how much force I brought to bear here?\" Ava interjected. \"Don't fret about the nib. It can take a lot more than you're likely willing to dish out.\" The line became slender again as it made a roughly ninety degree turn and then curved faintly and widened slightly. \"Varying the line weight can suggest form and volume.\" I watched in astonishment as a beautifully rendered human arm began to appear on the paper. The grace and variety of the strokes she used was a revelation!\n\nWhen she was done, Ava stood up and handed me the pen. \"I know we're on a tight deadline, but I want you to spend at least half an hour with scrap paper and this nib. I want you to attack that paper. No timidity whatsoever. Find out what this pen is capable of. Loops, dashes, cross-hatching, feathering, thin to thick and back again. Really test it.\"\n\nI began to think that Mr. Dylan had been right. Ava was going to be an excellent teacher.\n\nIn fact, the art she had me working on was instructional in and of itself. Aside from the brilliant linework, about which I've already sung praises, her compositions were fresh and dynamic and the panel-to-panel transitions were clear and fluid. Her figure work was never limited to stock poses, but consisted of believable, well-observed postures and gestures that always enhanced the dialogue. Miss Parker later told me she thought of this as 'acting with a pencil'.\n\nIf this was the kind of work she turned out in a hurry, I couldn't wait to see what she could do when she had more time.\n\nMy thoughts... and the room's stillness... were eventually disturbed by a long, low growling which emanated from the vicinity of my tummy. I grinned sheepishly at Ava over the top edge of the drawing table, \"Sorry. I haven't eaten since lunch.\"\n\nA stricken look troubled Ava's lovely features, \"Oh, honey, I'm the one who should be sorry. I can't believe I was so thoughtless.\"\n\nRising from her table, Ava moved to the room's doorway, \"Do you like spaghetti?\"\n\n\"Yes, ma'am. I...\"\n\n\"'Yes, ma'am'? How old do you think I am?\" Before I could answer, she continued, \"That was rhetorical, sweetheart. Relax. Remember... it's just Ava; not Miss Parker and certainly not ma'am.\n\n\"Yes, ma'a... I... I mean... okay. Oh, gosh! I'm so sorry. It's just that my parents really drilled this stuff into me. Everything was 'sir' or 'ma'am'. They were pretty strict and kind of old-fashioned. They definitely stressed how important it was for me to respect my el...\" I blushed and covered my face with my hands. \"I should just stop talking now.\"\n\nThrough my fingers, I could see Ava cock her hips jauntily with her arms akimbo. \"Well, Stephanie, once you've hit bottom, there's really no point in continuing to dig.\"\n\n\"Now\", she went on, \"that we've established that you're okay with spaghetti, do you enjoy broccoli, as well?\"\n\n\"Yes, m...\" I caught myself, yet again, then sputtered, \"Yes. Just plain 'yes'.\"\n\nAva laughed and headed off to the kitchen. I continued working on the pages she'd given me while the clatter of pots and pans and, eventually, a heavenly aroma, wafted from the kitchen.\n\nAva called for me to come eat and showed me where the washroom was. In the dining room, I sat down to a sumptuous plate of spaghetti in marinara sauce, broccoli and garlic bread. After I'd said my grace, I noticed Ava watching me with curiosity in her eyes. \"Are you Catholic?\"\n\nI caught myself this time before uttering the forbidden response and simply mumbled, \"Mmm-hmm.\" which was easier with my mouth full anyway. After I'd swallowed, I asked, \"How about you?\"\n\n\"Well, I was raised Catholic, but I guess it didn't stick.\"\n\n\"What faith are you, then?\" I asked naively.\n\n\"Truth is,\" she answered between mouthfuls, \"I never could find much use for faith.\"\n\nI digested this in silence, thinking of the Freethinkers Society back in my hometown. My mom had always been suspicious and disdainful of them, but I remembered several of their number as good-hearted people.\n\nThe meal Ava prepared was delicious and provided a gracious means for me to change the subject.\n\n\"The sauce on this spaghetti... it's a-MAY-zing! Where on earth did you learn to cook like this?\"\n\nAt my praise, another of those breathtaking smiles lit her features. \"My pop. He was a carpenter when the depression hit. Things got so bad that white men couldn't find work, so there sure as hell wasn't any he could find. Well, dad was orphaned at a young age and raised by an Italian family that were friends with his folks. Pop always said that Mama Agostina was a genius in the kitchen and she taught him everything she knew.\"\n\n\"When work in carpentry dried up, he applied for anything he could get. All he could find were short, temporary jobs. Eventually though, he landed a spot as a chef in an Italian restaurant. Do you know how good (and how lucky) a colored man had to be to get something like that?\" Ava spoke with obvious pride.\n\nAfter many twists and turns, our conversation wound its way to our working arrangements. She was pleased with the work I'd done so far, but she warned me that the hours were long and the pay was low. She did point out, however, that both of her previous assistants had moved on to freelance careers of their own. One of them, in fact, had landed a syndicated newspaper strip of his own, which, for those of you who don't know, was a much more lucrative and prestigious field than comic books.\n\n\"Have you ever thought of going to the syndicates?\" I wondered aloud.\n\n\"The money's good.\" she admitted. Our meal over, Ava began to clear the table. \"But, I've ghosted a few times for newspaper guys who were sick or had some other kind of deadline crunch, and I didn't care for it much. The size restrictions are just too claustrophobic. I got into this business 'cause I love to tell stories with pictures, but there's just no elbow room in the paper. I don't know how you're supposed to spin a decent yarn in just three panels a day.\"\n\nI was impressed. I knew that Ava had been working in the field for nearly ten years and yet, somehow, she hadn't lost her idealism. It occurred to me how fortunate I was that Mr. Dylan has recommended me for this job.\n\nWhile scrubbing our dinner dishes, Ava asked, \"Where do you live?\"\n\n\"Hmmm? Oh... with my parents in Queens. Why?\"\n\n\"Well, it's gotten pretty late. I'd hate for you to try to catch a bus or ride the subway alone at this hour. Why don't you take the spare bed in the studio room? There's no bath, but you can shower and I've got spare clean pajamas.\"\n\n\"Thanks. I'd definitely prefer that to traipsing around out there at this hour.\"\n\n\"You'd better give your folks a call and let them know where you are. No sense worrying them sick over nothing.\"\n\nWhen I finished my shower and exited the bathroom in Ava's ill-fitting PJ's, I found her back at the drawing board.\n\nShe heard me in the doorway and looked up, \"Oh. If you're ready for bed, I'll get out of your way.\"\n\n\"No, thank you. The shower woke me up a bit. Maybe I can get a little more done as well.\"\n\nAva gave a grateful smile and lowered her head to draw again, \"The deadlines are always awful, but this is worse than usual. When I went in to work on Monday to pick up my check and a new script, the editor was crying the blues because one of his regular pencilers had left him in the lurch. I let him talk me into taking an extra script home. So, now I've gotta get two stories done in the time it usually takes me to finish one.\" Ava wagged her pen at me in mock admonishment, \"Don't follow my example. Make sure you're not anyone's doormat. Learn to say 'No'.\"\n\nA couple of hours later, I was yawning for the tenth time in as many minutes. I told Ava, \"I'm sorry, but I don't think I've got another brush stroke in me.\"\n\n\"No need to apologize, sweetie. I'm truly grateful for all the hours you've already put in. This is way above the call of duty, especially since we hadn't even come to a formal arrangement when I asked for your help. I should be able to get this in on time now without turning in a really crap job. Thank you.\"\n\n\"Glad I could lend a hand.\" I cleaned my brushes and tidied my work area a bit before shambling over to plop down on the double-bed.\n\n\"Will it keep you awake if I continue working for a while longer?\"\n\nI gave her a bleary-eyed smile, \"I don't think anything could stop me from sleeping at this point. But, aren't you exhausted, too?\"\n\n\"Not really. I often work the whole night through and go to bed around seven or eight in the morning. I do some of my best work between one and five when the world is still and there's very little to distract me.\"\n\nCrawling under the blanket, I turned my back on the swing-arm drafting lamp that illuminated her toil. A momentous yawn mushroomed in the middle of my, \"Good night\" and, before I knew it, I was fast asleep.\n\nI woke the next morning, momentarily disoriented by the strange surroundings. When I remembered where I was, I noticed that Ava had thoughtfully closed the blinds and shut the curtains so that the early sunlight wouldn't disturb my rest. A truly mouth-watering aroma had made its way under the closed door of the room. That and a healthy morning appetite inspired my quick exit from bed.",
        "Both bedrooms and the bathroom were in the back of the apartment. The doorways opened into a short, narrow hallway which delivered you to a dining room on the right and a kitchen on the left. The dining room led into the living room with no dividing wall. I found Ava placing two full plates on the dining room table. She looked up at me and smiled, \"Good morning, sleepyhead.\" I returned her greeting and was struck anew by her startling loveliness. It took a conscious effort on my part not to gawk like some adoring fan at a movie star. \n\nMoving back into the kitchen, Ava spoke over her shoulder, \"I won't ask how your night was. I just came out of there a half an hour ago and you hardly stirred the entire time I was working.\"\n\n\"Oh my gosh! You haven't been to bed yet!?\"\n\n\"Nope. I told you, the middle of the night's my favorite time to work. But believe me, once I get some chow in me, I'm gonna grab a quick shower and I will definitely get some shuteye.\" Ava pored steaming water from a kettle into a ceramic mug. \"I'm gonna have some tea with my breakfast. Want some or would you rather have some OJ or water?\"\n\nI opted for the tea, which Ava brought to the table and then sat down near me. Just as last night, the food was delicious and I told her so. \"I'm amazed any of your previous assistants could bear to leave this behind.\" \n\nAva smiled at my praise, \"It's all part of my insidious plan to keep you from wandering too far from the drawing board.\"\n\nAs I ate, my eyes kept wandering back to her face. The singular beauty of her features seduced my gaze into lingering for longer and longer until she couldn't help but notice.\n\n\"Have I got ink or something on my face?\"\n\n\"N-no. I'm sorry. I didn't mean to stare. It's just that... I mean... um.. well... I-I've never seen anyone so beautiful before.\" I blushed with embarrassment at how childish that sounded.\n\nAva reddened slightly herself and seemed pleasantly surprised at the compliment. \n\nI responded, \"That must've been odd to hear from another female, but I'm guessing guys must tell you all the time how gorgeous you are.\"\n\nAva blushed again. \"When I first got into this business, I worked in a couple of different bullpens. And, yeah, some of the guys did lay it on a bit thick, but I never took it too much to heart. Not after seeing what wolves they were. Some of them would hit on anything in a skirt. So, it was easy to keep my ego from getting too puffed up by their attentions.\"\n\n\"Nowadays\", Ava went on, \"as a freelancer, I spend so much time to myself that I don't hear too many compliments or complaints from anybody. So, your appreciation is more than welcome.\"\n\nRising from the table, Ava began to gather our dishes. \"It's long past my nap-time, sweetie. If you've got more work in you, you're more than welcome to stay here, but please don't feel obligated. I understand if you want to get out for fresh air or check in at home.\"\n\n\"No, no. After the sleep and the food, I'm ready to go again.\"\n\n\"Great.\" Ava's lips curved again into that unforgettable smile. \"I need to do some grocery shopping later, but there are plenty of fixings for sandwiches in the fridge when you get hungry again. There's also juice and water and some fresh fruit on the kitchen counter. Please make yourself at home.\"\n\n\"If you hit a snag\", Ava continued, \"just move onto something else until after I'm up again. I'll see you in a few hours.\" With that, she wiggled her fingers and headed back to the bedroom adjacent to the studio.\n\n*****\n\nOver the next several weeks, I gradually changed my schedule to match Ava's. She never insisted on it; it just happened. Like Ava, I came to enjoy the stillness at two in the morning. \n\nThe penciling part of the job takes pretty intense concentration. That's the phase in which you're figuring out the page layout, the panel compositions, the figure placement, the lighting, etc. We never talked much while working on that. But, we often had lively conversations while we passed the pages back and forth for inking or lettering. The late hours afforded fewer opportunities for me to get home to see my folks. I spent the night at the studio more and more often, sleeping in the spare bed during the day. \n\nDrawing is usually a lonely occupation, so I truly came to appreciate Ava's companionship. \n\nI couldn't believe how much I learned about the craft in such a short time. My skills were progressing in leaps and bounds under Ava's tutelage. \n\nSince I was around the apartment so much during my off hours, Ava and I were also spending a great deal of our free time together. We went out to the movies at least once a week, often making it a Sunday ritual. The minute we exited the theater, we'd excitedly discuss what the director and cinematographer had done. They used many of the same visual storytelling techniques that we did. Closeups, long shots, establishing shots, framing devices - all the same. So, our weekly excursions were as educational as they were entertaining. \n\nShe'd also take me to museums and to probably every used bookstore in and around Manhattan, which, back then, was saying something! In those old bookshops, Ava opened my eyes to the master book and magazine illustrators of the teens, twenties, thirties and forties.\n\nI can still remember the first time she introduced me to the work of Joseph Clement Coll. I actually got goosebumps! He had a confidence, a skill...no, a mastery that was almost angelic.\n\n\"I know these crazy deadlines don't leave you with much time to call your own,\" Ava told me, \"but whenever you get the chance, you should experiment with other media. Oils, watercolors, pastels, anything that strikes your fancy. It's always good to have as many arrows in your quiver as possible.\"\n\n\"I don't mean to discourage you,\" Ava continued, \"but newspaper strips are harder and harder to come by. For one thing, the number of papers is slowly, but surely dwindling. And even if you do get your own feature, who's to say you'll want to do that for the rest of your life? Magazine illustration is dying and illustrated books for adults are just about non-existent now, but there are still children's books and advertising work to be had. You don't want to limit yourself to just pen and ink.\"\n\nAs if to show me that she practiced what she preached, over the next couple of months I began to find a few watercolor paintings by Ava around the studio. They were all the same size and several of them featured recurring characters. This made me think they were illustrations for something specific, instead of random paintings done just for practice. I was curious, but figured she'd tell me about them when she was ready. I also wondered when the hell she was finding time to do them? I was there with her in the studio nearly all the time, it seemed. Did the woman never sleep?\n\n*****\n\nI had been with Ava for about three months when my late night debacle happened. It had been a brutal, steamy day in the apartment. We didn't have air-conditioning and actually had to wrap terry cloth around our forearms to keep the sweat from ruining the pages we were working on. The heat and humidity had been so enervating that we quit around midnight and turned in early. \n\nA couple of hours later, I was awakened from my sleep with a terrifying crash.\n\nThe day's sultriness had resulted in a truly spectacular thunderstorm. \n\nI have had a mortal dread of thunderstorms since I was a child. I'd never outgrown it. A fact made abundantly clear with the next flash of light, which was followed by that awful hesitation... then a shattering burst of sound. A burst which shook the entire building.\n\nFear trumped humiliation and I made a beeline for Ava's room.\n\nI hesitated in her doorway, unsure of what to do or say, when Ava rose up on her elbows and asked, \"What's wrong, honey?\"\n\nBefore I could answer, another explosion rattled the air. I screamed and dived for Ava's bed.\n\nPulling the covers over my head, I babbled, \"I'msorryI'msorryI'msorry! Oh God, I know it's stupid, but can I stay in here until it passes?\"\n\nI can only imagine Ava's consternation when a full-grown woman came vaulting into her bed in the middle of the night, sobbing like a small child.\n\nBut, God bless Ava and her kind heart, she took me in her arms without a moment's hesitation and did her best to soothe me. She made gentle shushing sounds in my ear while one of her hands stroked my hair and the other caressed my back. With me wrapped in her embrace, she couldn't help but notice that I was trembling like a leaf in the wind. Ava said nothing of this. In retrospect, I realize she took great pains not to embarrass me.\n\nWhen another blast of light lit the room like the sun, it was quickly followed by a detonation that rattled the building again. I screamed.\n\nAva held me tighter. \"It's okay, sweetheart. I'm right here. Nothing's gonna hurt you.\"\n\nHer voice, her hands, her warm embrace carried me through the storm.\n\nWhen the tempest passed into distant rumblings, Ava whispered, \"You can stay in here if you want.\"\n\n\"Thank you.\" I turned over, facing away from her. Ava snuggled up behind me and put her arms around me again. After the enervating heat of the day followed by the adrenalin rush of the storm, I was exhausted. The voice, the hands, the embrace that had carried me through the storm, now gentled me to sleep.\n\nWhen I awoke in Ava's arms the next morning, it took me a moment to realize what I was doing there. Then, memories of the previous night came flooding back. I tried to extricate myself from her arms without waking her, but as soon as I stirred, it roused her. I got out of the bed quickly and said, \"I'm sorry I woke you.\"\n\nGlancing at the clock on her night table, Ava answered, \"That's okay. Past time I was up, anyway.\" Ava looked up at me and I looked down. I was too ashamed to meet her gaze. \n\n\"You okay, Stephanie? You get enough sleep?\"\n\n\"Yes, thank you.\" My eyes were still cast down at my dithering hands, as if they were the most fascinating things I'd ever seen. \"I'm really sorry about last night. I hope I didn't...\"\n\n\"Stephanie.\"\n\n\"Yes?\"\n\n\"Look at me, please.\"\n\nI complied and in the midst of my embarrassment, the incongruous thought flitted through my head, \"My God, she's gorgeous!\"\n\nShe lay on her side, propped up on one elbow. Early morning sun streamed through the window, burnishing that resplendent complexion of hers. \n\nAva's voice pulled me out of my near mesmerization. \"Are you embarrassed about what happened last night?\"\n\nI looked away from her, squinting into a haze of sunlight from the window. \"Yes.\" \n\n\"Don't be. Please.\"\n\nI didn't know what to say. \n\nYou can't simply tell someone not to be embarrassed. \n\nYou either are or you aren't. \n\nI most decidedly was.\n\nAva spoke again, \"The first year or so after I broke into the business, I worked in a bullpen. I was the only colored person and the only female. No one ever treated me badly, but I never quite fit in either. It's like they handled me with kid gloves... as if they were afraid of saying or doing the wrong thing.\"\n\n\"When I started getting enough steady assignments of my own, it made sense to freelance. So, I rented this apartment and set it up as a studio. Freelancing is lonely work, though. It seems like the only time I ever had any human contact is when I went in to pick up scripts and drop off art.\"\n\n\"Eventually,\" Ava went on, \"the workload became too much for me to handle on my own. I hired an assistant who was recommended to me by one of my editors. He was a disaster. He was competent enough, I suppose, but it quickly became apparent that he resented working for a female, especially a female who was also a negro. So, that only lasted about three months before he hightailed it out of here.\"\n\n\"My second assistant came to me the same way you did, by way of Paul, your teacher, Mr. Dylan. Paul and I went to school together and got to be good friends. I don't know if you know this, but Paul is a pretty good comic book artist himself. Paul's problem, though, was he couldn't hack the deadlines. He was just too slow to make a decent living at it. So, he turned to teaching instead.\"\n\n\"Well, anyway, Geoff, the fellow Paul sent me, worked out just fine. He learned quickly and was a hard worker.\"\n\nAva got out of bed, stood on tip-toe and raised her arms upward in a back-arching stretch, groaning with the effort. She had on no sexy lingerie - just plain, flannel pajamas, and yet they did little to conceal the undeniably feminine figure beneath.\n\n\"Geoff was with me for two years. Being a painfully shy fellow, he didn't provide much in the way of companionship, but he did get the job done - and done well.\" Ava crossed the room to where I was. Putting her hands on my shoulders, she looked into my eyes with a disconcerting directness. \"After a while, though, I ran into the same problem with Geoff that I expect I'll have with you before long.\"\n\n\"Problem? What's wrong?\"\n\nAva chuckled and, with a surprisingly intimate gesture, she placed her hand on the side of my face. \"Talent, hon,\" she chuckled again. \"You're too capable to remain an apprentice for very long. I'm pretty sure you're ready to handle assignments of your own right now. I just wanted to ease you into it so the transition wouldn't be too jarring. When you're starting out on your own, those tight deadlines can be panic inducing. I figured it would be easier if you first encountered that while you're still here, so that I can provide backup in case you get into a jam.\"\n\n\"While I'm still here?\" I repeated stupidly. \"Does that mean... \" I felt a physical pang at the thought that I might be leaving soon. I'd been so happy with our arrangement... so fond of Ava...\n\n\"We'll talk about that later. I seem to have wandered from my initial point, though, which was how much I've enjoyed having you here. As I said before, freelancing is lonesome work. I used to spend some of my spare time with Paul. He never seemed to give a damn about my color and he was a lot of fun to be around. Smart, funny, thoughtful. But after he got married, it became clear that his wife wasn't crazy about him spending so much time with another female.\"\n\n\"I'd actually gotten used to being on my own, again,\" Ava continued, \"until you got here.\" She absent-mindedly brushed my hair back behind my ear with her fingers. \"I'd become so wrapped up in my work, that I hadn't realized how lonely I was.\"\n\n\"I don't mean to harp on this and I hope I don't sound whiny, but when you're a negro working in a business where everyone else is white, you're always wondering where you stand... how you fit in. Sometimes it's just a feeling in the back of your mind, other times it's very much in the forefront of your thoughts. Unfortunately, to some degree, you're gonna find this out first hand. You may not be colored, but you are a woman, and the old boy's club doesn't exactly roll out the red carpet for females either.\"\n\n\"Since you've been here, that's all kinda faded into the background. It's been such a relief to be with someone who was at ease with me and with whom I could let my hair down too. If I haven't properly said thank you for being such a good friend, shame on me. But, I'm telling you now, it is very much appreciated.\"\n\nI was momentarily at a loss for words. It was such an open, generous thing to say. How do you respond to that?\n\nBefore I could answer, Ava laughed, \"That's my rambling, windy way of saying I don't give a damn about your fear of thunderstorms and don't you dare to be embarrassed on my account.\"\n\nShe took me in her arms and squeezed me tight. Her soft chuckle was in my ear, \"You think you're the only one with fears? Get in line, sister. Get in line.\"\n\nI pulled away so that I could look Ava in the eye when I asked, \"Speaking of fears, what was that you said earlier about handling assignments of my own? Are you already plotting my departure?\"\n\n\"Come with me.\" Ava took my hand and led me from her bedroom into the studio. She opened the top draw of her taboret, withdrew a stapled sheaf of papers and handed them to me, saying, \"It's yours if you want it.\"\n\n'It' was a script for an 8-page western comic book story.\n\n\"What do you mean, it's mine?\" I wondered aloud.\n\n\"The full job... pencils, inks and letters... I think you're ready to leave the nest and fly on your own. What do you think?\"\n\nA shiver of excitement flitted through me. \"I'm pretty sure I can do it, but what about you? I mean, I don't think I can get this done at the same time as I'm assisting you.\"\n\nAva's face lit with one of those luminous smiles. \"If things play out the way I hope they do, I won't be needing an assistant anymore.\"\n\nMy excitement quickly transmogrified into a dizzying brew of fear and disappointment. This must have been evident from my expression, because Ava hurriedly assured me, \"No, no, I'm definitely not trying to get rid of you. Quite the opposite.\"\n\n\"Here,\" Ava pulled her chair back from her drawing table and gestured toward it, \"why don't you have a seat while I see if I can't explain my harebrained scheme. Keep in mind,\" she cautioned with a wag of her forefinger, \"this whole thing is dependent upon a number of 'ifs'. Ready?\"\n\nI nodded my assent.\n\n\"Okay. You've noticed the watercolors I've had laying out to dry in the studio?\"\n\nAnother nod from me.\n\n\"I'm amazed you haven't asked me about those. Weren't you the least bit curious?\"\n\n\"I was dying to ask, but I didn't want to pry.\"\n\nAva put her hands on her hips and gave me a mock glower, \"Stephanie, dear heart, if it's you, it's never prying.\"\n\n\"Next time, I'll ask. I promise.\"\n\n\"Good. Now, where were we? Oh yeah... the watercolors. Honey, you know how much I love comics, right?\" \n\nYet another affirming nod from me.\n\n\"Well, if the deadlines weren't so odious and the production values so poor, I'd spend the rest of my life doing them. There's a wonderful variety of genres to explore and if this was an ideal world, there'd be an endless diversity of approaches to them. Just think, if the publishers used better paper and printing processes, you could do stories in pastel, oil, watercolor, charcoal... whatever the needs of that particular story.\"\n\n\"What's worse is the pay is so poor,\" Ava went on, \"you have to bang out stories at a dizzying rate of speed just to make a buck. So, there's no time to really consider innovation with page layout, panel transitions, lettering... with every aspect of the craft. You're too busy just trying to get the job done.\" \n\n\"Eventually it grinds you down and you become a hack. Well, that's not why I became an artist. Remember all those illustrators I've been showing you?... Booth, Coll, Cornwell... those guys all found ways to take work for hire and use it as a vehicle to express themselves. To my mind, their best work is no less legitimate than the stuff you see hanging in art galleries. The crazy distinction that critics make between the best commercial art and fine art is completely artificial.\"\n\nAva's eyes flashed and her gestures became more animated as she continued her thesis. \"Somehow, though, comics became the red headed stepchild of commercial art, in much the same way that the pulps did in literature. The disrespect is pervasive... from the publishers on down to the editors, the writers, the artists and the audience. But, think about it. Comics are just words combined with pictures. Isn't that what movies are? Yet, no one suggests that movies can't be art. Well, any subject matter you can handle in the movies, you can deal with in comics. History, biography, drama, comedy, romance... it doesn't matter. It's just a matter of how lofty your aim is.\" \n\nI found myself getting caught up in the excitement of Ava's ideas and her expression of them.\n\n\"In fact,\" Ava leaned forward, adding emphasis to her words, \"comics have many advantages over film. Chief among them is that they aren't bound by the limitations of the camera. Think of someone like Van Gogh applying himself to visual narrative! Can you imagine?\" Ava took my hands in hers as if she could transmit the concepts by touch.",
        "But then, after a moment, the light left her eyes and she sagged back into the chair. \"But nobody ever seems to see it that way. They look at me like I'm crazy. Not just the publishers and the editors, but even other artists. 'Comics ain't art, kid... just cheap, disposable entertainment.' That's the refrain I always hear. Well, I'm tired of banging my head against the wall. Enough already.\"\n\nAva leaned forward, elbows propped on her legs with her hands clasped. \"Like I've said before, magazines are dying out and the ones that are left are all turning to photography for the ads and story illustrations. Illustrated books are pretty much a thing of the past too, except...\" and here, she pointed her index finger to underscore, \"children's books. Believe it or not, that seems to be the one venue left where an illustrator can get away with some kind of personal expression.\"\n\nAva returned to her taboret, reaching into the top drawer again. Out came another stapled stack of white typewriter paper. She dropped the papers onto the drawing board where I was sitting. \"That,\" Ava said, \"is a completed script. I've finished three paintings and I've got preliminary drawings for the rest. That should be enough to shop around. Now, here's where the 'ifs' come in.\"\n\nAva extended her fingers as if she could shape the air into ideas made tangible. \"IF I can break into the children's books market... and IF you can meet regular deadlines on comic book scripts of your own... how would you feel about getting a studio together?\"\n\n\"What's wrong with this place?\" I asked.\n\n\"Sweetie, don't you want a room of your own... a place to put your stuff? In fact,\" Ava looked down at the studio floor, \"there's no reason you couldn't get a place of your own, if that's what you'd prefer. I know several editors who'll be happy to keep you as busy as you can stand. You shouldn't have any problem meeting the rent\"\n\n\"It's just that... well, I was kinda hoping...\" she looked up at me as if she'd made up her mind to come to the point without further evasion, \"I've loved having you here with me, Stephanie. I've come to care about you more than I can probably say. With both of us earning regular income, I hoped we could get a bigger place. A bedroom for each of us and a third room for a studio.\"\n\n\"But, I just realized how selfish I was being. For all I know, you might be aching for privacy... a place to yourself. And I'd certainly understand, if that's the case.\"\n\nAva looked at me expectantly, and then realizing that's what she was doing, she quickly said, \"I don't expect you to decide now. I mean, I know I've given you a lot to think about...\"\n\nI jumped up from my chair, feeling as if electricity were running through my veins. \"Ava... there's really nothing to think about. Wow! If I haven't made it evident - being here, learning from you, just having your company every day - has meant the world to me! Why on Earth would I want that to end?\" I pulled her up from her chair and wrapped my arms around her. \"Thank you... thank you... for thinking of all this. For thinking of me.\"\n\nAva squeezed me tightly and said, simply, \"My pleasure.\"\n\nI stepped back from her embrace, my hands still on her arms. \"Oh my God!\" I exclaimed. \"This is gonna be great! I can't wait to read this script of yours! Let me see it!\"\n\n*****\n\nPersonally and professionally, the next several months were among the most exciting of my life. They were also exhausting. Believe it or not, comics are probably the most demanding aspect of commercial art I have ever attempted, and I say this now, after a fifty-year career in the field. With illustration, whether it's a book cover, an advertisement, an album cover or a magazine article, you can focus all of your energy, talent and skill on a single image. With comic books, you have to do that five to eight times a page for anywhere from 8 pages to thirty pages. And most importantly, you have to make it flow visually. The story is all in the script, but HOW the story is told is up to the artist. There are so many things to consider - panel transitions, page layouts, panel compositions, anatomy, drapery, costuming, expression, posture, gesture, lighting, perspective, architecture - and when you're just starting out, you struggle with all of those things. Drawing and redrawing. Your eraser is your best friend. \n\nWell, no. That's not right. Clearly, Ava was my best friend. As Mr. Dylan had predicted, I couldn't have asked for a better teacher. But, it also turned out I couldn't have asked for a better companion. She guided me, cajoled me and cheered me on. All this, while she toiled daily (and nightly) on her own project. Ava had hired an agent to shop her book around and in short order she had penned a contract with a major publisher. \n\nI was proud that she often asked for my advice and criticism as she worked. Despite the difference in our ages and experience, it was obvious that she was not merely patronizing me, but genuinely interested in my counsel. That respect was more precious to me than gold. More than once, when she set down a piece for me to critique, she'd say, \"Remember, right now, I don't need a friend; I don't need an admirer. I need a critical eye, an editor.\" I was able to be of help because even the best artists can get too close to their work and stop seeing it objectively. A fresh eye can find the mistakes and weak spots or simply suggest ways to strengthen a piece.\n\nDuring those heady days, Ava and I spent nearly all of our waking hours together. We also continued spending most of our rare free time together, neither seeming to tire of the other's company. Ava's wit, intelligence and kindness drew me to her more each day. The only unhappiness I felt during that time was self-inflicted. It was also an unhappiness that I kept strictly to myself.\n\nIt was during that time that I began to have thoughts and feelings that disturbed me. As I've mentioned, I was fascinated with Ava's physical beauty from the first. The more time we spent with each other, the more that fascination laced and tangled with the deepening affection I felt for her. On the rare occasions we were apart, I found myself almost aching for her return. Whenever we were in especially close proximity, I felt my pulse quicken and was aware of a pull - an almost irresistible desire to be closer still.\n\nDo I even need to tell you how 'interesting' my dream life became during that period? My sleeping reveries became more disquieting as their intensity increased.\n\nI did everything I could to hide these things from Ava. Not only did I not want her to know, I was ashamed to know it myself. I wondered what was wrong with me.\n\nYou see, the context, then, was entirely different. At that time, homosexuality was considered an aberration, a perversion. People were openly fired from their jobs if they were found out or even suspected. Hell, they performed lobotomies on some, so as to 'cure' their disease! The atmosphere was so outrageous it must sound as if I'm making it up, but sadly, you have only to do your research and you'll see everything I've said is true... and more.\n\nWhile I was aware of those sentiments, it doesn't mean I blindly accepted them. Shame didn't come to me without a fight. Ava was smart, kind, generous and breathtakingly beautiful. I reminded myself of those qualities while I wrestled with my feelings. Why shouldn't I want her? Why is it wrong? And most importantly... what would Ava think?\n\nIn the months since I'd first come to her, Ava had worked diligently to overcome my natural reticence. She made me realize that I was bright enough to make valuable contributions in many situations. As she put it, \"It would be selfish to keep your insight and intelligence to yourself. So Share, dammit!\" And little by little, I did just that.\n\nThere were some slight physical manifestations of my increasing confidence. I began hugging Ava at the least provocation. I also tended to touch her more often, placing my hand on her arm or back as we spoke. If it made her uncomfortable, she gave no sign.. In fact, she grew more demonstrative herself.\n\nYes, Ava had brought me out of my shell. In 1956, I don't think the phrase 'unintended consequences' had been coined yet, but that doesn't mean the concept didn't exist. An idea began to form in my mind. An idea centered on Christmas. An idea that required great courage.\n\nAs December approached, Ava and I were both doing well professionally. The final pages of her book had been turned in, approved and it was put on the publishing schedule for early spring. I was getting all the work I could handle from several different editors and enjoying working in a number of genres. I could see my skills progressing at a rapid pace.\n\nIn the months leading up to Christmas, I had been making the rounds of New York's used book stores, slowly filling in the holes in Ava's magazine collection. She was crazy for the illustrators who appeared in \"Colliers\", \"Woman's Home Companion\" and \"Ladies' Home Journal\" during the teens, twenties and thirties. I had been stashing them at my parents' house so that she wouldn't find them before Christmas.\n\n\"I suppose you'll be spending Christmas with your folks?\" Ava asked as we decorated the small tree in our living room. I finished the strand of tinsel I'd been hanging and peered around the branches of the tree so I could read her expression. \"No\", I answered, \"I was hoping to share it with you.\"\n\nAva placed a homemade ornament on a branch and looked back at me. \"I'd like that too, but I don't want my Pop to spend the holiday by himself.\" Ava's mom had passed away several years before.\n\nI guess I didn't hide my disappointment well enough, because Ava quickly continued, \"I won't be there late, though. Would you mind if we gave each other our gifts in the evening? I promise the day after, I'm all yours. And to make up for missing Christmas dinner with you, I'll cook whatever menu your majesty requests. We'll have our own holiday then. Okay?\"\n\nI smiled and nodded happily at the compromise.\n\nI spent Christmas day with my parents in Queens. It was good to see them and I had a lovely time, but I must admit, my thoughts did wander in search of Ava far too often. I was also having serious misgivings about an 'idea' I'd been obsessing about for the last several months.\n\nBefore I left for Ava's, I wrapped her present. I'd been buying the magazines here and there, one or two at a time over the course of several months and stupidly failed to anticipate just how heavy the box would be. The magazines from the early part of the century were thick, tall and wide. Cumulatively, they were more than I could handle on the subway, so Daddy gave me a ride back to Ava's. A dusting of snow covered the city and a light flurry was still falling.\n\nIt was almost seven o'clock when I turned the key to the apartment. It was ridiculous how giddy I felt. As I opened the door, I wondered if Ava could hear how loudly my heart was beating.\n\nShe must've heard the key in the lock because she was waiting for me when the door swung wide. She stood by the sofa with her hands behind her back. Her amber eyes looked unwaveringly at me and her lips curved into a room-lighting smile. \n\nStepping towards me, Ava brought one of her hands from behind her to brush snowflakes from my hair. Her nearness warmed through me, bringing with it that familiar ache. The ache, the yearning, the wanting that had haunted my waking and sleeping alike.\n\nWhen Ava's other hand appeared it held a gift-wrapped package. It was flat, rectangular and about 8 1/2\" by 11\". She held it out to me with a \"Merry Christmas\" while she did the impossible and upped the wattage of her smile.\n\nI handed her my gift as she buckled her knees and groaned to exaggerate the effect of its weight. We both sat down on the sofa and I waited while Ava unwrapped her gift. I wanted to see her reaction. \n\nIt was worth waiting for. \n\nHer face shone with such genuine pleasure upon seeing the contents of the box, that she looked like a little girl at her first Christmas. \"Thank you! Oh, thank you!\" she gushed. She started flipping through the magazines, obviously torn between her haste to see the pictures and her desire not to rip the pages. \"Oh my God! Look at this Gruger!\" she'd exclaim, holding the magazine open in my direction. Seconds later she'd burble again, thrusting another visual treasure at me.\n\nMuch to my delight, she went on for several minutes like this before she realized I hadn't opened my gift. \"C'mon! You got to see me completely lose my cool, now I wanna see if mine hits the spot too.\"\n\nI looked down and realized that the wrapping paper on her gift was homemade. There was a drawing of the uppermost branches of a Christmas tree on top of which stood a stylized but recognizable caricature of me with wings sprouting from my back and a halo over my head. Underneath the image, Ava had written in a lovely cursive style, \"For my angel\".\n\nYou may laugh, but I actually got choked up at that. And Ava did laugh at the care I took to undo her wrapping. There was no way I was gonna do harm to that precious image. \n\nWhen I got the paper undone, I found myself looking at a homemade comic book done in a more cartoonish mode than I was used to seeing from Ava. \"The Adventures Of Stephanie\" was calligraphed elaborately at the top of the cover. Underneath was an image of me, asleep in bed.\n\nI gave Ava a look of exaggerated suspicion before she cajoled me, \"C'mon! C'mon! Read it!\"\n\nThe first interior page began with a panel showing the exterior of our apartment building. The next panel showed the two of us at our drawing boards with exaggerated sweat drops flying from our brows. An angry, anthropomorphized sun shook its fist at us just outside the window. The caption read, \"Our heroines toil mightily despite the inhospitable climate.\" The following shot was from the same angle, only now the leering sun had its arms raised in victory while Ava and I had devolved into animated puddles at the base of our tables. The heading this time said, \"Can it be that the dastardly villain has won!?\" Next up was \"Only for now. Our girls retreat to fight another day.\" \n\nThe next several panels show the two human puddles making their way to their respective beds. Following this were wordless shots of the two of us back in our normal forms and fast asleep. \"Apparently, the weather gods are not done with our champions yet.\" In this scene, I'm still sleeping, but outside my window you can see surly storm clouds approaching in the distance. Subsequently, the reader sees a closeup of the lead thunderhead, face twisted in rage and a lightning bolt in its raised hand. \n\nThe bolt is hurled and the scene cuts to inside my room again. The flash of light outside illuminates me upright in my bed. I have the covers pulled up so most of my face is hidden which emphasizes the way Ava has drawn my eyes bulging and my hair standing on end. Another blast shows the room shaking and me leaping out of bed with a wonderfully exaggerated terror. A giant, cartoonish \"Boom!\" is superimposed on the image. \n\nThe next shot is a closeup of me, absolute panic written on my features. It's wonderful how she managed to capture my likeness while caricaturing it so outrageously. I smiled up at Ava, \"I never realized you were so cruel.\" \n\n\"Three months ago, I wouldn't have done this. But, I figure I've toughened you up enough to take it. Besides, I'm not exaggerating that much.\"\n\n\"Fine. Fine. Take a girl's most embarrassing moment and capture it for posterity. Thank you very much, dear heart.\"\n\nI continued with the story. Now Ava had me in the doorway of her bedroom, frenzied eyes still protruding, panic sweat flying and tears streaming down my face. Following that, from the same angle, Ava rose up in her bed with a confused look on her face. Her word balloon said, \"What in the world?\" I was still in her doorway, but now I had taken the exaggerated pose of the stereotypical cartoon diver, hands together, knees bent, getting ready to make my somersault.\n\nThe next panel was elongated across the full width of the page. Ava had drawn multiple figures of me, first leaping from the doorway, tucking into a tight ball, spinning, and then landing on her bed. In mid-air, a word balloon emanated from my spinning figure with the screaming letters, \"SAVE ME, AVA!\" Ava had drawn herself as a single figure, still in bed, watching my antics with astonishment.\n\nThe rest of the comic was along the same lines, portraying Ava as the cool, calm heroine rescuing the fear-addled Stephanie from the terrors of the storm. At one particularly outrageous lampoon, I looked up at Ava and paraphrased a famous line from the McCarthy hearings, \"Have you no sense of decency, madame?\"\n\nAva simply returned an impish smile and stuck her tongue out at me.\n\nHowever silly the comic was, it was also obviously the result of a great deal of work. The drawings were energetic, but carefully and lovingly drawn. This was no slapdash effort. It suddenly occurred to me how busy Ava had been with her book and helping me with my work. \"Ava, when did you have time to do this?\"\n\nAva smiled, \"Oh, whenever I could. Sometimes, I'd stay up a little later than you, just so I could get some of it done. Little by little it added up. This past week or so, I got in a bit of a panic 'cause I didn't think I was gonna get the damn thing finished in time. But... there it is.\"\n\nAfter a moment's hesitation, she asked shyly, \"Do you like it?\"\n\n\"No... I ADORE it. Oh, Ava, this is the most exquisite gift anyone's ever given me. Thank you.\"\n\nI rose from the sofa, taking Ava's hands in mine to pull her up with me. Wrapping my arms around her, I held her close and whispered, \"Thank you,\" again.\n\nWith an extra squeeze, Ava replied, \"You're welcome, sweetheart. I just wanted to make you smile.\" Pulling back from my embrace slightly so she could look at my face, she added, \"Looks like it worked.\"\n\nIt was mildly annoying having my bulky winter coat on to interfere with our clinch. I suddenly remembered, \"Um, Ava? I... I uh, have something else for you.\" I tried to master the quaver in my voice. I had a curious, lightheaded feeling, as though my emotions had taken flight and had, as yet, found no proper place to land.\n\nReaching into my coat pocket, my fingers found the sprig, pulled it out and raised it above our heads. Ava looked up at the green leaves and white berries with a rapid succession of expressions; first puzzlement, then recognition, then surprise.\n\nWith that last look still widening her eyes, she returned her gaze to me. I leaned in and captured her lips with mine. Months of apprehension and yearning filled me in an almost unendurable rush.\n\nFor the briefest instant, so brief, in fact, that it may have been my imagination, it seemed that Ava returned my kiss.\n\nThen, she stepped away from me, confusion writ large on her features. Her eyes were unfocused, or rather focused, perhaps, on some inner struggle. For a moment, Ava stood there, as if considering the implications of what I'd done.\n\nShe still had not looked me in the eye again, when she turned and quickly strode out of the living room, past the dining room and kitchen through the corridor and back to her own room. With the briefest glance back at me, Ava closed the door behind her.\n\nWhat had I done?\n\nHad I just ruined everything?\n\nThe stupid, useless longing to undo the last few moments was overwhelming.\n\nI hurried back to Ava's room only to find her door was locked.\n\n\"Ava?\"\n\nI pressed my ear to the door. No answer. No sound at all.\n\n\"Ava? Please.\"\n\nSilence, still.\n\nI slid down and crumpled into a heap at the foot of her door. \n\nI began to cry. \n\nTo cry without restraint.\n\nGreat, convulsive sobs.\n\nThe door opened and Ava stood above me. My vision was blurred so I couldn't read her expression.",
        "\"Why are you crying?\"\n\n\"Because I've spoiled everything! I'm so sorry, Ava. Pleasepleaseplease forgive me!\"\n\n\"What are you sorry for?\"\n\nI tried wiping away the tears, but I still couldn't recognize the look on her face. Ava knelt down beside me and said, \"A better question would be, 'why did you do it?' Why did you kiss me, Stephanie?\"\n\nThere was no lie that could rescue me. \n\nMy two hands pressed firmly against the wooden floor beneath them. I bent my head to look at them. With a vague, disconnected surprise, I noted how many tears had pooled on the floor around my fingers. Fresh drops spattered beside them. I didn't look up. I couldn't bear to see the revulsion in her face as I spoke, \"I kissed you because I love you, Ava. I've been head over heels for... well, for months now. I've been holding the idea of that kiss inside me for so long... dreamed of it, meditated on it, prayed on it, cherished it... until I HAD to make it real.\" Almost it seemed as if the words were being spoken for me, that some gentle insistence was urging me on, prompting me beyond my own volition.\n\n\"I tried hiding it.\" I wept, \"I couldn't. Please, forgive me.\"\n\nAva's fingers slipped under my chin and gently raised my head. The thumb of her other hand brushed some of the tears from my cheek. \n\nThe amber and gold of her eyes glittered with tears of her own. \"There's nothing to forgive.\" Her voice was husky with emotion. \"I felt... no, I feel the same.\"\n\nI'm sure the look of shock on my face might have been comical in another context.\n\nAva's voice was barely more than a murmur, but I heard it clearly in the resounding silence of the apartment. \"I've been wrestling with my own... my feelings, for you, for some time now. I wondered what was wrong with me. I've told myself over and over how wicked it was. I even - \"\n\n\"But, why is it wicked?\" \n\nAva's smile was delicate. She caressed my cheek as if to soften the sting of her words. \"C'mon, Steph. We're both women. How could that possibly be right?\"\n\nI struggled to find a response.\n\n\"Look at it his way.\" she continued. \"Could you tell your parents how you feel about me?\"\n\nI was silent. But an answer began to take coalesce in my mind.\n\n\"I know I couldn't tell my Pop.\" Ava went on. \"If it wasn't wrong, we'd have nothing to be ashamed of, right?\"\n\n\"Wait a minute.\" I answered. \"Even if you were with a man, you wouldn't talk to your Pop about it. Not because you were doing something wrong, but because it was private... personal.\"\n\n\"Besides,\" I went on with increasing confidence in the merit of my argument, \"why do others get to judge what's right for you and me? Why does anyone else have a say in who we love? 'They' say that you are lesser because you're a woman. Are they right? 'They' say that being colored makes you inferior. Is that true? Of course not.\"\n\nI took Ava's hands in mine and spoke in a clear, steady voice, \"'They' aren't here, right now, Ava. It's just you and me. What do you say?\"\n\nAva lowered her head, looking at, but not seeing our entwined hands. She said nothing.\n\nI brought my head down too, so that my gaze intercepted hers again. \"Do you love me, Ava?\"\n\nShe returned my searching glance, and said with a quiet vehemence, \"Of course I do.\"\n\nLeaning forward, I touched my forehead to hers. I took her right hand and placed it on my breast. She flinched slightly at the intimacy, but I held it there. \"Do you want me?\" I asked.\n\nI had kissed her, it's true, but there had been no mention of sex until now. But, Ava knew that, in my shy way, that's what I meant.\n\nHer answer was to tilt her head slightly and bring her lips to mine. Her left hand caressed my face while we kissed. Her right hand, still under mine, moved on my breast, becoming acquainted with its curvature. \n\nI shivered at the welcome attention. The warmth and joy that coursed through me was indescribable.\n\nAva was kissing me!\n\nWhen our kiss had lingered for a while, we shifted slightly and began a fresh one. Ava's lips moved with increasing boldness until her tongue finally slipped into my mouth. The tender kiss deepened and our tongues began to tangle and lace. Ava's left hand still cupped my face while the fingers of her right hand had found my nipple and had it straining against my blouse. I whimpered without breaking the kiss.\n\nWhen our lips did finally part, we were both practically panting with excitement. \n\n\"Ava?\"\n\n\"Yes?\"\n\n\"I know I started all this, but I have to tell you something before we go any further.\"\n\n\"Okay, sweetie. What is it?\"\n\n\"I haven't... that is, I never... um, what I mean to say is...\"\n\n\"Stephanie?\" Ava interrupted.\n\n\"Hmmm?\"\n\n\"Just spit it out, hon. As you said before, there's no one here but us.\"\n\nI put my face in my hands and peered out at Ava between my fingers. \"I've never had... you know... sex... before. I don't really know what I'm doing. Will you be patient with me? Please?\"\n\nAva bit her lower lip, then raised her hand to cover her mouth. But, she couldn't completely suppress the giggle that was determined to get out.\n\nMy complexion must've deepened by three shades because a look of mortification came over Ava. \"Oh, no. No, sweetheart! You misunderstand! I wasn't laughing at you, I was amused by the situation.\"\n\n\"Why is my ignorance so amusing?\"\n\n\"Because,\" Ava chuckled again, \"you're asking the blind to lead the blind. I had don't have a minute more experience than you do.\"\n\n\"You mean, you're a...?\" I began.\n\n\"Yup.\" Ava smiled back at me. \"I'm a virgin, too. I mean, it's not really so surprising when you think about it. My parents watched me like a hawk while I lived with them, so there was definitely no hanky-panky going on then. When I first went out on my own I was working in a bullpen full of white guys. If any of them were interested in me, they were too afraid of the social taboos to show it. And since then, I've been working alone in my studio as a freelancer. Not exactly a recipe for finding that special someone.\"\n\n\"A few times,\" Ava added, \"friends or family have set me up on blind dates, but I hated that. It's so awkward trying to make conversation with a complete stranger. A stranger with whom you might have absolutely nothing in common other than a mutual acquaintance. A few of those was enough to get me to swear off of blind dates forever. And so, here I am,\" Ava held her palms up on either side of her and looked down at her own kneeling form, \"twenty-eight years old and unsullied. So, I guess we'll have to be patient with each other.\"\n\nI smiled at Ava, and said, \"I'm pretty sure sex isn't rocket science. After all, millions of morons have been doing it for millennia. I'm betting two smart girls like us can figure it out.\" I looked down for a moment, gathered my courage, then brought my gaze back up to meet Ava's. I spoke in a quiet, but steady voice, \"Besides, we could have a lot of fun learning about it - and each other.\"\n\nAva smiled, \"Yes. Yes, we could.\"\n\nShe got off her knees and rose to her full height. Reaching her hands down to take mine, Ava helped me up. We stood in the doorway to her bedroom, still holding each others hands, both a little uncertain what to do or say.\n\nAva finally spoke. \"Are you ready for bed?\"\n\n\"Yeah. I guess it's been a pretty exciting day. Exhausting, too.\"\n\n\"Mmm-hmm. You gonna sleep in here with me?\"\n\nI nodded my agreement.\n\n\"Stephanie?\"\n\nI looked at her.\n\n\"This isn't gonna work so well if we dance too delicately around each other. We can't be afraid to communicate, hon. If things are ever moving too fast, you have to let me know. It'll take forever for us to figure out what's what if we're too shy or embarrassed to let the other know what we want. You can bet I'll be paying close attention, sweetie, but just don't count on me to read your mind. Okay?\"\n\n\"I'd kinda like to take things slow.\" I answered. \"Get used to the idea... that okay, too?\"\n\n\"I'd like that, too.\"\n\nSo we went to bed that night with a tacit agreement that we weren't going to do anything yet, except cuddle and sleep.\n\nWell, we may have been inexperienced and ridiculously skittish, but we were also young, aflame with curiosity and ferociously horny. Any guesses as to which attributes won out?\n\nAva showered first and emerged from the bathroom fully clothed in plain flannel pajamas. Then I did the same. It's not like either of us owned any sexy lingerie and I kinda doubt that either of us would've had the nerve to wear it that first night, anyway.\n\nIf there had been any witnesses, they would have been entertained at the way Ava and I avoided making eye contact. The awkward conversation scrupulously avoided the subject of romance or sex. Finally, Ava ended our dilemma by turning down the bed covers and saying, \"You've got a deadline on Friday and a lot of work to do tomorrow. We should probably turn out the light and get some rest.\"\n\nAfter we'd both gotten under the covers, Ava leaned over to the night table on her side of the bed and plunged the room into darkness. I turned on my side, facing away from Ava. For several minutes, only the sound of our breathing kept the silence from being complete.\n\n\"Ava?\"\n\n\"Yeah?\"\n\n\"Remember the night of the thunderstorm?\"\n\nAva giggled, \"My Christmas gift to you would suggest that I remember it pretty well.\"\n\n\"Wrapped up in your arms that night... I felt so safe... so loved. Would you mind holding me for a while tonight?\"\n\n\"That is probably the silliest question you'll ever ask me. I'm glad we got that out of the way early.\"\n\nWith a slight rustling of sheets and blanket, Ava scooted over and spooned me. Her left arm cradled me and her hand came to rest on my flannel-clad tummy. The warmth of her body and soft fullness of her breasts pressed against my back felt glorious. \"This must be what heaven feels like.\"\n\n\"I hate to tell you this,\" Ava said into my ear, \"but I'm not an angel.\" As she spoke, her left hand slipped under my pajama top and came to rest on my bare belly. The intimacy of it was stunning. I forgot to breathe for a moment. Just as I was adjusting to the idea of her hand being there, Ava's other hand brushed the hair away from the back of my neck and she planted her lips on my nape. I shivered and drew in a faint hiss of air.\n\nThe hand on my stomach moved slowly upward. Then, she dragged her fingernails back down, leaving a trail of goosebumps in their wake. \n\nShe repeated this erotic circuit. \n\nAnd then again. \n\nEach time Ava's fingers ascended, they went a little higher. By the time she reached my ribcage, my anticipation was acute. Meanwhile, her other hand had tugged the back of my pajama collar low. Her lips and tongue were slow dancing across my neck and shoulders.\n\nWhen her fingertips reached the underside of my breast, I whimpered, \"Ava?\" into the quiet.\n\n\"Hmmm?\" Her hand cupped and gently squeezed my tit and she continued her attentions at the base of my neck.\n\n\"That feels sooo goood!\" I was barely able to articulate that much.\n\nAva's only response was a low \"Mmmmmm.\" I felt the vibrations through her lips on my spine. I was hyper-aware of every little movement, every kiss and caress. Something big was building inside me. Something momentous. I wasn't quite sure what it was, but it was deliciously intense and almost overwhelming.\n\nHer fingernails discovered my pouting nipple and circled it. My whimpering escalated. My back arched to press my breast more tightly into her grasp. Ava's fingertips grasped the erect bud and stroked it. Up and down. Up and down. Whimpers spiraled into moans. I was fast losing any inhibitions. I'd never experienced anything so joyous in my life. How could I know it would get even better?\n\nAt the same time she was fondling my breast, Ava's right hand slipped between my hips and the bed and came around to lay flat on my belly. By the time my overwhelmed senses registered this new advance, her fingers glided beneath my waistband to caress my lower stomach.\n\nThe ecstasy I felt was evident in the unintelligible stream of sounds pouring from my lips. I writhed in her arms. Her fingers and lips seemed to find every delicate, reactive spot on my body. \n\nWhen her nails dragged through the down of my pubic hair, I bit my lip to keep from crying out. A ploy that was rendered useless seconds later when those same fingers reached the warm furrow of my slit. My entire body spasmed and a sound of purest joy was pulled from me.\n\nThe combination of what the one hand was doing to my nipple and what the other was accomplishing between my legs was making me crazy. Her digits burrowed through the slippery petals, gliding over my clit each time they came back up. My hips began to pump in answer to her ministrations. \"Ava?\" I panted, \"What are you doing to me?\"\n\nNo answer. But when Ava felt my reaction every time she slithered over my clit, she concentrated her efforts there. Circling, then stroking, circling, then stroking, again and again... doing the same with my nipple.\n\nI shuddered, screamed and my pussy clenched around her fingers. A maelstrom of pleasure pulsed through and through me and for an instant, I lost track of who and where I was. All I knew... all I felt... was out-and-out bliss.\n\nAfter I don't know how long, the storm of sensation began to subside. The movements of Ava's fingers slowed. Aftershocks rippled through my frame. My breaths came in ragged gulps, but I was able to gasp, \"I've never felt anything... like that in my life!\" \n\nAva answered with a simple, \"I love you.\" One hand still cradled my breast and the other rose over my mons to my lower belly with sticky, sticky fingers. \"You've made a mess.\" Ava chuckled.\n\n\"Oh, no, dear heart. You are completely responsible for that.\" I turned around so that I was facing her. Pulling her to me, I brought my lips to Ava's. Our tongues fought a gentle skirmish while my hands ran over the contours of her back. I took my mouth from hers for an instant, so that I could gush, \"Ava! That was... that was... Oh, God! I can't even find the words to describe it. But I do know that I want to do that to you. Now. I want to make you scream. Make you shiver. And shake. Explode... the way I did.\" I was so excited, my words tripped over each other in their hurry to get out.\n\n\"Stephanie, honey, I guarantee I had as much fun as you did. Do you know how it made me feel to be able to do that to you? Like I was Queen of Everything.\"\n\nI pulled Ava to me and kissed her fiercely. The skirmish of our tongues escalated into full-on battle. I pushed her onto her back and straddled her waist. With one hand on either side of her pajama front, I pulled them apart with all my might. As the buttons landed beside her on the mattress, Ava hissed, \"Jeez, Stephanie, take it easy! All you had to...\"\n\nI interrupted her with an animal-like sound, \"No, Ava... I don't have to do anything. I'm about to be 'Queen of Everything'.\" With that, I captured her lips with mine, pinned her arms beneath me... and poured myself into her pleasure.\n\nMuch, much later, I lay on my back with Ava's head on my shoulder, her body nestled against mine. I held her in the crook of my arm and listened to her steady breathing as she slept. I was still too excited to sleep. Pride and joy suffused my entire being. I thought of the things I'd done to her, the sounds I'd caused her to make. The shudders and spasms I'd incited. When we were done, there weren't many traces of modesty or restraint left between us. In the end, she'd begged me to give her release.\n\nShe was right. \n\n'Queen of Everything'.\n\n*****\n\nWe got greedy, of course. I suppose all new lovers do. \n\nThe next day, Ava and I spent much of the morning in bed, hugging and fondling and cuddling. Even when she was cooking breakfast, I couldn't keep my hands off of her. Finally, she reminded me that I had deadlines and so did she. She had just signed a contract for a second book and while her due date was nowhere near as looming as mine, she did still have one.\n\nSo, into the other room we went, to sit down to our appointed tasks.\n\nHave you ever experienced a trauma? The intensity of the experience changes you. The power of certain moments can revisit you unexpectedly for years to come. Well, the night before was like that, but in a good way, of course.\n\nThe problem was, that no matter how hard I tried to focus on the task at hand, memories from the preceding night burst into my consciousness with breathtaking power. I flashed on the moment of my orgasm over and over. I kept reliving how it felt to have my fingers buried completely inside of Ava... juices flowing out of her... her body writhing beneath me.\n\nYou tell me what kind of saint could focus under those circumstances. Whoever that saint is, it ain't me. \n\nAt last, I glanced over the room of my board at Ava. Her face was turned down to the board, her brow faintly knit in concentration. I sat for a moment, letting my gaze linger on her features, luxuriating in their beauty.\n\nFinally, I couldn't resist.\n\n\"Ava?\"\n\n\"Yes?\" she answered without looking up.\n\n\"Make love to me.\"\n\n\"Stephanie.\" There was a hint of rebuke in her tone.\n\n\"Please?\"\n\n\"Stephanie, my deadline's not so bad, but you've got pages due on Friday. The only way you'll get them done, is if I stop my work to help you out. That puts me on a tighter schedule than I'd like.\"\n\n\"I know. I know. I should be ashamed.\"\n\nBut a moment later, I said, \"Please?\" again, in as plaintive a tone as I could muster.\n\nShe didn't answer, but I could tell she was wavering.\n\n\"Ava?\"\n\n\"I'm still here, Stephanie.\"\n\n\"If I came over there,\" coyness in my voice, \"got on my knees, cried and begged you... would you do as I ask?\"\n\nAva gave a defeated sigh. \"You know I would.\"\n\n\"Well, then,\" I finished my airtight argument with a smug grin, \"If you love me, you won't make me beg.\"\n\nAva cleaned off her brushes and said, \"You were right before. You should be ashamed.\"\n\nBy the time she stood up from her board, I was practically bouncing with excitement. \"Thank you, thank you.\" I took her in my arms and communicated my appreciation with a sizzling kiss.\n\nWhen we reached the back bedroom, we realized that, even with the blinds closed, it was still much brighter than it had been last night. This is how we discovered that we actually did still have some modesty left after all. Neither of us had ever seen the other naked. And the idea of being seen so clearly in such intimate circumstances was still a little intimidating to both of us.\n\nI know. I know. Ridiculous, right? We'd shattered pretty much every other bit of self-consciousness to smithereens, but, still, we'd done those things in a protective shell of darkness.\n\nAva hit on a solution by draping a dark, heavy blanket over the window. It completely obscured the daylight and when we shut the bedroom door, the effect was perfect.\n\nWith the darkness, we quickly shed our inhibitions and couldn't get each others clothes off fast enough.\n\nI don't know whether Ava's reluctance had been feigned or real, but once we were in bed, any hesitation on her part was quickly replaced with a passion that bordered on ferocity.\n\nI was in bed first, lying on my back. Ava knelt over me on all fours. I could just make out the shape of her sumptuous bosom dangling above me in the gloom. \"Like ripe fruit from the vine.\" I thought. Cradling her left breast with both hands, I raised my head to suckle the nipple. Ava moaned and bent her arms so that her breast lowered. \n\nWith greater access, I drew more of her into my mouth, nursing like a newborn babe. I felt a shudder run through her and I heard her draw her breath in sharply. I let her nipple slip nearly from my lips, then sucked it back in with as much of the surrounding tit as I could. This forced a little cry from her. I allowed the breast to ease almost out again. Then back in. Repeating, establishing a sensuous rhythm.",
        "Ava bent her arms further. Lowering her frame to bring her closer to the source of pleasure, she surrounded me in an abundance of yielding, silky breast-flesh. \n\nAfter extracting a recital of sighs, moans and whimpers from Ava, I finally released her tit and let my lips and tongue meander over to its twin. \n\nIt'd be a sin to have it feel neglected. \n\nPlanting my tongue at the base, I brought it up the curve of her breast until I reached the bud at the pinnacle. I dragged my teeth over the length of her distended nipple, pulling it as far as gentleness would allow. Then by way of apology, my tongue swirled along it and around it. The sounds spilling from Ava suggested she was most appreciative of my effort.\n\nWhile my newly discovered oral talents kept her distracted, I slipped my left hand beneath Ava and flattened my palm against her stomach. The fullness of her bosom in my mouth, the smooth curves of her belly under my fingers, the pungent scent of her excitement... my every sense was singing with delight.\n\nI suckled, savoring the taste and texture. My hand slipped further down. Ava quivered and groaned.\n\nCupping her sex, I pressed in softly with my fingers. The cry that came from her was hardly sotto voce. My ring finger and index finger squeezed her outer lips together while my middle finger slid through the slick channel of her inner folds.\n\n\"Oh God,\" Ava moaned.\n\nMy digit glided along her sex, gathering cream as it went.\n\nInhibitions vanished.\n\nAva cried out in the darkness.\n\nI eased her nipple from between my lips and whispered, \"Ava, darling? Don't forget the neighbors.\"\n\nAva whimpered, then managed to gasp, \"Girl... when you're doing that to me... I'm likely to forget my name!\" My fingers continued gliding up and down that sopping groove between her legs. \n\nMy mouth fastened onto her tit again... at the same time my middle finger delved inside her.\n\n\"OhGod... OhdearGod!\"\n\nI knew she couldn't take much more of this. For the first time, I began to resent the darkness a little. I knew that exquisite face was just above me... contorted by a ferocious ecstasy... and the absence of light stole that vision from me. \n\nSomething would have to be done about that.\n\nFor right now, though, I had a more immediate concern.\n\nAva was ready.\n\nMore than ready.\n\nI pushed a second finger into Ava. She was dripping. Lewd sloshing sounds filled the darkness.\n\nShe cried out again... neighbors be damned. \n\nIncreasing the pace of my suckling, I matched that tempo with the thrusting of my fingers. My cream-coated thumb circled her clit. Ava quickened the pumping of her hips, until she froze for an instant, shuddered and let out a piercing wail. The muscles deep inside her spasmed and clenched my fingers. I kept nursing her breast, plunging my fingers into her and teasing that pleasure button while she shivered and shook above me.\n\nI loved the sheer wantonness in her voice and movements. Her juices flowed out of her, covering my hand, even streaming down onto my wrist.\n\nThe aftershocks that rippled through Ava finally began to ease and my fingers slipped out of her with an erotic slurp. She brought her body down gently atop mine and I happily received the warmth... the softness of her. The room smelled gloriously of sex. I stroked her hair with the hand that wasn't a sticky mess. With her on me this way, the rhythms of her heart and breath resounded through me with an almost unbearable intimacy.\n\nPlacing her hands on either side of my face, Ava rubbed the tip of her nose against mine. Tilting her head slightly, she gave me a kiss that was still fired with passion and longing.\n\nAva barely withdrew her mouth... our lips were still nearly touching... to whisper, \"I could get used to this.\" Her voice was still thick with passion. \n\nOur bodies were so closely entwined that my laughter shook her frame as well.\n\nWhile Ava showered, I lay in bed still, contemplating what we had just done. I had never known anything could be so exhilarating, so... so all-consuming.\n\nIt was like a wonderful drug, and I craved more.\n\nThe only drawback was our shyness, and the darkness which enabled it.\n\nI know I'm stating the obvious here, but I am a visual creature.\n\nAnd Ava... well, Ava is the loveliest person, place or thing I have ever seen.\n\nAn involuntary shiver rippled through me as I imagined what it would be like to gaze into Ava's eyes as I did those things to her. I pictured her voluptuous body quivering in the throes of ecstasy.\n\nOh yes, one way or another, the darkness would have to be banished.\n\nAva was my teacher, my mentor, and not just in art. Her intelligence, her poise and her patience were all attributes I wanted to emulate.\n\nBut, when we made love, the dynamic changed. As Ava had said earlier, in this arena, her slate was as blank as mine. If anything, I might have been a little more aggressive - a shade less inhibited than she. Which is surprising, considering my upbringing. Or who knows, maybe it was a reaction to that.\n\nWhen Ava came out of the bathroom, I was taking the blanket down from the window. It was, gray, December light that poured into the room, but light nonetheless.\n\nI was still naked from our lovemaking. Ava's glance lingered for an instant, then averted shyly.\n\n\"Ready to get to work?\" Ava asked.\n\nI turned around to face her. She was undressed as well, but for the towel wrapped around her body. Looking at that astonishing spectacle made my answer easy.\n\n\"No.\" I answered.\n\n\"What do you mean? What's wrong?\"\n\n\"Nothing's wrong, Ava.\" I finished folding the blanket and threw it onto a chair in the corner. \"But, before we get back to the studio, I want to see something.\"\n\n\"What?\"\n\n\"You. Without that towel.\"\n\n\"Without...? Why?\"\n\nI moved closer to her and looked directly into her eyes. \"We've just spent the last couple of hours doing things to each other that we would never dare whisper outside of each others' company.\" Ava crimsoned slightly, but held my gaze.\n\n\"I've shared my body with you in ways I never dreamed I would with anyone. And you know what? I'm proud of it. I'm proud that someone like you would trust me enough... love me enough... to give yourself to me so completely.\"\n\n\"But, I've grown too proud to be shy or embarrassed anymore. I want to see who I'm making love to. And,\" I glanced down at my nakedness, \"I want you to see me, too.\"\n\nAva's eyes still looked at mine. She held her bottom lip in her teeth, unsure what to do.\n\n\"Drop the towel, Ava.\"\n\nShe tugged at the towel and let it fall to the floor.\n\nI stepped back to get a better look. I drew in a sharp breath and my heart kindled at the sight. The hypnotic beauty of her face was echoed in the opulent curves of her figure. The rich, caramel color of her skin almost glowed there in the afternoon light.\n\nMoving closer again, I placed the palm of my right hand flat on Ava's bare stomach. I began to walk clockwise around her, dragging my palm across her flesh as I went. I heard her make a quiet sound. As I slowly made a circuit around her, I realized that every angle I saw her from was as beautiful as the last. She was quite literally breathtaking.\n\nWhen I stood in front of her again, I raised my arm to Ava's line of sight. \"Do you see what you do to me?\" I asked. The goosebumps roughening the surface of my arm were plainly visible. Taking her hand, I placed it slightly above my left breast. My racing heart thudded beneath her palm. After a moment, I removed her hand and lowered it between my legs. Moving her fingers across my slit, I let her feel the moisture that had gathered there. \"Do you see?\" I asked again.\n\nAva still bit her bottom lip, but she nodded her understanding with tears in her eyes. We stood for a moment, facing each other. Ava's eyes spilled over at the same time her emotions did. Taking my face in her hands, she pulled me into a kiss.\n\nWe held each other close, breasts to breasts, belly to belly. I loved having her softness, her smoothness, her warmth pressed tightly to me. Ava's tongue made a slow tour of my lips as her hands cupped the globes of my derriere to pull me even closer. Her tongue moved along my jaw line, then slipped down to my neck. I mewled my appreciation. After she had covered my throat with nips, sucks, bites and licks, Ava looked up from her ministrations and said, \"I want you on your back.\"\n\nShe took my hand and led me over to the bed. My decision to do this in the light was already paying off. Just watching Ava walk to the bed was a delight. Her voluptuous breasts bounced erotically and I felt my heart flutter. The nipples were erect, seeming to beckon me to them. All in perfect proportion, her muscles flowed subtly under her bronzed skin.\n\nOnce I was supine, Ava laid herself on top of me and continued her attentions where she had left off... at the base of my throat. She kissed her way across my collar bone and I heard a low, thrumming sound in the room. A cross between a purr and a murmur. A second passed before I realize it was me.\n\nNow, her mouth was leaving my upper chest and ascending the slope of my left breast. Like a benediction, her progress left faint, wet traces on my skin. Her hand went to my other breast and began to gently knead it, squeeze it, as if testing its shape and volume. Every so often, Ava alternated brushing her palm or the back of her hand over the sensitive and almost painfully stiff nipple. \n\nBack on my left tit, she continued her progress, licking, kissing and nuzzling towards the eagerly awaiting bud at the peak. Then away again, just before she reached my nipple. She covered every inch of my breast, except that one aching part. I closed my eyes tightly and tried to gain control of my undulating hips. Her tongue seemed to trace fire on my skin that only stoked the heat in my loins. The competing sensations on my bosom were driving me wild with lust.\n\nTo the right, she stroked lazy circles, switching between the soft pads of her fingers and their long, hard nails. To the left, her tongue teased and feathered the yielding flesh, everywhere but where the need was growing most urgent.\n\n\"Ava?\" I finally whimpered.\n\nShe looked up from where she had been gently sucking the outer edge of my breast. \"Hmmm?\"\n\n\"Please.\"\n\nHer tender, loving care continued. \"Please, what?\" she asked with an exaggerated air of innocence.\n\nAnd to think, I had thought I might hold the upper hand in this relationship when it came to sex.\n\n\"Please suck it.\"\n\nShe looked up at me with mischief in her eyes. \"Sorry, hon, you're gonna have to be specific. Suck what?\"\n\nI raised up on my elbows and crooked my left arm so that I could cradle my breast, holding it up and out, like an offering. Putting my other hand at the back of Ava's head, I guided it to the nub. \"My nipple, please. You've been teasing me so cruelly,\" I whined, \"when you know what I need.\" \n\n\"Please. Suck. My nipple.\"\n\nAva's gaze never left mine as her head descended on my breast. It was intensely erotic watching her mouth engulf the nipple, the surrounding pink halo of flesh, and a little more of my tit besides. I saw her cheeks hollow as she began to suck langourously, her eyes still locked on mine. \n\nThe warmth and softness of her mouth was bliss enough, but when Ava began to flick her tongue over the bud, my head rolled back, my hands clenched the sheets and I set free a throaty moan into the afternoon stillness. \n\nMeanwhile, my other breast was reveling in the exertions of Ava's hand. The caresses, the deep massaging, the teasing flickteasing of her fingernails. The influx of stimuli was incredible. Every nerve ending screamed in pleasure wherever she touched me.\n\nMy sex wept its gratitude down my thighs and onto the sheets. I wanted this to go on forever.\n\nAva's mouth finally relinquished my nipple and traced a path down the slope of the breast and onto my ribcage. She pelted my belly with a gentle flurry of kisses that brought my hips off the bed. When she reached my navel, she lavished it with special care, her tongue painting concentric circles around it, burrowing into it. Ava had never ventured this far down with her lips and tongue, only her fingers. It felt wonderful, but...\n\nWhen she left my belly button, Ava continued her descent with a slow trail of kisses and licks down the center of my stomach. She was just above my pubic hair.\n\n\"Wh... What are you doing?\" I gasped. My voice was husky and breathless.\n\nAva didn't answer.\n\nHer kisses and tonguing had passed through the trim, downy patch and her face was disappearing past the curve of my mons. I was up on my elbows, watching her progress in stunned silence. A silence sharply broken when she gently sucked on the tender flesh of my outer lips.\n\n\"Oh, Ava! You can't possibly! That's so... so...!\"\n\nAva's golden brown eyes flashed at me from between my legs. \n\nShe drew the sensitive skin of my outer labia into her mouth and then laved it with her tongue. \"No,\" I moaned. For a moment, I struggled to keep myself from enjoying it. This was wrong... \n\n...but it felt soooo good.\n\nShe took her time, patiently covering every inch of those outer lips, careful not to touch those aching, seeping inner petals. \n\nMaking me want it. Making me ache for it. \n\nDuring this entire time, Ava's eyes never left mine. \n\nThe directness of the look she gave me practically dared me to stop her. \n\nShe knew I wouldn't. \n\nKnew I couldn't. \n\nAt that moment, the way she was making me feel... she could've done anything, anything she wanted to me and I wouldn't have raised a finger or squeaked a syllable to resist.\n\nShe knew it.\n\nThe gentle, seductive progress of Ava's mouth did not prepare me for what came next. She forced her tongue into my slick inner lips and dragged it from bottom to top and across my clit. \"Oh my God!\" I screamed. My hips came off the bed and my thighs gripped Ava's head between them. She lashed up and down the wet silky furrow, each time finding the hard nub of flesh at the top. I moaned loudly and humped myself against her face. My anus beginning to clench in time to her tongue. \n\n\"Yes!... Oooohh... Yesss!... Like that... That's it... Right there... Harder!... YesYesYesssss!\" My throat poured out a torrent of rapturous sound.\n\nStop her?\n\nNot a chance in hell.\n\nAny reservations, any inhibitions I had left, were scattered to the four winds.\n\nMy pelvis worked in short jerky motions and Ava must've truly had to focus to keep her mouth on my sex. To gain some kind of control over my wanton frenzy, she put her hands under my bottom and pulled my hips to her face. \n\nPointing her tongue, she impaled me with it. \n\nThrusting in and out... in and out... Ava established a frantic rhythm. \n\nI rode her face with abandon, hellbent on keeping the stimulation coming. \n\nAt just the right moment, when I didn't think I could endure another iota of pleasure, Ava wrapped her lips around my clit and sucked hard. \n\nI could scarcely breathe. \n\nThe tiny pleasure button was standing at attention, out of its protective hood. Ava held it in her mouth, lashing it mercilessly with a side-to-side motion of her tongue. \n\nShe devoured me.\n\nThe dam burst and I howled in ecstasy. Surge after surge of unbelievable bliss ripped through my body at hurricane speed. Muscles I didn't even know I had convulsed with sheer delight. \n\nI was caught in a hedonistic riptide of pleasure... and Ava didn't stop. Before the powerful contractions had subsided, a second orgasm tore through me. I screamed again, a savage sound. The release, so explosive that it obliterated everything for a time. \n\nAny idea I had about this being wrong was shattered. You couldn't get much more right than this.\n\nMy hips fell back onto the bed. My legs were trembling now from the prolonged tension. My breathing was quick and ragged.\n\nAva rose up from between my legs and crawled up on the bed beside me. I was on my back, she, on her right side, pressed against me with her left arm and leg draped over me. Her hand cupped my breast, fondling it, caressing it.\n\n\"That was fantastic... \" I panted, \"That was incredible... that was... oh God, I don't have words for what that was.\"\n\nAva's hand left my bosom and lifted my left arm from the sheets. Bringing my hand to her face, she moved my index finger around her mouth. A coating of my juices accumulated on the finger. Ava smiled, \"You don't need words, love. I kinda got the idea that you liked it.\"\n\nI turned on my side so that we were face to face and pulled her to me for a lingering kiss.\n\nWhen lips and tongues had finished a prolonged, but gentle skirmish, I asked Ava, \"What in God's name ever gave you the idea to do such a thing?\"\n\n\"Kind of a long story.\" Ava responded.\n\n\"Hey, it's not as if I have deadlines or anything, and now you've made me curious.\"\n\n\"Last year, before his wife banished me, I was at a party at Paul's house. Two women were in an upstairs hallway having what they supposed was a private conversation. What they didn't know was that I was in an adjacent bedroom. Paul had sent me there to lie down because of a nagging headache.\"\n\n\"The ladies had obviously had a bit too much to drink and their conversation veered into pretty intimate territory, with them comparing their respective love lives. I didn't originally mean to eavesdrop, but by the time I realized how personal they were going to get, it was too late. I couldn't leave the bedroom without passing them in the hallway and they'd realize I'd overheard some pretty personal stuff.\"\n\n\"Anyway,\" Ava continued, \"I guess liquor had loosened their tongues because they were both getting into pretty explicit detail about things their husbands did to them in bed. And when they got to the subject of... well, what I just did to you... they were practically squealing with delight. They both made it sound so exciting, so wonderful... I got pretty aroused just listening to them.\"\n\n\"For a long time after that,\" Ava went on, \"I fantasized about someone doing that to me. I never dreamed that I might be the one, well, you know, the one, who was doing it.\" Ava's creamy complexion deepened slightly.\n\n\"After what you just did to me...\" I asked, \"as a matter of fact, what you just did to me in full daylight... are you getting bashful with me?\"\n\n\"Pretty silly, huh?\"\n\nShrugging my shoulders, I answered, \"Doesn't matter to me. You're just as adorable when you're blushing as when you're not.\" With that, I gave her a delicate peck on the tip of her nose. \n\n\"I want to give you that fantasy.\"\n\n\"Stephanie.\"\n\n\"I want you to look into my eyes while I do that to you.\"\n\n\"Stephanie.\"\n\n\"Yes?\"\n\n\"When are we going to get any work done?\"\n\n\"I suppose, at some point, we're gonna have to work our poor little fingers to the bone.\" I pushed Ava onto her back and rose up to straddle her waist. \"But, at this very moment, we have other priorities, don't we?\" Ava smiled shyly and nodded her agreement. \n\nWe didn't get any work done until that evening.\n\nBut, before evening came, I looked up from between Ava's legs and held her gaze while my tongue was inside her. \n\nBefore evening came, I saw her face flush and a hot shiver of ecstasy course through her. I saw her back arch, beautiful in the tension of her bliss. I watched Ava throw her head back and scream my name into the gathering darkness.\n\nBefore evening came, I felt Ava's sex grind into my lips with sheer need and then shudder and quake with blessed release.\n\nBefore evening came, I got a taste of Ava, a taste that would keep me in its thrall for more than fifty years.\n\n*****\n\nYou might be wondering why I'm recounting these events from so long ago.\n\nI've only recently worked up the nerve to go through Ava's things.\n\nThey've dredged up a lot of memories.\n\nMemories that made me appreciate again just how fortunate I've been.",
        "Ava and I had more than fifty good years together. How many people get even a fraction of that?\n\nTruth be told, I just needed to get some of this off my chest... get it out in the open. Ava and I hid our relationship, even from those closest to us, for most of our lives.\n\nOh, it's not as if these people were stupid, as if they didn't know.\n\nBut, it was never discussed or even acknowledged. At least not until late... very late in life.\n\nHell. We never even held hands in public until Ava was in her seventies and I was in my sixties.\n\nThis is a hard, bitter world, but I always, always, always had Ava to give me shelter.\n\nAnd she always had me.\n\nAs far as I know, we were the two most fortunate people on the planet. "
    ],
    "authorname": "subtleperfume",
    "tags": [
        "romance",
        "historical"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/remembering-ava"
}