{
    "title": "Surviving the Rich-Sunshine and Sir Ch. 08",
    "pages": [
        "Killian, Billy, Sir\n\nBilly who? \n\nRae felt the tension roll through Killian and then he turned, while almost imperceptibly pulling her behind him. Giving her hand a reassuring squeeze, he let go, facing the man. High noon popped into her head, with his shoulders back and hands at his sides all he needed was a holster, a pistol, and a cowboy hat. \n\n\"I'm finished for the day,\" Killian said, his voice soft yet authoritative. \"If you want to speak with me make an appointment.\" \n\nThe man barked a laugh, and said, \"As if I haven't tried for the past two months. I can't even make it to the top floor. Security has been polite but firm.\"\n\n\"Without an appointment there's no reason to come to the top floor.\"\n\nRae knew that wasn't true, security hadn't even blinked when she walked past them that first time. So Killian had specifically told them to keep him out. She glanced surreptitiously at the camera in the corner, wondering if they were witnessing the ambush.\n\nRunning a hand through his scraggly hair that was more grey than brown, he stepped closer to Killian, the dark circles under his eyes making them look slightly unhinged. \"You have no appointments available, at least not for me. But then, you went to great lengths to mask your involvement didn't you? According to our attorney the paper trail was almost a work of art. When it led to Killian Laird, he dug, but there was nothing that connected you to us, and certainly not to Billy Harris. I'm assuming you took care of that yourself. After all, you're Killian Laird! Lawyer to the wretched refuse polluting our country with sin!\"\n\n\"Go home to your family Mark,\" Killian said, his body loose, but the predator coiled and ready to strike. \n\n\"You killed my parents.\"\n\nKillian cocked his head slightly to the side and said, \"Your mother had a stroke, and after a night of drinking your father flipped his car and ended up in a pond. You want someone to blame? Blame the almighty.\"\n\nMark looked at her his eyes burning. \"Do you know who you work for?\"\n\nThe fact that he knew she worked for Killian meant he'd been watching, and it chilled her to the bone. Killian shifted, almost shielding her completely from sight. \"Do not terrorize her with wild accusations.\"\n\n\"Wild!\" he barked. \"You destroyed whole families!\"\n\n\"You're confusing me with your father.\"\n\n\"My father was ten times the man you are!\"\n\n\"Your father was a hypocrite using Jesus to further his own agenda. And honestly Mark, for a true believer your lack of faith is telling.\"\n\n\"What the hell are you talking about?\" Mark growled.\n\nKillian smiled and a chill ran down Rae's back. \"This was God's will. So submit, forgive, and move forward in the light of the Lord.\"\n\nMurder flashed through Mark's eyes but Killian didn't move. He faced the man without a hint of fear, hesitancy, or remorse. \n\n\"Why?\" Mark whispered, his voice cracking. \"Why did you do this to us?\"\n\n\"I did nothing to you. The lawsuits brought against Calvary were filed by people who suffered as a result of the church and its policies. Policies which shamed victims and sheltered perpetrators, all in the name of God.\"\n\n\"Everything alright Mr. Laird? \n\nTwo security guards appeared and Rae breathed a silent sigh of relief. She let go of the pepper spray, which was always in her pocket, and stepped back. \n\n\"Everything is fine Walt,\" Killian said, his eyes never leaving Mark's. \"Mark and I were catching up. If you'd be so kind as to help him to his vehicle.\"\n\n\"It would be our pleasure Mr. Laird. Sir, let's get you to your car.\"\n\nMark stared at Killian, his eyes roiling with a mass of emotions. \"You will be held accountable Billy. No one escapes God's judgement. No one.\"\n\n\"Goodbye Mark.\" \n\nAll that moved were Killian's eyes, following the three men until they were out of sight. His stillness was unsettling against the sudden silence that surrounded them, thickening with every breath. He shifted, and the scratch of his shoe against the pavement was like a foghorn blasting through the garage. Killian held his hand out, his eyes unreadable. A part of her thought it would be best to call it a night and just go home. With the house to herself she could eat junk food and binge a couple shows she'd been itching to watch. It would definitely be best. \n\nShe placed her hand in his, and he grasped it firmly, lightly stroking her knuckles with his thumb. That electricity rolled up her arm and to the top of her head and then down to her heels. She couldn't suppress the pleasurable shudder that moved across her shoulders. The corner of Killian's mouth twitched and he led her to the car.\n\nIt was a quiet drive, no music, no conversation. Occasionally she caught his hands tighten around the steering wheel, and he was a little heavy with the gas pedal. But she didn't press. In her experience, it was better to let people get to the point of sharing on their own. When he pulled in front the restaurant to pick up dinner, he looked like he wanted to say something, struggling to find the right words. He kissed her instead and disappeared inside.\n\nShe'd read a few articles on the sudden destruction of the church after Bob told her about it, but there was nothing sudden about it. Their take down was too expertly planned for it to be sudden. Killian made sure that when he struck, the dominoes would fall too fast for them to mount enough of a defense or even be able to afford it. Billy Harris. Killian hadn't denied the name or feigned ignorance, which made the downfall of Calvary a story she was curious hear. It had to be about more than the church taking sides in a divorce for him to wage the war he did. \n\nKillian got back in the car and pulled out of the parking lot without a word. Out of the corner of her eye she could see his jaw clenching and tightening. His carefully crafted narrative had been cracked open, and in front of her. Appearances matter, and to him any inkling of weakness or lack of control bruised his image. The king had been thrown off the hill by his own past, and he did not like it. \n\nShe looked out the window, taking in the houses as they drove deeper into the residential tranquility of wealth. Majestic trees, carefully crafted yards, with the glimpse of an occasional pool or tennis court or both made her remember her youthful vow to herself to be independent and wealthy. A powerful actor then director were her life goals, and it stung to think about how her twenties had completely gotten away from her, as well as her dreams.\n\nKillian slowed and turned onto a long driveway, bushes lining both sides. The Tudor house at the end was massive and gorgeous, and seemed like an odd choice for him. She always pictured him a penthouse kind of guy. They pulled into a garage large enough for four, possibly five cars. She got out looking at the pristine walls, the tile floor that was warm underfoot, and the lights overhead completely blown away.\n\n\"This isn't a garage, it's a show room.\"\n\nHe gave her a small smile and walked into the house. She took one last look at the garage then followed. A short hall opened into a spacious kitchen with state of the art everything. The seafoam green paint and white trim were flawless, no nick or scratches that she could see, and the marble countertops shone. While the garage looked like a showroom, the kitchen looked like it was about to be photographed for a magazine spread, everything decorated with the right amount of masculine for a man of Killian's tastes.\n\nHe put the food on the counter, threw his coat over a chair, and walked over to a cabinet. \"Would you prefer beer or wine?\"\n\n\"Beer please,\" she replied, taking off her own coat.\n\nHe opened the door on the left, and took two beers out of a drawer. \"Cold glass?\"\n\n\"Sure.\" \n\nHe pulled glasses from another drawer and grabbed a bottle opener. \"Are you hungry?\"\n\nShe shook her head. \"Not yet.\"\n\nHe handed her a beer and then poured himself one. \"Excuse me for just a moment.\" He walked through an archway and around a corner. She heard him speaking quietly and walked over to the archway, beer in hand. When she peaked around the corner, she saw him standing in a dining room, his finger tapping the dark wood table. \"Mark Weisman. I just want to make sure he flew home and isn't a threat to me or my employees...Yes, waiting in the garage...I honestly don't think he has it in him to take things further, but we both know grief can drive people to acts they would never commit otherwise...Thank you Evelyn.\"\n\nHe put the phone on the table then picked up his beer. Instead of coming back to the kitchen he walked over to a glass patio door and stared into the night. The outside lights gave everything a soft warm glow, and she could see a pool, furniture and even a fire pit. In the summer the door could be opened while people were dining. She wondered if he'd ever done that. The dining room looked like the kitchen, barely used. She took a sip of her beer and couldn't help but smile. Citrusy wheat. He remembered. She stepped into the room watching the tension roll through him. He knew she was there but didn't say anything.\n\n\"Are you sure you wouldn't rather be alone?\" \n\n\"Why do you insist on calling me sir?\" \n\nHis voice was soft and low, and she shuddered. She was in trouble, and if the heat suddenly pulsing between her legs was any indication, her body was thrilled at the prospect. And yet, that anger roiling through him made her nervous.\n\n\"Answer me sunshine.\"\n\n\"Why do you insist on calling me sunshine?\"\n\nHe took a sip of his beer and finally turned around, the hardness in his gaze softening. \"You brighten my office every time you walk into it. When I've got you in my arms all the calls, clients, and day to day frustrations melt away. I don't measure my life in happy moments. I don't even like the words happy and happiness, they conjure the wrong ideas about life and lead to disappointment and resentment. But holding you brings me contentment and joy; it makes me happy. So calling you sunshine comes naturally, it feels right. But if you truly want me to stop, I will.\"\n\nShe was floored and stood there speechless, the glass of beer about to touch her lips frozen in front of her. All at once she was fighting tears and downed half her beer to hide it. To have a man see her in that light blew her away, and while it felt amazing, the pain it tapped into ran deep. She'd shed her need for intimacy, content to give her child every ounce of love in her heart. But Killian made her want; he made her need, and that was a slippery slope for them to be on. \n\nHe walked over to her and searched her eyes for a moment, then kissed her forehead. \"Now answer my question.\"\n\n\"Mr. Laird was fine at the restaurant, but at the office you didn't like it any more than I liked sunshine, which I assumed you were calling me because you knew it got under my skin.\" He fought a smile and she said, \"So you did!\"\n\n\"I admit, I found the fire in your eyes that first time I dared to call you sunshine entertaining and...\" His eyes drifted down and up her body. \"Arousing. I love that fire.\" She blushed and looked at the ground, the intensity in his gaze after the sweet things he said throwing her into the unknown. He set down his glass and grasped her face with both hands. \"There's that vulnerability. This strong fierce woman suddenly becomes shy and unsure, unable to look me in the eye. It's such a massive switch Rae, and I have to be honest, it brings out two equally intense urges within me.\" \n\nHe drew her lips to his, the kiss tender and slow and making every hair on her body stand on end. Looking into her eyes he said, \"Protect and ravage. I want to protect you from the world, keep you safe.\" He wound a hand into her hair and pulled her head back until she was looking up at him. \"And then tear the clothes from your body and ravage every inch.\" \n\nHeat started pulsing between her legs and he devoured her, barely letting her up for air, his grip on her hair tightening with every swirl and dive of his tongue. When he eased up and looked at her, his eyes were on fire, like he'd consumed hers and made it his own. \n\n\"Now sunshine, finish explaining your reasons for not calling me Killian.\"\n\nShe was definitely in trouble. No matter her answer, he was going to teach her a lesson. \"I...\" She swallowed hard and cleared her throat wondering what he was going to do to her. \"Like I said, I knew you didn't like being called Mr. Laird, but it was the only weapon I had. The only way I could wipe the smirk off your face. Then you took over, making decisions about what products I use and what clothing I should wear. You gave me orders. So there was no way I was going to give you what you wanted and call you Killian.\"\n\nHe took a deep breath looking pleased, almost victorious. \"I'll give you a choice sunshine. Secured to the table or the wall?\" She didn't know what to say and he tsked under his breath. \"Make the choice or I'll make it for you.\"\n\nThe underlying heat in his voice sent shockwaves rocketing through her body, but uncertainty and a touch of fear kept her tongue tied. \n\n\"You're afraid.\" She nodded and he said, \"A little fear is natural, and when I've got you bent over the table or pressed to the wall I'll turn that fear into anticipation. You already love what I do to you. I promise, this will be no different.\"\n\n\"Tied up and under your complete control.\"\n\nHe smiled and planted soft kisses all over her neck. When he slid a hand down her arm and swirled his fingers around her inner elbow she moaned. Kissing his way to her ear, he said, \"Sir implies complete control sunshine. Or do you not know how this works?\"\n\nHer breath caught in her throat and she wanted to kick herself for not realizing why he looked so pleased. He was Killian Laird, of course he'd twist every word to his advantage. \"How what works?\"\n\nHe smiled and said, \"You already surrendered to me when you signed your name, freeing yourself.\"\n\n\"Freeing? I don't see how-\"\n\nHe placed a finger on her lips and said, \"Yes you do. You allowed yourself to give up control and embrace your sexually submissive nature. You enjoy being dominated, it arouses and fulfills you, enhancing your sexual experience in ways you never expected. This is the next step in that evolution Rae. So I'll ask one more time. Table or wall?\"\n\nShe stared into his eyes, her desire overriding her fear. \"Wall,\" she breathed.\n\nHe kissed her and said, \"Good girl. Do not move.\"\n\nHe disappeared and she ran trembling hands down her waist and hips. Looking around the room she wondered which wall. It wasn't a room cluttered with excess furniture and there was little on the walls other than a few paintings and sconces. She grabbed her beer and downed the rest, then bent over to unzip her boot. \n\nKillian tsked under his breath. \"I told you not move sunshine. But you insist on being disobedient. For that, the boots stay on.\" \n\nShe froze and then slowly rose, her heart racing. \"My hair clips? What are you going to do with those?\"\n\nHe walked past her without replying and stopped in front of the patio door. \"Come here.\"\n\nShe walked slowly across the room, her legs rubbery. He pulled his belt off and folded it, then smacked it against his palm. She jumped and he said, \"When I tell you to do something you say yes sir.\"\n\nHe raised an eyebrow and smacked his palm again. It travelled down her spine, and she felt a rush of adrenaline, and anticipation. \"Yes sir!\"\n\n\"Good girl. Now take off your blouse and give it to me.\" She hesitated and the belt hit the table. \"You are racking up punishments with every hesitation. Do as you're told.\"\n\nThe raw power in his voice made her quiver. He was right, she loved being dominated, by him. \"Yes sir.\"\n\nWhen she handed him the blouse he draped it over a chair. \"Now your bra.\"\n\nWith trembling fingers she unsnapped the bra and handed it to him. Exposed, she fought every instinct to cover herself and failed. \n\nThe moment she crossed her arms over her chest he smacked the belt against the table. \"You will not hide your body from me. Put your hands down.\"\n\n\"Yes sir,\" she breathed. \n\nHe placed the belt on the table and picked up a black harness looking thing with three loops. Standing over her, he slid her wrists into two, and stepped her back to the glass door. The fabric stretched as he raised her arms and placed the third loop over a brass hook. Five thick, solid hooks held a twisted red silk valance that draped across the top of doors and hung down each side. He stepped back, his eyes travelling over the tableau. \"Such a beautiful sight,\" he said softly. \n\nWhen he picked up her hair clips she opened her mouth to ask again what he planned on doing with them, but Killian said, \"If you make a sound without permission you will be punished.\"\n\nHe grabbed a breast and brushed his thumb back and forth over the nipple until it was hard and erect. Sucking it into his mouth he swirled and sucked until she had a puddle in her torn and already soaking wet panties. She closed her eyes biting back the moan, and almost cried out when he bit her nipple. Letting it fall out of his mouth, he gave it a quick lick and moved to the other. \"I love how sensitive your nipple are,\" he said. \"It makes playing with them so much fun.\"\n\nGrabbing a huge handful of her breast, making her nipple stick out, he snapped her hair clip on it. She jumped in his grasp, the pain shocking, yet strangely titillating. Killian didn't give her time to recover, he snapped the second clip on her other nipple. She gasped and threw her head back trying to swallow the yell as best she could, grateful the clips didn't have teeth. Kissing her neck, he unzipped her skirt and let it pool around her boots. \n\n\"Look at me sunshine.\"\n\nShe opened her eyes and he snapped a garter. He did it again, harder, and at the same moment flicked one of the clips. Pain and pleasure chased each other through her body, as he did it again and again, harder each time, the clips pinching and yanking her nipples. Suddenly he grabbed her jaw and crushed her lips to his, the erection in his pants poking her stomach. When he slipped his fingers between her hot, throbbing folds, she lost control and moaned into his mouth. \n\nHe released her and tsked, his eyes definitely victorious. \"I warned you.\"\n\nGrabbing her underwear he tore it completely, the sound of ripping fabric an aphrodisiac that made her feel giddy, almost drunk. The underwear fell to the floor in tatters, and Killian turned her around. Seeing herself reflected in the glass was a shock, arms taut overhead, her nipples being pulled by the clips. Then she saw Killian take his shirt off and pick up the belt. Her eyes were glued to the belt as he folded it, holding the buckle in his palm.\n\n\"Tell me sunshine, which lessons are you learning this evening?\"\n\nHe caught her by surprise, and she opened her mouth trying to respond, but the hardness in his gaze, reflected clearly in the glass, short wired her brain. The king was going to reclaim his place on the mountain, through her. The belt landed across her ass and she yelped, her skin instantly hot.\n\n\"Answer me,\" he said, his voice low.\n\nShe just stared at his reflection and he whacked her ass harder, the sharp sting travelling up her back like a lightning strike.\n\n\"Answer.\"\n\n\"To...\" She stumbled and he hit her six times in quick succession. She felt the sting of tears, but the lightning strikes were hitting her brain like a drug, and she couldn't believe it, but she wanted more. \n\nHe stepped up behind her and grabbed each of her throbbing cheeks, giving them a rough squeeze. \"I'm going easy on you right now sunshine, but if you continue to play games your punishment will only get harsher.\" Leaning in he ran his tongue around her ear. \"So please, by all means, keep playing games.\"\n\nHis hot breath teased her, and she raggedly whispered, \"I'm not playing games.\"",
        "Whack! Her hip instantly throbbed and she yelped. Whack! Her other hip throbbed in time with the first. \"You do not speak without permission, you do not make noise without permission.\" \n\nHe ran a hand around her waist and up to her breasts. Flicking the clips, he belted her ass repeatedly, adding more force with each smack. The sensations undid her, and she squeezed her eyes shut while moisture ran down her thighs. Suddenly he pulled one of the clips and her eyes flew open. He kept pulling until she was squirming in his grasp. The belt slammed against her ass and she gasped, stilling her movements. He let go of the clip and her breast bounced, jerking her nipples, the pain making her want to beg for his cock so bad she almost broke. He grabbed the other clip and dropped the belt. Pulling her nipple taut, he ran his hand along the inside of her thighs. \"So wet,\" he purred in her ear. \"You want to be fucked, don't you sunshine?\"\n\n\"Yes sir,\" she said shakily, knowing full he wasn't going to fuck her yet.\n\n\"You like your punishment,\" he whispered sharply. \"Just as I knew you would.\"\n\nHis fingers teased her lips and then he drove two inside her while squeezing her breast. She inhaled sharply and smiled, the pleasure building until her hips were gyrating against his hand of their accord. Kissing her ear and biting the lobe he added a third finger and growled low in his throat, finger fucking her roughly. Another moan escaped her lips, her orgasm close and he stopped. She made a noise of dismay and he clenched her hair tight. \"Two more sounds made without permission. It's time you learned those lessons.\"\n\nUnsnapping her garters he slid the lace down her hips, then picked up the belt. Instead of folding it, he wound it once around his hand, the buckle in his palm. Killian stared at her body, his eyes travelling over every inch. Her chest heaved uncontrollably as he let the anticipation build until it was so thick it could be cut with knife. Then he smiled and a sharp pain erupted across her butt. She jerked and he hit each of her thighs.\n\n\"What's lesson one?\" he demanded hitting her thighs again.\n\n\"To do what I'm told without hesitation!\" she yelled, grabbing hold of the harness with both hands.\n\nHe whacked her ass so hard she saw spots. \"Lesson two!\" She didn't reply fast enough and he reared his hand back and whipped her between her shoulder blades. She gasped in shock, the pain unlike any other. He growled, doing it again. \"Lesson two!\"\n\n\"To reply yes sir!\" she wailed, the searing pain matching the heat between her legs.\n\n\"Lesson three!\" Her mouth worked silently as he whipped her back, butt, and legs. She didn't have a clue what lesson three was. He was merciless, punishing her until her whole body was on fire. \"Lesson three!\"\n\nAnd then she knew. \"To call you Killian, sir!\" \n\nHe ceased, breathing hard, and dropped the belt. She curled her toes in her boots, her skin thrumming from pain, pleasure, and need. He pressed his chest against her back and ran his hands down her hips and thighs. \"Good girl.\"\n\nHis skin was warm, but compared to hers it was practically cold. Every brush of his fingers produced a shudder, and she was dripping wet, so turned on it was painful. The sound of his zipper filled the room and she shook, her body craving what only Killian could give her. His fingers pressed into her flesh as he teased her with his cock. She bit back the whimper, and rested her head against him, silently begging. Forcing her legs further apart, he positioned himself, the head of his cock pressed to her aching entry. In a low, almost guttural voice, he said, \"I'm going to ride you hard sunshine. Are you ready for that?\"\n\nHe drove himself inside her, not waiting for a reply. The guttural didn't stop, every pump of his hips was accompanied by a deep grunt. Within minutes, maybe seconds, she had no concept of time, the orgasm started building within her. \n\n\"Don't you dare sunshine,\" he growled. \"You don't come until I give you permission!\"\n\n\"I can't!\" she cried. \"I can't control my body like that!\"\n\nHe pulled out to the tip and then surged upward slowly, bringing her to her toes. \"This body is mine,\" he hissed. \"I control it not you.\" He got a handful of her hair and yanked her head back, still moving excruciatingly slow, holding her orgasm in check. \"Obedience was your first lesson. Do you need to learn it again?\" He thrust hard, lifting her off the floor. She was full in a way she'd never been and hung there almost in tears. She needed satisfaction. \"Well?\" he hissed in her ear.\n\n\"No sir!\" she cried. \"You're in control!\"\n\n\"And?\"\n\n\"It's your body, not mine.\"\n\n\"Good girl,\" he said, lowering her back to the floor. \"Focus on me, my breathing, my rhythm, my pleasure. I'll take care of you.\"\n\n\"Yes sir,\" she whispered. \n\nKeeping a tight grip on her hair, he wrapped a hand around her aching breast and rammed himself inside her. She did what he told her to do and focused on him, the feel of him inside her and out, the simmering heat along his smooth skin, his muscles contracting with every thrust. She listened to his ragged breathing and felt his heartbeat, regulating hers until they were beating together. She lost herself completely in Killian, and he felt it. He loved it. His grip on her breast disappeared and he ripped the clips off. Before she could react he shoved her against the freezing glass, shocking her body all over again. A wail burst from her and he smacked her ass, driving himself into her harder. The cold coupled with the fire in her veins made her pleasure spike to new heights, and she pressed her lips together wanting to shout and moan the pleasure intense beyond words.\n\nThe glass steamed around her and little spasms built in her hips and legs, and then in her stomach, back and everywhere else. He'd electrified the nerve endings all over her body and they pulsed in time with her impending orgasm and she felt incredible, She felt a wild freedom, the carnal he'd opened up within her pure bliss. She'd given herself over to Killian's control and this was her reward. His thrusts picked up speed and her feet left the ground. He pounded her ruthlessly against the glass his grunts and groans escalating. \n\n\"Come now sunshine,\" he growled. \"Now!\"\n\n\"Yes sir!\" she screamed. \n\nThe spasms coalesced in her core, and then exploded, the ecstasy of their combined orgasm bringing tears to her eyes. Killian didn't slow, pumping every last drop into her body. His grunts were bestial and raw and she loved the feel of them against her skin. Suddenly he stopped, keeping her pressed against the glass. She laughed through her tears, no other expression of joy more fitting. Killian wrapped his arms around her and buried his face in her neck, his own chuckles vibrating through her skin. Lowering her back to the floor, he held her, his chest heaving. After a minute he eased out of her, both their legs shaking from aftershocks. \n\nKillian fixed his pants and put his shirt back on, then pulled her skirt up. He wrapped an arm around her waist and released her wrists. She deflated against him and he turned her around, holding her close. \"That was amazing sunshine. You're incredible.\"\n\nShe looked up at him smiling. \"You're not so bad yourself, Killian.\"\n\nHe chuckled and grabbed her shirt, holding it open so she could slip her arms in. She held the shirt shut, needing to change into dry, clean clothes. These would be soaked with sweat in no time. She watched Killian as he picked up her hair clips and grabbed his restraints. When he turned, the look on her face stopped him short. \n\nTaking a deep breath, he held his hand out. \"William Killian Harris.\"\n\nShe shook his hand and said, \"Nice to meet you. Do you by chance have a pair of pants and a t-shirt I could change into William?\" \n\nKillian's mouth twisted a touch and he said, \"It's legally Killian, which I prefer.\"\n\nRae smiled and said, \"I know. So...pants?\"\n\n\"You look good in skirts.\"\n\n\"While I appreciate the compliment, I'd also appreciate pants.\"\n\nHe smiled and held his hand out. \"Come with me.\" \n\nShe put her hand in his and he led her to a winding staircase near the kitchen. Her body ached, but at the same time she was ecstatic and couldn't to wipe the smile off her face. All the times she'd wondered about Killian, imagined what sex with him might be like, didn't remotely compare to the reality. The power he exerted over her was an aphrodisiac, tapping into a well of desires she never knew existed.\n\nHe glanced over his shoulder and said, \"What are you smiling about?\" Her smile only grew and he laughed. Pulling her to him, he grasped the side of her face and kissed her tenderly. \"When I see that joy in your eyes, knowing I had something to do with it...\" He looked over her face, his own eyes bright. \"No words suffice Rae.\"\n\nShe wrapped her arms around his neck. \"You? No words?\"\n\nHe picked her up and spun her around, making her laugh. \"My sunshine,\" he said, and started walking down the hall.\n\nShe held on, letting herself get lost in the joy of the moment. Killian stopped in front of a door at the end of the hall and set her down. He took her into a simple bedroom with a full size bed, a bureau, a nightstand, and walk in closet. One side of the closet was empty, while the other side was filled with women's clothing. \n\nShe folded her arms and said, \"Quite a collection for a bachelor Mr. Laird.\"\n\nHe chuckled and said, \"These are your clothes, the items that couldn't fit in the car.\" She didn't budge and he held up his hands. \"Hand to God Rae. I'm not the kind of man who keeps souvenirs of my conquests. Look at the tags, they're all from the boutique.\"\n\nShe shook her head, trying not to smile. \"I don't see anything resembling pants and a t-shirt.\" \n\nHe pulled a shimmering rose colored nightgown from the clothing and said, \"How about this? Its soft, beautiful, would look amazing on you, and is-\"\n\n\"Not pants,\" she said.\n\n\"Pants get in the way.\"\n\n\"And yet, you're wearing them.\"\n\n\"Would you prefer me in a skirt?\" \n\n\"Whatever floats your boat,\" she said. \"I'm not one to judge.\"\n\nHe laughed and put the gown back. Flipping through the hangers he pulled two from the rack. \"Pants and a soft shirt for lounging. I hope they meet your criteria for comfort.\"\n\n\"I don't suppose you've got undergarments for me. Not lacey stuff for your viewing pleasure, but something akin to actual underwear, like cotton briefs or hip huggers.\"\n\n\"Sorry,\" he said, with a grin. \"No granny panties here for you.\"\n\nShe sighed. \"I figured as much.\"\n\nHe led her to a bathroom and hung the hangers on a hook behind the door. \"I'm going to go change myself. I'll be back shortly.\"\n\nShe shut the bathroom door and stripped, happy to get out everything, especially the boots. She was the kind of person most comfortable in pajama pants and t-shirts, and changed the moment she got home. Cleaning herself up, she examined her body. While she was red all over her backside, there were no bruises or welts, which meant Killian knew what he was doing. She shivered, wondering what other toys he had besides restraints. She was certain the belt was his way of easing her into his particular appetites, just as he'd been doing from the beginning. \n\nThe mauve pants hugged her hips but were loose otherwise and so soft she never wanted to take them off. The shirt was the same material, with three quarter sleeves and a wide neck that fell off her right shoulder. She almost laughed, the clothing was still sensual, albeit in a different way. \n\nKillian knocked, and said, \"Ready for dinner?\"\n\nShe opened the door and said, \"Where should I put my clothes?\"\n\nHe looked her over and said, \"I wasn't sure about that outfit, but now I'm glad I ordered it. You look beautiful.\"\n\n\"Thank you,\" she said, taking in his casual wear. Dark blue lounge pants, of the highest quality of course, and a burgundy long sleeved shirt. She'd never seen him in anything other than suits, it was a nice change. \"You look good too.\"\n\n\"Why thank you,\" he said, smiling. \"Just leave your clothes in the bathroom. We'll take care of them in the morning.\"\n\nShe laid everything across the tub and followed Killian back to the kitchen. He grabbed plates and silverware, while she went into the dining room to retrieve their glasses. Picking up her torn underwear, she stuffed them in her pocket and grabbed the glasses. Something moved in her periphery and she looked towards the door. The shadow of a man ran across the patio and she jumped, her heart in her throat. \n\n\"Killian!\" An alarm started going off in the kitchen and Killian ran into the room. \"Someone's in the backyard,\" she said, pointing. \n\nHis phone rang and he answered, while throwing the door open. \"There's an intruder on my property...Sunshine.\" He handed her the phone and said, \"Stay here.\"\n\n\"Don't-\" \n\nBut he was already out the door. Her heart hammered in her chest, and she scanned the room for a weapon. A bronze tree statue was on top of the buffet table and she picked it up, then stepped outside clutching the phone. Her mind went a mile a minute wondering if it was a burglar, or if Mark had somehow followed them. She heard a scuffle just out of sight and ran towards it. Sirens were cutting through the quiet neighborhood, getting closer with every step. She rounded a corner and caught Killian throw something into the bushes while another figure turned around and lunged towards him. Killian moved swiftly, punching the man in the throat. He stumbled back clutching his neck, and Killian followed, his fist raised for another strike.\n\n\"Is it Mark?\" Rae asked, stopping a few feet away.\n\nKillian froze mid-punch, and without looking at her said, \"I told you to stay in the house.\"\n\n\"No fucking way am I going to wait inside while anything could be happening to you.\"\n\nThe sirens were blaring now and they could hear doors opening and slamming shut. Killian held his hand out and said, \"Give me the phone and get in the house. Unless you want to be interviewed by the police.\" \n\nShe gave him the phone and ran back towards the dining room. Lights came on all over the property and Killian yelled, \"I have him in the back!\" \n\nJust before she disappeared from view she saw a middle-aged man in nondescript clothing clutching his throat. He fell to his knees his face turning purple, and then the police appeared. She ducked inside, put the statue back, and grabbed all evidence of her. The alarm in the kitchen was suddenly silenced and she froze in the doorway, but no one else was there. Keeping low, she ran through the house until she found a room near the scuffle. She pulled a curtain a hairsbreadth away from the window and watched as a police officer handcuffed the intruder. Killian was speaking with two officers, and when the man was pulled to his feet he struggled to talk.\n\nRae could barely hear a thing, but as he was dragged past Killian he clearly croaked, \"He stole my camera!\"\n\nEveryone ignored him and he raised his voice, proclaiming he was a private investigator, and Killian was a thief, and he was just doing his job. Rae let go of the curtain and slid down the wall, panic washing over her. A camera. That's what Killian threw into the bushes. She'd been pressed to the glass half naked being ploughed by her boss. If there were pictures it could get back to Jimmy and Reagan. She might not be in love with Jimmy but she didn't want to hurt him, even if she suspected he was screwing someone else, which after this morning, she did. The last thing she wanted was Reagan to find out what she was doing, or her mother, or anyone. Her chest tightened and she started shaking, barely able to breathe as a full blown anxiety attack throttled her. \n\nA sound pierced the fog, but she barely took note of it. Suddenly the light came on and Killian grasped her shoulders. \"The police are gone. Rae? You're shaking like a leaf, and your hands are freezing.\"\n\nShe finally looked at him, the anxiety squeezing her heart like a vice. \"A camera,\" she said, gasping for air.\n\nHe massaged her hands and said, \"Keep your eyes on mine and breathe with me.\" He took in slow breaths, his hands two furnaces encasing hers. \"Come on now. Everything is going to be fine. I swear to you, I'll take care of it. I won't let anyone or anything hurt you. Trust me and breathe. In...out. In...out.\"\n\nShe stared into his eyes and focused on his warmth. Eventually the shaking stopped and the vice loosened.\n\n\"That's right,\" Killian said. \"In...out.\"\n\nAfter a few more minutes she could breathe normally and her heartbeat regulated. Killian held her gaze, continuing to breathe slow and steadily. When she was able to breathe on her own, he pulled her to her feet. Grasping her face with both hands, he said, \"Trust me. I will take care of this. You know me, and-\"\n\n\"Do I? Who are you? Killian Laird or Billy Harris? And why is a private investigator following you? Does he work for that guy Mark? And what about my family? Reagan will hate me if she ever finds out what I've done. Her mother selling herself like a whore-\" \n\n\"Stop it,\" Killian said, almost angrily. \"I won't allow you to denigrate yourself.\" Her eyes filled with tears and Killian encircled her in his arms, refusing to let her go when she tried to pull away. \"I swear, Reagan will always see you for who you really are. A mother who'd do anything for her child.\"\n\nThe dam broke and she cried into his chest, the guilt snuffing out the joy she'd felt less than a half hour ago. No matter how much fun she had with Killian, or how he made her feel, the contract was always there, hanging over her head. Proof she could be bought. \"I shouldn't be here,\" she said. \"I should have done the right thing and gone home. Other people could suffer because of my actions, and it's wrong. This is all wrong.\"\n\nKillian tightened his embrace, and said, \"I have his camera, and I swear on my life no one will use us to hurt you or your family. Come to the den and eat dinner with me, and-\"\n\n\"I'm not hungry-\"\n\n\"And,\" he said, raising his voice a touch. \"I'll tell you about Billy Harris, and why he became Killian Laird. If you don't want to eat, don't. But after everything that's happened tonight you have a right to know the truth.\" He grasped her face again and looked into her eyes. \"When I'm done, if you want to leave I'll drive you home myself. Deal?\"\n\nShe stared into his eyes for a long moment, the war within tipping in his favor. \"Alright,\" she said, quietly. \"Deal.\"\n\nHe took her hand and led her back to the kitchen. They gathered the food, plates, and utensils together, and she followed Killian to the den. Wood was the theme, from the floor, to the walls, to the bold beams across the ceiling. A mosaic rug covered a good portion of the floor, red and blue being the standout colors, matching the few red and blue pillows on the large leather sofa and overstuffed chair. A few books and files were on the square coffee table, while across the room was a stone fireplace with a landscape painting dominating the mantle. Book shelves lined one wall, while a few other landscapes dotted the others. A television cabinet was in one corner with a large flat screen T.V on top. It was the first room she'd seen that looked lived in. Killian set everything down on the coffee table, and moved the files and books to a table between the sofa and chair, then disappeared back into the kitchen.\n\nRae examined the bookshelves, coming across a couple family photos. One had to be his sister and her family, while the other was of an older woman at the Sistine Chapel.\n\n\"It was the one place my mother had dreamt of seeing since she was a child. Being able to make that dream come true for her was one of the best days of my life.\" She turned around and Killian handed her a fresh beer. \"Were you raised in a faith?\"\n\n\"Casual Catholics,\" she replied. \"We went to church on Christmas and Easter.\"",
        "\"Sinner,\" he said, with a smile, \"and Catholic to boot. Not really a follower of Christ.\"\n\n\"I'm fine with that,\" she replied, taking a sip of her beer. \"Americhristians have pretty much turned me off to religion.\"\n\n\"Americhristians,\" he said, sitting on the couch. \"I haven't heard that one.\"\n\nShe grabbed a pillow and placed it on the floor in front of the chair, then lowered herself down, tucking her freezing feet into the warmth of her pants. \"You know, bibles and guns; abortion is murder but contraceptives are a sin; purity rings and pledges. Love the sinner hate the sin. Americhristians.\" \n\nKillian dished out food for them both and then picked up his beer. \"That pretty much sums up the church I grew up in. God, husband, wife, children, and so on. A woman's place is in the home, raising her children and honoring Christ through her husband and church. My mother believed that and did everything she could to be the wife and mother the church, and God, expected her to be. My father believed it too, and reveled in being the head of his household. In the beginning his abuse was verbal, tearing her down every chance he got. In private. In public he was the epitome of the Godly man.\"\n\n\"Aren't they all,\" she muttered, the smells making her reach for the naan, hungry or not.\n\n\"For the most part,\" Killian agreed, around a mouthful of food. \"My mother just tried harder, because if a man was as miserable and lost as my father it meant his wife was failing him. She prayed, scrubbed, cooked and sewed, and shielded me and my sister. Once the abuse turned physical she learned to cover her bruises quite skillfully, and she prayed harder.\"\n\nRae took a bite and her whole body sighed in contentment, the curry and naan melting in her mouth. Killian was quiet while he chewed, his eyes dark with memories that obviously still haunted him. \"I found out, through my sister, that my mother had developed a condition that made sex painful. Do you think my father cared? She was his wife, he'd rape her, angry she tried to deny him. I'd hear her crying through the walls, and I wanted to do something, to save her, but...\"\n\n\"I'm so sorry,\" she said, her heart breaking for him.\n\nHe shrugged and took a large gulp of beer. \"She finally reached out to her friends in the church, and do you what they told her? She needed to do better. They were sad for her pain and they'd pray for our family, but trust in Jesus, he'd guide her. One night my father came home drunk and started wailing on her. I was nine, and while I was terrified, I couldn't stand by anymore and got in-between them. He turned his wrath on me, and every time my mother tried to stop him, he knocked her down. My sister called the police, and they arrested him. The church elders did not approve of her actions. God's law above man's, and these matters should be kept within the church.\"\n\n\"Jesus,\" she whispered. \n\n\"Abusing her was one thing, but turning that violence on me was another. My mother refused to give into the elder's guidance. She stood firm and my father was prosecuted.\"\n\n\"Good for her.\"\n\n\"We were lucky,\" he said. \"The arresting officers, and prosecutor were on our side. The church wasn't. My mother had to listen to person after person, people she thought were friends, testify on my father's behalf and disparage her, even though most of them knew what he'd done to us. She was supposed to forgive and keep the family together. Forgiveness is important, and is used as weapon to keep the abused shamed and quiet. No one from the church stood for her. Not one single person. The judge was swayed, but not entirely, and sentenced my father to the minimum. The church turned their backs on us, and when my father was released welcomed him back into the fold. Jon Weisman, Mark's father, was instrumental in getting him released early, and ensuring his forgiveness and acceptance among the flock. We left town and never looked back. Spent time at various shelters before my mom was able to scrape by on her own. She was one of the most kind, generous, and loving people you could ever meet, and life kicked her in the teeth every chance it got.\"\n\nHis eyes were glassy and red and she moved to the couch. Killian looked at her and the anguish in his gaze broke her heart all over again. She hooked her arm around his and kissed his shoulder. He hung his head in his hands and she cuddled closer, picturing a nine year old Killian standing up to his drunken, abusive father. \n\n\"She forgave them,\" he said so quietly she barely heard him. He looked at her tears in his eyes. \"Not me.\" He downed the rest of his beer and wiped his eyes. \"We became a new family, and she let us pick our names, made it a game. I chose Killian. I'd always liked my middle name and it fit. Laird was my great grandmother's maiden name. My mother loved her grandmother dearly, so she felt she was honoring her by choosing it. I was more than happy to leave Billy Harris behind.\"\n\n\"But you didn't,\" she said. \"You took your revenge on the church and all those who wronged your mother, and Billy.\"\n\n\"No Rae, I delivered justice. We weren't the only ones screwed over by the elders and their families. I witnessed the power of the law, and while I know it fails countless people, it didn't fail us. Over the years, living in the hovels we did, I saw the dark side of the law. I won't deny that. But there were always those who knew how to manipulate the system, who made the law work for them. I decided Killian Laird would be one of those people. I stumbled across a few forums here and there in my twenties, ones where people post their stories about church abuse. Calvary was mentioned plenty. So I formed a plan, and collected as much dirt on them I could. When the time was right I reached out to other victims and set the ball rolling.\"\n\n\"How many victims?\"\n\n\"Nineteen initially, but once it hit the airwaves four more came forward. But there were plenty who didn't. The bad memories had too much of a hold or they didn't want anyone to know what happened to them. The criminal investigation was the final nail in the coffin for Calvary, and the world has been a little bit better of a place ever since.\"\n\n\"And Mark blames you for his parent's deaths.\"\n\n\"It would appear.\"\n\n\"Do you think the investigator works for him?\" she asked, finishing her own beer.\n\n\"It's possible. I'll find out tomorrow.\"\n\n\"How?\"\n\nHe smiled and shifted, putting his arm around her. \"I have friends. Better investigators than that third rate P.I. But you need to do something that doesn't come easily to you.\"\n\n\"What's that?\"\n\n\"You have to trust me. I won't fail you.\"\n\nHe leaned back and she closed her eyes, letting his warmth wrap her in comfort. Killian had the camera, and she honestly didn't want to see photos of herself in dining the room. She had to trust him. \"Will you promise to erase any photos of us you find?\"\n\nHe kissed her head and said, \"I promise.\"\n\n\"Was it the security company that called when the alarm went off?\" \n\nHe stroked her arm softly and said, \"Mmhmm.\"\n\n\"Your code word is sunshine?\"\n\nHis hand stilled for a moment and then started moving again. \"Yes.\"\n\nShe heard her phone ringing, and jumped up. Running into the kitchen she dug it out of her bag, smiling when she saw the number. \"Hi sweetheart.\"\n\n\"Hi Mamas! It's my goodnight call.\"\n\nRae had to swallow a few times to keep her composure and said, \"I'm so glad you called. I miss you when you're not with me.\"\n\n\"I miss you too. The cousins are going to snuggle under the covers and watch a movie. Daddy thinks I'm going to fall asleep soon, but nope, nope, nope. I'm having too much fun!\"\n\n\"I'm so glad sweetheart. I love you, more than anything in the whole wide world.\"\n\nReagan giggled and said, \"I love you more than anything in the galaxy.\"\n\nRae smiled and said, \"I love you more than anything in the entire universe.\"\n\n\"I love you to the end of time,\" Reagan said, finishing their back and forth. \"I'll see you tomorrow.\"\n\n\"Goodnight sweetheart. Have sweet dreams.\"\n\n\"Goodnight Mommy, you have sweet dreams too.\"\n\nKillian listened, smiling a bit at the love you mores. His mother rarely vocalized her love, it was the way she was raised. But he always knew. \n\nRae walked back into the den and dropped her bag on the chair. It tipped over, scattering various items all over the floor. Killian got off the couch and helped her pick everything up, a simple drawing ending up in his hands. \"I seem nice,\" he said, looking over the picture. \"Talk about me at home?\"\n\n\"You come up from time to time.\"\n\nHe handed her the picture and stood, the dusting of freckles across her bare shoulder catching his attention. When she stood Killian encircled her in his arms and breathed deeply, the hint of mimosa in her hair and skin making him smile. His gaze was drawn to those freckles. Every one needed to be kissed. Pulling her hair over her shoulder, he brushed a freckle with his lips, and then another, and another. Each kiss sent a small shiver through her back, and held her tighter, his kisses more insistent. Her breathing deepened and he turned her around, his hands slipping under her blouse. He dropped onto the sofa, and pulled her onto his lap, eliciting a noise of surprise. Whipping her blouse off, he entangled a hand in her hair and pulled her head back. He kissed and licked her skin, running a thumb over her nipples.\n\nShe inhaled sharply, and he said, \"Sore?\"\n\n\"Mmhmm.\"\n\nHe smiled and gently kissed the soft, tender flesh around her nipple, the warmth and scent of her skin intoxicating. She rocked herself along the stiffness in his pants, small sounds of pleasure bubbling up from her throat. He licked that velvety valley between her breasts before latching onto the other, sucking her tender flesh mercilessly. \n\n\"Don't you dare give me a hickey,\" she whispered.\n\nHe tightened his grip on her hair and devoured her breast, tempted to do just that. His hand drifted down to her thighs and he sighed in frustration. \"See? Pants get in the way.\"\n\nShe laughed and he laid her down, then grasped her pants with both hands and whipped them off her hips. \n\nHer pale creamy skin against the brown leather was reminiscent of delicate porcelain, and that shyness, the inability to look at him while she felt vulnerable brought those two warring instincts roaring to the surface. He knelt next to her and gently pulled her hair free so it cascaded over the sofa, completing the picture. \"You truly look like a work of art sunshine,\" he said, his fingers drifting. \"I wish I could draw.\" Kissing her neck, he slipped a hand between her legs and stroked her folds. \"Capture your beauty in this moment.\"\n\nRae gasped and he covered her mouth with his, moving his fingers faster. Flicking her clit, he sucked on her bottom lip. When he did it again she jumped in his grasp, moaning into his mouth. Suddenly she grabbed his shirt and tried to pull it off. He took hold of her wrists and kissed his way down her body, settling himself between her legs. He pressed her arms to the sofa, his hands manacles, and pulled her wrists towards him as he latched onto her clit. Every time she squirmed he jerked her wrists towards him, bowing her body and feasting on her folds. He had complete control and she finally submitted, no longer trying to pull free. He swirled his tongue around her hot, wet hole, then took a long lick up her slit. He did it again and she whimpered, her body aching for him. His cock throbbed in with his temples, the need to be inside his sunshine overcoming everything else. \n\nHe released her wrists and took his pants off, his eyes on hers. He was tempted to keep his shirt on but she would wonder why, distracting from their lovemaking. So he took a deep breath and lifted the shirt overhead. Her gaze was immediately drawn to the large ugly scar in the center of his chest, just as he knew it would be. Ignoring the curious look on her face, he kissed his way upward, devouring that tender valley, then the curve of her neck, and finally feasting on her ear, licking and biting her sensitive lobe. She moaned, her fingers digging into his shoulders, as she rested a leg on the back of the couch, her hips reaching for him. He settled his weight onto her and exhaled heavily, savoring the feel of her softness cushioning him, her desire and need reflected in her eyes and quivering flesh. She reached for his scar and he grabbed her hand, then the other. Taking hold of her wrists in one hand, he pressed them above her head, and shifted her leg further, opening her up even more. \n\n\"Look at me sunshine.\"\n\nShe met his gaze and he pushed into her slowly, her silken walls contracting around him as she curled her hips to meet his. The angle allowed him to go deep, and she sucked in air between her teeth, her eyes as big as saucers. He pulled out just as slowly, his gaze taking in every breath and shudder of pleasure that moved through her. He shoved her leg along the top of the sofa till it was above her head, every slow, tortuous thrust going deeper. She braced her foot on the sofa and pushed her hips up eagerly, begging for more. \n\n\"Want it all sunshine?\" he asked, his voice low and husky.\n\n\"Yes,\" she moaned, as he moved his hips in languid circles, adding to her torture.\" \"Please!\" she cried, trying to pull her wrists free so she could grab hold of him.\n\nHe tightened his grip and plunged himself inside her, her body enveloping him to the hilt and holding on tight. She cried out in pleasure and pain, and he pulsed, his entire length pressing into his sunshine, his groin grinding against hers. Wrapping her leg around his waist, he changed his rhythm, his long, deep strokes ending with a harder thrust each time. The sound of his flesh slapping hers as arousing as the dulcet moans and cries escaping her lips. He switched his grip, intertwining his fingers with hers and grabbing onto the arm rest, the fire roaring through his veins igniting explosion after explosion along every inch of his shaft. He wanted to pound them both into carnal oblivion, but they weren't there yet. She had to beg, please wasn't enough.\n\nPicking up speed, he bit her ear and whispered. \"Tell me what you want sunshine. What you need.\"\n\n\"Harder,\" she breathed, arching her back so her breasts were pressing into his chest.\n\n\"I didn't hear you.\"\n\n\"Harder! Please!\"\n\n\"Not convinced,\" he growled, barely able to hold himself in check.\n\nPlease Killian!\" she cried. \"Fuck your sunshine harder!\" \n\nAll his restraint vanished, her referencing herself as his sunshine a drug that drove his hips savagely against hers, their pleasure building together.\n\n\"Keep your eyes on mine,\" he said, a deep rumble making his chest vibrate. \"I want to see the orgasm overtake those beautiful blues.\" She didn't respond and he barked, \"Look. At. Me. Now!\" Emphasizing every word with his cock. \n\nHer eyes flew open and went in and out of focus as the orgasm ripped through her body, her walls constricting tighter and tighter until his body exploded, the ecstasy surrounded him like a cloud imbuing every second with bliss. \n\nKillian!\" she cried, her body bucking beneath him.\n\nWith one final thrust, he held himself there, and then he released her wrists. She wrapped her arms around him, her ragged breathing broken with an occasional spasm, as the aftershocks coursed through her.\n\n\"My Rae,\" he breathed, kissing her tenderly. \"I'm so glad your car broke down.\"\n\nHer eyes sparkled and she laughed lightly, the pall the intruder threw over their evening lifted completely. She ran her fingers through his hair and kissed him, making it impossible for him to stop smiling. He rested his head next to hers, his heart still pounding and his legs heavy. Rae stroked the back of his neck, her fingers drifting up and into his hair, the tingling sensation relaxing every muscle in his shoulders and back. \n\n\"If I don't move I may fall asleep like this.\" He smiled and kissed her one more time. Easing away, he grabbed the throw from the chair and wrapped it around her shoulders. \n\nShe smiled in response, and grabbing her clothes disappeared into the bathroom. He put his clothes back on and took care of their dishes and the leftover food. Making sure the alarm was on, he went back to the den. \n\nWhen she walked in, he was stretched out on the sofa flipping through T.V. channels. He held his hand out and she took it, letting him pull her into his embrace. He readjusted the pillows and wrapped an arm around her. \"Anything in particular you'd like to watch?\"\n\n\"Nothing comes to mind,\" she said around a yawn. \"Come across anything good?\"\n\n\"That depends on your definition of good.\"\n\n\"Wait, go back.\" He reversed course and she said, \"The Lion In Winter. Katharine Hepburn delivers every line with such relish, it's a wonder to behold.\"\n\nHe put down the remote and pulled her even closer. \"Why didn't you pursue acting?\"\n\n\"Life got in the way,\" she said absently. \"Watch O'Toole and Hepburn together, they're mesmerizing. No matter how many times I watch this movie I catch something between the two of them I missed before.\"\n\nHe kissed her cheek. \"I like hearing that excitement in your voice.\"\n\nAs the movie played she would point out a particular moment, or silently mouth Hepburn's lines, the hero worship in her eyes and voice obvious. He thoroughly enjoyed this side of her, completely relaxed, and fangirling over something she loved. He rested his lips against her head soaking up every moment of intimacy he could. He breathed in her scent, felt her warmth and joy, and listened to that voice he so dearly loved. She was a salve for his heart and mind, and he closed his eyes, promising himself he'd just rest them for a moment.\n\nRae felt Killian's arm get heavier. When she looked at him, his eyes were closed, his lips parted a touch, his breathing slow and steady. Her chest tightened, a chaotic jumble of emotions washing over her. But she didn't want to think, she just wanted to be. So she burrowed into his embrace, perfectly happy to pretend the world outside didn't exist. If only for a night."
    ],
    "authorname": "LucindaPaige",
    "tags": [
        "dominance",
        "nipple clamps",
        "submission",
        "bondage",
        "belt",
        "power",
        "oral",
        "love",
        "bdsm",
        "punishment"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/surviving-the-rich-sunshine-and-sir-ch-08"
}