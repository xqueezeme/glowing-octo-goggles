{
    "title": "Reign Pt. 03",
    "pages": [
        "Again, notice tense and POV changes. Let me know your thoughts. \n\nPart 5: Sir\n\nWhen I open the door, I'm careful to stay in the hall so that she cannot see me. \"Eyes stay closed.\" I flip the light switch off until the room is bathed mostly in darkness. I leave the light above her one dim.\n\nShe looks spent, and I smile because she has no idea what's coming next. I have no plans of stopping tonight, and I have a handful of surprises for her. I move next to the bed. There is just enough light on her body for me to see the glistening wetness coating her fingers and thighs. \"Give me your hand.\" She raises her hand in my direction, and I place her fingers in my mouth and suck. She tastes like fucking sunshine, tangy and sweet, a beautiful explosion that wakens my taste buds. \n\n\"I want to see you.\" Her soft whisper is barely audible. \"I want to see your face.\" I'm no longer wearing my mask. It came off when I removed my shirt. I'm not ready for her to see my full face just yet. There's something alluring in this act. Relying on your other senses to strengthen when one or more is compromised is something to behold. \n\n\"I know. And soon you will, love. For now, I am going to remove your mask. You will feel something silk take its place. You will be able to open your eyes, but you won't see anything. Understood?\"\n\n\"Yes,\" she answers, and I can almost hear her eyes roll with sarcasm. I lightly smack her sensitive pussy; she jumps, half screams and half moans. \"Yes, Sir,\" she corrects.\n\n\"Good girl.\" I grab the now tangled earbuds and work to untangle them. I remove her mask and place it on the nightstand. The maroon, silk mask is in the top drawer. I have kept this room stocked in the instance she was to return and say yes to me. I've thought of nothing else since my eyes met those ice blue ones her first night here. I carefully adjust it so that it fits snugly around the back of her head, but it's not going to cause her discomfort. \n\n\"I'm placing the earbuds back in your ears, and the music will turn back on momentarily. If you hear any echoes, here is the volume.\" I guide her hand to the side of the chore with the volume adjustment. \"The song will also be playing aloud in here. If at any time you are uncomfortable, want to stop, or you need a break, just say so. There is no specific word with me. No means no in all forms. Am I understood?\"\n\n\"Yes.\" I swat her pussy a bit harder this time, and she rolls her head. \"Yes, sir,\" she squeaks. \n\n\"You're learning quickly, love. Now, enjoy the music while I play.\" I turn the music on and debate my next move. \n\nLeah:\n\nI'm on this bed with my heart hammering in my chest. The soft tempo of the music fills my ears, and even though I'm blindfolded, I'm still trying to look around. Several seconds go by before I feel his warm breath on my breast. The tip of his tongue lightly glides over my nipple. I bite my lower lip, hyper aware of his presence but unable to hear or see his next move. I'm waiting to feel more warmth from his mouth, but on the same nipple, the one that is now slightly wet, he blows cold air, and it's a whole new sensation that makes me shudder. \n\nI'm ready to cum again. The thought hits me out of nowhere, and I take a few calming breaths. No other person has ever made me cum or even come close to it. And certainly, I've never been able to enjoy an orgasm without the use of my hand. The feeling is both thrilling and maddening. \n\nI'm caught up in my own head, and when I feel his tongue quickly flicking over my nipple, I moan, and I know it's loud. He doesn't stop though, and it certainly doesn't deter his efforts. To the tempo of the music, following the rhythm, he's flicking my nipple. When another instrument is added, he begins to use his teeth occasionally. He grips my nipple between his top and bottom teeth and gently bites before sucking hard at my growing bud. \n\nHe does the same to my other breast, and when I buck my hips, he smacks my pussy even harder. I never thought I would enjoy something so erotic. But the feel of his hand against my sensitive flesh, the stinging and the way it makes my nerves there stand out, it's more pleasure than pain. This man knows what he is doing, and he's not even finished with the appetizer portion of this delicious four course meal.\n\nAll too soon, he's gone, and I listen as a new song plays. It's slow but intense, jolts of sound crescendo in my ear, and I'm left anticipating. Something cold touches my clit. My hands reach below, but they are pushed away in warning. I let them fall to my sides and settle for clenching the sheet as something cold and wet runs up and down my clit. \n\nIce. He's using an ice cube on my overheated clit. Then the warmth of his tongue hits as he laps up the cool water mixed with my juices. His movements are slow and gentle, not quite in sync with the song, and it leaves my mind puzzled. I anticipated his moves to be perfectly timed with the music, but he's switching things, leaving me in a constant state of unknown. \n\nI don't expect his tongue to spear inside me, but when it does, I push into his face and reach wildly for his hair. He allows me to grip either side of his head but doesn't give me control of the movements, and I'm perfectly okay with that. While his tongue is moving in and out of my core, he's pinching and pulling at my clit to the point of almost discomfort, but I'm too stimulated to care. Every feeling is packed with such force that I can't tell one thing from another at this point in time. \n\nMy body is on autopilot, responding to his touch and skill. Jesus Christ this man is amazing. I pull on his short, black hair and hold on for the ride. The sensations swirl low in my belly, and I can feel my second orgasm coming close. \"I'm going to cum,\" I say. I don't even know if he can hear me or if I even used words. The music in my ears is louder and more frantic, chaotic. \n\nSir moves up my body, leaving me feeling sexually aroused and equally frustrated. His mouth finds my nipples once again, but this time he isn't gentle. Oh no. He tugs on them with his teeth, and I cry out. At first I consider telling him to stop, but then his mouth sucks my nipple and part of my breast into his mouth in a gentle, suckling motion. The song tempo has slowed down, and his suckles are turning into licks and sweet nips.\n\nWhen the song begins to pick up pace again, he does the same to my other nipple and breast. The pleasure pain and the gentleness take my body to the edge and back again. He is testing my response, seeing if I am learning to control my body's reaction. I don't know if not orgasming again is a good thing or bad because I feel him leave the bed. \n\nWhen he returns, he trails something soft down my stomach. It's not a feather, but it's definitely not a toy. There are strings of leather? The material is smooth against my skin, and when he gets to my pussy, he swats it with the toy. I gasp. There is a slight sting, but it's more pleasure than pain. A series of staccato notes fills my ears, and with each short beat of the music, he swats my clit. \n\nIt's starting to sting when he stops with the toy and plunges two fingers into my pussy. He fucks it mercilessly, just as he described in the vivid fantasy. His fingers move in and out until I shout my coming orgasm. This time, he doesn't stop. He continues and adds his other hand to my clit, flicking at the engorged nub. I come apart, my muscles gripping his fingers to the point he can barely move them in and out of me. \n\nHe leaves his fingers inside me for several moments as my body relaxes. I am in a complete state of bliss and euphoria. My eyes are betraying me as sleep threatens to claim, but I don't want to sleep. Not yet. I tell myself to stay awake, and then I let my lids close until my last memory is of Sir kissing my forehead and lips. \n\nSir:\n\nShe's absolutely drained, and it's clear that her body isn't used to this sort of...exercise. After her last orgasm, I cleaned her juices from my fingers with my mouth and showered her with kisses as she fell into a deep sleep. \n\nMy cock is protesting, still jutting out of my unbuttoned jeans hard and ready to go. I'm sitting in a high back chair in the corner of the room, sipping Scotch from the tumbler in my hand and watching her sleep. I need to check on things in the club. Diesel, my right hand man, is keeping things in order I'm certain, but the control freak in me can't go without ensuring things are running perfectly.\n\nI grab an iPad from the small drawer and check the security cameras. Everything appears to be running smoothly, so I send him a message to close up and give the staff an extra bonus tonight. The club is having a great night, and I believe is treating my staff with respect and offering fair wages. I don't have time to give a high rate turnover, so I run a well oiled machine, keeping the company and staff happy and content. \n\nI rarely have time to engage with the staff, but I do ensure they are doing what they should, and I reward them for their loyalty to me. This club was once upon a time a dream. My father, a scoundrel of man, took me to Vegas for my eighteenth birthday. The virgin in me was thrilled to be going to Sin City. Not only did he take me to an exclusive club, he booked me a room with three beautiful women. And twenty years ago, I gave them my virginity and probably the lousiest sex of their lives. I sure as hell wasn't complaining. I spent my college years fucking my way through classmates, professors, joining BDSM groups and visiting clubs in NYC. I loved it, lived for it. And then my father died. He left me his entire estate, as I am his only child.\n\nMy mother, a well-to-do fashion designer detested my father. She always hoped he would drink himself to death and exit from my life. Where she was prim and proper, my father was wild and untamed. He gambled, ran illegal businesses, and as great of memories I have of him, I know how fucked up he could be. I certainly inherited my mother's stiffness in the business world. I'm more like her than my father. \n\nI finished college with graduate studies under my belt. I run one of the most successful eco-friendly engineering companies in the world. I didn't work my way to the top. I started my business from scratch and never quit. By the time I was thirty, I had amassed a global, billion dollar company, but I wanted more. So I talked with Diesel, my father's previous business partner, and a less shady man. Diesel's loyalty is tried and true, After a year of planning, Reign was born, and my dream became a reality. \n\nI have always been able to fuck when I needed, how I needed, and then walk away. But the woman on the bed has bewitched me. I can't undo myself from her spell. I'm as intrigued as I am terrified. \n\nHer body stirs, and she moans. I walk towards her and kiss her lips. Any sense of sleepiness leaves her body, and she half sits and wraps her arms around my neck blindly. I chuckle at her eagerness. \"You seem to be rejuvenated,\" I whisper huskily.\n\n\"Yes, Sir,\" she answers, her voice filled with the same arousal humming through my body. \"I'm sorry I fell asleep. I didn't realize how tired I was.\"\n\n\"It seems that you aren't used to this, and I'm glad you could rest. Your body and mind cannot be present for what I have planned if you don't have the adequate energy. Tell me, love. What is it you want?\"\n\n\"You. I want you.\" I push her down and cover her body with my own, claiming her mouth in a passionate kiss. I grind my hips into her so that she can feel my cock against her core. We both moan at the contact. \n\nI pull back, and I begin to remove the blindfold. \"I believe, before we move on to the next part of my plan, that we should properly introduce ourselves.\" When the blindfold is removed, her eyes are open, anxiously waiting to see me. Those ice blue eyes meet mine, and a small gasp escapes from her lips.\n\nLeah:\n\nWhen he removed the blindfold, I'm more than ready. I've seen his eyes and mouth, but he's kept the rest of his face securely placed under a mask or with me blindfolded. \n\nHis piercing green eyes are the first thing I see, and then I take in his face. He's stunning. Hard jawline, and high cheekbones with a perfect, masculine nose. His handsome features make me gasp embarrassingly. \"You're beautiful,\" I murmur without even thinking. He smiles and kisses me. \n\nOur hands are everywhere. Mine are roaming his defined back, grasping his shoulders, and his are on my hips and waist, rubbing up and down as we kiss. This kiss is slow and gentle, it's snail pace compared to our previous ones, and it's just as amazing. Still, I'm impatient and want him, so I lift my hips into him, but before I can feel his cock he pulls up. \n\n\"Leah, I'm going to fuck you, and I'm not going to stop until we are both too spent to lift our heads. And even then, I'm going to fuck you more. If at any time you want to stop, say so. But know that while I am inside you, I call the shots. Your pleasure is mine. Am I understood?\"\n\n\"Yes sir.\" I lick my lips while he reaches on the nightstand for a foil wrapper. I take a minute to admire his chest and sculpted abdomen, that clearly looks airbrushed because no man should look that good. \n\n\"Good girl. Now, hands above you. Knees up, and drop your knees.\" I quickly obey him as he rolls the condom over her very impressive erection. Is that even going to fit? I wonder with a small jolt of panic. Fuck, he's huge. He grabs a long silk material and binds my wrists to the headboard. He ties it tightly, but it's not cutting off my circulation. When he sits back on his haunches, he's staring at my pussy. \"Fucking beautiful.\" He grabs the small tuft of hair and pulls it. \"I want you to keep this. Keep everything else clean as you have it, but this stays.\" I swallow the gulp lodged in my throat. \n\nHe doesn't lay on top of me as I expect, but he places his hand under each of my buttocks and lifts me to him. His cock teases my clit, and it makes me squirm. \"I want to hear you moan your pleasure when I'm fucking you.\" \n\nApparently he is expecting an answer because he pulls on the small amount of pubic hair hard, and I cry out. \"Yes, Sir.\"\n\nHe says nothing else as he lines his cock up to my entrance and slowly pushes inside me. He's not even halfway in, and I already feel full. \"Breathe, love.\" I hadn't realized I was holding my breath until he pointed it out. As I breathe out, he pushes the rest of the way inside my pussy and groans. \"Tell me when you're ready for me to move.\" I take a few breaths and nod. \"Words, love. I need words.\"\n\n\"Move, Sir. Please.\" That's all he needs as he pulls out all the way and slams back inside me. He does this in slow powerful movements, long stroking again and again. His hands squeeze my hips while he fucks me, and I can feel my body matching his rhythm on its own. This is sex. This is raw, pure fucking, and it's everything I never knew I was missing. My entire body is on fire, humming with pure, carnal desire. \n\nHe uses his thumb to rub circles on my clit, and my eyes roll back. \"Look at me,\" he commands. I bite my lower lip and stare into his eyes. \"I want to watch you cum. Do not break eye contact,\" he growls out between thrusts. \"Fucking perfect. Your pussy fits me like a glove. And it's mine. Do you understand? This pussy is mine.\" At his words, I come apart. I clench my muscles and stare into his eyes, the same eyes I picture each time I cum. The orgasm leaves me grunting and panting. I've never had an orgasm this good before, never. It's pure bliss, and I want more. My body is demanding more. \n\nHe pulls out of me long enough to bury his face in my cunt and lap at my juices. I'm a quivering mess, but dammit if I don't feel a second orgasm approaching. I have no other warning as I cum all over his face. My hands pull at the restraints, desperate to touch him. His dark hair is all I see, but I feel him everywhere. His hands are squeezing my breasts, and he's licking me from entrance to hood in long, languid strokes of his tongue. \"You taste like fucking sunshine, love.\"\n\nWhen he sits up, his face is shimmering with my juices. \"Kiss me, Sir. Please.\" He smiles and brings his mouth to mine. His clean taste mixed with me is pure fucking ecstasy. I don't feel him untying my hands, but I do notice them dropping to the bed. \n\n\"Now, I'm going to get something. I want you on your feet, standing. Lean over so that your stomach is lying over the bed, legs apart.\" I scramble to my feet before he is up, and it makes him laugh. \"Eager little thing, aren't you?\" I nod my head and fall into position. I feel his kisses on my lower back and his tongue tracing down my ass crack, a forbidden area. \"Soon, this ass will be mine. And now we start training it.\""
    ],
    "authorname": "RomanceErotic",
    "tags": [
        "dominant",
        "sub",
        "sex club",
        "hetero",
        "erotic"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/reign-pt-03"
}