{
    "title": "My Only Talent Ch. 06",
    "pages": [
        "Chapter 06\n\nHouston, We Have a Problem! \n\nI'm not sure when I went to sleep, but I do remember that I woke up, with Melanie, in Janet's room! At least, that's the way it seemed. The fact that it was also Melanie's room escaped me at first. Then the memories flooded back. As memorable as my going down on Melanie was, with her honey smooth skin and incredible tasting pussy that I had never before even dreamed of, her ability to fellate me knew no equal! She teased me, she took me up, she kept me on the edge, she let me drift back, and then she engulfed and devoured me! I felt like I was spewing my entire being out into her mouth, and she was sucking it out of me and keeping it, like savages believed that cameras captured their souls! And she did transform me into a savage, at least of the heart. She was a natural, a better cocksucker her very first time than thirty year old Mrs. Douglass, who I previously thought was the best in the world! \n\nMelanie was watching me wake up. My waking memories already made me hard, and she leaned over and took me in her mouth again. She was not shy. She took my whole length down and sucked so strongly that I seemed to grow even bigger and longer in her mouth. She took my dick out and sucked my balls, then licked me all over, then took my length again. I just surrendered to her. She kept me on the edge for a long time, then hopped out of bed and got on her knees next to me. She reached around and spread my butt cheeks and began to stimulate my ass. Just as I was about to lose all control, she pushed her middle finger about an inch inside me, and sucked me so hard I knew that resistance was futile. It felt like I shot quite a bit, considering that she had completely sucked me dry just a few hours before. I was just thinking how wonderful she was and how I would do anything to please her when her pussy landed hot and heavy on my face! \n\nShe tasted even funkier and better than last night, and I soon lost myself in her. I locked into her Suzie signal and tuned for maximum juice, hoping to give her so many orgasms that she would have to ask me to slow down. But her appetites were amazing. I reached up and squeezed her ass cheeks hard, and she loved it. I bit her outer lips; she loved it and came hard. I spanked her ass while I tongued her pussy, and she came. She moved up a little bit and pushed her ass onto my tongue, and I cheerfully devoured it. She was insatiable! I don't know how many times she came, but I loved them all. I was hard again and still crazed with lust. No Suzie signal could reach me; I was in the monkey zone. I threw her over against the cushions mounted on the wall above the dorm bed, spread her cheeks with my hands, and entered her pussy with a single hard thrust. I fucked her as hard as I could, not even thinking about her, just feeling her around my dick. She came, I barely noticed. I moved my legs up and got a different angle for even more penetration, and pounded her again. She came again. She was now breathing in gurgling gulps. \n\nI changed position again, and penetrated her ass for the first time! She screamed a little yelp, and even in my crazed state, I noticed that her Suzie signal stopped! Then it came back, slowly, then building, then louder than ever. \"Yes.\" she said. \"Yes\". I listened for her signal, and started fucking her ass. She loved it, and so did I. Slow and steady wins the race! She was keening and sighing when each slow thrust made it all the way home. I increased my pace. I was in my zone, and my dick was calloused and insensitive, and my orgasm was far in the future, but hers was not. Like Janet, she could come from direct anal stimulation, and she did. My balls were slapping her ass at less than one second intervals now, and I leaned over to get more force behind my thrusts. She took it all with ease, coming about every 20 strokes or so. Her Suzie screamed so loud that even I could not ignore it, and Suzie wanted it rougher, faster, and deeper. I pushed her down and slammed myself into her with maximum effort. I spanked her ass as hard as I could without losing my balance and falling off the bed. She was just about to come and I let loose at the same time, shooting up in her ass just as far as I could. She growled like a dog, and I felt a contentment signal from her. I stayed in her and began kissing her neck and shoulders. \n\nI was learning a lot more about reading Suzie signals each time I was with a woman. I was getting better and better as a receiver, and I had also formed the theory that the immediate post coital period was the most revealing of a woman's true nature. Janet and Suzanne sent strong contentment signals that would last as long as you continued to caress them or until they went to sleep. Lara would be content for a while, but then her crafty nature began to think about how she could get back on 'top' instead of submitting, but if I showed her I was determined to stay on top, she was secure and content again. Melanie was content for less than three seconds, wiggling her ass against me, and then suddenly I was surprised to sense graphic and urgent images of all the other guys she wanted to fuck! I was so shocked I was paralyzed into silence and inaction. I was like a passive sonar buoy, listening silently as my shock grew. She was sending images of having two guys, three guys, a dozen guys waiting in line to fuck her! She wanted cocks in her pussy, ass, and mouth and she wanted it hard and she wanted them to come quarts, and she wanted another guy to step in as each one in the first bunch finished. It was like a porn movie that was so far over the top that even the horniest guy wanted to look away! I know I did. The signals were pulsing, weird, and distorted like the Suzie signal equivalent of a drastically overexposed film or an Impressionist painting. \n\nThere was a pause in her signal, and I almost tuned out, but then I began sensing vignettes of Janet! First Melanie was gently kissing her, then kissing her breasts, then going down on her, and then they were doing a 69. Then Melanie was riding Janet's face, and then binding her, whipping her, and pissing on her! The more extreme the scene, the more distorted and overexposed Melanie's signals seemed to be! These signals were disturbing and disorienting. I shivered, and tried my best to shut them out. This was definitely 'the dark side of the force' and I did not want to go there. \n\nThen the signals stopped completely. \"Time for you to go home, Romeo!\" Melanie said, as she hopped up from the bed and headed for the bathroom, closing and locking the door behind her. I put my clothes on, yelled goodbye through the bathroom door, and headed out the hallway door, funky and stinky but very glad to be on my way! I looked at the clock in the lounge on Janet's floor as I headed for the elevator, and it said 9 AM. I hoped nobody got into the elevator with me, because I did not smell good, nor was I feeling very sociable. \n\nI made it back to my room without getting too close to anyone, or seeing anyone I knew well. I took two long hot almost scalding showers, and scrubbed myself obsessively for a long time. My body was red all over from the heat and the abrasion of the shower. I turned off the water, and just leaned against the tile wall. Normally I would be ravenously hungry at this time of day, but the last thing I wanted right now was food. I wanted to pull the covers over my head, play that old Eddie Arnold classic, and make the world go away. But I knew I could not sleep. Suzanne was still gone, so even through it was Monday we would not be running today. I pulled on my running clothes and went to the track like a robot. I did my stretching from muscle memory, and started around the track. Perhaps a runner's high would clear my head. Maybe running to total exhaustion would let me sleep. I trudged on mechanically with as little thought as possible.\n\nAt nine miles I was still numb. At ten, my erstwhile goal, I was flagging but still almost insensate. But by eleven I was about to drop dead! I forced myself to do the a sprint lap and a two laps of cool down jogging before collapsing on one the bleacher seats around the field. My breath came in gasps, and it took a long time for me to even get close to a normal breathing pattern. But still no runner's high, but rather an even deeper despairing low! I thought of Lara, her need for kink but simple honesty about it, the peace of her purity of spirit by comparison to Melanie but the accompanying threat to that peace that I felt from her Lara's accommodation and her possible need for steadily increasing kink. Should I tell her the truth about my fears, or should I continue my project plan to see if we could reach a balance that would work for us both? I realized that when I saw her this afternoon, I wanted to be held and comforted; I needed to be taken care of. I was not sure I could be as cruel as she needed me to be. But if I really loved her, I would find a way to please her, I should prioritize her happiness over mine. Suddenly my runner's high kicked in like a ton of bricks!\n\nI walked back to the room shaking from the endorphins and in considerably better spirits, and took yet another shower. My appetite had returned and I joined the lunch line as soon as my hair was dry. There were only a few other customers and there was a skeleton crew serving fewer choices than normal for the holiday, but there was enough to sate me for a while. I went back upstairs and brushed my teeth, and then started walked toward Lara's place, and I realized I had not done my homework. I had not given her instructions; I had not even looked at the project plan again all weekend. I hooked a left turn and headed for the giant chain drugstore just across the interstate east of the campus, as I racked my brain to visualize the Gantt chart in the project plan, and pull up some ideas from my notes. I would have to improvise!\n\nI walked down the aisle scanning the shelves for kink supplies and I found: wooden clothespins, some wrist sweat bands for improvised restraints, and a ten dollar ping pong paddle with little embossed studs sticking up from the rubber face. Maybe I can make this work. I have to do the unexpected. My previous pattern was to hit her hard and fast, get her high from the spanking and humiliation, get her excited, then get her off once, then go 'easy' on her and make her have several orgasms from 'regular' fucking to try and shape her to enjoy normal just as much as kinky. Today I would reverse that, starting sweet and loving, gradually increasing the stimulation to try to get her to come the first time 'nice' then getting kinky and rough and hopefully making her come several times. Or maybe I would just improvise the whole thing once I got there. \n\nI walked west back toward her apartment building, taking in a view of the Capitol at the same time, thinking there was probably a lot more debauchery under that dome than I could ever generate with Lara. Just south of me was the house one of the most infamous fraternities on campus, Alpha Gamma! The AGs were infamous for the most sadistic and disturbing initiation and hazing rights known to any college fraternity anywhere, not just at ESU. Their more benign rites were rapid alcohol consumption, ritualized 'buddy puking' and swimming through pools of excrement, urine, and semen. The darkest practices were said to include flogging, animal mutilation, bestiality, group masturbation, and some brutal homoerotic play. It was said that the only people who go AGs were legacies, and their ranks were constantly shrinking because of suicides and a trend toward failure to produce children. They were also reported to be incredibly narcissistic, exaggerating their own importance and thinking that everyone respected them and wanted to join their exclusive frat. They were the butt of thousands of jokes told by everyone else on campus. As I walked by their house I realized that one of their members, armed with a telescope, might be able to see into Lara's windows. I would have to come up with a new strategy for her humiliation, because these guys were just too big a risk. \n\nA few blocks further west, I knocked on Lara's door and had an instant, uncontrolled erection! I was suddenly so hard that it hurt. Lara opened the door in a tight white tee shirt tied up like a halter, and red short shorts with her blond hair up in two pigtails with red bows, and if anything I got even harder. She had apparently just finished carrying her suitcases up from the garage and she was 'glowing' rather than frankly sweating, and her skin was flushed and beautiful! She yelled \"Master, I love you!\" and enveloped me in a hug that pressed her magnificent breasts firmly against my chest and put her long arms around me so that each hand grabbed a buttock and squeezed it. I nuzzled my mouth under her neck and gave her a little hickey, then said \"I missed you, Lara!\" and she quivered in my arms. She kissed me full on the mouth and jumped up on me, putting her arms around my neck and locking her lags around my waist like the sexiest Indian wrestling move ever. Our tongues explored each other's mouths for several minutes, and liked what they discovered. I carried her over to the couch and realized it was the first time I had picked her up like that, and her Suzie signal soared.\n\nI gently caressed her breasts and tweaked her nipples, all the while alternating between asking about her weekend travel and kissing her. Her contentment Suzie kicked in, with a little note of rising excitement, but no hint of humiliation yet. The clarity and purity of her signals was in such sharp contrast to Melanie's. I held her arms captive and bit her nipples sharply, and her excitement signal awoke like sounding morning reveille at a summer camp. I untied her halter top and returned to gently stimulating her breasts while she told me about her trip. Her father was delighted with her grades, which were the highest ever, and she was delighted that she never missed any classes because she was always looking forward to the next day and week. Her father asked her what was different from her freshman year and she said she told him that she now had a boyfriend she respected and who could make her feel good instead of bad. She said her father was looking forward to meeting me this coming weekend. She said he thought most of her boyfriends in high school were 'spoiled wimps' and she mostly agreed. And freshman year, most of them seemed want to suck up to her father's money, which is why she started to see if she could dominate them, and discovered that she could make them her 'spanky bitches' and then she just abused them but never respected them. Just as her excitement signal began to fade a little I twisted a nipple hard. She drew in her breath sharply and I smelled a little of her perfect pussy scent in the air. \n\nI resumed gently caressing her and talking. \"I am so happy to see you. I thought about you first thing this morning.\" She smiled and cooed, but then her little crafty Susie peaked up a little bit, wondering if she could away with something. I led her on for one more second. \"I really like those pigtails and bows in your hair, they look perfect!\" She smiled but then the challenging Suzie started up, thinking she could twist me around her little finger. \n\nThen I dropped my pants, revealing my rock hard cock, grabbed one pig tail in each hand, and said \"Perfect that is, for fucking your little slut mouth!\" and rammed my cock down her throat! Her face turned red, her eyes got wide and her breath began to whistle through her nostrils. Oh man that felt good! I just fucked her gorgeous face, moving her head to get maximum contact with her throat and lips, and her blasting Suzie signal hit me right between the eyes. I looked in her eyes and saw panic, excitement, and most of all, lust. I know she saw lust in mine. \"Oh yeah, take that cock you little slut! Your pretty face looks even better with my dick in it!\" She began to slobber out of the side of her mouth. Beautiful! She could barely breathe through her nose, and then I took one hand off her pigtails and put it around her neck. I choked her and her Suzie peaked even higher. She was right on the edge of unconsciousness when I let go of her neck and she took a massive breath in through her nostrils and her Suze spiked like she almost came! Her throat quivered and grabbed my dick as she fought for breath. It felt fantastic. \n\nI put my hands back on her pig tails and pulled back a little, letting her suck only the tip of my cock, and spoke to her sweetly. \"That's good girl. Suck and lick, suck a little harder. Good girl!\" She groaned way down in her throat. Her excitement and humiliation signals harmonized beautifully. I looked into her eyes and tried to tell her with my eyes that I loved her. Her eyes got wide for a second, and then she sucked me even harder and I came in her mouth. I shot several times, she never broke eye contact and swallowed each time I shot. That's my girl! I just luxuriated in the feeling of her hot mouth around me, and she sucked even harder until I knew it was all gone. I leaned over her and kissed her, then undid her little shorts, delighted to discover she was not wearing panties. I lifted her legs up and spanked her ass very hard, until her butt cheeks were bright red, and then I said \"You can come now\" and buried my face in her pussy. I tuned into her Suzie and gobbled her nether lips, and she came. I waited out a little gap, and then sucked on her clit, and she came. I stuck my tongue into her as far as I could, and she came. I put two fingers in her, then three, and frigged her hard, and she came again. I picked her up again, held her sideways like a little baby, and carried her into the bedroom. Her contentment signal predominated, with some residual excitement. I retrieved my bag from the chain store, and carried it in and put it on the bed. I climbed up next to her and stroked her face, and kissed her, and held her and told her how wonderful she was. \n\nThen I had her get up on her knees on the bed and bound her hands behind her with the sweat bands. \"You make me so horny sometimes, you little slut!\" I pinched her nipples hard and her Suzie signal popped and sizzled like an old hot camera flashbulb. I took the clothespins out and began clipping them to her nipples. With each one that I added, a whole new section of her Suzie signal orchestra began to play. There were 12 clothespins in the package. I put one on each nipple, and three more clipped to bunches of skin on each breast. She was frantic with excitement. \"Look at you, slut! You are getting red and your nipples are hard and now you are starting to drip from that slut pussy!\" I swatted the sides of her breasts where they had no clothespins on them, and they swayed and she bucked and whimpered as the attached pins twisted and pinched her. I slapped the front of her pussy hard and her Suzie screamed out for more. \n\nI grabbed her face and said \"You are about to be punished for being such a slut! And don't you dare come until I tell you that you can!\" \n\nI spread her legs apart and began roughly pulled and twisting her pussy lips, both sets, until they were red and distended and hanging down away from her entrance. I pulled her outer lips way out and put one clothespin on each one, left and right, and then did the same to the inner ones. She made little noises like a ventriloquist and I could not even see her mouth moving. I slapped her breasts again and watched the clothespins move and pinch, then looked into her eyes and saw fear and lust, in equal proportions. Her Suzie signal said the same. I stepped back and circled around the bed, looking at her from all angles. She looked like the hottest raunchiest pinup girl ever! Her breasts were heaving as she took in big sobbing breaths. Her eyes were wide, and her pussy lips were like a bright red V handing down, supporting the light wood clothespins that swung with each breath. Her eyes followed me as I walked slowly around the bed, making her snap them around to track me as I did three complete circles around her. I could almost hear her wondering what would happen next. I had achieved surprise and excitement, now I should add slow anticipation, and let us both savor these feelings before the inevitable climax. I picked up the bag from the chain store, and looked into it like I could see something she couldn't. I shifted my gaze back and forth methodically between her ass and what was in the bag like a ham actor. She looked fearful, wondering what I was planning. She looked so hot!",
        "I reached into the bag, but pulled nothing out. \"Did you ever play ping pong instead tennis, slut?\" I asked rhetorically. \"The speed of the head of the racket is the key to the stroke.\" I said. She looked at me like I was crazy. And I was, crazy to take care of her, crazy to get her off! Her Suzie signal warbled and wailed. She was ready. I took out the paddle, and showed her the little rubber studs on it, then continued my discussion for her benefit. \"You know these are supposed to grip the ball and keep it against the surface for a little longer than just a plain surface would, and put a little more 'English' and spin on it.\" I pantomimed swinging it through the air, hitting things from various angles. \"I am not sure what they will accomplish when the paddle hits flesh. Maybe a traditional paddle with sandpaper on it would be best for whipping your ass. If I strike flat against the ass, I imagine you could feel the grit of the sandpaper. With this paddle perhaps you will feel the little 'mesas' on the surface strike just before the 'valleys?' Will the little rubber mesas vibrate against your ass, I wonder?\" I stroked toward her quickly, but stopped just short of actually hitting her. \n\n\"With a sandpaper paddle, if I hit a glancing blow at an angle, I imagine it would be like a sanding block, and a little bit of tender flesh would be sanded off!\" her eyes got big and her Suzie warbled. \"But with these little rubber things, will they be springy and let go, or will they sort of grip the flesh and stick to it?\" I made a show of measuring my position and lining up, and then delivered five quick, flat shots on each buttock. She quivered. There was a definite time course to each motion. There was a slap of the paddle hitting her buttock, then the shock wave making her ass vibrate, then making the clothespins on her pussy lips swing like little pendulums, and then finally the making the ones on her teats swing. The pussy lips swung back and forth faster than the more massive breasts. And just as I was getting fascinated with the frequency of the breasts swinging, another paddle strike hit her buttock and the wonderful little dance started again. I stopped after five strokes on each side and observed, like a careful naturalist. I needed a high speed camera to really study this properly. The first thing I noticed was that her Suzie signals continued to throb in time with both the motions of the clips on the nether lips and the motions of the breasts, like two little solos playing to two different tempos than the rest of the orchestra. Next I noticed that there was a lovely pattern of little red welts and white spots on her buttocks, a perfect negative of the pattern of little rubber protrusions on the paddles. Finally I noticed that there was thick gooey juice running down the insides of her thighs, and I was reminded of that old song that my parents used to play about a cake melting in the rain, but this concoction smelled nothing like sugary icing! \n\n\"You are such a dirty slut! I spank you to punish you and it just makes your little slut pussy drip with goo! I will just have to try harder!\" With that I delivered ten strokes per buttock, at a slight glancing angle. The pattern of welts softened and spread out, like using a blur tool in Photoshop. What a lovely canvas her ass was! Her humiliation signal peaked and topped out, but her excitement signal grew. It was time. I gave her ten more hard ones on each buttock, the grabbed her under her knees and pulled her ass to the edge of the bed. I pulled her legs up and with her arms pinned behind her she was completely helpless. I leaned down over her until my face was just inches from hers and focused on her Wedgewood blue eyes. I marveled at the little loops of muscle that corralled all those other little fibers around the edges, and then entered her pussy slowly while I watched her eyes. They pinpointed at first contact, and then widened and made little movements even smaller than a sideways glance. Her pussy felt like a hot water bottle with hot sticky jelly inside. I went all the way into her slowly and slowly pulled back out. I watched her eyes. They widened slightly as I slowly pushed back into her. I pulled back out and plunged in fast, and they got even wider. I tried to tell her with my eyes how wonderful she was, but this was not the time for tenderness. I began stroking her deep and accelerating my pace. Her Suzie signals said she was ready to come, desperate to come, but still I did not give her permission.\n\nHer eyes were almost begging me for release, but I had a plan. I pulled out of her pussy, rammed into her ass, and then said \"You can come, Lara!\" Her name was my keyword for normal, and slut was the keyword for kink. I was trying to keep strict discipline of kink for anticipation and excitement and normal for pleasure and release. I pounded her ass mercilessly and she came really hard, her pupils bouncing between slits and doll's eyes rapidly. I stood up a little and leaned over her to get even deeper penetration in her ass, and then held her glance. I pulled off the clothespins on the side of one breast and she gasped and came. I moved my hand to another and let her recognize and anticipate that I was ready to pull another one, and when her Suzie signal began to spike again and I pulled another clothespin off roughly. She came. When I had all the pins off her breasts except the ones on her nipples, I changed positions for a little more friction in her ass and then when I shot hard inside her I pulled both clothespins off her nipples and she came really hard. I had for four or five more quivering spurts in her ass, and they were reflected with quivers in her eyes and waivers in her Suzie signal, which was still predominately excitement, not contentment. So I went to the final stage of my plan. \n\nI pulled out of her ass and began to gently lick her pussy, using both hands to pull her outer lips apart with the clothespins. I could see my semen dripping out of her little pink rosebud asshole just below my face. I licked her outer lips on both sides as they were held up, and then slowly pulled the pins up an away until the lips popped free. She gasped, and came again. I looked back up and her and smiled, then grabbed the pins on her inner lips and made it clear what was coming next. I pulled them up and away and licked both sides of the distended lips. They were warm, red, wet and tasty. When the clothespins popped off again she screamed and came again. I waited out the one second gap in her Suzie and then clamped my whole mouth around her clit and sucked for all I was worth. She came and vibrated and pushed her hips against me. Her ass moved and I realized more semen was leaking out of it. She shook and I sucked her clit and she may have come again, or just jerked more from the same orgasm. The she drew a huge breath and I moved up to kiss her on the mouth. Just as our lips almost met she moved her mouth down and took my chin between her lips and sucked on it. I realize she was taking some semen that was on my chin. She sucked and swallowed with relish, and then kissed me deeply, with a salty aftertaste. I reached around and removed the bindings from her arms, and picked her up and held her and kissed her. Tears filled both our eyes. I laid her back down on the non sticky side of the bed opposite the huge wet spot, and wrapped her in my arms and kissed her. She sobbed, then broke from the kiss and said, \"I love you! I have never experienced anything like that!\" and held me. We kissed and cuddled and just smiled stupidly at each other for a long time. \n\nShe lured me into the shower and we washed each other and played with each other. I felt an incredible high. I knew I had made the right choice to please her, and I was now cautiously optimistic that my 'shaping' plan might work. She went into the kitchen and she made a Greek salad and some ice tea, and we ate and talked more about her trip and her father's upcoming visit. He liked to come early on a game day and walk around to see all the tailgate activity, then go into the alumni center and walk around, then go up to his seats at least an hour before the game. He entertained a lot of his sales force and business contacts at football games so he would have to devote a lot of his time at the game itself to that, but then he planned a dinner with just the three of us in the evening after the game. I asked if her dad had started dating again after her mother died, and she looked sad. \"Well, lots of gold diggers went after him, and it made him gun shy. He is so afraid that someone is just going to put the moves on him for his money that he is paralyzed. I don't think he is really ever going to be happy again until he finds a woman he can trust. And right now my dead mother is still the only one he trusts.\"\n\nThen she looked thoughtful, and continued \"My daddy is probably going to ask you the old 'what are your intentions with regards to my daughter' question, so I thought I would ask you what you might say.\" She looked apprehensive. I looked thoughtful.\n\n\"Well, I will tell him and you the same thing, the truth. I am not looking to get married to anybody for at least 4 years. But you are one of the most beautiful and exciting women I have ever met and I really care about you. I can't say for sure that I am in love with you, but I can't say I am not either. I'm still trying to figure all this out and see if we can make each other happy. But I want nothing but the best for you and would never want to hurt you.\"\n\nShe sighed and took my hand. \"That should be fine. You are so straightforward he will be able to see you are one of the good guys. I don't want to get married until after I graduate, and he doesn't want me to either. You are the first guy that ever 'tamed' me and did not let me dominate him, and you are the only guy to ever make me come, and you make me come like I never thought I could! You are the only man I have ever known that I would ever consider marrying, but right now I am yours to use any way you want and I am perfectly happy with that. I expect you are dating other women and that is fine, but I don't want to be with any man but you. And I do love you.\"\n\nI smiled and kissed her. \"Speaking of taming you, I am trying to understand what you need to get excited so I can please you. I don't want to go too far, but I also don't want to leave you lukewarm and unsatisfied, either.\"\n\nShe laughed. \"What you did tonight got me so hot I thought I would melt! I will dream about it again and again. I didn't know if you were going kiss me or slap me, make love to me or torture me! But you did all of the above and I loved it.\"\n\nI kissed her again. \"Let's set up a 'safe' word, where if I do something that you just don't think you can handle, you can say the word and I will back off.\"\n\nShe looked. \"OK, but I really don't think I will use it. I trust you to take care of me. You have already done things to me that I never thought I would like that I now dream about you doing again. About the only time I did not it like it was when you asked me what I wanted. I just want you to take me and make me do what you want!\" Her eyes were frantic. \"But if I need you to stop because I am having a heart attack or broke a rib or something, I will say 'Abilene' because that's where my mother was from.\"\n\nWe kissed and made 'normal' love again, and she had two shuddering orgasms to my one. Mine was a long time in coming and I slammed into her as a deeply as I could to get myself off, and she got more and more excited as I worked on her, but I did not detect any crafty signal at all, just excitement and the contentment. I wrapped her up in my arms in front of me and spoke in her ear \"I am coming back here Friday afternoon. I don't know the exact time yet, but I will text you with the time as soon as I know. I want you to make some special preparations. Look online for a tight leather hood to go on your head that leaves your mouth and nose and chin open but covers your eyes like a blindfold. It would be best if it had handles on top, to grab and easily move your head where it needs to be. Get it here by Friday. Start a liquid diet Thursday at noon, and buy two more enema kits to use Friday before I arrive.\" She quivered in my arms, like she was shivering and cold, but her Suzie told me she was hot! \"One minute before my arrival time, I want you to unlock the front door, and then put on your leather hood with the blindfold, and wear that and only that. Bind your hands behind your back and kneel ten feet from the door. After that, you will either be told what to do or it will just happen to you and you will have no choice. But I must warn you, it will be a whole level beyond what has happened to you before!\" Her Suzie signals returned with a vengeance: strong, vibrant, but with a heady mix of fear and humiliation. She had no idea what was ahead, but she knew she would do it for me. It frightened her and excited her in equal measures, which was the perfect mix for my plan. If I could make anticipation and trepidation substitute for actual raw kinkiness, I could get her hot enough to come many times without ever going too far. I gave her one more kiss and headed for the dorm.\n\nSince it was Monday night, I decided to review everything for my Tuesday classes. All was in order, with few assignments after exams at the end of last week. I confirmed I had done the reading for everything assigned on Tuesday, then remembered the short story from Rhetoric and Composition! Sarah's story was very similar to mine, except that her story went even further when Sarah, having been so stimulated and inspired by the TA's technique in cleaning my ejaculation out, insisted on returning the favor. So they both worked on getting me up again, and she used her hands to get me into the TA's pussy, and then cheered me on. In her story, after I came in the TA, Sarah went down on her and cleaned her up. Wednesday in class, I suppose my first question would be to ask the TA how the smoking cessation plan is working! I would also have to remember to remark to Sarah that her story was much more creative and inventive than mine, which must mean she was one of those 'smart girls' we spoke about. \n\nI hit the sack and slept like a baby, with no dreams that I remembered in the morning. I went to breakfast genuinely hungry, and maybe hoping to see Nora and explore things with her and Suzanne a little more. Not seeing her, or anyone else up as early as I was, I sat at a table alone and concentrated on the chow. At least, until Janet sat next to me and said \"We have to talk!\" I almost spit out my eggs. \n\n\"What the hell did you do to Melanie?\" Her facial expression made her look like a member of the Spanish Inquisition, about to go all medieval on me.\n\n\"Exactly what YOU asked me to, beautiful.\" I met her gaze evenly. \"What's the problem?\"\n\nShe paused. \"Because you fucked her and now she is all fucked up. She is not the same girl anymore. At first I was very happy to see all that Goth shit gone and I didn't even know she had nice clothes like that. She looked so much better.\" I smiled a twisted smile. She did look better, on the outside. \"When I told her how good she looked, she hugged me, then kissed me, then slipped me some tongue and grabbed my ass!\"\n\nI tried to look shocked, but I knew my Suzie signal early warning system had been right on target. \"Well, you are very attractive, and didn't you tell me that you might want to try it with a woman someday?\"\n\nShe laughed derisively. \"Be with a woman maybe, but be raped by a wild woman, no. She was more aggressive that some of the asshole frat guys I hear other girls talking about in the lounge. And it would be too awkward with a roommate anyway, especially if she was as demanding as Melanie suddenly is. Just exactly what happened with you and Melanie?\"\n\n\"You know I can't talk about it, anymore than I would tell someone else about what you and I did. Didn't Melanie tell you what happened?\" \n\nShe looked unhappy. \"She just said it was much better than she thought it would be and that you popped her cherry and then made her come, and now she thought guys could be fun, and she wanted more!\"\n\n\"You mean more from me?\"\n\n\"No, not you again, just more other guys. She asked me if I wanted to go pick up a guy and have a threesome, or two guys and have a foursome, or X guys and have an (X+2 some), because if she does what she says she wants to she will need algebra to calculate how many guys and girls she screws!\" My early warning was sadly prophetic. Janet looked thoughtful. \"I don't want you to get near her again, because after tonight she will probably have done five of those 'you don't know where it's been' kind of guys, and she will be a walking STD case study.\"\n\nI was not surprised, and I thought it might get worse before it got better, if it got better. \"I never wanted to create a monster, just get her over her distrust of men. But it does look like your plan backfired.\"\n\nShe was livid. \"My plan? You sorry bastard! You're the one with the overactive dick!\"\n\nNow I was mad. \"As I recall, it was you and Lou, coming up with a plan of what was best for Melanie, and I reluctantly agreed. It was not my idea, it was yours!\"\n\n\"You really are just another typical stupid male egotistical bastard! You can go fuck yourself, because you are never going to touch me again!\"\n\nI was stunned. I knew I really didn't understand women, and maybe never would. But wait, what was her Suzie saying? I tried to calm my emotions and just listen to her Suzie. It was saying it still wanted to do me. Maybe this was salvageable, but it would have to be on my terms. \"I still want you, Janet. When you are ready to apologize to me, I will take you back. Let me know.\"\n\nShe almost slapped me. She drew her arm back and then stopped herself, but her facial expression said she wanted to do a lot worse to me. But her Suzie was saying 'wait a minute can't we still fuck this guy?' She stood up, turned her back to me, and walked away, very fast and emphatically. The bad news is that I didn't think she was coming back. The good news was maybe I had a little more flexibility in my future scheduling. I really needed to get scientific on my scanner sorter system for Suzies!\n\nI made it to Rhetoric and Composition, and when I went through the door, I noticed that the TA did not reek of tobacco like she usually did. There was still some residual stink on her clothes, but her hair smelled nice and clean for a change. I saw Susan in the back and spoke to her just before class started. \"Your story was more creative than mine. I guess you really are one of those smart girls who make better lovers.\" She smiled and was about to say something when the TA called the class to order. She began with an analysis of a book I had finished and read lots of online reviews and essays about. It was hard to stay focused. \n\nI began to think about how to most efficiently use my talent to scan for and find really good women for me. How could I make sure to detect the 'next Melanie' before I slept with her? Janet's comments about STDs made me think, too. I needed to know how could I use my talent to assess the 'riskiness' if one girl over another. I knew my 'receiver' was getting better, but how could I measure that? Did it improve with the number of girls I listened to, or with the number that I slept with? Was it a linear relationship, or square, or a cube, or? How much better would I get over time? How much could I really tell about a woman from listening? Could I just tell about her sexual tastes and urges, or could I learn to detect other things?\n\nI forced my attention back to the class just as the TA was giving us a new assignment to go on a tour of one of the university collections that included many original manuscripts from great authors, and notes of how they planned and wrote their stories, and drawings and sketches they made. The idea was to get us to absorb some of their technique, and there would be a pop quiz next Monday that only people who had actually taken the tour could pass. ",
        "Ever compulsive to get my homework done so I could fully enjoy my weekend; I went over to the collection right after class, to see if I could fit a quick tour in before Engineering 101. There was no one around, from my class or any other, except a pretty girl with a name tag that appeared to be some sort of docent or guide, sitting at a desk near the entrance to the collection the TA had specified. She was wearing a very sophisticated and expensive looking sweater, blouse and long skirt, which was well chosen because even though it was still fairly warm outside, the air conditioning system seemed to have it down to just above freezing in this section of the building. As I approached closer, I saw that the girl was not just pretty. She had a strikingly beautiful, but slightly pudgy face, with deep brown eyes with a very intelligent expression. Her breasts were beyond voluptuous and Rubenesque to the 'BBW' and 'Juggs' magazine scale, and they obviously challenged the confines of her blouse and sweater, making it clear that she had huge pointy nipples and that they were hard as rocks in the cold air. I smiled as she looked up at me and got my first shock. \n\nShe projected the clearest, most beautiful, almost coherent Suzie signal I had ever encountered. It was just as sweet as the wonderful clear tones that Nora had been suppressing, but it was loud as hell and clear as a bell. It was the Suzie signal equivalent of a great singer with perfect pitch, really belting out a tune, and it was for me! It stopped me in my tracks for a moment. I smiled my goofy smile as she stayed seated behind the little desk, and she caught me looking at her breasts. Her face showed disapproval but her Suzie added an overtone of what sounded like desperation. Why would I girl with a face this beautiful and a rack like that have any knowledge of desperation? I finally found my voice and told her why I was there. She smiled and said yes, this happened every year, and that they were regular tours at posted times. I looked at the sign, and frowned, telling her they conflicted with my class schedule. She graciously offered to give me a private tour in the time I had before my next class.\n\nWhen she stood up I got my second shock. She had the biggest, boldest, bounciest, baddest ass I have ever seen in real life! It was beyond bubble butt to an almost cartoonish extent. It reminded me of that comedy sketch on Saturday Night Live where the whole family has huge butts, but it wasn't quite as over the top as the TV makeup. But baby definitely had back and back and more back! She caught me looking and I realized she had probably been teased about it her whole life. I just looked at her eyes and tried to say 'no offense', but then I got my third shock! I got an instant, pounding, pulsing, throbbing erection, and I was wearing my oldest and thinnest jeans and underwear. My erection showed easily through both layers of pants and was just as obvious as her nipples and perhaps more so. She looked down at it and then tried to look disapproving, but her Suzie signals were singing the halleluiah chorus. Almost involuntarily I pinged kissing her and she echoed. Pinged kissing her breasts and she echoed. Then I pinged a strong image of me pulling down that skirt and running my hands all over that giant ass, because my lizard brain wanted it. She echoed loudly. Then I sent and image of me dropping her big white panties to her ankles and kissing and licking her butt crack like a crazy man! \n\nShe said \"Oh God!\" and sat back down in her chair, almost fainting. Her Suzie signal was so loud that I didn't know how she could possible generate it. I read her name tag: Peggy Duchenne. I held out my hand and she took it: and then shock number four! When I touched her it was like a direct connection to her Suzie. No need for pinging and echoes, I could hear her signals in real time and down to the slightest nuance. She was sending multiple images per second like an old Frank Field short film, with the same frequency and lust as Melanie had, but all the images featured me, and Peggy, doing everything physically possible and a few things that may or may not be physically possible. And the tones and overtones were clear, harmonious and completely undistorted. I tried to stay calm. \"Shall we start our tour?\"\n\nShe used my hand to pull herself back up and began walking with me, I did not let go of her hand. I am not sure I could have. She had the tour speech down to a tee, and strangely enough my emotions were so engaged that I was able to easily remember everything she said. I saw original manuscripts of books so famous even I had heard of them all, plus a Gutenberg bible, and some really incredible art. All the while her Suzie signal was singing arias. I thanked her profusely and then asked if we could go out sometime and what kinds of things did she like to do for fun? She seemed to have a well rehearsed speech, and it went something like \"Oh, thank you I was glad to give you a tour and I am very busy and...\"\n\nI interrupted her. \"Peggy. I will just keep coming back until you say yes, so save us some time!\" \n\nShe smiled and said \"Do you really want to go out with me?\"\n\nI took her hand, which I was still holding, put it to my lips and kissed it gently, then I moved it down so that the back of her hand touched against my still hot and straining erection. She gulped and gave me her number, and said she liked to go to concerts, movies, and to go bird watching. I actually knew something about bird watching, thanks to driving my grandmother around to add to her species total. I told her I had to check my exam schedule but that I would call her next week to set up a date. She looked skeptical, but her Suzie soared again when I gave her a little pat on the ass as I left. \n\nI just made it to engineering and my erection slowly faded. Someone else presented an integral calculus review, but it did not sink in. I texted Oiler and he told me to come over tonight after supper. I hurried to the dorm, grabbed a box lunch, and changed into my running stuff. I was going to try to do 3 miles before Suzanne joined in, so I could establish ten miles total as my new baseline. I was feeling great by the time she joined me. \"Hey, Animal! How was your weekend?\" She looked even more spectacular than I remembered, and I was very glad to sense her pure and clear Suzie signal for me. \n\n\"Eventful and tiring. I had exams Thursday and Friday, but I got ten miles in on Monday even without my hot looking training coach to help spur me on. I already did 3 before you joined up, and I am trying to make ten miles my new baseline.\"\n\n\"Excellent! It will be good for you. Once you get up to 15 or so, you will be ready to try your first Marathon.\"\n\n\"Let's talk about Nora, threesomes, and risk versus return\" I said.\n\n\"Someone's been thinking. What brought that on?\" she laughed.\n\n\"I always think, but this time I believe I reached some conclusions that I want to check out with you. First, are you really super attracted to Lou Baby, or did you just want to dominate her because she was bitchy to you on the way to the lake party? And if you had a threesome with me and some other female, would you still want to dominate her?\"\n\nShe laughed. \"With Lou its 90% she's a bitch, and 10% she's hot, plus it feels much 'safer' to me to dominate the other female, at least for my first time around, plus it really made me hot when you told me what you and Kevin planned for Lou. I was actually a little jealous. Why, do you have another candidate?\"\n\nI laughed. \"Yes, but first the same question about Kevin for a threesome. Is he really hot from your point of view, or could another male be just as good or better?\"\n\nShe laughed. \"OK, but this is my last answer until you really explain yourself. Kevin seems safe because you seem to know him and trust him, especially after what you described for Lou. He's not particularly hot, but you did mention a 'big cock'? Now what the hell are you getting at with all this? What about risk and return? That I understand in the economic sense, but what do you mean?\"\n\nI ran for a minute and composed my thoughts. \"Well, let's say we want to maximize the sexual excitement and satisfaction we get from any threesome we do, while at the same time minimizing the risks of us contracting STD's, ruining our relationship, or getting involved with someone that we later find out is emotionally toxic. \n\nShe snorted. \"I concur, Dr. Roberts, please continue to elucidate!\"\n\nI snorted back. \"Don't you have to put one leg up on that little shelf in your shower for me to properly elucidate you? Seriously, though, you have heard the old saying about when you sleep with someone it's like sleeping with everyone they have ever slept with, from an STD point of view?\"\n\n\"Yes, and I think you know where you are going. I slept with one boy in high school and one here on campus before I started dating Mike and only Mike after that. After the accident, Mike got every blood test known to man, and so did I to see if I could donate blood or skin to him. So we know I'm clean. How about you, Animal?\"\n\nIt was a time for truth. \"I slept with no one while I was in high school and one woman the summer before I came here. I know she was clean because she was a surgical nurse and she got tested 4 times per year for everything, especially HIV and hepatitis. I have been with three other women besides you. Two of the three were virgins. The other one has been tested and is clean and she is not sleeping with anyone but me.\"\n\n\"Whoa, back up a minute. How old was the surgical nurse?\" \n\n\"Thirty. She was a 'friend of the family\" who had been widowed for three years.\"\n\n\"Quite a friend, I'd say. So she was like your 'sex teacher'?\n\n\"Yep. My parents made me promise to stay celibate until I was eighteen, which was in late May. Then I slept with this woman every night for three months, until I left to come here to school. \"\n\n\"Wow! Did she teach you ass worship?\" Suzanne laughed. I just smiled knowingly. It made my point.\n\n\"OK. So how do you know these other two were really virgins?\"\n\n\"Felt the pinch and saw the blood.\"\n\n\"You really are full of surprises. Did you sleep with them after that first time?\"\n\n\"One yes, and one no. But I'm not seeing either of them anymore, and they haven't slept with anyone else since me.\"\n\n\"So, one of them needs to be tested to be sure, plus you, but it sounds like pretty low risk.\" She looked thoughtful. \"So if we introduce Lou or Kevin into the mix, it is a whole new set of risk factors, yes?\"\n\n\"That's the way I see it. Kevin is doing wild frat stuff and trying like hell to get laid all the time. So far I think Lou is the only fish he has actually landed, so to speak, but that won't be true for ever. And Lou is a junior who is in a party hearty sorority, so it is highly likely that Kevin is not her first, by any means. So bringing either one of them into the picture is like doing both, and increases our risk level way above where we are now. So any threesome with them means much more risk\"\n\n\"When you are right you are right. But there are no zero risk choices out there!\"\n\nI paused. \"If you are talking about zero marginal risk, there is one.\" She looked shocked.\n\n\"Now that is something I think I know something about. Please explain.\"\n\n\"We can have a threesome with a submissive female for zero marginal risk.\"\n\nShe looked very thoughtful. She was working through the possibilities in her head. \"So that female must be the one you are still sleeping with, and since you have already slept with her and me, and assuming she is really not doing anyone else, we are not taking on any additional risk?\"\n\n\"Right the first time, beautiful! Smart girls are always the best.\"\n\n\"Not so fast. If we are being scientific, let's do the payoff matrix also. How hot is this woman compared to Lou?\"\n\n\"Oh, so you are a lusty lesbo who wants to be scientific, too! OK. By first impression or looking at pictures, Lou is and 8.5 and this woman a solid 10. But since I know how hot this woman really is, not just how she looks, I am no longer objective, but she ranks way above a 10 on overall hotness, trust me.\"\n\nShe looked funny. \"What did you rate me, based on first impression?\"\n\nI smiled, \"10, but now I know what you are like and you are above 14 on the hotness scale, and I can no longer judge you objectively just based on looks.\"\n\n\"Well, Mister Hotness Judge, what does this woman rate on the hotness scale?\"\n\n\"Also 14 plus. You are two are easily the hottest women on campus, if I do say so myself! Yet totally different in appearance.\"\n\n\"Do tell. Go on; describe us both like you would to some horny frat guy.\"\n\n\"Well, I would say that you are dark and dusky, petite, beautifully muscular, ultra fit, with a beautiful face and world class body, especially your legs and ass, and that you could have walked right out of the Sports Illustrated swimsuit issue, except you are probably fitter than most of those models. She, in contrast, is six foot tall in her stocking feet, blonde, blue-eyed, voluptuous, also beautiful, not as fit as you are in terms of endurance, but still literally a champion athlete in her sport.\"\n\nShe looked thoughtful. \"You are doing quite a sales job. How do you know she would agree to a threesome, especially how do you know that she would be submissive to me?\"\n\nI smiled. \"She already has. Not with you specifically, but she is my sub. She will do anything I ask, without hesitation.\"\n\n\"So she is like a sex slave to you?\"\n\n\"Yes. She willfully submits to me because it gets her hot to be scared and humiliated, and then once she gets hot, she can get off.\"\n\nTime really flies when you are talking about threesomes! We only had a few laps to go. Suzanne asked \"Is it like in the porno DVDs, does she get off on being whipped and hurt?\"\n\n\"Not exactly, but all that stuff can get her excited enough that then sex acts can then get her off like crazy. But you can combine the two.\"\n\nSuzanne looked very thoughtful. \"I have lots more questions, but we don't have much more time. When would be our first chance to do this with her?\"\n\n\"Friday afternoon.\" \n\nSuzanne looked shocked. \"You mean the day after tomorrow?\" Suddenly her Suzie signal spiked big time. It had all been academic until this instant. But now it could be real.\n\nI pressed her a little. \"Let's get a few more issues on the table and then talk again after we have a chance to think. I think we could find another guy that would be lower risk than Kevin, and still be as hot or hotter from your point of view, so think about what your 'specifications' are for that. Finally, we have another female candidate that is not zero risk, but I think very low risk, and potentially very high return: Nora Upmann!\"\n\nSuzanne stumbled and almost fell. Her Suzie went absolutely wild. \"But you said she said she had never been with a girl!\"\n\n\"She hasn't. But I think she wants to start with you, and I think she wants me, too. But she has trust issues, big ones. I think we should get her right in between us and tell her we both care about her and we both want her, and that she has to take a risk and trust us. Then we do our best to get her off like she never had it before. And our window of opportunity only goes through the end of the spring semester, then she is off to MIT, or The Sorbonne, or whatever, for her doctorate!\"\n\nWe hit the sprint lap, and Suzanne did not talk, but I could tell she was thinking hard. She stayed silent thought the first cool down lap, and then she spoke. \"Nora would not be submissive, would she? It would be on an \"all three are equal\" basis. Right?\"\n\n\"Yes. I wouldn't want it any other way.\"\n\n\"And with your sub, she would be submissive to me?\" her legs quivered and her Suzie signals warbled. \n\nI looked at her for a moment. \"If I tell her to then she will. Or, you could both be submissive to me, or you, Suzanne could be submissive to her and she to me! What floats your boat? Her Suzie signals looped and popped and sputtered like an overloaded electrical grid. Then sweet little Suzanne got herself another prominent spot in my girlfriend hall of fame, when she said \"Actually I could see myself enjoying all three. But for the first time, I would want her to be submissive to me.\"\n\nWe finished the final cool down lap. Suzanne looked at me and said \"You are a horny little son of gun, but it turns out that I am to. Let me think and then we can talk some more.\"\n\nI kissed her and said \"You already know what you want, Suzanne. And I want what makes you happy! I thought you economics types were all about decisions.\" I watched her delightfully walking away.\n\nI scarfed down my box lunch on the way to the room, and took a quick shower. I just made my first afternoon class. Both of my afternoon classes piled on the homework. I got back to the room, and started in on my homework, intent on knocking off a few items before dinner. Then Kevin came in.\n\n\"What the hell happened with you and Lou's friend? Lou says she gave up being a Goth, but is now some kind of sex maniac, and it is entirely your fault!\"\n\n\"Lou and Janet both asked me to take Melanie's virginity. They thought it would help her, but I don't think it did. And Melanie agreed to it, too, so I'll take 1/4 of the blame, but that is all!\"\n\n\"Lou said Melanie almost assaulted Janet, and that Melanie has already brought two strange guys back to the room and fucked them. Janet had to study in the floor lounge this afternoon. Janet wants to move out, and Lou says they should have you arrested!\" Luckily I had the signed consent form. I called Janet. I got the message that says something like \"At the request of the subscriber, we cannot complete your call.\" Holy Shit! Now I was upset again. I called Melanie's cell, and got her voicemail. There was a new greeting, delivered like a vampy sing song poem: \n\n\"This is Melanie Manchester. Hopefully, I am getting fucked and how; And cannot answer your call right now; If this is a booty call, leave your number; Because I can take it all, and I'm a real comer!\"\n\nI may not be a licensed psychologist, but I think Melanie had switched from punishing her parents by being a Goth, to punishing them by being a slut! Not an improvement. I walked down to Janet's floor, and saw no one in the lounge. I walked on to the room and heard what I assume was the sound of enthusiastic fucking, accompanied by Melanie's loud and profane narration. But then I detected something much more awful and terrifying: the most discordant, off key, horrible set of Suzy signals I have ever heard! They were the Suzie equivalent of a dozen big fingernails on a blackboard. I could detect some normal excitement and desire in their somewhere, but it was almost blotted out by the other signals. It was like a tumor taking up all the space and blood supply in the body and displacing and starving the normal organs. \n\nMy parents both had early responder training for emergencies, and I knew they would recommend an early intervention. I could only think of one thing to try. I knocked on the door and tried to disguise my voice and lowered it two octaves. \"Ms. Manchester, this is Mr. Mumble from the university facilities office. Your parents are here to see you, and I would rather you open the door than me opening it with a master key!\" \n\nThere was some shuffling and movement inside, then I heard Melanie say \"No, stay right where you are!\" If my theory was correct, Melanie would be happy to have her parents view the scene she was creating, and the more lurid the picture the better. The door swung open. Sure enough, Melanie was naked, and so were the two guys she was with. One of them looked to be about 40, the other about 30. The both looked like 'urban outdoorsmen' to use the politically correct term, and they smelled of rancid perspiration, patchouli oil, marijuana, and a few other things I did not recognize. She probably picked them up on the commercial street just off the western edge of campus, where they panhandle when they did not have money and bought dope when they did. Janet kept a tennis racket on her bookshelf, and I picked it up and got ready for backhand and forehand drills, and said \"Take a hike, now!\" ",
        "The older one, who seemed less stoned, grabbed his stuff off the floor and booked it out the door. The younger one, who seemed really messed up and still had a greasy erection, too, took a step toward me instead of the door. A quick backhand eliminated the erection immediately, and brought both his hands down to cover the affected area. The return forehand whistled onto his left buttock with a resounding smack, and he began to consider an early exit! But he did not do it quickly enough to avoid another backhand that whistled past his groin, deliberately missing it, followed by another forehand smash to the ass. He shot through the open door. I kicked his stuff through it behind him, and closed and locked it. I put the racket back on the shelf. Melanie looked at me with a shocked expression, and then her face twisted into a snarl! I was not ready for any more bitchy criticism, but I was also at a loss for words.\n\nSuddenly all my anger and disgust boiled to the surface! I was terrified by the dark and awful signals that I had heard from Melanie, and my emotions were whipped to a negative frenzy by the look and smell of the two guys that had been on the bunk with her. I was disgusted with her parents and stepfather that had messed her up so badly, and I was mortified by the way she had chosen to deal with it. I was disgusted with myself for not seeing the problem beforehand. My adrenalin reaction after driving off the two guys was still coursing through my veins and a part of my little monkey was really sorry they did not stick around to get killed. Somehow I bundled all this up in one big ugly package and sent out the mother of all Suzie signal pings, directed right between Melanie's ears! I sent my disgust and revulsion, I sent images of her and Janet being gang raped in an alley by more like the two losers that were just here. I sent images of the diseased, deformed or dead children she might never have. I sent the vivid and disgusting color images of primary, secondary and tertiary syphilitic lesions that I suddenly realized that my parents had used to keep me celibate for so long. I sent images of Melanie drunk and filthy and dying in the gutter as other people's healthy children walked around her, and I sent my fear that she would destroy herself to get revenge against her parents instead of just getting away from them. I visualized all these awful images coursing through her brain and shorting out all the evil connections and breaking open a path for new ones.\n\nHer expression changed from an angry snarl to awful pain. The blood left her face and she burst into tears and fell to her knees. I sat on the floor next to her and she sobbed and keened and rolled into the fetal position with her head on my leg. She rocked and cried and cried and my pants legs were soaked with her tears. I put my arms on her shoulders and tried to shush her like you would a crying child, but she was inconsolable. I don't know how long I sat there, but it got completely dark outside, and still she sobbed and rocked. Then I heard a key in the lock, and I hoped it wasn't the campus cops coming to take me into custody. The door opened and a girl I did not recognize peeked in, with Janet right behind her. Janet started to yell, the other girl, who turned out to be the RA for the floor, said \"Hush, this is the guy that ran them off!\" Janet quieted down and then they both came in and closed the door behind them. Janet sat on the other side of Melanie, and when Melanie recognized her, she said \"Oh, God, Janet, I am so sorry\", and then returned to sobbing. \n\nJanet took over holding Melanie's head off of the floor and I stood up to talk to the RA. \"So you saw the two guys?\"\n\n\"Yes, real fine citizens!\" she said \"and they were surprisingly fast!\" I told her we needed to get Melanie medically checked for STDs and any other damage right away, but we could not allege rape because she probably had invited them in. She said she understood, and would take care of that and the paperwork needed. She and Janet got Melanie up and took her into the bathroom and started up the shower. I picked up Melanie's phone and tried to change her voicemail greeting. Luckily her password was 1234, and I deleted the greeting so that it reverted to the carriers' pre-recorded message. I put the phone in the charger on the desk, and realized that I was suddenly just barely able to stand up! It had been a disturbing afternoon, and I had missed dinner, too. \n\nI stumbled to the elevator and went back up to my floor, getting some peanut butter crackers at the vending machine and drinking a lot of water directly from the faucet in the bathroom. I stumbled onto the bed and fell asleep in my clothes. I didn't even notice the text from Oiler asking where I was, and did I still want some calculus help?\n\nMy alarm went off at the 'regular' time on Thursday morning, but I felt anything but regular. I did feel really hungry, even more ravenous than normal. I know I had run a lot, but I think sending that big Suzie ping was more tiring than the running! I had a strong desire for protein, and I really chowed down at breakfast, and did not notice Nora until she touched my shoulder. I jumped.\n\n\"Hi.\" She smiled so beautifully. \"How are you doing?\" \n\nI detected some of those sweet but muffled Suzie notes from her. I smiled at her, and I realized that just seeing her made things better. \"I had a rough day yesterday. Classes were okay but I got thrown off my routine and I am having trouble waking up.\"\n\nShe touched me shoulder. \"Me too, having Monday off always seems weird. Yesterday I decided to take nap before supper and had a nightmare. I woke up in a cold sweat. I was dreaming about dead babies and young girls laying in the gutter, and sick people with leprosy or some kind of bad skin disease. It was awful!\"\n\nThat timing and imagery could not be a coincidence! I decide to change the subject. \"Let's talk a little more about our 'talents'. If you opened up all your signals to me without blocking anything, would I be able to tell how you really feel about me?\"\n\nHer eyes went wide. \"Yes, I suppose so.\"\n\nI continued \"And if I sent you all my feelings, could you tell that was genuinely the way I felt about you?\"\n\n\"Yes, I think so.\" She sighed.\n\n\"Well, I'll show you mine if you'll show me yours!\" I touched her shoulder tenderly.\n\nShe looked like she was about to cry. \"I wish it was that simple\" she said weakly.\n\n\"It is that simple, and it's also a risk return matrix. We can't have a wonderful relationship unless we take a risk and open up a little bit! I tell you what, I will show you mine and then you can decide whether or not to show me yours!\"\n\nShe looked scandalized. \"But you and I are not the only...\" She stopped as I limbered up my sender and let her have it. First me tenderly kissing her lips, then she returns the favor. She quivered and some Suzie signals leaked out, but her face looked guilty and worried. Then I sent an image of Suzanne kissing her tenderly, and she kissing Suzanne. Her eyes suddenly dilated in surprise. Then I sent all three of us together, gently kissing each other around and around in a circle. She drew in breath and a strong, beautifully formed Suzie signal popped out. \n\nI asked her \"Are you letting that out or did it just get out without you meaning it to?\" She looked panicked. \n\n\"I am doing my best to hold it in!\" She shook and sweat broke out on her brow.\n\n\"You know Suzanne and I both think you are wonderful, and we both want you to trust us. Can you do that?\"\n\n\"I have been trained so long not to trust anyone that it has become automatic!\"\n\n\"Let me ask you this: are there any other risks other than somehow destroying your existing relationship with both of us? \n\n\"Is that all! I would be devastated if that happened!\"\n\n\"But not moving forward is a risk, too! And we have a limited window of opportunity. You will be going somewhere else for your doctorate. We do not want to miss out with you!\"\n\nShe looked panicked again. I needed to go, but I added \"We need to sit down together, the three of us, and take some time to talk this out.\"\n\nShe looked frozen again, and said nothing. I had to talk to Suzanne and work out a plan.\n\nMy Thursday classes were routine, and I was starting to get back on track. By dinner, I felt like I had a handle on everything and was ready for Friday, except for calculus. I suddenly remembered Oiler. I texted him, and he said come by tonight after 8. I was famished again by dinner time, and I was there when the line opened up. I went through the line three times and finally felt full. I took a nap, and then I ambled over to the 'UDP Port' for a little calculus help. \n\nOiler came down from upstairs when I showed up at the door, and took me back to a big room with a pool table. There was a really hot looking girl playing pool with Oiler. I had never seen her before, because I would have remembered. She was not sending a thing for me or for Oiler, but she knew how to play pool and to look hot as hell doing it. Every time she leaned over or bent back for a shot either her breasts or her inverse heart shaped ass was prominently displayed. If she was a pool hustler she would definitely be able to completely distract and befuddle almost any guy. \n\nOiler introduced me to Esmeralda Estigoy. She was roughly Suzanne's size and complexion, but with very exotic features and a flashing smile, and she was graduate student in mechanical engineering! She walked me through all the physics of the game of pool, based on conservation of energy and described everything with equations. Then she began to set up particular shots and ask me what would have to happen to make the shot work. We described the requirements and then we set up several simultaneous equations and put them on the white board for solution. She stepped from the simple to the complex, but all of them involved at least two integrations to solve. She walked me through them just like Oiler had, and made me answer all the questions for myself, and then demonstrated the shot for me. It seemed like each more complex shot required her to lean over further and show more leg or cleavage to demonstrate it. I wanted to keep that progression going. My mind was racing to the next step. She smiled every time I got a right answer, and then she would unbutton another button or hike her skirt a little more, as if to say \"if you get this one, I'll show you this!\" When I would get the answer, she would catch me looking and just smile at me, but she was leaking Suzie signal excitement. I began telling her how hot she was and how wonderful a teacher she was and her excitement signal leaked even more. I tried to focus on her modulation and got glimpses of her and a blond haired older man. When I got through the final problem, a complex Masse' bank shot, she grabbed me and hugged me. Two things happened at that point. Her hard little nipples pressed into my chest, and my hard cock pressed into her thigh. We both felt them clearly. She leaked anticipation and excitement, not for me, but for the older guy. Suddenly I got it! She was looking forward to telling him about flirting with me, because it would get them both hot!\n\nI smiled and thanked her for one of the most enlightening and enjoyable science lessons ever, and told her that I had never known math could be so stimulating. She laughed and said she hoped that I enjoyed calculus more in the future, and I winked and said that I hoped that she had a great story time at home tonight. Her jaw dropped and her eyes got huge and simultaneous embarrassment and excitement signals came through strongly. \"If you ever need to craft some even more exciting stories to tell, I will be glad to help!\" I grabbed her ass under the pool table and give it a little squeeze as I kissed her cheek! Even with her dark complexion, I could see her flush, even if I couldn't have heard her gasp. Her Suzie signal sounded loud and clear. She looked at Oiler, and he said \"I told you so!\" She said she had to go, and hugged us both, and we both watched her walk away until she was out of sight. \n\nI looked at Oiler, and he said \"I know, I know, she is as hot as a string of firecrackers, but we are just friends. I have known her since fourth grade. She is totally in love with an associate professor of Education. They are engaged.\"\n\nFirecracker was exactly the right image for her. \"What did you mean that 'you told her so'?\"\n\n\"I told her about you finding Gretchen for me, and pointing out some girls to the other guys, and that you seemed to have remarkable insight into females. She was really giving you the prick tease treatment, but that's one of her boyfriend's theories: people learn better if you involve their sex drive!\"\n\n\"Well it certainly worked for me. I will never feel the same about integral calculus, and I will never forget the basic physics of pool. I desperately wanted to get each new problem right, and maybe she would show me a little more hotness! What does he call his theory?\"\n\n\"He calls it 'monkey vulva something', but I don't remember exactly. I'm sure she will tell him all about it how well it worked for you tonight!\"\n\nI was certain she would tell him that, and a few other things, too. Oiler went on tell me about his beautiful tall Gretchen and how wonderful she was and how great they were for each other. He told me to be sure to plan to come to the big Halloween party at UDP, because it was the event of the year, the costume contest was always spectacular because the women always tried to 'out sexy' each other, plus they had a new band playing that was going to blow everyone's minds. I thanked him again and he slapped me on the back and said anytime, and reminded me to come by the UDP tailgate BBQ if was going to the game Saturday. \n\nI slapped him on the back for a change and headed back to the dorm. I looked over the calculus material for Engineering 101, and it made sense to me now. I double checked all my homework and everything was squared away. I went to sleep feeling better than I had since the Melanie meltdown, and I hoped she was okay. \n\nI awoke hungry and horny, so the morning felt normal and good. I got to Rhetoric and Composition; the TA continued to smell better as I passed by on the way to my seat. It must be a new outfit, too, because there was no lingering tobacco smell on it. Sarah was already there and asked me to come with her for a minute, and she took me by the hand. There were some other students around the TA's desk, so Sarah had to play it 'straight'. \n\n\"Hi, Ms. Wyrickie. We just wanted to see how the smoking cessation program was coming along?\" She did put a lot of emphasis on the word 'coming' but I think only the TA noticed it. Sarah moved us closer so we simulated standing above her, even though she was sitting and not on her knees. \n\nMs. Wyrickie looked nervous but held our gaze. \"So far, so good\" she said. \"One day at a time.\"\n\nSarah smiled. \"Some of the people I know that have quit tell me that in only a few weeks, things really taste better!\"\n\nMs. Wyrickie gulped out loud. Sarah smiled and led me back to our seats. Class proceeded without incident after that. On the way out, Sarah mentioned something about supplemental motivation.\n\nProfessor Lillehammer was in fine form in Engineering 101, and waxed eloquent about the importance of melding theory with practice and learning from real live examples. I was sort of drifting off and he must have caught me, because he said \"Don't you agree Mr. Roberts?\"\n\nI managed not to say 'what' and instead just said \"Yes, Sir.\" \n\nHe was not finished with me. \"Perhaps you would lead us in an integral calculus review for the rest of the class, and include real world examples we can all hang our hats on?\" There was laughter and some 'ohs' and uh-oh's from the class. I stood and walked to the board, and I noticed there was a nice looking dark haired girl in the front row. She was not as hot as Esmeralda, but she did remind me of her, and she was smiling at me (or maybe laughing at me!), but not sending anything for me. \n\nI began putting the billiards equations of motion and conservation of energy and resulting problems on the board, and began working through them as Esmeralda had taught me. I found myself looking at the dark haired girl in the front row and hoping she would lift her skirt or open up her top button on her blouse, but no luck so far. But every time I completed a problem, I remembered Esmeralda and got a little more turned on. During the next to the last problem, the girl in the front row slid down in her chair, which exposed about 50% more of her legs below her short skirt, and they were pretty nice legs. Just as I started the last problem, she shrugged her shoulders and her little blouse slipped down, exposing one shoulder, her long neck, and the top half of one breast right down to the top of the nipple. Uh-oh. Suddenly her unintentional display and the memories of Esmeralda started the tide rising in my pants and I could do nothing to stop it.\n\nI pressed on with the solution to the final set of equations, but that necessitated me turning to the board and back to the audience, and the side view made my problem the most obvious. The girl in the front row was holding her hand over her mouth, but was staring right at my crotch, and I noticed most of the other girls looking too. Most of the guys were looking away and pretending there was nothing to notice, like I was. But a couple were not looking away at all, and I was able to identify Suzie signals one a 'new wavelength' that I had heard before but never identified. I finished the problem, and without thinking of the consequences, I asked if there were any questions. A girl in the back immediately said, \"Does calculus really turn you on?\" and the entire class guffawed. Lillehammer dismissed the class and I stayed at my seat until everyone else had left.\n\nThis, plus my new goal of completing 3 miles before Suzanne arrived, meant that I had to skip lunch altogether and just change clothes and start running quickly. I stretched and hit the track, trying also to run at a slightly faster pace. Suzanne joined at 3 miles, and I was feeling pretty good, especially to see her. She started the conversation before I could. \"I had a talk with Nora. She is still struggling. She said she had some trust issues in general and with what her family taught her about men and sex in general. She wants us back off and give her more time. She is going home over Christmas break and she implied she would have to talk to her parents about 'family traditions' whatever that means. So she will come to us at the beginning of next semester to talk some more.\"\n\nWe continued running. My father, the master salesman, had taught me that sometimes you have to let the customers close themselves. I waited for it. She began. \"Tell me what will really happen if I was to 'help' with your submissive girlfriend?\"\n\n\"Well, I have a general plan for her to give her escalating 'kinky' stimuli to get her excited, and then give her 'normal' stimuli to get her off. The kinky stimuli generality involve humiliation, like verbal abuse, or performing degrading or forced sex acts, or embarrassing exposure, or pain, like spanking, whipping, or pinching. The sex acts are usually pretty normal, but with lots of accompanying talk, extra force, or in combination with pain. She is not allowed to come until I give her permission, so the tension builds up, and when I do let her get off, it is usually pretty intense. After she comes, she feels not just normal release and relaxation, but a huge endorphin rush and a wave of happiness and contentment. During that period, there is lots of hugging and kissing and normal 'cuddling' stuff. Sometimes that whole cycle repeats for another round. This afternoon I need your help primarily with the humiliation part.\"",
        "\"Could you give me an example of combining 'normal' sex and pain?\" Her Suzie signal began singing excitement. Raucous, buzzing, curious excitement\n\nOh my. I think my sweet Suzanne is already a closed customer! She just wants me to recite and amplify the features and benefits for her again, and I thought I knew how to do it most effectively. \"Well, for example, imagine if I stripped you, tied your hands behind your back, and put you up on a kitchen table where you knew someone was watching besides me, and clipped clothespins onto your nipples. Then I spanked your ass with a ping pong paddle until it was bright red, and with each stroke, the clothespins made your breasts shake and sway and the clothespins twist and turn and make you feel them even more.\"\n\nI looked over at her. Her eyes were wide and her face was flushed.\n\n\"Then I pulled you to the edge of the table, spread your helpless legs, and began penetrating your pussy just as hard and deep as I could, and I kept going for a long time, so that you were dying to come but I did not give you permission. I kept fucking you until you were literally begging for an orgasm. I would make you wait even longer, and then just as I finally tell you that you may come, I rip both clothespins away from your nipples and I shoot inside you!\" \n\nHer Suzie signals rose like an approaching siren. She stumbled. We stopped. She put out a hand and steadied herself on me. Luckily there was no one running right behind us. Her nipples were showing through her sports bra and tee shirt like bullets. She was so beautiful. We started up again, but she was still a little unsteady.\n\nI continued. \"So this afternoon, you first job will be to watch, and we have to make sure she knows that you are watching. She will be blindfolded, so I want you to loudly strut right by her across her wooden floor, so there will be the unmistakable sound and smell of some hot woman entering the room to watch.\"\n\nShe was literally mouth breathing, and I knew it wasn't the running. I continued.\n\n\"Then I will do a lot of things to her while she knows you are watching. Criticize her, call her a slut, paddle her, twist her nipples, and try to maximize both her humiliation and her excitement. Then when I know she is really, really excited, I will add one more sexual humiliation, the same one you were planning for Lou!\"\n\nShe stumbled again, but did not fall. \n\n\"I will probably make her beg for it. Then tell her she is such a slut for wanting it. Then as she does it to you I will tell her it just proves what a dirty slut she is, and spank or whip her for it. I will make her get you off. Then I want you to face fuck her like you do me sometimes until you come several times.\"\n\n\"You think she will like that?\"\n\n\"Maybe not as much as I do, but that's not the point. The point is that you are using her to get yourself off, making her submit for your pleasure. That's what turns her on. But you can never show any sort of weakness or even mercy or hesitation, otherwise you will just turn her off!\" \n\nSuzanne's face displayed a feral grin. She could do this all right!\n\n\"Then I will do something to transition her from humiliation to pleasure. She should be so hot that it won't take much to get her ready to come. After she comes, we will take off her blindfold and kiss her and cuddle her and hug her like a good little puppy.\" \n\nHer contentment Suzie seemed to like that part too. \"What happens after that?\"\n\n\"We will probably all make dinner and talk and get to know each other better. You will like her, she is smart and vibrant and full of life! Then we may do another 'session' with her.\"\n\nSuzanne ran in silence for a while. We only had about a mile to go. \"So you have studied and planned all this for her, just to make her come?\"\n\n\"It's not just that. With many submissives there is the danger of accommodation, in that they will need more and more 'kinkiness' over time to get excited. I don't want Lara to have to go so far that it becomes excessive and may be a danger to her. I am trying to 'train' her to be excited enough by the uncertainly and anticipation, and not knowing what will happen, then get her off with more and more normal sex and make her feel the rush from being happy and held and not need more and more extreme kink. If we do a great job for her, today will be so memorable for her that just hearing the sound of your shoes going across the floor will bring it all back and get her all excited enough all by itself.\"\n\nWe finished our 10 and started the cool down laps. Suzanne's Suzie signal was still bubbling and popping actively. \"I am a little jealous. You take really good care of this girl. Does she know how much work it is for you?\" Her eyes were flashing.\n\n\"No, and don't tell her. But she is completely honest with herself and me about what she needs and wants, and you have to respect that. Oh and one more thing. We have a 'safe word' for her. If we go too far for her to handle, or if something is physically wrong with her and we have to stop, she will say \"Abilene\". \n\nWe finished the cool down and started walking toward her office. This was the moment of truth. \"What time can you be ready to leave campus for her place?\"\n\nShe didn't hesitate. \"I have to take a shower, so 5 pm.\"\n\nI smiled. She looked at me. \"What?\"\n\nI smiled again. \"No shower allowed, Suzanne.\"\n\nShe stopped in her tracks, and her Suzie signal spread out and warbled and fizzed. \"Oh my!\" she said. Boy was I ever looking forward to this afternoon! \n\n\"Then make it 4:30. I will meet you right outside the economics building. By the way, what happens in the second session?\"\n\nI smiled my most evil smile. \"Uncertainty and anticipation can work for you to, can't it, Suzanne?\"\n\nI took out my phone and texted Lara to be ready as instructed for 'us' to arrive at 4:45 PM, and to have her box of restraints and whips out and open for me to use. I shut my phone off, so even if she sent a question back she would know I did not get it and would not answer. Let her stew in her own juices a little bit. I hope the pot would really be boiling by the time we got to Lara's place! It's tough work, but it's my duty."
    ],
    "authorname": "conanthe",
    "tags": [
        "oral",
        "calculus",
        "anal",
        "billiards",
        "threesome",
        "filipino",
        "bdsm",
        "sub"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-06"
}