{
    "title": "How to Survive a Long-Distance Relationship",
    "pages": [
        "Speaking from my own experience, here are a few things to keep in mind if you find yourself in a geographically-challenged romance.\n\n1. Know what you're getting yourselves into. \n\nLong-distance relationships are awful. Really, really awful. Don't make the mistake of romanticising what is happening. Don't imagine that you are somehow proving the depths of your love for one another. Life isn't a Nicholas Sparks novel, where star-crossed, heart-sick romance is something to aspire towards. In reality, you're cheating yourself and the person you love out of a whole lot of happiness and memorable life experiences. You're not getting more in touch with your emotions, you're hollowing yourselves out inside. It is going to be terrible, no matter what. And it is not going to get any better until it's over.\n\nWhen it comes to long-distance relationships, my first and most important suggestion is to not attempt one at all. It's better to rip out each other's hearts and piss on them right now. Move on with your life. Pursuing a long-distance relationship is like pursuing a career in the arts-if you can even IMAGINE a version of your life where you're happy without it, then let it go. It's not worth the heartache.\n\nThat said, love is a pretty powerful thing when it's the real deal. Breaking up isn't always an option. So-\n\n2. When you do see each other, don't expect every second to be amazing.\n\nOne of the things you will never get used to is how insane those fleeting times are when you actually get to be together. There will be a tremendous amount of build-up and expectation to every in-person visit, and it will never live up to your sexy, romantic expectations. You can't cram two months of relationship into a two day visit, no matter how hard you try. The sex won't always be amazing, your date won't always be magical, and-more than likely-at some point you'll get in a huge blow-up argument with each other. If that happens, understand that these arguments are inevitable and necessary for your relationship to survive, so don't start blaming each other for \"ruining\" your planned romantic weekend with a fight.\n\n3. Don't cheat.\n\nYeah, this is important for EVERY relationship, but there are a few extra things to bear in mind if you're going long distance. You're always going to be very lonely, despite the fact that you've got a serious boyfriend/girlfriend. It's important that you don't start thinking or acting like you're single, even if you don't plan on actually being unfaithful. In a regular relationship, you can probably get away with a little extra-curricular flirting every now and then without it really hurting anybody. You're gonna see your partner in another day, at the most, and you'll be right back to normal. In a long-distance relationship, you might not get to see your boyfriend/girlfriend again for months. If you flirt with somebody at a party, you're gonna go home alone and drive yourself nuts imagining \"what if?\"\n\nRemember: You've got to live with all the downsides of being single, but with none of the advantages.\n\nThe vast, vast majority of long-distance relationships I've seen have ended because one or both people wound up cheating. You need to be able to trust yourself and your partner 100% of the time, or it's just not going to work out. You can't be jealous or possessive and have a functioning long-distance romance. It's all or nothing. Either both of you are unshakably devoted to one another, or the house of cards is gonna collapse.\n\nOf course, you should still-\n\n4. Masturbate all the fucking time.\n\nEspecially if you're a guy. It's amazing how much more clear-headed you feel after rubbing one out. Ladies, you need to accept that your boyfriend is gonna jack off watching internet porn. It shouldn't even need to be a discussion. If you think that's gross, or it falls into your personal definition of \"cheating\"-you need to get over it. Men need to orgasm the same way we need to go to the bathroom. That's why 87% of the internet consists of porn. We need to orgasm, and we need some sort of visual stimulation to do so. Touch, smell, sound, atmosphere-none of these things are remotely as important for a guy's sexual experience as what he's looking at.\n\nWhich is why you should also-\n\n5. Send sexy photos/videos to each other.\n\nThis is huge. I kept a folder on my computer filled with photos of my girlfriend in various states of undress and it made me feel so much closer to her. Again, guys are visual creatures when it comes to sex, and one of the hardest parts about a long-distance relationship for men is not getting to see their girlfriends naked. All the lovey-dovey emails in the world won't equal a single photo of you in a bra. If you're worried about the NSA or hackers getting hold of the files, then just frame them from below the neck, or against some nondescript backdrop.\n\nVideo cybersex is even better, but if you're too shy for that or it's just not your thing, then a simple email with a jpeg or two can still really make a difference.\n\n6. Talk every single day.\n\nMake the effort. You're never so busy you can't find time for a phone call. Don't just text or email, you need to actually hear each other's voice. If you can use skype or face time, then all the better, but do not let a day go by without talking to each other. And when you do talk, actually talk-don't just have the phone on your ear while your main focus is playing XBOX or whatever. One of the most important aspects of relationships-one of the reasons they are so important to us as human beings-is we get to experience the emotional validation of another human being who thinks we are the most important thing in the world.\n\nYou have got to make the effort to show your partner that this is how you feel about them, even when you're exhausted from a long day of work, or furious at them for something they said the last time you spoke.\n\n7. Let. Things. Go.\n\nChill the fuck out. Don't obsess over petty little things. Don't worry about things being \"fair,\" and don't worry about who is \"right\" in any given situation. Forgive. Apologize. Don't drag up old grievances as ammunition for tonight's argument. Don't hold grudges. Again, this is pretty basic relationship advice, but when you're in a long-distance situation it's even more important. You have got to check your ego at the door if you want to survive this thing. You don't get the same luxuries that normal couples do when it comes to arguments. You don't get to have make-up sex. You don't get to leave an apologetic bouquet of flowers on the table for them. You have got to be mature enough to move on without any outside help.\n\n8. Most of all:\n\nDon't blame one another for the heartache and the loneliness that you feel. That's your fault, not theirs. Keep your chin up, don't be melodramatic, and masturbate twice a day. Doctor's orders."
    ],
    "authorname": "bosombuddies",
    "tags": [
        "long distance",
        "love",
        "advice",
        "relationships",
        "humor"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-survive-a-long-distance-relationship"
}