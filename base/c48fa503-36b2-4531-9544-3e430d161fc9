{
    "title": "Pink Panther Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 19 - Ethical Dilemmas (continued)\n\n\"Oh... my... God...\" whispered the Chief.\n\n\"If it comes out,\" I said, \"the University will be made to suffer for the crimes of two men. The football program will likely get the death penalty for two to four years. They will never recover. The Conference might get ripped apart, like the Southwest Conference did when SMU got the death penalty.\" \n\n\"And it's not just about football.\" I continued. \"It means a lot of kids in all theh sports lose athletic scholarships, and their chance to get out of poverty and get an education. It means the economy of the University, where my wife works, will suffer greatly. It means the economy of our Town and County will suffer greatly.\"\n\n\"And no matter how great you have been,\" said Griswold, \"if you were the one to expose this, you will be hated like... you have no idea...\"\n\n\"I'm not worried about me.\" I said. \"Yes, I'd be hated. Laura and I would have to leave. She may or may not find another position in another college, maybe in California. But we'd survive... it's Quint Danielson I'm worried about... he may well not survive. He's the only real proof left, until I find Fulmer's safe deposit box, and the people who have already committed to killing four people know it.\"\n\nChief Griswold nodded. \"And if it ever came out that you knew, and didn't say anything... that would end your career, too.\"\n\n\"It's not about me, Chief.\"\n\n\"It is, to me.\" said the Chief. \"You are an icon in this Town, Don. I've watched kids look up to you like they used to look up to Police Officers, but no longer do. Adults look up to you, knowing you're the bulwark of that Thin Blue Line protecting them. Is exposing the truth for the sake of one man who is at least safe in prison worth all that?\"\n\n\"That is what I could not live with. One man falsely deprived of his freedom because of the secrets of others,and me in a position to do something about it.\" I said. \n\nAfter some moments of contemplative silence, I said \"Well, let's go get some sleep, Chief. Your wife is staying with Mrs. Williams, so you can stay here.\"\n\nBut neither of us moved from the deck and the warmth of the fire. Some time later, I put a blanket over the sleeping Chief and a couple more logs on the fire. And I sat there, pondering what to do, considering the enormity of Harlan and Gonzales's crimes vs. the life of Quint Danielson vs. the future of this Town.\n\nAnd by the time I figured it out, I was seeing the light of a train coming out of the western horizon... as the first light of dawn was growing on the other side of the mountain behind me...\n\nPart 20 - Pardon Me\n\nWednesday, October 4th, 9:00am. The Bell 206 helicopter landed on the roof of the parking deck next to to the State Capitol in Midtown, the lettering and shield painted on the side saying 'TOWN & COUNTY POLICE'. Emerging from the helicopter was Chief Emeritus Griswold and me, Your Iron Crowbar.\n\nWe strode into the Capitol, our badges (and perhaps a red crowbar) overcoming the resistance of State Capitol security forces. We headed to the section that was the Governor's Offices, actually a complex of offices. I blasted right by the Governor's assistant, and into his small, private office. Needless to say, the Governor of the State was stunned.\n\n\"Yes, Commander?\" he finally said, his voice icy. I put a folder of papers on his desk in front of him.\n\n\"That is a full pardon for Quint Danielson, and a commutation of the sentence of Al Rizzio.\" I said. Rizzio was the son-in-law of State Senator Jimmy 'Coffin' Cerone, and had been 'leaned on' by Les Craig and the Jack Lewis SBI to try to get to Cerone. This was a sop to Cerone, a favor to him in order to get a later favor from him.\n\n\"Even if I gave you Rizzio,\" said the Governor, \"there is no way in hell I am pardoning Quint Danielson--- oh... shit.\"\n\n\"Yes.\" I said. \"I've figured it out. And even without Danielson, I have enough proof to go to the Conference and the NCAA over what Harlan and Gonzales did to those boys... and what Gonzales also did to some girls, including Selena Martinez, who was subsequently murdered. And now, other people are coming over all dead as they try to bottle the secret up. But I am here to tell you, Governor... I'm about to blow it all up in their faces... and yours. Unless you sign that pardon.\"\n\nGovernor Jared looked over at Chief Griswold, whose face was set in stone. \"I'd listen to the man if I were you, Val.\" said Griswold in his most authoritative voice. \"You can trust the Iron Crowbar to either fix this problem... or to keep his word and tear the lid off Hell.\"\n\nThe Governor looked back up at me through his eyelashes. \"Why shouldn't I call your bluff? Your own wife is a professor at the University. And if people have killed four persons already, why do you think they won't kill your whole family?\"\n\n\"If you think I'm a badass, Governor,\" I said, \"you ain't seen nuthin' yet, when it comes to my wife protecting our children. But enough of these little shit games, Governor. You sign that pardon, I get Danielson out of prison, and I'll bottle the bad genie and save you and this State from the absolute disaster it's about to get hit with. I'll also throw in a bone for you; I'll work it to save your job, and stop the shit-eaters from trying to impeach you. So... what will it be?\"\n\nThe Governor looked back at Griswold, and saw he had no help coming from there. He then made an excellent political decision: he grabbed his pen, flipped open the folder, and signed the pardon.\n\n\"You better have a plan to get Danielson to safety.\" said Jared. \"United States Senators have a lot of power, and when they unleash it against one man, it can be ugly.\"\n\n\"Unless that one man has the Power of the Crowbar with him.\" I replied as the Governor signed Rizzio's commutation. The Governor looked at me.\n\n\"Your boy is getting full of himself, Grizz.\" said the Governor, his voice cold and unfriendly.\n\n\"He's earned the right.\" said the old Chief.\n\n* * * * * * * * * * * * * * * *\n\nThe helicopter took off and headed downriver to Jacksonville State Prison. It landed on the helipad next to the parking lot to the side of the prison. Captain Cindy Ross and Chief Griswold emerged from the helicopter. The guards were watching the helicopter, and didn't really notice the green O65 Imperial Crown pulling into the parking lot.\n\nOnce inside, Captain Ross said \"Do you have the pardoned prisoner for me?\"\n\n\"Yes ma'am.\" said the Watch Captain, a tall man that looked younger than his age. \"But just between you and me, ma'am, I'd be careful about being in his vicinity.\"\n\n\"I'll chance it.\" said Captain Ross. A moment later, Quint Danielson appeared in the doorway. He was not wearing International Prison Orange, but a blue shirt and darker blue pants. His bald head was shiny; he knew the risks that awaited him outside.\n\n\"Here, Quint, put this on.\" Cindy said, actually helping him into the bulletproof vest. She and Chief Griswold were also so armored.\n\nThey passed outside into the parking lot. The Chief took Quint to the helicopter and it took off. Cindy went to the green Black Beauty and drove out.\n\n* * * * * * * * * * * * * * * *\n\n\"He's in the helicopter.\" said the voice on the line, which Senator Samuel Russell knew was his mole inside Jacksonville State Prison.\n\nThe mole had been instructed to eliminate Quint Danielson the night before. But when he and his team of paid guards moved to strike, they found Danielson was surrounded by other inmates and other guards. It was possible that Jimmy 'Coffin' Cerone had made arrangements to secure Danielson inside hoops of steel to keep him alive, and Cerone's reward would be his son-in-law's freedom from prison. Nothing personal, just business.\n\n\"I'll handle it.\" said Russell. He hung up, then called another contact. \"Take that helicopter down. Whatever it takes.\" The voice on the other end acknowledged the instructions.\n\n* * * * * * * * * * * * * * * *\n\nPolice Sergeant Andrew Prince was piloting the helicopter, guiding along the River to get back home. In the back were Chief Griswold and Quint Danielson. Sergeant Prince had been hired by the TCPD after leaving the Army after three tours of duty in Afghanistan and Iraq. flying medical helicopters, transporting the wounded to lifesaving treatment. Chief Moynahan had kept in touch with other 'Air Cavalry' Officers, and one of them had sent Prince to the TCPD, whereupon Moynahan had wasted no time hiring him as a TCPD Sergeant to fly the TCPD's chopper.\n\n\"We're going west to divert around the nuclear power plant.\" said Sergeant Prince as he executed the maneuver. The straight line, instead of following the meandering River, would save some time, as well.\n\n\"What's that to our east?\" asked Griswold as he looked out the window.\n\n\"Looks like two helicopters.\" said Prince. \"They're flying too close to the power plant. I'm surprised I'm not hearing them being warned on the radio.\"\n\n\"They're coming right at us.\" said Griswold, very sure. \"Are they from the power plant, checking us out?\"\n\nIt soon became obvious that they were not...\n\n* * * * * * * * * * * * * * * *\n\nThe helicopters bore down on the TCPD chopper. Sergeant Prince had hailed them on the radio, but there had been no response. One of the helicopters bore in on them as the other broke over and began flying north.\n\n\"Hold on!\" said Prince as he performed an evasive maneuver. The other helicopter, trying to ram him, just missed, and flew by. It began to circle around. Then Prince looked up and saw the other chopper circling around, coming at him head on.\n\n\"There's another one, four o'clock!\" yelled Griswold. \n\nPrince glanced over. \"Oh my God, that's a Cobra!\"\n\n\"TCPD Chopper, fly straight and level.\" came a voice over the radio. \"I've got your back with these bogeys.\"\n\n\"Thank God!\" said Griswold, knowing whose voice he was hearing, and who was flying the Cobra. It was Your Iron Crowbar at work.\n\n* * * * * * * * * * * * * * * *\n\nI flew past the TCPD Bell 206 at a high rate of speed. The chopper bearing down on it tried to evade, but he did not have a chance. I locked on and engaged the machine gun.\n\n*RATTA-TATTA-TATTA*\n\nI raked the Enemy chopper, and it dropped like a stone out of the sky, crashing to the farm fields below.\n\nThe other chopper was now trying to run west for the State Line. He would not make it. I pursued rapidly and locked on. A missile was fired. \n\n*BOOM!*\n\nThe chopper exploded in a ball of fire and greasy, oily smoke. The parts fell to the earth.\n\n\"Well, pardon me for intruding.\" I said into the radio. \"See you at Uncle Harvey's house...\"\n\nPart 21 - Bottling the Genie\n\nWe landed at the World Headquarters of 'The Vision' in Coltrane County, where we were greeted enthusiastically by happy Vision acolytes. We were escorted into the main building and to the elevator that led to the office of Dr. P. Harvey Eckhart.\n\nCindy Ross had pulled up in the Black Beauty. I did not care to know the speeds at which she'd traveled if she'd gotten here at the same time the helicopters did. She was already in the office with her father.\n\n\"Ah, young Donald!\" Dr. P. Harvey Eckhart, founder and great leader of 'The Vision' self-help empire, said as he greeted me. He came forward and gave me a warm hug, which I returned. \"A splendid job, just splendid!\"\n\n\"Thank you, Uncle Harvey.\" I said. \"May I present Chief Griswold, Quint Danielson, and Sergeant Andrew Prince?\"\n\n\"Ah, Chief Griswold, it is always good to see you.\" said Eckhart, shaking Chief Griswold's hand. \"But I perceive that retirement is a bit... slow... for a man of your active disposition.\"\n\n\"Been talking to these young whippersnappers, I perceive.\" replied the Chief. Eckhart laughed, then greeted Sergeant Prince, then said \"Ah, Mr. Danielson. I remember the excellent things said about you and your motivational skills. You must be starving after months of prison food. Let's have some brunch.\"\n\nEckhart led us to a table that was set out with mostly breakfast foods, but also had some items like chicken pot pie, ham, and macaroni and cheese. We all filled our plates, then sat down at the table that was set for us, with Dr. Eckhart at the head of it, Cindy to his right, me to his left, Griswold to my left, and Sergeant Prince to his left, and Quint to Cindy's right.\n\nAs we ate, Dr. Eckhart said \"So what will the lovely Ms. Wurtzburg say to explain those downed helicopters, young Donald?\"\n\n\"An unfortunate military training accident.\" I said. \"Under investigation by the FAA and FBI, as it was just a wee bit too close to the nuclear power plant. That will be the official story, according to FBI Special Agent in Charge Muscone. He's one of the FBI good guys, by the way.\"\n\n\"Ye-es, I agree.\" said Eckhart. \"Can't say that for all of them. But I'm glad you brought Mr. Danielson here. If you're interested, Quint, I have excellent uses for your motivational talents...\"\n\n* * * * * * * * * * * * * * * *\n\nWe arrived back at Headquarters around 1:00pm, still Wednesday, October 4th. Sergeant Prince took the TCPD chopper to its hanger at County Airport, while Cindy, Chief Griswold, and I went to Chief Moynahan's office.\n\n\"Heh heh heh heh.\" said Moynahan. \"I'm supposed to be the Air Cav Officer around here, Mr. Crowbar. But you're having all the fun flying the Cohhhhh-braaaa.\"\n\n\"I'm the one with the SBI badge, Chief.\" I said. \"That was just me enforcing the law up there.\"\n\n\"Darn good thing, too.\" growled Griswold. \"I am anything but an Air Cav Officer, and prefer to be on the ground, catching fish in placid waters.\"\n\n\"You're in the wrong County for placid waters, Chief.\" Cindy said. \"And you wouldn't have it any other way.\" Griswold barked a laugh from under his mustaches as he and Cindy fist-bumped.\n\n* * * * * * * * * * * * * * * *\n\n\"He did what?\" asked a stunned Lt. Governor Graham Collins. He was in the Governor's public office, the large room with the conference table in front of the desk, having been summoned by Governor Jared.\n\n\"He shot down two helicopters that were trying to down a Town & County Police helicopter.\" said Jared. \"What I want to know, Collins, is who sent those two helicopters that were trying to shoot down a retired Police Chief and a man I'd just pardoned because he was framed for rape.\"\n\n\"I have no idea.\" said Collins. \"Why do you think I'd have any idea?\"\n\n\"Because you and Russell are butthole buddies.\" said the Governor. \"And I'll tell you something else, Collins... even if your Establishment buddies impeach me, you won't be the next Governor. These are just a few copies...\" He handed Collins the file folder. Inside were photos of Collins engaged in homosexual activities with different men.\n\nCollins realized he'd been set up himself. \"Is that how we're playing this?\" he asked. \"I'll still be Governor, once you're impeached and convicted... or shot dead.\"\n\n\"If that's a threat,\" said Jared, \"then you'd better be careful. But beyond that... if you were a Democrat, you might get away with being Graham 'Light In The Loafers' Collins... but the Republicans, especially the Evangelicals, will roast you alive.\"\n\n\"All right.\" said Collins. \"What do you want? I'm not going to resign as Lt. Governor, and I'm in position to succeed you when you're ousted.\"\n\n\"You'll come to the meeting in a couple of days.\" said Jared. \"And you'll see what's going to happen.\"\n\n* * * * * * * * * * * * * * * *\n\nHaving missed the morning coffee klatch, Cindy and I were in MCD with the Detectives, watching the news. Special Agent in Charge Muscone was giving a press conference from in front of the Federal Building on Courthouse Square.\n\n\"The investigation has just started.\" Muscone said. \"It appears that this is a training accident, that two helicopters collided----\"\n\n\"Mr. Muscone!\" called out John Hardwood, rudely interrupting, \"eyewitnesses say the two helicopters went down separately and a distance apart from each other. How do you account for that?\"\n\n\"It's still early in the investigation.\" said Muscone, having snared Hardwood into revealing what he knew about the incident. \"I'm sure we'll have more as we investigate further. Right now we're trying to identify the deceased occupants of the aircraft.\"\n\n\"Mr. Muscone!\" yelled Bettina Wurtzburg, \"several Media drones flying over the area were shot down near the State Line! Can you comment on that?\"\n\n\"I have not heard about that. Were they flying near the nuclear power plant?\" asked Muscone. \"If so, they'd be considered a threat, and might be taken down.\"\n\n\"No sir!\" said Bettina. \"They were flying much further west, near the State Line, near where the second helicopter went down.\"\n\n\"I don't have any information about that, then.\" said Muscone. \"But I'm sure you guys know that the power plant is restricted airspace to all aircraft, including drones. So don't complicate our investigation by trying to fly drones through there...\"\n\n* * * * * * * * * * * * * * * *\n\n\"That's interesting.\" I said. \n\n\"What's that, sir?\" asked Joanne Warner.\n\n\"The drones being shot down.\" I said. \"Yeah, around the power plant, they'd be waxed. And the Press knows to not fly drones around there, and that they could be arrested for it. But why knock down drones near the State Line? Nothing but farms out there.\" No one said anything for a moment.\n\n\"So the Governor pardoned Kendra Luskin's last victim?\" asked Teddy Parker. I nodded, and Teddy said \"Why was he set up?\"\n\n\"For being in the wrong place at the wrong time.\" I said. \"But he's free now.\"\n\n\"And he's my father's newest Trainer.\" said Cindy. \"He's going to be doing seminars all over the country, maybe even in Canada and Malaysia.\"\n\n\"And your father is not training you to be a Trainer, Captain?\" asked Joanne Warner. \"You'd be great at it!\" Cindy half-shrugged.\n\n\"Detective Warner, are you trying to get rid of my Chief of Detectives?\" I asked, pretending severity. \"Thinking of moving on up into that Captain's slot yourself?\"\n\n\"She's going to have to learn how to kiss up to the bosses more, if she wants to do that.\" growled a voice behind me. It was Chief Griswold, who'd just come into the MCD room. Everyone laughed.\n\n\"Want some coffee, Chief?\" I said, already pouring him a cup.\n\n\"See there, Ms. Warner?\" growled the old Chief again. \"This man knows how to kiss up. That's why he's where he is today... well, that and the Power of the Crowbar.\"\n\n\"I dunno, Chief.\" I said. \"These Detectives are getting pretty good. They just might take that crowbar away from me...\"\n\nPart 22 - Secrets And Solutions\n\nGreen Crowbar followed Red Crowbar into my office a few minutes later. She sat in a hot chair while I practically collapsed into my Command Chair.\n\n\"Your back doing okay?\" Cindy asked.\n\n\"Yeah, it's fine.\" I said. \"It gets a little sore when the rest of me gets tired.\"\n\nJust then, Chief Griswold knocked on the door and then came on in. I had him sit down next to Cindy. \"How's your back, son? And have you gotten any sleep lately?\"\n\n\"Sleep? Vat ees thees concept ov 'sleep' ov vich yoo speek?\" I asked in my 'German' accent. \"Seriously, I'll sleep well tonight.\"\n",
        "The Chief made the sign for me to turn on the bug killer, which I did. \"Crowbar, I told Cindy what was going on, about Harlan and Gonzales, while we were flying down to Jacksonville State Prison. Only fair she knows.\"\n\n\"Thank you for doing so, Chief.\" I said. \"So, Cindy, that explains a lot, doesn't it?\"\n\n\"Motives for the crimes, yes.\" said Cindy. \"Dawson may or may not have known, but was about to try to find out. Butch Fulmer apparently did know, from the days he was on the coaching staff here. I'm thinking Selena Martinez was raped by Gonzales, maybe he raped other girls, too?\"\n\nI nodded. \"Yep. Brian Harlan molested young men at his football camps and in his athletic programs. Speedy did the same, but he helped himself to some women as well, and Martinez was one of them. She filed a complaint with the Campus Police after the crime took place. It wasn't acted upon and the report was pulled, but Myron found it on the backup servers.\"\n\n\"Butch Fulmer may have known about what Harlan was doing.\" I continued. \"My suspicion is that he definitely knew, got photographic evidence of Harlan's actions, and put that evidence away for safekeeping. He was forced to leave the football team, but they let him live and even had Wilson Hammonds get him a job as a security guard. That way, they could keep tabs on him, and as long as he kept his mouth shut, they left him alone. He also knew this, and knew it was pretty much his only chance to live.\"\n\n\"And Quint Danielson may or may not have seen something at one of the camps where he was working with the young men, or maybe a one of them told him something that happened.\" I said. \"That's why Russell had Kendra Luskin frame him. He's aware that his life will forever be in danger, but Dr. Eckhart has pretty decent security for his Trainers, including himself when he travels. So we're hoping they'll leave him alone, since killing him only pisses me off, and they know that if I die, the story is coming out and all hell will break loose.\"\n\n\"Who is this 'they', ov vich yoo speek?\" asked Cindy, in an excellent imitation of my German accent.\n\n\"People who wanted this to not get out.\" I said. \"University officials, all the way up to the University President. Politicians of this State at every level, from local to U.S. Senator level... especially the U.S. Senator level. Most of these people are guilty only of burying the secret instead of exposing it, and I understand their motives... the damage done by exposing this to the Public would be enormous, and fatal to the University.\"\n\n\"I will also add,\" I added, \"that at the time there was a certain Consultant of Crime that was still alive and thriving... a man who himself indulged in the disgusting things Harlan was doing. I would imagine Westboro handled the cover-up himself. It did not behoove Westboro to have that explode anywhere near his County.\"\n\n\"There's that word again!\" Cindy said, meaning 'behoove', and the typical response to its use at the Police Academy. Then she said \"Dawson? Why target him?\" asked Cindy.\n\n\"I don't think he knew, but maybe he got suspicious.\" I said. \"Certainly with his hatred of the University athletics program, he'd expose them in a New York minute, just like Tim Dawdle wanted to do with the PED scandal. So part of the cover up is that he got fired from his journalism job, but was given work, enough to barely exist, by the law firm and Senator Russell.\"\n\n\"So why kill them?\" asked Chief Griswold. \"And why not kill them at the time?\"\n\n\"I'll take the second part first.\" I said. \"Killing people and leaving bodies around is not something criminals really want to do. Draws the attention of Law Enforcement. Butch Fulmer had hidden information, and strategically told people that he'd put information away that would come out if he died. Selena Martinez was probably told she'd be murdered if she did not run away and keep her mouth shut. Maybe they threatened to expose her family as being illegals. But killing her at that time might expose the rape, and then the whole house of cards begins to fall.\"\n\n\"As to killing them now,\" I said, \"Dr. Jan Camp's lawsuit was the tipping point. She was under surveillance... illegal surveillance... from the time she made her good-grades allegations, and they found out she was trying to contact Dawson. Whether or not he knew anything, they did not know. But they panicked. They killed him, and in and of itself, there was nothing there to see.\"\n\n\"So then they killed Butch Fulmer.\" I continued. \"And they tried to make it look like it was part of a robbery, but they left the frickin' statue behind, covered in clay. I think they suspected it had some kind of tracking device embedded, and they might've been right. But in and of itself, it was made to look like murder in the commission of a burglary.\"\n\n\"Then Selena Martinez was killed, as she knew what was going on... and if she heard the others' names on television as being killed, she might come forward with what she knew.\"\n\n\"But the Media suppressed the names.\" Cindy said. \"So they're in collusion with the politicians on this, aren't they?\"\n\n\"I don't know.\" I said. \"I can hardly believe that someone as hate-filled as John Hardwood would not jump at the chance to expose all this, just to create pain for as many people as possible. But maybe his bosses were contacted, and were asked to not mention the deaths nor the names, with some reason attached. The corrupt Media colludes with the corrupt politicians far more than good people realize.\"\n\n\"And Gonzales?\" asked Cindy.\n\n\"Well, they were 'in for a penny, in for a pound', as my Canadian friends say.\" I said with a grin, which caused Cindy to grin, too. \"Brian Harlan was dead, so Speedy was the only perp left. So they waxed him, too.\"\n\n\"Harlan and Speedy's victims are still out there.\" said Chief Griswold.\n\n\"And none of them have come forward before now, and the perps knew they probably wouldn't come forward due to the shame of it all.\" I said. \"And they're scattered all over this region of the country now, and likely didn't hear anything about the crimes... except Speedy's. They'd think their shameful secret was now buried, and they'd move on. Besides... as you told me, Chief... exposing this, no matter how good the intentions, would only bring hatred and threats to life and limb down upon the whistleblower, including those carrying crowbars.\" \n\nCindy nodded. Neither of us were happy about keeping this secret. But the perps were dead, no further Justice could be delivered unto them. Only pain for the School and the victims. An ethical dilemma worthy of philosophical discussion.\n\n\"Just one more thing.\" said Cindy. \"The Pink Panthers.\"\n\n\"Like you said, ma cousine,\" I said with a grin, \"it was all about me.\" Everyone chuckled, and I said \"Seriously, I've been thinking about a weird theory. I can't prove it, it's just a wild ass guess. But I think the Panthers were left to get me interested in the cases, and to solve them... so that I would choose to say no more about them.\"\n\n\"I think I see what you're saying.\" said the Chief.\n\n\"I don't.\" said Cindy. \"Explain yourself, mon Commandant.\"\n\n\"You were there, Chief,\" I said, \"when I first went to the Governor to pardon Danielson. He flat out refused, and he also said I'd eventually figure out why, and would understand. So... let's look at this. Who are the people that would've killed these four? People that wanted to protect the secret. And so, is the person or persons that left the Panthers trying to expose the secret? That would mean they have to have come in after the murders and planted the discs. That won't do, especially in the Gonzales case.\"\n\n\"Soooo,\" I said, \"I reasoned unto myself that the people leaving the discs are involved with the people committing the murders, if not actually the same persons. So why would they kill to bury a secret, only to get me interested in finding that secret? Ah, the Governor himself said it... he said I would agree with him. And about the dirty secret, I have to admit that I do.\"\n\n\"But you still forced Val to pardon Danielson.\" said Griswold. \"You don't leave men bleeding on the battlefield.\" I understood the underlying compliment in that statement, and what Chief Griswold thought of me (for the good) for what I'd done.\n\n\"No sir, I do not.\" I said. \"Anyway, my theory is that the Pink Panthers were planted to bind the cases together, and get me investigating them as a group instead of as separate incidents. And what do you know, the plan worked.\"\n\nI noticed that Cindy had all but gone into a reverie. Must be a family trait, I thought to myself. A moment later she looked up, saw me looking at her, and said \"I guess I'm a suspect, then.\"\n\nI smiled, understanding. \"No, not you. If you'd have known, you'd have come to me for advice once you learned the secret, just as I went to Chief Griswold when I figured it out.\" The underlying message was not lost on the Chief, who nodded, and I could see the emotion in his face.\n\nTo distract himself, Griswold growled \"What do you mean, you're a suspect, Ross?\" \n\n\"I've played disc golf with Don, Chief.\" said Cindy. \"So have a few others, like Teresa and Todd. And we knew he has a Pink Panther disc; he's joked about it a couple of times. But only a few people could know that, so choosing that particular mold of disc limits who could've known.\"\n\n\"Well,\" I said, \"I think the museum gave them the idea... like the original movie all those years ago.\"\n\n\"Or the cartoons.\" said Cindy, her ice blue eyes boring into my gray peepers. \"And like you said, your kids know all about the cartoons...\"\n\n\"Did the same perps kill all four of these victims?\" asked Chief Griswold.\n\n\"Probably not.\" I said. \"Dawson, Martinez, and Gonzales? Maybe. But the Butch Fulmer killing required some skill... to get into the museum, into the secure room, to get the Statue of Artemis out of its display case, and so on. Whoever did that... very expert.\"\n\n\"Or an inside job.\" Cindy said.\n\n\"Could well be.\" I replied. \"Maybe Shane O'Brady can make a successful arrest, if that's the case. Meanwhile, as the late Paul Harvey used to say... stand by for news!.\"\n\nI refused to reveal what I was talking about, even after a green crowbar was waved in my general direction, along with words that must be used in Canada a lot...\n\nPart 23 - Scandal and Punishment\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted Bettina at 7:00am, Friday, October 6th from in front of the State Office Building on Courthouse Square. \"Fox Two News is bringing you continuing coverage of the scandal that is rocking the Republican Party and politics all over the State!\"\n\n\"Yesterday morning,\" Bettina said, \"The Guardians of Justice released videotape and photographs of Republican Senator Samuel Russell in flagrante delicto with several prostitutes! The tapes are too graphic to be shown here, but they have broken the Internet with views on several viral sites! One of them, titled 'Meet Senator Samuel Russell', is believed to be connected to Russian operatives here in the United States. Senator Russell made a statement yesterday. Roll tape.\"\n\nTape rolled. The Senator was in front of the Federal Building in Midtown that held his home office. His wife was standing beside him, looking absolutely miserable as she was publicly humiliated, shamed, before the rabid Media that smelled blood in the water.\n\n\"These Guardians of Justice terrorists are just that, cowardly terrorists that are traitors to our Nation and a threat to our national security.\" said the Senator. \"I will have to work hard to restore my good name and reputation, and the first step in that is to find these vicious bastards and administer to them the justice that they so richly deserve!\"\n\n\"Mrs. Russell!\" shouted John Hardwood, \"do you stand by your husband after what the Nation is seeing on these videotapes?\"\n\n\"Mrs. Russell!\" shouted a female reporterette, maybe from Southport, \"how do you feel about your husband cheating on you with whores, with prostitutes?\"\n\n\"Mrs. Russell!\" shouted another reporter, \"have you contracted a sexual disease from your husband?\"\n\nMrs. Russell did not respond, and she and her husband were escorted back into the building. Once inside, away from the cameras, she did what any scorned wife should do. She loaded up and slapped Senator Russell as hard as she could as she screamed \"You bastard!\"\n\nBut that was not shown on television. Back to Bettina live: \"Republican Senator Russell says he has no plans to step down as the Senior Senator from our State. Governor Val Jared, also a Republican, excoriated Russell. Roll tape.\"\n\nTape rolled. \"Senator Russell has humiliated himself and his wife, he has besmirched the United States Senate, and he has shown nothing but contempt for our State. I urge Samuel Russell to resign as U.S. Senator immediately!\"\n\nBack to Bettina: \"In other news from the State Capitol in Midtown, Fox Two News has learned that a major meeting of the State Legislature's leadership, as well as the leadership of both political Parties, will take place this morning, and that Governor Jared will be in attendance. Experts are saying that this could be the final ultimatum to Governor Jared to resign before steps are taken to impeach him.\n\n\"Let's go to Dr. Romanov of the University's Institute for Politics.\" Bettina went on. \"Dr. Romanov, is this the end for Governor Val Jared? Will the mistake of his election be rectified by the Legislature?\"\n\n\"Bettina,\" said Dr. Romanov, \"we just don't know yet. The State is paralyzed by the actions of Governor Jared, which many believe are illegal, and everyone with any integrity knows is racist. Governor Jared is a 'white nationalist' that puts unethical preference for businesses ahead of the suffering People of the State...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Good grief.\" said Theo Washington as he viewed some of what the Guardians of Justice had released. \"That is some explicit stuff.\"\n\n\"That man's poor wife.\" said Joanne Warner. \"Did you see how she looked, having to stand there by him and hear those questions? I don't understand why she'd stand there with him at all.\"\n\n\"You wouldn't stand by your man?\" asked Teresa Croyle.\n\n\"Ma'am,\" said Joanne, somewhat severely. \"Seth would never do that to me. He honors me and I honor him. And if he did do something that scummy, he would know I wouldn't be there beside him. Besides, he doesn't need trash like those women. I'm a good wife to him, in every way.\"\n\n\"My wife is good to me, too.\" said Theo. \"And she'd skin my hide, literally, if I stepped out on her.\"\n\n\"I saw the tapes last night.\" said Mary Mahoney, whose hair was bright pink this morning, and her cheeks rosy with her pregnancy. \"I'm pretty sure that woman in the metallic red wig is from this Town.\"\n\n\"I think you're right.\" I said, knowing for sure that she was right.\n\n\"Think he'll resign, sir? Senator Russell?\" asked Teddy Parker, to me.\n\n\"It will depend.\" I said. \"If they force Governor Jared out and Grahamnesty Collins becomes Governor, then maybe. If not, Russell will fight like hell to hold on, because he knows Jared would appoint a Grassroots Conservative instead of an Establishment Republican Elitist to the Senate.\"\n\n\"Will Jared hold on?\" asked Theo. \n\n\"I think he will.\" I said, very sure.\n\n* * * * * * * * * * * * * * * *\n\nThe 'Banquet Hall' room of the State Capitol was a large room with ornate furnishings, and a huge oak table that was always kept to a mirror finish. It was used for banquets, but also for major legislative conferences and other meetings of tremendous importance to the State. It would be an understatement to say that this meeting was of tremendous importance to the State.\n\nThe Governor of the State sat in the middle of the table, on the far side from the doors where other politicians were entering. To his right was State Senator Jimmy 'Coffin' Cerone (D - Southport). To his left was State Senator Moe Molinari (R - Westphalia). As legislators came in and took their places, the tension in the room became more and more suffocating.\n\nState Senator Katherine Woodburn (D - Town & County) entered, and most of the men in the room did not try to hide that they were looking at her shapely legs and fine ass as she sauntered to her place near the end of the table on the Democrats' side, but in the relatively superior far side of the table. Her contingent of the 'Wall of Granite' took their seats, as well.\n\nOpposite the Governor was the place for Lt. Governor Graham Collins. His face was a mask of somber displeasure as he took his place, not greeting other politicians as he normally would do. State Senators Sean Stockton and Johnny Perdue and Representative Billy Williams took their respective places on the Republican side of the table.\n\nNot all of the politicians in the room were State Legislators. Members of the Governor's Cabinet were there, including SBI Director Tom Conlan. And two other men were in the room: United States Senators Samuel Russell and Richard Nunn.\n\nAnd one person not in attendance, as she was not invited, was State Senator Maxine Watts (D - The City). \n\n\"Thank you all for coming.\" said Governor Jared as everyone settled into their seats. \"Senator Cerone, would you begin?\"\n\n\"Thank you, Governor.\" said Cerone, making sure the microphone was near enough that his voice was transmitted over the speakers in the room. \"We have called this meeting to announce our actions going forward to resolve the issues that are taking up too much of our time and too much of the Media's airwaves. The Governor, his Cabinet, and the majority of our Legislators have reached an agreement, to which we expect all of you to adhere to.\"\n\nThe man saying that was once one of the most powerful Mobsters in the Nation. The man on the other side of the Governor was also a former powerful and influential member of the Mafia, and everyone else in the room knew that their expectations were not ephemeral in nature.\n\n\"The Governor is going to instruct the State Department of Justice to discontinue the lawsuits against companies over Immigration as a civil rights issue.\" said Cerone. \"He has agreed to let the tax reform program work through the Legislature instead of the 'take it or leave it' approach he originally was making. In return, all discussion of impeachment for anything less than an actual high crime, which this Governor has not committed, will cease. The hostile language, including accusations of 'white nationalism', which has caused violence and riots and recently a death on the University Campus, will be toned down if not altogether discontinued.\"\n\n\"No way in hell!\"\n\nThe voice was Katherine Woodburn's, and she rose from her chair as she yelled it. She said \"I will not agree to any of that. I am going 'scorched earth' on this White Nationalist and outright racist Val Jared. I demand he be impeached by this Legislature! His continued occupancy of the Governor's Mansion is a humiliation to this State and affront to the Minorities in this State!\" Her contingent in the 'Wall of Granite' applauded loudly.\n\n\"Ms. Woodburn, mind your tone.\" started Cerone, but Katherine was having none of it.\n\n\"Or what, Mr. Cerone?\" snarled Katherine. \"Are you going to put out a hit on me?\" Gasps erupted as she continued. \"What, are you going to send someone to the Iron Crowbar's County to kill me? I don't care if you do, I'm not stopping calling out this racist Governor; my voice will not be silenced, and there are thousands of people ready to take up my calls for words and actions!\" More applause from the Wall of Granite. Cerone's face was red; he was most very angry, indeed.\n\nThe Governor stood up. \"Senator Woodburn, I have done nothing that justifies your namecalling of me as a racist. I am not a racist, at all. Wanting to enforce the laws on the books regarding illegal immigration does not make me a racist. I am working for all ethnicities to create more jobs and more prosperity. At some point, Ms. Woodburn, I'm going to haul you into Court with a defamation lawsuit if you continue these baseless accusations. It's no longer political; I consider it personal and will act accordingly.\"",
        "\"Bring it on.\" snarled Woodburn, her face as ugly as her voice in her hatred of Val Jared.\n\n\"Sit down, Ms. Woodburn.\" said Moe Molinari, standing up as the Governor sat down. \"Or leave, I don't care which. Geez, what do they put in the water in your County? First the Iron Crowbar shows no fear, and now you.\" There was some tepid laughter, but it did not break the tremendous tension, which could be cut with a katana.\n\nMolinari continued: \"Mr. Cerone and myself did not come into this room without knowing we have the backing of the majority of the State Legislature, as well as one of our United States Senators. There will be no impeachment vote. The State Supreme Court will not entertain any entreaties to call the Legislature into session for such a purpose, unless someone can prove an actual crime by the Governor.\"\n\n\"What do you say to this, Collins?\" rang out a voice. It was U.S. Senator Russell, who was furious with anger. He was now putting Collins on the spot, not knowing that the Governor had taken care of Collins.\n\n\"As disgusted as I am with Val Jared's racism,\" said Graham Collins, \"and you can sue me for defamation if you want, Jared... I have accepted the compromise agreement between Senators Molinari and Cerone and the Governor. I'll continue to demand the Governor respect the Republican Party and the State, but the impeachment issue is dead.\" Yep, in the end, Graham Collins had shown his gutlessness, his cowardice. Typical Establishment Republican politician, people with crowbars would say...\n\n\"I'd suggest you accept this compromise, as well, Senator Russell.\" said Moe Molinari, who like everyone else knew full well that he was the true Republican power in the room. \"You've already humiliated your wife enough with your consorting with prostitutes. Keep making noise, and it's only going to get worse... for you.\"\n\n\"Is that a threat?\" thundered Russell.\n\n\"If I had the Iron Crowbar breathing down my neck like you do, Russell, \" said Governor Jared, \"I'd probably consider silence to be golden.\"\n\n\"The Iron Crowbar ain't shit.\" said Russell. \"He's a fucking pipsqueak local LEO that thinks he's hot shit. I can't believe all you cowards are so afraid of him.\" Let's just say the looks on people's faces were of disbelief at what they'd just heard, especially Katherine Woodburn and Val Jared's faces.\n\nSenator Russell got up and left, Lt. Governor Collins and Rep. Wilson Hammonds doing likewise. The meeting broke up soon after. Not much more was needed to be said.\n\n* * * * * * * * * * * * * * * *\n\n\"No bugs.\" said Senator Russell's chief of security as he returned to his office in the State Office Building in Midtown, which housed the State Legislators' offices, as well.\n\n\"All right, guys,\" said Russell as a few of his aides in suits and sunglasses sat down close to each other so that he didn't have to speak loudly. \"How were these prostitutes able to get that footage out of the office?\"\n\n\"We don't know, sir.\" said the lead aide. \"Security checked them thoroughly, and we always are looking for unauthorized transmissions. Our only guess is that the iPhones looked to be off but were actually on, and maybe there were small cameras in the women's purses. That would be high-grade stuff, suggesting that these women are not just ordinary prostitutes.\"\n\n\"I don't care.\" said the Senator. \"Find those bitches, get the information out of them if you can. If you can't, just kill them and let the Iron Crowbar sort it out. And speaking of that bastard, what is he up to?\"\n\n\"He's up to no good, where you're concerned, Senator.\" said one of the aides. \"He's got the FBI looking into you, and no amount of pressure is going to stop them. The CIA Director, a friend of Troy's wife, and several top FBI people are dead-set against you. They may have been behind the prostitutes gathering that footage of you.\"\n\n\"And now the Iron Crowbar knows about Harlan and Gonzales.\" muttered Russell. \"That's not a crowbar over us... that's a fucking sledgehammer. And we can't kill him, because then Ross, Croyle, most of his Police Department, his nephew with BOW Enterprises that has inroads with the Japanese Secret Service... I'd be found dead myself within an hour of Troy's passing.\"\n\n\"So what do you want us to do for you, sir?\" one aide said, as a suggestion.\n\n\"What I told you... find and kill those bitches.\" said Russell. \"As to the Iron Crowbar.. tell John Hardwood to get his ass here for instructions...\n\nAlas, the attempts to find the prostitutes would be of no avail. The beautiful blonde prostitute that was the sister of Dr. Fredricson's secretary had been safely removed from this part of the country. And the redhead?\n\nAh, she was the prostitute I'd fucked at Rita's. (Author's note: 'The Other World', Ch. 04.) And in exchange for another good rogering by my little 'iron crowbar', as well as financial inducements, she agreed to go in and get some salacious material on Senator Russell, bringing along some exceptionally good CIA technology.\n\nAnd she would not be easily found, either. Senator Russell had no idea of the blanket of protection that Rita could put up around her people. And backing that up was the Power of the Crowbar. But maybe Senator Russell would just have to learn that by a direct application...\n\nPart 24 - The Deeper Secret\n\nSean Sanderson could hardly believe his luck. The young stud was relaxing on his bed in his dorm room, watching as well as feeling the drop-dead-gorgeous woman expertly and almost desperately sucking his huge cock. Her black hair and black pubic bush contrasted with the white of her skin. Her large breasts were pressed into his thighs as she fellated him, and her firm, luscious ass was high in the air as she knelt between his legs.\n\n\"God damn, that's good!\" Sean gasped as Karen Warner Harlan took his throbbing meat deep into her throat. She moaned around his shaft as she deeply sucked him, reveling in finally getting some good sex from a well-endowed stud.\n\nShe let his cock pop out of her mouth. \"Damn straight, it's good.\" she said. \"I can suck a big cock like this with the best of 'em.\" She then began to prove her statement by taking Sean's cock back into her mouth, sliding her lips up and down the shaft as she swallowed his inches again and again until she felt his nut about to rise.\n\n\"Now let's see if you know how to fuck.\" Karen said. With that, the beautiful woman rose up and straddled Sean's turgid meat. Guiding the huge helmet of his cockhead between her labes, she sank down onto him until every inch of his penis was buried balls-deep into her well-used, sopping wet snatch.\n\n\"Oh GOD yes!\" she gasped as she was impaled by the younger stud's hard shaft. She began undulating her hips as he began pushing up into her, taking every inch of him and massaging his long, thick cock with her clutching, spasming pussy walls. They soon had a raunchy rhythm of hot mating going as she vigorously rode him.\n\nAs Sean held Karen's hips and thrust up into her, he felt the sucking heat of her pussy as her cunt muscles clutched at his cock. He'd fucked some hot and lusting women, but never had he fucked a nymphomaniac as hot for sex as this beautiful woman. She was slamming her pussy down on his cock, taking his length and thickness with wanton abandon---\n\n*HEY HEY! YOU YOU!*\n\nIt was her cell phone, and that rarely heard ringtone could only mean that Karen's brother Seth was calling. Without breaking her rhythm of fucking Sean, she reached over and grabbed the phone.\n\n\"What the fuck IS it?\" she said angrily.\n\n\"It's important, or I wouldn't have called.\" said Seth Warner, Karen's brother and Joanne Warner's husband. \"Commander Troy knows you are in Town, and he wants to meet with you. Privately.\"\n\n\"Ah, fuck!\" gasped Karen. \"And why the fuck should I do that?\"\n\n\"He says you might prefer meeting him to being arrested.\" said Seth.\n\n* * * * * * * * * * * * * * * *\n\nFriday, October 6th. I had called Joanne Warner into my office. Cindy was on the sofa as I had Joanne sit down in a hot chair.\n\n\"Joanne,\" I said, \"this is more of a personal nature than an official Police matter, but I need your help. I need you to ask your husband to contact his sister, and have her meet me privately. Don't ask what it's about, just convince him to contact her. I know she's here in this County, and be assured that this is for the best of everyone including Seth's sister.\"\n\nJoanne had fulfilled my request. Seth was not particularly happy about it, but he agreed to contact his sister Karen, especially after Todd reassured him I was trying to help Seth's sister, not bring her to harm.\n\nNow I was sitting in Laura's office, which was empty except for me. Laura had taken the kids to the Cabin, getting an early start on the weekend. Her assistant Laurie was given the rest of the day off. And of course I had a key to my wife's office, as she had a key to mine.\n\nThe door opened, and in walked the extraordinarily beautiful Karen Warner Harlan. Her hair was pulled back into a tight bun, showing off the beauty of her face, and she was wearing a clingy black pullover sweater and tight black yoga pants. She was also wearing black sneakers instead of high heels, and I realized she was doing this to be prepared for personal combat, which my aching back wanted no part of.\n\n\"Well, if it isn't Commander Troy.\" Karen said with no small amount of acerbity, perhaps remembering our last meeting in this office, in which I revealed to her and her brother the identity of her biological father. (Author's note: 'The Swap', Ch. 05.)\n\n\"Thank you for coming, Mrs. Harlan.\" I said. \"Please, have a seat.\" I was seated on one of the couches that faced each other.\n\n\"I'll take a chair, here.\" Karen said, taking a small chair near the door that led to the clinic area. She put it just past the edge of the other sofa, keeping plenty of room between her and myself. Wary, she was. Smart as well as beautiful. \"So,\" she said, \"what do you want?\"\n\n\"I want your assurance that Quint Danielson will not be harmed and will never be harmed.\" I said.\n\nKaren studied me for a moment, then said, \"Why would I have any interest in Coach Danielson?\" I knew her using the 'Coach' name was deliberate, and her way of telling me she knew full well what was going on.\n\n\"Oh, I think we understand each other.\" I said. \"Rusty Dawson, Butch Fulmer, Selena Martinez. Dawson, Fulmer, I understand. But poor Selena?\"\n\n\"I had nothing to do with Fulmer or Martinez.\" said Karen. \"But he'd helped himself to a few cheerleaders himself, so it's not like he's shiny clean. But Dawson? If you think that I was going to let that piece of dog shit drag my late husband's name through the dirt, then----\"\n\nI held up my hand and interrupted her. \"I understand.\" I said. \"I think your husband is a piece of dog shit himself, but I understand your loyalty to him. So you won't admit anything to do with Fulmer?\"\n\n\"It wasn't me.\" Karen said. \"That took a better cat burglar than me. And it wasn't her that killed the bastard. But don't ask who it was; I'm not a snitch on my friends.\" Yes, I caught the 'her'; another of Karen's 'hints' towards me.\n\n\"Of course you're not, but you don't have to say.\" I said. \"I know the work of one Goth Girl Kathy Larrington when I see it. And of course you and she are working very closely for and with one of the best smugglers in the world, and one of the few women with the brains to defeat that museum's systems.\"\n\nKaren smiled cynically. \"And being her 'baby brother', as she calls you, you're not as stupid as I wish you were.\"\n\n\"So,\" I said, \"do we have a deal? Quint Danielson comes to no harm, and your husband's secret remains safe, at least with me?\"\n\n\"Of course.\" said Karen. \"And you're the second person I've made that deal with... well, the part about my husband's secret, that is. By the way, I don't know why Selena Martinez was killed; that was none of me or my people.\"\n\n\"I don't doubt you.\" I said. I got up from the sofa. \"Well, that'll conclude our business. You can go. Have a nice, safe trip back to Europe.\"\n\nKaren peered at me. \"You didn't ask about Gonzales.\"\n\nI smiled, one of those smiles one does not want to see on my features. \"Mrs. Harlan, you are desperately hoping that I believe that my sister and her organization was behind Gonzales's murder.\" My gray eyes bore into her eyes as I said \"But I know better, just as I know who you made that other deal with. Again Mrs. Harlan, have a safe trip... to somewhere outside of my County.\"\n\n\"Au revoir, Iron Crowbar.\" Karen said as she walked to the door. \"Au revoir.\n\n* * * * * * * * * * * * * * * *\n\nThe fire pot on the deck of the Cop Bar was putting out welcome warmth as Cindy, Teresa, and I had an after-work beer.\n\n\"So Dawson's death will go unsolved?\" asked Teresa.\n\n\"Pretty much.\" I said. \"Word is getting out that it was a freelance hit team, related to the Jan Camp lawsuit against the University. She'd hoped to use Dawson to pressure the School into settling the lawsuit for a lot of money; now, they're going to fight it all the way, and if she wins it'll be less than what she wanted. And if she loses, she gets nothing.\"\n\n\"Will she win?\" asked Cindy.\n\n\"I won't be surprised if she does.\" I said. \"Or do you think the University's legal team can handle the job?\"\n\n\"I expect to see incompetence upon the Government's part.\" said Cindy. \"Jenna's not part of that team. They did not ask her. I think they're scared she might be sympathetic to Dr. Camp.\"\n\n\"Or that she'll botch it like she did the Luskin/Gordon case.\" said Teresa, showing no mercy for Cindy's feelings on that matter. But Cindy didn't flinch.\n\n\"Hell, with the Iron Crowbar on the other side of that,\" Cindy replied, \"Jenna didn't have a shot in hell.\" I realized there might still be some rankled feelings over that, but like my fellow Clan Troy member, I showed no mercy.\n\n\"Damn straight.\" I said. \"Just like those bastards in the State Legislature found out. Even if the Governor was going to leave Danielson bleeding on the battlefield, I wasn't going to leave the Governor in the same way... for Chief Griswold's sake, of course.\"\n\n\"That was you?\" asked Teresa.\n\nI smiled. \"The Governor received good pics of Grahamnesty Collins having gay sex... that Eddy the Bounty Hunter is good at photographing people having sex, almost as good as you, Teresa.\" Teresa smiled briefly, remembering her photography work in the 'Hot Wives Investment Club' case. \n\nI continued: \"Cerone and Molinari were amenable to working another peace accord; the BigAgraFoods civil rights lawsuit was a real problem for both Parties, and they accepted my idea of taking impeachment off the table in exchange for the Governor dropping those lawsuits. And the Governor started those lawsuits at my suggestion. As they used to say on that show 'The A-Team': I love it when a plan comes together.\"\n\n\"So answer me this.\" said Cindy. \"Who killed Selena Martinez? or was behind it, I should ask.\"\n\n\"I think that might've been Russell, maybe Collins or other bigwigs.\" I said. \"And very unnecessary, I might add. I doubt Selena was ever going to say anything.\"\n\n\"So if Karen was involved or had knowledge of Dawson and Fulmer,\" said Cindy, who'd been listening to my conversation with Karen from the children's room behind Laura's desk in her office, \"who was behind the Gonzales killing?\"\n\n\"Well,\" I said, \"Gonzales would never come into this State, but it wasn't because of the PED situation. He was afraid Senator Russell would try to kill him for the molestations, and in this State would get away with it. But I think others got to him, and to be honest, I don't care who it was... as far as I'm concerned, that dirtbag Gonzales can rot in hell for the things he did...\"\n\n* * * * * * * * * * * * * * * *\n\nFor the first time in seventeen years, all three high schools had away games this Friday night. To say I was enjoying the relatively peaceful Autumn evening was an understatement.\n\nAfter Teresa went home to Todd and their kids, Cindy and I headed to The Cabin. Molly and the boys were there, as were Laura, Carole, Jim, Bowser, Buddy... and Callie Carrington. We had a good late supper of hamburgers and hot dogs and fixins.\n\nAfter putting the kids to bed in the top-level room, with Bowser and Buddy on guard duty, Cindy and Callie went to bed in the third bedroom, while Molly went to 'her' room, the second bedroom. Laura asked if I wanted to share a nightcap on the back deck. So we took our drinks and a blanket out back, and snuggled in the metal mesh loveseat.\n\n\"So you sent Karen Warner Harlan packing.\" Laura said.\n\n\"Oh yes.\" I said. \"I can't prove she made the hire to kill Dawson, and that might not've been just her. The money she left behind was from a bank robbery she likely did, but again, I can't prove it. Butch Fulmer wasn't her... that was my pesky sister and Goth Girl Kathy at work, probably a dry run for stealing something from a museum in Europe.\"\n\n\"Must be hard, having to let all these perps go free.\" Laura said.\n\n\"In some ways, yes.\" I said. \"But as was written in 'A Tale of Two Cities': the needs of the many outweigh the needs of the few, or the one.\"\n\n\"True.\" said Laura. \"So, why don't we go to bed, where the needs of my body for your iron hard cock outweighs just about everything.\"\n\n\"You go ahead and get ready.\" I said. \"I'll be up in a second.\" Laura kissed my cheek, then went back inside.\n\nYes, I thought, the needs of the one... mainly me. She is not dealing with an Agency of the Weak Minded, you know. I did not fail to notice that my wife got me tickets to the Wildcats game and went with me and Carole, then was left alone as I took my daughter to the game. My wife did not need to go to the Science Library that day, nor did she go there at all. And that's because Laura was masterminding the operation to kill Coach Willy 'Speedy' Gonzales.\n\nYes.\n\nOf course my wife was acting to protect the University that employed her. Of course she'd ordered people killed before; it had been her job at times as part of her CIA duties. And Speedy Gonzales was a real dirtbag, a rapist and molester that my wife would have no problem having terminated with the most extreme of prejudice. So the 'police officer' that escorted Gonzales was anything but, and he met the destiny he so richly deserved.\n\nAnd Goth Girl Kathy, while working with my sister in France, was still part of the CIA, still sending the Company information out of France, as long as it didn't compromise her and Elizabeth and Karen Warner Harlan. So Butch Fulmer's elimination, while unfortunate, was accomplished.\n\nAnd the Pink Panthers... as Cindy correctly surmised, someone with knowledge of my disc golf bag was behind leaving the discs, and someone whose children watched Pink Panther cartoons. And since Laura was behind Gonzales's death, where a Panther was found, then she obviously was part of planting the discs. And I suspect Cindy had figured out that part of it herself.\n\nYes, I thought to myself as I got up to go inside, I'd rather have my wife in bed with me than in prison. So whatever anyone thinks of me keeping the dirty secret of Harlan and Gonzales, and not acting to bring the perps to Justice, they'll just have to deal with it that I was selfish on this one.\n\n* * * * * * * * * * * * * * * *\n\nIn their bedroom, Callie and Cindy were standing together at the foot of the bed, slowly undressing each other as they deeply kissed. They were both wearing high heel slides, and Cindy was still taller than Callie. The beautiful porn star blonde had to reach up to kiss Cindy's mouth, and she was doing so with raw lust.\n\n\"Mmmm,\" Callie said as she took off Cindy's shirt. \"I just love seeing this beautiful hardbody. You've been working out again, haven't you?\"\n\n\"Yes.\" Cindy said. \"Gotta keep up with you. Mmmmf!\" The ruggedly pretty blonde moaned as Callie cupped Cindy's left breast and sucked the long, hard pink nipple into her mouth. \"Oh, yeahhhhh...\" Cindy sighed as Callie sucked her right tit as their hands explored each other.",
        "After sharing another deep, tongue-twining kiss, Cindy pushed Callie back onto the bed. Both women kicked off their heels as Cindy eased her own body between the blonde beauty's shapely legs. She began kissing Callie's thighs and up to the glistening wet, swollen labes of Callie's cunt.\n\n\"Ohhhhhhh...\" Callie moaned as Cindy began licking her slit. She felt Cindy's tongue go deeper and deeper with each lick until Cindy's mouth was pressed to her cuntlips and her tongue was exploring Callie's cunthole. Waves of pleasure coursed through Callie's loins, and despite having been eaten and fucked by the hottest porn stars, male and female, nothing gave the beautiful blonde as much pleasure as being expertly eaten by her beloved Cindy.\n\nAfter long moments of preparation, tasting and feeling Callie's pussy gush as she came around Cindy's tongue, Cindy finally stopped eating Callie and got up off the bed. She began strapping on the 'electric' dildo. First she inserted the part meant for her deep into her own sopping wet cunt, feeling the firm plastic stretch her cunt until it was touching the back wall. Then Cindy set the straps and mounted Callie, who was pulling her lovely legs up and back. Callie guided the phallus to her cunt and moaned as it slid into her hole.\n\n\"Ohhhhh, yessss!\" Callie gasped out as Cindy's 'cock' filled her up. The muscular blonde began fucking the beautiful starlet, driving her hard ass forward again and again as she pumped Callie. The friction of Laura's invention sent small electric pulses to the other part of the device, and Cindy felt them in her own cunt.\n\nThe pleasure built up inside both of them as Cindy fucked Callie. Callie wrapped her legs around Cindy's back, keeping her trapped inside Callie's warm, leggy embrace. They kissed deeply, Callie pushing her mouth up to Cindy's and her tongue as far down Cindy's throat as she could get it. Cindy sucked hard on Callie's tongue, wondering what had Callie so hot and bothered and seemingly desperate for sex and deep, hard kissing...\n\n* * * * * * * * * * * * * * * *\n\nTwo hours later, Callie was lying on her right side, exhausted, her ass pressed into Cindy's hard abs, and wrapped in the warm embrace of Cindy's arms. Cindy had been kissing Callie's neck, interspersed with some more deep, tongue-twining kisses.\n\n\"Mmmm, baby,\" Callie said softly. \"That was soooooo fucking good.\"\n\n\"You were really hot tonight.\" Cindy said, feeling the pleasing lassitude of post-coital bliss after having had her pussy eaten for over a half hour after she'd finished her 'fuck' with Callie.\n\n\"I was thinking about one of our new niche films.\" Callie said. \"We've got this tranny, a chick with a dick. Asian, long hair, slender, nice artificial breasts. She, or 'he' as your cousin Don would say, has been fucking women on camera. He never had surgery to remove his cock, and its almost eight inches long. The films have been selling online like hotcakes.\"\n\n\"Sounds hot.\" said Cindy flatly, not really aroused.\n\n\"Wait until you meet 'Miko'.\" Callie said. \"You're coming with me next month, aren't you?\"\n\n\"Lord willin', and the Creek don't rise... as my cousin Don would say.\" said Cindy. \"But for right now... I just want to lie here holding you in my arms.\" She was drifting off to sleep as she said it.\n\n\"No problem with that.\" Callie whispered, smiling her beautiful smile and nestling her magnificent ass into Cindy's abs just a bit more firmly...\n\nPart 25 - Epilogue\n\nJohn Hardwood came into the room of the building to the north of the City, near the State Line. The chair behind the desk turned around, revealing the woman sitting in it. Hardwood stopped in front of the desk.\n\n\"What happened, Mr. Hardwood?\" the woman asked, her voice sounding angry and contemptuous.\n\n\"I don't know, ma'am.\" said Hardwood. \"Someone took out Rusty Dawson, then the others that knew were killed off.\"\n\n\"And the Iron Crowbar figured it all out,\" said the woman, \"but did nothing about it? Is there no 'integrity' left in anyone, anymore?\" Her voice was massively sarcastic as she said that.\n\n\"It's that ugly a secret, ma'am.\" said Hardwood. \"My editor won't run with it, either. And everyone from the CIA to European smugglers to Senator Russell are on the same side on this one... they're doing what it takes to protect the University.\"\n\nThe woman nodded, introspective. \"I should have realized that even the Iron Crowbar might suppress this. But he did get Quint Danielson out of prison. How did he do that?\"\n\n\"He got the Governor to sign the pardon.\" said Hardwood. \"How, I don't know. Maybe he threatened the Governor.\"\n\n\"Yeah, right.\" said the woman. \"Okay, so I suppose we cannot hope to get Harlan's dirty secret out. Too bad; I would've enjoyed seeing the University President and Dr. Fredricson suffer.\"\n\n\"Yes ma'am.\" said Hardwood. \"For me, I want to see the Iron Crowbar suffering. I want to see that bastard in pain. In serious pain.\" He said the words with abnormal intensity.\n\n\"To that end,\" said the woman, \"is your plan with Thomas Cook ready?\"\n\n\"It's close, ma'am.\" said Hardwood. \"We should be able to do it by Christmas, as planned.\"\n\n\"Good.\" said the woman. \"Okay, you can go. Get out of here. Continue to do your job with KSTD while waiting for your plan to come together, and while waiting for my further instructions.\" Hardwood nodded silently and left.\n\nA side door opened, and into the room walked Lieutenant Governor Graham Collins. \"So, Collins,\" the woman said, \"how did Jared weasel out of getting impeached?\"\n\n\"I don't know the 'why of it, ma'am,\" said Collins, \"but Cerone and Molinari stepped in and worked out a deal. And with them behind it, enforcing it, there's no hope of fighting it... though Katherine Woodburn swears she is going to try.\"\n\n\"We'll have to see about Katherine Woodburn.\" said the woman. \"Her loyalties might be in question... she looks at the Iron Crowbar like she wants to fuck his iron balls off.\" \n\nCollins whimpered \"Humph!\". Then he added \"So what's our Plan 'B' for getting me into the Governor's chair, and your lackeys into the SBI to make it your personal enforcement organization?\"\n\n\"I'm not sure.\" the woman said, her voice sounding not defeated but crafty. \"I was counting on impeachment; obviously the Iron Crowbar convinced Molinari and Cerone to work together again. Damn, but that man is just seeing one step ahead just one too many times...\"\n\nAfter a moment, the woman said \"Okay, Collins, get the hell out of here. Continue to attack Jared publicly; maybe we'll get lucky or maybe we can gin up a sexual harassment complaint against him.\"\n\n\"With the Iron Crowbar watching over him?\" asked Collins. \"Hell, he ripped Kendra Luskin's accusations apart. We need something better.\"\n\n\"And I'll have something for you soon. Get out of here.\" the woman said, curbing her temper. Collins finally left the room. The woman began thinking furiously. Just how can we get to that bastard, the Iron Crowbar? He's had more luck than a deer in a patch of four-leaf clovers, more luck than the fucking Pink Panther cartoon character... and it's time to turn that luck to the bad... to the very, very bad...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "lesbian sex",
        "drama",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/pink-panther-ch-04"
}