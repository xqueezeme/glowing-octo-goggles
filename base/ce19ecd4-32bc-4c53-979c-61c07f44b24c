{
    "title": "Studying Hard Ch. 02",
    "pages": [
        "The sounds of slapping skin and heavy panting filled the bedroom. This rhythm was interrupted by frequent moans. The heavy curtains blocked most of the morning sunlight from entering the room. \n\nPeter watched his Aunt Julia ride his cock in a reverse cowgirl position. She ground herself hard on his pelvis, all nine of his inches deep inside of her.\n\nJulia moaned in ecstasy, her clit rubbing on Peter's balls. He added to her pleasure by squeezing her round ass cheeks, playfully slapping them every few seconds. With each slap, she cried out in pleasure.\n\nShe adjusted herself so that she was squatting over her nephew, holding his legs for support. Peter thrusted his hips upward rapidly, his heavy balls slapping against her cunt.\n\n\"Yes, Peter! Fuck me just like that!\" Julia shouted. If anyone else was around in her large house, they would definitely have heard her.\n\nPeter complied and continued to plunge into her. His aunt threw her wavy dark brown hair around, giving him a show. She looked back at him with her beautiful hazel eyes, throwing in a wink.\n\nHe could feel himself tightening up. It wouldn't be long now...\n\nRINGGGGGGGGG!\n\nPeter gasped as he opened his eyes. He glanced over at his alarm clock. The time was 7:00 AM. Three hours before he had to take a quiz on the upper body muscles. He slapped the alarm clock off.\n\nRubbing his eyes, Peter sat up. It didn't take the huge tent in the bedsheet for him to realize that he was rock hard.\n\nThat was some dream, he thought. He couldn't remember how it started, and he wished he had experienced it to the finish.\n\nAs he went through his morning routine, Peter thought about how much his life had changed in the past week. For one, he had been able to learn a more efficient way to study his class material, which was practical assessment. He hadn't been able to see the results yet, but he could tell it was going to work.\n\nThe other major change was in his relationship with his aunt. Before last weekend, she had been his intelligent, wealthy, attractive Aunt Julia. Now, she was a sex goddess that could give Peter a very good fucking.\n\nIn addition, Peter was finding himself growing more and more attracted to his own mother. She and Aunt Julia looked very similar, but she was a year older and an inch or so taller. She also had auburn hair instead of dark brown, and it was a little shorter.\n\nThe biggest turn on so far for Peter was discovering, accidentally, that his mother had ordered a dildo. He would give anything to watch her use it.\n\nHowever, Peter's mother was much more conservative and didn't tease him like his aunt did. He could have his fantasies, but he didn't expect anything to actually happen with his mom.\n\nPeter examined his muscular body in the mirror as he brushed his teeth. He would have to be labeling many of these muscles later that day. As he spat out his toothpaste, his light brown bangs fell forward and almost covered his eyes. He made a mental note that he needed a haircut as he lifted them back into a short flow.\n\nAfter putting on some workout clothes, Peter went downstairs for breakfast. His mother was still asleep, so he stayed as quiet as he could.\n\nAs he scrambled his eggs, he noticed a text from his aunt. He opened his messages.\n\n'Good luck today, champ! You'll do great!'\n\n'Thanks Aunt Julia!' he responded. She texted back right away.\n\n'Let me know how it goes. Have fun with Ashley tonight. Condoms will be in the rightmost kitchen drawer. Also in my bedside table.'\n\nPeter's cock tingled at the thought of fucking his date in his aunt's bed. He shot one more text back to her.\n\n'Thanks a lot! I'll see you soon ;)'\n\nHe finished cooking his eggs and then devoured them, along with a serving of yogurt and glass of milk. Then he packed his backpack and headed out the door, grabbing his jacket from the closet.\n\nPeter was thankful that the quiz was all he had today in terms of academics. His anatomy class was his only one on Monday, Wednesday, and Friday. His other three classes were all on Tuesday and Thursday.\n\nPlus, after the quiz, he was going to have a great weekend. He could feel it.\n\n***\n\nAfter a solid workout at the campus fitness center, Peter studied his notes in his classroom. It would be about thirty minutes until Professor Martin would arrive with the quiz. He flipped through his notebook and came across the original diagrams he had drawn of his aunt's body. Her breasts were nice and round (the picture wasn't very realistic, but it portrayed his aunt's proportions very accurately).\n\nPeter daydreamed about his aunt for a moment. Just the thought of her sexy body made his cock begin to swell.\n\nNot now, Peter thought. I can think about her after the quiz.\n\nIt seemed like the half hour had passed in no time at all. Professor Martin suddenly walked into the classroom with his usual \"good morning, everyone!\" and passed out the quizzes. Peter scanned its two pages once he received his copy.\n\nHe labeled most of the muscles pretty quickly. For the ones he was stuck on, he pictured himself touching his aunt, like during their study sessions. That would trigger his memory.\n\nAfter about fifteen minutes, Peter had finished. He was confident that he had gotten an A.\n\nPeter smiled at Professor Martin as he turned in his completed quiz, giving him a thumbs up. Not wanting to disturb the other students, his teacher simply smiled back.\n\nLike usual, Peter glanced at the entrance sign as he left the building. He was on the right path, he thought, in terms of becoming a great physical therapist.\n\nHe sent a text to his aunt as he walked home. 'Quiz went well! Pretty sure I got an A.'\n\nAunt Julia didn't reply right away, so Peter opened his messages with Ashley. He sent her a text as well.\n\n'Hey I'm done with class for the day. What time do you wanna get dinner?'\n\nAshley didn't respond right away either, so Peter placed his phone back in his pocket and enjoyed the weather. It was in the fifties and not too windy. Many trees had lost their leaves, and kids were playing in piles on their lawns as Peter walked through his neighborhood. It must have been fall break for the elementary school.\n\nWhen he got home, Peter saw his mom raking the leaves. It appeared that she had just started.\n\n\"Hey mom! Need some help?\" he asked.\n\n\"Sure, honey!\" she said, visibly pleased. \"How was the quiz?\"\n\n\"I think it went well! I'm confident that I got an A!\"\n\n\"Wow, Peter, that's great!\" she squealed, dropping the rake and rushing over to hug him. Peter felt her soft breasts press into him through her jacket. Her auburn hair matched the leaves, and Peter had never seen her look so innocently beautiful.\n\n\"Thanks, mom.\"\n\n\"Keep up the hard work Peter, and I'll give you a special reward!\"\n\n\"What's that?\" Peter asked in surprise. He imagined a number of scenarios where his mom gave him a sexy reward.\n\n\"That's a secret,\" she teased, \"You'll like it. Maybe you'll get it for Christmas!\"\n\nPeter smiled and picked up the rake off the ground. He motioned for his mom to leave, but she insisted on staying out and chat with him while he raked the remainder of the leaves onto the street.\n\nWhen he was done, they went inside for some lunch and hot chocolate. While his mom prepared the meal, Peter saw that both his aunt and Ashley had responded to his texts.\n\n'I knew you could do it! I'll give you your reward tomorrow ;)' his aunt teased.\n\n'Hi! Let's eat at 6!' said Ashley.\n\nPeter sent his aunt a 'Can't wait!' and Ashley a 'sounds good, I'll pick you up a few minutes before then.'\n\nHe put his phone away and watched his mother make his lunch from behind. Her black yoga pants accentuated her legs beautifully- especially her peachy ass. She wore a light grey blouse and Peter imagined a nice show of cleavage on the other side. He was disappointed when she turned around to hand him his plate, her breasts safely inside of her top.\n\nPeter enjoyed the chicken salad she made for him and went to his room to play an online video game with Tristan (a first-person shooter). It didn't take long for their conversation to include girls, despite the game's demand for concentration.\n\n\"So I hear you're taking Ashley out to dinner,\" Tristan said over the headset.\n\n\"Yeah,\" Peter replied, \"I think we really hit it off last weekend. I haven't been on a date in a while, so I just figured I'd go for it.\"\n\n\"Thinking about getting in her pants?\" Tristan asked. He was always very direct with his questions, looking for detail.\n\n\"That's none of your business,\" Peter said, smiling. Tristan could sense his smile loud and clear.\n\n\"Good luck, dude,\" was his last response before they focused on the game for a few more minutes.\n\nPeter decided to continue the conversation. He thought back to Ashley's black-haired roommate. \"How about you and Kirsten? She's pretty hot.\"\n\n\"Yeah, we saw each other on Wednesday night. I might call it off though,\" Tristan admitted. \"I'm not really looking for a relationship, which is what she seems to want.\"\n\n\"How come?\" Peter asked, although he already knew the answer. Tristan wanted to sleep with as many girls as he could.\n\n\"I just want to enjoy the college experience as a single male,\" he confessed. They both laughed.\n\n\"She is pretty good in bed,\" Tristan continued. \"I might try to get with her one more time. Not too common for college girls to really know what they're doing under the sheets.\"\n\nPeter snorted. He didn't agree with Tristan's approach to sex. He didn't like the idea of using a girl for some relief, especially if the girl was attracted to him.\n\n\"Well,\" Peter said, \"don't take advantage of her. If you're gonna dump her, it's not fair to use her for sex before you do.\"\n\n\"We aren't dating. I won't be dumping her.\"\n\n\"Whatever, man.\"\n\nThey dropped the topic and continued playing the game. After another hour or so, Peter said goodbye and went back downstairs to see his mom before getting ready for his date.\n\nPeter was surprised to find Aunt Julia sitting across from his mother in the living room. She was wearing leggings and a long-sleeved checkered shirt. Both of the women smiled at Peter.\n\n\"Hey Peter! I made a surprise visit to steal your mom away for some shopping! I hope that's okay with you.\"\n\nPeter knew this, but he saw what she was doing. \"Yeah, that's fine. I actually have a date tonight, so I won't be around anyway.\"\u2028\u2028Julia smiled at him, but not in a way that said 'and I know you'll be fucking her at my house.'\n\n\"Oh, cool!\" she chimed. \"What's her name? Where are you going?\"\n\nDamn, she was good at improvising. They hadn't planned this conversation at all.\n\n\"Her name is Ashley. We're going to Moe's for dinner and then probably to a party or something, depending on the time.\"\n\nMoe's was a small local burger joint near the center of town. It was a classic first date location. \n\n\"Sounds fun! I hope you have a wonderful time.\"\n\n\"Don't drink too much,\" Peter's mother added. \"Remember you're still underage. If I could stop you college kids, I would. But I know everyone does it.\"\n\nThe two women smiled at each other, apparently reminiscing about their early adulthood. Peter promised his mother that he wasn't planning on drinking at all anyway. Aunt Julia and his mom left to go shopping while Peter went back upstairs to prepare for his date.\n\n***\n\nPeter watched his date cross the lawn from her dorm to his car. She was wearing a nice pair of jeans and a green low cut shirt under a light grey jacket. A black purse bounced on her hips as she walked. They had agreed to dress casually. However, that didn't stop her from applying a healthy amount of makeup. She didn't go overboard by any means, but she looked damn good in her eyeliner and shadow. Her blonde hair was neck length and wavy. It was straight when Peter met her last week, and he couldn't tell which was her natural hair type.\n\nAshley smiled at him as she approached the car. It was nice to see her in a sober state. Peter got out of the car and opened the passenger door for her.\n\n\"Such a gentleman!\" she teased. \"You look nice, tonight!\"\n\nPeter was wearing an open flannel shirt and white t-shit with khaki pants. His hair was pushed back into a short flow.\n\n\"Thanks! You look amazing yourself! It's good to see you,\" he said. Ashley blushed as she got in the car. Peter got back in too, and they drove to Moe's.\n\nAs they entered downtown, they both commented on the beautiful evening lights and cute architecture of the buildings. Peter was familiar, as he had lived here for almost his entire life.\n\n\"Where are you from, Ashley?\" Peter asked.\n\n\"Near the city. It's about a 45-minute drive. I like the smaller town feel here. The school is a nice size too, which is nice. How about you?\"\n\n\"I grew up here. I stayed for school to save money, which is why I live out of my house with my mom.\"\n\n\"Oh, I didn't know that! I suppose that's why I don't see you around the dorms much.\"\n\n\"Yeah. It's nice having my own room and less distractions. Plus, it's not a long walk to campus.\"\n\n\"What about seeing your mom all the time? Do you ever feel like you need some space?\"\n\n\"Actually, no. My mom and I are pretty close and we almost never get on each other's nerves.\"\n\nPeter recalled his mother's attractiveness but quickly pushed his incestuous fantasies away. He was on a date with a hot girl, and he didn't want to get distracted.\n\n\"That's nice,\" Ashley said. \"I argue with my parents a lot, but we still love each other. It's nice to be living apart from them.\"\n\nThey arrived at the main strip and Peter parallel parked across the street from Moe's. Peter led her inside and they sat at a booth by the front window. It was a small restaurant with a 1950's style theme. The waitress attended to them very quickly, and they both ordered a water.\n\nPeter admired Ashley's choice of clothing. Her shirt accentuated her breasts nicely, and a small amount of cleavage begged to be let out. While Ashley's breasts were not as big as his mother's or aunt's, they were impressive for a college girl.\n\nHe also appreciated that Ashley's behavior was much more moderated than last weekend. Peter was sure that she remembered his cock, and was hoping that she wouldn't address it until they were at his aunt's house. He wanted to get to know Ashley outside of the bedroom.\n\n\"What classes are you taking this semester?\" he asked.\n\n\"I'm in the intro classes for psych, bio, and econ, and a writing 101 class,\" Ashley explained. \"I'm really interested in psych so I might make that my major, but I haven't declared it yet. How about you?\"\n\n\"Hey, I'm also in intro to econ! Plus, anatomy, European history, and an elective called power, privilege, and oppression.\"\n\n\"That's interesting! Do you have a major?\"\n\n\"Health and exercise science. I want to be a physical therapist.\"\n\n\"Cool! You can probably help a lot of people with that.\"\n\n\"That's the idea,\" Peter said. He liked that Ashley was taking interest in him.\n\nThe waitress returned and they both eagerly ordered their burgers. The two made more small talk before honing in on the subject of history. Turns out they were both big history nerds.\n\n\"I looove learning about ancient civilizations, like the Romans and Greeks,\" Ashley said. \"I think the classical era is just super cool.\"\n\n\"Me too! Although I like the Medieval era better. I find the society of the time very fascinating.\"\n\nAshley laughed. \"Look at us, speaking all scholarly. I didn't expect you'd be so into history!\"\n\n\"I don't really read about it as much as I did in high school. Especially because I'm in that history class now, which is more work than fun,\" Peter said.\n\n\"What I meant was that a guy like you doesn't really seem like the academic type. You're more like a sport guy, or... lifting guy,\" Ashley admitted.\n\n\"Well, I did play football in high school. But I wasn't really into hitting people,\" he replied. \"And also, I'm not really the academic type. I'm even having some trouble in a few of my classes.\"\n\n\"Do you need some help? You can find a tutor on campus.\"\n\n\"Actually, my aunt has been helping me study. I think her methods are working, because I had a lot less trouble with the quiz I took today.\"\n\nPeter couldn't hold back a smirk as he remembered his last study session with Aunt Julia.\n\n\"What?\" asked Ashley, smiling.\n\n\"Nothing, just remembered something funny my aunt told me. You had to be there. She's just really friendly and smart and, well, cool.\"\n\n\"She sounds cool. I'd like to meet her sometime.\"\n\n\"Sure! She actually left us her house tonight, if you'd like to come back with me after dinner. We could watch a movie or something. She's got a pretty big TV.\"\n\nAshley briefly bit her lip before smiling broadly. \"That sounds fun! Let's do it!\"\n\nTheir food finally arrived and Peter watched Ashley take her first bite.\n\n\"Holy shit, this burger is delicious! I didn't expect this from such a small burger joint!\"\n\n\"Yeah, they're really quality,\" Peter said as he bit into his own. Neither of them talked much as they both devoured their burgers with eagerness.\n\nFollowing some more conversation, and the indulging of some chocolate cake for dessert, Peter and Ashley left the restaurant around 7:45 in high spirits. Peter loved watching her talk passionately about whatever the conversation topic was. He really liked this girl, and was very thankful that his aunt had left them the house. He didn't even care if they had sex or not (although it was likely they would). He was just happy that they were able to finally spend some quality time together.\n\nWhen they arrived at his aunt's house, Peter checked his messages. Aunt Julia had let him know that the key was under the door mat and there was a little present for the two of them inside. Peter opened the door for Ashley and they entered the big, empty house.\n\n\"Nice place,\" Ashley said in wonder as she observed the interior of the home. All of the rooms in sight were very cozy, and it had a warm and welcoming feel. Peter led her straight back to the kitchen.\n\nOn the island stood a bottle of white wine and two glasses. There was a sticky note on it containing just a smiley face.\n\n\"Wine?\" Ashley wondered.\n\n\"My aunt said she left us a surprise. I told you she was cool.\"\n\n\"Wow!\" she exclaimed. \"So, nobody is home? Does she life here alone?\"\n\n\"My uncle is out of town a lot, but he lives here too. They didn't have any kids.\"\n\n\"I see...\" Ashley said. They awkwardly stood there for a moment, like they both knew what was going to happen, what they both wanted to happen. But they didn't know where to start.\n\n\"I can pour us some wine and set up the TV if you wanna take a seat on the couch,\" Peter finally said. \"I'll just be a second.\"\n\n\"Sure,\" she replied, removing her jacket and placing it on the island. Peter poured her a glass and handed it to her, then poured one for himself as she walked to the other room. He then followed, setting his glass down on the coffee table and picking up the remote.\n\n\"Any preferences?\" He asked, turning the TV power on and opening the guide.\n\n\"Not particularly,\" Ashley said. \"Maybe something mindless.\"\n\nPeter noticed that her second comment was a little quieter and inferred that she wanted to get physical more than she cared to watch something. Peter turned on a classic Halloween movie that he knew almost everyone had seen and set the remote down. He sat back on the couch and Ashley scooted next to him, under his arm.\n\nThe movie had barely started when Ashley spoke up.\n\n\"Thanks for dinner, Peter,\" she whispered, looking up at him. Her ocean blue eyes were bright even in the dim light of the room.\n\n\"Of course,\" he replied. He took a sip of wine, and she mirrored him.\n\n\"Hey,\" she said, \"I wanted to apologize for my behavior last week. I was a little too drunk and I don't remember everything, but I know I was a little out there. I'm sorry if it was a bad first impression.\"",
        "\"Don't worry about it,\" Peter said honestly. \"I asked you out afterwards, didn't I? You didn't turn me away or anything.\"\n\n\"Still, it probably wasn't fun getting walked in on like that.\"\n\n\"Oh, so you do remember?\" Peter grinned.\n\n\"Only a few details,\" Ashley admitted, biting her lip. \"I wish I remembered more, but from what I do remember, it was a worthwhile night.\"\n\nPeter couldn't think of a good response, so he just smiled down at her. She leaned towards him and her lips met his.\n\nIf last week's kiss from Ashley was the sloppiest he had ever had, this one was quite the opposite. It was very gentle and soothing. She placed her hand on his bicep and affectionately massaged him with her thumb. He felt his blood flowing and his cock rising.\n\nAshley moved her hand from his arm to the back of his head, increasing pressure on his lips. Peter reciprocated with his mouth and with his hand, which reached over to stroke her wavy blonde hair. She pressed her breasts softly into his muscular chest, which caused her to sigh slightly.\n\nAs they kissed, Peter became aware of her nipples hardening through her shirt. As he was distracted, Ashley slipped her tongue into his mouth. Their tongues danced around each other, slowly and delicately.\n\nHis cock was straining to be released from his pants. While he knew where this was heading, he wanted them to take their time. Something about Ashley was very attractive to Peter, something he didn't notice last weekend. Maybe it was her sense of control, which she lost when she was drunk.\n\nPeter had to do something about his erection. He was now fully erect, but uncomfortable in his tight khakis. He decided to try and turn towards Ashley so that he could lean forward a bit more.\n\nWhen Peter shifted slightly to make his crotch more comfortable, Ashley backed away. Her face remained close to his, and she looked straight into his eyes with desire.\n\n\"Would you like to stay here, or go up to the bedroom?\" Peter asked.\n\n\"A bed might be better suited for what I had in mind,\" Ashley whispered.\n\n\"And what's that?\"\n\n\"I want to suck your huge cock again.\"\n\nPeter was at a loss for words as Ashley grabbed his hand and guided him from the couch. She led him down the hall and up the stairs.\n\n\"First room on the left,\" Peter said, indicating where the master bedroom was. They entered the room and Ashley let go of him, taking a seat on the bed. Peter stood proudly in front of her, his cock threatening to break through his pants. Ashley glanced up at him with a look of innocence.\n\n\"May I?\" Ashley pleaded.\n\n\"I'm all yours,\" Peter insisted. Ashley playfully tugged at his belt before unbuckling it. She obviously knew what she how to work around a guy's pants.\n\nAshley stripped his pants and briefs down simultaneously, allowing Peter's cock to spring free. Despite having saw it a week ago, Ashley gaped at the sight of his nine-inch monster.\n\n\"Fuck, I've been thinking about this thing nonstop for a week,\" she said. \"I don't think I was appreciative enough last week. Let me show you how grateful I am that you're sharing yourself with me.\"\n\nBefore he could respond, Ashley sank to her knees on the floor and gently grabbed his throbbing shaft in one hand and his balls in the other. Peter moaned at the pleasure of her soft touch. She massaged his balls while she began to pump his cock.\n\n\"I can't believe how big it is!\" Ashley exclaimed. \"I'm not sure if it'll even fit anywhere.\"\n\nPeter hoped it would fit inside her. His aunt was able to take him easily, but would Ashley be able to?\n\nFailing to come up with a response, Peter merely grunted in pleasure. Ashley held his cock upward and kissed the underside of his shaft near his balls. She kissed him repeatedly as she worked her way up his shaft. When she reached the tip, she curved her lips around it.\n\nSlowly, Ashley began to pump Peter's cock in and out of her mouth. At first, she only took his tip, which nearly made Peter thrust his hips forward. As if sensing his tension, Ashley took a couple of more inches into her mouth.\n\nPeter grabbed her hair as she bobbed her head on his dick, helping to control her movements. Ashley took his shaft deeper with each thrust, until she started gagging. She withdrew with a gasp, some drool dripping onto her chest.\n\nShe ran her lips along the side of his shaft before bobbing her head on Peter's cock a few more times. Then she held his dick still, massaging his balls and flicking her tongue across the head.\n\n\"Let me take my top off before I get it too messy,\" Ashley said, letting go of his cock. Peter watched her grip the bottom of her shirt and lift it up and over her head. Her breasts bounced eagerly within her black lace bra. She stared at him seductively as she unclipped it from the back and let it fall to the floor.\n\nPeter marveled at how naturally perfect her breasts were. They had the slightest droop and appeared firm. Like Peter suspected last week, they appeared to be C cup in size. Her nipples were penny-sized and protruding exquisitely.\n\n\"Now,\" Ashley said shaking her hair, \"let me continue sucking that gorgeous cock of yours.\"\n\nShe leaned forward and pumped Peter's cock with both hands while sucking on his tip. Peter began to feel weak in the knees. He was surprised that he hadn't cum yet.\n\nAshley must have felt his knees buckle, because she guided him over to the bed so he could sit. They switched places and she continued to suck his cock.\n\nPeter fell backwards on the bed, marveling at the sensations she was giving him. Her mouth felt warm around his dick and her deliberate sloppiness was arousing. He never wanted it to end, and was doing his best to hold back for as long as he could.\n\nHe could feel his cock flirting with the back of Ashley's throat. Suddenly, she relaxed and attempted to take more than a few inches of him into her mouth. While Peter was thrilled, he wasn't sure she could take his thick cock very far.\n\nIt wasn't long before Ashley gagged and withdrew him from her mouth, saliva coating the top five inches of his shaft. She tried again, holding him at the base and widening her mouth, but didn't make it any further than the first time. She gagged again before taking his balls in her mouth.\n\nPeter wondered what a real deepthroat would feel like. Maybe his aunt could help him out...\n\nHe pushed those thoughts aside, focusing on the beautiful blonde kneeling before him. He sat up and gripped her hair again, gently but confidently. The point of no return was imminent, and he was sure Ashley could tell, because she started to bob her head on his tip while pumping him with two hands.\n\n\"Fuck yeah,\" Peter growled. His body began to tighten, and Ashley held out her tongue while continuing to pump him.\n\n\"Give it to me,\" Ashley begged. \"I want to taste it!\"\n\nPeter grunted as he unleashed his orgasm into her mouth. The first several shots were powerful, and despite her well-aimed grip, the first stream shot into her cheek. Ashley took the remaining shots into her mouth, massaging Peter's balls and continuing to pump him.\n\nAs the powerful wave of pleasure subsided, Peter stared at Ashley, panting. She playfully pumped him a couple more times before sticking out her tongue, showing him the prize. He mentally captured the sight of her cum-streaked cheek and mouthful of jizz before she swallowed it in a single gulp.\n\nAshley giggled. \"Damn, Peter! That was incredible!\"\n\n\"Talk about incredible, look at what you did to me!\" he exclaimed. She studied his throbbing erection and laughed as he squeezed out a last strand of semen.\n\nHe noticed a hand towel on the nightstand and grabbed it for her. She blew him a kiss as a thank you. While she wiped her face clean, Peter reached into the drawer and took out a condom.\n\n\"Fuck, you're still hard!\" Ashley said, staring at both his cock and the condom.\n\n\"I'm ready for more, if you are,\" he replied.\n\n\"I want to, but... I'm not sure I can fit that monster in me.\"\n\n\"Let me get you ready then.\"\n\nPeter picked up Ashley and threw her on the bed, causing her to squeal. She spread her legs and allowed him to remove her jeans, leaving her naked except for a pair of visibly soaking black panties.\n\nHer scent drifted quickly to Peter's face, and he cherished her intoxicating smell as he knelt down in front of her. Ashley lifted her hips and let him strip her wet panties off of her legs.\n\nAs he gently kissed his way up her thighs, he watched her pussy drip with anticipation. He knew he wouldn't need to tease her for long to get her to climax, but he wanted to give her one hell of an orgasm. Ashley sighed as his kisses approached her labia. \n\n\"Ohhhh, Peter!\" she moaned as she sat up on her elbows to watch him. She reached over his head and gripped the back of his hair, guiding him to the center of her pelvis.\n\nPeter complied with her eagerness and licked around the perimeter of her labia. Ashley cooed as she watched him slowly eat her pussy. As he flicked his tongue across the center, she subtly thrusted her hips into his face. Peter playfully withdrew and kissed the area around her pussy, causing her to twitch.\n\n\"Get back here, you tease,\" she begged, drawing him back to center. He dipped his tongue inside of her, savoring the sweet taste of her nectar before exploring her exterior again. Ashley's humping became less and less subtle each second.\n\nPeter slipped his tongue inside of her once again, staying for longer. As he tongue-fucked her pussy, he reached in with one finger to give her even more pleasure. Ashley fell back and gripped her breast with the hand that wasn't clinging to Peter's hair. \n\nAs he passionately ate her pussy, Peter managed to remove the condom from its wrapper and put it on his throbbing cock.\n\nHe inserted a second finger and began to thrust his hand more rapidly, withdrawing his tongue and flicking her pussy just under her clit. He could feel her juices flowing on top of the sound of sloshing. Sensing it was time, Peter curled his fingers up and massaged her g-spot while gently nibbling on Ashley's clit.\n\nAshley opened her mouth to scream, but no sound managed to escape her. She hunched forward and then back again, bucking her hips wildly into the air. Peter finger-fucked her for a few more seconds, sending her orgasm into overdrive. Then he held still inside of her and let her ride it out for a good ten seconds.\n\nAs Ashley finally relaxed on the bed, eyes closed and breathing heavily, Peter stood up and pulled her towards him with her legs. He aligned his cock with her freshly soaked opening and rested her legs on his shoulders. When she felt his tip touch her pussy, she gasped and opened her eyes, watching his monster prepare to enter her.\n\nPeter thrusted forward and found her to be tight, but not as much as he expected. The orgasm he gave her definitely got her ready.\n\n\"Fuuuuuuuuck...\" Ashley moaned as he slid about four inches into her. He paused to let her adjust, then withdrew a couple inches. When he thrusted forward again, he made it to seven inches, and sensed that the last two would be a little more difficult.\n\n\"Damn you feel good!\" Peter exclaimed as he slowly humped her without bottoming out or completely withdrawing. All Ashley could do was moan and coo at the feeling of fullness. \n\nPeter held her calves and began to pick up his pace. Her tits began to bounce as he fucked her harder. Ashley alternated between staring down at his penetration and lustfully into his eyes.\n\n\"Faster,\" she instructed. Peter obliged, thrusting faster into her tight, wet pussy. He let himself fall forward on the bed, her legs pinned under him so that they were close to her face. She grabbed her thighs and Peter put his hands on the bed for support. Then, he began to thrust as fast as he could.\n\n\"Fuck Peter! Yes! Fuck me hard, just like that!\" Ashley screamed.\n\nHe didn't think he was going to last long at this rate, despite having ejaculated not too long ago. Her pussy was incredibly tight, despite being so wet that he could her the sloshing sounds of his penetration. He didn't want it to end, but he also felt a connection to Ashley. He supposed they would be doing more things like this in the future, and he didn't have to worry if this would be their last time.\n\n\"Ohhhh, Peter!\" she moaned. He sensed a coming orgasm and moved his right hand down to her clit, rubbing it with his thumb to match the tempo of his thrusts. That sent her over the edge. Her body wreathed underneath him as her pussy contracted around him so tightly he had to slow his thrusts. A gush of warmth flooded through her and around his cock. Peter slowed his movements down to a minimum to try and slow his own release.\n\nOnce Ashley's orgasm subsided, Peter withdrew himself slowly. She shuddered once he was out of her, and giggled as he flipped her over onto her knees. He wanted to keep fucking her and prolong his release, so instead of sticking his cock back in, he gave her ass a playful slap and stuck two fingers into her pussy. Ashley cooed at the sensations, turning around her head to watch him finger her as best as she could.\n\n\"I want your cock back inside of me,\" she begged. Her look of desire caused Peter's cock to twitch.\n\nHe withdrew his fingers and aligned his cock with her pussy, but did not inter her. Instead, he rubbed his tip along the outside of her labia and along her clit. She moaned in eagerness, eventually attempting to thrust backwards onto him. But Peter wanted to tease her and prolong his orgasm as long as possible, so he shifted backwards along with her.\n\n\"Ugh, you tease!\" Ashley whimpered, spreading her ass cheek with her hand. Peter was ready, so he grabbed both of her hands and held her up as he slowly penetrated her once again. She whimpered at the feeling of fullness that he gave her.\n\nPeter bottomed out and then started thrusting at a short and rapid pace, causing her ass cheeks to ripple and her mouth to gape. He could tell that Ashley liked it a little rough, so he let her chest fall to the sheets and grabbed her ass with his hands. He squeezed, lightly smacked, and caressed them while he continued to fuck her hard.\n\n\"YES PETER! GOD! FUCK YOU'RE SO GOOD!\"\n\n\"Yeah? You like that?\" Peter grunted.\n\n\"FUCK YES! KEEP GOING!\"\n\nHe liked that she was becoming more vocal. He continued to pound her hard, grabbing her hair and pulling her head back. She shifted up onto her hands and her eyes made contact with his over her head.\n\n\"FUCK FUCK FUCK FUUUUUU...\" she moaned between thrusts. With his free hand, Peter reached under her and massaged her breast. When he pinched her nipple, she arched her back so forcefully that Peter easily pulled her body upright and against his. In their new position, he grabbed both of her tits in his hands and squeezed them while he continued to fuck her tight pussy.\n\nAshley's body tightened in a mini orgasm when Peter pinched her nipples again. He leaned around her face and kissed her passionately as he slowed his pace. Their tongues explored each other's mouths once again, and she moaned at the taste of her own juices.\n\nPeter once again felt his impending release, and this time it was coming much more rapidly. He wasn't sure he could hold back any more, and Ashley had taken quite a fucking already.\n\n\"I'm going to cum soon!\" he groaned. \n\n\"Do it on my tits!\" Ashley exclaimed. \n\nPeter thrusted a few more times before withdrawing, causing Ashley to squeal. He yanked the condom off while she turned around and kneeled before the bed, cupping her tits in her hands. She stuck her tongue out while he pumped his cock.\n\n\"UGHHHH!\" he grunted as his body exploded, his dick sending stream after stream of semen onto Ashley's chest. While difficult, he had managed to keep his eyes open and watch the pretty blonde take his load with passion. Although he aimed at her tits, one of the spurts had hit her chin and another her lip.\n\nTwo streams of semen dropped off of her face and onto her glazed chest, which had caught the remainder of his load. She sexily scooped some of the stream off of her chin and lips and slurped it into her mouth. Then she stuck out her tongue and squeezed her tits. She looked down at her covered chest and laughed.\n\nPeter exhaled loudly and put his hands on his hips.\n\n\"Fuck, that was good.\" he said, panting.\n\n\"You can say that again,\" Ashley said, reaching over for the towel that was on the floor. She squealed when she touched it to her chest. He gave her a look of surprise.\n\n\"The semen from the first time is cold!\" she cried. She flipped it over and patted herself as clean as she could, but it was difficult for her to wipe all of Peter's semen off of her.\n\n\"We should probably take a shower,\" Peter suggested.\n\n\"Good idea! Although I don't think I can take any more of your cock tonight,\" she admitted.\n\n\"That's okay, I'm pretty spent too. Though I can clean you up if you'd like?\"\n\n\"Hell yeah I would like that!\"\n\nThe two excitedly made their way to the master bathroom, where two towels were waiting for them on the counter. Peter turned on the shower and then left the room to check his phone while Ashley peed. The time was 9:33. They had been fucking a lot longer that he had realized.\n\nHe sent his mom a quick text that he was staying overnight at Ashley's dorm, and not to wait up for him.\n\n\"Ready, Peter?\" Ashley called from the bathroom.\n\nPeter joined Ashley in the shower and they kissed slowly and tenderly. They playfully caressed each other's bodies, sometimes with soap and other times just for fun. Peter's cock stayed in a semi-erect state, too worn out to fully enlarge. He rinsed her short hair with shampoo and conditioner after making sure her whole body was clean. When they were done, Ashley leaned down and gave his cock a sensual kiss on the tip, holding it in her hand like a delicate snack.\n\n\"Thank you for tonight,\" Ashley said. \"Not just for the great sex, but also a fabulous dinner and conversation. I really had a good time.\"\n\n\"I did too,\" replied Peter. They smiled and kissed again.\n\nThey two dried off and hopped into bed, not bothering to put on their clothes. Ashley snuggled against Peter's side with her hand on his chest. He reciprocated by wrapping his arm around her. She closed her eyes and sighed peacefully.\n\n\"Are you sure your aunt won't mind us sleeping in her bed?\" she asked.\n\n\"She gave us the house knowing that we'd have sex. She told me we could go anywhere we want. I think she's totally fine with it.\"\u2028\u2028\n\n\"Is she coming back tonight?\"\u2028\u2028\"\n\nI'm not actually sure. If she is, she probably wouldn't make herself known to us. She'd probably sleep in the basement.\"\n\n\"Okay. I think it'd be a little awkward seeing her in the morning, since she'd know what we'd been up to,\" she laughed.\u2028\n\n\"Yeah,\" Peter chuckled, but at Ashley's unknowing of the situation, not the idea of what Aunt Julia would think. His aunt would probably ask him for all the details before fucking him herself. Maybe she would even try to imitate all of their positions. Whatever her plan was, Peter knew that they would have fun tomorrow.\n\nThey both said goodnight and Peter clicked the lamp off.\n\n***\u2028\n\nPeter awoke on Saturday morning feeling very rested. He felt a naked Ashley lying next to him, facing away. A very thin line of light peeked through the curtains, but it was still too dark to really see anything in the room.\n\nAshley snoozed and shifted slightly away from him. Peter carefully reached over for his phone, careful not to move the bed too much. He turned the brightness of his screen down before unlocking it. The time was 8:42 AM. He had several messages from both his aunt and his mother. He opened Aunt Julia's texts first.\n\n'Hey stud! Hope you had a great night with Ashley! Hope she didn't drain you too much ;)'\n\nPeter smiled after reading the first message. His aunt followed by sending him a selfie, depicting her wearing her checkered shirt from the previous day. It looked like she was in the bathroom. She held the camera high above her and looked up into it with a gorgeous smile. Her shirt was unbuttoned at the top, revealing a large amount of cleavage. It took him a moment that her leggings were missing, and her bare and smooth legs peeked out from under her shirt. His mouth watered and his cock stirred.",
        "After saving the picture, he scrolled and saw another message: 'Had a good talk with your mom after shopping. You'll thank me soon, be patient ;)'\n\nOne final message from Aunt Julia read: 'I'm in the basement. Let me know when you're coming downstairs and I'll go for a jog while you make breakfast and take her home.'\n\nHe read his mom's first of two messages next, from earlier in the evening: 'Hey Peter. Hope you had a fun night! I had a good time with Aunt Julia, she gave me some insight on some things. I'd like to talk to you sometime when you're free, but no rush! Love you!\"\n\nHer second message was from 3:17 AM, which Peter found strange. It read: 'Just thinking about my big and strong man. Hope you're fast asleep. Love you.'\n\nPeter thought about all of his messages for a few minutes before Ashley stirred. He took the opportunity to get out of bed and go to the bathroom, finding his pants and shirt on the way. After peeing, he crept downstairs to start making breakfast.\n\nHe texted Aunt Julia that he was starting breakfast and that Ashley was still asleep. In a moment his aunt met him in the kitchen, wearing a full covering of running gear.\n\n\"Good morning, sexy!\" Julia cooed. Peter looked down at his loose khakis and open flannel. He neglected to put on his t-shirt and his chest and abs peeked out. Julia walked over and trailed her finger up from his crotch to his chin, pulling him in for a kiss. Peter savored her sweet lips and experienced tongue.\n\n\"Hey, not when we have company!\" He scolded her. She caught his grin and patted his oblique muscles.\n\n\"I'm going to go for a long run so you have plenty of time to get her fed and out of here. I want you to be back by noon.\"\n\n\"Is that when we're eating lunch?\"\n\n\"Call it what you like,\" she sighed. Peter smiled and gave her breasts a squeeze.\n\n\"Hey, not when we have company!\" she teased, echoing his earlier remark. He gave her a quick peck on the lips and smack on the booty to send her off. Then he started making chocolate chip pancakes for himself and Ashley.\n\nAs he cooked, he watched his aunt depart. She left through the front door, obviously aroused. She gave him a sly smile and quietly closed the door behind her.\n\nPeter made several glances out the window as he prepared breakfast, appreciating the serenity of the colorful leaves and morning air. He mindlessly whistled some tune that he had heard recently while pouring the pancake batter onto the griddle. He heard Ashley walking down the stairs while he flipped some of the pancakes.\n\n\"Good morning!\" he said happily, turning around to shoot her a handsome smile. Her blonde hair was straight now, since they had showered, and she was only wearing Peter's white t-shirt. She smiled back, but he quickly noticed that she was limping.\n\n\"What's wrong?\" he asked.\n\n\"I have a freshly fucked pussy.\"\n\n\"Oh jeez, I'm so sorry!\"\n\n\"It's okay!\" she laughed, sitting on a stool at the island. \"I've just never been fucked so well and I'm just sore because I'm not used to it.\"\n\n\"Can I get you some painkillers?\"\n\n\"That would be great,\" she smiled.\n\nPeter finished the batch of pancakes and placed them on a plate. He slid the plate over to Ashley and placed some syrup and whipped cream within her reach. He also poured her a glass of milk at her request.\n\n\"I'll be right back,\" he said, hurrying upstairs to fetch the painkillers. He found them in the master bathroom cabinet. He returned to Ashley and gave her the bottle, letting her select however much she needed.\n\n\"Thank you,\" she said, popping a few in her mouth and gulping down some milk. Peter returned to cooking as Ashley continued to eat.\n\n\"Other than the soreness, I'm feeling really good,\" Ashley told him, smiling. \"I feel like I'm glowing.\"\n\n\"You are glowing, but because you're beautiful, not because I fucked you.\"\n\n\"Damn, you sure know how to make a girl feel special,\" she said. \"I don't understand how I hadn't heard about you from other girls.\"\n\n\"I'm not really the hookup type,\" he admitted. \"I've only had sex with one other girl since school started and I haven't seen her since.\"\n\n\"But what about other dates like me? Surely some other girls have shown interest in you, your muscles and humility and all.\"\n\n\"Yeah some have. But I've been so focused on school I haven't really been interested in going on dates. Luckily my aunt is helping me out there, so I'm not as stressed now. But I still have some ways to go.\"\n\n\"I'm lucky that you chose me for your first college date,\" she said. \"Very lucky, in fact. I never thought sex could be that good.\"\n\n\"Yeah, you were amazing! But I also had fun getting to know you at dinner and in the car. I think you're really cool.\"\n\nPeter finished the pancakes and sat down across from Ashley, pouring himself a glass of milk. Ashley was on her last pancake, and they both enjoyed breakfast for a moment.\n\n\"So, would you like to do this again sometime?\" she asked once she finished. Peter had to swallow before he could answer.\n\n\"Totally! But I have an exam coming up next week so I'll have to spend a lot of time studying. Maybe next weekend?\"\n\n\"Perfect! We can talk about it later; I don't want you to lose focus on your school work. I think it's really cool that your aunt is helping you study.\"\n\n\"Yeah, it is. Speaking of which, she said she wanted to start studying at noon today. I don't want to kick you out or anything, but that means I should probably drive you back to your place before then.\"\n\n\"Studying on a Saturday?\" she asked curiously.\n\n\"Hey, I gotta work with her schedule,\" he said, putting his hands up in defense.\n\n\"Sure, sure. We can head out soon, I don't mind. I think I need to take a nap anyway.\"\n\n\"You're tired out, huh?\"\n\n\"Are you not? You're such a stud.\"\n\nPeter laughed. He cleaned up the breakfast dishes while Ashley returned to the bedroom to put on her real clothes. She returned earing her outfit from the previous evening, bringing all of his belongings for him. Once they were both dressed and ready, Peter led her to the car and locked the house behind him.\n\nThe trip was only a few minutes, and Peter did his best to make Ashley laugh while he drove. He was succeeded a few times, and he cherished her sexy laughing and giggling every time.\n\nWhen they arrived, Ashley leaned toward him for a kiss. It was gentle, but thy both snuck in a little tongue.\n\n\"Thanks again, Peter! Hopefully not too many people see me limping to my room,\" she joked.\n\n\"I'm sorry-\"\n\n\"Don't apologize! You're too sweet, and it was sooo worth it. Good luck on your exam this week!\"\n\nShe gave him one final peck on the lips before leaving the car. Peter watched her from the road until she disappeared into her building. The clock read 10:52, so he decided to stop by home to change and pick up his backpack before returning to Aunt Julia's. He sent his mom a quick text that he was on his way home.\n\nWhen Peter arrived home, his mom was waiting in the living room for him. She was sitting on the couch with her hands in her lap and was blushing profusely. \n\n\"Hi mom, what's up?\" he asked.\n\n\"Hey Peter! Oh nothing, nothing. I was just lost in thought. Did you have a good night?\"\n\n\"Yeah! We had a nice dinner and then hung out at a party for a while before going back to her room. We didn't really drink that much. It was fun.\"\n\n\"Happy to hear it!\"\n\n\"You had a good time with Aunt Julia?\"\n\n\"Yep!\" she said, although she didn't meet his eyes. \"We had a long talk and I guess there's just a lot to think about. But don't worry about it.\"\n\n\"Okay,\" he said skeptically. He gave her a kiss on the cheek and went up to his room. He changed into a more casual outfit, picked up his bag, and texted Julia that he would be back soon. She quickly replied with 'Hurry up, your reward is waiting!'\n\nPeter didn't see his mom again on the way out, so he assumed she had gone to her room. He wondered why she seemed a little off. He supposed Aunt Julia had the answer. He hopped back into his car and made his way back to his aunt's house.\n\n***\n\nWhen Peter arrived at his aunt's house, she wasted no time at all getting down to business. She called out from her bedroom and he hurried up the stairs to meet her. When he opened the door to her room, he was enthralled by what he saw.\n\nAunt Julia lay propped up on the bed wearing a set of red lace lingerie and gartered stockings. Her legs were spread open so that he had a full view of her crotch, which was barely covered by the thin attire. Her breasts looked perfectly round within the floral design of her bra. She had one arm raised behind her head and watched him enter with an enticing expression.\n\nPeter was speechless for a moment, and she just smiled at him and waited.\n\n\"Wow,\" he said.\n\n\"You have quite the vocabulary,\" she teased.\n\n\"You look like a goddess,\" he said. She giggled and lightly flipped her hair. Peter approached her eagerly and kneeled on the bed, leaning forward to kiss her affectionately.\n\n\"Men are so easy to please,\" she said.\n\n\"I don't think you understand how captivating you actually are,\" replied Peter, standing back up to strip off his clothes. Julia sat up and studied his body while he did so.\n\n\"I suppose I'm also lucky that I have such a stud of a nephew,\" she stated matter-of-factly.\n\nI'll show you just how lucky you are,\" said Peter. \"I'm so goddamn horny.\"\n\n\"Even after having sex with a beautiful girl last night?\"\n\n\"Seeing you gets me all worked up again.\"\n\n\"I'm flattered,\" she said with a smile. At this point, Peter had completely undressed himself and had sat down next to his aunt. He placed a hand on her breast and leaned in to kiss her.\n\n\"Oooooh,\" she coed through his lips before breaking apart. \"While we get started, I want a brief recollection of your experience with Miss Ashley yesterday.\"\n\n\"Will that turn you on?\"\n\n\"So much.\"\n\nThe next few minutes circled around the story of Peter's dinner date and sexual encounter with the loving blonde. While he told his aunt many of the details, his hands explored the surface of her lean body. His actions ranged from the innocent caressing of her face to the alluring squeeze of her breasts and the caressing of her moistening crotch. When he described his cock's first penetration of his date's vagina, Julia closed her eyes and let out a sigh. Her eyes remained shut until he described his explosive orgasm that landed all over her chest and chin, at which point she shuddered and locked eyes with his.\n\n\"Holy shit that was hot,\" she said, reaching down to her pussy. \"I'm already getting wet!\"\n\n\"Thanks again for leaving me the place.\"\n\n\"Anytime! Seriously though, please fuck her in my bed again.\"\n\nThey both laughed and rolled back onto the bed. They kissed passionately for a minute before Julia moved down to his legs.\n\n\"I need your cock in my mouth,\" she begged. \"Will you give it to me?\"\n\nPeter looked lovingly into his aunt's pleading eyes.\n\n\"Anything for you,\" he said.\n\n\"Careful with your words,\" she warned. \"There's a lot I can picture myself doing with you.\"\n\nPeter answered by grabbing her straightened brown hair and guiding her head down to his very erect cock.\n\n\"Ooooh! I like a man who takes charge,\" she said before licking his shaft from base to head. Peter groaned as he watched his aunt start to work her way around his cock with her mouth. She bobbed her head up and down on his cock, making slurping sounds and drooling everywhere. She occasionally paused to suck his balls or kiss her way up the sides of his shaft.\n\nAt one point she returned to taking him in her mouth, and Peter used his grip on her hair to push her down. Julia knew from experience where he was going, and she attempted to relax her throat. Peter felt himself hit the back of her mouth at about five inches deep and seriously wondered if it was possible for anyone to go another four. Through her progress, Julia made eye contact with him and winked seductively before her expression changed to one of great effort. Then she pushed.\n\nPeter felt his cock go further into his aunt's throat. It was a lot tighter, and she had to shift her positioning so that his cock was angled correctly. He watched her take six, seven, eight inches of his cock into her mouth. The sensations were incredible! His wondering from the previous night of whether or not his aunt could deepthroat had been answered.\n\nWith one inch to go, Julia gagged and withdrew. His cock was coated with saliva and several thick strands connected his cock to her open mouth. She panted for a moment before speaking.\n\n\"I can do it,\" she said before eagerly taking him in her mouth again. \n\n\"Holy fuck!\" exclaimed Peter as he watched his cock re-enter his aunt's mouth. After a brief pause at the entrance to her throat, she took him in more easily than the first time. When she reached eight inches again, she widened her mouth and pushed down. Peter watched the last inch of his thick cock disappear inside her pink lips.\n\n\"Goddamn!\" he grunted, savoring the feeling of the tight and wet swallowing of his penis. She didn't hold it for very long, but managed to stick out her tongue and lick his balls a few times before withdrawing.\n\n\"Fuck,\" she whispered through her heavy panting.\n\n\"That was incredible!\" he said, letting go of her hair and caressing her chin. She responded by smiling and pumping his wet cock with both of her hands.\n\n\"I bet a week ago you would never have thought your aunt was such a slut\" she teased.\n\n\"You're not a slut. You're just a very passionate and experienced lover.\"\n\n\"That's sweet, and I suppose very true. But I sometimes I really do like being dirty.\"\n\nBoth of them had a sudden aching for sex, and synchronously shifted positions so Julia was laying on her back and Peter kneeling before her. He pulled her laced panties to the side and admired the reveal of her sex. She laughed as he lifted her hips and held her up while aligning his dick with her glistening opening. \n\n\"I want you to-\" she started, but was interrupted by the deep and slick penetration of her nephew's cock. Peter immediately fucked his aunt fast and hard, as she was already wet enough by his story and her deepthroating. She was in such a state of bliss that she didn't know what to do with her hands; they gripped her legs, his arms, the pillows, and her breasts, but never lingered at any one location. Eventually, she reached down with one hand and rubbed her clit while he fucked her.\n\nPeter could tell she was going to cum quickly and didn't hesitate to reach for her nipples and give them a tight squeeze. Her response was involuntary- her lower body rapidly twitched and shook while her abs tightened up. Peter let go of her tits and leaned forward to nibble at her neck while she rode out her orgasm.\n\nWhen she calmed down, Peter held her head in his hands while regaining his fast-paced fucking. Both of them gazed passionately into each other's eyes, Julia moaning repeatedly with a slight gape in her mouth. They shared a quick kiss before Peter increased his pace as much as he could. His balls began slapping against her asshole, and she leaned her head back in ecstasy. He was restless and eager to cum inside of his aunt, which she had previously expressed was always okay. But then he had an idea.\n\nHe remembered how turned on she was when he told her he had coated Ashley's chest with his semen, and when he felt that he was about to cum, he withdrew from his aunt's vagina and knelt over her chest. Julia clasped her tits in her hand while he shot his heavy load all over her chest.\n\n\"Oh god!\" she cried.\n\nAs it did with Ashley, some of his cum streaked her chin and cheek while continuing to lather her breasts. When the last streak hit her, she was panting heavily, and Peter could tell that she was close to another orgasm. In an attempt to catch it in the moment, he quickly shifted down her body so that his cock was able to re-enter her pussy.\n\n\"FUCK!\" she screamed as he penetrated her completely. Her body suddenly writhed and she gripped his arms intensely as her orgasm overcame her. Peter felt a gush of fluid surge around his cock within her pussy and held himself still, savoring the closeness they shared. \n\n\"Fuuuuuuuuck...\" she moaned as she calmed down, a smile of satisfaction appearing across her lips.\n\nPeter felt himself softening but remained inside of her, pleasured with the feeling. He studied Aunt Julia while they both enjoyed the aftermath of their intercourse. \n\nNo words were exchanged for several minutes. Peter eventually withdrew himself and fetched a hand towel for the both of them to clean off. They shared another tender kiss as they lay on the bed next to each other, his arm around her shoulders and her hand resting on his chest.\n\nJulia was the first to speak, although it was barely a whisper.\n\n\"I could get used to this,\" she said.\n\n\"Me too.\"\n\nThey continued to lay for another minute before Peter spoke again.\n\n\"Hey, can I ask you a question?\"\n\n\"Sure.\"\n\n\"What did you and my mom talk about last night?\"\n\nJulia smiled. \"You'll find out eventually.\"\n\n\"No, really,\" said Peter, sitting up. \"She was acting kind of weird when I stopped by the house this morning. And she sent me a weird text at like 3 AM.\"\n\n\"What did she say?\"\n\n\"The text just said that she had been thinking about me. And at home, she didn't say much, but she seemed a little lost.\"\n\n\"She wasn't sad or anything?\"\n\n\"No, she wasn't sad... she just didn't seem like herself. I don't know how else to describe it.\"\n\nJulia didn't say anything, so Peter questioned her again.\n\n\"What did you two talk about? That has to be why.\"\n\n\"Oh yes, that is why she's acting weird. But she won't be acting weird for long. She just has some things to think about.\"\n\nThe smile had never left Julia's face, which just Peter just found more confusing.\n\n\"But what does she have to think about?\" he asked.\n\n\"I can't tell you.\"\n\n\"Why?\"\n\n\"It's private. She asked me not to say anything about it, but even if she hadn't I still wouldn't want to. It's better that way.\"\n\n\"You can't give me any details?\"\n\n\"Well... I guess the most I can say is that we had talked about something from our past and how it might provide opportunities for the present and future.\"\n\n\"And?\"\n\n\"My lips are sealed.\"\n\n\"You're so cryptic sometimes.\"\n\n\"Only when I need to be.\"\n\nShe tickled his belly and he laughed, swatting her away. Then he sighed.\n\n\"Peter,\" she said more seriously, \"trust me on this. Everything is perfectly fine. I know my sister very well. She's just going to act weird for a day or two and then go back to normal. If she doesn't, then slap my ass and call me a bitch.\"\n\n\"I would never call you something like that,\" he said, rolling his eyes.\n\n\"Sure,\" she said, rolling off of the bed, \"but you also said you'd never call me a slut, and I'm confident that'll change once you see how much I love you.\"\n\n\"Regardless of what we end up doing, I will never call you something derogatory.\"\n\nJulia crawled back into the bed and put a finger under his chin, lifting his face up so that their lips could meet. They shared a brief but passionate kiss. As the kiss broke, she squeezed his flaccid cock.\n\n\"And that is why I love you,\" she said. \n\n***\n\nPeter's time at his aunt's house that Saturday lasted a few more hours after his inquiring, during which they had a snack, had sex in the kitchen, talked about a study plan for the week leading up to the exam, and had sex again on the couch. Peter left in high spirits, so when he arrived at home and wasn't greeted by his mother, he wasn't at all shaken and went upstairs to play video games.\n\nAs it was Saturday night, most of his friends were out partying, but he wasn't in the mood, so he ended up watching a couple of movies downstairs. His mom made an appearance once, and only briefly, for she made herself a sandwich and retreated to her room without saying anything. Peter looked at her a couple times while she was in the kitchen, but never made eye contact. Although his aunt reassured him that everything was fine, his worries had returned. He and his mother had been close their whole life, and he didn't want that to change.",
        "Worn out from a surplus of sex that afternoon, Peter watched the television with semi-consciousness. Then, he suddenly awoke late in the evening without realizing that he had dozed off. He spent a minute or so searching for his phone to check the time before he remembered that he had left it to charge in his room.\n\nHe assumed it was late by the lack of activity on the street outside of their house, so he crept upstairs as quietly as he could. He had accidentally left his light on in his room at the end of the hall, and in the relative darkness of the hallway he didn't notice at first that there was a small crack through his mother's bedroom door. He quietly reached to close it as he passed by, but paused the moment he thought he heard a noise. If he had woken her, he would apologize and head to his room.\n\nIt had felt like twenty seconds or so had passed without the presence of any more noise, so he quietly shut the door and continued to his room. As he was already tired, he simply shut off the light and quickly fell into a slumber in his clothes on top of his sheets.\n\nHe awoke a couple hours later to the burning sensation of having to pee, which he had neglected to do in his state of drowsiness when coming upstairs. He glanced at the digital clock on his night stand and saw that it was only 12:40 AM. \n\nBefore he left his room, Peter stripped down to his boxers to relieve him from the heat of being covered in clothes. He found his way through the bathroom in the dark and, half awake, sat on the toilet so he didn't miss with his piss. When he was done, and out of the bathroom, he noticed that his mom's door was open slightly again.\n\nHad she left her room in the middle of the night? She had her own bathroom. Maybe she needed a glass of water or something. He thought it would be a good idea to close it again, so he tiptoed toward her room and reached for the knob.\n\nThe door was opened enough that, when Peter was close enough, he noticed a very dim light protruding through the crack. Confused, he held his ear close to the door and listened intently. Nothing happened for a minute or so, but Peter continued listening.  \n\nWhen he was about to give up and head back to bed, he heard the faintest moan come from the room.\n\nPeter knew his mom had moaned. He knew she was probably masturbating, and that she was likely using that pink dildo that he had opened up for her. He knew that she probably did this quite often, and that it was a perfectly natural thing for a woman to do. And, he knew that she should be left to do what she pleased, and that he should close the door and return to his room.\n\nBut Peter opened the door instead.\n\nOnly slightly did he do so, just enough so that with one eye could he see his mother laying on the bed with her hand between her legs. The light was very dim, probably the lowest setting of her bedside lamp, but Peter could make out some details. She was wearing a white t-shirt and no pants. Her underwear had been slid down to her ankles, stretched by the distance between her feet. The hand that wasn't near her crotch covered her mouth, likely to prevent the escape of further moans. He supposed she would be doing a good job at staying quiet if her door was closed, but with it open her whimpers were perfectly audible.\n\nPeter squinted, as if that would help his vision at such a low level of light. He couldn't see any details within the shadows of her legs, except once when she withdrew her hand and the dildo had come with it. The reason she had done that, which intoxicated Peter with lust, was to place it in her mouth and pucker her lips around it as she cleaned off her own fresh juices. She only did this for a moment before placing the dildo back between her legs. Peter watched it disappear again within the shadows.\n\nHe watched like a child stuck behind the glass at the zoo, at the mercy of his wonder and desire to play along. It was almost as though time had frozen, and he was stuck in the fork in the road between returning to bed and falling asleep or entering his mother's erotic domain and changing his life forever.\n\nIn reality, only a minute or so had passed before Peter suddenly caught wind of what he was really seeing. His mother was masturbating. Sure, he was infatuated with her, probably now more than ever, but nothing good was going to happen in pursuing intimacy. Plus, he already had two beautiful women who were more than happy to please him.\n\nYet, there was something about this woman in the bedroom next to his that demanded his deepest desires be fulfilled. He couldn't help that he had fallen in love with his mother- perhaps all sons do at some point, when they have mothers as beautiful as his own. Could he simply accept that this love would never, could never be fulfilled like that with his aunt? Julia was one thing, but his mother had birthed him, raised him, and cared for him like no other.\n\nOr was it possible that she too would fall victim to the forbidden intimacy that is reasonably neglected yet so often desired?\n\nPeter found himself shutting the door as slowly as was humanly possible. When it was shut, not a sound escaping it, he continued to stand there in his boxers for the time being. The silence of the house felt deafening after hearing the sensual sounds of its other occupant. When the door had been open, Peter's mind was bombarded with a multitude of thoughts. But now that it was closed, he found himself not really thinking of anything at all. He was aware, for the first time, that his penis was incredibly erect. But he did not stroke it. Instead, he returned to his room and lay on his back with a tent in his boxers.\n\nHe wondered how he would ever fall asleep after witnessing such a scene. But his tiredness was not against him, and before he could wonder much more, he was asleep.\n\n***\n\nThe week leading up to the anatomy exam went by in a blur. Peter visited his Aunt Julia almost every day to study (and sometimes to have sex, although she was adamant about his success on the exam). He decided to keep the witnessing of his mother's masturbation a secret, although he was sure his aunt wouldn't be against him having sexual feelings for his mom. She might actually find the idea interesting, knowing her.\n\nIn addition to his study sessions with Julia, Peter was busy with other school work. He had assignments for his other classes that included two papers due the week following his exam. He spent some time at home working, but also spent some time on campus with Tristan or Ashley to get out of the house. One of those times, Ashley had brought Kirsten to the library where Peter was studying, and she seemed happy to see him. In fact, all of his friends were pleased to see him on campus more often.\n\nHe himself was pleased to see them too, and to see that he had aced his quiz. Professor Martin gave him a warm smile when he handed it back to him, and Peter returned it.\n\nYet his mother was intruding his thoughts more often than not, and he was worried it was distracting him too much. But it seemed that there was nothing he could do to free his mind of her. He would just have to accept it and keep trying to study.\n\nThe one thing that did seem to change for the better was that his mother's behavior had returned to normal. With the exception of some awkwardness on Sunday, she made no comment about whether or not she had seen Peter peeking in at her, and behaved as if nothing had been going on at all. She was delighted when he came home for lunch or dinner every day, and conversed with him whenever he was home and free. \n\nWhile she was more like her normal self, Peter had become quieter around her. When she asked him about this, he told her he was just stressed about his exam and his other school work. So she let it be.\n\nOn Friday morning, Peter went into the exam a little less confident than he had going into last week's quiz. He was certain he wouldn't fail, but he needed an A to get back on track for passing the class, and that wasn't completely guaranteed. He sat down at his desk ten minutes before the start of class and reviewed his notes in a scurry, careful to hide any nude diagrams of Aunt Julia so that his classmates wouldn't see them.\n\n\"Good morning, everyone!\" said Professor Martin brightly as he entered the room a minute before the start of class. A half-hearted reply from the class, which Peter did not take part in, only prompted their instructor to smile more broadly at them.\n\n\"I'm sure you are all going to do just fine today,\" he said. \"I will pass the exams out in a moment, but before I do, let me explain a couple things...\"\n\nWhile Professor Martin noted a couple mistakes in technicalities on the exam, and encouraged them to come up to ask him questions at any time, Peter twiddled his pencil around in his hands. He tried to put his mother out of his mind and focus, but he was having a hard time with it.\n\nDuring the test, Peter recalled his study sessions with Aunt Julia and imagined himself touching her muscles. Unlike the quizzes, however, he had to answer questions regarding functions and connections and others of the sort. Luckily, he had prepared for these questions as well. Towards the end, he was picturing his aunt turning around to face him so he could answer a question about the chest muscles. He was surprised that it wasn't his aunt that was facing him, but in fact his mother. And she was naked.\n\nFor how long Peter stared into space, he had no recollection. But suddenly, he realized that he was one of the only people left in the classroom, and that time was almost up. He shook his head and flipped through the pages of the exam. He only had a couple questions left to answer, but he likely wouldn't be able to go back and review the answers he was unsure about.\n\nHe finished up the test with two minutes remaining and placed it on Professor Martin's desk, then left without noticing that his professor had waved goodbye. He was agitated with himself- not because he thought he had gotten a poor grade, which he probably hadn't, but because he was more distracted than ever.\n\nAunt Julia was hot. So was Ashley. He had only just had sex with both of them within the past two weeks. Why wasn't he distracted by thoughts of them, rather than those of his mother? He had two women to think about. Why couldn't he just do that?\n\nPeter went straight to the gym after leaving the exam. Since it was a little later in the morning, it was busier, but he was unfazed by the crowd. Multiple times did he catch the eyes of college girls exploring his body, giggling when he caught them. At one point an older woman, who he recognized as a teacher from the history department, was even looking at him. He suddenly thought it was silly that girls were into him just because of his muscles. He left the gym after thirty minutes.\n\nOn his walk home, he answered the texts that he had not bothered to read after class. Ashley had asked if the exam went well, and what time they wanted to get together later. He replied with 'It was alright. I probably didn't fail LOL. I'll get back to you on the time, going to talk to my mom and aunt first.'\n\nAunt Julia had texted 'let me know how the exam went. Also your mom is at my place, and she wanted me to tell you that she had left her phone at home by mistake, so not to worry when she doesn't reply to your text.'\n\nBefore replying to her, he checked to see what his mom had said. It was a cute gif of a cat rolling around on someone's kitchen floor, followed by 'I know you're stressed so I hope this at least makes you smile! I hope the exam went well! Let me know if you want to go out to dinner tonight!'\n\nPeter did smile. He replied to Aunt Julia with 'Exam was okay. Tell mom the cat did make me smile. Also that I already made plans to hang out with Ashley tonight, so maybe dinner another time.'\n\nJulia responded a few minutes later with 'Mommy says okay, but she is sad because she wants to see you. What are you doing with Ashley?'\n\n'That depends on if you're leaving me your house again.'\n\n'I can do that :)'\n\n'Thanks. How about at 6?'\n\n'That works :D, also mommy says she will be home just before dinner.'\n\n'Okay. Why are you calling her mommy?'\n\n'Cause it's cute. Do you like it when I call her mommy?'\n\nPeter stared at the messages from his aunt before responding. He knew she was playful and liked to tease, but in his current state of mind, he just become more confused with his thoughts and didn't know how to respond. He ended up ignoring the message and wrapped up the conversation with something quick.\n\n'I'm almost home. I will text you after lunch. Really hungry.'\n\nHe was not actually almost home, but only just leaving the campus property. He put his phone in his pocket and walked home while staring at the cloudy sky. He ignored several buzzes in his pocket as he did so, and when he arrived home he threw his backpack down by the stairs and entered the kitchen.\n\nHe started making himself a sandwich and was in such a fuss over his situation that he didn't notice his mom's phone on the counter until he was about to start eating. She had left it unlocked (something she had a bad habit of doing) and her messages were open. As he went to lock it, he couldn't help but read her open conversation. Only the end was visible, and it didn't make much sense.\n\n'I would do it again,' said Aunt Julia.\n\n'I'm still not sure' said his mom. 'It would be a lot different now than before.'\n\n'Just remember what I told you last week.'\n\n'I haven't forgotten. I can't.'\n\nPeter read those messages a couple of times, then reluctantly scrolled up to the start of their conversation. In doing so, he caught glimpse of several messages that made his heart begin to pound, but he decided to read from the beginning rather than skip through.\n\n'I keep thinking about Peter,' his mom began.\n\n'I knew you would. Have you done anything yet?'\n\n'No.'\n\n'Beth...'\n\n'Okay, yes.'\n\n'OOOH what did you do? He hasn't told me!'\n\n'I left the door open on Saturday night while I... pleasured myself.'\n\n'No way! you naughty girl :D Did he see you?'\n\n'I don't think so. It was after he went to bed I think. He closed my door way before I started, which probably meant he was on his way to his room. I had the lights really dim just in case he woke back up. Oh Julia, it was such a turn on! The idea of being so naughty while my door was open and my son in the house had me so wet.'\n\n'Wow Beth, just thinking about that makes me wet. Why didn't you let him catch you?'\n\n'I didn't want that. I just wanted the situation to be more... exciting. And it was.'\n\n'I wish I was there. You're good at making things hot. Remember that one night in '93?'\n\n'There were a few nights I remember, but I think I know which one you're talking about.'\n\n'The one where Dave and Brian brought us back to their dorm room and we had a foursome from dusk until dawn?'\n\n'Oh yes I certainly remember.'\n\n'That wasn't the first time we had experimented with each other.'\n\n'I am aware.'\n\n'We haven't done that in a while...'\n\n'Stop that. I'm perfectly satisfied on my own right now. Plus I have Peter to focus on.'\n\n'I'm just saying the option is always there. Also Peter has become quite grown up now ;)'\n\n'He has. But he will always be my boy.'\n\n'Of course, and he will always be my nephew ;) anyway, you can always get frisky without you having to worry about Peter catching you.'\n\n'I wasn't worried.'\n\n'Ah I see.'\n\n'I just mean I knew he was asleep.'\n\n'Ok ;)'\n\n'What did you mean about getting frisky?'\n\n'When Dave gets back, if he ever does, I'm sure he wouldn't mind bringing you in again.'\n\n'Oh I don't know. It would be different without Brian.'\n\n'You've kept the animal inside of you for too long.'\n\n'Oh stop it. Like I said, I'm perfectly fine by myself.'\n\n'You're not by yourself. You have Peter.'\n\n'I still don't know about him.'\n\n'I know you do know. You said it the other day. You just don't want to admit it.'\n\n'Whatever you say, sis.'\n\n'You know I'm right. Seriously though, come play with me sometime!'\n\n'I don't know if I'm ready to do that again.'\n\n'I would do it again.'\n\n'I'm still not sure. It would be a lot different now than before.'\n\n'Just remember what I told you last week.'\n\n'I haven't forgotten. I can't.'\n\nPeter read the conversation over several times, taking in all the details and trying to piece together how this conversation played into everything that was going on. The main thing, at least, was that the conversation between his mother and Aunt Julia last week had likely been about sex, and that his mother was now thinking about him differently. Also, his parents and his aunt and uncle had had a foursome in college, and likely continued to partake in some sort of intimate circle. Apparently they stopped once his father had passed away. \n\nAunt Julia was also trying to make his mother more sexually active again. Had it been her idea to order the dildo? That was just one of many questions that surged through his mind. Did his mother have feelings for him? Or was she just looking for new ways to get turned on? Did she know that he and his aunt were having sex? Would Aunt Julia really tell her that? Were the two of them intimate with each other at one point? And, importantly, what were the chances that his mother had purposely left open that conversation for Peter to find?\n\nHis head was beginning to ache, and he made his way to the couch to lie down. He felt somewhat dizzy. The whole situation was too much to take in. He would eventually have to get answers from Aunt Julia, but at the moment it didn't seem he could do anything at all. He lay unmoving on the couch for what seemed to be a few minutes, but actually turned out to be several hours. He made this discovery when he checked his phone. The unanswered texts from the walk home, plus a few others, awaited his reply. He read them all, unsure if he had the strength to answer them.\n\n'Have a yummy lunch!' said Aunt Julia, who soon after also said 'Let me know when you are on your way to my place with Ashley and I will leave.'\n\nThe later texts had been received while he was either reading his mother's conversation or laying on the couch.\n\n'Are you alright? No way lunch takes you this long!' said his aunt.\n\n'Peter? Are you okay?' she said more recently.\n\n'Hey if you aren't able to secure your aunt's house, Kirsten said we could have the room tonight. Let me know!' said Ashley.\n\nPeter responded to Ashley first, telling her that they were clear to go to his aunt's house around 6 PM. Then he started typing a reply to Aunt Julia. He made several drafts of messages that admitted his confusion, or asked for her clarity, or if his mom left her phone out on purpose. But he ended up just saying 'No, I guess I'm not okay.'\n\nWhen he sent that text, he felt a small wave of relief for the first time all week. He and his aunt, and possibly his mother, were likely going to have a conversation about what was going on. But in the midst of all the chaos, he trusted both of the women to care for him and make sure he was okay. It wasn't often he felt this bent out of shape.\n\nJulia replied 'Your mother is on her way home now. Would you like to come over and talk?'\n\n'Yes,' he replied.\n\nHe had to leave quickly so he didn't run into his mom when she returned home. He changed into something nicer for when he met up with Ashley, forced a much needed piss out of him, took some painkillers for the headache, and set out for Julia's.\n\nWhen he arrived, his aunt met him at the door. Before he could say anything, she pulled him in for a tight hug.\n\nPeter immediately felt a surge of love affection for his aunt as he stood trapped within her arms. Among her teasing, sex appeal, and playfulness, she always knew how to comfort him. And he appreciated it now more than ever.",
        "\"I'm sorry Peter,\" she said, without letting go.\n\n\"For what?\"\n\n\"For being so secretive. I thought it was going to make things easier, but it ended up making things more complicated.\"\n\nPeter didn't reply to this, but instead thought about the past week's events and the stress and anxiety he had been feeling. When his aunt let him go and looked worriedly at him, his lips began to tremble. A tear streaked down his face.\n\n\"Oh my god, what did I do?\" she cried as she hugged him once more, although briefly. She then led him into the nearby living room, seating him on the couch and sitting next to him. She wiped the tear from his cheek with the sleeve of her sweater.\n\n\"I'm fine, I'm fine,\" said Peter, gently pushing her arm away from his face. \"All of the stress and anxiety I've been feeling this week has been bottling up, and once you hugged me it was sort of forced out. I think I'm ready to talk.\"\n\n\"I could tell something was going on, and I sort of pieced together using what I knew about the situation.\"\n\n\"And what is the situation, from your perspective?\"\n\nJulia sighed. She stared out the window for a moment.\n\n\"I've been trying to... get you and your mother to become intimate with each other.\"\n\nPeter stared at her as she looked back at him. Her eyes were guilty and becoming watery. Of all the wonderings he had after reading those text messages, this was the one that he least expected to be true. Yet, it made the most sense to him in terms of what he had discovered already.\n\n\"Why?\"\n\n\"It's been obvious to me for years that you two share a love for each other beyond that which a mother and son typically share. I see it in the way you look at her, the way you talk to her, the way you talk about her. I see it in the way you treat her every day. And she is the same. But neither of you two have admitted that love. Why do you think she hasn't gone on many dates since your father died? She only cares for you.\"\n\n\"How is that possible?\"\n\n\"That's just how it is. And it's okay.\"\n\nJulia wiped her own tears and Peter brought her in for a hug. Then she started sobbing. Peter held her close, contemplating his life in silence. It didn't take long for Julia to calm down.\n\n\"I'm not mad at you,\" he said.\n\n\"I know you're not mad,\" she said as she withdrew from his hug. \"But I figured you were upset with me.\"\n\n\"Why would you think that?\"\n\n\"Because I kept secrets from you.\"\n\n\"Only because you thought it was best. I understand how this was something you thought you would be unable to straight up say. And I'm not upset. Only confused.\"\n\nJulia took a deep breath to recover from her weeping. She rearranged her composure on the couch so that she was facing him directly.\n\n\"I will explain everything. I should have already done so.\"\n\n\"I just want everything out in the open.\"\n\n\"Of course. But, what time is it?\"\n\n\"Three o'clock.\"\u2028\u2028\n\n\"Then I'll probably have enough time to explain before you meet with Ashley.\"\n\n\"I can always call it off.\"\n\n\"Please don't.\"\n\n\"Okay.\"\n\nThey two sat in silence for a moment while Julia collected her thoughts. Peter watched her with a new sense of wonder; he wondered if he could have continued to love anyone else as he did her in this situation. He supposed, even without hearing her explanation, that love was just something beyond his control that he had to accept, and that he continued to love his aunt because that was how it was supposed to be.\n\n\"Let me start with my conversation with your mother from last Friday,\" Julia began...\n\n***\n\nAfter you had left the house, I went shopping with your mother for a couple of hours. Nothing relevant occurred during this time, other than that I took notice in everything she was saying about you.\n\n\"Peter would look so great in these jeans.\"\n\n\"Do you think this shirt would fit Peter? He has a lot of muscles; I don't know what fits him anymore.\"\n\n\"Look at those shoes! They're themed after Peter's favorite movie series! He would love those.\"\n\n\"Do you think Peter is having a good time with Ashley? I hope he finds the right girl. I couldn't bear if he ended with someone who isn't perfect for him.\"\n\nI don't know if I was reading into what she was saying more than usual because of my own intimacy with you, or I simply wanted to hear it differently. Regardless, I had been hearing her talk about you that way for years. It was different than when you were a child. Once you were mature and tall and grown, I think she started to take a different interest in you. I don't even know if she had realized it. But now that I knew if you had been willing to fuck me, I knew that there were even more possibilities within the family.\n\nAfter shopping, we returned back to your house and organized what we had bought. It didn't take long, as we hadn't bought much, and when we were done your mother asked if I was going to head home.\n\n\"Actually, I'd better not. Mind if I stay for dinner?\"\n\n\"Sure, sis. Why don't you want to go home?\"\n\n\"Well, I was hoping we could have a conversation about something rather serious.\"\n\n\"You want to have a serious conversation? It took forty-two years, but you've finally done it!\"\n\n\"Hey! There's just been something on my mind I want to talk about. But let's eat first.\"\n\nWhile your mom cooked up some pasta, I thought about how I could approach the conversation. I went back and forth between a few ideas, but I eventually decided to start with a reminder of her old sex life.\n\nAfter dinner, we sat down in the living room on the couch together, much like you and me now. I poured a glass of wine for her and I, and we drank a few glasses while talking casually before I finally made my move.\n\n\"Hey Beth,\" I said, \"Do you remember that one time during my sophomore year when you came to my room wondering about sex?\"\n\n\"You bet I do,\" she said. \"I had recently had sex with some guy... I think his name was Kevin? And he had been so quick with me,\" she laughed, \"that I wondered if it was possible for a guy to make me cum after he had already done so!\"\n\nI laughed too, at the memory. \"Remember what happened next?\"\n\n\"How could I not? We got to talking and your roommate was gone and we ended up experimenting.\"\n\n\"I like that you call it that. But it also deserves to be called better.\"\n\n\"That's what it was! We were experimenting with ourselves and each other to see what could make us orgasm!\"\n\n\"I think at the time it was all fun and games, in that sense,\" I said. \"But you know what I want to call it now?\"\n\n\"What's that?\" she asked, amused.\n\n\"I want to call it love. You know I've always loved you and I know you have always loved me. And on that evening we found that our love could be expressed in a way that almost everyone would find taboo. But for us, it was about pleasing each other and making each other happy.\"\n\nYour mom looked at me for a moment before starting to giggle. \"Yes, I suppose it was love,\" she said. \"I do love you, very much.\"\n\n\"And we did it so many more times after that. You know, I kind of miss those days. Do you?\"\n\n\"Sometimes. I guess as we've gotten older, other things have taken priority. Especially since Brian passed away.\"\n\nI put my hand on her knee. I knew she had come to terms with your dad's death some time ago, but it was always nice for her to know that she had comfort in me. She smiled at me.\n\n\"Why do you bring this up?\" she asked. \"Are you trying to seduce me?\"\n\n\"Not quite,\" I replied. She leaned back into the couch cushions and took a sip of wine.\n\n\"So, what's your game?\" she asked.\n\n\"Do you think you could ever love someone again, like you did Brian?\"\n\n\"I'm not sure. I've always believed that love comes and goes when it's supposed to, and it's still in my family. For Peter.\"\n\nI smiled when she mentioned your name. I took a sip of wine myself before continuing.\n\n\"Suppose love comes along and you don't realize it's there? If someone helped you realize it, helped you understand it, would you go for it?\"\n\n\"I suppose so. Why?\"\n\n\"Do you think Peter could fall in love with Ashley?\"\n\n\"It's their first date!\" she laughed. \"Why would you say that?\"\u2028\n\n\"I guess I'm just wondering. He seemed pretty crazy about her.\"\n\n\"Well, love at a young age is certainly quick and easy.\"\n\n\"You and I both found our lovers at a young age.\"\n\n\"That's true. Go on, get to your point.\"\n\n\"What do you think your son is up to right now?\"\n\n\"I haven't thought about it. I suppose they've finished dinner and are out at a party.\"\n\n\"They're at my house,\" I said bluntly. \"They're going to have sex in my bed.\"\n\n'What?\" Her face lit up with surprise, but not with disgust. \"Why would you tell me that?\"\n\n\"That's why I can't go home tonight, and part of why I wanted to have a conversation with you.\"\n\n\"About Peter's love interest?\"\n\n\"His, yours, mine.\"\n\n\"Okay, now I'm lost.\"\n\n\"Peter is a very loving person, as you are aware. He loves you and I very much. I can see it embedded in his behavior on a daily basis. But you know that already, don't you?\"\n\n\"Of course.\"\n\n\"And you love Peter just the same, don't you?\"\n\n\"Without a doubt.\"\n\n\"And you love me?\"\n\n\"Yes, we just talked about that,\" she reminded me, her smile back on her face.\n\n\"I know you do. You showed me many years ago that you love me. Have you ever thought,\" I paused here, for dramatic effect, \"about loving Peter like you have loved me?\"\n\n\"What do you- Oh!\" she quickly and profusely blushed, and at that point I knew my assumptions had been verified. Your mother loved you, and I mean really loved you. And she had just realized, as I had, that her love had been with her all these years, and she hadn't even noticed.\n\n\"Peter, I'm sure you know, has developed into a handsome young man,\" I continued, \"And now he has found this girl named Ashley and is probably having sex with her right now in my bedroom. Does that bother you at all? That your son is having sex?\"\n\n\"Why should it?\"\n\n\"Because you don't want to lose him. If he finds a girl to spend his life with, he won't be around for you as nearly much as he has since the day Brian died.\"\n\n\"I always figured he would find someone eventually.\"\n\n\"As did I. But you and I both know that deep down, you wanted him to find you.\"\n\nShe stared at me for a while. For once, I had trouble reading her expression. She was trying to hide her feelings for you from me.\n\n\"That's quite an assumption,\" she said.\n\n\"Tell me it's false.\"\n\n\"It's-\" she started, but didn't finish. I decided to let her take her time to speak at this point. I watched her shift uncomfortably, scratch her head, look out the window, and sigh.\n\n\"Okay, maybe you're right. I do love Peter, more than I should. Maybe I do want to spend the rest of my life with him!\" She stood up. \"I love him! I love my son! What mother doesn't? But I've always been a little different, haven't I? You already pointed out that I've previously shown some interest in incest, but it's different with you!\"\u2028\u2028\n\n\"How so?\"\n\n\"Because... it just is! Peter is my son! How could I possibly be okay with having any sort of intimate relationship with him? There could be so many consequences-\"\n\n\"Not if you're careful,\" I interjected.\n\n\"Not to mention, it's just wrong! It's plain wrong. And there's no way he'd be okay with it. No way!\"\n\n\"I'm sure he would be,\" I said, figuring now was as good of a time as any.\n\n\"And why do you think that?\"\u2028\n\n\"Because he seems perfectly fine with having sex with me.\"\n\nYour mom froze when I said that, and I used that as an opportunity to explain. I told her that it had only been happening a week, and that it was I who initiated it, who had seduced you into it. But when it actually happened, it was consensual on both sides. I made that very clear. And I explained that it all happened because of love. You love me, and I love you, as we have your whole life. But we both discovered that we could make each other happier than ever with intimacy, and we could have intimate relations without jeopardizing our standing relationship. Just like your mother and I had discovered, many years prior.\n\nFollowing my explanation, your mother sat back on the couch and slowly sipped the rest of her wine. By her expression, I knew that she wasn't upset with me, nor with you. She was just thinking about it.\n\n\"You... you would never hurt Peter, right?\"\n\n\"Of course not! I love him just like you do.\"\n\n\"Just like I do...\"\n\n\"Think about it all. We had sex before he decided to go out with Ashley. I encouraged him to go with her. Why? Because he needs to find someone his age. But that doesn't mean were and I can't continue to love each other and please each other.\"\u2028\u2028\n\n\"I suppose that's true.\"\n\n\"So whatever feelings you may have had about Peter going out with Ashley, you need to leave behind. He could be really happy with her.\"\n\n\"Right. It's not my place to stop him from finding a woman to fall in love with.\"\u2028\u2028\n\n\"Correction. Another woman to fall in love with. He was already in love with me and with you.\"\u2028\u2028\n\n\"You think he loves me the same way he loves you? How?\"\n\n\"I can see it in him just as I saw it in you. He doesn't even know it, as you didn't. But we can make him know it. And when you both know it, you can finally be together.\"\u2028\u2028\n\n\"You want me and Peter to be together?\"\u2028\u2028\n\n\"Yes. Despite your love for him, I've watched you struggle for years both economically and intimately. Having him as a sexual partner would be exactly what you need to get back on your feet. He would support you just as you have supported him. He would care for you more than ever. Do you understand?\"\n\n\"You don't think he would do all that without me sleeping with him?\"\n\n\"He certainly would. But it would lack depth. You would both be caught behind a veil, wanting something more and wishing it could happen without believing that it actually could. Neither of you would be truly happy with each other until you seized your love.\"\n\nYour mother thought for a moment. It was well into the evening now, and we had been talking for hours. I could tell she was going to need time.\n\n\"I'll tell you what,\" I said, \"you take some time to figure out your feelings for Peter. I will be here to talk whenever you need me. In the meantime, I'd suggest paying close attention to how Peter treats you. You might be able to see for yourself just how much he loves you.\"\n\nYour mother sighed. \"Yes. I guess I'll do that.\"\n\n\"Good. I love you, Beth.\"\n\nI pulled her into a tight hug and kissed her on the cheek. For the first time since before I mentioned we were having sex, she smiled.\n\n\"I love you too, Julia.\"\n\n\"I'm going to head home now. I'll sneak in and sleep in the basement. Call me if you need me.\"\u2028\u2028\n\n\"I will. Goodnight.\"\n\n\"Goodnight.\"\n\n\"Wait,\" she said as I stood up. \"Can you not tell Peter about any of this? I don't want him to get distracted from school. And I want this to play out on my terms.\"\n\n\"Sure, sis. I promise.\"\n\n***\n\n\"So I drove home and snuck into my house. I didn't hear any sex noises, so I figured you two had had your go and gone to bed,\" Aunt Julia concluded. \"And you know the rest from there.\"\n\nPeter was speechless. He had listened to his aunt's story without saying anything, and now that it was over, he found his mind much more at peace. Now he understood everything. His mother really did want to become intimate with him, or at least he was pretty sure she did. She was obviously hesitant, likely for the same reasons as Peter. It suddenly seemed silly that he could have a healthy intimate relationship with his aunt and not his mother. He became confident that things would work out.\n\n\"I'm sorry, again,\" said Julia. \"I was so sure that you would be eager to progress your love for your mom that you would be happy with the changes. I never thought it would have confused you so much.\"\n\n\"I do love my mom. I was just worried that wanting her was a different sort of boundary that I wasn't meant to cross. Sure, you and I crossed a boundary and you're almost the same age as her not to mention her sister, but for some reason I've felt more hesitant about my mom.\"\n\n\"I understand.\"\n\n\"But now that you've explained everything to me, I realize that my love for her should be open like the love you and I have. If we both want it, and we can probably be happier because of it.\"\n\n\"You will be happier! And I know she will be happier. She just can't be forced into it.\"\n\n\"I don't want to force her into anything.\"\n\n\"You won't have to. You and her are meant to be.\"\n\n\"And you're okay with it?\"\n\n\"It would be a little hypocritical of me not to be. I told you to go fuck another girl just after we first had sex. Plus, your mom and I have had some crazy adventures ourselves.\"\n\n\"You'll have to tell me about it sometime,\" Peter said eagerly.\n\n\"I certainly will! But that will have to wait. You have another date to prepare for.\"\n\nPeter checked the time. He would have to go pick up Ashley soon.\n\n\"Thanks Aunt Julia. I feel a lot better.\"\n\n\"You're welcome Peter. I'm really sorry again.\"\n\nHe leaned toward her and gave her a passionate kiss. He held it just long enough for Julia to sigh, indicating that it had worked her up. He pulled away and her lips lingered where they had met.\n\n\"Forgiven,\" he said.\n\n\"You know, you can be a tease sometimes too,\" she said. \"That kiss sent tingles through my body! Well, you go pick up that date of yours while I get ready to head out.\"\n\n\"Would you like to meet her? I won't take long coming back, maybe you could leave just after we get here?\"\n\n\"Sure! I could give her some blowjob tips before I leave.\"\n\n\"I appreciate it,\" Peter laughed, \"but I don't think she needs them.\"\n\n\"Everyone could use some blowjob tips.\"\n\n\"Not you.\"\n\nJulia slapped him playfully on the butt before skipping up the stairs in a state of excitement. Peter sent Ashley a text that he would pick her up in a few minutes and left the house.\n\nWhen he arrived in front of the dorm, he was delighted to see Ashley walk out in a cute pink jacket and jeans. This evening, her short blonde hair was straight again. Accompanying her was Kirsten, whose long brown hair was straightened to accompany her party outfit for the evening. She seemed to be spilling out as many words as she could before they reached the car.\n\n\"Good evening ladies!!\" Peter called though the rolled down window.\n\n\"Hi Peter,\" they said in unison. Kirsten giggled and Ashley rolled her eyes.\n\n\"Look, I'll talk to him about it, but leave it alone for now,\" said Ashley. Kirsten waved goodbye as Ashley got in the car, and Peter departed for his aunt's house.\n\n\"What was that about?\" he asked.\n\n\"I'll tell you later,\" said Ashley, waving it off. \"Kirsten is just being, well, Kirsten.\"\n\n\"I look forward to hearing about it.\"\n\n\"So what are our plans for tonight? I know you had a lot going on this week, so it's okay if you want to just relax.\"\n\n\"Yeah, I actually got caught up in a lot of stuff this afternoon, so I never managed to plan out a real date. I hope you're okay with just going back to my aunt's house again.\"\n\n\"Of course,\" she said, smiling.\n\nWhen they arrived at the house, Peter warned her that his aunt was home and wanted to meet her before she left the house for them.\n\n\"Oh, I hope it isn't too awkward,\" she laughed. \"Didn't she set us up for sex last time?\"\n\n\"Yeah, she did. But really, she's cool.\"\n\nThey walked inside and met Julia in the kitchen. She had changed into a red blouse and black pants. She was holding a brown jacket and her keys, which she set down on the counter to greet them.\n\n\"Hi Peter!\" she said enthusiastically. \"And you must be Ashley! I've heard so many wonderful things about you!\"\n\n\"Nice to meet you!\" said Ashley shaking Julia's hand.\n\n\"You picked a pretty one, Peter!\" teased Julia.\n\n\"I know,\" he said. Ashley blushed.\n\n\"Alright you two, I'd stay and chat more, but I have to get going. You probably don't want an old fart like me around anyway.\"",
        "It took some self-control for Peter to refrain from saying anything more enticing than \"You're not an old fart.\"\n\nJulia smiled at him and said goodbye. After she was gone, Ashley turned to Peter.\n\n\"So, do you wanna order dinner?\" she asked. \"I never actually ate.\"\n\n\"Neither did I. I was actually thinking of making something for you.\"\n\n\"You can cook?\"\n\n\"Only a small selection of things, but yeah. Would you be okay with alfredo pasta?\"\n\n\"That sounds wonderful!\"\n\nPeter turned on the television so that Ashley could watch while he cooked, but she spent more time talking to him than watching. They talked about their workload for school, which was becoming more taxing as the semester went on. Peter recounted his difficult week, but he still had two papers to write. They decided that they would meet at the library every day after class for at least an hour and work on their homework together.\n\nAshley mentioned that Kirsten had thought Tristan was becoming her boyfriend, but he dumped her suddenly last week. Peter explained that Tristan wasn't boyfriend material, as he loved being single too much. Kirsten was apparently upset, as she had really liked him.\n\n\"I'm hoping that you and I can help cheer her up?\" Ashley suggested.\n\n\"How so? Does this have anything to do with what you two were talking about in front of the dorm.\"\n\n\"Oh, that. Sort of. We were coming up with some ways in which you and I could make her feel better, but I wasn't sure I agreed with some of her suggestions.\"\n\n\"What were they?\"\n\n\"I'll tell you in a bit. Anyway, I wanted you to know that she really likes you. Not in the same way as she did Tristan, or the way I like you, but as a friend. I know you two haven't hung out that much, but you've been very nice to her and you're a very likeable person.\"\n\n\"Well, that's sweet!\"\n\n\"It is! I was wondering if the three of us could go out somewhere, as friends. Possibly bowling or something. What do you think?\"\n\n\"You want to go out with me as a friend?\"\n\n\"Oh, I didn't mean-\"\n\n\"I'm only teasing,\" he said. \"I'd be happy to go bowling or anything of the sorts.\"\n\n\"Sweet! I'll let her know, she'll be really happy.\"\n\nAshley paused while Peter focused on adding some ingredients to the alfredo sauce.\n\n\"About what you said regarding us being friends-\"\n\n\"I was only joking around. We can be whatever you like.\"\n\n\"Are you sure? I mean, I really like you, but we haven't really been dating for that long...\"\n\n\"Are you wondering whether or not you should call me your boyfriend?\"\n\n\"Um, yeah, I guess that's it.\"\n\nPeter smiled at her. He thought about his aunt and his mother, and how his aunt wanted him to see Ashley despite her own intimacy with him.\n\n\"You can call me your boyfriend,\" he said. \"I'd like that.\"\n\n\"Really? I would like that too!\"\n\n\"Then go ahead! I hope my mom doesn't take it too hard when I say you're my girlfriend. She's really protective of me.\"\n\n\"I'll have to meet her then, so I can show her that I'm alright.\"\n\n\"I'm kidding, mostly. She'll like you.\"\n\nPeter stopped stirring the pasta and walked over to Ashley, who was sitting at the counter. He leaned toward her and gave her a gentle kiss. Her lips responded with equal tenderness.\n\n\"I'm almost done with the pasta. Would you like to tell me what Kirsten was trying to suggest?\"\n\n\"Oh, right. Okay, don't take it the wrong way or anything.\"\n\n\"I'll try not to.\"\n\n\"She was, uh, wondering if we would be willing to have a threesome with her.\"\n\nPeter was testing the pasta to see if it was done when she said this and dropped the wooden spoon by mistake.\n\n\"She did?\"\n\n\"Yeah... She's not, like, a slut or anything. You're just really attractive and cool and we share a lot with each other and she knows you've got a big dick-\"\n\n\"You told her that?\"\n\n\"Not soberly. It was the night we first met.\"\n\n\"Oh yeah, I remember.\"\n\n\"The point is, she thought that you would be a good candidate to blow off some steam. And I didn't even say yes! But she still wanted me to ask you, and she said she wouldn't push it if you said no. She still wants to be friends, but she said she wouldn't mind being friends with benefits with someone so charming.\"\n\n\"What about you and I?\"\n\n\"She made it clear that she didn't want to intrude on our relationship, and she would only want to give us the option to 'spice things up.' Her words, not mine.\"\n\n\"Spice things up? We've only had sex once!\"\n\n\"I know!\" she said, laughing. \"I told her that, and only with enough detail to make sure she knew how good it was. I think she just wants to see for herself how much of a stud you are.\"\n\n\"Well, I guess I'd be more comfortable if we were further into our relationship. But let me ask you, would you be okay with it?\"\n\n\"I thought about it, and I think I'd be okay with a threesome, but only because it's her.\"\n\n\"So you wouldn't get jealous or anything?\"\n\n\"I don't think so.\"\n\n\"Well just to be clear, on my part, even though I would be having sex with both of you at once, with her it would be strictly physical.\"\n\n\"And with me?\"\n\n\"It would be passionate... Wouldn't it?\"\n\n\"Yes, it would,\" she said with a big smile. She stood up and walked over to him and whispered in his ear. \"But don't imply that you won't get physical with me either. Because I would want you to fuck me just as hard as her.\"\n\nHe stood frozen for a moment before Ashley playfully nibbled on his ear and returned to her seat.\n\n\"This is all theoretical, right?\" he asked. \"I mean, would we actually do this?\"\n\n\"Well, I didn't think so at first, but now that we've sort of laid it all out...\"\n\n\"Do you want to?\"\n\n\"Do you?\"\n\n\"I asked first.\"\n\n\"Okay, okay. I want to try it. It's not like once we do it we have to keep doing it again and again.\"\n\n\"That's true. Okay. Yeah, I'll try it.\"\n\n\"Wow. Okay, I'll let her know!\"\n\n\"This is exciting!\"\n\nThe two of them got lost in their own fantasies while Peter finished up the pasta. He served them both a dish and they sat at across from each other at the island while they ate.\n\n\"Wow, Peter! This is delicious!\"\n\n\"Thanks.\"\n\nNeither said much more as they wolfed down their food. Peter was extra hungry as he had forgotten to eat his lunch after the discovery of his mother's texts. He realized that he had forgotten to ask his aunt if she knew if his mother left her phone there on purpose. It was likely that she did, and it didn't matter much at this point given he knew what was going on. But he still would have liked to know.\n\nWhen they finished eating, Peter cleaned up and joined Ashley on the couch. She thanked him again for the meal and gave him a big kiss. Then he picked up the remote. The television was still on, partway through a sitcom episode.\n\n\"So, what do you want to watch while we digest?\" he asked.\n\n\"Anything is fine. I enjoy talking to you, if you wanna just put something on in the background.\"\n\n\"That's fine, I'll just leave it on this channel.\"\n\nAs they let their food digest, they continued to talk about various things. During their conversation, Peter thought about how much he really admired Ashley. While she didn't have the maturity appeal of his aunt and mother, she had a different kind of attractiveness; she was younger, more innocent, and cuter in a way. He cherished every moment that they shared. He had not lost any love for his aunt nor his mother, but he found himself falling for Ashley very quickly. With her, there didn't have to be any secrecy- they could go places in public and act like a couple and kiss without being afraid of breaking any rules. He was starting to see a future with her.\n\n\"Do you want a mint?\" he asked after she finished a long rant about her biology professor, who apparently didn't like any of his students.\n\n\"Yes please!\"\n\nHe went to the kitchen and grabbed a couple of mints from a jar on the counter and threw one into her lap as he returned. She thanked him and the both popped theirs into their mouths.\n\n\"So,\" said Peter.\n\n\"So,\" she mimicked.\n\n\"If you wanted to do something else instead of watch TV...\"\n\n\"HA! We weren't really watching. But yeah, we can do something else. What did you have in mind?\"\n\n\"I was thinking something along the lines of sex.\"\n\n\"Straight to the point, aren't you? How romantic.\"\n\n\"We just talked about a threesome for fifteen minutes. I figured we were pretty comfortable on the topic.\"\n\n\"You're cute. You know that, right?\"\n\n\"What do you mean?\"\n\n\"And you're innocent. I like that.\"\n\n\"Shall we go to the bedroom?\"\n\n\"Is your aunt okay with that?\"\n\n\"She was okay with it last time.\"\n\n\"I still can't believe that. But yes, let's go.\"\n\n\"Wait- you know what?\"\n\nPeter had been leading her off of the couch and stopped as he said this. A sudden realization struck him, and his expression showed his excitement.\n\n\"What?\" asked Ashley.\n\n\"We do have the whole house to ourselves. We can do it anywhere we want.\"\n\nAshley grinned. \"Oh yeah? Is there somewhere you had in mind?\"\n\n\"Several places.\"\n\nThat evening, Peter and Ashley fucked their way through his aunt's large house with the enthusiasm of young children on Christmas morning. Each room was like a new present to them, and they explored as many opportunities as they could per room.\n\nIt began in the kitchen, which is where most of their clothes ended up spending the night. Whenever they felt like it, they would move onto the next room. In the dining room, Peter fucked Ashley as she stood pressed against the open window (to the backyard, which was surrounded by high fences and trees so no one could possibly see them). In the living room, he fucked her on each couch and chair in a variety of positions. In the basement, he fucked her on his aunt's yoga mat (Julia would probably be turned on by the idea). In the bathroom, he watched her give him a blowjob through the mirror, which was a huge turn on. On the stairs, she rode him like a cowboy.\n\nAll the while, Peter ejaculated four times. After the first time, he was able to continue almost immediately. But after the second and third, he had to let himself recharge. During these periods, he would sometimes please Ashley using his mouth or fingers. Other times, they both took a break while they savored the atmosphere of sexual freedom.\n\nWhen he came on her a fourth time (the second time on her face), they were in the master bedroom, and Peter finally gave into fatigue. Ashley had come nine times by her count, but Peter insisted that she was excluding some of her smaller orgasms. She teased that those didn't count.\n\nCovered in sexual juices and sweat, the two lovers lay on the bed panting for some time before they finally had the strength to get up and shower. Peter didn't really have the energy to do so, but Ashley advised that he should because he smelled like pussy.\n\n\"I thought you were a stud,\" she added. \"Studs aren't supposed to get tired.\"\n\nThat got him up. After cleaning off, they returned to the bed and got tucked under the covers. Peter glanced at the clock and, having no sense of time for the past few hours, was surprised that it was almost two in the morning.\n\n\"Damn, we were really at it for a long time,\" he said.\n\n\"Ohhh yes we were,\" Ashley coed from under the covers. \n\n\"That was really fun. I never thought I could ever do something like that.\"\n\n\"I agree.\"\n\n\"You know what? I think it was better because we said we were dating.\"\n\n\"I was thinking the same thing!\"\n\n\"Really?\" Peter asked. Ashley nodded. He snuggled close to her and continued. \"I feel like we shared a special sort of closeness tonight.\"\n\n\"I feel that way too.\"\n\nThey looked at each other in silence for a moment, unsure of what to say at first. Ashley spoke up before Peter.\n\n\"Do you believe in soulmates?\" she asked.\n\n\"I don't know. I do believe that love is out of our control, and comes in when it's supposed to. That's what my mom taught me.\"\n\n\"So you don't think it's too early in our relationship for me to say I love you?\"\n\nPeter was surprised, but before he said anything, she apologized.\n\n\"I'm sorry, I shouldn't have said that. Of course it's too early.\"\n\n\"No, no, wait. It's okay to say that. You should never be ashamed of love. I- I love you too.\"\n\n\"You do?'\n\n\"Yeah, I do. My only experience with love has been with my family. Until now, I'd never loved someone outside of my family, so I didn't know how it would feel. But it feels right. Like I said, love happens when it's supposed to. I guess this is it.\"\n\n\"Oh Peter, I love you!\" Ashley crushed herself against him in a strong hug. He held her close, appreciating the smell of her hair (his aunt's tangerine shampoo).\n\n\"I felt so unsure at first,\" she continued, \"because I didn't think it was right to love someone so quickly. I mean, I've only known you for a couple of weeks! But what you said is totally right... and it just feels like it's right to love you.\"\n\n\"Love is a funny thing,\" he said. \"You just have to let it play out and accept it.\"\n\n\"I was just so scared that you wouldn't love me back. Or that if I said anything, I would ruin what we had.\"\n\n\"I'm glad you said something. I really am.\"\n\nShe sighed and cuddled against his chest, closing her eyes.\n\n\"And it's not because you have a huge cock. But that is a nice bonus.\"\n\nHe laughed, turning off the lamp and closing his eyes with her. It was soothing falling asleep next to someone he loved.\n\n***\n\nPeter woke up feeling well-rested. The clock read 10:21 AM. He lay there for a moment, thinking about the events of the evening and his third true love. He wondered how his aunt would take the news that he and Ashley had said they loved each other. While thinking of Ashley, he accidentally woke up her as he left the bed to pee. She groaned.\n\n\"Fuck me, I'm more sore than last time. Can you get me a glass of water and some painkillers please?\"\n\n\"Sure, sure,\" he said. \"I'll bring it over in a moment, I have to go to the bathroom first.\"\n\nAfter going to the bathroom, he brought her painkillers from the medicine cabinet and then went down to the kitchen to get a glass of water. He must have been imagining it, but the atmosphere of the house had a mystical feel to it, like something wonderful had happened inside of it not long ago.\n\nWhen he arrived in the kitchen, he saw his and Ashley's clothes scattered around the floor and counter. Plus, sitting at the counter eating a bowl of cereal, was Aunt Julia.\n\n\"It smells like sex,\" she said, smiling. He was relieved that she didn't appear at all upset.\n\n\"Sorry. We kind of got wild last night.\"\n\n\"I can see that. Since the clothes are down here, I assume she's upstairs without any?\"\n\n\"Yeah. I guess I should bring her clothes up for her.\"\n\n\"What for? You don't seem to be in need of any.\"\u2028\u2028Peter forgot that he too was naked. He looked down and saw his limp cock hanging free.\n\n\"I have nothing to do today, so I can help you clean the house later. I didn't realize how messy we had made it.\"\n\n\"Don't worry about it, I'm not upset or anything. But I'll take any excuse to have you around.\"\n\nHe smiled and gave her a hug. As he did so, she touched his flaccid penis.\n\n\"I'm surprised you're not hard as a rock! How many times did you have sex last night?\"\n\n\"It was sort of a continuous thing. I think I came four times.\"\u2028\u2028\n\n\"Four times!?\"\n\n\"Yeah.\"\n\n\"Damn, you are a stud. I don't suppose you saved anything for me, did you?\"\n\n\"I can always get it up for you.\"\n\nJulia pushed him back and fell to her knees. Peter watched for a moment, his cock finally beginning to harden, when he remembered the glass of water.\n\n\"We can't do this now!\" he said. \"Ashley is upstairs! I told her I'd bring her a glass of water.\"\n\n\"Oh, she's awake?\"\n\n\"Barely. She might have fallen back asleep now. But I don't want her walking in on you blowing me.\"\n\n\"You sure? That kind of turns me on. Maybe she'll join.\"\n\n\"I don't think so.\"\n\n\"I'm only kidding. Go bring up her glass of water. Don't forget the clothes either.\" she slapped his cock to send him on his way.\n\nWhen he re-entered the bedroom, Ashley had indeed fallen back asleep. He quietly set the glass down on the night stand and put her clothes neatly on one of the chairs in the room. Then he put on his own clothes and returned to the kitchen. As soon as he arrived, Julia dropped back to her knees and stroked him through his pants.\n\n\"Look,\" he started, \"I do want to have some fun today. But not now, while my girlfriend is upstairs!\"\n\n\"Oh, so she's your girlfriend now? What does that make me?\"\n\n\"You're my aunt.\"\n\n\"Am I not a girlfriend too?\"\n\n\"No, you're my aunt. That doesn't mean I don't love you any less than I do now. I'll gladly fuck you later. But as far as Ashley is concerned, you and I don't do that stuff.\"\n\n\"Okay, you got me. I'm just your aunt. I must be a really cool one though.\"\n\nPeter's cock was now rock hard, and she continued to stroke it while tugging at his waistband.\n\n\"You are a cool aunt. But quit teasing me.\"\n\n\"What? I thought you liked to play!\"\n\n\"I do, but- \"\n\n\"Do I not turn you on?\" she asked with a pout.\n\n\"Obviously you do, you can feel how hard I am.\"\n\n\"You say you don't want me right now, but this says you do.\"\n\nShe pulled down his pants enough for his cock to spring free.\n\n\"You know that's not how it works,\" he said.\n\n\"I didn't know that. Maybe I'm not as smart as you think I am.\"\n\n\"I think you're just really turned on by the smell of your house.\"\n\nJulia's response to this was to take several inches of her nephew's cock in her mouth. Peter groaned, and in spite of his wishes, he held his aunt's head in position as she sucked him. She lubed up his cock quickly with saliva, as she was talented in doing, and bobbed her head back and forth like her life depended on it.\n\nWhile she did this, Peter allocated half of his attention to the possible sound of Ashley leaving the bedroom. He also shot glances down the hall to the foot of the staircase, in the event that his ears decided not to work properly.\n\nIn the meantime, Julia widened her throat and took him deep, slowly but soothingly reaching his base with her lips. Peter felt himself reaching the point of no return, despite having cum so many times that evening. Maybe the taboo of the situation was turning on more than he cared to admit.\n\n\"Fuck, I'm gonna cum already!\" he whispered.\n\nJulia gagged and released her deepthroat, taking a few breaths before resting her open mouth at the opening of his dick. The slickness of her saliva allowed her to pump him quickly and easily. As a wave of pleasure began to wash over him, his knees buckled and he hunched forward, grabbing her head so that she couldn't escape the swallowing of her nephew's cum. She moaned as he shot a load of semen inside of her mouth, lightly sucking on the head of his cock. He didn't have as much to shoot as usual, since he had emptied his tanks pretty well overnight, but Julia savored each and every drop.\n\nAs he relaxed, he heard a door open and then the sound of a person descending the stairs. He quickly pulled up his pants and tucked his cock upright so that it wasn't poking out. For extra coverage, he moved behind the counter and sat on one of the stools. Julia, meanwhile, swallowed his cum and wiped off the drool from her chin, standing up and composing herself as much as she could.\n\n\"Thanks for the glass of water,\" Ashley said as she entered the kitchen. \"Oh. I didn't realize your aunt was home.\"\n\n\"It's cool, we were just talking,\" said Julia. \"Have a seat across from Peter. Would you like a bowl of cereal?\"\n\n\"Sure, that would be great!\" she said, sitting down. After Julia crossed the kitchen to the pantry, Ashley mouthed \"it smells like sex!\" to Peter, who made a brief expression that said \"yeah, I know.\" He was just thankful that she didn't seem to notice how flushed his aunt's cheeks were.\n\nJulia poured them both a bowl of cheerios and left the kitchen, stating that she was going to prepare to go on a run. When she was safely out of hearing range, Ashley started talking.",
        "\"Well that was awkward. She definitely smells it.\"\n\n\"Yeah, she mentioned something to me when I came down. She's cool with it, since she gave us the house knowing we had sex in mind. I promised I'd help her clean up later today.\"\n\n\"That's nice of you. Was that what you were talking about?\"\n\n\"Some of it, yeah.\"\n\n\"What else did she say?\"\n\n\"She was, uh, telling me about what she and my mom were up to last night. They went shopping.\"\n\n\"Cool. Sounds like your mom and your aunt are pretty close.\"\n\n\"You could say that.\"\n\n\"You're lucky. Not only do I argue with my parents a lot, but my relatives either live far away or aren't that close. You have a nice family.\"\n\n\"I guess I do. It's small though.\"\n\n\"How many relatives do you have?\"\n\n\"My aunt was my mom's only sister, and she and Uncle Dave didn't have any kids, so I don't have any cousins on her side. I have a few from my dad's side, but they're a lot older than me so we never really connected.\"\n\n\"Can you tell me about your dad?\"\n\n\"Sure. Have I told you anything about him?\"\n\n\"You just mentioned once in the library that he had died when you were really young.\"\u2028\n\n\"Yeah, when I was five. He had cancer.\"\n\n\"I'm sorry.\"\n\n\"it's okay, it was a long time ago. From what I remember, he was a lot of fun and liked to play with me a lot. I used to sometimes see my grandparents from his side, but not often anymore because they live in California. He also had one brother, and through him I have two cousins. But I've only met them once. They live in Washington.\"\n\n\"Oh, so I guess you're only close with your mom's side.\"\n\n\"Yeah, but I'm okay with that. My grandpa on her side passed away before I was born, so I never knew him. My grandma lives on the other side of the city. We visit her every month or so, since it isn't far.\"\n\n\"So you've mostly been raised by women your whole life?\"\n\n\"I guess so.\"\n\n\"You know what? You still turned out to be one of the coolest guys I've ever met.\"\n\n\"Nah.\"\n\n\"I mean it.\"\n\nShe stood up and moved over to his side of the counter. Luckily, his erection had died down. She kissed him on the cheek and whispered in his ear.\n\n\"I meant what I said last night too. I love you.\"\n\n\"I love you too,\" he replied. It felt good to say that. He kissed her on the lips before she could get away. She giggled.\n\nAfter they finished eating, they collected their things and headed out to the car. She had trouble getting in, as the painkillers could only do so much to help her soreness. He found out that it took her a lot of effort to make her pain not noticeable to his aunt in the kitchen.\n\n\"I'm sorry,\" he said, regarding her soreness.\n\n\"Never be sorry for that,\" she said.\n\nPeter dropped her off soon after in front of her dorm building. She looked both ways several times before getting out of the car to make sure no one was around. As she finally left, he smirked at her attempt to hide her limp. She almost looked like she was walking on hot coals.\n\nPeter glanced at his phone before pulling away and saw that his aunt had texted him.\n\n'God, Peter, that was such a turn on! We're so bad.'\n\n'Never do that again.' he replied.\n\n'Don't tell me you didn't like it.'\n\nHe didn't respond, deciding instead to drive off. She knew that he had liked it. But she also knew that he was serious about not doing it again, because it was too risky. And Peter knew that his aunt was aware of both of these things because that was the type of connection that they shared. Only a connection rooted in love could be so special.\n\nWhen Peter arrived in his driveway and stepped out of his car, a sudden burst of fatigue fell upon him. He was really worn out from the previous night. All he wanted to do now was go to his room and nap all afternoon. It was Saturday, after all. He would help his aunt clean her house that evening.\n\nInside, he figured he would see if his mom were around before hopping back into bed. He searched the first floor without any sightings of her. When he entered the living room, he immediately noticed his mother's pink dildo on the couch.\n\nThere was no way she was this careless, he thought.\n\nHe looked around, expecting his mom to pop out and apologize for leaving her sex toy lying around. When she did not appear, he picked up the dildo and examined it. Even without holding it right up to his face, the smell of pussy flooded his nostrils and sent a shiver through his body. His mother's scent was intoxicating, and still rather fresh. She had likely used the dildo on the couch this morning. There was something about her smell that was more inviting than his aunt's or Ashley's. Something about it was so erotic that Peter was instantly relieved of all of his previous hesitancy regarding his love for his mother. At that moment, he knew he was going to do whatever it took to make her love him the same way he loved her.\n\nAnd just like that, Peter's fatigue was gone, and he found himself back on his way to his aunt's house a few minutes later to help her clean up."
    ],
    "authorname": "HotAndFun21",
    "tags": [
        "incest",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/studying-hard-ch-02"
}