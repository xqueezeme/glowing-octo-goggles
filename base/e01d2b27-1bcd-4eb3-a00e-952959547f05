{
    "title": "Ingrams & Assoc 5: Personality Flaws Ch. 03",
    "pages": [
        "Eric left around 3am. April drifted off with a small smile on her face, after setting her phone alarm to get her up in time so she could shower, dress, and be in her little convertible and back up to the Pub ready to be picked up by Rachael for their weekend getaway. \n\nAs it was, she barely made it. The traffic out of London was heavier than she imagined, and she got back to the pub just in time to dump her bags, grab a backpack she'd already stuffed with clothes, transfer her toiletries, hit the bath room and be down stairs again ready to be picked up. While she waited, she made her daily phone call and chatted with Dan Boutrous, who indicated there was no news about Lee. He still hadn't woken up from whatever state he was in. \n\nRachael was right on time, and although April was yawning a lot, she chatted during the whole drive down to Kent. They went via the M25, taking the Dartford Crossing, and then down the A2, which became the M2, taking them all the way to Canterbury. \n\nRachael kept up her narration the whole way. April had managed to persuade Rachael to get something to eat at the South Mimms services off the M25, and she had a large diet coke, to get herself awake, which worked wonders. She spent the whole time just staring out of the window, and listening to Rachael talk about where they were and her experiences there. It washed over her like a warm blanket, and she counted herself lucky to be there. This was real England, not the tourist trap she'd encountered so far. \n\nCanterbury was a dream. Some cobblestone streets, close to the Cathedral. Rachael took her through it - she mentioned that as a kid, she did tours of it. She saw where Archbishop Thomas Becket was murdered, where the knights stayed in Palace Street before setting off to kill him, after the king had famously declared without thinking, \"Will no one rid me of this troublesome priest?\" \n\nShe wandered through the town, with Rachael as her guide, pointing out the places she'd known as a girl. They had lunch and a pint each at the Seven Stars Pub, and a drink later at the pub by the river, The Millers Arms. April discovered a small shop in the shadow of the entrance to the Cathedral that sold handmade pottery, made on the premises, and she actually bought an entire dinner plate and presentation set, and then had the proprietor package it and ship it to her home in Washington. That would be something unique, she noted. \n\nIn the afternoon, they drove out to Sturry, where she was shown the old town hall, and the ducking stool there. Rachael explained that they had one in Canterbury too, and it was used to teach nagging wives a lesson. April was aghast at how narrow the roads were around there, barely wide enough for one car, yet bi-directional. She gasped in fear at the speed at which Rachael's driver took them. \n\nShe learned about Oast Houses, where the barley and hops for beer making were grown in Kent, and how during the 1930's and 40's, how it was a favorite holiday destination, where the less well-off would come from London for a working holiday, picking the hops and then storing them in the distinctive Oast houses, with the tall cone like roofs. \n\nThen they stopped off in Herne Bay for the evening. This is where Rachael grew up, a small Victorian town, that was built up as a weekend getaway for the folks in London. It used to have a long pier - one of the three longest in the world, where the paddle steamers from London would tie up and discharge passengers. The pier, like the paddle steamers, was now long gone, but evidence of it survived. Herne Bay was next in line on the northern Kentish Coast, next to Whitstable, another town entering a renaissance. Whitstable was famous for the offshore oyster banks, and it was now a popular weekend destination for Londoners, exactly as it had been a hundred years earlier. \n\nThey stayed in a new flat, recently built, right on the edge of the sea, at the end of William Street. Rachael mentioned she owned it, and always would, as a way of keeping her ties to the town where she grew up. \n\nThey had a surprisingly good meal at an Iranian restaurant on the sea front, and wandered back, talking at length about what a good man actually was. Rachael postulated that a good man would stand by you, and support you, and while April agreed, she also stipulated a good man wouldn't tie you down. As long as you made it clear before you married he should support you in whatever it was you wanted to do. There was more than a little wine consumed, so there was much giggling as the girls walked back to the flat, looking out over the Thames Estuary, the moonlight reflecting off the water. \n\nRight by where the flat was, Rachael stopped dead, next to a small caf\u00e9, called Macari's. \n\n\"I had my first job here, you know. I was fifteen. I worked the summer in there,\" she said, waving a little unsteadily at the caf\u00e9. \"I could never work the ice cream machine. I could never stop it. People would come in to get a fifty pence ice cream and walk about with five quids worth because I could never stop the damn thing.\" \n\nShe dissolved into giggles, and then said, \"And there used to be a pub 'round the corner. The Dolphin. I had my first grown up job there, as a barmaid, when I was eighteen. I used to watch so many people get pissed as a fart on Friday and Saturday nights. It was quite the education, don't you know.\" \n\nThere was a moment's silence as both women digested the conversation. \n\n\"I may have drunk a little bit too much,\" Rachael finished up, in a very serious and posh voice. And then she giggled some more. \n\n\"How can that be possible, Rach?\" asked April, equally unstable. \"We've only drunk two bottles?\" \n\n\"Each,\" replied Rachael, wagging her finger at April. \n\nThey somehow made it back to the flat. April woke up in the spare bedroom with light pouring in since she hadn't drawn the curtains. \n\nThey spent the morning with Rachael showing April Reculver, explaining that the ruins there used to be a Roman church, and when it was built, it was a mile inland. Now, they had to use concrete to shore up the cliff the ruins stood on, to stop further erosion. She explained how beyond the ruins, where the land flattened, it used to be a sea, and how the ruins played a part in World War II, as practice for the bombers who dropped bombs in the Edersee and Mohne dams in Germany, blowing them out and drowning the munitions factories built underneath them. The events were made famous in the film 'The Dam Busters', with it's amazing bouncing bomb, a canister bomb designed to skip along waves, much like stones thrown by children that skip along wave tops.  \n\nIt was a charming, if somewhat cold morning. The cold wind was coming in off the north sea, and they held off the chill with some hair of the dog at the local pub, The King Ethelbert. They chatted more - April briefly debated telling Rachael about Lee, but decided this wasn't the time. Rachael needed some time to herself, with the company of a friend. And she was certainly becoming that. April was amazed at herself. Finally, she had a friend who understood all of what she did - someone who was not part of Ingrams, but not only didn't judge her, but actively needed her skill set. She wasn't another therapist, like Maryanne Dubowski - not a professional. Just a friend. \n\nThe more April considered it, the more she had begun to realize how much she needed Rachael's friendship - as much as Rachael needed her right now. This weekend had sealed it - April hadn't delighted in the company of another woman who wasn't a target in years. Someone who wasn't a lover, or a lover wannabe. Just a friend, who knew all about her and accepted her anyway. It was sobering to realize how much of a void in her life there was in this area. \n\nThey wound up with Lunch at The Grove Ferry, a delightful little pub, where Rachael told April all about how the stone to build the Cathedral had come from France, all brought down on barges, down the river, which had been significantly wider than it was now. \n\nApril reveled in it. This was real history, thousands of years old. American History was basically \"what happened last night\", in comparison. \n\nThey drove back after lunch, stopping off at the Bluewater Shopping Centre. April immediately felt at home - this mall could be located in Washington, California, Chicago, any metropolitan American City. It was huge, full of bustling people and pretty much the archetype of an American mall. \n\nDespite that, the two of them still managed to wander and end up with bags of purchases - a couple of new tops, three dresses, one a backless maxi dress, one a work dress and one a pretty sun dress from Dorothy Perkins. April was happy. She hadn't enjoyed a weekend like this in a long time. \n\nApril was dropped off at the pub late in the afternoon, where she spent the rest of the day taking a long, languorous shower, and catching up with the Ingrams offices, both in the US and in London. \n\nThe following week was a heavy one in term of PA work for April. Rachael was attending a symposium in London from Wednesday til Friday, and there was a lot of organizing for the talk she was giving, plus meeting arrangements and the rest. \n\nOnce Rachael was on her way to London on Wednesday, April took off early and headed to London herself, to meet with Mark and George, at the clinic where Lee had been admitted. They had mentioned on the morning call that there was news, and they all needed to be there to talk to the specialist later that day. \n\nShe walked into the waiting room at the clinic at four thirty on the dot, to find Mark and George already there. She nodded at George, and said to Mark, \"Am I late?\" \n\n\"Nah, he's just on his way out apparently.\" \n\nAs he said it, the door opened, and the specialist came out. It wasn't the man they'd seen before, this was an older balding man, with a van dyke beard and a set of pince-nez glasses on his face, along with a fierce tan, suggesting a recent trip to the tropics, along with evidence of childhood acne that must have been quite severe at the time to still be in evidence this late in life. \n\nHe held a clipboard and looked around the waiting room, asking, \"I'm looking for a Mark Scholtz. Is he here?\" \n\nMark got up and waved and they all converged on the doctor. \n\n\"All of you for this fella? Popular guy. OK then, let's go to my office. I'm Doctor Searby, by the way\" \n\nThe Doctor kept up a steady stream of conversation all the way to his office, without actually managing to say anything of importance at all. April and George exchanged a quick glance, trying to suppress a smile. \n\nOnce seated his office, Doctor Searby picked up an X-ray slide and stuck it in the back lit display and then turned to the trio and said, \"Any of you know what an epileptic fit actually is?\" \n\nGeorge and Mark looked blankly at each other, while April responded, \"It's an electrical brain storm. Lots of misfiring of neurons, if I remember my basic brain biology class.\" \n\n\"Score one for the colonial,\" responded Searby, admiringly. \"That's exactly right. It's basically a neurological problem. The wiring isn't quite up to snuff, and when certain wires are crossed, well, it shorts out. That's your fit. The way we scan for a fit is generally to wire a subject up to an EKG and then give them various triggers until they start a fit and then record what is going on in the brain, to observe if what we see conforms to a storm in the brain. What you are seeing here is a classic epileptic fit, recorded directly from Mr. Hicks' brain.\" \n\nEveryone nodded. \n\n\"But here's the bit that I don't get, and none of the experts I've consulted with get either. This is the strangest epileptic fit I've ever seen. While the fit itself is entirely consistent with the heavier fits, and the recovery time after is within the upper bounds of what we've seen in the past... the triggers... well.\" \n\n\"Triggers, Doc?\" asked George. \n\n\"Epileptic fits have triggers. Remember when I said the wires cross, causing a short? Well, something has to cause those wires to cross. The most famous cause is fast flashing lights. You've all seen epileptic fit warnings on movies and video games that have lights that flash past a certain frequency. There are other triggers too though - being too tired, too much alcohol, certain drugs - if you have structural issues in the brain there are usually some combination of stimulants that will cause it to malfunction. \n\n\"But our boy here,\" he said, gesturing at the x-ray, \"he doesn't have any of the traditional triggers at all. When he's conscious, he's aware, we can talk to him, he can talk back just fine. We can get his name - actually, he gives us name, rank and serial number all the time - and details of his past history. He remembers his marriage, but the moment he is asked anything more recent, even as simple as 'what happened to you', boom, he fits. \n\n\"Now, that would suggest that this is a psychological fit. Psychological fits are a relatively recent thing in mental health. It's the idea you can have a fit from non-epileptic reasons. It's not about the wiring being bad, but you get the same effect from some kind of psychological trigger. But that's not what is going on here. A psychological fit doesn't have the same electrical activity in the brain, that we see on the scan. That's how you determine the difference in fact. What we have here is a classical epileptic fit, but triggered from what looks like a psychological trigger. And we've never seen that before. No one has. We are at a loss to understand what is going on here.\" \n\nEveryone just sat there, stunned. \n\n\"And here's the kicker,\" announced Searby, dropping into his seat. \"I think this is man-made.\" \n\n\"What?? How?\" exclaimed Mark. \n\nApril just sat still, thinking furiously. She'd already deduced the point the doctor was about to make, and it all fit way too closely with what Rachael had been proposing. \n\n\"Look, it only happens when you ask him what happened to him. If you didn't want anyone to reveal what had happened to them recently, this is a surefire way. He never remains conscious enough to reveal anything.\" \n\n\"It's a bit...blatant, isn't it?\" asked George. \"I mean, not very subtle. It's a week in and here we are, discussing this like it's a real idea. It's not like it's hiding what it's doing?\" \n\n\"True,\" replied Searby, picking up a desk toy of some magnets and pulling them apart and pushing them together. \"But it's effective, you have to admit.\" \n\n\"What do you think, April?\" asked Mark, turning to her. \n\n\"I think I'm starting to get a little scared about what is going on here. I think we have forgotten something we should talk about privately.\" \n\nMark looked enquiringly, and April just said, \"Later.\" \n\nThen she turned her attention to Searby and said, \"So what's the prognosis, Doctor? Is there anything we can do about this? He can't live like this, having a fit every time he's asked what happened?\" \n\n\"No,\" replied Searby, slowly, throwing the magnets down, and then giving her his attention. He crossed his fingers and laid his jaw on them, thinking. \n\n\"Honestly? I think if we can get into what caused this in the first place, maybe we could block it or remove it? We are starting to get into psychological issues here though, and I'm a neurologist. Don't get me wrong, this is fascinating, and I want to learn all I can about what's happened here, but there is a man suffering, and the entire point of the exercise is to get him healthy. Right now, we are just trying to get him to the point where he lasts more than an hour before he fits. As we extend out that amount of time, I dare say we'll get some insight into what happened, even if he can't answer questions directly. I think he needs to stay here for a bit, see what we can come up with.\" \n\nApril nodded and rolled her lips. \"Ok, Mark, is that good? Can we pay for treatment here?\" \n\nMark nodded back. \"No problem. I'm sure Rachael will authorize it, given what it is.\" \n\nRachael. April winced. That situation was going to have to be addressed, and soon. She deserved to know. Maybe when she got back from her conference? \n\nMark got up, as did Searby, indicating that the conference was over. \n\n\"Thank you Doctor, for all you've done and told us about today. Please don't hesitate to bring in any other specialists you need as soon as you are ready. Keep us posted.\" \n\nEveryone clasped hands and soon George, Mark and April were on their way out to their respective cars. Mark held up his hand before they split off and said, \"April, you mentioned something back there, something we missed. What did you mean?\" \n\n\"Well,\" said April, switching her handbag to the other shoulder, \"Lee came from somewhere, ready programmed, so to speak. It's not like those two losers he was with did that to him. And it's obvious now that this is not just some repressed submissive desire on his part. Or maybe it is, but there's no way he got like that by himself. They mentioned that they had a visit somewhere before he was 'given to them'. Where was this? Who was it giving him to them? Who did this to him? They'd know - we need to get back out there and start pumping them a bit. Put the scare in them for a change.\" \n\n\"Good call April. George, can you and Dan get out there tomorrow? Pose as the cops or something? Get them to open up?\" \n\n\"Sure can do, boss. A visit to the West Country would be nice! I'll talk to Dan when we get back to the office.\" \n\n\"Good. Anything else? No? Good. I need a pint. April? Fancy a swift half?\" \n\nApril laughed and shook her head. \"For once, I just want to go home and take another long shower and do nothing. First time in a while.\" \n\n\"OK, well offer is open any time. George... what about you...?\" \n\nApril walked to her car, thinking hard, and looked up into actual sunshine, and decided to drive with the top down. \n\nThe next few days passed slowly. April found some busy work to do at work. She was very much in a 'hurry up and wait' situation. She was waiting for Rachael to get back. She was waiting to hear from George and Dan. She was waiting to hear from Doctor Searby. There was very little for her to do except PA work, and so that's what she did. She made her calls to Ingrams, twice a day, but it was basically just a check in call. \n\nAnd then, on Friday afternoon, Rachael returned from her conference. She swept into the office like a force of nature. There was a power in her step - she didn't so much enter the office as invaded it. \n\n\"April. With me,\" she commanded, and then proceeded to spend almost an hour giving note after note of things to be done, based on interactions she had had at the conference. April was in awe of her memory, and of the energy she displayed. \n\nJust before they were done for the day, April finally had the time to ask, as innocently as she could, \"Good conference?\" \n\nRachael suddenly stopped what she was doing - sorting some papers on her desk - started at April for a second, then gave her a dazzling smile and said, \"Oh yes. Thank you for asking.\" \n\nApril stared back, not letting a muscle move, then said, abruptly, \"Dinner at the pub. Tonight. My turn to order you around!\" \n\nRachael smiled indulgently, and replied, \"OK then. Yes, it that would be nice. Eight o'clock. Have a drink waiting.\" \n\nAnd that was that. \n\nAt five past eight, the two of them were sitting in the corner of the Northern Star, in a nook where they weren't likely to be overheard. Both had a glass of cider, what had become their regular tipple of choice. \n\n\"Go on then. Spill,\" said April, taking a sip and looking demandingly at Rachael. \"You've not been this...animated,\" she said, looking for the right word, \"since I've been here. Something has obviously happened. What happened? You get laid or something?\" \n\nRachael looked shocked. \"April,\" she said sharply, \"there are some things ladies never ask each other.\" ",
        "April looked over her pint at Rachael and drawled, 'Riiiiiiiggggghht. Sure. Uh huh. Cause you prim and proper English roses never have sex, do you? Close your eyes and think of England, right?\" \n\nRachael couldn't keep the face going any longer and dissolved into a fit of giggles. \n\n\"Well, if you must know,\" she said, emphasizing the 'must' word, \"yes. Actually. I did. Rather...magnificently in fact.\" \n\n\"Ohhhh rreeeeeeaaaaallly?\" intoned April, putting her drink down and leaning forward, a gleam in her eye. \"Her Royalness actually got down and dirty did she? Details woman, I want to know everything.\" \n\n\"Well, it was last night in fact. This nice guy and I got chatting at a mixer. Somehow we ended up having a quick meal and then...well, I hesitate to even mention. Let's just say I had a workout. He was really very good. He knew what he was doing, that's for sure. I hardly had to do anything and he had me bouncing off the ceiling.\" \n\n\"Well,\" said April, leaning back and taking another large sip of her cider. \"That all sounds...therapeutic. Are you going to see this guy again?\" \n\nShe tossed the last comment in, just to see if her instructions were being followed. \n\n\"Oh god no. This was a one-time thing. I made that quite clear to him. I can't be seen to be slobbing around with some common real estate salesman.\" \n\n\"Tell me more. How did you meet a real estate salesman?\" asked April,. \n\n\"This fellow was at the hotel where the conference was. His name was Eric something or other. He was pleasant enough, but an indulgence. I don't think there will be any more of those experiences. I mean, I can take this for what it was, ships in the night, sort of thing. I only really went for it because of what we were talking about the other day - taking some chances on life and not missing out. But...I still need some resolution over Lee,\" she ended, sadly. \n\nRachael got up and excused herself to go the bathroom and April sat back realized she had to let Rachael in on the whole Lee situation - she could prevaricate not longer. \n\nAs Rachael returned and sat down, April opened up with, \"So Rach. We need to talk about some stuff. I know this is late coming to you, but I've been waiting for the right moment. I found Lee.\" \n\nRachael was raising the glass to her face and she stopped, staring unblinkingly at April. \n\nLowering the pint glass, she said, \"I know where he's been. You didn't need to find him.\" \n\n\"No, I mean, I went to see him.\" \n\n\"You went...there?\" \n\n\"Yes. I needed to talk to him. You indicated you wanted answers. The only way to get them was to talk to him.\" \n\n\"And did you...talk to him? What about those people he was living with?\" \n\n\"Well, no, I didn't get to talk to him. Not as such. He had an attack. Like an epileptic fit. I had him hospitalized. The two people he was with had...abused him. Quite badly.\" \n\nRachael's eyes went wide. \"How? Is he ok? Where is he? I want to see him.\" \n\nApril took a deep breath. She put her hand over Rachael's and said, \"Calm down Rach... I'll tell you everything I know so far. Firstly, the physical injuries were relatively minor - scratches, some burns. One bruise broken the surface and was infected. He was also malnourished, dehydrated, and there were some muscle issues because he was made to sleep in a cage where he couldn't stretch out. All of those have been treated - his body is healthy now. We've had massage people at the clinic every day. He is in a clinic in West London. I'll be happy to take you to him. \n\n\"But, Racheal, he's non responsive. He wakes up, is fine until someone asks him a question that relates to the recent past in anyway, has a spasm and a fit, and then lapses into unconsciousness for about two days. We've had him checked over and over and it certainly looks like an epileptic fit - it fits all the symptoms - but we can't find a trigger. It's a puzzler. \n\n\"Also, when I got to him - and the two who had him paid a price, let me tell you. I was not friendly with them - right before he had his first fit, he said 'help me' to me. His reactions to the two that had him were off the charts, but when I first saw him, the misery and depression on his face was also striking. Then he looked at the two idiots, and it was suddenly all lovey dovey. \n\n\"There's something quite wrong in this picture, Rachael. Something is not right here. I've been doing this a long time and I've seen some strange things, but nothing like this. I'm starting to come around to your position that something else is going on here. It's almost like this condition he's in has been intentionally induced, somehow. We can't ask him questions about what happened, because if we do, he has this fit. It's like someone doesn't want us to know.\" \n\nShe paused, watching Rachael to see how she was taking it. So far, she was calm. \n\n\"We are still looking into what is going on, but I'm you can go see him if you want.\" \n\n\"Now?\" There was a distinct note of authority in Rachael's question. \n\n\"I guess...yes, why not? Yes. It will probably be good for both of you.\" \n\nApril expected to at least get to finish her pint, but Rachael stood immediately, radiating impatience. \n\n\"Alrighty then,\" murmured April sadly, looking at the remains of her drink but gathering her purse and getting up. \n\nThe two of them drove down to West London, with April using her phone in hands free mode to ensure that they would be able to get in and see Lee when they got there; it was a Friday evening after all. \n\nRachael didn't speak much, other than asking a few pointed questions about how long April had known Lee was there, what the people who had him were like. April told her what she knew, and on finding out how long April had been holding out on her, Rachael lapsed into a very telling silence. April knew she'd have to address that at a later time, but not now. \n\nIt was very evident that Rachael was still in love with Lee. Desperately so in fact. April was at a loss about what to do about that. If they could get Lee well, what would happen if he decided to go back to that lifestyle after he was released? Rachael would be heading for a second heartbreak, and it concerned April greatly that this was a very possible outcome. On the other hand, they needed a break with Lee, and maybe him seeing Rachael would be it. They had to try. \n\nThey were met at the entrance by a staff nurse, and ferried through to where Lee was ensconced. He was, by luck, awake. April stayed outside the room, watching as Rachael went in. Rushed in was a better way to put it. As they went closer, her stride increased in distance and speed - she was almost running by the time they got to Lee's room. \n\nThere was a glass window between the room and the hall, and April lurked outside as Rachael ran inside. \n\nShe stopped short, taking in Lee, who was lying on the bed, sitting up, watching something mindless on the television. \n\nHe looked over and saw Rachael, and immediately a huge smile broke out on his face. April could quite see why Rachael would fall in love with him - he was a handsome man, and now she could see him without the wounds, without the damage, and with slightly less gaunt face, she could see the attraction. The smile he had for her was full faced and full of totally unself-conscious delight - the kind of smile every woman wants to see on her mans face when he see's her. \n\nShe couldn't see Rachael's face, but she could guess what the expression on it was. Rachael rushed to the bedside and just grabbed Lee, bodily, wrapping herself around him. April could hear sobs from where she was. \n\nLee had one arm around her, and the other reached up to her head, slowly running his hands through her blond hair; something he had obviously done before. \n\nThe hug went on for almost a minute, and then Rachael drew back, stared at Lee, and then she impulsively kissed him. April could see Lee's face from her perspective. One minute, he had a smile that encompassed his full face, eyes and all, and then as Rachael's lips touched his, she saw his eyes widen, and then go glassy and roll, as his body started to jerk. It was a fit. \n\nApril rushed in, pressing the button on the wall to summon nursing help. Rachael released Lee and screamed as she saw what was happening. She looked up into Aprils face, her face contorted with pain and fear, tears everywhere. \n\n\"What's happening? Help me. Stop this, please,\" she pleaded with April. \n\nNurses ran into the room, and pushed Rachael out of the way, unceremoniously. They quickly and efficiently intubated Lee, and injected him with something that relaxed his body in a fast manner. He crushed back on the bed, they could see his chest rise and fall, but he was out. \n\nRachael clutched at April, staring at the scene wordlessly, tears silently falling down her face. \n\nAfter a minute, April pulled her out of the room, and into the corridor. \n\n\"Now you see what has been happening,\" murmured April. \"I am sorry you had to see that in that way. We need to get to the bottom of this. I need you to work with us so we can work out what happened, so we can know how to help him.\" \n\nRachael, still staring back into the room through the window, nodded. She turned to look at April, the expression on her face fierce and tense to behold. \n\n\"We are going to find the people who did this, aren't we April?\" It was a calm voice. Disturbingly so. And it wasn't a question, it was a command. \n\nRight then, April would have cheerfully shot anyone that was involved, such was her involvement in the moment. She felt desperately for Rachael, and for Lee. She was angry and sad and frustrated all at the same time. She was also aware she was probably getting emotionally compromised in this mission, but she needed to stick it out - she was in too deep at this point. \n\n\"We will find out, Rachael, we most definitely will. And they will pay.\" \n\nTwo days later, on Sunday afternoon, April was sitting again with Rachael. A more somber and controlled Rachael. They were again in the snug of the Northern Star, only this time, April had a recorder and was taking Rachael through all the events of the past few months, prior to the divorce, to figure out what had happened. \n\nOn Saturday, she'd spent the day at the Ingrams' London offices, talking to Dan and George - Mark was with his family that day. Dan and George report their efforts looking for Jodi and Kevin Dinty. They were looking for them, because they had left. Dan and George had gone out to the West Country and found the house the Dintys lived in had been apparently deserted. They'd gained entry - April didn't ask how - and reported that while lots of stuff was still there - furniture, kitchen appliances and so on, there was a lot of evidence that they 'done a runner', in Dan's colorful parlance. There were no clothes in the house, no cosmetics. None of the dominatrix equipment remained, no DVD's, electronics you'd expect to find in home like phone charges, laptops and Ipads were not in evidence. It was obvious they'd cleared out. \n\nThis was confirmed when Dan and George canvassed the neighbors, several of whom reported seeing Jodi and Dan loading up an SUV and driving away several days before. The final nail in the coffin was when they contacted Kevin's work and was told he had quit, not even taking his final pay check. \n\nGeorge explained to April that he had 'several matey's on the force, like' and had, very quietly, asked about these two. Within a day, a report of their passport usage at Ashford had been returned - they'd driven onto the Eurostar, been taken via the tunnel to France, and there the trail ended. \n\nThe Dintys had vanished, and with it, the most obvious method of tracking back what had happened to Lee Hicks. \n\nGiven the way this investigation was shaping up, April wasn't surprised. She just shrugged, commended Dan and George on their exemplary investigative abilities, and asked them to keep thinking of new avenues of inquiry. \n\nAnd then they'd gone for a pint, and George had spent the evening making fun of her accent and eventually she put him down in a rather sharp fashion, as she was just not in the mood. He'd looked downcast, apologized, and then she'd apologized back and the evening ended. \n\nThe next day, April went out for breakfast, after making her call to the offices and then called Rachael and asked her to meet for lunch in the pub, and to be prepared to spend all afternoon there, going over everything she could think of. \n\nSomething big had happened to Lee Hicks, and it was likely that Rachael had the key to what it was, even if she didn't know she did. It was up to April to see if she could spot it. \n\nSo the two of them sat and went through everything, this time drinking soft drinks, much to Bernie's chagrin. Rachael had brought her physical diary with her, her laptop, Lee's laptop with his email on it, and even all the bills and financial records - she wanted to have everything at her fingertips in case it was required. They had spread it out over two tables - it wasn't a problem since at the time they were the only two in the pub, besides an old man who habitually inhabited the stool at the end of the bar. \n\n\"So... this was his schedule in London then?\" asked April, looking at the diary, checking out days that had blue highlighter on them. \n\n\"Yeah. Usually two or three days in the city. Sometimes four. But he was always home on the weekends. Well, apart from a couple. But nothing regular.\" \n\n\"What project was he was working on in London?\" asked April, pursing her lips and making notes in a notebook. \n\n\"Well, he said it was a merger he was working on. Between two companies, one British and one French.\" \n\n\"Which companies?\" pursued April. \n\n\"I honestly don't remember. It might be there in the diary. At the time I was just glad he had something to occupy him. I was busy most of the time. Most of our time together was spent watching the last season of 'Doc Martin', to be honest,\" replied Rachael, with a little embarrassment present. \n\nApril looked at her inquiringly. \"Doc Martin?\" \n\n\"It's a television show. We do...did... that a lot. It was one of the things we did. We'd find something that had a few seasons and watch them together, and talk about the episodes. We did it for a lot of things - Lost, The Tunnel, Sense8, even... Star Trek.\" She was now quite embarrassed. April could not have cared less. \n\n\"It was good; we were both tired. We'd make tea and take it up to bed and watch episodes in bed. It was an 'end of day' thing we did.\" \n\n\"Was he unusual at that time? Jumpy? Any subject he avoided? You may not even have noticed at the time - think back.\" \n\n\"Nothing I can think of, no. I wish I could help more,\" said Rachael, frustrated. \n\n\"There's got to be something,\" said April, equally frustrated. \n\n\"It looks like you generate the same response in him that asking him about the past does. I mean, he's so stressed. Is there anything we can do about that?\" she asked, twirling a pen around her fingers. \n\n\"Can't we...I don't know... put some nicotine patches on him or something?\" April said, thinking out loud. \n\n\"Why?\" asked Rachael, surprised. \n\n\"Well, he smoked didn't he? Bernie there,\" she said, gesturing at the barman who was engaged in that most common of all barman tasks, cleaning glasses with a rag, \"he said Lee used to go smoke outside? That he smoked a pipe or something?\" \n\n\"Well yes, but he gave up. Was quite a stressful time actually,\" replied Rachael, picking up the diary and flicking through pages. She wasn't paying any attention to April, being more concerned on looking at the book. \n\n\"Really? Wow. Good for him. Shows an integrated personality. Giving up smoking is a hard thing for anyone to do. It shows discipline,\" replied April. \n\nRachael snorted and then said, \"Oh, he didn't do it without help. He went to some consultant who had some kind of hypnotismy thing to help him give it up. It took about four or five visits before it took.\" \n\nApril's spine stiffened straight up, and she went perfectly still. After a moment, she said, very slowly and clearly. \"Rachael. Are you telling me that Lee went to hypno-therapy before all of this happened?\" \n\nRachael looked up at April, who was staring at her intently, surprised. \n\n\"Well, yes, I suppose so. He only went a few times, and it was months before he left me. At least six months. Does it matter?\" \n\n\"Do you know where did he found this consultant, or who it was?\" April asked, urgently. \n\n\"Oh, I think he found him from someone here, as a matter of fact. He came back in from being outside, smoking, with a card. He said something about talking to someone outside who had quit, and this is how they did it.\" Rachael waved at the doorway to the pub. \n\n\"Do you know who?\" asked April, doggedly running it down. \n\n\"No. Maybe Bernie does.\" April made a note to talk to Bernie later. \n\n\"Can you find where he paid for this therapy Rachael? In the bank records.\" \n\n\"Oh yes. I actually paid for it, at least he used my card. He paid up front for four sessions. You had to pay for at least four, and then in increments of two after that.\" \n\nRachael started going through her documents, then turned to her laptop and brought up the banking records in her web browser, it allowing her to search faster. \n\n\"Yes, here it is. 'Auctoritas Group'. I knew it was some weird company group. I remember thinking what a strange name for a company at the time.\" \n\n\"Ok,\" said April, thinking hard. \"Can you see if there are another charges to that group?\" \n\nRachael looked at April, then looked at the laptop, her fingers flying across the keyboard. \n\n\"No, nothing here.\" \n\n\"Right. Can you check his credit card? See if there were more charges.\" \n\nRachael's expression was dubious, but she nodded and carried on attacking the laptop. After a few minutes of clicking, she looked up and shook her head. \n\n\"No nothing here.\" \n\n\"What about the Amex?\" asked April. \n\n\"What Amex?\" Rachael came back, puzzled. \n\n\"You know, the American Express card in his name?\" \n\nRachael was clearly mystified. \"We don't have American express cards. Never have.\" \n\nApril sighed. They were getting somewhere, but it would just open more wounds in Rachael. \n\n\"Well, he did. We found it when we were doing background reviews on him.\" \n\nRachael's face looked like it was about to crumple. \n\n\"Rachael...pull yourself together. We are likely to find a lot more things that were hidden from you. We need you to be strong to help guide us,' said April, as kindly but firmly as she could. She leaned forward and put her hand on Rachael's arm. \n\n\"It's going to be ok. We are undoubtedly going to find some things you didn't know, and you need to roll with the punches. We can only find a way to counteract what has been done to Lee by bringing it all out into the light, warts and all.\" \n\nShe spoke reassuringly, and Rachael's trembling face started to relax. She nodded at the end of the little speech and her expression hardened into something more determined. \n\nApril rummaged in her purse and pulled out her phone and then called the Ingrams Office. \n\n\"Hey April,\" answered Dan. \n\n\"Hey Dan. You at the office?\" \n\n\"For my sins, yes. Someone has to be here. What do you need, April?\" \n\n\"A couple of things. Firstly, do you know where Mark is?\" \n\n\"Err, yeah, hold on.\" \n\nThere was a moment of indiscriminate noises, plus some typing. \n\n\"Well, that's interesting. According to the tracker, it looks like he's on his way to you. He's on the great north road. I think George is with him?\" \n\n\"Oh, that's great. I was going to ask you to send him my way anyway. OK, second thing. You guys still have access to Lee Hicks' credit card records?\" \n\n\"Yeah. We have limited access, but we can see transaction records.\" \n\n\"How the hell do you do that?\" asked April, genuinely curious. ",
        "\"Social engineering girl. We get one of the girls here to call with a hard luck story, pretending to be his wife. She gives them a sob story, and eventually they reset the password for her. Boom. Instant access.\" \n\n\"It's really that easy?\" \n\n\"No entirely. You have to know what's within their ability to do, and you have to have the right story, so there's knowledge required to do this, but yeah, at the end of the string, it's easy, just not that easy.\" \n\n\"Wow. OK, well, can you get in? We need to look for something in his Amex history.\" \n\n\"Surely. Hold on.\" \n\nApril chuckled and couldn't resist a quick jab. \n\n\"I can hold on. And don't call me Shirley.\" \n\n\"What?\" \n\nApril sighed. What do they teach the youth of today? He'd never seen Airplane? She made a mental note to make sure that was rectified before she returned home. \n\n\"Never mind.\" \n\n\"Ok, I'm in. What are we looking for?\" \n\n\"Oh, we are looking for... um...\" she looked at Rachael, with a 'help me?' expression. \n\n\"Auctoritas Group,\" said Rachael. \"Spelled A U C T O R I T A S\" \n\nApril repeated that to Dan over the phone. While she was doing it, some memory, deep in the back of her mind tugged at her. She thought about it for a second, but nothing was clicking. Then Dan diverted her attention when he said, \"Yeah, got it. We have, let's see, five different payments. Over... five months. All prior to him leaving.\" \n\nApril sat back, silent, while she considered this news. Then she sat up and looked at Rachael. \n\n\"You said he had four or five sessions, and that was it finished, yes?\" \n\n\"Yes. I was surprised. He didn't need any nicotine patches or anything else. He just quit, cold turkey. I was impressed. I guessed the therapy was very good. I mean, I knew he had discipline, but still...\" \n\n\"Well then. I wonder what all the other sessions were for?\" \n\n\"What?\" asked Rachael, sharply. \n\n\"Hey Dan, thanks for the info. I'll be back in touch when Mark and George get here,\" said April, turning her attention back to the phone. \n\n\"No problem, April. And remember, I just want to wish you luck, and we are all depending on you.\" \n\nSo he had seen Airplane. April was glad. She chuckled and ended the call. \n\nAs she did so, the door opened and George and Mark walked through it. \n\n\"Well, lookee here,\" said April. \"Look what the cat dragged in.\" \n\nGeorge gave her a four-letter stare, and then went to the bar to order some drinks. \n\nMark came over to the paper-strewn table and sat down, heavily. \n\nHe nodded at Rachael and said, \"Good morning, Mrs. Hicks. April.\" \n\nRachael nodded to him and April got up and stretched. \"To what do we owe the honor, Mark?\" \n\n\"We have some news on Lee. I figured you'd want to hear.\" \n\n\"What is it?\" \n\n\"He's been put in a medical coma.\" \n\nRachael gasped. April leaned on the table and said, simply, \"Why?\" \n\n\"He had another fit this morning, early. He broke his arm with the muscle contractions. They just feel that until we have a better handle on what's been done to him, it's safer to him in terms of the strain it puts on his system every time he has a fit.\" \n\nHe looked apologetically at Rachael, who just sat, staring at him, a single tear running down her cheek. \n\n\"Well, speaking of that, I think we may have made some progress there,\" said April, moving on quickly from Mark's pronouncement. \"I don't know if it's the smoking gun we are looking for, but it's definitely a smoking weapon of some sort. Although I'm unsure what it was shooting or, or where the bullet went.\" \n\nGeorge came over and handed Mark a pint of bitter, having a pint of something golden for himself. He sat down in the one remaining free chair and said, \"Smoking gun?\" \n\n\"Yes,\" said April. \"So we discovered that Lee quit smoking. He did so though hypnotherapy.\" \n\nLee and George suddenly sat up straighter, interest evident in their faces. \n\n\"What's more, he paid for four or five sessions on Rachael's credit card, was apparently 'cured' but then paid for a bunch more sessions. On a card she knew nothing about. And had these sessions without her knowing anything about it. Now, that doesn't mean anything definitive - he could have been taking these sessions to deal with, oh, I don't know, self-confidence issues. Who knows. But, it's the first lead we've had here, and I want to see where it goes.\" \n\nShe turned her attention to the papers in front of her, shifting through them. \n\n\"You think he could have been hypnotized into...well, what he is now?\" \n\n\"What? Oh no. Hypnotism can't do that. I did an intro to hypnotism class at university, and we have to do a simple relaxation class which incorporates some hypnotic techniques when I joined Ingrams. It's part of the training you get on becoming a field agent. Some of the techniques are really good for relaxing people post coitus, because they are relaxed anyway, and more likely to divulge information we need to get to...\" \n\nShe trailed off and looked up, suddenly aware that the other three were staring at her, open mouthed. \n\n\"Bloody hell,\" muttered George. \"I'm in the wrong game.\" \n\n\"What?\" asked April, genuinely puzzled. \n\nRachael leaned forward and patted her hand, for once a calm, more maternal expression on her face, and said, \"I think, dear, your life is considerably different from the one most of us lead. You have a skill set that is quite...extraordinary.\" \n\nApril felt the color creeping up her face. \"Oh,\" she said. \n\nMark chuckled. \"Oh look. She's embarrassed. Look! She's blushing!\" \n\n\"Shut up Mark,\" she hissed at him, looking back down at the papers frantically. \n\nThe moment passed and George said, \"So, he can't have been hypnotized into being a subbie then? I mean, I've seen some weird old stuff with people on stage. Them being persuaded they are chickens, and the like?\" \n\n\"Well no. Hypnotism isn't like that. It's not what you see in theater or film or TV. Look, I'm not exactly an expert, but the classes I've taken have given me some understanding of what it is and is not. \n\nApril sat back, and went into professorial mode, playing with a pencil unconsciously, not recognizing the severe irony of her doing so. \n\n\"Hypnotism is a way of talking directly to the subconscious, the back brain, so to speak. It bypasses higher level thinking centers. But it can't change who you are. You can't hypnotize someone to kill someone else, for example, because your subconscious knows this is wrong. If you try, that person will come out of the trance immediately. Although, if they were predisposed to want to kill that person anyway and have some psychopathic tendencies, well, then it would be possible you might succeed, but still unlikely. So, the Manchurian Candidate was a fine movie, but total fiction. You can persuade people they are chickens because their subconscious knows this isn't something that will hurt someone else. You can't persuade people to take their clothes off, at least not easily, because again, it's contrary to the well-being of the individual. But something like quitting smoking? That is definitely possible. The person wants to quit, so the hypnosis is just getting the subconscious in sync with the conscious.\" \n\n\"Making someone like Lee a submissive that needs domination to the extent he does, to make him throw away a rock-solid marriage to Rachael? Well, hypnotism isn't going to be able to do that. I mean, while hypnotism can do a lot of things, it can't overcome a strong and opposed conscious will. When you see that stuff in stage shows, often the people being asked to come up on stage are carefully screened by talking with members of the audience on the way in, looking for suggestible personalities. Lee, from all reports, was a strong and dynamic personality. You don't get to be a Major in the Grenadier Guards without one. Hypnosis can help you overcome barriers to doing what you want to do; it can't change what you want to do\" \n\n\"Well, maybe he wanted to be submissive?\" asked Mark. \n\n\"Possibly, but it's hard to know. It's a bit doubtful though. Rachael would have seen some indication of that over the years. But even if he did, you don't get put in a trance, get told to leave your wife of many years, hide all trace of wanting to do it, then get given to a master and mistress and live your life trying to pleasure them, at your expense, - taking the beatings he did -, and then just do it. The mind doesn't work like that.\" \n\n\"So...what then?\" \n\n\"Well, something went on here. We need to look into this more. The first thing we need is an expert in this area. My few classes taken years ago don't give us enough deep current knowledge. Mark, George, can you find us an expert? Someone discrete?\" \n\n\"Probably,\" said Mark, sipping his beer, thoughtfully. \n\n\"Um,\" inserted George, hesitantly. \"Can I ask a stupid question?\" \n\n\"There are no stupid questions George, you know that,\" said Mark, in a teasing tone. \"Only stupid people.\" \n\nGeorge gave Mark a nasty stare, then carried on. \"Why are we doing this? Why are we carrying on this investigation? Given what we know already, why aren't we just taking this to the cops? Or the Feds? Or someone else official?\" \n\n\"Take them what exactly, George? That there's a bunch of hypnotherapists that we think are hypnotizing people into being sexual deviants? And handing over shares of companies? Right yeah. That sounds like the plot to a crappy nineteen seventies cop procedural TV show. It's something straight out of Starsky and Hutch. They aren't going to run with that. They are just going to raise their eyebrows and then show us the door. It's not convincing and it's not going to get them to do anything. They aren't going to buy it.\" \n\n\"Well, you've got a point there, April. Put like that, I'm not sure I do either,\" remarked Mark, thoughtfully. \n\n\"Well, that may be, Mark. There may be nothing here. But I promised Rachael,\" she nodded at Rachael, who put on a hesitantly hopeful smile, \"and we are going to investigate this, even if it does end up going nowhere. We copasetic on that?\" \n\nThe last phrase was said a touch more forcefully than it really needed to be, just to put the point across. Mark raised his hands in supplication and acceptance. \n\n\"You are definitely calling the shots here April. I have no problem at all chasing this down. I just wanted to keep it real that it may be nothing, that's all.\" \n\nApril nodded, relaxing as she did so. \n\n\"OK the, let's find ourselves an expert. When we do, we'll talk to them, see what they can tell us about what we are seeing and what we might be able to do about it. And then, I think I may need to take a hypnotherapy course. For self-confidence, or something.\" \n\nThere was silence at the last statement, before everyone burst out saying things like \"Absolutely not\", all at once. \n\nTwo days later, April was sitting in the office at Ingrams UK, drinking the only decent coffee she'd had since she had arrived - from a Keurig, unfortunately - waiting for the arrival of the 'expert'. \n\nA lot had happened in two days. April had tasked Dan and George with finding the hypno therapy group. Their initial inquiries had returned that the group had dissolved - the corporation that rented the facilities and owned the bank account Lee's monies had been paid into no longer existed. The signatures on the incorporation documents were faked, and there was very few tracks to follow. However, just finding this out meant that they knew they were on the right track - such pains taken to remove all traces definitely meant this group were up to no good. \n\nDan and George had, instead of trying to track the specifics of the group, looked around at every hypnotherapy group they could find, trying to match them to a profile. The group couldn't have been in existence too long, had to be local, needed to offer services that were about handling small problems, and might have the spouse of a high ranking member of a large publicly held corporation among its customers. \n\nSince they didn't have access to tools like Echelon, they had to make do. The crew back in the US office had come up with some interesting search systems, that could scan twitter, Instagram and some degree of Facebook, looking for mentions of specific search terms, and then filtering on further terms. It was like Google, but targeted at social media, with a much higher degree of penetration to those platforms than any commercial search engine, such penetration coming from occasionally dubious means. \n\nUsing these tools, they'd managed to identify three hypnotherapy groups that fit the profile. While doing so, unexpectedly, they also found three past groups that no longer existed, but that also fit the same profile. In each case, a spouse of a high ranking officer of a large corporation left their partner in dramatic circumstances, and sold their shares to a third party facilitating either a hostile takeover or, at the very least a regime change at the board level, as was the case for Rachael's company. \n\nThe first thing they did was look at who acquired the shares. Each was a holding company with a byzantine series of parent companies, other subsidiaries and complicated structures designed to prevent identification of the real owners. They debated carrying on, but in the end decided on abandoning the endless task of tracing random trails of companies in order to concentrate on the actual perpetrators of the hypnotherapy scam, theorizing that getting a bead on them would lead them higher eventually. \n\nThey then looked deeper into the therapy groups specifically, finding that in each case the group folded up and vanished, closing down the company leaving no traces. The only thing that tied them together was the results, and the description of the main man who dispensed the therapy. Tall, thin hair, shaved close to the scalp, wiry, wearing glasses, intense blue eyes, almost no lips, with a pronounced Adam's apple. Scrawny, is how one person had described him. Another commented on the fact that he was always freshly shaved, even at the end of the day. Several made comment of the slight speech impediment he had, a tendency to elongate his sibilant sounds. \n\nThe only other thing they found that was abnormal was an almost one hundred percent success rate. It appeared that everyone that reviewed these services mentioned how good it was. And that, itself, was unusual. That obviously didn't take into account all the people who didn't comment but still, they didn't find that result on other services when they went back and looked. It was evident he was very good at what he did, which would make sense, given their suspicions. \n\nThe individual who ran it had been many names. Doctor Temple, Doctor Arkin, Doctor Sewell. When Lee Hicks had been seeing him, he was Doctor Pols, and most recently he was Doctor Marcus Baker. \n\nHe was currently running a small practice in Ipswich, in Suffolk. They hadn't identified who he was targeting this time - but they had posited that perhaps he'd started this practice up many times in the past and simply never actually managed to snare the intended target. The whole thing stunk of premeditation, organization and malicious intent. \n\nHaving identified where the good Doctor was now practicing, the intent was to drop April in as a patient, and then record what the occurred in the hypnotherapy sessions, to see if they could get some idea of what had happened with Lee. Without a clearer understanding of what had been done to him, it would be difficult to know the best form of therapy to help get him over it. \n\nBut before they attempted this, April had continued to insist on finding an actual expert. Her learning on the subject was desultory and just enough to really push home to her how much she really didn't know. They needed detailed and current experience and knowledge to really understand what they were looking at. \n\nSo she'd tasked Mark with finding an expert. Someone they could trust to hold his tongue on what he may or may not see. \n\nMark had called that morning, to say he'd found someone and he'd be at the Ingrams office later that day, so she needed to high tail it down to Camden. \n\nAnd here she was, watching a slim short Indian man, in his early thirties, being guided into the small conference room. He was in conversation with Mark as the door opened, so she got a couple of seconds to size him up before he turned his attention to her. He was short, only five foot five or so. Clean shaven. That wonderful chocolate skin that marked him out as having ancestry from India or Pakistan, although from his accent, he was second generation British - it was loaded with \"Bloody, blimey, havin' a laugh\" and other Britishisms. But it was his eyes that were interesting - bright white and green, which was an oddity in any genus, let alone Indian. \n\nHis gaze was intimidating; it made your own eyes start to water a little, involuntarily, and it took April a while to work out that it was because he just didn't blink at the same rate as the average person. \n\nFor some reason, he felt familiar to April. Not obviously, just as someone she might have seen before. \n\n\"Ah, April. May I introduce Chandra Patel. Better known by his stage name as Chon The Eyes. Chandra, this is April Carlisle, the agent in charge of what we are trying to do here.\" \n\nNow she had him. Chon the Eyes was a British TV celebrity, known for his magic and hypnotism act. \n\n\"Charmed,\" said Chandra, coming right up to April, as she stood, extending her hand for a handshake. \n\n\"Likewise,\" she replied, turning her attention to Mark. \"Mark, can we have a quick word outside? New developments...\" she carried on, all business. \n\n\"Sure. Chandra, help yourself to coffee,\" Mark said, as he guided April outside the conference room, shutting the door. \n\n\"Mark,\" hissed April in low tones when they exited the room, \"What the fuck? A TV celebrity? For an undercover operation? What the hell where you thinking??\" \n\nShe made no bones about her displeasure. \n\nMark smiled and spread his hands. \"April, you asked for an expert. I went to the magic circle and spoke to several people and all of them said this is the guy we want. I went to see him, and he's amenable. He can be discrete, after all, he's kept the secrets of how his tricks are performed for years. Also, he's gay, and no one knows that, but we do. He won't cause us grief. I've given him the basics - he thinks we are an outpost of some American agency with three letters and I let him believe that - and he's very interested in how this guy is pulling off what he is doing, for obvious reasons. We could do a lot worse. Let's get on with it, ok?\" \n\nApril's eyes narrowed at Mark, and then after a second she nodded, saying, \"OK, but if I get the idea this guy is showboating, I'll kick his ass so hard he won't sit for a month. And then I'll kick yours and you won't sit for a week. At least.\" \n\n\"Promises, promises April,\" mocked Mark, good-naturedly. \"Normally I have to pay extra for that.\" \n\nHe grinned and said, \"Come on, he'll be wondering where we are.\" \n\nThey re-entered the room to find Chandra sitting at the head of the table, feet up, a steaming cup of coffee in his hand. \n\n\"You guys get that sorted out then? Am I on the case, or is Mr. Celebrity here going to be sent packing, or what?\" \n\nApril sat back down in the chair she'd been sitting in and declared, \"We are going with you for now, Mr. Chandra. Don't make me regret it.\" \n\nShe used her All Business voice, setting the tone for their interaction. \n\nChandra carefully pulled his feet off the desk, put down the coffee carefully and stood up. \n\n\"Well, I can tell when I'm here on sufferance. I've had as much of that in my life as I'm ever going to need thanks, so nice to meet you Mark. I'll show myself out.\" \n\n\"Wait!\" said April, standing again. ",
        "\"I'm sorry. I'm just not used to...a celebrity...being involved in what I do. By definition, what I do is quiet, in the shadows and not talked about. The idea of someone with your background being involved will take some...adjustment.\" April was trying to mend some fences. She had misjudged Chandra and his own self-respect and she needed to make up ground. \n\n\"I see. Yeah, I'll bet you guys would. OK, so double oh eight, fill me in on the details. I'm hopin' we are going to get some gratuitous sex and violence in here. Always up for some of that, me. Know what I mean?\" laughed Chandra, as he sat back down. Obviously, his little stunt of walking out was entirely for show, to challenge April on her own turf. \n\n\"Well, I'm not sure what Mark here has told you - why don't you tell me what he's told you and I will fill in the rest?\" \n\n\"So, there's a geezer who's suffered some considerable personality change, from a man's man to a submissive bitch boy, right? And the smoking gun here is some fella who's been running some hypno therapy voodoo. He's very good, apparently, but he's doing something to these people beyond what hypnosis is currently expected to do. You guys want to send someone in there to get a gander down his neck at what he's doing. Am I close?\" \n\nApril nodded, leaning forward on the table. \"Effectively, yes. I've had a few classes in hypnotism myself and I know that what has been done to him isn't really possible. We need your expert opinion on what we find and what it means.\" \n\nChandra wrinkled his forehead and interjected, \"Currently. What we know about hypnotism currently.\" \n\n\"I'm sorry?\" asked April, confused. \n\n\"One of the reasons my good mateys at the Magic Circle recommended me, Ms. Carlisle, is because I've actually done a lot of research. While I am Chon the Eyes in public, I'm published as Chandra Patel. I've written three books on hypnotism and the hypnotic state, one of which is the definitive history of hypnotism usage, even if I do say so myself.\" \n\nChandra smiled that big smile of his, showing all his very white teeth, and buffed his fingers on his lapel, then making a show of examining him. Mark laughed out loud and even April had a smile. Chandra grew on you - she could see herself liking him. \n\n\"Seriously though, the current state of hypnotic trance understanding is more rediscovery than new information. Hypnotism has been used throughout history, but most of what's been learned has been a closely guarded secret. It's a tool that's used sparingly but to huge effect. There's even evidence that the Japanese Emperor was hypnotized into starting World War Two, in fact. Not that I suspect he'd need much prompting, given the situation at the time. \n\n\"Hypnotism, or mesmerizing as they called it in Victorian times, has been used a lot through the years, and much more effectively and with deeper impact than we see today. It's likely there are pockets of learning that were lost over time, because they were so secret. Even today there are reports of experience and learning that we never hear about, because they are languishing in some vault in Langley, Virginia, or at the Lubyanka. What Russia, the USA and China did in the sixties and the seventies was amazing, but all that experience is just locked up and never acknowledged. It's very sad. Like trying to work out the recipe for a four-course meal when all you know how to do is make toast.\" \n\nApril noted that as he lectured, a lot of the heavy duty London accent fell away from Chandra, and was about to say something when Mark said, \"Interesting how your accent moves around?\" \n\nChandra turned to him and spoke, with astonishingly clear upper class tones, \"Oh dear boy, you mean the posh accent?\" \n\nHis plummy accent went straight to April's knees, but Mark was just interested. \n\n\"Yeah, well, it's all showbiz, innit?\" he said, suddenly dropping back into the London accent. \n\n\"Really, I'm from the East End, know what I mean geezer? This is how I grew up.\" \n\nHis accent suddenly switched to the posh one again as he continued, \"Then I got a scholarship to Oxford, and all of a sudden I had to mix with blue bloods, so I got accent religion. Works great on stage.\" \n\nHe took a sip of coffee, and then, conversationally, with the accent that April defined as 'normal', said, \"but most of the time I just go with the estuary accent, mixed with BBC English. Being able to pitch yourself is helpful though, depending on where you are. You would know that, right?\" \n\nHe directed the last comment at April, a twinkle in his eyes. She gave him a lopsided smile back and then said, \"Ok, so back to the issue. Yes, we need to understand what happened to Lee. He was a Major in the Grenadier Guards. As we've said, a man's man. When I found him, he was in a cage, completely submissive, totally devoted to his master and mistress, to the point of taking any amount of physical abuse from them. His will had been entirely subjugated. No hint of this kind of desire had ever come out in the many years he was married.\" \n\nChandra shrugged, unaffected. \"It happens. Deep seated needs never realized. When it is, he goes off the deep end. It's like a seven-year itch on steroids.\" \n\n\"I don't think so. There's a devotion level he has, but also utter misery at the same time. I'd swear he was coerced into this. It doesn't fit any profile I've ever seen before. And that's without the epileptic fits...\" \n\n\"Fits?\" asked Chandra, suddenly dropping the bored act and leaning forward. \"Tell me about the fits?\" \n\n\"Well, when we pulled him out of this live-in domination situation, he now has fits the moment anyone asks him about what happened to him. Full epileptic fits, not psychological fits. His brain lights up like a Christmas tree. He's out for a full day before he wakes up again. Same thing happens when he sees his wife too.\" \n\n\"Really?\" asked Chandra, his eyes glittering. \"That's very unusual. Full epilepsy is a purely neurological disorder. How do they connect psychological and neurological? This is getting more interesting by the minute. So we've got this, and we've got a total personality reversal. Curiouser and curiouser, cried Alice.\" \n\nApril noticed that Chandra had habit of rubbing his hands together when he was excited. And he was definitely excited now. \n\n\"Well, we shall all certainly have to get to the bottom of this. I feel a new book coming on. So. The plan is, April here goes in undercover, yeah? Well, it's going to be interesting hypnotizing you, April, that's for sure.\" \n\n\"Wait, what?\" asked April, surprised. \n\n\"Well of course. Think about it. You have to be put under, so I can put some blocks in place.\" \n\nApril thought for a second, then the penny dropped. \"Ah. Yes, I suppose so.\" \n\n\"Well, I don't understand. Why does April have to be...\" started George. \n\nChandra impatiently interrupted him. \"Because if she strolls in there, all secret agent like, with her cover and exploding lipstick and license to kill and all, and this guy snaps his fingers, puts her under and then says 'hey, doll face, tell me about yourself', well, games up, innit? I have to put her,\" he said, pointing at April, \"under, install a few blocks and redirects, so if she's asked when in a trance who she is and what she does, her unconscious mind will do the same thing her conscious mind would do. Lie, basically. Because otherwise, she'll just tell the truth and blow everything and then there's blokes with guns and there's blood and screaming and stuff.\" \n\nChandra shrugged nonchalantly, like he did this every day. \n\n\"It's no biggie. I've done blocks like this before. The trick is to cover all the possible pathways. All the way she could be asked for the truth, so she doesn't inadvertently trot something out if she's asked about her pet dog or something. She's already got the fiction in her, so we don't have to do that. We just have to get the unconscious mind to mimic the actions of the conscious one. You know, the CIA in the seventies used to do this sort of thing with deep cover agents. There was even a story of an agent caught in Russia being released after he was put in a trance and asked the same questions, and gave the same answers because of hypnotic blocks.\" \n\n\"So,\" said April, trying to understand, \"I'll really just to believe my own cover then?\" \n\n\"Ah, no,\" replied Chandra. \"It's a subtle difference, but an important one. We aren't attempting to replace your memories. We are just putting in some \"redirects\" so that if you are asked about a, you'll respond with b. You'll still know you are lying, even at the unconscious level, just like the conscious mind does. So you won't be fooling any lie detectors. Anyway, false memory imprinting takes a lot of time and is far more dangerous because you run the risk of losing access to the originals. And if you don't clear them out properly when you are done, they can get confused with the originals, and then the poor sod you've done this to can never trust any of his memories. The Ruskies ran into this a lot during the cold war,\" answered Chandra, emphatically. \n\nMark was finding all this fascinating. April less so, since it was her grey matter that Chandra would be playing in. Suddenly, something else occurred to her. \n\n\"Hey. Can you try hypnotizing Lee? If we got him awake and stable?\" \n\nChandra sat back, considering. \"Well, yes, probably. I would have to be majorly careful though, to avoid tripping whatever land mines they've left in there, assuming that's what has happened. But... if this is the purely the result of a hypnotic trance - and to be clear, I don't think it is, at least not entirely - there are ways of detecting that other people have been working on him. It's like bomb disposal. Only without all the tense drama and big old costumes.\" \n\nApril glanced at Mark and said, \"We should make that happen. While I'm at this therapy session, we should set the wonder boy here\", she gestured at Chandra, who grinned hugely back at her, \"up with Lee. See what he can do.\" \n\n\"He can't do any worse than we have,\" agreed Mark, nodding. \"I'll set it up.\" \n\n\"So, when can we do this conditioning?\" asked April, turning back to Chandra. \"And I'll want it recorded, just so I can listen later. Assuming I can listen without falling into another trance?\" \n\nChandra laughed. \"Yeah, probably. Have the dude with the suit here,\" he jerked a thumb at Mark, \"sit in and listen. He can do it, because I won't have any attention on him. As for when, whenever you are ready...\" \n\n\"Let me sit on this for a day. Tomorrow? Same time?\" asked April, mentally girding her loins. \n\n\"Works for me.\" \n\n\"Mark, I need a cover created and planted for me. I need to be someone they would be interested in. Otherwise they won't bother even trying for...well, whatever it is they are doing. I need to be CEO of something. The boys back in DC can help with creating that cover.\" \n\n\"I'm on it,\" answered Mark, pulling out his phone to make notes. \"One thing though, isn't that a bit dangerous? I mean, if you are that attractive a target, won't they try to program you? Isn't it a bit much to expose yourself to that?\" \n\n\"I doubt it takes one session,\" replied April, dryly. \"Look at how many extra times Lee went. I suspect the first session will be a feeling out session. Lay some basic groundwork. If I record it, you can get this back out of me, right?\" she asked, directing the question to Chandra. \n\n\"Yeah, sure. If I can hear exactly what they did, I can easily get it out. Even without hearing it, there are ways to find what they've done and root it out. Don't sweat it, double oh...thirty-four b?\" Chandra hazarded a guess. April missed the subtle connection Chandra was trying to make - she was worrying about their course of action. \n\nApril wasn't as reassured as she would have liked to be, but she made the commitment. A field agent went where the action was. \n\nAs it turned out, creating the cover took three days. Once it was in place, Mark called April and had Chandra come in. Surprisingly, April decided she wanted Rachael to come along, to witness her being hypnotized. She wanted Rachael to see what had been done to Lee, or at least to get a feel for it. After all, Rachael was ultimately footing the bill for everything. \n\nThe cover was such that they couldn't create a new company for April to come from; it would take too much and too long to plant references to the company and create an entirely plausible fiction - plus they weren't sure how deep the cover would be tested. It was better to have April pretend to be from an established company and then just create an artificial position within that company. They selected a company that had done business with Ingrams before and owed them a favor, so they could be easily approached to provide bona fides for April's cover. In the end they went with a large print company, based out of London, but with corporate branches all over the UK, France, Germany and Spain. They were poised to branch out into Belgium, Italy, Austria and Switzerland, and as such it was felt that Deep Print Inc. would be an attractive target. Coincidentally, thirty-two percent of the shares were in private hands - the cover was that April would have at least ten percent, as an under-the-radar owner. \n\nThe head of Deep Print, Maxfield Wayland, was more than happy to help - Ingrams had helped save the marriage of the head of his R&amp;D department, who was their number one resource in printing faster and cheaper than anyone else. He had almost twenty patents on printing processes that only Deep Print used, and as such was considered essential. \n\nApril was put on the books as the head of HR, and one of the Ingrams UK research team was placed in their offices in order to head off any phone or email inquiries. She was also placed in their official website, using the name Monica Teller, and several older press-released were doctored to make mention of her. \n\nWhen it was all in place, it was time to proceed. \n\nThey convened in the conference room at Ingrams UK, although the large table had been pulled apart and stacked in the corner. There were now several couches and easy chairs, along with side tables, and the lighting was entirely from small wall sconces. \n\nChandra, on entering, stopped, and looked at Mark, laughing. \"What, we holding a s\u00e9ance in here or what?\" \n\nMark spread his hands and said in his even tones, \"We honestly didn't know what you would want. We thought darker and more comfortable would be good?\" \n\nChandra laughed again and said, \"You've been watching too many movies, mate.\" \n\nThen, dropping his backpack, he looked around again and said, \"That said, yeah, this'll work. Is there any background noise here?\" \n\n\"Shouldn't be - we are double glazed and most of the guys have gone home anyway. The main ops room is sound proofed, so we should have peace in here.\" \n\n\"Good. Quiet is the main thing.\" \n\nAt that moment, April and Rachael walked in, talking quietly. As with Chandra, April stopped when she saw what they'd done to the conference room. And as with Chandra, she had smile on her face. \n\n\"Shall I lie down, Doctor?\" she said, jokingly. \n\nChandra glanced up at her, and smiled back, a little tense. He was fiddling with his backpack and pulled out a small lamp, like a lava lamp, but in this case, it was filled with small sparkly bits. As the lamp heated up, the sparkly bits started to move around the inside of the lamp, slowly but definitely glittering. \n\nHe put it on a side table near one of the couches, plugged it in and then pulled a chair up next to that couch. \n\nHe gestured to Mark and Rachael and said, \"Take a seat, over there. Please, just be quiet. I have no idea how hard it will be to get April here into a trance state, and as such, we just need quiet. OK?\" \n\nBoth nodded and sat down where he indicated, in easy chairs next to the other wall, outside of April's line of sight. \n\n\"OK April, drop your bum on the couch. Stretch out...No, the other way, so you can see the lamp.\" \n\nApril did as he asked, lying on the couch, back and head up, staring at the lamp. \n\nFrom there on, it was all a bit anticlimactic. Chandra started with a low voice, asking her to relax. He went through each muscle group, asking April to relax them individually, in a slow, monotone voice. Calmly, with no excitability. \n\nThen, when she was relaxed, he asked her to keep looking at the lamp, to empty her mind, her eyes were getting heavy, she was tired... \n\nApril sat up, rubbing her eyes and feeling good. The best she'd felt in days, even after hearing Desirea had been found. She looked around - it was still dark in the room, but Rachael and Mark were now standing by her. \n\nRachael reached out and helped her get up and said, \"How do you feel?\" \n\n\"Great!\" exclaimed April. Then she thought for a second, memories popping up. \n\n\"Wait, I can remember it all...? Everything you said to me? All the things you asked me to do? Aren't I supposed to not remember something?\" \n\nChandra chuckled and said, while unplugging his lamp and stowing it away, \"April, the default state of a trance is that people will remember what you said and did. You have to actively tell them not to. The reason everyone thinks you don't remember is because on stage you have to make them not remember, or what you do isn't as funny or visually effective.\" \n\n\"I can remember it, but it's like a sort of dream? Like it happened to someone else?\" \n\nChandra shrugged and replied, \"How people remember is different for everyone. Anyway, here's the recording if you want to go over it. My advice is to skip the initial trance setting, and go directly to the stuff I implanted if you want to listen. It lessens the chances of returning to a trance. Anyway, there are some redirects in there, shunts if you like, so if you are asked in a subconscious mode who are you or what you do, you will go to the fiction in the cover you already have. There are some gaps, in that if you are asked how you came to be the head of HR, or what your previous work experience is, the details are a bit sparse. \n\n\"You can't make stuff up when in a trance like you can when you are conscious, so we've just put some details in there and tried to have it dovetail with your normal upbringing. It's a bit tenuous, but you are only going to be in this session for an hour anyway, and twenty minutes of that is going to be putting you in a trance, so I doubt it's any worry,\" he explained. \n\n\"Other than that, I think you are good to go. When is the appointment?\" \n\nApril looked at Mark, who said, \"They confirmed it two days from now. We all need to decamp to Ipswich tonight, right?\" \n\nEveryone nodded except Rachael, who said in the best pompous upper class accent she could muster, \"Well, I for one am quite upset. I lose a very good PA for this.\" \n\nThen she looked into April's eyes and said softly, \"Find them April. Find what they did to Lee. I need him back.\" \n\nApril just hugged Rachael, an act she would never have normally done for anyone. April was not a touchy feely person, but Rachael had grown into something April had never really had - a friend with no strings attached, that was not from the company where she worked. \n\nTwo days later, April was sitting in the offices of Dysporia Health Inc, sitting opposite Doctor Marcus Baker. He was exactly as described - tall, thin, balding, but with the remaining hair shaved close. Shrunken cheeks, glasses and a slightly grey and wax countenance. When he smiled it didn't reach his eyes, which didn't blink enough. \n\n\"Ah, miss...Teller, is it?\" he glanced up from his clipboard with her details on it. \"So, you are here because of...oh. An unhealthy reliance on prescription medications?\" \n\nHe looked inquiringly at April, who nodded. The original idea had been to go with social anxiety as a reason to be visiting the hypnotherapist, but Chandra had nixed it when he pointed out that social anxiety has its roots deep in the subconscious, and the last thing they needed was for the mark to be romping through her memories, looking for a cause that wasn't actually there. They couldn't go with smoking since apart from a cigar once in a great while, April didn't smoke. An addiction to prescription narcotics fit the bill better - it didn't need deep analysis of where it came from, and was all about combating it now, not the history of her addiction. Plus it didn't need any explaining in terms of life impact, or personal health impact. ",
        "April nodded, anxiously. The anxious part wasn't put on. For some reason, she was far more nervous than normal, when stepping into an unknown situation. This was someone messing with her grey matter, and almost certainly not in a benevolent way. It was enough to put the willies up anyone - that was phrase she had just picked up from conversation in the pub, and she loved it. She couldn't wait to introduce that to Ingrams back home. She moved in the chair, checking again that her phone was in the pocket and the bottom end was peaking out, so the mike would pick up everything said. She actually had another pure recording device in her purse, built into a little pocket with the cover cut out so the mike as exposed, just in case she was told to turn off her phone; it seemed better have a backup. \n\nWilling herself to relax a bit, she said, \"Yes. It's not pretty. I hurt my back in a skiing accident, got prescribed Oxytocin, and well, you know how it is...\" \n\nShe looked imploringly at Doctor Baker, who smiled at her in what he must have thought was a reassuring manner, but basically made it look like his skin was stretching across his gaunt visage. \n\n\"Oh indeed I do, Miss Teller. Well, I'm sure we can do something about that. You already have the desire, which makes it so much easier. A few sessions and we should be able to quash the desire. My methods are a little... unorthodox, in some ways, but are very very effective. I have quite the success rate, and your issue is certainly something I've dealt with in the past.\" \n\nApril couldn't help but hear his elongated sibilants. Sure was Shhhhhhure. Success was sssuccsssesss. It was eerie. \n\n\"Now, relax yourself, Miss Teller, sit back, feel yourself getting more relaxed... I want you to look at this watch...\" \n\nHe actually had a pocket watch on a chain! April couldn't believe it! Some of the stereotypes were actually true! Although, he wasn't waving the watch back and forth - his pocket watch was built in such a way as to be glass backed, and you could see a bunch of small cogs revolving. She concentrated on the watch, as he spun it around, slowly, the light glinting off the glass surround... Now that she thought of it, she was quite tired. She stifled a yawn and thought that maybe a nap would help... \n\nFour hours later, April was sitting in one of the rooms of the Salthouse Hotel, in Ipswich. Chandra was there, as were Mark and George. She had returned from her session feeling uncharacteristically good. Relaxed, laid back and almost glowing. She didn't remember a thing, but had been assured by Doctor Baker that they'd made good progress on laying the groundwork for 'solving her little problem' as he put it. \n\nShe'd checked the recorders once in her car, and found that her phone had been turned off, which was very interesting. But the purse recorder had captured everything. She then hurried back to the hotel so they could all start listening. \n\nWhen she'd got there, she'd handed the recorder to Chandra, who then had said, \"OK, April, I know you are probably extremely curious, but I want you to go to your room, take a bath for an hour, then come back. I need to listen to this without you in the room, just in case there are any bombs in here. I can't predict what they may have done, or how you might react, so please, give us an hour, then come back?\" \n\nApril hadn't been pleased, and pouted till Mark just got up and said, \"Ohh, you smell. Go wash up April. Take a bath or something, and don't come back till you smell better!\" \n\nThey'd all laughed, the tension had been broken, and she'd gone, with the worst graces she could muster. \n\nWhen she returned an hour later, even more relaxed than she had been, the mood was somber. Mark and George wouldn't meet her gaze either. \n\n\"So?\" she asked, eagerly, a little put off by their avoidance. \n\n\"Well, let's see. OK, best to go chronological order. First, he took you down into a trance state. I...uh... made that a bit easier for him. If you remember from what we did, I made it easier for you to relax into a trance state, just so we got more time for him to...um, poke around, so to speak. More time with him doing his thing means we had more time to analyze.\" Chandra at least had the decency to look embarrassed by this revelation. April had to think hard to remember him doing that to her. Her face wrinkled once she did remember - the way her memories worked of the initial session with Chandra were foggy - she had to actively will herself to remember to actually bring them up, they didn't occur naturally. \n\n\"Anyway. You went clear, and he started in. Most of the initial interaction was him asking you about what you really needed from this session. There was a fair bit about him asking you about your sexual preferences - you indicated both, which is fair enough, we didn't prep that part -, whether you were attached or not. Then it got into your job, and that's when he started to get quite interested. A lot of probing there - asking questions designed to get an answer he could check up on, obviously. \n\n\"But then he said something to himself, about you being worthy of the 'next stage', whatever that was. And then, he did some stuff to you. And...um...well...\" \n\n\"What?\" demanded a somewhat pissed off April. \n\n\"He made you...take care of yourself. Sexually.\" \n\n\"He did WHAT?\" yelled April, appalled. \n\n\"He made you play with yourself. In fact, he was surprised at how easily you took the suggestion, and how much you got into it.\" \n\n\"I lay there...and I...I?\" April was aghast and embarrassed. \n\n\"Look, you couldn't have helped it,\" said Chandra, sympathetically. \"But, it's what he did next that I am having trouble with.\" \n\n\"What? Worse than me frigging myself in front of him?\" \n\n\"Yes. He hurt you. You should have come out of the trance then, but you didn't. I think he twisted your nipples. Hard. You groaned. Both in pain and in... well... He said something about you 'liking that'? Now, why you didn't come out...well, that's interesting. He did do a couple of things I've not seen before, and the whole sex thing...he couldn't know you are a pro at that. There's something else going on here. \n\n\"And then there... this.\" \n\nHe played a sequence, and it was of him chanting a set of sounds and tones, and then April heard her own voice repeating them. Almost in stereo. At which point she suddenly realized she was singing them right there and then, rocking back and forth, slowly. \n\nImmediately Chandra shut off the recording and leaning in to April, shaking her. \n\n\"April, APRIL, are you with us? APRIL? \n\n\"What?\" she yelled back, suddenly afraid. \n\nChandra sat back, breathing hard, his eyes darting around. \n\n\"I don't quite believe it. I think I know what this is, but I have no idea how they could have...\" his voice trailed off as he thought. \n\n\"I need to look at something. I'll be back in a while. DO NOT let her go anywhere,\" he said, empathically, to Mark and George. \n\nThey looked at each other, back at Chandra and nodded, Mark getting up to sit next to April, who was looking around in bewilderment. \n\nChandra took two hours before he returned. \n\nWhen he did, he had a serious expression on his face. He came in with a book and a folder, sat down and took April's hands in his. \"April, can you do me a favor? Go get the clothes you were wearing for that session?\" \n\nApril was not feeling good, but nodded. The last two hours had been quite intense for her, worried about what was happening. They'd listened to the recording, avoiding the part with the chanting - and it was haunting listening. April in the throes of climax, Marcus Baker surprise at how easily she went for it, the interrogation of her job and prospects, all of it. There were parts when it went quiet, and that was eerie. At the end of the session, there was some desultory addressing of the issue she'd actually gone to see him about. And at the end, there was a command for her to return for the next session. \n\nIt was very disquieting, and there was not a lot of discussion after they'd finished. Mostly, just silence, each alone with their own thoughts. Everyone avoided everyone else's eyes. \n\nThen Chandra arrived back, and made his request. April rose, and went and collected the clothes, left on her floor of her room. She returned to the room with the clothing and passed them to Chandra, who took each of them, sniffing them, and nodding as he did so. \n\n\"Yeah, I thought so. Ayahuasca. Those silent bits? I'm pretty sure he was lighting a candle with that stuff in it.\" \n\n\"Ayahuasca - what?\" asked Mark, speaking for the first time. \n\nChandra glanced at him and said, \"It's a hallucinogen, from South America. Normally taken as a brew, but it can be condensed and used as a smoke. It provokes heavy emotional responses. That's why the climax April had was so intense, and why some of the other conditioning was more...potent. I think I've got some of what is going on here. Not all of it, but a better clue.\" \n\nHe threw the book he brought with him on the table. \"It's in here. This is one of my research books - the research I was talking about. Have you guys ever heard of Saiminjutsu? Almost certainly not. It's the hypnotism of the Ninja. Yes, I know...\" \n\nHe held up his hand at some of the \"Oh for fucks sake,\" type comments, coming from Mark and George. \n\n\"No, I don't think we are dealing with Ninja's here. That would be silly. But, Ninja's had a lot of dealings with hypnotism during their tenure as the world's greatest assassins. Not a lot is known about how they did what they did, for obvious reasons. But what is believed is that it was particularly effective, and they did have the ability to re-write basic parts of a personality. Usually something very specific, that involved their plans to kill someone. But it was reported as being very impressive in action. \n\n\"Most of what we know about how they did what they did comes from an eye witness account of three men who were part of the Eastern Front during World War II. They were captured during a naval battle, and held on Wake Island during late 1942. Wake Island was captured by US forces in 1943, and these guys were rescued then.\" \n\nThere was utter silence as Chandra carried on his narration, everyone totally focused on his story. \n\n\"When these guys were rescued, they told of being 'visited', every night, by two men. They wore black and barely spoke. But each night they were tortured. Not with spikes or waterboarding or things like that, but with their nerve endings being worked, to elicit great pain. They were almost never asked questions, just every night they were tortured. Then, after about two months of this, questions were asked of them while the torture was happening. Innocuous questions, about their lives. Their wives - two were married - about the life their children would lead. The questions were asked in such a way as to demand a deep answer, and often those deep answered were dissected by the captors. Not in an aggressive way, in a questioning way. All the while, they were being kept in immense pain. \n\n\"It took a while to disseminate what was happening. The pain was putting them in an almost trance like state. They weren't being programmed, they were being put in a situation where they would program themselves. They would question their own basic truths, and because those truths were put under a microscope from a very specific direction, they didn't hold up within the tortured mind itself.\" \n\nChandra took a breath and looked around, at each face. \n\n\"So, like Chinese brain washing?\" ventured George, hesitantly. \n\n\"Not quite. Chinese brain washing works by isolating the patient from the world, and basically breaking the entire personality down, and then replacing it with a new one. You are literally a new person, with new hobbies and desires. The Japanese way is far more insidious, because it leaves the basic personality intact - it just rewires specific thinking on specific subjects, orienting them to what the manipulator wants. If you think about it, if you want to make someone a double agent, brain washing them isn't the best way to put them back in where they came from. They are a different person now - yes, they have access to the memories of how they used to be, but now the way they think is entirely alien to those memories. In fact, that's one of the biggest problems the Chinese had with their brainwashing program, and why it was eventually shut down. Too many brain washees ended up killing themselves, because their new value system was so incompatible with the old one, and they were so desperately ashamed of who they used to be. \n\n\"But anyway, the way Saiminjutsu works is that it uses a key focusing situation - in the case of the Japanese, it was pain - and then when a trance like state is achieved, it seeks to undermine particular aspects of the current personality. The really nasty part is that the brain washing, if that's what you want to call it, is something you do to yourself. You are the one who creates arguments and justifications for whatever it is that your mind is being changed about. You quite literally convince yourself. The new desires become part of your personality.\" \n\nApril's mind was spinning, she had a bunch of questions. \"How does that happen? I mean, I was always taught that a well-integrated and directly opposed personality can always overcome hypnotism?\" \n\n\"Well, yes, that's true,\" conceded Chandra. \"And in that case, what happens is the new desires get sidelined. They get compartmentalized. In the Ninja case, from what I've managed to piece together, when they encounter this, they then attach the new desires to deeply held existing desires. For example, attaching a deep need for submission to the love for their spouse. So every time they think of that spouse, the need for submission comes with it. It's hard to do, but none of what we are talking about happens overnight anyway. It's a slow gradual process. If it works. This is all very non-scientific hearsay that has been passed along. There's no write-up or actual controlled study. And, as legend has it, even the Japanese were aided by herb usage. We've no idea what these herbs were, but they were reported to be fed to the targets during these sessions. Something to make them more suggestable, obviously.\" \n\nApril glanced at Mark. It all sounded too familiar. \n\n\"I think what these guys are doing is a perversion on the Saiminjutsu principles. I think they are using sex - orgasm - in place of the pain the Ninja's are alleged to have used. And I think they are supplementing what they do with hypnotheraputic drugs. Like the Ayahuasca. It's like a massive wave of different things combining to overwhelm the senses and the subconscious mind. So that the subject cannot overcome the process.\" \n\n\"You got all that from the audio?\" asked George, more than a little skeptically. \n\n\"Well, I can't be sure about any of it. He's not got into heavy programming yet - what he did here was preparation and investigation. He wanted to know how suggestible April was, and what kind of mark she might be. He's just preparing the ground so to speak. But putting it all together - what happened to Lee Hicks, what he did in this session, the way he did it, - I'm pretty confident I'm on the right track.\" \n\nApril sat back, considering, then said, \"So ok. Now we know this, what's next? Can we get Lee sorted out yet? Can you help him? Get that shit out of his mind?\" \n\nChandra looked down, then looked back up at April, seriously. \n\n\"I honestly don't know what I can do. I think I can help him somewhat now, certainly. Calm him. Maybe stop some of the fits. Mind you, I still don't know how they are making that happen, so I may do more damage than good. I doubt they've laid booby traps in his grey matter, but you never know. I need to know a bit more about what their technique is to break it down. You can't just put people in a trance and say 'now you are a submissive' you know. Particularly not to someone like Lee Hicks.\" \n\nApril, Mark and George digested this. George and Mark exchanged a worried glance, and April said, in as steady a voice as she could, \"I'm going to have to go back, aren't I?\" \n\n\"Now wait a second,\" said Mark, hurriedly. \"I'm not comfortable with this, in any way. Quite apart from the concept of letting this guy run around with his spiked boots in April's grey matter, Jessica would have my balls on platter for letting this happen. Why can't we go and tell the cops? \n\nApril looked at him and said, \"And tell them all he just said?\" She gestured at Chandra. \"We talked about this...\" \n\n\"Yeah but, we are all starting to buy into this right? We've got Lee and Rachael. We've got the doctors' conclusions, what Chandra has deduced. We've got evidence. Ok, it's almost all circumstantial, but it's still compelling. If we are convinced, why won't they be?\" \n\n\"And how long will that take? How much more damage will this guy do in the meantime? And what if they don't go for this? What if they go in there, blundering around with their size elevens? What if he discovers they are investigating him and just vanishes? Or, worse still, turns their investigators?\" April demanded, heatedly, in response. \n\n\"Well, what if they discover we are investigating them April? Same rules apply to us,\" replied Mark, calmly. \n\n\"They won't. We aren't your usual set of investigators. We don't have rules. We know what we are doing. We are prepared for this. They aren't,\" April fired back, less heatedly but firmly. \n\n\"I hope you are right. Obviously we are going to follow your lead on this - you are the agent in charge here. I'm just trying to provide you with an alternative view on all this, April. Jessica is still going to have my balls for supporting this, but then she'll have to fight my wife for them,\" Mark replied with a small smile. \n\nApril visibly relaxed, and said in a conciliatory tone, \"I understand Mark. I just want this guy. I want him all wrapped up a bow when we hand him over to the authorities. He hurt my friend, and he's going to pay for that.\" \n\nMark glanced at George, clearly not happy with the passion still evident in her voice. But, as he indicated, it was her mission to run. \n\n\"If it's any consolation, I'm pretty sure I can undo any damage he might do. I have enough to go on and if we get another recording, it'll be even easier. There's very little there right now to remove, after listening to that recording we already have - everything he did was preparation, there were no long-term bombs to deal with. But that won't be the case after the next few sessions. Hopefully we'd only need one. I do have to echo some of Mark's concern though April. You sure you want to do this? Knowing what they did to Lee? What they are capable of doing?\" \n\nApril turned to him and stated clearly, \"It's because of that they did to Lee, because of what they are capable of that I really must do this. Someone has to stop them. We are the thin edge of that wedge. I am the point of that wedge.\" \n\nEvery sat in silence for a moment, and then Mark said, \"Your call then. So be it. Let's organize another session, and see where it goes.\" \n\nApril nodded and got up to make the phone call. \n\nThe session was arranged for two days later. April spent some time on the phone with Dermot and the people back at Ingrams in the US, going over what they'd found and making a detailed verbal and written report. She was surprised to see Desirea actually sitting in on some of the Skype sessions, and was extremely glad to see her back in the saddle. She was still sidelined at Ingrams, but at least she was alive and still in one piece. \n\nShe spent some time with Chandra, who put her into a trance twice to try and put some protective measures in place, as a precaution. It was hard to know exactly what to prepare against, so Chandra put some default suggestive blocks in place. ",
        "The day arrived, and April presented herself at the therapist's offices, fighting her revulsion when she shook Doctor Baker's hand. She was seated, insuring again that her phone and separate recorder were running, and then the session began and she began to drift away. \n\nAs she did so, Doctor Baker asked her if she was comfortable, she just nodded, drifting away in a haze of tiredness. So she missed the last statement he made, when he said, \"We certainly wouldn't want you uncomfortable, Miss Carlisle.\""
    ],
    "authorname": "jezzaz",
    "tags": [
        "hypnotism",
        "mind control",
        "cuckold",
        "thriller",
        "mystery",
        "ingrams",
        "secret agent"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ingrams-and-assoc-5-personality-flaws-ch-03"
}