{
    "title": "The Naughty List",
    "pages": [
        "I thought it was high time to enter a contest here after posting on Lit for five years. So here's my submission for the Winter Holidays Contest 2017. You all know the rules...vote if you like it (which I hope you do). Comments/feedback are just the icing on the cake...and I love good icing! Much appreciation in advance!\n\nAlso, a huge thanks to Lady Mireille for her last-minute editing help and suggestions so I could get this submitted in time.\n\nSSW\n\n*****\n\nI usually say no.\n\nBut he was cute, I was bored, and what harm could come from answering a short survey?\n\nI was only at the mall because the weather had been crappy all week, and I was getting claustrophobic in my apartment with my roommate and her boyfriend making out like a pair of spring rabbits in heat. I'd tried to remind them that it was Christmas time, not Easter, but Jolie had been too busy giggling and screeching while Dirk chased her back into her bedroom.\n\nThe slamming of her door was the jolt I'd needed to get me out of my funk and convince me I needed to get out of there. But after two hours of jostling through holiday shoppers and creating a wish list I'd never be able to afford on my salary from my job as a front desk assistant at the gym, I'd decided it was time to head back home. But not before I grabbed a caramel latte from the coffee vendor in the food court.\n\nI left the line with my drink and was heading back toward the north end of the mall when I was waylaid by a tall drink of water. Literally. It was a seven-foot tall cardboard cutout of a glass filled three-quarters-full standing next to a kiosk advertising home-delivery bottled water systems. I was flustered after noticing a guy\u2014who looked very much like Ryan Gosling\u2014staring at me from where he stood by the entrance to one of those preppy clothing stores with a clipboard in his hands. I lowered my head for just a moment and walked right into the side of the thing!\n\nA small group of girls and guys walking past laughed and pointed. I brushed off their looks and glanced at my drink. Thankfully, the lid was still secured. When I looked up again, I was startled by the gorgeous blue eyes looking back at me with a mixture of mild concern and amusement.\n\n\"Are you okay?\" Mr. Clipboard's eyes searched my body before sliding back up to my face. Then he smirked. \"I'm sorry about that.\"\n\n\"I-I'm fine.\" I gave him a smile and shrugged. \"It's just my ego, which was already deflated.\"\n\n\"I'd offer to buy you a drink as consolation, but...\" He gestured to my hand.\n\nI lifted my cup. \"Thanks.\"\n\nHis smile widened, making his eyes shine brighter. \"A raincheck maybe?\"\n\n\"Uh...I don't even know your name.\"\n\nHe clutched the clipboard in his left hand closer to his chest and held out his right hand. \"Chris.\"\n\n\"Nice to meet you.\" The last word was barely audible as his hand closed around mine. His grip was firm...warm...and it made strange but delicious shivers race through me. I bit back a groan when he let go. My breath was raspy when I added, \"Holly.\"\n\n\"With an H, like the Christmas plant?\"\n\n\"Yes.\" I refrained from rolling my eyes but lifted a strand of my hair. \"I even have the red for the berries. My parents thought the name was fitting with my birthday in December.\"\n\nI cringed internally. Stupid! Why are you telling a complete stranger something so personal?\n\n\"Hello, Holly. It's a pleasure to meet you. And happy birthday...early or belated.\"\n\n\"Uh...thanks.\" My cheeks were suddenly warm. I tugged at the collar of my sweater, but it didn't help. I closed my eyes for a moment and took a deep breath. Swallowed with difficulty. When I looked at him again, Chris was frowning.\n\n\"Are you sure you're okay? Do you want to sit down for a minute?\"\n\n\"No, I'm fine. I was just on my way out.\"\n\n\"Oh, big plans tonight?\"\n\n\"N-no. Nothing at all, really. I was just here to get away from my roommate and her boyfriend.\" I mentally slapped myself. Shut. Up. Idiot. Just wear a sign next time that says you're a lonely, single woman with nothing better to do than embarrass yourself at the mall.\n\n\"Then what's the rush to get out into the cold? Come, have a seat and catch your breath.\" Chris pointed to a table for two where the occupants were gathering their things. \"Do you mind?\"\n\n\"Uh...no...I-I guess not.\"\n\n\"Quick, before someone else gets it.\" He placed his clipboard behind my back, using it to guide me. Once we were seated, he set the clipboard on the table. \"It's crazy here, isn't it?\"\n\n\"Well, it's only a week until Christmas. It's like this every year.\"\n\nHe shook his head. \"Too many people for my tastes.\"\n\n\"And yet, you're here.\"\n\nHe tapped the clipboard. \"I needed some extra cash.\"\n\n\"What's that?\" I tilted my head to try to read the words on the pile of sheets under his finger.\n\n\"Consumer surveys.\"\n\n\"Is it like your annual household income and what kind of cleaning products you prefer?\"\n\n\"Exactly.\"\n\n\"I'd be glad to fill it out.\"\n\nHe crossed his arms on top of the pile of forms. \"You don't have to. It's nice just talking to you.\"\n\n\"You said you needed the money. I'm sure that it's based on how many surveys you turn in.\"\n\n\"Well, yeah...\"\n\n\"I have nothing better to do, anyway.\" I beckoned him with my fingers.\n\nChris pushed the clipboard toward me and handed me a pen from his pocket. \"Thanks for doing this. Now I owe you twice.\"\n\nWe talked randomly about the holiday and the weather while I answered the questions. When I was done, I noticed the bottom of the sheet had a space for an email address.\n\n\"Why do you need to know an email if it's an anonymous survey?\"\n\n\"You can be entered into a contest to win a thousand dollars.\"\n\nI raised an eyebrow at him. \"Seriously?\"\n\nHe shrugged. \"That's what they tell me.\"\n\n\"And just how many surveys have you filled out?\"\n\n\"None.\"\n\nI laughed. \"I don't believe you.\"\n\n\"Employees are exempt from entering. Even the temporary ones.\"\n\n\"That must suck.\"\n\n\"Yeah, I could use an extra grand.\"\n\n\"Me, too.\" I filled in my email address and pushed the clipboard back to him. \"If I win, how about I split it with you?\"\n\n\"That's very generous of you. It'll be less after taxes, but I'd be a fool to say no.\" He pulled a blank form off the clipboard, flipped it over, and wrote his first name and email address. \"So you know how to contact me when you win.\"\n\n\"If.\"\n\nHe chuckled. \"Right. If.\"\n\nWe commented on the people passing us for a few minutes while I sipped on my latte. But after he checked his watch twice, I knew I should let him get back to work. Still, I'd enjoyed the time with him.\n\n\"I need to get going,\" I said, standing up. \"It's been a pleasure, Chris.\"\n\n\"The pleasure was all mine, Holly. If I\u2014\" He laughed then shook his head.\n\n\"What?\"\n\n\"I was going to say, if I don't see you beforehand, have a merry Christmas. But...\"\n\n\"Right. We will probably never see each other again.\"\n\nHe smiled warmly. \"Well, you never know. Have a merry Christmas, Holly.\"\n\n\"You, too, Chris. You, too.\" I walked away still wearing my own smile.\n\n###\n\nFour days later before I got ready for bed, I noticed an email with the subject of \"Consolation Prize.\" I almost deleted it as spam, but something about the address seemed familiar, so I opened it with a mental reminder not to click on any links in case a virus was attached. But then I laughed so hard, tears pricked the corners of my eyes.\n\n---\n\nDear Holly I-Don't-Know-Your-Last-Name,\n\nIt is with much regret that I am writing to inform you that you have not won the grand prize of $1000.00 that we agreed to split, minus tax deductions. It's a huge bummer to me, because that means I'll still have to do stupid jobs\u2014like standing around the mall for several hours in holiday mayhem\u2014just so I can buy groceries.\n\nI know it's probably not what you were asking Santa for, but if you're not too depressed about losing\u2014and your ego has recovered from your run-in with the Culligan Man\u2014I received $50 from the survey company for my troubles. I'd like to offer you a date with me as a consolation prize so I can buy you that drink I promised.\n\n'Tis the season,\n\nChris, the Survey Guy\n\nP.S. Don't make me beg. Please. My own ego is fragile these days.\n\n---\n\nI hovered my mouse over the button to reply and clicked. But once I was staring at the blank body of my response, I couldn't think of anything to write. At least not as clever as what he had composed. I settled with a quick answer that I'd be happy to accept the prize if he named the place and time, and then I clicked to send before I could change my mind.\n\nThe next morning, there was another email from Chris. It was even shorter than mine. He'd merely stated to meet at a popular uptown coffee shop that afternoon.\n\nI couldn't keep my legs still at work. It was so unlike me to fidget with my pen or constantly restack the paperwork on the reception desk, but that's what I did. I kept reminding myself it was just coffee. He was just doing this because he was a nice guy, and maybe he'd felt guilty for making me look like I couldn't walk.\n\nAs the hours crept on and the front doors remained closed for the most part, I prayed more members would come into the gym to make the time go faster. But the fact that it had snowed overnight and it was the Friday before Christmas meant the activity on the floor was pretty thin. I'd arranged to take a lunch at the end of my shift and leave early for the day so I could meet Chris, though that just made me more antsy because my stomach started gurgling around noon. At least I think it was from hunger.\n\nOnce it was time to clock out, I found myself lingering in the bathroom stall. I wanted to see him again, right? We'd had a good conversation at the mall. He was easy on the eyes, and that one dimple that his left cheek revealed whenever he smiled only made him more attractive. Not to mention, he wanted to see me again. If he wasn't interested, he wouldn't have reached out. Right? So why was I a bundle of nerves?\n\nFeeling a little more encouraged after my personal pep talk, I made my way to my car and scraped off the frost on the windshield while I waited for the engine to warm up. Fifteen minutes later, I was pulling into the parking lot of the strip mall and walking into the coffee shop. I looked around the noisy, bustling room but didn't see Chris. My layers of a sweater and a winter coat were suddenly too hot.\n\nOh, God, please don't stand me up!\n\nI checked my watch and turned around to leave...only to stare into those bright, blue eyes.\n\n\"Hi, Holly.\"\n\nI gasped since I'd nearly run into him and closed my eyes for a second. Still trying to get my breathing back under control, I smiled at him. \"Hi, Chris. You really have to stop doing that.\"\n\n\"I'm sorry.\" He gave me a devastating smile and slowly lifted his hand.\n\nSomething inside me stirred when his fingers moved a strand of hair from one side of my head to the other then grazed my cheek while he tucked it behind my ear.\n\n\"Your hair is so soft. I love the shade, too.\"\n\n\"Uh, thanks.\"\n\n\"Of course.\" His dimple flirted subtly when he smiled. \"Did you order yet?\"\n\n\"I was waiting for you,\" I said, shaking my head. I shifted my gaze to the register where two people were in line. Then I noticed a group of six were just coming into the coffee shop.\n\n\"Why don't you find us a seat?\"\n\nI nodded and weaved my way through the crowded tables to the last empty one, a table for two, at the back of the room. Once I sat down, I realized I hadn't told him what I wanted. I stood with the intention to tell Chris, but the couple that had been in line ahead of him were heading right toward me. I unbuttoned my coat and sat again, staking my claim on the table. They paused, glanced around, then changed their path to the other side of the room. I watched them while they waited for three women to vacate a table for four before sitting down themselves. Sighing, I resolved that I would just have to get in line myself when Chris was done.\n\n\"One tall, caramel latte for you,\" he said a few minutes later, setting one cup in front of me, \"and a tall, maple pecan latte for me.\"\n\nI blinked up at him, my brain and mouth trying to work together.\n\nChris took the seat across from me. \"You look puzzled.\"\n\n\"H-how did you know?\" I finally managed.\n\n\"Facebook.\" He removed the lid on his cup and blew across the top of the frothy liquid inside.\n\n\"What?\"\n\n\"It was easy to find you with your email address.\" He attempted to take a sip of his drink, cringed, and then said, \"You listed the drink in a post from last month as one of your must-haves if you could only take five things to a deserted island.\"\n\nA shiver raced up my back although both of my hands were cupping my hot drink. I raised both eyebrows at him. \"Stalker.\"\n\nHis eyes widened. \"No! I just wanted to know more about you.\"\n\n\"Uh, huh.\"\n\n\"Look, I'm serious. I swear. I'm not some creepy guy stalking you.\"\n\n\"Yeah, that's exactly what a creepy, stalker guy would say. Gain my trust, and then attack when I least suspect it.\"\n\nChris chuckled. \"You're just jealous that you didn't think of checking me out, too.\"\n\nI opened my mouth, but nothing came out, so I snapped it shut again.\n\n\"Am I right?\"\n\nI narrowed my eyes at him and swallowed heavily. He actually had a point. Why hadn't I thought of looking him up? The worst that could have happened was he either didn't have Facebook or his profile was restricted to only friends. But now that I thought about it, maybe subconsciously, I hadn't tried to find him for fear that he had given me a fake email address just like some women do when they don't want to bother with particular guys. Yet, he had sent me the message that debunked that theory. So I could have\u2014\n\n\"You're cute when you blush,\" he said, the rim of his cup hiding his smile when he blew on the contents again and tried another sip.\n\nMy cheeks grew even warmer after his admission. But then I thought of something. \"Wait, your email last night said you didn't know my last name. If you looked me up on Facebook...\"\n\nHis face turned red this time. \"Busted! I just thought of doing it after you replied to my message.\"\n\nI rolled my eyes at him and took a sip of my drink, relishing the smooth, creamy texture, careful not to burn my tongue.\n\n\"So, you like to fill out surveys.\"\n\nI shook my head. \"No, I \u2014\"\n\n\"Don't deny it. They're all over your profile.\"\n\n\"Oh, those aren't\u2014\"\n\n\"They're surveys. Like the one you filled out at the mall.\"\n\n\"I don't think\u2014\"\n\n\"Do they ask you questions that you provide mostly honest answers to so that others will know more about you?\"\n\n\"Well, yes.\" My knees were bouncing again. I wanted to shrug off my coat due to the fact that I was sweating, but after his admission, I also wanted to be prepared to jump up and leave if the need arose.\n\n\"Holly, the only difference between those and the one you filled out for me is your name is attached to the ones online. Plus, I doubt there are consumer agencies that care that 'Alone' by Heart best fits your love life, or that you think Sam Elliott is fuckable.\"\n\nI covered my eyes with my left hand. \"Oh, my God! Now I'm going to die.\"\n\nChris chuckled. \"Why are you embarrassed? You put it on the Internet.\"\n\n\"Please, just change the subject,\" I mumbled.\n\n\"Is it because I know? Is that what bothers you?\"\n\nIt had been a long time since I'd wanted to crawl under a rock, Sunday's encounter with a life-size billboard at the mall notwithstanding. I refused to admit that he was right...again. But my silence only proved his point.\n\n\"Holly?\" His voice was softer. \"Your honesty is...refreshing.\"\n\nI felt a tear in my eye for some reason. Why did I care so much that he had teased me?\n\n\"I wonder, are you as forthcoming in person?\" There was a hint of concern in his voice, and his hand rested over my right that I still had wrapped around my cup. \"I'd like to know the real Holly McGregor.\"\n\nI sniffled, only half-paying attention to him.\n\n\"Look at me.\"\n\nAlthough his tone remained quiet, it demanded that I obey. I lowered my left hand and blinked away the forming tears. His smile was gone. In its place was a slight frown, despite the light still shining in his eyes.\n\n\"I'm sorry, Holly. I didn't mean to upset you.\"\n\nI took a deep breath to calm my nerves, but my exhale was shaky. \"I guess I figured I'd be the one to tell you all about me, not some online profile.\"\n\n\"I have a feeling those answers barely scratch the surface of the who you really are.\"\n\nA corner of my mouth turned up at that.\n\n\"But to even the playing field, the song that most represents my love life is 'I Want To Know What Love Is' by Foreigner, and I think Stevie Nicks is fuckable.\"\n\nI laughed.\n\nHis smile was back. \"Hey, she's hot.\"\n\n\"I hate to admit it, but she is. You're right again. God, will you please stop doing that? It's annoying.\"\n\nChris sipped his drink for a moment then grinned widely. \"Like cheese and wine, some people only get better with age.\"\n\nI rolled my eyes at him and lifted my own cup.\n\n\"So, now that we're here face-to-face, tell me about you, Holly.\"\n\n\"I don't know. I'm not that interesting. There's not much to\u2014\"\n\n\"That's okay, I'll just read your previous posts.\" He pulled out his cell phone.\n\n\"Stop! Okay, you win!\"\n\nHe laughed and put the phone on the table. \"Good, because that probably would have taken quite a long time to get through your history.\"\n\n\"Now you're just being mean.\"\n\n\"Note to self, Holly does not like to be teased.\"\n\nI pressed my lips together and narrowed my eyes at him.\n\n\"Would it be easier if I put all my questions into a survey of my own?\"\n\n\"That isn't\u2014\" A sudden, increasing melody made us both jump. I realized it was my phone. I had felt it buzzing in my pocket letting me know I had new texts, but the ringtone I couldn't ignore. \"I'm sorry, I need to take this. It's my mom, and she only calls when it's important. I'm really sorry.\"\n\n\"By all means.\" Chris picked up his own phone and seemed to tune me out.\n\n\"Hi, Mom. I... What? Slow down. Oh, God. Are they sure? Can't they... Yes, I heard you. Yes, I'm writing it down,\" I said, reaching for my purse to get a pen. My hand shook as I scribbled some words on a napkin. \"I-I'll get there as soon as I can, Mom.\"\n\nAs soon as she hung up, I dropped my phone on the tabletop and covered my eyes. This wasn't happening. I was dreaming, and I'd wake up any moment. Please, God, tell me I'm dreaming.\n\n\"Holly?\"\n\nI jumped and looked up through blurry eyes to see Chris frowning at me with a furrowed brow. The din of the coffee shop rushed back in, drowning out my mom's words that kept repeating themselves. In those few short moments on the phone, I'd forgotten he was here. Where I was. And then in an instant, I accepted that this was in fact reality. I suddenly found it hard to breathe.\n\nChris reached out and covered my hand with his. \"Holly, talk to me. What's wrong?\"\n\nBlinking away my tears, I managed to say, \"My dad was in an accident. They don't know if he'll make it. Another guy ran a red light while turning and fishtailed on the snow, hitting my dad's car.\"\n\n\"Oh, my God. I'm so sorry. Is there anything I can do?\"\n\n\"No. I-I need to get to the hospital.\" I went to stand up and ended up knocking over my purse. It fell to the floor, some of the contents spilling out. \"I'm so sorry to cut this short.\"\n\n\"Holly, stop.\"\n\nI looked up from where I crouched on the tile floor while reaching for a wayward lipstick tube that rolled further under the table. \"I-I have to go.\"\n\n\"Yes, I know. But take a moment to breathe. I'll pick up your things.\" His hands gently grasped my upper arms. He helped me stand then sit back down. He squatted in front of me and held my gaze, his hands clasping mine while he evenly said, \"Deep breath in. Let it out slowly. Again. Good girl. Keep doing that.\"",
        "I obeyed while he gathered my personal items strewn at my feet. Setting my purse on the table, he helped me stand again. But my legs wobbled, threatening to give out on me. My eyes misted over when he pulled me toward him. His arms tightened around me, and I gasped for breath once more. A single tear escaped when I blinked, the coldness of its trek down my cheek making my lower lip tremble.\n\n\"It's okay to cry, Holly,\" his deep voice whispered reassuringly in my ear.\n\nAnd with those words, I let go. Grasping onto him, I sobbed against his shoulder. Oblivious to everything else around me except his warm embrace and his whispered words of comfort in my ear. It wasn't until I felt the cold chill of the winter wind against my cheeks that I grasped he'd walked us out of the coffee shop.\n\nHe led me toward a beat-up green sedan and helped me into the passenger side. Buckled my seatbelt. Closed my door, cutting off the wind.\n\nI sniffled at the loss of his arms around me. I ran the back of my hand across both eyes, watching Chris walk around the front of the car and slide into the driver's side. Then we were moving.\n\n\"Wait. Where are we going?\" I managed, my voice croaky.\n\n\"The hospital.\"\n\nYes. Of course. How silly of me.\n\nWe were both silent on the ride across town. I was breathing normally by the time he pulled into the lot at St. Margaret's. But I was unable to get out of the car when he came around to my side and opened the door.\n\nWithout a word, Chris unbuckled me and took my arm, helping me stand and walk toward the ER bay. Inside, the lights were so bright, I cringed. He led us up to the front desk and pulled something out of his pocket. I recognized it as the napkin from the coffee shop.\n\nWhen the nurse behind the counter turned to us, Chris said, \"We're looking for Mr. McGregor. I believe he's in the ICU? He came in after a car accident?\"\n\nThe woman glanced between the both of us. \"Are you family?\"\n\n\"Daughter.\" I started to say more, but a soft sob escaped, and Chris's arm around my back tightened.\n\n\"Her mom is already here,\" he offered.\n\nThe nurse nodded. \"Elevators are down to the left. Fifth floor. Just follow the signs.\"\n\nThen we were moving again. Once the elevator doors closed behind us, Chris turned and pressed my face against his chest. His other arm wrapped around me, his chin resting against my head.\n\n\"No matter what happens, I'm right here, Holly.\"\n\n\"I-I just met you. You don't have to do this.\"\n\n\"I want to, okay?\"\n\nI nodded. I didn't have the energy to argue logic with him at the moment. I resolved to just be grateful that he was with me.\n\nAs soon as the doors opened again, I stepped out into an alternate reality. I walked beside him, but I wasn't the one in control of my body. Everything I saw or heard seemed distorted, as though from a distance. After we entered the ICU wing, I gripped Chris's hand tighter and let him guide me while we followed a nurse down the hall.\n\nWe stopped in the doorway of a room, and I shrank back at the sight of my dad in the hospital bed. He was covered in scrapes and already-forming bruises on his face, and he seemed much paler than normal against the white sheets and pillows. Wires and tubes ran from his arms, under his hospital gown, and his mouth and nose to various machines arranged around him. My mom sat in a chair on one side, her arms folded on the side railing of the bed.\n\n\"Mrs. McGregor?\" the nurse said softly.\n\nWhen my mom turned her head, she looked like she had aged ten years since I'd seen her two weeks prior. Her pallor matched my dad's, and her eyes were bloodshot as they met mine. She looked so...fragile.\n\n\"Holly?\" She rubbed her hand at her forehead and slowly stood, using the railing for support.\n\n\"Mom!\" I approached her, and we kind of fell into each other, our hug firm but our bodies shaking. \"How is he?\"\n\nShe released me and sat down again, this time using the arms of the chair to aid her. \"It's too soon to tell if there will be any long-term effects. He's stable, but he's still in critical condition. He hasn't woken up, yet, either. The doctor was just in. He said your father's seatbelt saved his life. The other man wasn't wearing his and didn't make it. Another car hit him after he hit your father.\"\n\nA strangled cry made its way up my throat. Someone had lost a family member today. I tried not to think that I could lose my dad as well, especially with Christmas so close. The holiday would never be the same for us again if he was gone. Fresh tears clouded my vision, and I resisted the urge to wipe at them. \"What can I do, Mom?\"\n\n\"Just having you here is enough.\" Her voice was a little croaky, as though she'd been crying recently, too. She sighed and gave me a sad smile. \"Who's your friend?\"\n\n\"Oh! Um...\"\n\n\"Chris, ma'am.\" Chris stepped forward and offered his hand, which my mom accepted.\n\nHer smile seemed to brighten a little. \"Ma'am. Don't I feel old now? It's nice to meet you.\"\n\n\"I'm sorry about your husband.\"\n\n\"Thank you, Chris.\" My mom held my gaze. I feared she would start her usual 20-questions about how we had met and such, but she just turned back to my dad and resumed her stoic position on the side rail, her folded arms cushioning her chin now.\n\nI let out a shaky breath while Chris led me to a second chair on the opposite side of the bed. I was suddenly exhausted. I didn't object when he rolled the doctor's stool over to sit down, too, and put his arm around me. Or when he told me to close my eyes and get some rest...that he would wake me if my dad's status changed. I mumbled some form of thanks, to which he just said, \"Shh.\"\n\n###\n\nKnowing there wasn't much else we could do but wait, I had Chris run me back to get my car from the coffee shop after I woke from a short rest. I tried to thank him, but I got choked up. He pulled me into his embrace, and then we got in our respective cars and went our separate ways.\n\nI made stops at my parents' house and my apartment to get a few things. After I filled Jolie in on what was happening, she clasped my hands and whispered what sounded like a heartfelt \"sorry\" before she disappeared back into her room. I could hear Dirk calling out, asking what was taking her so long. I rolled my eyes and grabbed my overnight bag. Some things would never change.\n\nI swung by work. My boss said to take as much time as I needed but to keep him updated after the holiday when the gym reopened. I wasn't sure if I wanted to kiss him or cry. I chose to hightail it out of there before I did either.\n\nBack at the hospital, I found Chris sitting with my mother. I blinked away my surprise, especially at the empty fast-food wrappers crumpled on the rolling table/tray that had been pushed against the window. My mother was in her chair but leaning forward across the bed, her arms folded beneath her head as she rested against my dad's leg. She appeared to be sleeping.\n\nThe scent of grease and French fries masked the medicinal smell of the room. It also made my stomach growl. My eyes honed in on a white, paper bag sitting on my chair, the top rolled closed in an apparent attempt to keep some residual heat enclosed. I gave Chris a quick glance, to which he just smiled and gestured with his paper cup to eat.\n\nI mouthed, \"Thank you.\"\n\nFor two days, my mom and I stayed with my dad. Chris remained by my side\u2014in a real chair he'd somehow convinced the nurse to relinquish as we'd been told they were precious items with only two to a room\u2014when he wasn't getting us food or coffee or something to read. I grew accustomed to using his shoulder and chest as a pillow. It didn't hurt that he smelled really nice, or that he lightly caressed my arm or back, helping me drift off.\n\nEvery time I started to question his presence...his desire to help out a stranger\u2014which I still considered him to be\u2014he'd gently shush me and reiterate that he just wanted to be there for me. I gave up on the second day and took comfort in knowing he cared, though I wondered how long it would last. He seemed too good to be true, for as little as I knew of him.\n\nIn the afternoon, my dad finally opened his eyes and responded to various stimuli that the doctor said was encouraging. Although the breathing tube was removed, it was difficult for him to speak since his throat was so dry from being intubated. He was extremely weak, and the doctor insisted on keeping him in the ICU.\n\nThe morning of the third day, Chris offered to take me home to get a shower and sleep in my own bed. My mom had gone home for a few hours last night but was back before the sun rose. I was wearing the same clothes as when I'd met Chris in the coffee shop, so I was sure I was a little ripe. Still, I protested.\n\n\"No, I need to be here with\u2014\"\n\n\"You need to take care of yourself, too,\" Chris insisted, brushing my hair away from my forehead.\n\nI watched my dad's sleeping form for a moment. Listened to the soft beeping of the machines.\n\n\"He's right, Holly,\" my mom said when I didn't move. \"I'll call you if anything changes.\"\n\nChris took my hand before I could say anything else and led me out the door.\n\nThe walk back to the elevator and the ride down to the main floor seemed long. Neither Chris nor I talked, and he held my hand until we got to my car. There, he stopped on the driver's side and held out his hand.\n\n\"I can drive,\" I said defensively, pulling my keys out of my pocket.\n\nHe just wiggled his fingers at me.\n\nI held my ground this time. \"Why are you doing all this? Not that I'm ungrateful. I just don't understand.\"\n\n\"Holly... Sometimes, it's okay to let someone do something nice for you. Especially, on Christmas Eve. It's the season of giving.\"\n\nI clenched my eyes shut for a moment. All of the days had blurred together this past week. Christmas Eve? It couldn't be... But no...he was right. Again. My face was flushed despite the crisp wind blowing around us. \"You just shouldn't feel obligated\u2014\"\n\n\"It's adorable how your cheeks have pinked up, but it's kind of cold out here. You've barely slept in the past few days. So will you please just give me your keys?\"\n\n\"Fine. You win.\"\n\nChris chuckled. \"It's not a game. It's called chivalry.\"\n\nI snorted and slid into the passenger side when he unlocked the doors. It was strange sitting on the wrong side of my own car, but I was kind of glad I didn't have to maneuver the snow-covered streets. I buckled up and watched him start the engine, turn on the defrost, and then walk around the car, scraping the thin film of frost off the windows.\n\nOnce we were on the road, I adjusted the heat settings and gave directions on how to get to my apartment complex. Traffic was heavy, being the holiday, and I settled into my seat for the long haul. What was normally a ten-minute trip took thirty. I was just drifting off by the time Chris pulled into the parking lot and found my spot in the carport.\n\n\"Just a little bit further,\" his voice said in my ear, his arm guiding me up the three steps of the front stoop and then through the main door.\n\nWe stood in the hallway for a moment before I realized he needed to know which one was my apartment. I pointed down the hall. \"Number three.\"\n\nI thought I heard him mumble something about how he was glad I lived on the ground floor, and then we were walking again. At my door, he unlocked it and let me enter first. Light flooded the space.\n\nI was shrugging off my coat to put it on the back of a dining room chair when I noticed something was off. I blinked and looked around. Everything seemed to be in its place. I turned back to see Chris watching me with one eyebrow raised.\n\n\"What is it?\"\n\n\"I don't kn\u2014\" I started to shake my head, but then I laughed. It was the silence. No squealing or feet pounding on the floor while being chased around. No doors slamming. And no loud grunts and cries as the result of sex. \"My roommate. She must not be here.\"\n\n\"Gone skiing with Dirk. See you after Christmas.\"\n\n\"Huh?\" I scrunched up my nose.\n\nChris held up a slip of paper. \"It was on the table. I'm guessing Dirk is not your roommate?\"\n\n\"No, Jolie is. It's eerily quiet around here.\" I tilted my head to the side. \"Huh, I think I kind of like it.\"\n\n\"All the better to help you rest, I say. Now, shower first?\"\n\nI started to nod but yawned.\n\nHe frowned. \"Do you think you can manage to stay upright long enough?\"\n\nI managed a complete nod this time then led the way to the back of the apartment to the door with a red-and-green striped, wooden 'H' hanging on it. Across the hall, Jolie's door had a similar 'J' but in green with gold polka dots. I stopped and turned in the direction of her room, still amazed that there was absolute silence.\n\n\"But I want to sleep,\" I pouted, looking back at Chris.\n\n\"You'll feel better after you get cleaned up.\" He opened my bedroom door and ushered me inside. Then he walked right back out, closing the door behind him.\n\nI stared into the semi-darkness, feeling a bit like a child who had been sent to her room, although she had done nothing wrong. Yawning, I stripped down and pulled on my robe. Everything was still silent when I opened my door and turned left and walked the few paces into the sole bathroom between mine and Jolie's bedrooms.\n\nAs soon as I stepped under the hot streams of water, I groaned and silently cursed Chris for being right again. It felt wonderful to scrub away the sweat and wash the oiliness out of my hair. I made quick work of toweling off and combing out my hair before weaving it in one, long plait. I didn't think I could keep my eyes open long enough to dry it.\n\nBack in my room, I tossed my robe and crawled beneath the piles of blankets I kept layered on my bed. The softness was a cocoon against my naked body. I started to think of my parents, and then there was nothing.\n\n###\n\n\"Mmm,\" I moaned softly at the lightest touch on my forehead and rolled onto my back.\n\n\"Did you sleep well?\"\n\nMy eyes shot open to stare up into a familiar, masculine face, my breath and voice trapped in my throat. His silhouette was outlined by the soft glow from my bedside lamp.\n\n\"It's okay, Holly.\" Chris brushed his fingers across my brow again, moving through the strands of my hair before repeating the gesture, his eyes searching mine.\n\nI licked my lips and swallowed, my voice a whisper when I could speak. \"What are you doing here?\"\n\n\"Checking on you to make sure you're all right.\"\n\nI started to sit up but remembered I didn't even have my bra and panties on. I scooted away a little instead. \"How long have I been sleeping?\"\n\nHe glanced at his watch. \"About four hours.\"\n\n\"And you've been here the whole time?\"\n\n\"Yes.\"\n\nI gulped. \"As in, right here on the bed watching me?\"\n\n\"No. As I said, I came to check on you. You were moaning. Did you know, you talk in your sleep?\"\n\nI closed my eyes for a moment. Oh, God.\n\n\"It's nothing to be embarrassed about, Holly. It's quite endearing.\"\n\nWhen I returned my gaze to his face, there was that prize-winning smile again. I started to sit up, struggling to wrap one of the blankets around my body. \"I-I need to go. My mom is waiting on me.\"\n\n\"She texted me while you were sleeping.\"\n\nHe had my mom's phone number? I opened my mouth, but he held up a hand.\n\n\"I thought it better to let you get your rest. Your mom said the doctor encouraged her to go home, and you didn't need to come back tonight. Not on Christmas Eve.\"\n\nI pulled the blankets tighter around me. \"I-I don't have a joyful spirit this year. Not with Dad...\"\n\n\"I understand.\"\n\nI sniffled and prayed I wouldn't lose it in front of him. Again. I frowned. God, he must think I was a blubbering, emotional mess.\n\n\"I didn't mean to upset you. I just wanted\u2014\"\n\n\"Yes, I know, you were concerned.\"\n\nChris stood slowly. \"Holly\u2014\"\n\nI pressed my hand to my eyes. \"I'm sorry. I shouldn't have snapped at you. You've been nothing but a blessing these last few days. I think it's just the stress of the situation. And I didn't expect to see you sitting on my bed.\"\n\n\"I've outstayed my welcome. I should go.\"\n\nHe walked out of the room, shutting the door behind him. I quickly pulled on my sweater and jeans, sans underwear, then followed him. He was at the front door when I caught up.\n\n\"Chris, wait!\" I touched his forearm then pulled my hand away.\n\nHe stopped but didn't turn around.\n\nI tried again, letting my hand linger this time on his shoulder. \"Stay. Please.\"\n\nHis hand fell from the doorknob. Still, he kept his back to me.\n\nI glanced at the living room window. White swirls blustered about under the dim light from the street lamps outside. \"You don't have your car. It's snowing harder. I-I don't like driving in this weather. I can't take you back to the hospital for you car.\"\n\nHe hesitated\u2014still not facing me\u2014before saying, \"I can get an Uber...or a cab.\"\n\n\"I-I'm sure that will be almost impossible. It's Christmas Eve, remember? The few that are running will be backed up with the snow. It could be hours. And they'd be sure to gouge you on fees, too.\" I wrung my hands, bouncing a little on the balls of my feet. Why was I so adamant that he stay?\n\n\"Are you saying I'm your prisoner?\" He glanced sideways at me.\n\nMy body flinched. \"Uh...\"\n\n\"I'm teasing, Holly.\" But the low tone and the glint in his eyes when he finally faced me told me he might not be opposed to being held captive by me. Or at least stranded together.\n\nI gulped and then nodded. \"Okay.\"\n\n\"Do you have food in the house?\"\n\nHis question left me blinking at him. He took a step closer to me, and I found myself retreating. Another step forward, another step back. Again and again, as though we were doing a strange, silent dance. Then suddenly, I backed into the refrigerator.\n\nThe corner of his mouth turned up when he lifted his right hand toward my head and I inhaled sharply.\n\nMy eyelids were heavy. I licked my lips. Told myself to breathe.\n\nI huffed out a breath when his hand didn't touch me. Instead, I felt the refrigerator shake slightly and a blast of cool air hit my face. I looked to my left to see that he'd pulled open the other half of the two doors.\n\n\"It's not much, but that should be sufficient for twenty-four hours.\"\n\n\"I-I was supposed to go to my parents' house for dinner tomorrow.\" A resurgence of tears threatened my eyes. I would probably be spending Christmas Day in the ICU. No turkey and dressing this year.\n\nThe door closed, but I was still staring at his arm that was in my direct line of sight...at his hand that was pressed flat against the door. He had a thin layer of hair on his forearm, a shade darker than what was on his head. Long, thick fingers spread out from his large palm, their ends capped with clean, trimmed nails. God, even his arm and hand were attractive.\n\nI gulped, slowly sliding my eyes to meet his. I let out a small whimper, my knees suddenly feeling weak. The heat in his gaze was so intense. And then I was staring at his back while he walked away.\n\n\"I'm going to take a shower, if you don't mind.\"\n\nI silently followed him back towards the bedrooms. He continued on to the bathroom and shut the door between us. I stared at the grains in the stained wood, hearing the sound of the water being turned on. Then my eyes dropped. For a moment, I held my breath, studying the handle while my brain processed the pros and cons of turning it.\n\n###\n\nIn the end, my conscience won out. I sat on the edge of my bed, my hands in my lap. I told myself to breathe in and out slowly. When that didn't work, I knew I needed a distraction. Anything to get my mind off the fact that Chris was standing buck naked in my shower. That he had watched me sleeping. Heard... Who knew what he'd heard me say? Jolie had always said it was ramblings. Nothing coherent to her. I had nothing to fear, right?\n\nWhat could I focus on...? Facebook. Yes, that usually worked. And music. Good.",
        "Moving over to my desk, I opened my laptop, set iTunes to randomly play my Favorite's playlist, and then logged in. To the sound of Coldplay's \"Something Just Like This,\" I reviewed the new notifications. Denied a friend request from someone I'd never heard of who had no photo. Made a comment on a coworker's post.\n\nI was scrolling past several recipe posts in my news feed when I thought of looking up Chris's profile. It didn't take long to pull up my email and find his address. A couple of clicks later, I was staring at his handsome face with those blue eyes and blond hair. At his parted lips stretched into a devilish yet inviting smile. I licked my lips at the dimple that drew me in, like a target.\n\nNext to his photo, it said 'Chris Berry.' I wanted to laugh...maybe even cry. Because for some stupid reason, I started thinking it wouldn't be so bad as an adult to be called Holly Berry.\n\nI couldn't deny it. I was lovestruck. But was that possible in such a short time?\n\nBehind his profile photo was a winter landscape that looked like the woods. There was a stark contrast between the white ground and sky and the bare, black trunks and branches in the foreground with a black lane curving off into the distance between the trees. It was hauntingly beautiful.\n\nMy eyes kept jumping back to his on the screen. At the depth the camera had captured, just like in the black-and-white photo of the trees. I gulped and shifted in my chair. The mouse pointer moved across the page, changing to the pointing hand whenever I crossed over a link. It settled on the 'More...' button then the option for Notes.\n\nI sat back. There were more notes than I'd ever seen, and they were all surveys. Random questions about every day things. Specific themes on personal experiences like whether or not you had visited a state or seen a movie. Some were quite short while others were more lengthy, although all seemed to have Yes/No answers, or simple one-word answers like 'red' as your favorite color.\n\nMy heart beat a little faster while I read one note after the other. Some I just skimmed, while others I thoroughly covered from top to bottom. I discovered more about Chris than I ever expected to. He had been right...one could learn so much from a survey, anonymous or not. Damn him.\n\nI was deep into the posts dating back three to four years when I noticed the heading THE NAUGHTY LIST in all-caps on one of them. Once more, I hesitated. I scrolled past, not really seeing the words on the screen while I tapped my index finger on top of the mouse. With a loud sigh, I went back and clicked on the note.\n\nAt first glance, it looked just like another survey. A list of questions that pertained to a more sexual nature, but otherwise, quite harmless. The more I read, though, the more I began to doubt that analysis. Especially after seeing his answers. And I couldn't help thinking of my own.\n\nTHE NAUGHTY LIST\n\nAnswer honestly, but it's all in good fun! Don't forget to copy and paste as a new post.\n\n* Have you lost your virginity? Yes (yep)\n\n* Do you like to masturbate? Yes (well, duh, what guy doesn't? I'm not ashamed to say I do, too)\n\n* Do you like to watch porn? No (never tried)\n\n* Have you ever kissed someone of the same gender? No (we were drunk...)\n\n* Have you ever intimately touched someone of the same gender? No (does on top of shirt count?)\n\n* Have you ever had sex with a partner of the same gender? No (no...no, I'd never have gone that far )\n\n* What is your favorite position? Girl On Top (missionary)\n\n* Do you like receiving oral sex? Yes (who doesn't?)\n\n* Do you like giving oral sex? Yes (not really)\n\n* Do you spit or swallow? N/A (ick! spit)\n\n* Do you like anal sex? No (thank God!)\n\n* Do you prefer a bald or natural pussy? Bald (true, smooth is nicer, despite the upkeep)\n\n* Which is better to grip: hips, shoulders, ass, or tits? All of the above (God bless you, man)\n\n* Do you like your hair pulled? Yes (um...that sounds painful, so no)\n\n* Do you like to pull hair? Yes (if I wouldn't want it done to me...)\n\n* Do you like dirty talk during sex? Not usually (ditto)\n\n* Do you like to call your partner derogatory names? No (right on)\n\n* Do you like to be called names by your partner? No (I like this guy)\n\n* Do you like to be spanked? No (people do that intentionally?)\n\n* Do you like to spank? Yes (seriously? you can't take what you dish out?)\n\n* Do you spank openhanded? Yes (like a kid getting punished?)\n\n* Do you spank over the knee or just bent over? OTK (thanks, now I have an image of a woman laying ass-up in a guy's lap)\n\n* Do you like your partner to use their teeth? Sometimes (to do what?)\n\n* Do you like anal play? Yes (what is that?)\n\n* Do you like orgasm denial or edging? Yes (how cruel)\n\n* Do you prefer to be in control? Usually (of what?)\n\n* Do you prefer to submit? Rarely (what does that mean?)\n\n* Do you like inflicting pain? Sometimes (okay, maybe I should stop here)\n\n* Do you like receiving pain? No (uh, yeah, stop reading Holly)\n\n* Do you like to hear your partner scream? Yes (...)\n\n* Do you like blindfolds? Yes (oh, that's not so bad. maybe)\n\n* Do you like handcuffs? Yes (I could get on board with that one)\n\n* Do you like Shibari? Yes (Shi-what?)\n\n* Do you like nipple clamps? Yes (double ouch! and double no!)\n\n* Do you like flogging? Yes (is this list in order of less to more pain? geesh)\n\n* Do you like riding crops? Yes (that would be a no)\n\n* Do you like caning? No (definitely not)\n\n* Do you have any genital piercings? Yes (hell n\u2014 what the hell has he got pierced??)\n\n* Would you fuck the person who sent you this list? No (oh...um...well...I think so, but...uh)\n\nI blinked at the computer monitor, my heart racing so fast I could hear the blood pumping through my ears. And if I wasn't mistaken, my pussy was throbbing. What the hell?\n\n###\n\n\"You haven't moved in a long time, Holly.\"\n\nChris's voice made me shriek and jump up from the desk, banging my knee. I spun around, panting. \"Y-you scared me!\"\n\nInstead of apologizing, he silently made his way over to where I stood rubbing my leg.\n\nMy eyes drifted from his damp hair down to his chest. His bare chest, where water droplets still clung in places. When I followed the defined lines of his abdomen and met the waistband of his jeans with his buckled belt, I groaned.\n\nThe clean scent of soap drifted up to my nose. My legs wobbled. I reached back to hold onto the edge of the desk and heard his slight hiss when the action pushed my chest out.\n\nHe glanced at the computer and then back at me, one corner of his mouth twitching. When he raised his hand, my body trembled. His fingers lightly brushed at my forehead then down my cheek, sending goosebumps prickling across my arms and a shiver racing down my back straight to my pussy. My exhale was shaky.\n\n\"Stealing my own trick?\" His voice was so soft, I had to lean toward him to hear him better. \"Did you find any interesting tidbits about me?\"\n\nI gulped, glancing down. But that put my line of sight directly where it shouldn't be.\n\n\"Hmm? Holly?\"\n\nI closed my eyes. He could see the evidence himself. Why did I need to say it out loud? Oh, why had I convinced him to stay?\n\nMy eyelids flickered open at the feeling of his fingers under my chin, tilting it up. I let out a soft whimper when he moved a step closer, his body touching mine now. Thighs against thighs, chest to chest. His hand slipped across my jaw, his fingers wrapping under and around my ear.\n\n\"Are you turned on, Holly?\"\n\nMy entire being froze at the intimate question, and my eyes opened wider. I imagined it was what a deer felt like when met with the headlights of a car. Fight or flight? Fight or flight? Fight or\u2014\n\n\"Your pulse is racing.\" Chris's gaze intensified\u2014if that was possible\u2014when he brushed his thumb across my cheekbone. I whimpered louder. He tilted his head, that dimple popping out, drawing my focus to it...to his lips which parted again. \"I wonder...what did you think of my answers? Were you answering for yourself while you read it?\"\n\nMy tongue slipped out and licked my lips at the thought of some of those questions. Or rather, how he'd responded. I had questions of my own about some of them, but I didn't have the guts to voice them. I found I could blink, although very slowly. That I could breathe again. And then my brain told me that the reason I was all relaxed was probably because he was still caressing my cheek with the lightest touch, his palm warm against my neck.\n\n\"I remember...\" he said, pausing to lick his own lips, \"that you don't like to be teased. That's a shame. A lot of fun can be had. But I don't want to upset you.\"\n\nBefore I could process his words, his mouth descended on mine, cutting off my gasp, muffling my moan while his hand pulled my head closer. My hands gripped the edge of the desk harder until his other arm snaked around my back and pulled me upright.\n\nHe supported me, his lips caressing mine. His fingers flexing at the base of my skull, his thumb still sweeping back and forth across my cheek. His tongue coaxed until I released my jaw.\n\nThen I was gripping his arms, holding on for dear life while he invaded my mouth, luring my tongue to join his in a sultry dance. My hair suddenly fell around my face, and I realized he'd released it from the braid.\n\n\"I like it down,\" he said lowly, gently tugging on a section so that my head tilted back before he devoured my lips once more.\n\nI arched against him, whimpering when his knee pressed between my thighs. My mind was hazy, and it occurred to me that I was rocking my hips. Trying to increase the pressure. It felt so damn good, tears filled my eyes.\n\nSuddenly, he scooted me around the side of the desk until my back pressed against the wall. He moved my right arm to hook behind his neck before resting his left forearm beside my head. I clenched my eyes when his other hand left my back and settled on top of my sweater...over my breast.\n\nThrough my moans, I heard him encouraging me while I humped him, my other arm dropping to hang limply by my side.\n\n\"That's it, Holly.\" He was panting now. \"Let go.\"\n\n\"No,\" I muttered when his hand released me. But I choked out a cry when it slipped under my sweater and cupped my bare breast. Then I sucked in my breath between my teeth when his thumb grazed over my nipple....when he pinched it.\n\n\"Beautiful,\" he whispered, his voice close to my ear. \"You've been neglected. Your true self can be revealed when you're most vulnerable. Like when you're sleeping. You may think it's just harmless ramblings. But dreams are usually spawned by your subconscious. Things you have heard and seen. What you fear. Desire. Even without realizing it. When one who is attuned to certain aspects beyond some physical acts, simple words put into the right context make perfect sense.\"\n\nI mewled like a kitten. His voice was intoxicating\u2014filling my head, making me lightheaded\u2014while the gentle strokes of his hands and fingers deepened the spell he was weaving over me.\n\n\"Do you have dreams about having sex, Holly? Is that why you murmur words like 'more' and 'harder' and 'please' while writhing in the sheets? Whimpering when the vision in your mind stops touching you? Doesn't bring you to release?\"\n\nI rolled my head away from him. My whole body was on fire now, and not just from arousal. I couldn't believe I'd said those things. That he'd heard them. Understood them.\n\n\"I aim to rectify the situation.\" His tongue and lips played at the heated skin of my exposed throat, his hand massaging and squeezing my breast harder. \"First, I'm going to make you come just like this.\"\n\nA deeper moan escaped at those words. I'd never been happier that I wasn't wearing panties...that I always took the time to shave and keep my pussy smooth. The way my jeans rubbed against my skin and the added pressure of his thigh drove me wild.\n\nI tried not to think of wanting his tongue...his fingers...his cock inside of me. I tried to concentrate on just the feeling of him holding me. Kissing me. Stoking the fire between my own legs.\n\nHis hand abandoned my breast and slipped behind me again, caressing the small of my back.\n\nThe music changed to Imagine Dragons' \"Whatever It Takes,\" and I arched further, pressing my chest to his. The words...the beat... I'd been addicted to the song the minute I'd downloaded it the other night. Pulling my right arm toward me, I gripped his neck tighter.\n\n\"Mmm.\" His hand clamped down on my hip and helped rock me against him. His fingers dug into me through my jeans, making me hiss from the sensations spinning through me.\n\nMy eyes still closed, I focused on listening to our combined labored breathing in competition with the song. Feeling his hand guiding me, drawing me further up his leg while he moved it up and down to match my rhythm. Helping me hump him. His erection pressed against my other thigh. I flung my left arm around his neck and held on, silently begging for the building urgency to be released.\n\nChris pressed his forehead against mine, his breath hot across my cheek. He growled suddenly. \"Come for me, Holly.\"\n\nJust when I thought I wouldn't make it there, his hand slid up and gripped my breast again, almost painfully. I rolled my head against his supporting arm and ground down harder on his leg. My eyes flew open as a cry spewed from my mouth, my arms releasing him while my body shuddered between him and the wall.\n\n\"That's it. Good girl.\"\n\nHis words buried in my addled brain, making me whimper. The next thing I knew, he was carrying me to the bed. Lifting my sweater off me. Undoing and lowering my pants.\n\nI heard his low growl at revealing my lack of panties. And then my own purr when his hands spread my bare thighs wide. When his arms wrapped under and around them before his mouth covered my pulsating pussy.\n\nI could no longer think. His tongue...it was...magical. Licking me in all the right places. Making me tremble and call out his name. My head rolled back and forth on the bed, my hands clenching and releasing the sheets.\n\n\"Come for me again, Holly,\" he grunted before diving back in. His tongue teased my entrance before sliding inside.\n\nMy hips lifted, and he held me up while he twisted that knot inside of me tighter and tighter with each flick at my clit and stroke down through my swollen lips.\n\nSuddenly, I was on that edge. I reached down and buried my fingers in his hair to keep him right where he was. He growled his understanding. Somehow, he increased his ministrations. And then, I was falling over, my body thrashing on the bed.\n\n###\n\n\"Are you okay, Holly?\"\n\nI heard his words, but I didn't open my eyes. I just hummed and gave an almost imperceptible nod. I tried to breathe evenly from the position I'd curled into on my side after I came down from my second release. I feared that any more movement would break the spell and prove I had dreamt it all.\n\nThe bed shifted when Chris laid down behind me. His thigh touched the back of mine. His naked thigh. A shudder ran through me. It intensified when his hand skated along my body from my leg and up to cup my breast.\n\nI couldn't stop my hips from arching back. Or the strangled cry when the length of his cock pressed against my ass. I clenched my eyes at the sound of his low groan and struggled to resist rocking again.\n\n\"I know this is all kind of sudden. I hadn't planned on this,\" he murmured in my ear before he kissed me there. His fingers played over my nipple at the same time then stilled. \"Do you want me to stop?\"\n\nI fought my conscience for the briefest moment before managing to say, \"No...please.\"\n\n\"There's just something about you.\" He nuzzled my neck, and I sighed when his fingers moved again. \"I want to make love to you. But...\"\n\nI held my breath. But what? I'd just told him not to stop. Did I also have to tell him aloud that I wanted his mouth on mine again? His hands everywhere all at once? That I wanted his cock buried deep within me while we were mindlessly writhing in tangled limbs? Fucking me until...\n\nUntil when, Holly? Until you can forget about what has happened this week? That your dad is lying in a hospital bed on Christmas Eve, and your mom is home alone? Then what? The sex can only disguise the pain for so long. And your history for keeping men around after traumatic events isn't exactly stellar.\n\nI know that.\n\nDo you? Must I remind you about your chem lab partner, Grant, freshman year at the university? You pledged Greek because he was in a frat and he showed you attention. You even gave him your virginity, only to be dumped when the sorority didn't accept you. Or Parker, your boss at your first job...at the bookstore? He showered you with compliments until he'd sweet-talked you into staying late after work. You ended up shagging in his office a few times. But when you refused to blow him in the stock room during business hours, he gave your promised promotion to Jill and made your life a living hell until you were forced to quit.\n\nStop it.\n\nLet's not forget the Big One. Just this Halloween at the conference center? When your boyfriend Jason, the personal trainer from work, showed up with a client named Tina...wearing the same couples' costume you'd proposed but he'd shot down? He'd claimed you'd agreed to be in an open relationship. You'd been too drunk to ask the guy in the Dracula costume what his name was. You just went along with him when he suggested you go up to his hotel room. Revenge sex can be sweet...but only if the person you're trying to hurt cares about you in the first place.\n\nDon't\u2014\n\nThe sex was great...what you could remember of it. But you were left with his room bill the next morning. And just to twist the knife even more, Jolie came home from work the next weekend and introduced you to Dirk...aka Dracula, her childhood crush who had moved back to town. The same guy who looked you in the eyes without blinking while you stood face-to-face in your apartment, your roommate gushing about how it had to be fate that they were back together again. Almost two months later, and you still haven't told her because you'd rather let him continue to disrupt your life day-in and day-out than admit you had a one-night stand and find another roommate. He still owes you $125. Or maybe he considers it services rendered in some backwards way.\n\nThat's not fair.\n\nYou're torturing yourself. Don't do it with this guy, too. You're the one who will get hurt in the end.\n\nI frowned. This is completely different. I know his name. I didn't just jump into bed with him. Chris isn't Dirk...or Parker or Grant or any of the others. I\u2014\n\nI could practically hear my conscience laughing at me.\n\nReally? Yeah, he's easy on the eyes and is very talented with his tongue. But that list? Woo wee! That only spells trouble.\n\n\"Holly?\" Chris gently turned my chin toward his. \"Please don't cry. We don't have to do anything you don't want to.\"\n\nI blinked and realized there were tears in my eyes. I rolled over the rest of the way to face him, curling my body against his. Sighing when his arms wrapped around me.\n\nHe put one hand behind my head, holding it to him. \"I didn't mean to upset you. I'm sorry.\"\n\nHow could I explain the train wreck in my head? Did I even want to try? Maybe those other thoughts were right. I should just let him walk away before either of us gets hurt. I sighed again. \"It's not you...\"\n\nHis grumble made his chest vibrate against mine. \"Don't even finish that sentence.\"\n\n\"I just...I'm not good with guys. Relationships. Or rather, they're not good with me. I'm fucked up.\"\n\n\"Shh. We're all flawed. Me, included. And people fail all the time. That's how they learn. Some just take longer than others. So what if you've had a few bad relationships? They weren't right for you. Not that I'm saying this will be, but it's good so far. Just give it a chance, okay?\"",
        "I shivered at the thought of what we'd done in the past twenty minutes alone. Yeah, it had been more than good. I cursed in my head that he always had the right thing to say.\n\nChris pressed his lips to my forehead and rubbed my back. \"Since we're being open here, before we go any further, I think it's a good time to address something important.\"\n\n\"Okay...\" I started to lift my gaze and got as far as his mouth.\n\n\"Holly, are you a good girl?\" he said seriously, as though my answer was the most crucial decision of my life thus far. Then I saw a shadow of his dimple. \"Or a naughty girl?\"\n\nI ducked my head again Oh. My. God. My face probably looked like Rudolph's fucking nose!\n\n###\n\nEven when I'd finally recovered from my shock and found my voice, I couldn't look at him. I had an inkling about what he was referring to. Yet, I decided to play na\u00efve. \"I-I'm not sure what you mean.\"\n\n\"You read the list,\" Chris said, his finger lazily trailing a path down my arm. \"I'm curious how you answered the questions. If they matched up to any of mine.\"\n\nA shiver ran through me. \"Where did you even find something like that?\"\n\n\"On a fetish website that I subscribe to.\"\n\nMy head snapped up to stare at him. \"A what?\"\n\n\"Fetish website. It's where people like me hang out.\"\n\nI let out a small squeak and tried to push him away. \"P-people like you? I don't\u2014\"\n\n\"Shh. Listen.\" He kissed me softly, his hand stroking my hip now. His voice was lower...seductive...when he said, \"I like to bring my partner absolute pleasure, not pain. Never pain.\"\n\nI stilled. \"H-how?\"\n\n\"With my body. Sometimes with just words. Or the aid of some toys.\"\n\n\"L-like handcuffs...and blindfolds?\" I gulped, remembering those and other questions from the bottom of the list.\n\n\"Exactly. When a woman surrenders control, she allows herself to experience pleasures she has only dreamt about. It gives a whole new meaning to the word 'intense.'\" He pulled back and looked down into my eyes for the longest time. \"I would like to give you a demonstration of what I mean. Do you trust me?\"\n\nI hesitated, and Chris added, \"But you should know that if you say yes, I intend to touch you. Tease you. Give you extreme pleasure. And ultimately, I will make love to you.\"\n\nBefore I could start hashing out the pros and cons with my conscience, I slowly nodded, whispering, \"Yes.\"\n\nHe deserved a chance. After what he'd done for me in the short time we'd known each other, I owed him at least that. And I owed it to myself. To prove he wasn't like the other guys I'd known.\n\n\"Good.\" He kissed me softly then pulled the covers off us both. He moved to sit on the edge of the bed, patting and smoothing his hand on the mattress beside him. \"Come here.\"\n\nI was on my hands and knees before I understood what he probably intended. I froze mid-crawl, two thoughts registering in my head. First, the hungry look in his eyes while he watched me made me feel like the sexiest woman on the planet. And second, he was going to spank me.\n\nI was comfortable in my own skin despite some physical imperfections\u2014every woman has ways they wish they were different or better, even the skinny ones. I kept myself toned at the gym, a convenience and a perk of working there. I imagined him seeing the curves of my naked, fit body posed as though stalking prey, my messy, red locks hanging like opened curtains presenting my breasts, which were just about a good handful, nothing more. I did not miss the way the tip of his tongue darted out and licked his upper lip, his lower lip briefly rolling into his mouth when his tongue retracted.\n\nMy breath caught at the second thought. He said he did not like to cause pain. I said I trusted him. Surely he would stop if I said he was hurting me? I could not deny that my curiosity was piqued, along with my arousal.\n\nAfter a couple of deep breaths, I was moving again. I refused to look at his cock when he helped me lay across his lap. I didn't need that distraction. But I became more nervous when it tapped my belly as I settled into the most comfortable position.\n\nI also noticed a slightly hard and cool sensation that I started to ask about, but his hand rested on my exposed ass, creating yet another distraction. He caressed lightly, his other hand on the middle of my back. A moan escaped before I could stop it.\n\n\"Say 'red' if you need me to stop, okay? It's called a safeword. It's for your security.\"\n\nI swallowed heavily. I could do this. I wanted to at least try. \"Yes.\"\n\nHis own moan met my ears at the same time as the words of the latest song on my laptop, which I'd forgotten was still playing. ZZ Top crooned \"Rough Boy\" while Chris Berry splayed his fingers out across my right butt cheek, massaging lightly.\n\nA slight shudder made me arch my hips, raising my ass toward his touch when he lifted his hand before he laid it down on my left cheek. Then there were more soft caresses. More nerves sparking to life before shooting directly toward my core.\n\nMy arms were folded on the bed, my forehead resting on them. My breasts pressed against the mattress, Chris's thighs firm and warm under me. I was lost in the moment...the rhythm of the song, the gentle touches from him.\n\nHis first smack made me cry out, although I knew it was coming eventually. It hadn't been hard, and it hadn't hurt. It was just...startling. I was prepared when the second one came on the opposite butt cheek. And I sighed when he brushed his hand across both points of contact.\n\n\"Doing okay, Holly?\"\n\nI nodded and moaned again when his hand slid a little lower. But I choked out another cry when his hand hit the new spot a little harder. This time, there was a tingle, like after you smack your arm to kill a mosquito. Despite my muscle mass, the skin there was tender.\n\nHad he been testing out the padding of my ass for the most vulnerable area? Another swat on my other cheek in the same low spot told me the answer was yes. And among all the emotions running through my head, I acknowledged that my pussy muscles were clenching. Spanking was actually turning me on? Who would have\u2014\n\n\"Oh!\" I squealed when his hand hit the middle of my ass hard, across both butt cheeks, making my whole body jerk. Without thinking, I reached back, grasping his wrist.\n\nHe smoothed his hand over the spot. \"Too much? If you want to stop, just say the safeword.\"\n\nI froze, his wrist still clutched in my fingers. Slowly, I released him. \"No. I just wasn't expecting it.\"\n\nBut after I'd reached back again on the next two swats, I heard him sigh.\n\n\"Holly\u2014\"\n\n\"No, I-I want to do this.\" Tears brimmed my eyes. My mind was bombarded with emotions. Confusion, because I didn't expect to be turned on. Desire for what lay on the other side of what he was doing to me. Frustration that I couldn't just let go and let him be in control. And strangely, there was the fear that I would disappoint him. But it was just basic instinct to stop someone from hitting you. \"I'm sorry, Chris. I don't... I'm not... I want...\"\n\nHe returned to smoothing his hand over the areas where I could feel my skin had heated up. Then he paused. \"We can stop. Or... What if I bound your hands? Would you consent to that? It might help.\"\n\nMy breathing grew shallower while I considered his suggestion.\n\nHe must have sensed my uneasiness because he added, \"You can still tell me to stop at any time.\"\n\n\"O-okay. Y-yes.\"\n\nI felt his body move and looked back to see him leaning away from me. He sat up, removing his belt from the last loopholes on his jeans that were laying at the foot of the bed. I concentrated on breathing steadily when he reached over me and laced the leather strap around my wrists before threading the buckle end of the belt through the slats on my headboard and fastening it tightly around one slat.\n\n\"Don't pull too hard. It's not the item I would use, but I don't have an ideal binding at the moment.\"\n\nI snapped my head around to stare at him.\n\n\"You'll be fine. Just remember, say 'red' if you want to stop.\"\n\nI blinked at him.\n\n\"Breathe, Holly. In and out slowly. Again. Good. Keep doing that.\"\n\nMy next breath was shaky. I could see the desire flickering in his eyes like a flame. I would hang on for as long as possible. For him.\n\n\"I want you to sing 'Santa Claus is Coming to Town.' Okay?\"\n\nMy smile was wary. \"Seriously?\"\n\n\"Yeah. It'll be fun.\"\n\n\"For you or for me?\"\n\nChris just chuckled.\n\nI turned to stare at my hands. At the way he'd bound them. A flutter of excitement passed through me at the thought of being at his mercy. Then I remembered his words...that he said he wanted me to get pleasure from this. That in order to do so, I needed to relinquish control to him. I'd said I trusted him. It was the moment of truth.\n\n\"I promise to be gentle.\" With each word, his hand stroked across my ass. Then he snickered. \"Unless you mess up.\"\n\nWas he serious?\n\nI closed my eyes, concentrating on the music in the background. His right hand moved over my nether region, and his other hand held my back, his fingers slightly curling onto my side, probably so I didn't roll off his lap. My breathing evened out. I clenched then released my hands. The belt wasn't tight, but the presence of something on my wrists\u2014restricting movement\u2014made my pussy throb. Interesting...\n\nYou can do this, girl. It's a simple song. Just stay focused.\n\nWith a deep breath, I started. \"You better watch out, you better not cry. Better not pout. I'm telling you why. Santa Claus is coming to town.\"\n\n\"You're doing such a good job, Holly.\" His fingers played at the cleft between my cheeks, pressing slightly before returning to stroking back and forth. When they went lower and grazed over my pussy lips, making me pant, he moaned. \"Mmm. You're wet, honey. Good girl.\"\n\nYeah, tell me about it.\n\n\"Keep singing.\"\n\n\"H-he's making a list. A-and checking it twice.\" I closed my eyes and swallowed heavily.\n\nI guess my pause was too long because the force of his hand was a little heavier when he patted my butt again.\n\n\"Uh...He's going to find out who's naughty or nice. Santa Claus is coming to town.\"\n\nDamnit! What was the next line?\n\nMy mind just would not focus with competing music playing...with his lighter pats again on various places of my ass. I whimpered when he removed his hand completely. And when it came down hard a moment later, I cried out, my arms jerking on the belt.\n\n\"You...no, he...um...\"\n\n\"Nope. Try again.\"\n\n\"I-I am!\"\n\nAfter a second smack, the heat intensified on my backside.\n\n\"H-he...\" Shit! Come on. Oh, wait! Yes! \"He sees you when you're sleeping.\"\n\n\"Very good.\" His hand smoothed over the spot that tingled, which made it throb.\n\n\"He knows when you're awake. He knows if you've been bad or good, so be good for goodness sake.\"\n\nHis hand slipped down again between my legs, and I rocked against his legs with a mewl.\n\n\"Oh, you better watch out. You better not cry.\" I was licking my lips between every couple of words at that point. \"You better not pout. I'm telling you why. Santa Claus is coming to town.\"\n\nI let out a deep breath. Good God. I'd done it.\n\nI waited for him to release my hands and let me up. But he kept stroking and patting, although I noticed the force was a little heavier throughout now.\n\n\"C-Chris?\"\n\n\"Hmm?\"\n\n\"I-I sang the song.\"\n\n\"Mm hmm. Yes, you did, Holly.\"\n\n\"Uh...so...\"\n\n\"Oh, do you want me to stop?\"\n\nI gulped. Did I?\n\n\"You know what to say if you want me to stop before I'm ready.\"\n\nI licked my lips. This wasn't so bad. I wasn't uncomfortable.\n\nChris continued the smacks, alternating cheeks, the area of contact, and the amount of force he used. Surprisingly, the more he spanked me, the more my body relaxed. And the more aroused I became. Especially when his cock pressed harder against me from below. My nipples became tender, rubbing against the bed whenever my body jerked from the blows.\n\nBut the longer we went, the more I was tempted to use the safeword. I almost did. Twice. My ass was stinging, but I pressed past the slight pain, focusing on the growing, pulsing sensations in my pussy that warned of an imminent orgasm.\n\nI wondered if he could actually make me come this way, too. Suddenly, he spread his knees, his arm across my back tightening. My own legs fell open. I was about to ask him what was going on when the palm of his hand landed flat across my pussy lips. I screamed, jerking harder on my restraints.\n\n\"Holly?\"\n\n\"No! No! Don't stop!\"\n\nIt was right there. I licked my lips while I panted desperately.\n\nHe didn't seem to need any more encouragement. His hand hit the same spot again, eliciting another sharp cry. Another swat. But this time, I whimpered. Why was it being so elusive?\n\n\"Harder!\" Then I gasped, realizing I'd said the thought aloud. Before I could retract it, Chris landed a whopper directly over my pussy.\n\nI cried out louder, the tears in my eyes spilling down over my hot cheeks when he hit again. I was still certain I was going to be disappointed when he did a succession of rapid smacks on each ass cheek then my pussy again. On his third round, my entire body went taut before a wail was ripped from my lungs. Then I was thrashing like a fish flung out of the water and onto the beach.\n\n###\n\n\"Shh, shh,\" Chris whispered in my ear, his hands releasing the belt binding my wrists.\n\nI moaned at the feeling of my ass touching the bed and adjusted to lay on my left side. Tender didn't even begin to describe what I felt back there. I imagined I wouldn't be able to sit for at least a day. The thought made me choke back a sob.\n\n\"I've got you, Holly.\" He sat down next me, his left hip in the curve of my bent legs.\n\nA tremor rippled through me when he stroked my hip then moved up to massage my breast. His other hand caressed my cheek.\n\nHe kissed my forehead. \"That was amazing. Thank you. My hand stings like hell, but it was worth it. I had not expected that reaction from you. You were absolutely wonderful. It's a great start.\"\n\nI wanted to ask him to elaborate, but the thought died on my lips when his hand left my breast and his fingers slid between my legs...up into me. My jaw dropped, my breath catching somewhere in my throat. I gripped his shoulder, my body twisting at the waist so I could spread my legs open, my ass be damned.\n\n\"Mmm. Very nice. Do you like to touch yourself, Holly?\"\n\nMy answer was more of a gurgle because his fingers had found and were rubbing my G-spot.\n\n\"Do you come hard? Do you think of someone touching you like this?\" His thumb lightly strummed my clit. \"Or do you prefer it a little rougher?\"\n\nI clenched my eyes shut\u2014dug my nails into his skin\u2014when he thrust faster, the heel of his hand slamming into my pubic bone. He'd latched onto that impulsive admission in my sleep and uncovered a part of me I hadn't even realized existed. With other guys, I had always cringed at dirty talk during sex. But rough sex? Bondage? Spanking? I'd never experienced any of that. Apparently, I did have some naughty tendencies.\n\nChris kept talking...asking me questions\u2014his own version of the list. His deep voice was erotic, hypnotizing. In the distance, I heard the constant base of an obscure song, my heart beating in time with the rhythm. Soon, my hips joined in, undulating to the beat.\n\nWhen his hand changed speed or position, I whimpered, unsure if I wanted him to stop and go back or continue forward. The crest would swell within me, then I'd dip\u2014sometimes farther than others\u2014before being lifted again. Up and down. Rise and fall. Over and over again, like a rollercoaster. I rode the waves in a mixture of content and frustration until I lost all sense of myself, releasing my death grip on his shoulders, my hands flopping to the bed.\n\n\"There you go, Holly,\" his voice registered in my head. \"So beautiful.\"\n\nAnd just like that, bliss spread throughout my body. I had the vague knowledge that I was arching my back...rolling my head...crying out. That his ministrations became more centered, prolonging my sensation of floating. Through it all, his voice coaxed me to surrender completely to him. He told me he wanted to give me a Christmas gift like I'd never received before. I just had to say the word.\n\n\"Yes, please,\" I heard myself mumble between moans of ecstasy.\n\nSlowly, gently, he eased his hand away, drawing raspy whimpers from my lungs. Then he was lying on top of me, one hand caressing my face so that I turned my cheek to press against his warm palm. His lips grazed my forehead, eyes, and nose before settling on my lips. It was light at first, but then his tongue joined in, making love to my mouth.\n\nOne hand twined in my hair, preventing me from turning away. His other moved between our bodies. There was a brief, cool awareness and some pressure before I was being filled in the most incredible way. Stretching me little-by-little as he rocked back and forth.\n\nHis moans filled my head. I pulled up my knees and spread my legs wider. I was wondering how long he was when something else hard and cool rubbed against my entrance\u2014three times in succession, in fact, with a brief absence in between. It was something bumpy, reminding me of when I used to use the handle of a toothbrush to masturbate before I'd discovered vibrators, the ridges creating friction against my sensitive ring. That was nothing compared to this. And just when I thought it couldn't get any better, something pressed against my G-spot. The combination sent delicious waves of pleasure rippling through my abdomen, my arms grappling at his but failing to get a grip.\n\n\"Oh, fuck!\"\n\nChris chuckled then groaned into my mouth. His cock slid all the way out then back in again several times, multiplying the sensations. Each time, his thrusts were slow and deep. And each time, my resulting sounds grew louder.\n\nI swallowed, trying to find my voice. A sudden orgasm made me cry out and thrash beneath him.\n\nHoly shit! He was fucking right, again. Best. Christmas. Present. Ever!\n\nWhen I started to settle down and my brain was no longer hazy, I felt his mouth on my breast, his tongue swirling around my nipple.\n\nI blinked down at the top of his head. An aftershock made my body tremble. It was then that I registered his cock throbbing inside me. Still moving in and out in gentle but deliberate motions. Reigniting the fire that had started to die down.\n\nHe looked up at me suddenly, the heat in his eyes sending a shudder straight to my core. \"Can you come again, Holly?\"\n\nMy head started to shake in the negative. But my whole body arched\u2014a scream catching in my throat\u2014when his fingers played over my clit. All while he continued stroking within me.\n\nI lost track of how long that one lasted. One moment, I was staring at the ceiling, the weight of his body pressing down on my lower body. The next, I was curled into his warm embrace with a sense of emptiness inside. Then my hand was wrapped around his cock, his hand over mine. I heard his grunts. Knew that he was stroking himself off with my aid.\n\nThe strange rigidness of the underside of his cock pressed into my palm. I wanted to ask him what caused it, but the sudden warmth spreading over my hip distracted me. Then he was holding me tighter, pressing his lips to mine. Rolling me onto my back and covering my body with his, his spent cock resting between my legs.\n\nWhen we'd both recovered, I managed to form some words, although less eloquently than I'd planned. \"What the hell was that?\"\n\nChris chuckled. \"You submitting all control to me. Letting me give you ultimate pleasure.\"\n\nMy throat was slightly sore when I swallowed. \"No...your fucking cock.\"\n\nHe moaned and rolled off to lay beside me. Taking my hand in his again, he placed mine on his cock. \"Open your eyes, Holly.\"\n\nI blinked slowly then looked down to see the light glinting off metal in several places between our hands. The second to last question on the list suddenly popped into my head. My eyes grew wide when I glanced up at him. \"Oh, my God! Doesn't that hurt?\"",
        "\"No, not anymore. Did you like it?\" He stroked his fingers over the back of my hand, which was still loosely wrapped around him, the metal warm now...from having been inside of me.\n\nI nodded almost imperceptibly. My mind was now focused on all those sensations he'd caused in my pussy, and I absently squeezed him gently.\n\n\"The one on top is called a reverse Prince Albert piercing. It's designed to rub against the G-spot.\" He lifted my index finger and drew my hand up so he could press the pad of my finger against the metal ring with a centered ball on top of the crown of his cock. Then he lifted his still impressive member up against his stomach. \"This is a Jacob's Ladder.\"\n\nMy finger pressed on one of the six little metal balls spaced out in a line on the underside of his cock, three on each side. Felt the bar between each set buried just under the surface of his skin. I gulped. Licked my lips. That is what had caused the bumpy feeling each time he'd stroked in and out of me.\n\nIt all looked both scary and beautiful at the same time. I stared in awe until he tilted my chin up and kissed me. Then I was purring again while his fingers alternated between stroking my hip and breasts. I still held his cock in my palm, my own fingers playing lightly, drawing erotic sounds from him as well.\n\n\"We should get some sleep,\" he said eventually, tucking me into the curve of his arm so that my head rested against his chest.\n\nI started to object but yawned.\n\nTo the steady sound of his heart beating and U2's \"Ultraviolet\" playing on my laptop, I drifted off in Chris's warm embrace.\n\n###\n\nSomething made me shiver. Repeatedly. I groaned and forced my eyes open.\n\nThe room was completely dark with the exception of a dull, blue glow around the edges of the blinds on the window. It was also silent, save for the howling wind outside.\n\nI glanced at my laptop and saw the lid was closed. The last thing I'd remembered was music playing. Had I gotten up to shut it off?\n\nAnother shiver had me looking to my left. The covers had been moved back, and my foot and lower leg were poking out. The spot next to me was empty. Maybe Chris had gotten up to go to the bathroom. But after a couple of minutes with the blanket tucked back around me and no sign of him\u2014not even a sound\u2014I pried myself out of my cocoon. I cursed at the cold room while scrambling to find some socks, sweatpants, and my hooded-sweatshirt from the gym, my nipples puckering painfully.\n\nA quick look behind the blinds showed only white. Lots and lots of it. There were a couple of lumps that I assumed were buried cars down where the road was supposed to be. Great. Snowed in.\n\nCursing some more, I went into the hall and turned up the thermostat. It wasn't until I was standing in the middle of my dark living room that I realized I had tears in my eyes. I didn't need to call out his name to know that Chris was gone.\n\nHe was just like the other guys after all. Sweet talking, appearing to care. And then love 'em and leave 'em. He had just taken a little longer to get me into bed. But in the end, he was no different than the rest.\n\nThank God, Jolie and Dirk weren't here to witness this. That was the last thing I needed. Not that she'd rub it in. Dirk wouldn't say anything, either. But he'd know all the same that Holly McGregor had let down her guard again and been used for sex once more.\n\nI wanted to scream. Throw something. Break something. But I didn't have the energy.\n\nI wandered back to my room, closed the door, and crawled beneath the covers, full-clothed. To the sound of my tears and the millions of thoughts racing around in my head\u2014mostly that I was the biggest fool, and I wouldn't even be able to spend Christmas with my parents\u2014I managed to fall asleep again.\n\n###\n\nMy stomach growled. Shit. I hadn't eaten in almost twenty-four hours. My brain and my body were deprived. That's why I was smelling turkey. But could you hallucinate smells?\n\nThe longer I laid there in bed, the more I rationalized that I was not imagining that most glorious scent. Or the soft sounds of Christmas music...people talking.\n\nWhat the hell? Jolie and Dirk were back early? Couldn't I even wallow in self-pity for a full day without them around to remind me that I was single and stupid?\n\nNot wanting to scare them, I wrangled my locks into a messy ponytail then disrobed to put on panties and a bra before redressing in jeans and a warm sweater. I even spritzed on my perfume...mostly to mask the smell of sex that seemed to linger in the room. On me. Great. Another fucking reminder.\n\nI took a deep breath and walked out into the lions' den with a smile pasted on my face to go along with the fa\u00e7ade. Only to freeze at the end of the hallway, my jaw hanging open.\n\n\"Merry Christmas, Holly!\" My mother hurried over to hug me. \"Did you get some good rest?\"\n\nI nodded, although my eyes were focused on the sight behind her. At Chris, standing in my open kitchen with an apron tied around his waist, spoon in hand and a pot of\u2014what I assumed was mashed potatoes\u2014on the stove.\n\n\"I called the hospital first thing,\" she said. \"I had the nurse put the phone to your father's ear so I could talk to him for a few minutes. He said he loves us both and wanted to wish us a Merry Christmas. He's been resting comfortably. No better or worse. If the weather clears up later, we'll go visit him.\"\n\nI tore my eyes away from Chris for a moment and noticed the Christmas tree lights were on. That the candles arranged in boughs of holly on the mantel of the electric fireplace were lit. Even the fake logs crackled away below, adding to the ambiance.\n\nMy mom let me go and excused herself to use the restroom.\n\nChris moved the potatoes off the heat then took my mom's place. Before I could say anything, he kissed me soundly, his hands stroking my lower back through my sweater. His voice was gravelly when he released my lips and glanced up. \"Mistletoe.\"\n\n\"I-I don't understand.\" I blinked at him. \"I-I thought you left.\"\n\n\"Only for a little bit.\" He stroked the back of his fingers along my jaw. \"I wanted to make your Christmas as happy as possible. I couldn't bring your father here, but I hope your mother is enough.\"\n\nMy mouth was moving, but no sound was coming out. My eyes were glassy with the threat of new tears. I was so touched by all that Chris had done for me. For my family. I tried to swallow the lump that had formed in my throat and pointed outside. My voice worked this time. \"But the blizzard.\"\n\n\"Yeah, that was a wrinkle in my plan. But I've got a buddy who owns a large truck with a snowplow. He was more than happy to help me out.\"\n\n\"How long have you\u2014\"\n\n\"Two days ago.\" He tightened his arms around me. \"When you were sleeping at the hospital. Your mom and I were talking about Christmas. What to do with the food she had already bought. So we formed a plan to surprise you. The hardest part was making sure the turkey would be thawed. Well, that, and keeping you from knowing. We hadn't factored in the weather, though.\"\n\n\"I don't know what to say.\"\n\n\"Just being here with you is thank you enough,\" he said, kissing me softly.\n\nI sighed and lay my head on his shoulder. \"Thank you, Chris. For everything. Oh, and Merry Christmas.\"\n\n\"Don't let this one go, Holly,\" my mom said in my ear as she scooted past us on the way back to the kitchen. \"I like him.\"\n\n\"Yeah, me, too, Mom,\" I whispered back. \"Me, too.\"\n\n\"I know it's been a long time since you've believed,\" she said, fiddling around in the kitchen again, \"but Santa always knows who's naughty or nice, just like in the song.\"\n\nMy face heated up as though I was standing directly in front of that fireplace. I clamped my lips shut to cut off a squeal when Chris gently squeezed my ass, making it clear that he was thinking about last night, too.\n\n\"Oh yes, Mrs. McGregor. Santa knows Holly has definitely been on his nice list this year.\" He gave me a lascivious grin with a waggling of his eyebrows and a lick of his lips before he nuzzled my neck and whispered, \"But she's on my naughty list.\"\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "bdsm romance",
        "bondage",
        "spanking",
        "piercings",
        "snow",
        "winter",
        "christmas",
        "romance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-naughty-list-1"
}