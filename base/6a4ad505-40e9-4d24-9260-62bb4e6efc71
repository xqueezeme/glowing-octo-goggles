{
    "title": "Two of a Kind Ch. 07",
    "pages": [
        "\"I think working in the library is my favorite,\" Bashta said. \n\nHe had wandered into the building one day while exploring the town on his own where he promptly found Raselie. Bashta admired her a lot; they worked together to help the sick kitlings side by side during the worst of the wait for the anti-serum. When she found out Bashta was interested in the books she started teaching him to read and was amazed at how fast he learned, devouring each lesson and learning more than she would have thought possible in just a week.\n\nIt helped distract him from the stress and worry of not knowing what was happening to his clan's lands. Every night he had nightmares, his dead crying out for vengeance. His claws had punctured more than one pillow. He was just thankful that he hadn't hurt Cavel. The wonder of the books and computers in the library were one of the few things keeping him sane.\n\nHe was only helping her with small chores and in the children's area but the kitlings all loved doing crafts with Bashta. He showed them how to weave grasses into mats and small baskets and the older children got lessons in carving. Some of the older younglings sat with him as they all worked on their reading skills. The best part of all to him was reading the baby books to the infants during their story time. Their chubby cheeks and bright eyes and happy giggles encouraged him to pick very happy books just to hear them again.\n\n\"I think that's what I want to do.\" Bashta turned his head from where it rested on his folded arms under his chin. His legs moved restlessly and pushed the sheet down even farther, exposing his ass.\n\nCavel was idly tracing designs on the bare skin of Bashta's back. They were lying in the bed, the glass doors wide open to let in a breeze to dry the sweat on their skin. He trailed his fingers down to the small of Bashta's back and chuckled a little when Bashta shivered.\n\n\"That tickles,\" Bashta complained as he turned over. His mate had been doing everything he could to distract him as well but they were both on edge most of the time. Not right then though.\n\nCavel rested his head on his hand and looked down at Bashta. \n\n\"You're so hot.\" He leaned down and kissed Bashta then rubbed their cheeks together. Bashta ran his fingers over the line of spots along Cavel's neck. Cavel yawned.\n\n\"You're not so bad yourself,\" Bashta joked, \"for an old guy.\"\n\n\"An old guy? An old guy!\" Cavel looked outraged. Bashta started laughing when Cavel started poking him in the stomach. \"Who are you calling old?\" He slid a muscular thigh over Bashta's legs when he tried to squirm away, locking him in place. His mate was still built solid, his bulk more than enough to keep Bashta in place.\n\nBashta shivered as he thought of how it had felt when Cavel had rested all his weight on his back, pressing Bashta into the bed as he took him. He felt his dick stir and decided to take matters into his own hands, turn the tables a little on his dominant mate.\n\n\"First you complained about dinner being too late when you get home and now you're yawning and the sun hasn't even gone down yet!\" Bashta wrestled for control and Cavel let him push him over and slide on top of him. Bashta slid his hands down Cavel's arms and pinned his wrists to the bed.\n\n\"If I remember right dinner was late because you wanted to take a shower with me and I'm tired because you woke me up early this morning.\"\n\n\"I didn't hear you complaining when you woke up and lifted the covers up to watch.\" Bashta looked down at Cavel and grinned.\n\n\"Hell no! I'm not now either,\" he gasped a little when Bashta wiggled, \"Oh that's just mean.\"\n\n\"Hmm, are you sure you're up for it?\" Bashta asked as he sat up, letting go of Cavel's wrists.\n\nCavel's hands instantly came up to Bashta's thighs and he lifted his hips, grinding against him, thrusting up hard enough to make Bashta gasp. \"Oh, I'm sure.\"\n\n\"Not too tired?\" Bashta leaned down and kissed Cavel, thrusting his tongue into his mouth and back out in one quick swipe. Cavel's hands tightened on his thighs.\n\n\"Hmmm... I'm never too tired when I'm touching you but... Cavel rolled them over and was leaning down to kiss Bashta when the phone rang. \n\n\"Damn it!\" he cursed, glaring at the phone on the bed table. \"How about we just ignore that?\" He leaned down and started licking and sucking on Bashta's chest. Pleasure surged through Bashta, feelings he still wasn't used to making him whimper as his erection throbbed.\n\n\"Shouldn't,\" Bashta gasped out. He was surprised he could even think enough to protest.\n\nThe phone stopped ringing.\n\n\"There, see?\" Cavel said against his chest, \"Now we can--\"\n\nThis time Cavel's cell phone started ringing.\n\n\"Arrrgh.\" Cavel glared at it and then reluctantly climbed off the bed and strode over to his cell phone on the dresser. He picked up the offending object and hit the talk button without looking at the caller id.\n\n\"Hello,\" he snapped.\n\n\"Cavel?\"\n\nCavel instantly straightened up as his eyes opened wide. \"Velaku. Sorry. I, ah, I didn't expect to you to call this time of day.\"\n\nVelaku chuckled a little. \"Your mate keeping you busy?\"\n\nCavel blushed and Bashta laughed quietly from the bed. He wasn't used to seeing his mate so easily embarrassed. Cavel glared at him while he answered Velaku. \"A little.\"\n\n\"Your clan?\"\n\n\"Much better. Everyone has been treated with the anti-serum. Dr. Waddel has several copies of his notes about the sickness and the antiserum in case something like this happens again. We're hoping that you can catch those involved so it won't; but we're prepared just in case.\"\n\n\"Good, good. I'm glad to hear things are going better and your kitlings are all better. That's something I need to talk to you about though.\"\n\n\"Do you have news for us?\" Bashta pushed up on the bed to lean against the headboard and pulled his knees up to his chest. He was more than capable of hearing Velaku through the phone. Cavel moved over to sit on the side of the bed and put a hand on one of his knees. His stomach churned during the pregnant pause.\n\n\"I do. Davis came through and he found out who has been desecrating your mate's village. They were smugglers, looking for artifacts and treasure. It looks like this isn't the only place they've been hunting either.\"\n\nBashta closed his eyes, his head coming down to rest on Cavel's hand.\n\nCavel snarled and his voice was distorted. \"Have they been caught?\"\n\n\"No. They pulled out of the area and when he tracked them back here to the States he was forced to let them go when he found them to take care of something more important.\"\n\nBashta was staring at the wall with tears running down his cheeks silently. Cavel rubbed his knee as he tried to control his temper in vain.\n\n\"What in the hell could possibly be more important than this?\" he snapped. \"My clan came close to dying. Others might not be so fortunate. That god damned Snake--\"\n\nVelaku interrupted him with a cool voice, \"He found a captive female with an infant kitling. Black jaguars.\"\n\nCavel was speechless. Bashta was staring at him and the phone with wide eyes, his mouth hanging open. He'd been expecting a big battle, some sort of confrontation with the bad guys that they could use to assuage their pain and anger over the danger their clan had been in. Bashta needed some closure over the desecration of his village; it went beyond the pain at being the last of his clan. \n\nHe felt cheated but... \n\n\"Are they okay?\" he asked quickly. Velaku heard him through the speaker.\n\n\"The kitling is. The female was feral. She died attacking the man who was holding them captive when Davis managed to set them free.\"\n\n\"Who was she?\" Bashta whispered. He felt so bad for the kitling. He'd lost his own mother the same way and he still wasn't over the loss. How would the young jaguar cope with the loss of both their parents? When Velaku didn't hear him Cavel repeated the question.\n\n\"From what we could figure out, the mate of your mate's older brother.\"\n\nBashta was thunderstruck. He slumped back against the pillows in shock. He shook his head when Cavel looked at him. \"I don't know,\" he mouthed. His mouth was dry and he swallowed convulsively. \n\n\"Are you sure?\" Cavel asked, his hand reaching for Bashta. Their fingers tangled together and Bashta held tight, the pressure making his knuckles go white.\n\n\"I can't be certain. Davis did find security tapes with footage of the other men involved in the smuggling. There are some images of a black jaguar. I can email them to you.\"\n\nBashta just nodded when Cavel looked at him. He had to know.\n\n\"We'll call you back.\"\n\nCavel went to get his laptop from downstairs while Bashta pulled on a pair of shorts. He waited anxiously while the computer booted up; he still wasn't ready to use the sleek black machine. Cavel pulled on a pair of sweats and then brought up the internet and his email. The email was already waiting and he took a deep breath and then clicked on it.\n\nThere were two attachments.\n\n\"You ready for this?\" Cavel asked Bashta. Bashta nodded but laced their hands together again. He needed Cavel's strength and his mate gave it to him, sending him a wave of love through their bond. \n\n\"Okay.\"\n\nCavel clicked on the files and opened them. The first one was a profile image; the black spots and jet black hair of an adult bonded black jaguar was easily recognizable. The man was tall but whipcord thin. It was the full facial shot in the second attachment that caught his attention.\n\n\"He looks just like me!\" Bashta whispered in shock.\n\nCavel looked between him and the computer screen, comparing the man in the picture and the face of his mate who stared at it with a surprised look. Bashta reached out with one trembling finger and traced the curves and lines of the features that were so familiar looking. He saw them every day in the mirror.\n\n\"I think the Snake was right. This man has to be related to you, Bashta.\" Cavel wrapped an arm around Bashta. \"Do you know who he is?\"\n\nBashta shook his head. \"I never knew my parents had any kitlings before my litter.\"\n\n\"Could they have and not said anything? Could he have gone missing?\"\n\nBashta had tears in his eyes and his lips trembled. \"I just don't know. But... a brother. I had a brother alive and I never knew.\"\n\nHe turned to Cavel in distress. \"How could I have not known? Why didn't my mother tell me? I was so alone!\" \n\nHe began to sob, collapsing against the warm skin of Cavel's bare chest. Deep ragged cries shook his slim frame as he shed tears for the family he lost that he never knew he had. Time passed while Cavel gently held him and let him release the pain that tore at him until his shaking and the loud sobs began to quiet. \n\nBashta could feel the love and reassurance through their mate bond but it took a long time for it to really sink in and make him remember that he wasn't so alone anymore.\n\nBashta finally turned his head at Cavel's gentle urging. He pushed the hair off his mate's face and kissed his forehead. \"You'll never be alone again,\" Cavel reminded him.\n\n\"There is just so much I don't understand. It's so hard.\"\n\n\"I know, babe, but life isn't easy. You know that. You're a survivor. You lived when a lot of others would have given up and died. You stayed true to your family and your duty. You were brave enough to mate me and come here to save my clan; to start a new life with me in a world not your own.\n\n\"I can never say how grateful I am to you for all of that, how lucky I am to have such a brave mate. All I can do is promise that I will never leave you. I love you Bashta.\" Cavel opened completely to their bond and the pure shining devotion he sent made fresh tears come to Bashta's eyes.\n\n\"I'm the lucky one. Lucky to have met you and been captured by your men.\" Bashta sat up in Cavel's arms and wrapped his arms around Cavel's neck. \"I knew you were special the moment I caught your scent in the jungle; you smelled like home and comfort and safety. It made me so angry that you smelled that good and made me want what I thought I couldn't have.\"\n\n\"All those things you wanted, a home, a family, love... they're yours. They have been since you dropped to the ground and glared at me like I was your worst enemy. I knew we were mates but I didn't know that I could love you so much.\" Cavel couldn't seem to help it; he leaned into Bashta and kissed him.\n\nTheir lips moved together, Cavel capturing Bashta's bottom lip and sucking on it gently, teasing him. Bashta moaned and his mouth parted. Cavel quickly slipped his tongue in the small gap to taste his mate, a warm sensual swipe with his tongue along the raspy top of Bashta's mouth and back over and over. Cavel continued to ravage Bashta's mouth until he had to pull back to gasp in a breath of air. \n\nThey held each other, leaning their foreheads together and staring into each other's eyes. Bashta felt closer to Cavel than he ever had before. The shorts and sweats they had put on came off quickly and Cavel slipped inside him. \n\nThey rocked together, their pace slow and steady. Bashta held tight to Cavel, needing the intimacy of his mate being buried inside him. His hands caressed Cavel's back as he urged his mate to rest more of his weight on him. He wanted to be blanketed by his body, comfort and pleasure all mixing together.\n\nCavel kept moving slowly and carefully until neither of them could take it anymore. His hips began thrusting harder but he didn't move any faster, keeping the same slow rhythm that slid the head of his dick past Bashta's prostate in a long glide. \n\nCavel's roar as his climax claimed him was so primal. Bashta gasped and went rigid, his balls tight as he arched and shot between them. It was almost a full minute before they were able to relax. Cavel lay down next to him, pulling him into the circle of his arms.\n\n\"I never thought I would act like such a lovesick fool,\" Cavel whispered, \"but you are more important to me than anyone else in the world.\"\n\nBashta pressed their lips together in a slow tender caress; the sensual kiss made Cavel shudder and pull him in tighter. Bashta sighed.\n\n\"I like that you're a lovesick fool.\"\n\n***\n\nCavel held Bashta's hand on yet another flight. This time his mate wasn't medicated or focused on any sick kitlings so Cavel kept talking to him. He didn't want him to panic when they were in the air.\n\n\"What are we going to do about the baby?\" Bashta asked. His claws kept coming out as he flexed his hands over and over. Cavel was surprised he hadn't punctured the arms of the seat with his free hand.\n\n\"Bring her home of course.\"\n\nBashta caressed Cavel's hand, trying to ease the red marks he had left when the plane took off. Cavel pulled his hand up and kissed his knuckles.\n\n\"You would do that for me?\"\n\nCavel nodded simply, turning to face Bashta completely, capturing his mate's eyes. He had to make sure he knew exactly how he felt about the baby they were contemplating taking in. His mate deserved nothing less.\n\n\"Look, from all the evidence and, while not much, what we do have points almost conclusively to this unknown jaguar to being one of your siblings. That makes this baby your clan, your blood. You are a part of me and that makes her part of us and our clan.\"\n\nBashta reached for him and nestled his head into his neck. They snuggled for long moments, their bond as full as ever of their love for each as they went unvoiced but not unknown. \n\n\"Tell me about these guys we are going to meet. You said he's a bird Carthera?\"\n\n\"A Falcon actually. He's the leader of all the clans in this area. He was recently mated to a Lynx who was raised by a psychotic Jaguar who actually tried to kill them both.\"\n\nBashta blinked and shook his head. \"When I was growing up the clans where I lived did not mix. Each to their own kind only. We lived more simply though.\"\n\n\"There isn't as much room here as you had in the jungle. Humans haven't encroached on the land where your clan lived as much either. Here, there has always been the battle for balance between the humans and the clans. In the times before the peace treaties the clans stayed close to each other for protection, though we fought a lot, of course.\"\n\nThe plane began to shake and Bashta whimpered as he grabbed Cavel's hand in a grip tight enough to make him wince. Cavel let him hold as tight as he needed to and rumbled soothingly, pulling Bashta a bit closer to him and under his arm. The plane leveled out and Bashta let out the breath he was holding.\n\n\"Just a little bit of turbulence folks,\" the pilot's voice washed through the plane, \"and we might hit a bit more so please make sure your seat belts are fastened.\"\n\nBashta's free hand traced over the small bit of fabric, pulling it tighter. \"I can't believe they expect me to believe this is going to keep me safe,\" he muttered.\n\n\"It's okay, babe. Planes are even safer than cars.\"\n\nBashta shook his head. \"I don't think I'm ever going to get used to the speed everyone travels at here.\"\n\nCavel rubbed his arm. \"You'll get used to it, I promise. It is just going to take some time.\" He kissed Bashta softly on his temple. \"We have plenty of that.\"\n\nBashta sighed and relaxed his grip on Cavel's poor hand, the red marks back darker than ever. \"So the clans don't fight each other anymore?\"\n\nCavel shrugged a little but went with the topic change; he knew Bashta just needed the distraction even if the subject wasn't ideal. \n\n\"Not all out clan wars like used to happen in the past. There will always be dust ups and issues between certain types. Most Snakes are shunned if not killed as younglings; they are really different from other Carthera clans. The bird and cat clans have not always gotten along well together but since Velaku and Natham mated things have been more settled. The main difficulties come from the more canine clans which can be very dominance focused.\n\n\"My father had great respect for Velaku's father. The man held the clans together and did so without trying to control all of us. He listened and helped us form a unique group. Not all the territories are so peaceful or cooperative. Of course, someone killed him and tried to kill Velaku so not everyone is happy with how things are run.\"\n\nThe plane shook a bit and then dropped. Bashta's face went white and he clawed at his seat belt and Cavel, trying to get farther into his arms. Cavel snarled and glared at the pilot's cabin. He knew it wasn't the man's fault but damn, he wanted to beat him for making his mate upset.\n\n\"We'll be there soon.\"\n\nBashta held onto him and grimaced. \"My stomach hurts.\"\n\nCavel held up an arm and the stewardess sitting at the front of first class came over to them. \n\n\"Can I help you sir?\"\n\n\"Yes, can we get a bottle of ginger ale please? My mate isn't feeling so well.\"\n\n\"Of course sir. I think we still have some crackers.\" She looked at Bashta and smiled calmly. \"Would you care for some of those, sir?\"\n\nBashta grimaced. \n\n\"They're better than throwing up,\" Cavel said. Bashta hadn't liked them earlier, the dry texture of the crackers being too salty and unpleasant for him. He knew Bashta would be embarrassed if he got sick though.\n\nBashta sighed. \"Yes, thank you.\"\n\nArmed with the soothing drink and the dry crackers to settle his roiling stomach Bashta leaned against Cavel. He took small bites and sips. He closed his eyes.\n\n\"Better?\" Cavel asked.\n\n\"Yes.\"\n\n\"Why don't you take a short nap? We've about an hour until we land and we didn't really get any sleep last night.\"\n\nBashta yawned. \"I might be able to do that.\"\n\nCavel caressed him, swirling his fingers in a gentle petting that made Bashta rumble in contentment. His head leaned down and rested against Cavel's shoulder. His eyes slowly closed at Cavel stroked his head and ears, sending his body into a peaceful doze. Cavel closed his eyes after his mate's breathing became slow and regular. Sleep was slow in coming but it eventually overtook him and he settled against his mate.",
        "***\n\n\"It's nice to meet you Bashta.\" \n\nVelaku extended his hand.\n\nBashta kept glancing at the Falcon's snowy white wings with crimson tips. He carefully shook Velaku's hand, noticing the sharp talons on the small man's fingers. He wasn't as large as his mate but even he towered over the leader of the clans in the western territory. Bashta saw absolute assurance of himself in his eyes though, and lowered his gaze.\n\n\"Um, you too.\"\n\nThe small falcon moved on. \"Cavel. Always a pleasure.\"\n\n\"Likewise Velaku. Will we be meeting your mate? I have heard... interesting things about Natham. I've been looking forward to meeting him.\"\n\n\"Looks like you get your wish.\" A deep voice belonging to a large cat Carthera with long dark hair startled them when he entered the room. He walked over to Velaku and wrapped his arms around the small man. He kissed his neck before he turned to smile at Bashta and Cavel.\n\nVelaku patted the man's arm. \"Natham, this is Cavel and Bashta.\"\n\n\"Nice to meet you both.\"\n\nBashta stared at Natham. The man was golden all over except for his long, dark hair and eyes. He should have looked strange standing against the small pale Velaku but he didn't. They were mates and something about the two of them was just right. Bashta knew from their earlier talks that Cavel could see on the surface why some of the clans had issues with the pair but he wasn't one of them. \n\nHe would keep an open mind as well.\n\n\"You too. Thank you, for helping us with this. I know this has been an unsettled time for your clan.\"\n\nVelaku waved his hand dismissively. \"You know how worried we were about your clan and how sick they were. I wish we could have helped before this but finding those who were responsible was the right thing to do, for everyone.\"\n\nVelaku pulled away from his mate and moved to some chairs, gesturing for everyone to sit down.\n\n\"I'm sorry we weren't able to find them before your brother and his mate were harmed. We already gave our doctor the medicine you brought and the instructions from your Dr. Waddel for the kitling.\"\n\nBashta's ears twitched at the mention of the young jaguar he was supposed to be related to. \"Thank you. We weren't sure if she was sick but thought it best to be prepared and the doctor said that dosing her if she wasn't sick wouldn't hurt her.\"\n\n\"Is The Snake here?\" Cavel asked.\n\n\"No. Urgent business of his own came up and he's unable to be here for this meeting. There isn't much more he could say that we haven't already discussed over the phone. He did leave something for you though.\"\n\nVelaku picked up a book off his desk. It was black with a silver scroll work across the cover. He handed it over to Bashta.\n\n\"What is this?\"\n\nVelaku settled back in his chair. \"We don't really know. It was found in the same cell as the kitling and the mother.\"\n\nBashta closed his eyes. The fact that she lost her parents the same way as he did affected him almost more than the fact the kitling was his only blood kin in the world. He didn't want anyone to feel the pain and loneliness he had felt.\n\n\"The book has writing in it but nothing we could read. I was considering having a specialist look at it but I wanted to get Bashta's permission first.\" Velaku took a sip of the water his assistant had gotten for him.\n\nBashta's fingers lightly stroked the warm leather cover. He traced the silver leaves that decorated the front and he bit his lip before looking up at Cavel with wary eyes.\n\n\"Open it. If you can't read it we can always ask Velaku's specialist to research it.\"\n\nBashta knew he was right but the idea of touching something his brother, a brother he'd never known he had, was surreal. His hand trembled slightly as he gingerly flipped open the front cover. His sharp teeth worried at his bottom lip and he squinted at the page. He touched the page here and there, his mouth moving silently. All three of the other men in the room watched him. His finger began to tremble and he pulled it off the page. His eyes were flicking over the black script faster and faster.\n\n\"Can you read it?\" Natham asked in his rumbling voice. \"Bashta?\"\n\nBashta didn't appear to hear him. He flipped the page and his eyes widened as he gasped.\n\n\"Bashta!\" Cavel reached out and shook his shoulder a little.\n\nBashta jerked a little and then looked up, his eyes unfocused. He blinked a few times and then looked at Cavel. Tears began streaming down his face. \"I can read it.\"\n\n\"His name was Djavan. He was my brother. According to this he left the year my litter was born with his mate.\"\n\n\"You can really read that?\" Velaku asked this time.\n\n\"Yes. It's a language used in our clan. A mix of symbols and words like your English language.\" Bashta looked up. \"Why didn't I know about him? Where were his litter mates?\"\n\n\"If he was your parent's eldest then he wouldn't have had any,\" Natham said. \"Cat Carthera only have one kitling in the first litter, much like most human pregnancies.\"\n\n\"Why didn't you say tell me that?\" Bashta looked up at Cavel. \"I told you I had littermates. Why didn't you question why I didn't have an older brother?\"\n\n\"I didn't think about it, honestly. Any mention of your family was so painful for you; I didn't want to add to that.\" Cavel looked over at Bashta. \"I would never have guessed that you had a brother alive out in the world somewhere.\n\n\"What else does the book say? Does it have any information about what happened or the men involved?\"\n\nBashta looked back down at the page, tapping a mark here and there. \"This early stuff is just about my family. He argued with my father. He felt that the modern world was beginning to make itself felt in the jungle,\" Bashta paused and looked up, \"and he was right too. Over the years we saw more and more humans in our area of the jungle. We used to be able to travel for more than a week in any direction and not see the end of the rain forest. When we left it took just a few days. I saw more and more humans. \n\n\"He believed that we needed to learn to coexist with the humans to protect our sacred places. We couldn't hide forever. He doesn't say what finally made him leave but he took his mate and left after he was sure that my parents had another heir to lead the clan and be alpha. I can't believe that. They were so young, just my age when I was left after I was born.\"\n\n\"Can you skip to the end? See if he said anything about the smugglers or their operation?\"\n\nBashta flipped to the end of the book and began rifling back through the pages.\n\nThere was a knock at the door.\n\nNatham stood up to answer the door, turning back around with a large tray in his hands. \"I asked Velaku's mother have some brunch prepared for us. Airplane food is close enough to cardboard to be inedible and you must be hungry. We haven't eaten yet so I thought we could all breakfast together.\"\n\n\"That looks good, Natham. Thank you, my mate.\" Velaku cleared some space from his desk for Natham to put the tray down.\"Remind me to thank her later.\" \n\nNatham smiled back at him and nodded. \n\n\"Bashta, do you want to eat?\"\n\nBashta was reading intently and he barely looked up. \"Just save me something please.\"\n\nCavel, Velaku, and Natham made quiet conversation about their clans and at the variety of foods available as they ate. Natham and Cavel ate more of the breakfast meat while Velaku savored the succulent melon and berries available along with the whole grain toast.\n\nAbout a half hour later another knock at the door pulled Bashta from his intense reading. His nose twitched. \"Chocolate?\"\n\nCavel laughed. \"I see your nose is working just as well as ever.\" He looked at the other men in the room. \"He loves anything with chocolate in it.\" \n\nBashta blushed and shrugged. His nose was more sensitive than many of his new clan's; he was too used to relying on his senses to survive and paid more attention than they did. It wasn't always a good thing; many things in the modern world did not smell good but he loved chocolate. The flavor and the smell.\n\nThis time Velaku answered the door.\n\n\"I thought your guests could use something sweet, dear.\"\n\nCavel and Bashta both stood when Elalera moved into the room. The woman was small as all bird Carthera were but she held herself upright with the dignity of the wife and mother of the Falcon leader, both old and new and seemed taller for it. She passed Natham the tray with four cups of steaming hot chocolate. The rich smell filled the room and Bashta couldn't help but take a deep breath and sigh.\n\n\"Thank you, my lady.\" Cavel bowed over the hand Elalera held out to him and kissed it. She blushed and laughed a little.\n\n\"You are entirely too smooth for your own good,\" she said with a smile. \"It's a good thing you are mated.\"\n\n\"I think my mate likes you better than me right now anyway.\" They all laughed at Bashta who had already picked up his cup and was taking a cautious sip and then savored the rich chocolate and cinnamon flavor. An ecstatic look crossed his face and his eyes sprang open as he looked at Elalera.\n\n\"This is wonderful!\"\n\nShe reached up and patted his cheek. \"Thank you my dear. I make it from scratch. I'll make sure you get the recipe before you leave.\"\n\nHis beaming smile caught everyone by surprise as he grabbed Velaku's mother in a hug. \"Thank you!\"\n\nCavel chuckled. \"Like I said, he really likes his chocolate.\"\n\n\"Well I'll leave you gentlemen to your business. I think someone needs me right about now anyway.\" A cry from a young one could be heard faintly in the room with the door open. Bashta's breath hitched a little and he jerked, looking out at the hallway. Elalera squeezed his arm.\n\n\"I'm taking very good care of her.\"\n\nHe bit his lip and took a deep breath. It was hard but he restrained the urge to leave in search of the kitling that made that sound.\n\nThe men remained standing until Elalera left the room and then sat back down. Bashta drank his chocolate and ate some of the food Cavel saved for him as he told them about what he read. Filling his stomach eased a bit of the nervous nausea he was feeling. \n\n\"Basically they were looking for the Temple. The humans who were holding Djavan's family hostage wanted him to lead them there so they could steal the treasures in the offering rooms. Djavan's intentions were to lead them into the rainforest and then have our clan force them to release his pregnant mate.\n\n\"He... Well, his reaction to the village was horrible,\" Bashta refused to close his eyes, knowing he'd just see the last glimpse he had of the empty village, full of plague and death, \"and that's just what he wrote on paper. He tried to lead the humans away when he saw the signs but all they saw was a chance to loot. They forced him into the village. He had to watch as they pawed over the dead bodies of people he had known and stole anything they thought they could sell to collectors.\"\n\nBashta couldn't help but tense speaking of such a thing was even harder than reading it. He knew it had to have happened but it was just very immediate with the words being written and spoken. Cavel rubbed his shoulder and urged him to drink a bit more of his cocoa. Bashta knew Cavel hated it when he was upset but as much as it hurt to read his brother's journal it might have answers they needed. \n\nHe was the only one who could.\n\nWhen Bashta calmed down a little he went on.\n\n\"He didn't get sick right away but by the time they came back to the United States he was showing signs of the fever and coughing. They forced him to return to the jungle about two weeks after they returned, this time to find the Temple. He never got to see his mate or their newborn daughter. He wrote that he would have refused even if the humans had allowed; he knew what the plague markers around the village meant. He was going to die. He did bribe one guard to slip this book into his wife.\" \n\nBashta blushed a little. \"The last few pages were private messages for her.\"\n\n\"Was there anything about who was behind all of this?\"\n\n\"He only mentions humans. He was forced to submit to them when they grabbed his pregnant mate from a doctor's appointment while he was at work. He couldn't risk her life or that of their unborn kitling.\" Bashta looked sad as he stared at the door, remembering that faint wail earlier. \n\n\"Turns out he lost them both anyway.\"\n\nVelaku leaned forward and put his hand over the one clenched on Bashta's thigh next to him. \"Losing a parent is hard and losing both is tragic. I know how much pain you must carry with you. But your niece will have you; she will still have family, a clan. She will have parents and love.\"\n\n\"You're right. I just can't understand why people do this. Why do humans hate us so much?\"\n\nNatham spoke up. \"It's not just humans, there are good and bad Carthera just as there are people. Was there anything in your brother's book about who was in charge? David killed a few guards to get in to the building and your brother's mate killed the man outside her cell but they were all killed too fast to question.\"\n\n\"I just skimmed it really.\" \n\nBashta ran a hand through his hair as he tried to think. \n\n\"I do remember one thing that stood out. He said that he overheard a phone call one day when the humans left the small slot in his cell door open. He said the humans seemed very afraid and the voice over the phone sounded strange and he could hear animal sounds in the background but unlike anything he'd ever heard before.\"\n\nVelaku looked thoughtful. \"Your brother probably wasn't exposed to that many different clans as a loner. He might not have recognized the sound of the voice if he didn't know the type of animal the Carthera was.\"\n\nNatham nodded. \"Davis did say he thought that a Carthera had to be behind this. There were artifacts in that building that weren't just from the Jaguar clans. They are targeting holy places to the clans, places that no outsiders would know. Temples, ancient worship halls, hidden villages... no human would be trusted with that knowledge, much less from the four clans we found that had artifacts stolen from them. It has to be someone who is close to many clans in order to still be concealed from discovery.\"\n\nCavel raised an eyebrow. \"You think this went beyond what Bashta's brother knew?\"\n\nVelaku stood up and paced around the office a little. \"I do. I don't want to seem paranoid but I've wondered if we managed to catch all of the Carthera involved in plotting my father's murder. There have been other things happening to clans in my territory that don't seem significant when taken alone, but all together?\" he shook his head, \"I just have this feeling there is something we are missing.\"\n\n\"Or someone.\"\n\nNatham stood up and stopped Velaku in his pacing. \"That may be true but we can't see it right now. We have to wait until we have more evidence and a direction to investigate. We have done all we can right for the time being.\"\n\nCavel nodded his head. \"My clan has only prospered under your family's rule.\" \n\nHe stood and held his fist to his chest in salute to Velaku. \"You helped my clan and dealt with the Snake so that my people would be safe. You eliminated the danger to us from the artifacts from Bashta's village and you have cared for his niece in your own home. If you ever have need, call on me. Anything my clan or I can do to help will be done.\" \n\nBashta hurried to stand beside him and copy his stance. \"My mate speaks for both of us.\"\n\nVelaku saluted him back. \"Thank you, my friend.\"\n\nThere was a moment of silence. Very faintly a cry was heard through the closed door and Bashta's ear twitched.\n\nNatham smiled at Bashta. \"I would guess you'd like to see your niece now.\"\n\nBashta took a deep breath and nodded. \"I think I'm ready.\"\n\nVelaku led the pair deeper into the house to the personal living space areas.\n\n\"I'm sorry Natham couldn't join us, he was scheduled for another modified Jintue lesson with Dorvan. My best friend, Alseliol found his mate and bonded as well so they can take turns replacing me for the lesson. We've found the combination of our fighting styles, cat and falcon, is particularly lethal.\"\n\nCavel looked impressed.\n\n\"Bashta has been showing us his techniques for guerrilla style fighting when time allows. He's almost impossible to spot when he actually tries to blend in with the natural environment; it's eerie.\"\n\nVelaku looked at Bashta with a thoughtful expression. \"That may be useful. Perhaps we should consider pairing our fighters for some cross training. Now that my clan has seen just how much more effective Natham and I are we might be able to get the more conservative warriors on board. Then Bashta could teach our men at the same time.\"\n\nCavel looked over at Bashta, who shrugged. \"I'm willing to help however I can. If there is someone out there, some unknown Carthera plotting against the clans here, it would be good to be able to work together. The easiest way to defeat an enemy is to isolate him.\"\n\nVelaku nodded. \"Very true. I will make sure to bring that point up at the next council meeting.\" He paused outside a door and Bashta was suddenly extremely nervous. Cavel wrapped his arm around him.\n\n\"Ready?\"\n\nBashta took a deep breath and nodded.\n\nVelaku opened the door and the first thing Bashta saw was a small body on hands and knees on a soft rug. The baby was playing with a soft block and her long black hair hung in ringlets almost to the floor. When her chubby little face turned toward them Bashta fell against Cavel as his knees gave out.\n\n***\n\nCavel held up his mate as he stared in shock at the little baby sitting on a fuzzy rug on the floor.\n\nTears streamed down his face and he rubbed at his eyes to clear them. He didn't speak as he continue to stare, mesmerized by the little girl. Cavel rubbed his back and soothed him with a deep rumble in his chest. He began to get worried when it felt like Bashta wasn't breathing.\n\n\"Bashta?\"\n\nBashta didn't answer Cavel, barely blinking as he stared into space with a frown. Cavel could feel the same sadness that had permeated Bashta since they mated, but blanketing their bond was a profound sense of shock.\n\n\"Bashta, what is it?\" Cavel shook his shoulder a little and Bashta finally blinked and drew in a quick breath before letting it out in a small sob. He shuddered and then pulled away from Cavel to drop to his knees a few feet from the solemn baby. The two of them seemed to be ignoring everything and everyone around them.\n\nSuddenly the kitling crawled over to Bashta and began patting his arm as she babbled nonsense at him. Bashta held out his hand and she pulled herself up onto her feet while clutching the slender fingers with both of her chubby little hands. When he scooped her up and pulled her into his chest and began rocking her, she cooed and grabbed his shirt in a firm grip to snuggle in even closer. Velaku, Elalera, and Cavel just watched the intimate scene that was so clearly a reunion of two family members, even if they had never met before.\n\nElalera moved slowly to avoid disturbing Bashta who was singing under his breath in a strange language to his niece. He dropped kisses on her head and spoke to her in broken whispers. The baby's eyes closed and her small body went limp.\n\nWordlessly, Elalera urged Cavel forward as she and Velaku stepped back and moved away to give them some space.\n\nCavel took a step toward his mate and the beautiful baby he had snuggled in his arms. He sat down behind Bashta and gathered his mate into his embrace. He slid his hands down Bashta's arms and together they held the baby that already meant so much to both of them.\n\nFor a moment Cavel didn't realize Bashta was speaking to him.\n\n\"She looks like my sister Velli,\" he said in a broken whisper.\n\n\"She does?\" Cavel used one hand to gently smooth the curls back from her face. Her little rosebud mouth opened and shut a few times as her lips smacked together and her eyelids quivered at the touch before settling back into sleep with a small sigh.",
        "She had a cat scent overlaid with a sweetness he'd never smelled from his clan's infants before.\n\n\"Her eyes are just like Velli's. Shiny and black like obsidian with those long dark lashes so thick they look like her eyes are smudged all around with soft black charcoal.\" She was a beautiful little girl. Cavel couldn't take his eyes off of her and when he touched her hand all he could do was stroke the skin that was softer than anything he had ever felt.\n\nHe didn't know how long they sat just staring at her.\n\n\"She's perfect,\" Cavel whispered. \"Do you know her name?\"\n\n\"Caliopa.\" At the sound of her name her little eyes blinked open and she smiled up at them. She snuggled back into Bashta's chest. \n\n\"What does that mean?\" Cavel continued to stroke her hand and she let go of Bashta's shirt and grabbed his finger. \"Oh, she's strong,\" he marveled. Her fingers clutched at his and he felt a wave of tenderness.\n\n\"Beautiful. Her name means beautiful.\"\n\n\"Hmm, it fits.\" Cavel rested his head on Bashta's shoulder. Together they held the baby that already felt like a part of them. Cavel would do anything in his power to keep her safe. With one touch of her hand she had touched his heart.\n\nBashta leaned his head back and turned to look at Cavel's profile. \"Can we take her home?\"\n\n\"Yes.\" Cavel turned his head to kiss his mate tenderly on the mouth. He pulled back and smiled. \"Let's go right now.\" He stood and carefully helped Bashta up, steering him for the door.\n\nBashta let him lead the way, glancing down frequently to the sleepy kitling. \"Velaku won't be upset?\"\n\nCavel shook his head. \"No. The need to bond with her is biological. He will understand.\"\n\nBashta frowned. \"I don't just want her because it's biological. I love her already, Cavel. She is my blood.\"\n\nCavel soothed him with a hand on his back. They stood just outside the door, the blue sky stretching out in front of the cliff face eyrie bringing out the bluish highlights in his mate and the kitling's hair. The warm wind shifted her heavy curls and she shivered.\n\nCavel turned so he blocked the breeze, brushing the soft hair back from the beautiful face. He knew exactly what Bashta meant. \"I know, love. I didn't mean it like that, I love her too. I just want to be together at home with our new kitling. She may not be our own child together but already she's ours.\n\n\"I want to spend some time alone as a family with you and Caliopa. Then I want to introduce our new family to our clan.\"\n\nBashta leaned up and kissed Cavel back. \"That sounds perfect. I love you.\"\n\n\"I love you too.\"\n\nThe End.\n\nStory TBC in the Snake's story, Hypnotic. "
    ],
    "authorname": "Cia81",
    "tags": [
        "gay novella",
        "gay drama",
        "non-human",
        "carthera",
        "adopting"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/two-of-a-kind-ch-07"
}