{
    "title": "Homecoming Dance",
    "pages": [
        "It was basketball homecoming, and Jolie was very excited. DaVaun had asked her to the dance and it was the first time she had a date for homecoming. She had never been asked to the dance before, and that DaVaun had asked her was very flattering. He was one of the best players on the team and all her girlfriends were jealous. Jolie really hadn't expected it. She knew boys thought she was hot. She was about five-eight and she weighed one-twenty; a lot of that weight was in breasts she thought were too big. DaVaun obviously didn't think so. His eyes spent more time on her chest than on her face, and that made her a little nervous. Her face was very nice, she thought. Her skin was light for a black girl; a coffee with lots of creamer color. She had a little button nose, huge brown eyes with flecks of amber in them and a mop of black hair that formed big loose rings around her face. She had high cheek bones and a wide mouth that smiled a lot. Her lips were full and luscious, and she had a little pointed chin. She looked a little like one of those dark elves from the fantasy game she liked to play on her PS4, she thought.\n\nDaVaun just thought she was hot. Most of the girls in their class had steady boyfriends, but she didn't. He had been watching her in the art class they shared. He couldn't get over those tits. He couldn't wait to get her in his car after the dance and take her out to Lookout Point. He was going to fuck this hot little babe that night. DaVaun pretty much had his pick of the bitches. He was a captain on the basketball team, and seeing Jolie in that hot little cheerleader uniform at all the games made his cock hard. This sister had it going on. Not only did she have the nicest set of tits in school, her ass was hot, too. It was just right for a cushion as he slipped his cock into her from behind and pounded that hot little pussy.\n\nThey won the game easily and DaVaun hurried to get showered. When Jolie came out of the dressing room, she looked hotter than hell. She had on a little silver mini-dress that looked like it was painted on. He took her to the cafeteria where the dance was being held and the band had just started playing.\n\nThere were maybe twenty couples dancing and DaVaun led her out. He busted a few moves and he could tell she was impressed. She was very athletic and she moved to the music like a dream. When the band started up a slow number he pulled her up against him and the feel of that smoking hot body against his had him hard as hell. He rubbed his cock against her and felt her shift away. He pulled her back and she pushed him away again. She walked away and he followed her to a couple of chairs. He asked her if she wanted punch and she did. He pulled out a flask and without anyone seeing, spiked their drinks with rum. This bitch needed to be loosened up a little.\n\nJolie could taste the rum and she didn't like it. She complained to DaVaun and he told her that everyone at the dance was doing it. It was a party and she just needed to relax. She drank the punch a little reluctantly. She had been drunk a couple of times at home. Her mom allowed her to drink there if she wanted. She drank wine with a meal occasionally, and beer now and again on a hot summer day, and she enjoyed the buzz. What she didn't like was the next morning when she woke up with a headache, feeling nauseas and with a horrible taste in her mouth.\n\nShe had never tasted anything like this. The 151 proof rum went quickly to her head and she felt a little dizzy. They danced a couple of more times and DaVaun asked her if she wanted to go home. She was having fun and she had danced with a couple of other guys, but she was getting tired and she did want him to take her home.\n\nWhen they got in the car, he cranked up some rap song and she leaned back in the seat and closed her eyes, allowing the thump of the bass to sweep over her. When she opened them she noticed that they were driving up the road to Lookout Point.\n\n\"DaVaun, where are you taking me? I thought you were taking me home.\"\n\n\"We going up to the Point,\" he told her. \"All the brothers be there with their girls. We going to have a good time up there. We just love for a while and then I take you home.\"\n\nJolie was shocked. She knew what people did at Lookout Point and there was no way she was doing that with DaVaun.\n\n\"Just take me home, DaVaun,\" she said. \"I don't want to go up there.\"\n\n\"Come on, Jolie,\" he laughed. \"You knows you wants DaVaun. We going to have a good time.\"\n\nJolie began to panic a little. She was eighteen years old and she knew she didn't want to do this at this point in her life, especially with a creep like DaVaun was turning out to be. She had seen the other girls drop out of school and have babies. That wasn't where she wanted her life to go. She had to do something quick.\n\n\"DaVaun, I think I'm going to be sick,\" she said. \"Pull over for a minute.\"\n\nDaVaun certainly didn't want her puking in his car so he pulled over to the side of the road. She got out and started walking back toward town. DaVaun jumped out and followed her.\n\n\"Where you going, girl?\" he asked.\n\n\"I told you I wanted to go home,\" she told him. \"You weren't taking me home, so I'm walking.\"\n\nShe saw the lights of an approaching car and heard the rumble of a set of Flow Master pipes. DaVaun grabbed her arm and spun her around. \"You ain't going nowhere,\" he told her. \"Get your ass back in the car, bitch.\"\n\nShe slapped him and he punched her in the stomach. The air left her lungs in a whoosh and he began to steer her back toward the car. The vehicle she had noticed swung in and she heard a door shut. She saw a large figure approaching. She could tell it was a man, but he was backlit by the headlights and she couldn't make out his features.\n\n\"Everything okay?\" he asked. \"You guys having car trouble?\" His voice was a deep, bass rumble.\n\n\"No, my girl just feeling sick,\" DaVaun said. \"She had a little too much to drink.\"\n\nThe man was now close enough to Jolie that she recognized him. She felt a huge relief. Derrick had graduated when she was a freshman. He was a huge very popular white boy that she had been partnered with on yearbook staff. They had spent a lot of time taking pictures in the elementary school, and she liked him a lot. He was funny and didn't seem to hate her for being a freshman like a lot of the seniors did. He had a scholarship to play football at college. She knew he was the starting left tackle at the University. He was trying to get a look at her.\n\n\"Jolie, is that you?\" he asked. \"I didn't know you drank.\"\n\nShe was starting to get her breath back. She heard a little disappointment in his voice. That hurt her feelings. \"I don't, Derrick. DaVaun spiked my punch and I'm not sick. He's trying to force me to go with him up to Lookout Point.\"\n\n\"You shut your mouth, bitch,\" DaVaun told her. \"She drunk, dude. She wanted to go up there. This all her idea.\"\n\n\"No, it's not,\" Jolie said. \"I pretended to be sick so he would stop the car. I was going to walk home but he caught me and punched me in the stomach.\"\n\n\"What the hell, man?\" Derrick said loudly. \"You hit her?\"\n\n\"She lying, man,\" DaVaun said. \"What you fuckin around here for, anyway. You better get to steppin'. You pushin your nose all up in DaVaun's business.\"\n\n\"Yeah? What you going to do about it, punk?\" Derrick asked. \"Come on, Jolie; I'll take you home.\"\n\n\"I kick your honkey ass,\" DaVaun threatened. \"You better get on up out of here. This bitch going with me.\"\n\n\"The only bitch around here is you,\" Derrick said. \"Get back in your car and get moving. I'll only tell you once.\"\n\nDaVaun took a swing at Derrick's head. Derrick caught his arm easily and trapped it under his right arm. He head butted DaVaun, and Jolie heard his nose crunch. DaVaun screamed and dropped to his knees, and Derrick kneed him in the belly. He fell to the ground, retching and gasping. Derrick took Jolie's hand.\n\n\"Let's get out of here,\" he told her. She shook her hand free and stepped toward DaVaun. She kicked him savagely in the stomach. \n\n\"That's for hitting me,\" she yelled. She turned back to Derrick and took his hand again. He led her to his car and opened the door so she could climb in. \n\n\"Wait,\" she heard DaVaun call. \"I'm leakin'. Call the ambulance!\" Derrick went around and climbed in under the wheel. He backed up and pulled onto the road, and they drove back toward town.\n\n\"What the hell was that, Jolie?\" he asked her. \"What are you doing hanging around guys like that? You looking to get raped or do a bunch of drugs? You're smarter than that. What's happened to you?\"\n\nShe started to cry. \"He's the captain of the basketball team, Derrick. He asked me to homecoming. All the girls think he's hot and I thought it was cool that he would ask me. I didn't know he was like that. Who the hell are you anyway? You don't have the right to lecture me. Last time I heard you were dating that skank, Linda. She hangs out with guys like that.\" She sobbed miserably. She felt very grateful to Derrick and she felt bad for saying that to him. \"I'm sorry, Derrick I shouldn't have said that. Thanks for rescuing me. I know I owe you big time.\"\n\nDerrick couldn't stand seeing her cry like that. He reached over and pulled her across the seat, hugging her with his arm around her shoulders. He petted her curly mop. \"It's okay, Jolie. I shouldn't have yelled at you. I'm all full of adrenaline. Forget about it. So how's my little photography buddy been? You still doing yearbook?\"\n\nJolie liked having his huge arm around her. Her sobs quieted. \"Yes, I've got middle school this year with Amber. I liked the elementary school kids better. The middle school kids are all a bunch of tools. I liked my partner better, too,\" she peeked up at him.\n\nHe smiled down at her. She thought he was very good looking. He had long, very curly hair, beautiful brown eyes and a strong, almost beautiful dark complexion. His skin was almost as dark as hers, and he was very muscular. She remembered how much fun he was and how patient he was with the little kids. They all worshipped him and she had a huge crush on him, too. That a senior would pay so much attention to her was very flattering. He had really seemed to like her, but he seemed to like everyone. He had sat by her a lot in the cafeteria and she liked talking to him. He was just a huge teddy bear. She was a little shocked at what he had done to DaVaun.\n\n\"I didn't know you could fight like that,\" she told him. \"DaVaun was leaking pretty bad back there.\"\n\n\"He's an asshole,\" Derrick laughed. \"Stay away from those guys, Jolie. Why aren't you going out with some nice nerdy type?\"\n\nShe laughed. \"I like football players,\" she rested her cheek on his shoulder. He laughed and pulled her tighter.\n\n\"Are you still going out with Linda?\" she asked. \"I'm sorry I said that about her.\"\n\n\"No, you were right about her. She likes to sleep with athletes and she doesn't much care who. I found that out. I guess she was my DaVaun. I'm... between girls now. What about you? You going out with anyone besides mister thug back there.\"\n\n\"No, no one's asked me,\" she said.\n\n\"I think you intimidate guys, Jolie\" he told her. \"You're so smart and so gorgeous they're afraid you'll say no. They think they aren't in your league. Most of them aren't\"\n\n\"Why don't you ask me?\" she said.\n\nHe stammered for a minute. \"Don't think I didn't think about it. It just seemed a little creepy. I was a senior and you were a freshman. If you were a couple of years older I would have. I still might when you're a couple of years older.\"\n\n\"I don't think it's creepy,\" she told him. \"My mom is six years older than my dad was.\"\n\n\"Yeah, but they didn't get married when they were fifteen and twenty one either,\" he said. \"They were both in college.\"\n\n\"I know,\" she said. \"You're less than four years older than me. I'm telling you I'm okay with that.\"\n\n\"I'm not sure I'm in your league either, Jolie. You're going to be a star. Look at you! You're the hottest girl I've ever seen. You're also the smartest girl I've ever known. When you're President or CEO of some big corporation or the biggest star in Hollywood, you won't want an old football player around.\"\n\n\"Why don't you give me a chance to decide for myself who I want around?\" she asked. \"I really like you, Derrick. You've always been so nice to me. I was just a punk kid hanging around with a senior, but you never treated me like that. You were just my friend. I've missed you. School isn't the same without getting out of fourth hour and taking pictures with you. It was a lot more fun knowing I'd get to be with you every day.\"\n\n\"Thanks,\" he said. \"I've missed you too. Okay, Jolie Mays, will you go out with me tomorrow?\"\n\n\"Yes,\" she said simply. \"What time?\"\n\n\"I'll pick you up at noon,\" he said. \"I've got something to do, but I think you'll like it. When we get done I'll take you out.\"\n\nShe was ecstatic. He was actually going to take her out! \"Is this your car, Derrick?\" she asked. \"I like it. What is it?\"\n\n\"It's a 1970 Chevelle Super Sport,\" he told her. \"It belonged to my dad. He kept it in the barn all these years, and when I graduated he had it restored and gave it to me.\"\n\n\"Does it have a stereo?\" she asked.\n\n\"It does,\" he said. \"My phone is under your legs.\" He reached down and his hand slid along one smooth calf as he searched. She liked that touch. When he found it and gave it to her, she took his hand and put it on her thigh, just above the knee. He stroked her for a minute, loving the feel of that silky skin under his fingers. He squeezed her leg gently and left his hand there, burning into her. She picked a song, and it was Frank Ocean, crooning out the Pyramid song. This was way different than being with DaVaun. Derrick had sub-woofers and the whole car vibrated to the heavy bass. She rested her head on his shoulder and when he looked down at her, her eyes were huge liquid pools.\n\nThey pulled up at her house and he felt like he should kiss her. He had wanted to kiss those lips from the moment he met her. He tilted her head up and tasted them. They were moist and pliable under his, luscious and full, and she tasted like fruit punch and girl. Her hands went behind his head and she kissed him for a long time.\n\nWhen she pulled back, she whispered. \"I've wanted to do that for a long time.\"\n\nHe got out and walked around to open her door. She gave him another quick peck and danced off up the sidewalk. \"See you at noon tomorrow,\" she called. He waved and she went inside, hearing the rumble of the Chevelle as he drove away. She stood with her back against the door, trembling with excitement for a minute.\n\n\"Jolie, is that you?\" she heard her mother's voice.\n\n\"Yeah, Mom; I'm coming,\" she called. She walked into the kitchen and found her mother pouring a glass of juice. \"You want some juice, Jolie?\" She did, and her mother poured her a glass. \"How did it go, honey?\" her mom asked.\n\n\"It was horrible and wonderful,\" Jolie said.\n\n\"That seems like an odd combination,\" her mother laughed. \"Tell mama about the horrible part.\"\n\n\"DaVaun was a douchebag,\" Jolie felt tears rising to her eyes. \"He spiked my punch and he was taking me to Lookout Point when I thought he was bringing me home. He was going to rape me, Mom! I got him to stop the car by telling him I was sick. I got out and started walking home. He followed me and punched me in the stomach. He was forcing me back in his car. That's when the wonderful part happened.\"\n\n\"Oh, honey, I'm so sorry. I tried to tell you about those guys. It's my fault, Jolie. I shouldn't have let you go with that punk. I don't think you know much about how rotten some people are. I've tried to keep you away from all that. I never wanted you to be a part of that life. You don't know how to recognize the predators.\" \n\nJolie went and hugged her mother. \"It's not your fault, Mom; it's my fault. I just wanted to be cool. I thought going out with the captain of the team would make me cool. You told me he was a thug, I just didn't listen. I'm sorry, sorrier than you know. It won't happen again.\"\n\n\"Tell me about the wonderful part, then.\" Her mother petted her as they hugged.\n\n\"Do you remember my partner in yearbook when I was a freshman? He was a senior. His name was Derrick Parker.\"\n\n\"Was he that huge white boy that you danced with at the athletic banquet?\"\n\n\"Yes, well anyway he lives out that way, and was on his way into town. He thought we were having car trouble and stopped to help us. I told him what had happened and DaVaun threatened him. He attacked Derrick and Derrick beat the crap out of him. I kicked him and we left him there. Derrick gave me a ride home and on the way, he asked me out! Well, to tell you the truth, I sort of made him.\"\n\n\"Jolie!\" her mother exclaimed. \"What do you mean you made him?\"\n\n\"He asked me if I was dating anyone besides DaVaun, and I told him no one had asked me. He told me boys are probably intimidated by how I look and how smart I am, so I asked him why he didn't ask me out?\"\n\n\"What did he say?\"\n\n\"He said I was too young and I was out of his league. He said the sweetest things, Mom. He told me that when I was President or a big CEO or a movie star I wouldn't want an old football player around.\"\n\n\"How old is he?\" her mother asked.\n\n\"He's twenty two. He'll be twenty three soon. He plays football at the University.\"\n\n\"You are too young, and you probably are out of his league,\" her mother said. \"He sounds like a really sweet guy though. It sounds like he cares more about you than just getting in your pants.\"\n\n\"Mom!\" Jolie exclaimed. \"I can't believe you said that! Why don't you let me decide if I'm too young and who's in my league? I know I screwed up with DaVaun. If you don't let me make mistakes I'll never learn. I won't make that kind of mistake again. I've really liked Derrick ever since I got to know him. He was so nice to me. He never made fun of me for being a freshman, he sat by me at lunch sometimes and talked to me, and he didn't stare at my boobs all the time like most guys do.\"\n\n\"He's a white boy, Jolie.\"\n\n\"What, are you some kind of a racist?\" Jolie asked. \"I never heard anything like that from you before!\"\n\n\"I'm not a racist, Jolie. It's just that some white boys think they've bagged some kind of a trophy when they get a black girl to sleep with them. There's black men that do that, too. They only sleep with white girls.\"\n\n\"I know that. Derrick isn't like that. That's racist, too, and those people are sick perverts. Remember, Mom; he didn't ask me out. He gave me all sorts of reasons he wouldn't. He said maybe when I was older. I sort of argued him into doing it. I want to go out with him. Tell me you approve.\"\n\n\"Actually, I do approve, honey. I've always tried to keep you out of the the thug life. Your father was one of the OG's. He was a drug dealer and a gang banger. He made a lot of money selling drugs and I used it to finish college after I had you. I was pregnant at seventeen and had to drop out of high school when you were born. He was murdered when you were ten. A drug deal went south and he died. To tell you the truth, I was relieved. I didn't want you to be part of that life. I guess I've raised you sort of white. I know you listen to hip hop and hang out with some of the sisters, but you do well in school and you aren't a slut like them. The sad truth is that acting like a thug doesn't work in this society. It really doesn't work in any society. Doing drugs, having a bunch of kids by men you aren't married to, doing a lot of criminal violent stuff, never being on time, painting on walls; that stuff doesn't get you anywhere but in the welfare line or in jail. Bring that white boy over and let me talk to him. If he's like you say, I'll love him. If he isn't I'll know that, too.\"\n\n\"What, are you going to give him the third degree? No, Mom; I won't let you do that,\" Jolie told her.",
        "Her mother laughed. \"Relax, honey; I just want to get to know the guy my baby is going out with. That's my right as a Mom. You owe me that.\"\n\nJolie texted Derrick and asked him if he could come a little early and meet her Mom. He told her he would rather go to the dentist, but he would do it. He pulled up at their house at eleven. Jolie was still in her room when he rang the doorbell. Her mother answered the door. Derrick found himself face with an older version of Jolie. She didn't look that much older either. She had that same slender, athletic, big breasted shape. She was beautiful, he thought.\n\n\"Hello, Mrs. Mays,\" he offered her his hand. \"I'm Derrick Parker,\" he handed her a package. \"I got this for you.\"\n\n\"Thanks, Derrick,\" she said. \"I don't want you to buy me things. I know you're a college student. I remember what that was like. You can call me Lila, by the way.\"\n\n\"Okay, Lila; but you don't get to tell me what I can buy you,\" he laughed. \"I own half of the largest ranch in central Texas. I'm not your average college student.\"\n\nShe stared at him frankly. \"Tell me why you want to go out with my daughter.\"\n\n\"I like her,\" he said. \"She's sweet, she's kind to kids, she's the smartest person I know, she's funny and she's fun to be around. To tell you the truth, I think she's still too young. She sort of made me do it. She's smoking hot, too.\"\n\nLila laughed. \"That's exactly what she told me. What did you get me?\" She tore open the package and there was a Tommy Hilfinger shoulder bag inside. \"You shouldn't have,\" she said. \"I know how much these cost, Derrick.\"\n\n\"Does it make you like me?\" he asked.\n\n\"Yes, you're a thoughtful guy.\" She laughed. \"Be careful with my baby, Derrick. She's all I have. If you make her happy, I'll love you. If you hurt her I'll scratch your eyes out. I know I owe you for helping her last night. That will only get you so far.\"\n\n\"I'll try to make her happy and I promise I'll never hurt her, Lila. I don't go around hurting people.\"\n\n\"Except for rapist thugs,\" she laughed. \"I'm so glad you came along when you did. Jolie was in trouble. She's a little na\u00efve about some things. She thinks everyone is as sweet as she is. Are you street smart, Derrick?\"\n\n\"I like to think so,\" he said. \"I can usually spot a bad situation. I try to avoid them.\"\n\n\"That's smart,\" she said. \"Let me get some cookies and you can tell me all about Derrick.\"\n\n\"I'd rather hear all about Lila, but it's your house,\" he told her. \"When you come to my house, I get to set the agenda.\"\n\nShe laughed and they ate chocolate chip cookies until Jolie came down. She had on black jeans and a white button up shirt with a Rangers baseball cap. \"You said to dress for being outside,\" she said at his look.\n\n\"No, it's perfect,\" he said. \"I had just forgotten how cute you are.\"\n\nShe felt a blush stealing over her cheeks. She took two cookies and kissed her mother. They got in the car and Derrick drove them out toward Lookout Point. She felt a little apprehensive, remembering what had happened, until he turned off and took a county road at right angles. They drove for half-an-hour and she felt like she was chattering. She was a little nervous. She hadn't seen Derrick for six months, and it was a little awkward. He laughed at her stories about school and she quickly fell back into their old camaraderie. He turned off the county road onto a long winding driveway, stopping to punch some numbers on a keypad that opened a gate. She saw a large sprawling house at the top of a small hill and a bunch of outbuildings. There was a corral full of horses on one side and four zebras were grazing near the barn. Two school buses were parked near the corral and there were twenty or so children outside the corral. As they got close enough to see well, she noticed that the children all had some kind of handicap.\n\n\"What's going on, Derrick?' she asked.\n\n\"These kids are from Dallas,\" he said. \"They go to a special school there and we're taking them riding. We do this three times a year. They all sign up to come and we take them out half an hour and bring them back. They can't take more than that, but they love it. You're going to help us.\"\n\n\"Who is us?\" she asked.\n\n\"You've never met my sister Macy, have you? She's two years older than me. She manages the ranch.\"\n\n\"No, I've seen her. She played basketball and I saw her play a couple of times. Do you think she'll like me, Derrick?\"\n\n\"She'll love you,\" he assured her. \"She'll be mad at me for dating you though. She'll think you're too young for me. She'll get over it.\"\n\nJolie could see Macy moving among the kids. She looked like a Valkyrie goddess. She came up and hugged Jolie immediately. \"Hey, Jolie,\" she said. \"I'm glad you could come and help us. I hope you don't think I'm rude, but how old are you, baby?\"\n\n\"I'm eighteen,\" Jolie said shyly.\n\n\"Jesus, Derrick; what the hell is wrong with you,\" Macy said to him.\n\n\"No, don't talk to him like that,\" Jolie said. \"This was all my idea. If you don't like me, I won't go out with him again. Just don't act like there's something he did wrong.\"\n\nMacy swung back to face Jolie and saw her big brown eyes full of tears. She moved instantly to hug her.\n\n\"No, baby; I'm sorry. Now don't cry. I'm just a bitch. If he makes you happy, I'll be right behind you. I apologize for being rude. Do you forgive me?\"\n\n\"Yes,\" Jolie told her, giving her a squeeze. \"Let's take these kids riding.\"\n\nThere were four ranch hands who rode with them, and the joy the kids got out of riding the horses and seeing deer, turkeys, several kinds of antelope and some warthogs was reward enough for anyone. When the kids were gone, Derrick went inside and got a large basket. He took Jolie to a shed and they got out a little four-wheel drive utility vehicle. They got in and he drove along a track by a small creek to where it joined a larger bayou. He drove along the bayou to a grove of huge live-oak trees and pulled up under one. There was a rope hanging down and he tied it to the basket. There was a ladder of metal bars running up the tree and disappearing into the foliage.\n\n\"Here's our date,\" he told her.\n\n\"We're going to climb a tree?\" she laughed.\n\n\"Yep, you go first. If you fall, I'll try to catch you. If I went and fell it would kill us both.\"\n\nJolie eyed the ladder dubiously. \"Are you sure, Derrick?\"\n\nHe swatted her butt and she squealed and started up the ladder. He was following her, and by the time she got to the first branches she could see a large structure built into the tree.\n\n\"It's a treehouse!\" she laughed. \"You're taking me to a treehouse!\"\n\n\"No one else but you and me know it's here,\" he told her. \"It took me fifteen years to get it built. They continued to climb and Jolie thought they must be forty feet off the ground when they came to the floor of the treehouse. They stood on a large branch and there was a rail and some steps leading up to a trap door in the floor. He pushed it open and she climbed up. She looked around in amazement. There was a fully furnished room. It was mostly glass, and there was a deck surrounding it with comfortable looking chairs on it. Derrick went out on the deck and used a pulley to draw up the basket. She came out and looked around. She could see for miles in every direction.\n\n\"It's a spectacular view,\" she said as she stood at the rail.\n\n\"I know,\" he said. He was sitting in a lounge chair and she looked back at him. He was looking at her.\n\n\"Not me, silly,\" she laughed. \"I was talking about the trees, the river, those beautiful hills and everything.\"\n\n\"I know,\" he said again. \"I was talking about you. Come here, Jolie.\"\n\nShe walked over and he pulled her down, her legs straddling his and he kissed her. She melted into his arms and he could feel every inch of her against him. He took off her cap and her mop of curls fell out. Her breasts were pressing into his chest and he could feel little twin bumps against his chest as her nipples sprang erect. Her lips were alive against his and she made a little moaning sound. He could feel the firmness of her young body under his hands and he wanted her desperately. She was very young and he shouldn't push her, he reminded himself.\n\nJolie was beside herself. She had never been so horny in her life. This amazing guy had brought her to this amazing place and she wanted him. That scared her a little, but she was going to go as far as her nerve would carry her. She sat up and watched as his eyes left her face and looked down over her body. She looked down and she could see her nipples making little bumps under her shirt. He looked down at her small waist, her flared hips and those perfect legs. They moved back up to her breasts, lingered a while and then back to her eyes.\n\nShe leaned close. \"Would you like to touch?\" she asked.\n\nHe licked, suddenly dry, lips. \"Can I?\" he asked.\n\n\"Yes,\" she whispered. \"As much as you want, Derrick.\"\n\n\"Can I see?\" he asked.\n\nShe nodded, blushing furiously. His hands reached out and she felt his fingers unbuttoning her shirt. He parted the shirt and she let it fall off her arms to the deck. She had on a lace camisole, and it felt incredible over her breasts as his fingers traced the low cut line. She felt his hands slide to her waist and pull the camisole out of her jeans. They slid underneath and she sucked in her tummy with a gasp as his hands circled her slender waist. They ran up over her ribs to settle on her breasts. She moaned and put her hands over his, pressing them into her breasts. \n\nHe moved his hands apart and the camisole slid up. She raised her arms and he slid the silky fabric up and over her head. She sat on his lap, gloriously and beautifully bare. Her breasts were the stuff of fantasy. They were large and very firm. They might begin to sag in a few years unless she wore very good bras, but they had all the firmness of youth now, jutting proudly out from her chest. She had small areolas, two shades darker than the creamy skin of her breasts and small nipples a shade darker still. They looked virginal but incredibly sexy on her slender frame. \n\nShe felt him reach up and sink his fingers into the incredibly resilient flesh, and it made her tremble inside. His palms rubbed over her intensely sensitive nipples and it made her moan as she felt the trembling grow stronger. The feelings he was causing in her breasts sparked through her body, exploding in her pussy and she felt it flood with moisture. She pushed forward to feed him one of the hard little nubs and she groaned deep inside as his lips closed around it. She had never allowed a boy to touch them inside her shirt before. Twice she had let boys feel them outside her shirt and the feeling of being exposed, outside and under the eyes of the boy she had had a crush on for so long was incredibly arousing.\n\nHe suckled and laved her breast and nipple with his lips and tongue and she felt something winding inside her like a spring. He could feel the trembling now and wondered if she were frightened.\n\nHe left off loving her little nipple and looked up at her face. \"Everything okay so far, baby?\"\n\nShe nodded. \"Yes, Derrick, don't stop, something's happening. I... I... I'm, don't stop; please!\"\n\nHe returned to the little nipple and she felt a trail of fire across to the other breast. When he took that nipple in the sensations doubled as he gently pinched the first wet little nub. The tension built inside her until there was only the incredible sensation of his tongue and lips and the pulsation inside her pussy. She ground it against him, seeking contact and exploded, her orgasm setting her aflame with passion. Spasms wracked her slender form and she pulled his face into the pliable mound under his lips, shuddering and calling out his name over and over again in a primordial chant. Gradually the trembling went as she began to relax in his arms.\n\nHe was looking at her face in awe. \"Damn, Jolie; that was the most erotic thing I've ever seen,\" he said as he kissed each little nub. \"You look so gorgeous when you come. I've never seen a woman orgasm like that before, and you have the most fantastic breasts I have ever imagined.\"\n\nShe was limp in his arms with her cheek cuddled against his chest and his hand holding her head, playing with her mop of curls.\n\n\"It felt, it felt wonderful, Derrick,\" she said quietly. \"I've never let a boy touch me like that. It doesn't feel that good when I do it. You, this place, wanting to be your girl, it just all came together like this. Can I do it again?\"\n\nHe laughed. \"Maybe not from me just playing with your nipples, but yes, you can come lots of times. Do you want to?\"\n\nShe nodded against his chest.\n\n\"Turn around with your back to me and sit in my lap again,\" he told her. She rose gracefully and lay back against his chest. He opened his shirt so that her bare back was against his skin, reaching around to cup her breasts again. He rolled the nipples and squeezed the breasts to points, massaging them and building her excitement again. \n\nShe felt one hand slide down over the silky skin of her belly and trace his fingers along the waistband of her jeans. She shivered under his touch and felt him open the button and slide her zipper down. His hand slid down under the waistband of her little white lace panties and she felt him tug at the little line of dark curls pointing the way to the treasure below. \n\nShe giggled as she felt his hand slide lower and she spread her legs so that he could cup his hand around her pussy. She was a little frightened at the sensations that were coursing through her body, but Derrick was very gentle and she trusted him. She leaned back and tilted her head up so that he could kiss her. He claimed her lips and she moaned into his mouth, feeling his index finger part her slick lower lips and slip into her tight channel while the other hand pulled on a little nipple. \n\nShe had never felt anything so good in her life and she began to writhe under his touch. He gathered her creamy moisture and coated her labia, his fingers dancing over her until they found the hard nubbin of her clitoris. She gasped as he rubbed around the base, teasing up the sides of the little shaft and flicking the tip. When he took it between his fingers and began to masturbate it, the sensations became overwhelming and she went off like a rocket. She felt the waves of sensuality flood through her until she feared she was going to pass out. She felt as if she were falling down a steep slide that had no end. Wave after wave swept through her as she rode his fingers between her thighs until the sensations became painful in their intensity.\n\nShe pushed frantically at his hand in her panties and he reluctantly withdrew. \"Oh, God, Derrick,\" she moaned. \"Oh, my God; you were killing me. I thought I was going to pass out.\" She looked up at him and he had a look of tenderness on his face that melted her heart.\n\n\"God, you're beautiful, Jolie. I could watch you come for days.\"\n\n\"I would like to come for days, but I don't think I'd survive the experience,\" she said. \"That was awesome, Derrick.\"\n\n\"Are you hungry?\" he asked her.\n\n\"Yes, but more thirsty,\" she said.\n\n\"Let's get a drink and then eat,\" he said.\n\nShe reached for her shirt, but he stopped her. \"Jolie, will you do something for me?\"\n\n\"Yes, what do you want me to do,\" she asked.\n\n\"Just wear the camisole and your panties while we eat,\" he said. \"I can't believe how gorgeous you are and I just want to look at you. I want to see your legs and that delicious butt and watch your breasts jiggle under the camisole. Will that embarrass you?\"\n\n\"Yes, but I'll do it for you,\" she said. She stood up and he watched her breasts shake and sway as she pushed her jeans down. Her legs were just as good as he remembered, thinking about her in her little cheerleader uniform. She was in profile and her perfect ass jutted out behind her as she stood up, nearly bare in her little bikini panties. They were all she had on for a moment and he sat, enchanted at the vision she presented with the sunset backlighting her amazing body. Her firm body showed her youth, but she was all woman.\n\nShe pulled the camisole over her head and her breasts bounced and settled inside the lace and silk. She extended her hand and he allowed her to pull him up. He hugged her nearly naked body to him, feeling her breasts against his chest and cupping her firm cheeks in his hands. They kissed for a while before he broke off to take her inside. He retrieved the basked and they took it to a table on the opposite deck. There was a cooler compartment inside, and he offered her soda and water. She took a bottle of water and drank it quickly. She opened a soda while he spread out a tablecloth and set paper plates and plastic forks down. He got out napkins and several dishes.\n\nHe had cold fried chicken, potato salad and baked beans. He sat beside her and they watched the sun set over the trees, her little body snuggled up against his big one and his arm around her shoulders. They went inside and he lit a couple of candles. They sat on a sofa and he petted her, his hand occasionally slipping inside the camisole to fondle a big breast or roll a nipple between his fingers. She was in a constant state of sexual arousal and finally she could stand no more.\n\n\"Derrick, you're either going to have to fuck me or take me home, You're driving me insane. This has been quite a day for me. I came for a boy for the first time and then a bunch times after that. I had a wonderful experience helping handicapped children, my boyfriend took me to a treehouse that is our secret. It was a great date. Now you're playing with me and it's making me crazy horny. Do you want to make love or take me home?\"\n\n\"I don't want to make love if you mean fuck,\" he told her. \"I'm not ready for that with you. I don't think you're ready either. That is for people you're in love with. I really like you and I think you really like me, but I don't either one of us know one another well enough to be in love. Maybe we're off to a good beginning. I've never had this much fun on a date before. You're a special person and I want to keep going out with you. I have an idea though. I'm going to drive you crazy but we'll finish with a big bang, okay?\"\n\n\"Maybe,\" she said. \"Show me.\"\n\nShe watched as he folded a futon down into a bed. He got a couple of pillows out of a chest and came to the sofa. He picked her up and carried her to the futon like a baby. She watched, fascinated, as he stripped. Her breath caught at the sight of his erect cock. It was the first she had seen in the flesh, and it looked frighteningly enormous. He laid on the futon beside her and pulled her on top of him. He lifted the camisole and she raised her arms so he could slip it off. Her excitement was growing and she reached down to take him in her hand.\n\n\"I want to see,\" she said. She spun around and took him in both hands memorizing every texture and shape. \"Can I kiss it?\" she asked.\n\n\"You can do anything you want to with it,\" he said.\n\nShe knew what a blow job was and she wanted to see if she could do it. It was going to be difficult. He was very large and she was very inexperienced. She stuck out her tongue and took a tentative swipe at the head of his cock. She felt it pulse in her hand and she could tell that he liked it. She thought the thing she could do was imagine that his cock was an ice cream cone. Her tongue lapped up the sides and over his head again and again. A clear drop appeared on the head of his cock and she tasted it. It was a little salty, but it didn't taste bad. She put her lips over the head and sucked at it, swirling her tongue around the sensitive rim of the mushroom shaped head. He moaned and thrust his hips up, sinking the huge member deeper into her mouth. She slid her lips down, stretching her mouth until she had as much inside her as she could take. She bobbed her head, maintaining a suction and twisting her tongue over the head. She used one little hand to pump the shaft she couldn't get in her mouth. The other hand reached down and she cupped his heavy balls, testing their weight.",
        "Suddenly he gave a groan. \"God, Jolie; I'm going to come, baby. You're so sexy I can't stop.\"\n\nHer eyes fixed on his face and she thrilled at the look of pleasure she was causing for him. She pumped faster and felt his cock swell inside her mouth. The first explosion caught her by surprise and she choked a little. His cum filled her mouth and she didn't know what to do. She swallowed and felt it slide down her throat, thick and creamy. That seemed to be the best solution and she gulped, trying to keep up with the flow. A little escaped, running down her chin but she managed most of it. She didn't care much for the texture, but the taste wasn't bad. Derik's moans of pleasure were so exciting to her that she resolved to do it again at the first opportunity. If coming felt anything close to as good to him as he had made her feel, her mild dislike of swallowing thick ropey cum was a small price to pay. She continued to pump his shaft and work on the head, milking it for the last drops. When he tugged at her arm she slid up across his chest, looking up at him.\n\n\"Did I do good?\" she asked him, her heart seeking his approval.\n\n\"Baby, you were awesome,\" he told her. \"That was so sexy. I have my own little virgin sex goddess. You look so erotic with your tits crushed against my chest and cum on your chin. God, what a girl!\"\n\nShe cleaned her chin with her thumb, licking his cum off and showing it to him on her tongue. She swallowed it and he groaned. \"Oh my God, Jolie, you're amazing!\"\n\nHe rolled over, his leg crossing over her and she could feel his cock, wet from her saliva and the few drops of cum she had missed against one silky brown thigh. He kissed her for a long time and she felt the moisture of her little pussy increase dramatically. When he kissed his way down to her nipples sparks of pleasure began flushing through her body and it made her want to writhe a little. He continued kissing his way down the arch of her ribcage and onto the flatness of her belly. His tongue tickled her little navel, an elongated oval and so sexy. When he pushed at the waistband of her little panties she raised her butt and allowed him to slip them down over her long slim legs and off over her tiny feet. He slid down further and she felt him nuzzle the little tuft of dark curls before he slid between her thighs.\n\nShe felt him sit up and opened her eyes. He was looking at her and running his hands from her breasts down over her spread thighs. \"Damn you're beautiful, Jolie,\" he told her. \"I can't believe how young you are. You look like a fantasy out of Playboy. If I were an artist drawing the sexiest woman alive, I'd draw you.\"\n\nShe blushed deeply. \"You say the sweetest things,\" she said. He lay down between her thighs, nuzzling her soft inner thighs and nibbling on the firm flesh. She was burning up. The feeling of his lips on her skin was like fire. She was embarrassed about him looking at her pussy, but the feelings he was causing blew all that out of her mind. Her pussy was very wet, and she could feel a trickle of her creamy juices running down toward her little brown pucker. He licked it up and she felt his tongue at her opening. He seemed to like the taste of her girl cum, and he was lapping it up like honey.\n\nThe feeling of his tongue against her pussy was driving her crazy. She felt him teasing her labia and then he was licking upward toward her little clit. The feeling was overwhelming, and when he began teasing the little nub, she felt that trembling that was a precursor to her orgasms begin. When his tongue began circling the base of her sensitive button and teasing up toward the head she felt her thighs quivering. Tension was gathering in her muscles and the feeling was so good that she began to moan loudly. His tongue pushed her clit up and down, back and forth until the sensation became the center of her mind and she felt a flush spread over her body. The tension built to an intolerable level and suddenly she felt something snap.\n\nThe most powerful feeling she had ever experienced flashed through her and she was coming. Powerful convulsions of pleasure swept through her and she could feel her hips bucking, trying frantically to get more of that agonizing contact. He held her slim hips tightly and the pleasure went on and on until it became almost painful in its intensity. Her seeking became motions of escape, her whole body twitching when his tongue contacted her over-sensitized clit. She pushed his head away and panted, her body shaking occasionally with the aftershocks of her orgasm. He moved back up over her nakedness and pressed against her bare flesh. He claimed her lips and kissed her until she was breathless.\n\nThey lay naked against each other for a long time, just cuddling with his hands caressing her and hers running across his huge muscles. He whispered little love words in her ear and nuzzled her.\n\n\"Jolie, it's getting late,\" he said. \"I should take you home.\"\n\n\"No,\" she protested. \"I don't want to move. I want to stay here like this.\"\n\n\"We can't, baby,\" he whispered. \"Lila would be frantic. She'd have my balls if we stayed.\"\n\n\"I'll call her and tell her I'm staying with Macy and you,\" she said. She thought for a minute. \"No, that would be a lie. I don't lie to my Mom, Derrick. You're right, I just hate to move.\"\n\n\"I know, baby. Me, too. You just lie there and I'll find your clothes.\"\n\nHe walked around while she watched him, the candlelight playing over his skin. He was beautiful, she thought. She watched as he collected her clothes. He pulled her panties on and pulled her up so he could slip her camisole over her head. Regretfully, he watched her breasts disappear inside the lace and he slipped her shirt on, putting her jeans beside her. He put his own clothes on while she finished dressing and they climbed down the tree. She leaned against him on the drive back to the house. Macy came out when they parked the utility vehicle and kissed her goodbye. She made Jolie promise to go shopping with her, and Derrick put her in the Chevelle.\n\nThey listened to music and talked on the way home. When they pulled up at her house, he let her out and gave her a long kiss.\n\n\"Derrick, I have a home game, Tuesday, will you come and watch me cheer?\"\n\nHe agreed and they made arrangements for him to pick her up. She kissed him again and went inside. Her mother heard her come in and called her. Lila was in the hot tub and Jolie stripped and joined her.\n\n\"Hey, sweetheart,\" Lila said. \"I see your date went well. Jolie, aren't you moving a little fast?\"\n\n\"What do you mean, Mom?\" she asked.\n\n\"Honey, you can't fool me,\" Lila said. \"You come in and you've got that just loved look all over your face. I'm just worried about you.\"\n\n\"Mom! We didn't... you know... do it or anything. We just played around. To tell you the truth, I would have let him, but he wouldn't. He made me feel sooo good though, Mom. Just with his hands and his mouth. He says making love is for people that are in love. He doesn't think we're there yet. He likes me, though, and he asked me out again. He said we're off to a good start. I trust him, Mom.\"\n\n\"He sounds like a great guy, honey,\" Lila said. \"I'm so glad you found him. You scare me a little, Jolie. You're too much like me. Just don't let people control you. You need to be in charge of what happens to you, not let someone else decide, no matter how sweet he is.\"\n\n\"Don't worry, Mom. I think with anyone else I would be. I'm not a slut. I've never let any other boy do those things to me and I wouldn't. I spent a whole year watching him. He isn't like the other guys I know. He would never hurt anyone that way. You should meet his sister Macy. She terrifies me! She was so mad at him when she found out I was only eighteen. We took a bunch of handicapped kids horseback riding and Derrick took me on a picnic in his treehouse. He has this fantastic treehouse like out of Swiss Family Robinson.\"\n\n\"Wow, Jolie; that's the most romantic thing! This guy sounds like a keeper. If there's anything I can do to help you keep him or anything you want to talk to me about, just ask. Okay honey?\"\n\n\"I will,\" Jolie leaned back in the tub and closed her eyes. \"You have no idea how he made me feel, Mom.\"\n\nLila chuckled. \"Actually, I think I do, honey. I'm happy for you.\"\n\nDuring fourth hour at school the next day, Jolie heard her name over the intercom, asking her to come to the office. She couldn't imagine that she was in trouble, but her heart was pounding a little. There was a delivery for her, it turned out. It was a small, flat package. She took it back to the classroom door and opened it. A note fell out and she gasped when she saw a new iPad inside. She read the note. \"I thought my little lover should have something to make her think about today,\" it said. \"I'm with you in fourth hour again. Turn it on.\" She blushed and looked around to see if anyone was watching. She folded the note and put it in her pocket. She turned on the iPad and there was a picture of her and Derrick from their year book photos, posing together in the elementary school. She giggled for a minute and went back to class.\n\nHe texted her on Tuesday during fourth hour and reminded her that he was picking her up for the game. She sent him a text that said, \"Yeet!\" with a bunch of emojis. When he showed up Tuesday evening, he had a big art photo book on Alaska for Lila and a pair of brochures for a trip to Hot Springs, Arkansas, to the spas. He asked Lila if Jolie could go. \"I promise to take good care of her,\" he told her. \"No funny business, I swear.\"\n\nLila laughed. \"Never make promises you can't keep,\" she said. \"I think Jolie has her own ideas about that, and I support her. You do what she wants to do and don't be making me any promises that you haven't cleared with her. You can promise me not to push her, but she knows her own mind and you should let her decide what she wants to do. You told me I didn't get to tell you what you could buy me, well; you don't get to tell her what she's ready for.\"\n\n\"What if I'm not ready?\" he asked.\n\n\"That's up to you. Don't let her push you either. She's a good girl, Derrick; and you're a good boy. I can tell that just in the short time I've known you. I trust both of you.\"\n\nHe hugged her and kissed her cheek. Jolie came down stairs just then. \"You don't think she saw, do you?\" he asked Lila.\n\nJolie laughed. \"You mean did I see you making out with my mom?\"\n\n\"You two are horrible,\" Lila said. \"Let's go watch some cheerleading.\"\n\nDerrick's Chevelle had a front bench seat and both girls rode in front with Jolie in the middle. The junior varsity played first, and she sat between him and her mother while they watched the game and she pointed out some cheer routines the varsity cheerleaders would be doing, too.\n\n\"I remember you being on the JV,\" he told her. \"What's different about being varsity?\"\n\n\"We do a lot more tumbling and acrobatics,\" Jolie explained. She was excited to have Derrick watch her and promised to do some stunts for him. The cheerleaders stood in a line where the varsity team would run out and their music started. Derrick was amused to see DaVaun come out wearing a mask to protect his broken nose. His eyes were blackened as he ran in at the head of the team. They made a few rounds of the warmup, and DaVaun walked over toward Jolie. She moved back to stand in front of Derrick. DaVaun started to say something to her, but then he noticed Derrick siting behind her. He quickly spun around and went back to the warmup.\n\nDaVaun had a bad game. The opponent's power forward abused him. The rest of the team played well and they won in spite of DaVaun's poor performance. After the game, Jolie went to get dressed and Derrick and Lila talked to some of the football players who remembered Derrick. The football coach came by and talked to Derrick for a while until Jolie came up. The group walked out together and when they got outside DaVaun and four of his boys were waiting. They stepped up and blocked Derrick and Jolie from going down the steps. The coach stepped out from behind Derrick.\n\n\"Is there a problem here?\" he asked.\n\nDaVaun immediately backed down. \"Naw, just going to say hi to Derrick,\" he said. He quickly left with his boys.\n\n\"Derrick, you have anything to do with why DaVaun is wearing a mask?\" the coach asked.\n\n\"Why don't you ask DaVaun?\" Derrick said.\n\n\"I'm asking you,\" the coach said.\n\n\"I'm not saying anything about it,\" Derrick told him.\n\n\"Why not?\" the coach asked. \"Do you have something to hide?\"\n\n\"I don't play for you anymore, and I don't have to answer to you,\" Derrick told him. \"I don't go to school here.\"\n\n\"Jolie does,\" the coach said.\n\n\"Are you threatening her?\" Derrick asked. \"Maybe you'd look good in a mask.\" He stepped toward the coach, and then looked a little sheepish. \"I see what you did there. I guess you know why he's wearing a mask now. I don't like people that hit my girlfriend or threaten her. That was a chicken-shit move dude.\"\n\nHe took Lila and Jolie's hands and they went to the car. He was seething a little inside. Jolie knew he was upset and she laid her cheek against his arm, holding it in her little hands. He looked down at her curly head against his arm and then over at Lila. She was smiling at him and he burst out laughing.\n\n\"I just punked my high school football coach, Didn't I? Jolie, I don't know what it is about you, but I feel like there's something about you that I ought to protect. I guess Lila can tell. What do you girls say about some frozen custard?\"\n\nThey were in favor, and they were soon spooning the delicious concoction into their mouths. They sat outside at a table with Jolie snuggled up against Derrick and Lila watching indulgently. His big arm over her shoulders made her feel little and cherished. She remembered what the girls had said to her in the locker room. They were all jealous and happy for her. Amber couldn't believe that she was actually going out with Derrick. \"He's like just the biggest stud ever,\" her friend had gushed. \"You deserve him, Jolie. You guys make like the perfect couple.\"\n\n\"Derrick, will you come to the game Thursday?\" she asked. \"It's our last game. Track starts after that and we don't cheer for that, but I run the open 200 meters and hurdles. Do you think you can come to my track meets? I mostly just sit around between events and I would come and sit by you.\"\n\nHe promised her he would do both. His football season was over and finals wouldn't start for a while. They talked about their trip to Arkansas that Friday. He talked Lila into letting her skip school on Friday. They were going by helicopter, Derrick told them. The ranch had one, and Derrick was a pilot. He had a cottage booked for Friday and Saturday nights. They would spend two days getting the full treatment, and there was a music festival going on that they would go to in the evenings. Jolie could hardly contain her excitement and it was infectious. Derrick took them home and Lila kissed him and went inside. Jolie lingered and they talked and cuddled a while.\n\nThe game Thursday was a blast for Derrick as he watched Jolie do her stunts. She was amazingly athletic and she could do a series of back flips and hand springs that made him dizzy just watching. She loved performing, knowing he was watching her every move. \n\nShe spent the night at the ranch Thursday night. She had expected to sleep with Derrick, but Macy put her in the guest house. She slept well in a huge soft bed, and Macy cooked them breakfast. She kissed them goodbye and they took off. Jolie had never been in a helicopter before. She was very apprehensive at first, but quickly settled in and enjoyed the experience. It took them three hours to get there, and when they landed at the airport there was a car waiting for them. They drove to the spa and a very nice and eccentric lady checked them in. They put their bags in the charming little cottage and got ready for the spa.\n\nThey were given handmade peppermint soap and led to a huge shower. Jets of hot spring water sprang up from the floor, walls and ceiling. Jolie was a little shy about taking off her clothes, but Derrick showed no hesitation in stripping off. She took off her clothes and a girl came in to take them away. They showered together and it was very erotic and relaxing. Jolie lost her inhibitions and became extremely horny when Derrick spent what seemed like hours soaping her body. She returned the favor, and he was sporting an erection like an iron bar by the time she was through. She kissed it and they dried on huge fluffy towels, wrapping in them for the next stage.\n\nThey were taken to a private spring water Jacuzzi bath where they luxuriated in the hot water for an hour. Derrick couldn't keep his hands off her and she was panting and squirming when the girl returned to take them to a roller bed session. Jolie had an opportunity to relax and regain some composure as her muscles felt like spaghetti after the roller beds. The girl returned and gave them both a full body scrub with something she called Jazzy Rose sea salt.\n\nThey were then given a full body Bentonite clay masque. They laughed hysterically at each other covered in the clay. After another shower with the peppermint soap, they were given another full body aloe vera and honey masque. They went back to the shower, and then were taken to massage tables. Two girls gave them full body massages for an hour. They were covered in steam towels and given a long treatment with back vibrators. They slipped on flip-flops and wrapped in towels, then they were taken back to the cottage. The whole treatment had taken six hours, and Jolie had never felt so relaxed and clean. They dressed and went out for barbeque. After dinner, they listened to a blues band for an hour and made their way back to the cottage, hand in hand.\n\nThey got ready for bed and Derrick climbed between the sheets. Jolie lingered in the bathroom for a while. She was very nervous and just a little scared. She had visited Victoria's Secret with her mother and picked out what she wanted to wear. She put it on and looked at herself in the mirror. She was satisfied, and she opened the bathroom door. Derrick looked up and his breath caught in his throat. She leaned against the door jamb and let him look. She wore a sheer cover in black. It was tied over her breasts with two red bows. It was nearly transparent, and underneath she had on a red demi-bra that barely covered anything. It left the top half of her breasts bare with just a hint of chocolate brown areolas exposed.\n\nLittle red matching panties were exposed inside the open tails of the cover-up. They tied with black bows on the sides and they were just a strip of lace. Her pussy was plainly visible under the lace, and a stray curl peeked out over the top. She felt his eyes drinking her in.\n\n\"God you look sexy, Jolie,\" his voice broke. \"I saw you naked all day and I thought you were the sexiest thing I had ever seen. But this, my God, baby; sometimes more is less. You look like you just stepped off the most erotic movie set on earth. Come here, baby, and let me feel.\"\n\nShe sauntered over, her hips tilting from side to side and she felt her heart racing inside her chest. She turned back the covers and climbed in bed beside him. The way he looked at her gave her confidence. He thought she looked incredible and that made her feel incredible. He pulled her on top of him and she felt his excitement as her pussy rested on the pulsating cock beneath her. He pushed her up so that she was sitting astride him and his excitement could hardly be restrained. He wanted to tell her something but his voice was hoarse and he could hardly speak.\n\n\"I want to talk to you Jolie,\" he croaked. He couldn't stand it another moment and he pulled her down so he could wrap her in his arms. \"I've had the greatest two weeks of my life since I met you. You're enchanting, baby. You're so smart and funny, you're so in love with life that I can't help loving you. I'm in love with you Jolie. I've never felt this way about anyone. I loved you for a year in school. You were just so amazing to be around, but I thought I was too old for you. I almost made a terrible mistake and I let you sort of slip out of my life. I'll never do that again. I still feel like I'm too old for you, but you don't think so. I'll let you decide. I'll be with you as long as you'll have me. I love you, baby. There, that's what I wanted to tell you.\"",
        "When he looked down she was crying. Jolie had never felt so emotionally alive. His words had burned into her heart and overflowed into tears of happiness. She gave him her lips and he tasted the salt of her tears.\n\n\"I've loved you since the first time you took me to the elementary school,\" she told him. \"You didn't treat me like I was a freshman, just somebody you liked being with. We were taking pictures of the pre-school kids and I saw how you were so patient with them. You let them hug around on you and I wanted to do it, too. I thought that you were someone I'd like for my children's father. I thought it was just a crush, but when you asked me to dance at the athletic banquet, I knew I wanted you. I want you to take me, Derrick. I'm yours as long as you want me.\"\n\nHe laughed and rolled her onto her back, his heavy body so delicious on her little one. He kissed her for a long time before loosening her bows and taking her cover-up away. He pulled the straps of her bra over her arms, loosening it so he could gain access to her nipples. He took them with his lips and loved them for long minutes as she writhed beneath him. He kissed his way down her lovely form, pushing her panties to one side so he could insert a finger into her dripping pussy while his tongue teased her clitoris.\n\n\"Don't you want to take them off?\" she asked.\n\n\"You look too good in them,\" he said. \"Maybe later.\"\n\nHe slid back up over her, his cock lodging at her opening and slipping between her wet lips. It felt enormous against her. He pressed and she was so slippery that his head easily parted her labia and he slid in an inch. She gasped and trembled as she felt her little pussy expand around the tremendous organ inside her. It felt as if her soul was being invaded and she groaned as he held still inside her. It felt so incredible and so right inside her that her discomfort quickly faded and she moved against the pressure. \n\nHe gave her another inch and she felt a quick stab of pain. She winced and he froze immediately. Again the discomfort faded and she pushed against the cock inside her. She felt as if something inside her was stretching tremendously, being pushed out of the way as he sank deeper. There was pain, but it was washed away by the powerful rush of emotion and sensation she was feeling. The man she loved was claiming her as his own, and she longed for that completion. The pain faded and was replaced by ecstasy as the huge pole slid smoothly into her, plumbing her depths and giving her such extreme pleasure that her mind reeled.\n\nShe felt him touch something, deep inside her and she knew that he was as deep as he could go. He continued to push, an inch or so remaining outside and she winced again as the pain returned. He stopped immediately. \"I can't take any more,\" she whispered. \"You're touching the end.\"\n\nHe kissed her. \"You're so tight and hot, Jolie. I feel like my cock is inside this scalding wet flexible tube. You feel so good, baby. You're making me feel so good. I love you, Jolie Mays.\"\n\n\"I love you, too, Derrick,\" she said. \"Love me; make me come on your cock.\"\n\nShe felt him draw back a few inches, her pussy fluttering in disappointment until he returned, filling her to the bursting point again. He repeated the slow motion, again and again as her excitement built. They found the ancient rhythm and she urged him to move quicker, pumping her hips up to meet his strokes. \n\nFlashes of fire swept through her body and she began to moan with each thrust. She felt his hands on her breasts, rolling her sensitive nipples and her body began the familiar trembling. She knew she was about to come, her pussy rippling around the huge cock inside her. The crest of her pleasure was a towering wave inside her, taking her into a delirium of joy and she screamed hoarsely as she felt it crest and sweep over her. Dimly, she heard his shout and then she was filled with heat as he came inside her, his hot cum feeling like lava flowing inside her spasming pussy. \n\nLiquid sounds filled her ears and the sensations continued to build as she rode from peak to peak, orgasms stringing together like pearls as she came again and again, the powerful spasms threatening to steal her consciousness as they gripped her in a powerful hand. The intensity lessened, now a string of diminishing convulsions as Derrick coasted to a stop, in her and on top of her, stilling to occasional flashes as the aftershocks rocked her slender frame.\n\nThey rested, lips locked together in passion and release. Derrick rolled her over on top of him, his softening cock still inside her. They whispered and touched, their love affirmed by the soft caresses and whispered words. She lay with her cheek on his broad chest and her consciousness faded as she slept. She awakened in the dark, feeling his body pressed against her back and his hand on one breast. She luxuriated in the feeling of being held and loved until she drifted off again. It seemed moments later when she felt him sliding her panties off. Her bra was gone and he rolled her face down on her pillow. She felt his hands sliding over the silky skin of her back, down to cup a thrusting cheek. His fingers kneaded the firm flesh of her ass and she felt her excitement grow.\n\n\"You have the most fantastic ass,\" he told her.\n\nShe giggled and he continued to explore every inch. She felt him rise up and kiss each jutting cheek. He moved her legs apart and lay between them. She felt the huge cock slipping between her ass cheeks and entering her little pussy from behind. It felt deliciously different as he entered her from the rear. She felt him bury himself inside her and he began to plunge deeply into her. She groaned as he rutted inside her tight cavern, moving his hips in a slightly circular pattern. His groin slapped against her jiggling ass and she moaned out her pleasure.\n\nShe felt so deliciously full. \"Oh, my God, Derrick; that feels so good. So big, so far inside me; you're driving me wild, Derrick!\"\n\nShe came a dozen times as he pumped inside her. It went on and on until she was begging him. \"Come, Derrick, please come, baby. Oh, my God, oh my God, please, I can't take any more!\"\n\nHer words seemed to inflame him and he pounded into her, spurting cum into her soft little pussy, soothing her with slippery juices. He rested inside her and they remained locked together as she drifted off, his semi-erect cock still inside her. Twice more during the night he woke her and fucked her into mindless orgasms. She lost count of the number of times she had come, his cock pumping inside her. She wept after the final explosion.\n\n\"Derrick, I can't any more. Please, I need to rest. I love you so much! I'm exhausted! I'll try again tomorrow, but I feel like you've drained me of every scrap of emotion I have. I'm so weak I don't even think I can walk.\"\n\n\"Tell me you love me again,\" he said.\n\n\"Oh, God; I do love you. I love you so much!\"\n\nHe wrapped her in strong arms and she slept, cradled in his arms where she belonged.\n\n*****\n\nThe football team trotted out onto the field and Jolie watched as they surrounded Derrick. The announcer introduced the team and then said, \"The Head Coach of the Wildcats is Derrick Parker.\" The crowd cheered wildly and Jolie held her two year old daughter up.\n\n\"See baby? There's Daddy?\"\n\nDerrick turned and his eyes found his wife and daughter near the center of the bleachers. He gave them the thumbs up sign as he trotted back to the coaching box. He could hardly wait for the game to be over so he could get his post-game hug."
    ],
    "authorname": "blackrandl1958",
    "tags": [
        "first time",
        "high school",
        "18 year old"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/homecoming-dance-2"
}