{
    "title": "Jenny from the Office Block",
    "pages": [
        "There is a mother-son roleplay near the end of the story, so keep that in mind if it's not your thing. There is no actual incest.\n\nComments and feedback are appreciated.\n\nEnjoy.\n\n*\n\n'Are you alright?'\n\nI open my eyes, straightening in my chair. 'Yes, thanks. Just too many late nights.'\n\n'I know how you feel.' She takes a mug from the cupboard and spoons in some coffee granules.\n\n'What's keeping you so late?' I ask.\n\n'If the boss works late, so do I. The perils of being his assistant.'\n\n'Taskmaster, is he?'\n\n'Not usually. He's under a lot of pressure at the moment, working around the clock to keep our biggest client happy.'\n\n'Sounds stressful.' I gesture to the chair opposite me. 'Sit down if you need a break.'\n\nI catch a hint of surprise, which is fair enough. We've never said a word to each other before now, so I might have had the same reaction.\n\n'Sure,' she says, 'I've got ten minutes. What is it you do here?'\n\n'Graphic design.'\n\n'Sounds interesting.'\n\n'It can be hit and miss. The latter when you're staying late every night.'\n\n'Do you live close by?'\n\n'About an hour door to door.'\n\n'Oh, that's rough.'\n\n'I don't mind it. It gives me time to read.'\n\n'Anything interesting?'\n\n'Fahrenheit 451.'\n\n'Oh, is that the one with Guy Montag and the book burning?'\n\n'That's the one. Have you read it?'\n\n'Years ago, so I don't remember much. I went through a dystopian phase.'\n\n'Sounds like me right now. I take it you're a bookworm.'\n\n'I always have been. I'm on a romance binge at the moment. Think classics like Jane Eyre and Pride and Prejudice.'\n\n'Very old school. Did you find your Mr Darcy?'\n\n'Not yet, unfortunately.'\n\n'Oh.'\n\nShe raises an eyebrow. 'What's with the \"oh\"?'\n\n'Nothing, you just surprised me.'\n\n'What makes you say that?'\n\n'Well, you're successful. And you seem nice... Am I digging myself a hole?'\n\n'You're trying your best to get out of it. I appreciate the effort.'\n\n'I'll take that.'\n\nShe gets up. 'I'd better get back. It was nice talking to you.'\n\n'You too.'\n\nI puff out my cheeks as she leaves, trying to decide whether it's weird how much I fancy her. Not off the back of that conversation, obviously\u2014she's done it for me for a while. It might not be considered an obvious attraction; she looks late thirties to early forties, and forty on the dot would give her seventeen years on me. She's comely without being beautiful, but what really has me hooked are her sumptuous curves. They lack the firmness or tone of a gym buff, but I've always had a thing for wide hips, and hers are up there with the best I've seen.\n\nI make another coffee then head back to my desk, catching eyes with her along the way. She gives me a smile, then I hunker down for another late night.\n\n*\n\nI wake up the next day with her still on my mind, where she lingers throughout the morning. Though our conversation was brief, it left me intrigued to know more. I often feel as though grounded people are an endangered species these days, so it was nice to speak to someone who seemed uncomplicated and, well... nice. Around twelve o'clock, I buy lunch from my usual deli across the street and bring it back to the office kitchen. Normally I use the time to listen to a podcast, but as I plug myself in, she walks around the corner holding what looks like a salad. We exchange a smile as she approaches my table, but she has no intention of stopping.\n\n'Wanna join me?' I ask.\n\nShe stops and glances around. I'm not sure what at, but it's clear she's in two minds.\n\n'You don't have to,' I say.\n\nShe sits down opposite me. 'It'll make a nice change, actually. I'm so used to eating lunch at my desk.'\n\n'You don't know what you're missing. Salad tastes a lot better over conversation.'\n\nShe smiles. 'I'm willing to try anything. There's no chicken or cheese\u2014not even dressing. Just pure rabbit food. That's what I get for dieting, I suppose.'\n\nI don't think she needs to diet, although I'm not about to say as much. 'It's worth it in the end though, right?'\n\n'I'm not always convinced, especially when what you've got smells so good. What is it?'\n\n'The best chilli con carne in London.'\n\n'Do you want to swap?' she jokes.\n\n'Not a chance in hell.'\n\n'I don't blame you. I suppose I should thank you for conserving my waistline.'\n\nI chuckle. 'Sorry for prying about your love life yesterday, by the way. I realise it must've sounded weird.'\n\n'It's fine,' she assures. 'Although I think it's only fair that you mention yours.'\n\n'There's nothing to mention. I'm chronically single at the moment.'\n\n'You should borrow one of my romance novels.'\n\n'I'll let you know if I get that desperate. Not that I'm calling you desperate, obviously.'\n\nShe smiles again, and I can't help but think how it lights up her face. 'You're getting that shovel out again. So do you live alone?'\n\n'No, with housemates.'\n\n'I thought you might. You look too young to live by yourself.'\n\n'Good to know.'\n\n'Are you staying late again tonight?'\n\n'Maybe for an hour or so, but nothing ridiculous. I'm just relieved it's Friday, I can't wait to go to the pub.'\n\n'To drown your sorrows?'\n\n'Something like that. I've never seen you there before, you should come.'\n\n'Oh... Thanks for the invite, but I don't know anyone who goes.'\n\n'You know me. Sort of.'\n\n'I don't know. It's not really my thing.'\n\n'It won't be anything crazy. Just a quiet drink and a chat after work.'\n\n'I'll think about it.'\n\n'Okay. No pressure.'\n\nWe continue chatting, losing track of time and running ten minutes over our lunch hour. It's something I seldom do, and I hurry back to my desk when I realise I'm late for a meeting. Not that I care too much; they always seem to start with idle chatter. I apologise as I enter the meeting room, but as expected, I haven't missed anything important.\n\nOne of my project managers takes us through some concept logos for a tinned fruit brand. Not the most riveting of things, but even if it was, my mind would be wandering all the same. I still don't know her name, and guessing what it might be is more compelling than the 'emotions' a fruit company wants its logo to provoke. Carol, maybe. Or Helen. Something not too old or too young. Kate would suit her, too.\n\nThe meeting ends, and I head back to my desk. I speed through my remaining work, aiming to finish in good time in the hope that she'll accept my offer. Just before six o'clock, I see her heading to the kitchen and follow to put my mug in the dishwasher.\n\n'Hey,' I say.\n\n'Hi.'\n\n'So have you thought about it?'\n\n'I think I'll call it a night. I don't want to intrude.'\n\n'You won't be. I'll even get the first round.'\n\nShe chews her bottom lip as though pondering a difficult maths problem. 'Why do you want me to come to the pub with you?'\n\n'Because I like talking to you. Is that a bad thing?'\n\n'No it's just... never mind.'\n\n'Go on.'\n\n'People gossip. I've already been asked who I was talking to at lunch.'\n\n'What did you say?'\n\n'Just one of the designers.'\n\nI feign a hurt expression.\n\n'I didn't mean it like that. You know what I'm getting at.'\n\n'How does it feel to be holding the shovel for a change?'\n\nShe smiles. 'Pretty silly.'\n\n'How about we go to a different pub? I know a nice one about ten minutes away. No one from the office goes.'\n\n'I don't want to keep you from your colleagues.'\n\n'You still haven't got that it's you I want to talk to.'\n\nHer expression tells me she's still unconvinced. 'Are you sure?'\n\n'Yes. So does that mean you'll come?'\n\n'Ten minutes?'\n\n'Eight if we're quick.'\n\n'Alright, just give me five minutes to go to the ladies and I'll meet you outside.'\n\n'What's your name, by the way?' I ask as she heads off.\n\nShe turns. 'Jenny. Yours?'\n\n'Callum.'\n\n'Nice to meet you, Callum.'\n\n'You too.'\n\n*\n\nWe arrive at the pub, and I buy the first round as promised. It's a warm evening, so we take our drinks to an outside table.\n\n'So,' I say, 'If pubs aren't your thing, what you do after hours?'\n\n'I'm more the stay-at-home type, to be honest. I'll occasionally go out for a drink, but more often than not I'll be reading with my feet up. Sorry if you were expecting a more interesting answer.'\n\n'Too good for your colleagues, is that it?'\n\n'No, it's not\u2014'\n\n'I'm teasing.'\n\n'Oh.' She smiles, bringing with it a cute look of embarrassment. 'Sorry, maybe a generational gap there.'\n\n'It can't be that much of a gap. How old are you, if you don't mind me asking?'\n\n'First my love life, now my age. You're really ticking off all the personal questions.'\n\n'I suppose I should rethink my plan to ask your cup size, then.'\n\n'Maybe try something else. I'm thirty-nine, how about you?'\n\n'Twenty-three.'\n\n'Wow, you just made me feel old.'\n\n'They say you're only as old as you feel.'\n\n'What if you feel as old as you are?'\n\n'Then you probably know that saying is bullshit.'\n\nShe laughs. 'It certainly feels that way. So how should I talk to you? What's the slang twenty-three-year-olds understand these days?'\n\n'I'm glad you asked. 'Have you heard of the word \"yeet\"?'\n\n'Yeet?'\n\n'Yeah.'\n\n'No.'\n\n'It's like \"yes\", except when you're super excited about something.'\n\n'Is this you teasing me again?'\n\n'No, I promise it's real. You should say it next time I ask you to come to the pub.'\n\n'Should I be excited about that?'\n\n'Of course you should.'\n\n'Let's see how tonight goes first.'\n\nI take a sip of my pint. 'Now that you know the modern lingo, maybe you can help me with something.'\n\n'Go on.'\n\n'What's a good show on the wireless? I'm always looking for new stuff to listen to.'\n\nShe opens her mouth in indignation, a sight I can't help but laugh at. 'I'm thirty-nine, I wasn't born in 1939.'\n\n'You'd look pretty good if you were.'\n\n'That's the nicest thing you've said to me today.'\n\n'Must be because it's the weekend.'\n\nShe smiles. 'So how long have you worked at the company? I can't remember you being here for long.'\n\n'Just over a year. I moved to London after taking a year out after uni.'\n\n'What were you doing?'\n\n'Voluntary work, mainly, while I figured out what I wanted to do. Not that I like to brag.'\n\n'I'm sure. What kind of work?'\n\n'I looked after dogs at a local animal shelter. Walking and feeding them, that kind of thing.'\n\n'Sounds fun. I've always wanted a dog, but I don't have the time or space to look after one. There were always two in my house growing up.'\n\n'That's how a lot of them ended up at the shelter. People bought them without realising how much work they are to look after.'\n\n'It's a shame. What's your favourite breed?'\n\n'It's hard to pick just one, but if I had to, I'd say German Shepherd.'\n\n'Really? Those are what we had growing up. Moxie and Bryson, then after they died, Prince and Matilda.'\n\n'Great names.'\n\n'Not exactly conventional, though. My parents had Moxie and Bryson before I was born, then my brother and I got to name the others.'\n\n'Which one was yours?'\n\n'Matilda. It was my favourite book at the time. We usually shortened it to \"Tilda\".'\n\n'And was Prince named after the singer?'\n\n'No, funnily enough. My brother just thought it sounded cool.'\n\n'Well, it's a good one either way.' I drink the last of my pint. 'Fancy another?'\n\n'Go on then, one more.' She gets up. 'I'll get them. Same again?'\n\nI nod and she goes into the pub. It's a little busier then when we arrived, meaning she might be a while. It's not necessarily a bad thing; I can see her waiting at the bar through the window, bum looking lush in her jeans.\n\n'Sorry it took so long,' she says when she returns. 'It's getting quite busy.'\n\n'For a minute I thought you'd done a runner.'\n\n'I tried, but there's no way to leave out the back.'\n\n'And here's me thinking I was being devilishly charming.'\n\n'I've had worse dates\u2014' Her face contorts in horror. 'That came out wrong. I don't think this is a date, obviously.'\n\n'I'm flattered,' I tease, taking a sip of my new pint. 'To be fair, this is going better than some of my dates, too. I've even been sneaked out on.'\n\n'Oh no. Why was that?'\n\n'Who knows? No great loss, though. She spent the first ten minutes of the date texting; barely contributed to the conversation; then when it was time to pay, she \"went to the toilet\" and never came back.'\n\n'Sorry to hear that.'\n\nI shrug. 'She was probably a cat person. What about you, think you can top it?'\n\n'It was a while ago, back in the days of silent films, but I think I can.'\n\nI chuckle, appreciating the self-deprecating humour. 'Do tell.'\n\n'Okay, but you have to bear in mind it was my fourth date with the guy. He took me to a nice restaurant and everything was going well. The conversation flowed, we had chemistry, and I was beginning to think it could go somewhere... And then his wife turned up.'\n\n'Ouch. And you didn't suspect anything?'\n\n'Not a clue. No suspicious behaviour, no wedding ring\u2014he didn't even have a mark on his ring finger.'\n\n'Sounds like he thought of everything. How did his wife react?'\n\n'She made a huge scene. Called me every name under the sun in front of a room full of diners. I tried to tell her I'd had no idea, but she wouldn't have it. It's the most embarrassed I've been in my life.'\n\n'I'm not surprised, that makes my bad date look like nothing. What did you do?'\n\n'Nothing, I just took the abuse and walked out. Looking back, I don't blame her. Apparently it wasn't the first time he'd done it.'\n\n'At least you found out sooner rather than later.'\n\n'That's what I thought. I'm just grateful I never slept with him.' She gives me another dismayed look. 'Sorry, that was probably too much information.'\n\n'Not at all. I didn't sleep with my date either. She'd have probably texted through the whole thing.'\n\nShe chuckles. 'That wouldn't do your ego any favours.'\n\n'Tell me about it. So, how come you haven't settled down?'\n\n'Back to the personal questions, eh?'\n\n'I thought you wouldn't mind now you're one-and-a-half gin and tonics in.'\n\nShe takes another swig. 'Make that one-and-two-thirds. It wasn't for lack of trying. I was with someone for six years after that incident, but it didn't work out.'\n\n'How come?'\n\n'The standard reason. Our priorities changed and we drifted apart.'\n\n'Sorry to hear that.'\n\n'It's alright, it wasn't meant to be. What about you? Any thoughts of settling down, or do you feel too young?'\n\n'I'm not in a rush, but if I find the right person, I might.'\n\nShe raises her glass. 'Here's to finding Miss Right.'\n\n'And Mr Right,' I say as we clink.\n\nShe finishes her drink, leaving only ice and the lime wedge at the bottom of the glass. 'I should get going.'\n\n'Can I tempt you to stay for one more?'\n\nShe looks at her watch and purses her lips. 'Alright then, you've twisted my arm.'\n\n'Didn't take much twisting.'\n\nShe shoots me a smile as I go into the pub. After about a five minute wait, I buy the round along with two bags of crisps and take them to the table.\n\n'I was getting a bit hungry, I say. 'Help yourself.'\n\n'Cheese and onion, you really know how to spoil a girl.'\n\n'It might not be fine dining, but at least you know my wife isn't going to turn up.'\n\n'I'll take a bag of crisps over that any day. Thanks.'\n\n'So, being the boss's personal assistant, you must know about all the skeletons in his closet.'\n\nShe raises an eyebrow. 'Is that why you asked me here, to gossip?'\n\n'I wouldn't dream of it. You haven't denied it, though.'\n\n'Even if he has them, I'm not nearly drunk enough to tell you.'\n\n'Just an excuse to stay out longer.'\n\n'I thought you might say that.'\n\nShe buys a fourth round to make us even, which turns into a fifth and then a sixth as the evening goes on. The crisps do a poor job of absorbing the alcohol, and my optimistic offer of a seventh is a step too far.\n\n'I'm done,' she says. 'I'm already struggling to see straight.'\n\nShe gets clumsily to her feet, almost knocking over her empty glass. I get up to help steady her, resulting in an alcohol-induced bout of head rush.\n\n'You alright?' she asks.\n\n'Never better. You?'\n\n'I think so.'\n\n'Come on, I'll walk you home.'\n\n'There's no need, honestly.'\n\n'I insist. I'd feel guilty if I got to work on Monday and found out you'd stumbled into traffic.'\n\n'Aw, I'm touched that you care.'\n\n'I'd hate to lose my new drinking buddy.'\n\nWe amble to the tube station in a fit of giggles, every topic of conversation seeming profoundly hilarious.\n\n'Oh!'\n\nI catch her as she trips on a loose paving slab, yanking her into me by the waist. 'Careful.'\n\n'Thanks. It's a good thing you came with me.'\n\nShe threads her arm through mine, and we make it the rest of the way without incident. After taking extra care on the stairs down to the platform, it's a relief when we finally board the train and sit down.\n\n'Oh that's so much better,' she says with a sigh. 'I can't wait to take my shoes off.'\n\n'Pipe and slippers time, is that it?'\n\n'Nothing wrong with that. You youngsters need to learn to appreciate things.'\n\nWe alight about twenty minutes later and walk through a quiet residential area towards her flat. I try to keep track of the route so I can retrace my steps, but it proves tricky in my drunken state, the consequences of six pints on an almost empty stomach becoming increasingly apparent.\n\n'Here we are,' she says, fumbling in her handbag for a key.\n\n'And all without falling over. Thanks for coming out, I had a good night.'\n\n'Thanks for inviting me. I enjoyed it more than I thought I would.' She scrunches her face. 'That came out wrong. I meant... never mind. Where's home for you again?'\n\n'Ealing.'\n\n'That's on the other side of London. You're in no state to get there.'\n\nI wave my hand dismissively. 'I've made it home feeling worse.'\n\n'It's my turn to insist. I don't have a spare room, but I do have a sofa. It might be a bit short for you but at least it's comfy.'\n\n'You sure?'\n\n'Yeah, come on in.'\n\nShe opens the door\u2014taking four attempts to slide the key into the lock\u2014and we stumble inside.\n\n'Home sweet home,' she says.\n\n'It's a nice place.'\n\n'Thanks, and I think you'll find my tastes are quite modern. Not a wireless in sight.'\n\nAfter a cursory snoop around the living room, I slump on the sofa while she disappears to the kitchen. Too short was right\u2014by about a foot\u2014but at least it's soft. I close my eyes, ready to give in to the temptation to drift off.\n\n'Don't tell me that after all your teasing I'm going to outlast you,' she says.\n\nI open my eyes as she sits next to me, bottle of wine and glasses in hands. 'I thought you'd had enough.'\n\n'Well, now I don't have to worry about getting home. I've been meaning to open this for ages and now seems as good a time as any.'\n\n'I can't argue with that. Pour away.'\n\n'When I said I enjoyed tonight more than I thought I would, that wasn't a slight on you, by the way.' She hands me a generous glass. 'I just didn't expect us to have much in common.'\n\n'How come?'\n\n'Isn't it obvious? Believe it or not, I don't normally hang out with people sixteen years younger than me.'\n\n'I'm flattered you made and exception.'\n\nShe smiles. 'Do you get what I mean, though?'\n\n'Sure, but it's only strange if you think of it as strange.'\n\n'Maybe. Anyway, I didn't want you to think I didn't enjoy your company.'\n\n'I'll forgive you... if I can ask one more personal question.'\n\nShe takes a hefty swig of wine. 'Do I dare say yes? Alright, ask away.'\n\n'As the CEO's assistant...'\n\n'Um-hmm.'\n\n'Have you ever... you know.'\n\n'Spit it out.'\n\n'Have you ever slept with him?'\n\nAfter an initial look of surprise, her lips curl into a wry smile.\n\n'You have!' I exclaim.\n\n'Only once. It happened after the Christmas party two years ago. We both drank way too much and I ended up at his place.'",
        "'How was it?'\n\n'I thought you said one more personal question.'\n\nI take a sip of wine. 'Just curious.'\n\n'It was good from what little I remember.' She blushes and puts her hand over her mouth. 'Wow, I can't believe I just told you that.'\n\n'Your secret's safe with me.' I inch closer and take her wine glass, setting it on the coffee table along with mine. 'One more question.'\n\n'What?'\n\n'Do you like drunk sex?'\n\nAfter a few seconds of silence, she attacks my lips, pushing me back on the sofa and falling on top of me. I waste no time in roaming her body, messing up her clothes as the faux leather creaks beneath us. Grabbing the bum I've admired for so long, I pull her towards me, making her aware of the growing erection trapped under my jeans.\n\n'You have no idea how much I've wanted to do this,' I growl.\n\n'Really?'\n\n'Really.'\n\n'Then how about you come to bed and show me.'\n\nShe gets up a little too quickly and loses her balance, crying out as she stumbles to the floor. I get up to check she's okay, and we're all giggles as I help her to her feet.\n\n'You're not having the best of luck tonight,' I say.\n\nShe throws her arms around me and kisses me again. 'I'd say I've got plenty lucky.'\n\nTaking my hand, she hurries me to the bedroom and we clatter through the door. Unable to decide between kissing and removing clothes, we hobble through an uncoordinated dance in trying to combine the two. We collapse onto the bed in a mass of limbs, where I kiss the soft and fleshy thing my face happens to land on. Her breathy moans encourage me to keep going, and I feel her pleasure in the way she clutches my hair.\n\n'Mmm come back here,' she drawls.\n\nShe yelps as I grab hold of her and toss her up the bed, stifling her renewed giggles by pushing my tongue in her mouth. Arms and legs flail everywhere as we grind our bodies together, and we gasp in tandem when my dick ends up inside her.\n\n'Hey there, stranger,' she says.\n\n'Hey to you, too.'\n\nWe break into laughter at the absurdity of the situation, only for the vibrations to bring our minds back to the pleasure. The mood flips from jovial to serious, and I mash my hips into her without rhyme or reason, becoming a god among lovers in my drunken mind. She joins in the chaos, raking her nails down my back, moaning with each thrust of my cock. The room spins about me as the bed shakes. The headboard pummels the wall. It's all booze and sweat and skin and breath: graceless but so fucking good. She feels it too\u2014at least I think she does. I thrust harder. Deeper. Faster. Thanks to six pints and wine, I can't stem the tide.\n\n'Jenny... Jenny... Jenny...'\n\nI erupt inside her, burying my head in the crook of her neck as she holds me close, panting alongside me in a boozy sweat.\n\nSpent, I flop to the side and close my eyes.\n\n*\n\nIt takes my memory a few seconds to crystallise. Rubbing the sleep out of my eyes, I look to the other side of the bed. Jenny isn't there, although I can hear the faint whir of a fan. I get up, grimacing as the movement brings a pounding in my head. Finding the bathroom door ajar, I announce myself with a knock and go inside.\n\n'Morning.'\n\n'Morning,' she says. 'How are you\u2014Oh my god.'\n\n'What?\n\n'You're naked.'\n\nI raise an eyebrow. 'That seems like a strange objection after last night.'\n\nI see her blush in the mirror. 'Sorry, I didn't mean... I'm still a little hungover.'\n\n'Just a little? Good for you.'\n\n'Well maybe more than a little.' She wipes away the last of her makeup and throws the cotton pad in a bin at her feet. 'I can't believe we did that. I was only supposed to stay for one drink.'\n\nI walk to the sink and hug her over her bathrobe. 'I'm glad you didn't. I had a lot of fun.'\n\nShe smiles. 'So did I.'\n\n'Although from what I remember, I probably wasn't at my best.'\n\n'I think that applies to both of us, to be honest.'\n\n'We could always try again when we're sober.'\n\nShe gestures to her face. 'Even after seeing me au naturel?'\n\nI tug at her belt, and her bathrobe opens to reveal the curves I hadn't had the clarity to appreciate last night. Her full breasts angle slightly outwards, and I can't take my eyes off the soft, grabbable flesh she carries on her hips.\n\n'I like what I see.'\n\nShe shudders as I graze my fingertips down her sides. Her skin is cool, and tiny goosebumps cover her waist and hips. A small patch of fuzz I hadn't noticed when drunk decorates her sex.\n\n'You're sweet, but I'm sure you prefer girls your own age.'\n\n'Experience has its charms.'\n\n'So does that,' she says, referring to my semi poking the small of her back.\n\nShe turns and kisses me, but the prospect of any morning fun is snuffed out by our hangovers reminding us of their presence.\n\n'Sorry,' she says, 'my stomach's a little haywire.'\n\n'Wow, no one's told me my kissing has made them sick before.'\n\nShe chuckles then winces. 'And my head isn't much better, so don't make me laugh. I'm going to take a shower. You can have one too, if you'd like. I can get you a spare towel.'\n\nI take her up on the offer then return to the bedroom to get dressed, smiling when I see my clothes laid out on the bed. I collect my things and go to the living room, where she's sat at the dinner table, two sets of breakfast in front of her.\n\n'A cup of tea and some toast before you go,' she says. 'I thought you could use it.'\n\n'Oh... thanks.'\n\n'You sound surprised.'\n\nI take a seat opposite her. 'I just wasn't expecting the bed and breakfast treatment\u2014clothes laid out, too.'\n\n'Maybe it's a benefit of an older woman.'\n\n'One of many.' I take a sip of tea. 'Ohh, that's just what I needed.'\n\n'Told you. Do you mind if I ask you something about last night?'\n\n'After all the questions I've asked you, I'd be a hypocrite if I did.'\n\n'What did you mean when you said I had no idea how much you wanted it? Was that just sex talk or was it true?'\n\n'It was true.'\n\n'Oh.'\n\n'Now it's your turn to sound surprised.'\n\n'I've never had interest from someone your age before. In fact, I've never slept with anyone younger than me.'\n\n'You were missing out.'\n\nShe smiles. 'Looks like I'm feeding your ego as well as your stomach.'\n\n'Have you never thought about getting a toy boy?'\n\n'Wouldn't that be a sign of a mid-life crisis?'\n\n'Maybe, but I wouldn't complain.'\n\n'Who says it would be you?'\n\nI theatrically place my hand on my chest. 'Don't break my heart now. '\n\nShe laughs as I finish my toast. 'I'll leave you to your weekend,' I say. 'Thank you for breakfast, and thank you even more for last night.'\n\n'You're welcome. Have you got everything?'\n\n'I think so. And if not, it's an excuse to come back.'\n\n'I'm sure you'd like that.'\n\nShe walks me to the door, and I kiss her goodbye. 'See you on Monday.'\n\n'See you Monday.'\n\n*\n\nThe fresh air helps with my hangover, and I feel better for having some food in me. And of course, there's the 'I just got laid' spring in my step.\n\nI don't think that's all it was, though. While my initial attraction to her was physical, I'm surprised how much we have in common. Age jokes aside, I never felt like I was in the company of someone older. I've always been told I'm mature for my years, and maybe that's why I've always harboured a secret affinity for older women. Maybe if Jenny was my age, our conversation would have been as stilted and painful as with my date who walked out.\n\nI get home to find Charlie, one of my housemates, in the kitchen.\n\n'I was wondering when you'd be back, you dirty stopout,' he says. 'Good night, was it?'\n\n'Good enough to leave me hungover.'\n\n'Where did you end up?'\n\n'I had a few drinks with a colleague and crashed at her place.'\n\n'Just crashed?'\n\n'Something like that.'\n\nHe fills his water bottle and puts it in his gym bag. 'Well if you didn't completely tire yourself out, do you fancy coming to the gym?'\n\n'Not today, mate. Head's still a bit iffy. Tomorrow?'\n\n'Sounds good. I'll see you later.'\n\n'See you later.'\n\nAfter Charlie leaves, I rummage through my cupboard. As welcome as Jenny's toast was, I could've done with a couple more slices. Finding nothing to inspire, I try the fridge and settle on what remains of a tub of Greek yoghurt. It leaves me barely more sated, meaning I'll have to brave a hungover trip to the supermarket. Jenny was worth it, though, and for the first time in a while, I'm keen for Monday to arrive.\n\n*\n\nIt's a bit of an anticlimax, the only time I see her being towards the end of the day. We pass in the corridor, and she responds to my greeting with a restrained smile. It strikes me as a little dismissive, but I think nothing more of it as I make my way home, knowing she's under pressure and having to work late.\n\nI run into her in the kitchen the next morning.\n\n'Morning,' I say.\n\n'Hey.'\n\nWithout another word, she leaves with her cereal and coffee. A similar thing happens a couple of hours later; we pass in the corridor again, only this time she breezes past me like I'm not even there. Once is innocuous, but three times is a pattern. Something's up. Seeking an explanation, I follow her out of the office when she goes to buy lunch. I hang back until we're out on the street, then pick up my pace to catch up to her.\n\n'Is there a reason you're ignoring me?'\n\n'Jesus,'  she exclaims. 'I didn't realise you were there.'\n\n'You haven't realised I'm anywhere this week.'\n\n'Am I obligated to talk to you every time we pass in the corridor?'\n\nI frown. 'What's this really about? Everything was fine on Saturday morning. If you regret what happened, I'd rather you just tell me so I don't have to bother you again.'\n\nShe sighs. 'It's not that. Sorry, I didn't mean to bite your head off. I don't regret what happened.'\n\n'Then what's the problem?' She looks over her shoulder towards the office. 'Ah. You're embarrassed.'\n\n'I'm not, I promise. But if people notice that we're suddenly friendly, they'll start to talk.'\n\n'And that bothers you?'\n\n'Of course it does. I don't want to be the subject of office gossip, and I have a level of professionalism to maintain.'\n\n'Meaning you can't be seen cavorting with the plebs.'\n\nShe grabs my arm and pulls me to the side of the path, taking another glance towards the office. 'That's not it at all. Look, I had a good time, and I'd like to do it again. How about we go for another drink on Friday? I'll even tell you what I've been listening to on the wireless.'\n\nDespite my frustration, I can't help but smile. 'Alright, but it had better be something interesting. Are you going to ignore me until then?'\n\n'I might say \"hi\" to you once in a while.' She takes out her phone. 'Give me your number, just in case something comes up.'\n\n*\n\nShe's good to her word, messaging me on Friday afternoon to confirm we're still on. It's the first communication we've had since Tuesday lunchtime, although I didn't see her at all on Wednesday or Thursday. I leave the office by myself, agreeing to her request that we meet each other at the pub. Going separately feels silly, but it's better than being ignored, so I'll take what I can get.\n\nI get there first and wait at the same table as last week. She arrives a few minutes later, greeting me with a smile.\n\nI point over her shoulder. 'Is that your boss?'\n\nI've never seen someone spin around so fast.\n\n'Just kidding,' I say.\n\nShe turns back around with an amusing level of relief on her face. 'Very funny.'\n\n'I thought so, too.'\n\nShe goes into the pub, returning with a gin and tonic and two bags of crisps.\n\n'Payback for last week,' she says.\n\n'Thanks. How was your week? I've barely seen you since Tuesday.'\n\n'Henry had meetings in the Glasgow office, and where the boss goes, I go. Don't worry, I wasn't avoiding you.'\n\n'Perish the thought.'\n\nShe smiles. 'How about you?'\n\n'Pretty standard, glad it's the weekend. It's nice to be asked out on a Friday night.'\n\n'Oh, is that what I did?'\n\n'Well we are out, and you did ask.'\n\n'You've got me there. I can only stay for one tonight, though.'\n\n'Got plans later?' I ask.\n\n'That depends.'\n\n'On what?'\n\n'On whether you want to help me finish the bottle of wine we started last week.'\n\n'You mean you haven't finished it already?'\n\n'What do you take me for, some kind of alcoholic?'\n\n'I had my suspicions after last week.'\n\n'Then you'd be doing me a favour by making sure I don't drink it all myself.'\n\n'When you put it like that, how can I refuse?'\n\nWe nurse our drinks and crisps for the best part of an hour, then head back to her place. It takes considerably less time when we're both sober, which also enables me to notice more about her flat. A bookshelf in the corner of the living room catches my eye.\n\n'Fifty Shades?'\n\nShe chuckles. 'Guilty pleasure.'\n\n'Hey, no judgement from me.'\n\n'It gets a lot of stick, but that misses the point in my opinion. It's not meant to be a literary masterpiece, it's meant to appeal to women's fantasies.'\n\n'And does it?'\n\n'I've read all three more than once if that answers your question.'\n\n'Damn. Does that mean I'm competing with Christian Grey?'\n\n'Sadly sweetheart, I don't think you can. But that's okay\u2014at least you're real.'\n\n'I don't think I've ever been complimented on my existence before.'\n\n'You're welcome.'\n\nBook browsing over, we head over to the sofa and she pours the wine.\n\n'So are you in to being tied up?' I ask.\n\nShe raises an eyebrow. 'You know an awful lot about Fifty Shades for someone who's never read them.'\n\n'Who said I've never read them?'\n\n'Well, aren't you full of surprises? I'll let you think about it. I can't tell you all my secrets straight away.'\n\n'Shame. I was about to offer to take you to my red room.'\n\nShe scooches up to me with a sultry smile. 'Maybe we can save that for a few Fridays' time. Tonight,' \u2014she kisses me on the lips\u2014'how about we have some simple, wholesome, regular sex, and you can show me what you can do when you haven't had a skinfull.'\n\nI pull her back to me and plant a kiss on her lips, her candid words stirring my loins. 'Sounds like a plan.'\n\nShe takes my wine glass and sets it down on the coffee table along with hers. Both are barely touched.\n\n'I thought you wanted me to help you drink that,' I say.\n\nShe straddles my lap. 'There'll be plenty of time for drinking later.'\n\nResuming our kiss, I take advantage of sobriety by properly exploring her body, learning all its intricacies and quirks that had escaped me a week ago. Her waist and hips are squishy and soft, ideal for a satisfying squeeze if that's what you like. And I happen to like it a lot. Betraying the extent of my enthusiasm, I let slip a growl as I land on her perfect arse.\n\n'I get the feeling you're a bum guy,' she says with a giggle.\n\n'Equal opportunist.' I grab hold of the hem of her top, and she follows my lead by raising her arms.\n\nI whip it off and throw it across the room, leaving her heavy, sumptuous breasts suspended inches from my face. 'These aren't bad, either.'\n\n'I'm glad you like them.'\n\nI lean forward to show her how much, kissing over and under and everywhere in between. After unhooking her bra so I can explore unimpeded, she pushes them together for me, guiding her nipples to my mouth and sighing when I accept the offer. The sofa cushions squeak beneath our horny bodies, her nipples and my cock growing increasingly hard. The latter soon demands more space than my chinos can offer, coaxing a giggle from Jenny when it presses beseechingly against her jeans.\n\n'Someone's excited,' she says. 'Come on.'\n\nShe leads me to her bedroom, drawing my gaze to her hypnotically swaying hips. I'd bet my life it's deliberate; I've seen how she walks enough times to know it isn't this sexy by default, and I'm certain she knows it's driving me wild.\n\nUnable to resist, I pin her against the wall. Stifling her yelp with a kiss, I turn my attention to her trouser button, crouching on my haunches as I slide them down. I come face to face with a pair of white lace panties\u2014nicer than everyday underwear\u2014and imagine her putting them on for me, checking herself out in the mirror and knowing how sexy they looked. I kiss the crotch, prompting a moan from above as her arousal dampens my lips through the fabric. Pulling them aside, I immerse myself in her folds, a boon for my nose and tongue. The deeper I delve, the more I adore her, and like a drug over time, the same dose ceases to be enough. Practically ripping her underwear away, I push her into the wall with my mouth, sating my appetite as she pulls my hair taut.\n\n'Callum...'\n\nHer tone, dripping with longing and a hint of surprise, spurs me on. I circle her swollen nub as fast as I can, burning my tongue on its heat as I strive to tip her over the edge. It's as much for me as it is for her; ignoring the pain as she tugs harder at my hair, I indulge months of fantasizing about what tasting her would be like, relishing that the reality is so much better.\n\n'Stop. Stop. Stop!'\n\nShe pushes me away from her quivering legs. Somewhat bemused, I get to my feet.\n\n'I was about to cum,' she says.\n\n'So why didn't you?'\n\nShe reaches for my hair, gently this time, to neaten the mess she made. 'Patience, sweetheart. I haven't had you yet.'\n\nDeferred gratification. My first lesson from this experienced goddess.\n\n'Besides,' she says, 'it's your turn.'\n\nWe swap places and she crouches in front of me. Lowering my chinos and boxers, she brings her playful side to bear, smiling up at me while circling her finger on my gooey tip. Transfixed, I groan as she pulls it away, drawing a glistening strand of precum through the air.\n\n'Someone's definitely excited,' she says.\n\nAn understatement if ever I've heard one. I lean against the wall as she wraps her lips around my cock, gliding all the way to my base at the first time of asking. I've never experienced anything like it, scarcely able to believe the sight of her sucking and slurping without hesitation, making me feel like a king. I consider how much practice it's taken her to get this good, and I bid a silent thanks to all the guys on whom she's honed her skills. I close my eyes to reap the benefits, content to stay against the wall for the rest of the night.\n\nJenny has other ideas. She releases me, primed and hard as a brick, then motions to her room. We kick away the clothes around our ankles and make for her bed. Her bedding a different colour than last week (slate grey as opposed to black), not that it makes a difference when we dive onto it. She lies on her back with her knees bent, presenting her delicious pussy. Showing her I'm just as good at teasing as she is, I glide the length of my cock back and forth through her folds, relishing the desperation it brings to her face.\n\n'Are you going to make me wait?'\n\n'I thought you were all about patience.'\n\nShe responds with a whimper as I continue driving her crazy, enjoying the slippery feeling of our arousal blending together. When it's clear in her face that she can take no more, I drop my hips and push my cock inside her. She beckons me down, and I root myself in meeting her lips. I'm thankful for the pause as we kiss, allowing me to acclimatise to how good she feels. Though it's our second time, sobriety makes it feel like our first, and she draws me deeper into the moment by tenderly exploring my mouth with her tongue.\n\n'Show me what you can do, sweetheart,' she says.\n\nWith our lips a hair's breadth apart, I rock my hips, bringing back the bliss of her blowjob in an instant. It's a dangerous sensation that could tempt me over the edge, but making this last is non-negotiable. This woman I pursued, who gave me the best head of my life before inviting me to her bed, will not be disappointed. She moans softly, sweat forming on her brow, and I'm close enough to spot the subtle flickers of pleasure in her eyes each time my cock penetrates her depths.",
        "'How am I doing so far?' I say.\n\n'Not bad at all.'\n\n'Sounds like there's room to improve.'\n\nI haul myself up and hook my arms around her leg, driving into her in an abrupt change of pace. She cries out in near-anguish, but it's for me to stop. It's a cry for more, letting me know what she expects from young dick. I strive to give her what I know she wants, making her tits bounce and thighs ripple, and I'm vindicated by a flush of red spreading across her chest. She reaches down to play with her clit, her fingers becoming a blur as her eyes roll back. She opens her mouth to say something, and it fills me with pride that she can't get out the words.\n\nSweat pours off me as I match her intensity, pushing me towards the point of no return. At this point I don't care, and even if I did it wouldn't matter. I'm ready to burst and can't wait, knowing it's going to be\u2014\n\n'Ohhhh!'\n\nShe pushes me away, robbing my cock of her warmth just before my climax arrives. A jet of clear liquid shoots from her pussy, causing me to barely register the load I blast over her stomach. A smaller one follows as she strums her clit, followed by a third, and then a final dribble as her hand flops to her side.\n\nI stare at her in the calm after the storm. Our stomachs, thighs, and the bed are lathered in the emissions of sex.\n\n'I tried to tell you,' she says, almost apologetically. 'I hope you don't mind.'\n\nI can't help but chuckle. 'Why would I mind?'\n\n'It freaks some guys out. That's why I tried to warn you.'\n\n'Well I promise you I'm not freaked out\u2014in fact I'm the opposite. But why didn't you just tell me before we started?'\n\nShe looks away with a coy smile. 'Because I don't always get there. I didn't want to put any pressure on you.'\n\n'Seriously?'\n\n'I know it sounds silly, but guys can get competitive. Years ago, I told a boyfriend about it before we had sex for the first time, and he took it really badly when it didn't happen. I think it wounded his pride, that I'd got there with other guys and couldn't with him. It was one of the reasons we broke up in the end. Since then, I've kept it quiet unless it's about to happen.'\n\n'I guess that makes sense.' I shuffle around the bed and lie next to her. 'I'll take it as a compliment that you couldn't get the words out.'\n\n'How's your ego?'\n\n'Pretty good, actually. I can't wait to see what other surprises you have in store for me.'\n\n'Nothing else, sorry to disappoint you.'\n\n'I don't think you could ever disappoint me.'\n\n'Glad I make a good impression.' She looks down at my globs of semen on her stomach. 'I really need to take a shower. I'll get you a towel if you want one too.'\n\n'How about we save water and take one together?'\n\n'Environmentally conscious, are you?'\n\n'Of course.'\n\n'Ooh, good in bed and responsible. You'd better follow me.'\n\n'Good in bed, eh?'\n\nShe turns to me with a minxy smile. 'Like I said, not bad at all.'\n\nAs the water sluices away our sweat and everything besides, it strikes me how intimate the act of washing somebody is, especially after a second hookup. It's not something I've done in similar situations before, and it adds further weight to my instinct that this wasn't just a bit of fun.\n\n'Why are you staring at me?' she says.\n\n'Was I?'\n\nShe chuckles. 'Yeah, for about the last thirty seconds.'\n\n'I didn't even realise. Probably because you tired me out.'\n\n'You're welcome.'\n\nWe finish by washing each other's hair, then we step out of the shower and get dried off. I retrieve my boxers and t-shirt from the floor, and when I get back to her room, she's slipped into a black nightie.\n\n'Damn, I thought you said no more surprises,' I say.\n\nShe gives me a confused look before twigging what I mean. 'This?'\n\nI slip my hands around her waist, roaming the soft satin over her hips and bum. 'Mm-hmm.'\n\n'I wear it every night, but it's nice to know you're easily pleased.' She kisses me on the lips. 'I'm going to change the sheets before we go to bed. I can't imagine you want to sleep on... you know.'\n\n'How do you know it's not a fetish?'\n\n'Even if it's one of yours, it's not one of mine.'\n\n'Fair enough, I'll give you a hand.'\n\nWe strip the bed, and I help her put on the black sheets from last week. Doing housework with a colleague I barely know\u2014minutes after having the hottest sex of my life with her\u2014is another strange, although oddly comforting, scenario.\n\n'How do you get the corners to stay tucked in?' I say.\n\n'You've just got to be persistent. Get it right in there.'\n\n'Are you still talking about bedsheets?'\n\nShe shoots me a smile. 'It applies to lots of things.'\n\nShe throws the old sheets into the laundry basket and we cuddle up under the fresh ones. I don't know what I'd expected when I asked her for that first drink two weeks ago, but it definitely wasn't this. Nuzzling her hair, inhaling the apple scent of her shampoo, I close my eyes content.\n\n*\n\nI wake up with my arms still around her, my morning wood pressed snugly between her buttocks. While the temptation to grind is strong, her soft breathing tells me she's asleep, and I don't want to wake her. I let the minutes go by in stillness, enjoying the morning after without the hangover. Her hair retains a faint smell of apple, but it's her natural scent I notice more. It's musky following a night of sleep, and I can't help inhaling, wishing the shampoo wasn't there at all. I've heard that liking the way a partner smells means you have complementary genes. If that's true, mine must fit hers like a jigsaw.\n\nShe bucks her hips ever so slightly. I'm not sure whether it was conscious at first, but I'm left in no doubt when she begins to gyrate.\n\n'Morning,' she mumbles.\n\n'Morning.'\n\n'And a good morning to you, too,' she says, increasing the pressure on my crotch.\n\nI exhale a soft moan, then pull her hair aside and bring my lips to her neck. Trailing kisses across her skin, I wrestle my boxers down with one hand to feel her nightie against my cock. Freed and aroused, it glides effortlessly across the satin, burying deeper between her cheeks with each pass.\n\nIt's her turn to let slip a moan, and she inclines forward to lift her nightie, treating my erection to her warm flesh.\n\n'This is a good morning,' I say.\n\nShe cranes her head to offer the first kiss of the day. 'We can make it even better.'\n\nWe grind our bodies under the covers, and I notice the edge of her lips curl into a smile as she gets me off between her cheeks. Though it's not quite sex, the array of sensations make for an enthralling alternative. Her cheeks pull my hood back and forth, her tits are soft and yielding in my hands, and her intoxicating scent becomes more so as she moves.\n\n'Someone's enjoying himself.'\n\nHer impish tone tips me over the edge, and I groan as semen spurts from my dick, filling the space between our bodies. Its warmth spreads across my crotch as I continue to grind, leaving us both gooey by the time I'm finished. I nestle my head in the crook of her neck, suddenly sleepy again as I soften in the sticky mess of her arsecheeks.\n\n'I'll have to buy more bedding if you keep coming over,' she says.\n\nI chuckle. 'I do need to practice tucking in those corners.'\n\n'You can take the lead this time, seeing as you made the mess.'\n\n'I think your encouragement played a part.'\n\n'To be fair, it didn't take much.'\n\n'Touch\u00e9.'\n\nShe rolls over, and after spending a lazy few minutes making out, we change the sheets, shower, then make our way to the kitchen for breakfast.\n\n'Is toast okay again?' she asks.\n\n'Any chance of two slices this time?'\n\n'Sure.'\n\nI watch her getting everything ready, warmed by yet another unusual feeling. She's obviously the caring type, emphasised when she takes three different jams out of the fridge so I can pick which one I want. I go for raspberry. It's something I could get used to; she sets two slices of toast in front of me, lathered in butter and jam, along with a mug of tea full to the brim.\n\n'Thanks. You're spoiling me this morning.'\n\n'You spoiled me last night.'\n\n'I think we spoiled each other.'\n\n'Does that mean you owe me breakfast?'\n\n'If it means we can do that again, I'll make you whatever you want.'\n\n'You've got yourself a deal.' She sits down opposite me and sighs after taking the first bite of her toast. 'I needed that. You're getting me into the habit of skipping dinner on a Friday.'\n\n'Then why don't we go for some next time?'\n\n'You mean to a restaurant?'\n\n'That's generally where people go for dinner,' I tease.\n\nShe smiles. 'Okay, why not. I can't next week, though, I'm going on holiday on Monday.'\n\n'Anywhere nice?'\n\n'Thailand, with my friend Portia. We do a trip once a year.'\n\n'You must be well-travelled.'\n\n'Reasonably. I've always loved seeing new places. How about you?'\n\n'I've been to a handful of countries, but never outside Europe.'\n\n'You've got plenty of time. I hadn't even left the UK at your age.'\n\n'Thailand is somewhere I've always been curious about, too. You can tell me about it over dinner.'\n\n'I look forward to it. I can't wait to see the restaurant you pick.'\n\n'It might not be as fancy as your use to.'\n\n'\"Used to\"?' She laughs. 'I'm not a socialite, you know. As long as there's good company and I'm not craving toast in the morning, I'll be happy.'\n\nI chuckle as I finish my tea. 'Thanks for taking the pressure off. Anyway, I should get going. I promised my housemate I'd go to the gym with him.'\n\nShe takes our plates and mugs to the sink then walks me to the door. This time we have a more intimate goodbye, a steamy kiss that makes me regret having to leave.\n\n'Have a good workout. You can show me the results when I get back.'\n\n'Now there's some motivation. Enjoy Thailand.'\n\n*\n\n'I didn't hear you get in last night,' Charlie says as we make our way to the gym.\n\n'I stayed with my colleague again.'\n\n'The same one?'\n\n'Yeah the same one. I'm not sleeping my way around the office.'\n\n'So what's the situation? Are you having fun, or is it more serious?'\n\n'It's complicated. It feels kind of in between.'\n\n'What does that mean?'\n\n'We have great chemistry, but anything long-term might be difficult.'\n\n'How come?'\n\n'She's older.'\n\n'How much older?'\n\nI puff out my cheeks, knowing how he'll react. 'Thirty-nine.'\n\n'Shit, you weren't kidding. Are you sure you have that much in common?'\n\n'More than any woman I've ever met. That's what makes it complicated.'\n\n'Just think though: in ten years, she'll be nearly fifty. She might have a MILF vibe now, but can you really live with that age difference the older she gets? And what if you ever want kids? Her biological clock is ticking.'\n\n'Mate, don't call her a MILF. She's more than that.' I catch his raised eyebrow in my peripheral vision. 'Anyway, none of that matters unless she feels the same way.'\n\n'I'm just saying I'd keep things casual. Enjoy it while it lasts, but keep looking for someone your own age.'\n\nI'm tempted to argue, but there's ultimately no point. It's a perspective I'm going to run into more often than not, and if the shoe was on the other foot, I'd probably be telling Charlie to do the same thing.\n\nWe arrive at the gym and, after warming up on the treadmills, hit the weights. As we go through our routines, I replay what Jenny said at the door: You can show me the results when I get back. While it was in jest, I can't help but push for a few more reps than usual.\n\nI keep the same intensity throughout the following week, lifting every day after work and again on Sunday. The aesthetic improvement in the mirror might be my imagination, but it's a good feeling to have been productive\u2014especially since Jenny's back at work tomorrow. As the thought of her brings a smile to my face, my phone vibrates.\n\nI'm back. Did you miss me?\n\nWho's this again?\n\nVery funny.\n\nAs always :D How was Thailand?\n\nAmazing, I wish I could have stayed longer.\n\nNot too long I hope. We have dinner plans.\n\nHave you chosen somewhere?\n\nAll booked. Just need you.\n\nOoh, I'm intrigued. Don't suppose you'll give me a hint...\n\nNope. You'll have to wait and see.\n\nSpoilsport :'(\n\nHaha. My thumbs hover over the keyboard as I decide whether or not to get playful. At this point, I can't see how she'll mind. Can I ask another personal question?\n\nI thought you'd have run out by now.\n\nIs that a yes?\n\nGo on...\n\nDo you have any red underwear?\n\nIt takes her a little bit longer to reply. I might. Why?\n\nCould you wear them for work tomorrow?\n\nAn even longer pause this time. I could... but what's in it for you?\n\nI'd know you were wearing them for me ;)\n\nHaha men! I'll think about it. I might, I might not. You'll just have to keep guessing.\n\nYou horrible tease.\n\nYou love it. See you tomorrow.\n\nCan't wait.\n\n*\n\nMy journey to work is rife with anticipation. It's a rare morning in which there aren't any tube delays, so I arrive at the office fifteen minutes early. My stomach does a little flip when I see Jenny already at her desk, taking me back to my conversation with Charlie. Seeing her after more than a week apart is the most excited I've felt in a while, adding to the mounting evidence that this is more than just a casual fling\u2014at least for me. I toss my bag under my desk then notice a red biro next to my keyboard, one I know I didn't leave there on Friday. I look over at Jenny; either it's one hell of a coincidence, or she's fulfilled my naughty request.\n\nI prepare my breakfast wearing the smile of a shared secret, and I can't remember the last time cereal tasted so good. For the rest of the morning, I steal a glance at her sumptuous behind whenever she walks past my desk, picturing the vibrant colour beneath her black jeans. My pulse races every time, and after she passes just before noon, my loins implore me to get up and follow.\n\nShe heads for the toilets along a corridor on the way to the kitchen, and I hang back for long enough to try and meet her on her way back. Lady luck is smiling down on me; just before I reach the ladies on the way to the gents, she emerges, almost bumping into me.\n\n'I think you lost your pen,' I say.\n\n'I was wondering where that had got to.'\n\nI look down at her teasing face, too preoccupied with thoughts of red to reply. I detect a whiff of her familiar shampoo, and we're almost close enough to feel each other's breath.\n\n'Are you going to let me past?' she says.\n\nA lusty haze takes over my brain. I look over my shoulder to make sure no one can see us, then gesture to the ladies toilets.\n\n'Is anyone in there?'\n\n'No, why? Oh!'\n\nI push her through the door and into the first empty stall.\n\n'What the hell are you doing?' she demands as I lock the door.\n\n'You shouldn't have worn the underwear.'\n\nShe pushes me away as I try to kiss her. 'Callum...'\n\nSubduing her hands, I find her lips on the second attempt, and she lets slip a moan that she probably didn't mean.\n\n'Callum, anyone could walk in. If we get caught...'\n\n'We won't get caught,' I whisper, 'not if we're quiet.'\n\nI push her against the door. Like in the gents, the stalls are tiny rooms in and of themselves. The doors stretch from floor to ceiling, meaning there's no gap through which to see feet, and no way to peek over the top. Her resistance wanes when I kiss her again, and while she doesn't reciprocate, she doesn't push me away. Only when I undo her jeans button does she find some resolve.\n\n'Callum!'\n\nI pull them down nevertheless, the flash of red igniting a fire in my loins. They're not basic, either, probably part of a lingerie set\u2014lacy with a small bow above the crotch.\n\n'Callum this has gone far\u2014'\n\nThe ladies door opening stops her in her tracks, and she holds her breath as a pair of heels click-clack across the floor. The door two stalls down opens and closes, and she finally exhales.\n\n'This has gone far enough.'\n\nI prod her with my tent, my ears deaf to her objection. 'I need to fuck you.'\n\nShe looks at me in stunned silence as I take out my cock, internal conflict written on her face. I spin her around. Despite her protests, she doesn't stop me. I slide down her underwear. She doesn't stop me. And I rub my tip against the folds of her pussy. And still she doesn't stop me.\n\nShe whimpers as someone else enters the toilets, forcing me to cover her mouth lest she give us away. As whoever it is passes our stall, I push my cock inside her. She inhales against my palm, her lips tight as I burrow through her reluctance. She's not wet enough to take all of me, but the risk of getting caught, combined with the panties she put on just for me, more than makes up for it.\n\nA toilet flushes a few stalls down as I build to a quiet rhythm. She gets wetter with each thrust, opening up for me as she abandons her better judgement for the cock she loves. I hear the gush of a tap a few feet away followed by the crumpling of paper towels. Who'd have thought the sound of someone washing their hands could be such a turn-on, risk turning the mundane into something insanely hot. The excitement makes me careless; I drive deeper than she was ready for, and a high-pitched squeal gets past my palm. We freeze like statues, and a woman outside taps on the door.\n\n'Is everything alright in there?'\n\n'Yes thanks, just me being clumsy,' Jenny says. 'Almost dropped my phone in the loo.'\n\nThe woman chuckles. 'We've all been there.'\n\nI thrust again. I shouldn't have, but I couldn't help myself, the thrill overriding my common sense. Jenny's mouth opens in a soundless gasp, then she shoots me a look that could kill.\n\n'Tell me about it,' she says.\n\nOur unwitting voyeur leaves, and Jenny's frown is replaced by pure surrender. She juts into me, sheathing more of my cock and inviting me to thrust.\n\n'You've changed your tune,' I whisper in her ear.\n\n'Just needed warming up.'\n\nAnd warm she is. More people come and go outside the stall, but neither of us care. As toilets flush, and faucets and dryers turn on and off, I fuck her as fast as I dare, treading a delicate line between volume and pleasure. She's doing the same, tempering her movements, wanting to be ravaged but knowing it's not the time or place. She squeezes her pelvic floor muscles, ramping up the sensation for us both.\n\n'Cum for me,' she whispers.\n\nA simple task. I pin her against the cubicle door and relinquish my load, pressing my lips into her hair in lieu of crying out. Someone else walks in mid-climax, providing an extra spike of pleasure as she walks past, oblivious to what's going on.\n\nI ease back after my orgasm wanes, giving Jenny room to move. She turns and smiles, her cheeks a subtle shade of pink.\n\n'You must've really missed me,' she whispers.\n\n'Fridays are no fun without you.'\n\n'But it's Monday.'\n\n'Maybe I couldn't wait.'\n\nAs we fix our clothes, I pay special attention to Jenny as she pulls up her underwear, sealing my load inside her. It's a perfect end to a perfect storm, spontaneity that hadn't even crossed my mind when I messaged her the request.\n\n'How do I look?' she asks.\n\n'Better with my cum inside you.'\n\nShe smiles and pecks me on the lips. 'Then I hope I'll be looking better a lot more. We should go; I'll make sure the coast is clear.'\n\nWhen all seems quiet outside, Jenny flushes the toilet for effect and leaves the stall, leaving me hiding behind the door. I hear her opening the door to the ladies, making sure no one is in the corridor.\n\n'Quick,' she says.\n\nI hurry out and turn left towards the gents, while she goes back to the office. No one would have suspected anything if we'd left together, but playing it extra safe won't do any harm. After leaving the gents, I can barely keep the grin off my face as I return to my desk, adrenaline still coursing through me. How ironic that she's reluctant to talk to me at work for fear of gossip, yet she's willing to have sex in a toilet stall.",
        "After a particularly satisfying lunch, I enjoy a productive afternoon, speeding through my work and continuing to check Jenny out whenever she passes my desk. She busts me near the end of the day, turning around with the subtlest of smiles. Women's intuition? She probably knew all along.\n\nI get a text as I'm packing away.\n\nAre you busy tonight?\n\nI break into a smile. Why?\n\nBecause I'm not done with you.\n\nIs once not enough? ;)\n\nWhat can I say, I have a voracious appetite.\n\nThen let's get you sated.\n\nI'll meet you at the tube.\n\nStill with the cloak and dagger, but I can hardly complain when she's asking for round two. I leave the office and arrive at the tube station to find her already there.\n\n'Someone's eager,' I say.\n\n'Are you complaining?'\n\n'Most definitely not.'\n\n'Good. Then let's go.'\n\nI grab her arm when she makes for the eastbound line. 'I think it's only fair we go to my place this time.'\n\nShe hesitates. 'Won't your housemates be there?'\n\n'Not for a while, I'm always the first home. None of them work with us if that's what you're worried about.'\n\nShe smiles. 'Alright. As long as you've got your own room and you don't have a bunk bed.'\n\n'Very funny.'\n\n*\n\nWe arrive at my place nearly an hour later. As soon as I open the front door, pop music greets us from upstairs.\n\n'Shit,' I say. 'That'll be Cheryl. She must've had the afternoon off.'\n\nI expect Jenny to be annoyed, but her expression is closer to amusement.\n\n'It doesn't exactly set the mood,' she says.\n\n'Think of it as a chance to expand your tastes. Come on, I'll give you a quick tour.'\n\nI take her past the living room and into the kitchen.\n\n'Ooh, I'm impressed,' she says. 'I expected the kitchen of a bunch of twenty-somethings to be a mess.'\n\n'I just keep surprising you, don't I?'\n\nShe looks back through the hall with a wicked smile. 'Are you positive it's only Cheryl in the house?'\n\n'I think so. Why?'\n\nShe closes the kitchen door and pushes me against it.\n\n'What are you\u2014?'\n\n'Shh,' she says, putting a finger to my lips. 'It's your turn to get pushed against a door.'\n\nShe crouches on her haunches and yanks down my trousers faster than I could have done myself. The music continues to blare as she takes my cock in her mouth, giving me no chance of hearing Cheryl if she comes down the stairs.\n\nAs Jenny gets to work, I wouldn't care if she did. She sucks me hard in seconds, not letting the voice of Dua Lipa hamper her skills. I look down at her head bobbing under my coat, scarcely able to believe it. None of my exes would have done something like this, and they were all outwardly more confident than Jenny. They say it's always the quiet ones\u2014maybe there's something to it.\n\nShe stands, leaving me wet and sloppy, continuing the fun with her hand. 'Let's take this somewhere more private.'\n\nWith the eagerness of a puppy knowing it's about to be fed, I pull up my trousers and lead her upstairs, taking care to be extra quiet as we pass Cheryl's door. Luckily she doesn't emerge, and I sneak Jenny to my room without anyone being the wiser.\n\nShe goes straight back to my cock, keeping it hard as we shed our clothes. When she whips off her top to reveal a white bra, I can't help but chuckle.\n\n'What?' she says.\n\n'Doesn't exactly match the knickers.'\n\nShe unhooks it with a smile, allowing it to fall to the floor. 'Problem solved. Now get on the bed.'\n\n'Are you giving me orders in my own house?'\n\n'Yes, because I didn't get to cum earlier. So I'll repeat: Get. On. The. Bed.'\n\nNot needing to be told a third time, I lie back, stark naked. She puts on a show in removing her underwear, imparting a sexy jig in her hips as she slides them down her legs before tossing them onto my chest. Naturally, I pick them up, and my cock swells when I realise they're damp. With ravenous eyes, she climbs on the bed and straddles my hips, flattening my longing erection against my stomach. Taking my hands, sharing a grip on the garment that started this whole thing off, she grinds.\n\nI've never felt so willing to be used. As her breathing quickens, giving way to soft moans and then yearning whimpers, it's clear she only has one outcome in mind. I'm nothing more than a tool, a living dildo for her pleasure. There's no sentiment, no emotion; nothing about me matters but the hard cylinder between my legs she can rub her clit on.\n\nAnd rub she does, causing me mild discomfort as she pushes me into the bed. Not that I care; the sight and sensation of her on top of me provides perfect compensation. Her breasts sway, bumping together like two peach pendulums; her dishevelled hair whips at her face; and her creamy thighs bring a pleasant warmth to my waist. Tightening her grip on my hands, she rocks faster upon discovering an angle she likes, no longer caring that we're not alone. For the first time, I'm thankful for Cheryl's music as a means of drowning out her groans, and when she tenses, I know what's coming. She bucks into me a final time then lifts her hips, dousing my cock, stomach, and thighs with an incredible squirt before collapsing beside me.\n\n'Feel better?' I ask as she catches her breath.\n\n'Much better. I've needed that since lunchtime.'\n\n'Believe me, I could tell.'\n\nShe giggles, then catches me looking down at my cock, glistening with her pussy juice and still granite-hard. 'Don't worry, I haven't forgotten about you.' She reaches for me and strokes. 'Cum for me, sweetheart.'\n\nHer words combine dreamily with her hand, and I close my eyes to let the sensation take over. 'Keep talking.'\n\n'Ooh, you like it when I talk dirty. I want your load, baby.'\n\n'Jenny...'\n\n'Shoot it from your huge, hard cock.'\n\n'Jenny...'\n\n'Every single drop.'\n\n'Fuuuck.'\n\nIt splashes all over my stomach and chest: thick, abundant, and warm. I try not to groan in spite of the music, instead kissing her as she strokes me through the pleasure. I'm left a carnal canvas, covered in both our orgasms while she remains dry.\n\n'Was making me a mess your plan all along?' I ask.\n\n'That's what you get for dragging me into a toilet stall.'\n\n'You liked it, though.'\n\n'Ditto for you just now.'\n\n'Fair point. Do you want to stay over? I could cook us some dinner.'\n\nShe smiles. 'It's sweet of you to offer, but I should go. I can't exactly go to work tomorrow in the same clothes\u2014especially the underwear. Speaking of which, do you mind if I have them back?'\n\nI look at the crumpled ball in my hand. 'I was hoping you'd let me keep them,' I joke. Well... half-joke.\n\n'You'll see them again, sweetheart. That's a promise.'\n\nI chuckle.\n\n'What?' she asks.\n\n'You keep calling me \"sweetheart\".'\n\n'Do I?'\n\n'Um-hmm. I've never had a pet name before.'\n\n'I have to call my pet something.'\n\n'Is that all I am to you?'\n\n'Well you do come on command.'\n\n'I walked into that one, didn't I. Do you want a shower before you go?'\n\n'I'll be fine. Besides, I think you need one more than I do.'\n\nShe kisses me then starts getting dressed, leaving me with a knot in my stomach as I watch her from the bed. I don't want her to go, but it's a feeling I'll have to get used to, knowing her and I probably won't last.\n\nShe smiles at me. That cute, irresistible smile. 'Penny for your thoughts?'\n\n'Nothing interesting.' I wipe myself clean and throw on a pair of jogging bottoms and a t-shirt. 'Before you go...'\n\nI kiss her lips, pulling her by the arse as far into me as physics will allow. She seems taken aback at first, but then wraps her arms around my neck, melting into a moment she hadn't expected. It goes on for some time, and I have no desire for it to end as I relish her lips and tongue, ensuring we'll be able to taste each other long after she leaves. I bite her bottom lip as we part, lingering on it for a fervent few seconds.\n\n'Wow, that was intense,' she says. 'Are you sure there isn't something on your mind?'\n\n'Yeah, just being a good pet.'\n\nWe creep out of my room, still trying to be as quiet as possible. It's all going to plan until, when we're halfway downstairs, Charlie arrives home from work.\n\n'Alright Callum?' he says, although he's clearly looking at Jenny.\n\n'I'm good, mate. This is Jenny, my colleague.'\n\n'Nice to meet you,' she says.\n\n'Likewise.'\n\n'I'll see you tomorrow, Callum,' Jenny says, passing Charlie on her way out.\n\nI close the door and jog back upstairs before he can say anything. It's not that I'm unwilling to talk about it, I just need to freshen up first. I take a shower, put on fresh clothes, then go to the kitchen to start dinner.\n\n'I take it that's her,' Charlie says.\n\n'Yeah.'\n\n'I can see why you like her.'\n\n'It's not just that.'\n\n'So you've got it bad, huh?'\n\n'Worse than I like to admit.'\n\n'I'm not having a go, but are you sure the MILF thing isn't just a novelty?'\n\n'I told you not to call her that. She's not a fetish.'\n\nHe holds up his hands. 'My bad, I didn't mean anything by it. I'm sure she's nice, but it's strange to see you with someone so much older. What would you get from being with her long-term?'\n\nI sit at the table with a sigh. 'Christ, that sounded like something my mum would say.'\n\n'So would mine if I brought a thirty-nine-year-old home.'\n\n'I'm not saying you don't have a point, but the more time I spend with her, the less I think it matters.'\n\nAs Charlie plates up his dinner and joins me at the table, Dua Lipa finally stops, replaced by the unmistakable clunking of Cheryl coming downstairs. She breezes into the kitchen.\n\n'Hi Chez,' Charlie says.\n\n'Hiya, how are you both?'\n\n'I'm better than Callum. He's having some trouble with the ladies.'\n\n'Oh really?' she says with an intrigued smile. 'What kind of trouble?'\n\n'I wouldn't call it \"trouble\",' I say. 'He's exaggerating, as usual.'\n\n'A conundrum then,' Charlie clarifies.\n\n'Anything I can offer a woman's perspective on?' Cheryl asks.\n\nI chuckle. Why do people always make others' love lives their business? Because it's fun, I suppose\u2014I can't say I've never done it.\n\n'I like her,' I say, 'but I'm not sure if she's on the same page.'\n\n'Why not?' she asks.\n\n'There's quite a big age gap. She's thirty-nine.'\n\n'Forget about age difference; how does she act? Does she go out of her way to spend time with you? Does she share intimate details about herself? Does she drop hints about the future?'\n\n'Yes, yes, and not really.'\n\n'Well, that doesn't necessarily mean she's not thinking about it. She might be having the same uncertainties you are.'\n\n'You're not exactly clearing this up, Chez.'\n\nShe shrugs. 'What can I say, women are complex. From what you've told me, it sounds like she's into you in more than just a casual way.'\n\n'So what are you saying?'\n\n'I'm saying, what have you got to lose? If you like her, you should go for it.'\n\n*\n\nFriday finally arrives. Since our Monday tryst, we resumed our policy of keeping or distance at the office, so I'm ready and rearing to make up for it. I dress a little smarter than usual, and I'm pleased to see that she's done the same. Nothing crazy, just a casual dress and a little more mascara, but it's the most made-up I've ever seen her. We leave the office separately at the end of the day and meet at our usual pub.\n\n'You scrub up well,' I say.\n\n'Thanks. You don't look so bad, yourself.'\n\n'I don't usually make this much effort. You should consider yourself lucky.'\n\nShe smiles. 'I'll decide if I'm lucky when I see where you're taking me.'\n\n'No pressure then. Drink?'\n\n'Gin and tonic.'\n\n'Coming up.'\n\nWe kill an hour before dinner, during which Jenny shows me pictures of her trip to Thailand. As she plays virtual tour guide, telling me about the various locations, my thoughts wander to how nice it would be to go on a trip with her. I don't say as much in case tonight doesn't go as planned, but it's yet another indication of where my mind's at. After a second round, we head to the restaurant, a laid back Italian place in Soho.\n\n'Not the most upmarket,' I say as we arrive, 'but I hope you'll like it.'\n\nShe stops me and gives me a kiss\u2014our first not behind closed doors. 'It's perfect.'\n\nI hold the door open for her (who said chivalry was dead?), then a waitress seats us and brings over two menus. After she leaves to fetch our drinks, Jenny glances around at the other tables.\n\n'Is everything alright?' I ask. 'You seem a little on edge.'\n\n'Yeah, I was just... never mind.'\n\n'Looking at the age difference of other couples?'\n\nShe smiles sheepishly. 'You got me. Sorry, I couldn't help it.'\n\n'Don't worry about it, no one cares. And if they do, they aren't giving their own date the attention they should be.'\n\n'You're right. You'll have my undivided attention from now on.'\n\n'Good. So what do you fancy? Other than me, obviously.'\n\n'Obviously. I'm going to go for the tortellini.'\n\n'Decisive.'\n\n'I'm a woman who knows what she wants.'\n\nShe couldn't have given me a better segue into asking about us. I'd been hoping to wait until later in the evening, but presented with the opportunity, I may as well get it over with. The waitress comes back with our drinks, takes our orders, then heads back to the kitchen.\n\n'Speaking of knowing what you want,' I say, 'what do you want?'\n\n'What do you mean?'\n\n'This. Me and you. What do you want from it?'\n\nShe takes a sip of her wine. 'What's brought this on?'\n\n'I've been thinking about it for the last couple of weeks. At first I thought it would be just a bit of fun, but it feels like more than that now.'\n\nShe doesn't reply straight away, and I can't decipher her expression. Maybe she's working out how to let me down gently. Shit, this was a bad idea! Why couldn't I have kept my mouth shut and enjoyed a nice meal? I should have at least waited until dessert to prevent the whole thing being awkw\u2014\n\n'I think it's more than that, too.'\n\nI almost knock over my beer, not sure I heard right. 'Really?'\n\nShe smiles and nods. 'I talked to Portia about us in Thailand. She said I was both lucky and crazy in case you're wondering.'\n\nI relax in my chair, the tension in my body suddenly gone. 'What made you talk to her?'\n\n'I realised I missed you while I was away. It bothered me that I wasn't going to see you that Friday.'\n\nThe waitress arrives with our meals. Jenny's tortellini looks nice, but nothing beats a hearty beef lasagne. She sprinkles parmesan over both, then leaves us to enjoy.\n\n'These both look delicious,' she says. 'You did well with this place.'\n\n'Glad you like it. I talked to my housemates about us, too.'\n\n'What did they say?'\n\n'That I should enjoy the cougar experience. But if I like you, I should go for it.'\n\n'Well, I've never been called a cougar before, but I suppose there's no harm in doing both. Are you sure this is what you want?'\n\n'Now you sound like Charlie.'\n\n'He was right to ask, though. There's a lot to consider, and we have to be honest about it. The age gap isn't going to get any smaller, and I don't want to waste my time if you're going to change your mind in however long.'\n\n'I understand that, but I don't care about age. Chemistry is the most important thing, and no one else I've met has come close.'\n\nShe breaks into a bright smile. 'Alright then, let's see how things go.'\n\nMy face lights up to match. 'So does this mean we can acknowledge each other at the office?'\n\n'I think Monday was a bit more than acknowledgement.'\n\n'Well, apart from that. On the days when you're wearing normal underwear.'\n\n'I think I can manage that.'\n\nI raise my glass. 'To saying \"hi\" in the corridor.'\n\nWe clink and continue our meal, and it's a little surreal that I'm now sitting across from my girlfriend. The label sounds strange given that we make an unlikely pair, but 'mature, brilliant womanfriend' doesn't exactly roll off the tongue. 'Partner', maybe? Labels don't matter, of course; the important thing is that we're together. We finish our main courses, then I call the waitress over and ask for the dessert menu.\n\n'I shouldn't,' Jenny says. 'I'm supposed to be on a diet, remember.'\n\n'Are you trying to look good for someone?' I tease.\n\n'Maybe.'\n\n'You may as well. Tonight's my treat, so you should make the most of a freebie.'\n\n'What? No, I didn't expect you to pay. I'm happy to split the bill.'\n\n'I know you didn't, but I want to. Call it a thank you for being a good date. You haven't looked at your phone once.'\n\n'Alright, but next time's on me.'\n\n'Deal.'\n\n'In the meantime, let's see what the most expensive thing on this menu is.'\n\nShe's joking, although it wouldn't matter if she wasn't. We both order lemon gelato, and pair it with more of the easy conversation we've always had.\n\n'Thank you,' she says, kissing me as we leave the restaurant. 'That was the best date I've had in a long time.'\n\n'It doesn't have to be over yet. Do you want to go somewhere for another drink?'\n\n'No.' She stops and hugs me around the waist. 'I want to go back to mine so I can thank you for a lovely evening.'\n\nThe mischief in her tone leaves no room for misinterpretation. 'You know, I didn't buy you dinner to get in your pants.'\n\n'I know, but I want you in them anyway. And besides, I have a surprise for you.'\n\nBetween her mystery surprise and another drink, there's only one winner. We head back to hers, kick our shoes off, and she sits me down on the sofa. I don't take my eyes of her as she closes the curtains and turns on a pair of lamps to set the mood.\n\n'How long are you going to keep me waiting?' I ask.\n\nShe looks at me with an impish smile. 'Just a little while longer. Wait here.'\n\n'Don't be too long.'\n\nSashaying to the sofa, she gives me a kiss that promises more. 'See you soon, sweetheart.'\n\nShe disappears to her bedroom, leaving me with only my hormones for company. I feel like a kid on Christmas Eve night, the seconds feeling like minutes and the minutes like hours as I wait for Santa to arrive. Except instead of Santa, it's someone much, much better. I finally hear her emerge, and I look over my shoulder towards the sound of approaching footsteps.\n\n'You'd better not be looking,' she says, waiting tantalisingly out of sight behind the wall. 'Close your eyes.'\n\nI reluctantly comply. 'They're closed.'\n\nHer footsteps round the sofa, each more seductive than the last. She stops, and I place her in my mind's eye: between the coffee table and the TV, the bookcase behind her and to the left.\n\n'You can open them.'\n\n'Wow.'\n\n'I'm guessing that means you approve.'\n\nTalk about an understatement. She kept her promise; the infamous red panties are back, this time as intended. A matching bra, garter belt, and stockings make her my lady in red, and she's topped off the look with bright ruby lipstick.\n\n'It certainly beats another drink.'\n\nShe saunters around the coffee table and straddles my lap. 'I should hope so.'\n\n'I've never seen you in lipstick before.'\n\n'Which means you've never kissed me in it, either.'\n\nShe brings her lips to mine, putting me further under her spell. It's already better than I'd imagined: the waxy texture of her lips, the delicate lace against her soft skin, and her grinding hips rousing my cock to its zenith. After a few minutes of making out, she pulls back with a smile, presumably at the latter.\n\n'How are my lips?'\n\n'You should surprise me more often.'\n\n'Oh sweetheart, we've barely scratched the surface.' As I ponder what that could mean, she nuzzles my neck, trailing gentle kisses up to my ear. 'How do you feel about anal sex?'\n\nMy stomach drops to the soles of my feet. Judging by the way she giggles, my expression must be a sight to behold.\n\n'Cat got your tongue?' she asks.\n\n'Are you serious?'\n\n'Of course. We have something to celebrate.'\n\n'I've... never done it before.'",
        "'Good. You never forget your first time.'\n\nShe gets off my lap and holds out her hand. Still in disbelief, I intertwine my fingers with hers and allow myself to be led to the bedroom. How did she turn out to be so perfect? This quiet and unassuming, yet unbelievably sexy woman, who loves dogs and books, who has engaged my mind in ways no one my age ever has, wants\u2014correction: asked for\u2014my cock in her arse.\n\nThey say good things come when you least expect them, but this takes that to a ludicrous extreme. Even as she takes lube from her underwear drawer, putting her intention beyond doubt, part of me is still waiting to be told the whole thing is a joke.\n\nShe helps me out of my clothes then takes me to the bed. Sitting on the edge, she strokes me as we kiss, the pleasurable calm before the uncharted storm.\n\n'I take it you've done this before,' I say.\n\n'A few times.'\n\nI puff out my cheeks.\n\n'Does that bother you?'\n\n'Not at all. It just makes me wonder what other experiences you've had that I haven't.'\n\n'In fairness, I have been around a lot longer than you.'\n\n'I suppose...'\n\nShe takes my hand, smiling a disarming smile. 'I can't wait to share this with you. It's going to be special.'\n\n'As long as you manage your expectations.'\n\n'Callum, you're worrying over nothing. I've been with guys who appreciated me, I've been with guys who made me laugh, and I've been with guys who made me cum. You're the first who does all three. So stop stressing and enjoy it, because I sure will.'\n\nI pull her close and rekindle our kiss, her words allaying my concerns. I take the lube from her, and she lies on her front. I love the contour of her back, how it snakes in then out, culminating in her beautiful, buxom behind. Positioning myself between her legs, I relieve her of her panties, releasing the familiar aroma of her sex. With a few quick squirts, she tenses as the clear dollops land on her arse.\n\n'Cold?' I say.\n\n'A little. Why don't you warm me up?'\n\nI massage the lube into her cheeks, giving them the shine of a burnished marble floor. 'So, when did you first do anal?'\n\n'With my second boyfriend, when I was eighteen. It was an absolute disaster.'\n\n'How come?'\n\n'We had no idea what we were doing. My parents were quite conservative when it came to sex, so I made a point of going through a rebellious phase. Trying anal was part of it. It hurt like hell.'\n\n'Serves you right,' I tease.\n\nShe laughs. 'I thought that, myself. The good news is that this is guaranteed to be better.'\n\n'Sounds like it can't be worse.'\n\n'That's for sure.'\n\nI knead her bum with greater pressure, spreading her cheeks to reveal the goodies beneath. Her bud looks so small and tight, and the prospect of me fitting in there seems ridiculous. Her pussy's a sight for sore eyes, too: puffy, glistening, and deliciously tempting. It's almost a shame it won't get the attention it deserves.\n\nFeeling bolder, I lean in to add my lips to the massage. While kissing arse is looked down upon in the figurative sense, in the literal, there aren't many things better. Spreading her cheeks again, I act on a whim and take the plunge, licking the length of her taint. She makes a muffled noise alongside a shudder, brushing her cheeks against the tip of my nose.\n\n'No?' I say, unsure whether it's a good or bad reaction.\n\n'Yes, sweetheart. Definitely yes.'\n\nI do another pass, this time extending it to the rim of her arsehole. She signals her pleasure with a series of moans, jutting her bum into my face. Throwing caution to the wind, I progress from taste to feast, licking her most intimate area to a polished shine.\n\n'Oh, just like that.'\n\nShe needn't have told me. The aroma of her pussy makes her appreciation obvious, and I lap and swirl and poke and flick until she's frustrated by desire.\n\n'Come here,' she pleads.\n\nI crawl alongside her, where she catches me off guard with a ravenous kiss. She demands my tongue, not satisfied until she's stripped every taste bud of forbidden flavour. I can't believe how wrong I'd got her once upon a time; I'd assumed her reticence would extend to the bedroom, yet beneath the surface lurks an insatiable fiend\u2014one I hope has many more secrets to share.\n\nShe exits the kiss with a bite of my lip. 'Not bad for someone with no experience.'\n\n'Maybe I'm just talented.'\n\n'Then you'd better show me what else you can do.'\n\n'Ready when you are.'\n\n'Start with a finger and we'll work our way up.'\n\nI go back to my original position and squeeze out a generous dollop of lube. Rubbing it into her bud in gentle circles, I gradually apply more pressure to ease past the tight muscle.\n\n'That's it,' she says, 'just push a little more.'\n\nI do so, and my fingertip enters her with a soft pop.\n\n'Mmm... now go slow.'\n\nWith a surgeon's focus, I wiggle my finger, inching deeper until I'm in to my knuckle. She's so tight around me, once again raising the question of how the hell my cock is going to fit. Logistics aside, I heed her instructions and try to respond to her cues. She guides me well, and her insides become more malleable as her muscles relax.\n\n'Try another,' she says.\n\n'Finger? Are you sure?'\n\nShe chuckles. 'Your cock is a lot thicker than two fingers, believe me.'\n\n'Fair point.'\n\nI add a second finger, and her passage stretches to accommodate, welcoming me like an old friend. I slide them in and out, before adding a third at her behest. She takes hold of the sheets, gripping them hard as she bucks into me, inviting my fingers deeper through slow and heavy breaths. With my knuckles pressed against her opening, I've stretched her more than I ever thought I could. Turns out I have a lot to learn.\n\n'I'm ready for you,' she says.\n\nMy cock twitches at the words I've been longing to hear. It's swollen and dripping despite not having received attention in a while, the act of finger-fucking Jenny's arsehole having been among the greatest turn-ons of my life. I ease my fingers out, leaving a gaping hole that dwarfs its normal size.\n\n'Plenty of lube, big boy.'\n\nI lather us both, then position myself over her. This is actually happening. From an office fantasy of a hot older woman to being on the cusp of anal sex in celebration of us getting together. I never thought I'd be thankful for overtime.\n\nHeart racing, I guide my cock into her yearning hole, exhaling a sigh as it greets me with the same tightness as it had my fingers. Jenny moans with me, and I pause with just the tip inside.\n\n'Keep going. I want all of you.'\n\nI oblige, resting my body on hers as I root myself in her bowel. The sensation sets my loins ablaze\u2014not just the friction, but the psychological implication of my first time. As I gather myself and rock my hips, I don't think I've felt this close to another human being. Maybe I'm being dramatic, but I feel like I've happened upon a hidden sexual plane, one no woman my age would have been able to reveal.\n\n'I forgot how much I love this,' she says.\n\n'Better than your first disaster?' I tease.\n\n'So much better... You feel amazing.'\n\n'So do you. I'm going to pay for dinner more often.'\n\nShe giggles, the vibrations reverberating through her body to my cock.\n\n'Fuck, don't do that!'\n\nShe giggles again.\n\n'Jenny...'\n\n'It's your fault for making me laugh.'\n\nI retort with a firm thrust, silencing any further laughter as she cries out in pleasure.\n\n'Again, sweetheart.'\n\nI thrust again, drawing another helpless moan. 'You like that?'\n\nShe pushes against me for more, eliminating the need for words. As I draw myself out then plummet back into her depths again and again, I'm completely consumed, putting every nerve ending in my cock at the mercy of her insatiable bowel. None is shown, and with each bellowed breath onto the back of her neck, my control blissfully slips away.\n\n'Jenny, I'm gonna cum.'\n\n'Fill me up, sweetheart.'\n\nThe pet name is the final nudge. I explode balls-deep in her arse, roaring through clenched teeth as she drains me of every last drop of seed. Spent, I melt into her, resting my head beside hers on the pillow.\n\n'Did you enjoy your surprise?' she asks with a smile.\n\nI look at her thorough dreamy eyes. 'I think you know the answer to that.'\n\nI stay inside her for a few contented minutes, enjoying the feel of her skin and the snugness of her cavity as I soften inside it. When I lift myself up, I'm curious to see the results of my first anal sex, twenty-one years after hers.\n\n'Oh my god,' I whisper.\n\nShe turns to me and smiles, complementing the view below me. My load bubbles in her arse, seemingly unsure what to do in a place nature never intended it to go. Jenny shakes her bum, doubtless knowing I'll appreciate the spectacle, displacing a few drops that trickle down her taint and over her pussy. In my post-orgasm bliss, I can't recall a finer sight.\n\nAfter taking a shower, we cuddle naked in bed, Jenny's soft, fragrant hair fanned over my shoulder and chest.\n\n'So how does it feel to be a member of the club?' she asks.\n\n'I hope it meets on a regular basis.'\n\n'I'm sure there'll be more special occasions.'\n\n'I look forward to them. So where do I rank on your list of anal conquests?'\n\n'Conquests? You're making me sound like a sex-crazed warlord.\n\n'A guy can dream.'\n\nShe chuckles into my chest. 'You beat my first boyfriend, you'll be glad to know.'\n\n'But...'\n\n'But nothing can be perfect first time, so you'll have to keep practising if you want to get to the top of the list.'\n\n'Thanks for the free pass,' I tease. 'I'll let you know how it goes.'\n\n'Now let's get one thing straight.' She takes my hand and plants it on her bum. 'This is the only butt you're allowed anywhere near.'\n\nI give it an obligatory squeeze. 'Then it's a good job it's such a fine example.'\n\nShe kisses me goodnight and turns off the light, and she feels even better in my arms now that she's mine. Closing my eyes, I let her warmth, scent, and soft breathing lull me to sleep.\n\n*\n\nI awaken to the sound of a flushing toilet. Jenny walks through the bedroom door a few seconds later, still naked and gorgeous as ever.\n\n'Morning,' I say. 'You never told me it was a room with a view.'\n\n'You're lucky I didn't charge you extra.' She climbs back into bed. 'Now that you're awake, there's something I need to ask you.'\n\n'Hold that thought, I need to pee too.'\n\nI get up and jog to bathroom. After draining my bladder, I join her back in bed, cuddling up to her to retrieve some lost warmth.\n\n'You make for a pretty good view, yourself,' she says.\n\n'Must be all the hours I put in at the gym this week.'\n\nShe kisses me on the lips. 'Time very well spent. Anyway, I'm going off topic. I need to ask you a question.'\n\n'Shoot.'\n\n'Now you've had the chance to sleep on it, are you absolutely sure that me and you is what you want?'\n\n'Of course I am. What's brought this on?'\n\n'I just want to make sure you've thought it through. Forget how you feel now, think about how you'll feel in two, five, even ten years' time\u2014\n\nI shut her up with a kiss, imbuing it with enough passion to try and show her how wrong she is. 'I'm going to say this once more. I. Don't. Give. A. Shit. About. Our. Ages. Understand?'\n\nShe smiles, only reaffirming my desire to be with her. 'So you're one hundred percent okay with me being old enough to be your mother.'\n\n'Oh, come on,' I scoff. 'You would've had to have had me at sixteen.'\n\n'Still.'\n\nThe seed of a kinky idea sprouts in my head. 'Anyway, would that be such a bad thing... mum?'\n\nShe lets out a genuine gasp. 'You can't say that! You have an actual mother.'\n\nI get on top of her, pinning her under my body. 'I know, but she's not as sexy as you.'\n\nI kiss her before she can object any further, already turned-on by the prospect of a taboo roleplay. Leaving her lips to trail kisses down her neck, I arrive at her chest, finding it a little more flushed than usual in spite of her reservations.\n\n'You should want to make your son happy.'\n\n'Callum, this is so wro\u2014ohh...'\n\nI suck on her inviting nipple, almost hard enough to pierce my tongue. She moans her appreciation as I pay it the reverence it deserves, her responding body drawing her into the fantasy.\n\n'That feels good, sweetheart,' she coos, squeezing her other tit. 'Suck on mummy's teat.'\n\nI wasn't prepared for the rush of blood her words send to my cock. It hardens to its zenith in the blink of an eye, pressing insistently into the folds of her pussy.\n\nShe giggles. 'Wow. That escalated quickly.'\n\nI depart her nipple to ravage her mouth, letting her know how right she was. Ever in tune with my desires, she enthrals me with her expert tongue, entering it into a passionate dance with my own.\n\nPulling away with a lick of my lips, she whispers, 'Do you want to fuck mummy?'\n\n'God yes...'\n\nShe breaks into a wicked grin. 'Well, you'll have to wait until she gives you permission.'\n\n'Are you serious?'\n\n'Good boys listen to their mothers. Are you a good boy?'\n\nI rub my wet, horny cockhead against her teasing cunt, the temptation to enter her overwhelming. She smiles up at me, waiting to see if I have the will to resist.\n\n'Fuck, you're evil,' I growl, reluctantly pulling away.\n\n'Ooh, I admire your self-control. I must've raised you well.' She gets out from under me. 'Lie on your back.'\n\nI don't move, curious to see how she'll react to my defiance. She kneels behind me, hugging me around the waist and kissing my shoulders. 'Boys who don't listen don't get rewarded. And I want to reward my baby boy.'\n\nEach word sends a chill down my spine, and I lie back without further protest. I hadn't expected her to indulge the fantasy this much, and it sends my anticipation for what's to come next flying off the charts.\n\n'That's a good boy.'\n\nShe grazes her nails along the length of my cock, an ephemeral pleasure that's almost torture. Flicking her hair over one shoulder, she stretches out her body, knowing I love the sight. I drink in her creamy tits, the soft slope of her stomach, and the wide hips I love to grab.\n\n'Didn't anyone ever tell you it's rude to stare?' she says.\n\n'They did, but none of them had a mum like you.'\n\nShe smiles, kneading her breasts and tweaking her nipples to ramp up my longing. My cock is like a bollard, perpendicular to my body as it throbs in protest at being made to wait.\n\n'That's sweet of you to say. Are you sweet enough to help mummy with something else?'\n\nMy pulse quickens. 'Like what?'\n\nShe moves her hands between her legs, spreading her pussy lips so I can see every petal. 'Your dad has been really busy lately... He hasn't had time to give me the attention I need.' She pouts like a child who hasn't got what she wants, all part of the game. 'My pussy hasn't been licked in so, so long.'\n\nWith a rumble in my throat, I beckon her towards me. She walks on her knees over my body, passing agonizingly close to my erection, which I so desperately want her to sink down on. Eating her pussy isn't a bad second prize, though, and I inhale its familiar scent as she hovers over my face.\n\n'Why would dad neglect this?' I say.\n\n'I don't know, sweetheart, but she's been very, very lonely.'\n\nShe lowers herself, just enough for her trimmed pubes to graze my mouth, before pulling away. It leaves a faint residue behind, which I lick from my lips.\n\n'My, my, somebody's eager. How do I taste?'\n\n'I didn't get enough to decide.'\n\nShe smiles and lowers herself again, this time for long enough for me to draw a long, slow lick up her slit. Again, she pulls away. 'Better?'\n\nI grab her hips to yank her back down, but she bats my hands away.\n\n'Ah-ah. You know the rules about permission. Break them and you won't get your reward.'\n\n'Mum...'\n\n'Yes?'\n\n'I want to give you what you need.'\n\nShe smiles again. 'I'm glad I raised you to be so generous.'\n\nShe hunkers down, this time grinding her pussy into my face. I lap at her folds as best as I can while she rocks with ever more enthusiasm, occasionally bumping the tip of my nose with her clit. I can't be precise, raising the question of whether her whimpers are due to my tongue or the taboo nature of the fantasy.\n\n'Mmm sweetheart, it's been so long.'\n\nI don't attempt a reply, stifled as it would be under her wet sex. I play the part of being used, agonising over not being allowed to touch her as she paints my face arousal. My mind wanders back to before all this started, stealing glances at her in the office and wondering what she'd be like behind closed doors. It's nice to have your expectations surpassed.\n\nThe air feels cool against my face as she pulls away. She smiles down at the mess she's made, and I return it, a silent promise that this will reach its taboo conclusion. Lining her pussy over me again, she spreads it wide open, revealing her swollen clit in all its glory.\n\n'Do you want to make mummy happy?'\n\nI nod.\n\n'Do you mind that she's a squirter?'\n\nI vehemently shake my head, drawing a chuckle from her devilish lips. I extend my tongue to meet her nub, and she exhales a series of cute staccato whimpers as I tease her, sometimes flicking, sometimes circling, sometimes softly, sometimes hard. The result is her shaking for more, begging me with desperate noises that eliminate the need for words.\n\nI devour her clit, pressing my nose into her musky patch of hair. She gasps at the escalation, catching herself on the headboard to prevent herself toppling forward. I work my tongue until it aches, buoyed by her rapid breaths and squeezing thighs. Such is my enthusiasm, I keep pushing her away, so I grab her bum to keep her in place. I doubt she'll care about my flouting of the rules, and I'm vindicated by her complete and total surrender. She bucks her hips, suffocating me with her smouldering heat.\n\n'Callum...'\n\nMy name sounds desperate from her lips.\n\n'Oh Callum.'\n\nI clasp her arse as hard as I can, marking her skin with my nails as I feast on her pussy.\n\nWith a final cry, she jerks back and jettisons her orgasm onto my face. It's a sensation unlike any other, like I'm a canvas on which she can paint her pleasure, an object in the best possible way. When she has no more left to give, she looks down at my sodden face, still clutching the headboard, face red and shiny with sweat.\n\n'Was that better than dad?' I say.\n\n'Much better.' She bends down to lick my dripping chin. 'So good in fact, I think you deserve a reward.'\n\nShe turns to face the opposite way and slides back, inching her freshly climaxed pussy towards my face. Its balmy touch coincides with her lips enveloping my cock, and she settles into me, our warm bodies fitting together like a jigsaw.\n\nMy hands languish desperately at my sides, having gone back to observing her no contact rule. I know she won't punish me if I break it now, but on the other hand, what if she does? It feels silly to ask at this stage, but knowing the pleasure Jenny's blowjobs bring, I'd rather feel silly than go without.\n\n'Can I touch you?'\n\nShe giggles, spitting me out to answer. 'Wherever you like, sweetheart. You've earned it.'\n\nI start at her waist, then slide my hands over her hips to spread her cheeks wide. The aroma of her pussy is astounding, yet another reason why she's the most compatible lover I've ever had. I gently lick what's mine, keeping her sensitivity in mind as she returns to work on me. She lathers me with saliva, swirling her tongue over every nerve as she draws her lips up and down. It becomes a struggle to focus on her as she gargles and moans, some of them natural, others manufactured for my pleasure. Again, I bid silent thanks for her experience, her formulation of the perfect recipe she's now following with me: enthusiastic, loving, and making me believe there's nothing she'd rather be doing than sucking my cock.",
        "She brings me to the edge before tantalizingly backing off, repeating the process until I'm primed to explode. When there's no room left in my cock for even one more drop of blood, she departs it with an exaggerated slurp.\n\n'Are you ready to fuck mummy?'\n\nThe words are almost like the act itself, and I clench to hold on to my load. She squeezes my base to help the feeling pass, then crawls to the end of the bed, bowing her head and sticking her bum in the air.\n\n'Show me what I've been missing.'\n\nI get to my knees and cross the bed, positioning myself over my 'mum'. My nail marks are still visible on her cheeks, lustful decoration around the perfect arsehole and pussy that now belong to me. I spank her flesh, imparting some colour as she squeals in delight. She shakes it, looking back at me with I smile that I can tell will precede some filthy words.\n\n'I want my son back where he came from.'\n\nThat does it. I bury my cock deep inside her, pushing her face into the mattress. I've never known a cunt so welcoming and wet, and the pleasure that had quelled since her blowjob returns with a vengeance. It puts me on borrowed time, and I strive to make the most of it, pounding my substitute mother with all I've got.\n\n'Does dad fuck you like this?' I growl.\n\n'No even close,' she stammers. 'Why do you think I wanted a son?'\n\nMy cock swells at her words, perfectly crafted to drive me crazy. 'Mum...'\n\n'Keep going. I'm almost there.'\n\nI tighten my hold, thrashing to make her cum a second time. The clap of flesh echoes off the walls, drowning out my groans at never having been harder, never having been so consumed by a lover.\n\nConsumed by her hot, velvet walls.\n\n'Mum...'\n\nThe intoxicating scent of her cunt.\n\n'Mum...'\n\nHer rapturous screams of my name.\n\n 'Muuummmm!'\n\nI cum helplessly as she contracts around my cock, our legs trembling as we experience euphoria together. For a few brief moments it feels like we're one and the same, as though our sensations are merged\u2014the closest two people can get to the apex of sex. With my load safely in her womb, we catch our breaths, slowly and dreamily coming back down to earth. Still shaking, she lifts herself up, sharing my need for us to be close. I massage her tits as our tongues intertwine, her messy hair tickling my face.\n\n'That was...'\n\n'Insane?' she offers.\n\n'And then some. Still think I want someone my own age?'\n\n'You might have convinced me. I can't believe we did that.'\n\n'I can't believe you got so into it.'\n\nWe finally unmerge and lie back together on the bed, the smell of sex heavy around us. 'Maybe it means we're made for each other.'\n\n'So, I take it we're officially together?'\n\n'I suppose we are. It's not going to be easy, though. A lot of people won't understand.'\n\nPulling her into me, I kiss her with a beaming smile. 'So let them. It's what we think that matters.'\n\n'Ooh, good answer... Oh my god, are you seriously getting hard again?'\n\n'It's what you to me. Fancy round two?'\n\n'Already? I guess that's a perk of having a young boyfriend.'\n\n'Yup.' I get on top of her and slide my cock back into the pussy it was made for. 'Just do one thing for me.'\n\n'What?'\n\n'Be yourself this time.'"
    ],
    "authorname": "ngnx",
    "tags": [
        "office",
        "colleague",
        "milf",
        "older woman",
        "younger man",
        "cougar"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/jenny-from-the-office-block"
}