{
    "title": "Journey of the Next Door Valentines",
    "pages": [
        "This is my entry in the Valentine's Day 2020 Contest. So, Please Vote if you read the story.\n\nThis is the story of a sad Japanese girl, who suddenly immigrates to the USA. She finds her valentine in the next door neighbor who changes her life, and he finds new value in his life because of her.\n\nPlease accept that I did not research current immigration practices and requirements, nor are they addressed in this story.\n\nAuthor retains all rights, expect those ceded to Literotica for publication.\n\nEspecially being a new author, I really appreciate comments, as they may confirm, or add perspectives to, my awareness of what this audience appreciates or dislikes. However, pedantic nit-picking comments that do not comment on the storyline will be deleted.\n\nThank you for reading my ambitions.\n\n---------------------\n\n\"Okay, Chad baby. You behave yourself over Christmas vacation. And keep those pants zipped until you get back here!\" Britney followed the exclamation point with a wet, lunging kiss, as she pressed her big tits against me. My blonde girlfriend of three months was not subtle.\n\nSwallowing, following that lubricated kiss, I asked, \"What kind of guy do you think I am!?\"\n\n\"The male kind, lover!\"\n\n\"I don't cheat on my girlfriends...well...I mean my current girlfriend!\" I had been quick enough in spotting her raised eyebrow to add, \"I was referring to 'historically', not to multiple, current girlfriends.\"\n\n\"Oh, like you wouldn't boff my roommate again, if I left you two alone for too long?!\"\n\nAmy raised her National Enquirer up higher, to cover her face.\n\n\"Britney!\" I pleaded, in frustration, \"Amy was before we met...and she is HOW we met, for crying out loud!\"\n\n\"Well, Amy would give you another bounce in a second, if I let her...wouldn't ya roomy?\"\n\n\"Shut Up, Brit!\" growled Amy's voice from behind the tabloid, which boldly proclaimed 'PREGNANT; Angelina Jolie is impregnated by an alien visitor'.\n\nI reached down and gripped Amy's toes through her sock, and then wiggled her foot. Amy's blushing face appeared from behind the descending tabloid, with eyes pleading for the embarrassment to cease. \"Alright, Amy, don't miss me too much.\" I said in a smooth, purring voice, and as my ear prepared for Britney's response.\n\nIt was Britney's turn to growl, \"If you ever want to see my titties again, you will leave now!\"\n\n\"I'm going, I'm going,\" I said, chuckling, \"See; I am closing the door. And you behave too, Brit. No playing with Santa's helpers!\" I let the door click close, and before I got in two steps, something small and hard went \"WHACK\" against the back of the door.\n\nAs I walked out of the dorm, I sighed, partly with relief. Britney was fun and hot in bed, but she was just getting weirder as time went on. I was going to enjoy the break from her. And it was always good to travel back home and see my parent's and my little brother, Paul. He would be entering college next fall, while I was currently in the middle of my junior year.\n\n=+=+=+=+=+=+=\n\nI pulled up in the driveway, and shut off the engine of my Subaru after the 8-hour drive from Logan, Utah. As I gathered my loose things that were scattered about the interior, my \"little\" brother came wandering out. Paul had a wry smile as he playfully mimicked shooting baskets. I opened the car door and shook my head. \"I don't have a chance against you, anymore!\" I proclaimed.\n\n\"Aw, come on. What's a couple inches?\"\n\n\"A couple?\" I squawked, \"You hoop shark. When I left for college last fall, you had 5 inches on me! You still 6'4\", or have you grown further?\"\n\n\"Naw\" he humorously drawled, as I got out of the car and popped the tailgate. Paul grabbed my bag, and then draped an arm over my shoulders, to emphasize the advantage he had gained in the last 3 years. \"Come on,\" Paul said, \"Just enough time before dinner to down a brewsky.\"\n\n\"And, are you still dating Sandy? I thought she was really sweet.\"\n\n\"She's ain't so 'sweet' no more...you know?\" Paul hummed, as he squeezed my neck with the crook of his arm.\n\n\"Just don't get her pregnant, Bro.\"\n\n\"No way! Buyin' those condoms by the gr...\" He stopped short as mom opened the front door.\n\n\"Charles David Shearborn!\" Mom gleefully squealed, as she dragged me away from Paul and into her arm's for her favorite motherly hug. I think being mauled by a bear may be gentler, but I stood and took it, adding the appropriate, \"Luv ya mom. Missed ya so much.\" Then, I waited for her echo...I really do love her, but she is so predictable.\n\n\"OH, I have missed You SO much!\" Come in and say 'hi' to your dad!\"\n\nAs I walked into the family room, dad said \"Well!\" and hit the mute button on the TV control before he rose from his leather recliner. He walked over and gave me his usual awkward hug, which always consisted of approaching being a hug, but then switching to patting my back. \"Good to have you home, son. I'm sure mom is delighted!\"\n\nPaul walked up behind me, \"I put your bag in your room, bro. Want that brewsky now?\"\n\n\"PAUL!\" mom cried, in that anguish of parent unwilling to acknowledge the growth of her children.\n\n\"My baby boy!\" she pleaded. Paul walked up to her and looked down at her, a foot shorter than him. In an even deeper voice, Paul purred, \"May I have a beer, mother, dear?\"\n\nShe looked way up, and swatted his chest with an open hand, \"Alright, go ahead...if you must.\"\n\nPaul grinned and turned to the fridge, and then used his huge paw to grab the neck of three beer bottles at once, before handing one to me.\n\n\"You both grew up too fast!\" mom lamented.\n\n\"Hazel, dear...let them be adults now. They didn't give us many gray hairs growing up...I think they have earned the honor,\" dad said, as he took the beer that Paul handed him.\n\n\"But Charles has already left, and next fall Paul will leave!\" mom whined, \"Then it will be just you and me.\"\n\n\"You'd think that was a death sentence!\" Dad chuckled, as he clinked bottles with me and Paul.\n\n\"You know what I mean, Howard\" mom countered.\n\n\"No, I am not so sure I do, dear. I am proud to have raised two fine boys. But I am looking forward to spending time with the woman I love; just the two of us... maybe traveling, visiting friends and family. And maybe, some private time with the hot babe who enjoyed creating these two children!\" Dad said, as he winked at me &amp; Paul.\n\n\"HOWARD SHEARBORN!\" mom screeched, \"Not in front of the children!\"\n\nDad, Paul, and I all chuckled, heavily, as mom quickly turned her blushing face away, and vigorously stirred the mashed potatoes. \"Dinner will be ready soon. Now go away!\" she commanded.\n\n=+=+=+=+=+=+=\n\nMuch of the time I was at home had been charmingly predictable, yet enjoyable; a family Christmas, tons of food, and too many repeat stories of our childhood. With only today and part of tomorrow left before my return to the 'loving' arms of Britney, mom announced that the next door neighbors, the Timmons, would be joining us for dinner tonight.\n\nThen, while we were alone in the kitchen, mom dropped 'the bomb'. \"Chad, dear, Cal &amp; Tricia are coming over with their new 'daughter'. Paul will not be here, as you know, since he is having dinner at his girlfriend's, with Sandy's parents, too. SOooo....I would like you to help take care of their 'daughter'.\"\n\nHaving not paid enough attention to mom's inflection of the word 'daughter', I nearly choked out my words, \"Mom? What do I know about caring for a baby?!\" I plopped down in a chair as my mind rattled around too many possibilities.\n\n\"Oh...no, no! She is not a baby. I need to explain. You remember that Cal Timmons had a brother in the Air Force, Taylor, who died five years ago in that transport plane crash, in Japan?\"\n\n\"Yes\" I said, suspecting mom could read the caution and curiosity in my brief response.\n\n\"Well...Taylor had an affair years ago while stationed in Japan, which produced a daughter. That is why he remained stationed in Japan, and in the military so long. Now the girl's mother has been killed when her chauffer made a wrong turn and the car was struck by one of those huge, semi-type trucks. Taylor's daughter had no other relatives in Japan that she could live with, so Carl &amp; Tricia welcomed her to come to the USA, and want her to consider this her home, and to which she can return to from college.\"\n\n\"College?...How old is she!?\" I said, obviously startled.\n\n\"Just turned 18, and got here just four days ago. And, she does not speak English, yet.\"\n\n\"Well, you know I do not speak Japanese, so what are you hoping I can do?\" I responded, in clear confusion.\n\n\"You will be the only the person at dinner close to her age, and as far as I know, the only person close to her age she has even met since she arrived in the USA. You'll also be the only 'non-adult', so -- maybe -- you can just make her feel a bit less uncomfortable. I suspect she has had so much upheaval in her life over the last month that she could really just use your handsome, friendly smile and those happy Shearborn-blue eyes...you know?\"\n\n\"Okay,\" I sighed, \"I'll try to help.\"\n\n\"That's all I am asking for,\" mom said, with a small, happy smile, and she reached over to ruffle my dark blonde hair, \"I knew I could count on you to welcome her to our country, and our home.\"\n\nResignedly, I queried, \"So, what's her name?\"\n\n\"Actually, Tricia forgot to tell me. She has been really rattled with all of the sudden changes, and she left that information out.\"\n\n\"This should be an 'interesting' dinner,\" I mused, more into the air, than directly to my mother. I was having visions, which even I acknowledged to myself were bad stereotypes, of some tiny, moon-faced girl in one of those black &amp; white school uniforms, and who had bangs in her black hair, which I saw as chopped off, just above the shoulders. Then my mind added thick, black-framed glasses, and that she only giggled.\n\n\"I'm sure you will like her!\" mom added, in hopeful cheerfulness.\n\n\"Sure, mom,\" I said, trying to reassure her, before my mind echoed \"Yeah, sure I will. Some dorky girl I can't talk to, and who will probably just follow me around like some lost dog. And she is my next door neighbor now, too. Great!\"\n\n=+=+=+=+=+=+=\n\nMy parents greeted the Timmons at the front door that evening, but the first person that came through the door was presumably this new 'daughter', and my stereotypes were collapsing, rapidly. The Timmons then stepped in behind her, with Tricia sweeping her hand in front of my mom &amp; dad and said, \"Mister and Misses Shearborn.\"\n\nThe young woman was taller than I expected, probably 5'6\" or so. She gave a slight bow of her head and shoulders, and only said, \"Hai\", which I knew from the movies was, at the least, like a \"Yes\". Her voice seemed too small and high pitched for her size.\n\nTricia then announced, \"This is Kokomi Ishikawa.\"\n\n\"Hazel\" my mother said, pointing at herself, and Kokomi gave another bow and then stumbled through her response of \"Hai, Haz...erl.\"\n\nDad was next, pointing at himself, \"Howie,\" realizing to give her a break from another \"R\" to pronounce. Again her bow, and the stumbling \"Hai, How...ee.\"\n\nNext Tricia waved a hand at me and gave me a wink. \"Chad\" she simply offered.\n\nKokomi glanced at my face, and then quickly diverted her big almond-shaped eyes downward. No bow of the shoulders followed, but I did get a small nod with a \"Hai, Chod.\" I caught a restrained smile rising into her high cheekbones and suddenly realized that the high cheekbones did not fit my stereotype, either.\n\nMom asked all of us to, please, sit in the living room, after she had taken their coats, saying she would get the appetizers. The Timmons and Kokomi arranged themselves on the long couch, while I sat in the adjacent matching side chair, which was nearest Kokomi. Dad sat in one of the two chairs that faced the couch. Dad and the Timmons were just finishing the first round of \"How have you been...Good, good\" when mom returned with the appetizers.\n\nDad took that as his cue to see who wanted drinks. He asked Tricia what Kokomi might want, and Tricia said, immediately, Coca Cola. Kokomi quickly looked at Tricia, and her head nodded emphatically.\n\n\"I tried to keep the food simple, for Kokomi's sake,\" mom offered, putting down pizza rolls, a faux crab salad on rye Triscuits, and sliced vegetables with what appeared to be a sour cream-based dip. I was trying to study Kokomi, but trying not to be too obvious about it. As I watched, she deferred to Mrs. Timmons, watching how Tricia placed a selection of appetizers on the supplied cocktail napkins, before Kokomi did the same. Kokomi tried to study each item briefly, before hesitantly nibbling at each. Apparently satisfied, she consumed all three and looked rather eager when she reached for more pizza rolls.\n\nI smirked at her seeming enthusiasm for the pizza rolls, as she washed them down with Coke. Then I noticed her features, at least from a side view, were a bit longer, sharper and, with those high cheekbones, were unlike my own stereotypes of a round Asian face. Then the realization hit me that; although she was raised in Japan, she was actually half Caucasian, being Taylor Timmons daughter, and I felt extra dumb that I had applied my Japanese stereotypes to her and forgotten her being half Timmons, who were definitely white, as my family was.\n\nQuestioning what I should expect, I looked at her hair. It was a rich &amp; shiny black and was piled on her head, appearing to be comprised of coiled braids, held by a beautiful cloisonn\u00e9...something. Her skin was not quite white, but vaguely tinged towards a tannish yellow. She sat straight upright, had beautiful, unadorned hands with long fingers that had perfectly finished short fingernails. Those nails were painted in the same deep red as the silk-like blouse she wore. That blouse appeared to have a collar that continued into an elaborate bow, which was tied over her throat. Her legs were delicately crossed, with her wearing deep gray pants, and with black, low-heeled shoes, that I, somehow, remembered being called \"ballerina flats.\" She really was rather elegant in how she presented herself, with nothing shouting for attention. Yet, it still seemed a bit...well...too confident, considering her general shyness, so far.\n\nAs everyone talked, Kokomi kept her eyes down, with them only popping up momentarily when her name was mentioned. It was mom that finally addressed her directly, trying to ask if she liked the food. Kokomi didn't seem to understand, and her expression appealed to Tricia for clarification. Tricia pointed to Kokomi, then to the food, and raised her eyebrows as she rubbed her own stomach. That seemed to trigger understanding, and Kokomi looked at mom, gave her a big smile, and slowly pronounced \"Good\". Mom laughed lightly, and smiled broadly, and Kokomi's eyes turned back down, but the big smile remained on her face for a few moments. I liked that big smile.\n\nMy thoughts were starting to acknowledge that I actually thought Kokomi was a different kind of pretty, after I had realized that my brain had been too busy oscillating between searching for features of Kokomi that would confirm she was either Japanese or Caucasian, rather than both. I suddenly asked myself why Caucasian contained the word Asian. For me, the stereotypes had now disappeared and I was looking at an appealing young woman whose \"foreign-ness\" intrigued me.\n\nAfter the usual chatting, mom requested we move to the dining table, so we did. Mom suggested I sit at one end of the table and have Kokomi sit next to me. Kokomi gave me a quick glance and smile as I, almost too late, remembered to pull out her chair, before we seated ourselves, with me on her right. Then that high, small voice said, \"Arigatou\", which I took to probably be a \"Thank You\".\n\nMom brought out beef stroganoff, string beans with toasted, slivered almonds, and a tangy spinach &amp; bacon salad. Dad opened a bottle of red wine and offered it to all. When he held it above Kokomi's glass, I noted a slight blush before she responded with a nod and \"Hai, Arigatou Gozaimasu\". That last word had me wondering what it meant. As I watched her eat, I saw her movements with the fork seemed rather deliberate, particularly her stabbing at each string bean. Mom must have seen the same thing, as both Kokomi's and my head popped up when we heard mom say \"Kokomi?\" Mom was offering her a pair of lovely lacquer-finished chopsticks.\n\nAfter Kokomi readily accepted them, with another \"Arigatou Gozaimasu\", mom apologized to her for not thinking of it sooner. This got a puzzled look from Kokomi, who glanced at Tricia and saw her respond with a smile. Then for some reason, Kokomi looked to me, so I smiled with a slight nod. Kokomi turned to mom and gave her a smile and small nod. I wasn't sure what had happened in that moment, and why Kokomi had mimicked my response, but I sure enjoyed seeing Kokomi look directly into my eyes for that moment.\n\nA bit later, when there was a quiet moment in the adult's conversation, Kokomi spoke, with that same small voice saying \"Hazel\". Everyone looked at Kokomi, who was holding her wine glass in her left hand. My hands were resting on each side of my plate, as Kokomi gestured with her glass, towards her food, and said, \"Good, Arigatou Gozaimasu.\"\n\nQuite pleased, mom put her hands together like a prayer, slightly bowed her head, and cheerfully said, \"Arigatou Gozaimasu\". Kokomi was clearly surprised, and promptly set her wine glass down as she blushed, put her right hand over mine, and covered her chuckling mouth with her left hand.\n\nI wasn't the only one that looked in shock at Kokomi's hand covering my closed hand. Tricia saw it, too, and maybe others. After a split second of being stunned, I slowly opened my hand and turned it palm up. Kokomi's soft, long fingers slowly retreated across my palm, before moving to have both hands over her blushing, but quiet, face. She quickly looked at Tricia, who was smiling, warmly. Then Kokomi looked cautiously at me, and I gave her a big smile, which held her eyes for a long moment. Kokomi's eyes returned to looking down, as her left hand returned to the chopsticks, and then proceeded to work at the remains of her meal. I closed my left hand and withdrew it to my lap, thinking of Kokomi's soft touch and that she was likely left-handed.\n\nAs Tricia was to my right, I leaned over to ask her a quiet question. Before I got to speak, Tricia whispered, \"I think you have a fan!\" My confused look was my answer, until I finally said, \"I wasn't sure what that was. You think that's it? ...and I wanted to ask if you know what her \"Gozaimasu\" means?\"\n\n\"As a woman, I would have to say she likes you. And all I know is that \"Gozaimasu\" represents some formal version of \"thank you\", which is used for elders or superiors. So, Hazel's reply inferred an undeserved status on Kokomi, which I suppose is what generated her embarrassed reaction. Well...accept for putting her hand on yours. I haven't seen anything like her being that forward in the few days she has been here. We would really appreciate any interaction you can generate as she has been so quiet and reserved since arriving here.\" I saw Tricia's eyes shift from me to past me, likely to Kokomi, for Tricia's face took on a pleased smile. I sat up straight and glanced at Kokomi, but only saw her eyes down again.\n\nFor dessert, mom brought out mixed berries topped with Triple Sec-infused whipped cream. As we all worked on dessert, I noticed Kokomi was using her chop sticks quite deftly on the berries, while her right hand remained in her lap. Since I am right-handed, my left was free, and I slipped it under the table until it touched Kokomi's leg. Startled, she fumbled one of the chopsticks, while wrapping her right hand tightly around the ends of my fingers. Blushing with eyes down, she quickly fought to contain the smile that had jumped onto her face. Then, she slowly released my fingers and withdrew her hand.",
        "I delighted in the simple, brief moment that we had shared, and suddenly found myself wanting to know more of the emotions contained in this young woman. Referring to her as a girl just did not seem to fit, in my mind, given her poise, and gentle grace.\n\nDad suggested we move back to the living room, but offered to refill all the wine glasses of those that wanted more. Kokomi saw Tricia &amp; Cal slide their glasses towards dad, and get refills, so she cautiously slid hers over, too. She smiled and nodded when dad refilled it. As we all got up to move, I made a quick detour to grab a beer bottle from the fridge. Mom caught me playing catch up, and then caught my eyes and frowned. She pointed at her glass of wine, and then saw my confused expression, so she mimicked pouring something into the glass.\n\nDumb me, she didn't want my beer bottle's informality and wanted me to pour it into a glass. I said a quick \"Excuse me\" and saw Kokomi glance up as I turned and left. Putting the beer into a glass that was appropriate for the classier atmosphere, I returned to the living room. But before I could take my seat, Cal Timmons suggested I show Kokomi all the landscaping work my parents had done. My parents had added numerous lights, a stream, and evergreens around the pool area. But, this being Boulder, Colorado, the pool was drained for the winter and the stream system had been winterized.\n\n\"Uh...sure!\" I said, my brain playing catch up, \"I will get her coat.\" I set my beer down and returned with her long coat and my heavy windbreaker, as I was used to the cold. It was actually rather warm for December here, still a bit above freezing. Kokomi was already standing, but looking unsure of what was happening. I held her coat open for her, and she slipped it on, with another \"Arigatou\". I gestured for her to come with me, and she glanced back at Tricia who smiled and made a, sort of, \"scoot along\" gesture with her hands. Kokomi then slowly started to follow me as I moved.\n\nI had her follow me through the house to the family room, and opened the sliding doors to the sunroom. As she stepped in, I closed the sliding door and flipped on the timer for the radiant heaters that were placed at the top of the glass walls. Kokomi felt the heat, and looked up, studying the glowing orange heating elements. I went over to a panel of switches, and started flipping the outdoor lighting on. There were four switches, and they lit up around the rock features, under the evergreens, and the Christmas lights in those trees, I heard little accented \"Aahs\" and \"Oohs\" from behind me. I turned to see the side of her smiling face studying all the lights, and then I looked at her eyes and saw reflections of all the colored lights outside.\n\nKokomi's head turned and her gaze momentarily turned to my eyes, before darting down towards the floor. Her posture tightened, and then her eyes slowly rose and her head turned back towards the view. She made a broad gesture with both hands to the view, and cautiously pronounced, \"Pr...retty\". It was only the second English word I had heard her speak. Hoping to use that for more interaction, I said, \"Kokomi pretty\".\n\nShe didn't move for at least five seconds or more, and then started shaking her head side-to-side in denial, still facing the glass.\n\n\"Hai\" I said, to reaffirm my opinion. That got a brief, small smile, which I saw in the corner of her mouth and in her cheek. Kokomi reached into her coat and pulled out a cell phone, which she woke up. She tapped an app and then spoke into the phone. I was not able to recognize distinct words but I was startled by the phone saying, \"I am not pretty. Many have told me so, where I have come from.\"\n\nI was very puzzled by that response, and unsure how to proceed. After moment, I moved closer to her, and her eyes looked at me, and I mean really looked at me for the first time, searching across my face. I looked back and watched a tear start to travel down her cheek, before she wiped it away. I pointed at her phone and then made a gesture, from me to her. Thankfully, she understood that I wanted to know if I could talk to her and have the phone translate the other way. She nodded and handed me the phone.\n\nI said, \"Who would say such a terrible thing to you, and why would they do that?\" A moment later, Japanese-sounding words exited the phone, and I saw her take in a deep breath, and then extend her hand to get her phone back. I handed it to her, and gestured for her to sit. She sat on the end of a lounge chair, and I sat next to her.\n\nAfter a pause, she spoke into the phone, and out came, \"My mother, my classmates, others, too. They said that I am not Japanese. They said that I should be ashamed of my foreign father.\"\n\nBorrowing the phone, I told her, \"Why would your mother do that? That seems terrible to me.\"\n\nHer response was, \"Mother had many bad things said to her for getting pregnant, especially to a foreigner who did not marry her. I believe that she transferred that shame, that pain, to me. Because of problems with my birth, mother could no longer birth children, and told me, therefore, that she never married. She blamed me for that, too. She blamed me for ruining her life. She was moderately wealthy from her father's money, and so she sent me away to schools. I had not seen her for two years when she died.\"\n\n\"I am so sorry,\" I said, softly, though the phone did not convey that gentleness. \"Do the Timmons know of this?\"\n\n\"They do not know, and I do not wish that they know the sorrow their brother caused,\" she said. She placed a hand on my knee as she spoke, and then I heard, \"Please, do not tell them. They have been very kind to offer me their home and the missing half of my life. I do not wish to burden them further.\"\n\nWith her phone, I said in return, \"I will say nothing about this to the Timmons or my family. I will respect your privacy.\" I paused and wiggled one finger underneath her hand, which still rested on my knee, and she slowly looked down at our hands. I continued, \"However, I want you to know, to understand, that I do not agree with the people in your past. I find your physical appearance, your combined heritage, very intriguing and attractive. I would have no moral issues with any race your parents could have come from.\"\n\nTaking her hand away and the phone as well, she sniffed, and then said, \"You are very kind to say such nice things to me, though I find your words hard to believe. Oh! It is not that I question that you will not tell others of my past, but that you could find me...\" and the phone stopped, before she spoke into it again, \"...find my mixed features attractive. I think you are just being generous and kind, lying to soften my pain.\"\n\n\"NO, I am not!\" I exclaimed, before realizing I did not have the phone. I gently pulled the phone from her hand, and restarted, \"No, I am not. I truthfully think you are pretty. Your looks do not match with popular American cultural stereotypes of beauty, but you are attractive in a unique and special way. I have to return to college tomorrow, but I really hope I can see you, that is, spend time with you again in the future. I will even say I would like to date you, and I will get this app for my phone, too.\"\n\nKokomi almost snatched her phone back, looking into my eyes as she spoke into it, \"You are telling the truth? This is not pity for this bastard girl!? You would want to know me?\"\n\nI was nodding back to her quiet, hopeful face, when I heard the patio door open. Tricia said, \"Kokomi?\" Kokomi looked up, and Tricia pointed at her watch, showed her five fingers, and then pointed back inside. Kokomi nodded her agreement, and Tricia winked at me as Kokomi's face turned away. The door closed, and Tricia disappeared.\n\nWe both stood up and Kokomi turned to me, eyes down, with her phone by her mouth. She paused before she spoke, and then the phone played out, \"I have just started to think I can believe your wonderful words, and now I must leave. This is an unfair fate, to have to hope that your words will be the same when we can meet again.\" She started to turn away, then stopped and looked over her shoulder into my eyes. The phone said, \"I think you are very attractive, too, and I would be most honored and delighted to be your date at any future time.\"\n\nShe suddenly pivoted back to me, popped up on her toes, and lightly bounced her lips off of mine. Then she quickly spun away, but I grabbed her hand, yanking her to stop. She looked down at our locked hands in surprise, and then she slowly turned her face up at me with a look I can only describe as a blend of disbelief, hope, and confusion. I stepped up to her, releasing her hand, and sliding my arm around her waist. As I bent down to kiss her, her face dropped, putting her forehead on my chest. With my other hand, I put a finger under her chin and pushed up. It took a moment and a fair amount of pressure before she relented and let her face rise, to show me the tears on her cheeks.\n\nI bent again, watching those big, watery eyes close, and pressed my lips to hers. A high whimper played out softly below me, just before she nearly collapsed out of my arm. I quickly caught her, before my other arm could assist, by squeezing her against me, with her open coat allowing me to feel her soft breasts halt their downward slide. She promptly recovered her footing and composure, and then stepped back, looking into my eyes in a way that searched for answers. With the phone, she spoke into it, then gave me a quick bow while it played back, \"Please, do not forget Kokomi. Kokomi will not ever forget her first kiss.\"\n\nShe opened the sliding door, stepped in, closed the door, gave me quick glance through the glass, and then disappeared into the hallway. I went inside a moment later after turning off the lights and heaters, and found my parents and the Timmons were all looking out the open front door, with the Timmons in their coats.\n\nTricia looked at me with a concerned confusion, and asked, \"She just left here in tears. What happened?!\"\n\n\"I...I would have to guess that she is happy, or wants to be,\" I offered.\n\nMom said, sharply, \"That didn't look like any happy I know. What did you do to her!?\"\n\n\"Nothing bad, mom. I complimented her.\"\n\n\"Then, why did she react with tears?\" Tricia almost pleaded.\n\nI scuffed my foot around on the floor, and sighed, \"Mrs. Timmons, it is her's to tell you, if and when she chooses to. Please do not ask her about it. She has good reasons. And I'd like to date her the next time we are both in town, though I'm not sure she believes that, yet.\"\n\n\"Uh...Wha...So...\" Tricia stammered, \"So, we just pretend that nothing happened tonight?\"\n\nI nodded, \"She has some thinking to do, and I think...and hope...she will be a lot happier once she really believes me.\"\n\n\"Okaaaaayy...\" Tricia said, cautiously.\n\n\"Thank you bringing her over here tonight,\" I said, with my eyes asking for no more questions.\n\n\"Good night, everyone, and thanks for the fine food and company,\" Cal said, \"Come on, dear. I think we have given her enough of a head start.\"\n\n\"Yes, thanks,\" Tricia said, looking lost in her thoughts, \"And thank you Chad, I think. I can't say I know why, but I suspect you've made an important change in her life.\"\n\n=+=+=+=+=+=+=\n\nIt was about 9 AM the next morning, and I was packing my Subaru for the return to Utah State University. Paul was having his usual fun lording his new height over me, as I ducked out of the morning breeze to set a few things in the back seat. Then I heard him exclaim, \"SHIT! Who the fuck is that!?\"\n\nI stood up, followed where he was looking. Stunned, I whispered \"Shit is right!\" Kokomi was standing in the Timmon's front yard looking our way. All I could see was this thick mass of shimmering, rich black hair that wafted in the morning breeze. It slowly danced in waves, extending nearly half way down her thighs. She brushed some errant strands from her face and shyly waved.\n\nPaul waved, and I signaled her to come over. Paul gushed, \"DAMN! I want a piece of that! I growled, \"Can it, Paul! That is Kokomi, the Timmons new daughter...\"\n\n\"New daughter!?\" Paul exclaimed.\n\n\"Ask mom for details. Kokomi is from Japan and does not speak English,\" I added.\n\nKokomi, dressed in simple jeans and \"Hello Kitty\" t-shirt (Okay, that was one stereotype that survived) avoided crossing through the plants and instead walked out to the sidewalk, and then moved towards our driveway. The way her hair flowed and swirled behind her reminded me of galloping horses' tails in any western.\n\n\"Wow,\" Paul leered, \"I'ld like to...\"\n\n\"SHUT IT, RIGHT NOW, Paul or I'll deck you right here!! She's mine!\" I threatened, and Paul looked at me in shock, as she walked the last few feet to stand in front of me. She gave a quick, acknowledging nod to Paul and then pulled out her cell phone, and spoke into it.\n\n\"I was so afraid I would miss you. Must you leave, soon?\" the phone's voice said, oddly distant from the anxious face.\n\nI opened my hand, and she gave me the phone. Before I used it, I said, \"Paul, this is Kokomi Ishikawa.\" Then into the phone is said, \"Yes I must...and this is Paul, my younger brother. He was just going back in the house.\"\n\n\"Uh...okay...nice meeting you,\" Paul said, without the phone. Kokomi gave him a small wave as he turned to go into the house.\n\nStill having the phone, I added, \"I had no idea your hair was so long, and that thick. It is beautiful!\"\n\nHer eyes dropped, the blush rose, and her hands fumbled for some place to rest.\n\nI continued, \"I meant what I said last night. I think you are very attractive, and even more so with this amazing hair. I cannot come back until the spring break, which is the first week in the month of March. Will you go on a date with me when I return?\"\n\nShe rapidly nodded, and I watched the ripples shimmy down her hair. She gestured for the phone, and I returned it.\n\n\"I cannot believe you want me, but I will go with you anytime you ask. And, I am to be in intense English courses, here in the city, before I am to leave for college in September. I will study very hard, and maybe when we date, we can talk without the phone. Will you kiss me for a goodbye?\"\n\nI smiled, and moved up to her, putting both my hands on the sides of her face. I was just looking into those big, worried eyes, and then used my thumbs to wipe away the creeping tears. I gently placed my lips on hers, and heard such a huge sigh echo into my mouth, that I feared she might have deflated like a balloon.\n\nThen she pulled away, and using the phone, she said, \"I did not know it was possible to feel this happy! I will miss you very much. Please be safe in your travels.\" Then she turned, and walked out to the sidewalk, and I watched her slightly sassy walk make her hair flow side-to-side, until a breeze blew it to one side. When she got to her driveway, she slowed her pace and looked at me. She finally stopped just before entering the house, and waved. When she saw me smile and wave to her, she and hair flowed through her front door.\n\n=+=+=+=+=+=+=\n\nHaving returned to USU, I was now faced with the moment of acting upon the decision that had come easily on the drive. Kokomi is special, unique, and sweet. Britney was built &amp; hot, sure, but otherwise common, a bit crude, and now, no longer worth the effort to placate. I knocked on Psycho-Britney's door.\n\nShe answered it with, \"Hey lover boy, come on in!\" I shut the door and she moved to kiss me, but halted, her happy look fading, \"What's wrong? Didn't things go...You couldn't keep it in your pants, could you!\"\n\n\"I...\"\n\n\"I KNEW IT!! You just had to bang some little Colorado snow bunny, didn't you. Who is she...no, NO....it doesn't matter. Just 2 legs with a pussy in the middle, and you couldn't resist.\n\n\"NO...\"\n\n\"GOD, you men are all the same! I'm glad I didn't waste my vacation. That running back was a helluva fuck, and he appreciated what he had. NOW GET OUT!!\"\n\nAmy was on her bed, with her knees pulled to chest, staying out of the line of fire. She uttered a wistful \"Bye, Chad.\"\n\nBritney couldn't leave that alone either, \"You want that cheating piece of shit back, Amy!? You can have him! Go fuck his brains out, if he has any left. Just don't bring him back here!\"\n\nBefore I closed the door, I said, \"Bye Amy.\" I closed the door, and something shattered against the back of the door, as I could hear the tinkling of many, small pieces. That had gone a lot easier than I expected.\n\n=+=+=+=+=+=+=\n\nJanuary came and went pretty quickly, and I even dated 2 girls who had asked ME out! (Separate dates. I am not that kind of party animal!), Nice times, fun conversation and flirting, but no sex and nothing clicked; nothing like I had a desire to understand who this girl was that I was out with. I always came back to comparing them to Kokomi.\n\nThen came February 1<sup>st</sup>, and in the middle of a Soils Management class (my major was Forestry), my phone dinged, earning me a glare from the teacher. I gave her a chagrined look. Glancing at my phone, I saw it was not a number in my phone book, so I put it aside. It wasn't until my lunch break that I remembered to see what the text message was. When I opened it, I was surprised to see a pair of puckered lips, coated in bright red lipstick. No written message, just the picture. And it showed little else of what surrounded her lips, so that made it hard for me to guess who it was.\n\nTwo days later, another text message. Again, no text. This time a bare girl's/woman's flat stomach with a red paper heart, with white lace edgings, covering her very center, including her navel. I still did not know who it was. I had already berated myself for not getting Kokomi's cell phone number, nor giving her mine, before I left after Christmas. Thus, I ruled her out.\n\nOn the 5<sup>th</sup>, I got a photo of two lovely feet, with the red paper hearts held between the toes, and the toenails painted the exact same color as the paper. Who did I know that would think of feet, as pretty as they were, for a picture?\n\nAnother two days, the 7<sup>th</sup> of February, and another of these textless messages arrived. This one was clever, and more erotic than before, showing two lovely, modestly sized, round breasts. The girl in the picture had two popsicle sticks with red paper hearts mounted on the ends, and she held the sticks with one hand, in a V-formation, so that her nipples were hidden. I still did not recognize the breasts. They were way too small to be Britney's, and I really doubted Britney would have made the clever effort, nor hidden her nipples, even if we hadn't broken up. The photo's breasts were even smaller than Amy's, and for that matter Tina's, Annie's or Brandy's (sophomore year dates). I could not imagine that Kokomi would be this brazen.\n\nThe 9<sup>th</sup> of the February brought a bigger surprise. It was a girl's (the girl's?) bare backside, from her shoulder blades to the top of her buttocks, as she sat perched on a red, heart-shaped pillow. Her waist had a wonderful, graceful taper, and her hips appeared to be on the narrow side. Great posture, too.\n\nOn the 11th, another wonderful image. Obviously the same girl, from the shape of her slim waist and the same flat stomach from the second image that I had received on the 3<sup>rd</sup>. This time the image went from the bottom edges of her breasts, to mid-thigh, with a large paper heart covering her pubic area. Definitely slim hips.\n\nThe following day, the 12<sup>th</sup> of February, I got the same image, except the paper heart was smaller, exposing more skin and adding hints as to what was behind it. I was definitely getting aroused, and this seemed to be heading towards Valentine's Day. I could hardly (hard being an apt word) wait for what may come next.\n\nOn the 13<sup>th</sup>, the same image, once again, with just a tiny heart that only covered her slit. The rounded sides of her labia were just visible. Pubic hair leaked out around the edges of the heart. Straight, sparse, black pubic hair. Kokomi?!",
        "The Valentine's Day image I received confirmed it was Kokomi! She may be more surprising than I had imagined! She sat on a bed upright, naked, with her legs folded and her heels against her butt. Her beautiful hair draped over both shoulders like waterfalls, covering her nipples, and then pooled in her lap. In her lap, on top of her hair, was what appeared to be a candy box in the shape of a heart, with big gold letters that said, \"Be My Valentine.\" Almost as stunning, and even more pleasing was the way she looked at the camera; huge smile, direct contact, eyes up, and confident. I so wanted to be in the bed with this lovely woman at that moment.\n\nThe erotic charm was wonderful. Sure, I had gotten explicit titty &amp; pussy pictures before. But this - the sexy sweetness, the underlying desire it represented, and the glow it created in me - I was hooked. Knowing it was odd for someone I had not even dated yet, I texted her back, \"Yes, my beautiful, YES.\"\n\nI shortly received a response, \"Two weeks for school break. Please tell me soonest arrival. Waiting. Koki XOX.\"\n\nI texted back, \"So, how did you get my phone number? Chad XOXO\"\n\nShe replied, immediately, \"Tricia asked, Hazel gave. LOL\"\n\nI chuckled so. She had written me in her new English, and gave me a nickname for her of \"Koki\".\n\nMy next text was, \"Clever you. And who took the pictures!? xoXO\"\n\nHer response arrived in just a couple minutes, \"Maybe I not say! Do you worry? XOX.\"\n\nI responded, \"A little worried, as someone got to see you naked before me! xXX\"\n\nA few minutes later, she sent, \"Okay, stop worry. You only man to ever touch me. Photo by GIRL friend I meet in English class. She Japanese, name Kaito. Repeated many photos because I blush too much! LOL\"\n\nI replied, \"Alright Koki, my valentine. I will see you in about 2 weeks. Can we have our first date, then? OXO\"\n\nPromptly, she said, \"Kaito call me Koki. I like that name. Yes, date in 2 weeks. Can we do many dates? Waiting. BIG Sigh! xoXOXXXxxxxxxx\"\n\nI ended this conversation with, \"Many, many dates. Bye, for now. XXXxxx...\"\n\nHer final was, \"Lucky Me! Bye! ...xxxXXX\"\n\nI found myself sitting there with a big smile. There was something about her that just made me feel happy, before anything else. It was going to be a long 2 weeks. And I was the only man that had ever \"touched\" her? No way; she is 18 years old! Maybe a virgin, but never touched. It didn't seem possible.\n\n=+=+=+=+=+=+=\n\nI was driving back to Boulder, Colorado from USU in Logan, Utah and luckily for my drive, is had been unusually warm, so I would have no weather to interfere with my trip home. The lack of snow would not be good for the western states that depended on the Colorado River watershed for their water, but it made the trip easier. Once I got through the Eisenhower Tunnel at just over 11,000 feet, I would be on the eastern side of the Continental Divide, and only about an hour from my parents' house.\n\nI pulled off in Georgetown to text Koki, \"Will be home in about one hour. Want to go out with me tomorrow? If you do, what would you like to do? Go out to dinner? See a movie? Visit Denver? Drive into the mountains, or maybe visit a museum? XOX\"\n\nAs I continued driving home, my phone dinged. When I got to a section of Interstate 70 where there was not much traffic, I glanced at my phone. I could almost imagine her face as she wrote her answer, \"Please, Mountains! I LOVE Trees! O+X forever.\"\n\n\"Forever\" was an interesting choice of words. I wondered if she really knew what it meant.\n\nWhen I got home and had unloaded my five-year-old Subaru Outback, I took a moment away from the family, who were hanging around the kitchen as, of course, mom was cooking. I called Koki, \"Hello Koki...I got here a short time ago...'short time ago?'...it means, well, 'recently'...Yes, I am anxious to see you, too. Can I pick you up at 10 AM tomorrow?...Okay, dress for the cooler mountain air...Like jeans, a heavier shirt, coat, walking shoes, and, maybe, gloves...Good, I will come to your door. See you tomorrow...Yes, hugs &amp; kisses for you too.\"\n\nI put my phone away and returned to the kitchen, where mom was holding court to discuss the dessert choices, \"Boysenberry pie, apple cobbler, ice cr...what are you smiling so much about, Chad?\"\n\nOops, they had caught me, \"I just called Koki.\"\n\n\"Koki? You mean Kokomi?\" dad asked, then added, \"I vote apple cobbler, by the way, dear.\"\n\n\"One vote apple cobbler, noted. Now, Chad, is something going on with you and 'Koki'?\"\n\n\"Well...\" I hawed, \"I am taking her to the mountains, tomorrow at 10 AM.\"\n\n\"Have you two been talking while you were away?\"\n\n\"Mostly texting,\" I offered.\n\n\"That's sweet of you, dear. What did she write about?\"\n\n\"Oh...she just wrote about another Japanese girl she met, who gave the nickname of 'Koki', and she talked about school. Her English is coming along nicely. She even sent me a Valentine.\" \"While the hell did I mention that...please ignore it, all of you!\" my mind chastised itself.\n\n\"Can I see it?\" asked Paul.\n\n\"Me, too?\" chirped mom.\n\n\"NO\" I nearly barked, \"No, it is a bit personal.\"\n\n\"Now, I really want to see it!\" Paul grinned.\n\nI glared back.\n\n\"Alright\" mom added.\n\n\"Well, you two have fun tomorrow,\" Dad added.\n\n\"Thanks\" I responded, \"Koki said she loves trees. With the weather this decent for early March, I thought we would drive up to Nederland, with some stops along the way. Maybe a mini-hike to walk off lunch.\"\n\n\"Well,\" mom replied, \"You just treat her nicely. She is such a shy, little thing. And no making her cry this time, okay? Now, anymore votes for dessert, anyone?\"\n\n\"Sure, mom! I don't like to see her cry, either. And I second the apple cobbler, WITH ice cream.\"\n\n=+=+=+=+=+=+=\n\nIt was ten minutes before 10 AM the next day, when I was about to ring the doorbell at the Timmon's house. The front door opened. It was Tricia Timmons, and she quickly glanced over her shoulder, and then stepped onto the front porch with me and closed the door. She looked up at me, with a bit of watery eyes, and stumbled with her words, \"I...I mean we...that is Cal &amp; I...want to...Oh, Hell!\" and she grabbed me in a hug, which certainly surprised me. Before I could even think to respond, she stepped back, sniffed, and said, \"Sorry!\" before she wiped her finger under one eye. \"We so want to thank you. She has been so happy since that dinner after Christmas. I suppose I shouldn't tell you, but she talks about you all the time! And she is sweet, and funny, and smart, and...just...just wonderful! I know we do not have you to thank for all of that, but whatever happened after that dinner was some form of trigger that jump started her happiness!\"\n\nStill startled by this rush of information and praise, when my mind had been preparing to greet Koki, I clumsily replied, \"Uh...thanks...I...\"\n\nTricia continued, in a rush, \"And that thing you said not to ask her about, I didn't. Well, not directly anyway. You know...women thing...I couldn't just leave it alone, so I persisted asking her about the tears, and later she told me about how she was shunned by everyone, even by her mother. That's terrible, isn't it...I mean, how could a mother treat her like that? At least she left Kokomi her money...not that that makes up for what she did to Kokomi...anyway, I am blathering, I'll stop...but thank you, thank you...and you two have a wonderful time today. Her first date is all she has talked about for the last two weeks! She is bouncing off the walls...there I go again...I will shut up now! Oh, except, please...please be careful with her heart! She can be such an innocent at times, and I hope you are not just some big fantasy come true for her, and then you move on and...Oh, shut up Trish!\"\n\nI put a hand lightly on her upper arm, and offered, \"I know, I am a bit concerned myself. I'd like to believe she understands and believes what she says, and that I am not just her first fascination...you know?\"\n\nTricia's mouth opened, but then closed without a word, and she just nodded. Then she turned, opened the door cautiously, and looked around. Over her shoulder, she whispered, \"Ring the doorbell. Bye!\"\n\nI chuckled at this minor intrigue, and then rang the doorbell. About two seconds later I heard running footsteps that ended, just as the door latch clicked open. The door swung open and there stood Koki, bouncing on her toes. \"Hi, Chad!\" she said in her high voice, trying to contain her smile and whatever other impulses she had that made her look like she could burst at any moment.\n\nIt was so cute, I just watched for couple seconds as she bounced and fidgeted with her hands before I said, \"Hi beautiful. Can you give me kiss?\"\n\nShe rushed me, nearly making me lose my balance as she grabbed me in a hug, tilted her head up, closed her eyes, and puckered. I gave here a quick peck on the lips as I fought a smile. Her head pulled back, big, dark eyes opened, and she moaned, \"NOOooo...real kiss, PLEASE!\" I gave her what we both wanted, and she gave me a big, exhaling hum of happiness as her lips hunted for the best position.\n\nAfter that enthusiastic kiss, I pushed her back to arm's length and looked at her clothing to make sure it was suitable for temperatures that would be in the low 40's in Netherland, though it was sunny, which makes it feel at least ten degrees warmer at Colorado's high altitudes. She watched me examine her, with a huge smile locked on her face. She had on a pair Skechers laced sneakers, jeans, and an oversized flannel shirt with some kind of shiny shirt underneath. It was then that I noticed her ponytail only reached her waist.\n\n\"Did you cut your hair?!\" I asked with wide eyes.\n\nKoki responded, \"NO! I did it...like...\" and then she used her fingers to scribe a couple circles in the air, before she turned her head to show a \"donut\" of hair on the back of her head, out of which the ponytail emerged.\n\nI smiled and nodded, with an, \"Aaaaagh\" of understanding.\n\nShe continued to smile, her lovely eyes locked onto my face, \"I will get my things, if you ready?\"\n\nAs she turned, Tricia was at the door, holding Koki's backpack and jacket. Tricia smiled, but said slightly sternly, \"Koki, please do not leave the door open. It lets the heat escape.\"\n\nAs Koki took her backpack and jacket, Tricia winked at Koki and Koki whirled around towards me, saying, \"Okay, thank you, Trish!\" Then Koki stopped, glanced at me, turned, and stepped back to Tricia. She gave her a kiss on the cheek, with a quieter, \"Thank you, mom.\" As Koki turned back to me, I saw a quick wave from Tricia before her hand moved to cover her mouth. I saw her eyes welling up as she closed the door.\n\nKoki bounced next to me as we got to my car and I reached for the door, \"So, you are calling Tricia 'mom' now?\"\n\nKoki moved behind the door, and said, \"I never have a 'mom' before,\" and she sat down. I closed the door, and pondered that remark as I walked around and got in the car. \"Why did you say that you have never had a 'mom' before?\"\n\n\"Mother only let me call her 'Mrs. Ishikawa' when I was older, even though she not married. When younger, I could call her mother, but only in house. Never in public! And I was never to say only 'mom'. Tricia is so nice to me, she has earned being my 'mom'.\"\n\n\"Was that the first time you have called her 'mom'?\" I asked.\n\n\"Yes. Why do you ask?\"\n\n\"Because, it seemed to surprise her when you said it, and she was crying when she closed the door. I think you made her very happy.\"\n\n\"Good. I will do it more. And she let me use Cal's shirt. Really big,\" Koki giggled, pulling the loose shirt out from her chest, \"But not to worry, I am still in here!\"\n\nAs I pulled out of driveway, I chuckled, \"You sent me those pictures. I know what is inside there!\"\n\nKoki looked playfully astonished. \"This is first date, my valentine. Maybe I let you peek, maybe not. Good kisser is test!\" she said, grinning broadly.\n\n\"Wait until I get you alone in the woods, My Pretty!\" I snarled.\n\n\"Ha, ha...that is witch, 'My Pretty', right?! I watched 'Wizard of Oz' two times.\"\n\nI laughed, \"Yes!\"\n\n\"But, we will have no flying monkeys, today, right?\" she giggled.\n\n\"No, no monkeys, flying or not,\" I continued to laugh.\n\n\"Where we going?...Where are we going?\" she corrected, squirming down into the seat, and turning the heat a bit higher.\n\n\"To Nederland, 16.7 miles away. In kilometers that is about...\" I said, as I stopped talking to calculate 16.7 \u00f7 0.62 (miles per kilometer).\n\n\"26.9 kilometers,\" Koki chirped.\n\n\"Uh...okay. Are you good at mathematics?\" I queried, and was glad that I had thought not to just say \"math\", for her sake.\n\n\"Koki Hot!\" she crowed, joyously.\n\n\"Yes, you are very sexy, but are you good with numbers?\" I teased.\n\nKoki swatted my arm, \"You're bad! ...Bad, Chad, HA! Koki is hot, WITH NUMBERS, funny man. I am best at school in Japan.\" Then quieter, she said, \"And...\"\n\nAfter a short pause, I asked, \"And...?\"\n\n\"You think I am sexy?\"\n\n\"Oh, yes!\" I exclaimed.\n\nKoki put both her hands over her face, squealed, and her feet pattered on the car floor, like she was running. \"I am too embarrassed! Please talk of more numbers, instead,\" her voice pleaded, in an even higher pitch.\n\n\"Alright,\" I chuckled, \"We are driving on the Colorado State Highway number 119, also called the Boulder Canyon Drive. As you can guess, the canyon we just entered is Boulder Canyon and the water is Boulder Creek. The city of Boulder is at altitude of about 5,400 feet, which is...\"\n\n\"1,655 meters,\" she promptly filled in, with a glance at me through the fingers still covering face.\n\n\"In a few miles, we will be in the Roosevelt US National Forest. When we get to Nederland, you will see Barker Meadow Reservoir. Nederland's altitude is about 8,200 feet...\"\n\n\"2,500 meters\" she said, right on cue. She dropped her hands from her face. \"Beautiful mountains and trees,\" she sighed.\n\nAfter a bit of quiet time, with her looking out at the scenery, I pulled off at the Boulder Falls turnout. We were the only car stopped there. She got out of the car, and walked to the stone railing to look at the view. I walked up behind her, and she felt the contact, grabbed my right hand, and wrapped my arm over her stomach. She definitely had a flat stomach. \"Beautiful!\" she said as she looked out.\n\n\"Yes, you are,\" I replied, softly.\n\nShe sank back against me, and sighed, \"It is hard to believe you when you say I am beautiful. Sexy is impossible; I have little breasts!\"\n\nAs her flannel shirt was not buttoned all the way up, I raised my hand, slid it under her flannel shirt, found she had no bra on, and cupped her left breast through the fabric of the supposed camisole.\n\nHer gasp was so loud, it probably would have echoed off the rocks, if a big truck had not gone by at that moment. She sagged slightly, and said, \"I did not give you permission for that!\" As soon as she felt my arm start to pull away, she grabbed my wrist, and pushed my hand back over her breast, with its hardened nipple. \"I did not give you permission to remove your hand!\" she said happily, and then giggled.\n\nI squeezed her breast, and she gasped again.\n\n\"Did you like that?\" I whispered in her ear.\n\nShe dropped her head, the shyness seemingly having returned, and after a moment she gave a small nod, with, \"Yes. Oh, yes!\"\n\n\"Then those are the sexiest breasts in the world,\" I purred.\n\nHer head stayed down, \"I really want to believe you,\" she sighed, then a moment later she giggled, sharply. Her head came up and pressed against my chin, \"No, you are lying to me,\" and she started to laugh, \"You have only tested one, not the other!\" She started giggling, infectiously, and tried to double over as I removed my right hand, and came around her chest with my left. I was wrestling her to get my left into her shirt, her long hair helping to defend her, as she dissolved into giggles. With her moving around and bent over, her camisole must have blossomed out, for when I got my hand in her shirt, it skipped the camisole and contacted a bare breast.\n\nThe giggles immediately stopped, and so did the wrestling, though she stayed bent over, unmoving.\n\nQuietly, she whispered, \"OH! Your hand is so warm!\"\n\nI gently squeezed, the soft, round breast I held, and she shuddered, straightened up, and blurted out something in Japanese.\n\nI whispered back, \"Yes, both are sexy breasts. Now do you believe me?\"\n\n\"Maybe\" she cautiously giggled.\n\nI lightly rubbed her pert nipple between my thumb and forefinger, and I thought I had set off an explosion. She bucked, her knees sank, she steadied herself on the stone wall, causing my hand to slip out, and she uttered something in Japanese, but in a lower, richer voice, that was so velvety that it gave me shivers.\n\n\"I need to sit,\" she stated, back in the high voice. I moved and opened the car door, and she moved her hair aside and plopped in the seat, putting her head back against the headrest. I could see her taking deep breaths.\n\nIn a whispery tone, she said, \"How can you do such things to me?!\n\nI quickly apologized, \"I'm so sorry! I did not mean to offend you! I...\"\n\nHer waving hand cut me off. \"No, no, I have said it wrong. How can you...\" and she paused to compose her words. Koki looked up at me, her eyes looking a little lost, \"...make my body feel that wonderful? My toes, my fingers, they tingle. My mind is running fast, and is confused. But I feel so happy, everywhere, like when a beautiful sun rises in the morning.\" The last word trailed off when she said, \"How?\" as she slowly shook her head.\n\nHesitating, I offered, \"I am not sure how to answer that, but I am glad I do that to you!. Why don't we get some lunch, now?\"\n\n\"Yes, lunch,\" Koki agreed.\n\nAs we approached Nederland, I pointed out Barker Meadow Reservoir. \"Very pretty,\" she said, \"But, why is it not a 'lake'?\"\n\n\"A lake is made by nature. A reservoir is lake made by people, so that they can have water when they need it.\" I responded.\n\n\"Yes, reser...vor,\" she said, struggling with the three, varied \"R's\".\n\nI corrected, \"reser-VOIR,\" it comes from a French word.\"\n\nI found a western-styled bar/restaurant, and she enjoyed looking at all the clich\u00e9 decorations. I helped her read the menu and she selected fish &amp; chips, with a Coke. I ordered for her and chose a club sandwich with iced tea for myself. While we waited for our food, I said, \"Koki, may I ask you some personal questions?\"\n\n\"I am not sure what \"personal' means.\"\n\n\"It can mean other things,\" I started, \"but a personal question, means I want to ask you about somethings about yourself that you may think is private, or even that you wish to keep as a secret. You do not have to answer any question you do not want to answer.\"\n\n\"Okay!\" she said, and sat up straighter and intertwined her fingers on top of table, \"Ask your questions. For you, I will answer all.\"\n\nI was glad no one was sitting near us. \"When we were back where we stopped, and I rubbed your nipple, your voice changed. It was lower. Which is your natural voice? The high one, or the lower one.\"\n\nNow glowing red in a blush, she swallowed and said in the lower, velvety voice, \"This one. Which do you like?\"\n\n\"Oh, that one! Not the higher one. The high one makes you sound like a child, and you are definitely not a child. The lower voice is a wonderful voice, and better for America,\" I said, \"and sexy!\" I winked at her.\n\n\"Then I will try to use the lower voice,\" Koki chuckled, \"but please be patient with me as I was trained in many traditional ways. The high voice is one of those ways, and I am very...um...it is normal for me to use it. Do you understand me?\"\n\n\"Yes\" I said, \"I will be as patient as you need.\"\n\n\"You are so kind,\" she said, her eyes dipping for moment, \"What is next question?\"\n\nIt was then that our drinks arrived, and we both sipped on them.",
        "\"This is a harder question to ask,\" I sighed, \"so please understand that I am not trying to offend you, nor make fun of you.\"\n\nKoki nodded, and stayed focused on my face.\n\n\"Well...I am very happy being with you. But I am concerned about taking advantage of your innocence. Do you understand?\"\n\nShe shook her head, looking curious, \"I am not a criminal, so I am innocent. Is that not correct? What is 'taking advantage'?\"\n\nI ran my fingers through my hair, trying to think of how to approach this. \"Innocent is not just used to describe someone who is not guilty of a crime. It also has a meaning, for someone who has little knowledge or experience about something. Being innocent can mean somebody can trick an innocent person into doing something that they may not want to do, if they had that greater knowledge. Tricking them this way is called, 'taking advantage' because you have the 'advantage' over the innocent person, by knowing more and using that knowledge against them. Does that make sense?\"\n\n\"I think so,\" Koki said, looking as if her mind was still processing this input.\n\nAs she was thinking, our food came, and we thanked the server.\n\nShe dipped her fish into the tartar sauce, and then paused, \"Is that like a scam? I have been taught to be careful of scams.\" Then she bit into her fish.\n\n\"Yes, they are similar, but not exactly the same,\" I answered, \"however, they are usually used for different subjects.\"\n\n\"If you are concerned about having this 'advantage' over my innocence, then what subject is it you are concerned about,\" she asked as she sipped her Coke.\n\nQuietly I said, \"SEX!\" I really should have timed that better, as she sputtered out some Coke. Then she started giggling, really giggling, and back in that high voice. I tried to get in a bite of my sandwich while Koki collected herself.\n\nShe chuckled, \"Yes, with that, I am an innocent. They taught me nothing at schools, and schools were only for girls, so no boys. As no one would talk to me, except in class, I have no friends. Mother Ishikawa only said it was a bad thing to do.\" She resumed eating her fish &amp; chips, and waiting for my response.\n\nThe server came to check on us, and I said we were fine.\n\n\"Didn't you ever look on your computer at school about sex?\" I queried.\n\nKoki shrugged. When she stopped chewing, she said, \"School gave us the computers, and they would not let us see many things. Sex was the most blocked.\"\n\n\"Haven't you looked up 'sex' on computers or your phone in the USA\"?\n\n\"A little,\" she said, \"but my English was not good, and they use many different words. I see a lot of same words like penis, orgasm, clit, and vagina, but I do not understand how they are important. I watch some videos, and start laughing. In videos, they grab and wrestle...is that right word? ...and make funny noises and funny faces. I see penis in vagina, and it is messy, and they all sweat. Is this the 'advantage' you are afraid of with me, as I am innocent?\"\n\nI leaned back in my chair, again combed through my hair with my fingers, and finally said, \"WOW!\n\nChewing and finally swallowing, she asked, \"Is this good 'WOW' or bad 'WOW'?\"\n\nI shook my head to try to get something to fall into place for an answer. All I could say was a confused, \"Both, neither, everything, but almost none of it.\"\n\nKoki looked at me, sort of patiently blank, waiting for me to say something that made sense, as she knew enough English to know my last comment was not something to be taken literally. After a further wait, she asked cautiously, \"Did I make you angry?\"\n\n\"NO!\" I immediately responded, \"But...but, I need to think of you not like any woman I have known before. We will need to talk a lot more, and now is not the time for that talk.\"\n\n\"Have I made a problem for you?\" she asked.\n\n\"Yes, but a good problem. It is one I will enjoy solving, and one, I hope, that you will enjoy solving with me.\"\n\n\"I will do anything with you, Chad, as long as you want to be with me. You are most special to me and I want to be special to you.\"\n\n\"Oh, you are,\" I said, as my mind wrestled with all the complexities of her naivety, and how I would approach those in a thoughtful, caring way. \"That is all my questions for today. Please enjoy your lunch.\"\n\nKoki smiled contentedly between mouthfuls, and looked at me often.\n\nWe finished our lunch and then looked around a couple gifts shops. She was joyful looking at all the knick-knacks and was so impressed by some of the framed artwork. That is when she told me she really liked art and had done some herself, which she would show me. I bought her a gift of a cartoonish, metal figure of a drunken moose, holding one of those dollar-type tiny liquor bottles, which she laughed at, so much.\n\nWhen we left town, I drove south, out the other side of town, towards Blackhawk, but I turned back east on Golden Gate Canyon Road. When we got to Golden Gate Canyon State Park, I pulled off, and we walked the small loop trail behind the visitor's center. I told her my major at college, and career intention, was in forestry, and she was delighted that we could be around these mountains and trees all the time. I was beginning to think I would like that very much, too, having both her and my forests, together.\n\nAs we walked further, she cuddled my arm as we walked, and asked what these trees were, and asked what the ones were with the waving leaves, that we had seen before lunch. I told her that these were blue spruce, the Colorado state tree, and the earlier ones were aspens.\n\nAs soon as we drove out of the mountains, we turned north and returned to Boulder. It was getting close to dinner time at our parents' homes as we pulled up in her driveway. When I asked about tomorrow, she immediately agreed, even though I hadn't suggested anything we could do. I said I would call shortly with ideas and time, and then she gave me a lengthy kiss, before she got out with her moose, waved, and went inside.\n\nI moved my car over to our driveway, and went inside. As soon as I got inside, mom pounced on me, \"Oh! You're home! Can you move your car to the curb? We have to leave early tomorrow...just move it and then I will explain.\" I moved my car and then returned to mom's immediate attention. \"My sister...oh god, your Aunt Sharon, of course...fractured her leg skiing and Howard...dad...oh, I am so rattled...Well, we are going to go up there for as long as Stewart and she need us to help. I am sorry to leave you alone on your vacation, since Paul left with Sandy for that stupid Spring Break party stuff in Mexico this morning, but...\"\n\n\"I didn't know anything about that! And I never got to go on a spring break vacation, anywhere!\"\n\n\"Oh, Chad...tough shit...now...\"\n\n\"MOM!\"\n\n\"Oh, Chad dear, I'm sorry. I'm just so worried about my baby sister. She sounds like she is in so much pain. You know she hates medications. Anyway, I know you can take care of yourself. Now, I have to make dinner. It won't be much, as I still have to pack. You will be okay...okay?\"\n\n\"Of course, mom. Give Aunt Sharon my love and best wishes, and don't let Stewart get on your nerves.\"\n\n\"My little boy...oh, you're so good!\"\n\n\"Geez, mom!\"\n\n\"Hush, you will always be my little boy. Now clear out so I can cook!\" mom said, as she gave me a quick peck on the cheek.\n\nI went back to my room, and called Koki, \"Hey, sexy lady...yes, you are! My parents are leaving tomorrow morning to go help my Aunt Sharon, who hurt her leg skiing. So...no, Paul went to Mexico with his girlfriend. So...yes, just the two of us...yes, that is great. How about 10 AM...Uh, okay, 9 AM. I'll come get...okay, okay, I will wait for you here. Are you alright? You are so excited...Yes, hugs and lots of kisses. Sleep well...yes, it was great day. Bye...bye beautiful!\"\n\nI don't know what had her wound up so much, but I guessed I would find out in the morning.\n\n=+=+=+=+=+=+=\n\n\"Mom! What time is it?\" I asked, trying to focus on the clock.\n\n\"4:30, sorry dear. We want to be in Cheyenne in time to make breakfast for your aunt &amp; uncle, and those two hellions of cousins. I don't know when we will come back, but we will call. Okay?\"\n\n\"Alright, mom. Don't wear yourself out.\"\n\n\"Thank you...and you behave while we are gone.\"\n\n\"What is that supposed to mean!?\"\n\n\"Well...you'll be here, alone...and, just...you know. Behave!\"\n\n\"Bye, Mom! Mis' U!\"\n\n\"Behave!\"\n\n\"Uhhhh!\" I said, pulling the pillow over my face.\n\nI woke up the second time, about 7:30, and headed for the bathroom, grabbing a Sports Illustrated to read in there. Finishing a feature article that I had started yesterday, I brushed my teeth and got into the shower. After I got dressed, and checked the house to confirm that I was alone, I went to get a bowl of granola and raspberries. I sat there, crunching, and thinking of how I wanted to approach Koki about our relationship, and then, maybe, sex. I really liked her, so much, but I wanted to make sure I was just not a \"first boyfriend\" infatuation.\n\nAt 8:48, the doorbell rang, and I opened it to find a gleaming smile and bright eyes awaiting me. I chuckled and waved her in. She didn't walk in, she bounced in, and then shed her coat, tossing it on a nearby chair. She grinned, and bounced some more, nipples clearly jiggling, loose, under a cropped yellow top, that displayed her firm stomach. That stomach disappeared under the elastic band of her dark blue sweat pants. And her ponytail was full length, today.\n\n\"Now?!\" she pleaded, with a squeal, even higher than her high voice.\n\n\"Uh...sure...now.\" I didn't have any further time to consider what she was referring to, before she bounced in front of me, rose on her toes, wrapped her arms around my neck, pressed her body against me, locked her lips to mine, and gave my mouth that oh-so-contented sighing hum of hers.\n\nHer enthusiasm and lips -- hell, the feel of her whole body - was delightful and my manhood made its entrance. She pulled back, giggling, \"Is that what I think, down there.\"\n\n\"Yes, my sexy lady.\"\n\n\"Joy! I get to learn about sex today!\"\n\n\"WHOA!\" my mind yelled, and then my body took a moment to breath. I said in a forced calm voice, \"Whoa there, my lovely lady.\"\n\n\"What is 'Whoa'?\" she said eagerly, in her velvety, rich voice.\n\nI sighed, sharply, at the distraction of explaining, \"It is a word that comes from cowboys...you know cowboys?\"\n\nShe nodded quickly, her face still just inches from mine.\n\nI continued, \"When cowboys want their horses to stop, they often say 'Whoa'.\"\n\nShe smiled at me, \"You want me to stop?\"\n\n\"I think we need to slow down this...eagerness. We should do some talking first. And you must have had a lot of sleep last night. You have so much energy!\"\n\n\"Only slept two hours,\" she smiled. \"I was awake last night, studying hard on the computer, and doing so much thinking.\"\n\n\"And what where you studying and thinking about all night?\" I chuckled, brushing her nose with mine.\n\n\"Me...and you...and tomorrow!\"\n\n\"What about tomorrow?\" I asked.\n\n\"Any tomorrow.\"\n\nI encouraged her to drop back down off of her toes, and back up a step, so my eyes could focus on her.\n\n\"I think we should go sit on the couch, to talk,\" I suggested, and I got a cheerful nod in reply, and then she took my hand with both of hers. \"I would like something to drink. Would you...\"\n\n\"Coke, please!\" she said, as she happily shimmied in place, side-to-side, and her hair actually made a little \"wooshes\" across her clothes.\n\nGrinning, I looked down at her hands, still holding my hand, and I shrugged. I headed for the fridge, with her in tow like a baby elephant. She finally released my hand when I offered her the can of Coke. She gave me an, \"Arigatou\" while giggling, and then sharply bowed, which brought her hair around her, nearly brushing the floor.\n\nI just smiled at her for a moment, while I popped the top of an Orange Crush, and then I asked, \"Are you going to be trouble today?\"\n\n\"No trouble...ever!\"\n\n\"I find that hard to believe!\" I laughed, and put my arm around her shoulder.\n\nKoki looked up at me, with a pouty lower lip.\n\nI tugged her shoulder tighter against me, and she chuckled, and then let out a short sigh.\n\nWe sat on the couch, her having to move her hair first, with both of us putting one knee up, so we could face each other. \"Let your words fly, my Chad!\" she grinned.\n\nI had to chuckle at that, but then I faded to a more serious look. This time it was my eyes that went down, as I concentrated on the right words. When I looked, her smile had diminished. \"I find you very attractive, very fun to be with, and someone who makes me very happy...\"\n\nShe smiled, tentatively, \"I have learned enough English to know that next word is the 'But'.\"\n\n\"Yes, but,\" I agreed, \"I am concerned that your desire for me is...well...that I am your first boyfriend, first valentine, and that once you have met other men, that then your feelings for me will be much less. And, if I have sex with you, now, that you will regret having done it with me, when you are older. Do you understand the word 'regret'?\"\n\n\"Yes, I understand it, very well.\"\n\nKoki smiled, in a sort of confident grin, and pulled over two coasters, and set her Coke on one of them. Then she pulled the Orange Crush from my grip, and set it on the other coaster. She stood, encouraged me to straighten the leg that was bent, then moved one of the pillows behind me, pulled my shoes off, lifted my feet onto the couch, and pushed my shoulders back, until my head was on the pillow. She looked down at my curious confusion, slipped off her shoes, straddled me, sitting on the waistband of my jeans, and then moved her hair so that it pooled on my chest, over the USU logo on my t-shirt.\n\nI rested my hands lightly on her thighs. She gave each hand a stroke, and then leaned forward, with one hand next to my ear. I knew something was coming, but I sure, as hell, did not know what.\n\nLooking amusingly stern, she poked a finger into my chest, below my throat, and commanded, \"This is the new Kokomi speaking, and you WILL listen!\"\n\n\"New?\" I questioned.\n\nShe put her hand over my mouth, saying, \"This will be a long story, so be patient. And, I cannot do it well in English, so I need phone to help.\" She pulled her phone out of her pocket, tapped it a few times, and set it on top of her hair, and therefore my chest.\n\n(To make this easier to understand, I will not refer to the phone during this pronouncement of hers, nor the parts spoken in Japanese, unless necessary.)\n\n\"Where to start,\" she pondered, looking off somewhere above my head. \"When I was younger - sent off to a girl's school, to be hidden away, by the woman who was supposed to be a mother to me - there were many nights I cried myself to sleep. I was scared, lonely, scorned, and unloved. Saying I was unhappy, is not close to how much despair I felt.\"\n\nTears started down her cheeks, and she wiped at them. Sniffing, and choking slightly, she spoke again, but the phone said something in Japanese, rather than English. She cleared her throat, and tried again, \"I wanted to run away, and I even tried, going off into the forest. It was there that I discovered the peace of the forest, how quiet it was. My life of being ignored had been quiet, but this was very different. The forest's quiet calmed my fears and my loneliness. I saw animals, and how simple their lives were. I fell asleep with two rabbits watching me. The school found me that night, and took me back, and punished me, but that punishment was meaningless. I sneaked back to the forest, many times\"\n\nI started to speak, to sympathize, but her hand covered my mouth again, and she gave me small smile.\n\n\"From that night, whenever I felt lonely, angry, or sad, I thought of the forest and that made my brain quiet. Or, I became one of the animals, saying that the beauty of the forest was around me, as my home. I found a peace inside me. From there I began to watch the other people at school. They were like animals, sad animals, in an ugly forest, and I felt sorry for them.\"\n\n\"As I got older, I learned from watching human behavior, and I learned not to be made sad by it. They could act happy, but they were still to be pitied for how little they understood of their own lives, and how little control they had over their own emotions. But, I cannot deny that I longed for friends and parents. My one bright spot from early on, was that each year, my father, Taylor Timmons, would come to visit me, with a translator. He took me places, bought me clothes, food, and gifts. But most importantly, he came to see me, not ignore me. He told me to just to go along with what the school asked; to play their game. I did that, very well. I was quiet, polite, shy...invisible, but not so much an outcast anymore.\"\n\n\"He said when I turned 18, that he would see if he could take me away. I now had hope. I just needed to wait to graduate, and then my father would take me and love me. I was nearly 13 and knew that his next visit would be coming soon. But he did not come, not ever again. No one told me why, not even my mother. My hope lost, I fought with my mind, again, to focus on the future, when I would graduate, and I could make my life my own, free of the shame my mother and the school wanted me to wear, like crown of thorns.\"\n\nThe tears came stronger now, and she slipped off of me, and asked where the bathroom was, and I pointed. She was gone a moment before she came back with several tissues in hand and daubing at her eyes.\n\nKoki put her finger to her lips to hush me, as she looked at my sad face, and as she climbed back on top of me. \"Don't worry,\" she said, \"This story has a happy ending...probably.\"\n\nShe continued, \"So, I am 18, a few months from graduation, and with the best scores in the whole school, I will brag. Then they tell me mother has been killed in a crash. Her accounts are all frozen until the estate can be settled. The school tells me I must leave, as the money is no longer arriving. Then they tell me my father died those years ago. I already knew that my mother's father had passed years ago, and grandmother had been so sad with his death that her mind was lost. There were no aunt's or uncles. There was no one to ask, and the school was soon to push me out, whether or not I had somewhere to go.\"\n\n\"Then the email came to the school that the Timmons, Cal &amp; Tricia, would take me. I had hope, even though I knew nothing about them, except that they lived in Colorado, in the USA. I was unsure how I should act, what behavior was expected. I do not speak English, but as I watch behavior, theirs and others here, I see kindness, friendliness, welcoming, and no scorn. I have hope that I can dare to consider being happy here, even though I am so ugly.\"\n\nShe waggled a finger in front of my face, with a warm smile, \"You do not need to repeat it. I know your words, and I now believe them, or more importantly, I know that you believe them. - Only a little story is left. - Then, the Timmons get me a cell phone, though I have no one else to call. The app lets me talk and be heard, and I hear my words in English.\"\n\n\"Four days in this new place, and I meet a good looking man named Chad who makes my heart leap the first time I see his eyes. I do not understand my heart, but I so want to understand what it keeps calling to me. But, being ugly, I know he will not see me. Then he touches my leg, and my heart screams again, but I tell it to not be so stupid. It was just an accident.\"\n\n\"Then, we are alone, and he says that I am pretty. My heart stops. I think of my forest. I cannot hope such words could be true. Then he is kind, listens to me, sees me, and cares about my sadness. I grab all my courage, and put my lips on his, knowing it will be the only time. But -- and this is a good 'but' -- he stops me, holds me, and his lips do things to my body and my heart that I did not even know existed.\"",
        "Koki's smile grows, when she sees me smile. Even though the phone is speaking, I can tell she would be bouncing, if she were on her feet, as her voice is now bright with inflections. I start to slide my hands up her thighs. Grinning, she says \"Not Yet!\", this command in English. Koki swats my hand, and then laughs when the phone translates \"Not Yet!\" into Japanese.\n\n\"So, my heart pleads for him to want to see me again. Then it dances when he does. Kaito suggests photos will make sure he comes back. I worry that, with the pictures, he will know how ugly I really am. But, I decide that I have to know his decision, for I could not go forward without knowing if he would later turn me away, once he saw all of me. And if I had to give him my body for this sex, I could endure that, as it would honor him for his kindness to this ugly, bastard girl.\"\n\n\"Then he returns. He still wants me. Then the magic; I start to believe his words. I think, at least for him, that I please him, and I like pleasing him, very much. Then he touches my breasts, and I suddenly have no fear anymore. My heart dances and my mind agrees with my heart. His touch is heaven on earth. It is a feeling I want to own always and forever.\"\n\n\"We have lunch and he asks me questions that I want to understand, but I am not sure of. So, I take last night, and I study very hard. I probably wear out Google Translate. I study 'taking advantage', and 'innocent', and therefore study 'sex', and then 'love'. I think very, very hard about my life and whether I can conquer my past. Then it suddenly comes into my mind like a morning sun; that that was 'old' Kokomi. 'New', American, Kokomi has no past, no pain, and is all about the future. Therefore, I am free to be as happy as I can be. And I have found a man who makes me more happy than I know how to understand, so I will just wallow in happy like a pig in mud.\"\n\nI broke out laughing at that remark, and then smiled so hard, it hurt. I only got out a \"You...\" before two palms covered my mouth and I saw a glowing smile and dancing eyes getting closer, until she rubbed noses with me.\n\n\"Now, really, really close to end...promise. After much study, I now know that I am very innocent about sex and such a physical relationship. But, I am so eager to know what it feels like and what it means. However, I am Not innocent about human behavior. I have lived among greed, anger, contempt, selfishness or simple evil. I see none of those in this man.\"\n\nShe took her hands off of my mouth, and gave me a drilling stare. \"Tell me, then. Are any of those bad things hiding in this man?!\" I chuckled, shaking my head. \"Good, just as I thought!\" she chuckled back.\n\nNow she lifted the phone, put it to sleep, and set it aside. She picked up the end of her hair that had been on my chest, and started whirling it around. In English, she said, \"I must also be sure he does not want this...\" and slapped me on both sides of the face with her hair, \"...BDSM sex!\" I started laughing so hard, she had to steady herself with the back of the couch as she rode my bouncing stomach. I shook my head again, and she started laughing, too.\n\nThe laughing turned to a giggle, and she said, through a big smile, \"I did see an interesting lady, tied with silk scarfs and touched with a feather. I could be tempted to try that!\" I started laughing again, but nodded my agreement. \"NOW,\" she said, glaring at me, \"The most important question!\" I stopped laughing, and waited, intently. \"Is this wonderful man patient enough to teach this innocent about cowgirl, doggy, mission, and bareback!\"\n\nI grinned and chuckled. \"But it is called 'missionary', and bareback might be a problem because...\"\n\nShe covered my mouth again, shaking her head. \"I have one thing to thank mother Ishikawa for, and her fear of sex; the IUD two years ago. Also, I do not have that hayman.\"\n\n\"Do you mean 'hymen',\" I chuckled, again. \"Yes, that!\" she laughed.\n\n\"And no man has ever touched you, before me?\" I asked.\n\n\"One teacher want to, but I kick him between the legs, the way my father taught me. If not that, I have shaken hands with men. That is all. Now, last, most important words. Yes, you are first...everything for me...but I am not stupid. I may meet other men, but what could they give me that you do not. Money, I have, but I do not want to be the fashion model, or the celebrity, to shop, shop, shop. I want to be in the forest, with you. And to hear your kind voice tell me that I am sexy, and only yours. And to tingle at your touch, to sigh in your arms. And to know that I can live every day and know it will be you that battles the sun to be my light and to make me warm. Is this not what love should be?\" she said, seeming to glow with the delight of saying the word \"love\".\n\nI think I had known about 10 minutes ago, that I loved this delightful soul, and I had never thought that I had loved any girl, before. And just \"girls\" they had been. Looking up into those waiting, big eyes, I croaked, \"You are my first, too. The first woman I have loved, and the last. You are courageous, delightful, and wonderful.\"\n\nHer tears started again, but this time they trailed over cheekbones pulled high in a huge smile. She placed her hands beside my head, on each side. \"Now let me feel the hands of the man that makes my heart sigh,\" she whispered.\n\nI watched her face as I slowly slid my hands up, cupping her butt. Her eyes stayed on mine, but they looked a little strained as she let out a deep breath. As my hands started to move up, her back tensed in an arch. When my hands reached the bare skin of her back, her eyes closed, her head tilted back, and her back sagged in relaxation. I slowly stroked up to her shoulders, and her mouth fell open, silently. Then Koki's eyes eased open, found mine, and she reached behind her head, did something, and then her ponytail exploded into a waterfall around her head and shoulders, enveloping us both.\n\nHer eyes still fixed on mine, she lowered her body onto mine and relaxed, with her lips slowly swirling over mine. She would not yet understand it, but she was the sexier than any dream I had ever had. I poked my tongue out, against her lips, and she pulled back slightly and looked at me curiously. Giggling, she stuck her tongue out, and dueled with mine. Then I gently pulled her head down, exploring the inside of her lips, and returned my hands to stroking her back. She seemed startled for a moment, and then opened her mouth, sank against mine, and carefully probed my mouth with a surprisingly long tongue.\n\nNot releasing the kiss, or stopping the exploration with her tongue, she braced herself on her forearms, and started to shift her legs. I pressed her back against me to stabilize her, and then she straightened her legs out, so that she was prone on top of me. Finding my hardness under her, she broke the kiss, giggled softly, and gently shifted her hips, as my hardness rolled underneath her. \"What position is this called?\" she asked quietly.\n\n\"I don't know,\" I smiled, \"How about we just call it the 'happy' position?\"\n\n\"Oh yes,\" she sighed, \"Very happy position. My body is calling to me, saying much more pleasure is hiding within me!\"\n\nI slid my hands down her back, and eased them under her sweats cupping her startlingly bare buttocks. Her breathing halted and her head dropped next to mine. As I rolled my palms over her soft, but firm butt, she started breathing again, and whispered something in Japanese. I asked her what she said, and Koki gave me a single laugh and said, \"If I text you, it would be 'OMG'!\" My laugh bounced my stomach up into hers, and then she let out a big sigh that dropped her stomach firmly onto mine. I withdrew my hands from her sweatpants, while she hummed, softly.\n\nPropping herself on her elbows, she searched my face. \"How can this be?\" she asked, \"I have never done this before, yet my heart knows this is where I belong. My body urges me to find more tingles, yet I am as calm and relaxed as a doe resting in the forest. I want your hands to touch the skin of my back, but I miss your hands on my butt. I need your hands on my face, long for them to return to my breasts, and my hips cry for a touch that it says is dangerous. All of this while my fingers now crave to touch your skin, to explore where your sighs are to be found. It is everything at once, wonderful, yet never enough. Is it this way for you?\"\n\nI swept her hair away from her face and just looked into those waiting eyes. \"My words will never be as beautiful as yours, but yes. I have touched the skin of a woman before, many really. Yet, I have never felt what I feel with you. My desire for you is beyond what I thought was possible. I want to pleasure you, yet I could simply get lost in your calmness and your joy for hours. Either seems like heaven to me.\"\n\nKoki smiled, nodding slowly, \"I think I could live my whole life in this moment, and never miss the world. You are all I need.\"\n\nI reached up and kissed her, and then let my hands slide off of her. \"I think we should move to the bedroom.\" She nodded and slid off of me, giggling as my hardness was drawn across her hips. She reached out and cautiously touched that hardness with one finger. \"That is a mystery my body longs to know.\"\n\n\"You will, my beautiful. That, and much more.\" She grinned, swung her hair, so that it was wrapped around her neck like a winter scarf, and then picked up our shoes. I picked up the sodas, and started toward the hallway to my bedroom. I heard her wistful voice behind me, \"Goodbye, old Kokomi. You no longer have a home in me.\"\n\nI stepped into my room, set down the soda, and turned. I found her standing in the door, looking around my room. It was still pretty much as it had been since high school, and really wasn't conducive to seducing women. In fact, I had never actually had sex with anyone in here, ever. My full-size bed hadn't even been made up; a rookie mistake on my part.\n\nShe put our shoes down and started looking at the pictures on the walls, paying the most attention to my baseball team photo. She studied it closely, finally pointing and saying \"You?\"\n\nI put my face next to hers to look at the photo and was about to respond, when I heard her vaguely inhale. Turning just my eyes, I only could see part of her face, and it was turned towards me. \"What are you doing?\" I asked.\n\n\"Smelling you,\" she said, simply.\n\n\"May I move?\" I chuckled.\n\n\"Yes, I am done,\" she said, and I turned to see a contented smile as her eyes glittered looking at me.\n\n\"Good?\" I asked.\n\n\"So different, but very nice,\" she said, as she sat on the bed. She petted the sheets, and then slowly looked all around, once more.\n\n\"Is anything wrong?\" I asked, with some caution.\n\nShe turned towards me, with a very gentle look on her face and her hair pooled behind her, \"My life has changed so much since I have known you. Today, it has changed very much, already. But, I think what we are about to do will be another great change, and I wish to remember this place.\"\n\n\"Are you concerned about having sex with me?\" I queried, as I sat next to her.\n\n\"No...no, no. My insides are dancing with excitement because my hopes are so great about this...this...I liked it last night when I read it can be called 'making love'.\" Leaning back against my shoulder, she continued, \"I am here, in love with the man who loves me. 'Old Kokomi' would not even believe this moment could exist. You are about to show me pleasures, that my imagination is not great enough to even know how to start imagining. And, I hope I can honor your love by returning pleasure to you.\"\n\n\"Koki\" I said, and encouraged her to sit up so that I could turn to face her, \"Just listening to you with these thoughts is like being struck by the beauty of a poem, and I don't like most poetry. You're amazing. The depth in your soul makes me feel my life, until I met you, has been shallow and childish. I thank you for showing me something in myself that makes me feel...well...more valuable.\"\n\nHer eyes searched mine, and she ran her fingers gently down my cheek. Then it was my turn to put my finger across her mouth to stop the imminent words. That made her giggle. \"It is my turn to talk,\" I said, smiling, \"I want to make love to you, so very much. And I want to create all the pleasures in you that I know how to...well, maybe, not all of them, at least today. We have time to learn each other's bodies and what they like best. But, for this time, I want you to just enjoy receiving pleasure from me, and not worry about me. I will get all I need, and more, just from the giving. Is this okay?\"\n\nKoki's head leaned towards me, and she whispered \"Yes\" into my mouth, before her tongue played over my lips. I gave her a moment, and then I brought my tongue out to play with hers. She hummed, happily. When she stopped, I said, \"Lie down and move up.\" She smirked, and followed my instructions, lying on her back after she had moved her hair aside. I lay on my side, next to her, and then leaned down to kiss her. She returned the kiss, this time with more eagerness than I had felt before.\n\nShe gave a little squeak and shudder when my hand petted her stomach. After that, I felt the muscles of her stomach roll in contractions as I moved across it. As I started to slide my hand under her top, she took in a deep breath and held it. Once I had slowly stroked across her breasts a couple times, and felt her nipples respond, she gave in and started breathing again, with her mouth limply open against my lips. The more I ran my palms over her breasts, the more rapid was her breathing and squirming. The gasp was sudden and strong when I started circling her nipple with my forefinger. When I moved to her other nipple, she gave a long moan, and she started to writhe, her grip mauling one pillow. I pulled back and smiled at her, as I gently rubbed the end of her nipple.\n\nStill squirming slowly, she looked at my eyes for a moment before her gaze wandered off, and her voice moaned, between bursting breaths, \"What is...this magic...that I am...helpless to...your touch?\"\n\n\"I'll get you, my pretty!\" I said, in a cheesy, raspy witch voice, and that got a quick smile and a single laugh, before the pleasure of my rolling her other nipple between my fingers brought her back to her bliss. When I removed my hands from under her top, she looked at me with pleading eyes, which grew more intense for a few seconds before she lunged at me, kissing me hungrily while clutching and pulling at my t-shirt. I rolled away, to her confusion, and pulled my t-shirt over my head.\n\nKoki just stared at my chest, before cautiously reaching out to touch me. The slow motion of her movement contrasted with the heaving of her breaths. Once a finger touched my stomach, her whole hand quickly followed. Her anxious eyes glanced at me before her hand started to travel all over my chest. She stopped to comb the small patch of hair in the middle of my chest. Then she moved to my arms, and all the way down to my hands, with a look of puzzlement.\n\nShe again looked at my chest, and then placed her hand on it and paused. I think she was feeling my breathing, and I smiled at her. Her breathing was still strong when she looked up at me and I smiled back, before a few chuckles bubbled out of her. Then she focused on the small trail of hairs down the center of my stomach, gently twisting them and working lower until she reached my navel. She traced around it with her finger a couple times and then started twisting the trail of hairs below the navel, until she reached the waist of my jeans.\n\nI was enjoying watching and feeling her exploration, when her hand moved over the waist button, and then hesitated. She looked at me with a question written all over her face, and I nodded. Very slowly, she lowered her fingers to the waist button, and, rather, explored it with her touch. When she finally decided to undo it, she found a single hand was not effective. She quickly sat up, now more determined, and used both hands to free the button. Her hand rushed to the zipper, then pulled back quickly, as if it had bitten her. Both hands jumped to cover her face, as her blush grew.\n\nI put my hand out and stroked her bare back and the ribs of her side, and she leaned into my hand, slightly. Her tentative hand reached out, grasping the zipper. One click, then several. Several more followed, then a continuous 'zip' all the way to the stop. She cautiously lifted one flap of my open jeans, and then just stared at the long, large lump in my boxer briefs. She actually recoiled and squealed when my penis displayed its enthusiasm with a bounce against my underwear's fabric.\n\nWhen she continued to stare and breathe deeply, I started pushing her top up, and her hands jumped back to cover her face. Then she looked at my face, nodded slowly, and pulled off her top, dragging it out to full arm's length to free her hair. I finally saw her lovely round mounds, with small, medium brown areolas and nipples. I pulled her topless form onto mine, and she tentatively let her body come into contact with mine, and then let her full weight settle onto me as she tucked her face against my neck, with her hair draping over my arm.\n\nShe slid both hands down my arms and interlaced her fingers with mine, as her warm breath discharged under my chin.\n\n\"Happy?\" I asked, almost rhetorically. She slowly nodded. Rocking her head back, putting her mouth close to my ear, she said, in a hush, \"This is impossibly pleasing. Everything you do, I want that thing to never end. But, my body tells me there is a better end to these pleasures, and this journey must continue. What is next, my master?\"\n\nI slid my hands from her hands, and put mine into her sweat pants, grabbing her bare butt. I received a satisfied moan and squirming hips. Whispering to her ear, I said, \"I never want to be your master in life. We will always be equal partners in whatever we do. But for these pleasures, today, I will play a gentle master.\" The cheek next to mine nodded.\n\n\"Then\" I chuckled, \"If you wish the journey to continue, you must be brave, and remove all your clothes, and then mine, too!\" Koki whimpered, but then slowly pushed off of me, with her hair rising off the bed. Koki looked at me, rolled onto her back, and then closed her eyes as she slid her sweat pants down. There was no underwear for her to remove. She looked back at me anxiously. \"Beautiful, sexy...and mine\" I responded, and she gave me a brief, shy smile.\n\nI nodded towards my body, and she rolled onto her side, with her hands cautiously approaching my waist. With just two fingers of each hand, she tried to pull at the loose fabric at my hips. Unsuccessful, she tried using the belt loops, but only gained a couple inches, even with me raising my hips. Resigned to force, she got off of the bed and started snatching at the cuffs, then legs, then finally grabbed handfuls at the top of my thighs and yanked. That got her the progress she needed, and she smiled as she slid my jeans down my legs and off.\n\nNow her hands really got hesitant, and she looked at me. Her eyes pleaded for me to confirm that she actually had to do this. I nodded again, and she slowly reached for my waistband and gently pulled. When my crown appeared, she let go and jumped back, giggling loudly. I guess it is universal, because next she did that female tension-release thing of bouncing while spinning, and shaking her splayed fingers. With a couple deep breaths, she resumed her task. When the crown again appeared, I laughed as she winced and then only peeked at my groin when slid my underwear off me.\n\nHer peeking morphed into a full-on stare, as she studied whatever had her attention about my genitals. Then, a single finger extended forward on a slowly moving hand. She looked ready to leap clear at the first sign it would attack her. Koki looked at my face with an anxious smile, and I gave her a big smile and nodded again. She finally touched the shaft, lightly poking at it. Then she poked the crown. Its softer texture seemed to interest her, and she poked it several times before braving a little squeeze.",
        "She moved closer, sat next to my hip, now smiling, calmly. She lightly poked at my scrotum. I told her, sweetly, \"Go ahead and touch and feel anything. But the two testicles inside there...please do not squeeze them. You remember what you did to that teacher you kicked.\"\n\n\"Oh!\" she said, and then started giggling as she gently lifted my scrotum, before moving to lightly petting my rigid penis. Looking, she saw the glistening drop of precum on the top of the crown. She pointed and asked, \"Pee?\"\n\n\"No\" I said, \"That is precum. It is sort of like when you get wet between your legs.\" Her eyes widened at that answer, and she calmly reached out and dabbed the precum on her finger. She looked at it, sniffed it, and then thoroughly surprised me when she dabbed it on her tongue, with a giggle.\n\n\"Hmmmm...\" she said, \"Salty, but not like soy sauce.\"\n\nI grabbed her shoulders, and spun her flat on her back, holding myself above her with my arms. She gave a loud squeal and then grinned. She thought I was going to kiss her and closed her eyes. However, I started kissing her cheek, then her closed eyes, her chin, licked up her ear, kissed her neck below her ear, and then her throat. At first, she softly chuckled a couple times, but then I could feel her muscles sag and she went from a sharp, \"Oh!\" to a series of smoother purrs of \"ooooohhh\".\n\n\"Now it is my turn to taste you!\" I whispered, as I raised my head to look at her face.\n\nHer eyes popped open, anxiously looking down over her chin as my head kissed down to her breast, and then sucked in her nipple. My weight stopped her single buck, but the gasp and sudden inhale were right in my ear. Her breathing was speeding up again, and it increased further as I left that breast and kissed across to the other. When I flicked that nipple with my tongue, she held her breath and really started squirming. I could feel her grip pulling at the sheets underneath me. My suck got an agonizing whine from her.\n\n\"My,\" I said, \"you certainly are very sensitive.\"\n\n\"Is that bad? I can try to be still!\" she said, in a whining tone.\n\n\"No, no, my love. It is wonderful. Every sound you make, every little motion you do, is a joy to my heart,\" I said, thinking her poetic words were infecting me, \"Please be free to express whatever you feel.\"\n\n\"Good...because it is very hard to be quiet, or still, with your magic touch on my skin. My mind just wants to sing with the happiness your touch makes in me, and my body screams, 'More, more, and MORE, Please'!\"\n\nThen your wish is my command, princess. \"More\" is what you will get. I delicately kissed down from between her breasts to nearing her navel.\n\nSuddenly realizing where this may end, Koki gasped, \"Your mouth...you cannot...\"\n\nI kept kissing lower, my chin brushing the first of her pubic, and then I sat up.\n\n\"You would do this!?...No!...Yes!...Why?!\"\n\nI pushed her ankles apart, and moved between her legs, pushing her thighs apart, with some resistance. Her hands went to her face, smothering the long squeal as she shook her head, side-to-side.\n\nI lowered my face, my tongue playing with the pubic hairs on her mons. Koki was now giggling anxiously, which was still smothered by her hands. She started squirming her hips, as my tongue tasted the edges of her labia. She let out a huge gasp when I probed my tongue between her labia, contacting the warmth within. As I drew up, across her button, she jolted slightly upwards on the bed, and I heard and felt her hands slap flat on the mattress, just before her hips writhed across my nose. I moved up to compensate for her now higher position.\n\nI rose to look at her face, \"Do I need to explain the 'Why' to you, now?\"\n\nShe quickly shook her head, gasping, \"I know now, this is what my body has been asking for! A fire grows in me to give you anything, if you just do not stop!\"\n\nI didn't stop, after that. My mouth, my tongue and my fingers worked as much magic as I could conjure. Slow, fast, soft, hard, gentle, then deep. She simply melted into breathy pleading, in Japanese. Eventually, the pleading tones grew sharper, the words shorter and louder, her face strained, and she then began to vibrate, like nothing I had ever created in a female before. When Koki came, there was one long, high appeal of \"Chad!\", and she just folded up, like a human origami, with her chest heaving. Continuing spasms ran through her glistening body, mostly causing her legs to try to kick out, straight.\n\nI happily watched, while her pleasure dissipated, slowly stroking her body. Her hair ran over the edge of the bed. Then I had to laugh, as her first English words in some time were, \"Am I alive, master?!\"\n\nPutting my face near hers, I said, \"Yes, my love. You have survived. Tell me when you are ready to continue.\"\n\n\"THERE IS MORE!?!\"\n\n\"Unless you want to stop, here, I do have at least one more idea,\" I chuckled, as I stroked her leg.\"\n\n\"My body just...it...BANG! Then, no control. Crazy mind, with wild ideas, and so many questions. Now, my mind is slower, and I am filled with love. All of it is so strange, but so very, very nice.\n\n\"Come on, let's unfold you!\" I said. I gently pulled her legs straight, put her arms above her head, and rolled her onto her stomach. Her mind did not seem to want to give up its bliss, and barely offered any help. I started a light massage of her shoulders after I had moved her hair aside. She let out a big sigh, and then closed her eyes. I continued with her back, arms, hands, back again, thighs, calves, and lastly feet. Then I swatted her butt.\n\n\"HEY!\" she mumbled, with her cheek against the pillow. Then she rolled on her back. \"You said no BDSM!\"\n\n\"Sorry,\" I laughed, \"but it was just too cute! Now, do you want some food, or should I continue with your 'education'?\"\n\n\"I do not need food. I just need more of you!\" she grinned, \"So what do we do next?\"\n\n\"The big S-E-X,\" I said, giving her my best hungry expression.\n\nQuietly, she asked, \"You mean you, inside of me?\"\n\nI nodded, and her eyes trailed down to my partially aroused penis. Her hand quickly covered her mouth, \"But it is broken! Did I break it!?\"\n\n\"No!\" I laughed, \"Just touch it!\"\n\nShe slowly reached down and poked at it, which initiated a little expansion. \"It goes up and down??\"\n\nI nodded again, \"Put your hand around it.\"\n\nShe cautiously enveloped it, and smiled up at me, as she felt it expand further.\n\n\"Move your hand, up and down,\" I requested.\n\nShe sat up and then then moved her hand in short strokes, and my penis firmed up, quite nicely. Now, she was curious, as she felt the hardness, underneath the sliding skin. She released her grip, looked closer, and used a finger to trace the blue veins. \"Is my touch pleasing?\"\n\n\"Very pleasing,\" I confirmed. She smiled, broadly.\n\nAs her focus was on me, I slipped my hand over her thigh, and brushed her pubic hair. She looked down in surprise, but then just said, \"MMmmmmmm\", as she wrapped her hand back around my shaft. I shifted, turned her face and kissed her, while my hand started to rub across her still damp nether lips. That caused a slight gasp through the corners of her mouth, but she quickly resumed the kiss, and brought her tongue into play.\n\nHer breath was quickly increasing, as was the wetness on my hand. I moved to nuzzle her neck, as well as pressure her to lay on her back again. She released me, and sank to the bed. My own breath was increasing in depth and speed, as kissed, sucked, and nipped at her breasts. Her legs spread, giving me full access, as her hand wrapped the back of my neck, and as her cooing got louder and louder. With my hand, I cautiously brought her to point of pleasure where she was distractedly speaking in breathy Japanese, again.\n\nI slowly rolled between her legs, my hardness fully ready. I removed my hand, and my penis rubbed across her wetness. With a bid of dazed look, her eyes looked down, and then anxiously looked up at me. Searching my face, she asked, \"Is the time now, for my innocence to leave?\"\n\nI looked at her, warmly, and nodded.\n\n\"Then I am ready,\" she said, and widened her legs.\n\nAs I started to enter, her brows showed concern and she winced. She was certainly tight. I had never been with a virgin before, and hoped I was being gentle. \"Are you okay?\"\n\n\"Yes,\" Koki sighed, \"My body tells me that the pain is not important. Please continue.\"\n\nI eased into her, watching her face with each short bit of progress I made. Once I was well within her, I looked at her again, and she looked lost in contentment. \"Okay?\" I asked again.\n\n\"Very okay,\" she sighed, \"With you within me, my body tells that this is the happiness is has always sought.\"\n\nI gave her the first, gentle stroke, and she squirmed and whimpered, happily. I went into a slow rhythm, and her head eased back, with her mouth falling open. I kissed her breasts, as well, and her head slowly rocked, as she whispered in Japanese. A faster, firmer rhythm brought some tension to her face. As I continued, her hips began to oscillate, including pressing against me, as she whined. Knowing I was nearing my climax, I picked up speed, lightly slapping against her.\n\nHer eyes opened, with a look of desperation, and then she nodded to me. I came loudly. The end had taken my focus from her, and I noticed only her groans and whimpers. Coming back to reality, I felt her hips still forcing herself onto me, and saw her eyes remained closed. I moved a hand to her clit, and quickly swirled it with my thumb. Her eyes opened in shock. She only lasted a few seconds before she grabbed me in tight hug with her arms and legs, and shook with the spasms, both external and internal.\n\nAs the spasms retreated, she released me, but then pulled me down on top of her. Her face was look of astonishment. Still breathing deeply, she said in a shallow voice, \"I would not have believed the world contained this much pleasure. Now I understand my innocence.\" A tear slowly trickled from one eye, before she continued, \"I think that, now, I can learn to forgive my mother. I asked why she would have a child if she did not want it. But, I can see how much power this pleasure has, and I can hope she had this pleasure, as an exchange for her unhappiness.\"\n\nKoki slowly pushed me off of her. As my limpness slipped out of her, she looked down, \"At least it died happy.\" I couldn't help laughing at that. She looked up at me, \"Sex is messy, but I think I like that, as it is your 'mess'!\"\n\n\"Chad?\" she said, suddenly looking serious, and I stopped laughing.\n\n\"What is wrong, Koki, my lovely?\" I asked, watching her face closely.\n\n\"Chad\" she repeated, and turned her face down. \"I know what I want for my future. Is Kokomi in your future?\"\n\n=+=+=+=+=+=\n\nTwo days later, mom called and said they would be back today. She said not to worry, she would make something for dinner, whatever it might be. Dad and she would be home around 6 PM, with average traffic. I told her not to worry about it. I hung up and kissed Koki on the cheek. \"Well, it's tonight,\" I said, \"Shall we go to your place now?\" She nodded.\n\nWhen it was close to 5:30, mom called, \"Hi, dear. We will be home in half an hour, if your father doesn't blow his lid...[Howard, yes, the truck driver is an idiot, but just slow down and let him go!]...See you then.\"\n\n\"Sure, mom. I have taken care of dinner, so relax.\"\n\n\"Uh...okay...[Howard!]...See you soon, I think.\"\n\nWhen my parents pulled into the garage just before 6 PM, I went out and met them. I grabbed both their bags and followed them in. \"How's Aunt Sharon?\"\n\n\"Better than I expected. I finally got her to take the pain killers, and now she is trying to do too much, in her boot, and on her crutches. But, Stewart surprised me, and has really pitched in.\" Then mom let out a big sigh, \"I just want to get off of my feet!\"\n\n\"Damn truck driver!\" dad grumbled, \"Thought he owned the fuc...\"\n\n\"Howard! Stop it!...So, Chad dear, when is dinner?\"\n\n\"Well...\" I hesitated, \"I would like it to be in about a half hour...\"\n\n\"Fine, fine.\" Mom interrupted, as she landed on a kitchen chair, and dad opened the fridge, reaching for a beer.\n\n\"...at the Timmons' house.\"\n\n\"WHAT!? Oh, Chad! We are tired. And we haven't cleaned up.\" Mom said, rather exasperated. Dad looked at me curiously, pausing his hand on the bottle, yet unopened.\n\n\"It's nothing formal, whatsoever. Just Blackjack Pizza. I even got the Santa Fe one, with Jalapenos added for you. Pleeease?\n\n\"What is so important that this can't wait?\"\n\n\"Pleeeeeeease, mom...and dad?\"\n\n\"Howard?\" mom sighed.\n\nDad shrugged, \"Sure. I hate seeing the boy beg.\"\n\n\"Okay,\" she sighed, \"Dear, let's go and get cleaned up, at least a little.\"\n\n\"Your jeans are fine,\" I added, as they walked down the hallway.\n\nWith them in the bedroom, I called Koki, \"There coming...Okay...yes, me too.\"\n\nThen I called Blackjack Pizza, \"Hello...the order on hold for Charles Shearborn...please put it through, and don't forget the jalapenos on the Santa Fe...40 minutes will be fine.\"\n\nIn a half hour, my parents were ready. \"Do we have to stay long?\" mom asked.\n\n\"Just long enough to eat,\" I assured.\n\nDad rang the doorbell, and Tricia answered the door, with Cal behind her. \"Come in, come in,\" she said, and gestured us through.\n\n\"Good to see you both...oh, and Kokomi back there, too. So, what is the 'special' occasion, Trish?\" mom asked.\n\n\"You'll have to ask the grinning girl back there. This is her idea...not that we aren't glad to have you here.\" Tricia said.\n\n\"Please be seated,\" said Koki, gesturing to the living room. \"Dad, can you provide the drinks?\" she asked.\n\n\"Sure, dear. The usual for everyone! ...Good. Koki? Chardonnay? ...Gotch ya.\"\n\nJust as Cal was coming back with the drinks, the doorbell rang, breaking the silence in the room. I got up, answered the door, tipped the driver, and brought the 3 large pizzas into the kitchen.\n\nKoki stood up, bowed, and said, \"Would everyone be so kind as to come to the kitchen and choose their meal? We have the pepperoni with onions, the Jackpot, and the Santa Fe, with the yummy jalapenos.\"\n\nOur parents got up, served themselves on paper plates with plate holders, added flakes and Parmesan as desired, grabbed napkins, and returned to the living room. Koki &amp; I were last, and when we got to the living room, our parents were discussing Aunt Sharon's recovery. That continued through most of the first slices, until Dad tried to talk about the truck driver, and mom cut him off.\n\nTricia spoke up first, \"So, we have you...both, I guess...to thank for this tasty dinner. You have our attention, now. Was there some other reason, Koki?\"\n\n\"Hai\" said Koki, as she stood, and bowed again, and her ponytail, again, drifted to her side. \"I have asked you here because I wish to make my life understood by all of you.\" Then she turned to her parents and bowed again. \"To my American parents, I assure you of my love and gratitude. I am so sorry if this story causes you any pain, but I think it is necessary for all to be told.\" She went on to tell of her mother's rejection and the schools', her father's visits and their end, and her sorrow. Many of her words had her poetic quality. Apologizing, she left the room, and came right back with a box of tissue, offering it to everyone. Mom, Tricia, and Cal accepted.\n\nThen Koki continued about the death of her mother, the frozen money, getting ready to leave the school for an unknown future. Then she glowed, as she told of the Timmons' request for her to come to America.\n\n\"I was rescued from an empty future by my distant family. In a short time, they have given me everything that I lost hope to dream of; love, recognition, acceptance, praise, and a home. They will be my mom and dad forever!\"\n\nTricia grabbed another tissue, burying her face into it to stifle her sobs, and Cal dabbed his eyes.\n\n\"There is one more person in this room that I owe my life to,\" she said, with a wonderful smile, as she turned to me. I was a bit puzzled, as we had not talked about this. \"My new parents saved me from my fate, and showed me all the kindness they had, and filled such a dark place in my past.\"\n\n\"But, it is Chad that has freed my happiness, and showed me the future. I thank you, Hazel and Howie, for raising this wonderful man. His care for me, his kindness, his patience, and his gentleness with my lost soul, have let me say goodbye to the 'old' Kokomi and to start again, as the 'new' Kokomi Ishikawa.\"\n\nI was considering asking for a tissue.\n\n\"And, with your, further, permission...\" she paused, to shift and look at me, before turning back to my parents, \"I would, most humbly, ask that you would allow me to use the name of 'Shearborn'?\n\nThe two-beat pause of consideration was scary. Tricia broke the puzzled silence first, \"You don't want to be a Timmons? Why would you...OH, GOD!!...You...Chad...Shearborns...dear GOD...when?...how?...OH! You aren't pregnant are you!? ...Where will you live?...HOW will you live?...\"\n\n\"Tricia!\" Mom said, with a big smile.\n\nTricia's momentum couldn't stop that fast, \"WHEN? ...I'll need a new dress! ...there are so many plans! Where will you have...\"\n\n\"Trish,\" Cal said, gripping her arm.\n\n\"I...I know...shut up Trish...but this is unbelievable! ...They're getting...shut up, shut up!\" Tricia finally stopped, and drew in a deep breath.\n\n\"It would be our honor to include you in our family,\" my dad said.\n\n\"Yes, oh yes,\" mom added, \"But you are only 18! Are you really sure...And you aren't...well...?\"\n\nKoki grinned, and shook her head. \"Not pregnant, but deeply in love.\"\n\nI stood up next to Koki. \"Mr. &amp; Mrs. Timmons, will you accept me as a son?\"\n\n\"Of course,\" smiled Cal.\n\n\"Absolutely. We just gained our first child, now we will have son! ...This is...shut Trish, shut, shut.\"\n\nWith that last clear confirmation, I pulled a ring from my pocket and put it on Koki's ring finger, \"Then I present my fianc\u00e9, Ms. Kokomi Ishikawa-Timmons.\"\n\n\"Timmons?\" Cal asked.\n\nKoki nodded, \"With your approval, the 'new' Kokomi would like to change her name, before the wedding.\"\n\n\"OOOOooooh!\" sobbed Tricia.\n\n\"Of course. Again, it would be our honor,\" Cal said.\n\n\"Son?\" Dad asked, rather flatly.\n\n\"Yeah, Dad?\"\n\nDad shifted, and bent forward, \"Assuming that ring is not costume jewelry, where did you get the money for it? I think it a reasonable question.\"\n\n\"I almost cleaned out my savings, dad,\" I responded, stifling my smile.\n\n\"That doesn't seem too smart, given that she can't live in your dorm room, for the next school year, plus,\" dad scowled, \"You aren't thinking of something stupid like dropping out of college, are you?\"\n\n\"No dad. We will get a place in Utah until my schooling is finished. Koki will try to get into USU. She wants to be an artist. And, if necessary, she will transfer to a nearby school if I get a job after school.\"\n\n\"IF?!\" Dad huffed, \"What magic is going to make this happen, as we can't afford that!\"\n\nKoki fought her smile, and put a hand over my mouth to cover the smile she knew was imminent.\n\n\"Honorable father-to-be,\" she said, laying on the Japanese formalism, \"I mentioned my mother's assets were frozen, as you would say. Well, they have been thawed, if that is the correct term. I have my mother's money now, and of this morning, that was nearly 800 million yen.\"\n\n\"But the damn yen ain't worth a nickel...actually not even a penny...I think!\" Dad chided.\n\nPlacing his hand on Tricia's arm, to deflect her coming utterance, Cal interjected, \"Howard, that is still nearly 800 million pennies...and, if my conversion calculations are correct, well over $7 million US dollars!\"\n\n\"HOLY SHIT!\"\n\n\"HOWARD, Really!!\"\n\n=+=+=+=+=+=+=\n\nThe End"
    ],
    "authorname": "GoneGray",
    "tags": [
        "18-year old",
        "asian",
        "erotic coupling",
        "female orgasm",
        "female virgin",
        "foreplay",
        "her first time",
        "interracial",
        "japanese girl",
        "neighbor"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/journey-of-the-next-door-valentines"
}