{
    "title": "The Twelve Zenati Pt. 40",
    "pages": [
        "Authors note: Hello everyone.\n\nIt is with some sadness and more than a little relief that I come to the final finishing post for the Twelve Tables. There will be no more. I have new worlds to build after making my way through this for the better part of a decade. I hope that those of you who enjoy this story will come back and revisit it occasionally. Enjoy the finale.\n\nAs always, I am grateful to MsSensualiT for her continued help as my second set of eyes as we crawled towards the end. Many thanks to you, my friend.\n\n~ellie. \n\n*****\n\nEpilogue\n\nThe music started, and Marcella fidgeted as she stood between Olivia and Vivienne, feeling awkward and on display. She peeked down the aisle to see if her little boys were managing their very important job and smiled as they solemnly balanced cushions on their outstretched hands and took one measured step after another. She hoped the knots Noah tied the rings to those cushions with would be easily undone. Sera walked behind them, tossing petals more at the people in the pews than on the carpet as she shepherded her nephews to the end of the aisle.\n\nOlivia shivered as Armando's smooth voice began to sing, and Gideon strutted into place at the bottom of the aisle, holding a single white rose. The men's suits had been a closely guarded secret between the brothers, and she grinned at the red rose print adorning the beautiful Jacket Gideon wore. It had just enough green highlights through the pattern to match with the dress his wife Vivienne wore as she waited for him at the top of the aisle, fretting about leaving her beautiful baby, Angelina, with a nanny for the hour this service would take to be here for her family.\n\nOlivia grinned widely as the little boys practically ran the final steps and were gathered up to stand with Marcella and Vivienne. Gideon claimed Hadrian as he got to the top of the aisle, kissing Olivia's cheek and handing her his rose. When he stepped back, he revealed Noah making his way down aisle in a similar jacket. Again, he smiled as he kissed Olivia, giving her his rose as he claimed Arturo to stand with him on the other side of the aisle. Finally, Armando lifted his voice as he sang the Forest Blakk song skilfully, and Genesis appeared with his mother to walk him up the aisle. Genesis's jacket was black with embossed roses, but he wore a vest in the same bright material as his brothers' jackets.\n\nHis mother, Tatiana, had gone out of her way to make amends with her sons after seeing the curse affect them. She had become a different woman after having to watch her eldest son Gideon get married from a distance, then experiencing her middle child Noah elope which cut her out of the ceremony entirely as well. Nevertheless, she had promised Genesis and Olivia the world to be part of their wedding day, and now as she walked her youngest son up the aisle, she could not have been happier. Her head turned to take in her husband, who sang so sweetly from the ornate pulpit as if giving a sermon.\n\n\"Take it; If she gives you her heart; Don't you break it; Let your arms be a place; She feels safe in; She's the best thing that you'll ever have; She'll love you; If you love her like that;\" Armando crooned as Olivia giggled and wriggled impatiently from foot to foot.\n\n\"Whose idea was it to do all this waiting?\" she hissed at Marcella.\n\n\"You're welcome,\" Marcella laughed back as Genesis made it to the top of the aisle, and the final chorus of the song they had chosen as their own for today played out as his mother kissed both his and Olivia's cheek before taking her place in the front pew.\n\n\"On days when; It feels like the whole; World might cave in; Stand side by side; And you'll make it; She's the best thing that you'll ever have; She'll love you; If you love her like that;\" Armando's voice trailed off, and the congregation sat as the priest began the traditional wedding service Genesis had wanted despite their unconventional entrance into the church.\n\nMarcella watched her boys standing stiffly beside Noah, who had placed a gentle hand on each of their shoulders as they leaned into his legs. Over the last six months, both he and Gideon had settled into parenthood as if born to it. The boys slowly emerged from their shells like butterflies from their cocoons as they settled into life with this dynamic and busy family. Then, lost in her thoughts, she was startled by the applause when Genesis kissed Olivia sometime later.\n\nThe day was so different from her own wedding day, and she couldn't be happier about that. Just standing up here on display as a bridesmaid was freaking her out as she felt so exposed. True to his word Noah agreed to everything she asked for and had rushed her to the celebrant as soon as she said yes and before she could change her mind. Then after a quick civil ceremony attended by only their siblings, they had stayed in the giant treehouse for a week with the three boys, and the nanny Marcella had not been silly enough to refuse. The first two nights; however, Armando and Tatiana stayed in the homestead on the property and kept the boys with them for fun nights of games and family bonding with their adopted grandchildren.\n\nThe ring on her finger glistened as she looked at it, and she looked up at Noah, who was watching her with a soft smile. Their marriage wasn't exactly plain sailing. How could it be when they had such strong personalities? But one thing Marcella never doubted was that even when they argued, the man she argued with loved her and would eventually compromise with her if not give in to her demands.\n\nLeaving the church, she and Noah held the hand of one boy each, proud of their family, such as it was. She had given in to his requests to let a proper obstetrician examine her to see if she genuinely was infertile or if anything could be done to reverse the damage her uncle had inflicted on her reproductive system. It wasn't to be, and she thought she might die from the look of disappointment that Noah wasn't quick enough to hide from her completely. They'd worked through it, though, their shared experiences since meeting, getting them past any and all hurdles Marcella threw in their path. They had the boys to think about now, and she couldn't run away even a little bit no matter how much she wanted to.\n\nPicking Hadrian up, Noah moved to take Marcella's free hand. He'd been watching her sink further into her own mind during the ceremony, and while he was well acquainted with her alternate personalities, it was the whole Marcella he loved and that he strove to keep with him every day as they raised the three boys they had claimed as their own.\n\nAs they exited the church into the sun, Marcella hurried over to where the nanny stood with baby Titus who was becoming more of a toddler now. She grinned and cooed over her niece Angelina as she picked the little boy up and hugged him, laughing as his pudgy hand immediately reached into her hair. She doubted Olivia would notice anything was amiss. Her sister was deliriously happy, and Marcella doubted she would notice if a cyclone descended on them.\n\nThey went through the whole afternoon of photos and then the reception where she found herself sought out by the women she had met when she had gone to Perth to bury her mother and pick up her boys. After that, she seemed always to be talking to one of them either through the chat app they all used or via email, especially since Peri seemed determined to publish the first of Olivia's books this year.\n\nMarcella had thrown herself into copyright and publishing law, making sure that the intellectual property of her sister was protected. However, she knew she couldn't have recreated the original story as clearly and concisely as Olivia had. So, she happily signed away her rights to all of the stories giving her sister complete creative freedom.\n\nAfter that, she came up with her own passion project and floated the rough idea to her new friends. Once again. Marcella found herself swept up by these women's enthusiasm for a scrap of an idea and offering her help on so many levels.\n\nHer husband, who now wrapped an arm around her waist as the boys stayed close to them for the family photos, had been nothing but supportive. He backed her and was her rational sounding board for anything she wanted to take on or refuse. She was beyond happy, so much so that she barely put up a fight when Noah suggested they get a bigger house and a housekeeper to help out as well as the nanny. However, she was having her cake and eating it too as he proved that in no way, shape or form did he expect her to stay at home and look after his house and his children and have no goals of her own. In fact, the more she got to know the other ladies of the tables, the more she realised just how wrong she was about that as the new generation of tabled men did not adhere to the misogynistic traditions of their fathers quite so strictly.\n\n*****\n\n\"Noah?\" Marcella whispered into the darkness, wondering if she had kept him awake with her restlessness.\n\n\"Mmhmm?\" he responded sleepily and pulled her tight against his body, nuzzling his face into her neck.\n\n\"You know that the mothers have been reaching out to the families on the edges of their extended families since what happened to my family became public knowledge?\" she asked.\n\n\"Mmhmm,\" he answered though his voice was less sleepy now.\n\n\"Well, that family on the border of the Donati and Sergi territories that Konrad messed with... it wasn't much better than mine, and they had a little girl that could use a little bit of help,\" she said tentatively, still working through what she wanted to do in her own mind since reading the email from Peri. The poor girl didn't speak and hid from everyone, refusing to eat or bathe unless forced, and she knew the horrors that involved.\n\n\"We'll pick her up tomorrow when we go for the book launch. I'll call Dante in the morning,\" Noah said without any preamble. He'd known this was coming, but he had to let her work through it on her own. He was glad she hadn't taken long to make the decision. The sooner they got the little girl into a stable, loving home with some overprotective big brothers, the better as far as he was concerned.\n\n\"Just like that? No discussion?\" she asked as if stunned by his easy acquiescence.\n\n\"Mmhmm. I wish someone had done it for you and Olivia when you needed it, and we have the time and space and love to share. Why wouldn't I want this for our family?\" he asked, rolling to his back and taking her with him, he kissed her deeply. Then he allowed her to roll and move him so that he loomed above her. It was their way of defining boundaries each time they came together, letting the other know how they were feeling. The bottom was where she preferred to be more and more often, and he was pretty happy about that. He smiled down at her, a wicked glint in his eye.\n\nNoah pulled back and gazed down at his wife, stunned and in awe of the vision, she presented to him. It never ceased to amaze him that they had made it to this safe space secure in their love for each other. He loved every single thing about her. Marcella stretched her arms above her head, and with her hair returned to its natural colour and spread over her pillow. She was so beautiful it took his breath away time and time again. Her face had an angelic glow as she looked at him with the love she showed almost effortlessly now as she stretched sensuously below him, letting her muscles define every part of her sinfully delicious body.\n\nWith her arms above her head, her chest was pulled back, serving up and presenting her perfect breasts with their taut pink nipples to him. In this position, her belly left a valley between her hips, leading to the offering of her mouth-watering pussy between her muscular legs, which only seemed to draw attention to the pink lips of her delicious core.\n\n\"My Kitten, so incredibly, beautifully, tempting,\" Noah whispered. \"I could spend the rest of my life devouring this incredible body and never be satisfied.\" Marcella shivered as Noah lightly trailed his hand up her belly and across her breasts, finally cupping her face, and then he leaned down to kiss her, nibbling gently on Marcella's bottom lip, and said, \"You are mine, and you will always be mine. Thank God.\"\n\nAs Noah started to pull back from her lips, Marcella lunged her head forward and captured his lips, deepening the kiss once again. Noah slid his hand down her body, sliding his thick finger through her swollen pussy lips and into her slick pussy. Marcella's whole body quivered with her back arching off the bed as she broke the kiss and threw her head back onto the pillow, taking a deep gasping breath.\n\nNoah moved down to her nipple and sucked it into his mouth. Then, as his finger began to slide in and out of her, he began to suck and nibble on her nipple. Marcella's whole body was trembling with the dual assault, and she was gasping for breath as she felt her own need matching his. He was hers, not the other way around, but she was done correcting him in the middle of sex. She had learned that lesson the hard way.\n\nThen suddenly, he was gone. Marcella swivelled her lust clouded eyes towards Noah to see what happened and saw him stripping off his boxers which had tangled around his legs as he had tried to remove them without the use of his arms. Although she rarely voiced it the way he did, Marcella loved to look at the body of the man she loved. His broad chest and narrow hips gave him that Adonis belt that pointed to the hard, straight cock that brought her so much pleasure.\n\nNoah's lips moved back to her neck, and ears beginning to kiss, lick, nip, and suck on her, leaving little teeth grazes and suckling bruises over her neck. Then those voracious lips moved to her breasts where his hunger for his wife increased, becoming more aggressive. Marcella began to tremble and shake as she felt his need for her escalate, driving her desire higher, leaving little nip and suck marks all over her breasts. Her nipples were swollen and distended, begging for more, and her back was arched, pleading for more of that aggressive attention.\n\nMarcella felt him hungrily ravage her taut body that was arching into him for more. As Noah bit down on her nipple, Marcella cried out his name and started trembling. She felt the beginnings of her orgasm pushing her toward the edge of the abyss. Her cries only fuelled his hunger for her as he growled and aggressively moved to her other breast and started driving her harder biting into her nipple as he gripped her hips in a bruising crush of his fingers.\n\n\"Noah!\" she cried out as her body bowed under his painful grip on her. Then, with her senses on overload, she cried out his name again before whimpering as the rush dissipated as quickly as it had come.\n\nAs Noah's lips sucked at the soft flesh at the bottom of her breasts, bruising the delicate white skin before moving down to her taut belly, one of his hands stayed behind to keep wreaking havoc on her breasts while his other hand slid two fingers deep inside her and began to reignite her pussy. His love for this incredible woman drove him to show her the depth of his desperation to enjoy her body and the pleasure she felt. He felt like he had to prove his deep love and commitment to this spectacular woman every day, so he never took her for granted and showed her all the love and passion he held for her every time they came together now.\n\nHer whole body was bowed when his mouth moved lower. Noah claimed her clit. Marcella's body tried to jump to the stars bypassing the usual build-up when every muscle in her body clenched in readiness. As Noah continued his assault on her clit and pussy, he felt all of her tensed muscles begin to quiver and tighten even more. Her climax when it hit buoyed her up on a sea of bliss.\n\nDespite her cries, he continued to push her body which was racked with tremors and spasms. Finally, Marcella's hoarse cries of his name broke through his unrelenting focus, and he looked up at his beautiful wife, coming back to his senses. She looked exhausted, and all her muscles were spastic with the intensity of her multi-climax while her skin was glistened with perspiration, making her appear like the shining angel she was to him.\n\nNoah looked into those bright green eyes that told him she needed this as much as he did. With their eyes still locked, Noah slid between her legs and started slowly rocking his cock into her in small increasing increments. She was incredibly tight after her climax, and he heard her whimper as he stretched her wider around his cock until he was fully seated within her. Noah slowly began driving deeper into her petite body. The deeper he went, the more she wanted. At the same time, his body crushed her clit between them. She quivered on the verge of an orgasm that threatened ecstasy that would send her into the stratosphere.\n\nWhen he sped up and slammed into her, Marcella's body pulled up off the bed, and she succumbed to the mind-numbing orgasm. Noah flicked her clit as her body spasmed, then he leaned down, kissing her neck. He felt her pulse drumming against his lips as he continued to pump in and out of her throbbing pussy.\n\nMarcella mewled loudly as her quivering body lifted off the bed, reaching for more of him. Noah looked into those glazed eyes, begging him to take her higher and felt that connection between them as strong as ever. He kept pounding into her trembling body while she wrapped herself around him, pulling him deeper.\n\nNoah felt his orgasm close to the surface and arched his back, burying his cock as deeply as he could. He groaned loudly as he started pumping ropes of cum into her. Noah looked down, and Marcella's eyes had that glazed faraway look that came with overstimulation. As Noah began to pull out of her, Keeping her shaking and spasming form into his arms. He held her tightly and gently kissed her face as she lay limp as a rag doll in his arms, still shaking from what Noah had done to her. This tiny, beautiful woman had given him everything and made his entire life complete.\n\nAs he kissed her, Noah felt her arms wrap around his neck, and she pulled him into a deeper kiss. Noah pulled the duvet over them and pulled Marcella's back tight against his chest, and they spooned together. However, with Noah's large size and Marcella's diminutive body, it was more accurate to say Noah cocooned Marcella into his body. As he felt her snuggle into his embrace, Noah felt contented and at peace.\n\n*****\n\nMarcella travelled with Olivia to Brisbane to meet with Peri Donati before the press releases went out the following week. She hadn't planned to go at all when Olivia asked her, preferring to distance herself from the stories of their childhood that helped her sisters through some of the roughest of times. Nevertheless, she liked that Olivia had a passion for the stories and helping children from traumatic backgrounds like themselves. But then she had gotten the call from Peri.\n\nThe real reason Marcella had given in and accompanied Olivia to this meeting after her initial refusal was so she and Noah could meet and possibly take home the small girl staying with the Donati family. She had been traumatised by her early life, causing her to be fearful and excessively quiet to the point of mutism. Or selective mutism, as Peri had described it to her during their video chat.\n\n\"Marcella, just remember you gave me full creative control of these stories,\" Olivia warned nervously, making Marcella narrow her eyes on her sister.\n\n\"What does that mean exactly? What don't I know?\" Marcella asked.\n\n\"You know everything you wanted to know, which was nothing, so it's too late now to complain about it with the release so close,\" Olivia said. \"Just remember you didn't even want to come to this meeting and this book is exactly the way I envisioned it.\"",
        "\"That's what I wanted too. So, I don't know why you are worried. What don't I know? Why are you so worried?\" Marcella asked again and frowned at Olivia.\n\n\"Catriona is an outstanding artist, you know, and well, the Imperfect Princess may look a little more like you than the original sketches I drew and showed you,\" Olivia admitted. \"So don't react badly and make her feel awful. She spent a lot of time on the illustrations getting them right.\"\n\n\"I saw the illustrations. They are great, Olivia. I don't even have to come to the meeting if you don't want me there. I meant what I said. This is your project, not mine. I recently decided on a project of my own that I wanted to see Peri about, but it is separate from the books. I trust you, and they are just illustrations, right? It's not like you are using photos of me. So a passing resemblance to an illustration is nothing to be worried about,\" Marcella shrugged off the concern.\n\n\"If you say so,\" Olivia eyed her sister sceptically. \"What's the name of my new niece?\" she asked, changing the subject.\n\n\"Well, if all goes well, Lucinda will be coming home with us tomorrow,\" Marcella smiled, allowing Olivia to side-track their conversation.\n\n\"I'm happy for you. I truly am,\" Olivia said. \"Gen and I have been talking about babies, but I don't know if I am ready yet,\" she sighed. \"I mean, how did you know you could do it?\"\n\n\"I didn't. I still don't know that I'm doing it right, but the thing about the Zenati family is that you never have to do anything alone,\" she said, surprising herself with how easily that came to her these days. \"We were given a very distorted view of what being part of one of these big families meant as well as how parents should act. But, trust me, it's not so hard once you have a little person relying on you to look after them.\"\n\n\"Ladies, are we ready?\" Genesis asked.\n\n\"As ready as we will ever be,\" Olivia smiled and took his hand while Marcella went over to where Noah stood with their boys who had been out for a walk while Marcella and Olivia freshened up after the five-hour flight.\n\n\"Dante's coming to escort the nanny and boys upstairs while we go down to meet with Peri and Catriona. Lucinda is already there, so the boys will get to meet her first, and they will be perfect gentlemen, won't they,\" Noah said sternly to Arturo.\n\n\"But why do we have to have a girl,\" Arturo said plaintively.\n\n\"Mar is a girl, and all she has at home is us, boys. It might be nice for her to have another girl at home, don't you think?\" Noah reasoned with them.\n\n\"We could dress Titus up as a girl?\" Arturo offered as Dante entered the suite.\n\n\"Nah, he'd still smell like a boy,\" Genesis shook his head sadly. \"Girls smell better than boys.\" He pulled Olivia closer and sniffed her with a big grin.\n\n\"That's gross, Zio!\" Hadrian wrinkled his little face at his new uncle.\n\n\"Not as gross as this,\" Marcella grinned and picked him up, peppering his face with kisses. \"Now you are covered in girl germs and don't have to worry about meeting your new friends.\" She giggled as he tried to wipe away the germs, and she continued to cover his face in more kisses. \"Noah, why don't you take them up with Dante and then meet us downstairs once they're settled,\" Marcella suggested. \"It will give me a chance to look at the illustrations before we have to present my idea to the circle of Mothers.\"\n\n\"I think maybe I should go with you?\" he said, but at the determined look on her face, he backed down. \"Okay, but remember Olivia has put a lot of thought into this book, and you don't have to like it to appreciate how much work she had done,\" he counselled. He knew how much she secretly bristled when Olivia told people that the Imperfect Princess was modelled on her sister Marcella.\n\n\"I'll help,\" Genesis offered. \"It will be good for Olivia to show you what all her hard work has been for.\"\n\n\"Okay,\" Marcella said, frowning openly now and feeling patronised as if she were a ticking timebomb no one wanted to be near when it went off. \"Alright, Olivia, let's go. Whatever is about to explode in this book can't possibly be as bad as everyone is making out.\"\n\n\"You are all on my shit list,\" she pointed her finger at Genesis and Noah.\n\n\"Zia said shit,\" Hadrian giggled as the men left the room with a kiss on each of the sister's cheeks.\n\n\"She's just nervous, and it slipped, but we're good boys, and we don't use words like that,\" Noah reminded him as they disappeared down the hall, leaving Olivia with Marcella.\n\nOlivia grabbed her bag and walked silently beside Marcella down to the first floor to the House of Lorraine, where Peri Donati had meetings for her small publishing house that was part of her husbands more prominent publishing company. Marcella had to admit it was quite overwhelming to see the caricature princess that looked very much like her in life-sized cardboard cut-outs. It wasn't anything she hadn't expected, though, but she said nothing waiting for Olivia to tell her what was making her so nervous.\n\n\"Great, you're here! It's so good to meet you finally! I'm Daniel, Peri's right-hand man. The resemblance is amazing. I mean, I was told, and there is that photo, but wow!\" the enthusiastic young man said as he led them to the long round table where brightly coloured folders held the details of the book's release.\n\n\"Photo?\" Marcella asked, pouncing on the one word that was guaranteed to get a reaction from her. \"Which photo would that be?\" She asked as calmly as possible.\n\n\"Oh, here. It's in the media packet,\" he offered. He helped her to a seat and opened the folder to pull out an old photo in front of her. It appeared to have been cleaned up digitally because the one she knew from her parent's house had been grainy and hard to see even when it had been first placed in a frame. She slumped in her chair and gently traced the faces of the three young girls sitting stiffly with frozen if not terrified smiles on their faces. It had been taken the day of her grandmama's funeral, and their lives irrevocably changed after that day. A stray tear ran down her cheek before she could halt it, and she dashed it away before clearing her throat and looking up. \"Thank you, Daniel. I apologise; I wasn't expecting the memory to hit so hard. That was a difficult day.\"\n\n\"Are you okay?\" Olivia asked quietly.\n\n\"I'm fine. A little heads up would have been nice though,\" Marcella gave her sister a tight smile. \"I'm not mad, just a little sad because I hadn't thought about that day for so long that it hit me harder than it would have if I had some warning.\"\n\n\"I didn't know how to tell you, and I wanted to use the photo, and you always said no photo's and well,\" she sighed. \"I probably could have handled that better, but I didn't even have the nerve to tell Viv because she would have made me tell you.\"\n\n\"It's okay, Olivia. Honestly. And it's a nice tribute to Jessa for the boys to see when they are a bit older,\" she smiled sadly. \"It's a surprise because to hear you talk, I was worried the stories were only about me,\" she laughed and leaned over to hug her sister. \"I don't know why you were so worried. Unless there's something else, I should know?\"\n\n\"That's the only photo I am using of the three of us,\" Olivia said. Marcella took that far better than anyone had given her credit for, but she was prepared to go through the whole media packet with her sister if that was what she wanted. \"It's on the final page of the book where there is an 'About the author' blurb. I give you full credit for coming up with the original story idea.\"\n\n\"You what?\" Marcella gasped.\n\n\"You're the one who came up with the story to help keep me, and I think even Jessa calm when Papa was in a rage, so you deserve at least that much credit even if it was me who put it into book form,\" Olivia said.\n\n\"Oh, Olivia, no, these are your stories. I gave them to you do with what you want,\" Marcella said, shocked that she hadn't seen this coming. She opened her mouth to say more, but the door swung open, and Peri entered carrying a stack of books.\n\n\"It's here! It's here hot off the presses!\" Peri stopped and looked around. \"Where's Cat?\"\n\n\"I'm here. The sisters were having a moment, and I didn't want to interrupt,\" Catriona said as she stepped from an alcove.\n\n\"Great, this is our first venture into children's fiction, but I know it's going to be huge!\" she handed out the first print release of the books. Marcella held the hardback in her hand, feeling its weight before turning to the final page to see what Olivia had written about the three sisters in the old photo. She breathed deeply and decided it could be worse. At least she didn't grow up in an age where every awful moment of her life was caught on social media. The familiar voices in her mind who arced up or made her withdraw at moments like these remained silent as they had been doing more and more recently. Instead, it was Noah's voice who always held those small but important wins in her mind now when she managed to keep her shit together. He had moved in alongside her other voices to help keep the balance when unexpected hurdles rose in front of her.\n\nShe hadn't told him that, of course. His ego was already big enough for the both of them. She smiled at the thought and mentally hugged that reassuring voice. This was nothing to worry about. This was the time to celebrate her little sister, who, like herself, had risen above all the pain in her life to do something more for others.\n\n\"Olivia, I am just so proud to be your sister right now! It's amazing! You're amazing, and Cat, wow, I never imagined how it would look in book form even though I saw the mock-ups. You all are amazing,\" she gushed and meant it.\n\n\"You're pretty amazing yourself,\" Catriona said. \"I looked through the prospectus you sent me, and I'm amazed someone within the Table families hadn't suggested it before. It's so needed by every family.\"\n\n\"They would never have admitted there was a problem before,\" Marcella sighed. She still had moments where she railed against the old school train of thought that had ruled her parents generation of the tables. As Vivienne so clearly pointed out, there were always places for abused women to seek help with the Papillo. The children; however, often were absorbed into the tables without truly considering the impact of the trauma on their lives and the subsequent social-emotional scaring that they would bring to their adult selves. The small amount of research Marcella had done showed a devasting picture of violence, crime and suicide for those forgotten children.\n\n\"Sorry, I don't want to bogart Olivia's moment. These are amazing!\" Marcella repeated.\n\n\"You realise both your projects come from the same place. There is no reason one can't enhance the other. Maybe even have some of the profits from the sale of Olivia's books boost the foundation you are trying to start?\" Peri suggested.\n\n\"Giving away the profits already?\" Joshua Donati asked as he entered the room and went straight to his wife kissing her before greeting the other women.\n\n\"Did the bomb go off already?\" Noah asked with a frown as he too entered the room and made for his wife like a homing beacon.\n\n\"You knew and couldn't have given me a heads up?\" Marcella accused but returned his kiss as he took a seat beside her.\n\n\"Hardly, they only told me that there was something about a last-minute addition to the books that you might not like but that Olivia thought was essential,\" he shrugged. \"They didn't trust me to let her tell you in her own time.\"\n\n\"Because you always tell her everything,\" Genesis rolled his eyes as he went to sit with Olivia, followed by Ricco, who made his way to Catriona. \"Dante and Matteo will be down soon. They're involved in a hardcore Super Mario Kart battle.\"\n\n\"Doesn't matter,\" Ricco shrugged. \"Xavier took your prospectus to the circle weeks ago when you first floated the idea with the Zenati family. They took it to the mother's circle. Everyone is in, and the Papillo have offered to do the training for the house mothers and fathers in relation to poverty and trauma.\"\n\n\"I.. well I...\" Marcella was genuinely lost for words.\n\n\"Xavier and Emma never said a word to us,\" Noah frowned, feeling as out of the loop as Marcella did at that moment.\n\n\"Once again, because you tell her everything, duh!\" Genesis teased.\n\n\"It's not rocket science. You saw the need and came up with a plan to address it. Both of you did, and Olivia's books can become part of the same foundation that we plan to set up as a not-for-profit charity-based group for those children at the pointy end of the trauma spectrum,\" Peri continued.\n\n\"Wow, so my work here is done,\" Marcella let out a big breath and let the tension in her shoulders subside as she almost slumped in relief.\n\n\"What? No. It's just beginning. This is your project. You and perhaps your kids will be the organisation's face as you build it from the ground up and put it into action within each family territory.\n\nMarcella reached for Noah's hand under the table, needing that physical support. When he had told her she could do anything as long as she let him do it with her, she had never dreamed the other tables would take her just as seriously. She thought she would have to argue and fight for her cause and she felt strangely let down by the fact that they had all discussed it amongst the leaders of each table and decided to support her initiative.\n\n\"Oh, good you're here,\" Joshua said as another couple walked into the room. \"You all know Zach Gastone, and this is the elusive Nora Gastone who is rarely seen outside of the beautiful territory they live in,\" he teased, liking his southern neighbours a lot.\n\n\"That's fair,\" Nora said quietly, halting her husband from reacting protectively to Josh's teasing. \"Which one is Marcella?\" she said abruptly, her size making the impact of her words even more startling.\n\n\"That would be me,\" Marcella straightened her back. Maybe this was the fight she had been waiting for. All of the tension with Olivia and then having the agreement to her prospectus handed to her on a silver platter, she needed someone to challenge her.\n\n\"The prospectus is good,\" Nora started as she walked toward Marcella. \"While I agree wholeheartedly with the concept, I found the overall approach lacking and needing a few revisions,\" she said in a no-nonsense way that Marcella found challenging. She came to her feet as if to accept the challenge but was genuinely curious about the revisions this woman offered.\n\n\"You did?\" she asked. Finding that she would rather have a debate about her prospectus than the argument she had been expecting. At least a discussion would give her some idea of what they thought.\n\n\"What happens when these traumatised kids hit school and need even more coping skills? What happens when we have a bunch of hormonal angsty teens all living in a house together. Sure, if we give them skills as children, it will help, but what if we don't find them until they are angsty teens? What then?\" Nora challenged.\n\n\"You have a lot of questions,\" Marcella said slowly and drew in a deep breath. She felt Noah squeeze her hand in support and was shocked momentarily as she had forgotten she was still holding it. \"Do you want to help me come up with the answers? I've been told not to try and do everything by myself anymore.\"\n\n\"Well, I have some ideas,\" Nora grinned and roughly embraced Marcella as she laughed. The woman was soft and round, and her hugs felt like the softest, warmest place Marcella could imagine right then.\n\n\"What did we miss?\" Dante and Matteo strode into the room, looking at the scene before them. \"Hey, Zach, what brings you out of hiding and is that, Nora?\"\n\n\"Yes,\" Zach nodded. \"I believe I somehow just volunteered to build a school for wayward teens without actually opening my mouth,\" He said in a confused voice as Nora turned to eye him with a small smile curving her lips.\n\n\"He's such a clever man. You'd be surprised at the number of things he can agree to without saying a single word,\" Nora laughed merrily, and Zach shook his head indulgently.\n\n\"Don't worry. I will pick a fight with you later if you like,\" Noah chuckled, making Marcella whip her head around to look at him. They could read each other so well now that he lived for those little moments of shock he was able to elicit from her. Today had been a good day. A great day even. She just needed to accept that she no longer had to fight for everything in her life.\n\n*****\n\n\"Mar!\" Arturo cried out as Marcella entered the big play space the Donatis had for their children in this high-rise building.\n\n\"Hey, what's wrong?\" she frowned as he waved his hand to make her bend down to his level.\n\n\"I think our new sister is broken,\" he whispered. \"She doesn't talk, and she looks very sad all the time even when Titus was looking at her upside down, and that's the funniest thing ever,\" he explained as if frustrated.\n\n\"Do you remember when your Mama first went to the hospital, and you had to stay with people you didn't know who wouldn't let you see her?\" Marcella asked, making him remember how scared he had been then and how he, too, had remained silent most of the time.\n\n\"Oh,\" he said as if the thought had not occurred to him at all.\n\n\"Why don't you introduce me, and we can see how it goes from there. I don't think she is broken. She's just scared and could use a brave brother to help her out.\" Marcella encouraged.\n\n\"She's hiding. She won't even come out for the nanny,\" Arturo grimaced.\n\n\"Show me, and we will see if we can change that,\" Marcella smiled softly. Arturo led her over to a nanny who sat in a soft arm humming a gently rolling tune. Without missing a beat, the nanny acknowledged Marcella with a head nod and pointed behind her chair, which was angled against the corner, leaving space for a small girl. Marcella wedged herself down into the corner and began talking to the nanny in a low voice but loud enough that the little girl could hear.\n\n\"That's a beautiful tune you are humming. I feel like I should know it. What's it called?\" Marcella asked.\n\n\"Someone to watch over me. It's an old Gershwin tune,\" she said in a soft voice.\n\n\"Oh, that's right,\" Marcella nodded. \"You know who are really good singers? Frogs!\"\n\n\"Frogs can't sing. They can't talk,\" the nanny laughed, cottoning onto what Marcella was doing\n\n\"When I was a little girl, there was this pond close to our house, and the frogs there sang every night until one of the princesses came out and threatened to kiss them all and turn them into princes if they didn't stop,\" Marcella said conversationally leaning back against the wall.\n\n\"Wouldn't they want to be princes?\" Another little girl asked, coming to sit close to where Marcella and the nanny were talking.\n\n\"Hello, Eden,\" Marcella knew she was Peri's oldest daughter. \"Well, no, they were waiting for a special princess to kiss them so they could change into princes and live happily ever after. They didn't want kisses from just any princess.\"\n\n\"Oh, I see,\" Eden nodded as if it was the most natural thing in the world.\n\n\"There was one frog who didn't sing, he didn't talk much either, but he was good at keeping the beat for his brothers while they sang,\" Marcella continued before Eden interrupted her again.\n\n\"You mean like beatboxing?\" Eden asked. \"My brothers try to do that, but they aren't very good.\" She pulled a face.\n\n\"Practice makes perfect. Not everyone can be good at everything, and sometimes the ones who say the least have the most to say, and you have to listen harder when they try to tell you something,\" Marcella said.\n\n\"Everyone in my family is a good singer, but my brothers are toads, not frog princess,\" she screwed up her nose as she looked over at the television screen where two boys were yelling at the screen where a virtual battle was taking place while the others around them cheered for one or the other. \"They're pretty much good at everything they do,\" she rolled her eyes.",
        "\"Brothers can be like that, I guess. I never had any brothers, but I bet they would be easier to live with than sisters,\" Marcella wrinkled her nose. \"I had a big sister and a little sister,\" she confided.\n\n\"I am the big sister of everyone except those two over there,\" she pointed to the television again. \"They came a couple of minutes before me, and they are taller than me too.\"\n\n\"Tell you what, let's see if Nanny will pull her chair out a little more and we can just hide here, and I can tell you the story of a courageous princess who had to try a million things before she found what she was good at and liked doing best,\" Marcella suggested wanting to get closer to Lucinda who she could see peaking out now and then from her hiding spot.\n\nNoah watched from a distance as Marcella patiently spoke with Eden Donati to coax Lucinda from her hiding spot in the back of the recliner where the material had pulled away from the sides, making it like a small tent. Maybe this battle of wills would assuage her reaction to being given everything she wanted by the families and more by the sounds of what Nora and Zachariah were offering.\n\n\"They're special, our women. Survivors who even now can't put themselves first,\" Ricco said quietly from beside him, startling Noah out of his reverie.\n\n\"They are. Very special,\" Noah agreed.\n\n\"I think we needed her voice to bring our tables back together,\" Dante said from his other side as his fellow oracles stood with him. He wasn't used to being with his peers like this. He missed Dom every day, but he could never complain about the support and friendship these men and the other oracles afforded him.\n\n\"Even in the books, it's Marcella's words that Olivia and Cat have recorded,\" Ricco added. \"She's healing more than her own family.\"\n\n\"And if she gets that kid out of that chair, she is doing better than anyone else here in the last two days,\" Dante grumbled. When Peri had come to him in despair, he had been the one to eventually haul her out flailing and screaming to bathe and change for today. Pete had offered a sedative, but he had no wish to drug her as her family had done. So instead, he had stood by as the nanny who now sat with her hummed show tunes and gently cleaned and dressed her. The music seemed to be the key, but he wasn't about to interfere in whatever Marcella was doing with the girls. He had never seen his anxious daughter look so calm and at peace with anyone aside from her immediate family.\n\n\"Care to wager on that?\" Ricco asked.\n\n\"How dumb do I look,\" Dante asked, raising his hands in surrender. I wouldn't bet against any of the women here today.\"\n\nThey stood there talking and surveying the room as eventually, Marcella not only coaxed Lucinda from her hiding spot but also had most of the children gathered quietly around her.\n\n*****\n\nHelena stood from beside the bed where Arturo lay asleep and smiled at Marcella and Noah. She indicated they should talk outside and led the way. There were seven children in the house now, and while they were building a bigger residence, this one remained their overcrowded home until the new house was complete. It seemed Marcella just couldn't say no to any request for help, and Helena had practically been on call permanently for the tricky brood of temperamental children the couple had adopted.\n\n\"He'll be fine. It was a fairly severe reaction to a caterpillar; I believe or a bunch of them. Children are curious, and usually, they would just get a small rash or an itch. But unfortunately, Arturo's reaction isn't rare or unusual. All you can do is keep giving him the antihistamines if he needs them twice a day and use Panadol and camomile lotion to ease the discomfort in between. He will be fine in a day or two at the most,\" Helena lectured.\n\n\"What do these caterpillars look like so we can get rid of them?\" Noah asked in full protector mode since he saw large angry red welts cover his son's body rapidly. They couldn't keep up or work out what had bitten him or where the bite was.\n\n\"Usually brown, but they have long fine white hairs that surround their whole body. They are small, so children are curious and want to touch and play with them. They won't kill a child just make them very uncomfortable for a few days,\" she reassured Noah. I believe it's a moth of some kind, but I would need to see one to be sure.\n\n\"That's our mission tomorrow, Hadrian,\" he ruffled the boy's hair as he came into the hallway.\n\n\"Okay, but,\" he turned and looked over his shoulder. \"She's singing.\"\n\n\"Who's singing, buddy?\" Noah asked, squatting down in front of the boy.\n\n\"Lucinda. She is singing to Artie,\" he said as if he was worried by the fact. Noah raised an eyebrow and looked at Marcella, who shrugged. The girl hadn't said a word since arriving in the busy home eighteen months ago, and Marcella had started teaching her Auslan and some signed English to help her communicate at school.\n\n\"I told you there was nothing mechanically wrong with her voice or hearing,\" Helena said and watched curiously as Hadrian dragged Marcella down to the bedroom door.\n\nThe three adults stood in the doorway listening to the musical lilt of Lucinda's voice until she noticed them standing there. She immediately froze and stopped singing, ducking her head and quickly moving away from where she had been helping the nanny dab on the soothing pale pink lotion with a cotton ball.\n\nMarcella smiled up at Noah. Lucinda had come such a long way since their first meeting and this small moment of sweetness towards her adoptive brother was miraculous in her eyes. There was always love and hope in this house, and the strangest thing of all was that most of it came from her. She wrapped her arms around Noah's waist and once again thanked God he never gave up on her when she more than deserved it at times.\n\n*****\n\nThis is the end of the Sagas of the twelve tables. Thank you for all the support and love I have felt for it over time. See you all for the next adventure!"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "dominance",
        "submission",
        "happily ever after"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-40"
}