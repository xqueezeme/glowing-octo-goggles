{
    "title": "A Private Show without Me",
    "pages": [
        "If you haven't read the four stories before this one you might want to read them first. This one will make much better sense. As you should know, I met Jim through a Craigslist ad. I had never answered a Craigslist ad but for some reason his ad, \"Let Me Show Off For You\", piqued my interest. \n\nJim turned out to be a very handsome man with a great body. A body that I saw all of, and a cock that I saw squirt, much to my amazement. I had never actually seen a naked man in the flesh. And yes, I was a virgin, much to my chagrin now. Now I'm married to him and we have a great life together.\n\nAnd he still turns me on when he gets naked for me. And as you've read in the previous stories, he has gotten naked for three of my friends. That was before we were married and actually, that was also the night I lost my virginity, to him.\n\nAnd since we got married we still have had a few times where we got together with those three friends and he was the entertainment. And, well, I must admit that my friends became quite familiar with his body. We carried the CFNM scenario quite far, never with the humiliation and pain that some of the scenarios follow. Jim would never allow it, and I wouldn't either; but they were allowed to touch and stroke and even suck his cock before he would carry out the grand finale of masturbating to a wonderful orgasm for him and us. But we all kept our clothes on, although there WAS some touching of ourselves with the girls. Well, we all kept our clothes except for me...AFTER the sessions. And even though now we are married. I still enjoy showing him off to my friends. They know that Jim and I will have a wonderful lovemaking session after they leave. Am I a pervert for letting my friends see him naked and masturbating for them?\n\nBut the four of us really enjoy his shows. Jan is my best friend, a quite voluptuous woman, not fat by any means. But with curves that would stop traffic. Then there's Amy. Amy's married to a very nice guy, but he in no way can be compared to Jim. No way. And lastly there's Sarah. Sarah is Jan's little sister and had just turned 18 and had never seen a naked man before. Now she has and had a very detailed explanation of the male body during that first \"girl's night\" session. Oh, and I'm Hanna.\n\nBut this story is about a situation that presented itself while I was visiting my mother who had just had surgery, and I was taking care of her in another state. So I wasn't there. So I've asked Jim to write the rest of the story.\n\n++++++\n\nHello, I'm Jim, Hannah's husband. And yes, I have stripped and masturbated for some of Hannah's friends. But Hannah is the one who I go to bed with each night, so don't get your dander up, lol.\n\nBut this incident came up while Hannah was taking care of her mother. I was home alone one evening when the doorbell rang. When I answered the door, Sarah, Jan's little sister was there. Now Sarah is a little doll, cute as a bug.\n\n\"Hannah's not here, Sarah. She's visiting her mother. She's taking care of her after her surgery,\" I told her.\n\n\"I know,\" replied Sarah. \"I really came over to see you.\"\n\nRight away alarm bells went off in my head. See me? Did she want me to get naked for her? \"Um, I can't get naked for you without Hannah being here,\" I told her.\n\nSarah got really red. \"Oh my! No! That's not why I'm here! Oh, shoot! I blew it here.\"\n\nNow I was confused. \"OK, tell me why you want to see me.\"\n\nNow Sarah was really embarrassed. I could tell she was going to have a hard time telling me what she wanted. \"Well, um...you know...you know that first time I saw you?\"\n\n\"When you saw me naked?\" That was a wonderful time for me. I had concentrated on Sarah that first time, because she had never seen a naked man before. She really turned me on with her embarrassed, eager demeanor. I allowed her to inspect my body and intimately explained how my various parts worked. Especially my cock.\n\nIn subsequent sessions Sarah had gotten much bolder, even sucking my cock for a bit. I liked Sarah. She made me feel horny. Even now.\n\n\"Yes, and I have a request.\"\n\n\"OK.\"\n\n\"You can say no if you don't want to do it\"\n\n\"OK.\"\n\nSarah was once again embarrassed. \"Spit it out,\" I told her.\n\n\"Well...I have a friend.\"\n\n\"OK.\"\n\n\"Um...she's never seen a naked man.\"\n\n\"OK.\" I knew where this was going, but I wasn't going to make it easy on her. She was so cute.\n\n\"I was wondering if you would do for her what you did for me.\"\n\n\"You mean strip naked for her?\"\n\n\"Yes.\"\n\n\"Teach her about a man's body?\"\n\nShe turned red again. \"Yes.\"\n\n\"Let her touch me?\"\n\nShe smiled. \"Yes.\"\n\n\"Masturbate for her?\"\n\nShe sighed. \"Yeah!\"\n\n\"Sarah, I can't do that. Hannah's not here and won't be for a few weeks. I couldn't do that to her. It would be inappropriate\"\n\n\"Oh, I wouldn't want you to do it behind her back. You could ask her if she'd let you,\" Sarah said hopefully.\n\nI thought for a minute. Would I love to do it? Of course. Teaching Sarah was a highlight of my naked escapades. \"Well, I don't know.\"\n\n\"Please?\"\n\n\"How would it work? Would she come to one of our little group get-togethers?\"\n\n\"Well, she could, but I was thinking just a small group.\"\n\n\"Would you be there?\" I hoped so.\n\nShe got red again. \"I would hope so,\" she smiled. \"I think she would be more comfortable if I was,\" she smiled.\n\n\"Boy, I don't know.\"\n\n\"Please? You can ask Hannah.\"\n\nI thought for a minute. Yes, I would ask. But if she said no...I would be disappointed.\n\n\"OK, I'll ask her. Give me your cell phone number and I'll text you what she says.\" Which she did.\n\nThat night, on my nightly call to my wife I brought it up. \"What do you think?\"\n\nShe was silent for a while. \"You'd do it without me there?\"\n\n\"Not if you don't want me to.\"\n\n\"But you'd like to.\" She knew me well.\n\n\"Only if you want me to.\" My diplomatic answer. But right now I was hard. \n\n\"Hmmm...same rules?\"\n\n\"Of course.\"\n\n\"Is she cute?\"\n\n\"I don't have any idea. I haven't met her.\"\n\n\"And you'll behave?\"\n\n\"I'll do whatever you want. You make the rules.\"\n\n\"Let me think about it.\"\n\n\"OK.\"\n\n\"So what are you wearing?\" Hannah asked.\n\n\"Nothing.\"\n\n\"Me neither.\" As so began our nightly phone sex session. She was extra hot tonight. I wondered if thinking about me doing a private show for Sarah's friend was turning her on.\n\nWhen we were though and had caught our breath, I mentioned that she was extra hot tonight. \"So were you,\" she countered. \"Was it because you were thinking about a session with Sarah's friend.\n\n\"Maybe,\" I smiled.\n\nShe waited a minute. \"OK, I'll give you permission. But you have to tell me all about it.\"\n\n\"Of course! That would make our phone sex even hotter.\"\n\n\"I've been thinking...\"\n\n\"OK.\"\n\n\"What would you think about letting our group watch us make love?\"\n\nWhere did THAT come from? \"You'd do that?\"\n\n\"Maybe.\"\n\n\"That would be hot!\"\n\n\"Yes it would,\" she replied. \"Would you do it?\"\n\n\"I'm the exhibitionist. Of course I would. But would you? COULD you?\"\n\nShe hesitated a minute. \"I think I'd like to do that.\"\n\nWith that we were masturbating together again. We both had great orgasms and then logged off.\n\nThe next day I texted Sarah: She said OK.\n\nSarah texted right back: Great!!\n\nJim: When?\n\nSarah: How about Saturday afternoon? Jamie and I were planning on going to a movie. I think she'd rather do this.\n\nJim: Have you talked to her about this?\n\nSarah: Not yet. I'll see her in a bit and tell her.\n\nJim: No surprises like you got?\n\nSarah: I would rather she knew about it beforehand.\n\nJim: OK.\n\nSarah: I'll get back to you.\n\nA few hours later Sarah texted: She's in!\n\nSo we were on. The next two nights, while we had phone sex, I didn't stroke my cock. I wanted to save up for Jamie and Sarah. Instead I read her the other four stories. She had some really hard orgasms. I love to listen to her cum.\n\nSo Saturday came around. I took special care with my grooming. I shaved everything properly. I had let it go for a while since Hannah was gone. I dressed in my red underwear, an easy to take off button-down shirt and jeans that weren't too tight. I had been thinking how I would do this and had a general plan. I hoped that Jamie was cute.\n\nAnd she was. When I opened the door for Sarah and Jamie I saw too very cute and very excited young women. Jamie was a blond with long hair, a very light complexion, and very nice boobs and butt. This girl should have had her share of naked guys by now. \n\nBut it was obvious that she was very shy and nervous. She could hardly look at me. She had such a cute smile. Sarah used to be shy around me, but she wasn't anymore. She gave me a big hug and patted my ass. I did the same.\n\n\"Thanks for doing this,\" Sarah said.\n\n\"Doing what?\" I acted dumb.\n\n\"You know.\" Jamie was looking down and her complexion had turned red.\n\n\"Oh, you mean getting naked for Jamie.\"\n\n\"And me,\" Sarah smiled. Jamie looked up at me and gave me a shy smile.\n\n\"Well, come into the living room,\" which we did, and sat down. \"Does Jamie know the rules?\"\n\n\"She does.\"\n\n\"Which are?\"\n\n\"We are to keep our clothes on at all times.\"\n\n\"Uh huh.\"\n\nShe hesitated. \"We may touch you.\"\n\n\"That's right.\"\n\n\"But not hurt you.\"\n\n\"Good.\"\n\nShe was getting bolder. \"We can stroke your cock.\" Jamie got even redder and looked down again.\n\n\"And\"\n\n\"Maybe suck you.\"\n\n\"Jamie, are you OK with that?\"\n\nJamie shrugged her shoulders. \"Maybe.\"\n\n\"Ok, then,\" I said. \"How do we do this.\"\n\n\"This is your show,\" Sarah said. \"Whatever way you think is best.\"\n\nI stood up. \"Ok...Jamie. Stand up and come over here.\"\n\nJamie hesitantly stood and slowly came to stand in front of me, her head down.\n\n\"Look at me.\"\n\nShe looked up, slowly, finally landing on my face. I could feel my cock lengthening.\n\n\"I want you to take off my shirt.\" She looked at me and looked scared to death.\n\n\"You want to see me naked, don't you?\"\n\nShe nodded. \"Then you must take off my clothes.\"\n\nHer eyes got really big. \"My clothes have to come off for me to be naked. Go ahead.\"\n\nShe reached up and began to unbutton my shirt. Her breathing was very labored. She was blushing. I guess she was having trouble controlling her hands because she had to try a number of times with the first few buttons. \"Pull my shirt out of my jeans and take it off.\"\n\nShe struggled a bit but managed to take off my shirt. She didn't seem to know what to do with it. \"Give it to Sarah.\"\n\nShe turned and gave it to Sarah. Sarah gave her a wink and when Jamie turned back to me she had a big smile on her face.\n\n\"OK, now, look me over. You may walk around me if you wish.\" She did just that.\n\n\"Now touch my chest.\" She tentatively reached out and ran her hand over my chest. \"Have you ever touched a man like this?\" She shook her head. \"Do you like it? Do I feel good?\" She nodded.\n\n\"OK, now, unbuckle my pants.\" I looked over at Sarah and she was rubbing her right boob. Jamie looked down at my belt and reached down and began to unbuckle my belt. My cock was right under her hand and she noticed. \"Rub it if you want,\" I told her. Her breathing was getting very labored. I was afraid she was going to hyperventilate. \n\n\"Slow down your breathing and relax, Jamie. It's OK. You take your time.\" She looked down at my bulge and slowly ran her fingers over it.\n\n\"It's so hard,\" she whispered. \"So big.\"\n\nI let her rub for a bit then said, \"Sarah, get down on your knees.\"\n\nHer eyes got real big, but she slowly sunk to her knees. \"Unzip my jeans.\"\n\nShe slowly reached for the zipper and slowly lowered it. \"Now push my jeans down.\" I purposely chose looser jeans so they would not be a struggle to remove. Jamie reached for the waistband of my jeans and slowly started to lower them. I looked over at Sarah and winked. Sarah had a hand in her crotch, rubbing.\n\nWhen my jeans came down past my crotch Jamie sighed, looking straight at my bulge. I knew there was already a wet spot there.\n\nShe had stopped lowering my jeans while she stared at my bulge. \"I can't get totally naked with my jeans around my knees. Take them off.\"\n\nJamie struggled to get them off of my feet and handed them to Sarah. I stepped away from Jamie as she handed off my jeans and walked slowly around the room. \"Watch me, Jamie. Watch how my body moves.\" She did as she was told as I circled the room. I stopped in front of Sarah with my bulge at eye level. She reached out to cup my bulge. Then she reached for the waistband of my briefs. I slapped her hands away. \"That's Jamie's privilege.\" Sarah gave me a pout. I turned and returned to Jamie. \"Would you like to do the honors?\"\n\nJamie looked up at me and gave me a nervous smile. \"It's OK, it won't bite. But it wants you to see it. Do you want to?\"\n\nShe nodded her head and reached for the waistband of my briefs and began to pull them down. But the front got stuck on my cock. I laughed. \"You've got me so excited that I think you will need to pull out the front to let it out.\"\n\nWhen she did so and the head of my cock emerged, she sighed again. Her eyes were glued to my cock as she lowered my briefs and slipped them off my feet. She tossed them over her shoulder to Sarah. Without prompting she began petting my cock. \n\n\"It's so soft...and yet so hard,\" she whispered.\n\n\"Wrap your hand around it and stroke it up and down,\" Sarah prompted.\n\nJamie looked up at me as she wrapped her hand around my cock and slowly stroked up and down. I smiled down at her. \"That feels good.\"\n\n\"Yes, it does,\" she replied. \n\nI stepped back and slid my cock out of her grasp. \"You're here to see your first naked man. I am more than just a cock,\" I laughed as I strolled around the room. \"Now take a good look.\" I knew my cock was bouncing nicely as I walked. \n\nI turned my back to her. \"This is a man's ass. To me it's quite a bit different from a woman's.\"\n\n\"It certainly is,\" commented Sarah from behind Jamie. Jamie nodded.\n\nI displayed myself for them for a bit more and then strolled over to Sarah and retrieved my clothes. I started to put my briefs on when Sarah yelled \"What are you doing???\"\n\n\"I'm getting dressed.\"\n\n\"Why?\" She looked panicked. \n\n\"You just said that you wanted Jamie to see a naked man. She's seen me. And she even touched my cock.\"\n\nJamie was looking between me and Sarah, clearly confused.\n\n\"Can't you do what you did with me the first time?\" Sarah asked.\n\n\"What do you mean?\" I knew what she meant.\n\n\"You...showed yourself to me. Explained...how things worked. I'm sure Jamie needs that too.\"\n\n\"Jamie, do you need to know how a man's body works?\"\n\nJamie nodded.\n\nI strolled over to her, my cock bouncing nicely. \"What do you want to know?\" I asked her.\n\n\"Show her how your cock works. What feels good...where everything is and what it's used for,\" Sarah said. Jamie nodded.\n\nI took my cock in my hand. It was as hard as it had ever been. Jamie was so cute...and interested. She was enjoying the show and so was I.\n\n\"This...is my cock. Also called a penis, and a lot of other names, which you'll learn after a while, but when you're naked in front of a beautiful woman, two of them,\" I looked over at Sarah, \"it's called a cock.\" Jamie nodded as she looked at it.\n\n\"When it's this hard it's normally ready to slide into a vigina, but that's not going to happen today. It is so hard because you two women are looking at it...and Sarah is rubbing her boobs,\" I laughed. Sarah laughed as Jamie looked over at her. Then her hand drifted up to her own boob.\n\n\"Oh, my,\" I said as I saw Jamie touch her boob. \"That's gonna make it harder,\" I laughed. Jamie gave me a shy smile.\n\nI lifted my cock up to she could see the underside. \"You'll note the veins that run over it. They supply the blood that makes it hard. And this little thing running on the underside of my cock. It looks like a little tube and that's what it is. That's where my pee come up.\"\n\n\"Also his cum,\" Sarah piped up. \n\n\"Yes, when I cum that's what it travels up.\"\n\n\"And it's so cool to watch it pump through that. And his balls get real tight and also pump when he's cumming,\" she added. Jamie smiled.\n\n\"Will I get to see that?\" Jamie whispered.\n\n\"Do you want to?\"\n\nJamie nodded. She didn't talk much.\n\n\"Well, we'll see. Since she talked about my balls, let's go there next.\" I lifted my balls. \"These are also called testicles. That's where the sperm is made and mixed in with the fluid that we call cum. They call them balls because there are two things in there that feel like balls. Would you like to touch them?\"\n\nJamie nodded and reached out her hand, cradling my balls. \"They can be very sensitive, so don't squeeze them too hard.\" She rolled them in her hand and it felt really good. \"That's nice. When you're stroking a guy's cock or sucking on it, it is nice to also roll his balls. He'll like that.\"\n\n\"Do you like it?\" she whispered.\n\n\"Yes, I do. You may continue,\" I smiled as I went on with the lesson. \"On the top of my cock is the head, also called the hood because it kinda looks like a hood. Right here on the bottom side of the head is probably the most sensitive part of a guy's cock.\" Jamie used her other hand to lightly rub that spot. \"When you're sucking his cock, running your tongue over that part will really excite him.\"\n\nJamie looked up at me with a look of interest and fright. Sarah noticed that and said, \"You will need to try sucking his cock. You might not like the smell but it is an awesome experience to suck his cock.\"\n\nJamie leaned closer. \"The smell is...different...but it's OK.\"\n\n\"Kiss the head,\" Sarah instructed, which Jamie did. \"Now put your mouth over the head.\" Sarah had moved next to Jamie, watching intently as she instructed Jamie what to do. I let her take over. This was feeling quite good.\n\nJamie was tentative as she formed her lips around the head of my cock. \"Suck it lightly,\" Sarah told her. I could feel more pressure on my cock as she did so. \n\n\"Mmmmm.\"\n\n\"See, he likes it. Look at his head again. See the slit in the top of it? That's where the cum comes out. Also called his peephole,\" she laughed. \"It's pretty sensitive also. Not on all guys, but most.\" I wondered how she knew that. She must be sucking other guy's cocks now, I thought, but didn't ask.\n\nNow, I want you to stroke him,\" Sarah instructed. \"His cock is pretty large so you might need to use two hands.\" Jamie wrapped both hands around my cock. \"Now stroke up and down,\" which is what she began doing. \n\n\"He's leaking,\" whispered Jamie.\n\n\"That's called precum. That lubricates his cock. Spread some around on it. Without it being lubricated his cock would get sore,\" Sarah was teaching her well. \"It also works as a lubricant for when it's inserted into your pussy.\" Once again I wondered if she was talking from experience. I didn't ask.\n\nI was already so hard so I knew I wouldn't last long. I always love Hannah to be naked when she sucks and strokes me so I didn't realize how excited I would be having two fully clothes women in front of me with one of them stroking me. But it was hot! They were both so cute. I wasn't going to last long.\n\nSarah could tell I was getting close so she told Jamie what to expect. \"You'll feel his cock getting slightly bigger and you'll see his balls tighten up even more. Then you know he's about to cum. Jim shoots out a lot of cum so you might want to move to the side so it doesn't get on you.\" But Jamie was so intense as she stroked me she didn't move away. I started to groan. \n\nMy legs started to weaken and Sarah noticed, so she got behind me and slowly lowered me onto the sofa, holding my ass. Jamie moved with me but didn't get to the side, stroking for all she was worth.\n\n\"He's going to cum, Jamie.\" Sarah reached around and took my balls in her hand and squeezed gently. That did it.\n\nI didn't mean to cum all over Jamie, but I was kinda out of control by that time. I shot the biggest wad of cum right then. Jamie was right in front of me and was holding my cock straight at her face. And that's where I came. With my first shot. ",
        "She dropped my cock and jumped out of the way but my cock was doing what it naturally did. It was shooting and it shot all over the place. Some got on her clothes, some on my legs, some on my belly. But I was just leaning back on Sarah and arching my back, lifting my ass that she was holding and enjoying a most wonderful orgasm. Then Sarah upped the ante and slid her finger in my asshole. A whole new set of feelings and orgasms ripped through me. I think I just laid on Sarah for what seemed like five minutes, cumming. I'm sure it was just a few seconds but time seemed to stop. It was good.\n\nWhen I finally came down and got my wits about me I looked over at Jamie. Jamie had not wiped the cum off her face. She was just staring at me. \n\n\"Did I do that?\" she asked with a smile.\n\n\"You certainly did. That was awesome.\"\n\n\"That was the most incredible thing I've ever seen,\" she said. You were beautiful...I mean handsome,\" she laughed. \"Thank you.\"\n\n\"No, thank YOU!! I've cum hard before, but that one rates right up there. Did you have fun?\"\n\n\"Yes I did. Can I do it again?\"\n\n\"Not for a little bit. I need time to recover. And I need a shower to clean all this up,\" I laughed.\n\n\"Can we watch?\" asked Sarah.\n\n\"You want to watch me shower?\"\n\n\"Yeah!\" Jamie nodded.\n\n\"Well, you've seen everything else. I don't see why not.\" So I struggled to my feet and headed for the bathroom. I heard their little feet following me. I knew they were checking out my ass. \n\n\"Isn't that a great view?\" I heard Sarah whisper.\n\n\"Mmmmmm.\"\n\nWhen I got to the bathroom I handed Jamie a towel so she could clean off her face and her clothes. Then I flipped the toilet seat up.\n\n\"You're gonna pee right in front of us?\" Sarah gasped.\n\n\"Well, after all that I gotta pee. Do you mind?\"\n\n\"Can we watch?\" This came from Jamie which surprised me.\n\n\"I guess. I don't see why not.\" I took my cock in my hand and aimed for the toilet but I was still a little excited so I had to wait a bit before I could let go. When I finally was able to start I felt a hand come over mine and push my hand away. It was Jamie, aiming my cock.\n\n\"That's so cool,\" said Sarah. \"I've never watched a man pee before.\"\n\n\"I've never watch a woman pee either. Any of you next?\"\n\n\"NO!!\" came in unison.\n\n\"Darn. It would only be fair since what you've just witnessed.\"\n\n\"This is our show, not yours, bub,\" Sarah answered. \"Now get that cute ass in the shower!\"\n\nJamie sat on the toilet seat and Sarah leaned on the counter as I prepared the water. I felt Jamie reach out and rub my ass. Jamie was getting bolder.\n\nI figured I would take extra time and put on a nice show for them. I moved around in the shower more than usual, letting them see me from all angles, soaping all areas, taking special care of my cock, which was beginning to lengthen again.\n\nI heard Sarah say to Jamie, \"This is so cool, isn't it?\" Jamie answered with \"Mmmmm. I didn't expect all of this. I just thought I would get to see a naked man. This is awesome.\"\n\n\"Any of you ladies care to join me?\"\n\nI saw Sarah look over at Jamie. Both smiled. \"That wouldn't be legal, would it?\" Sarah finally asked.\n\n\"Oh, yeah. There's that,\" I answered with a laugh. \"Too bad. Maybe someday you can put on a show for me.\"\n\nOnce again they looked at each other. \"I could never do that,\" answered Jamie. Sarah just had a smile on her face. Was she thinking about it?\n\nWhen I finished the shower and got out they both grabbed a towel and proceeded to dry me off, slowly...everywhere. Jamie worked on my cock again while Sarah concentrated on my ass. I remembered how much Sarah had liked my ass on previous shows. Through all that attention my cock started to lengthen again.\n\n\"Well, I guess the show is over,\" I said.\n\n\"We don't have anything we need to do. Do you? We'd be happy to just hang out if you don't mind.\"\n\n\"OK, let me get dressed then,\" I teased.\n\nJamie spoke up. \"I wouldn't mind if you stayed naked.\"\n\nI wanted to stay naked for them. I was teasing them. \"Well, what would we do?\"\n\n\"We could just talk,\" Jamie answered.\n\n\"Or you could masturbate for us,\" Jamie suggested.\n\n\"I don't know. I came awful hard. I don't know if I can get it up again.\" My cock was once again thickening.\n\n\"I know you can! I've seen it. You've come for the group twice and I KNOW you fucked Hannah after those.\"\n\nWhat dirty words she is using, I thought. Of course the irony of that thought was not lost to me, standing there stark naked in front of two really cute women.\n\n\"Well, let's go to the living room and see...what comes up.\"\n\nI took the chair while they took the sofa. \"So, tell me Sarah, how many other cocks have you sucked since you first saw me naked?\" I knew that I probably wouldn't get an answer from her.\n\nShe turned bright red. \"That's NONE of your business!!\" Jamie looked at her with surprise, but Sarah had told me by her reaction she was sucking other cock. I wondered if she was still a virgin.\n\nAs I sat there I started stroking my cock as we talked about things. Mostly the conversation kept going back to my show and how much they enjoyed it. Jamie was amazed at my body. Especially my cock. Which, along with my stroking, helped harden my cock for them. \"Do you want to come closer?\"\n\nThey both scrambled to sit at my feet.\n\n\"No sucking this time. This is just masturbation, so Jamie can see how it works. But if you touch yourselves, that would be good motivation,\" I laughed.\n\nSarah leaned back and opened her legs and started touching her crotch. Jamie started rubbing those big boobs. That worked for me.\n\nThings got quiet...except for the heavy breathing...by all of us.\n\nI modified my stroking a lot, letting Jamie see the different techniques I used. I was producing enough pre-cum watching these women that I didn't need to add anything. Between the heavy breathing and the squishing sounds from me stroking my cock, it was getting hot in here. Yes, heat hot. I was sweating, but also sexy hot. \n\nJamie was quietly moaning as she rubbed and squeeze her boobs. I kind of motioned toward her crotch and she spread her legs and began rubbing her crotch. Dang the rules! I bet if I asked them to take off their clothes they would have.\n\nI could tell that Sarah was getting almost as hot as I was. Her hand was frantically rubbing her crotch, and she was raising her ass. I knew I could probably make her cum with me.\n\n\"I'm getting close to cumming. Sarah, are you going to cum with me?\" I asked.\n\n\"I'm trying,\" huffed Sarah.\n\n\"Wait for me, please,\" squeaked out Jamie. \"I heading there.\"\n\nI slowed down a little. \"Stupid rules. I wish you two were naked too.\"\n\nSarah asked, \"Do you want us to get naked?\" Jamie looked at her wide-eyed. Then she looked at me. She smiled. I think she would also get naked.\n\n\"No,\" I sighed. \"We'll have to ask permission if this ever happens again.\"\n\nJamie looked between Sarah and me. I could see she was thinking 'we'll do this again?' \"Would you take MY clothes off next time?\"\n\n\"I would be honored,\" I replied. She smiled. \n\n\"OK,\" she said. \"I'm almost there.\"\n\nI sped up. Sarah did also. I decided to start the dialog. \"I'm getting closer...watch me cum.\"\n\nSarah chimed in. \"Oooo...ahhh...Let me cum first...I wanna be able to watch you cum.\"\n\n\"Me too, Jim. Oh...here I cum!\" Jamie arched her back, scrunched up her face and came hard, followed in a few seconds by Sarah. I slowed down a bit, watching them cum, respecting their wishes. But I also really wanted them to watch me cum. After all, I'm an exhibitionist, right?\n\nWhen they settled down I got back to work. It was so hot having two young women looking at my cock, at my naked body. They moved closer. Here we go girls!\n\n\"I'm cumming, watch me cum...ooooo...ahhhhh...gnnnnn...\" I could see that while they were watching they were still rubbing their crotch, their pussies...and that made me start shooting. \n\nI raised my ass off the chair and shuddered and shot, shuddered and shot. It wasn't as much cum as the first time, but it was intense.\n\nAs I settled down the room was quiet except for my breathing.\n\nFinally, Sarah said, \"Did you watch his ass as he was cumming?\"\n\n\"Yeah.\"\n\n\"Did you see his asshole clenching?\"\n\n\"Yeah, and his balls were spasming. I could see the cum shooting up that little tube. That was so cool to watch! Thanks for setting this up for me.\"\n\n\"Thank Jim. He did all the hard work.\"\n\n\"Thank you Jim.\"\n\n\"You're welcome Jamie. It was nice watching you cum. Both of you. Just wish you both were naked.\"\n\n\"Maybe next time,\" laughed Sarah. Then I was thinking of the next time we got together with the group. They might be in for a real treat.\n\n\"Shower time?\" asked Jamie. She was getting much more comfortable. Maybe it was her orgasm.\n\n\"No, just go get me a towel. I'll just wipe down.\" Jamie rushed off to the bathroom.\n\nI watched her go. \"She's cute, isn't she?\"\n\n\"You both are.\"\n\n\"Imagining her naked?\"\n\n\"I've been imagining both of you naked,\" I laughed.\n\n\"You know I'd get naked for you right now, don't you?\n\n\"I imagine you would. But we have to go by the rules. I promised Hannah.\"\n\nJamie came back in with a towel and began wiping me down. She took her time. Sometimes she was touching me without the towel. She was getting some free feels. She paid extra attention cleaning my cock. \"You know what I'd like to do?\" she asked.\n\n\"I can't imagine,\" I joked.\n\nShe grabbed my cock and rubbed it on her cheek. It was quite soft by that time. \"I would like to suck this until you cum again.\"\n\n\"Well, you'll need to give me plenty of time to recover,\" I laughed.\n\n\"We have time, don't we Sarah?\"\n\n\"Well, yes, but I would also like to suck his cock till he cums.\"\n\n\"Wait, girls. I MIGHT have one more in me but not two more.\"\n\nJamie got on her knees in front of me and took my cock, my soft cock, and started to kiss it...and lick it...all over. My balls, the underside, the head. She managed to lick all over my cock. She was learning fast. And my cock was getting hard again. I couldn't believe it was getting hard so quickly.\n\nSarah, told me to stand up and she came around my backside and began to kiss and rub and lick my ass. She pushed me on my back and made me bend over a bit. Then she spread my ass cheeks and licked my asshole.\n\nI jumped...and got even harder. \"Where did you learn that?\" I asked. She just giggled. And continued to work on my asshole.\n\nAnd Jamie started sucking my cock. And rubbing my balls. I was leaning over Jamie and I started rubbing her back, using that to keep my balance.\n\nWith Sarah licking my asshole and Jamie sucking my cock I could feel an orgasm coming quicker than I expected. She was also using her tongue on the head. She was a fast learner!\n\n\"I'm getting close,\" I told her. \"Do you want me to cum in your mouth?\"\n\nJamie nodded her head and started sucking harder. Sarah reached between my legs and played with my balls and she continued to lick my asshole. She must have some experience with that because she was doing a great job.\n\nMy orgasm came so quickly I didn't have time to warn Jamie. I felt it start in my ass and it ran up my back. And then I exploded. In her mouth. Jamie did not pull away. She took all my cum. I'm sure it wasn't as much as before because this was my third orgasm, but it sure was good.\n\nMy legs gave out and I fell to my knees. Sarah lost access to my asshole and Jamie let go of my cock. I just laid there as they rubbed my body all over. It really felt good. \n\nI looked over at Jamie and she was licking her lips. \"Did you take it all?\"\n\nShe smiled and nodded her head.\n\n\"Way to go Jamie!\" Sarah cheered. \"How did it taste?\"\n\n\"A little salty, but I liked it. I want more,\" she smiled.\n\n\"Well, I think I'm done,\" I told them when I got my wits again.\n\n\"Did I do good?\" Jamie asked.\n\n\"Wonderful! You're a good little cock sucker.\" I laughed.\n\n\"Did I lick your asshole good?\" Sarah asked.\n\n\"You've done that before, haven't you?\"\n\n\"No, but I've been reading about it. I've always wanted to try it. Do you know your asshole tried to grab my tongue?\"\n\nI laughed. \"I had no control over that.\"\n\nI've always liked walking the group to the door and giving them a kiss while I was still naked, which I did this time also. Jamie gave me a huge hug and reached up to kiss me. \"Thank you SO much. You'll always be the first man I saw naked. And watched cum...and came in my mouth. You da man!\"\n\nSarah, grabbed my ass and pulled me close to her, my cock up tight against her. \"Next time I want you to cum in MY mouth,\" she said after she kissed me.\n\n\"That is all up to Hannah,\" I told her. I didn't tell her about the possibility that Hannah and I might be making love the next time we got together. All my attention would be on Hannah.\n\nI watched them walk to their car, just giggling. What a wonderful experience."
    ],
    "authorname": "secret_admirer72116",
    "tags": [
        "exhibitionism",
        "exhibitionist",
        "stripping",
        "masturbating",
        "first time"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-private-show-without-me"
}