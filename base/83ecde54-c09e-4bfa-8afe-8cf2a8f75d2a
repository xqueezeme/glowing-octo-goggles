{
    "title": "The Prize Day 02",
    "pages": [
        "Author's Note:\n\nChristmas Eve time on holiday. More to come so please enjoy!\n\nChristmas Eve\n\nAndy woke up around 8:30 in his giant bed. Part of him thought last night was a dream, but his dick tingled too much for that.\n\nHowever, both sisters were now gone.\n\nHe got out of the bed and went to take a piss. I was a long one this morning since he didn't do so last night. He'd gotten a little sidetracked.\n\nOnce he finished relieving himself, he slid on his sleep pants and undershirt and ventured out.\n\nHe'd figured that the Whitney and Britany had left sometime during the night. Andy also figured it was still early relatively and that no one else would be up yet so he could reflect a bit on last night, especially all the events from the bedroom.\n\nHe was wrong.\n\nNatasha, Candace, and Charlie were all in the kitchen enjoying a morning cup of coffee and chatting. They were all in tank tops and booty shorts that showed off their amazing assets. Candace saw Andy first and smiled.\n\n\"Morning, killer,\" she chided him. He made a faint smile and waved. Natasha and Charlie then turned to see Andy and smiled at him.\n\n\"How was your night?\" Natasha asked innocently, while knowing full well how the Stevens sisters worked him.\n\n\"Good, how was your guys?\" Andy asked.\n\n\"Not as good as yours!\" Charlie added with a smile and a small hint of jealousy. Andy blushed knowing that they knew what happened. He took a deep breath as he shrugged his shoulders.\n\n\"How were the dummy twins?\" Natasha asked flat out. Andy quickly thought through his possible answers and came up with one.\n\n\"Do I seem like the \"kiss and tell\" type?\" he jibbed.\n\n\"Oh, you can tell us,\" Charlie prompted. \"We won't tell,\" in such an obvious \"oh yes we would\" way. Andy just shook his head at her and made some coffee for himself.\n\nAlex entered the kitchen then and was very pleased to see Andy already up. She snuck up behind him and gave him a hug.\n\n\"Merry Christmas Eve!\" Alex announced. Strange as it was, that was the first moment Andy realized that it actually was Christmas Eve.\n\n\"Same to you!\" Andy replied.\n\n\"Were you a good boy for Santa last night?\" Alex asked, already knowing he wasn't.\n\n\"Guess I'll find out after tonight,\" Andy said innocently.\n\n\"You have no idea,\" Alex whispered into his ear. Natasha shot her a look as well, fully knowing what she had in mind.\n\n\"Good morning, everyone,\" Cassandra said entering the room. Andy looked at the spaghetti straps on the shirt she had on wondering how the hell they didn't snap. Cassandra saw him looking and smiled again. Andy poured her a cup of coffee. She gave him a kiss on the cheek.\n\n\"Thank you, Andy,\" she said in as innocently cute voice as she was capable.\n\nThen Jerome entered to get everyone's breakfast orders. People ordered a wide array of things, while Andy just asked for bacon and eggs. Jerome took down all the information and left a pad for anyone who came afterward. They were supposed to have done this last night, but after everything that happened, it went by the wayside.\n\n\"Andy,\" Jerome ventured, \"thanks again for the help last night.\" To be a nice guy, he said it loud enough so the girls could hear him too.\n\n\"No problem, but I really didn't do much,\" Andy answered honestly.\n\n\"Anyway, you'll probably see less of me with you being the only dude left. If you need anything, let me know.\" With that Jerome left.\n\nAngela and Sara now joined, pleased that Andy was already up as well. Less pleased that they missed the first breakfast order. They both wrote down their orders and Andy offered up some coffee to them both. They both smiled at him for the offer and Angela added in a squeeze of Andy's ass as well.\n\n\"So, what should we all do today?\" Sara asked with a slightly mischievous grin. There was a schedule of sorts and games, outings, and stuff throughout the week, but Christmas Eve really didn't have much of that. The planners thought everyone would still be getting to know each other.\n\n\"I dunno,\" Candace responded. \"Andy, what does your family do on Christmas Eve?\"\n\nAndy thought of his and Mom's normal activities quickly.\n\n\"Not much really,\" he answered. \"We typically make Christmas cookies and watch \"White Christmas\". Then normally get into pajamas and drink spiked hot chocolate or something.\"\n\n\"Oh my God, that sounds perfect,\" Alex opined. \"Such a chill way to go. We should make Christmas cookies! Who's in?\"\n\nAngela and Cassandra both indicated they were, while everyone else was less excited about baking.\n\nBreakfast came and Andy joined the girls at the table area, getting a place in-between Natasha and Karlee, who'd now joined them. The food was great, and all were enjoying the meal. Liliana and the Stevens sisters all came in around then.\n\n\"Good morning, Andy!\" the Stevens sisters said in unison. He replied with \"good morning\" while trying to hide the blushing cheeks he had on his face. It didn't work.\n\nWhitney and Britany both placed their orders, but Liliana said she wasn't hungry yet and just had coffee. Sara, for her part, was keeping her eyes on Andy while sipping. The Stevens sisters mostly chatted to themselves and smiled.\n\nAndy was a fast eater and was done pretty quickly. He cleaned his plates off and put them away.\n\n\"I think I'm gonna grab a quick shower,\" Andy announced.\n\n\"Ok,\" Cassandra said. \"We'll look up some cookie recipes and make sure we have everything so we can start when you come back.\"\n\nAndy nodded his concurrence to the idea and started back toward his room. The girls quickly huddled up and started asking some very pointed question to Whitney and Britany.\n\n\"So, how was he last night?\" Angela asked first.\n\n\"Really good!\" Britany answered. \"He's got a good dick there. We both thought it was a perfect size. You guys all know how the really big ones can get to be a bit much.\"\n\nThey all nodded in agreement. While certainly porn stars were used to huge cocks and certainly liked them, to have it all the time could sometimes really be too much. Whitney estimated Andy at seven inches with good girth, which was a little bigger than normal, but not enough to leave them sore.\n\n\"We both got off a bunch,\" Whitney said.\n\n\"We are gonna have some fun with him this week!\" Natasha declared with much of the table agreeing.\n\nAndy took a few more deep breaths once he hit his room. 13 girls and him, Sasha and Melanie having left last night. To most men, he knew this would be a dream. But this was actually a reality for him. He figured the only thing he could do was take it one step at a time and hope for the best. He took a few more deep breaths and headed into the bathroom.\n\nHe started brushing his teeth and turned on the water in the massive shower he had. It took him a minute to understand all the controls, but Andy managed to get all the heads and jets on. He finished brushing and swished with mouth wash. Once he was convinced the taste of bacon, eggs, and girl cum were gone; he spat out and stepped into the shower.\n\nIt felt amazing. Andy didn't have anything near this fancy in his apartment. He noted to himself that he should price out this shower for his new place in Vegas. He closed his eyes and let the water on all sides flow all over him, through his hair and drain down below. He felt so relaxed and in the moment.\n\nAnd then, he felt arms wrapped around him and a pair of boobs squishing his chest. Andy's eyes shot open, spun around, and saw Sara holding onto him, smiling.\n\n\"Thought you could use a shower buddy!\" she said sweetly.\n\nAndy was surprised to say the least. He didn't have the bedroom door locked or the bathroom one, so it would have been easy for Sara to get in. But now he had her fully nude in there with him.\n\nHe took a cue from her and wrapped his arms around her.\n\n\"It is less lonely,\" Andy admitted aloud. She giggled and squeezed him tighter. With her 34DD tits, it's a wonder she didn't choke. She grabbed some of the shampoo that was nearby and started working it into his hair. It felt amazing as she continued to massage his scalp. Sara wasn't particularly tall, but she was tall enough to do this without standing on her tippy toes.\n\nOnce she was satisfied his hair was covered, Sara grabbed the body wash. She put a generous amount on her hands and began rubbing it all over his chest. Massaging and groping all at the same time she covered his front in suds and then twirled her finger to turn around.\n\nShe then began soaping up Andy's back, making sure that no spot was left untouched. She put more body wash on her hands and started working on his feet and legs. They were hairy like most men's legs, and she noticed how toned his legs appeared to be. It made her pussy tingle a bit.\n\nFinally she started soaping Andy's ass, kneading and getting as much of it in her hands as possible. She even made sure to give his asshole a soaping. Then she turned her attention back onto his front.\n\nHis cock was semi-hard, not very surprising given the personal attention he'd been receiving. Sara inspected and found herself agreeing with the sisters about his size. She was also impressed that he appeared to shave his privates (a decision that Andy had made before he left.) She was very gentle with him at first, more fondling than cleaning which she would admit.\n\nSara soaped up his balls, playing and manipulating with them as she saw his cock rising to the occasion. She then very meticulously started cleaning that as well. Up and down she manipulated her hands to clean and caress every part of Andy's cock. She looked up and smiled at him as he was still amazed that this was even happening.\n\nSara then began lightly licking his cock. Just letting the tip of her tongue touch it at first. She knew full well how to give a man good stimulation and this was no exception. Once she was done teasing Andy, she surrounded his cock with her mouth.\n\nThe feeling was amazing. Even though Andy had had his cock sucked by two women only last night, it was still pure bliss to him. As she began to really work his cock, he found that she was much better at it than either of the Stevens sisters had been last night. She then gave a few quick, aggressive sucks and popped it out of her mouth. She then stood up, allowing her tits to graze his cock and the rest of her body as came full upright. She then grabbed the shampoo bottle again and handed it to Andy.\n\n\"Your turn,\" she said sweetly.\n\nAndy needed no second prompting. He ran his fingers through her hair, ensuring that it was all damp enough for the shampoo. He then put a more than generous amount on his hands and began.\n\nSara was in heaven instantly. She liked having her hair played with normally, whether it was in the shower or fucking; but Andy was a real pro. He seemed to know just the right amount of pressure to use on her scalp and worked the material into her hair. He was careful to make sure to cover the hair with the shampoo all the way down the ends, knowing how much chicks hated it when men didn't do that.\n\nAndy then got the same body wash that Sara had used just a few minutes previous and lathered up his hands. He started at her shoulders. For some reason, Andy had always found women's shoulders alluring. Almost like they were the front lines for the rest of body. He covered her arms as well, being even so bold as to kiss her hands as he did. Sara thought that was so sweet and sensual.\n\nHe then put another generous amount on his hands as he prepared for the next area. Her breasts had always been the center of attention when it came to Sara. Of course, she had great eyes and a very pretty face; her ass was flatter than she would've like and wasn't really a fan of the long labia she had for her pussy. But with her tits, she knew she always reigned supreme.\n\nAndy was aware of this as well. He had watched Sara's movies countless times and fantasized about the pair of globes now before him. Now he was about to touch them, and this made his cock even harder. He started the massage of them slowly, paying attention to all parts of both breasts. He worked the sides and the curves of them before cleaning the top parts. Andy scrubbed the undersides of her breasts thoroughly. He had dated somewhat busty women before and knew that boob sweat, and other things could leave that area grimy. Sara was very appreciative that he did that, impressed with his thoroughness.\n\nHe eventually made his way to her nipples, which by this point were rock hard. He grazed them softly his hands as he made sure they were thoroughly cleaned. Once he was satisfied, he placed a small kiss on each one which made Sara smile. Much to her surprise, Andy didn't at any time grab them. Most men, and quite a few women couldn't wait to get as much of the tit flesh into their hands to squeeze and pull; all of which really turned her on. But Andy was being soft and gentle. While almost disappointed about that, she also found herself really impressed at his ability to restrain himself\n\nHer stomach was next, again with the same deliberateness that he had washed the rest of her body with. He cleaned out her naval and went down with his hands to her hips. He then spun her around to do her back, much as she had done with him. He massaged her shoulders as he did it, Sara loving the feeling and pressure. He worked her back hard, putting pressure on points that Andy knew most people had tightness in. With large-chested women, it tended to be the lower back and Sara was no exception.\n\nNext her legs, smooth and clean as anything. (Sara had actually made sure they would be.) He took each leg in turn, not rushing. Never rushing. He was taking his time and being deliberate about it. He then started kneading her ass.\n\nWhile Andy agreed with Sara's thoughts that maybe it wasn't as shapely as Britany or Whitney's, he still liked it and grabbed at it while ensuring its cleanliness. Sara was loving it. Having tits like hers, not many paid much attention to her ass, and she was grateful that Andy was.\n\nAndy then decided to be slightly bold. He started kissing on the cheeks of her ass in almost a playful way. She giggled, liking the feeling. Then he spread her cheeks and start licking the rosebud of her ass.\n\n\"Oooh!\" Sara let out at the sudden new feeling. Of course, this wasn't the first time someone had licked there, but she really was surprised that Andy had done so. She loved the feeling and encouraged him to continue. Andy darted his tongue in and out of her ass a bit, Sara moaning at the feeling in order to encourage him to continue. After a bit, he ended his oral assault of her ass and moved on to another prize.\n\nWhile Sara was sometime self-conscious of her pussy, Andy thought it looked very nice. A small landing strip denoting her prominent clit and pussy. He washed it slowly, front-to-back of course, just lightly touching her outer lips. The teasing was driving her crazy, which Andy notice when he found the area becoming far more moist that it was before. He washed her clit gently, giving her electric tingles as he did it.\n\nAt this point, Sara was begging for his tongue on her. Not with words, but with looks and moans. Andy ignored it for about a minute before he relented. He kissed all around the region as she lifted her leg up to allow him better access. Soft, easy licks. Not unlike you would use with an ice cream cone. He tickled her clit with his tongue, pursing his lips around it, flicking it with his tongue.\n\n\"Oh, fuck!!\" Sara let out, loving what Andy was doing to her. He teased and pleased her quite well as she marveled at the attention. He did this for maybe a minute more before he sunk a single finger into her.\n\nThat did it. She bucked hard against the finger and a gush came from her pussy. Andy helped hold her steady, so she didn't fall mid-orgasm. The waves subsided and Sara looked straight down at him. The look could only be described one way. Desire. Pure, unadulterated desire. Sara grabbed his face and pulled to hers. After a mind-blowing kiss where her tongue was practically flicking his tonsils, she made her desire known.\n\n\"Fuck me, Andy,\" Sara demanded, \"fuck me now!!!\"\n\nSince Andy was already at \"full-mast\" and her legs were already open from his oral work, Andy had no problem in easily sliding into her. Her pussy was hot and warm. It may not have looked tight from the outside, but it sure as shit felt tight on the inside. She groaned at his entrance. \"God, he felt good!\" she thought to herself.\n\nJust like with the washing, Andy took his time. He was being very gentle. He didn't follow Sara's instructions quite as directed, more making love to her rather than fucking her. Sara, for her part, didn't seem to mind, just loving the feeling of his cock in her pussy. She wrapped her arms around him, making the encounter all the more intimate.\n\n\"Pin me to the wall,\" Sara requested.\n\nShe was not heavy, so Andy had little trouble lifting her up. He pinned her to one of the walls and she quickly sprung to action. As she had done before, she hooked her arms around his neck and wrapped her legs around him. Andy had never done this before but found that he had no problem thrusting into her.\n\nHe increased his pace into her while she started doing the same heavy breathing that she had become known for in her videos. She pulled him tight into her, trying to use her hips to encourage him more. She then grabbed and tugged on the back of his hair. That seem to do something to Andy as he started slamming into her harder now. She kept up the heavy breathing, stopping only to tell him to \"fuck her tight pussy.\" Andy then began something he normally didn't do.\n\nGrunting. He was now grunting really hard.\n\nSoon, Sara sensed his arms were tiring of holding her up against the wall. She had a new suggestion.\n\n\"Doggy, Andy,\" she whispered. \"Fuck me from behind!\"\n\nAndy gently lowered her off the wall and as soon as her feel hit the tile, she spun around. She then bent over and spread her cheeks apart, allowing Andy to see both her holes clearly. He aimed himself for her slit and sunk himself in.\n\nSara always liked it from behind and this was no different. Her panting was getting louder as Andy kept going.\n\n\"Fuck me, baby! Oh, you fuck me so good, Andy!\"\n\nShe was definitely loud enough that anyone else in the house would've been able to hear her, but right now, neither particularly cared. She kept crying out for him to fuck her and he obliged. She then clamped on his dick a let out her loud, orgasmic cry.\n\n\"FUCK!!! Oh, fuck that feels so good!\" Sara informed Andy/the world.\n\nHe kept going in her and he started to feel the familiar feeling. He wasn't going to last much longer. Sara with all her experience knew the warning signs.\n\n\"Are you gonna cum, baby? Do you wanna cum, Andy?\"\n\n\"Yeah,\" was all he was able to get out at the pace he was going. Sara suddenly got off his dick and spun around, getting on her knees. She started stroking his dick hard as the tip of Andy's penis was right between her lips. A few seconds and Andy erupted. Ropes started shooting into Sara's waiting mouth, her making sure that all of his juice was in her mouth. Once his orgasm subsided, he looked down on her smiling, cum-filled face. She then made a big gulp and swallowed the whole thing down. \"He tastes good,\" Sara thought being something of a connoisseur. She then kissed the tip of his cock and stood up.\n\n\"I skipped breakfast,\" Sara said innocently shrugging her shoulders while smiling. All Andy could do was chortle.\n\nThey held each other for a few minutes, letting the water fall over them and just enjoying the contact with the other's skin. Sara then shut off the water and stepped out. She grabbed a towel but started drying off Andy instead of herself.\n\n\"When I start a job, I finish it,\" she said proudly grinning.\n\nAndy then reciprocated by grabbing a towel and drying off Sara, not stopping until every part was dry, especially her tits. Sara then took another towel and wrapped her hair in it. She then gave Andy a big kiss, deep and long.",
        "\"I think I have a new favorite shower pal,\" she said grinning.\n\n\"I definitely feel cleaner,\" Andy responded.\n\nSara began drying her hair using a hair dryer that was in Andy's bathroom. Andy combed his hair until he had it where he wanted it. Once her hair was dry enough for her, Sara grabbed her towel and wrapped it around her body as only women can do.\n\n\"I'm gonna go get dressed. Just wait till you taste my cookies.........oh wait......\" she said with a devil grin. With that, she blew Andy a last kiss and left.\n\n\"So much for the quiet shower,\" Andy said to himself aloud.\n\nAndy then went to his bag and got out clothes for the day, a Christmas t-shirt with Snoopy on it and a pair of sweatpants. He figured that they probably weren't leaving the house today, so this would be fine. Once he was satisfied that he looked respectable, he stepped back outside.\n\nBy this time, everyone was up and greeted Andy with various degrees of friendliness. Gianna was still a bit cold to him, like with almost everyone; just the way she was. Liliana and Karlee looked on him favorably, both giving him big smiles, Dillion much the same.\n\n\"Nice shower?\" Candace asked smiling.\n\n\"Quite nice, thank you,\" Andy said with the slightest of grins. Andy couldn't see it, but there were some looks of jealousy across the faces of some of the girls. Cassandra and Alex in particular had wanted to participate in \"cleaning\" Andy, but Sara beat them too it.\n\nIn the time since Andy had \"cleaned up\", baking materials had been procured. Alex was now wearing her trademark, \"Fuck the Cook,\" apron which Andy giggled at.\n\n\"I like to get my priorities clear,\" Alex said alluringly.\n\nAngela and Cassandra were also in cookie making mode, starting on small stirrings themselves. They all eventually decided on some sugar cookies, snickerdoodles (which were Andy's favorite) and some gingerbread cookies. The girls already had a variety of cookie cutters out. Everything from mini \"Santas\" to boobs and penises of all sizes. Gotta keep with the theme after all. One of the kitchen TV's had Netflix on it and \"White Christmas\" started playing. Some of the younger girls had never seen it, which Gianna quickly rolled her eyes at.\n\nSara reemerged around this time, dressed in a \"Ho, Ho, Whore\" tank top and carrying a big smile.\n\n\"I think I know why she's smiling....\" Britany said sing-songy. Sara just sneered and joined us in the kitchen. They all actually made a nice unit. Andy was rolling dough and working on the snickerdoodles, Angela rolled everything else out, her tits nearly spilling out of her top every time she did, and Sara and Casandra were busy mixing and sorting.\n\nBy the end of the movie, many cookies had been made with many more on the way. Each was taste-tested after they cooled to ensure their quality. Cassandra upped the tasting a bit when she insisted that Andy taste a gingerbread cookie lodged between her tits. Being no fool, he took the cookie out using his teeth after being scolded for trying to use his hands.\n\nThe rest of the girls were doing a variety of watching TV, checking their phones, reading. Some were in the back rooms making content for their sites. Dillion and Liliana were apparently scissoring each other in the back and eventually got quite an audience. The girls received a round of applause once the camera was cut. Andy didn't see it but could certainly hear the moaning, even from the other side of the house. Angela just shook her head.\n\n\"Bitches should've invited us,\" she said to Andy while not-so-subtly grazing his package. Andy just shook his head and continued baking.\n\nBy around three pm, the cookies were done; and Andy's pajama idea started catching on. Apparently and independently, each had bought some sort of Christmas wear for the day, and all decided that they should make a game out of it.\n\nNumbers would be drawn out of a hat to determine the order. Each would have to go to their rooms and change into what they brought which they would all wear for the rest of the night. If the group didn't feel that the woman looked good in it or wasn't sexy enough in it, the girl would have the clothes ripped off of them and would have to go naked until tomorrow. Originally, they were also going to have to go down on someone too, but it was decided there was plenty of time for that later. Andy, it was decided, would be the final judge in the event of a tie as he was deemed most impartial.\n\nThey all decided to make Andy go first, even though he told them that what he brought wasn't sexy. He came back in feety pajamas, including butt flap with Peanuts characters on it. He decided not to wear underwear with it at the last minute which had an added effect of giving the girls a decent view of his package. After Natasha confirmed that he wasn't wearing underwear by slipping her hand under the butt flap, it was agreed that Andy's attire was up to their standards. Even Gianna signed off.\n\nThe first up was Dillion. She shrugged and headed off to her room, secretly thinking that the girls had rigged it for her to go first. (They hadn't, but whatever.) She came out wearing a Santa bikini top with white fluff around it. She had a short red skirt with it and a bright red thong which she flashed to the girls while giggling. The vote was unanimous in her favor, and she took a seat.\n\nCharlie was next. She came out with a tight wife beater with, \"Slut for Santa\" written on it, clearly done in haste. She wore a polka dot pair of panties with it that really had no Christmas message on it. Unanimous again. Unacceptable. Charlie threw up her hands, kinda knowing this was coming as she really didn't pack and pajamas of any kind. She did insist though that Andy had to be the one to strip her. The majority agreed with the request and Andy went up dutifully. He felt bad about ruining her clothes, which she could tell.\n\n\"These are throwaways anyway, Andy,\" she let him know quietly, \"rip 'em.\" With that he tore her t-shirt off, ripping it down the back leaving her 34D's hanging out for all to see. Andy eventually got a tear in Charlie's panties and suddenly he was face to cheek with Charlie's fantastic ass. Charlie then jokingly pushed Andy's face into it, which made everyone laugh and made Andy slightly hard. Charlie dutifully sat next to Dillion on the couch, who couldn't resist feeling up her tits.\n\nGianna was next. She rolled her eyes at this but went along with it. She came out in tank top that said, \"Cunt for Claus\" that showed off her massive tits. Unlike Charlie's feeble attempt, this was professionally made. She finished it off with \"A Christmas Story\" panties that showed off her big ass quite well. This one was divided. It seemed like she had the majority, but some resisted. She threw up her arms and looked to Andy.\n\n\"You wanna decide?\" Gianna said to him almost laughing at how ridiculous this was.\n\n\"I love \"A Christmas Story\"!\" Andy declared and gave the thumbs up. She smiled at him and flipped off everyone who voted against her.\n\nNatasha was next. She loved Christmas, as it was her favorite holiday. She went with a theme from the movie, \"Elf\" it seemed. She had Will Ferrell's elf hat with matching elf shoes, a cleavage heavy green top, and fluffy panties. She even had Buddy earrings. There was no doubt she passed and even got some applause. She smiled and sat down.\n\nWhitney was next. She admitted that she had nothing and would strip voluntarily. She got her clothes off so fast that no one could even call for her to have them ripped off. A few of the girls rolled their eyes, but everyone mostly let it go.\n\nLiliana's turn now. She came out wearing only Rudolph pasties over her nipples and \"Ho\" thong. Approved.\n\nAlex was next and took a page from Liliana. She had a red halter top with her tits hanging out through triangle straps where her tits were supposed to go. Her nipples were covered with what looked like Rudolph's nose blinking. It slid down into a panty holster that showed off her ass quite well. She also was wearing a set of reindeer antlers on her head. Pass.\n\nKarlee was up. She came back in a Santa hat, red teddy, but a pair of black panties for some reason. She heard everyone murmuring.\n\n\"I didn't bring red panties!\" she exclaimed. This did nothing to help her case. While Andy was fully willing to give her a pass, the majority wouldn't let it stand. Charlie took it upon herself to strip her down as she had been a few minutes previous, not even giving Andy the option. Karlee for her part didn't seem to really mind too much and sat back down.\n\nCandace was next. She went with a green fur bra with Grinch's on it and a matching set of panties. It amazed Andy how it held her tits in, but he wasn't complaining. She received the pass and sat down, wiggling her ass a bit to show off as she did.\n\nCassandra was up and she did not disappoint. She came out with the sluttiest bunny suit ever from \"A Christmas Story.\" It was cut to show off her cleavage, no middle section so her belly button was exposed, and a fluffy bunny tail accentuating her ass. The creativity alone gave her a pass and she sat back down, ensuring she was as close to Andy as possible.\n\nBritany's turn came and unlike her sister, refused to simply concede. She came out with no shirt, simply red tape in an \"X\" over her nipples and a pair of red panties. While this almost showed effort, it was a fail. The girls insisted that Andy take the tape off her nipples with his mouth. Being no stranger to Britany's boobs as this point, he did it as easily as possible. More than a few of the women were impressed at his skill, even Gianna. She sat her nude ass on the couch.\n\nAngela was next to twirl with a candy cane theme. Red pasties capped with candy canes and a red thong with white fluff. Easy pass.\n\nSara was last and she did not disappoint. She was topless save a pair of crucifixes on each nipple. Her red thong had on the front, \"Jesus came from here!!\" written on them. Some of the girls were shocked while others couldn't stop laughing. Andy was among them. He thought it was perfect and said so. She passed and so ended the contest.\n\nBy this time, food had been brought out for everyone to nosh on. Appetizers mostly, but Andy noticed that the bar had also been replenished from the other night. Before heading to the bar, Andy saw the breakfast order sheets for the next day.\n\n\"Maybe we should get these out of the way so that we don't forget later,\" Andy noted responsibly. Everyone mostly nodded at his logic and filled them out.\n\nAndy then went to the bar where all the women from last night who had tried it again asked for his drink. He found a pitcher under the bar this time and used it to make everyone's drink. This time, he also got Gianna's attention.\n\n\"Is this the shit y'all were drinking last night?!\" she said in her usual blunt tone.\n\n\"Yeah, have a glass and stop acting like a cunt!\" Charlie said at her with a wink. Gianna was about to go off, until she realized that Charlie was right and was being offered a drink. She giggled and took the glass.\n\n\"Fuck me! That's awesome!\" Gianna declared to all and none. She quickly shot a look at Andy who had as humble a grin as anyone would've been capable of. \"Nice job, sir!\" Gianna declared before walking off. Andy shrugged and everyone around the bar laughed. The girls surrounding the bar were not random. Cassandra, Charlie, Alex, Natasha, Sara and Angela were all there. Andy thought they wanted drinks. Not for one second did it occur to him that they wanted him.\n\nLiliana decided they needed Christmas music for the party. She found an internet station that had party Christmas music and played it. Immediately girls started heading to the center of the room to start dancing.\n\nAll these women, scantily clad if clad at all, all dancing around. This would make any straight man's dick stir and Andy was no exception. It started stirring and he hadn't even poured himself a drink yet. He found the pitcher empty and made another one. Angela saw he was by himself doing this and decided that this wasn't right.\n\n\"Come on, Andy\" she prodded, \"come dance with us!\"\n\nAndy wasn't much of a dancer, and he knew it. But he also knew that a woman with F cups and nothing, but candy canes stuck to them couldn't be ignored.\n\n\"Just let me finish this next batch and I will,\" he declared.\n\nHe continued making the pitcher and poured himself a glass, satisfied at the result. Angela then all but pulled Andy out from behind the bar to get him onto the dance floor.\n\nMany of the girls were happy for the inclusion of Andy, but for the moment; Angela wanted all of his attention. She moved with him and tried to keep as much of her body pressed against him as possible. Andy originally had his hands on her hips, but Angela quickly moved them to her ass; wanting Andy to experience every bit of her curves.\n\nMost people wouldn't immediately turn to Christmas music as music to get down to, but it worked. The girls were all grooving on each other, and Angela was grooving into Andy. She made it clear that she was dancing with him, not just dancing with the group.\n\nThis of course got the attention of several other girls, who all had similar intentions toward him. The girls dancing around Andy seemed to get closer and closer. Angela noticed this too and just made sure to keep Andy close, hands on her ass and tits tight against his body.\n\nCharlie came up behind Andy and started grinding into him, mashing her tits into his back. Andy just started grooving with the both of them, trying to match the rhythm of the music and the swaying of both girls. Alex and Cassandra came up to either side of him, swaying along with the music. Andy was now enveloped by four busty girls who all wanted his attention. While he enjoyed the attention, he had a sudden urge hit him.\n\n\"I'll be back,\" he said to Angela and ostensibly the other three. \"Gotta use the men's room,\" trying to make clear that he wasn't trying to leave them hanging. He disentangled from them reluctantly and made his way to the small bathroom in the hallway. He could still hear the music pumping as he took his piss. He flushed and washed up.\n\nAndy opened the door and there was Cassandra standing in the doorway smiling.\n\n\"Oh, excuse me,\" came out of Andy as he tried to get out of her way so she could use the bathroom. Cassandra had no such plans. She pushed him back inside the bathroom and closed the door.\n\nAndy's eyes were wide open at this while Cassandra just smiled away. She pushed him back into a wall and immediately stuck her tongue down his throat. Her hands were all over him, groping his chest until reaching around to grab his ass.\n\nAndy for his part instinctively put one hand on the back of her head and the other on her back. He started rubbing her back until he finally felt bold enough to go for an ass grab. While Cassandra was mostly known for her DDD's, she also had a solid and well-proportioned ass, which Andy now had a handful of. Cassandra started taking off Andy's pajamas when there was a knock on the door.\n\n\"Hey!\" came a voice, \"Who's hogging the bathroom?\"\n\nCassandra tried to ignore it at first, but eventually couldn't.\n\n\"UGGGGHHH!\" she exclaimed in frustration as she threw open the door. She opened the door to find Candace wanting to use it. Candace instantly saw Cassandra and Andy and put two and two together.\n\n\"Oops,\" Candace said almost innocently. \"Need to piss, sorry,\" she said shrugging. Cassandra exited the bathroom frustrated and Andy followed behind her. Candace let her hand drag along Andy's package as he left, impressed with what she felt. She smiled a bit as the door closed behind her.\n\nAs soon as they exited the bathroom, Andy was flooded with requests to make another batch. He looked at Cassandra and she looked resigned to the inevitable. She'd have to wait for another time. The girls escorted Andy over to the bar to make another picture.\n\nGianna then came over to Cassandra.\n\n\"What up, bitch?\" Gianna asked in the nicest way that she knew how.\n\n\"Ugh,\" Cassandra responded, \"tried getting some alone time with Andy, but couldn't close.\"\n\nGianna looked at her puzzled.\n\n\"He fuckin' turned you down?!\" Gianna asked.\n\n\"No, just other people interrupted and killed the vibe.\"\n\n\"Fuck it,\" Gianna insisted, \"still got a whole week with the motherfucker in any case. You'll get some dick,\" she insisted confidently. Cassandra smiled at her and respected the logic of what she was saying. Gianna lightly slapped her boob and they returned to the dance floor.\n\nAs soon as Andy made a batch of new drinks, the pitcher was empty again, so he went back to the task of refilling it. When he did so this time, he found that the bar was now out of limeade. The second pitcher was already half empty when Dillion came calling.\n\n\"Hey!\" she shouted to get Andy's attention. \"Can you make another pitcher?\"\n\nAndy shook the empty bottle of limeade and gave her a look of, \"not my fault,\" hoping that would be enough to mollify her.\n\n\"Oh shit!\" Dillion retorted getting the attention of several of the girls who all turned to see the empty bottle.\n\n\"Don't worry about it,\" Alex said, \"we'll put it on the list of things for them to replenish.\" She then went to the kitchen to add it on to the list.\n\nWhile Alex was gone, Natasha came up to the bar.\n\n\"Andy, come relax. You can't act like the bartender all night.\"\n\nAndy agreed with the assessment and grabbed his drink. Natasha took him by the hand and led him over to a couch. She made sure to angle her body so that it was completely shown off to Andy.\n\n\"So, Andy,\" Natasha asked in as cute a voice as possible, \"are you having fun with all of us?\" Andy smiled her question.\n\n\"Yeah, I am,\" he said somewhat reflectively. \"It's just a crazy experience. I enter some contest and suddenly I'm in a house surrounded by beautiful women for a week. It's a bit overwhelming.\"\n\nShe listened and smiled at him. She really did understand. A house full of horny porn stars and you're the only dude. Who wouldn't be overwhelmed?\n\n\"Do we make you nervous?\" Natasha asked hitting the last word longer.\n\n\"No, not nervous. Just a much different energy than I'm used to. I don't get to meet many bold women in my everyday life who just do what they want and don't care who knows it. It's nice. Its liberating. It just takes a bit of getting used to.\"\n\nNatasha kept smiling at him.\n\n\"Don't worry. This week will be a crash course in bold, sexual women. I think you'll find it very fun.\" She snuggled closer to him and put her hand on his leg.\n\n\"So, here's where you escaped to!\" Alex said finding Andy and Natasha on the couch. Alex took up the seat next to Andy on his left, trying to get as close to him as Natasha was.\n\n\"Couldn't have him just being everyone's bartender all night,\" Natasha answered, \"he needs to have a good time too!\"\n\nAlex smiled at the comment.\n\n\"Oh, I have a feeling Andy is going to have a very good time this week,\" Alex said with a wink. Natasha smiled, fully agreeing with her friend. Andy just flushed red and sipped his drink.\n\n\"Andy!\" Liliana said rushing up to where they were all sitting, \"it's a slow song, come dance with me!\"\n\nBefore he could even answer, Liliana grabbed him and got him up to where people were dancing. She threw her arms around Andy's neck and began a nice slow dance with him. Andy was doing his best to look at her eyes and not her pasty covered cute tits.\n\nAlex and Natasha were annoyed that the young upstart had interrupted them, and also a little impressed. It was definitely a bold move.\n\n\"Pushy little slut, ain't she?\" Alex asked Natasha.\n\n\"Oh, yeah,\" Natasha said in agreement. Natasha then leaned into Alex so they couldn't be overheard.\n\n\"I wanna spend the night in Andy's room tonight. You wanna come have a good time with me?\" Natasha had done the math. She could have Alex be an ally in getting Andy into the sack or a competitor. Two sets of big boobs were better than one after all. Alex immediately smiled seeing the logic behind the idea.",
        "\"Hell, yeah!\" Alex answered. \"We are gonna show him an amazing time tonight!\"\n\nNatasha smiled at her friend devilishly. Liliana may have won a small battle, but they were determined to win the day.\n\nLiliana was fully into the slow dance with Andy. Part of her just really wanted to dance, part of her wanted to show up the curvier girls a bit, and part of her was curious about Andy, who she really hadn't spent any time with yet. She looked directly into his eyes to make sure she had his attention.\n\n\"I like this song,\" Liliana said, a soulful version of \"The Christmas Song\" was playing.\n\n\"Me too,\" Andy said, \"I've never heard this version before.\n\nShe smiled at him that he was paying attention to her. She may have not had the curves of some of the other girls, but she had cute, pert tits and a pretty great ass. Time to use them.\n\n\"Do you like my outfit?\" Liliana asked in her most innocent voice, which was already pretty innocent sounding anyway.\n\n\"I do,\" Andy said honestly. \"Perfect for any family gathering, really.\"\n\nShe giggled at him.\n\n\"You're cute,\" she said in the same of tone of voice she had been using.\n\n\"Takes cute to know cute,\" Andy retorted. Liliana looked down at herself and smiled.\n\n\"A lack of clothes helps too,\" she admitted. Andy giggled and nodded his head in agreement. Liliana decided to get bolder.\n\n\"Why don't you grab my butt?\" she suggested in her cutesy voice. \"I think you'll really like it!\"\n\nAndy slowly inched his hands down to her cheeks. He rested his hands on them, palming both cheeks.\n\n\"Grab it, go on,\" Liliana urged. Andy gave a quick squeeze. Liliana smiled at him.\n\n\"Pretty great, huh?\" Liliana put out there.\n\n\"You have been blessed!\" Andy said aloud while Liliana smiled at him.\n\nThe song changed and Charlie's naked body now came into view.\n\n\"New song, new partner. My turn!\" Charlie insisted.\n\n\"Ok,\" Liliana said to the older star. She kissed Andy on the cheek. \"See you later,\" she said with a wink and slapped her own ass as she walked away.\n\nThe song was more a hip-hop Christmas song, which normally wouldn't be Andy's jam, but when a beautiful, naked woman wants to dance with you; you prioritize. She immediately started grinding on him, pushing her naked, perfect ass right up against Andy's crotch. Somehow it seemed like she had managed to find his dick in his pajamas and get it right between her cheeks.\n\n\"Get crazy, Andy!\" Charlie insisted spinning around, making her curves move all over the place as she did. She wanted to keep Andy close as they danced. Andy was enjoying the sight of the beautiful, curvy woman just being so comfortable with herself and her body. It made Andy's dick stiffen even more. Charlie was quick to notice this.\n\n\"You like what you see?\" Charlie said to Andy, accentuating her D cups and throwing her hips out toward him.\n\n\"Well I'm not blind, Charlie!\" Andy retorted, making Charlie snot her drink from laughter. She really like Andy's humor and it made her smile. She then pulled him toward her into a kiss. It wasn't deep like Cassandra had given him earlier. Much lighter and more playful.\n\n\"What? You can grab Liliana's ass but mine isn't good enough to grab?\" Charlie asked semi seriously but still playfully. Andy play rolled his eyes and grabbed her ass with both hands and gave a good squeeze. Charlie was impressed thinking that his hands were stronger than she'd originally thought.\n\n\"Much better!\" Charlie said continuing her soft make out session with him. Andy really liked Charlie's attitude, fun and free.\n\n\"Shots!\" Whitney announced over by the bar. \"Come on, everybody!\"\n\nPeople made their way over toward the bar to see what kind of shots were on the plate.\n\n\"What should we have, Andy?\" Candace spoke up to ask. Andy came behind the bar to check out what was available. He saw a bottle of Goldschlager and some whipped cream in a can. Seemed festive to Andy. He grabbed a shot glass and poured some in and topped it off with the whipped cream.\n\n\"This might work,\" Andy declared.\n\n\"Great confidence, Andrew,\" Gianna said. She grabbed the glass and knocked it back, like a sailor at a shore bar. \"Ooh!\" Gianna said after the shot looking straight at Andy. \"Bitches, that'll work! Set 'em up, Andy!\"\n\nWith that, Andy got 14 shot glasses out and poured the liquor in, followed by the whipped cream. He handed one to every girl and himself.\n\n\"Well,\" Andy said aloud, \"Merry Christmas everyone!\" Many cheers and shouts followed as everyone took their shots. Andy agreed with Gianna's assessment. He'd done a nice job.\n\n\"How the fuck are you not a professional bartender?\" Gianna asked, \"you are awesome at this!\"\n\nAndy just smiled and humbly bowed. Many of the girls giggled. Sara had taken it upon herself to make another shot. She then put the shot between her tits and called Andy over.\n\n\"I think you deserve a titty shot!\" Sara declared. Since she wasn't wearing anything on her chest other that the pasties, she really had to work to keep the shot in there. Andy dutifully bent down, grabbed the shot from her rack with his mouth and downed it. More hoots and hollers from the crowd.\n\n\"Ok, ok,\" Gianna started, \"time to stop fuckin around! Andy! Get a real titty shot!\" She had another shot in-between her boobs now. Since she had a top, it was a bit easier for Gianna to keep the glass in place.\n\nAndy stepped up in front of Gianna and craned his neck down to her legendary melons to retrieve the glass. Once he had the glass in his mouth, Gianna pushed his head down and jiggled her tits around a bit so he could have the full experience. He then lifted the shot up and took it.\n\nAlex and Natasha were watching all this. Any more shots, and he may come down with whisky dick. They needed to act now.\n\nThey immediately surrounded Andy on both sides. They each hooked one of his arms under him and started walking towards his room. The other girls saw this, and some protests rose up.\n\n\"We're gonna put him to bed,\" Natasha said to the group.\n\n\"Don't worry,\" Alex added, \"we'll be gentle,\" she added with a wink.\n\nSome of the girls were blas\u00e9 about it. Gianna didn't really care and neither did the Stevens twins as they had fucked him the night before. Sara had a pang of jealousy, but she had gotten hers earlier.\n\nAngela, Cassandra, and Charlie however were livid. Alex and Natasha had beat them to the prize. All three had gotten interrupted in their attempts with Andy, and now those two were going with them. Once, Andy left; the party pretty much died, and everyone mostly turned in.\n\nSara and Cassandra had gotten out of their \"costumes\" and were now naked in their respective beds. Cassandra was clearly not happy, and Sara sensed it.\n\n\"What's up?\" Sara inquired of her roommate.\n\n\"I'm just pissed,\" Cassandra admitted, \"pissed and horny! I kept getting interrupted every time I get time with Andy.\"\n\n\"You really like him, huh?\" Sara asked, knowing the answer.\n\n\"Yeah, I do,\" Cassandra said declaratively. \"He's a really nice guy and let's be honest; we don't get to meet those that often!\"\n\n\"Yeah, I know,\" Sara admitted, \"I really like him too.\"\n\n\"At least you got to fuck him earlier,\" Cassandra said jealously.\n\n\"True,\" Sara admitted with a slight smirk.\n\n\"How was he anyway?\" Cassandra asked. She definitely trusted Sara's appraisal of him more than the brainless twins.\n\n\"Really good!\" Sara admitted. \"I think you'd definitely like his dick.\" Sara had worked with Cassandra before and knew what she liked.\n\n\"FUCK...\" Cassandra groaned feeling even worse now that she had missed out.\n\n\"Sorry,\" Sara said as kindly as she could, without really being sorry that she got to fuck Andy earlier. \"Want me to fuck you with a dildo?\" Sara asked, \"make you feel better?\"\n\nCassandra sighed and looked over at Sara. She always found Sara hot and loved working with her. Cassandra just smiled and Sara pulled out a good-sized dildo to use on her friend. Cassandra got on all fours on her bed and prepared for reception.\n\nSara stepped up and shoved the dildo into her dripping cunt.\n\n\"Ungh\" was the only response Cassandra had as Sara started really going to town on her. She knew exactly what spots to hit in Cassandra's pussy and wasted no time getting to them. Sara even went the extra mile and put a thumb on her clit to help with the stimulation.\n\n\"Fuck yea!\" came out of Cassandra as she immediately responded to Sara's play, thrusting herself back at her. Sara kept up the pace for several minutes before Cassandra clearly climaxed.\n\nCassandra was breathing heavy as Sara offered her the chance to taste her pussy juice from the dildo. Cassandra accepted and licked it off.\n\n\"Thanks, babe,\" Cassandra expressed to her friend.\n\n\"What are friends for?\" Sara answered as she returned to her own bed. Cassandra went to sleep after the good orgasm, determined to get Andy in the bed damn soon.\n\n\"Fucking bitches!\" was the response from Angela toward Alex and Natasha as she was hoping to be included in tonight's fun with Andy.\n\n\"There's always tomorrow,\" Karlee tried to counsel her friend, knowing she was disappointed.\n\n\"I know, I just really wanted to try Andy today and just didn't get the chance,\" Angela said in her mild Australian accent that drove men and women wild; Karlee being no exception.\n\n\"Let 'em have their fun with him tonight,\" Karlee continued to ease her friend. \"Get a run at him fresh tomorrow after \"presents.\"\"\n\nAngela smiled at Karlee, knowing she was right. Andy would be well rested then and horny as hell after \"presents.\" Tomorrow would work just fine. She smiled and looked over at the younger girl, sitting proud in the bed with her DD boobs on display.\n\n\"Wanna help me out tomorrow?\" Angela asked.\n\n\"Sure!\" Karlee answered, wanting to try Andy at some point as well.\n\nAngela went over to Karlee's bed and put a plan in place tomorrow to get their chance with Andy.\n\n\"Tonight was really fun!\" Liliana declared to Dillion, both snug in their rooms.\n\n\"Yeah, those shots were really good,\" Dillion added.\n\n\"I bet Andy is gonna have some fun tonight with the boob patrol,\" Liliana said semi jealously. She knew that her B cups were the smallest in the house. Dillion was smaller too but had perfect tits that were actually D's.\n\n\"Yeah, they seem really into him,\" Dillion said.\n\n\"True,\" Liliana admitted. \"Gonna have to get him some \"fresh\" pussy tomorrow!\"\n\nDillion laughed at her friend as they too went to sleep.\n\n\"They fuckin snaked me!\" Charlie fumed to Gianna who just wanted sleep.\n\n\"So what?\" Gianna said, slightly frustrated. \"Fuckin guy isn't going anywhere and we're here another seven fuckin days!\" she declared trying to reason with Charlie. \"Really think he's gonna be able to resist that ass for that long?\" she said with a wink.\n\nCharlie smiled at Gianna, knowing it was true. Andy definitely seemed interested in her. Let him get his drunk fuck on. She had time to wait.\n\nAlex and Natasha took Andy straight to his room and threw him on the bed. He bounced back and sat up, intending to go to the bathroom. The girls had other plans as Natasha began taking off Alex's \"clothes\" and removing the Rudolph pasties covering her nipples. Alex then did the same for Natasha. Soon both girls were completely nude, dancing and swaying in front of him.\n\nAndy loved the show, and his cock was pointing straight out of his pajamas. They both smiled at Andy, knowing he was liking what he was seeing. Natasha grabbed a handful of one of Alex's F cup tits. She took the nipple into her mouth and began sucking like a newborn. Alex threw her head back in genuine pleasure at Natalie's attention. Alex decided to play at Natasha's pussy and started showing the folds of it. She sunk a finger into her and pulled it out, showing how wet she was with all of this. Alex then let Natasha taste herself, which she did sucking on Alex's finger just as if it had been a small cock. They then both looked over at Andy.\n\n\"Someone's a bit overdressed, don't you think?\" Natasha asked Alex. Alex smiled in agreement and they both made their way over to Andy. They prompted him to stand up so they could get him out of the onesie. Alex found the zipper and started pulling it down with her teeth.\n\nWhile she was doing that, Natasha pulled Andy into a deep kiss, starting to stroke at the bare skin that was being exposed by Alex. Alex got the zipper all the way down and gently removed Andy from it, freeing his aching cock. Alex figured if Natasha was going to focus on Andy's mouth, her mouth could occupy Andy's nether regions.\n\nAlex started with a series of slow kisses on his cock, just trying to let him know that she was there and what she intended to do. Alex was impressed to see it out, agreeing with the other descriptions that she'd received on it. She took it into her mouth and began her art, lightly using her teeth to graze his shaft.\n\nNatasha meanwhile was keeping Andy's attention on her as much as possible. After a hot make out, she offered up her own tits to Andy to play with. The DD's were ample, and her nipples were already hard. Andy took one of the tits into his mouth and started flicking his tongue against the nipple.\n\n\"Aaahhh\" was Natasha's answer to the attention, loving the feeling. She appreciated anyone who knew how to handle big tits and Andy was no slouch, moving back and forth to each breast to give her proper attention.\n\nAlex saw this and wanted to try that herself. She tapped Natasha on the shoulder as a subtle way of asking to switch. Initially, Natasha had no intention of making the switch, until she saw Andy's glistening cock and got interest. Alex stood up and offered her tits to Andy while Natasha took over for Alex.\n\nAlex began moaning at Andy's tit attack much as Natasha had. Natasha was taking her time with Andy's cock, wanting to make sure this lasted a while for him. She sucked on each of his testicles as she slowly stoked his slick shaft, ensuring his hardness never waned.\n\nAlex then pulled Andy into a deep kiss, and she found Andy to be a really good kisser. Her pussy was getting wet just from that. After a minute or so she pulled herself free and looked at Andy with pure desire. Natasha saw that Alex had stopped and she stood up with her.\n\n\"Which pussy do you want first?\" Natasha asked as if it was the most obvious question in the world. Andy was like a deer in the headlights. He knew he needed to say something and not offend the other girl.\n\n\"You two decide,\" Andy said, slightly copping out. \"I'll eat out the other.\"\n\nThey both thought to themselves that this was a very diplomatic solution and they decided that Alex would ride first. They guided Andy flat on his back on the bed. Natasha took up position hovering above Andy's mouth while Alex prepared to lower down onto his cock. Both pussies hit their targets simultaneously. Andy's lips and tongue reached Natasha's pussy at the same time that Andy's cock had begun splitting Alex's lips.\n\nAndy immediately went to work on Natasha, playing with the many folds of her pussy and getting her soaking wet. Alex got herself fully down on his dick and loved the feeling. It was such a good cock, not too big, but also not too skinny either. She began bouncing and moaning.\n\n\"Yeah, baby!\" Natasha urged on. \"Lick my pussy!\" Andy was good at following instructions and did precisely that.\n\nAlex was in her own world as she slowly worked up to a rhythm riding Andy's cock.\n\n\"Oh, fuck!\" Alex moaned. \"Fuck, Andy, you feel so good!\"\n\nThis actually urged Andy on to go even harder at Natasha's pussy, not wanting her to feel left out. He got a hold of her clit and went ballistic on it. It was almost too much for Natasha as she started moaning hard and grinding her pussy on Andy's face.\n\nA minute or two of this attention was all Natasha needed to pop.\n\n\"Yes! Yes! ANDY!!!\" as Natasha rode the waves of her orgasm. Impressively, Andy didn't let up for a second and continued his work.\n\nAlex wasn't far behind either as Andy's cock seemed to find all her spots really well. Finally, she couldn't hold back anymore.\n\n\"FUCK!!\" was all that Alex needed to show that Andy's cock had just made her cum. Andy found her to be really tight while she came, almost having to grit his teeth to maintain control.\n\nThe girls then decided to switch places. Natasha sat down on Andy's cock to ride him reverse cowgirl and Alex stationed her still slightly quivering pussy in front of Andy's face. Natasha found Andy's cock wonderful as well, while Andy was surprised how tight Natasha was. Definitely the tightest in the house so far.\n\nAndy was also working on Alex's pussy, making sure to give it the same vigorous attention that Natasha had received. Alex started squealing immediately. She never even did that when women went down on her. She bucked hard against his face, loving every lick and nibble.\n\nNatasha was in heaven also, loving how full she felt with his dick. Her eyes flew open as she just took in all the pleasure she was receiving. It wasn't long before she popped again, diddling her own clit to send her over.\n\n\"Fuck me, YES!\" erupted from Natasha as Alex continued to be entranced by Andy's oral skill. Once Natasha came down from her orgasm, she knew exactly what she wanted next. She started giving Andy a really sloppy blowjob, covering his cock with saliva. Andy noticed the change and used this opportunity to clamp down on Alex's clit. This unlocked her box and she started flooding.\n\n\"Oh my GOD! ANDY!!\" was all she could get out. Andy really couldn't tell if the reactions were genuine or if they were drawing on their acting skills. His attention was then on Natasha, still working on his cock with her mouth as Alex slid off for a rest. Natasha had no such ideas. When Alex saw how wet she was getting Andy's dick, she had a pretty good idea what was coming.\n\n\"Fuck me, Andy,\" Natasha demanded. \"Fuck me in the ass!\"\n\nNatasha loved anal and made no secret of it. She just had to feel Andy's rod up there. Alex smiled and began the encouragement.\n\n\"Yeah, Andy!\" Alex prodded. \"Fuck her slutty ass!\"\n\nAndy got up from the bed while Natasha moved onto all fours. Alex dutifully spread Natasha's cheeks apart, adding a bit of her own spit to her hole for lubrication. Just like last night with the Stevens sisters, he was determined to go slow and gently eased the head of his cock into Natasha's ass.\n\nThe reaction was immediate.\n\n\"Oh my God!\" Natasha spat out at the new intrusion. Andy continued easing himself in with Alex watching her friend get buttfucked by this glorious cock. Within a minute, he was fully sunk inside her bowels.\n\nAndy started thrusting very slowly, allowing Natasha to get used to the new element in her ass. Andy couldn't believe how tight her ass was, seeing countless anal scenes with much larger guys then him. Nevertheless, he wasn't complaining as Natasha started thrusting her ass toward him, practically begging him to go faster.\n\n\"Fuck me, Andy!\" Natasha all but begged. \"Fuck my ass! It feels so good, baby!\"\n\nAndy began increasing his speed at that, in and out at a good clip. Alex was starting to play with herself at the hot sight, loving the sight of Andy dominating Natasha's ass.\n\n\"I love your cock! Oh my God, I love your cock, Andy! Keep going!\"\n\nHe started going even faster, eliciting a moan of pure pleasure with every thrust. Natasha now had one of Alex's nipples in her mouth, playfully biting it as Andy kept fucking her up the butt. This and her own attention sent Alex over again, thrashing on the bed.\n\nThis helped spark Natasha's orgasm as she clearly went over the top.\n\n\"Yes! Fuck YESSSS!\" as Andy could feel the pulsing from her pussy in her ass. This started his chain reaction going.\n\n\"I'm gonna cum!\" he said loud enough to get both girls attention.\n\nNatasha got off of my cock and Alex quickly joined her on the floor. Their mouths were wide open, and their desire was quite clear. This site alone would have been enough for any straight man and Andy was no exception to this. He aimed himself at their faces and released. There were more ropes then he was expecting, landing on both their cheeks and some on Natasha's mouth. They clearly loved the feeling of Andy's cum on them.",
        "Then Natasha really decided to push the envelope and took Andy's cock into her mouth. She'd done ass-to-mouth before, and it never really bothered her. And she thought Andy would get a kick out of it, which he did as his cock didn't deflate in her mouth. Alex then took a few sucks on it as well and smiled up at Andy with his cum on her.\n\n\"So, what did you think of your early Christmas gift?\" Alex asked.\n\nAndy just laughed, not really having any response to her. He helped them both up and they all went to the bathroom to clean up.\n\nNatasha was impressed that Andy even went so far as to wipe her ass, trying to clean up any mess that was there. Once Alex cleaned herself up, she cleaned up Andy as well; cleaning off his cock and wiping some of the sweat that he had picked up.\n\nOriginally, Alex and Natasha had intended to return to their own room, but they decided to sleep in Andy's bed tonight. Just like the night before the girls flanked Andy in the bed.\n\n\"That really was amazing,\" Andy said to both girls in appreciation. They both giggled at him.\n\n\"You were pretty amazing yourself!\" Natasha asserted.\n\n\"No shit,\" Alex concurred, \"you may have a future in this business!\"\n\nAndy smiled at the complement, really only half believing it. Andy had one girl around each arm, and everyone was very content with that arrangement.\n\n\"So, are you having a good vacation?\" Natasha asked. Andy took a beat before responding.\n\n\"I just got fucked six ways to Sunday by two beautiful, awesome women. If this ain't a good vacation, I may be asking too much out of life.\"\n\nBoth girls smiled and \"awww'd\" at his complement of them. Alex and Natasha both had the same thought even though they didn't share it out loud.\n\n\"I could stay like this forever...\""
    ],
    "authorname": "rumpleminty",
    "tags": [
        "pornstar",
        "threesome",
        "shower",
        "anal",
        "christmas",
        "group"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/the-prize-day-02"
}