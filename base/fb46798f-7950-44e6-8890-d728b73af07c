{
    "title": "Through The Years Reposting",
    "pages": [
        "I am reposting this story as I've found that an important piece of it was not included in the original posting.\n\nThis story sort of falls into the \"What If\" genre. I'm at a loss as to where or what genre I should list the story. It could fit in Romance, Non erotic, or Science Fiction. There is a romance involved and some Sci Fi but the crux of the story isn't about either one; I chose Non erotic. According to the description of that category, this is a fictional story without a focus on sex. I hope you'll look past the category.\n\nAs usual constructive comments, emails, and critiques are most welcome and appreciated.\n\nThank you for reading this tale and I hope you enjoy the story as much as I've enjoyed writing it.\n\n********************\n\n\"This town ain't big enough for the both of us, you varmint,\" one man yelled. \"Ride out or go for your gun.\"\n\n\"I'm tired of your loud mouth,\" the second man's voice replied. \"Reach you sidewinder.\"\n\nAt the electronic beep, both men drew and fired their pistols. The onlookers couldn't tell who was fastest but they could plainly see who was the most accurate. Tyler Gibson's shot hit dead center in the target down range. His opponent's shot missed the mark, hitting the ground several feet in front of the target. A chronograph measured the speed of the draw by determining which bullet passed through its field first but the most important thing was the accuracy.\n\nThe witnesses to the contest cheered and Tyler and his friend, Charley Jones, shook hands.\n\nThey were the final contestants in the three gun section of the cowboy action shooting contest. Each man wore clothes that told the world they were cowboys. Tyler and Charley competed with rifle, shotgun, and single action pistol through the four rounds of eliminations to face off in the championship. Tyler had won the rifle portion, Charley had won the shotgun portion so they had been tied going into the pistol fast draw and shoot portion of the competition.\n\n\"Thought I'd get you for sure this time,\" Charley said.\n\n\"You don't practice enough to beat me,\" Tyler answered.\n\nCharley shrugged, \"Maybe so, I've got a wife and family to take care of but you need to get a life Tyler. All you do is write those stories of yours; if you're not writing, you're riding horses, and if you're not doing either of those you're playing cowboy at one of these action shooting contests, and pretending to be a gun slinger.\"\n\n\"Marshal; I'm always a marshal, trying to make the old west safe for decent folk,\" Tyler said and then laughed. \"Besides these reenactments of the shooting styles and weapons of the middle to late 19<sup>th</sup> century and the horseback riding help with the research for my work.\"\n\n\"Work? Work? What work? You don't get any money from your stories. Hell you give them away by just posting them on a few sites on line and free sites at that. It's like you were still a kid. No wonder you don't have a social life,\" Charley continued his criticism. \"Who do you think you are, Wyatt Earp?\" Charley laughed at his own wit. \"Why don't you get a job like the rest of the adults? At least you'd meet people who live in the 21<sup>st</sup> century.\"\n\n\"You know why I don't work. I invested in a college friend's idea and we got lucky. I was a 30 percent share holder in the company and when he sold out my share set me up for life.\"\n\nCharley playfully punched Tyler on the arm. \"I can't understand how you can spend so much time on the computer writing your western stories. Hell, I've seen you so absorbed in your writing that you wouldn't know if a bomb went off right next to you. You could at least try to publish them and get paid.\"\n\nTyler did sometimes get so involved in the plot or the action scenes or developing his characters that he sort of zoned out. He'd be writing and glance at a clock and realize how late it was. Okay, I'll just finish this scene he'd say to himself and keep writing. When he next looked at the clock, three sometimes four hours, had gone by. I can't help it, Tyler thought. When the story is flowing it's hard to stop just because I'm hungry or because I need to sleep.\n\nCharley was correct about Tyler's stories too. Tyler wrote stories, mostly westerns, and after editing and proof reading them he posted them on three different web sites. He didn't receive anything but the enjoyment of the writing for his efforts; although Tyler did like reading the comments readers made about his work. Family members and friends who read his work all urged him to at least try to get them published in magazines and many suggested he publish a book.\n\nTyler would smile and thank them for the compliments and for their suggestions but as he told several of his fans, \"If I were to write for pay, it becomes a job instead of a hobby. I'd have schedules to keep and have to write at someone else's direction.\"\n\n\"Tell you what Charley,\" Tyler responded to his friend. \"I'll meet you at the pizza joint Saturday evening at 7. Bring your wife, Missy, and I'll pop for the pizza and beer. Now please get off my case until Saturday.\"\n\nBefore Tyler could leave, several young women asked for his autograph. At 30 years old and 6' his slender strong looking body made him a stereotype of the handsome young cowboy. Tyler's blue eyes and a full head of dark, almost black, hair covered by a white Stetson completed the picture.\n\nCharley Jones didn't look like the image most people had when they thought of an old west cowboy. He was only 5'6; instead of slim he was round at 200 pounds, and he had more scalp than he did hair. But Charley was Tyler's best friend. If need be he would fight for and with Tyler against all comers.\n\nTyler went home to his large house in New Braunfels, Texas. The building had been in his family for more than a hundred years. Originally it had been a two room cabin but each subsequent owner had enlarged the building by making additions. Tyler's contribution had been an unattached garage and a large deck on the back of the house. His home was now a rambling 4000 square foot ranch style building. Much too large for just me, Tyler thought. But, my ancestors would haunt me forever if I sold it. Besides it's paid for and my only costs are my normal living expenses.\n\nAll during the pizza and beer Saturday evening, Tyler had a story line bouncing around in his head. More than once Charley or Missy would say something like \"Earth to Tyler, come in please\". Each time he would give them an embarrassed smile and apologize. After desert and more conversation Tyler paid the check and everyone left for home.\n\nOnce back in his home office, in front of his computer, he started to put his ideas into a Word document. The story was going to be about the adventures and life of a young Texas Ranger. First he wrote a short outline touching on all the important parts he'd thought of. Then he began to write the story, fleshing out the characters and filling in between the points in the outline. Tyler glanced at the time shown on the bottom of the monitor and was surprised to see he'd been typing for almost three hours.\n\nI'll just finish this last scene, he thought. It'll be a perfect spot for a story break and to start the next chapter. Around 3 AM, Tyler fell asleep in his chair in front of the computer. Shortly, his computer also went into its sleep mode; man and computer were dead to the world.\n\nAt 4:30 AM a sort of shimmering light wave flowed through the office. Tyler grunted as the light passed over him; he seemed to fade out of and back into focus but he didn't really wake up. Eventually the early morning sun shining through the window and into his eyes did wake him.\n\nTyler sat up straight in his chair and stretched. Guess I fell asleep, he said to himself. He looked at his monitor screen to see the time. \"Where the hell is my computer?\" Tyler said out loud.\n\nAll at once the room he was in sort of jumped out at him. In place of the monitor there was a journal with a pencil lying next to it. In place of his hand carved oak desk there was a sturdy table. He was sitting on a straight back wooden chair instead of the ergonomic spring loaded office chair that he normally used.\n\nThe room itself was smaller than his office and instead of the big picture window facing his desk there was a small normal size one with wavy glass panes. Tyler stood and noticed that the floor was made of wide wooden planks instead of the bamboo flooring of his office. The planks were obviously hand hewed and there were a few spaces between some of them where they didn't exactly meet.\n\nTyler became dizzy and grabbed the edge of the table to steady himself. Where am I, what is this place? He questioned in his mind. Walking slowly to the window he looked out on a view that was entirely different than the one he was familiar with.\n\nHis home was on a carefully landscaped three acres, sitting on a small rise with natural country side surrounding it. Tyler went to the cabin's door, threw it opened, and stepped outside. As far as he could see, there were rolling hills that were dotted with junipers trees, cedars and scrub oaks. At the foot of the rise below the cabin two separate springs flowed into a pool at the base of a rock butte.\n\nTyler's mind was spinning. If I didn't know better I'd say this cabin is how my house began, he thought. It looks like some of those old pictures I have. He walked around the cabin and saw a small barn with a corral attached to it. In the corral was a big black horse that whinnied at him. There were two other buildings nearby.\n\n\"Where the hell am I?\" Tyler shouted at the surrounding hills.\n\n********************\n\nTyler stood staring at the country side for several minutes. Off in the distance he saw a road that ran through the upper end of the valley in front of the cabin that disappeared as it wound around a high rock bluff. \"If this is my place that's The River Road and the Guadalupe River is just on the other side of that hill,\" he said. \"And New Braunfels is that direction,\" he said pointing just to the left of the rock bluff. \"But if this is my house, it's not in the present time; this is the way the place looked over a hundred years ago.\n\nTurning back to the cabin he decided he'd better look around inside to see if he could get a clue as to what was going on. The room that he'd woken up in was a combination living and dining room with a kitchen against the far wall; there was one other room off to the side. The kitchen had a large table made out of split oak logs and a well used old fashion wood fired cook stove; there was a pot of warm coffee sitting over one of the covers.\n\nOver the front door, supported by wooden pegs driven into the wall was a rifle. Tyler took it down and saw it was a Winchester 73 Carbine, chambered in .44-40.\n\n\"Well that makes the year at least 1873,\" Tyler said and then smiled for the first time since he woke up in this strange place. \"Guess I've picked up the habit of talking to myself. Anyway, I have one just like it back at my place.\" He worked the lever action just enough to see that the rifle was loaded. On the stock, near the cheek rest, was a long gouge in the wood.\n\n\"This is my rifle,\" he said in surprise. \"Great Grandpa Torrey fell down one winter when he was hunting turkeys. The rifle hit a rock and marked the stock. Grandma told that story several times and each time he would laugh at how mad his Grandpa Torrey was that he put that blemish on his rifle. It's been in the family for a long time. I got it from my Dad, who got it from his dad, all the way back to Grandpa Torrey.\"\n\nLaughing as he put the Winchester back on its pegs he said, \"Several times I thought about having the stock refinished but then I'd think about Dad's story and decided to leave the Winchester the way I inherited it. It made me feel closer to my family.\"\n\nTyler walked into the second room. Against the wall on the left was a large bed. There was a corn shuck mattress supported by ropes running between the side rails. The wall directly opposite the door had a window that looked out across a valley on the north side of the rise. Beneath the window was a heavy five drawer dresser. Sitting on the dresser was a framed, old style photograph.\n\n\"That's Grandpa and Grandma Torrey. I've got the same picture in my den. Hell, maybe this is the same picture.\" Tyler thought for a few seconds. \"They were, I mean are, my great, great, great grandparents on my mother's side. Grandpa is the one that settled this place.\" Tyler took the picture over to the window so he could see it better. \"Dad always said Grandpa and I could have been brothers. Sometimes Mom would bring out the old family albums and show me pictures of the family all the way back to Grandpa Torrey and point out the resemblance.\"\n\nTyler set the picture back and pulled open the dresser draws. In the top dresser draw he found a gun belt, a holster and a Colt Frontier Single Action pistol chambered in the same .44-40 as the Winchester. The wear marks on the holster and gun showed they were working tools and not just for show.\n\nIn the other drawers he found a few pairs of whip cord work pants, two pair of denim overalls, and three shirts. The clothes looked to be his size or close to it. Under the work pants he found a leather drawstring bag that held 30 Double Eagle gold coins. There was a wardrobe in the corner that held a Sunday go to meeting coat, two shirts with button on collars, and a fancy pair of almost new boots. There was also an almost brand new Stetson; dark brown in color and almost identical to the one Tyler wore in his contests. He tried the hat on and found it was a good fit.\n\n\"Think I'll ride over past that bluff and see if I'm where I think I am.\" Tyler thought about changing clothes but he was still wearing his action shooting costume and sporting the borrowed Stetson he would fit right in with the west in the 1870's. He did however take a couple of the Double Eagles with him. \"If I'm where I think I am money from the 21<sup>st</sup> century probably won't be accepted here. That $600 in Double Eagles is more than a year's wages if I am in the 1870's, so I should be okay for a while.\"\n\nHe went to the corral and saddled the big black horse. On the underside of one of the stirrups, the name Midnight had been burned into the leather. \"Guess your name is Midnight,\" Tyler said to the big horse as he saddled him. The horse nodded his head up and down as if to agree.\n\nThe saddle fit him well and after walking Midnight around the corral to get it settled, Tyler put the animal into a trot and in less than 10 minutes he rounded the bluff. From the crest of the rise he could see that the road was well traveled and led southeast just a bubble off due south.\n\n\"Might as well see if New Braunfels is over there. It used to be about ten miles to town, should take about two hours riding easy to get there on horseback.\" He put Midnight onto the road and let the horse have its head. The big black shook his head and picked up the pace; soon they were running at a ground eating lope. \"In my truck it's a 15 minuet drive.\"\n\nAs Tyler rode he thought about the things he'd seen and discovered. \"If I really am back in the 1870's, I've got no idea how I got here or why. If I'm not back in the 1870's, I still have no idea where I am. First thing to do is to make sure it's New Braunfels I'm riding to. Next I need to nail down the date.\" His stomach growled and he added, \"Maybe I'd better get something to eat too.\"\n\nTyler topped a rise and below him was a town. Most of the buildings were one story and lined a wide street. At the end of what he thought of as Main Street, there was the only two story building in town. He slowed his horse to a walk as he came to the outskirts. There was a fairly large sign beside the road. It read:\n\nNew Braunfels Texas\n\nEstablished 1854\n\nMind Your Manners\n\nDooley Thomas: Town Marshal\n\nHe let out a whoop which almost spooked the Midnight. One mystery had been solved; Tyler knew where he was. Now it was a matter of figuring out exactly \"when\" he was.\n\nTyler had read the history of New Braunfels growing up. Marshal Dooley Thomas was a legend in that part of Texas. Thomas was a no nonsense type of lawman and he followed his own creed. The one overriding rule he had was \"Do no harm\".\n\nIf you robbed a store or stole horses and cattle you were doing someone harm and you would answer to Dooley Thomas for it. If you got drunk and shot up the saloon or got into a fight, you were doing harm and you would answer to Dooley Thomas. Thomas said many times that his rule covered all the laws that were written down.\n\nMust be Sunday morning, Tyler thought as he rode down Main Street. Looks like most of the stores are closed. The only places open are \"Rosita's Caf\u00e9\" and the \"Rock Bottom Saloon\".\n\nHe saw several people standing in front of the church at the end of Main Street. There were men gathered in small groups talking. The women were busy setting up what looked to be a pot luck type midday meal. Covered plates, pots and baskets were being set out on tables in the shade of the nearby large oak trees\n\nTyler watched a 'herd' of children running and playing around the buggies, buckboards, and farm wagons. Every now and then one of the women would call out to the children and for a few seconds they would settle down. As soon as the woman turned her back the children continued playing. In my time the vehicles would be cars and trucks, he thought.\n\n\"Wonder if the saloon has anything to do with the 'Rock Bottom Brewery' back home,\" he asked aloud. \"Food first and then maybe a beer. A saloon should be a good place to gather some information.\"\n\nThey were a few people in Rosita's caf\u00e9. A cowhand or two, two old men, and a man sitting at a table against the back wall. He had a pistol in a tied down holster on his right hip and what looked like a double barrel 10 gauge coach gun on the table next to his food. The man also wore a star pinned to his vest.\n\n\"That's got to be Dooley Thomas,\" Tyler muttered.\n\nMarshal Thomas watched as Tyler sat at a table next to one of the front windows. The Marshal's eyes showed an interest in the new arrival.\n\nTyler didn't want to stare so he watched the Marshal out of the corner of his eye. He saw Thomas talking to the two older men sitting near the Marshal.\n\nA middle aged woman brought coffee to Tyler. \"Coffee?\" At Tyler's nod she poured him a cup. \"What would you like stranger? Got flapjacks and a ham steak on special this mornin.\"\n\n\"That sounds good ma'am.\" When the waitress walked away Marshal Thomas stood, said goodbye to the two old men, picked up the scatter gun and walked over to Tyler's table.\n\n\"Howdy. I'm Marshal Dooley Thomas. Mind if I sit down?\"\n\nTyler shook his head and motioned to a chair. He'd watched Thomas walk toward him and was surprised that he wasn't a bigger man. According to the stories and the legend, Thomas was a ferocious fighter and had never been bested.\n\nThomas was 5'9 with a stocky, strong looking body. If he'd been a woman his walk would have been called graceful. As it was he looked like a big cat, coiled and ready to attack. Dooley's face and hands were tanned and weathered. It's his eyes that tell the story, Tyler thought as the Marshal sat down. Those eyes belong to a man that has faced every threat that came his way and lived to tell about it. Wouldn't like to go up against him, even in one of our action shooting contests, Tyler finished his thought.\n\n\"What's your name stranger?\"\n\n\"Oh, sorry Marshal. I'm Tyler Gibson.\"\n\n\"You gonna be in town long or are you just passing through?\" Marshal Thomas smiled as he asked the questions. \"Don't mean to be prying into your business Mr. Gibson but I like to know who's coming and going my town.\"\n\n\"Not a problem Marshal.\"\n\n\"Excuse me,\" Thomas said. \"I don't understand.\"",
        "\"Oh, I mean I understand,\" Tyler explained. I'm going to have to watch my words and phrases, Tyler thought. The language is still English but the way we talk has changed in the last 100 years.\n\nDooley smiled. \"You talk different Mr. Gibson. Where you from?\"\n\n\"I just arrived from back East. Tennessee to be exact.\"\n\n\"You plan on staying a while?\"\n\n\"Thought I would. I've never been here before and I'd like to look around the country.\" Technically it's true, Tyler thought. I didn't live back in this time so I've never been here before.\n\n\"Got somewheres to stay? The Grand Hotel is a decent place. It's not really grand but it's clean. Course it'll get a mite costly if you're gonna be here long. Mrs. Draper runs a boarding house; it's down at the end of the street. Not fancy but the rooms are clean and she serves a real good supper.\"\n\n\"I'm staying at a ranch a little north west of here, about ten miles outside of town.\"\n\n\"That'd be the Torrey place? The T2S?\"\n\n\"Yes sir.\" Tyler knew that Grandpa Torrey's place was called Torrey Two Spring ranch, named for the two springs that flowed from a rock bluff and that the brand was T2S. In fact back in his own time Tyler still paid the small yearly fee to have the ranch name and brand registered with the state of Texas.\n\n\"Last I heard Jackson Torrey went to Dallas for a spell; left last week he did. After his wife, Molly, died of the fever last year, he said he was gonna burn the place to the ground and let the devil have it. How'd you get him to let you stay out there?\"\n\nNow Tyler was able to pin point this time frame better. He knew from the family stories that in the summer of 1878, Grandpa Torrey had gone to get his daughter, Stella, to help him run the place after Grandma Molly had passed away. Stella was a headstrong young woman and had moved to Dallas; more to spite her father than for any other reason.\n\nStella Torrey came back to the ranch and met a young cowboy name Joshua Gibson in town one day. They had a whirlwind romance and got married soon afterward. When Grandpa Torrey died he left the ranch to his daughter and her husband. That's how the Gibson's became involved with the Torrey ranch.\n\nDooley was waiting for an answer while Tyler thought about his family's history.\n\n\"Jack Torrey and I have some history Marshal. Have for a lot of years.\" About 140 years to be exact, he said to himself.\n\nThomas looked hard at the young man sitting across from him. He didn't know the man or anything about him but for some reason he trusted him. Dooley stood to leave.\n\n\"Well, welcome to New Braunfels Mr. Gibson. If you need anything, my office is right across from the saloon.\" He laughed and said, \"I don't have so far to go when trouble starts. And anytime you mix whiskey and cowboys there's sure to be trouble. Come see me sometime and we'll talk some more.\"\n\nMarshal Thomas stood, nodded, and left the caf\u00e9. As he stepped into the street he gripped the shotgun in his right hand, holding it like a pistol; ready for any trouble that might come his way.\n\n\"Not a man I'd like to tangle with,\" Tyler said in a low voice. \"I think the legend is right, he's a hard man.\"\n\nAfter finishing his breakfast, Tyler paid his bill with a Double Eagle. The woman complained about him not having a smaller denomination coin. Tyler felt a little guilty as he left but now he had some smaller coins and folding money to use.\n\nTyler walked down the wooden boardwalk to the saloon. It had the classic swinging doors seen on TV and in movies from back in his time. He did notice that there were tall wide doors against the inside walls that could be closed if the weather was bad.\n\nThe Rock Bottom saloon was like walking onto a movie set. There was a long wooden, hand carved bar against the wall opposite the doors. Behind the bar there were whiskey bottles lining the shelf in front of a very large mirror. The bartender wore his hair slicked back; he had large bushy sideburns and a handlebar moustache. His shirt had a button on collar with a string tie and garters holding his sleeves up out of his way.\n\n\"What'll it be stranger?\" The bartender asked. He was wiping the already clean bar top like bartenders throughout history had done.\n\n\"I'd like a beer and a shot.\"\n\n\"I'm Ernie Simpson; part owner of The Rock Bottom.\" Ernie drew a glass of beer, used a wide wooden squeegee to remove the excess foam and sat the beer in front of Tyler. Using one of the bottles sitting in front of the mirror, Simpson filled a large heavy glass with whiskey and slid it three feet over to Tyler.\n\nSimpson looked to be between 40 and 50 years old. He was several pounds overweight with a florid complexion and a big red nose. He's no stranger to whiskey, Tyler thought.\n\n\"First beer is on the house Mister; the whiskey's six bits.\"\n\n\"Thank you Mr. Simpson,\" Tyler said picking up the glass of whiskey. \"My name's Tyler Gibson.\"\n\nThis isn't a shot glass, Tyler thought as he picked up the whiskey. There's more like three shots in there. He drank about half of the whiskey and quickly followed it with a long drink of beer. Tyler almost spit the beer out; he wasn't used to his beer being warm. This whiskey isn't exactly Gentleman Jack either. He took another drink from his beer.\n\n\"You here on business Mr. Gibson?\"\n\n\"More like pleasure Mr. Simpson. Thought I'd look around the country. I'm staying out at the Torrey place.\"\n\n\"Ernie's good enough Mr. Gibson. You call me Mister and I feel like a dude from the big city.\"\n\n\"You can call me Tyler. Mr. Gibson is my father.\" He picked up the mug of beer and looked around. The saloon was a large rectangular shaped room. Tyler could see a \"money wheel\" at one end. People made bets as to which number would stop under a flexible finger type peg on one side of the wheel. The operator would spin the wheel and if it stopped on your number you won; winners were few and far between. There was also a Faro game and a craps table. Faro was a dying game in his time, but Tyler recognized the craps table. From the looks of it the table hadn't changed since the early days.\n\nThe middle and other end of the long room had several tables with chairs sitting at them. The tables were round and the chairs were wooden 'Captain' type chairs. Tyler had to smile. Just like in the movies, he thought. He turned back facing the bar and took another sip of the whiskey.\n\n\"Not very busy today,\" he remarked.\n\n\"No sir. Never is on Sunday; at least not until sundown. Most of my customers are over to the big midday meal at the church.\" Ernie laughed and added, \"By sundown the men have done all the chores their wife's wanted done and they can slip away for a spell.\"\n\n\"Yep, you have to take care of the 'honey do' list,\" Tyler replied.\n\n\"The what list?\" Ernie asked.\n\nTyler realized he'd used a term from his time that wasn't known in the 1870's. \"I mean your wife says 'Honey do this or Honey do that'. It's a term used back in Tennessee by some people.\"\n\n\"Oh, I understand,\" Ernie said and laughed. \"Honey do list eh. Wait till the boys hear about that.\"\n\n\"Let me buy you a whiskey Ernie,\" Tyler offered, trying to cover his slip in language.\n\n\"Give me that,\" Ernie said and took the whiskey glass out of Tyler's hand. \"If you're gonna be a gentleman about it we should drink the good stuff.\"\n\nHe opened a cabinet door under the mirror and took out a bottle. \"This is my private stock,\" Ernie said with a grin. He poured two glasses of the amber fluid and slid one to Tyler. \"To your health Tyler,\" he toasted.\n\nTyler took s tentative sip, smiled and took a bigger drink. \"Now that's more like it Ernie.\"\n\n\"Yeah, the other's fine for the regular customers, but a gentleman like yourself deserves the good stuff,\" Ernie said as he laughed. \"Especially since you're buying a drink for me.\"\n\nTyler finished his whiskey and beer. \"I'll see you again Ernie,\" he said and started to leave the saloon.\n\n\"It tends to get a mite chilly at night this time of the year,\" Ernie said and held out the half full bottle of his private stock to Tyler. \"Best take this with you to fight off the cold.\"\n\nTyler nodded his thanks and left the saloon. He talked to himself as he walked toward where he had tied up Midnight. \"Be too easy to turn into a drunk. Better get back to the cabin and try to figure this out.\"\n\nDooley Thomas waved to him as Tyler rode out of town. On the ride \"home\", Tyler looked around finding the changed landmarks. Back at the cabin he unsaddled Midnight, and rubbed him down. \"It's got to be late June from the hot, humid weather. Look how lathered up you are from that easy ride,\" he said to the horse. Tyler fed Midnight and made sure he had extra water.\n\nHe returned to the cabin and pulled a rocking chair outside on the small covered porch. \"As I see it, I'm at exactly the same place as I was Saturday night. The room I woke up in corresponds to my office back then, maybe I mean up there; anyway in the future. The cabin is situated on the same rise that my house stands on.\"\n\nThere was a pump at the kitchen sink but Tyler got up and walked to the well at the side of the cabin. He dropped a bucket down into the well and used the windlass to pull it back up. There was a large dipper hanging on the cover over the well. He took a dipper full and walked back to the rocking chair.\n\n\"There's just something special about fresh drawn water. Don't need to start hitting Ernie's whiskey; I'll drink myself into a stupor.\" He drank from the dipper and leaned back in the chair. \"I know where I am, I know when I am but what I don't know is how I got here. Last thing I remember was working on my story about 3 AM. I felt queasy sometime while I was sleeping and the next thing I know, I'm back in 1878. \"\n\n\"The only thing I can think of was that somehow I got caught in a riff of the Space Time Continuum.\" Tyler thought about the Science Fiction he'd read. \"Or maybe I was abducted by aliens and transported back in time.\" He chuckled, then laughed and soon was laughing almost hysterically. He got control of himself after a minute. \"Who am I kidding? I've got no idea why or how I'm here or how long I'm going to be here; maybe for the rest of my life.\" He finished the water and stood up. \"I can't do anything about getting back so all I can do is make the best of it.\"\n\nTyler walked down to the spring branch flowing at the bottom of the rise. \"I bet the well taps into this spring. The water I drew was cold and had almost a sweet flavor.\" He snapped his fingers. \"I remember now, this is Sweet Water Spring. It's the reason Grandpa decided to settle in this spot.\"\n\nClimbing back to top of the rise he walked around to the back of the cabin. One of the two buildings he'd seen earlier were about 50 feet behind the cabin. It was directly opposite the door coming out of the kitchen. Tyler smiled as he recognized the outhouse.\n\n\"I think they called them privies,\" he said.\n\nThe other building was opposite the barn about 100 feet from the cabin. As he got closer, Tyler realized what the building was. The smell of smoke made by seasoned wood was heavy on the air as he neared the little building. Opening the door, the smell seemed to roll over him in a wave.\n\n\"It's a smoke house. I've read about them but I've never really seen one.\"\n\nThe low afternoon sun cast a light into the shed and Tyler could see something hanging from a cross beam. A large form was wrapped in what looked like burlap sacking; beneath the wrapping was a large slab of bacon. Tyler knew from his research and stories his father had told that the smoked and cured meat would be useful for a several months.\n\n\"Well at least I won't have to go into town to eat every day.\" He pulled a folding Buck knife out of his pocket and cut two thick slices of bacon. On the way back to the cabin Tyler saw that a root cellar had been dug next the north side wall. He put the bacon in the kitchen and came back to the cellar. Pulling back the door he saw four wooden steps leading down. Inside he found a large bag of dried beans, some potatoes spread out on a shelf, and several bunches of wild onions.\n\nBack in the kitchen he poked at the coals in the stove with a short andiron and added three or four pieces of split wood to make a fire and while it was building he used the hand pump to draw a bucket of water. Tyler put two double handfuls of beans into a large pot and covered them with water. The beans would soak overnight, soften, and be ready to cook with some fat back or bacon the next day.\n\n\"Funny thing, Grandpa's been gone for at least a week but when I woke up the coals were still hot and the coffee was warm. Sorta like I'd been asleep instead of just getting here.\"\n\nTyler sliced a potato into a large cast iron skillet and added two onions. When the potato was nearly done he added bacon that he'd sliced off the slab. After the meal was ready, Tyler didn't bother with a plate; he ate directly from the skillet. \"It's a good thing Mom made me learn how to cook a bit. Of course now I'd have to learn or go hungry. Not the healthiest meal but it'll have to do until I can get some supplies from the general store.\"\n\nAfter supper Tyler sat on the front porch in the rocker with Ernie's whisky. He took one drink and set the bottle at his feet. It had been a stressful day and as the tension ebbed out of him he became sleepy.\n\n\"I'm tired of thinking about this. I'm going to bed.\"\n\n********************\n\nThree days later Tyler made the ride into New Braunfels. \"I don't know how long I'll be here but I need a few things from the general store if I'm going to stay. Can't keep eating at the caf\u00e9 all the time; it's cheap but I've only got so much money.\" He snorted and said, \"Like I've got any choice about being here. Hell, I may wake up tomorrow in my own bed.\"\n\nHe tied Midnight to the hitching rail and walked into the store. Tyler had to smile again; the store looked exactly like the ones depicted in western movies and on TV.\n\n\"Howdy, can I help you Mister,\" asked an elderly man behind a counter.\n\n\"Hello. I'd need some coffee, a little flour, sugar and five or six pieces of this stick candy.\"\n\nA few minutes later the man had the supplies gathered on the counter. \"That be all for you?\"\n\n\"Three boxes of .44-40 cartridges too please,\" Tyler answered. Other than what was loaded into the weapons, he hadn't noticed any ammunition back at the cabin.\n\n\"That'll be $21 Mister. Let's make it $20 even for your first time in my store.\" Tyler dropped a Double Eagle on the counter, gathered his packages and left.\n\nPutting the supplies in his saddle bags he mounted and walked Midnight down Main Street to the Rock Bottom saloon. \"Might as well have a beer before I head back.\"\n\nTyler pushed through the swinging doors like he seen happen so many time on TV, chuckling to himself as he did so. \"Reckon I'm a sure enough cowboy,\" he said softly with a put on Texas drawl.\n\nErnie saw Tyler come into the saloon. He drew a beer sat it on the bar then turned, got a bottle of his private stock, poured a glass, and sat the whiskey on the bar next to the beer.\n\nTyler smiled and nodded at the bartender. He drank about half the whiskey and followed with a long drink of the beer. \"Thanks Ernie,\" Tyler spoke for the first time.\n\n\"Welcome Tyler. What brings you back to town?\"\n\n\"Needed some supplies. Much as I like Rosita's cooking it's a long ride every day for supper.\"\n\nErnie refilled Tyler's beer glass and the two new friends talked for a few minutes. Tyler heard the swinging doors open and turned to see who had come into the saloon.\n\n\"Howdy Ernie, Mr. Gibson,\" Marshal Thomas said as he stepped to the bar. \"Short beer please Ernie.\"\n\nDooley took a small sip of the beer and turned to Tyler. \"I saw you ride in Mr. Gibson. I'm surprised that Jack would leave Midnight with you.\"\n\n\"Jack asked me to take care of his horse for him while he was gone. He said that he could make better time going by stage coach and train.\" Tyler took a pull on his beer and smiled. \"That's part of my rent; taking care of Midnight.\"\n\n\"You seem like you know horses. You'd better because Midnight can be a handful. Jack's about the only one that can ride that horse.\"\n\n\"I guess it's like riding a bike Marshal,\" Tyler said. \"Once you learn you never forget how.\"\n\n\"Riding a what?\"\n\nDamn Tyler thought, I did it again. Bicycles weren't common in the west until after 1900.\n\n\"Back in Tennessee we call a spirited horse a bike,\" Tyler answered trying to explain. It was the first thing he could think of. \"I meant that once you learn to handle a horse like that, you never forget.\"\n\n\"I see,\" Dooley replied, indicating by the tone of his voice that he wasn't sure he understood.\n\n\"Dooley Thomas, I want to see you,\" a loud voice called from the door way. A large rough looking man pushed his way through the swinging doors. He carried a repeating rifle in one hand and wore a pistol in a cross draw holster in front of his left hip with the butt of the gun pointed forward. The big man fingered the pistol as he walked toward the Marshal.\n\n\"Stover, if you ain't careful you're gonna see me once too often,\" Dooley replied.\n\n\"You shot my brother.\"\n\n\"I did.\"\n\n\"Riley was my brother,\" Stover repeated.\n\n\"Riley was also a rustler, horse thief, and a bandit.\"\n\n\"Why'd you shoot him?\"\n\n\"He was shootin at me Stover. Riley robbed the freight office and shot Bill Justin; shot a man for $23 and then he tried to shoot me.\" Dooley shook his head, stepped away from the bar, and put some distance between him and Tyler. \"I trailed Riley and when I caught up to him he started shootin. I'm a better gun hand than him.\"\n\n\"Reckon I'll have to even things up Marshal,\" Stover said putting his hand on the butt of his pistol.\n\n\"You'll just end up like Riley. Now why don't you have a drink and then go arrange for your brother's funeral?\"\n\n\"Nope,\" Stover said and pulled his gun.\n\nHe never got the chance to bring his weapon to bear. As the pistol cleared the holster and started to turn toward Dooley, the Marshal drew his own weapon and shot Stover twice. The big man took two steps backward and crumpled to the floor. Dooley pickup up Stover's gun from the floor, set it on the bar, and bent to examine Stover.\n\n\"Well hell,\" Dooley said almost to himself. \"Guess I'll have to bury both brothers.\" Turning he ordered, \"Ernie, best send your swamper for Mr. Temple.\" He noticed Tyler for the first time since Stover had walked into the saloon. \"Mr. Temple is the undertaker,\" he explained. \"Sorry you had to be here Tyler.\"\n\nTyler nodded; he was shocked by the gun fight and the dead man on the floor. He finished his drink, said good bye to Marshal Thomas and Ernie, and left the saloon. He mounted Midnight and started the big horse on the road back to the ranch.\n\n\"That man is dead,\" Tyler talked out loud as he rode. \"That wasn't a cowboy shooting tournament; those were real bullets and real consequences. I've been thinking about wearing the Colt; now I'm not sure that's the thing to do. I'm not a coward but I've only used a gun for hunting and the action shooting contests. It never struck home when I did research or played at being a gunfighter what would happen in a real gun fight.\"\n\nHe rode for a long time with his mind going in circles. Back at the T2S, Tyler rode to the corral, tended to Midnight, and took the supplies back to the cabin. He warmed up the leftovers from supper the previous night. I'm not hungry but I'd better eat, he thought. After cleaning up he took the Winchester down and laid it on the table. Tyler went into the bedroom, brought the Colt into the kitchen, and laid it next to the rifle.\n\n\"If the country's still this wild why would Grandpa leave his guns? It's June, as I remember the story Grandpa and Stella came back to the ranch in late September. If I'm still here what will happen if we meet?\" Tyler paused in thought for a minute. \"Here's a good one; will anything I do back in this time change the future?\" Tyler started to laugh but stopped before it turned hysterical like it had before.",
        "Several minutes passed before Tyler shook himself like a big dog. \"Enough. A man could go crazy thinking about time paradoxes. What's the prayer? 'God grant me the serenity to accept the things I cannot change, courage to change the things I can, and wisdom to know the difference'. Guess that's what I'll have to go by now.\"\n\n********************\n\n\"I used the last of the bacon this morning,\" Tyler told Midnight on their way into town. It had been ten days since Tyler had witnessed the fight between Dooley and Stover. \"Need to restock, so I can eat something beside beans, bacon, and potatoes. There are a few other things I need to pick up too.\" He laughed and patted the big black horse on the neck.\n\nTyler realized after just one night at the cabin that several things he was used to in his life weren't known or available in this \"now\". He found out the first time that he used the \"privy\" that toilet paper hadn't been invented yet. There was a \"Farmer's Almanac\" hanging on a nail and torn off pages were used as paper.\n\nHe also found that taking a bath wasn't as simple as before. Tyler had a choice of washing in the spring branch or using the hand pump in the kitchen; both methods gave you a very cold bath. If he wanted hot water to wash with or for shaving, it had to be heated on the wood cooking stove. Another item that wasn't available was an electric razor; nor were there any of the safety razors from his time.\n\n\"Supplies are one reason to go to town; the other is I'm sort of lonesome. Back home I lived alone but could always run down to the pub or call one of my friends so I never got lonesome.\"\n\nMr. Wheeler, the owner of the general store, greeted Tyler as he walked over to the counter. \"What'll be Mr. Gibson?\"\n\n\"I'll need coffee, bacon or a ham if you've got it. I also need bar soap, a razor, and a shaving mug. And six pair of under ware, briefs if you've got them.\" Tyler had been wearing the pants and shirts he found at the cabin. He'd also found several pair of long johns, but he refused to wear another man's under ware.\n\nWheeler looked puzzled for a moment and then smiled. \"You must mean those new style long johns with the legs cut off. Let me show you what I got.\" He walked to another counter and returned with the shorts. \"See the legs go down to just above the knee and you've got these buttons to hold them on your waist. Never heard them called briefs before.'\n\n\"That's what we call them back in Tennessee,\" Tyler said trying to cover up his mistake. \"I take six of them Mr. Wheeler. Oh, and three boxes of .44-40 cartridges.\"\n\nAfter putting the items Tyler requested on the counter, Wheeler asked, \"Doing a lot of shootin are you?\"\n\nTyler added another Almanac to his order; the one in the privy was down to the last few pages. \"I've had to hunt for my food,\" Tyler answered Wheeler's question. \"Been awhile since I did that.\" He chuckled and added, \"I've been missing a lot too. I'm also getting tired of rabbits.\"\n\n\"Sort of expensive hunting varmints with a .44-40,\" Wheeler offered. \"I can make you a good deal on a lever action Winchester .22. Todd Stevens over to Schumannsville sold out last week. Gave me the rifle to pay his account. I could let you have it for what he owed,\" he said as he handed the .22 to Tyler.\n\n\"Makes more sense than using .44-40s to kill rabbits; when I can hit them that is.\" Tyler hefted and examined the small Winchester. \"How much Mr. Wheeler?\"\n\n\"I can let you have it for $20.\"\n\nTyler thought for a few seconds. \"Throw in a couple of boxes of shells and I'll take it.\" He and Wheeler shook hands on the deal.\n\nWheeler laid the .22 next to Tyler's order. He also added two boxes of .22 cartridges.\n\n\"I may be talking myself out of a sale here but you know Ted Smith, the butcher, would take a steer on trade for ham, or bacon or even a butchered beef.\"\n\n\"Thanks for the information Mr. Wheeler. I'll think on it.\" Tyler paid for his supplies and his new rifle and left the store. He put the supplies in his saddlebags, the rifle in the scabbard under the right stirrup, unhitched Midnight and led him down the street to the Rock Bottom Saloon. \"I should say hello to Ernie while I'm in town,\" he told the horse as he tied him in front of the saloon. \"At least that's my excuse to have a beer.\"\n\n\"Howdy,\" Ernie said as Tyler walked in. A beer was quickly placed on the bar and Ernie held up a bottle from his private stock. Tyler shook his head and picked up the beer.\n\n\"Hello Ernie, thanks. Mr. Wheeler told me that Ted Smith would take a steer in trade for dressed meat. That true?\"\n\n\"Yep. Lot of people round here raise a beef or two and make that trade. They don't have to mess with butchering, or smoking, or curing the meat. They turn to steer on the hoof to Ted and walk away with meat for supper.\" Ernie smiled and added. \"Course some people just round up mavericks and trade them to Ted. Don't have to feed or take care of the cattle that way.\"\n\n\"Mavericks? You mean strays?\"\n\n\"Yep. Lots of mavericks with no brand on them running in the hills over close to the Guadalupe. But why don't you just drive one of the T2S cattle into Smith's?\"\n\n\"Mr. Torrey and I never talked about me using his stock. I wouldn't want to take one without his permission.\"\n\n\"That's an honest man,\" Dooley Thomas said as he entered the saloon. He nodded at Ernie and smiled at Tyler. \"Some would figure with Jack gone they could take one steer. He'd never miss it.\"\n\nTyler motioned to Ernie for a beer for the Marshal. \"My folks raised me to respect others and their possessions. Have a beer Marshal.\"\n\n\"You're an honest man Tyler. They're sometimes hard to find.\" Dooley smiled and sat his empty mug down. \"I'll give you a hand rounding up a few mavericks if you like. Be a good excuse to forget being a Marshal for a day or two.\"\n\n********************\n\nIt had been easier than Tyler thought it would be to round up a dozen mavericks. They were clustered close to the Guadalupe River, in the valleys and bottom land. Dooley and Tyler made the ride to the area in one day, gathered the cattle the next, and drove them back to the T2S the following day.\n\n\"Why doesn't everyone round up these cattle?\" Tyler asked on the drive back to the ranch.\n\n\"Most of the ranches have been around for a lot of years. They increase their herds by breeding and such. Also these mavericks are wild and pretty scrawny; not worth the trouble for the ranchers.\" Dooley smiled and added, \"Makes it a mite easier for people like yourself.\"\n\nDuring the trip, Tyler gained a lot of respect for the Marshal. Dooley Thomas was an interesting man. His stories about New Braunfels kept Tyler entertained at night in camp and on the drive back to the ranch. Dooley was originally from St. Louis; his parents had moved to Texas when he was 7 in 1850. He quickly became a \"man\" of the west from the city boy he'd been. In 1861 he enlisted in the 29th Texas Calvary and fought for 4 years in the War Between the States.\n\nHe entered the war as a boy of 18, a trooper, and left as a 22 year old Lieutenant; a veteran of numerous battles. \"Damn stupid war,\" Dooley said as he told his story. He returned to New Braunfels to resume his life on his parent's ranch.\n\nAbout a month after his return, Dooley was in town for supplies on a Saturday. He'd stopped at the saloon for a beer before heading home when three men entered. They pulled their guns on the bartender and demanded money. One turned toward Dooley but before he could say anything, Dooley tore the pistol out of the man's hand and shot him. He fired and killed a second man and splintered the door frame beside the thirds head as he ran out the door. That man left the saloon, jumped on his horse and rode away at a gallop. There was no law in New Braunfels to report to so Dooley rode home.\n\nThree days later a committee of three town's people came to the Thomas ranch and offered Dooley a job as the town Marshal.\n\n\"That was nigh onto 18 years back,\" Dooley finished his story. \"Was a good thing them offering me the job. I found out that I really didn't like playing nurse maid to a bunch of stupid cattle.\" He handed a cup of coffee across the campfire to Tyler. \"What's your story Tyler?\"\n\nWell hell, Tyler thought. Got to make up something that's reasonable.\n\n\"My folks back in Tennessee have a big farm. I'm the youngest of three boys. After the war, I decided that I didn't want to be a farmer, much less the third in line to own the farm, so I came west.\" Tyler was careful not to claim to have fought in the Civil War. \"Haven't found my place yet, but I will.\"\n\n\"New Braunfels is a good place to live. Come to the church picnic on Sunday,\" Dooley suggest. \"They have one every week after services. You can meet some of the folks that live here. Maybe you'll decide you want to stay.\"\n\n\"I'd like that Dooley. It gets a little lonesome out on the T2S with only Midnight as company.\" Tyler laughed and added, \"He's a good listener but he don't talk much.\"\n\nGathering the cattle had been a lot easier than learning how to shave with a straight razor. After cutting himself several times, Tyler decided that unless he was going into New Braunfels he would only shave every second or third day.\n\nThe steer that Tyler drove to Ted Smith's on Sunday wasn't as well fed as normal range stock. Tyler's idea was to trade the steer to Smith and set up a sort of credit balance so he could get meat as needed. He'd left the other 11 mavericks grazing on the lush grass of the T2S. \"If I'm going to be here I don't want to worry about food. I need to get my bearings and figure out how to live in this time.\"\n\nSmith opened a gate and Tyler drove the steer into the corral. \"Reckon you'd be Gibson. The Marshal told me you'd be comin by.\"\n\nTyler had to smile at Smith. The man reminded Tyler of his best friend Charley Jones. Like Charley, Smith was about 5'5 or 6 and probably weighed about 200 pounds. Rotund is how Tyler thought of the butcher. When Smith took off his hat to wipe the sweat off his forehead he had more scalp than he did hair. Just like Charley, Tyler thought.\n\n\"Howdy Mr. Smith,\" Tyler said after he drove to steer into the corral. \"I'm surprised that you'd do business on a Sunday.\"\n\n\"Those holy rollers over to the church don't like it none but I ain't breakin no laws. If they let me be I don't bother them. Sides, it's my business when I work.\"\n\nTyler chuckled. \"Sounds like you don't have much use for the church goers.\"\n\n\"Got nothin against them. Most of the folks are good people, but that reverend and some of them deacons is against a lot of things I like to do. They don't abide with drinkin, gamblin, or fooling around with women. I don't see how a man can get by without those things. So them and me don't see exactly eye to eye.\"\n\nSmith looked over the steer in the corral. \"Bit on the scrawny side, but I can fatter him up. How do you want to do this Mr. Gibson?\"\n\n\"I'm not sure how this is supposed to work. Can you tell me?\"\n\n\"Yessir. One way is to butcher the steer for you; I'll even bring it out to you ranch when it's done. Course you might want to wait until I can fatten up that animal; take about a month or so. Normally I do the butcherin for a fee. Charge a $5 kill fee, then charge 10 cents a pound hangin weight for the two sides of beef.\"\n\n\"Hanging weight?\" Tyler asked.\n\n\"That's the cleaned and dressed steer; usually with the carcass split down the middle. I keep the hide, horns, hoofs and insides.\" Turning to look at Tyler's steer Smith said, \"Your animal's small, I reckon it will dress out about 400 pounds.\"\n\nTyler did a quick calculation in his head. \"That's $40. \"There's only so much money in my poke and I'd have to buy meat from you or the mercantile until the animal was fit to butcher. Even then I don't know how I'd keep a whole steer from going bad. You said one way, is there something else we can work out?\"\n\n\"Yessir. I'll take the steer and drive it and others to the Army over to San Antonio. Or I might just butcher it and sell it to people around here or to Mr. Wheeler over to the mercantile or to Rosita.\" Ted looked down for several seconds and added, \"I'll give you a side of beef for the animal; I'll even cut it into roasts and steaks for you.\"\n\n\"Could I get what I need from you every week or so until I've used up the side of beef?\"\n\n\"Yessir we can do that.\"\n\n\"Then if it's OK I'll pick up a couple of steaks and a roast on my way home from the church picnic. See you later.\"\n\nTyler mounted Midnight and rode to the church yard where the women were setting up the picnic. He was wearing the Sunday go to meeting coat from the wardrobe, one of the shirts with a button on collar and a string tie. \"Going to church, got to be dressed up like Mom always said.\" Tyler said on the ride into town. Dooley Thomas waved him over to where he and a group of men were standing.\n\n\"Maybe I should go help the ladies set things up,\" Tyler offered.\n\n\"Do so at your own risk, young man,\" one of the older men said. \"In my experience it's best to stay out of the women's way.\" All the men laughed.\n\nThe old man took a small flask out of his jacket and passed it around. Tyler took the flask when it come to him and looked at the man.\n\n\"Just a little home brew for your constitution. Go ahead young man, it'll do you good.\" Tyler took a modest sip and felt like his throat was going to burn out.\n\n\"Smooth ain't it,\" Dooley said. He and the other men laughed at Tyler's reaction to the liquor. \"Come on Tyler, we better put some food on top that home brew.\n\nDooley led Tyler around filling their plates from the many different dishes available. As they walked around the tables, Dooley would introduce Tyler to the ladies standing beside their food; if their men folk were there they were also introduced. By the time Tyler had a heaping plate of food, his mind was in a whirl with all the names and faces.\n\nAfter eating, Tyler pushed his plate down the table away from him and turned back toward Dooley who was stuffing a large piece of pie into his mouth. Looking over Dooley's shoulder, Tyler saw a young woman came out of the church carrying a large pot of something that was steaming. Tyler did a double take and almost dropped his cup of coffee.\n\nThe girl had long auburn hair worn down her back. She was slender but by the size of the pot she was carrying it was obvious she was strong. Tyler was twenty or more feet away from her and he still could see her corn flower blue eyes and the string of freckles across the bridge of her nose.\n\n\"Who's that?\" He asked Dooley and pointed at the girl.\n\n\"That's Abigail Stevenson. She's our school teacher.\"\n\n\"She sure looks hot,\" Tyler remarked almost to himself.\n\n\"Reckon she is, she's been cooking that pot of soup in the kitchen,\" Dooley said with a little frown.\n\nDamn, I did it again, Tyler thought. These people don't use that term, at least not about a pretty girl. \"I saw the soup was hot from the steam coming off it.\"\n\n\"Abby, come over here if you've got the time,\" Dooley called across the tables.\n\n\"Hello Marshal,\" Abby said as she joined them. \"It's nice to see you.\"\n\n\"Thanks. I'd like to introduce you to my friend here. Abby this is Tyler Gibson, Tyler this is Abigail Stevenson. Tyler is stayin out at the Torrey place while Jack is over to Dallas.\"\n\n\"Welcome Mr. Gibson. You and the Marshal come over and sit with us.\" Abby led them over to where her parents and two brothers sat at one of the tables. She introduced Tyler to her family. As they ate Tyler answered and asked a few questions and by the end of the meal, he no longer felt like a stranger.\n\nTyler said good bye and thanked the Stevenson's for sharing their company. \"Y'all made a stranger feel at home.\"\n\n\"You should come back next week Tyler,\" Abby suggested.\n\n\"Thank you Miss Abby, I'll do that,\" Tyler replied.\n\nIn the background Dooley tried to hide his grin. You couldn't keep that boy away with a shotgun, he thought.\n\nBefore returning to the ranch, Tyler stopped at Ted Smith's and got a large roast and a couple of prime cuts of beef. On the ride back to the T2S, he thought about another convenience that he missed. \"No cell phone, hell no phones at all. If I want to talk to Abby or Dooley or anybody else, I'll have to ride into town. Course seeing her would be even better than just talking to her.\"\n\nThat evening he sat in his rocker with a last cup of coffee. \"If there is a time paradox, will my being here and changes I might make affect the future? Maybe I'm on a different time line like some scientists talk about or in a parallel universe.\" Tyler shook his head, rotated his shoulders to loosen the tension and stood. \"Hell, I can't do anything about any of it. I'll leave before Grandpa Torrey and Stella get here but the rest of it I won't worry about it anymore.\" He poured out the cold coffee and went to bed.\n\n********************\n\nAbby came out of the church on Sunday at midday and saw Tyler. She came to meet him as he rode up. \"I'm so glad you're here Tyler.\"\n\n\"The thought of eating your Mama's fried chicken instead of my own cooking made it an easy choice Abby.\"\n\n\"Is that the only reason you came?\" Abby asked with a sly smile.\n\nTyler took a deep breath. This young woman attracted him like none back in his own time. Better be careful, he thought. If I get too close I may not want to leave before Grandpa and Stella return.\n\n\"No ma'am. Her pies are really good too,\" Tyler teased.\n\nAbby looked surprised and then she laughed. \"You're right; Mama's pies are a temptation.\" She motioned with her hand as she turned toward the food laden tables. \"Come on, I saved you a seat at our table.\"\n\n********************\n\nTyler was behind the cabin chopping fire wood on Monday morning. He carried an armful of the split wood into the cabin and saw a rider pass by the front window. Dropping the kindling beside the kitchen stove, he walked through the front door. The man was drawing a bucket of water from the well. He sat the bucket of cool water on the edge of the side walls of the well, took the dipper from where it hung, and took a long drink. The man's tired and lathered horse extended his neck so he could reach the water bucket. His owner punched him on the nose and pushed the horse away.\n\n\"You can water your horse in the trough at the corral if you like,\" Tyler offered.\n\n\"Nope, he'll be okay. It'll wait until I get to town.\"\n\n\"I think you should water your animal Mister. He looks about done in.\"\n\n\"It's none of your business Sonny.\"\n\nTyler stiffened a little. \"Maybe not, but that's my well you're using. Isn't it normal courtesy to ask before you take a man's water?\"\n\nThe man stepped away from the well and faced Tyler. He was tall with wide shoulders. His face had a scar running from his left eye down to his jaw line. Over all he looked dirty, trail weary, and dangerous. Pulling his slicker back he freed up the pistol he wore on his hip and placed his hand on the butt.\n\nTyler was at once aware that he wasn't armed. The Winchester and the Colt were still in their places in the cabin. He'd decided not to wear the pistol after seeing the man named Stover shot and killed.\n\n\"That'll be about enough Stoddard,\" Marshal Dooley Thomas said in a hard commanding voice.\n\nTyler and the stranger turned to see Dooley sitting on his horse with the butt stock of his ever present coach gun propped on his hip; ready for use if need be.\n\n\"Water your horse and ride out,\" Dooley ordered.\n\nThe man called Stoddard took his hand off his gun. He took the bucket and held it for his horse to drink. When the bucket was empty, he mounted looked at Tyler, and then at Dooley. \"Another time Marshall,\" he said. \"You too sonny.\"\n\n\"I'll be here,\" Dooley responded. \"I won't say it again, ride out.\"\n\nStoddard turned his horse toward New Braunfels and rode off at a slow lope; never looking back.",
        "\"Not the most sociable feller is he?\" Dooley said as he rode over to the well. \"Mind if I water my horse Mr. Gibson?\" He asked with a grin.\n\n\"Who was that?\" Tyler asked. I may have just dodged a bullet, he thought; literally as well as figuratively.\n\n\"That was Bill Stoddard. He's a lot of things but law abiding ain't one of them.\" Dooley looked back and saw Stoddard round the bluff, headed for town. \"Him and me have a little history.\"\n\nTyler looked at Dooley for a few seconds and before he could ask a question, Dooley continued.\n\n\"I arrested him and his brother, Dutch, three four years ago. They went to trial, charged with stealing horses, and were sent to the state prison. Bill just got out.\"\n\n\"How about his brother?\"\n\n\"Dutch died in prison. Reckon that's another thing Bill holds against me.\" Dooley finished watering his horse and looked at Tyler. \"It's none of my business but I'll give you a friendly piece of advice Tyler.\"\n\n\"Yes sir?\"\n\n\"I know this is 1878 and all. The country is growin up, getting civilized; but Texas ain't Chicago or St. Louis or even Nashville. This is still a wild and sometimes dangerous place. Aside from men like Stoddard, we still have trouble with the Comanche now and then. \"\n\n\"Yes sir?\"\n\n\"You should carry a weapon with you. I know you hunt and the Winchester would be fine, but you need something to protect yourself.\" Dooley smiled. \"I won't always be here to help you know.\"\n\nTyler nodded, held up his hand for the Marshal to wait and went into the cabin. Going into the bedroom, he took the Colt .44-40 and holster from the dresser drawer. He put on the gun belt, settling the holster low on his right hip. As he walked back to join Dooley he tied down the pistol.\n\n\"Looks good Tyler, but can you use it?\"\n\nTyler drew and fired, hitting a small rock, the size of a baseball, about 30 feet away.\n\nDooley grinned and said, \"I reckon you can use it. That's good shootin.\"\n\nTyler returned the grin, reloaded the Colt, and holstered it. \"I do fine with targets and I'm as good as most when it comes to speed.\" His dropped the grin and his face got a serious look. \"But Dooley, I've never faced off against another man. I saw what happened with Stover and I don't know if I can draw down on someone.\"\n\nDooly nodded his understanding. \"That's a choice you have to make for yourself Son. I hope you never have to face it but you need to think about it. Like I said before this ain't St. Louis or Chicago.\"\n\n********************\n\n\"I'm beginning to feel normal wearing the Colt,\" Tyler said aloud. He still had the habit of talking aloud to himself or to his horse, Midnight. Tyler was riding into New Braunfels on this Saturday morning in late August to meet Abby; they had a picnic planned down by the Guadalupe River. Dooley waved to him as he rode by the Marshal's office.\n\nAbby was mounting her horse as Tyler came to the livery stable. \"You're right on time Mr. Gibson,\" she greeted him with a smile.\n\n\"Good day to you Miss Stevenson.\" Both young people laughed at the foolishness and rode toward the river. They talked all the way to the picnic site about nothing special; they just enjoyed the company.\n\nThe Saturday picnic or horseback ride or buggy ride had become a weekly ritual for Tyler and Abby over the last month and a half. They had become friends at the church midday meals and the Saturday outings began. The first meetings were with Abby's aunt as a chaperone, and just recently by themselves.\n\nSitting on a quilt by the river after eating most of a fried chicken, Tyler and Abby sat and stared quietly out across the slowly flowing water. Dragonflies and other insects flew low over the river and several times a bass would jump out of the water trying to catch a meal.\n\nTyler was very attracted to Abby and was fighting with himself over the attraction. I've got no right to get involved with her, he thought. Before Grandpa Torrey and Stella return I have to leave. I'm not sure about any time paradoxes or actions changing the future, but I can't take the chance on meeting Grandpa. Don't know for sure where I'm going or what I'm going to do and I can't ask Abby to go with me.\n\n\"Abby, I've been trying to think how to tell you, but there's no other way than to just say it,\" Tyler said. The look on his face was one of deep sadness.\n\n\"Tell me what?\"\n\n\"I'll be headed back to Tennessee next week.\" Tyler sighed. \"I wish I could stay but I have to go home.\"\n\nAbby saw the hurt in his eyes, his slumped shoulders and heard the sadness in his voice. \"I could go with you, if you wanted me to.\"\n\nTyler sighed again and shook his head. \"That's not a good idea Abby.\" He hesitated and added, \"There are things about me you don't know, things you can't know. I have to go alone.\"\n\nThe young woman had developed real feelings for Tyler and she thought he had feelings for her too. Abby dabbed at a tear in the side of her eye and stood.\n\n\"I think we'd better get back to town,\" she said and almost stomped to her horse.\n\n\"Abby, I...\" Tyler started.\n\n\"What? You've told me you're leaving, you've told me you don't want me to go with you. What more can you have to say?\"\n\nTyler shook his head and helped gather the quilt and picnic basket. Abby wouldn't talk during the ride back to New Braunfels, although Tyler tried to speak to Abby several times. Each time she would shake her head and refused to respond.\n\nAbby rode directly to the livery, handed her horse to the stableman, and turned to walk away without saying a word to Tyler.\n\n\"Abby, please,\" Tyler said and took her arm.\n\n\"What?\" She said turning to face him with tears in her eyes.\n\n\"I've enjoyed our time together. I've enjoyed our friendship. Please don't walk away like this.\"\n\nAbby reached over with her left hand and lifted Tyler's hand off her arm. \"Good bye Tyler. Have a safe trip.\" She turned and bumped into Bill Stoddard. Neither she nor Tyler had seen him standing there.\n\n\"Well Missy, it's not often a pretty little thing like you comes running to me,\" Stoddard said as he put his arm around Abby. \"But I reckon I can get use to it.\"\n\n\"Let go of me,\" Abby said struggling to push Stoddard's arm away.\n\n\"I'll just give you a reward for jumping into my arms,\" Stoddard said and leaned toward Abby intending to kiss her.\n\nAbby drew back her arm and hit her attacker on the nose. Stoddard grunted and shook the girl and then raised his hand to slap her.\n\n\"Let her be Stoddard,\" Tyler said and stepped closer to him. His right hand was hanging close to the butt of the big Colt he wore.\n\nStoddard held Abby away from him and looked at Tyler. \"Reckon I'll teach you some manners like I wanted to the other day.\" Before he finished talking he drew his pistol.\n\nTyler reacted and drew his own weapon. He was the faster of the two and before Stoddard could bring his gun up he was facing Tyler's Colt. Stoddard stopped and looked at Tyler.\n\n\"Drop it Stoddard,\" Tyler ordered. \"And let her go.\" Stoddard dropped his pistol to the ground and released Abby.\n\n\"I think it would be a good idea for you to ride on,\" Tyler said. \"You're not welcome around here.\"\n\nStoddard looked hard at Tyler for a few seconds, walked to his horse and mounted. He stopped on his ride out of town. \"I'll see you again Mister,\" he threatened.\n\n\"Thank you,\" Abby said after Stoddard rode away. She turned to leave.\n\n\"I'll walk you home Abby,\" Tyler said. Seeing the look on her face he added, \"It's the last time I'll bother you.\"\n\nOn the ride back to the ranch, Tyler had time to think about the confrontation with Stoddard. \"Never even thought about it being real. Never even thought about that it wasn't a contest. All I thought of was saving Abby.\"\n\n********************\n\nTyler was packing his gear, getting ready to leave. It was two days since he told Abby he was leaving. He smiled as he saddled Midnight. \"Don't know what taking Midnight might change in the future, but I'm not leaving him behind.\"\n\nHe heard a horse coming at a full gallop and turned. Abby pulled her horse to a skidding stop in a cloud of dust. She jumped off the animal before it come to a complete stop and strode toward Tyler with a purpose.\n\n\"I'm going with you Tyler. Hush,\" she said as he started to object. \"If you don't let me go, I'll just follow you. But I'm going with you.\"\n\nTyler looked at her for several seconds. He shook his head, smiled, and pulled her into a hug. I've maybe made changes in the future by just being here, he thought. I didn't ask to be here, but now that I am I'm going to live my life the way I want.\n\n\"We better get another canteen, now that there are two of us,\" Tyler suggested. He turned to walk back to the cabin.\n\nTyler felt the bullet hit his shoulder and spin him around milliseconds before he heard the bark of the pistol. He saw Stoddard step from behind the barn with a smoking gun in his hand. Tyler drew his Colt and fired three times as fast as he could. Then he pitched forward onto the ground.\n\n\"Don't you die on me,\" Tyler heard from the dark. He opened his eyes and realized Abby was holding his head and upper body in her lap.\n\n\"Don't you die on me,\" Abby repeated. \"I'll get you into the cabin and go for the doctor.\"\n\n\"Stoddard?\" Tyler croaked.\n\n\"Dead, I think. He hasn't moved since you shot him.\"\n\nTyler could feel himself drifting away. \"Abby, I love you,\" he said and closed his eyes.\n\n********************\n\n\"Damn, my shoulder hurts,\" Tyler said as he woke up. He straightened up in his office chair.\n\n\"Wait, what? My office chair.\" He looked around and saw his monitor, in front of him on the desk; the cursor still blinking at the end of the last line he'd written.\n\n\"I'm back, I'm back,\" Tyler yelled and then stopped. \"What about Abby?\"\n\nTyler shoulder was hurting because he was braced on the arm rest and he'd slumped over onto it. He thought the pain was from the arm and shoulder being asleep. As he moved the arm around it hurt and tingled, but quickly the pain began to subside.\n\n\"How long was I out? Was Abby just a dream? Was Midnight, Dooley, Stoddard, and 1878 just a hallucination?\"\n\nTyler looked at the time on his monitor. 5 PM it read. \"That means I've been asleep for about twelve hours. It must have been a dream. I couldn't live all those weeks in only twelve hours.\" He shook his head, stood, and went into his bathroom. Washing his face and hands he looked at himself in the mirror.\n\n\"These aren't the clothes I had on last night,\" he told his image with surprise in his voice. He looked at the button on collar shirt, string tie, and whip cord work pants and an eerie feeling swept over him. Tyler started took almost a full minute staring at the clothes.\n\n\"What happened? Did I cross some kind of space time continuum, or step through a rift in the time line? Or did super space monkey decided to screw with me?\" He started to laugh and remember his almost hysteria from the dream and caught himself.\n\n\"Hell of a dream or whatever. It'll make a good story.\"\n\nHis cell phone lying on the desk rang. Tyler ran to answer. \"Hello?\"\n\n\"Tyler buddy, I need a favor,\" his friend Charley Jones almost yelled into the phone.\n\n\"Yeah, okay Charley,\" Tyler replied still a little out of it.\n\n\"I know you're gonna meet us for burgers tomorrow night, but my wife's cousin just came in from San Antonio. Missy wants to know if her cousin can join us.\"\n\n\"Charley....\"\n\n\"It's not a set up buddy. If you say no, Missy won't go. She'll tell me it's okay for me to meet you but I'll pay for it later. So please, go along with it.\"\n\n\"Okay Charley I'll meet you at Ernie's tomorrow night at 7.\" Tyler took shower and cleaned up. \"I'm sure glad to get back to a modern day razor.\" He noticed a deep red, almost purple spot, about the size of a nickel on his shoulder. \"What is that? Wait, that's where Stoddard shot me. What the hell?\" It wasn't sore so he forgot about it. Tyler fixed himself supper and watched a little TV before he went to bed. Normally he would have sat down at his computer to write, but he was a little skittish.\n\nTyler had a standing appointment at the Trails West stable near his home to ride every Saturday morning. He decided to keep that appointment thinking it might help keep his mind from going around and around over his \"dream\" adventure.\n\nTyler was one of the favored clients of the stable. He always treated the staff with respect. The staff liked him, for one reason, after a ride Tyler wouldn't just hand off his horse to a wrangler. He would always unsaddle the mount, comb and curry it, and see that it got fed and watered.\n\nJimmy, the head wrangler, met Tyler as he walked up to the barn. \"Sorry Tyler, but your usual horse came up lame this morning. Damndest thing, he was fine yesterday.\"\n\n\"No matter Jimmy. I'll just ride that bay mare or another horse.\"\n\n\"Tell you what, we just got a stallion in. Seems to be well trained with a good nature. Maybe you'd like to try him.\" Tyler nodded. \"Let's go over to the corral and you can take a look at him,\" Jimmy suggested.\n\nWhen they got to the corral, Jimmy said, \"Wait here; I'll go throw a rope on him and bring him over.\"\n\nTyler climbed up onto the top rail of the corral and looked at the horses milling around. At the far side of the space a big black horse threw up his head and stared across the corral toward Tyler. The horse whinnied and trotted to where Tyler was sitting. The animal put his head against Tyler's chest and sort of sighed.\n\n\"I'll be damn,\" Tyler said as he rubbed the horse's ears. \"This is Midnight.\" He rubbed the horse for a minute. \"This is getting stranger and stranger.\"\n\n\"Reckon you two found each other Tyler,\" Jimmy said. \"What do you think?\"\n\n\"He'll do just fine Jimmy.\" A thought crossed Tyler's mind. \"Saddle him for me will you? I need to see Mrs. Johnson for a minute before I take him out.\"\n\n\"The owner?\" Jimmy asked.\n\n\"Yeah, got a little business to talk to her about. Be back in a few minutes.\"\n\nTyler wasn't gone more than fifteen minutes. He returned to the corral, grabbed the reins and stepped up into the saddle. As his finished his ride and tended to the horse he said, \"I'm taking you home Midnight. You belong on the T2S, not in some stable.\"\n\nThe big black nodded his head up and down as if he agreed.\n\nAs Tyler walked into Ernie's grill that evening, Missy was waiting for him.\n\n\"You're just going to love my cousin. You two are perfect for each other. C'mon, we've got a table in the back.\" She grabbed his arm and pulled him to the table.\n\nNot a set up huh Charley? Tyler said to himself.\n\n\"Abby, this is our good friend Tyler Gibson,\" Missy said. \"Tyler this is my cousin Abigail Stevens.\" Missy turned back to Tyler. \"Abby is a school teacher and she's thinking about moving here from San Antonio.\"\n\nTyler finally looked at the young woman sitting at the table and was shocked. It's my Abby, he thought. I mean the one from 1878. Different hair style, but the same beautiful auburn color. She's wearing a little makeup and her clothes are different, but it's Abby. It's the eyes that make me sure.\n\nAbby extender her hand and Tyler took it in his. The two young people stared at each other and didn't say anything.\n\n\"For God's sake sit down Tyler,\" Charley said. \"You two have been staring at each other for over a minute.\"\n\nAs Tyler sat down, Abby asked, \"Have we met before Tyler? I feel like I know you from somewhere.\"\n\n\"Huh?\" He replied. Tyler was still surprised.\n\n\"I asked if we've met before,\" Abby said with a small grin.\n\nThinking quickly, Tyler answered, \"Perhaps in another life and at another time.\"\n\nAbby's grin turned into a big smile. \"Maybe so,\" she replied.\n\nAfter some very good burgers and a couple of beers, Tyler and Abby followed Charley and Missy to their car. They stopped about half way to the vehicle and talked and looked at each other. After more than five minutes, Charley got impatient.\n\n\"C'mon you two,\" Charley said in a loud carrying voice. \"You've got the rest of your life's to gab if you want. I'm tired and want to go home and get some sleep.\"\n\n\"Hush Charley,\" Missy said poking her husband in the side with her elbow. Then is a quieter voice she asked, \"Haven't you ever seen love at first sight before?\"\n\n\"I like teaching,\" Abby was saying. \"But San Antonio has become a big city. Lots of hustle and bustle and a fast pace. New Braunfels is a bit more laid back, like a small town. I guess I'm just a country girl at heart. That's why I'm thinking of moving here.\" She laid her hand on Tyler's arm and added, \"The people I've met here are nice too.\"\n\nTyler offered to show her around the town the next day and she accepted. It was the first of many dates. Over the next three weeks, Tyler and Abby had nine dates. Each one saw them become closer.\n\nAfter dinner one evening, Tyler was giving Abby a tour of his home. She had told him that Missy talked about the big house and grounds a lot. He explained the history behind the building and how it had been added to by each of the owners since the 1870's. On one wall, next to the fire place, was a large piece of Texas Mesquite with T2S burned into it.\n\nAbby walked over and touched the brand and looked at Tyler with a question in her eyes.\n\nTyler explained, \"Before most of the land was sold off, this was the Torrey Two Springs ranch. That's the brand; I renew the registration on it every year. It's part of this house, this land, and my history.\"\n\n\"I must have seen it some place; it looks familiar.\" Abby gave Tyler a little smile. \"I still feel like I've met you before. I've never felt this comfortable with anyone so quickly.\"\n\nTyler got them a drink and sat on his large overstuffed couch. He patted the cushion beside him and said, \"Comsit.\"\n\n\"Comsit?\" Abby asked puzzled.\n\n\"Come, sit next to me, I've got a story to tell you.\"\n\nThe End. \n\nEnd note.\n\nI purposely steered away from time paradoxes as much as possible. I'm not scientifically educated enough to discuss that phenomena. The subject has been delved into by authors much more talented than I. Notably, Ray Bradbury's \"A Sound of Thunder\", first published in 1952. In 2005 a movie based on his work was released.\n\nIn his work Mr. Bradbury, in one scene, explains the effect of what one little change, the death of a mouse, in the past could do to the future.\n\nThis story shows a little of the cultural shock a modern day person would experience by living in the past. But my main goal was to write an adventure story; a western.\n\nI hope you enjoyed the story and thank you for taking the time to read my ravings.\n\nWoody Leach "
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "sci fi",
        "drama",
        "romance"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/through-the-years-reposting"
}