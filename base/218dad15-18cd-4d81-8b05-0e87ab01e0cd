{
    "title": "The Pirate King Ch. 12",
    "pages": [
        "This is a part of an ongoing series - if you find yourself here without reading the previously chapters, I highly recommend going and catching up. We'll still be here when you get back :)\n\nSo it's looking like we'll be moving to a two week schedule, rather than a weekly one. I hope that won't lose me any of you - I'm just struggling to keep up writing this with everything else in my life. Enjoy the chapter, see you in a week or two. \n\nAlternate title: \"You got a haircut\"\n\nI am living for the responses and feedback and comments you guys have been sending me; its the only reason I do what I do, to make y'all happy. You guys are the best:) Peace, love, be safe. Wishing you all warm baths and someone to share them with. \n\n*****\n\nNatch meeting my brother was a scene in opposite of my reintroduction to Horace. \n\nNatch stood about where Horace had been, his eyes wide, his stance ready. But where Horace had been ready to run, Natch was ready to fight. And the brothel workers were crowded at my back, rather than anywhere but near me, every corner but the corner I had been standing in. And to top it all off, now it was not I but my brother who caused the stir, unlike in the bars, unlike on the streets. Unlike in a brothel just like this one, so few days ago. \n\nI would be lying if I said I did not take a moment to enjoy the shift.\n\nThe Captain took charge quickly, pulling Natch aside and speaking quietly to him. I don't know what he said. I know Natch's eyes went wider yet, tracked to me standing so near to this man who caused him fear. \n\nI put a hand on Val's shoulder and I thought his eyes would burst. \n\n\"This feels familiar,\" I murmured to Val, unwilling to not be amused.\n\n\"I hate this,\" he responded. I squeezed his shoulder and he grumbled. \n\nIn time, the Captain coaxed Natch over to us. I didn't bother to smile at him as he moved through the open space; he would either trust me or he wouldn't. He should have already made that decision, listened to his captain. If he hadn't, if he didn't, then there was nothing that I could do.\n\n\"Ghost,\" he said cautiously. \n\n\"Natch,\" I responded, ignoring how Val shifted at Natch's name for me. Sybil had told him; he should have expected this. \"This is my brother, Val.\"\n\nNeither man said anything. I turned and gave Val a long look.\n\nVal finally let out a long breath. \"You sail with my brother.\" \n\n\"Aye.\" Natch was still holding himself stiffly, like he expected to have to take a hit at any point. He said nothing more. \n\n\"And with.\" Val shot a look at the Captain, took in those dark eyes that I loved so much. \"With my brother's lover.\" \n\nThe Captain's eyebrow shot up. \"Aye,\" answered Natch flatly. \n\nVal glanced up at me. I shrugged. It was up to him how to progress. \n\nHe turned back to Natch, and his face set into an expression I was very familiar with. Strange, I thought. I would not have gone with that. \"You were the one looking for Yarrick.\"\n\nNatch stiffened further, his entire body becoming taut, Val's words having the effect of a stiff breeze into unprepared sails, his soul not expecting the force of the sea from this small, grey-haired man. From any man, perhaps, although he should have known better having known me. I wondered if he might keel over from the force of it, if we might have to right him when all of this was done. I looked to the Captain to see if he had the same thought and found him looking at the boy with concern. \n\nFair, I thought. Concern is fair, and much more succinct. \n\n\"Brother,\" I murmured, but Val raised his hand. \n\n\"I track him,\" he told Natch, his voice holding the first hints of a flurry. I thought I might be able to see his breath in the chill that had descended between the two men that stood before me. \"I have to know where he works, so I can try and get to the boys before he does. Or after. I don't know when.\" He looked Natch over carefully. \"I'm sorry, I've haven't been as attentive these past three years.\"\n\nNatch took a step back. \n\n\"But I always know. Consider it my singular hell, to know all the people that I'm personally failing.\" The smile on my brother's lips was drug up from the bottom of the harbor; it dripped from his face like slime, held things that should not have ever seen the light of day. \"Ah, but you don't care. You don't trust. As well you shouldn't. When you want, ask my brother. He'll know where Yarrick is. And if he doesn't, I promise.\" The smile sharpened itself on a thousand shards of ice. I felt the sea inside of me follow suit as gusts blew through my brother's soul. \"I will.\"\n\nHe turned and walked away, and the room was colder than it had been before, and his promise hung in the air like the last flakes of snow, until it settled and melted against our skin. \n\nNatch gasped and dropped to his knees.\n\n\"Fuck.\" The Captain was closer, but somehow I made it to the man first. I think I was the most used to the way my brother could freeze the very world. Or maybe I was the least affected, since my soul was filled with things to counteract his arctic press. \n\n\"You told him,\" Natch whispered.\n\n\"I never would.\" I put a hand on Natch's shoulder and was pleased to see that he did not pull away, but pressed into it. I waited until his skin felt warm again before I reached before him to try and help him up.\n\nHe took my hand and stood, if a bit unsteadily. \"What is he,\" he asked, awe clear in his voice.\n\nI met his eyes. \"My brother.\"\n\nHe searched my face for a long moment before nodding. Natch, as always, understood more of me than most men. \n\n\"Is he dead too?\" \n\nBeside me, the Captain frowned and crossed his arms. I shook my head. \n\n\"Val is very much alive.\"\n\n\"And yet still like you.\"\n\nI was saved from having to explain that the sea in fact predated my current existence, that my death in this form was a gift by the very ocean itself, which just seemed like a complicated thing and honestly not related to Val at all, by a gentle voice at my shoulder. \"Excuse me.\" \n\nAll three of us turned around. A large teak-skinned man stood behind us, resplendent in silk. \"It grows late; your bodies must grow weary. Valdrin decreed that there were to be rooms for you here, if you so desire.\"\n\nI turned to look out the door. The shadows were growing long on the street - how had I missed that on our way over? I must have been focused on the Captain, on Natch waiting for us here. \"Thank you,\" I told the man. \n\n\"We should go back.\" Natch was quick to suggest it; he still looked unsettled. Pale. Cold.\n\n\"Yes,\" the Captain agreed. His hand found mine and squeezed tight. I knew why he that wanted me to go back with him. I knew that he wanted to spend the more than night with me, wanted me to stay, forever, by his side.\n\nI also wanted to spend the more than night with him, but I could not go back to the ship. Not yet. \"I can't,\" I told them both. My voice was quiet but firm. \n\nThe Captain might have argued. Natch knew better than that. \"Well, I can't stay here,\" he said. His hand was bouncing on his leg. Now, I thought. Now is the time for concern. To have this man, so practiced at holding the things he felt out of view of those who might use them against him being so open, so careless. I watched him as his eyes darted around the brothel.\n\n\"It's nice here,\" Val's man told him. Natch shot him a look that he ignored with practice. \"There are baths.\" \n\n\"I know what the inside of a brothel looks like,\" Natch hissed. \n\nNow it was the man's turn to shoot Natch a look. \"Most men do.\"\n\n\"Fuck you.\" Natch was practically vibrating; it was a wonder that he did not fly apart at the seams. \"Can we get the fuck out of here. Please.\"\n\nThe man's head moved back slowly, almost imperceptibly. He seemed to see Natch for the first time. I watched him gently take in the smaller man, watched him see all the things Natch would usually be hiding, and considered how much Val needed this man in his business.\n\n\"I don't see why you can't just come with us to the ship.\" The Captain continued as if nothing was happening. For his part, he seemed at ease. Perhaps all the pressures he might have been feeling were condensed into a single hand, so tightly wrapped around mine. \"You're here, I'm here. We cut it a month short.\"\n\nI brought him close, pulling his arms around my waist. \"You know that I cannot.\"\n\n\"Fuck that,\" he stated. But, I noted with a smile, it wasn't a very angry statement. If only I could get him to spend the night with me...\n\n\"I gotta get out of here,\" Natch repeated, and the smile fell from my face. What to do with Natch? I wanted to be with the Captain, but it felt wrong to leave him alone. \n\n\"There's a bar.\" The man interrupted my thoughts. I turned my head to him slowly; his next words would determine if it was good that he had gotten my attention. \"We go to it sometimes after work. They have rooms, too.\" He was still standing carefully, \n\nresplendently, but there was something more real about his demeanor. \"I know the owner.\"\n\nNatch didn't relax. \"I don't have money.\" \n\nA hand was waved lazily; he must have gotten that from Val, it looked so familiar. Or maybe they all learned how to make the motions like that, easy, soft. \"I'll take the money from the till. Val won't mind.\"\n\n\"Horace will,\" I interjected. The hand wave this time was much less lazy, much more pointed. I met his gaze and smiled to see the mischievousness he hid behind his eyes. \n\nNatch was still not convinced. He stiffly extended an arm towards the Captain and I's entwined forms. \"Only if they come with.\"\n\nThe Captain winced. I didn't think he wanted to be in a bar right then; I didn't think he wanted to be around people at all, unless people included me and only me. \n\nBut there was a bigger problem with that plan, one I saw Val's man trying to find a way to voice. I did it for him. \"They won't serve me.\"\n\nNatch frowned. \"Because you're the brother of the Worm?\"\n\nI raised an eyebrow, saw Val's man start. Watched the way his gentle gaze became much more pointed on Natch's stiff form. \"No.\" \n\n\"Then.\" He stared at me a moment. Behind those light eyes I could see him making connections, trying to understand what this meant. I waited. \n\nNatch, as always, got there faster than most men would. \"He's your brother,\" he said. \"You're not his brother, he's yours.\"\n\n\"He's older than me,\" I replied, but Natch was right. I could see him processing this, what it meant for me to have someone like Val in my perceived possession. Trying to understand what I must have done to earn this kind of reputation. He should know. He had seen, even if it had only been bits. Even if he only had pieces. \"And they don't think of him like you do.\"\n\nNatch scoffed.\n\n\"Talk to the locals,\" I said softly. \"Go to the bar, ask around. Or don't.\" I turned to the man, still standing off the side. \"What's your name?\"\n\n\"Aman,\" he responded. His eyes were still on Natch. \n\n\"Aman will take you to the ship if you want,\" I said to Natch, knowing it was true. Aman would do whatever I told him to. \n\nBut I didn't think it would come to that. I had the feeling that Aman understood Natch, that he would do what Natch needed. \"But the Captain and I are staying here tonight.\"\n\n\"We are?\" the Captain said from my arms.\n\n\"Baths,\" I reminded him. I lowered my head to his ear. \"And I can get ropes. The beds here are sturdy enough to hold even me.\" \n\nThe Captain didn't respond except to pull my body closer to his. \n\n\"Which room?\" I asked, a little distracted by the sudden proximity. The Captain began teasing my shirt out from my breaches, seeking skin to draw his fingers across. \n\n\"The King suite is just off the balcony,\" Aman instructed.\n\nI turned to him and raised an eyebrow.\n\nHe caught my expression. \"It's just a name.\" \n\nNothing is just a name, I wanted to tell him, but the Captain's fingers had found my skin and I was lost. \n\n\"Do you require assistance finding -\" Aman began, but I already had the Captain by his questing hands and was dragging him towards the stairs. \n\nWhen somehow managed to keep this door intact when we burst though, which was good. I didn't think Val would have appreciated a smashed door; he was probably already working on fixing the one we had broken earlier in the day. \n\n\"Bath,\" I reminded him again, but his hands stayed tight on my hips. He leaned forward and nipped at my collarbone. \n\n\"Gotta get you dirty first,\" I heard him mutter. \n\nI have say, it was hard to find a fault with that plan. \n\nHe had me on my back on the bed, shirtless, by the time that we noticed the chest. \n\nIt sat next to the bed, which was the only reason we noticed it at all - it was in our way. It was dark, the color of the Captain's eyes, which had grown darker with the interruption. I smiled to make him wait and picked up the note waiting on the top.\n\nBrother,  the note read,  have fun. I hope your 'Sir' enjoys the toys.  It wasn't signed, but there was only one person who could have left such a note. \n\n\"Val,\" I sighed, feeling the Captain lean against my back. I held the note up for him to read. \n\n\"Your sir?\" the Captain asked skeptically, just a hint of amusement in his voice. \"Do you always kiss and tell?\" \n\nI shrugged. \"No.\" That was all I said. It seemed too much to explain Sybil to him just at that moment. \n\n\"Well,\" he said. He sounded all business, but I could hear the anticipation in his voice. \"Let's see what he's left us.\"\n\nI flipped up the latches and opened the chest. \n\nBehind me, I heard the Captain take in a sharp breath. I turned to him, preferring to watch his face rather than take in the contents of the trunk. I didn't care about objects; my Captain could undo me with just the barest whisper. What did it matter what this box of wood held?\n\nThe Captain's face told me that it mattered quite a bit.\n\nI watched his expression move through so many emotions that I did not have names for, that did not have a place on his face, mixed in with anger and lust and something that would have looked like wistfulness on a softer man. I waited for it to settle, waited for those brows to drop and his eyes to darken to just the right shade but it all just kept dancing, dancing, dancing and I grew concerned.\n\n\"Captain.\" I reached out and touched his shoulder lightly, and was surprised when he jumped. I think he was surprised as well, his face falling open to look at me. There was a sudden space in his expression. \n\nThere was a moment. And then every bit of that space was filled with a sudden crashing flood of hunger. \n\n\"First things first.\" His voice was low and easy, as if he did not hold the world in his expression. As if he could not make me come undone with just one command. He reached into the chest and pulled out an assortment of objects; a crop, some whip like things. Flails. He gathered them up into his arms and walked over to the window, where, without a moment's hesitation, he threw them from the room. \n\nHe reached out and grabbed hold of the shutters, pulling them shut and effectively cutting us off from the outside world. His task done, he turned back to me. \n\nWhatever had been at war on his face before, it was gone now. I wondered if he hadn't thrown it out the window with the objects; I did not have long to wonder that, because in an instant he was back to me, his hands pushing me onto the bed, his eyes pushing me into a place I was screaming to reach.\n\n\"On your back,\" he whispered into my neck. \"Get those hands above your head.\"\n\nI was instantly compliant. How could I be anything but, when he asked such things of me? Commanded? When I needed him in the ways that I did? \n\nFrom my position on the bed it was impossible to see him, but I could hear him rooting around in the chest again. I wondered what was left in there, after his efficient and instant purge. I wondered what he would bring to me. I wondered where he would bring me, what worlds he would take me to, what doors he would open. \n\nI did not have to wonder for long. \n\n\"Love.\" The Captain was back at my side, his fingers light on the skin at my hips. His lips dropped a kiss there the next moment; my body shuddered. \n\n\"So many things to I can do,\" I heard him mutter, \"so many options.\"\n\n\"So do them,\" I told him. His teeth immediately sunk into my skin at my demand, and I hissed. \n\n\"I will,\" he told me. Promised me. \"Oh love, I will.\" Those lips traced slow and light over my skin; fingers tugged on the waistband of my breeches. \"I'll do them one-by-one, and I'll do them slow. I'll make you feel every single one, make you beg for the next.\" He was inching my breeches down over my aching cock. I moaned, needing him to go faster, but I was under no illusions of control; he would do what he willed, what he needed; I was incidental, and yet I was everything, and I loved the contradictions he pushed from my soul. I felt his hand brush the first inch of exposed flesh and gasped, air rushing from my lungs uncontrolled. \"Make you need me,\" he whispered.\n\n\"I need you,\" I told him. \"Sir, please. I need you.\" \n\nI glanced down and found him hovering just above my half-exposed cock. The sight nearly undid me, to have him so near and yet to find such distance between our bodies. How was I expected to live with this man, when he continued to make me into such paradoxes? I groaned and pressed my head back into the bed, muttering curses. \n\nI felt his laugh on my body - cruel, I thought, cruel, but I would have it no other way - and then his head was pulling away. I mourned the loss for a moment before his body was pressed against the length of mine, his lips against my ear. I gasped as I felt his hard member crush against mine, his breeches the only thing separating us from the closeness we both craved.\n\n\"But first,\" he murmured. \"I need to tie you up.\"\n\nAnd then he was gone, and I was left cursing there on the bed, only the ghost of his laugh trailing down my skin.\n\nHe was back soon enough, I suppose. It wasn't soon enough for me, but I wanted him with me constantly, incessantly. \"Alright,\" he told me, somehow making his voice sound business-like beneath the desire I could hear swirling, pent-up. I needed him to unleash it on me, so that these things he brought up in me could find release as well. Instead, he sat beside me on the bed. I made an unhappy noise at how far away he was and got a hand on my stomach for my troubles.\n\n\"We've got options.\" I didn't want options, I wanted him. I told him that by pressing into his hand, trying my best to shift my body up so his hand would shift farther down my body; he pressed my fingertips into my stomach and held his position. \n\n\"Rope.\" He held it up briefly. \"Leather cuffs.\" I could break out of those easily; they were as useless as restraints as ropes. \"Or irons.\"\n\nI knew which the Captain wanted from how his breath changed, from the way his eyes darkened. I knew which one I wanted from how I wanted those eyes even darker. \"Irons,\" I told him. \n\nDark eyes landed on me and I shivered. \"Are you sure?\"\n\nI nodded. I was sure. \n\nHe leaned in close, his finger tracing down my ribs. \"Thank you,\" he whispered in my ear. I shivered again, my head moving back on its own accord to offer up my neck. But he was already gone. \n\nIt was not as easy as I wanted it to be, even at the Captain's hands, even in a place I knew I was safe. I was still on land. These were still irons. When I felt the first metal band clasp around my wrist I couldn't help the shudder that slipped over my skin, my body refusing not to react to the all-too familiar feeling. I took a deep breath. \n\n\"Love?\" The Captain put a warm hand on my arm. I let out my breath and tilted my head back until I could see his eyes looking down at me. I was not in the mines; I would never be in the mines again. I was here, I was with the Captain. I was safe. \n\nI smiled up at him. He hesitated, those expressive brows drawing tight until I brought my free wrist over to him and gently pressed against his hand. ",
        "He bound my manacled hands to the bedpost with the rope, leaving me stretched up and straining. I loved the feeling, loved the way I could hear the Captain's breath hitching as he looked me over. I pulled lightly on bindings and thought the Captain's breath might have stopped entirely.\n\n\"Fuck,\" he voiced quietly. His fingers ran down my body, starting at my wrists and ending just below my ribs. \"Fuck.\" \n\nThat's the idea, I thought. I stretched a little further and watched him go speechless with desire for me.\n\nI had time to smile before he dropped down to my lips, kissing me hungrily.\n\nHis hands never stopped their exploration of my body, the sensations of trickling fingers interspersed with the hard press of his palms to my skin. I gasped when he applied pressure; I thought my heart would stop while his fingers were so light my soul was being teased from my body. He caught my noises in his mouth and pressed them back to my lips with his tongue, making me understand the things he was doing to me, not letting me enjoy a moment without knowing that it was him who was giving that moment to me, that it was he who held my pleasure in the whirls of his fingertips and the callouses of his palms. \n\nHis hand made its way up to my neck and I loved him for it, needed his touch on all the parts that could make me fall apart. But he was teasing, holding back, controlling my fall and it was too much so I arched up into his hand and he reacted as he would with any body part that I pressed into him, that disobeyed him - he grabbed my neck and pressed down, hard.\n\nAt the sudden pressure I froze. Everything froze. There was nothing I could do except exist in the thousands of sensations, the absence of thought, that pervaded my being as his hand commanded the air from my throat and held the air in my lungs. I lay there, unable to move in the face of it all, unable to gasp or moan or voice my pleasure because of the hand on my throat, the danger in my body, the sea held at bay throbbing just under the warm, tight fingers of the Captain.\n\nHe, too, had frozen at the sudden and surprising escalation. Now he gently released the pressure, his eyes hard on my face as he watched for any signs of distress. I wanted to smile, or talk, or tell him that I was alright, but the sea was spreading through my body faster than it ever had before and I didn't know how to even create a voice, let alone make it do what I needed it to do. \n\n\"You okay?\" he whispered, his thumb lightly running just under my chin. The light sensation felt like lightning; I wanted to be struck. I wanted him to atomize me, to turn me to steam and salt and spray and I found my body pressing into the sensations without thinking. I had time to let out a moan before his hand was tightening again and I was lost.\n\nIt took a moment after the pressure lifted before I could return to the world around me from the world within. I felt the Captain's hand first, light and still on my throat; then I heard my own breathing, the blood rushing into my head. The ocean following, crashing, expanding. When I finally opened my eyes I found the Captain staring down at me, his free hand deep in his dark locks, his face open. His eyes dark. \n\n\"Fuck,\" he muttered. \"Do you know what you look like when -\" He tightened his hand just the slightest bit and I felt my body light up. \n\n\"Fuck,\" he said again. \"Jesus. Gods. Fuck.\" \n\nI had no need for the gods, for any of the beings other men might worship. What were they to me when I could have this man kneeling beside me, so perfect, so intimate? His was the only command I needed; the only one I would ever head. \"Fuck me,\" I whispered to him, feeling the way my voice had to slip past his hand. His control. I watched him swallow and knew he felt it too. \"Sir, please fuck me.\" \n\n\"Love.\" His eyes were wide and dark, so dark. I needed him so badly and he had barely touched me yet. \"I'm not going to last long enough for that if you keep this up.\"\n\nMy only response was to press into his hand again, pulling at my restraints in the same motion. His eyes flared for a moment, and then he was on me.\n\nHe straddled me so fast I didn't have time to think, let alone react; but what could I have done? His hair fell around my face, his fingers digging into the sides of my throat. \n\n\"Stop,\" he whispered. But he didn't command, so I lifted into his fingers and pressed my lips to his. \n\nHe indulged me just long enough that I almost forgot all the things that he was. Then he became lightning. \n\nHe moved so fast, so fast. One moment he was with me; the next he was gone, moving down my body with his mouth. His hands trailed behind his head, fingers raising fire over my ribs and causing me to cry out. My back arched, lifting me from the bed and causing me to pull hard against my restraints, but I barely felt it as the Captain's mouth wrapped around my cock.\n\nI only had a moment to enjoy the sensation before he was gone again. This time his hands led, pulling off my breeches and exposing skin for his lips to kiss and his teeth to bite. \n\nI begged him to return to me, begged him to come back. I wasn't sure where I was begging him to go; to my cock, to my lips, to my neck, but he didn't go any of those places. Instead, he disappeared.\n\n\"Sir,\" I begged. \n\n\"Hush,\" he retorted. \"I'm getting  fun .\n\nI wasn't sure what that meant, but I knew how my body felt about it. I laid there on the bed, the air swirling over the marks the Captain had already put on my body and making me feel like fire. \n\n\"Love.\" The Captain was back between my legs. He brought one of my ankles up around his shoulders, reminding me of the first night we spent together; only this time he didn't hold back, dropping just as many bites as kisses on the sensitive skin that lay there. \n\n\"Need you,\" I told him, feeling his fingers dance towards my exposed hole. \n\n\"I know.\" His fingers were there, but they were barely pressing. I needed so much more from him, such different things. I moaned my intent and pressed my head back against the bed. The Captain chose that instant to sink his fingers into my ass. \n\nI cried out in pleasure and pain; the pain lasted mere seconds as my body welcomed him, his fingers finding their place in my body, sending sparks of pleasure through my entire core. He twisted his hand and pressed deeper and suddenly my entire world fell apart and I called for him, needing him to do it again, to never stop, to never do it again because I was going to fall to pieces there under just the pressure of his fingertips.\n\nHe did it again and I all but screamed. \n\nHe kept me that way, riding the line between screaming with pleasure and begging him to stop, his fingers scissoring in and out of my ass with a precision that I had come to love. I didn't have words; I didn't have an end goal. I was so close to coming. I was so close -\n\nHe pulled his fingers from me. I gasped, wanting to cry at the sudden emptiness. \"Sir,\" I begged. I had no idea what I was begging for; I just needed him not to do what he was doing now, which was nothing. \"Sir, please.\"\n\nHe didn't seem to notice my pleas. \"You ready?\" he asked me, and I was, I was so fucking ready, and so I nodded and then almost immediately something pressed against me. \n\nIf anything was to be penetrating me that night, I had thought it was to be the Captain. There was nothing else that had ever crossed my mind. This wasn't the Captain; it was cold, and it wasn't the right shape. I immediately froze to feel something so foreign so intimately invading my body, but the pressure continued. \"Take it,\" the Captain whispered above me. \"For me.\" \n\nFor him, I would do anything. And so I relaxed and let it into my body. \n\n\"Fuck,\" he whispered. I felt the cool, slippery surface moving into my ass. My body was so desperate to not be empty that it felt like it was grabbing it in, but it was larger than I was used to. There was a moment where I thought I couldn't take any more.\n\n\"Just a little more,\" the Captain told me. I took a breath, and then it was in me. \n\nI felt full, and yet completely on edge. I wasn't sure that I was breathing, my body was so thinly spread. I lay there, still, my body exploring this feeling the Captain had given me and finding it incredible. The sea whirled around me, unwilling to settle in the face of all the sensations I was being made to bear. I could feel my body shaking; I wanted to shake more. I wrapped my hands around the bonds they lay in and breathed.\n\n\"Shit,\" the Captain whispered. \"Holy fuck.\" His hands ran over the scars of my thighs, then back to my ass. \"You look amazing.\"\n\nI glanced down at him and found his eyes staring up at me, searching. \"How do you feel?\"\n\n\"Fuck,\" I told him, my eyes nearly rolling back in my head at the simple exertion of making that word pass through my lips. \n\nHe raised an eyebrow. \"This okay?\" He tapped on the plug still deep in my ass. \n\nI lost myself in that moment, my body arching as the vibrations spread like electricity through my core. Each muscle spasmed and released in turn, some finding no resistance, some finding no resistance and others pressing hard against the plug pressed deep into my ass. When the wave passed I found myself tugged tight against the restraints at my wrists, panting. \n\nI only had a moment to gather myself before the Captain tapped again, and I was sent back into a world of sparks, and stars, and the press of midnight skies against my ocean of a soul.\n\nHis other hand at some point came to my cock, began sliding up and down it's length in time with the pulsing staccato he was creating in my body. I shuddered beneath his ministrations, writhing and calling out as my body willed; I was not in control. I came undone for him, the sea crashed out and flooded the room. I tasted nothing but salt spray and the unmistakable tang of electricity, hovering just in the moment before a lightning strike, unwilling to move away, unable to take this sign of danger as anything but erotic, as love. And still he gave me more, drove me higher, and I was nearly flying apart.\n\nHe began speaking to me at a certain point; it took me a moment to center back in on his voice through the crackling storm my body had become. \"Love,\" he was crooning, \"love, come for me. Fuck, baby, come for me.\" \n\nThe next time he tapped against the toy in my ass, I could no longer hold it in. I came so hard I ceased to exist. \n\nThe first thing I noticed when I came back to reality was my breathing, long and low, as the sea beat against my chest back where it belonged. The next thing I noticed was the emptiness. The Captain must have removed the plug. I wanted it back. I thought about telling the Captain that, but the thought slipped through my brain and out to sea before I could even begin to work on getting my mouth to respond. \n\nI felt like I was doing the same, floating in the sea, becoming lost in some great expanse. I wasn't sure where the shore was. I wasn't sure if I wanted to know. I was happy to just exist here, weightless, in the arms of the man who brought me such pleasure. Such freedom. \n\n\"Love,\" the Captain whispered. I might have responded in some way, hummed or nodded; I'm not sure. I felt his hands on mine, guiding them through space. He must have untied my irons from the headboard, I was able to think. Other than that, there was little to think about as my limbs traveled for him. My body was compliant. I was his to move. \n\nHis lips pressed into my neck. I sighed to feel his breath against my skin, so warm, so right. \"Love,\" he repeated. His hand sunk into my hair; his other continuing to bring mine down to his still-rigid cock. My eyes fluttered open at the feeling of his desire, of his need. \"Please,\" he said, and his word was both a command and a plea. I could ignore neither.\n\nTogether we began stroking his cock, his hand rough and controlling and gentle and everything around mine, his lips parted and pressed into the soft skin at the base of my neck. As the pace increased so did his breathing, his hand tightening in my hair. He began to whisper my name, how much he loved me, all the things he wanted to do to me. I moaned, trying to increase his pleasure by stroking him faster, but his grip was firm. His control was complete. \n\nIn time, his words turned to only curses and my name, then just my name. \"Sailor,\" he whispered over and over again, then just, \"love, fuck, oh love.\" As he came he said nothing, just sunk his teeth deep into my neck, his hand pulling my head back sharply by the hair. \n\nI waited until he was completely done, the last of his shudders passing through him into my body, my own skin prickling at the beauty of him, the desire he held for me under his skin, in his body, his very breath. Then I lifted my hands from between us and passed them over his head, causing him to pull away from me for just a moment. \n\nHe was back in an instant, guided by my hand at the back of his head. My other hand rubbed at the back of his neck, all I could reach with my wrists still caught up in the irons.\n\n\"Fuck,\" he whispered to my collarbone. I smiled and kissed the top of his head, letting my lips linger against the skin I found there. In return, he kissed the bite he had laid into my skin: I shuddered at the sensation. His arm came up under mine, wrapping around my back and draping over my scars. My arms were wrapped around his head and shoulders, keeping his close to me. We were entwined. One. As we were meant to be. \n\nWithout another word, the two of us turned to sleep. \n\n***\n\nI always knew what time of day it was, even without the aid of the sun. How could I not, when I carried the sea and all it's rhythms within my very body? \n\nAnd so when I awoke the next morning, I knew that it was nearing daybreak. The shutters were still closed from the night before. The Captain was still in my arms. \n\nI shifted slightly to bring him closer; in return, his body turned into me, his forehead nestling against my collarbone. He fit perfectly in the protective circle of my arms, his head naturally against my neck, his body the logical conclusion to the curves of my own, my body nothing but the casing for his. I rubbed my thumb along the base of his neck and knew that I could exist here forever.\n\nI couldn't, of course. Not today. The Captain needed to go back to his ship, and I needed to find the rest of my crew. We would be separated by days end. \n\nThe knowledge hit me suddenly, and with a violence that I had not anticipated. It hurt, suddenly, to hold him like that, so tight, so natural. Like I had only once before, the one morning we had together before I leapt from his ship into the ocean. \n\nWas this the way it would always be? Was this how I was to exist around him, constantly waiting for the next moment of pain? Only able to touch him, hold him, gather him tight to my chest and whisper that I loved him on mornings before he was to leave, before I had to go? I couldn't live like that, like this; if this lasted, if this was our future. To be be forever pulled apart, two currents forever diverging. Was he a frigatebird, beautiful and filled with all things oceanic and yet unable to land in the water? Were we to be forever in proximity, destined to be two things so intricately connected that we would never truly be apart and yet never be allowed to be close enough to touch? \n\nBut no. Sybil had told me; he would be my husband. I would be with him forever. I had to trust these things, had to know them to be true. Else I would be lost. \n\nI gathered him tight, not caring if I woke him. I needed to hold him, to feel him fitting against my body. I felt delicate, vulnerable, and the only way I knew to combat those feelings was to breathe him in deep, to know that he was here, safe, with me. That I was here with him. \n\nI had him for now. I would have him again soon. It was enough. It would have to be. \n\n\"Love,\" I heard from my chest, but I wasn't ready to move. Only when he began squirming in my tight embrace did I reluctantly release my hold. \n\n\"Goddamn death grip,\" he muttered. I sighed, trying to keep my troubles to myself, but the Captain noticed. His fingers reached up to trace my cheek. I let myself melt into his fingers, dripping my trust and self into his eyes as he asked me to with only his actions. \n\nI had him. It was enough. \n\nHe reached up and kissed me gently, pressing his lips against mine in a motion that caused me to turn to liquid entirely. When the kiss ended whatever tension I had been carrying was gone, replaced by the comfort and tranquility of his presence. Whatever the future held, I could handle it. So long as I had him.\n\nHe gazed up at me for a long time, just watching me. I looked back. It might have been to memorize his face, if I had not already done that. It might, then, have been a look to ask for trust, but we were trust incarnate. And so it wasn't any one thing past just looking. Watching. Being. And I would have it no other way, so happy was I just to exist in his presence. \n\nThen he smiled. And my world was filled with sunshine even before the sun rose. \n\n\"I was promised something about a hot bath,\" he said. I smiled back and began the delicate process of extricating our bodies from one another. \n\nIt took some time to get to the master bath; we had to find our way through each others limbs, and not be distracted in the process, which was hard enough. Then the Captain insisted on stopping to find the key to the irons that still bound my wrists. I told him I'd be happy to keep wearing them, but he just shook his head. \n\n\"Too damn distracting,\" I think I heard him mutter as he dug through the chest. I settled on the bed and waited. In the end, the key was found and my wrists were free. I celebrated by letting my limbs get wrapped up in the Captain's again. \n\n\"No,\" he complained. Quietly. I smiled and kissed him, pushing us both towards the room I knew held the bath. It took some time for us to reach it, but I didn't mind. From the noises the Captain was making, I quite think he didn't either. \n\nThe water was heated beneath the brothel using the volcano, and so it ran hot almost immediately. We let the bath fill, choosing to continue exploring each other's bodies rather than the room around us. When the water reached halfway, the Captain stopped it and stepped away from me. He rummaged through a few cabinets. \n\nI leaned against the bath's side. It was a large wooden basin, circular and deep. Even half full the water would come up to my chest when I was sitting. \n\nThe Captain found what he was looking for and made his way back to me. I smiled at the sight of him, naked and beautiful, as he drug a stool up next to the bath and placed the goods in his arms on the surface. Then he turned to me, capturing my lips in a blistering kiss.\n\nOne moment we were kissing; the next I was falling through space, hitting the water with a splash. I could hear his laughter from above me, could still feel the pressure of his push on my chest. I didn't mind, just sunk into the warmth, let the wet liquid spill over my skin and through my fingers, my hair, letting myself become completely submerged. Only when I heard the muted splash of the Captain getting in himself did I resurface.\n\nHe was grinning at me. I smiled back, best I could with just my eyes above the water. \n\n\"C'mere,\" he commanded, and I moved through the warm water until I reached his hot body. He grabbed my shoulder and pulled me around so that my bulk was resting against his slighter frame, my weight taken by the density of the water. \"Let's get you clean.\"\n\nThe soap he chose smelled of lilacs. I hummed into the water in approval as he sudsed up my hair, then lifted up my body so he could reach my neck, my shoulders, then each arm in turn. He took his time, working not just to clean the skin but to massage each muscle and soon I was all but becoming warm liquid myself, my mind filled with nothing but the tranquility of the sea and the feel of his gentle hands. ",
        "Each time his fingers reached a scar they paused. There were many pauses; it did not take away from the flow of his movements, but rather enhanced it with a rhythmic quality that I found incredibly soothing. He never asked after any of the marks he found. I think there were simply too many; it would have taken too much time. \n\nI was covered in scars, from head to toe. You do not grow up fighting and not have the marks to show for it. And so there were the battle wounds, the knife slices, the stabs. The swords I hadn't dodged quite quickly enough. A thousand men's deaths, written on my body for all to see. \n\nBut there were many other scars, ones that had served a different purpose. Ceremonial. Ritual. Minnie had taught me blood magic, Cassandra a bit more. I was not always dealing with the sea, an entity that would respond to my emotions, my thoughts. My dreams. There were other things in the world. Hungry things. There were times where it was necessary to give of myself to gain their attention. \n\nThere were times when it was prudent to turn their attention away.\n\nAnd then, of course, there was my back.\n\nThe Captain pushed me forward and I leaned my face so that it nearly touched the water, exposing those scars to him. He hesitated for only a moment before rubbing the soap over my back, his fingers applying the gentlest of pressures. My body, already relaxed, floated apart. \n\nWhen he pulled me back to him I thought he might say something. About the King, about our shared pasts. Instead he said, \"You got a haircut.\"\n\n\"Yes.\" I raised a hand to the still-soapy locks. \"Do you like it?\"\n\nHe hesitated long enough that I actually stared to get nervous. (How could this man always do this to me? I faced down the strongest sea witch of our age, had stood on the lip of an active volcano that she controlled and locked her to the shore - and this man made me nervous when I asked him about my  hair?) \n\n\"It makes you look less shaggy,\" he finally said. \"A little more scary.\" He put his fingers into the length at the top and my body responded with a shudder. He tilted my head back to where our eyes could meet. \"So long as there's enough for me to grab, I'm happy.\" A sudden frown appeared on that face, those eyebrows snapping together. \"But you know you can do whatever you want with your hair. Don't. Because of me. You know?\"\n\nI smiled at him softly. I knew. He also knew that at the end of the day, I would always keep enough length for him to grip, and that was just as much for me as it was for him.\n\n\"I'm gonna dunk you now, okay?\" I nodded, letting him press me beneath the surface of the clean water. \n\nI took a moment to enjoy the feeling of suspension before I focused on the Captain's hands slipping over my body, through my hair, shucking suds from my body. All too soon he was pulling me back to the surface. \n\nI smiled and shook my hair out, causing him to laugh. \"Your turn,\" I told him, but he was already dunking his own head. \n\n\"No offense,\" he told me, \"but I just don't think you're used to handling this much hair.\"\n\nI snorted and pulled him towards me before he could protest further. On the stool I found a shampoo that I had used to enjoy back before my hair had been taken from me, and I worked that into the Captain's scalp. Soon he was floating before me, his eyes closed and soft noises of enjoyment falling from his lips. \n\nI didn't dunk him to rinse his hair, but instead pulled the warm water up and let it trickle through his curls. He sighed each time I pressed another handful to his head, melting in my arms further. When I had all the shampoo out I began rooting about on the stool next to the tub. \n\n\"Whatcha looking for?\" he mumbled, sounding half asleep. \n\nHe had the wrong kind out. I pulled myself from the water, causing him to jump.\n\n\"Fuck, Sailor.\" He frowned up at me as I moved across the room. \"You're getting water on the floor.\"\n\nI ignored him, rooting through the cabinets. I had brought back a bottle of my favorite maker's concoction back with me the last time I had visited; if Val had not stocked this, of all rooms, with the stuff I would be disappointed. \n\n\"Sailor,\" the Captain complained. \"Get back over here.\" \n\nI found what I was looking for in the back of the cabinet, still mostly full. I grabbed it and headed back to the the tub, slipping in with barely a ripple. \n\n\"Fuck,\" the Captain voiced grumpily, returning to my arms. I began pulling the conditioner through his curls, separating them gently. when it was all worked through I braided the length of it, then slipped the end back into the main twist. \n\n\"Let that soak in,\" I instructed.\n\n\"It smells amazing.\" His eyes were closed; his head drifted to settled on my shoulder. I moved him so that he was against the side of the tub so that I could find my way into his arms. He cracked open one eye to look down at me. \"How do you know how to do all of this?\"\n\nI shrugged. \"I used to have more hair.\"\n\nHe snorted. \"No shit.\" His hand when back into my short locks, running through the silky lenghts. \"What happened?\"\n\n\"The mines.\"\n\nHis hand froze for a moment, then continued. \"Of course. I'm sorry.\" \n\nI nestled into his chest. He had nothing to apologize for. \n\n\"I can barely imagine you with long hair,\" he murmured behind me. I felt him tug lightly on the locks and hummed in pleasure. \"You're full of surprises, aren't you?\" \n\n\"Aye,\" a voice agreed from the doorway. \"He is, isn't he?\" \n\nThe Captain jumped. I didn't. I'd known Val was in the room the moment he'd opened the door. \n\nI lifted my head to watch him sniff the air, knowing he was smelling the conditioner I had in the Captain's hair. \"You found that shit?\"\n\nI shrugged. \"It's the best.\"\n\n\"It'd better be. Shit's expensive.\" He leaned against the doorway. \"I've got your boy downstairs.\" He paused. \"Looks a bit worse for wear, but I've got him.\"\n\n\"You didn't hurt him,\" the Capitan told him. It wasn't a question, but rather a promise. I raised my eyebrow and looked up at him. \n\nBut Val was barely phased. \"Think he did that well enough with the drink last night. Better get down there.\" He looked to me. \"He could use a Breakfast Special.\" Then he was gone, two towels left in his place.\n\n\"Huh,\" I said. \n\nThe Captain looked down at me.\n\n\"We forgot about towels.\" I tugged at his shoulder. \"Rinse.\"\n\n***\n\nWithin the hour we were down on the brothel floor. \n\nThe Captain stopped me right before we turned to join the others. \"Come back with me.\"\n\nI didn't answer, just tightened my hand on his. His hair was still wet, dripping lightly on his white shirt and pressing windows of translucence against his skin. I reached out to touch one but he didn't let me. I watched him as he whirled from me, then sighed and followed him into the room.\n\n\"What the fuck,\" I heard Natch say. He sounded drained. \"Can we go back now?\"\n\nI caught up to the Captain and stood close to him, but not touching. I knew this was a delicate moment for him. It was for me. I hated leaving him, but it was necessary. \n\n\"Donno,\" the Captain snapped. \"Can we?\"\n\nI winced. I wanted my happy Captain back, warm and relaxed in the bath. But that time was past; it was now time to deal with what the present brought. And what the presence brought was one of Val's men.\n\n\"Finn requests your presence.\"\n\nThe Captain frowned further at the sudden appearance, as well as the pronouncement of knowledge that he should not have. \"How the fuck would you -\"\n\nThe man bowed and floated off into the brothel. \n\nThe Captain turned to me. He pointed in the direction the man had come from. \"The fuck?\"\n\nI shrugged. \"Val might be watching your ship.\" \n\n\"Might be?\" The crossed arms were back. \"What does that mean?\"\n\n\"He's watching your ship,\" I confirmed. Val watched everything. \"How is Finn?\"\n\n\"Why is he watching the ship?\"\n\n\"Because he watches everything.\" I watched Natch out of the corner of my eye; he looked more hungover than I had seen a man in a long time. \"I think you should take Natch back.\"\n\n\"He -\" The Captain paused and looked over to Natch. \"Fuck.\"\n\nI could no longer hold back; I would be without the Captain for another month. To not touch him now was pointless. I pulled him into a tight embrace. \"I'm sorry.\"\n\nHe let me hold him, but didn't hug back. I could feel his surliness in the limpness of his arms. \"For what?\"\n\nFor the fact that we had to leave. For all the stress you've been through in the last day. For not being able to come with you. \"For my brother.\"\n\n\"Fuck that.\" His arms snaked around my waist and hooked into the back of my breeches. \"Fuck him.\" \n\nI smiled quietly into his hair, knowing that all was well. We stayed like that for a bit, until I blew a breath of warm air into his head all at once. He grumbled at me. \n\n\"Natch,\" I reminded him quietly. He nodded. \"I'll walk you down.\"\n\n\"To the ship?\"\n\n\"Close.\" It wouldn't do to be seen by the ship; they would want me to come on board. And I couldn't do that. I'd never leave. Plus, being at the docks made my soul itch. \n\nWe gathered the slightly shocked Natch up and gently prodded him through the streets. I guided the Captain into a conversation about the ship and the men's well-being as best I could. He didn't want to talk about it; he wanted to walk, silently, his arm around my waist. He'd pulled up my shirt and his fingers were light against my midriff. \n\n\"Finn is fine,\" he grumbled. \"Thron is fine, everyone is fine.\"\n\nNatch made a face. The open air of the street seemed to be doing him good. \"Everyone is not fine. Ichor is dead.\"\n\nI raised an eyebrow at the Captain. \n\n\"Fine,\" he admitted. \"Ichor is not fine. But he's not not fine, because he's dead. He's just not existing anymore. So. Not worth thinking about.\" His fingers had found my hipbone, making it hard for me to concentrate on his words.\n\nI pulled his hand back up to a less distracting spot. \"What happened?\"\n\n\"Wicky,\" Natch started, while the Captain let his hand fall back down and said, \"Nothing.\"\n\nThey stared each other down for a moment.\n\n\"Nothing,\" the Captain repeated, and this time Natch didn't contradict him.\n\nI sighed and removed his hand from my side completely. He glared up at me but softened when I gently laced his fingers through mine. \"Wicky?\"\n\n\"Middle of the night,\" he told me. Since his fingers couldn't be against me, he seemed determined to press his body as close to me as possible. It made walking difficult. \"I think he knew his time was up. He slipped out with a few of his men.\"\n\n\"Ichor tried to stop him,\" Natch put in. \"They slit his throat.\" He and the Captain both made quick signs of respect for the dead. \n\nI thought about that for a moment. I had liked Ichor, in the end. I had plans for him, a place for him on the Captain's ship. That was too abrupt a conclusion, killed at the hands of someone so bland as Wicky. \n\n\"Was he buried with silver?\" \n\nThe Captain shot me a frustrated look. Of course he was; the Captain would have seen to it. \n\n\"And gold,\" Natch told me anyway. \n\nI nodded and squeezed the Captain's hand even as my feet came to a stop.\n\nThe Captain immediately stopped as well. \"What is it?\"\n\nThe harbor was around the bend. I could feel it in my stomach, in my bones. In the way my feet hadn't wanted to stop, but wanted to speed up, to run. The way my body was reverting back to unsettled, uncomfortable, like I'd never quite gotten my land legs. \n\nI hadn't, not quite, but I was close and I was determined to keep them. It was embarrassing to lurch about when you were with someone so graceful as Val. \n\n\"This is as far as I go,\" I told them with as much conviction as I could muster. My body screamed to go further; for the Captain, for the sea, for the ships that creaked just past this row of houses. But I had to stay here. \n\n\"You can't come with?\" Natch looked sad; the Captain wouldn't look at me at all. \n\n\"I'm waiting for Sneg,\" I admitted. I wasn't sure if I should tell this to Natch, wasn't sure how he'd react, but his face lit up like a sunrise and I couldn't help but smile back. \n\n\"More important than coming with me,\" I thought I heard the Captain mutter, and I pulled him in for a deep kiss. \n\n\"No,\" I reminded him when we broke. \"But I promised you a ship. And you promised me a crew.\"\n\nI felt him sigh. \"I just miss you.\"\n\nI knew. I felt the holes in my soul already threatening, just at the thought of him walking away. I squeezed his arms to show my understanding and he sighed again. \n\n\"One more month,\" I told him quietly. \n\n\"You'd better not be fucking late.\" \n\nI couldn't help it. I laughed. \n\nI watched them leave, feeling the weight that was loss settle over my shoulders, heavy and thick. I dug my fingers into my arms to keep myself from running after the pair, Natch back to shambling, the Captain stiff and careful. I had never seen him move so deliberately. \n\nHe never looked back. I was thankful for that. I hated him for it. By the time they turned the corner my fingernails had drawn blood.\n\nI watched the road a moment more, waiting to see if they would come back. I knew they wouldn't, but my body wasn't ready yet to move. It was so heavy, so dense with all the things that came rushing in after the Captain left and yet so filled with emptiness. I took a moment to readjust to the contradiction I became when not in my love's presence.\n\nWhen I turned around, I found Val behind me. \n\n\"So,\" he said.\n\n\"So.\" It was back to business, now. I had things to do, people to see. Val had a glint in his eye that said he'd rather talk about other things, perhaps the gifts he'd left me (us, my body reminded me; I couldn't think of that then, had trouble thinking of him when he was so close and yet so unattainable) but I was moving forward; I couldn't dwell on the past. Not when the past held the Captain. \n\nThe future held the Captain. I had to get there. Fast. \n\nI took in a deep breath. I didn't think Val was going to like this. \"Where do they keep the prisoners on this island.\"\n\nVal looked confused for a moment, then his face darkened. \"Oh,\" he said, his hands coming to rest on his hips. \"Oh, hell no.\"\n\n***\n\n\"This is the stupidest idea you've had since you've been back.\"\n\nVal was leaning on the damp wall of the cells, watching me go from cell to cell. A quick glance, few quiet words, that was all it took to see if they were acceptable; then it was on to the next one. \n\n\"I mean, you're dead. What's to say that Dave doesn't just grab you? Claim your dead ass for him?\"\n\nI didn't have an answer to that. I hadn't had an answer to that the first time he'd brought it up, or the second. Or all the subsequent times. All I could tell him was that it wasn't a portal, just a doorway; I was just going to be knocking. Maybe Dave wouldn't even answer. That had happened before. \n\n\"With you knocking? Dead?\"\n\n\"Nameless,\" I reminded Val. \"Maybe he won't recognize me.\" It was something I was actually worried about. These kinds of trades relied on past relationships, the trust built up over years of smaller trades and meetings. Jumping into a named trade?\n\n\"Maybe that's a good thing. You promised yourself to him, brother, remember? He's not going to be pleased that you're dead and not his.\"\n\nI ignored him. There was nothing to be done about it.\n\nThe man in the second to last stall nodded to me. He didn't look fearful or upset, just resigned. And he wasn't sick, or injured. A fair trade, I thought. A bit small, but under all that dirt I thought he would clean up nice, and that counted for something with Dave. I nodded back. \"Val,\" I called. \n\nDespite all his reservations, he was the one who had gone out and found the supplies we needed, had nagged me about the right salt, not from the sea but from the mines up in the mountains, the best runes. \"About time,\" he muttered now. He came over to me and handed me a small bag. \n\nI showed the man where to kneel, then let myself into his cage. He knew what would happen if he ran and didn't try; I was thankful for that. It would be a waste to kill him before the ceremony. \n\nThe salt circle was poured quickly, and poured thick. The man followed my motions with eyes that were intelligent but tired. It will be better for you where you are going, I promised silently. A fresh start. A new chance. \n\nI handed him a slip of paper. When I had written it the words had been red, metallic. The cut on my forearm still throbbed - I had not had time to wash it yet in the sea. Now the words had faded to a dull brown, belying the importance they held. The power they contained. \n\n\"Are you ready,\" I asked. When he hesitated, I crouched before him. \"You can still say no.\"\n\n\"I want this.\" He didn't sound especially solid, but he did sound sure. \"Gotta be better than dancing at the end of the rope.\" \n\nI nodded. It was. I handed him two pieces of silver and one piece of gold, stamped with Dave's insignia. He ran his fingers reverently over the horned figure. \"Davey Jones, then.\"\n\nI watched him. \n\nHe sighed, closing his fist around the metal. \"I did always want to meet him.\"\n\nHe didn't say what we both knew. If he took his end on land, like he was supposed to, he would never reach the death god's realm. If the executioners did bury him at sea, which they almost never did, they would strip him of all precious metals first, take anything he could use to pay his fares, and he would wander forever, lost, in the cold currents of the cross worlds. \n\nI was offering him a sailors death. It was good that he took it.\n\n\"Ready?\" I asked again.\n\n\"Aye.\" He closed his eyes. His hands were tight around the coins. \n\n\"Val.\" I looked back to my brother, but he shook his head.\n\n\"Nope.\" He'd gone back to leaning on the stone, his shirt becoming damp from the dewing air. \"You leave me the fuck out of this.\"\n\nI shrugged and turned back to the man before me. Fair. Dave had never liked Val, and Val Dave. Something about expectations, or lack of trust. But we had done many deals before, Dave and I. My old personal guard had almost all held the marks of spending time in his halls. \n\nI briefly wondered where those men might be before forcing my attention back to the task at hand. There would be time for that later. Now, I had to get this right. \n\nI lay my hands just on the right side of the salt circle - my side of the circle. The side of the living. Then I did the only thing I could do.\n\nI knocked.\n\nThere was a moment of complete silence before the floor opened up, and the man before me was swallowed into darkness so complete there was no hope of seeing where he had gone. \n\n\"Hope you gave him enough to pay,\" Val intoned drily, but I had, and besides he had come in living and his soul would be another token. Dave would treat him right. \n\nBut would he honor the bounds of an unsigned trade?\n\nI watched the sudden hole in the floor before me, demarcated by a salt boundary, the darkness endless and discomforting in it's strangeness. It looked almost like a puddle, the shadow was so thick. So viscous. As though I could reach out and scoop up a handful of it, bring it over to Val so that we might examine it in greater detail. But I knew to do that was foolish - reaching down into Davey Jones's lair was something even I was not prepared to do. His was another world, and one I had no intention to see prematurely. And yet, here I was, sitting in a cellar staring down into it...\n\nStrangely, I found myself missing the Captain. It's the same color of his eyes, I thought. And he would laugh, to see such a sight, so out of place in the cells. \n\nEven as I thought of him, I scowled. Was there nothing that did not remind me of him? \n\nAs I considered the implications of that, the idea of living a life where everything was the Captain, every breath, every memory, every moment (and I have to admit, it was not an unattractive idea), the stillness of the black pool before me was shattered as a hand thrust upward. I was so shocked that I almost forgot to react. It was only as the hand came down towards my salt circle that I reached forward and grasped the reaching fingers, pulling upward with all my might. I had no intention of letting this body destroy my salt lines; the last thing I needed was to curb an infestation of the restless dead. ",
        "That movement, reaching over the salt and putting myself in some danger, a movement I had made many times in my trades back when I was named, when it was known who and what I was coming into these negotiations, it was not one I think the being on the other end was expecting.\n\nA second disturbance snapped the cool surface of black as a grey tentacle whipped up from the depths, wrapping around my arm. Almost instantly the thick scent of Dave filled the air. It's an indescribable smell - wet, the kind of wetness that clogs your lungs, like moss on land or the cloying fog that drifts over the sea. But denser. As though you're truly breathing the sea. And it smells of the sea, of salt and decay and life and that distinctive flavor of seaweed, topped with the scent that only the sea has, the one that isn't any other thing and can't be ascribed to any one part but is in fact the sea as a whole. The soul of it. \n\nAnd not just the sea. The darkest parts. The deepest layers. Where oxygen does not even go, where bodies sink to die and small creatures make cities out of bones. The places where no man should ever dare to go, to dream, to think.\n\nBut I am no man. I am the sea. And so I stared balefully down at the writhing appendage restricting my movement, wondering how much longer we would play at this game. \n\nNot long, it would seem. The tentacle slinked from my arm, silently disappearing back into the black. I watched it go. If Dave did not know who had made the deal before, I was pretty sure he did now.\n\n\"Brother.\" Val's voice held caution, questions. He had watched the whole situation unfold and I can only imagine what it looked like from the outside.\n\n\"He was just saying hello,\" I responded calmly. In fairness, it wasn't entirely untrue.\n\nEntirely. \n\nI returned to carefully lifting the man I held out of the darkness. First, the arm revealed itself, complete with the requisite marks around the forearm that were always present when men returned from Dave's halls, then a shoulder with a lolling head. I raised an eyebrow to see the scar Wicky had put under his chin; he'd never gotten a better blade, I saw. A shame for Ichor, who would have to wear the result of it for the rest of his life. \n\nAs it were. \n\nWhen I had him out fully, the portal closed silently behind me. I was glad of that. I had no control over the state of this doorway - if Dave had decided he wanted to come out and talk, I couldn't have stopped him. I didn't feel much like speaking to him just them, explaining my death. My lack of presence in his world. How the sea, as always, had came first. \n\nHow many times had I had that conversation? The sea is primary; the ocean takes precedence. I may have promised something, but if the sea asks for the same thing, then that is the end and the promise must be broken. I can't control this. I can't stop it. \n\nIn this case, it was my death. In so many others, for so many others, it was just the opposite. How many people had accused me of giving my life to the sea, rather than to them? \n\n\"He isn't breathing,\" Val sighed, annoyed. \n\n\"Give him time.\" I settled myself against the cell wall. He would have been existing aquatic, anaerobic. Coming back to oxygen would be.\n\nOne of my men once described the experience as electrifying.\n\n\"And step back,\" I warned Val as I remembered the experiences I'd had with fighters previous. \n\nVal frowned up at me. \"Why?\"\n\n\"Because he might -\"\n\nIchor sat straight up, gasping, for all of a second before he was on his feet and taking swings at Val. Val dodged them, managing to make it look easy. It couldn't have been, not with Ichor as he was. I knew from past experience how much faster men were after death. \n\nI sighed. \"That.\"\n\nIchor soon realized that trying to hit Val was a futile sport and gave up, but his body was still burning at a pace he hadn't existed at in some time. Perhaps never. He took off down the hall, eyes wide, slamming into walls with the force of his inertia. \n\nWe listened to him race down the hallway.\n\n\"Shouldn't we go after him?\"\n\nI shrugged. He had nowhere to go, and doubly nowhere to hide. It was better to let him burn off the excess oxygen he suddenly found himself with, then go and talk to him. \n\nBesides, he was naked. At some point Val would be called to deal with the crazy naked man running through the streets anyway. \n\nVal straightened his clothing. \"Well I, for one, don't want him running amok with my civilians.\"\n\nI shrugged again. I didn't seen Ichor as the type to randomly attack people. Although he had attacked me, but that had not been random, and he'd had the decency to apologize. \n\nBesides, most of the men I'd brought back had wanted nothing to do with people when they'd come back. They'd said they'd smelled of sweat and life, felt sticky against their very existence. It had been torture, for a long time, to exist around them. \n\nThere were so many fucking people on Barrow. \n\nI sighed and stood. \"We'd better go find him.\"\n\n\"That's what I've been saying!\"\n\nI rolled my eyes over to him and shot him a long look. He pulled himself off the stone and started down the hall. \"Fine. But you'd better clean up that fucking salt circle. Or else people are going to ask questions.\"\n\nPeople were going to ask questions about the missing man, about the open door. I stared balefully at the salt, the humidity making it nearly solid. \n\nI closed the door with a snick and walked down the hall, knowing it would have locked behind me. Now there was one less thing to ask questions about. In the end, I thought the salt circle answered anything the men might think to wonder; if it didn't, they lacked either imagination or information. Either way, they bored me. \n\nVal was waiting for me at the entrance of the prison. \"Did you clean up the salt?\"\n\n\"No.\" I moved forward, looking for the least populated area. Ichor would go where there was no one. \"Where is there a large open space? Not filled with.\" I waved my hand. \"People?\"\n\n\"White Beach. Or the top of the mountain.\" He frowned at me. \"Do you have any idea how expensive that salt was?\" \n\n\"No.\" Unlike others, I didn't put a price on men's lives. I started off towards the beach. He had just come from the sea; the air would hurt him, the people would frighten him. He would return to the sea. I know I would. I thought of something as I moved my way through the streets. \"Do you know how expensive my life was considered? The first time I was sold?\"\n\nI felt Val looking at me. \"No,\" he said slowly. \"How expensive?\"\n\n\"Not expensive as you'd think.\" For the Crown, I thought. For me, the price was steep. \"You can't reuse the salt anyway.\"\n\nVal sighed. \"I know. But still.\"\n\nBut still. I moved with Val towards the beach, hoping that when we got there we would find our newly live man and no one else. \n\nBut my life is rarely so simple. Ichor was there, yes, a dark lump against the bright white sand and gentle waves, but there was another figure. Thin. Pale. Hair so light they nearly blended into the beach. \n\nThe figure sighed as we approached. \"You have some nerve,\" they told me.\n\n\"Sneg?\" Val asked, eyes taking in the all-white clothes, the waist-length blonde hair. \n\n\"Sneg,\" I confirmed. \n\n\"'Sup,\" they responded. \"When the fuck were you going to tell me you used to be the King?\""
    ],
    "authorname": "nakamook",
    "tags": [
        "gay bdsm",
        "gay male",
        "gay submission",
        "handcuffs",
        "gay novel",
        "gay romance",
        "gay fantasy",
        "gay d/s",
        "gay pirates"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-12"
}