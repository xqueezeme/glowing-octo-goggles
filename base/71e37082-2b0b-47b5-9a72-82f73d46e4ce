{
    "title": "Secret Smiles and Three Little Words Pt. 30",
    "pages": [
        "This section includes some information that I hadn't even thought about until it was brought up. This has information that was inspired by Crazy_Christine, some answers for you, my Lady. It wasn't until you wondered that I thought on it, it was in my head but never fully brought out. I hope this answers some of your questions. \n\nA special thanks to gentleoneexplorer and Silentsubmissive for their continuing encouragement through my email and on the feedback portal. \n\n***** \n\nChapter 36* \n\nShe walked softly in the sand out towards him, the sun just off the horizon, peeking over the trees. He sat on a towel, nude, which she was still getting used to, watching the ocean roll in and out on the beach. \n\n\"Good morning,\" he said when she was near. \n\n\"Good morning!\" she smiled as she sat down, gingerly. He shook his head at her but she leaned in and kissed him with a smile. \n\n\"I wish you wouldn't have done that,\" he said to her as she rested her head on his shoulder. \n\n\"I'm ecstatic that I did!\" she countered not looking at him. \n\n\"It could have waited,\" he said softly. \"I was in no hurry.\" She huffed out a disbelieving breath. \n\n\"You just don't get it, do you?\" she asked him as she watched the water. \"Unlike what you believe, I don't have a desire to dominate someone. I do, however, have an overwhelming desire, an insatiable desire, to please you. In every way imaginable!\" She looked to him and he saw the passion in her eyes. \n\n\"I can't explain it, I've never felt such an overwhelming force in my life! The only thing that comes close, is my art,\" she told him kissing his outer arm. \n\n\"Seeing the look on your face, when I please you...well that is what I'm in this for. It's not the orgasms. It's not the way you make me feel while we are in a scene. It's seeing your face after that scene. Seeing your face last night as I finally got to please you in a way I hadn't before,\" she shrugged as she couldn't come up with the words to adequately describe the internal thoughts and feelings she had. \n\n\"You are the first woman in my life, that has pleased me in ways I never thought possible,\" he told her bringing her tears to the edges of her eyes. \"I just want you to know something.\" He let a smile slither out. \n\n\"And what is that, Sir?\" she smiled with him. \n\n\"If you leave me, I'm going full on stage five cling on...I'm talking boiling rabbits and shit,\" he threw back at her. \n\n\"I like rabbit stew,\" she smiled as the tear fell. \"But I promise you, that will never enter my mind. I'm here for the long haul. I'm here until I can't breathe anymore.\" \n\n\"Then we are on the same page,\" he nodded. \n\n\"So there is nothing left to fear,\" she smiled. \n\n\"Have I given you something to fear?\" he asked her. \n\n\"Every day,\" she smiled. \"When I can't touch you, I realize just how empty I would be if you aren't there.\" \n\n\"Touch me,\" he said firmly. \"Anytime you want.\" \n\n\"I can't,\" she huffed out a laugh. \"We are not in the vanilla world.\" \n\n\"Then I'm changing the rules,\" he said stroking her face. \"Touch me when the desire strikes you.\" \n\nShe reached up and stroked his face. Her fingers quivering with happiness. \n\n\"Any chance I can get you to stop spending lavishly on me?\" she asked. \"Seeing how you are in a rule changing mood?\" \n\n\"None,\" he said firmly which caused her to laugh. \"I like spoiling you. I like spending my money on you, it gives me great pleasure.\" She nodded that she understood. \n\nHe pushed her back into the sand and covered her body with his, his mouth tonguing gently on her lips before closing the gap to kiss her. He maneuvered between her legs and she wrapped her arms around him. Her fingers snaking into his hair and that brought out his smile. She matched him. She finally had what she wanted, permission to touch him as she pleased. \n\nShe gasped as she felt him enter her, her body screaming for him to do so. He continued to kiss her, his hips grinding into her slowly. Alex lifted her legs and wrapped them around him, her feet pulling on his backside, urging him deeper within her. \n\nHis lips devouring around her. First her lips, then her ear, then her neck before falling back to her lips. Their tongues battling one another in a playful game of swordsmanship. \n\nHer fingers pulling at his hot skin, her nails digging slightly as she pulled on his broad shoulders, holding his body tight to hers. Her teeth gnashing on his shoulders when his mouth wasn't covering hers. \n\nHe pressed off the sand and hovered over her, his hands in the hot sand on either side of her head as he thrust into her. Her breasts jostling with his thrusts, jumping as he increased his speed into her. He looked down and saw the nipples hardening in her sheen of sweat brought on by the heat of the early morning, and their lovemaking. \n\nShe used her grip around his neck to pull herself up to him to nibble on his chest as he continued to pound away at her. He leaned back, his knees coming under him as he sat on his heels, his cock never leaving her. She laid back and watched him.  \n\nHe lifted her legs up and put them into the crook of his arms, then leaned forward, forcing her feet up near his head. She smiled at him, and she was thankful for being somewhat flexible as this position allowed him a deeper penetration into her.  \n\nHe was now in a near push up on her while he was in her, her legs folded up and the only joining of their bodies was the way their sexes intermingled. She was staring up at him as she grunted with the force of his thrusts. Her body on fire as her orgasms began, first one, then another, then another. \n\nThe only time she would not watch his handsome face was when her orgasms forced her eyes closed. She wanted to watch him, to see his face when his orgasm hit. She was under the same impression he was when her orgasms came. Nothing pleased her more than his orgasm. When his body would stiffen, his orgasm would flow from his body into her hotly. \n\nShe watched it build on his face and smiled as she bit her lip. \n\n\"Cum for me Sir,\" she begged. \"I need your cum!\" she egged him on. \n\nHe doubled his speed and his force, now her feet were near her shoulders as he pummeled her sex with his cock. Then with a shudder she had her wish. It flowed from him as he crushed her lips with his and stared into her blue eyes as he erupted in her. \n\nFor the first time since they were together, Alex thought about how it would please her for this moment, his orgasm into her would cause a life to spring from her body. No they weren't married, and no they may not be ready. But the time spent with Nora had her thinking how wonderful a father he would be. And she wanted that. Soon. Sooner than she had ever dreamed, but this man had her thinking those thoughts. \n\n*** \n\nThey were swaying in the hammock, this was what she was loving more than anything. More than the sex, more than the fact that he wouldn't be leaving on some call at any moment. It was these tender moments where they were just lying together, touching one another, that she was living for. \n\nNow she lay in his arms, both staring at the palm trees above their heads, the white wisps of clouds on the perfectly sunny day, and just beyond that, the blue he said reminded him of her eyes. Soft, deep and soothing. \n\nThey weren't talking, just swaying with the flick of his leg every once in a while as it hung over the side to keep them softly swinging. She in the crook of his shoulder as his arm was draped over her, his hand wrapped into her fingers. \n\nHer other hand up and stroking through his dark hair, enjoying her new found freedom to touch him. She reveled in it. Now there wouldn't be that regret of touching him and having to stop. Now she could touch him, at any time, just to make sure he was real. \n\n\"Can I ask you some questions?\" she asked him dreamily. \n\n\"Of course,\" he laughed. \n\n\"Some may be painful,\" she warned him. \n\n\"Ask your questions,\" he said softly. \n\n\"Tell me about your parents,\" she whispered. \n\n\"What do you want to know?\" he chuckled seeing this was one of the question she was worried about. \n\n\"Everything,\" she said. \n\n\"Well,\" he shrugged. \"Of course you know, my mom was teacher, we lived in Minneapolis. My dad was the janitor. They met there, her in her first year, he in his second. A kid had thrown up in the classroom on her first day!\" \n\n\"Wow! Welcome to teaching!\" Alex laughed. \n\n\"I know,\" he smiled kissing her head. \"My dad said their marriage was built on vomit!\" This caused Alex and Gavin to laugh together. \n\n\"God they loved one another,\" Gavin said with a shake of his head and a wistful smile that Alex didn't see, but she could feel. \n\n\"I used to go over to friend's houses and see how their parents acted then thought they were weird because their dad didn't bring home flowers randomly. Or gifts randomly, things for no reason at all,\" Gavin said. \"I thought that was how you showed a woman you loved her, you spoiled her!\" \n\nAlex turned and looked at him. \n\n\"Are you fucking kidding me?\" she asked him. He shrugged. \"Nobody does that!\" \n\n\"Nobody?\" he asked. \n\n\"Not until I met you have I ever been spoiled in such a fashion by a man,\" she said settling back into her previous heavenly position. \"I mean they would take me out, to a movie or dinner, but I always knew there was an ulterior motive!\" \n\n\"My father always told me, make sure the women in your life know that you appreciate them. In words and in deeds,\" Gavin told her. \"Words can be hollow, he would say, but if you say the words and do the deeds, they know they are coming from the heart.\" \n\n\"I asked him why he bought flowers for mom all the time,\" Gavin said kissing her head. \"He said he would see something, during his day, that would remind him of her and he had to buy it, most of the time it was the beauty of the colorful flowers. They matched her.\" \n\n\"They were always kissing on one another,\" Gavin remembered gently. \"I would bring somebody over and they would embarrass me as they would always be touching or kissing.\" \n\n\"That sounds fantastic!\" Alex growled at him. \n\n\"It wasn't so fantastic when I was ten,\" he laughed. \"My friends would be like, are they going to have sex? It was pretty gross!\" This had Alex laughing with him. \n\n\"I was in college when my mom got sick,\" Gavin said with a frown. \"Dad was beside himself, he couldn't handle it.\" \n\n\"I can't blame him,\" she said softly. \n\n\"They didn't tell me for the longest time,\" Gavin told her, a tinge of anger at the fact in his words. \"I was in med school when they finally told me, by that time mom had already been told she didn't have but a few months.\" \n\n\"I was livid!\" Gavin admitted to her. \"I mean, yelling at them, throwing a tantrum that would have made you proud!\" Alex nodded. She didn't want to stop him with words she knew would be pointless to soothe his pain as no words could. \n\n\"I wanted to come home, but mom threatened to whoop me if I did,\" he said through his teeth. \"She said she didn't raise a quitter, I was to graduate, she would see me do that before she left.\" \n\n\"I did everything I could to hurry it along,\" Gavin admitted. \"My dad took her around the world with him. Which was always his desire, to take her on cruises in the Med. To see the Great Wall, to swim the Great Barrier Reef. They saved their whole lives for those trips, dad gave up on them when she got sick.\" \n\n\"She demanded they go,\" he continued after wiping his eye. \"Doctor advised against it. But mom always got her way with dad. They went. They lived. They loved.\" \n\n\"She lied to me,\" Gavin said finally. \"She passed before I graduated.\" \n\nAlex cried there with him, she could feel his body shaking slightly as he struggled to keep his emotions in check. \n\n\"Dad said he felt responsible for it,\" he continued. \"He said not to be angry with her, if he hadn't taken her on the trips perhaps she would have been strong enough to last.\" \n\n\"Pavy broke the news to me that dad had died in his sleep a few months later,\" he gasped. \"I know the man just couldn't live without the woman that made his heart beat.\" \n\n\"At graduation, I had their wedding picture under my cap,\" Gavin finally was able to get out. \n\n\"I'm so sorry,\" Alex whispered through her tears. She let him sit there while she gently stroked his hair. Trying her best to soothe the pain he was feeling. \n\n\"You know,\" he said after a while. \"You, Pavy and Madelyn are the only one who know that.\" \n\n\"Thank you,\" she said softly. \"I know they are very proud of you. You didn't quit. You had every reason to, but you didn't.\" \n\n\"Now what do you want to know?\" he asked. \n\n\"Why couldn't Alyssa keep you as a sub? Why was it so horrific for you? I mean, I absolutely love being your sub! I love being a sub more than playing with Erin that night by a long shot!\" She asked him turning to look up at him. She hoped this wasn't nearly as painful as the last question turned out to be. \n\n\"I mean, Alyssa was gorgeous, had a fantastic body,\" Alex continued to rave, as she went back to her original position. \"She seemed adventurous. She seemed like she would have been a good match for you.\" \n\n\"Yeah,\" he shrugged. \"I liked Alyssa, but she was wanting more than I could give.\" \n\n\"Explain,\" Alex demanded. \n\n\"Well, it was early on in my lifestyle experience,\" he began. \"I wasn't sure what I wanted, Madelyn had guided me around at my first party. She was a great mentor, see my mother and Madelyn had a lot of the same attitude. Very dynamic, very strong.\" Alex nodded. \n\n\"Anyway, Madelyn is the one that encouraged me to try it all before deciding. An informed decision is the best one,\" he said. \n\n\"Sounds vaguely familiar,\" Alex teased. He kissed her head. \n\n\"I met Alyssa, she was into her third year of the life,\" he continued. \"She had tried the sub thing for the first year, then she was a Switch for a short time. After a while, she found that being a Domme was more to her satisfaction so she kept that persona.\" \n\n\"I met her at one of Madelyn's parties,\" he said flicking his leg to get them going again. \"She convinced me to try being a sub.\" He sighed deeply. \"Like I said, it wasn't for me, and the entire time I found no enjoyment. Not that Alyssa didn't try, she did. She tried various things to expose me to something I would like. I just couldn't let go and let it happen.\" \n\n\"Why?\" There was a long silence as they sat there. The gentle swinging of the hammock making the only sound as the rope rubbed on the tree. \n\n\"I don't like to feel helpless,\" he finally admitted. \"I was helpless to save my mom. I was never more helpless than in med school when I was running around trying to find Carla. Or when I was taking care of her after she was coming down from a bad trip. I was helpless to help her in her pleas at rehab. Helpless to save her at the end.\" \n\n\"I vowed I would never not be in control again,\" he said firmly. \n\nAlex turned to face him, her eyes apologetic. \n\n\"I'm so sorry!\" she gasped. \"If I would have known that...I would have never forced you last night!\" \n\nHe took her face in his hands and his smile comforted her. \n\n\"Last night,\" he smiled and shook his head. \"Wasn't the same feeling.\" \n\n\"It wasn't?\" \n\n\"I can't explain it,\" Gavin shrugged. \"But I didn't feel helpless. Yes I started to get the same feeling, but then...,\" \n\n\"What?\" she asked him when he stopped and shook his head. \n\n\"Then I looked into your eyes and I saw the pleasure in them,\" he smiled. \"I then trusted you, and knew that you wouldn't make me helpless.\" \n\n\"Of course,\" he smiled broadly with a shrug. \"Seeing my cock in your tight little ass was pretty awe inspiring as well!\" He wiggled his eyebrows at her. \n\nShe moved up to him and kissed him, before putting her head on his chest as she laid on her side. Her hand gently stroking his chest as she listened to the soft, hypnotic thump, thump, thump of his heart. \n\n*** \n\nHe was sitting in the chair after lunch reading a book he brought with him. She was watching him from the kitchen while she washed up the dishes. He would look up from time to time and they would smile at one another. \n\nShe turned after putting the dishes in the cabinets after drying them to find him gone from the chair. The book in his place. She looked outside the kitchen window to see if he was there but he wasn't. When she turned he was coming out of the bedroom, with the rope in his hands. She smiled. \n\n\"Come here,\" he demanded. The Dom coming out clearly. \n\n\"Yes, Sir,\" she said coming to him. He picked her up and set her on the table. \n\n\"Lie back,\" he said placing his strong hand on her back as she leaned backward and he gently laid her on the table. \n\nHe ran his fingers over her body, running them along her arms pushing them until they were straight above her head on the table. He then moved to the head of the table and began to wrap her wrists carefully. She closed her eyes and lost herself in the feel of him running his fingers gently over her, the feel of the rope as it snugly bound her wrists together. \n\nUnlike the night before when she tied him up, where her knot was simple, Gavin was Gavin. Complex. Soon she felt her wrists tugged on as he pulled the rope to tie it off on the legs at the far end of the table. \n\nShe felt him drag his fingers down her arms as he walked down the length of the table, his fingers brushing across her nipples as he kissed her lips, his tongue dominating her mouth. He left her suddenly, leaving her lips still tingling from his kiss. \n\nMoving farther down, pulling his fingers with him as he went. It brushed only briefly across her sex which was a flash of disappointment but she knew that would be only short lived. \n\nAnother length of rope was now being used on one leg. Folding it up, with her heel up against her hamstring. His weaving of the rope left her leg folded in half that way. Then it was tied tightly to the leg of the table on that side. He then repeated the procedure for the other leg, tying it tightly to the opposite table leg. \n\nNow she was spread wide, her knees pulled tightly as they were firmly restrained by the legs of the table. Impossible to close them no matter how hard she tried. She lifted her head and looked down between her knees at him. He had pulled the chair out and sat down. Her sex in front of his face as he slid the chair closer to the table like a man getting ready for a large meal. \n\nHe stared at her sex for a few moments, admiring it, it appeared to her. His secret smile out, as his eyes sparkled in utter pleasure of what lay before him. He gently lowered his head down to her, holding just off her sex to where she could feel his hot breath on her as he hovered there. \n\nShe dropped her head back to the table after watching his tongue come out and slowly trace the outside of her stretched sex. The gasp escaping her lips as he gently, lovingly tongued her sweet sex. \n\n\"Easy?\" he asked her as his tongue trailed in her causing her to squirm. \"Or harshly?\" he said with a sinister lilt in his voice. \n\n\"Whatever pleases you, my Sir,\" Alex smiled remembering those words from Horse Cock the night of her first party. The party that brought her irretrievably into this life. \n\n\"Both then,\" he smiled. She gasped as he tongued her gently. His tongue massaging her bud, causing her to moan and yip. \n\nHe loved that little noise she made, it was pure pleasure. He knew she wasn't even aware she was making it. It let him know, she was immersed into letting herself go, to release her inhibitions to him for his pleasures. \n\nHe gently worked her, bringing her to orgasm slowly. It appeared slower than she desired, however. She would, as it built, start to rock her hips in an attempt to work his tongue faster. When she did this he would pull off of her causing her to whine audibly. \n\nWhen her hips remained still for a few seconds he lowered his smiling lips back to her, slowly bringing her along until she began to move again and he stopped. ",
        "\"I'm sorry!\" she pleaded. \"I don't realize I'm doing it until you stop!\" He laughed at her gently. \n\n\"I know,\" he said lowering his lips to her sex again, the vibrations of his voice causing a new sensation on her sensitive flesh. \"I'm making your body work.\" \n\n\"Thank you Sir!\" she gasped as he brought her to the brink. \n\n\"Now,\" he said still flicking his tongue against her. \"If I was mean, like you, I would stop!\" \n\n\"Please don't!\" she begged knowing this was going to happen whether she wanted it to or not. He was in complete control and he would do exactly what he wanted, when he wanted. \n\n\"No,\" he smiled. \"I want your taste to fill my mouth.\" \n\nHe watched her as her stomach raised as her muscles just below her delicious flesh flexed, her neck craning as her orgasm twisted her muscles against her will. With her bindings she was limited in her movement so she twisted against the rope. Until her orgasm flushed from her in a rush. \n\nShe collapsed to the table with a thud, her breath ragged from where she held it during the throes of her orgasm. \n\n\"Delicious,\" Gavin whispered as he never stopped eating her. She lifted her head and gave him a pleasured smile. \"Now, time to get serious!\" \n\nBurying his face into her roughly had her squealing with pleasure, his hands pulled at the top of her thighs, pulling her into his mouth as he attacked her like a lion would its prey. His head thrashing as he went after her. \n\nIt was a matter of mere minutes before she was cumming again, this one harder than the last. She squirted, just a little, his face being coated with it. But he never slowed, he brought his hands into play. She loved his magnificent hands, they rubbed on her clit while his tongue probed her. \n\nHis hand circling on her bud at a rapid pace bringing the third orgasm seconds after her last. Her body arched, her neck pushing her body off the table as she lifted completely now, shoving her hips into his devouring mouth. \n\nShe collapsed to the table after she let out a short scream of pleasure that echoed in the house. She was now having trouble breathing, the hot humid air made it feel like she had been running a marathon. \n\nShe struggled to bring in the hot air as it seemed too thick to breath. The sweat was running off her body in rivers from her passion. Her hair matting to whatever skin it clung to as the sweat she had caused it to bind to her. He got up and left her on the table, she looked to him as he walked by her smiling. She knew he wasn't done, just by his smile. \n\nHe walked to the sink and ran the cold water into a glass, she watched him with admiring eyes. He then went to her and held the glass above her overheated body and let the water pour slowly over her breasts, the sharp difference in the temperature in the air and the water in the glass had her gasping. \n\nHe ran the glass lower, coating her entire upper torso with water, including cooling her sex with the water. Making her gasp as she relished the refreshment of the cool water on her. \n\nHe then went to the fridge and pulled a cube of ice out. He came to her with it, his secret smile on full display. Starting with her lips, he gently began to trace the outline of her. \n\nHer lips first, down her chin and around the side of her face to her forehead, then down to her nose, over it to her lips where she sucked on the cube before he moved on to the other side of her face. \n\nComing back down her forehead and nose again, to her chin, down her throat. The melting ice leaving a cool line of refreshment as it went. Down to her nipples, which made her suck in a breath as he traced the areolas with the cube of ice before covering the hardened nipples with his hot mouth. The sudden change in temperatures had her yipping pleasurably. \n\nMoving down lower, following the midline of her stomach, her muscles flexing under her skin at the difference in temperature. \n\nBack to his chair he sat. The ice cube coming to rest on her hot sex making her suck in a breath as the cold sensation caused her to shiver. He began to lick her again, the cold water dripping from the ice mixing with his hot tongue causing her to convulse as her body enjoyed the feelings of both. \n\nHe laid the ice cube on her clit which had her body frozen as he watched her body shake as another orgasm washed from her as she let out another soft yell of pleasure. He continued to move the ice cube around her until it was small enough to put into his mouth. Then did so. \n\nNow his tongue was a combination of hot flesh and coldness that had her shuddering as he didn't let up on his oral pleasuring of her. The next orgasm left her breathless and smiling. Holy shit, she thought to herself. Holy shit! The things this wonderfully, fantastic man was able to do to her and for her. \n\n*** \n\nThey were watching the sun set from the pier, their feet dangling in the cool water. Wine bottle now empty as they shared it. He had offered to go in and get another but she refused, wanting to spend every second with him that she could. She was not ever willing to lose him for the few minutes it would take to go inside for the wine. \n\n\"Alright,\" he smiled. \"My turn.\" She looked to him with a smile resting her chin in her shoulder. \n\n\"Go,\" she whispered happily. \n\n\"Why no boyfriend,\" he asked. \"I mean, that first night in the condo, you said you had two men long term,\" he rolled his eyes in opinion of what she considered long term. \n\n\"Hey,\" she warned. \"Yours doesn't normally last much longer!\" He chuckled with a nod. \n\n\"And two one night stands,\" he continued. \"Why?\" She shrugged as she didn't really know why. \n\n\"Why did you not have boys beating down your door?\" he pushed. \"I mean you are absolutely breathtaking to look at. You smile, your eyes.\" He stroked the side of her face. \"Then your inner beauty...beyond description...beyond compare.\" She watched him admire her and she was lost in him. \n\n\"So why?\" he asked again. \n\n\"I don't know,\" she shrugged. \"In high school, I guess I was an ugly duckling. It seemed I only cared about my art. So I was usually covered in paint or colors. Sometimes charcoal.\" \n\n\"I didn't come out of my shell really until I finally was able to get out from under mother's roof,\" she shrugged. \"I met Lena in college and she kind of helped, let me wear her clothes. Hell, I didn't even wear my first pair of tight blue jeans until college. In high school I wore dresses until I dirtied them all up with paint, then my mother made me wear overalls which I liked more than dresses, even though I was called a farmer because of it!\" \n\n\"You don't mind the dresses I make you wear,\" he pointed out. \n\n\"That's because the dresses you buy me, make me feel sexy! I feel like a woman, a desirable woman! I see men looking at me from time to time as I go about my day,\" she smiled. \"Like the car valet at the Drake, remember?\" He nodded. \"The dresses I wore then were very conservative. Very constrictive. Very uninspiring.\" \n\n\"I feel empowered now,\" she continued. \"Beautiful.\" \n\n\"You are beautiful,\" he said firmly. \n\n\"It's not the dresses,\" she smiled. \"It's you...you make me feel beautiful, therefore I become beautiful. Because of the strength you give me.\" \n\n\"As for the lack of boyfriends, I learned early on, that I was wanted for one thing, and one thing only,\" she frowned. \"I got tired of being treated like I wasn't important. Like I was something to have after they ran out of things to do.\" \n\n\"I like the way you look at me,\" she said turning her head to him. \"Your eyes say how much I mean to you without a word.\" \n\n\"I like the fact that I'm the reason you come home,\" she said with a little smile. Repeating what Livy had told her he had said that morning at the coffee table. \n\n\"Uh! She ratted me out! Your snitching sister!\" he complained. \n\n\"She said it was the most romantic, loving thing she had ever heard!\" Alex smiled proudly. \"And I agree!\" \n\n\"I love it when I come home,\" he said softly kissing her lips. \"You have this look on your face, in your eyes, like...well, like I'm Christmas.\" \n\n\"You look at me, like I'm the greatest gift in the world. Like the moment I told you we would be on this island for the next three days, alone. It gives me goosebumps when you look at me that way.\" \n\n\"I never feel more important than when you look at me,\" he finished. \"And I hate the look you have when I leave. Like I have hurt you and you are never going to see me again!\" \n\n\"Look at me,\" she demanded wrapping her legs around him as they sat there. \"I don't want you to leave for purely selfish reasons! I love that you are a doctor. That you help people. I just wished you didn't have to leave me to do it! I want to be around you like this, all the time. Every second of every day of every year for the rest of my life.\" \n\n\"But the last thing on this planet that I want to do, besides losing you, is take away the joy you have of what you do!\" Alex said firmly. \"I want you to be a doctor. I want you happy at all times. I'm sorry if I have taken any part of that and tarnished it with my selfishness!\" \n\n\"I just have to learn to share,\" she smiled. \"I'm not good at it, but I will get better. I may never like you leaving me to do your job, but I know in my heart that you will never be happy unless you can be a doctor. And if it comes to my happiness or yours, I choose yours!\" \n\n*** \n\nHe was gently massaging her in the bed. His hands firmly kneading away the tightness of her orgasms from the kitchen table. God she loved this. This pampering after a scene. She always felt a tinge of regret that she was the one receiving all the pleasure it seemed. Her many orgasms only to be followed with moment like this, a massage. Or bathing her. Everything spoiling her. \n\nShe loved the way he could be so gentle and loving. Like on the pier, not afraid to say what his heart felt. Not afraid to shower her with love. \n\nShe felt him straddle her. One knee to a side and her eyes fluttered open as she felt his hardness against her flesh. \n\n\"I'm sorry,\" he smiled. \"I can't help myself right now.\" She spread her legs slightly and his hard cock fell between them. \n\nHe angled his cock by using his hips, she shifted to help him slide into her causing her to gasp as he filled her with his cock. \n\n\"Fuck yes,\" she hissed. \n\nHe began to bite at her, her first inclination that this session was going to be rough. Her smile coated her face. She loved it! The wolf coming out of him. That this session was all about his pleasure, not that she wouldn't be pleasured in the process, but this was all about him. Something he rarely let himself fully enjoy. \n\nHe pulled her hair to the side and continued his assault on her tasty flesh with his mouth. Nipping at her with his teeth and sucking on her skin. His hands slid under her arms and hooked her beneath her arm pits. Holding her firmly he began to pound with his hips. Thrusting in her with a fervor of a man who hadn't had sex in years. \n\nHis hips slamming into her ass causing it to hurt, because of her final victory of having his cock in her ass, just by his force. She was still sore from her anal intrusion. While she knew it wouldn't last forever, it was still there. A sharp stinging pain anytime she sat, or she moved in a way that her ass was stretched. She said nothing and did her best to keep it from him. Burying her face into the pillow as the pleasurable pain of his ravaging engulf her. \n\nHis grip was tight on her shoulder pulling her down into his upward thrusts. His cock reaching into her depths with his hardness. She screamed out as he took her, her orgasm near. He went faster seeing this. Her face reddened by her bliss. \n\nShe screamed out as it washed from her, but it didn't slow him. He continued to ride her like thoroughbred. She didn't care anymore, she was fucked into oblivion like he had done so many times before. Her body shook as he took her by his immense force. Her body being thrust into the plush mattress as his full weight coupled with his power pounded her. \n\nThe sound of their flesh filled the room as did their sound of passion from their lips. Her cries of pleasurable orgasm, his growl as he let the wolf out to ravage her. His fingers digging into her shoulders, his teeth into her neck. \n\nHe slipped one arm out from under her and hooked it over the slat on the bed that acted like a brace as it crossed from one post to the other. Now he was using that brace to pull himself harder into her. The bed rocking now with his power as well. \n\nHer hands snaked above her and took hold of his hair and pulled him tighter to her skin as he continued to mark her. The bed crackling under their force. The slat broke under his strength but he didn't stop, instead he took her hair and pulled it gruffly causing her face to become available as he bit and suckled her lips from the side. \n\nHe growled out as he pulled into her deeply, his cock spurting in her recesses filling her with a happiness that the wolf had joined them on the island. \n\nHe collapsed on top of her, their breathing slowing as he kissed her gently. His body covering hers as he let his legs slide from beneath him, which had her sucking in a breath as the angle of his cock changed with it. He started to move off of her but she stopped him her hands. \n\n\"No,\" she begged. \"Stay right there, please?\" \n\n\"As you wish,\" he smiled. \n\n*** \n\nAlex awoke the next morning, her eyes fluttered open. Gavin's arm was over her protectively. \n\n\"I've died and gone to heaven,\" she whispered with a smile. \n\nThe soft light filtering in the room told her it was early morning. The soft sounds of the ocean could be heard. The soft scent of salt and Gavin's cologne circled around her in a pleasurable intoxicating cloud. \n\nShe could feel him against her. His cock against her back. It set her aflame instantly. She had to have it she decided. She eased from under his arm and maneuvered herself gently down the bed, turning upside down with her head towards the foot of the bred, her feet towards the head of the bed. \n\nShe was cautious not to wake him. She gently pulled the sheet away and saw him, his cock deliciously inviting her in. She eased closer to him and gently took his cock in her mouth. The soft warm feel of his cock made her smile. She loved the feel of him, in her mouth, in her sex, hell she just loved the feel of him anywhere. \n\n\"If I could figure out a way to design an alarm clock that did just what you are doing, I would become the next Bill Gates!\" Gavin teased as he awoke to her soft mouth on him. \n\n\"Sorry, I couldn't help myself,\" she smiled as his cock hardened and she was able to nibble on him. \n\n\"This is definitely something you have no need to apologize for! I can't think of any man that would be angry at being woke up this way!\" Gavin laughed as he stroked her thigh with his hand. \n\nShe continued to work on him, smiling as she went. Soon his cock was at full strength. She loved making him hard. It seemed like such an easy thing to do, but she was always happy with the accomplishment. It meant she was going to be pleased. One way or another. \n\nShe felt him take hold of her hips and pull her on top of him, rolling over onto his back. Now they were in the \"69\" position. He began to gently probe her with his tongue. She slid a bit to allow his full access and she gasped as he thrust his tongue into her. \n\nShe continued to suck him, setting the pace. If she went slow, he went slow. If she sped up, he sped up. The more aggressive she got, he reciprocated. She lost track of what she was doing when her orgasm hit her, she held his cock in her mouth and froze in her state as his tongue brought her to her peak. She was unable to suck him while her orgasm owned her, only able to keep his cock in her mouth as her orgasm came and went. When it finished she was able to go back to him. \n\nShe ran her tongue up and down the sides, around the head of his magnificent, pleasure bringing cock. She took him all the way down and held him. He brought his fingers into play as she did this. She felt him slide them in and his tongue exclusively suckled her clit as he fingered her. \n\nHe was so good at bringing her orgasm out of her as another began to build in her. She worked hard, she wanted him to erupt at the same time, knew that was going to be difficult but was trying nonetheless. \n\nHis fingers had her pushed over the top and she screamed out her pleasure with her lips still around his cock, the vibrations of her scream reverberating off his stiff shaft making him close his eyes as the sensations were new. He never stopped suckling her clit with his lips as he pushed her through it. \n\nShe renewed her gusto on him now, she didn't want his cum later. She wanted it right now! She fisted his manhood tightly, her mouth devouring him. His hands gripping her ass as he ate her let her know he was close, she looked down at his feet and saw his toes pointing out as he built. She knew that meant he was very close. \n\n\"Alexandria,\" he growled. \"I'm going to cum!\" \n\nShe never missed a beat as she sucked him, holding him just inches off her face as she jerked his cock, forcing his eruption to coat her face around her mouth, one shot, then another, then another. The hot sticky mess making her lips stick together slightly as she coated herself with his salty seed. \n\nWhen he was done, she cleaned the head of his cock off and rolled off of him, laying on her back as she used her finger to touch his cum on her face. \n\n*** \n\nAlex sat in the boat as Gavin took one of the men that came to prepare the cabana for the next set of lucky inhabitants inside. He was going to point out the damage they had done the night before, and make arrangements to pay for it. \n\nShe flushed with embarrassment as the two came back out of the cabana laughing together. She wondered what Gavin had told him in way of explanation. Gavin shook the man's hand and made his way to the boat. \n\nShe looked at the island one last time. This was the most perfect thing she had ever experienced. She got exactly what she wanted. Gavin alone! The only problem with that was now they were headed back and she would again have to share him. Something she really didn't want to do. \n\nAs he climbed aboard the boat the motor started and they began to move away. \n\n\"Thank you so much for my birthday gift,\" she said snuggling into him at the back of the boat. \n\n\"So I did a good job?\" he smiled kissing her head. \n\n\"Like you could do anything less?\" she scoffed. \n\n\"You make it easy on me,\" he said wrapping his arms around her. \"This is all I want to do, please you.\" \n\n\"Mission accomplished,\" she said closing her eyes. \"By the way...what did you tell the man about the bed?\" \n\n\"I told him my girlfriend likes rough sex, she was using it to fuck me silly when she broke it,\" Gavin laughed out quietly. \n\n\"You didn't!\" she gasped. \n\n\"No,\" he shook his head. \"I told him the mosquito netting had fallen, and I was using it to help me put it back up when it broke.\" Gavin shrugged. \"I don't think he bought it totally!\" \n\n\"Well there is one thing for sure,\" Alex smiled. \"If Heaven is a lot like these last three days, I'm going to be a very good girl! You know, pray regularly and stuff?\" \n\n\"I pray every day,\" Gavin whispered. \n\n\"You do?\" \n\n\"I have to,\" he nodded. \"I have to thank Him every day, for bringing me you.\" He kissed her head with a smile as he felt her hold her breath. \n\n\"Breathe for me, Little One,\" he smiled against her hair. \n\n\"I can't with you talking like that!\" she gasped. \n\n*** \n\nAlex left Gavin in the condo, he was busy catching up on his emails and checking in with his clients. She had hogged him long enough she decided, she wanted him more, but knew that he was back to being the doctor. Something he loved, and now she was going to make sure she didn't taint that with guilt because he wanted to please her. ",
        "She decided to go back to the apartment she supposedly shared with Lena. The only thing she actually shared there was the bills. Alex didn't mind, it made up for all the time she didn't pay her half the bills saddling Lena with them in her past. \n\nWalking in, she dropped her keys on the entry way table like she had done a thousand times before. She checked her stack of mail, there was a lot of it. Nothing of any great importance so she left them there. \n\n\"Hey!\" Lena called out happily as she came into the living room. Alex peeled off her coat and Lena furrowed her brow. \n\n\"Ok,\" Lena said in confusion. \"We are coming off one of the coldest winters in recent memory and you have a tan with a tinge of sunburn? Are you going to a tanning booth?\" \n\n\"No,\" Alex laughed. \n\n\"I tried to call you on your birthday,\" Lena continued as she stared at Alex and her secret smile as Alex sat next to her. \"All I got was voicemail.\" \n\n\"Sorry,\" Alex continued to smile. \n\n\"Oh my God would you just tell me?\" Lena growled with a smile. \"I know that fantastically wonderful man spoiled you, so out with it!\" \n\n\"He took me to...a private island,\" Alex said carefully biting her lower lip in happiness. \n\n\"He owns an island?\" Lena gasped. \n\n\"No! He rented it, for three days,\" Alex corrected. \n\n\"I hate you,\" Lena said with a shake of her head. \"You are no longer my friend!\" \n\n\"Sorry,\" Alex laughed. \n\n\"Then try to at least act like it!\" Lena chastised. \n\n\"Yes ma'am,\" Alex shrugged. \n\n\"So,\" Lena pushed. \"Details!\" \n\n\"Well,\" Alex said putting her head in Lena's lap. Their 'therapy' position it was called. \"It was in the Bahamas.\" \n\n\"Sounds terrible,\" Lena smiled as she stroked her friend's hair. \"We had sleet yesterday, just in case you were wondering.\" \n\n\"I had warm sunshine, a hammock and my man,\" Alex sighed. \n\n\"I fucking hate you,\" Lena hissed playfully. \n\n\"It was exactly what I wanted,\" Alex continued. \"I had him, for three days, without a soul around!\" \n\n\"You were totally alone?\" Lena gasped. \n\n\"Completely, utterly, totally...alone,\" Alex said rubbing it in. \"Nobody within forty minutes of boating!\" \n\n\"What did you wear? You didn't come back here for your suit,\" Lena pointed out. \n\n\"There was no need,\" Alex said with a mischievous smile. \n\n\"You went topless?\" Lean asked in disbelief. \n\nAlex pulled her shirt to the side of her shoulder showing there were no tan lines. \n\n\"You are such a slut!\" Lena teased. \n\n\"I wasn't just topless,\" Alex continued. \n\n\"What?\" \n\nAlex pulled down her yoga pants a little to show her hip contained no line either. \n\n\"You went completely nude?\" Lena asked shocked. \n\n\"For three days I wore no clothes!\" Alex smiled up at her. \n\n\"Gavin?\" Lena asked as she was dying to know if the conservative man did something similar. \n\n\"Has a matching tan!\" Alex laughed biting her lip as Lena dropped her head back to the couch in disbelief. \n\nAlex's phone chiming had her pulling it closer to her. She frowned. \n\n\"Shit,\" Alex said softly. \n\n\"What?\" Lena asked. \n\n\"Gavin is on a call,\" Alex frowned as she typed a reply. \"Looks like dinner alone.\" \n\n\"C'mon, girls night out! My treat, my belated birthday gift!\" Lena told her pushing her up. \n\nOver dinner, Lena caught Alex up on all she had been missing in her little version of heaven with Gavin. Mike and Lena were progressing to the point where he was spending the night a couple times a week. That made Alex happy, to see Lena smile about a guy. \n\nWalking down the downtown sidewalk headed for the car to head back to the apartment they found a club with live music. \n\n\"C'mon!\" Lena smiled. \"Let's give it a listen!\" She tugged on Alex's hand, paid the cover charge and they made their way in. \n\nIt was a new upscale club, with plenty of swank. Servers in bow ties and dresses. The music was good as they found a table to sit at. \n\nDrinking her Cosmo, Alex looked around the busy club. Her eyes falling on her. Elizabeth. She was talking with a man Alex didn't recognize. It wasn't Royce. Elizabeth seemed to be getting really friendly with him. Touching him gently as she laughed and whispered in his ear. She seemed to definitely be putting the moves on the unknown man. \n\nHe appeared to be a little on the rougher side, he had tattoos on his arms and a goatee. Alex could even see a large tattoo on the side of his neck. Alex smiled, she hoped that meant the Royce was out and Elizabeth had moved on to a new man. Alex was happy, any man was better than Royce! \n\n\"Oh man,\" Lena said drawing Alex's eyes to her. \"She won't come over here will she?\" Alex shook her head and shrugged. \n\n\"It looks like she is busy!\" Alex teased. \n\n\"She left Gavin and now is going after something like that?\" Lena asked disapprovingly. Alex shrugged. \n\n\"I can't explain it,\" Alex told her. \"Sometimes a sub and Dom don't grow at the same speed, one wants more than the other. So to be happy, they have to split. It's no different in the vanilla world.\" \n\n\"Listen to yourself!\" Lena laughed. \"Sub..Dom...Vanilla world,\" Lena pointed out. \"Like it was no big deal!\" \n\n\"It isn't,\" Alex shrugged. \"It's not for everybody, but it is right for me.\" \n\n\"Well,\" Lena smiled holding up her glass for a toast. \"It looks good on you!\" \n\n\"It does?\" Alex asked. Lena nodded happily. \n\nAlex turned around to see the man nod and Elizabeth pull the man out of the bar by his hand. \n\n\"Hey, I'm going to say hello,\" Alex said getting up thinking of their last encounter that ended badly. She didn't want to leave it that way. She wanted to be friends with Elizabeth and she wanted to show her there were no hard feelings for their argument. \n\n\"Alex,\" Lena frowned. \n\n\"Just a sec,\" Alex assured her moving away quickly. \n\nAlex looked both ways as she exited the bar, she saw Elizabeth pull the man around the corner of the building next door. She went that way hoping to catch them before they got into their car. \n\nAlex turned the corner and stopped suddenly in the darkness of the alley. The man was now leaning on the wall, Elizabeth was on her knees in front of him sucking his cock there. Neither was alerted to her presence, but for a second Alex could do nothing but watch. She finally willed her feet to move before she was seen. \n\nShe spun her body to the main sidewalk and hugged the building with a smile. She shook her head. She couldn't blame Elizabeth, she had the same urges come over her and she would have done the same to Gavin if the mood struck her. \n\nWalking back into the bar she rejoined Lena. \n\n\"Did you find her?\" Lena frowned. \n\n\"I did,\" Alex laughed. \n\n\"Was she in a better mood?\" \n\n\"OH yeah,\" Alex giggled. Lena furrowed her brow at the way Alex said it. \n\n\"She was in the alley, I guess she couldn't wait to get home!\" Alex said with a flick of her eyebrows. \n\n\"No shit?\" Lena gasped. Alex nodded as she took a drink from her glass. \n\nA few minutes later, the man returned and took his seat back at his table. Alex watched for her but Elizabeth didn't return. Alex frowned, then smiled. Maybe that was why she had him in the alley, she had to go, but he didn't."
    ],
    "authorname": "CJT",
    "tags": [
        "oral",
        "rough"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-30"
}