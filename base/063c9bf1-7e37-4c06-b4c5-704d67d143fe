{
    "title": "Worlds Apart Pt. 02",
    "pages": [
        "CHAPTER 1: CONJUGATION\n\nJamie ran, his sneakers pounding on the asphalt, his earbuds blaring music as he weaved through the throngs of pedestrians that clogged the street. A pizza box was clutched in his arm, the grease starting to soak the cardboard. The constant motion had probably reduced it to mush by now, but he didn't care. He passed beneath the rows of trees that were planted along the sidewalk, winter leaving them naked, their gnarled branches reaching up into the sky like skeletal fingers. On the road beyond the natural barrier that they created, cars zipped past, their nav systems coordinating the flow of traffic like shoals of fish.\n\nIt was late in the evening, and the sun was beginning to set, the vibrant reds and oranges reflecting off the glass facades of the kilometer-tall buildings that dominated the skyline. Above his head, their spires reached up beyond the clouds, the network of skyways that joined their upper floors creating a maze of streets above ground level. Winding mag-lev rails trailed between them, snaking between the structures.\n\nHe arrived at the foot of his residential building and stepped into the cavernous lobby, which took up almost the entire ground floor. Towering pillars of concrete extended into the air, a network of steel support beams hanging above his head, the abundance of glass letting natural light flood in. The core of the building was an open shaft that rose all the way to the roof some five hundred floors above, convection carrying a constant stream of fresh air up through its many levels. There were walkways bridging the gap, and every twenty stories or so was a commercial plaza where the residents could shop.\n\nThe ground floor served as a terminal as much as a lobby. There were dozens of glass elevator shafts that would ferry their occupants up through the center of the building. He made for the nearest one, keying in his floor number, watching the city fall away beyond the windows until he could scarcely even see the ground anymore.\n\nIt came to a stop, and he stepped out into a long hallway lined with numbered doors. He soon arrived at his apartment, pulling his phone out of his pocket and scanning it across a reader that was embedded in the frame. The panel slid into a recess automatically, letting him pass, Jamie wiping his brow with his forearm as he proceeded inside. He was drenched in sweat from his jog, the mesh shirt that he was wearing sticking to his skin.\n\nThe apartment was open plan, one wall dominated by a large window that looked out over the skyline beyond, the rays of the setting sun bleeding in between the high-rises to bathe the room in an orange glow. There was a living area, along with a kitchen that was separated from it by a low wall, the bedroom and bathroom sectioned off behind their own doors. The furniture was a strange blend of shapes and sizes. The couch that occupied much of the main living space was wide enough to seat half a dozen people, and the kitchen table was at about chest height to his six-foot frame, the chairs that surrounded it similarly scaled up. There were chairs better suited to his stature, too, and the counters were at a comfortable height. Even so, it often made him feel like he had been shrunk down to the size of a child. It was necessary to make such concessions when your roommate was a clear two feet taller than you.\n\nThe woman in question emerged from the bedroom, leaning against the doorframe, itself scaled up so that she could fit through it more easily. Even so, her eight-foot, five hundred pound frame filled it almost completely. She raised a furry hand to her mouth, opening it wide in a yawn, exposing a set of sharp teeth. Her round ears twitched as she scratched her cropped, blonde hair with her hooked claws, a pair of feline eyes the color of emerald peering back at him groggily.\n\n\"Hear me coming?\" he chuckled, Liz nodding her head.\n\n\"I got tired of waiting for you, so I took a nap,\" she replied.\n\nHer outfit, or lack thereof, caught Jamie's eye as the door slid shut behind him. She was wearing only a tight-fitting t-shirt in revealing white and a pair of black panties. As large as she was, it was mostly muscle, the high gravity of her home planet having imbued her with a physique that would have put an Olympic athlete to shame. She had never set foot in a gym, and she hadn't needed to. Just walking around on Borealis was a form of resistance training. He could see the outlines of her abs beneath the fabric, so firm that they could have been chiseled from marble, a pair of weighty breasts that befitted her exaggerated stature straining against her shirt just above them. She hadn't seen fit to wear a bra, that much was obvious.\n\nHis gaze wandered down to her thighs, skin the color of caramel dimpled by muscle, almost as thick around as his torso. Her legs were digitigrade, ending in feet that more resembled the paws of a lion, a coat of sandy fur rising to her knees. Her arms were much the same, her developed biceps smooth, while a covering of straw-colored fur began at the elbows.\n\nShe might be intimidating now, but Jamie remembered her as she once was. They had met at age six, when she had been little more than a fluffy kitten in a duck-patterned sundress. The two had quickly formed a close friendship, becoming inseparable, eventually attending high school and college together. As she had matured, she had lost the majority of her coat, and she had sprouted into a young woman. On the cusp of adulthood, they had declared their feelings for each other, but their relationship had been short-lived. Her parents had taken her back to their home planet, and several excruciating years had passed with no contact.\n\nIt was only a few months prior that she had returned to Earth, and they had made an attempt to pick up where they had left off. They had discovered that, as much as they had grown into different people, that fire was still smoldering. They liked who they had become, and ever since, they had been making up for lost time.\n\n\"Sorry,\" Jamie said, stowing his earbuds in the pocket of his shorts. \"My shift ran late, and I decided to take the scenic route home.\"\n\nHer pink nose twitched, and her eyes turned to the box that he was still clutching.\n\n\"I accept your offering of pizza as penance,\" she said, a smile curling her lips. She was always hungry, and greasy, salty foods were her vice.\n\n\"I'm afraid it may have been turned to paste by now,\" he replied, walking over to set the box down on a glass coffee table in front of the couch. \"Now I know why they don't deliver pizzas on foot.\"\n\n\"It's pizza,\" she said, shrugging her broad shoulders. \"It was pretty much paste when it came out of the oven.\"\n\n\"I'm gonna get a shower,\" he added, making his way over to the bathroom. \"You want to watch a vidcast or something when I'm done?\"\n\nLiz intercepted him on the way there, hooking one of her black claws into the mesh of his shirt and tugging him to a stop. She leaned down to bury her face in the nape of his neck, taking in his scent, her feline nose cool against his damp skin.\n\n\"Why the hurry?\" she mumbled, her lips brushing his ear. \"You know how good you smell to me after a run.\"\n\nHer sense of smell was many times more sensitive than his own, she could pick up the very pheromones in his sweat. He felt breasts larger than his head spill over his shoulders as she let their weight rest on him, knowing that it would entice him, flesh as soft as butter pressing against his back through the insubstantial barrier of her shirt.\n\n\"I get the feeling your pizza is going to go cold,\" he muttered, leaning into her as she gave him a gentle bite on the shoulder.\n\n\"We can heat it up later,\" she cooed, Jamie laughing at her seductive tone. \"Hang on a sec,\" she added, tugging at his shirt again. \"I'm actually...stuck...\"\n\nHe reached over his shoulder, helping to free her claw from the mesh, Liz grinning down at him as he turned to face her. He gave her a playful push, and she retreated back towards the couch, biting her lip in anticipation as she lowered herself down onto the cushions. The frame creaked under her weight, her ample bosom wobbling beneath her shirt as she settled, her nipples already tenting the fabric. Jamie reached down to part her knees, opening her legs wide, taking the opportunity to run a hand up her inner thigh. Her dusky skin was as smooth as satin, a layer of husky fat yielding before his fingers, muscle like iron rising to greet them as she tensed at his touch.\n\n\"Earth's gravity is making you softer,\" he muttered, watching her arch her back as he took a generous handful of her thigh and squeezed. \"I like it.\"\n\n\"Rude,\" she mumbled, her cheeks warming as his fingers neared her panties. He brushed her swollen lips through the material, finding it wet with her excitement, a beautiful tremor passing through her massive frame as he teased her. It made her toned midriff flex, the outlines of her muscles visible beneath her tight shirt.\n\n\"Do me first,\" she added, the need in her breathy voice making his member strain against his running shorts. \"Do me, then I'll do you.\"\n\nThey had been together long enough now that he knew what she wanted, Liz leaning over to get a better look as he knelt between her legs. He brushed her thigh with his lips, leaving a sucking kiss, his oversized partner rolling her hips in frustration.\n\n\"Stop fucking with me,\" she gasped, her claws scratching the leather covering of the couch. A visitor might assume that they owned an especially unruly cat or perhaps a poorly-trained dog, but Liz could be careless with her talons, and the couch was one of their preferred places to fool around.\n\nJamie finally relented, hooking his fingers around her panties and pulling them aside to expose her. She was so ready for him that a strand of her juices linked the sodden fabric to her lips, her loins puffy and swollen with arousal, their blushing hue making his mouth water.\n\nLiz didn't give him much time to admire the sight, delving a clawed hand into his long, blonde hair as she drew him closer. He brought his fingers to her labia, parting them, exposing a sliver of glistening pink. She wasn't configured any differently from a human, save for her size, the delicate folds of her vulva making his heart quicken.\n\n\"You know,\" he began, Liz cocking her head at him as she waited for him to proceed. \"Usually, when I get home from work, you're supposed to ask me how my day has been.\"\n\nShe chuckled, both amused and frustrated by his antics. That was the thing about Borealans, they liked teasing, they enjoyed games. Making her just a little mad always got her engine revving.\n\n\"Your day is about to end with five hundred pounds of cat sitting on your face,\" she replied, giving his hair a tug that sent a pleasant shiver down his spine.\n\nThat was his cue, Jamie extending his tongue, dragging it between her lips. Liz threw her head back, letting slip a low, rumbling growl of pleasure that he could feel in his bones. Her grip on him tightened as he began to lap slowly, mouthing and kissing as he went, her thighs pressing against his red cheeks. She could have crushed his skull like a melon with those powerful muscles, but he trusted her to restrain herself, even as he doted on her.\n\n\"I need this today,\" she sighed, letting herself sink into the couch as he traced the folds of her loins with the tip of his tongue.\n\n\"You need this every day,\" he replied, Liz pushing him back down between her thighs.\n\n\"You were late, and you know how much trouble I have getting myself off with these claws. Besides, I don't see you complaining.\"\n\nHe replied with a teasing lick, making her massive frame shudder. He knew her like the back of his hand by now, how to push her buttons, his tongue roaming up to her swollen clitoris. She bared her sharp teeth as he drew it into his mouth, teasing her with quick flurries, pursing his lips around it.\n\n\"Yeah,\" she mumbled, her claws pricking his scalp as she held him close. \"Get me there quick, I'm burning up tonight.\"\n\nHe pressed a finger against her twitching opening, her lubricating fluids letting him slide inside her up to the knuckle in one smooth motion. Despite her size, she was incredibly tight, her pelvic floor muscles just as toned as the rest of her body. He could feel them squeezing him beyond the wet silk of her undulating walls, wringing his digit in waves, as though trying to ease him deeper. He began to curl it against the roof of her passage, quickly finding her sweet spot, Liz taking a fistful of his hair as she arched her back involuntarily.\n\n\"Fuck,\" she hissed, starting to grind her hips against his mouth. \"Use that smooth tongue of yours, keep going.\"\n\nShe bucked as he rubbed her from within, pressing his finger into her g-spot, massaging it in a slow circle. He kept his lips locked to hers all the while, painting her burning vulva with his tongue, as though pleasing her was his life's sole purpose. He glanced up at her over her smooth mound, Liz gazing back at him, her cheeks flushed a shade of red. She gave him a sly grin, then reached down with her free hand, lifting the hem of her shirt to expose her midriff to him. He watched those chiseled muscles flex beneath her tanned skin as she writhed, admiring their definition, the faded trio of scars that he was so familiar with trailing across her belly.\n\nHe wasn't the only one who had gotten a feel for their partner's desires over the last few months.\n\nJamie upped his pace, feeling her depths clenching around his finger as he pushed her closer to the edge, her breath coming in ragged bursts. Beads of sweat were welling on her caramel skin, glistening droplets following the contours of her washboard abs as they dripped down towards her navel.\n\n\"God, you're beautiful,\" he muttered as he paused his licking for a moment. \"You know that?\"\n\n\"Are you trying to embarrass me to death?\" she chuckled, her face burning ever hotter. \"Come on, big guy, I'm almost there.\"\n\nHe couldn't help but smirk at the nickname as he lowered his head back down between her burnished thighs, Liz loosing a sordid sigh as he slid his tongue between her puffy lips. It was an ironic pet name that she had chosen for him, an in-joke about how he had been a clear head taller than her when they were adolescents. That was no longer the case, obviously. To say that she had filled out would be an understatement.\n\n\"I'm gonna-\"\n\nLiz doubled over on the couch, her heavy breasts swinging above his head within the confines of her shirt, a rumbling growl of lust emanating from her. She gritted her teeth, her pained expression softening as the first pulse of her climax rocked her, her long tail flicking back and forth on the cushions beside her. Her thighs closed around his head, but not enough to apply much pressure, sinking his cheeks into their soft surface as he kept up his licking. Each wave of pleasure made her velvet insides tighten, the powerful muscles in her reaches milking his digit, her juices leaking down his hand as she tried in vain to fuck it. Her orgasm was sharp and fast, Jamie easing out a few stray aftershocks with his gentle lapping, relief making her sag back into the cushions with a drunken smile on her face.\n\nShe loosed a satisfied moan, opening her legs a little to set him free, Jamie rising to smile up at her. Liz reached down, wiping away the sagging rope of fluid that was hanging from his chin with her furry thumb, the sight seeming to send another tremor through her.\n\n\"Little monster,\" she grumbled. \"Borealans aren't supposed to show weakness, but you've figured out all of mine. You're getting too dangerous to keep around, might have to eat you.\"\n\n\"You're welcome to try,\" he replied, more aware than ever of his aching erection as it tented his shorts. Liz's green eyes wandered down towards his bulge, her long, pink tongue emerging to wet her lips.\n\n\"Gimme a sec,\" she breathed, relaxing back into the cushions with a smile on her face. \"I'll take care of you in a minute.\"\n\nJamie hopped up onto the oversized couch beside her, running a hand across her taut belly, the layer of sweat that coated her dusky skin making his fingers glide. It was always warm in their apartment, as Liz had become accustomed to the heat of her homeworld, and she tended to set the thermostat pretty high. Jamie didn't mind, not when it encouraged her to wear as little as possible.\n\nEver since they had moved in together, his life had taken on a dream-like quality. The alien had a healthy libido, and they were still enamored with each other, the honeymoon phase of their relationship seeming to drag on indefinitely. Their differences in stature and physiology hadn't created as many hurdles as he had anticipated. Instead, they had only resulted in more exploration, more experimentation. The carefree attitude that Liz had adopted on Borealis had made her so free, so permissive, modesty and restraint no longer factoring into her decision-making process. When they woke up in the morning, they made love. When one of them took a shower, the other often joined in. When they got back from work, when they went to bed, when the mood took them while they were just lounging on the couch, they held nothing back. As childhood friends who had left so much unspoken for so long, who had been separated for years, there was a lot to make up for. No more hesitation, as Liz liked to say.\n\n\"Alright,\" she said, starting to lift off her shirt. Her shifting made Jamie slide towards her, her immense weight creating a dent in the cushions that drew him in like a gravity well. \"How do you want it, big guy?\"\n\nHer breasts spilled free of her shirt as she tugged it over her head, clapping against her torso as they fell, the impact making them bounce. Their volume was more comparable to that of beach balls than the human equivalent, large enough to comfortably fill his lap, their weight pulling them into a wonderful teardrop shape. They would have been absurd on a human woman, but they were far more appropriate on her exaggerated frame. She tossed the garment aside, grinning as she caught him staring. She used her upper arms to press them together, her biceps sinking into the yielding globes, Liz pushing her chest out in invitation.\n\n\"Guess I have my answer,\" she chuckled, letting them drop again. She reached out to place a furry hand on his chest, encouraging him to lie back, her ample chest swaying as she dropped to all fours and crawled atop him. Jamie felt her claws on his belly as she slid her fingers beneath his shirt, lifting it enough to expose his torso. Jamie had been on the track team in college, and he had kept up his running well after graduation, giving him a lean figure that Liz seemed to appreciate. She drew closer, extending her tongue, the organ near a foot long. He shivered as she dragged it across his belly, the rough barbs that lined its upper surface grazing him as she sampled his sweat, its tapered tip slipping into his navel on its way past.\n\n\"You're wearing these stupid shorts again,\" she grumbled, hooking her claws around his waistband.\n\n\"You love 'em,\" he replied, Liz flashing her teeth in a grin.\n\nShe pulled them down, his underwear along with them, freeing his erection. Her feline eyes played over it as she watched it bob in the air in time with the beating of his heart, the vertical slits of her pupils dilating into dark circles. She brought a finger to its tip, wetting the fleshy pad on the end of her digit with a bead of his pre, rubbing gently.\n\n\"Last one to come has to warm up the pizza,\" she said.\n\n\"But you already...\"\n\nHis complaint trailed off as she brought her hand to her mouth, extending her tongue again, dragging it across her palm. She opened her fingers to show him the matted fur, soaked with her bubbling saliva, a mischievous grin spreading across her face. She enclosed him in her damp fist, the sensation of her warm, sodden coat sliding against his shaft making him buck into her hand. She began to pump slowly, gliding on a layer of drool, alternating the pressure of her squeezing to keep him on edge.",
        "The lazy stroking of her hand was captivating, her fingers acting as ribs as they slid over his tender glans, the texture of her silky coat downright luxuriant. Her warm, slippery grasp quickly had him lifting his butt off the leather cushions in time with her motions.\n\nAs he watched, she sat up straighter, gathering up her breasts as best she could in her free arm. They draped themselves over her forearm like candles melting off the edge of a shelf, spilling between her fingers as she cupped one of them, keeping up her teasing handjob all the while. She was putting on a show for him, creating a deep cleavage as she squashed them together, molding them like putty.\n\nShe finally relinquished her hold on his member, leaving it throbbing in the air, his glistening skin joined to her palm by a sagging web of her saliva. She wiped it on the couch absent-mindedly, then brought it to her chest, cupping a breast in each hand. That sly smile returned, and she leaned closer, poising with her chest hovering a scant inch above his member. Jamie propped himself up on his elbows, watching in anticipation as she let them drop, a cascade of wobbling flesh burying his lower body. Her boobs spilled over his waist like cake batter pouring from a pan, so large that they draped over his hips, covering him from his navel to his thighs. His member was completely buried in her cleavage, soft skin slick with sweat enveloping his length, the pleasant weight of her bust bearing down on him.\n\n\"I'll hold them,\" she began, struggling to wrangle her assets. She gathered them up and crossed her arms over them, hugging them against her chest. The pressure made Jamie's head spin, her delicate fat forming a muffin top above her forearms, molding around his shaft. \"Go ahead and fuck them,\" she cooed, those green eyes watching him eagerly.\n\nHe lifted his hips, thrusting into her cleavage, the impact sending a beautiful ripple through her bust. Her coffee-colored skin was impossibly smooth, a blend of her sweat and the saliva that still dampened his length making everything slippery, her flesh providing just the right amount of resistance.\n\nShe held them there, letting him push into them, his member completely buried in the depths of her cleavage. Jamie couldn't resist reaching down to take generous handfuls, clawing and kneading like he was shaping wet clay, Liz's long lashes fluttering. They were larger than her own head, weighty enough that when he tried to lift one from below, his hand merely sank into it. Beneath the supple layer of fat was firmer breast tissue, so deep that he had to bury his fingers up to the knuckle to reach it.\n\nThe gentle rocking of his hips made her breasts quiver like a plate of jello, his thrusting sending waves through her bust, like ripples on the calm surface of a pond. She squashed the two spheres together, deforming them in her furry hands, her straw-colored coat contrasting beautifully with her tanned skin. She let more of their weight rest in his lap, the pressure that bore down on his member intensifying, the two walls of satin flesh closing around him.\n\nLiz uncrossed her arms, struggling to grip her ample breasts in her hands, the softness of her fat and the dampness of her skin making it a challenge. They slipped through her fingers, escaping her grasp as they spilled free, but she eventually managed to get a hold of them. She began to stroke him with them, kneading like a baker with a fresh ball of dough, moving them independently of one another. Her bosom seemed to swirl around his cock, the unexpected changes in pressure and tightness making him gasp. It was like being massaged with a pair of silk pillows, Jamie lying back on the couch, letting the pleasant waves of sensation wash over him.\n\n\"Let me know when you're close,\" she whispered, sensing that he was reaching his limits. She gave him another tormenting squeeze that made the meat of her bosom bulge between her furry digits, the warm, slimy depths of her cleavage narrowing around him. He couldn't help but rut into them, her flesh clapping against his hips, her boobs bouncing in his lap. She gave him a satisfied grin, crossing her arms around them again, her fat spilling over and under her fluffy forelimbs.\n\n\"You wear those tight shirts on purpose,\" Jamie grunted, hypnotized by the shaking of her breasts.\n\n\"Nuh-uh,\" she giggled, watching him with a wide smile. \"You try getting loose t-shirts at my size, it's impossible. Besides, you're one to talk, walking around in those short shorts. You know it makes me want to tear them off you.\"\n\n\"You can tear them off any time you want,\" he replied, wincing as she gave him another punishing squeeze.\n\n\"Oh, like I need your permission?\"\n\nLiz's biceps bulged as she tightened her hold, his head lolling back, a twinge of pleasure coursing up his spine like an icy finger.\n\n\"Come on,\" she cooed, her tone turning sly. \"Give it up already, I want my pizza.\"\n\nHe upped his pace, fucking her bust in earnest, Liz chewing on her lower lip lasciviously as she watched him intently. The gliding of her wet skin against his glans, the gentle wobbling of her fat, her teasing squeezing -- it all became too much.\n\nJamie's back arched off the cushions, his damp skin gluing him to the leather for a moment, a stifled grunt of bestial lust escaping him as he pumped a thick wad of his seed into her cleavage. There was nowhere for it to go, his warm ejaculate quickly filling the pocket that his member had created between her breasts, coating his length in a sticky sheen. Liz held her bust still as she watched him writhe, batting her lashes as he bucked reflexively, globs of pearly fluid leaking down his shaft. Every throb was joined by a surge of tingling pleasure, its intensity making his head spin, the sweet ache of relief permeating him as he painted her dusky skin with his lust. Gradually, the ecstasy subsided, giving way to euphoria that draped itself over him like a warm blanket.\n\nLiz drew back, parting her breasts, Jamie's heart fluttering as he saw that they remained linked by a sagging web of his emission. A fat droplet of it slowly seeped down her torso, sliding between the twin rows of her abs, the sight making his lingering erection flex once more.\n\n\"I'm gonna need pizza and a towel now,\" she muttered, running a furry finger through the gunk. She pulled it away, watching with drooping eyelids as a rope of it clung to her pad, soon breaking to drape itself over her thigh. \"You sure make a lot of mess for someone so small.\"\n\nHe rose to his knees unsteadily, leaning a hand against the backrest for support as he reached up to cup her rosy cheek. He drew her in for a kiss, Liz leaning into him, delving her clawed fingers into his hair. Their difference in stature had once made them clumsy, her larger lips and tongue struggling to lock comfortably with his own, but months of enthusiastic practice had made them experts. Her slippery coils wound into his mouth, the tapered tip of her organ glancing his inner cheeks as it coiled around his tongue, his alien lover locking him in an embrace so deep and lurid that kiss seemed far too mundane a word to do it justice.\n\nAfter a few moments, she loosed an affectionate purr, gently placing a hand on his chest to push him away.\n\n\"Pizza,\" she insisted, Jamie nodding his head. He stumbled to his feet, swiping the pizza box off the nearby coffee table and making his way over to the kitchen. He put it in the microwave, then rummage through one of the drawers, tossing Liz a towel. She wiped herself down, Jamie admiring her as she ran the checkered cloth across her generous bust and down her taut belly. Once that was done, she leaned down to pick up her discarded shirt, her breasts swaying enticingly as she pulled it over her head.\n\n\"It's inside-out,\" he chuckled, leaning on the kitchen counter as the pizza box slowly rotated behind the glass door. Liz shrugged, letting herself fall back into the couch, crossing her long legs as she loosed a satisfied sigh.\n\n\"What time is it?\" she mumbled, glancing at the digital clock that was displayed on a wall-mounted monitor across the room. \"We've got time to watch something, maybe fuck again if you want to.\"\n\n\"As if I'd refuse,\" he replied, amused by her brashness. There had been a time when she had been too shy to express her feelings, when his merest touch had made her cover her burning face in embarrassment. She had returned from Borealis with a newfound confidence, a new directness that he admired. Liz knew what she wanted, she didn't beat around the bush, she never hesitated anymore. It was a quality that he found himself doing his best to emulate.\n\nThere was a ping from the microwave, Jamie returning to her side with a hot pizza, the pair lounging together as they browsed the list of available movies. Liz leaned over to grab a slice, blowing on it for a moment to cool it, then sliding it into her mouth. She chewed happily, using the barbs on her prehensile tongue to clean away the melted cheese from her furry fingers.\n\n\"Pizza and head,\" she sighed as she draped an arm around his shoulder, tugging him closer. \"You spoil me.\"<br >\"I can't tell if you're being sarcastic,\" he replied, one of her boobs making an admirable pillow as he leaned against her. \"But you're welcome.\"\n\n\"What would the upscale equivalent of pizza and head be?\" Liz wondered, idly tapping at the remote.\n\n\"A candlelit dinner and a hot oil massage?\" Jamie suggested, Liz's bust shaking as she laughed.\n\n\"Good suggestion. Don't think I won't take you up on that sometime. Better grab a few slices for yourself, by the way,\" she added as she gestured to the open box with a clawed finger. \"This is some good stuff. You should make a note of whatever place you got the pie from.\"\n\n\"I can pick up another one on the way back from work tomorrow,\" he replied, relaxing into her embrace as he enjoyed the fading embers of his afterglow.\n\n\"Ah, here's something to watch,\" Liz said as she hovered her cursor over one of the titles. \"Battle for Epsilon. It's a war movie, those are usually exciting, and they often toss in a romance subplot for the chicks.\"\n\n\"I would not describe you as a chick,\" he scoffed.\n\n\"I don't have to be a dainty little flower to like romance,\" she chided. \"Now, cuddle with me, or I'll pull your arms out of their sockets.\"\n\n\"Yes, dear,\" he replied, Liz giving him a grin.\n\n***\n\nThe credits rolled, Liz opening her mouth in a yawn, stretching her muscular arms above her head. Jamie sat up straight on the couch beside her, her sudden movement jolting him back to alertness. The sun had set some time ago, their apartment lit only by the rows of text scrolling across the monitor, the pizza box sitting empty on the coffee table along with a few empty snack wrappers. Liz had even used her barbed tongue to lick away the remnants of cheese from the cardboard.\n\n\"That was pretty good,\" he said. \"Though, I don't know why everything has to be a propaganda piece.\"\n\n\"Yeah,\" Liz replied. \"I get that there's a war going on, but if there's no danger to the characters because they're guaranteed to win every fight, then there's no tension. They can lose and still come out on top in the end.\"\n\n\"I'm gonna get that shower if you want to join me,\" Jamie said, beginning to rise to his feet. Liz placed a hand on his shoulder to stop him, Jamie sinking back down into the cushions.\n\n\"Hang on a sec,\" she said, her tone losing its playful quality. \"There's something I wanted to talk to you about.\"\n\n\"What's that?\" he asked, his brow furrowing. \"Is something wrong?\"\n\nEver since they were kids, Liz had always confided in him. He was the first person that she came to when she had a problem.\n\n\"For as long as I can remember, all I've wanted is to be with you,\" she began. \"I wanted an apartment with a view of the city, and now we're sharing one,\" she added as she waved to the wall-length window. \"We both have steady jobs, enough income to live comfortably, and we've done a pretty good job of making up for all those wasted years. We achieved all of our childhood dreams.\"\n\n\"I guess we did, didn't we?\" Jamie replied. The thought made his stomach swarm with butterflies, but Liz still had a serious expression on her face, so he abstained from making a joke about owning a pet dinosaur.\n\n\"We achieved all of our goals, so...now what?\" she asked. Jamie cocked his head at her, not quite understanding.\n\n\"What do you mean?\" he said, a twinge of apprehension tying a knot in his guts. \"Aren't you happy?\"\n\n\"Of course I'm happy,\" she replied hastily. \"I've got my Jamie on tap. How should I put this..?\" She trailed off, pondering for a moment as he waited expectantly. \"We're on a road trip, right? I'm loving every second of the ride, but I'd like to know where we're going. Does that make sense?\"\n\n\"Yeah,\" he replied, \"I think I get what you mean.\"\n\n\"Ever since we moved in together, I've been happy, Jamie. All the time. That's something I never had before, not when I was a girl, not when I was on Borealis. Yet I can't help but feel like we're spinning our wheels, like we should be moving towards a goal other than eating takeout and getting each other off, as much fun as we've been having.\"\n\n\"It sounds like you have something in mind,\" he said, Liz nodding her head slowly.\n\n\"Have you ever put any serious thought into...kids?\" she asked.\n\nJamie's cheeks flushed pink, and he blinked up at her, not sure how to respond.\n\n\"Not...not seriously,\" he admitted, reaching up to brush his hair out of his face. \"I guess I figured that if you wanted to be with me, you probably didn't want any. It's not like a human and a Borealan can...you know. We're different species.\"\n\n\"I know that,\" she sighed. \"You're talking to a xenobiology major, you dork. There are other ways to go about it, though. We'd have options.\"\n\n\"What, like adoption?\" Jamie asked.\n\n\"Adoption is one possibility,\" she replied with a shrug.\n\n\"This is all happening pretty quickly,\" Jamie said with a nervous chuckle. \"I've not even had time to process how I feel about this whole thing yet. This is some pretty life-changing stuff you're talking about, Liz.\"\n\n\"I didn't mean to spring it on you,\" she replied, \"it's something that I've been thinking about for a while. I didn't want to just throw it on the table without doing a little research first.\"\n\n\"Most people wait until their late twenties, early thirties to have kids,\" Jamie continued. \"I feel like we're a little young.\"\n\n\"It's not like it's unheard of.\"\n\n\"Well, no, but...\" Jamie trailed off. He didn't want to sound like he was arguing against the idea, as much apprehension as it instilled in him.\n\n\"When my parents took me back to the homeworld, I met my littermates for the first time since I was a baby,\" she continued. \"My siblings, rather. One of my sisters had kittens while I was there, and they were the cutest things I'd ever seen. They were small enough to fit in the palms of my hands,\" she said, cupping them to demonstrate. \"I get all warm and fuzzy whenever I think about holding them. Maybe it's some kind of Borealan instinct, but being here with you -- making love like we do -- it's starting to drive me kind of crazy. My body doesn't know that you can't get me pregnant, and it's like...we keep trying, but nothing ever happens.\"\n\n\"Would adoption fix that, though?\" Jamie asked. \"Assuming that we could adopt, which wouldn't be a given, what species would we even choose? There aren't any Borealan kittens waiting for adoption in orphanages on Earth, I can guess that much. Would you want a human kid? Would you want to go back to Borealis and somehow bring a kitten back with you?\"\n\n\"Adoption wouldn't be my first choice,\" she admitted, \"but...how would you feel about it?\"\n\n\"Adoption specifically?\" he asked, Liz nodding her head at him. He leaned forward on the couch, running his fingers through his hair as he considered. \"I dunno,\" he sighed. \"It wouldn't really be our kid, you know? We'd be raising someone else's child, and as noble as that sounds, it rubs me the wrong way. If we were going to have a kid, I'd prefer it to be related to us, a product of us. I don't know if that's even possible in our situation.\"\n\n\"We're different species,\" Liz added, the frame of the couch creaking as she leaned back into the cushions beside him. \"We look pretty similar, but that's just convergent evolution, a product of evolving to fill the same ecological niche. We're both descended from mammalian ancestors, we're both predators with binocular vision, we both adapted to stand upright so that we could use our forelimbs as manipulators. We can breathe a similar mix of gasses, eat similar food, tolerate similar pressures and gravities. We both speak, because the conditions of our atmospheres are conducive to carrying sound. But all that said, you have more in common genetically with a mushroom than you do with me. You'd have an easier time knocking up a rose bush. We don't even have the same number of chromosomes.\"\n\n\"You said that we had other options?\" he asked, the way that she shifted her weight uncomfortably making him wary of her reply.\n\n\"Artificial insemination is one of them,\" she began. \"It's not like fertility clinics on Earth stock Borealan sperm, so I'd have to go back to the homeworld to find a donor.\"\n\n\"Whoa, whoa,\" Jamie said with a dramatic wave of his hands. \"Hit the brakes. You're talking about letting some Borealan guy...\"\n\n\"No, of course not,\" she said with a roll of her eyes. \"That's not how artificial insemination works, Jamie. He'd have to...jerk off into a cup or something. That's why they use the determiner artificial instead of just calling it insemination. We'd freeze it, then bring it back to a clinic on Earth.\"\n\n\"So, you'd be having the donor's kid,\" Jamie continued, staring at the carpet.\n\n\"In that case, yeah,\" she replied. \"I wouldn't even know the guy, though, he'd just be donating his genetic material. Think of it like donating blood.\"\n\n\"Maybe I'm thinking emotionally and not logically,\" Jamie began, \"but the idea of that makes me want to track said donor down and force-feed him his genetic material.\"\n\n\"And I thought that Borealans were supposed to be the territorial ones,\" she sighed. \"The last option would be finding a surrogate. You'd jerk off into your own cup and artificially inseminate a human woman, who would then carry your child in my stead.\"\n\n\"You don't sound too enthusiastic about that one,\" he said, turning his head to glance up at her.\n\n\"I mean...none of them are ideal,\" she replied, averting her eyes. \"Which species we might go with is a conversation in itself. I was raised on Earth, but would it be ethical to put a kitten through the same experiences that I had? How would a human child with a Borealan mother turn out? I'm not going to lie, I'd love a kitten, but I didn't know how you'd feel about that. We've been together for so long, but this subject has never come up before.\"\n\n\"I had no idea you felt this way,\" Jamie said, reaching out to place a comforting hand on her thigh. His touch seemed to soothe her, and she took his hand in hers, engulfing it in her furry fingers. \"Like I said, I assumed that if you were dating me, kids weren't on the table.\"\n\n\"You don't have to decide right away,\" she added, \"I know this is coming out of left field. You can take all the time you need to think about it, I'm not gonna pressure you into making a decision that you might regret.\"\n\n\"I do have one question, though,\" Jamie added. \"What would you do if I said no? Having a kid would change our lives, it's a huge responsibility. Practically everything that we do for the next twenty years would revolve around them in some way. What if I'm not ready to give up the lifestyle we've built together just yet?\"\n\nShe released his hand, bringing one of her black claws to her mouth, chewing on it like a human might bite their nail as she mulled it over.",
        "\"I guess it's just one of those things,\" she replied, the tip of her furry tail twitching indecisively on the cushions beside her. \"Being in a relationship is like a balancing act, we have to consider our own wants and needs, weigh them against those of our partner. I'd never try to twist your arm, I'd never hold our relationship hostage to get what I want. I'm not your Alpha, we're not a pack, I can't just order you around. But I'd hope that you'd realize how important this is to me, how much I want this.\"\n\n\"It's really that important to you?\" he asked.\n\n\"I feel incomplete without it,\" she admitted, her green eyes turning back to him.\n\n\"Then, I'll put some serious thought into it,\" he added. \"We both knew going into this that it wouldn't always be easy, that there would be hurdles. We've overcome them all so far, and we'll overcome this one, too.\"\n\n\"Alright,\" she said, giving him a reassuring smile.\n\n***\n\n\"She wants kids?\" Mike asked, dealing a deck of cards as he sat across the table from Jamie. It was a Friday evening, just after closing, so he was playing his weekly poker game with his colleagues at the supermarket. The five friends were sitting around a circular table in the breakroom, a cramped space with a few plastic chairs scattered about, a couple of vending machines standing up against the wall. There was a kitchen area with a fridge and cupboards that would have looked far more at home in an apartment, a solitary coffee machine sitting atop the counter.\n\n\"That's what she says,\" Jamie replied, picking up his cards to examine his hand.\n\n\"Don't think that this will just go away if you ignore it,\" Abby said. She was sitting to his right, still wearing an apron with the store's logo emblazoned on the front. Her dark hair was pulled back in a tight bun, and she had a cigarette between her lips, a lazy wisp of smoke rising towards the spinning blades of the ceiling fan above. \"When women get all maternal, it's not something that's going to wear off. If she says she wants a baby, she'll get one. Her whole body chemistry is gearing up for it.\"\n\n\"Maybe aliens are different,\" Jamie replied with a shrug, but Abby shook her head.\n\n\"I wouldn't count on it.\"\n\n\"She's got the baby-rabies,\" another of his colleagues added, eliciting laughter from everyone besides Jamie.\n\n\"I don't know what to do,\" he continued, pausing to take a drink from a can of soda. \"She laid out all of our options, and they're all bad. I don't want to raise another guy's kid, and I certainly don't want Liz to have someone else's baby. Does that make me selfish?\"\n\n\"Love is selfish,\" Abby insisted, waving her cigarette at him before taking another puff. \"We have exclusive relationships because we're possessive, and let's not pretend otherwise. We get married because we want exclusive access to a person, we want it in writing, like we're signing a lease on a car.\"\n\n\"You're the only one of us who's had kids,\" Mike added, Abby glancing across the table at him. \"What's it like?\"\n\n\"It's a huge pain in the ass,\" she replied, taking another long drag. \"Their constant screaming at all hours of the night will make you want to smother them if it means getting a couple of hours of uninterrupted sleep. Every piece of clothing you own will be covered in vomit stains before long, and you'll be spending most of your day handling human feces. That said, I'll be damned if our brains aren't wired to make us love the little bastards more than life itself. You won't get it until you hold a baby you helped make in your own hands, but you look down at the little dreg, and it's like...I would literally kill a lion with my bare hands to keep you safe.\"\n\n\"I am both horrified and inspired,\" Mike mused.\n\n\"There must be another option,\" Jamie continued, leaning back in his chair as he stared blankly at his cards. \"Every time we encountered some unsolvable problem, we found a way. I don't want to choose the lesser evil, and I don't want to disappoint Liz. There has to be something that nobody has thought of, something so out-there that I'm the first one to consider it.\"\n\n\"I think you may be screwed on this one, Jamie,\" Mike replied. \"You can't beat biology.\"\n\n\"We live in a time when most forms of cancer can be cured with gene therapy,\" Jamie replied, \"where birth defects can be detected and edited out in the womb while a baby is still a clump of cells. We wiped out HIV with targeted viruses, we cured sickle cell, so why can't we find a way for two different species to reproduce? Why is that so impossible?\"\n\n\"Sounds like you've been doing some research,\" Abby muttered, tapping her cigarette against the edge of her ashtray. \"If human and Borealan DNA is as different as your girlfriend says, then they're not even in the same ballpark. The fact that you look kind of similar is a coincidence. You might as well try to splice a dog's genome with a sea sponge.\"\n\n\"What if it went wrong?\" Mike said, Jamie glancing across the table at him. \"What if the kid ended up like a Chinese soldier and started fucking melting or something? You read about the kind of shit that happened to the PLA guys in the Sino-American war, right? They tried to turn them into super-soldiers with shoddy gene-editing tech, and it went about as well as you'd expect.\"\n\n\"There are gene therapy clinics,\" Abby added with a shrug. \"Maybe go ask the experts, see what they say.\"\n\n\"Maybe I'll do that,\" Jamie said, nodding his head. He examined his cards again, then pushed a stack of colorful, plastic chips towards the center of the table. \"Raise.\"\n\n***\n\n\"It's a nice thought, Jamie,\" Liz said as she lounged beside him on the bed. She was nude, the sheets discarded somewhere on the carpet, the silver moonlight that bled in through the window reflecting off the sweat that misted her dark skin. She rolled over onto her side, her ample breasts spilling onto the mattress beside him, gravity squashing them together. \"I think your friends are right, though. I'm not sure that any gene-editing tech could make it work.\"\n\n\"Why not?\" he asked, sitting up on the bed beside her. He was still a little hazy from their most recent bout of lovemaking. \"I'm no geneticist, but if they can go in and edit a baby's genes to cure its cleft lip before it develops, why can't they do this?\"\n\n\"There are a couple of big issues,\" Liz began, Jamie trying to keep his eyes off her chest as she explained. \"DNA is made up of two chains that are formed into a double helix, spiraling around each other, and those helixes are bundled up into chromosomes. A chromosome is basically a big package of DNA all wound up like a ball of yarn, makes the DNA easier to manage.\"\n\nThe bed creaked as she shifted her weight, the motion making her bosom wobble.\n\n\"When we reproduce, the chromosomes from each parent are combined to make a new genome, which is a hybrid of both. Genes that are recessive or defective in the chromosomes from one parent will be overridden by the other's. The problem is, each of those genes has to match up with a counterpart. If your genes are imparting different instructions, or if you have a different number of genes, the resulting code is nonsense. It doesn't work. The same issues arise if you have a different number of chromosomes.\"\n\n\"So, you have to be almost identical to begin with,\" Jamie mused. \"At least as far as species go.\"\n\n\"Pretty much,\" Liz replied. \"If there's even a small mismatch, you're out of luck.\"\n\n\"I still want to look into it,\" Jamie added. \"I might take a sick day tomorrow, find out where the nearest clinic is and go pay them a visit.\"\n\n\"If you want to,\" she replied. \"I don't think it will do any good, but...thanks for taking this whole thing seriously. I appreciate that you're actually thinking about it like you promised.\"\n\n\"I always keep my word,\" he replied. \"You're really smart, you know that? I feel like I don't tell you that enough.\"\n\n\"Oh?\" Liz cooed, giving him a wry smile.\n\n\"You know all about biology, linguistics, your job at the embassy would boil my brain if I tried to fill in for you.\"\n\n\"Flattery will get you everywhere,\" she purred, rolling over on top of him. She let her breasts settle around his head, burying him in an avalanche of wobbling flesh. Her damp skin was silky smooth against his cheeks, the wonderful blend of her exertion and body wash filling his lungs. \"You ready for another round?\"\n\nCHAPTER 2: GENETIC DETERMINISM\n\nThe mag-lev train zipped along its rail noiselessly, Jamie peering out of a nearby window as he watched the landscape fly past. The track was elevated high off the ground, the streets below little more than a blur, the towering spires of the city gradually giving way to sparser buildings as they reached the outskirts. Ahead of him, he could see the complex that housed the clinic, a cluster of hospital and university buildings that formed their own little settlement amongst the surrounding greenery. They were all whitewashed blocks of concrete and steel, the main structures forming a broken ring around a park area in the center of the campus, the green lawns framed by neat rows of trees.\n\nThe train slid to a stop in a nearby station, Jamie stepping out through the automatic doors. It was a short walk to the campus, and after checking a nearby information kiosk, he located the gene therapy clinic. The waiting room was much like any upscale hospital lobby, rows of padded benches lining the walls, a few potted plants adding a touch of greenery to the whitewashed surroundings. Jamie announced himself to a secretary who was sitting behind a desk, then took a seat, waiting for his turn to be seen. There were a few patients occupying the benches, each one being sent through before him, until his name was finally called.\n\nThe secretary directed him down a short corridor, Jamie pausing to glance through a long window to his left. He could see through into some kind of lab or cleanroom. Everything in there was white, from the walls and ceiling to the lab coats that the occupants were wearing. Large, expensive-looking machinery with white housings occupied most of the surfaces, many of the employees hunched over them, tapping at touch screens and holographic displays. Jamie watched one of them raise a vial of fluid, holding it up to the bright halogen light strips for a moment before inserting it into some kind of centrifuge.\n\nAnother man in a lab coat emerged from a door ahead of him, raising a hand in greeting. This must be the doctor. He was an older fellow with a clean-shaven face, his brown hair just starting to turn gray in places. They introduced themselves, the man waving Jamie into an unremarkable office, the two of them taking a seat to either side of a wooden desk.\n\n\"I'm told that you're interested in pursuing fertility treatments with our clinic,\" the doctor began, pulling up Jamie's information on a holographic display that was being projected from a console mounted atop his desk. \"When we get clients in your age bracket, it's usually because they've been diagnosed with a condition that makes conception difficult, or they're in a same-sex relationship. I took the liberty of looking through the medical records that you forwarded, and I couldn't see anything that stood out to me as unusual in your history. Might I inquire as to what kind of treatment you're looking for, exactly?\"\n\n\"I have what may be an...unusual request,\" Jamie began, the doctor peeling his eyes away from the display to peer across the table at him.\n\n\"I should warn you that our clinic operates in full compliance with UN law,\" he began. \"We offer cosmetic gene modification, but no enhancements or other procedures that aren't deemed medically necessary.\"\n\n\"Oh, it's nothing like that,\" Jamie insisted. \"My partner and I are having problems conceiving because, well, we're different species.\"\n\n\"Different species?\" the doctor asked, giving Jamie his full attention. He didn't seem shocked, more intrigued than anything.\n\n\"My partner is a Borealan, and we've recently started looking into ways to have kids. Adoption, surrogates, and artificial insemination are on the menu, but I wanted to know if there was any hope of us conceiving a child together?\"\n\n\"This is a first,\" the doctor mused, scratching his chin as he considered. \"I suppose this kind of thing was bound to come up eventually. With more and more alien species joining the Coalition and interstellar travel becoming more frequent, humans and aliens are ending up in closer and closer proximity. I happen to know that the Borealan genome has been sequenced,\" he continued, Jamie's heart skipping a beat.\n\n\"R-really? Does that mean...\"\n\n\"Unfortunately, just because the DNA has been sequenced doesn't mean that we know what each individual gene does and how they interact with one another. That will take years of research. I can tell you that humans and Borealans have different numbers of chromosomes, meaning that sexual reproduction is quite impossible. Reproduction in eukaryotes relies on a process called meiosis, where chromosomes from the two parents fuse during fertilization to create a new genome. If the number of chromosomes is abnormal, it results in a condition known as aneuploidy, which in the majority of cases will cause a miscarriage. The baby just wouldn't develop properly, or at all, because the instructions being given to its cells would be gibberish. Not that fertilization would occur to begin with in this case,\" he added, \"as the genetic codes of the two parents would be completely incompatible.\"\n\n\"Why is that?\" Jamie asked. \"We're so similar, we both breathe oxygen, we both have skin and hair. If we took the gene that tells Borealan cells to develop into hair follicles, why would it be so different from that of a human?\"\n\n\"Take a look at this,\" the doctor continued, waving a hand through his holographic display. He brought up an animated graphic of a DNA strand, a double-helix that slowly rotated in the air. \"This is DNA. As you can see, it's made up of two chains, which are joined by structures that look like the rungs of a ladder. These are called your base pairs. Think of them like the binary code in a computer, a set of instructions. A gene is a larger segment of that chain, which works kind of like a program, giving the cells their orders. It tells them how to form, how to behave, even when to die.\"\n\nHe zoomed the image in, the strand unraveling, a long section highlighted in red.\n\n\"Humans have around twenty-five thousand genes, though not all of them are active, and some will be superseded by more dominant genes during meiosis. In other species, the order in which they're arranged, the number of genes, and what those genes do are all totally different. Splicing two completely unrelated genomes together would require perfect knowledge of each gene's functions, and its interactions with other genes, which can change its function entirely.\"\n\n\"Then, it's not impossible in theory,\" Jamie said as he examined the floating graphic. \"It's just so complex as to be infeasible.\"\n\n\"Sequencing a genome is no more difficult than running the data through a sufficiently powerful computer,\" the doctor continued, shutting off the display. \"The difficult part is figuring out what those genes do, and there's no method that we know of other than experimentation. If we have a genome that we know is healthy, and one that we know is damaged, we can compare them to find out where the errors are. We can activate genes in a lab environment, deactivate others, then observe the results. There's no way to fast-track that process, I'm afraid.\"\n\n\"I see,\" Jamie said, his hope fading.\n\n\"Sorry we couldn't be of more help,\" the doctor said, Jamie giving him an appreciative nod. \"If you're still looking for artificial insemination or surrogate services, that's something that we can definitely arrange for you.\"\n\nJamie tried to perk up, reminding himself that he was here for Liz. Even if his dreams of conceiving a child with her had been dashed, there were still other avenues open to them.\n\n\"Tell me about artificial insemination,\" he began. \"My partner says that if we can secure a Borealan donor, the process should be pretty straightforward.\"\n\n***\n\nJamie arrived back at his apartment to find Liz lounging on the couch, a tablet computer clutched in her furry hands. She was in her usual state of undress, wearing only a pair of tight shorts and a loose-fitting tank top that barely served to preserve her modesty. She didn't even look up as he entered the room, she was too engrossed in whatever she was reading.\n\n\"Hey, Liz,\" he called as he tossed his jacket onto the coat rack by the door. \"I'm back from the clinic. They basically told me the same thing you did, I don't know why I got my hopes up like that. Guess it was a pretty stupid suggestion.\"\n\nHe walked over and sat down on the edge of the cushions, Liz looking up from her work, blinking her green eyes at him as he brandished a handful of colorful pamphlets.\n\n\"I made some progress, though. The doctors over there provide both artificial insemination and surrogate services. They can arrange the whole thing, we just have to decide which one we want to go with. They gave me all these leaflets.\"\n\n\"It wasn't a stupid suggestion,\" Liz shot back, Jamie cocking his head at her. \"It was too smart. That was the problem.\"\n\n\"Huh?\" Jamie asked, lowering his pamphlets.\n\n\"We can't splice two unrelated species together because our understanding of genetics and our level of medical technology doesn't allow it,\" she added, waving her tablet as she spoke. She was going a mile a minute, just like she had when they were kids, and she was explaining some lofty concept about xenolinguistics or exobiology to him. He hadn't seen her so enthusiastic in a long time.\n\n\"And?\" he asked, wondering where she was going.\n\n\"And, there are two species that we know of that are more advanced than humanity, at least in that area. The first are the Brokers, and good luck getting them to share any of their technology without a hefty price tag. I've been researching all day, and there's so little information on them that I can't even work out what they actually look like.\"\n\n\"What's the second?\" Jamie asked.\n\n\"The Betelgeusians,\" she replied, her emerald eyes glinting.\n\n\"The Bugs?\" Jamie repeated, raising an eyebrow incredulously. \"You mean the species of murderous insects we've been at war with for our entire lifetimes? The species that raze whole colonies without a shred of remorse?\"\n\n\"That's the one,\" she replied, turning her attention back to her tablet. She scrolled through an article, the tip of one of her hooked claws covered by a rubber cap to prevent her from scratching up the glass. \"Betelgeusian tech is all organic. Even their guns and ships have genetically-engineered components, each one a purpose-built lifeform designed to carry out a specific role. They have an understanding of DNA that transcends even Earth's most celebrated geneticists. The problem is, capturing their technology for study is extremely difficult. Their equipment literally dies in captivity, and since they tend to fight to the death, obtaining undamaged samples is rare.\"\n\n\"I'm listening,\" Jamie replied, \"but I'm having a hard time seeing how that helps us.\"\n\n\"When we were talking about genetics last night, it got me thinking,\" she continued. \"Back on Borealis, I'd hang out with Coalition auxiliaries whenever I could, Borealans who had served alongside UNN troops. They were a little more mellow than the other natives, and they knew what it was like to live around humans during their deployments. Anyway,\" she added with a dismissive wave of her hand. \"Borealans like to share war stories, the bloodier the better, and they'd often get to talking about their experiences in the Navy.\" She set down her tablet now, giving him her full attention. \"This one time, not long before I made it off-world, I was at a banquet hall where a lot of the auxiliaries liked to hang out. There was a pack there that had just shipped home after finishing a tour, and they were talking about something so unusual that it stuck with me.\"",
        "\"What was it?\" Jamie asked.\n\n\"They said that they had been deployed to a planet to root out a Betelgeusian hive that was dug in there, but that the enemy had been inducted. That stood out as bizarre to me, because Betelgeusians aren't known to surrender, and inducted is a very Borealan term to use. It refers to forcibly making someone a member of your pack, usually through defeating them in a dominance bout. After a little more prodding, they revealed that when they had extracted, they had left said hive intact.\"\n\n\"Wait a minute,\" Jamie said, her words sparking a memory. \"I remember that, it was all over the news a few months back. The talking heads were going crazy about how the Coalition had voted to let a colony of Bugs join the alliance. I don't really follow politics, but you couldn't get away from it for weeks. Everyone was talking about it at work.\"\n\n\"Now you're on the right track,\" she continued, picking up her tablet again. \"The planet is called Jarilo, and it's a rare find. The conditions there are remarkably similar to those of Earth. A UNN fleet was tasked with securing it at all costs and driving out the Betelgeusians who had staked their claim to it.\"\n\n\"And that's when they surrendered?\" Jamie asked.\n\n\"It's unheard of,\" Liz replied, turning her eyes back to her device. \"I could find no other recorded instance of a hive fleet surrendering. Not even a retreat. Epsilon Eridani, Kruger, Valbara. They fight to the death every time, like cornered animals, but something about Jarilo was different. Something changed their behavior, made them more amenable. Take a look at this.\"\n\nShe turned her tablet around, Jamie leaning closer to get a look. A video was playing, showing a strange creature from the shoulders up. It was a Betelgeusian, Jamie had seen enough footage of them to recognize it, but there was something different about this one.\n\nThe Drones that served as the foot soldiers in the Bug fleets wore helmets that blended seamlessly with their carapace, sporting a pair of glowing, compound eyes. This specimen had no such helmet. Its eyes were large, expressive, almost mammalian in appearance. The sclera was a vibrant pink in color, the dark pupils drawing him in. In place of the grotesque mandibles of a Drone, there was a pair of small, red lips that were remarkably human. They almost looked like they had been painted on, and upon closer inspection, they didn't have much range of motion. Its chitin was iridescent, like mother of pearl, shining as it caught the light. Like a mantis disguising itself as an orchid, this Bug seemed to have taken on a more sympathetic form, its face reminding him of a china doll.\n\nBugs usually had a long horn that protruded from their foreheads, reminiscent of a stag beetle. This one still retained the horn, but as it rose from her head, the thick stem branched out into two swooping projections. They were ornate, symmetrical, giving the impression that she was wearing a tiara. From her head sprouted four feathery antennae, two of them standing erect atop her skull, while the latter hung down her back like a pair of long braids. Around her neck was a large, fluffy ring of white fur, like an Elizabethan ruff made from the fuzz that one might find on a moth.\n\nJamie quickly realized that he had given the creature a gender, even though he had no idea what it actually was. It had a distinctly feminine appearance. Uncanny, really.\n\n\"This is their ambassador,\" Liz continued, putting emphasis on that last word. \"The hive on Jarilo needed a spokesperson, someone to be their public face, so they just made an entirely new life form that was perfectly tailored to that task. It speaks English, it emotes, and it isn't afraid to give interviews.\"\n\n\"It kind of looks...\"\n\n\"Human, right?\" Liz added. \"Jamie, not only do I think that hybridizing DNA from different species is possible, I think it might already have happened. Just look at this thing, don't you think it has some human DNA in it?\"\n\n\"They could have just made it up to look like that,\" he replied. \"But...if there really are friendly Bugs out there, if there's even a small chance that they can help us, we can't leave it alone. We have to get in contact with them somehow, find out if there's a way that we can have a kid of our own, made from us.\"\n\n\"To think that I'm the one with a background in biology, but it took your idea to point me in the right direction,\" she said as she gave him a warm smile. \"You're not the dumb jock you think you are, you know.\"\n\n\"A broken clock is right twice a day,\" he replied with a shrug, Liz chuckling at him.\n\n\"Now the problem is, how do we get in contact with the people on Jarilo? According to what I was able to find online, the planet has human colonists, and there are several settlements dotted around the planet. The article didn't mention the hive. Maybe they don't want to advertise it to the whole Galaxy.\"\n\n\"I've had some experiences with interstellar communications,\" Jamie said with a grimace, remembering all of the wasted effort he had expended trying to get in touch with Liz after she had left Earth. \"It's either so slow as to be pointless, or it costs enough to empty the average savings account.\"\n\n\"Yeah, I don't think waiting an eternity to get an email through a satellite comms buffer is the best way to go about this,\" Liz replied. \"You know...even if we managed to get a message through, and whoever we contacted was able to send a reply, it's not like they'd ever let a Betelgeusian set foot on Earth. We'd have to find a way to go there to get whatever treatment they might offer.\"\n\n\"Liz,\" Jamie began warily, raising his hands in a gesture for her to slow down. \"I can already tell what you're thinking, but this isn't the kind of situation where we need to be decisive. There's a thin line between seizing the moment and being impulsive. We have jobs, responsibilities, we don't even know anything about Jarilo.\"\n\n\"If there's a possibility-\"\n\n\"That's all we have right now,\" he interrupted, \"a possibility. We don't know what's waiting for us out there.\n\n\"If you're never willing to gamble, you'll never win big.\"\n\n\"But what if it's dangerous? What if you get hurt?\"\n\n\"You don't need to protect me anymore, Jamie,\" she said with a smile. \"I'm not a scared little girl anymore, I can handle myself.\"\n\n\"I've never even been off Earth,\" he protested. \"How would we even get there? What would we do about our responsibilities here?\"\n\n\"This might be our only chance to conceive,\" she replied, her tone pleading. \"The alternative is staying here, never taking that chance, never knowing if we made the right decision. We go with one of the other options, and we always wonder. Can you live with that?\"\n\nJamie sighed, combing his fingers through his hair. He was arguing against the only option that sat right with him, the only way for them to have a baby together. So what if they had an apartment to take care of, so what if they had jobs? What was an apartment or a job compared to something as profound as this?\n\n\"You're right,\" he conceded, Liz's round ears pricking up. \"This might be the most difficult option, but it's also the best one.\"\n\n\"When is that ever not the case?\" she chuckled. She hooked him with her tail and pulled him into her arms, trapping him in a bear hug as his pamphlets fluttered through the air. She pressed his face into her cleavage through the scant fabric of her top, her warm breath blowing his hair as she nuzzled. \"Don't worry,\" she cooed, \"this will be an adventure. We're gonna go out there, we're gonna make this work, and we're gonna pop your space cherry.\"\n\n\"But how will we get there?\" he asked, his voice muffled by her boobs.\n\n\"Leave that to me,\" she replied. \"I work at an embassy, remember? I'm in a perfect position to look into it.\"\n\n***\n\nThe next day, Jamie could barely contain his excitement as he made his way home from work. It was an odd blend of anticipation and apprehension that made his stomach swarm with butterflies. His hope that he and Liz might have a child together had been renewed, but the prospect of going into space -- of visiting an alien planet -- filled him with fear. He was what the more traveled denizens of UN space called muddy in reference to the terrestrial dirt that they imagined caked the shoes of those who had never been beyond orbit.\n\nSpace travel wasn't fast, cheap, or convenient. Crossing the vast distances between planets could take months, with the passengers trapped in cramped vessels like sardines crammed into a can. Not only that, but he had heard that superlight travel was an uncomfortable experience, the energies that allowed a ship to violate the laws of physics playing merry hell with living nervous systems. It wasn't something he was particularly excited to experience for himself, but he would brave the ordeal if it meant finding a solution to their problem.\n\nHe arrived at his building and entered the lobby, riding an elevator up to his floor. As he stepped through into his apartment, Liz was sitting in her usual place on the couch, her ears swiveling to track him as he entered the room.\n\n\"Jamie! You're finally back,\" she said, turning to wave him over. He walked over to the couch and flopped down beside her, still coated in sweat from his jog. She wasted no time thrusting her tablet into his hands, Jamie examining the text on the display. \"I spent a good deal of time misappropriating the embassy's resources today to get info on Jarilo.\"\n\n\"What did you find out?\" he asked.\n\n\"Jarilo isn't like other colonies,\" she began. \"There are generally two kinds of colonization programs that I could find. The first are supported by the UN. They give citizens of the more populated planets like Earth or Mars a grant to move to a developing colony, and that grant increases based on your qualifications. If you're a mechanical engineer or a farmer, you can get paid a nice chunk of change to move somewhere like Franklin and start a life there.\"\n\n\"Makes sense,\" Jamie said as he scrolled through the text. \"They want to reduce overpopulation and get people with the right skillsets to where they're most needed.\"\n\n\"The other kind are corporate ops, usually mining or some kind of resource exploitation. A corporation will ship out colonists to planets like Hades, where they're then employed to work on-site. On paper, it's all above-board. The corp offers them lodging, a steady job, and a chance to start fresh. In reality, these corporations have total control over the colonists. They often pay them in scrip, a currency that can only be exchanged at stores owned by the same people who issued it. They sometimes saddle colonists with debt and make them work it off, too, which turns them into indentured servants in all but name. They're not scrupulous about who they hire, either. It's a popular way for people to escape debt or criminal charges. They just take a corporate contract and vanish.\"\n\n\"That one sounds...grim,\" Jamie muttered. \"So, which kind of colony is Jarilo?\"\n\n\"Neither,\" she replied. \"At least, not exactly. There are grants available to incentivize people to move there, I was able to dig some up, but it looks like all of the applications have to go through the UNN.\"\n\n\"Why would the Navy have the final say in who gets to settle on a colony?\" he wondered, his brow furrowing.\n\n\"It must have something to do with the Betelgeusians,\" she replied, slamming her fist into her furry palm confidently. \"There's a whole fleet in orbit around the planet, and I can't figure out if it's there to protect the hive from the rest of the Galaxy or to protect the rest of the Galaxy from the hive. Either way, they aren't letting just anybody come in and out.\"\n\n\"This sounds like it's turning into some kind of heist movie,\" Jamie muttered, eliciting a chuckle from Liz.\n\n\"Believe it or not, I was going to suggest that we pose as colonists and hitch a ride on a jump liner, but the Navy presence throws a wrench in that plan.\"\n\n\"I don't think we necessarily need to go undercover,\" Jamie added. \"Maybe they'll let us through if we just explain what we're doing there?\"\n\n\"So...we tell them we're seeking treatment, and just see what they say?\" Liz asked.\n\n\"I don't see why they'd turn us away,\" Jamie replied with a shrug. \"We don't have criminal records, we're not fugitives. Neither of us are war vets harboring grudges against the Bugs.\"\n\n\"What if the Navy is there to keep the Betelgeusians completely isolated, to stop anyone from interacting with them at all?\" Liz suggested.\n\n\"Well, they're not doing a very good job of it,\" he replied. \"The Bugs have an ambassador who seems pretty happy to go on newscasts, and there are human colonists sharing the planet with the hive. If the UNN wanted to completely isolate them, surely letting civilians run around on the surface would be counterproductive?\"\n\n\"I guess that makes sense,\" she conceded.\n\n\"If they turn us away, then we can start doing the spy movie shit,\" he added. \"Until then, let's try not to act suspicious, because we aren't...\"\n\n\"Hang on,\" Liz said, her feline eyes narrowing. \"I just had an idea.\"\n\n\"Does it have anything to do with becoming stowaways?\"\n\n\"No, no. Back in college, when I was studying xenobiology, there was an organization that would give out university scholarships to promising students. They had us sit a special exam one time. Hand me the tablet,\" she added, Jamie passing the device back to her. \"Here we are,\" she said, tapping at the touch screen. \"The United Academy of Sciences. They sponsor all kinds of scientific expeditions, they give out research grants, that kind of thing.\"\n\n\"What are you getting at?\" Jamie asked.\n\n\"What we're planning here is pretty ambitious. It's never been done before, and if we succeed, the implications for the field of genetics will be huge. What if we contacted the UAS and got them to sponsor us? They'd have a much better chance of getting us through the blockade, and they might cover the travel costs too. I still have some funds left over from my stint on Borealis, but it's not going to be enough to finance a two-way interplanetary trip.\"\n\n\"I don't know if we should be making a circus out of this,\" Jamie replied, Liz setting down her tablet on the armrest of the couch as she glanced over at him. \"Do we really want starting a family to become some kind of science experiment?\"\n\n\"It was always going to be a science experiment, Jamie,\" Liz sighed. \"If not presided over by Bugs or researchers from the UAS, then the doctors who would be performing the fertility treatments we'd need. The stars are aligning here, let's not pass up this opportunity.\"\n\n\"There are a lot of what-if's in this scenario,\" he said, rising from the couch to pace back and forth in front of it as he continued. \"The UAS might decline, we don't know if this is even the kind of venture they'd be interested in funding. The Navy might not let us through, the Bugs might not even have the know-how that we assume they do, and nothing would come of it.\"\n\n\"And what if it all works out the way we want it to?\" Liz asked quietly, Jamie stopping his pacing. \"Wouldn't it be worth all of the trouble?\"\n\n\"I know how much you want this,\" he replied, \"I'd walk over broken glass to make it happen. I want it too, I just don't want you to get your hopes up until we know more.\"\n\n\"I said I wouldn't railroad you,\" Liz added, chewing on the end of her claw as she reined in her enthusiasm for a moment. \"We're a team, not a pack. This isn't just about what I want, it involves the both of us, and we need to be on the same page if we're going to go through with this.\" She glanced up at him with those green eyes, expectant, hesitant. \"So...what's the verdict?\"\n\n\"Come on,\" Jamie said, slipping her a smile. \"Of course I'm not going to say no. Let's get in touch with the UAS and see if they're interested. We'll go from there.\"\n\nLiz beamed back at him, practically bouncing in her seat.\n\n\"We'll make a daddy out of you yet, Jamie.\"\n\n***\n\nAnother day passed, and Liz soon got her answer from the United Academy of Sciences, Jamie listening to her read off the email from across the breakfast table as he ate.\n\n\"They say they're interested!\" she exclaimed, her eyes scanning her tablet's display frantically.\n\n\"No way. Seriously?\" Jamie asked as he set down his spoon. \"They'll do it, just like that?\"\n\n \"They agreed to fund the trip. They called it an expedition,\" she added with a chuckle. \"Their plan is to redirect a UAS survey vessel to take us to Jarilo, and they say they'll take care of negotiating with the Navy to get us past the blockade. We're supposed to meet up with one of their scientists on the ground who will guide us from there. Looks like they already have people doing work on Jarilo.\"\n\n\"They must be studying the Bugs,\" Jamie added. \"Do you know what this means?\"\n\n\"That we have our ticket to Jarilo,\" she replied with a toothy grin.\n\n\"Not just that. If the UAS is willing to fund the whole venture, it means that they must think there's a chance it could work, that we might really be able to have a baby together. If their experts had thought we were crazy for even suggesting it, they wouldn't be shelling out to send us there.\"\n\n\"Holy shit, you're right,\" Liz said, making his cutlery clatter as she slammed her hand on the table. \"The UAS works with the best biologists and geneticists in UN space. If anyone would know, it would be them. Maybe they know something that we don't...\"\n\n\"Let's send them a reply,\" he said, picking up his fork and spearing a piece of bacon. \"We'll need to know when they want this to happen so that we can make the necessary arrangements. A journey like this will take months, minimum. Maybe a year or more, depending on what we actually do when we get to Jarilo. If we're not working, we won't be bringing in any money,\" he added as he prodded at a fried egg. \"We'd better make sure we have enough savings to cover the cost of rent while we're away, or we won't have an apartment to come back to. I'll talk to the landlord, see if they can't shut off the utilities while we're gone.\"\n\n\"I should have enough left over from my time living on Borealis to cover it,\" Liz replied. \"As for our jobs, I don't think I have enough sick days saved up to take a year-long vacation.\"\n\n\"I think we might have to choose between our jobs and the possibility of having a kid,\" he replied with a sigh.\n\n\"Don't frown so much,\" Liz added, brushing his leg beneath the table with her furry tail. \"You'll get worry lines.\"\n\n\"Getting to Jarilo is the priority, of course,\" he continued as he gestured with his fork. \"But if everything goes the way we imagine, you'll be pregnant by the time we get back, and we'll have no income. That's not exactly the best environment to bring a child into.\"\n\n\"I wouldn't be able to work anyway if I was pregnant,\" she replied, glancing down at her flat stomach as though imagining what that might look like.\n\n\"I'm pretty tight with the manager at the supermarket,\" Jamie continued. \"Maybe I can talk with him, arrange something. Man, it wouldn't be so bad if it was just a few weeks.\"\n\n\"No job means no maternity leave, either,\" Liz grumbled. \"This would be so much easier on Borealis,\" she added with a frustrated growl that made Jamie's teeth chatter. \"Want an apartment? No problem. Beat up a guy who owns one. Pregnant? Can't work? Doesn't matter. You have a support group of four or five people who will wait on you hand and foot.\"\n\n\"Hey, I can wait on you hand and foot,\" Jamie reminded her.\n\n\"I don't doubt that,\" she chuckled. \"We might be pushing our luck, but maybe the UAS will help us out? After all, the experiment won't have concluded until the baby is born, right?\"\n\n\"Maybe,\" Jamie said with a nod. \"Just be sure to word it very...diplomatically.\"",
        "\"I work at an embassy, it's my job to be diplomatic,\" she replied with a wink.\n\n***\n\nThe plan was progressing far faster than Jamie had anticipated. After some back and forth between Liz and the UAS, the date had been set, and it was only a scant few weeks away. Interstellar travel wasn't something that one did on a whim. The survey vessel couldn't wait around for them indefinitely, as it had other assignments that were being put on hold.\n\nJamie had given his two weeks' notice, and while his manager had been understanding, he couldn't guarantee that he would be able to rehire Jamie when he returned. It was a pretty low-skilled position, and it would be very easy to replace him. Liz, on the other hand, had fared much better. Her Borealan heritage and her mastery of xenolinguistics made her an asset that the embassy would rehire as soon as she was able to work again. Jamie had also contacted their bank to make sure that they would continue to pay the rent on the apartment while he and Liz were away, because they would be out of contact while in deep space.\n\nThe only way to get messages between planets fast enough that the recipient hadn't died by the time it arrived was through a network of quantum-entangled satellites. They were outrageously expensive to build, and they were only capable of sending small packets of data at a time. Official messages from governments or the Navy were bumped up the queue, while civilian messages usually languished in the comms buffer while they waited for a slot to open up. For a vessel traveling through deep space, communication was impossible, as it was limited by the slow crawl of light speed. If your target was twenty light-years away, then it would take twenty years for a tight-beam laser or a radio transmission to reach it.\n\nGoing into space didn't just remove a person from their familiar surroundings, it severed all connections with everything that they knew. Jamie wouldn't even be able to look up the news on his phone or make a call out there. After living his entire life in an environment where all the information he could ever need was just a tap away, and every device from cars to refrigerators was connected to a planet-spanning network, being unplugged was an odd prospect. Liz was nonplussed, as she had spent three years living on Borealis, a planet where running water was considered cutting edge.\n\nThe days flew by, until finally, it was time to face the music. It was an overcast morning when they left their residential building for what could be the last time in months, a chill wind creeping beneath Jamie's jacket as he hauled two suitcases towards a taxi that was waiting for them on the curb. Liz followed after him, her Borealan strength letting her carry far more baggage than he ever could. She was wearing her signature bomber jacket, its collar lined with fur, the brown leather creaking as she tossed the bags into the back of the van. She dusted off her hands, then planted them on her hips, watching as Jamie slammed the door shut.\n\n\"I hope we didn't forget anything,\" she said, turning to glance up at the towering facade of their building. It was so high that the spire was out of view, shrouded in a layer of clouds. \"If we remember that we left the stove on when we're out past Pluto, it's not like we can ask the pilot to turn the ship around.\"\n\n\"I think we've done all that we can to prepare,\" Jamie replied, making his way around to one of the sliding passenger doors. They had opted to hire a van rather than a car, as Liz was too large to fit inside a conventional taxi. She joined their baggage in the compartment at the rear, sitting down the floor, hunching over to avoid hitting her head.\n\n\"Comfortable?\" Jamie asked, peering back at her.\n\n\"It is what it is,\" she grumbled.\n\nJamie directed the nav computer to take them to the spaceport, the van pulling out into the street, matching speed and distance with the other cars to optimize the flow of traffic. He lounged in the passenger seat, fiddling with his phone as the taxi weaved its way along.\n\n\"I'm making sure to max out my storage with as much media as I can get,\" he explained. \"Movies, shows, music, whatever I can find. We're going to need the entertainment when we're cooped up on that survey ship for God knows how long.\"\n\n\"Depends on the speed of the ship,\" Liz explained, bracing her arms against the sides of the compartment to steady herself. \"Jarilo is in the 70 Virginis system, which is about sixty light-years away. The jump carrier I hitched a ride on when I left Borealis could do twelve a month, so that's like...five months. A smaller ship isn't necessarily faster. It depends on the capacity of the generators. I have no idea what the UAS survey vessel can do.\"\n\n\"Here's hoping it's not a ten-month round trip,\" Jamie sighed.\n\n\"You think you're going to be bored out of your mind because you've never been away from your phone,\" Liz added, \"but this is going to be a totally new experience. You've never even left the city, but you'll be going into deep space, you'll be visiting a totally alien planet. You're not going to be bored, trust me.\"\n\n\"What if I do get bored?\" he asked, turning to glance back at her.\n\n\"We'll be stuck in a tiny cabin for weeks,\" she replied with a knowing smile. \"I think we can find some creative ways to pass the time.\"\n\nThe taxi pulled onto the freeway, the vehicles that clogged the lanes moving together like a shoal of fish, their chassis glinting in the light of the rising sun that was slowly burning away the clouds. The towering skyscrapers gradually thinned out, giving way to rolling countryside. It took a good hour for the spaceport to come into view, Jamie leaning forward to get a look out of the windshield at an SSTO as it took off, the plane's boosters burning brightly as it rose into the azure haze.\n\nThe green fields and farmland abruptly gave way to a massive, sprawling complex, almost a self-contained city in its own right. There were several terminals of curving glass and steel, each one linked by a complex network of mag-lev rails and roads, the tall control towers looming above it all. The surrounding area was occupied by long runways and huge landing pads, the sight of a cargo crawler the size of a building trundling along on its tank tracks drawing Jamie's gaze.\n\nThe base of the orbital tether was located nearby, a several-meter-wide strand of what looked like black cable rising up into the sky until it vanished from view. It was anchored to the Earth by a skeletal, ring-shaped structure made of exposed beams and hefty machinery that was the size of a building in its own right, flanked by sturdy supports that extended deep into the ground. Jamie could see the mag-lev rails that led into the structure, but the passenger car that ran up and down the cable was out of view. Despite its immense size, this was only a transit tether, intended for civilian use. The larger variety were located off the coast, their anchors ringed by artificial islands that serviced waterborne cargo ships. They were intended solely for goods, not passengers. Massive interstellar freighters would dock at the stations in orbit that served as their counterbalance, loading and unloading cargo from around Coalition space that would then be ferried up and down the elevator.\n\nThe taxi slid into a parking spot, Jamie hopping out onto the asphalt, glancing around to see an ocean of cars. Liz soon emerged from the rear compartment, stretching her arms above her head, glad to be free of the cramped interior. Jamie went to find a baggage cart, and they piled their belongings into it, Liz pushing it as they made their way to the terminal. They stepped through the automatic doors, emerging into a long, squat structure.\n\nThe roof was mostly glass, like a giant greenhouse that let the sunlight bleed in. The majority of the building was taken up by a large concourse that was lined on either side by stores and restaurants, escalators and elevators leading to the higher floors. Even this early in the morning, it was packed with crowds of people who were hurrying to catch their next flight.\n\n\"Which gate are we leaving from?\" Liz asked, Jamie pulling up his phone.\n\n\"Twenty-eight. It's right at the other end of the terminal.\"\n\n\"Lovely,\" she grumbled, pushing the cart along behind him. They passed by dozens of storefronts, the scents of cooking food distracting Jamie as he weaved his way through the throngs of weary travelers.\n\n\"You want to get some breakfast?\" he asked, turning to glance back at Liz. \"We're here a good couple of hours early.\"\n\n\"Sure,\" she replied. \"I don't expect the galley in the survey ship is going to be serving filet mignon. This might be our last chance to get some comfort food before we leave.\"\n\nThey steered their cart into a fast food restaurant, choosing a small table at the back of the room. The seating wasn't sturdy enough to handle Liz's weight, so she sat down on the floor, the table still at a comfortable height due to her stature. After examining the laminated menus, they ordered burgers and fries, Liz eating portions large enough for five people. While a human needed two-thousand calories a day to function properly, Borealans needed ten-thousand calories to maintain their enormous bodies, and plenty of protein. An employee wearing a colorful apron brought over a stack of cheeseburgers that would have looked more at home on a buffet table, Liz lifting one to her mouth and taking a generous bite. Meat and cheese was her favorite combination, so greasy fast food ticked all of the boxes.\n\n\"You've been to space before,\" Jamie said, pausing to take a bite of his burger. \"What was it like?\"\n\n\"I spent about a year in space,\" she replied, extending her long tongue to lick some of the grease from her furry fingers. \"And that was just traveling to and from Borealis. Six months there, six months back. I'm not sure what I could tell you that isn't already obvious, though. You're in a cramped, sterile environment for long periods of time, and you'll have to endure several jumps to get where you're going. That part is never very pleasant.\"\n\n\"Do they really hurt as much as people say they do?\" he asked warily.\n\nLiz pondered for a moment, taking another wet bite of a burger. They were so small in her giant hands, barely the size of a slider by human standards.\n\n\"It's not that it hurts, exactly,\" she replied. \"You might get muscle cramps and migraines, those hurt, but it varies from person to person. When a ship performs a superlight jump, it briefly exits reality as we know it, traveling into a higher dimension where the laws of physics no longer prohibit faster than light travel. We can't break that speed limit here, so we just send the ship somewhere we can. The downside is, living nervous systems don't do well there. Something about its properties stops them from functioning right. It doesn't matter that you're inside a ship or wearing a spacesuit. It's something to do with the way that the fundamental laws of physics differ in that dimension. You'll lose consciousness, and your nerves will go haywire, resulting in muscle spasms and disorientation when you come to. It's good practice to use the manacles on the crash couches and to bite down on a bit so that you don't accidentally bite your tongue off.\"\n\n\"I thought you might try to dress it up a little for me,\" Jamie grumbled, dipping a fry into his ketchup.\n\n\"There's no way to sugarcoat it,\" she replied with a shrug. \"It sucks, but it's not dangerous as long as the right precautions are taken, and it gets a little easier each time you do it. I've even heard stories of ship captains who can remain standing on their bridge during a jump because they've done thousands of them. Don't worry,\" she added, brushing his leg with her tail beneath their table in an attempt to reassure him. \"The jumps will be weeks apart, and we'll only be doing a few. Maybe half a dozen, depending on the ship. The rest of the journey should be pretty relaxing.\"\n\n\"I guess taking a few months off work to hang out isn't so bad,\" he said, perking up a little.\n\nThey finished up their food, then proceeded through the terminal, reinvigorated by their full stomachs. They soon arrived at a security checkpoint, where they were met by a pair of uniformed guards who were screening a queue of people. Liz and Jamie hauled their bags onto a conveyor that passed them through a scanner before sending them to be loaded, then they were waved forward.\n\nJamie lifted his arms as one of the guards passed a handheld device over his jacket, checking for weapons and contraband. Upon finding nothing, he waved him through the gate, Jamie turning to watch Liz step forward.\n\nThe guard hesitated as he glanced up at her towering, eight-foot frame, failing to conceal his alarm. Liz didn't stand out so much in the spaceport, it was one of the few places on Earth that one might expect to encounter an alien, but the reputation that the Borealans had garnered for being belligerent preceded them wherever they went. Liz wouldn't have swatted a fly if it could be avoided, but the guard had no way of knowing that. All he could see were the claws, the rippling muscles, and the bomber jacket.\n\nHe lifted his scanner, wary of getting too close as he ran it over her midriff, probably operating at the greatest distance the sensor would allow. She was tall enough that he had to stand on his toes to reach her torso, waving the device over her leather jacket. He was visibly relieved when he confirmed that she didn't have any concealed weapons, motioning for her to carry on. Liz gave Jamie a toothy grin as she joined him on the other side of the gate, and they began to load their carry-on bags back onto the cart.\n\n\"Hey, look,\" Jamie said as he gestured to another row of stores. \"Duty-free. Want to load up on some tax-exempt booze for our trip?\"\n\n\"You know Borealans can't hold their drink,\" she replied, \"but go ahead. Getting plastered is a good way to pass the time, right?\"\n\nThey made their way into one of the stores and began to peruse the shelves of glitzy jewelry, drinks, and gaudy souvenirs. Jamie picked up a small shopping basket on his way to the alcohol section, where he selected a few choice bottles of spirits, Liz idly spinning a rack loaded with colorful badges while she waited.\n\n\"Hey!\" Jamie called to her, alarming a tourist who was browsing nearby. \"They have snacks over here, I know you won't say no to those.\"\n\nThat got her attention, and she strode over to join him, the tourist slinking away when he saw the fearsome alien approaching. Such reactions had bothered Liz when she was younger. Her alien heritage had been a source of embarrassment for her, and she had taken great pains to hide her Borealan features beneath mittens and beanies. She had even tucked her tail into her pants in an attempt to avoid drawing attention. She had returned from the homeworld prouder and more confident, no longer fearing the curious stares of strangers.\n\n\"What have they got?\" she asked, ignoring a display of exotic chocolates and candies completely. Her kind weren't very sensitive to sweet flavors, so sugary treats were of little interest to her.\n\n\"Beef jerky,\" Jamie cooed, waving a packet of smoked meat at her. She looked conflicted, like a drunk eyeing an open bottle of bourbon after months of sobriety, but she soon caved. He laughed as she scooped an armful of the plastic packets off the shelf, dumping them into the little basket he was carrying.\n\n\"Might as well indulge,\" she muttered. \"We can probably fit them in one of the bags.\"\n\n\"Don't worry,\" he added, giving her a playful nudge with his elbow. \"The UAS is paying for the elevator ride, so we don't have to worry about bringing a few extra pounds aboard.\"\n\nThey paid for their goods, then located their gate, taking a seat on the rows of benches nearby as they waited. For once, there were seats large enough to be comfortable for a Borealan, so Liz didn't have to sit on the carpet. Rather than sit a few feet away from her on the human-sized benches, Jamie elected to take a turn on the floor by her side. He leaned back against the wall, idly scrolling through his phone as he glanced around the terminal. There were quite a few people milling about, also waiting for their turn to the ride elevator up into space. It looked like it was going to be fairly packed. The company that operated the tether wanted to get their money's worth, no doubt.\n\n\"Have you ridden one of these things before?\" Jamie asked, glancing up at his companion.\n\n\"A couple of times,\" she replied. \"It's a much smoother ride than a shuttle, I'll tell you that much. It takes a few hours to get up to the station, but it's kind of like being in a giant elevator car, which I suppose is pretty apt. You can look out of the windows, watch the Earth slowly fall away.\"\n\n\"Any last messages you want to send before we leave?\" Jamie asked as he tapped at his phone. \"I'm sending one to my parents.\"\n\n\"What did they say when you told them where we were going?\" Liz asked.\n\n\"Not a lot,\" he replied with a shrug. \"We haven't talked much since I moved out. They weren't exactly overflowing with support after you left.\"\n\n\"You'd be surprised how easily a cute grandchild can reel in wayward relatives,\" Liz replied, reaching down to ruffle his hair affectionately.\n\nIt took another hour before their ride arrived at the gate, a mag-lev train with several cars pulling up to the terminal. A small gantry extended as its doors opened automatically, a good eighty people starting to form a queue as they boarded. Before long, they were packed into the seats, the train starting to accelerate along its rail as it veered away from the terminal. To Jamie's right, he could see the anchor of the tether through the windows, looming ever larger as they neared it.\n\nThe base of the structure stood several stories tall, concrete buildings that might be control rooms, warehouses, and boarding areas built into the exposed superstructure. Between them emerged a set of eight giant pylons that somewhat resembled oversized pistons. They were used both for securing the massive, sixty-thousand-kilometer cable and for making minute adjustments to its angle and tension to keep the orbiting station at the other end in the correct position. The structure that joined everything together was made up of naked beams and supports, like a giant, metal rib cage that enclosed the anchor.\n\nThe mag-lev made a semi-circle around the base, its rail raised a good twenty feet off the ground, eventually sliding into a cavernous hangar. It resembled a train station, with a concave roof made from exposed support beams and panes of glass that let sunlight shine through, half a dozen other magnetic tracks terminating here. Jamie gripped the handhold above his head to steady himself as the train slid to a stop, the automatic doors opening again to let the occupants dismount. He and Liz stepped out onto one of the platforms, the other passengers giving his alien companion a wide berth as though afraid that she might step on them.\n\nAt the far end of the station were a series of doors that led deeper into the building, the crowd slowly flowing in their direction. They stepped through onto a ring-shaped platform that encircled the base of the monstrous cable, the roof above their heads covered over by concrete this time, rather than glass. Ahead of them was the passenger car, a circular climber that attached to the cable like a steel fitting around a garden hose.\n\nIt was even larger than the train, and it could hold many more people, Jamie able to see a few passengers who were already milling about inside through the many round windows that lined its white hull. It looked almost like an old space capsule, albeit many times the size, tapering into a conical shape at the top to diminish air resistance during the climb. He was a little unnerved to see the housings for the flotation devices that ringed the base, designed to be deployed in the event of a malfunction that required it to detach from the cable and fall back to Earth. How exactly it did that when it seemed to be built around the cable, he wasn't quite sure.",
        "They began to load into the car, walking along gantries that led to the open hatches, Liz having to duck to avoid hitting her head as she stepped through. The interior was the same white color as the hull, the deck carpeted in UN blue. There were rows of seats that faced outward from the cylindrical bulkhead at the center, arranged on an incline, kind of like the seating in a theater. The other occupants were already loading their belongings into the baggage compartments above their seats, helped by a crew of half a dozen uniformed stewardesses. One of them walked up to Liz and greeted her, remarkably nonplussed by the sight of the giant alien. She had probably seen several in her time.\n\n\"We have Borealan seating this way, Ma'am,\" she said, leading her around the circular compartment until they reached a set of larger seats. They were more like office chairs, with a cutout below the backrest, perhaps more suited to species with tails. Liz thanked her, then took a seat at the far right of the row, meaning that Jamie could sit in a human-sized seat beside her. As Liz began to stow their bags, he noticed that the passenger compartment wasn't an unbroken ring. There was a wall blocking the way to his left. Upon closer inspection, he realized that it was a sealed booth for the crawler's operator. He could see someone sitting at a control panel through a small window.\n\n\"I didn't expect it to be this big,\" Jamie muttered. \"There are bathrooms, stewardesses, enough room to get up and walk around. It's more like an airliner than what I was imagining.\"\n\n\"It's a smoother ride than an airliner,\" Liz replied, slamming the baggage compartment above their seats shut. \"By the time we're going to be traveling at any real speed, we'll be beyond the atmosphere.\"\n\nA few minutes passed, and then the seatbelt signs above the windows ahead of them came on, Jamie fastening his harness around his waist. There was a crackle as a woman's voice came through sets of speakers that were spaced around the compartment, the chatter of conversation dying down. One of the stewardesses began to list off safety instructions, informing them of what to do during an emergency separation and letting them know to remain seated until the climber cleared the upper atmosphere.\n\nThe car began to move, Jamie feeling no vibrations of any kind, which suggested that it must use a mag-lev system similar to the train that they had ridden here. It quickly cleared the anchor, rising into the air, Jamie watching the surrounding countryside shrink away. In only a few minutes, they were nearing the cruising altitude of a plane. The car was going straight up, it had no need to gradually gain altitude as an aircraft would.\n\nThey sped up through the clouds, the city coming into view in the distance. At this altitude, the mile-high skyscrapers were no larger than chopsticks, the sun reflecting off their thousands of windows to make them glitter like diamonds in the morning light. Beyond the urban sprawl was the shining ocean, fading into the atmospheric haze at the limits of his vision.\n\nAs soon as the seatbelt sign turned off, Jamie hurried to one of the round windows, pressing his face against the glass as he tried to get a look down. Because of the upward slope of the hull, he couldn't see the tether directly below, but he could see the endless expanse of the planet as the flat horizon slowly began to curve.\n\n\"Take a good look,\" Liz said as she joined him by the window, planting a hand on his shoulder. \"This might be the last you see of Earth for a while.\"\n\n\"I can't believe I'm really going into space,\" he said, turning to glance up at her. \"It's surreal. I work at a supermarket, I don't make enough to be a tourist, I shouldn't have any reason to be here.\"\n\n\"Space elevator-induced imposter syndrome,\" Liz mused, ruffling his blonde hair. \"That's a new one. Just wait until you see the planet in its entirety. It's a strange feeling, seeing everything that you've ever known reduced to a tiny, blue marble that could fit in the palm of your hand.\"\n\nA few more of the passengers had risen from their seats now, milling about the compartment, admiring the view. The stewardesses soon reappeared to offer refreshments, and Jamie was surprised to see that alcohol was allowed onboard. It wasn't exactly a first-class experience, but it was turning into a far more enjoyable ride than he had been anticipating. It was kind of like riding a very spacious and well-furnished bus.\n\nBefore long, the sky above became an inky black, the cold, naked stars starting to twinkle. They must be approaching the limits of Earth's atmosphere now, the cusp of space. The world below only grew rounder as time passed, like a fisheye lens filter was gradually being applied to it, the finer details becoming less defined.\n\n\"Keep an eye out for the station,\" Liz said, gesturing to the ceiling. \"You should be able to get a pretty good view of it when we get close enough. We're probably about halfway up by now.\"\n\nCHAPTER 3: VECTOR\n\nAnother couple of hours passed, Jamie only leaving his place at the window to eat a meal that was offered to him by a stewardess. It wasn't especially good, bringing to mind the age-old jokes about airline food, but travel had made him ravenous. Liz was similarly unimpressed, but at least they had given her a larger portion. All things considered, they were very accommodating of aliens. They probably had to be, as this was one of the few places on Earth that they were likely to pass through regularly.\n\nThe Earth was finally small enough for him to see it in its entirety. It was about the size of a basketball now, framed against the black backdrop of space, its azure oceans making it shine like a jewel as it reflected the unfiltered glare of the sun. Jamie hadn't imagined that the tether would be so absurdly long. It was a little unnerving, being so deep into the void, so exposed. There was only a pane of reinforced glass, or maybe some kind of transparent polymer that separated him from the instantaneous death that lay just a couple of inches away. This far out, the gravity of the Earth barely had any effect. It was only the climber's AG field that was keeping their feet rooted to the carpet.\n\n\"Check it out,\" Liz said, \"you can see the station.\"\n\n\"Really?\" Jamie asked, squinting into the darkness. \"I don't see anything.\"\n\n\"Oh yeah, I forgot that my eyes are better than yours,\" she chuckled. \"It might take a few more minutes.\"\n\nShe was right, as usual, the glint of the station soon coming into view. At this distance, he couldn't make out much detail, but that gradually changed as they approached.\n\nTheir tether wasn't the only one, he realized. There were a dozen or more that converged on the underside of the station, what looked like an upside-down dome made from white metal. He could see hundreds of glittering windows, the long cables disappearing into recesses in the hull. It was hard to tell with no frame of reference, but as they neared, he guessed that the disk was maybe three thousand feet across.\n\n\"That's the underside of the station,\" Liz explained. She had been here before, likely to this very station. \"This one is called American Terminus because it has tethers in both hemispheres.\"\n\n\"Why is that?\" Jamie asked, watching the disk loom above them.\n\n\"A conventional space elevator can only be tethered to the equator,\" Liz explained. \"You couldn't have one in the states, or in Argentina, because it would be pulled out of its orbit. Instead, these stations have multiple tethers that terminate in both hemispheres. They serve several countries at once. This one has anchors in Canada, the USA, Argentina, Brazil, Mexico. They all end up in the same place.\"\n\n\"Look!\" Jamie exclaimed, pressing his nose against the glass. Along a nearby tether sped a large, cylindrical pod, several times the size of their own climber. It was heading back towards Earth, quickly vanishing from view.\n\n\"That's probably a cargo crawler,\" Liz said. \"It'll be full of shipping containers.\"\n\n\"Is the station just this upside-down dome?\" Jamie asked.\n\n\"No, that's just the lowest segment where the crawlers dock. There's a central pillar that runs up vertically through the station, like the trunk of a tree. Right at the top are the docks, huge berths that are open to space. That's where the jump freighters come in to unload their cargo. Beneath those are several disks that branch off from the central structure, stacked one on top of the other, kind of like pineapple rings. They don't spin like you might imagine because gravity is provided by the AG fields, so they're stationary. That's where the crew lives, where the hotels are, that kind of stuff.\"\n\n\"How big is it?\"\n\n\"Not sure,\" she said, scratching her chin with one of her claws. \"If I remember, it was at least six thousand feet tall. It's pretty huge.\"\n\n\"It's over a mile tall?\" Jamie mused, trying and failing to get a better look.\n\n\"It's big,\" she confirmed with a nod. \"Like I said, this thing services the entire American continent.\"\n\nThe seatbelt signs came on once again as the cavernous opening above swallowed them, casting them into shadow as it blotted out the sterile glare of the sun. Jamie returned to his seat reluctantly, strapping in, the voice of a stewardess echoing through the speakers.\n\n\"Ladies and gentlemen, welcome to American Terminus Station. We hope that your ride with us has been a pleasant one. Please remain seated while the seatbelt sign is on. Be sure to remove all bags and belongings from the overhead storage compartments once the crawler has come to a full stop. Checked baggage will be unloaded from the cargo bays shortly. Please proceed down the gantries, and follow the colored arrows to reach the baggage reclamation area.\"\n\nJamie felt the floor vibrate beneath his feet, a tremor rocking the crawler as what must have been docking clamps locked it into place. Once he could leave his seat, he made his way over to the windows, but all that he could see was the featureless metal of what must be a docking bay.\n\nThe sealed hatches that were spaced out at intervals along the hull popped open, stale air rushing into the passenger compartment. It smelled metallic, processed, like an air vent exhaust in a tall building. The oxygen that he was breathing had probably been recycled innumerable times.\n\nHe and Liz loaded up with their bags, following the crowd of travelers as they slowly filed out onto a ring-shaped platform that surrounded the crawler, not dissimilar to the one in the anchor back on the ground. Large doors led out into a subtly curving corridor that was wide enough for five or six people to stand shoulder to shoulder, far more spacious than Jamie had been anticipating. The ceiling was even high enough that Liz didn't have to duck.\n\nAll of the exposed hull material was white, making him feel a little like he was in a hospital, while the carpet was the same UN-blue that he had seen in the crawler. He soon found the arrows that the stewardess had mentioned, a series of color-coded lines painted onto the walls, each one leading to a different part of the station. He read off the names as he walked by. Main elevator, customs and immigration, baggage reclamation, bathrooms, maintenance.\n\nThe gaggle of chattering travelers turned off into an expansive room, a series of conveyor belts slowly winding their way along. This was where the baggage would be unloaded, identical to what one would expect to see in an airport. After a few minutes of waiting, a myriad of backpacks and suitcases began to emerge from an opening in the far wall, the passengers crowding around as they collected their respective belongings.\n\nJamie and Liz proceeded on, making their way out into another corridor. Jamie paused to examine an information kiosk, pulling up a map, and checking it against his phone. As Liz had described, the station was made up of a huge central tube that ran vertically through half a dozen pancake-shaped disks, terminating in a large dock at the top of the structure.\n\n\"We're supposed to go to umbilical D-twelve,\" Jamie said, squinting at the map. \"I see, each section has a letter. We're in F right now, so we need to take the elevator two levels up.\"\n\n\"Lead the way, navigator,\" Liz said as she hoisted one of their packs over her shoulder. They made their way inward towards the central pillar, following another of the color-coded lines, Jamie lamenting that they were moving further away from the windows. He wanted nothing more right now than to get a look outside. Liz seemed to pick up on his excitement, smiling down at him as she loped along by his side.\n\n\"You're like a little kid with a new toy,\" she chuckled. \"You were never into this kind of stuff when we were younger. The only thing you ever seemed interested in was running track. One would think that dating an alien would make you curious about space travel, but no, Jamie's eyes are fixed squarely on the asphalt.\"\n\n\"A man can broaden his horizons,\" Jamie replied, leading her up to the wide elevator doors. He tapped at the touch panel, waiting for them to open.\n\n\"You're a dork,\" she chuckled, giving his butt an affectionate whip with her tail.\n\nThe doors slid open, Jamie and Liz stepping aside as another dozen people came pouring out of the car, making their way down the corridor. When Jamie stepped inside, he noted that there were surprisingly few buttons on the touch panel, far fewer than there were in the residential buildings that he was accustomed to. Technically speaking, this place only had six levels. He tapped in D, and the doors slid shut, Jamie feeling a subtle sense of motion as the elevator began to rise.\n\n\"You want help with any of that stuff?\" Jamie asked, eyeing the bags that Liz was carrying.\n\n\"Are you kidding?\" she scoffed. \"It's only one G. Try hauling this stuff around in one-point-three.\"\n\n\"Wait a minute,\" Jamie said, feigning surprise. \"Are you suggesting that Borealis has higher gravity than Earth? I have literally never heard about this before.\"\n\n\"Oh, haha,\" Liz replied sarcastically, shifting the weight of her bags. \"I don't see you complaining, mister let me lick your abs.\"\n\n\"Those are private bedroom things,\" he protested, Liz giving him another whip with her tail. He caught it this time, feeling Liz tense as he held it in his hand.\n\n\"Don't you pull it,\" she warned, her cheeks starting to warm. \"Not unless this elevator has an emergency stop, and you're prepared to deal with the consequences.\"\n\n\"Truce,\" he replied, releasing the furry appendage.\n\nThe doors opened, and they stepped out into another corridor, only distinguishable from the last by the different colored lines that ran along the walls. Once they reached its end, they emerged into a more familiar environment, a kind of miniature concourse that ran around the exterior of the disk. It was lined with stores, restaurants, and hotels, wide enough that it resembled a carpeted street. Between the crowds of travelers, Jamie could make out soldiers clad in black armor, their faces hidden behind the opaque visors of their helmets. He had played enough VR games to know that they were carrying CR-52s, top-loading PDWs that fired caseless ammunition. These were UNN Marines, not just spaceport security.\n\nSo far from the front, it was sometimes easy to forget that the Coalition was at war...\n\n\"We have to go left,\" Jamie said, gesturing down the curving concourse. \"I'm not sure what an umbilical is, though.\"\n\n\"You'll see,\" Liz replied, following behind him as they weaved through the crowds. \"It's a way for ships to dock together, or for smaller ships to dock with stations without requiring a berth.\"\n\nThey soon reached the end of the concourse and entered the boarding area. There were rows of airlocks spaced far apart on the curving walls, and finally, windows. Jamie hurried over to the nearest one, pressing his nose up against the glass as he peered outside. To his dismay, he still couldn't see the Earth. It was too far below the station.\n\nWhat he could see, however, was a docked ship. Its bulky, white hull was maybe two hundred and fifty feet from its rounded nose to the conical engine nozzles at the rear, covered in a skin of interlocking tiles. It was vaguely cylindrical, but there was nothing streamlined about it. Everywhere he looked, there was some kind of bulging blister or uneven protrusion, like a plastic mold full of air bubbles. Above a row of cockpit windows was a bulbous, rounded dome, reminiscent of a beluga whale. There were no wings or control surfaces of any kind, which suggested that it wasn't capable of atmospheric flight. There was only a scattering of thruster nozzles that had charred the surrounding hull material black. In bold letters along its flank was stenciled UAS Magellan.\n\n\"Hey, that's a UAS ship!\" Jamie said, Liz leaning down to peer through the window. \"Think that's our ride?\"\n\n\"Look at that radome,\" she mused. \"Probably, yeah. Where is it docked?\"\n\nThe vessel was linked to the station via a skeletal, fifty-foot tube that had been extruded from its hull, wrapped in what looked like a white tarp. That must be the umbilical.\n\n\"Looks like one of the airlocks down the corridor,\" he replied. \"I'm gonna guess that's D-fourteen.\" He paused to pull up his phone, double-checking their instructions. \"Not sure what we're supposed to do now. The email the science types sent us says that we're supposed to show up at the umbilical, and that's it. I don't see anybody,\" he added, peering about the boarding area. There were a few people sitting on rows of benches, presumably waiting for their ride, but there was nobody who stood out to Jamie.\n\n\"I guess we'll take a seat and wait,\" Liz replied, lugging their baggage over to the benches. She had scarcely gone ten paces before someone waved to them from across the room, starting to jog in their direction. It was an olive-skinned man wearing white overalls, a UAS patch sewn onto his upper arm.\n\n\"Lizka and James, right?\" he asked as he came to a stop in front of them. \"My name's Sarris, I'm the radar operator on the Magellan,\" he added as he gestured to the vessel beyond the windows.\n\n\"Sorry, have we...met before?\" Jamie asked.\n\n\"Nah,\" Sarris replied, nodding to Liz. \"They told me that a human and a Borealan would be coming to D-fourteen, and your friend is the only one I've seen.\"\n\n\"Oh, of course,\" Jamie chuckled. He had been around Liz for so long that he tended to forget how rare it was to see a Borealan this deep inside UN space. \"Yeah, I'm Jamie, and this is Liz. Pleased to meet you.\"\n\n\"I'll let the Cap known that you've arrived,\" he continued, reaching into his pocket and pulling out a phone. \"Cap, the passengers are here,\" he began as he held the device up to his ear. \"Yeah, I'm sure. You seen any other eight-foot felines around here? Yeah, I can do that, sure. I'll see you later.\"\n\nHe slid the phone back into his pocket, turning back to Liz and Jamie, who had been waiting patiently for him to finish.\n\n\"The Captain says we should start boarding,\" he said, glancing at Liz's haul of bags. \"Do you need any help with that stuff?\"\n\n\"Thanks, I got it,\" she replied with a smile.\n\n\"Alright then, this way.\"\n\nThey followed behind him as he led them towards one of the airlocks, Sarris pausing by the reinforced door. Beyond the small windows, Jamie could see a pressurized chamber, along with a second door that led to the umbilical. A sudden pang of fear gripped him. Didn't they need space suits for this kind of thing? He could see some hanging from racks on the walls inside the chamber, little more than flimsy, yellow pressure suits with a hood-like helmet. They looked more like hazmat suits than space suits to Jamie.\n\n\"I'm assuming you've been on a ship before,\" Sarris said, addressing Liz. \"How about you?\" he asked, turning his attention to Jamie."
    ],
    "authorname": "Snekguy",
    "tags": [
        "handjob",
        "interspecies",
        "kissing",
        "large breasts",
        "muscle",
        "oral",
        "pregnancy",
        "romance",
        "size difference",
        "vaginal"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/worlds-apart-pt-02"
}