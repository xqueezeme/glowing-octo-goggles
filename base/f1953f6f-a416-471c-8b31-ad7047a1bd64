{
    "title": "The Loft Game: Barney",
    "pages": [
        "This story follows after The Loft Game-Kermit if you'd like to get some idea of who the characters are and what the Loft Game is before starting this.\n\n\u2014C\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\nI took it easier on Josh in my dorm room the second time. Yeah, he lost the coin flip a second week in a row. \n\nAs we walked down the driveway after the game, he glanced over at the others leaving, judging whether they were within listening distance, and then asked quietly, \"Same again?\"\n\nI was tempted to say, \"You volunteering for me to take a ride?\" just to tease him. Instead, I considered it. I wasn't sure about making this a regular thing. On the other hand, I wasn't in the right frame of mind to make that kind of decision just then. I was pretty worked up. \n\nOne more time doesn't mean forever. \"Okay.\"\n\nI dug in my pocket. Keys, a slip of paper with a book title, a tube of lip balm&nbsp;... Josh held out a quarter. At my nod, he flipped it up, caught it, slapped it on his arm. \n\n\"Heads I win, tails you do,\" he said. \n\nI saw the sour expression when his hand came away and didn't need to see the coin. \"You know where my room is,\" I said and turned toward my car. I spent the short drive stoking the fire&nbsp;... not that it needed a whole lot of stoking. \n\nMike had lost the game. I'd say every girl in the room won. I should have known something was up when Hannah didn't immediately start heckling him. At first, I thought it was familiarity: he was a junior, she a senior; him naked was probably old news. Then I noticed the huge grin on Megan's face.\n\n\"Remember when you ran your big mouth in September?\"\n\nA little \"Ah!\" came from Emily, as if she'd just remembered something. \n\n\"I remember. I know.\" Mike sounded resigned.\n\n\"So, who'll it be?\" she asked. I had no idea what that question meant.\n\nHe hesitated. Megan waited patiently. I glanced around at the rest: Emily and Hannah looked amused; Josh looked as puzzled as me; the other boys had expressions that were somewhere in the vicinity of \"Can we get this over already so I can go have a beer?\"\n\nTaking pity on my incomprehension, Emily whispered. \"He bet her that he wouldn't lose before Christmas. If he lost, he had to pick one of the girls to strip him.\" She settled back, then leaned over again. \"And the teasing-with-words-only policy is out the window, so think about that if he picks you.\" She giggled.\n\nHoly shit!\n\n\"What if he won?\" I whispered back.\n\n\"Neither will say, but she looked worried when anyone asked.\"\n\n\"Mike?\" Megan prompted.\n\n\"You,\" dragged out of him.\n\n\"Good answer,\" Megan said. Hannah pretend-pouted. Emily laughed. Megan stood, gesturing with a forefinger for him to stand back from the table. \n\nEach of the five guys I had seen in the game had an okay body. Josh was lean, a look that was my fav, as was Owen, who wasn't there. Thomas, also not there, was more average: nothing bad, nothing special. Carter was heavier, like someone who had played high school football, a little bit of pudge over a lot of muscle, someone who could grab a girl and toss her around, not that I'd ever had that thought or anything.\n\nMike was a bit short and wasn't carrying any extra weight either. He had this triangular face and curly hair. The effect was sort of elfin. But that's where the analogy stopped.\n\nWhere Owen and Josh were just healthy college guys and slender by nature, Mike was a starter on the soccer team. And that meant this was a man who could run for forty-five minutes at a shot and then do it again fifteen minutes later&nbsp;... and he did it most days. And when he didn't, there was the weight room. It showed. \n\nI had already seen the chiseled abs and heavily muscled legs. Now I wanted to see what was under the shorts.\n\nMegan trailed a finger lightly up his arm as she slipped behind him, then laid a kiss on his neck. I saw him shiver. Her hands settled on his shoulders, then slid down, caressing as they went: traps, lats, obliques. Workout videos let me put names to them. I saw his hips move as she stroked glutes. Ass cheeks, I grinned to myself. Very nice ass cheeks!\n\n\"I know we haven't been real public about it.\" Her voice was soft, pitched just loud enough to carry across the room. \"But I think a lot of you have guessed that Mike and I are together.\" I was staring at his face, enjoying the emotions playing over it, and saw surprise that she revealed that.\n\n\"You might have wanted to pick another girl, hon.\" She planted another kiss on the base of his neck. \"I mean, Hannah would probably have just dragged those boobies down your side while she peeled your shorts off.\"\n\nHannah, predictably, gave a shimmy. Since she'd lost her shirt in the game and favored bras that spilled a lot of cleavage, all male eyes were distracted for a second.\n\n\"But since you're my boyfriend, I'm not bashful like she is.\" The ludicrous statement brought a burst of laughter from everyone except Mike, whose face was acquiring some color. \n\nShe put her chin on his shoulder, wrapping her arms around. She flattened her hands against the washboard of his stomach, wrists turning so that fingers pointed downward. Slowly, quarter-inch by quarter-inch, they descended.\n\n\"And you know, sorta by definition&nbsp;...\" She paused, both speech and hands. \"... every woman here is a bit of a voyeur.\" She drew out the moment, allowing the implications to resonate. \"I know they'd like a glimpse of what I see every week after we leave.\"\n\nAt that, her fingertips dipped inside the waistband, lifting it away from his body to accommodate her hands. She still moved so slowly. The suspense was killer. \n\nWhat I hadn't quite believed was going to happen&nbsp;... was happening, and I saw the twitch beneath the cloth as the expected started. I was suddenly conscious that my breathing had gotten heavier. A glance at Emily and Hannah beyond her showed they were rapt.\n\nThe thin cotton didn't hide the progress of her hands, and we didn't need the jerk from Mike to let us know when she made contact. \"Ah ah ah,\" she admonished, clamping his body between forearms and hips to pin him. \"You made the bet.\" He stilled. She held the pose for two, maybe three seconds. We could picture what the black fabric prevented our eyes from seeing. She whispered something in his ear, then resumed her progress, only the word \"later\" audible.\n\nIt was hopeless. Between the warmth of her hands, the enthralled gaze of three other women, and whatever secret intention she continued to breathe into his ear, Mike was lost. His face got red; his dick got hard. I watched the rampant tip emerge as she finally pushed her wrists out and down to drag the waistband lower, inch by slow inch, palms and fingers never losing contact with his body.\n\n\"You've got a wonderful cock,\" she said, just loud enough that everyone in the room could hear.\n\nHe does have a nice one. I wouldn't kick him out for eating crackers. \n\nShe knelt behind him to bring the underwear to his ankles. \"Step out.\" Then her hands stroked back up, over thighs, fleetingly cupping a heavy sack, a light brush up along his length, a soft nip of teeth on his ass that caused him to jerk&nbsp;... and that caused him to bounce, to girls' laughter. \n\nAgain that low voice just audible to us, \"Remember the second part. You're my toy for the entire weekend, which means you're driving to the apartment this way except for shoes. I want full access for the ride. Don't run any stop signs, or the cop's gonna get a show.\" She giggled again.\n\nMy eyes left his waist and went to his face. The brick-red was down past his neck, coloring the top of his chest as she continued to whisper something that caused his penis to jerk slightly and the flush to spread farther. It wasn't the nudity\u2014he'd endured that more than once in his years playing the Loft Game\u2014it was the simultaneous embarrassment and stimulation of being exposed erect, played with by his girlfriend: a weekend sex toy on display for her friends.\n\nI was practically panting.\n\nMegan let us look long and hard, making sure things stayed impressive. Then she said to him, \"Come on. I'm going with you.\"\n\n\"What?\"\n\n\"In front of all the girls. Kim's a girl.\" At his protest, she shushed him. \"You agreed. No welching, you said. Right?\" Reluctantly, he shook his head. \"Come on.\"\n\nShe opened the door that led down to the house and waited while he slid on the flip flops and donned the robe that had made its appearance this week with the sudden cold spell. It would come off when the doorbell was pushed.\n\n\"Well, that went waaayyy beyond what I expected from Megan,\" Emily said when the door closed behind them. \n\n\"Oh my God, yeah,\" Hannah responded. \"Where did that come from?\" The two women stared at each other in disbelief.\n\nSo now in my car, there were zero problems keeping the fires stoked for my short ride back to Henry Hall for my second time with Josh. I debated going further with him than our bet. I didn't feel a lot of attraction to him, but only one hookup since my most-recent boyfriend and I called it off in August was a drought. \n\nExcept for a month here or there after a breakup, there hadn't been a ton of weeks without sex since tenth grade when my first boyfriend, a senior, had invited me to the prom. My parents were super-chill. Other than a pointed talk from Mom well before that dance that included a trip to the ob-gyn for a prescription, they'd turned a blind eye to all the times I'd nonchalantly strolled back to the house from our detached garage\u2014the one with the camper trailer parked behind it. \n\nNow, I scribbled a red star on the marker board on our room door, the signal my roomie and I'd agreed upon that said, \"Come back later.\" Not that we'd used it much: her boyfriend had his own bedroom in an apartment, and me&nbsp;... drought.\n\nI quickly got undressed and pulled on a robe. I didn't want the awkwardness of stripping in front of him; that was going to be what he did. I turned off the overhead light and tossed an orange sweater over the desk lamp to turn the room dim and soft. I was just flopping back onto the bed when he knocked.\n\nWhen the door shut behind him, \"Off,\" I said, nodding my chin toward his body.\n\nHe hesitated. \"This naked thing goes both ways when you lose, right?\"\n\nThe assumption in that \"when\"&nbsp;... was this going to be a regular thing? Right now, my mood was saying, Definitely maybe. \n\n\"Yes.\" Playing fair was ingrained in me. I settled back for the show.\n\nWho knew I was this visual? The thought trailed idly through my mind as I watched him methodically peel down. Guys are supposed to be ones who\u2014 The thought was interrupted as, with a minor flush, Josh skinned his tighty-whities down. No excitement, Josh? I kept the smirk off my face; I knew he wasn't happy to lose a second coin flip. That was when I decided to go easy on him. This time, he hadn't irritated me with a tasteless comment. I leaned back against the wall and let my legs fall wider.\n\nAs hands slid under and up to cradle the outside of my hips, as five-o'clock shadow burred deliciously up my inner thigh and I felt the first tentative touch of a tongue against my sodden pussy, I closed my eyes and savored the memory of Mike's display.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Yo, Chips!\"\n\nI turned to see Hannah coming up behind me.\n\n\"That was fun Friday, huh?\" She said, giving me a little shoulder bump as she drew alongside.\n\n\"Hell, yeah.\"\n\nWe walked in silence for a while, both smiling at the memory. Then she said, \"We're gonna have to split the game.\"\n\n\"What?\"\n\n\"There are too many people. You probably noticed how, each week, some people don't show? That's on purpose. The game's perfect with six, seven max. Eight's stretching things but doable. That week when Carter screwed up and showed when it wasn't his turn and we had nine? Maybe you noticed half of us were folding more often so we didn't take cards?\"\n\n\"Honestly? That was my second week, and I was still freaking out a little. I didn't notice anything except how the guys were staring at my naked boobs.\"\n\nShe laughed. \"But we popped your cherry with total nudie last week, and now you're good, right?\"\n\n\"Something like that.\" I laughed with her. We both knew I'd still be embarrassed next time I lost.\n\n\"Anyway, Megan's bringing someone new and it's too much.\" \n\nWe walked in silence for a bit. Then she asked, \"Do you have a boyfriend?\"\n\n\"We broke up when we left for school.\"\n\n\"Ah. Bet you wish that weren't true after last time.\" Typical Hannah, sly and snarky in a friendly way.\n\nI laughed. \"If I had a boyfriend, think he'd be okay with me being at that kind of game?\" \n\n\"Ha! No, probably not.\"\n\n\"What about you?\" I asked, turning the tables.\n\n\"Oh\"\u2014dirty grin\u2014\"Owen and I have a strictly 'with benefits' relationship.\" At my surprise, she amplified. \"We're not a couple, no promises, no drama. Just some Friday fun every once in a while. Not every week.\" She glanced over at me. \"You may end up looking for some of that yourself.\"\n\n\"It's possible that I maybe made a bet with someone for that already.\"\n\nHer attention sharpened. \"A bet? Dish, girl.\" \n\n\"A coin flip that\u2014\" I suddenly felt like I shouldn't have opened my mouth. Josh wasn't my buddy, but I did owe him a little privacy. Hannah and I had reached the point where my class was one direction and the engineering quad, where I presumed she was going, was the other. I shook my head. \"I shouldn't say, and besides, I've got class in fifteen.\"\n\nShe turned to walk alongside me. \"I'll walk with you. I've got over an hour.\" As I started to protest, \"If you don't want to tell me, I won't bug you. There's something else.\"\n\nWe walked along for another twenty steps or so. \"I saw you looking at his face at the end.\"\n\n\"Whose?\"\n\n\"Mike's.\"\n\n\"Not only his face.\"\n\nShe laughed. \"No. Not only. But you enjoyed watching him get embarrassed, not just him get naked. I could tell.\" \n\nI didn't know what to make of that. Did I violate some unwritten rule that says that\u2014\n\n\"Relax. I'm just sayin'.\" She stopped walking, bringing me to a halt also. \"Em told me what you said when she first talked with you, about the thought of someone having to do things turns you on.\" \n\nI felt my face start to heat. She noticed. \"Hey. Do you honestly think I'm any different? Me?\"\n\nMy memory traced back over six evenings of Hannah. No. \"I guess not.\"\n\n\"So, did you mean the rest of what you said then also&nbsp;... the part about the risk being part of the thrill?\"\n\nWell, even though my brain was working slowly at nine in the morning, I finally got an inkling of what this conversation was about. I just couldn't let on that I did.\n\n\"I think so.\"\n\nHannah nodded and started walking again, drawing me along with her. \"Sometimes, a couple of us play a game for higher stakes, stakes where 'having to' is more significant. Interested?\"\n\n\"How much higher?\"\n\n\"Higher.\"\n\n\"Give me a fer-instance,\" I pressed.\n\n\"High enough that about&nbsp;... umm, two months ago, I was giving a blowjob because I lost.\" She looked to see my reaction, clearly enjoying the idea that she might've shocked me.\n\nMy mind was already made up, but I had to play my role. For her part, she was waiting to see how far Charlene Maguire's words went: bravado or a kindred soul?\n\n\"I'm assuming that if a boy loses, there's some kind of\u2014\"\n\n\"Ohhh yeaaah,\" she answered, not even waiting for the question to finish.\n\n\"I might be.\"\n\nHer expression was lascivious and amused and happy all at once. \"Let me see how others feel about adding someone. No promises. They may want to keep things as they are. I was just seeing if you were interested first.\" \n\n\"I understand.\"\n\nLater, I texted Emily.\n\n\u226b Hannah sounded me out about the other game today.\n\n\u226a Omg. I thought it'd be after Christmas break. It's great it's her. You know I couldn't. Since I brought you into green it had to be someone else.\n\nNews to me but good to know.\n\n\u226a Come over after classes? I've got some White Claws. I am SO not going to talk about the other game, but we can hang out before we head home for turkey.\n\nThanksgiving break. No game that Friday. Two weeks on pins and needles.\n\n<center>\u2022 \u2022 \u2022</center>\n\nIt was the usual Thanksgiving dinner: butternut squash soup, turkey, stuffing, mashed potatoes, candied yams, green bean casserole, corn pudding, cranberry sauce, Brussels sprouts roasted with pancetta, pumpkin pie, bourbon pecan pie \u00e0 la mode. As usual, I couldn't move for the next twelve hours.\n\nI lay on the couch Friday, listening to my dad and uncle playing armchair quarterback in front of the TV. It was just a warm-up for them: they'd gone to rival colleges, so Saturday's games would be full of trash-talking each other, \"Not now, honey!\" to their wives, and jeering or cheering every marginal call a ref made. My phone rang.\n\n\"Hey, wanna come to a party down here?\" Emily asked.\n\nI was low-key invited out with some of the high school group that night, but my closest friends and I were going out Saturday. With a \"Back tomorrow morning\" to family, I headed down the shore.\n\nEmily's younger brother was hot. Okay, not, like, seriously hot. Not, like, every girl in the room was giving him the eye. He needed to switch out that baggy sweatshirt over the nerdy T, and painter's pants were so last-decade. Lose the heavy specs and that hair&nbsp;... \n\nBut a little bit cute under all that, and I suspected that the maroon \"South CC\" on the sweatshirt meant the cross-country team given his build. And, on second thought, keep the heavy specs\u2014with a better haircut and a five o'clock shadow, it would be nerd cool.\n\nHe hung on the periphery. It was Emily's friends. Her parents were out, permission granted as long as \"nobody gets stupid\" and \"done when we get home.\" Maybe thirty people were milling about. Nobody was paying Ethan any notice as he sat on the side.\n\nExcept, as an outsider myself, I was kind of hanging quiet, enjoying a beer and the music. Emily paid me some attention, but the swirl of the party kept pulling her away. So, I noticed him. All six-three of him. No, I don't have calibrated eyeballs; I asked.\n\n\"How tall is your brother?\"\n\n\"Six-three.\" Emily's attention sharpened on me. \"And he only turned eighteen a week ago.\"\n\nI got the hint. I wasn't sure of the reason. I doubted it was \"he's too young for you\"; it might have been \"I don't know you well enough yet\"; it was probably \"Eww, not my brother!\"\n\nI threw up my hands. \"Oh no. He looked tall. I was just curious.\"\n\nShe relaxed. \"He's such a dork,\" she said affectionately.\n\nThe party was fun. I got mildly hit on a few times, nothing that bothered me. All in all, I was glad I came. Eleven forty-five rolled around and people shuffled off with designated drivers or to Ubers without needing too much of a push. I met Emily's parents briefly, and then the two of us crashed in her queen-sized bed.\n\n\"I'm glad you came.\"\n\n\"I had fun. A little different than recent Fridays.\" She chuckled along with me, and the combination of a long day and a little alcohol made us drop off.\n\nIt must have been four in the morning when my bladder woke me. Moving as quietly as I could so as not to wake Emily, I slid out of the bedroom and crept down the hall toward the bathroom. Just as I got there, the door was pulled open and harsh light spilled out into the dark hallway. Ethan stood there, both of us startled.\n\n\"Oh, sorry, Ems. I\u2014\" He broke off as he realized it wasn't his sister.\n\nHoly shit! I didn't respond for a second, my attention diverted by about two and a half feet of chest that could rightly be called ripped, a trimmed dark patch of hair on pecs, turning into a line at his solar plexus that trailed down to\u2014",
        "I pulled my gaze up to his face as my mind said, Holy shit! a few more times, to find that his eyes had dropped also. Aware that I was in a T-shirt and shorts, not long jammies, I felt my face heat slightly as we stayed locked for a second. \n\nThen he stuttered, \"Ch-Charl&nbsp;... uhh, sorry!\" He ducked his head and pushed past me. \n\n\"S'okay,\" I said. My eyes dropped to the ass moving away. \"Hey, call me Chips,\" I called after him.\n\nHe turned and gave me a half-smile. \n\n\"Where are you going to school next year?\" I asked to prolong the conversation. Where are you going to school? Jesus, Charl, could you be any more awk? Why don't you just ask him how he likes the weather or what's his star sign? It's four fucking o'clock in the morning.\n\n\"Umm, my first choice is Carnegie Mellon.\"\n\nI suppose it was too much to hope for. But you know, that's not too far. I noticed his eyes had dropped again, and suddenly feeling exposed, I gave a \"Cool!\" and retreated, closing the door. \n\nI looked in the mirror. I turned the color of ketchup.\n\nOkay, it was bad enough that worn, white T-shirt plus harsh light equaled nips making two dark circles visible through the fabric. What was worse was that a sleep-befuddled brain had me forgetting now that I'd forgotten yesterday to toss my sleeping shorts into my bag. \n\nInstead&nbsp;... lacy, French-cut panties that I generally donned as part of my \"feel like I look good even if you can't see it\" party gear. Lacy panties that were more lace than not. Panties that left absolutely no frickin' doubt that Charlene Emory Maguire was a brunette who didn't go for the full Hollywood bare look.\n\nI felt like I was having a hot flash a quarter-century too soon. I leaned on the counter while I tried to get my composure back. Somehow, I felt like I'd exposed myself even more than when I stripped in front of a bunch of guys. \n\nBecause you're a little buzzed tonight and thought Ethan was cute? No&nbsp;... well, maybe a little. But that didn't seem quite right. I tried to focus on the feeling.\n\nBecause back in the loft, while playing, it was what was expected? That was closer. Others were flashing some skin that night; the whole atmosphere was about stripping. This was real voyeur-stuff\u2014someone checking you out almost naked when you didn't even realize.\n\nI hope he liked the view.\n\nI felt wicked and embarrassed and turned on all at the same time. For a half-second, I wished I had stayed home; the ex might have been interested in \"for old times' sake.\" That disappeared in a flash, replaced with a wish that I dared walk down the hallway and tap on Ethan's door and find out if nerdy little brother liked what he saw.\n\nBut I didn't dare for so many reasons.\n\nInstead, I got up and rinsed my hands, dried them, and flipped off the harsh bathroom light. Then I hesitated in the glow of the little plug-in nightlight. It didn't take much to talk myself into it. I settled back onto the seat, slid those traitorous French-cut panties down below my knees, and let my fingers find their way. \n\nImages of shapes barely glimpsed underneath plaid pajama bottoms before I'd jerked my eyes back to Ethan's face churned in my mind. Intercut were memories of Mike's rather-glorious appendage, unable to stop some imaginings of Megan playing with her living, breathing sex toy that weekend. Then there was the swirl of Josh's hair seen from the top as he ate me to orgasm the week before. Lastly, a defiant mental picture of standing in the doorway of the bathroom in the harsh light&nbsp;... only this time letting Ethan look, deliberately brazen in the dream version.\n\nOh, fuuu\u2014\n\nI slid back under the covers next to Emily, still careful not to wake her. \n\nI hope he liked the view. The thought repeated as I drifted off into boneless slumber.\n\n<center>\u2022 \u2022 \u2022</center>\n\nHannah hadn't called or texted me during that first week back after Turkey Day. I arrived at the loft early, hoping she'd be there and say something. \n\n\"She won't be here tonight,\" Megan said when I asked.\n\n\"Because of the numbers?\"\n\n\"She told you, huh? Yeah, her turn out. Next week.\"\n\n\"She said you were bringing someone.\"\n\n\"Gwen. Next week also. She couldn't make it this week because of a paper due. Mike's bringing a new guy.\"\n\n\"How did you meet her?\"\n\n\"Drunken game of Truth or Dare in the dorm one night.\" She grinned. \"Guess what her answer to 'What is your biggest nightmare that's also a little exciting?' was?\"\n\n\"Naked in front of strangers?\"\n\n\"Bingo. I talked to her a week after, sort of hinting, then flat-out told her when she was in a receptive&nbsp;... read 'half in the bag'&nbsp;... state. Took her two weeks to get up the nerve to say, 'Remember that conversation when we were drunk?' and another month to say, 'Okay.'\"\n\nThe others arrived and we played. I was itchy and bitchy. I still had flashes of imaginings about Megan and Mike, even though I didn't have the nerve to ask her what she did with him. I still had flashes of imaginings about Ethan, even though I didn't have the nerve to ask Emily if she would really mind. My snark brought it out in others, and the game became trash talk. Good-natured, but with an edge.\n\nCarter lost a hand. He was down socks and hat already and stood to remove his shirt.\n\n\"Pants, Carter. I want pants,\" I called.\n\nHe paused, giving me a look. I wasn't sure what it meant. I was down two pieces myself: socks and a shirt. Maybe he was checking out cleavage.\n\n\"Gimme one good reason.\"\n\n\"Cause I'm an American foxez who wants to see some manly bulgez.\" My Steve Martin imitation was pathetic, I get it. That didn't explain his blank look or those of others in the room. \"Saturday Night Live? Steve Martin and Dan Ackroyd? The Festrunk Brothers?\" \n\nAt his continued stare, I burst out laughing. \"Jesus! Doesn't anybody YouTube old stuff? It's a classic! Never mind. Just say I want to see some package bulge instead of\u2014\" I almost said \"moob\" but remembered the third rule of Loft Game just in time. \"\u2014yet another chest.\" Two of the other guys were already shirtless.\n\nThe other women voiced their endorsement.\n\nHe studied me for a long moment. \"In return, when that comes off&nbsp;...\" His hand gestured toward my chest. \"I get to take it off.\"\n\nIt was my turn to pause and my turn to be on the receiving end of request endorsements. They came from both the men and the women. Traitresses.\n\nWhat the hell. I was in a mood. \"No copping a feel.\"\n\n\"I promise.\"\n\nI'd seen Carter in underwear before, but last time they'd been loose boxers. \"You looked fine in boxers, Carter. But I gotta say, trunks do you more justice.\"\n\nHe gave a shrug-nod that said, Have your fun.\n\n\"Looking very proportionally built,\" I added. That got laughter from everyone as I mimed measuring his height, then zeroed in on his crotch. I could see it embarrassed him. \"Every guy measures at some point. Will you share the details? Come on, tell me,\" I wheedled.\n\n\"Haha,\" he said. \"Hannah designate you pinch-ballbuster?\"\n\n\"Maybe.\"\n\n\"I've taken her bra off too.\"\n\nOops. Turns out the table was willing to laugh at everyone tonight.\n\nIt wasn't too many hands later that I was sitting at twelve chips. I had seven red chips in front of me, so I shoved in my ante of three.\n\nI got triple aces. Time to rebuild the chip stack. Then I looked around the table and realized. No, time to finish this. It hadn't quite clicked with me that Thomas was sitting almost empty. He had anteed three and just now bet one. He had three left. I figured his bet meant he had a hand that was possibly an opportunity to get back in the game. That meant it was also an opportunity to put him out of it.\n\nI pushed in two chips. \"See your one and raise one.\" I didn't want to scare anyone off just yet. If Thomas folded, I'd go back to the plan of stack rebuilding, but I had a feeling he figured he needed to make a stand now.\n\nFold. Fold. Megan was in. Carter was in. Fold. Back to Thomas. He dithered and eyed the pot. Between antes and bets, there were twenty-one chips in the pot already. I could see that was attractive to a man sitting there with three chips to his name.\n\nA couple of weeks back, I'd asked Owen, \"What happens if you can't make your ante?\"\n\n\"Well, if you don't win the hand, obviously you lose. If you do, you pay every player at the table the amount you were short times two. It usually means you still lose.\"\n\nNow Thomas was between a rock and a hard place. He had three. He was anteing three. If he called my raise and lost, he'd owe the rest of us two each at the end of next hand. But our antes would cover that, and time was running out.\n\n\"I'm in.\"\n\n\"Two chips from taking a walk there, Tommy.\"\n\n\"I don't like that nickname.\" I could hear the tension in his voice, but it wasn't all about his chip stack. He really did object to the name.\n\n\"Sorry.\" I meant it. Itchy and bitchy, but not a bitch.\n\nHe flashed me a quick smile that said, No hard feelings. \"One please.\"\n\nTwo pair? A straight or flush draw? I was too new to the game to have all this instinctive in my brain, but it seemed reasonable that's what he was holding.\n\nI debated. If I asked for two, they'd all guess I had trips. I'd read online that my odds of improving my hand were better if I drew two, but maybe the others would all drop out. And I didn't want Thomas to fold. Three aces; this was a hand for taking out the weakest link. \"One please,\" I said. It wasn't helpful.\n\nMegan took three. So did Carter.\n\n\"Check,\" Thomas said. \n\nDamn! Even a one-chip bet, dude. He'd be short two, and I knew everyone at the table would make sure there weren't enough chips in the next pot to cover what he owed. It would be fold, fold, right around the table and Thomas taking the walk down to Kim and Andrew. But Thomas knew that as well as I did. He was saving himself one more shot.\n\nOkay, buddy boy. But you're not getting a free ride on this hand. Fish or cut bait.\n\n\"Two,\" I said. I saw the resigned half-smile on his face.\n\nMegan tossed her cards face down to the dealer and grinned at Thomas. \"Hope for a Hail Mary on the next hand?\"\n\n\"Raise you three,\" Carter said.\n\nWhat the fuck!\n\nMy attention spun to him.\n\nBut didn't my bet show that I'd hit on that one card? That I had a straight or a flush or even a full boat? I didn't even hear Thomas's \"I'm out.\" What the fuck, Carter? Thomas is done. Let's finish this.\n\n\"What's it gonna be, Chips?\"\n\nEven if he hit on his pair, my aces were better than any set he might have. \n\nOh, fuck&nbsp;... wait. He thinks I have better than trips. So, he's saying he's got&nbsp;... No! He's bluffing. Then I looked at my stack and reality hit. If he's bluffing, yeah, I'm golden. But if he's not, if he hit a wild-ass straight or something, I can't make ante next hand either!\n\nAs painful as it was, there was no option. Thomas was almost certainly out next hand. Five chips would get me through that. I tossed my cards and shook my head. Carter's grin grew. So did everyone's.\n\n\"I'll go first.\" That was Thomas. He stood, backed up, and slid his chinos down. Megan and Emily clapped. My clap was a little half-hearted.\n\nI stood and faced the group. Carter walked behind me. \"No feels,\" I reminded him, to general laughter.\n\nI felt the fingers at my back, felt the tension of the band increase as he pulled it away from my body, then the loosening. I started to lower my shoulders. \n\n\"Ah ah ah.\" The same sounds Megan had used with Mike. \"I get to take it off.\"\n\nI felt the cups slide down a fraction, not enough to expose but enough that my breasts fell into a more natural alignment. He leaned over my shoulder to look down. \"Looks like I could swipe a credit card there.\" The room laughed.\n\n\"Just get it over with!\" I snapped.\n\nHe wasn't fazed. \"You were mean to me earlier.\" It wasn't a whine; there was too much laughter in his voice for that.\n\n\"Sorry,\" I muttered.\n\n\"Now you are. The perkies will come out when I'm ready. In the meantime&nbsp;...\" He gave the bra band a little wiggle. I could feel myself bouncing. My mind flashed on Megan making Mike bounce, the amusement we'd felt at that. I could feel my face flame at being on the other side of the equation.\n\nI felt the bra slip another inch, then catch. I couldn't help myself, I glanced down. The rosy edge of one areola just peeked above the cup. I felt the flush spread but didn't say another word. Carter was living up to his side; his fingers were only on my bra. I'd have to pay up on my side of the deal and let him do it his way.\n\n\"This is kinda fun,\" he said. The other boys hooted their agreement. Megan and Emily were outright laughing. I hated them for an instant. \"I could keep this up. But if you'll kiss me, I'll just let go.\"\n\nI considered for about a millisecond, then gave a nod. True to his word, my bra dropped to the floor, and I spent the requisite seconds allowing the table to get their jollies. Then I turned, pulled Carter's head down by his hair, and laid a nice kiss on him. No tongue, that wasn't part of the deal. \n\n\"Sorry I was mean.\"\n\n\"No, you're not. But it was worth it.\"\n\n\"Bet you wish you'd lost your shirt before that kiss,\" a little offense sometimes being a somewhat-good defense.\n\nHe grinned. \"Next time.\"\n\nThomas didn't get his Hail Mary. I was able to ignore the continued stares at my chest from three of the guys as I did a little staring and hooting of my own.\n\nFifteen minutes later, I stood with Josh on the curb. The fifty feet or so we'd walked down the driveway had been enough for me to decide \"at least one more time.\"\n\nThomas's matter-of-fact strip hadn't held a candle to Megan's toying with Mike. But my general sense of deprivation had some accelerant thrown on it lately. I'd even considered texting my ex last Sunday with \"You up?\" though I'd stifled that. And truth be told, I was a little turned on by tonight. A little exhibitionism to go with your voyeurism? I teased myself.\n\nI looked at Josh. \"So?\"\n\nHe nodded, then shuffled his feet, looking away. \"But I want a change.\"\n\n\"How so?\"\n\n\"Max three in a row.\" He glanced over to see how I took that. My face was impassive. \"There's like five games from the first time we did it until Christmas 'cause I doubt we'll play the day we leave for break. That's a one in thirty-two chance I'd lose every time. That's a bigger chance than rolling snake eyes, and you roll those all the time in dice.\" He faced me defiantly. \"I don't think it's fair I go a whole semester without even once.\"\n\nHow did five Fridays become a semester? Whatever. I kept my face impassive despite thinking, And fair? It's a bet, not a swap. You just can't go all-in, Josh, can you?\n\n\"So, if we flip this week and I lose, then next week we don't flip. What do you say?\"\n\nAgree, or go back to the room and my buzz buddy? I nodded. I reached into my pocket, pulled out a coin.\n\nHeads. Fuck! I guess I was giving some of that this evening.\n\nIt was a much-happier Josh who slid into my room this time. \"You need\u2014\"\n\nI cut him off with a finger to his lips. He stopped talking. I was in my robe already, a quick change before he got there. I reached up and unzipped his coat, pushing his hands away when he went to help. \"Let me,\" I said. \n\nI wasn't super into Josh's personality, but his tongue on my clit had been a good ending to the last two games. Now it was my turn even though I knew that, when he walked out the door, I was going to be twice as frustrated. But fair's fair, and I was a woman who paid her debts. And not halfway. When Josh left, I didn't want him thinking, Hey, I got a blowjob. I wanted him thinking, Wow, that was a blowjob!\n\nIt's all about pride.\n\nI slid the coat off his shoulders, then pushed him gently on the chest until the back of his knees hit the bed and he sat. \"Lie back.\"\n\n\"You're supposed to be\u2014\"\n\nAgain, I cut him off. \"I know. Patience.\"\n\nI pulled first one shoe off, then the other. I ran both hands up his legs, slowing as I neared the top of his thighs, then deliberately slid them across his crotch to reach his belt buckle. I felt his dick shift under my palms. Smiling, I undid the buckle, the button, the zipper. \"Lift.\" I pulled jeans and briefs down together. Semi-erect, he sprang free. With a little fumbling, his clothes were over his calves and off.\n\nI stood. \"Prop some pillows under your head so you can watch.\" The room was darkened already, lit only by my desk lamp. I stepped back so it caught me fully. I ran my hands down my front\u2014his eyes tracked them inch by inch\u2014to the knot at my waist. This was more than the mechanical clothes-off he had given me. As I said: pride.\n\nI kept eye contact as I teased the knot open. I let the sash drop loose. The robe parted, and I knew he could see the dark triangle below, the sides of twin swells above. I teased him with it for a moment, then shrugged the robe off my shoulders. \n\n\"Mmh.\" It was an appreciative sound.\n\nI stalked forward. Kneeling, I placed one hand on each thigh and pushed outward lightly: Let me in. I kissed my way up his legs. I let one hand cup his scrotum, eliciting a hiss of pleasure, as the other roamed his flank and belly. I continued the kisses up the length of his penis, now far firmer than semi-erect. Pausing for a moment to meet his eyes again, I wrapped fingers around him, opened my mouth, and took him into it.\n\nAs I've said, I'm not the biggest fan of this unless I'm into the guy and in the right mood. If those are true, then I get a warm glow out of the euphoria on the guy's face, start to finish.\n\nBut if those aren't true, it's not the first ninety-eight percent I mind. I'm all about foreplay; ask any boyfriend. It's the last two percent. Unless my mind's totally into making someone feel great, I don't like them coming in my mouth.\n\nNonetheless, I made a bet, and I would pay up. I released him from my mouth momentarily, settled a breast squarely on a thigh where he could feel it, and made eye contact again. I said the words that I still found distasteful, but he seemed to find a turn on. \n\n\"No quit, no spit,\" I promised. \n\nHis pupils widened with lust.\n\nI went to work slowly, taking my time exactly as I had made him take his time. His breathing got deeper quickly. A glance upward showed eyes closed and head thrown back against the wall. He wasn't going to last long. I felt his hips start to rise to meet my bobbing. That was okay. I felt his hand curl against the back of my head. That was okay too; I'd certainly had my fingers wrapped in his hair when I got close.\n\nBut then he hit the back of my throat and I mini-gagged. It had happened before with boyfriends&nbsp;... no biggie. Then it happened again. Once is an accident. Twice was okay. The third time wasn't. I felt his hand relax on the back of my head as I gagged for real, then the pressure immediately returned, his hips rising for another stroke. I put my hands flat on his thighs and pushed away.\n\n\"Don't,\" I said firmly.\n\nHe looked at me petulantly. \"Jesus, Chips. You knelt smack on my face that first time because it felt good to you. This feels good to me. It's not going to hurt you.\"\n\nI fought for patience. \"Yes, I did. But I didn't put my whole weight down with my vagina covering your mouth and nose and clamp your head in place with my knees. I could have. It would probably have felt fuckin' phenomenal to have you frantically working so I'd let up. But I didn't play smother games with you. So don't play choking games with me.\"\n\nFinally, he nodded. I tried to restore the mood with dirty talk. I knew he was into that. \"I'm still gonna be good to you. I'm gonna suck your cock until you can't stand it and you come in my mouth. Then I'm gonna swallow every drop. You're gonna love it so much.\" ",
        "I saw the words get through, the image blossom in his mind, and he relaxed back against the pillows. His hand was still in my hair, but it was loose. I did what I promised I would do. I let him go as deeply as I could without gagging, lips firm, cheeks hollowing with suction, saliva everywhere. I let my tongue roam up and down the underside, right where it was most sensitive. I used one hand to cup his balls, careful not to exert too much pressure.\n\nI felt the tremors start and increased my pace. The first spurt hit the roof of my mouth, startling me. I paused for the briefest second, then redoubled my efforts. A second jet, a third; I felt some of it start to leak from the corner of my mouth. \n\nHis free hand came down to join the other on my head&nbsp;... not to force himself deeper this time, to freeze my head because of sensitivity. I let him make tiny strokes as he milked into me. When he slowed at last and then stilled, his legs losing their rigid clench, I slid my lips off his length. Meeting his eyes, I swallowed. \n\nI let him recover, rocking back on my heels and waiting. \"Hey,\" he said quietly.\n\n\"Yeah?\"\n\n\"I'll return the favor if you let me stay tonight.\"\n\nI thought about it. I thought about the pleasure of getting eaten out. I could almost feel the warm, wet caress of his tongue sliding along my lower lips, dancing over my clit, the probing of a finger. I thought about how it'd feel when we fucked. He'd just come so he'd probably last long enough for me to have another orgasm, especially if I could talk him into prone so my G-spot got hit. It was an appealing vision. Oh my God, it was appealing.\n\nBut it wasn't what this was about.\n\n\"This was a wager, not a hookup. I lost. I paid up. Time for you to go.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\u226a Can you come early tomorrow? Like 15 mins?\n\nHannah's text came during my business ethics class on Thursday morning. There was no one else there when she let me into the loft the next day.\n\n\"Still interested?\"\n\nI nodded.\n\n\"Okay. I suggested you to the others and Carter seconded it. Ems, Owen, Mike, and Megan are all okay. Everyone else gave a thumbs-up to go ahead since none of us were on the fence.\" There were some tidbits of info. True to her word, Emily had been unwilling to say anything during the last few weeks. Now I knew some of the players.\n\n\"No one else you've met knows about the other game. You have to agree to keep it that way whether you decide to play or not.\"\n\nI nodded again.\n\n\"So, there's a little ritual you have to go through to be eligible. Get through that and then we'll tell you the deets on the main game.\"\n\n\"Ritual like a welcome-to-the-club drink, or ritual like hazing?\"\n\nShe grinned. \"Call it a mixture of hazing and a tiny acid test to see if you're up for this. It's just a little more than you've already done, no big deal.\"\n\n\"Okaaay.\"\n\n\"Tonight you're playing with a hat.\"\n\n\"Uhh.\" The implications flew through me. I knew exactly what was coming next.\n\n\"And, Chips, ever-so-carefully so you don't tip off the people who don't know, you're gonna throw the game.\"\n\nI felt a shot of adrenaline. Not fear, just some nervousness. Look, I knew blowjobs were on the table in the new game, and a naked smooch was a hell of lot less. But blowjobs would be then; this was now. And there was something about losing deliberately while people\u2014some, at least\u2014knew what was coming that was more&nbsp;... I don't know&nbsp;... vulnerable.\n\n\"And there're going to be a lot of guys. Every guy who plays in the main game plus some. It's the last game of the semester and people show up. And we're going to engineer it so that each and every one of them gets a turn.\"\n\n\"But that's too many for one\u2014\"\n\nShe cut me off. \"Don't worry 'bout that part.\" I fought down thinking about that.\n\n\"I guess this little ritual is easier for those who've been there, done that before,\" I said.\n\n\"Well, there might be just one other thing.\"\n\nOf course there is.\n\nI could see the look of glee in her eyes. Even though I was sure she liked me\u2014Emily had gone on and on about how quickly Hannah had suggested me\u2014that didn't stop Hannah from liking her games.\n\n\"Pick a guy at your table, any guy, and offer him&nbsp;...\"\n\nOh my God! PLEASE don't say I'm offering a blowjob in front of\u2014 \n\nShe cackled. \"Relax! The look on your face&nbsp;...\" She shook her head in amusement. I realized her pause had been deliberate, that she'd known exactly what thought rushed through my mind. Her smile was playful and warm. \"I'm just jerking your chain like they jerked mine.\"\n\nI tried to let the adrenaline leach away.\n\n\"Pick a guy, offer him a side bet. It doesn't matter what he has to do if he loses because, of course, you'll make sure he wins. You bet he can waive the 'no hands on naughty bits' rule. That's the initiation for a girl because, as you said, some newbies have already been there, done that losing with a hat. So yeah, a little bit hazing but a little bit acid test. You in?\"\n\nGulp. \"Yes.\"\n\n\"You can quit at any time.\" The words were formulaic by now, but they were sincere.\n\n\"Do I seem like a quitter to you?\"\n\n\"You seem about as far from a quitter as anyone in the game, but I had to remind you.\"\n\n\"I'm in.\" We shared a grin. \"So, what's the initiation for a guy?\"\n\n\"Kinda the same thing. Remember what Megan did to Mike? I guarantee that every guy who plays in the main game has walked down those steps sporting a serious boner first. No guy tonight, though. We don't bring people up in pairs like in the green game.\"\n\nI was contemplating my evening when the door opened, and Owen walked in. \n\n\"How badly am I going to get felt up?\" I asked the pair.\n\nHannah answered. \"Depends on the guy. And don't bother asking who 'cause none of us will tell you. You take potluck like we all did.\"\n\nOwen ducked into the closet and emerged with a card table in each hand. \n\nSplitting the game. That's why a crowd's okay. \"How do you decide who plays where?\"\n\n\"Random usually. Except tonight there are some new people, so we'll make some small adjustments for them.\"\n\n\"Can I talk you into putting Mike at my table?\" It was a joke and both of them knew it.\n\nOwen burst out laughing. \"He's bringing the new guy, so sorry, he'll be with them.\"\n\n\"You'll be with random main gamers,\" Hannah clarified, \"in case something gets said that\u2014\"\n\nShe broke off as the door opened, and Mike and Megan ushered in a pair of people I hadn't met. It was a good bet they were the newbies given their deer-in-headlights expressions.\n\nAs I was introduced, I could see Gwen's relief that she wasn't the only freshman here. The guy, Nick, was a junior. A steady stream of footsteps sounded on the outside stairs as others streamed in. The new names went by in a blur: Brey, Kevin, Logan\u2014that name caught my ear, and I studied the blonde whose conversation with Emily started this whole adventure\u2014Carrie, the names went on. Hell, I'd sort it out later.\n\n\"Last game of the semester, folks,\" Owen called. There was some cheering. \"Because we've got some new people to get up to speed, I randomly drew names for the other games to save time.\" I caught Hannah's eye in a shared thought: You mean, semi-randomly drew&nbsp;...\n\nI ended up squeezed at a card table with Carter, Brey, Luis, Emily, and Zachary. The wooden table with the newcomers was using Kermit. We had a Barney figurine. Everyone, except Gwen and Nick, I'm sure, relaxed back as Owen called for quiet.\n\n\"Okay. The first rule of the Loft Game is the same as the first rule of Fight Club&nbsp;...\" \n\nThis time I was able to join in the chorus as the preliminaries started. It was thrilling to watch the \"gulp\" in Gwen and Nick's eyes when the forfeit was described. I was surprised when it was time for the Girl Talk and Hannah gave me a little \"come on\" nod to join her and Megan with Gwen. \n\nOh yeah. A hat.\n\nI could see Gwen's nerves while Hannah was talking to her. Megan and I met eyes. \n\nIs she going to go through with it? mine asked.\n\nA faint shrug. I don't know, hers answered.\n\nThe silence when Hannah was done stretched. Finally, Gwen looked at me, I guess fellow-frosh and all. \"Am I going to regret this?\"\n\nI debated telling the truth, which was, How the hell would I know? \n\n\"No,\" I assured her. \"Hey, have you ever flashed at Mardi Gras or something?\" She was from Texas. That bordered Louisiana so she'd probably been, right?\n\n\"I've never been to Mardi Gras.\"\n\n\"Okay, have you ever mooned a guy or coed skinny-dipped?\"\n\n\"Yes.\"\n\n\"Then you'll be fine. Everyone here is chill about this whole thing.\"\n\nShe smiled, a little tremulously, to be sure, but a smile. She nodded. \"Okay.\" \n\n\"Hat?\" Hannah asked.\n\nGwen nodded yes, and we exited to find the room waiting patiently, Hannah giving me a little hip-bump as she passed. I saw Josh's eyes widen in surprise at my hat.\n\nI wonder what it's like to lose on your first night, how unbearably awkward that must be. Nick sort of did. But before that, we watched Gwen wrestle with some final nerves. \n\nHer hat and socks must have gone like a shot. I wasn't watching her table, of course, but we'd all only paused twice for some man-chest from other tables before she was standing up, her face bright red. She surprised the hell out of me as her hands went to her waistband instead of her shirt hem.\n\nIs she sensitive about her chest? I sure as hell wouldn't be. The term Rubenesque was coined for this woman. She fumbled with the snap and zipper, then hesitated. Her hands retreated. The long moment hung in the balance, all of us wondering if she would or wouldn't. She did.\n\n\"Oh my God, newbie! Give a spin for the boys. You've gotta show them that ass.\" Hannah, right on cue. Uncertain whether she was allowed to refuse, Gwen turned in place, letting the guys see those rich, full curves. \n\n\"Oh my God, yum!\"&nbsp;\u2014 Wolf whistles&nbsp;\u2014 \"Now that's pretty hot and tempting!\"\n\nCheekies&nbsp;... who'da thunk someone that nervous would have worn those? Maybe it's all she owns. I saw her duck her eyes and bite her lip\u2014Bet the guys find that sexy\u2014but she weathered it with only a deeper flush as she stepped back to the table.\n\nMy attention returned to my game. Two deals later, I saw Emily's hand drop casually under the table for a moment. It was the second time this evening. The first time, I'd ignored it.\n\nBefore we'd started playing, she'd said, \"Boys, go take a leak.\" They grinned amiably and went to grab coffees from the kitchenette. Emily whispered to me, \"If you need some help making it look real, anytime I've got a straight or better, I'll put my hand in my lap.\" \n\nBrey nodded. \"I'll close my cards and set them in front of me.\"\n\nI must have looked surprised at the plan to cheat. \"Oh, the boys do the same thing when they have someone. Otherwise, it becomes too obvious to anyone watching that you're throwing the game.\"\n\n\"So why?\" I waved toward the guys hanging by the fridge.\n\nShe shook her head. \"We change it up every time. If they know what specific thing we're doing, they'll use it against us. They know you're getting naked, Chips, but they don't mind seeing two other sets of tits first.\"\n\nI was sitting there with three kings. That was good because a girl&nbsp;... umm, Aisha&nbsp;... was watching while she waited a turn in the bathroom. But I knew Emily had me beat, so it would look okay. \"Three.\"\n\nZachary studied me. \n\n\"No guys have lost their shirts at this table yet,\" I teased.\n\n\"And you're dying to see mine?\" He kind of reminded me of my first boyfriend: short, a little round, irrepressible, smart, a bit nerdy\u2014I like nerdy\u2014and horny as hell. I'd caught his frequent checking-out glances. Me especially, as a new girl, but Brey and Emily too.\n\n\"I'm dying to see all you without shirts before\"\u2014I saw a look of alarm and a flicker of his eyes toward Aisha, but I finished smoothly\u2014\"we get to your pants coming off. Right girls?\"\n\nHe laughed and dropped in three. I think he'd decided I was on a bluff. We were early in the game, and I'd teased quietly that I planned on seeing some pants come off before it ended.\n\nEmily met my eyes blandly and dropped in three.\n\n\"Two,\" I said. No king, thank God. How could I muck quads? \"Three,\" I said and watched Zachary toss his cards in with a shrug. It was only his socks.\n\n\"And three more.\" Emily's response drew a \"Whoa!\" from the rest of the table.\n\nI pretended to study her face. \"And three more,\" I echoed. She was my friend, but I have to admit I enjoyed the brief moment of uncertainty in her eyes. This early in the game, was I trying to strip another woman a little to ease the spotlight on me?\n\n\"A shirt's coming off,\" Zachary crowed, drawing attention from the other tables. \n\nHe was right. I had lost my hat already, and we each had over ten chips in the pot. Whoever lost, socks and shirt were coming off.\n\nShe considered my face, then smiled. I knew she'd dismissed her fears. \"You seem pretty sure of yourself,\" Emily said to me. \"How sure?\"\n\nI grinned. \"Find out.\" \n\n\"I can't. Two-raise cap. Unless&nbsp;... side bet?\"\n\n\"Can't side bet chips when you're at the limit, Ems,\" Hannah called. Everyone was watching. \"House rules.\"\n\n\"Oh, I know the rules. How sure?\" she repeated to me. \"Sure enough to bet a dare?\" I looked at her blankly. \"I'm not wearing a hat, you did. If I lose, I pay up like I had one. If you lose, it's not just these three idiots\"\u2014she waved at the guys at my table\u2014\"it's every guy.\" \n\nI got it now. \"Don't worry 'bout that part,\" Hannah had said. I got it. I was expected to take this bet. More than one eye around the room gleamed when they saw me realize that.\n\n\"It's a bet.\"\n\n\"Call.\" Emily's three chips dropped into the middle.\n\nI laid down my hand. \n\n\"Three kings!\" Carter called out, letting everyone know. The room held its breath.\n\nEmily peered at my cards. I saw the minute relaxing. \"Straight,\" she announced and showed her hand.\n\n\"You lose!\" Zachary told me. \n\n\"Thanks, Captain Obvious.\"\n\nFunny how the resulting cheering was mostly deep voices. I happened to meet Gwen's eyes. She bit her lip and raised her eyebrows in an ohmygod expression, her face flushed. I shrugged and gave a rueful smile.\n\n\"Ahem.\" I looked at Carter, saw his gesture toward my shirt. Nodding, I raised my feet and stripped my socks, then I stood. Every eye was on me as I pulled the shirt off and showed the purple bra. It wouldn't be the last time tonight they were looking.\n\n\"I've seen that one,\" Owen yelled from across the room. \"Next time I demand something new.\" I gave him the finger to general laughter.\n\nOnce Aisha had moved back to her table, Luis said quietly, \"Slow things down a bit.\" Even though no one had said anything, I understood that our table should end last.\n\nWe slow-played. The boys did lose their shirts, as did Brey. Emily had too many from that one hand to be in danger. Eventually, my jeans were nickel-and-dimed off by the ante. A few calls of, \"Please, please, please let her lose,\" from the guys at other tables.\n\nThe relative quiet of clinking chips and soft bets was suddenly broken by a loud, \"How the fuck does a full boat lose?\" from Josh.\n\n\"To a better one,\" was Gwen's soft answer. She was pink in the face, but her eyes were shining as she held up her hand so everyone could see. I cheered along with her and every other woman as Josh pulled off socks, shirt, and pants. He'd bet heavily. \n\nI looked at the rest of the main table. Nick was in his underwear also. What's he anteing? I mouthed to Megan, nodding at Nick.\n\nThey're both at three. Her eyes twinkled in merriment. Gonna be at least one boy tonight for sure. Then they turned devilish. And at least one girl.\n\nI mimed an exaggerated cringe.\n\nIt wasn't five minutes later that we heard more noise from that table, this time a triple shout of \"Shit!\" from Nick, \"Twofer!\" from Hannah, and \"Fuck me sideways!\" from Josh.\n\nMegan was standing, peering at the two guys' hands. \"Pair o' jacks versus pair o' eights. You lucked out on that one, Nick. You're first; let's see what ya got.\"\n\nLike I said, I wonder what it would be like to lose the first time you played. It seemed Josh was going to make the walk, but we were going to see Nick-dick\u2014I chuckled internally at that\u2014first.\n\nAs Nick stood, there was a predictable interruption. \"Wait! Hey, newbie.\" Hannah was looking at Gwen. \"I'll make you a bet. Your shirt versus my pants and shirt. Loser's in underwear for the guys here to perv on.\"\n\nGwen flushed. \"What bet?\"\n\nHannah grinned. \"You ever bang this guy, or he ever flash you?\" She waved toward Nick.\n\nGwen flushed more and shook her head no.\n\n\"Okay. Circumcised or not circumcised?\"\n\nThe room burst into laughter. It was hard to tell who was going to end up redder: Gwen, or the guy who suddenly had every woman staring at his crotch speculatively. Short-term it was she; I was betting he'd catch up in a few seconds.\n\nGwen hesitated. Hannah goaded her. \"Come on. The last newbie bet me a look at her bra in her first game.\" Eyes turned toward me; I gave a half-bow from where I was sitting.\n\nGwen hesitated then blurted out, \"Uncircumcised.\" The rest of us women cheered, and I was right, Nick caught up in facial color. \n\nHannah cackled and turned back to him. \"Don't tell us. I want to be surprised. But not too fast. I want to enjoy the suspense.\"\n\n\"Yeah. I need something to visualize later when I'm naked under the covers with just my toy.\" That was Megan, using that same sultry voice she'd used weeks ago when stripping Mike. None of us who'd been there that time bought that comment even for an instant. She didn't need Nick to have a visual feast later. I saw her private visual feast roll his eyes.\n\nBut Megan's seductive drawl did it. What came out of Nick's shorts was just the teensiest bit turned on. Average bod, expected amount of facial color, eyes averted: I loved it, of course. \n\nHannah let the moment ride while all of us got a good look and a few teases in then turned expectantly to Gwen. Gwen stood, and with another long hesitation, a trifle shorter this time, unbuttoned her blouse. \"Damn! She gives you a run for your money,\" Hannah called to Aisha, a woman whom I'd noticed was well-endowed.\n\nAll eyes turned to Josh.\n\n\"Is that hat rule really fair?\" Josh asked. He'd been playing with two women who were wearing them, and none of the women at his table were showing anything beyond a bra while two guys were naked.\n\n\"No fuckin' way,\" Kevin answered, \"but it's the rules, and they ain't gonna change. Man up, bro.\"\n\nIt was just Josh's nerves speaking; I knew that. But it was of a piece, and I decided then and there that my bets with him were done.\n\n\"No hats in the main game.\" The super-quiet whisper was from Brey. I turned to look at her. She shrugged. \"You're either over showing your boobs or you shouldn't be in that game.\"\n\n\"I don't normally play with one in green,\" I whispered back. \n\n\"I heard.\"\n\n\"Now you, Josh,\" Hannah said. \"You know&nbsp;... Andrew and Kim are getting three tonight. You don't want to be the weakest link, do you? I think you should make sure. Come on. I'll help.\" She slid lower in her chair and moved her hand under the table. \"Just do what I do.\" \n\nI had a hard time not laughing. I could see her hand under the table, and nothing was going on. Josh knew it. \"Bullshit, Hannah.\" \n\nHe hurriedly stripped his underwear and did his turn. I checked out the two new players: it wasn't hard to see that Nick was relieved it wasn't him; Gwen's eyes were bright. The crowd satisfied, Josh stalked out to give Kim and Andrew their first look of the evening.\n\n\"Can we&nbsp;...?\" Nick motioned to his clothes.\n\n\"Nope. Not until the end. And I'm so going to sit on the couch where I can look under the tables.\" Hannah, of course. I was amused that Megan went and joined her.",
        "I took Zachary's pants. I think that shocked the table. I gave a wide grin, letting the doubt grow. Then I murmured, \"Don't panic,\" as I stacked my winnings. Looking back up, I said more loudly, \"I just love seeing some manly bulgez.\" My imitation hadn't gotten any better.\n\nZachary relaxed and stood. Gameplay stopped as the women enjoyed the briefs with a manly bulgez inside.\n\nI lost my bra. No, I'm not over the embarrassment, I thought as I felt my face heat under the room's scrutiny. I bet every guy in this room is wondering how they'll feel pressed against them. I sighed mentally. And they're gonna find out.\n\nWe continued slow-playing. It was getting tough. Will that third table never finish? At one point, we had to save Zachary. After his ante, we got a wide-eyed look from him. I got it. I folded in turn as it went around the table, though I stuck out my tongue at him.\n\nFinally, there was a loud sigh and \"Another guy bites the dust\" from the other card table. It was a guy whose name I'd lost in the rapid-fire introductions, and I didn't learn it then as nobody called it out while heckling him. I suddenly realized I was going to be kissing three naked men. Two of them didn't know that fact yet. I wondered if the one who just went out the door did. Of course, after he came back, every eye was on our table. We had two people a step from losing. The eyes at my table were waiting, particularly the three guys. Who would I choose?\n\nI anteed and folded, waiting for a hand. Suddenly, I had to do the big-bet-wide-eyes thing Zachary had done, praying people realized. I haven't bet a guy yet. Surely you understa\u2014 \n\nThe folds came smoothly, and I relaxed. It was a weak hand. To keep the people behind me unsuspecting\u2014and there were several sitting and standing there\u2014I dropped my cards face up. \"Surprised you all bought that.\" \n\n\"You rarely bluff, Chips,\" Emily said with a shrug. \"Good one.\"\n\nFinally, I got a decent hand that came together with Brey setting her cards down and aligning them neatly into a pile. \"One,\" she said. \n\nLuis dropped a chip in silently.\n\n\"And three,\" I said. No wide-eyed stare. Just confidence. \"Four to you, Zach&nbsp;... Can I call you Zach?\"\n\nHe nodded, but said, \"Too rich for my blood.\"\n\nI could see both Emily and Carter just beyond him. Both of their faces had a momentary look of disbelief&nbsp;... not at me, at their fellow-player. Two seconds later, I saw Zachary mentally kick himself. I could only make a side bet with someone still in the hand.\n\n\"I'm out too,\" Emily said.\n\nCarter spent some time studying my face. \"I think you heard what Emily just said and are trying to bluff twice in a row.\" I shrugged and he dropped in his chips. \n\n\"I'm staying,\" Brey said. I doubt anyone not in the know caught Carter's glance in her direction. \n\nLuis was in.\n\n\"One, please,\" I said. I set my cards down and leaned down to peer at the card's corner like they did in poker shows. I bought myself a moment to steel my nerves by turning behind me. \"If any of you saw that and make one peep, I will murder you.\" I turned back from the chuckles. \"Three.\"\n\nCarter and I played eye-chicken for a while. I visibly flinched first. \"Are you wearing boxers or those nice trunks this time?\"\n\n\"Trunks.\"\n\n\"Oh, I so want to see that again. Come on. Where are your balls?\"\n\n\"In those trunks where I'd like them to stay.\" That met with a lot of laughter. \"But you're full of shit, Chips. You're trying to get out of the hole you're in with just panties on.\"\n\n\"Try me.\"\n\n\"Make me an offer I can't refuse.\"\n\n\"Next game you and I are both in, I'll spot my socks.\"\n\n\"Pfft. Socks? Puhleeze.\"\n\n\"Carter! Thirty-five chips are sitting there.\"\n\nHe was shaking his head before I finished. \"They don't matter. If you don't win this hand, you'll lose. If you do win this hand, then I don't get those chips, and suddenly I'm vulnerable. Zachary or Luis will probably lose before that but&nbsp;...\"\n\nThe thing is, I hit on the one card I drew. I had a straight to the eight. The only concern was if Brey had a straight and it was a lower one. That would be a disaster because there was no way I was going to be able to lose the game if thirty-five or forty chips landed in my lap. I looked at Brey. I hoped she could see the uncertainty in my expression. She played with her cards, fanning them, and then realigning them into a neat stack.\n\nWhat does that mean, Brey? Are you just repeating that you have a straight? Or are you reassuring me that you have a kick-ass hand?\n\nI took the only real gamble of my evening. I bet it was the kick-ass hand or that, at least, she had a good straight.\n\n\"You're right, if I don't win this hand, I'm out. So&nbsp;... if I win the hand, I get a private strip show in the back room from you. I don't win the hand, you get one.\"\n\n\"If you lose, you're already stripping and making out with every guy here. No deal.\"\n\n\"Fine. If I don't win the hand, the rule about no touching is off.\" After a second, I added, \"Just for you.\"\n\nHis rapid shove of chips brought an I'm-with-you cheer from every guy. \"Call.\"\n\n\"You're going to regret that,\" I said.\n\n\"I call too,\" said Brey.\n\n\"I'm glad to take your money too,\" I said.\n\n\"I'm out,\" said Luis. There was no point in him staying in; I'd chosen a guy.\n\n\"We called,\" Carter said to me.\n\n\"A straight,\" I said triumphantly. There were some cheers. If I had looked around to note who, I'd probably have known which women weren't in the main game.\n\nI saw his face fall. You should be a theater major, Carter. You know I'm going to lose. He turned over his two pair. We turned to Brey.\n\n\"Flush.\"\n\n\"Oh God,\" I said sincerely.\n\nBrey looked at me with extreme amusement. \"And your bet was all about whether you won, not if Carter won. So I pronounce him the winner of your little side bet.\"\n\nIt was pandemonium for a few moments. Every guy in the place was going to get a naked woman up against him, and every guy in the place knew Carter was going to get more.\n\nOnly a few of the first ten guys I clinched with didn't disappear into a general blur of \"Welcome\" whispers, boobs ground against a naked chest, lips of varying degrees of onslaught, and the occasional something pressing against my belly.\n\nJosh because I was putting a pin in his, \"Can't wait for the coin flip.\" Problem for later, I told myself.\n\nMike because, well, Mike. I couldn't help but glance at Megan as I stepped back. Her look was dryly amused. That girl had confidence.\n\nZachary was his manic little self with not a whole lot of shyness boundaries. \"Fuck, Chips. Those tatas feel phenomenal!\" he exclaimed as he looked down to where I was flattened against him. Sure enough, he shimmied against me, getting as much pillowy action as he could. The kiss was almost an afterthought. His hand may have slid just a fraction low on my back, but I decided to chalk it up to his short height and be a good sport.\n\nI turned to Carter, who'd waited for last&nbsp;... of course. I stepped up and raised my arms to go around his neck, ready to endure mortification. \n\n\"Whaa\u2014\" I felt myself unexpectedly swept up in an irresistible grip, two hands firmly planted on my ass. Without thinking my legs clamped around his waist as my arms clutched the back of his neck in alarm. Oh my God! It's like I'm fucking him standing up. I shut my ears to the noise.\n\n\"Give me a nice one and I won't run a hand up to cup your chin,\" he said so only I could hear. I took the offer because I knew what lay between my ass, where his hand rested, and my face. My boobs. I gave him the best I could: lips soft, tongue gently teasing, suppressing every impulse to hurry. He took his time. I know he enjoyed it, and despite circumstances, I didn't hate it. Finally, he smiled that huge, goofy smile. \"Though I certainly want to.\"\n\nIt took me a second to parse that, then I gave him a wavering smile. \"Thanks.\"\n\nI glanced over at everyone else, their cheering suddenly registering. I looked away&nbsp;... yeah, mortified. I stumbled over to the doorway and snatched up the robe. Kim and Andrew would be simple after that.\n\nI made the walk I'd made once before, this time in weather that snuck up through the bottom of the robe and made my nipples knot even more tightly, if such a thing were possible. I pushed the doorbell and, when I saw shadowy forms approach, let the robe drop. \n\n\"Hi, Charl,\" Andrew said. \"Nice to see you again.\" \n\n\"Hi, Mr. Morgan, Mrs.\u2014\"\n\nThe interruption was almost instantaneous. \"It's Andrew and Kim to anyone who plays. Always.\" \n\nI gave a half-nod. \"Thank you for letting us use your place,\" I said formally. I prepared to turn and go like last time.\n\n\"We hear you've gotten an invite,\" Kim said, forestalling me. \"Oh, put the robe on, honey, and step in the vestibule.\"\n\nGratefully, I picked it up and wrapped it around me, moving into the warmth. \"Yeah, I did.\"\n\n\"Are you going to play?\"\n\n\"Umm. They haven't told me everything, but probably.\"\n\n\"So, how many guys showed?\" Kim's eyes twinkled as she flicked her gaze up toward the loft. \"It was Girl's Hat and 'every guy' tonight, right? That part hasn't changed?\"\n\n\"No, it hasn't. Eleven.\"\n\nShe wiggled her head side to side. \"About par. Way less in the early days, of course.\" She paused. \"Some of those men up there are such delicious pictures.\" She glanced sideways at me. \"And I hear there are some good kissers. Wrapped up against them, a man's hands on you&nbsp;... you're probably in a state right now.\" \n\nAt that sly comment, despite still being sure of her innate friendliness, I caught a glimpse of the woman who'd played these same games in her day. The one who'd watched in glee as men bared all for her pleasure and done the same for them in turn, who'd moved on from there to start a game where blowjobs and jerking-off had figured. Thirty-something wasn't so ancient. I stammered a noncommittal reply which caused both of them to smirk.\n\nBack in the loft, a horde of eyes turned toward me, eleven pairs immediately zeroing in on tits and ass. I pretended not to feel self-conscious and picked up my clothes as Mike herded Gwen and Nick out, a crowd of mostly guys following. \n\n\"Umm, Chips. You coming?\"\n\nAt Josh's call from across the room, I saw Hannah glance between us, then call back to him. \"It's tradition we take a girl who does that out. She your ride?\" Hannah knew I wasn't.\n\n\"No, I\u2014\"\n\n\"Then toodles until next week. Girl's night tonight.\"\n\nHe looked disconcerted and like he maybe wanted to argue, but he left.\n\n\"Now I know who,\" she teased. \"Bet half of you wants to know about the main game, but the other half is dying to follow him.\" She scoffed at my protest. \"Sweetie, I know a woman who's horny as fuck, and I'm looking at one. Come on, back room,\" she said with a glance at a couple of people still pulling on coats and hats.\n\n\"In the green games, it's all about not losing. I mean, the better you do, the fewer clothes you lose but, since the game stops as soon as someone's stripped, it's about not losing. With me?\"\n\n\"Yeah.\"\n\n\"In the main game, it's about winning because it doesn't stop until all but one person is naked.\"\n\nI gave a little grunt that signaled excitement.\n\n\"That's not quite right. It's not all about winning. It's about not losing, too. And that's a little more challenging because there's always a potential girl loser.\"\n\n\"What do you mean potential?\"\n\n\"First girl stripped is the girl loser. First boy stripped is the boy loser. The actual loser is the opposite gender from the winner.\"\n\n\"And, let me guess, the actual loser is the one giving the blowjob or having to jerk off.\"\n\n\"Yep.\" She paused for a moment. That expression of malicious glee returned, and I knew I was going to hear something scary. \"Except that those terms may not apply.\"\n\n\"What do you mean?\"\n\n\"The winner chooses which they want: oral sex or a show. A guy can be asked to give head, and a girl can be asked to jill off for the group.\"\n\n\"Oh my God!\"\n\n\"Yep,\" she said again. \"We hate it. Even more than the guys hate it, maybe 'cause it takes us longer. Fortunately, guys usually go for the blowie.\"\n\nShe could see my shock. \"You've got time to think about it. The next game is after break.\"\n\n\"Not tonight?\"\n\n\"Nope. Girl's night, like I told Josh. And next week are finals and then people heading home.\"\n\nI sat in silence, trying to imagine having to get myself off in front of others&nbsp;... guys or girls, it didn't matter. I wasn't sure if I could.\n\n\"It just seems like a guy could get it over in seconds, especially if there are naked women in front of him\u2014\"\n\n\"Yeah, it helps.\"\n\n\"But, even with some nice-looking guys in front of me, I&nbsp;...\" I trailed off.\n\n\"I know. We set it up to help whoever it is, and the other girls are supportive. It's one of the few situations where nobody razzes. But, yeah, it's majorly stressful.\"\n\n\"Have you ever had to do it?\"\n\n\"Once. As I said, most of the time the guys want head. They can see a woman jill anytime they want on Pornhub. Do you have a problem with blowjobs?\"\n\n\"Not really. It's not my favorite thing, but I do it.\"\n\n\"With Josh?\" she teased.\n\nI nodded. \n\n\"You have to let them finish.\"\n\n\"I figured.\"\n\n\"But you don't have to swallow if that grosses you out,\" she consoled.\n\n\"Do you ever fake it?\"\n\nShe knew I wasn't talking about faking swallowing. \"I didn't, and I don't know of anyone who has. We've had girls who find they just can't do it. The 'quit anytime' rule applies. They don't even have to quit the club; they just have to stay in green games from then on. But faking it won't earn you any friends if anyone guesses.\"\n\nThe door popped open and Carrie stuck her head in. \"Everyone's ready.\"\n\n\"Where's Megan?\" I asked when we came out.\n\nEmily answered, \"She's invited, but she and Mike don't play anymore. She says she feels awkward coming to these things because of that.\"\n\nWe had a great time out. Little variations in the rules of the main game got explained. I finally got names straight. I soaked up the \"you killed it\" praise. I endured the good-natured ribbing. I turned down the bet about flashing the cute guys in the parking lot. \"I've bet enough tonight.\" They let me get away with that, and those guys never knew how close they'd come to a show from one girl or another.\n\nI was given a key. \"Just if you're the first to arrive on a Friday. Never, ever, ever for personal use. Don't piss off Kim and Andrew.\" I shook my head. I got semi-hammered along with the others. Aren't fake IDs wonderful?\n\nBut always in the back of my mind was \"He wants a show; he gets a show\"\u2014said Emily to Logan while I eavesdropped. \n\nNow I understand where Logan was coming from.\n\nThe Ubers pulled away and we stood at the gates of the college before splitting up for our various dorms. \"Next game is January 11, the first week of winterim,\" Hannah said. \"You've got till then to decide.\" Several pairs of eyes watched me, friendly but judging: Will she, or won't she?\n\n<center>\u2022 \u2022 \u2022</center>\n\nThe first text that night was from Josh.\n\n\u226a Have coin. Will travel.\n\nPoints for effort, but I just wasn't into him. That was a problem because I was seriously horny right now. It was the inevitable result of getting worked up for two months of Fridays with only two little tongue parties to relieve things. But if I kept it up it would be just that much harder to disengage from him.\n\n\u226b Crashing. Sorry.\n\nI ignored the sad emoji. My phone dinged again a few minutes later. I picked it up, prepared to be irritated. But it was from Hannah.\n\n\u226a You okay? You seemed a little out of it right at the end.\n\nMy semi-drunk brain decided the truth was a good idea.\n\n\u226b Horny.\n\nThere was a long pause. It stretched on. Then some more. Oops. Overshare. Fuck!\n\n\u226a Come over. Get an Uber. 128 Hawthorne St. First floor.\n\nWhat the fuck? Hannah lives in the dorm. Oh. Owen lives off-campus.\n\n\u226b Umm. Not sure I'm into that kind of thing. You two have fun.\n\n\u226a LOL. Not that. Shut up and get an Uber. Trust me. You can quit at any time.\n\nThat final sting had its effect and I went. Carter answered the door. \"What?\" I was totally confused. \"I thought Owen&nbsp;...\"\n\n\"Owen and I share an apartment,\" he said.\n\n\"Get in the fucking door, Chips. You're letting in the cold,\" I heard yelled from somewhere behind him.\n\nI stepped in, looked to my left. Hannah was padding from the kitchen to an open doorway, carrying two mugs and clutching a bag of Doritos under one arm. \"Take this,\" she called to someone inside the room. \n\nOwen's face popped around the corner. \"Oh, hi, Chips.\" The two of them looked at the two of us, then smirked and closed the door.\n\nI looked at Carter, tongue-tied. Then I managed, \"Thank you for taking it easy on me.\"\n\n\"Anytime.\" He smiled that big, lazy smile of his, waiting to see what brilliant thing I'd say next.\n\nYou're not exactly sober, are you?\n\nBad decisions can get made when you're not sober.\n\nWho the fuck cares?\n\nI reached up and put a hand on the back of his neck just like I'd done several hours ago. His grin got wider, and suddenly I was caught up in that bear-embrace again. This time, I had on a few more clothes, though my legs did the same involuntary wrap. This time, the kiss was more demanding. This time, a hand did run up my front, pausing for a firm caress, before moving up to cup my chin.\n\nYeah, I'd been right. This was a guy who could grab a girl and toss her around. Not like abuse. Like effortlessly carry her the ten steps to the second bedroom. Like support her weight with one arm while the other stripped a puffy jacket off her shoulders, gently pulling while she slid first one arm and then the other out. Like deposit her at arm's length on the bed without tumbling after her in a loss of balance.\n\nI felt his hands working the fastenings of my jeans. I tried to help, but huge hands pushed mine away. \"Let me.\" I felt the tugs, panties being pulled down to my calves at the same time as the denim, a mouth laying kisses on my belly, on the triangle of hair, on my pussy. I wanted to cry out as I felt the first, firm swipe of his tongue that started right at my entrance and then trailed up to end in a flick against my clit. Instead, I moaned.\n\nHe did it again. Then again. Then I wanted my legs free to move. \"Pants off,\" I insisted, struggling to kick them off. Of course, that didn't work; skinny jeans don't come off that way. I was upended as he grabbed the cuffs and lifted up and away. My legs dropped free and I spread them, reaching up for his arm, catching it, and pulling him toward me. \"Okay. Go back to doing that.\"\n\nI came with my ass eight inches off the bed, gripped in a meaty paw as he held me against his mouth. Looking up the inclined plane of my body, I saw eyes sparkling at me as his mouth and lips did their thing. \"Put a finger in me,\" I moaned. \"Yes. Right ther\u2014\" I didn't have to finish that; his finger found the spot on its own and began its \"come hither\" stroking. \n\nI grabbed a pillow and stifled my cries into it. Then I dropped it and arched to grab him with both hands, one in his hair, the other missing to clutch an ear and a stubbly jawline. My hips and knees twisted so that my calves grasped his back. \n\n\"Don't stop,\" I moaned. \"No, don't, yeah, don't dare.\" It was a mindless drivel of words, but it conveyed my meaning. He didn't stop. His lips increased their suction. The finger grew more insistent. \"Oh, fuck me.\" My entire body tensed involuntarily. His tongue increased its speed. \"Oh, just fuuu\u2014\" And then my body clenched in a paroxysm of bliss.\n\nI bucked against him but there was nowhere for my pelvis to move. The hand on my ass pinned me one way; the finger inside pinned me another; the mouth pressed hard against my mons pinned me a third. Only my upper torso could thrash. I had no choice but to ride it out, letting him draw every second of the orgasm from my body.",
        "When he felt the strain leave me and my hands relax their death-grip, he lowered me to the mattress. I looked at the grinning, Charl-soaked lips and cheeks, and grinned back.\n\n\"Now you,\" I said.\n\n\"You just told me to fuck you.\"\n\n\"You will,\" I promised. \"But first you.\" My usual disinclinations were set aside. The combination of alcohol and deprivation; the lingering adrenaline-rush of my exhibition that evening; the anticipation of what the new year would bring; most of all, the not-quite-enough feeling that accompanied getting eaten but not laid, both now and with Josh&nbsp;... I was on fire, and I was going to pay back what Carter just did for me in spades.\n\nI pushed myself up to a sitting position. \"Take your shirt off.\" He stripped it over his head, high above me. While his arms were engaged, my fingers went to work on his belt buckle. I pulled down his jeans, looser than a woman's, easier to lower. Running a hand over the cock outlined in his shorts, I kissed as high on his torso as I could reach while sitting, then a line down his abdomen. Hooking fingers in the elastic, I drew his underwear down at the pace my mouth moved. \n\nWhen the purple head emerged, I kissed it too and continued the descent. Inch by inch until I laid a final kiss, then another, right on his scrotum. His underwear fell to the floor. I reached behind and cupped his cheeks in my hands, let him feel the warmth of my breath on his body. \"Try to stay standing,\" I teased. Then I took him in my mouth.\n\nI sucked and licked and stroked, keeping the pace slow, striving for depth and maximum mouth-to-cock contact. I pulled with my hands against his ass, squeezing my fingers tight on each inward stroke. I hummed, just a little vibrato, each time he got close to the back of my mouth. I used every trick three high school boyfriends, one September hookup, and ten minutes with Josh had taught me.\n\n\"I'm going to come,\" he warned.\n\n\"Then come,\" I broke off long enough to tell him. Just as he had driven me wild with an increased intensity against my clit, my tongue against his frenulum now fluttered into overdrive. I felt the trembling in the heavy thighs and butt muscles. I felt the hand land on the top of my head to steady suddenly unstable legs. My lips felt that first, dry jerk that guys give. And then my mouth was filling with a warm, salty taste. I didn't mind. I was in the zone. I sucked him off and swallowed eagerly.\n\n\"Jeez, Chips.\"\n\nI looked up at the face of a man temporarily spent, his breath still coming in little pants. I grinned and moved backward, drawing him after me onto the bed. He slid up alongside me, one hand sliding underneath so that my head was on his shoulder, the other landing on my stomach before ascending to cup my breast.\n\n\"I guess you might need a small break,\" I teased.\n\n\"A little.\"\n\n\"Well, after you catch your breath, if you need something to occupy you&nbsp;...\" I took the hand cupping my breast and moved it down so it was heavy on my sex. I used my fingers to press down on his so that they curled in between my legs.\n\n\"I'll keep that in mind if I need something.\" He pulled his hand out from under mine and very deliberately put it back on my breast. \"But I want these to occupy me for a bit.\" At my little mew, he laughed. \"Patience.\" His fingers found the nipple, rolled it firmly. I gasped. \"Good gasp or too much?\"\n\n\"Good.\"\n\nHe did it again. He turned, and his mouth descended onto the other side, catching the nipple between his lips&nbsp;... then between his teeth in a grip just on the good side of pressure. His tongue flicked against the captive and I gasped some more. \n\n\"That's&nbsp;... uh&nbsp;... you're allowed to keep doing that.\"\n\nI felt the chuckle rumble up from his belly and vibrate against the soft flesh he had in his mouth. He played with my breasts until I knew they'd be tender in the morning, but good tender. Then he widened the compass of his attention. His hand descended of its own volition this time, tracing lightly over ribs and navel, skipping to stroke the inside of thighs and urge them farther apart. Fingers returned to my pussy. They toyed along the outer lips before delving into the hot, dripping depths.\n\n\"I'll make a bet with you,\" he whispered around the nipple he was nibbling.\n\n\"What? Now? I made enough bets with you this evening.\"\n\nHis fingers stilled. \"I'll make a bet with you,\" he repeated.\n\n\"Okay, fine, but&nbsp;...\" I bumped my pelvis upward to let him know what he was supposed to be doing in the meantime.\n\n\"Pick a number between one and five.\"\n\n\"Four.\"\n\n\"If I make you come four more times tonight, you give me a wake-up blowjob in the morning. If I don't, I go down on you.\"\n\nI laughed. Not a risky bet, just some verbal foreplay.\n\n\"Deal. Your first one's a gimme\"\u2014I pumped my pelvis again\u2014\"but you're going to have to work for the others.\"\n\nHe finger-fucked me. His mouth roamed over mine, inhaling my gasps and moans. His thumb rode my clit. His middle finger rhythmically buried inside me to the pace my hips demanded. One.\n\nTwo came with me beneath him. I felt a moment of apprehension in that first moment, when he moved above me, kneed my thighs farther apart, and set the tip against me. It's been a while. \n\nBut I had no choice. His hips were between my legs; his hands were on my wrists, not hurting, but pinning; his hard cock was at my entrance. He was going to fuck me now, barring anything but a firm \"No!\" and a demand that he get off me. Yeah, that's not gonna happen. Then the first plunge, easy given how wet I was, stretching me, filling me, and the worries fled. \n\nEvery one of those thrusts was delicious. I let my hips do what they wanted: rise to meet his motion, pushing back at him. I stared into his eyes from a foot away, totally aware of the man above me yet completely focused on the sensations lower. \"Harder,\" I whispered. He obliged. I thrust my arms straight up the bed, stretching my torso out, arching my head back. I could see his eyes go to my tits as they rose and fell and swayed with my motion. I reveled in his expression.\n\n\"I'm going to come,\" it was my turn to say. Not a warning. A promise. \n\n\"Then come,\" he echoed my earlier words.\n\nMy legs scaled up his body. I locked my ankles behind him, urging him in, helping him drive into me. Again he heard the long, drawn-out moan of \"Fuuuck&nbsp;...\" as I went rigid. He kept up, slowing as I came down from the high.\n\n\"Did you?\" I asked.\n\nHe shook his head. \"Not yet. I want you to come again. How about you on top?\"\n\n\"If you want.\"\n\nHe stopped and studied my face. \"No, not if I want. We just did what I wanted. What do you want?\"\n\n\"On my stomach. Prone,\" I said tentatively.\n\n\"Okay.\" He pulled out of me, bringing an involuntary \"ooh\" of disappointment. He laughed. \"Roll over.\" Hands came down on either side of my shoulders. I felt knees on the outside of my thighs. \"Lift just a slight bit for a moment.\"\n\nI felt the head of his cock search down between my butt cheeks, slide lower, find the opening. He paused and adjusted his position. Then he plunged down firmly. The head of his cock nailed my G-spot. A long, sibilant \"Yesss\" left my lips. \n\nI'm sure that nothing more coherent than \"uh\" left my mouth after that. My eyes were closed as he devastated me. This was going to be a grandmother of one; I could feel it. I slid my hand underneath and started frigging myself in time with his thrusts. The sound of his breathing getting shallower and faster egged me on. \n\nNo words this time. No drawn-out \"fuuuck\" signaling my release. I simply screamed into the mattress below me as I came, biting the sheet to smother the sound. Seconds after it started, before my pussy stopped clenching his cock, I heard his answering groan and knew he was coming too. \n\nAs I started to come down from the white noise inside my mind, I felt the intimate sensation of warmth and extra-wetness. I loved that, the feeling after a guy came in me. Yeah, it would be messy in a moment, but for that little bit, those few seconds, I always felt primal and satisfied and, I don't know, like my instincts were saying, Yeah, THAT'S the way it happens.\n\nThough not any time soon! my mind added with a laugh. Knock on wood.\n\nI twisted underneath him to look at his face. We smiled. I saw the heavy eyes. \"You look like you need a nap, and that's only three,\" I said.\n\n\"Prolactin.\"\n\n\"Pro-what-the-fuck?\"\n\n\"Prolactin. Hormone that men's bodies release during sex and makes us sleepy.\"\n\n\"Did you look that up just to bullshit women with?\"\n\nHe grinned and shook his head no. \"I'm pre-med. It's true.\"\n\n\"Well, nerds get the wet spot.\" I squirmed over to a drier part of the bed and let him curl up around me. \"But it's only three.\"\n\nI wasn't sure what woke me. Then I heard it again, a woman's moan coming through the wall between us and the other bedroom. I giggled and rolled over. Carter was awake, his suppressed laugh mirroring mine. Number four came cowgirl because he said, \"I'm not doing all the work tonight, you lazy wench.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nA car horn somewhere out there woke me just as the sun was pushing over the horizon. I was momentarily disoriented: not my bed, not my room, a gentle snore coming from beside me. Then it came back to me. Some tender body parts filled in some of the specifics that alcohol might have left fuzzy. I certainly felt more relaxed than I'd felt in months.\n\nI slid quietly and carefully out of the bed and drew on my clothes. I turned back to the man huddled up under the covers. It wasn't the mood of last night, but I didn't super mind.\n\nI blew him into writhing wakefulness. I left with an arched eyebrow, a fingertip wiping an imaginary drop from the side of my mouth, and a wave. I had finals to study for. But a bet's a bet.\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\nI hope you enjoyed it.\n\nAt some point\u2014again, no timetable at the moment\u2014Chips & Co. will be back, tentatively titled The Loft Game-Elf on a Shelf."
    ],
    "authorname": "chasten",
    "tags": [
        "bet",
        "blowjob",
        "cfnm",
        "cmnf",
        "coed",
        "cunnilingus",
        "embarrassed",
        "fucking",
        "strip",
        "strip poker"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-loft-game-barney"
}