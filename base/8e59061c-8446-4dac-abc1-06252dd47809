{
    "title": "Apple Cove Ch. 01",
    "pages": [
        "The normal disclaimers apply, anyone having sex is 18 or older.\n\nThis is a three part story which begins as a first time and evolves into a romance.\n\n*\n\nApple Cove CH1\n\nI am the fourth of six children, the first was a boy, known to us others as *the Golden One* since he seems to do no wrong in our parent's eyes, followed by two girls and then me. A four year interval ended when mother had another boy and then our baby sister. The oldest was the golden boy and the youngest was their *baby*, which left the rest of us in limbo. We were loved and shown love as much as parents of six can divide themselves, I held my own, but was not an academic genius or sports minded like the others, I sort of existed somewhere in the middle.\n\nTherefore, when I was asked at the age of ten if I'd like to spend the summer with my Aunt Clara and Uncle Ted at their apple orchard in Wisconsin I didn't hesitate to say yes. We lived in New England and were what I came to find out later in life as an upper middle class family, I don't recall going without, but I also understood the concept of hand me downs. My mother was the hand me down queen, everything from dresses to underwear, it was all fair game if it was still in decent shape, the only girl who didn't live this way was the very youngest, we older girls were simply too far apart from her in age.\n\nMother was originally from Wisconsin, had gone to college in Boston , met father, married and set up a home life in New England. Aunt Clara was mothers sister, at the age of 31 she was the youngest of three girls, though we'd only met her a half dozen times my sisters and I agreed she was the *cool* one. She wore makeup, nylons and strappy shoes that looked like they should be in a movie.\n\nI found it interesting that my parents were so willing to send me off before my eleventh birthday at the end of June, which put me in a bit of a snit you might say. With my little suitcase packed I said my goodbyes, jumped in the car with golden boy and headed for the halfway point, Cincinnati, where we would meet Aunt Clara. After meeting Aunt Clara golden boy decided he was heading back home, Clara and I went for some supper, found a room for the night and hit the hay. I had apparently gone to sleep immediately because the next thing I remember was her dressed and ready to go standing at the side of my bed repeating my name.\n\n\"Claudette, wake up, Claudette, come on time to get up.\"\n\nJeepers, I couldn't recall the last time I'd been awakened so nicely, usually it was Fran or Sarah yelling *everybody up, let's go*, and since we girls shared two rooms side by side there was no such thing as sleeping in. Tossing our bags in the truck we found a diner for breakfast and left for her place around eight, the landscape varied considerably from the upper New England area, I spent much of the first few hours looking out the window. Around ten o'clock Clara announced, \"I gotta pee, how bout you squirt?\"\n\nHow that name came to be I'll never know, no one but she and Uncle Ted ever called me squirt. She grabbed another large coffee to go, I got a Snapple along with a candy bar and we hit the road, chit chatting a little here and there during the morning drive, it was after lunch she became more serious and focused in our conversation.\n\n\"So squirt, how do you feel about having your birthday with us? Will you miss your family?\"\n\nMy answer surprised me, but not her. \"Yeah, about as much as they'll miss me.\"\n\nThat never affected her, she went right into the next question. \"Your sisters started their cycles around eleven, have you started yet?\"\n\nI was flush, my cheeks felt like they were on fire and I was fidgeting on the seat.\n\n\"No need to be embarrassed squirt, it's just us girls, no guys around. I'm asking because if you haven't, we should probably get a few things just in case you do. Better to be prepared, the closest store is almost ten miles from the farm.\"\n\nWe pulled into the long drive just after four in the afternoon, the orchard lined the drive on both sides as well as up the hillsides, I'd only been there twice before and remembered very little, it was all new and exciting. As we turned the corner into the parking area I saw a small shop with a huge sign, *Vegetables, Fruit, and Fresh Baked Goods* getting out of the truck I could see people milling around inside. I tugged on Aunt Clara's arm and pointed toward the little shop.\n\n\"We built it about four years ago, we sell what apples are still available, vegetables in season and there's a small state inspected kitchen where I make baked goods. If you're willing to help, I'll put you to work, I think Uncle Ted has some things he'd like to hire you for as well.\"\n\nDid she say *hire*, my world got much brighter hearing her say that word. I had my own room and the hall bath was basically mine, Aunt Clara was doing laundry on a Monday and held up a pair of my hand me down ugly undies. With a frown on her face she spoke.\n\n\"Is your mom still making you wear your older sister's underwear? I thought they were buying their own more modern stuff.\"\n\nI hung my head in embarrassment, \"They do, but mom saved all their old stuff and I have to wear it, I hate them, all the girls laugh at me.\"\n\n\"Tell you what, when I'm in town Friday I'm going to buy some different underwear, at least something with a little color.\"\n\nI was ecstatic, thinking to myself that by the time I went home after the summer I might be like the other girls at school. I worked with Aunt Clara in the kitchen and learned how to run the cash register. Uncle Ted had me helping with small things in the barn and would let me sit in front of him on the tractor seat, he took care of the footfeet and controls, I got to steer. When mid-August rolled around I was sad to go, Aunt Clara sent all the new underwear with me, she wasn't sure how mother would accept the colors, she'd cross that bridge if mom had an issue with it.\n\nIt was my oldest sister Fran who met us halfway this time, golden boy was getting ready for college. Whoopee, who cared. I told her all about my summer, all the things I did to help and had earned over one hundred dollars of my own money. When we got home, mom was unpacking my case and wanted to know where my underwear was, I pointed to the different colored panties and she damned near flipped out. She was on the phone with Aunt Clara in a flash, I could hear her asking why she would let a little girl wear anything but white panties. I have no idea exactly what Clara said, but it shut mother up and the topic never arose again.\n\nThe following June I was on the way to the farm again, excited about spending the summer with Clara and Ted. Following a hello wave from Uncle Ted on the tractor I trudged down the hall to my room, on the top dresser drawer was a note, *look in the underwear drawer*, signed *Auntie*. I nearly jumped out of my skin, in front of me were a half dozen more pair of panties in assorted colors and patterns.\n\nI squealed all the way to the kitchen thanking her profusely for the wonderful surprise, she smiled and told me to set the table. Over supper Ted told me he was going to start me cultivating the sweet corn at the end of the week, he had a 1947 Farmall B tractor he only used for cultivating corn. Friday morning after breakfast I was on the tractor driving around the barn yard getting the feel of things, from there he took me to the corn field where I rode the hitch as he made the first pass through the corn rows, at the end we switched places, me driving with him on the hitch. He had me turn around and begin the next pass back from the way we'd come, by the time I'd cultivated two more rows without ripping up the corn he was ready to jump off.\n\n\"Okay squirt, your on your own, there's water in the tool box and some toilet paper if you need it. Just hide behind the rear wheel, nobody will see you way out here.\"\n\nAt noon Aunt Clara came out with a light lunch and an insulated jug of fresh cold water, she told me to knock off about three, when the sun was just over the barn and come in. That would give me time to shower and wash away the days grime. I cultivated over twenty acres of sweet corn over the next week and loved every dirty, grimy, sweaty minute of it. Talking with mom one evening I let it slip that I'd been driving the tractor by myself, all I remember is her yelling, \"Put your aunt on the phone young lady.\"\n\nAfter fifteen minutes of Clara calming mother and reassuring her all was okay, she handed the phone back to me, we talked another fifteen minutes before hanging up. With cultivating done I was helping Clara in the kitchen baking pies, fried apples and apple bread which never seemed to last even one day. Most days I was cheerful and raring to go, one morning my tummy was hurting badly and I was mopey.\n\nIt was Aunt Clara who saw me through my first period and by the end of July I was beginning to develop in other areas. Just before it was time to go back home Aunt Clara surprised me when she bought my first ever training bra the next time she was in town. I felt like I owned the world, I was now like most of the other girls in my class, at least I wouldn't be wearing under shirts any longer. Mother did another back flip when I got home after that summer, she was on the phone instantly, only to say nothing more about it after her conversation with Clara.\n\nSpending the summer with my aunt and uncle became a part of my existence, I looked forward to it, I helped with farm chores, tending the veggie stand and my most fun time ... sweet corn. Ted and I would drive into town, the back loaded with corn and sell until it was all gone. Day after day we'd do that, I loved meeting the different folks who stopped. On the night of my arrival the year I turned seventeen we had a BBQ and big bonfire, neighbors had been invited, when Tobias Enderval walked across the driveway toward the bonfire my heart stopped. I was next to Clara who shook me a bit and whispered, \"breathe.\"\n\nHe was a handsome full bodied farm boy from across the valley, as Auntie gestured for him to come meet me I sensed he was a bit embarrassed. I extended my hand to shake his, he fidgeted a moment then extended his arm, I was expecting a strong hurtful grip, what I got was a strong sensitive grip with just enough pressure to embrace my hand in his. I had absolutely no idea what to say or do beyond the handshake. Thankfully Clara saved the day.\n\n\"Toby, this is the niece I've been telling you about, the one from out east. Her name is Claudette, I call her squirt, you might want to ask what she'd like to be called.\"\n\nBefore he could speak I blurted out, \"Claude, you can call me Claude.\" I then turned a crimson red, thank God the sun was setting and my face was shadowed.\n\nHe smiled, \"Claudette, I like that. A pretty name for a pretty girl.\"\n\nClara went to socialize and mingle leaving Toby and I standing next to the fire talking. We roasted hot dogs over the open fire, drank pop and enjoyed more roasted marshmallows than we should have. He talked about how his mom died three years prior, his dad went into a deep depression for a month or so and decided to sell the herd, rent the land and get a job in the city at the brewery. He had just graduated high school and wasn't sure what the future held. We seemed to be comfortable around each other, I liked that he was polite and respectful, not like so many of the boys back home.\n\nWalking with Clara and Ted to the house after the last folks left, I was caught off guard by her statement.\n\n\"I think somebody was twitterpated tonight Ted, what do you think?\"\n\n\"Definitely, never saw Toby look at a girl like that before. He was sure likin' what he saw.\"\n\nI was confused. Twitterpated? What the heck was that? So, I ask.\n\nClara laughed, \"Has it been that long since you've watched Bambi?\"\n\nMy response made them stop in their tracks, \"Oh, we weren't allowed to see that, mom said it was too violent.\"\n\nTed laughed and said, \"Nonsense, it's still early Clar, let's watch it with her tonight.\"\n\nThey were on the couch together, I was in the easy chair, when we got to the part where Thumper was *twitterpated* I had them stop the movie.\n\n\"Who was twitterpated at the bonfire?\" I asked.\n\nTed looked astonished and confused, \"Why, Toby of course. He couldn't stop looking at you.\"\n\nThat couldn't be, my ears had to be playing tricks on me. I looked at Aunt Clara only to see a smile and nod of the head.\n\n\"Honey, he likes you .... A lot. Why do you find that so hard to grasp?\"\n\n\"Aunt Clara, nobody likes me in that way. I wear glasses and I could stand to add a pound or two in certain areas, I'm nothing but a skinny runt, he can't possibly think I'm attractive.\"\n\nTed got my attention, \"Claudette, my ears heard the same thing yours did, he said you have a pretty name, guys don't just do that.\"\n\nClara smiled, \"Claudette, where does it say every guy likes the same thing? Besides, you'd better get used to the attention because he started working here as soon as school was done, you'll see him almost every day while you're with us.\"\n\nWhat a summer, Toby and I spent most or our spare time together when we weren't working, along with a few sweet surprises when we were working. The first time he brought a picnic lunch I was cultivating corn, when I got to the end of the field near the pond there stood Toby with a smile on his face and a basket at his feet. He told me to wear my swimsuit under my jeans the next day and we'd swim in the pond, considering the pond was spring fed that water was cold by my standards.\n\nI knew by mid-summer I knew I was falling for Toby, I asked Aunt Clara if I was too young to be in love.\n\n\"Do you like each other?\" I nodded. \"Has he kissed you?\" I shook my head. \"Well honey, you're only seventeen, no need to rush into a romance just because others do. Maybe let him know you like him before you go home, see where it goes from there squirt, heck, we don't even know for sure you'll be back next year. Especially if you go to college after graduation.\"\n\nThe tears flowed freely the day I had to leave, just before I got in the car I let him kiss me, my very first kiss from a boy, we vowed to stay in contact via Skype and text. When mother found out I had a pseudo boyfriend she nearly had a cardiac arrest, you'd have thought I'd killed someone the way she went on and on. I was too young, too inexperienced, what was I thinking? Had I let him *touch* me, her word not mine, she made liking a boy sound dirty.\n\nI called Aunt Clara in tears, breaking down and telling her all mom had said. She told me to hang up and not answer the house phone. My brother answered it and yelled, \"Mom, it's Aunt Clara and she sounds pissed.\" How he got away with cussing in front of her I never could figure out. I heard a bunch of *hold on* and *wait a minute* and then *are you sure* before she settled down enough to talk with her sister. Mother didn't bring it up again, but she made it clear she was upset with me for having called Clara.\n\nThe school year couldn't seem to go fast enough, I had no idea what I wanted to do with my life at eighteen and asked Aunt Clara if I could come live with them for a year until I figured things out. She and Ted were fine with the idea, it took her four or five calls with mom too finally drop the bombshell. I was prepared for a third world war, surprisingly mother took it in stride saying she thought it might be a good idea to be gone a while, to give me some time to figure out what I might want to do.\n\nDad had a seven year old F-150 pickup he never drove other than an occasional run to the hardware on a weekend. I on the other hand loved and drove that truck every chance I got. Mom said he bought it when he was going through his mid-life crisis, wanted a truck like all the other guys, only he always drove his Lexus. To my amazement they gave the truck to me as a graduation present, they'd had it gone through by the dealer and put new tires on to boot. Aunt Clara was going to fly in, we'd drive back together.\n\nWith Fran and Sara out of the house we girls each had a room to ourselves, there was still the extra bed in each room, but no one sleeping in them. Clara and I bunked in the same room while she was there, on the second night I heard her get out of bed and sit on the floor next to my bed.\n\nShe started the conversation. Not at all what I was expecting, \"Claud are you on birth control of any type?\"\n\n\"No, why do I need birth control?\"\n\n\"Fair enough question. Honey, you're 18, it's a natural part of falling in love, and nothing says you're going to have sex, but if you do don't you want to make sure there isn't an unwanted child? Every woman brings her greatest treasure to the man she loves, her virginity, and if we love them that much, we end up wanting to give our body to him. I'd rather you were prepared and didn't have sex than unprepared and did. Am I making any sense to you?\"\n\n\"You are, thank you. I'm going to have lots of questions over the next year, things I can't ask mom.\"\n\nAs she stood and walked to her bed I lay in the dark thinking I'd just had the mother/daughter talk I always craved ..... but it was with my aunt. I was now 18, it would be an exciting year, two weeks after my eighteenth birthday Clara and I hit the road headed west to Wisconsin. As we pulled into what I used to think was a long driveway I realized it was no more than one hundred yards, remembering it seemed much longer when I was ten. The apple trees were in full bloom, the bees were working the blossoms without end, part of the reason Aunt Clara sold some of the best honey around.\n\nIt was late evening when we arrived, Uncle Ted was in the drive waving at us, and behind him stood my heart throb, Toby. Flutters crashed through my chest, I didn't wonder why in the least, I got the impression auntie had been reading my mind when we had *the talk*. Sliding out of the cab Ted gave me a hug then went to Clara, behind him was Toby, he softly reached for me, without a moments hesitation I lifted my lips to his, his kiss made my knees feel like Jello. If he'd have said *let's go get naked* I wouldn't have resisted one bit.\n\nWalking hand in hand to the house I pondered my internal feelings, with my eighteenth behind me I found myself thinking something I'd never thought before. *I'm legal, if Toby and I were to make love we'd be two consenting adults*. On Monday Clatra took me to see Dr. Anders, a sweet older lady who started me on the pill immediately, told me which drug store to go to for the best rates and that I should wait at least three weeks before I had sex. Walking to the truck I mentioned to Clara that I had no plans to have sex anytime soon.\n\nShe smiled, held me in a side hug and spoke softly into my ear, \"I watched the way you and Toby held onto each other and I saw your soaked panties in the laundry basket this morning, you may not be planning on any sex, but I get the distinct impression you will, sooner rather than later. If you do honey take your time, don't rush things, let it happen naturally.\"\n\nClara had a huge belated birthday bash for me at the orchard, all the neighbors I'd gotten to know through the years were present, the food was abundant, laughter filled the air well into the night. Toby and I necked a little at his truck as he was leaving, I was feeling rather amorous and made a risky move by pushing myself against him ever so slightly, he responded by holding me tighter. He was almost in a panic when he pushed us apart, \"Goodnight, I need to go, love you.\"\n\nWhat had just happened? He said goodnight Love you, he'd never said he loved me before, I was on cloud nine and ask Clara what she thought about it.\n\n\"Honey, look at yourself in the mirror on the door. Your little girl features are gone, your hips have widened, you have a nicely shaped butt, and most of all you have boobs. Are you a B cup now?\"",
        "I shook my head, \"Still an A, but at least I fill the cup entirely now. Do you really think I look attractive?\"\n\n\"Doesn't matter what I think Claude, Toby thinks you are and that's all that counts, that's likely why he left in a rush, he was afraid he wouldn't be able to stop himself. Time you went to bed girl, got chores in the morning.\"\n\nFor one of the few times in my life I let my fingers drift inside my panties lying in bed, they were wet and sticky, it felt like my skin was on fire, I smelled them and though some may think I was insane, I tasted them. It wasn't revolting to me, it wasn't something I would do again, but now I knew. I'd heard girls in school talk about guys going *down* on them and often wondered why they would do that, after what I'd just experienced, I realized it wasn't as gross as I imagined it to be. DrIfting off to sleep I couldn't stop thinking of Toby, my heart throb, and who knows, maybe my soon to be lover.\n\nI fit back into the routines and schedules of farm life as if I hadn't been gone for nine months. Over the next month Toby and I went out several times, the first time he asked me to go out I asked Clara if it was okay, her answer both shocked and set me free.\n\n\"Honey, you're eighteen now, a big girl, a woman. You can come and go as you please, all I ask is that you let me know when you're going and when you think you might return so I don't worry. If its past bedtime leave a text, I'll see it when I get up to pee.\"\n\nNot in a hundred years would my mother have afforded me such freedom. During the week we both had early morning chores and kept our galivanting to a minimum, Friday and Saturday night we stayed out later. Our make out sessions were increasing in intensity as well, it was becoming harder and harder to not go places we hadn't been before metaphorically speaking. The first time his hand went up my side and cupped my itty bitty titty I wasn't sure what to do .... so I did nothing, he softly cupped my breast through my blouse and bra, squeezing gently, almost as though he was forming clay.\n\nI let him feel my breasts outside my blouse for a few minutes before I told him I needed to go in, if I hadn't I'm not sure I'd have stopped no matter how far he wanted to go. It was two weeks later we planned to take in a movie and then see what transpired. As I dressed I did one of the most audacious things I had ever contemplated, I left my bra off, I liked the feeling of my nipples rubbing against the fabric. At the supper table I noticed Aunt Clara watching me more than usual, when Ted went out to feed the animals and we were clearing the table she took my arm and faced me.\n\n\"Are you sure you want to go without a bra? Your nipples stick out enough that even I can see them. Has he touched you there?\"\n\nI nodded, \"He has outside my blouse, auntie it feels so good and sends tingles all through my body.\"\n\n\"Yes, I've noticed your panties lately, no mistaking arousal when they're that thick with dried girl juice. Claudette, you be careful sweetheart. You are taking the pill every day, aren't you?\" I nodded. \"Good, just be careful honey, passion has a way of sneaking up and captivating you without you even knowing it took place. Keep your panties on as long as possible baby, don't give it away. Make him love and respect you enough to give him your body, just like we talked about that night in your room.\"\n\nI thought it better to not tell her I had contemplated not wearing panties under my skirt and then chickened out. I knew she was forgiving and cool with budding romance, but I don't think she would have been pleased if I had gone commando. We typically made out at the end of the driveway when he brought me home, that night was no different concerning location, it was monumental concerning how far I would let him go.\n\nWe were lip locked when he suddenly pulled back whispering, \"You aren't wearing a bra, can I feel them bare?\"\n\nMy answer was to take his hand and put it directly on my small breast, in ten minutes time he had my blouse open caressing them into hard little mounds, he called them succulent and bent over to kiss them. A kiss led to a nibble, a nibble led to a taste, a taste led to sucking a nipple into his mouth, the feelings from the nipple being sucked caused my pussy to cream on the spot. Before my mind cleared, I felt his hand going up my thigh under the skirt, instinctively I clamped my thighs shut, which caused him to moan softly.\n\n\"Claude, pretty eyes, I want to feel you. Can I at least rub you outside your panties? I promise I won't go any further.\"\n\n\"Okay, but not between my legs, not tonight.\"\n\nWhat the hell was I doing saying *not tonight*. I stopped thinking about that as I felt his broad gentle hand stroke across the front of my panties. I was sure he could feel my bush beneath the fabric, I was so glad I'd worn decent panties and nothing too skimpy, I didn't want him to think I was a slut. My bush isn't very big, a simple V, but it is thick and kind of spongy when it's enclosed in my panties. I so wanted to spread my legs and let him take me, aunties words swirled through the fog, *don't give it away*.\n\n\"Toby, sweetie, I need to go in. Maybe we should stop for tonight.\"\n\nHe looked dejected as I buttoned my blouse, I leaned into another kiss, told him to be a good boy and walk me to the door. He drove up the drive to the house, opened the car door for me and kissed me softly. I pulled back, my hands on his chest, \"Yes darling, you'll get to touch me again, just don't rush things, we'll get there in our own time.\"\n\nKissing me one last time he told me he loved me and headed on home. I sensed the time was soon coming when I would not only let him touch me but take me as well. I was aware that he was as inexperienced as I was, but millions of other couples did it without foreknowledge, so could we. It was in August, a few months past my birthday that I decided tonight would be the night to let him have my cherry. I purposely wore a sundress, no bra and the sexiest panties in my wardrobe. We were going to supper and then to his place to watch movies, his dad was gone for the weekend and we'd have some privacy.\n\nSnuggled together on the couch the sparks were flying and we hadn't even started a movie. He had the top of my dress open playing with my breasts, sucking, kissing, then to my complete surprise he put a hickie on the side of my left tit. I pulled back looking at him as if I might be upset, inside it thrilled the hell out of me, he'd marked me, I was his. He stared into my eyes as he spoke.\n\n\"You're mine Claude, these titties are mine and I want the rest of you to be mine. Can I touch your panties?\"\n\nI scooted down on the couch, my dress slid up a bit as my legs spread, \"You can touch me Toby, but only if you do it inside my panties.\"\n\nWith his left hand he drew me tight to his chest kissing me as his right hand slid up my thigh stopping at the crotch of my panties. When he asked if I was sure I nodded and opened my legs further. As he cupped my sex I could feel the juices flowing into my nether region, the labia were soaked, had it not been for panties I was sure it would drip out of me. I moaned into his mouth and my body shivered as his hand went to the waist band of my undies, when his fingers slid under the elastic, I knew there would be no turning back. I was whimpering softly into his mouth as he kissed me passionately, the moment of truth had arrived when his fingers went into my bush and stayed still.\n\nIt was a feeling I wanted to last forever, his hand on my most private part, when his hand moved further down, I opened my legs wide allowing his fingers to find my wet fertile playground. His middle finger moved up and down the slit before the wetness sort of sucked it into the folds as I pushed against the intruding member. His finger was inside the labia, I wanted it inside me.\n\n\"Go down a little bit Toby, put it inside me ... ah, there, yes baby, push it in and out gently.\"\n\nHis finger was close but not reaching my hymen, besides, it was his cock I wanted to pop my cherry, not a finger. I grabbed for his crotch finding a fine specimen of man meat waiting for my pleasure, even if I didn't know it yet. He felt huge even though as I later found out he was the average of most men, he was at least six inches and wide. I pulled his pants open and marveled at its sight, it had thick veins along the sides, a thick head that looked like a helmet and was purple, I would come to learn he was what is called cut. I didn't know or care at this point in my life, I knew one thing and only one thing, I wanted his dick inside me, tears or no tears, I was determined to become a woman that night.\n\nThe atmosphere was loaded with passion as he spoke, \"Claudette, I'm a virgin. Are you?\" I nodded. \"Will you tell me if I'm doing something that hurts you? I don't want to hurt you.\"\n\n\"It will hurt when you break my hymen, but if you stop and wait when I tell you to it'll be okay, my sister says it starts to feel better once the hymen is broken. What you need to do now is undress me, take my panties off, I want you to kiss me between my legs. I want to know what that's like.\"\n\nToby wasted no time taking my dress off, my exposed little mounds were like a magnet for his mouth, I finally pushed him away and reminded him my panties were still on. Slowly lowering them I could hear him groan and muttering something about how beautiful I was. When he kissed the labia I literally creamed on the spot, I apparently gushed because it was all over his mouth and chin. I was horrified, he was grinning ear to ear, licking around his mouth like a cat licking milk off its whiskers.\n\nHe lowered again and began to lick softly, oh my God it was heavenly, except it wasn't hitting the spot. I took hold of his ears and lightly moved him upward until his tongue found my clit, the second orgasm hit as hard as the first, my tummy was convulsing, hips bucking into his face and my breath was nowhere to be found. I heard someone say softly, \"Oh Fuck\", suddenly realizing it was me. He continued to lick until I humped full force into his face a third time, this time I pushed him away, the sensations were too much.\n\nI pulled upward lightly on his hair until he was face to face with me. \"My God toby that was wonderful. How did you know what to do?\"\n\n\"My older brother gave me a porn video that showed how to lick a woman, I was hoping you would let me.\"\n\n\"Anytime you want to bury your face in my pussy is fine with me Toby Enderval, but right now you need to get undressed and make love to me. I'm not sure what to do either, Aunt Clara told me a while ago if we got this far, we'd figure it out.\"\n\nI watched in amazement as he undressed, finally watching him lower his briefs exposing his rock hard love missile. I wondered if it would fit inside me knowing full well it would, I was no different than any other woman that I knew of. Cocks and pussies were meant to be together, case closed. I looked at the glistening juice at the tip, I touched and then tasted it, remembering it was called precum.\n\nAs that massive hunk of man hovered over me, I reached between us and positioned his cock at the entrance of my vagina telling him to push slightly. We both gasp as the tip opened first the outer and then the inner labia, as it sat against the entrance to my love hole there seemed to be a barrier. He pushed a little harder and the walls of my vagina opened enough to allow the thick head inside, I pushed back on his chest and he stopped. Thirty seconds or so later I told him to continue, I was sufficiently wet allowing him to slide forward as tight as I was.\n\nMy vaginal walls were being stretched and massively stimulated at the same time I thought he was splitting me in two. When he hit the hymen I pushed back on his hairy chest, the muscles were hard and rippled. I knew this was the part where pain would be involved.\n\n\"Toby, honey. Push hard when I tap your arm and when my cherry is popped stop and let me get used to it. Okay?\"\n\nI relaxed as best I could, tapped his arm and waited, it stung like hell when his huge cockhead pushed through, being the lover I knew he'd be he stopped right away. He leaned down kissing the tears off my cheeks, telling me he loved me and asking if I wanted to stop. I shook my head and held tightly onto his arms before saying okay. Pushing forward slowly he began to piston in and out, not going deep, taking just a bit more depth with each stroke until finally his pelvis touched mine.\n\n\"I'm in all the way pretty eyes, are you alright?\"\n\n\"Uh huh, it's starting to feel good, make love to me Toby.\"\n\nI've heard about people who fuck hard and destroy the sheets on their first go round, that wasn't us. We were slow and methodical, the head of his cock opening me, stimulating the walls that quickly gripped his shaft sucking him in deeper. The sensations were beginning to flood my body, everything from my toes to the top of my head was throbbing as the climax built, suddenly he picked up speed and increased his thrust as he took us both into the next hemisphere.\n\nI could feel his dick pulse as it swelled and then as the sperm hit my cervix I listened to him groan like a feral animal, his back was arched, his crotch pushed tight to mine as shot after shot of sperm painted the inside of my vagina. I was shivering, my hips wanting to buck and push against him, I noticed I had grabbed my right breast and I was squeezing it hard, my nipples were so stiff they hurt, I'd never felt such a sensation in all my life.\n\nAs he softened and fell out, I could tell I was swollen, I hadn't realized the soreness yet, but soon would. He left and came back with a warm cloth to clean me, as soon as he touched me I took his hand away from my body, relieving him of the cloth as I carefully wiped away the gooey mess we'd created. When I tried to stand, I felt like I had a stick shoved up my ass, it hurt to walk normally, it was then I knew what other girls meant when they said someone was walking bow legged. We wrapped up in a blanket and lay in the other's arms a solid hour or more drifting in and out of sleep. It was eleven thirty when we put our clothes back on, when he took me home we stopped at the end of my driveway, but only long enough to kiss a little.\n\nAs I walked in, I was surprised Clara was still awake on the couch, as though she'd been waiting for me. I tried walking as normally as possible heading to my bedroom, I was on the potty dribbling cum mixed with pee into the water when the door opened slightly. Clara's head popped in and looked at me.\n\n\"You doing okay squirt?\" She asked.\n\n\"What do you mean, why wouldn't I be okay?\"\n\nShe invited herself the rest of the way in and sat on the vanity top. \"I've seen that walk before Claude, hell, I've walked that walk before, the one where a stiff dick has been shoved in your pussy for the first time. So now tell me the truth, are you alright?\"\n\nI smiled as much as I could given the situation, \"I'm okay auntie, sore and swollen, but I'm good. He was gentle and let me control everything except when we climaxed, it was like there was no stopping him.\"\n\n\"Yup, men tend to be a runaway freight train at the end, did he get you off as well?\"\n\n\"Oh my, he licked me and I came, then when he was cumming inside me I started all over again. It was wonderful auntie, I want to do it more, but only with Toby.\"\n\n\"Claudette, you've tasted the wonders of being a complete woman, there will be no holding you back any longer. A word of advice, make sure you stay on the pill and don't behave foolishly, you aren't married, no reason you should be screwing every day. Have fun and enjoy each other, just be smart about it.\"\n\nShe slipped out as quietly as she'd slipped in, I washed and soothed my sore pussy as much as I could before crawling between the sheets, my mind drifting back to how wonderful it felt being made love to by Toby. The next few days we did nothing more than hold hands and kiss with an occasional feel of my breast or me rubbing a hand across his groin quickly. I was walking fairly normal but still a little sore, the swelling had subsided, and it didn't hurt to dry myself after peeing.\n\nThat Saturday we went to what they called a *field party* at one of the local kid's farm. It was all eighteen and older people, none older than early twenties from what I could tell. There was beer or pop, a fire to roast wieners or marshmallows and lots of making out. Everywhere you looked couples were in the process of kissing, touching, feeling, I noticed a couple trying to remain behind a tree as she sucked his dick. Toby saw me watching and asked if I wanted to leave, I told him I'd like to stay and make out a while, which we did.\n\nSitting on the road before turning into the driveway we were in the midst of a steamy situation, he had my jeans open, his hand in my panties, my legs open and a finger in my wet sloppy cunt as we kissed. I had unzipped his jeans, unsnapped them and hauled his meat out, stroking him when I broke the kiss speaking in a whisper into his mouth.\n\n\"Would you want me to do what that girl was doing behind the tree? To put your cock in my mouth. I will if you want me to, I just don't know how.\"\n\nHe pushed me back a bit and answered, \"I'd love that, but let's figure out what we're doing so we do it right. I'll ask my brother, is there anyone you can ask? Maybe your older sisters.\"\n\nI knew immediately who I'd ask, but it certainly wouldn't be my sisters, even though I knew they both sucked their boyfriend's cock. No, it would be Clara, she'd give me the low down without any BS, she'd tell me what to do. He fingered me to a small orgasm as I stroked him, just as I was recovering he bucked and shot a stream of jiz half way to the windshield, I was secretly glad it was his truck that would need cleaning and not mine after seeing that load of cum fly through the air. It also gave me a good idea of what it looked like when he came inside me last Friday night. As he relaxed the cum dribbled onto my hand, warm, creamy, thick and white as rice. I've read the deeper white the cum is the greater number of sperm present, that's why as men age and their testosterone levels decrease their semen becomes more translucent. They aren't making as much sperm.\n\nWe wiped off what we could with paper towels he kept in the cab, drove up the drive, kissed five or ten minutes and I went in, promising I'd be ready for round number two very soon. Clara was up again, waiting.\n\n\"No bowed legs this week, am I to assume you didn't do anything or are you simply getting used to his shaft inside your little cunny?\"\n\n\"No love making this week, I gave him a hand job and he got me off with his fingers. I do need to ask you something though. We went to a party at Freidrichs, there was a couple behind a tree and she had his penis in her mouth going back and forth. I know it's called a blow job, and I want to do that to Toby, but I don't know how. Will you tell me?\"\n\n\"Ah, the famous Freidrich field parties, those have been going on for years. Oh, and honey if you're going to be a woman in every way it's time you left biology class, it's a cock or dick, a pussy or cunt, tit's not breasts, if he goes down on you it's called *eating you*, the only thing you're right about is the term blowjob, although it's also called sucking him off. As for sucking Toby's cock, what do you want to know?\"\n\nAnother valuable lesson. I needed to learn and use this new vocabulary when appropriate, like when Toby had his cock stuffed inside my hungry little pussy, my legs wrapped around him humping into his thrust with every ounce of energy I had. Yes, telling him to fuck me and cum inside my pussy would be a proper application for such words.\n\n\"How does it taste? How far in your mouth does it go? What if I choke and gag on it? And finally, where does the cum go when they get off?\"",
        "She was chuckling by that moment, reaching over to me she rubbed my shoulder. \"Oh Claude, you are such a gem to be around. Let's tick these off one at a time.\"\n\n\"First: It doesn't have much of a taste unless he isn't clean or has already been in your pussy.\n\nSecond: You take him in as far as you're comfortable with. A good man will let you decide and not try cramming it down your throat.\n\nThird: If you choke don't go so deep right away, let your muscles relax as you take him in a little deeper.\n\nFourth: Where does the cum go? That's up to you, the first few times I sucked off your uncle I couldn't take it all and opened my mouth to let it run out. Now I swallow every drop he has for me, and I love it, I love feeling that strong stream of cum hit the back of my throat, the warmth, the delicate taste. I just love swallowing his cum, feeling it slide down my throat knowing it was my soft mouth that rendered him helpless.\"\n\nI was excited and befuddled, \"Where can I learn to do that? Is there a book or a video?\"\n\nShe chuckled again, \"How about I simply tell you then let you practice on a banana or a small cucumber, just to strengthen the jaw muscles a bit. If he doesn't cum right away your jaws can start to ache and it isn't fun anymore. I need to ask if his shower is big enough for two people?\"\n\n\"Yes, I think so, I haven't been in it, but it looks big, I know you can walk into it.\"\n\nSmiling she took my hand in both of hers, \"I have a suggestion, do your first few blow jobs in the shower, that way if you can't take it all in your mouth it'll be easier to clean up. I've let Ted cum on my tits a few times, it's erotic as hell, not on my face though, only my tits.\"\n\nThe following day while Ted was out doing chores I peeled a banana and began the sucking motion, Clara would tell me what I did right or wrong, within minutes I was taking four or five inches in my mouth without choking. Next we switched to a cucumber, a large dill size which stayed hard and stiffer, like Toby's cock. She was telling me to purse my lips outward, make sure I had plenty of saliva on my lips and to suck as I withdrew. At the ten minute mark she told me to stop, I was so thankful, my jaws hurt and were beginning to cramp.\n\nI continued practicing over the next few days, on Wednesday morning Aunt Clara handed me something wrapped in a paper towel. A larger cucumber she'd carved in the shape of a cock, including a thick bulbous head.\n\n\"Is Toby about that size or is this too big?\"\n\nI wrapped my hand around the shaft and the head, \"Nope, that seems about right.\"\n\nShe stared at me, \"How does he get all of that into your skinny little body?\"\n\nI laughed, \"Not sure, I just know that it sends tingles all through my body and makes my pussy cream all over it.\"\n\nGetting used to the head was the most unusual part, within a half hour I'd gotten past that and felt I was ready for the real thing, Toby's dad would be out late, tonight would be the night my lover filled my mouth with his cum. I was both anxious and scared, I wanted it to be good for him. As I was getting ready for the evening Clara poked her head in the door.\n\n\"Are you planning on making love as well tonight. Or just a blow job?\"\n\n\"I thought guys couldn't cum twice right away.\"\n\nShe laughed, \"At Toby's age he'll be ready to go within an hour. A suggestion, get him off right away with your mouth, then later he'll last longer when he's inside you. He won't last more than five minutes on his first blow job.\"\n\nWhile waiting for Toby to pick me up Clara and I sat on the couch chatting, she chuckled a little then said, \"Maybe you should teach him a new way to eat you while waiting for him to get hard a second time. Ever heard of sitting on a guys face?\"\n\n\"I've heard other girls talk about it, but I haven't seen it, I'm not sure what to do.\"\n\n\"Have him lay on the bed with his head a foot or more from the headboard, put one knee over a shoulder, then swing the other leg over him until your pussy is right above his mouth, spread your knees enough that you lower onto his mouth and tell him to lick. When Ted and I do that he plays with my tits as he eats me, you'll like it, another benefit is you can grab the headboard and grind into his mouth.\"\n\n\"Oh my gosh Auntie that sounds great, do you think he'll be ready to screw me after I cum?\"\n\n\"Child, you can count on it, his dick will be so hard you'll be able to move down his body and slide that monster directly into your skinny little cunt. Once you hit bottom, he'll probably take over with his hands on your hips pounding up into your puss. If you aren't too lost with the feelings, lean forward and put a nipple in his mouth, he'll be filling you with cum in no time.\"\n\nI was dressed to suck and fuck, little to no makeup, hair pulled back in a ponytail, nothing covering my small tits except a pull over shirt, a short skirt and the tiniest panties I had. A pair that I could wear with the jeans only a few inches above my crotch, only tonight they would be under my skirt and easy to take off. I had a second pair in my purse knowing I would be leaking cum all the way home and I didn't relish the thought of putting wet cold panties back on. As excited as I was my pussy was already producing a lot of juice and he wasn't even here yet.\n\nWe wasted no time once I was in his truck, it being one with a bench seat meant I could slide right next to him. We were no more than out of the driveway when his hand dropped to my thigh, I immediately opened my legs giving him free access to my kitty, my hand in turn rested on the stiff mass that would soon be filling my mouth and my pussy. It would be a night of firsts on three fronts, a blow job, sitting on his face and what Clara called riding him cowboy. My panties were beyond damp by the time we walked into his bedroom and began stripping, we held each other necking as we waited for the water in the shower to get hot then stepped in.\n\nWe washed and scrubbed and pinched and tickled and kissed and fingered and ground against one another until I pushed him against the wall, sank to my knees and put his cock in my mouth. He let out a yelp as my lips slowly slid down his flagpole until the head hit my throat, I backed off, sucking as I pursed my lips like Aunt Clara had told me, then pushed his cock back into my mouth. With a steady bobbing motion I felt his body begin to stiffen, I decided I would try the nasty talking and see if Clara was right. Looking into his eyes I pulled off long enough to say,\n\n\"Cum in my mouth Toby, give me your cream.\"\n\nAs his hands went to the side of my head he began to fuck my mouth, he wasn't rough or pushing too deep, he was fucking my mouth, claiming it as his. I could feel his dick swell like Clara said it would, I pulled back locking my lips around the head and prepared to swallow, the ferocity of the first shot caught me by surprise causing me to choke, I was no more ready for the second than I was the first. I did as Clara had told me, I opened my mouth and let it run down my chin, I was so glad I'd listened to Clara or there would have been a mess somewhere, possibly my clothes. Pulling me up Toby put his arms around me, lifting my chin for a kiss, not being grossed out knowing I'd just swallowed some of his cum.\n\nThough he'd just dumped a huge load into my mouth his cock was still not completely soft, I found myself thinking how hard it would be by the time I impaled myself on it. I was going to enjoy sliding my very wet pussy down his cock until my pussy touched his groin, until my pussy hair mingled with the forest he had growing. Drying off I told him to lay on the bed with his head a foot or so below the headboard. He looked at me with wonder. As I was straddling his face I told him what I wanted.\n\n\"We're gonna try another new thing, I'm gonna put my pussy on your mouth so you can lick me, Clara called it sitting on your face.\"\n\n\"Yeah, I watched a vid my brother had a few years ago, it had some babe sitting on a guy's face but she made him lick her ass, you aren't expecting me to do that are you?\"\n\nThat was something I found disgusting, \"Lick my ass, why would you lick my ass? Just lick my pussy and play with my tits until I cum.\"\n\nAs he lapped the juices from my almost dripping vulva it took him no time to find my clit, my hips were moving back and forth dragging my pussy across his tongue when I felt his hands leave my tits and grab my waist. He sucked and licked my clit until I could take no more and gushed on his face, there was no holding me still any longer, I was shaking, hips bucking, chest heaving, hips jabbing into his face as I came like a waterfall. I did just as Clara said I would, I leaned forward and grabbed the headboard.\n\nToby never tried to move me, he kept softly flicking my clit causing my body to jerk and make little noises. Recovering I lifted my hips, kept my grip on the headboard for stability and moved down his body, I stopped to reposition my hands on his chest and proceeded to move my torso toward his dick. When I was right above his dick I whispered *put it in* as I lowered onto his throbbing pole, as wet as I was we were pussy to belly in three strokes where I stopped and ground my hips hoping to get even more inside.\n\nI moved slowly at first, pulling all the way up until just the tip was left inside me and then plunge all the way down until out bodies collided. It didn't surprise me when as Clara said he would he grabbed my hips, held me still and began to hammer upward into my steamy cunt. That hard driving action took me over the edge in no time followed by another within minutes before he stopped. I looked into his eyes frantically wanting him to continue, with a smile he told me to lift off then get on my hands and knees.\n\nI felt those large rough hands softly move across my tiny ass cheeks and then grip my hips, his cock was looking for my entrance, by arching my back a little I could feel him at the hole, I pushed back forcing him inside, when our bodies met we both let out a groan. Full, so full of cock ... and deep, I felt like he was going to split me in two, at the same time it felt wonderful. Toby stayed still until I pulled forward a bit and then pushed back onto him, he began the see saw motion of going in and out of my pussy, the feelings were beyond anything I'd known, I was pushing back every time he pushed forward. I was on a collision course with an orgasm and told him I was.\n\n\"I'm gonna cum Toby, cum with me, cum in my pussy, fuck me hard, cum in my pussy.\"\n\nHis movements increased in both speed and thrust, our bodies were making a slapping sound with each stroke, my insides were tingling from head to toe as I felt it build from the pussy outward. When I could contain it no more, I shoved my ass back against him as hard as I could and let out a scream of ecstasy as my body quivered. That apparently set him off because within three more strokes he was pressed tight to my pussy pumping me full of sperm, I felt every jet that shot from his cock against my cervix, and damn it felt good, it felt exhilarating, my vagina filled with hot creamy thick sperm. When my hips and lower body stopped gyrating, I slumped forward off his dick which seemed to make a POP noise as it left my body.\n\nLying together in the dark we were completely worn out, Toby was snoring softly as I dozed in and out, I noticed it was already eleven o'clock and shook Toby.\n\n\"Baby we'd better get dressed your dad will be home soon and I need to get home. Ted wants me to start cultivating corn tomorrow which means I'll be up early.\"\n\nWe did a quick rinse off in the shower, dressed and he took me home. Clara was up when I walked in, we smiled that knowing smile as I walked toward her, plopping myself on the couch next to her.\n\nClara smiled and patted my hand, \"Well, how'd it go? Did you get a face full or did you swallow?\"\n\n\"I took your advice and sucked him off in the shower, my God I couldn't believe how much cum he had. I was only able to swallow a little, the rest I had to let run out. I can only imagine what my clothes would have looked like if we hadn't been in the shower.\"\n\nClara took a sip of her wine and faced me, \"You'll get to a place where you can swallow all of it, your Uncle Ted cums like a damned fire hose, it took me a while to keep it all in. You'll get there, give yourself time.\"\n\nWhich is exactly what we did, we gave ourselves time to learn each other, both likes and dislikes as well as what it took to further our sexcapades. Everyone knew Toby and I were together, at the orchard we were two hired hands doing our jobs with a few kisses and grab ass tossed into the mix on occasion, after work, we belonged to each other. By the end of my year I knew what I wanted, it was to be an ER nurse, mother wanted me to come home and Clara agreed citing that I could save money living at home.\n\nBeing nearly twenty I made sure mom realized I was no longer a little girl to be told what I would and wouldn't do. I would abide by the rules of the household but I was no longer a child and she was not to bring up my choice of underwear ... period. Toby had reached the conclusion that he wanted to milk cows again, he had begun to buy heifers to be bred, he was going to stay on at Apple Cove until they freshened and would then milk full time. He felt he could sustain himself with thirty head, the farm was paid for and he still had most of the machinery from before.\n\nHe was excited for me and said he would see me if I was back visiting, our tentative plans were for me to finish my schooling, move back and marry him, I could work at the hospital thirty miles away, telling each other we'd wait forever for the other. But as they say, *planning is what we do while we live life* and the best of our plans never did come to fruition. Though we talked on the phone and skyped a few times there was something between us, which in time caused us to drift apart. I met and married a young doctor with whom I had three children, the two oldest already out of college, the youngest just graduated from high school. My husband? Pancreatic cancer took him too soon, here I was at forty eight all by myself more or less.\n\nTricia, the youngest, would be attending college in Ohio on an academic scholarship, (smart, too smart for her own britches) the two oldest were married, one in Washington State, the other in Guam with her Husband who is an Air Force pilot flying C-5 transport/cargo planes. We skype and facetime often, I get to see the grandkids and them, but seldom do I see them in the flesh. Tricia was halfway through her first semester and I was contemplating selling our big old rambling house when my phone rang. It was Aunt Clara, I hadn't spoken to her in several months, like six or seven, she was calling to let me know Ted had died, wondering if I could make it to his memorial service since both my folks had passed on.\n\n*\n\nParts two and three are finished and will be submitted soon.\n\n \n"
    ],
    "authorname": "R410a",
    "tags": [
        "young",
        "teen",
        "love",
        "romantic",
        "virgin",
        "oral",
        "orgasms",
        "handjob",
        "blowjob"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/apple-cove-ch-01"
}