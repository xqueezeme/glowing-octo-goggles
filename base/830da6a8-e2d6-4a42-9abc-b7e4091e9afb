{
    "title": "Mike & Karen Ch. 22",
    "pages": [
        "She sat in her small but comfortable lounge, flipping through an old book and sipping a martini. Her long blonde hair was worn up in a stylish chignon, and her clothes were immaculate and chic, as always. It had been a long day of tedious administrative work, and she had earned some quiet time and a drink.\n\nSo naturally, there was an interruption.\n\n\"Beg your pardon, mum,\" said the young maid, curtsying at the entrance to the room. \"There is a call on the house line. Someone insisting on speaking to Lady Greymoor.\"\n\nThe patrician woman glanced up at the pronouncement, looked around the small room for a moment, then back at the domestic servant. She liked this girl, even if she was a local who crunched carrots from back to front through her R's. \"Well, they must mean me, then.\"\n\nThe girl smiled. \"I believe so, mum. Should I send them off?\"\n\n\"No,\" she sighed, getting up and shaking her head. \"It was my fault for trying to take a break. Lead on, Maddy.\"\n\nThere were other phones throughout the place, of course, but most calls from unknown numbers were routed through a single unit, which allowed her to decide if she intended to take the call or not. It was in another study, and the girl Maddy led her there now. The servant curtsied at the entrance and walked off, her mission accomplished.\n\nShe sat behind the desk, sighed, and crossed herself (just in case the Catholics were right), and picked up the receiver on the quaintly old rotary phone.\n\n\"This is Lady Jennifer Penrose, Countess of Greymoor, and Mistress of Heatherly Hall,\" she announced in her pleasant and somewhat sassy tone. \"With whom do I have the pleasure of speaking?\"\n\n\"It is so good to hear Received Pronunciation again,\" said the lovely voice of the woman on the other end of the line.\n\nThere was a long silence while Jenny paused, as if stunned. Seconds passed, and all she could hear was her own heartbeat.\n\n\"Kat?\" she asked in a soft voice, almost unwilling to believe her ears.\n\n\"And have you missed my rhotacisms?\" the voice asked with a sly tone.\n\nJenny's heart leapt with a kind of joy she hadn't felt in decades.\n\n***\n\nMike &amp; Karen\n\nDisclaimer: All characters are 18 years of age or older while actively engaging in sexual activity. This story is a prequel/sequel (sprequel?) to my other work, Alex &amp; Alexa. As always, many thanks and gratuitous panty shots from Freja and Jeanie to my long-suffering editor and beta-reader for their assistance in polishing up and improving this work. Reviews are welcome; flames will be snickered at and deleted with extreme prejudice. Enjoy!\n\nChapter XXII- Just A Skip Across The Pond\n\n\"Kat!\" Jenny almost shrieked in excitement, standing from her chair, her brown eyes lighting up. \"Ekaterina Leda Gloriana Gordon! Is it really you?\"\n\n\"The surname is DeBourne now, but yes, Jen, it is really me,\" Karen laughed, her voice indicating she was equally delighted to hear Jenny's. \"I've been sitting here for the past fifteen minutes, plucking up the courage to find your number and call you.\"\n\n\"I'm so glad you did!\" Jenny breathed, sitting down again, but leaning forward in her chair, her eyes wide as she stared at the opposite wall while talking. \"My dear girl, Kat, how are you?\"\n\n\"Very well, thank you,\" Karen said easily. \"We just got back from a visit to the family wineries in Napa a few hours ago, and I'd resolved to call you. And how are you, my dear countess?\"\n\n\"All is well, I suppose,\" responded the still-shocked blonde, trying to compose herself and come up with real answers. \"I am truly the Lady of Heatherly Hall now. Widowed once, divorced once, and three children, with a brace of tedious grandkids.\"\n\n\"I saw that your parents were both gone after a little Google search,\" Karen added. \"I'm sorry, Jen.\"\n\nJenny shrugged, as if Karen could see her. \"It was quite a few years ago, Kat, we're all fine. How are Miranda and Jonathon?\"\n\nThere was a quick pause. \"Mom and dad both passed, Jen. Dad just about three years ago, mom close to two.\"\n\nJenny closed her eyes, feeling a sting in the corner of them as she was silent for a moment. She had adored Karen's parents. \"I'm so sorry, Kat,\" she whispered in a quiet voice. \"You know I loved them.\"\n\n\"I know, Jen,\" Karen said, and Jenny could hear the smile in her tone. \"They loved you too.\"\n\n\"But enough of that,\" Jenny said, sitting up again, her demeanour brightening considerably, her heart still pounding in her chest. \"What have you to say after all these years? Tell me every- no, wait! Is there any other bad news I must absorb first?\"\n\nThere was another pause as Karen thought. \"No, mom and dad are my only sad news for you. Aside from that, life is quite grand, I dare say.\"\n\nJenny asked a question before she lost her nerve. \"And have... Kat, have you forgiven me for running out on you all those years ago?\"\n\nKaren's voice filled Jenny with bliss as she answered.\n\n\"There is no need to forgive you, Jen, because you were right all along. And I married the man you could tell I was in love with, even though you'd never met him. I... thank you, Jen. Thank you, for knowing me so well.\"\n\nThere were tears on Jenny's cheeks as she smiled, trying not to cry happily.\n\n\"Thank God,\" she said finally. \"Can you imagine how stupid I would feel if I'd been wrong?\"\n\nBoth women burst out laughing at her statement. It was some seconds before they recovered and could speak again. They laughed together so easily, even after over thirty years apart. It was natural, it was wonderful, it was... so very right.\n\n\"Are you still married to the bloke, then?\" Jenny asked cheerfully, so very relieved that Karen had found her happiness. It meant everything to her.\n\n\"Very happily,\" Karen declared almost proudly. \"And I find ways to fall in love with him a little more each and every day.\"\n\n\"To have the heart of Ekaterina Gordon held that way,\" Jenny sighed romantically, leaning back in her chair now and gazing at her study's old wooden ceiling. \"I can only imagine what he must be like.\"\n\n\"Nonsense,\" Karen stated. \"I called because if you are amenable, I wanted you to take a little hop across the pond and meet him. He's only heard about you for the past thirty years, and probably knows you as well as I ever did.\"\n\nJenny's eyes went wide at Karen's words. \"You... want me to come see you at Blackshack?\"\n\n\"That is indeed where I live now, having inherited it from mom and dad, much to the consternation of my cousin Roddy,\" Karen pointed out. \"I am having a housewarming in the middle of April, and it would mean the world to me if you were there.\"\n\nThe countess sat forward again, wanting to make sure she heard correctly. \"Kat... does your husband know... about us?\"\n\n\"Every bit as well as you and I do,\" Karen answered. \"And he probably understands the whole thing better than either of us. He can be annoying that way.\"\n\n\"And he would be all right with me coming to visit?\" Jenny asked.\n\n\"I daresay,\" Karen laughed. \"It was his idea, after all.\"\n\nJenny almost shook her head, as if she couldn't believe what she was hearing. \"I...\"\n\n\"Jenny, he is aware of what we meant to each other, and he knows how badly it hurt both of us when you went away,\" Karen said gently. \"It left holes in both of us, and he has never attempted to gloss over the matter and dismiss it. He just became my joy and my world, the way you said he would.\"\n\nJenny just listened quietly, although her heart thundered in her chest.\n\n\"And he has told me on numberless occasions about the debt he feels toward you for being so central to making me who I am today, and also for sacrificing what you thought was your only happiness so that I could pursue mine.\"\n\nJenny said nothing, beyond words at that moment.\n\n\"How could either of us ever thank you enough, my dearest Jen?\" Karen asked quietly.\n\n\"Well, I daresay an invitation to stay at Blackshack is a good start,\" Jenny said finally, smirking now. \"My God, Kat, I... what you're saying, you're blowing me away.\"\n\n\"Should I list you down as an official attendee, then?\" Karen teased.\n\n\"Oh, yes, of course, your royal majesty,\" Jenny said grandly in her most proper voice. \"How could I ever turn down such a generous offer from my queen?\"\n\nThis drew a laugh from Karen before she answered. \"We would love to have you come and stay before the housewarming. Can you possibly pull yourself away for that long?\"\n\nJenny almost giggled. \"Kat, I majored in business and property management and run our interests across the globe, with my eldest son Sam following in my footsteps. I think I can leave the running of things in his capable hands while I take a vacation. There is so much to catch up on, after all.\"\n\n\"Three decades worth of catching up, certainly,\" Karen said, sounding excited. \"Jenny, I...\"\n\n\"Yes, Kat?\" Jenny said, almost afraid to breathe as she listened.\n\n\"I want you in my life again...\"\n\nIt was all Jenny could do to keep from swooning. Her heart fluttered in her chest as she wrestled to control her emotions.\n\n\"And I want you in mine,\" she said finally in a trembling voice. \"And I want to meet this man who you love. I want to thank him for making you so very, very happy.\"\n\nShe thought she heard her long-lost friend sniffle quietly. \"Yes, Jen.\"\n\nThey both sniffled quietly as they tried to keep from crying, and neither minded the other doing it. They never had, and they never would.\n\n\"So,\" Karen said finally, managing to compose herself. \"My family still owns a jet, should I send it to pick you up?\"\n\n\"No, lovey, I'm sure I remember where Blackshack is,\" Jenny said, giggling. \"Are you still in touch with Mona, Janet, and Lisa?\"\n\n\"Absolutely,\" Karen replied. \"They'll all hopefully be at the housewarming, but I won't tell them you're coming. I'm not telling anyone. We'll make it a surprise.\"\n\nJenny almost squealed and kicked her feet in excitement. \"I cannot wait to see them again! Did... did you tell them why I... why I left?\"\n\n\"Not in so many words, no,\" Karen admitted. \"But they know my husband, so they might suspect. I've never seen fit to ask.\"\n\n\"Then do not tell me anything more until I am there, because you know how much I love surprises,\" Jenny declared. \"I will refrain from checking any media concerning you, and simply coordinate about my pending arrival. You said your housewarming is in the middle of April?\"\n\n\"The actual event is the twentieth,\" Karen said. \"The girls all said they should be arriving on the twelfth.\"\n\nThere was a pause while Jenny thought things through.\n\n\"Unless you think I'd be overstaying my welcome, I could be there by the twenty-ninth of March,\" she mused. \"Do you think you can endure my presence for a month?\"\n\nKaren laughed. \"A month isn't nearly long enough, but perhaps it's a start. I'll keep your arrival a secret from everyone, barring my husband.\"\n\n\"No secret for him?\"\n\n\"Jenny, I never keep anything from him,\" Karen said, and Jen was flooded with such warmth, hearing the devotion in her dearest friend's voice. \"We'll talk soon, okay?\"\n\n\"Kat?\"\n\n\"Yes, Jen?\"\n\nJenny hesitated. \"I've led a great life, and a very content one, but... is it a problem that I've never stopped holding you in my heart?\"\n\n\"I don't see why it would be,\" Karen reasoned. \"After all, I never stopped holding you in mine.\"\n\nJenny found her voice. \"I'll see you soon, Kat.\"\n\n\"Not soon enough, Jen. Take care.\"\n\nJenny hung up the phone and pushed away from her desk, leaning back and staring at the ceiling before letting out a cry of elation, spinning in her chair. She stood up from her chair and danced around the office, feeling light as air. After over thirty years, she'd almost forgotten what this wound had done to her heart, how it had dulled; and in the span of one ten-minute conversation, she felt... healed. In a way she had forgotten she needed to be.\n\nThe graceful, elegant countess waltzed balletically around the room, surrounded by tall shelves full of books, singing a tune to herself. Kat wanted her back in her life! She'd invited Jenny to come and stay at Blackshack! Her brown eyes danced in delight, wanting to sing out in joy and not caring who heard.\n\n\"Reginald!\" she called out as she pirouetted around giddily before coming to rest, sitting back against the corner of her ancient wooden desk. Seconds later, she was joined by a crisp and humourless man who stood ramrod-erect and clicked his heels as he stood in the entrance of the study. He reminded her of the butler Mr. Carson from that TV show Downton Abbey, but with none of the endearing flashes of warmth or humour.\n\n\"You called, milady?\" he asked in a dour English tone.\n\n\"Yes,\" she said, smiling dazzlingly. \"I need to book a flight, to Toronto. Please see to the arrangements.\"\n\n\"Yes, mum,\" he said nodding. \"Are these immediate plans?\"\n\n\"No, please set them for the twenty-eighth of the month,\" she replied, giddy at the thought of the visit being so soon.\n\n\"Very good, mum; I am glad that you had not forgotten your schedule,\" he intoned with his ever-annoying formality.\n\n\"My schedule?\" she asked, blinking.\n\n\"Yes, countess,\" he said, almost sighing. \"You are due in Tewkesbury tomorrow, as you have many business arrangements to see to. There is your proposal for purchasing the Priory Park lots in the town, you have four different loan and repayment agreements to look over with some rental applicants for said space in anticipation of this purchase, a children's spelling bee to host outside the town, and-\"\n\n\"A spelling bee?\" Jenny protested, not liking the sound of this at all. \"Why must I host? Tewkesbury is in Gloucester, not Devon! It's Henry's job!\"\n\n\"Mayhap, my lady, but it was one of the terms you worked out with his lordship the duke in order to avoid paying any county dues on the new properties you intend to relieve him of. You took his place at the Catsmeat Preparatory School's annual spelling bee, amongst other agreements.\"\n\n\"Ugh, this ponks!\" she groused, scowling and folding her arms. \"Damn Beaufort, he tricked me. I'd rather have given him the money.\"\n\n\"Be that as it may, your ladyship, you leave early tomorrow, and you shall be back in three days,\" the seneschal said, bowing stiffly and then exiting from her presence.\n\nJenny leaned back against her desk again, looking up at the ceiling in despair.\n\nTewkesbury, she moaned to herself, wondering what she'd done wrong with her life to deserve this. It's practically in Belgium...\n\n***\n\nToronto, March 1987...\n\nJenny stumbled through the house, her eyes stinging from tears, and her heart pounding and aching. She had just done the unthinkable and turned her back on the person she loved more than anything and anyone in this world.\n\nShe would never forgive herself.\n\nDown the grand staircase of Blackwell Manor she went, nearly falling as tears blinded her, and out the front doors, where a limo taxi was waiting for her. The young woman threw herself into the back seat, gasping and shaking.\n\n\"Pearson, please...\" she choked out, trying to control herself. \"And please lower the privacy screen, sir, I have a lot of crying to do.\"\n\nNo sooner had the screen lowered than Jenny burst into tears, sobbing as she collapsed in on herself. She felt shattered, and utterly hopeless. What had she done? Why had she done it?\n\n\"I forgive you, Jen...\" she'd heard Kat say, even though she didn't truly comprehend what was happening. Jenny was leaving her, moving aside for the person that she didn't even know she loved, the person Kat was truly destined for. Jenny could see it in her beloved's heart, and she had no right to stand in the way, even if it cost Jenny her own happiness. She loved Kat far too much to hold her back.\n\nThe world was only so big, and she could only run so far.\n\nShe knew she'd hurt Kat, even devastated her and broken her heart, but what else could she do? Live a lie? Convince Kat that she was her true love? Jenny would die inside every day, not only seeing Kat's love for someone else inside her, but knowing that she was denying Kat her true love.\n\nSo she cried, because it was all she had left. Her grief. The agony of loss, but one born of love.\n\nGod, forgive me, I did the right thing, didn't I? Why does it hurt so much?\n\nHow would she ever live again?\n\nThe ride to Pearson Airport took nearly two hours, but Jenny took no notice, and she was there before she was ready. Sniffling and with red-streaked cheeks, she made her way into the terminal, trying to compose herself. She did what she could to straighten herself out in a washroom, then went and booked a flight.\n\nThere were none heading to Los Angeles and then Sydney, at least not any time soon, and she didn't care. She booked a flight to Heathrow, with a connecting flight to Paris, Tel Aviv, New Delhi, and then Hong Kong. From there, she would reach Perth.\n\nThe money didn't matter, nor did the long hours. In fact, the longer it took her to get anywhere, the better. None of it mattered.\n\nShe talked to nobody during the flights and slept little. By the time she reached Tel Aviv, she was exhausted and miserable. It didn't matter. The only thought rolling through her head constantly was how much she'd hurt Kat, and what an awful person she was.\n\nEven when she arrived back in Perth, there was no joy to be found, not even the comfort of familiar surroundings. Everything just seemed small, and pointless. Even her spacious home in Swan Valley meant nothing. The staff were all baffled- their normally bright and vivacious young charge was inconsolable. Whatever had happened while she was abroad seemed to have undone her. She stayed in her room and cried.\n\nEventually, her parents had come home, and her father had been predictably curt on the subject. He'd always liked her friend Kat, and her fabulously wealthy family, the Blackwells, but he did not have unlimited patience for his daughter's melancholy.\n\n\"Jennifer, I do not understand what has happened, but I also know that life goes on,\" he had said, standing in her bedroom while she was lying face-down in her pillows sobbing. \"The answer is to throw yourself into recovering yourself, and that means concentrating on improving your life. You are going to an excellent university here, and some day it will allow you to take over the estates. You mustn't lose sight of your obligations, my dear.\"\n\nJenny hated it, but her father had slowly, eventually proven eventually right. The hurt had never left, but she had shielded herself from it, and soldiered on. Like an oyster covers an irritant in pearl, she ossified her feelings, her love, and buried it deep, hopefully to never hurt her again.\n\nAll she could do was hope Kat would forgive her. And find her happiness.\n\nIt would be some years before Jenny found someone she loved and managed to move on.\n\n***\n\nGloucestershire border, the present...\n\nThe M5 had unfortunately taken her through Bristol, but by sticking to the motorway, she'd be able to slip right between Gloucester and Cheltenham, avoiding both towns. It wasn't that she hated Gloucestershire, but if she'd been presented the choice between living there or in the Sixth Layer of Hell, she would have an awkward choice to make. Gloucestershire was indeed an awkward county, in her estimation: not classy enough to belong to the east, not practical enough to associate with the Southwest, and with just enough Welsh influence to be completely annoying.",
        "In the back seat of her Aston Martin Rapide, a young man was asleep, snoring away. She tried not to roll her eyes at the sound. He'd been hired two months ago, as a favour to friend who was a baron in Essex; he was a member of the family but had no prospects of peerage and was in need of a job. It had taken Jenny almost a week to remember that his name was Wesley. A dropout from Eton, his prospects seemed slim, and yet he couldn't embarrass the family. He needed to be away. Jenny was the answer.\n\nWhile he obviously couldn't be given menial tasks around Heatherly, the problem was that he'd proven less than adept at pretty much anything else, especially if it involved the application of one's brain toward problem solving.\n\nWesley was not dumb, he was just... 'unmotivated' was the kind word for it. She'd been resolving to fire him and send him home to Essex, when she happened to accidentally walk in on the young man getting changed out of his pants.\n\nAnd that's when Lady Greymoor finally found a use for him.\n\nHe had a nicely sized cock, and apparently had been a virgin, prior to his arrival. When she made it abundantly clear that his new employment parameters involved staying nearby to fuck her when she was feeling the itch, he was more than up to the task.\n\nSo now her swain dozed away in the back seat, heedless of any woes in this crazy world. Officially, he was simply a valet-in-training, which Reginald, her seneschal, found absurd, since he was terrible at everything. Jenny, however, had pointed out that she was employing the young man as a favour to a peer, and that was how things were. Reginald may have sniffed indignantly, but he also knew that the matter was settled and there was no point in raising it again. Jenny's considerable will had been engaged, that was all.\n\nJenny had other lovers to keep her occupied, aside from Wesley, including one of the girls who tended the horses they raised at Heatherly. Jenny rode well enough to meet her class standards, but she'd never been terribly interested in equestrianism as a lifestyle. Still, she'd learned it from her father, and learned it well, because the horses were all bred for events, and studding was a major source of income for the estate.\n\nThe girl she had an understanding with, a local named Elowen, was around Wesley's age, just under twenty. Jenny had caught her pleasuring herself in one of the haylofts one day, and while the girl had begged the countess not to fire her, Jenny had other plans. After that, the hayloft became their favourite places to have a frisky lesbian romp, which suited the Lady Greymoor perfectly.\n\nJenny was planning on spending as little time in Tewkesbury (and Gloucestershire as a whole) as possible and felt very disinclined to bring a large number of staff with her for what she considered minor nuisances. Jenny knew her family's books better than anyone, so she finally allowed a single accountant to come along, and he would meet them there. Jenny felt like driving herself, thank you very much.\n\nThe drive from Heatherly to Tewkesbury could be accomplished in a day, barring traffic complications, even for one driver. She was exiting Somerset now and about to enter Gloucestershire, with the sun high overhead.\n\nJenny, are you giddy because you heard from Kat, or are you simply hungry? she wondered to herself. Does it matter? Stop and eat, you silly twat!\n\nShe seemed to have made it to a small town called Bradley Stoke, and pulled into the parking lot of the mall. With the car parked, she unbuckled and turned in her seat to look back at her passenger, sighing and shaking her head.\n\nThank God for the dick...\n\n\"Excuse me, your lordship,\" she said dryly. \"We have made a pit stop for sustenance and to stretch our legs.\"\n\nThe brown-haired kid snucked and smacked his lips, but didn't wake up, even turning away from her slightly.\n\nJenny frowned now and shook his leg. \"Oi! Wake up, you prat!\"\n\nWesley dragged out a snore and stirred, his eyes finally opening. He looked around dazedly, clearly having no clue where he was. His eyes finally landed on her and he blinked. \"Where're we, mum?\"\n\n\"In some dreadful little artificial town built around a Tesco,\" she answered, still shaking his leg to restore blood flow to the brain he no doubt kept in his hips to work his lower half, like a dinosaur. \"That being said, it is time for you to go foraging.\"\n\nHe blinked again. \"I... don't get your drift, mum.\"\n\n\"Then I shall continue snowing,\" the countess said. \"We are just northeast of Bristol, which, you may have heard, is somewhere inside these United Kingdoms. And while I go to said Tesco and acquire some items I might need, you will be heading over to that Domino's on the other side of the parking lot and purchasing a pizza for us to eat before we soldier on our merry way.\"\n\nHe looked out across the lot, his eyes finally spying the aforementioned purveyor of pizza and then looked back at Jenny. \"Do we have to get pizza?\"\n\nJenny smiled sweetly, crooking her finger, and beckoning him closer. Unwittingly, Wesley sat up and leaned in, as bidden. She leaned in closer as well, whispering to him as well as stroking her fingers up and down his cheek.\n\n\"Young man, your chances of getting fucked on this trip grow dimmer with every syllable you utter,\" she cooed in his ear and making him shiver. \"If you wish to ever see this quim again, I suggest that you stop mewling and do the easiest job anyone in Heatherly Hall has ever had, dating back to the sixteenth century.\"\n\nShe heard him swallow, suddenly realizing he'd pushed too far with his laziness.\n\n\"Imagine,\" she continued, tracing her fingernail down his chest, over the cable-knit sweater he was wearing. \"Aside from keeping up appearances, your only job is to fuck me and get food for me. Would you care to guess how many people would line up for your job, were I to announce a vacancy?\"\n\nWesley felt a chill down his spine. This was a great job, after all, even if he'd stumbled into it.\n\n\"Perhaps you feel that your employment is beneath you?\" she asked, batting her eyelashes at him, her brown eyes curious. \"Shall I wrap you up in a pretty red bow and send you back to Audley, let the baron know that you were simply too good to work for the lowly countess of Greymoor?\"\n\n\"N-no,\" he stammered, going pale. She'd threatened this before when he fucked up, but sooner or later, her patience would run out. He had to out-fuck her impatience with him, and she knew it. \"I'll go get your pizza, mum! Right away.\"\n\n\"I thought you might,\" she said airily, leaning back now and nodding. \"You know how I like it. And while you're at it, lower the back seat so we can stretch out, because I find I am feeling a tad frisky after all that driving.\"\n\nHe nodded and began lowering the seat while she got out of the car. She was about to go to the Tesco when he spoke to her. \"And mum?\"\n\nShe turned and looked down at the boy, her eyebrow raised. It was a cold and windy day, and the wet breeze was messing with her hairdo.\n\n\"I just wanted to say that we've all noticed that you seem much happier in the last day or so,\" he said, his voice earnest as he looked up at her from inside the car. \"Everyone's noticed, and... we all like it. Whatever happened, we're happy for you.\"\n\nShe considered for a moment and then nodded. \"Thank you, Wesley.\"\n\nShe then turned and swished off toward the store, unable to suppress her grin.\n\n***\n\nSt Evangeline's Academy For Young Women, 1983...\n\nJenny stared at the group of girls blocking her path and couldn't help but smirk. There were seven that she could count, probably more hiding nearby in the bushes and keeping an eye out for staff. It looked like this had been planned for some time, based on how cocky and confident the obvious leader of the little band of miscreant girls appeared.\n\n\"You picked a bad time to be caught outside by yourself, Cuntess,\" the leader said, a snotty girl named Kirsten whom Jenny had instantly disliked upon arriving at St. Eve's years before. On either side of Kirsten stood her trusty lieutenants, a pudgy girl named Faith, and a skinny, nasty girl named Hannah. They scowled at her while their leader made her big speech. Jenny wasn't impressed. \"It's okay to lose control of your bladder now, if you know what's about to happen.\"\n\nJenny laughed almost derisively. \"Oh, please, I have coughed up scarier things than you lot,\" she replied, waving her hand. \"I've trucked with boys from Eton back home, they're absolute monsters. What are you going to do, throw a stuffed animal tea party at me?\"\n\n\"Listen, you stuck-up bitch!\" Kirsten said harshly while her flunkies tried to glare even harder. They were all supposed to be in the same school uniform as her, but they'd all gotten into different clothes to avoid damaging their outfits, in case questions were asked. Kirsten was on thin ice as it was, since she was known for picking fights with just about anyone.\n\nAlmost anyone.\n\nShe pointed a shaking finger at Jenny now, her face red with anger at the English girl's lack of concern about the threat. \"You're about to get a beatdown, you stuck-up whore, and your precious \u00e9toile isn't around to save you.\"\n\nJenny shrugged. \"I just assumed she would be dutifully going about her studies, as we all should be. What competition are we for her if she keeps her nose in her books and we're always fu-\"\n\n\"Shut up!\" Kirsten snapped, tired of Jenny not taking her peril seriously. \"Appi!\"\n\nAt Kirsten's call, a large black girl appeared, glowering at Jenny. Her real name was Apoda, and her parents were influential Liberian ambassadors; they'd sent her here to St. Eve's for an exceptional education. Jenny suspected Apoda's parents would be disappointed, though, because since her arrival, she'd proven good at very little except for turning football (soccer) into a full-contact sport, and beating other girls up. She worshipped the ground Kirsten walked on and was demeaned for it accordingly.\n\nKirsten smiled evilly, even though the smirk had not left Jenny's face. \"Appi is going to turn you into a smear on the ground, and then the rest of us as gonna have a turn kicking what's left of your ass around the property, how about that?\"\n\n\"I think not,\" Jenny said simply, examining her cuticles.\n\nThis enraged Kirsten, who pointed at Jenny again. \"Appi, fucking kill her!\"\n\n\"I wouldn't do that if I were you, Appi,\" said a lyrical but stern voice from behind Jenny. The blonde girl's brown eyes glinted with amusement as Kat stepped out from behind a nearby tree and stood beside her, staring down the small troupe of their fellow students. \"And I think you know why.\"\n\nApoda hesitated at Karen's arrival, and seemed conflicted about what to do. She really wanted to hurt the blonde bitch, but the \u00e9toile's involvement made things difficult. Kirsten scowled at her minion and then back at Jenny and Karen. \"This changes nothing! Fuck her up!\"\n\nFinally Apoda moved forward, but she was no longer glowering, her stance far less aggressive. She kept clenching her big fists, but they were still down at her side. Karen stepped in front of beloved friend and stared at the bigger girl, her golden-amber eyes flashing, daring Apoda to come any closer.\n\n\"What am I fucking paying you for?!\" Kirsten almost screamed, her face purple beneath her brown hair. \"Do it!\"\n\nApoda made to move forward, but Karen lunged in quick as a bolt of lightning and slapped her across the face, hard. Apoda reeled back, holding her cheek as she stared at the \u00e9toile in shock and fear. The girls all gasped, astonished by what they'd just seen. Even Kirsten seemed stunned into inaction.\n\nKaren was now standing close enough to Hannah that she swatted sideways, backhanding the skinny girl across the cheek and sent her reeling away, keening in stinging pain. Karen turned to glare at Faith, who squealed and bolted, followed by Hannah and Apoda. Several other girls also made a run for it, having no stomach for a fight with both Karen and Jenny. Kirsten tried to back up, but she'd been gripped by fear, and seemed to have forgotten how to move.\n\n\"You have a traitor in your midst, Pullman,\" Karen said as she reached out and gripped Kirsten by the hair, making the brunette whimper in fright. \"I have known all day what you had planned, as did Jenny. That's why she allowed you to find her so far away from the buildings. So that we wouldn't be interrupted.\"\n\n\"F-fuck you...\" Kirsten gasped in panic, trying to put on a brave front.\n\n\"Not a chance, you dirty little thing,\" Karen said contemptuously, shaking Kirsten by her hair and making her burst into tears. \"You're a snake, a coward, and a disgrace to St. Eve's. I will not sully myself by giving you what you so richly deserve...\"\n\nShe then wrapped her fist in Kirsten's hair and made her stand up on her toes, keening in pain as Jenny walked over, her brown eyes flashing while she cracked her knuckles and slipped on some leather gloves. \"I make no such guarantee for the countess here, however.\"\n\nJenny grabbed her schoolmate by her shirt while Karen turned and faced away, walking a short distance. \"You have ten seconds, your highness...\"\n\nTwenty seconds later...\n\nThe two girls were running through the school grounds, under the cover of bushes and trees, trying not to laugh loudly. Karen was pulling Jenny along by the hand, making sure she kept up. They were not heading back to the main building, or the dorms, but had another destination in mind.\n\n\"I can't believe I did that to Pullman,\" Jenny breathed as they ran. \"Pity you only gave me ten seconds.\"\n\n\"I'd have given you longer, but the other girls bolted so quickly, and I didn't want to take any chances,\" Karen replied, looking straight ahead as they crashed through the underbrush. \"Let's just hope that lasts her until the end of the semester. What a bother.\"\n\n\"I don't know, I thought it was rather fun,\" Jenny laughed. \"Even if you hadn't been there, I must admit that I was looking forward to mixing it up a little.\"\n\n\"Like you're not in enough trouble for fighting,\" Karen sighed, shaking her head but not slowing down. \"Clarkson is always looking for reasons to punish you.\"\n\n\"Not as long as I've got my \u00e9toile to protect me!\" the blonde exulted, allowing herself to be pulled along. \"Pullman will have her knickers in a twist every waking moment now, thinking there's an informant in her ranks.\"\n\n\"She should've joined the chess club if she wanted to keep up then,\" Karen said grimly as she finally spied their goal. \"There we go! Hurry up!\"\n\nThe pair sprinted the short distance to the small building and burst through the door, panting and laughing before hugging in elation. It was a Mennonite chapel, near the edges of the academy's property. The building was well over a hundred years old, made of stone and wood, and used frequently used as a quiet supervised study location by the students.\n\n\"Nothing like cutting it close, ladies,\" chided a young woman standing nearby, smiling at them. \"Everything worked out?\"\n\n\"Thus far, but we're not out of the woods yet, so to speak, ma'am,\" Karen said, ending her embrace with Jenny and turning toward the teacher. She was Mrs. Haigler, a young and popular teacher at the academy, a personal favourite of Karen and Jenny's for many reasons, not the least of which was her willingness to help the brilliant young students avoid the trouble that seemed to insist on following them.\n\n\"True enough,\" the dark-haired woman said, nodding and pointing to a table where two uniforms were waiting. \"There are your clothes from earlier today. Get changed while I keep watch.\"\n\nShe walked over to one of the shuttered windows and watched out of it carefully while the two girls hurried over to their waiting garments, already shedding their current attire. She kept watching diligently, but she wasn't hearing many sounds she would normally associate with young women getting changed.\n\n\"Ladies,\" she said gently but firmly, still looking out the window. \"We don't really have time for that. Save it for later.\"\n\nShe heard them sigh, a sound followed by adequate amounts of shuffling fabric and lacing. Nearly three minutes had passed before she heard the young \u00e9toile speak. \"We're done, ma'am.\"\n\n\"Not a moment too soon, either,\" Mrs. Haigler said, turning to walk toward them. \"Because here comes Clarkson. Hide your clothes and sit at the table with your notebooks.\"\n\nKaren stuffed their recently worn uniforms into a bag and slipped it behind a loose wall panel before darting over to join Jenny and their teacher at the table. They were all discussing Chaucer when the door opened. They all looked up, and then stood when the dean of the school walked in, looking very brusque.\n\n\"Ms. Clarkson,\" the young teacher said. \"Nice of you to join us.\"\n\n\"Where have you girls been?\" the rather severe-looking older woman demanded of the two students. She was as harsh as she could get away with where these two were concerned, but both their families were very powerful, and she couldn't exercise her desire for punishment on them without solid proof and cause.\n\n\"We have been here, ma'am,\" Karen said in her lyrical but imperious tone that made Clarkson crazy. This girl's composure was maddening. Ekaterina Leda Gloriana Gordon ruled the academy, and she knew it. Or she would have ruled it, had she felt so inclined. \"With Mrs. Haigler, doing our extra credit work on Chaucer. Why do you ask?\"\n\n\"Several girls are insisting that you two were involved in a fight,\" the dean said rather coldly. \"Ms. Pullman has been roughed up, while Ms. Nagabe has a swollen cheek. Why are they all insisting you were involved?\"\n\n\"How many girls are insisting this, ma'am?\" Karen asked pointedly.\n\nThe dean paused momentarily before answering. \"Seven.\"\n\n\"So seven girls are insisting that Ms. Penrose and myself started a fight with all of them and defeated them?\"\n\nAnother pause. \"That... is their contention.\"\n\nKaren stepped forward, her arms spread out to the side as she presented herself. \"You're free to inspect me, ma'am, for signs that I have been in a fight with seven girls.\"\n\n\"Myself as well, ma'am,\" Jenny offered, doing the same as Karen.\n\nThe dean grimaced, but didn't have much choice. She inspected the two girls for signs of an altercation, from scuffs or scratches, to dirt on their clothes. Both girls were pristine, as was their normal habit.\n\n\"What is that acrid smell?\" Clarkson asked, wrinkling her nose as she inspected Karen's skirt.\n\n\"It's a phenol, ma'am,\" Karen answered plainly. \"It got spilled during chemistry class and a little got on my skirt. I apologize, I haven't changed out of those clothes yet.\"\n\n\"See to it that you do,\" the dean grunted, standing up and then looking at the young teacher who was standing with them. \"These two have been here with you?\"\n\n\"Yes, ma'am,\" Mrs. Haigler answered, nodding, her hands in front of her. \"As Ms. Gordon mentioned, we have been reviewing the Chaucer assignments.\"\n\n\"How long have you been here?\" Clarkson asked.\n\n\"At least two hours, ma'am,\" the young teacher said, pointing to the desk and all the notes scrawled in notebooks, along with open textbooks. \"Whatever else may have happened, I can account for their whereabouts.\"\n\nShe looked at the two students again. \"Why would Ms. Pullman and those other students be insisting that you started a fight?\"\n\nKaren shrugged. \"Jenny and I are not exactly well-liked by certain elements of the student body, ma'am. Is it possible they are trying to set us up, and hoping that sheer dint of witness numbers will sway your opinion?\"\n\nThe dean sighed. \"It is true, not all your fellow students like you, Ms. Gordon, and it is probably jealousy, I will agree. It seems like a lot of trouble to go to, hurting one another in order to create an elaborate lie like that.\"",
        "\"I'm somewhat sorry it's a lie,\" Jenny added. \"I wouldn't mind knocking Pullman on her-\"\n\n\"Penrose!\" the dean snapped, scowling at the blonde girl. \"That is enough of that talk! Three days' detention!\"\n\n\"Yes, ma'am,\" Jenny said in a mellow voice, curtsying gracefully.\n\nClarkson looked at the young teacher. \"Finish these studies and get them back to their dorms. We have devotionals directly after dinner. About your business now.\"\n\nShe turned and walked out of the tiny building, closing the door behind her. Mrs. Haigler moved over to the window and watched the dean's retreating form for almost a minute before exhaling loudly and then looking at her charges. \"She's gone. You two sure know how to keep life interesting.\"\n\n\"And I can't believe you lied to the dean, ma'am.\" Jenny laughed.\n\n\"I didn't exactly lie, she just wasn't specific in her questions,\" the teacher reasoned as she joined them at the table, sitting down. \"She asked me if I could account for your whereabouts, and I could. Just because it happened to be over on the trail behind the north lawn before you made it back here is irrelevant. I knew where you were the whole time. And technically, she asked how long I'd been here, not you two.\"\n\n\"Nice dodge of the Seventh Commandment, ma'am!\" Jenny laughed.\n\n\"Ninth Commandment, Jen,\" Karen corrected, smirking.\n\n\"Whatever, you slappy egghead,\" Jenny sighed, waving dismissively before looking back at her teacher. \"Thank you, ma'am, for your help. When Kat and I set this whole thing up to deal with Pullman once and for all, you provided us with a perfect alibi. How can we repay you?\"\n\n\"I'm sure I will think of something in due course, you vixens,\" Mrs. Haigler purred, smiling warmly at her two favourite students. \"Meanwhile, let's finish this Chaucer, shall we?\"\n\n\"Poo,\" Jenny mumbled as she turned her attention toward the dreary fourteenth-century prose.\n\n***\n\nThe back of a car, the small town of Bradley Stoke in Gloucestershire, the present...\n\n\"Mmmm, yes, lovey, just like that...\" Jenny sighed as she leaned back and kept her legs wide, watching as an equally naked Wesley lay on his stomach and lapped at her aching pussy. \"That feels so good...\"\n\nWesley used his thumbs to keep her pussylips pulled apart while he flicked his tongue against her clit or snaked it around the nub in wet circles before sliding back inside her. Thank goodness she'd remembered to tint the windows this time; she had a habit of forgetting to.\n\n\"Ahhhh, yes, you remember what I told you, good boy,\" she murmured, using her cellphone to record what her manservant was doing to her. She undulated her hips against his mouth, the sensual movement looking wonderful on her camera. She had dedicated herself her whole life to looking as erotic as possible when she made love, and she could admit to herself, only recently, that she had done it because of Kat. Even without her beloved friend in her life lo these past three decades, she wanted to be erotic the way she remembered being with Kat.\n\nShe shivered at the admission to herself. Wesley thought it was his oral technique and redoubled his efforts, much to Jenny's delight. She moaned and reached down to clutch the back of his head, pressing her hips forward against his face and grinding in circles.\n\nJenny bucked and shuddered, groaning through her first orgasm, bathing his face in her ecstasy. She bit her fingernail, the phone clattering out of her hand and landing on the seat. Wesley's tongue snaked deeper inside her, the way he knew she wanted when she was cumming. He'd been told the countess was nearly fifty, but she had the vitality of a woman two decades younger, and the sex drive of a demon.\n\n\"Okay... okay...\" she sighed, knotting her fingers in his brown hair. \"Remove those pants and get up here, mister!\"\n\nWesley knelt and unbuckled his pants, sliding them off quickly, followed by his shirt. Jenny, meanwhile, had leaned up and removed her blouse and bra, shucking them aside and then repositioning herself, reclining in the flattened back seat of her Aston. Wesley knew what to do, wiggling over her lovely body until his hips were positioned over her face. He was erect already, and she took hold of his cock and effortlessly slid it down into her mouth.\n\nHe was bracing his hands against the ceiling with his eyes closed, reveling in the feel of his hard shaft sliding back and forth in her wet, silky mouth. She hummed, vibrating her lips around him and making the young man shudder and moan. He knew she had no intention of making him cum yet (and he didn't dare), but she might edge him a few times before letting him fuck her. And Wesley had no problem with this.\n\nThe only drawback to this position, from Jenny's point of view, was that Wesley was uncircumcised and has a goodly amount of foreskin, meaning she had to go to the trouble of constantly shoving the flaps of skin back to get at his bulbous head. It was a minor inconvenience, certainly, and she'd made certain that he understood the need for immaculate hygiene if he intended to keep fucking her.\n\nShe moaned as she fondled her breasts while bobbing her head back and forth along his length, and she was already squirming, because her pussy was so wet. She wanted a good fucking before resuming the trudge to Tewkesbury. And if Wesley played his cards right, she would let him do it again tonight in the hotel where she planned to stay.\n\nShe opened her eyes, gazing up into his as she pulled him out of her mouth and slid her tongue slowly around the tip of his cock. Her normally elegant hair was a bit of a mess by now, but she'd no doubt have it back in place perfectly before they went on the road again. She always looked immaculate, wherever she went.\n\nWithout warning, she plunged him back down into her mouth, deep-throating him effortlessly. Wesley gasped and pushed with his hips, and Jenny didn't flinch, determined to drive him wild. She pinched and tugged at her nipples, the delicious sting making her wetter still. She wouldn't blame him if he slept for the rest of the trip, because she intended to fuck this boy stupid.\n\n\"Okay, big boy,\" she breathed, her brown eyes glinting as she pulled him out of her mouth again and wiggled around into a new position, her legs once again spread wide. \"Now get down there and give me what I need...\"\n\nWesley nodded and moved back down her body, bracing himself over her. Breathing heavily, Jenny reached down and pulled her pussylips wide with two fingers, the other hand still molesting her breasts. Bracing himself on one hand, Wesley used the head of his pulsing cock, sliding it up and down her opening, teasing her, and tapping it against her clit until she was almost whining. He'd done this often enough that he knew exactly what she wanted. Some days, she was much more dominant than this, often riding on top of him, even introducing him to a new position called the 'Amazon'. But today, in these somewhat snug quarters, she just wanted to be fucked. He wouldn't disappoint her.\n\nJenny sighed loudly as he pushed slowly into her, finally burying him all the way up to the hilt. Despite her age, her pussy was wonderfully tight, or so he assumed, because he'd only ever fucked one other girl aside from the countess, a housemaid back in Heatherly named Maddy. He held still inside her for several seconds, letting her enjoy the feel of him. Her hands eventually made their way to his behind and pulled down, shoving him in deeper still. They both grunted at the rough penetration, and she kept him pulled tightly against her. He began pumping with his hips, her wet pussy making delightful noises around him.\n\n\"Ahhhh, yes...\" she whispered, craning her neck up and nuzzling her face against his chest as he hovered over her. Her eyes were closed, but she'd begun thrusting back, her rhythm matching his perfectly. This woman knew how to fuck, and maximize pleasure for both herself and her partner. \"Gnnn, right there, yesssss...\"\n\nWesley thrust and pumped the way she'd taught him, and she responded the way she was supposed to, which encouraged him. He was often self-conscious about these times she fucked him in public, but if it meant he wouldn't get to fuck her otherwise, he was just going to take that chance. After all, they hadn't been caught yet. A few close calls, but they didn't seem to bother her.\n\n\"Gnnnn, push yourself up a little higher, love,\" she whispered, nipping at the skin of his pec. \"Rise up a little higher inside me and- ohhh, yes, right there! Good! Good!\"\n\nHe'd propped himself up a little farther and was now sliding over a spot inside her that always gave her incredible thrills. They didn't have long, and if he did this right, she would cum quickly, and hard, just what she needed. She squeezed her pussy around him, her hips writhing. She'd taken her arms off his back to give him freedom to move and thrust, and her hands were now back on her large breasts, squeezing them and making her groan loudly.\n\nJenny could sense Wesley's arms tiring, and she pulled him down to her, his comforting weight on her now. He kept thrusting, picking up the pace and her fingers flexed on his back, nails pressing into the flesh. She hissed in his ear, encouraging him to go faster. She felt the liquid, tingling heat in her core growing, ready to blossom through her.\n\n\"Mum,\" Wesley grunted, pressing with his toes as he strained, his back arching. \"I'm... I'm gonna...\"\n\nJenny wrapped her legs tightly around his hips, indicating she had every intention of him cumming inside her. Some days she did, some days she didn't, and he would either cum in her mouth, or often on her tits. But today, she wanted to feel his cum inside her. So be it.\n\nHe groaned loudly and thrust hard, shaking as his cock throbbed and began spurting cum inside her. Jenny keened and writhed, her hips fluttering and her pussy gripping him fiendishly as she climaxed. Before she was ready, she wailed and shuddered through another orgasm, making sure she'd milked him completely of his spunk.\n\nShe flopped back on the car seats, her arms and legs uncurling from around Wesley, while he breathed heavily and lowered himself on top of her gently, enjoying her plush softness beneath him. They lay there for some time, just enjoying their shared post-orgasmic bliss. Jenny kept her eyes closed, her hand stroking up and down the boy's back slowly.\n\n\"Now I feel like I can get on with my day,\" she sighed finally. \"So, lovey, turn around and let's clean one another up, shall we?\"\n\nWesley nodded wearily and slowly turned himself around so that he was lying down her body. They rolled onto their sides and Jenny opened her legs, allowing him access. She shivered as he pushed his tongue inside her, starting to lap up their mingled cum. Jenny, meanwhile, took his softening cock into her mouth, shivering in delight at the taste of her own cum mingled with his on her tongue. She never tired of the taste of her own cum mingling with her lover's. It was heaven.\n\nOnce they were both free of cum, they pulled themselves apart and Jenny smiled as she sat cross-legged, patting his arm. \"Well done, love,\" she said cheerfully. \"I knew I kept you around for a good reason.\"\n\n\"I... appreciate the sentiment, mum, but doesn't that make me sound like... well, a whore?\" he asked rather sheepishly.\n\nJenny laughed. \"My dear boy, why don't you apply that brain of yours to being good at something else in my service if you object to such a moniker? I've given you the more palatable title of my swain, but in essence, yes, I employ you to fuck me. But I have never been so coarse as to refer to you as a whore, or any other approximation thereof.\"\n\nWesley sighed. \"You're right, mum, I'm sorry. You've always been very good to me.\"\n\nJenny shrugged. \"I'm obligated to be, I promised your uncle, after all. Now let's get dressed, we have probably been parked for a suspiciously long time already. We'd best leg it.\"\n\nThey dressed themselves and Jenny climbed back in the front seat, using the mirror to fix her makeup and her hair while Wesley started righting the back seat. She was just fixing her lipstick when there was a tap at the tinted window.\n\nJenny unconcernedly lowered the driver's window and glanced up at the constable who was staring down at her. \"How can I help you, officer?\"\n\nThe woman in the blue uniform seemed rather humourless. \"Pardon, ma'am, but I noticed that the vehicle had been parked for quite some time. Ran the plates and thought I should come and check on you.\"\n\n\"I see,\" Jenny mused. \"And who do the plates belong to, if one might inquire?\"\n\nThe constable frowned, not sure if the blonde woman was messing with her, asking such an odd question. \"I... they belong to someone from Devonshire.\"\n\n\"Goodness, that's a distance,\" Jenny said. \"Any idea whom?\"\n\nThe officer's cheeks went slightly pink, finding this person impertinent. \"If you must know, the plates were traced back to Lady Jennifer Penrose, the Countess of Greymoor.\"\n\n\"Posh,\" Jenny quipped, smiling. \"Will there be anything else then, constable?\"\n\n\"I...\" the officer said before flushing angrily. \"Ma'am, step out of the car, please.\"\n\nHere we go, again... Wesley said, staying in the back seat and shaking his head.\n\nJenny obligingly opened the door and stepped out of the vehicle, sighing as the wind quickly undid her hair again. \"I have done as requested, officer. Do you need to strip-search me?\"\n\nThe woman coloured and then stuck her head down inside the expensive vehicle. She looked around, noticing Wesley finally, and then inhaling deeply as she smelled something.\n\n\"What is that smell in the car?\" the officer almost demanded.\n\nJenny shrugged. \"We were eating pizza not so long ago.\"\n\n\"It doesn't smell like just pizza in there.\"\n\n\"It was Domino's pizza,\" Jenny added.\n\nThe constable squeezed her eyes shut for a moment. \"Do you know there's a young man in the back seat?\"\n\n\"Well, I should hope so,\" Jenny said, putting her hands on her hips. \"He was in the vehicle when I absconded with it from Devonshire, after all.\"\n\n\"So you admit that you stole the car from Lady Greymoor?\" the officer pressed, hoping she was getting somewhere finally.\n\n\"How, exactly, does one steal their own car?\" Jenny asked, her eyebrow raised. \"Is this a Gloucester thing?\"\n\nThe officer looked at her, rather dumbfounded. Jenny rolled her eyes. \"I am Countess Greymoor, constable. There's no need to turn puce. I am on my way to Tewkesbury, to sign some property deals, and then speeding back to Heatherly as fast as the law allows. Would you care to see my ID?\"\n\n\"Why... why didn't you just say that to begin with?\" the woman asked, still bewildered.\n\nJenny shrugged again. \"I thought I would try to liven up this dismal little burg with some mystery. Now you get to go and tell your commanding officer that you thought the Countess of Greymoor stole her own vehicle. Sounds fun, what?\"\n\n\"I think... I think we're done here, ma'am,\" the officer sighed, backing up. \"Enjoy your stay in Tewkesbury.\"\n\nJenny waved pleasantly and smiled before her expression went sour and she clambered back into the vehicle. \"Ugh, that cow,\" she muttered, using the mirror again. \"My hair is a mess again, thanks to her...\"\n\nShe turned and looked into the back seat, where Wesley sat quietly. \"As for you, my hero, you can take this pizza and drop it in the bin over there. If people are mistaking the smell of our sex for Domino's, it needs to go. Now.\"\n\n\"Yes, mum,\" he said hastily, gathering up the remains of lunch, opening his door and rushing to throw the refuse out. Jenny fixed her hair again, having it back in its customary chignon before Wesley was even returned to his seat.\n\n\"Excellent,\" she announced as she turned the vehicle on and pulled around to begin exiting the parking lot and leaving this dismal little widening in the road behind. \"You might as well nap while you can, Rip Van Winkle; we only have another few hours before we reach our destination, and I have quenched the fire in my loins for now. I'll wake you in due course.\"\n\n\"Yes, mum,\" he said obediently, settling back into the seat and nodding off virtually immediately, beginning to snore.\n\nMust be nice to have no blood flowing to your brains... Jenny thought darkly as she got back on the road and started heading north, leaving the horrid little settlement of Bradley Stoke behind her.\n\nTewkesbury awaited.\n\n***\n\nA posh club in Perth's Swan Valley, Australia, January 1990...\n\nSome years had passed and while the shadow of her beloved Kat had never truly left Jenny, her father had proven damnably right in that she recovered from her utter devastation and life went on. Now she was celebrating her twentieth birthday, or rather, she was marking it again. She'd gotten through her family's tedious little fete back at the homestead up the hill and was now out partying with her friends.\n\nOn the patio of a posh beachfront club, she was dancing gaily with several ladies, making sure that the men who were also around got a good view. She was feeling very flirty tonight, and even quite horny. While almost all of her gal pals would happily accommodate these frequent urges of hers, tonight, she thought she wanted a cock, rather than pussy. Yes, a good solid dick sounded just splendid!\n\nShe was wearing snug jeans with a fashionably high waist, and above that, a frilly bra over which she wore a loose-fitting halter, the straps of which slipped off her shoulders. At the insistence of her friends, she'd even donned some of the gaudy Day-Glo plastic jewelry they all seemed so fond of and had teased her hair out to a shocking amount of volume.\n\nThey were all currently gyrating and grinding to the wildly popular song 'Express Yourself' by Madonna in the middle of the deck that was the club's outside dance floor, the summery Perth night perfect for a party.\n\n\"Couple of those boys're really likin' your show, Jen,\" said her friend Gina, smiling slyly in the direction of a group of young wolves who were sitting at the outdoor bar and ogling the girls, especially Jenny. \"Not that I blame 'em.\"\n\n\"Hm, think they know I'm a countess?\" Jenny mused, smirking and running her hands through her hair as she threw a large bump and grind in the direction of the boys.\n\n\"C'mon, everyone who's local knows that,\" laughed another friend, Claire. \"But I don't recognize any of 'em, so maybe they're students here on break?\"\n\n\"They don't look like Westerners,\" said another girl, laughing as she danced. \"Look at the one with the popped collar.\"\n\n\"As long as one of them has a decent, functioning dick, then I don't care where they're from,\" Jenny said, smiling slyly at her friends as she turned away from the boys. \"I plan to make a proper birthday of this.\"\n\n\"I dunno how you manage to be so posh and still such a slut!\" laughed Gina gaily as she danced with her friends. \"But I love it.\"\n\n\"The way Jen's dancin', you know they're all crackin' fat,\" Claire said. \"They don't all look bodgy, so maybe there's one'r two worth a whirl, right?\"\n\n\"A girl can hope,\" Jenny agreed. There were maybe ten of the blokes, all sitting near the bar, and all staring rather blatantly at the antics of Jenny and her friends. Not that she minded, since that was exactly what she was hoping for. How else was she going to get laid?\n\nAngie, one of the girls, lit a cigarette and took a long drag before passing it to Claire. She offered it to Jen, who refused, shaking her head.\n\n\"I'm amazed you don't smoke, Jen,\" Gina said, taking the cigarette. \"You're the biggest party girl I know, even if you're the posh bird.\"\n\n\"I have enough vices as is, girls, and made a promise to myself that I would never take up the habit,\" Jenny announced in a firm tone.\n\nAnd more importantly, to someone else I vowed I would never disappoint, ever again.",
        "A thumping rhythm began, and she recognized the song 'Rag Doll' by Aerosmith. Jenny's face lit up with excitement. \"Ladies!\" she exclaimed, looking at them all. \"Time to give this party a boost! C'mon, I'm going up!\"\n\nThey all laughed and squealed, following their leader as she rushed to the wooden bar and clambered up onto it. The two bartenders, long accustomed to the countess Penrose's antics, simply pulled any glasses and bottles away as she began strutting and dancing about to Steven Tyler's gravelly voice, gyrating her hips while her hands wandered around her body.\n\nHer friends were all laughing and clapping, as were many people sitting on the patio, watching her. She sauntered back and forth across the bar top, smiling at anyone sitting at it. One drunk young man leered and reached up and began caressing her leg, just above her sexy ankle boots.\n\nShe smirked and placed the sole of her boot against his chest and then pushed without much effort, causing the drunk boy and his stool to tumble backwards and crash to the deck, spilling his beer everywhere. Everyone nearby roared with laughter, including his mates. Jenny went on dancing.\n\nThe song ended and everyone applauded. Flush with joy, Jenny bowed, letting everyone see down her halter top, showing off her frilly bra and large breasts. One handsome young man walked up and smiled, holding his hand out to her. She took it and slipped down gracefully from the bar top.\n\n\"No stranger to wild abandon, are you, miss?\" he said easily in a clean accent. He was a rather handsome sort, with dark hair and hazel eyes. He had something of a dark-haired Rick Astley thing going on, but was thankfully of a normal height. Short guys tired Jenny often.\n\n\"Well, listen to you,\" she said, smirking. \"You're not a native, you're from Old Blighty. The Nott, unless I'm mistaken and have had a few too many.\"\n\n\"Guilty as charged,\" he said, nodding. \"Mansfield, in fact. James Harding.\"\n\n\"Not the Hardings who are also the earls of Ravensworth,\" Jenny said, shaking his hand.\n\n\"One and the same,\" he admitted, almost blushing. \"You won't hold that against me, will you?\"\n\n\"My dear sir, I am Jenny Penrose, my father is Earl Greymoor, down in Carrot-town,\" she replied, laughing.\n\n\"I thought that was RP I heard,\" James said rather eagerly now. \"You live at Heatherly, right?\"\n\n\"That's the family hovel, yes, but I live here in Perth right now, majoring in business and property management,\" Jenny explained, gesturing around herself at the surrounding country. \"I've been here a few years now, had to work damnably hard to not take on the local accent.\"\n\n\"Perish the thought,\" he laughed. \"I've just come down for the holiday, never been to everyone's favourite penal colony.\"\n\n\"You have no idea how close you've hit to the mark, my good man,\" she said, taking his arm and leading him away from the bar to somewhere they could speak more quietly. She found them a table and he sat her before taking his own seat. \"How long are you here for, James?\"\n\nHe shrugged rather helplessly. \"I have this week and next off, before returning to hit the books at Cambridge. Studying to be a surgeon.\"\n\n\"A modern peer, are we?\" she quipped, resting her chin on her fingers as she looked at him, smiling.\n\n\"I've no head for our family businesses, unfortunately,\" he sighed. \"To say dad is disappointed is a minor understatement. He'll have to pass everything to my younger brother, rather than the natural heir.\"\n\nShe nodded. \"Papa was quite annoyed with me for being a girl, and the eldest. But I am majoring in business so that I can manage all our properties and keep them profitable in the new world, Heaven help me.\"\n\n\"You would be Heaven if you could help me with that bumf,\" he chuckled, shaking his head rather ruefully. \"But I'm being rude. May I buy you a drink, Miss Penrose?\"\n\n\"Please, I'm just Jenny,\" she insisted, putting her hand atop his and smiling warmly. \"Even the local plebs don't need to address me by my title. Well, not unless they piss me off. And yes, my lord, you may buy me a drink.\"\n\nShe put up her hand and one of the bartenders hurried over. Jenny Penrose never waited for anything. Ever.\n\n\"Clyde, champers, please,\" she said easily. The young bartender turned and Jenny patted him on the butt as he went back to the bar. She then looked back at her conversation partner and smiled. \"A nice boy, but not much for small chat. But he knows what I like to drink, so he serves his purpose.\"\n\n\"You are a remarkably self-possessed young woman, Jenny Penrose,\" he observed, liking the feel of her hand on top of his. \"And quite the free spirit, despite your responsibilities.\"\n\n\"Oh, today happens to be my birthday, so perhaps I am cutting loose a little more than I normally would,\" she said, waving her table-dancing antics off and as Clyde the bartender brought over a bottle of her preferred champagne. The bartender poured their first glasses before leaving them to it.\n\n\"Happy birthday, then, Jenny Penrose the Unfettered,\" he said, holding up his glass. She clinked hers against it and they drank to her birthday.\n\n\"Pity you are only here for the break,\" she mused as she refilled their glasses. \"Frankly, it's nice to hear the diction from back home when it's not droned at me by my father, or his walking corpse of a butler.\"\n\n\"I am amazed I managed to escape without a chaperone,\" James admitted. \"As it is, I am here with some other students in residence from my courses. There was a group discount, and not all of them could afford this otherwise.\"\n\n\"Most noble of you to slum with them,\" she cooed, smirking and winking. She could tell that he was totally taken in by her dancing brown eyes. Good. Her evening was looking up. \"Are you obligated to spend your time with them?\"\n\n\"Well, no,\" he said, blushing slightly. \"I-\"\n\n\"There you are,\" a young man blurted as he strode up to the table, looking angrily at Jenny. \"Look at what you've done to my shirt, you plug!\"\n\nJenny recognized him as the guy at the bar she'd pushed over when he started copping a feel on her while she danced. She seemed unfazed by his aggressive demeanour. \"One could argue, good sir, that it was just desserts for being fresh while I was providing a free show. Nobody asked for your assistance, after all.\"\n\n\"This shirt is ruined, you bitch, and you're going to pay for it!\" he said harshly.\n\n\"Hey now,\" James interjected, starting to stand, but Jenny held out a hand, indicating to him that she had this under control. Just as well, since James was studying to be a surgeon, and she didn't want him to injure those hands unnecessarily.\n\n\"Is that all?\" Jenny asked. \"I would be happy to dry clean it for you, or even buy you a new one, if that-\"\n\n\"Not even close, slut,\" the guy snarled, reaching down and grabbing her wrist to pull her to her feet. \"I intend to get some of my own back!\"\n\nJames surged to his feet to stop the man, but was rewarded with a fist to the jaw for his troubles, sending him tumbling to the deck. Jenny, however, was no shrinking violet, and she rammed her knee into her assailant's crotch, hard enough to double him over. Before he was ready, Jenny took him by the neck and shoved him roughly, sending him into another table full of guests. They objected to his sudden presence and began roughing him up. Before long, a fight broke out, with more than a few of Jenny's gal pals involved.\n\n\"This way, Rocky,\" she said as she pulled James to his feet and led him hurriedly past the bar and away from the fight. \"Back later, Steve!\"\n\n\"Never a dull moment with you around, Jen,\" sighed the senior bartender, shaking his head. \"Happy birthday indeed.\"\n\nLaughing, she pulled James along the beach as the wind picked up. In the distance, she could see flashes of Perth's famed tropical lightning, meaning a storm was inbound. Jenny hurried along, thinking about how eventful this evening had been thus far. She just needed one more thing to happen for it to be complete.\n\n\"The locals call this wind the Fremantle Doctor,\" she called back as she ran, still holding his hand. \"And there's a storm coming, so we want some cover, right quick!\"\n\n\"Shouldn't we just have gone into the club, then?\" James queried, feeling the wind kicking up now as he followed her along the dark beach, their feet sinking into the powder-soft white sand.\n\n\"There's no telling if that fight will spill into the inside, the locals are fond of their punch-ups,\" Jenny laughed. \"I know a more secluded space where you're less likely to get slugged.\"\n\n\"If I'm to get slugged less, would that not deprive me of your company?\" he called to her, and she laughed gaily.\n\nShe found her objective, a small grotto in a rock formation large enough for them to fit in. She ducked inside and weaved to a small open area, breathing heavily and laughing. The lightning flashes were practically over them now. James was looking around in wonder now, and she could barely see him in the darkness of the grotto.\n\n\"Welcome to my little hidden kingdom,\" she panted, releasing his hand finally and gesturing around. \"Well, not so much hidden, as I declare it to be mine when no one else is about.\"\n\n\"Quite charming, although the acoustics need some work,\" he replied, hunching forward slightly to catch his breath, his hands on his needs. \"Does your kingdom have an apothecary that can prescribe something for a headache?\"\n\n\"Oh, right, I'm sorry, I forgot that little detail in all the excitement,\" Jenny said softly, coming up to him and taking his hand to lead him back outside for a moment. She kept her fingers on his face and used the lighting's illumination to examine his jaw. Aside from a small bruise and some minor swelling, he seemed none the worse for wear. \"You'll be happy to know, doctor, that I think I can safely conclude that you will live. Your condition is not terminal.\"\n\n\"Does that include continued association with you?\" he quipped, making her smirk.\n\n\"That's not how I characteristically kill my chums, no,\" she said easily, convinced he was all right. \"Back inside with you now, get a wiggle on.\"\n\nThey went back inside and Jenny produced a small torch from her bag. She turned it on, and it was more than bright enough to illuminate the space. James seemed impressed as he looked around. There was a small hole in the rock formation about ten feet over their heads, allowing them to see the sky.\n\nJenny smiled and gestured farther into the enclosed space. Not far away, the waters of a small pool glinted in the torchlight.\n\n\"The true pride of my kingdom,\" she said as James went over and looked at the pool. \"Not huge, but big enough for an intimate party.\"\n\n\"The water is so clear,\" he breathed as he gazed into the pool. He knelt and put his hand in it. \"Not as cold as I expected, either.\"\n\n\"Well, unless you are pressed for time, would you care to join me for a dip, your lordship?\" she queried, sauntering over to the pool.\n\nHe looked at her in amusement. \"Didn't we just dash in here to escape the rain and keep from getting soaking wet?\"\n\n\"Oh, only my clothes, of course,\" Jenny said, setting down her bag and torch at the edge of the pool and then pulling off her halter top, now wearing only her frilly bra and her high-waisted jeans. The pants didn't last long either, and soon she was only in her bra and matching panties, totally unashamed before him. James tried not to stare and failed miserably.\n\n\"Oh, come now,\" she said, smirking. \"Don't tell me you've never skinny-dipped before, Lord Ravensworth. It's such an important tradition for the peerage when the rabble aren't watching.\"\n\n\"I... not often... only once, really,\" he admitted, blushing. \"And it wasn't with... well...\"\n\n\"Why, James Harding,\" she said, her eyes glinting in amusement, as she unhooked her bra. \"Do you shoot mink from the hip?\"\n\n\"What?\" he gaped, his eyes widening. \"Oh, me, no, no, I just...\"\n\n\"Well, it's good to hear you're not gay,\" she added, removing the bra and allowing her bounteous breasts free of their confines. \"Because that would make my attempts to seduce you rather more difficult, wouldn't it?\"\n\nJames seemed to have forgotten how to speak, staring dumbly at Jenny's breasts. She smiled slyly. \"Well, clearly you're not gay, but I still don't know who it was you've skinny-dipped with that one time. And you now know a lot more about me.\"\n\nHe looked up from her breasts to her lovely face and saw her smiling at him. \"You... you mean to seduce me?\"\n\n\"Well, intent is only part of the whole equation,\" she reasoned. \"The question is, do you intend to answer my advances in an affirmative way, or shun me like a common cur within the bounds of mine own realm?\"\n\n\"Oh, I could never shun you like a common cur,\" he said hastily, shaking his head.\n\n\"It is little better to be shunned as an uncommon cur, I might point out,\" Jenny said. \"I ask thee again, Ravensworth: will you accede to my wishes and come fuck me in this moonlit pool?\"\n\nJames said nothing for several seconds, just staring at her. As if to sweeten the deal, Jenny bent over and peeled off her panties, standing up and holding them out to the side before dropping them. She now stood before him completely naked, her pale smooth skin gleaming in the dim light.\n\nHe'd never seen such a lovely creature. Her long hair was blonde, her eyes a dancing brown, her smile mischievous but still genuine. Her shapely shoulders led the view to magnificent breasts, larger than was fair, and yet her waist was slender. Her hips framed her pussy, which she kept shaved, before tapering down into her long legs and elegant feet. She was an angel with a penchant for giddy chaos.\n\n\"I...\" he managed to begin saying, still staring at her. \"I accede to your wishes, Lady Greymoor. I cannot possibly say no to so heavenly a being.\"\n\nJenny smiled warmly, enjoying the tingle his words gave her. She found herself already liking this boy much more than she'd expected. She gestured to him simply. \"Dost the lord intend to somehow accede to my wishes despite his clothing?\"\n\nJames blinked and looked down, remembering that he was still fully dressed, whereas Jenny was already deliciously nude. \"Oh, yes... of course...\"\n\n\"Can his lordship manage his own disrobing, or would he care for some assistance?\" Jenny asked coyly, winking at him.\n\n\"I... you're more than welcome to help...\" he offered.\n\n\"Good, I think it's only fair that I see what I'll be working with,\" Jenny pointed out, wiggling over and standing in front of him. Her eyes held his as she reached for the hem of his polo shirt and pulled it over his head. He had a trim, fit build, and wasn't too hairy. She'd had her share of werewolves and gorillas since coming to these shores, and it was nice to see some proper grooming for a change.\n\n\"Clearly you exercise and eat right,\" she mused, running her hands over his chest. His skin was smooth and strangely tan for someone from the middleshires. Not that she minded, of course. She'd gotten something of a tan herself since moving down to Perth.\n\nJenny now knelt in front of him, but kept looking up into his eyes, smiling slyly. She unbuckled his belt and then undid the buttons on his shorts, pulling them down deftly but not quickly. There was no rush, after all.\n\nThank God, he's wearing boxers and not those ridiculous tighty-whities...\n\nShe pressed her palms gently against the silky material of the boxers, caressing around without touching his cock. She felt him shiver and then bent lower to take off his shoes and socks before returning to the underwear.\n\nWithout much ado, she pulled them down slowly, looking at what lay beneath and smiled. \"Well now, I consider myself quite lucky you're not spoken for this evening, good sir.\"\n\nHe smiled rather nervously. \"Thanks...\"\n\nHe hand now caressed against his cock, soft but twitching with nervous energy. It jumped beneath her touch. \"Let's see if we can bring Little Lord Ravensworth to life, hm?\"\n\nHe watched wide-eyed as Jenny kissed his manhood gently. His cock throbbed in her hand and she pressed her lips to it, feeling its softness and sighing. She needed this tonight. What birthday was complete without a good, solid rogering?\n\nHolding him, she kissed the head and slid the tip of her tongue around it. She slowly teased him to life, feeling him swelling in her hand. She detected a wetness forming between her legs and she hummed gently as she took him into her mouth.\n\nJames watched in awe, but couldn't help moaning. Not that Jenny minded, since it let her know that he liked what she was doing. He bit his lip and shivered. He wasn't a virgin, but he didn't have that much experience, and this girl was clearly a succubus, having just turned twenty. Her mouth and her tongue felt incredible around him.\n\nJenny had him hardening nicely by the time she began bobbing back and forth, the fingers of her free hand reaching up and grazing the fingernails over his abdomen. She shivered as well when he placed his hands gently on the sides of her head, fingers flexing and curling in her blonde hair.\n\n\"Mmmm, that's more like it,\" she said as she pulled back, examining her handiwork. \"Nice and sturdy. Exactly what I need.\"\n\n\"Should I... should I reciprocate?\" he asked, releasing her hair and looking down at her.\n\nJenny smirked as she stood. \"No need to see you kneeling in front of me just yet, I'd much rather feel you in me...\"\n\nShe took his hand and led him toward the rocky edge of the pool, smiling at him. \"It's only about two and a half meters deep, but if you put your back to the wall and brace yourself, I'll handle the rest...\"\n\nShe waited while James sat and eased himself into the water. While it wasn't warm, it wasn't cold either. She smiled and rolled her eyes as he adjusted to the temperature. Once he was in and had his arms braced along the pool's edge, Jenny laughed loudly and cannonballed in, splashing everywhere. She swam underneath and then turned around under the surface, holding her breath before moving over to where he was, laying her hands on him. Then she moved in and found his cock, relieved to see it was still hard.\n\nSurfacing, she drew in a breath and looked into his eyes in the dim light. \"Ready, big boy?\"\n\n\"I... shouldn't we put something on me first?\" he asked somewhat hesitantly.\n\nShe smiled and shook her head a little as she put her arms around her neck. \"I'm on the pill, and it's not that time, so we're good. And frankly, I want to feel you cum in me. It's my birthday, after all, and I should get what I want.\"\n\nJames nodded and waited while Jenny arranged herself. \"You just hold yourself in place and float, I've got this...\"\n\nHe trembled as he felt her reach down and hold his throbbing cock in place. She was still staring into his eyes when she bit her lip and he felt a heavenly, warm sensation envelop him. Jenny sighed as he penetrated her and she pushed forward, taking him deeper inside.\n\n\"Yes,\" she breathed, delighted to have a cock inside her. \"Now just relax and let your lower body float away from the wall. Keep your arms braced...\"\n\nJames did as instructed and he felt her legs wrap around his waist, squeezing and pushing him even deeper into her hungry quim. He was mostly floating and he had her impaled on his cock. He moaned in pleasure. This was turning into a great trip!\n\nKeeping her eyes locked with his and her legs locked around his hips, Jenny began pumping her hips as thunder rumbled outside and lightning flashed. Rain had begun, and the wind was howling. But it couldn't reach them in this dark little sanctum.\n\nRain began coming down through the small hole in the top of their rock shelter, pattering onto them in the pool. Jenny sighed and leaned backward, letting him see her heaving breasts as she pushed down with her hips. Her eyes fluttered open and she gazed up through the aperture, enchanted by how exquisite this moment was.",
        "She rocked herself against his floating body rhythmically, her legs keeping him pinned to her. His cock sliding in and out of her felt so damn good, and she knew she'd cum hard, at least once, maybe a few times if she could make him last.\n\n\"Ohhh, James...\" she sighed, still leaning back, but feeling his eyes locked on her lovely breasts. She pulled herself back up and leaned forward now, her arms around his neck and nuzzling his face into her bosom.\n\n\"Go ahead,\" she cooed, shivering as he throbbed inside her. \"No need to be gentle, I promise.\"\n\nHe kept hold of the wall, but he began kissing and licking her breasts, marvelling at how large and soft they were, wet with the pool and rainwater, but tasting so very divine all the same. He slid his tongue around the dusky nipples, which were hard with arousal, and he heard her moan, clutching him harder with her pussy.\n\n\"That feels so good,\" she breathed, undulating her body against him, making sure he kept sucking her tits while she fucked him. \"Yes, lovey, that's so very good... fuck me...\"\n\nShe found herself writhing and thrusting lustily, the deep, tingling pleasure in her core beginning to build. Despite the cool water, she felt warmer with each passing moment. As she thrust, she flexed her pussy around him, squeezing his cock and making him groan. Jenny wasn't sure she knew very much yet, but she was certain she knew how to fuck a boy, and make him cum so hard he'd always compare his next lay to her. He wouldn't forget. They never did.\n\nJames was sucking on her nipple greedily, biting it and tugging gently with his teeth, the delicious sting driving Jenny wild. She began hunching her hips harder and faster against him, feeling his manhood throbbing inside her. He wasn't far off, and neither was she. She was going to make him cum so hard he would forget how to walk out of this little den of lust.\n\n\"That's it, that's it, yes...\" she gasped, gripping him tight. \"Now start pumping back with your hips...\"\n\nEven though he was essentially floating, he began using the fulcrum of his hips to begin pumping back, moving in time as best he could against her increasingly fast pace. His head left her breasts and he moaned, the sound making Jenny's brinksmanship nearly collapse. She bucked on him, crushing herself against him while he writhed, locked to her by her strong legs.\n\nShe felt him shaking and straining to hold on. She hugged him close, kissing and then biting his ear as she held on. \"Cum in me,\" she panted in his ear. \"Go ahead, love, cum deep in me...\"\n\nJames clenched his teeth and strained harder, pushing up into her for all she was worth. Jenny bucked and wailed as the dam broke and she felt him pumping his welcome cum deep into her. Her own orgasm battered her about, her sensitive skin alight as the rain pattered down on her. As he held on for dear life, she came twice more.\n\nShe almost collapsed against him, breathing heavily while he floated in the water, his body still mostly rigid, his hard cock pulsing deep in her wanton cunt. She kissed and nipped at his shoulder and pectoral, letting the orgasm bleed out of her as its own pace. She floated on clouds of scintillating delight, time and space meaningless. There was only the ecstasy of that eternal moment.\n\nMinutes, hours, days, or centuries passed before she finally sighed and looked up at him, smiling. She didn't know if the smile was sly, coy, or kittenish. She couldn't tell, nor did it matter, since his head was still back against the edge of the little grotto pool, and he gazed up into the darkness above.\n\n\"Well now,\" she managed to say, thankful to have her breath back. \"Not a bad way to kill an evening, what?\"\n\nHe looked up finally and smiled, a dopey expression, one she readily associated with a man who'd just experienced the best orgasm of his life. \"I... yes, I daresay. Lady Penrose, you are a marvel.\"\n\nShe giggled and almost blushed. \"Well, don't let it get out, can't have it fouling my reputation as a bad influence on the locals.\"\n\nReluctantly, she pulled herself off his softening cock and then floated beside him, facing into the edge of the pool and resting her face on her arms, composing herself. That had been a really good orgasm, and she wasn't exactly ready to let him see exactly how it had affected her. Granted, not the best or most soul-shattering orgasm she'd ever had, but one of the best a man had ever given her.\n\nShe lifted her head and stared into the darkness. \"Pity you're only here for the week, I could be persuaded to go for another few rounds of that, as your availability allows.\"\n\n\"Only if your intent is to kill me,\" James said with a weary chuckle. \"But yes, I would readily accede to that suggestion. I am not terribly tied down by any schedule or obligations during this trip, and I can't readily think of better ways than to spend it in your company, Lady Penrose.\"\n\nShe turned her head and smiled at him, her brown eyes shining. \"My friends call me Jenny. And I do believe you have earned that right, good sir...\"\n\n***\n\nTewkesbury, present day...\n\nThe Tudor House Hotel on High Street was indeed an old Tudor-era maison, with a white exterior bordered in dark wood. It was early evening when they'd finally pulled into the quaint little town of Tewkesbury, and Jenny had decided to simply check into their accommodations after a day of driving. They would have food brought up to them. This seemed to suit the rather sedentary Wesley's sensibilities as well.\n\n\"And this is the best room in the place, mum,\" the hostess said, gesturing around. \"Hope it'll do for you and your companion.\"\n\n\"Quite nicely, thank you,\" Jenny mused, looking at her surroundings. The suite had a large set of windows that looked over the back of the hotel's lot and displayed its famed 'secret garden'. Her bed was a canopied four-poster, and the rest of the furnishings were elegant enough to suit. The dark wooden beams on the ceiling complemented the Tudor look. Wesley waited quietly, knowing he was not to speak.\n\n\"There is a chef on, mum, in case you get peckish,\" the woman said, her hands in front of herself and nodding her head. \"Normally he's gone home by now, but because you're staying, he willingly made an exception.\"\n\nJenny smiled lightly. \"I take it you've heard of me.\"\n\n\"Oh, mum, the whole town is abuzz about Lady Penrose buying property and hopefully bringing some prosperity with her,\" the woman said humbly. \"You're not one of our local toffs, and the Penrose family is certainly known. They say you've done great things for Exeter.\"\n\n\"Well, we have done some things,\" Jenny admitted, blushing slightly. \"But I doubt it's anything to make a fuss about.\"\n\n\"As your hostess, mum, may I make a suggestion?\"\n\nJenny nodded.\n\nThe woman smiled. \"Tewkesbury isn't hurting bad like some other places, mum, but there's always room for new life and people are excited. Maybe play that up for them a little. Nowadays, not a bad thing for the landies to be accessible.\"\n\n\"Well, at the very least, I should be able to accomplish that much,\" Jenny said easily. \"So where would one go to hobnob with the locals and spread a little cheer?\"\n\n\"Oh, probably the Nottingham Arms then, mum,\" the woman said. \"While we have our own lovely fully stocked bar downstairs, it tends to attract more of a tourist crowd, not to mention the people staying here. If you want to find the local plebs, the Nott is best.\"\n\n\"Well then, I can do both,\" Jenny said simply. \"Maybe I'll hit up this Arms place tomorrow after my business at Priory Park. Seems as good a time as any to carouse. But tonight, a quiet evening in, hm?\"\n\n\"This room has both a shower and a tub, mum, so you can relax however you please,\" the woman said easily. \"Like I said, if you need us, we're here for you, it's no hassle. We're honoured, Lady Greymoor.\"\n\nShe nodded her head and exited the room, closing the door behind her.\n\n\"Even people who you've never met before seem to already like you,\" Wesley observed from his place near the bed.\n\n\"Give it time, they don't know me yet,\" Jenny replied, removing her coat and putting it in the closet before stretching and making a noise. She couldn't see him, because her eyes were closed, but she knew Wesley was staring at her chest. \"Mmmm, maybe a bath is in order, what? After a long day's drive, just what is required.\"\n\n\"I agree, mum,\" Wesley said, perking up at her suggestion.\n\n\"I thought you might, my dear...\" she said, smirking at him.\n\nSome fifteen minutes later...\n\n\"This... isn't quite what I pictured, I admit,\" Wesley said rather dolefully as he knelt beside the tub while Jenny was stretched out in it, luxuriating in the scented hot water. Unlike the bedroom and den, the bathroom had a modern feel to it, with beige faux marble walls, a glass shower, and a large tub, over which hung a large mirror. Jenny leaned forward and let the still fully clothed Wesley use the sponge on her back. At least his sleeves were rolled up.\n\n\"Don't worry, darling, I left plenty of hot water for you,\" she sighed gently, loving the feel of the sponge on her weary skin. She'd always been addicted to touches and caresses, certainly, but now that she was nearly fifty, she found that they were so much more cathartic because of how they soothed her body. Her hair was done up in a towel, to keep it from getting wet. \"Be a love and get the bedside guide, will you? It must have a menu in it so that we can order up.\"\n\nWesley sighed (but not too hard) and handed his mistress the sponge while he stood and went to find the menu. Jenny busied herself soaping up her front and he sighed again as he returned just in time to see her finishing off her breasts. Damn.\n\n\"That little stool right there should suffice,\" she said, pointing with a wet hand and indicating a small, wooden three-legged stool. \"You can sit next to the tub and read the menu to me while I continue my soak.\"\n\n\"Read the menu to you,\" Wesley said rather flatly.\n\n\"Well it is in your job description,\" she pointed out, turning to smile at him, resting her arms on the edge of the tub and her chin on her forearms. \"You have read your employment terms, haven't you? It's all very plainly laid out. As a matter of fact, the only thing that isn't in there is all the free sex you get from me.\"\n\nWesley had no counter to that, so he pulled up the stool and sat down, opening the menu while Jenny went back to relaxing in the tub and soaking.\n\n\"So... do I read the whole menu to you as is, mum, or do we narrow this down somehow?\" he asked.\n\nJenny pondered, looking up at the ceiling through mostly closed eyes. There was a small cushion where her head was resting, and she felt like she could have gone to sleep right there and then. But no, she'd because a prune if she fell asleep in the tub. And she was already paranoid about the hints of crow's feet she thought she'd seen at the corners of her eyes.\n\n\"Let's make this easy, then,\" she said finally. \"Find us an all-in-one sort of meal.\"\n\n\"That sounds easy,\" he tried not to mutter as he began scanning the menu. Jenny mostly lay still, occasionally caressing her body with the sponge while Wesley concentrated on the menu. He'd scented the water with a jasmine essence, one of her favourites, and she seemed to be in heaven.\n\n\"How about this,\" he said finally. \"There's an appetizer plate of small canap\u00e9s, a lot of local stuff. Then there's something called a 'groaning board', which seems to be a wooden tray that has breads, cheeses, meats, onions, and the like on it. Described as 'hearty peasant fare'.\"\n\n\"Oh, that does sound good,\" she mused, sitting up slightly. \"What kinds of items?\"\n\n\"Ummm,\" he said as he perused the description. He hadn't heard of a lot of these things before. Then again, he was a pretty fussy eater. \"Black bread... gherkins... Old Spots sausages... local sweet and sharp green onions... dried mutton... local mushrooms... annnd I don't know what Stinking Bishop is, but it sounds-\"\n\n\"They have Stinking Bishop?!\" Jenny blurted, sitting up suddenly and looking at him with a small splash. \"Splendid, I know what dinner will be.\"\n\n\"Good, because I don't,\" Wesley said, giving the menu a wry look. \"What is Stinking Bishop?\"\n\n\"It's a cheese, boy, a cheese,\" she sighed, shaking her head. \"Don't they let you eat cheese in Essex?\"\n\n\"Well, I-\"\n\n\"It's a type of double Gloucester cheese, only with the rind soaked in perry cider, so it's very pungent. What a delight!\" she exclaimed, pointing back at the den. \"Fetch the phone, please, and I shall order.\"\n\nWesley got up and tried to not trudge out of the room as he went on a hunt for the phone. Jenny waited patiently in the tub, caressing her breasts with the scented water. As long as he wasn't too obnoxious, Jenny decided that Wes could fuck her tonight. She could use the bliss prior to tomorrow's drudgery.\n\nShe listened as Wesley stepped around out in the room rather awkwardly, occasionally grunting and sighing in frustration. Eventually, he appeared in the doorway, holding an old-timey phone with a receiver and rotary dial. He'd stopped at the door, seemingly unable to get in any further. Jenny raised an eyebrow.\n\n\"Well, bring the receiver here,\" she said, holding out a wet, soapy hand. \"You don't expect me to get out of the tub, do you?\"\n\nWesley thought about his predicament for a moment and then began fiddling around, carefully dragging an ornate side table over to himself while holding the phone in the other hand. He put the phone base down on the tabletop, and then lifted the receiver, bringing it over to Jenny.\n\nThe coiled receiver cord was stretched taut by the time he reached her, and Jenny had to lean up and forward to take hold of it. Wesley turned and leapt at the phone base as it started to drag off the table, stabilizing it. Jenny waited patiently, holding the receiver.\n\n\"Excellent,\" she said finally. \"Now, go ahead and dial the front desk.\"\n\nWesley paused. \"I... don't know the number.\"\n\nThe countess' eyes narrowed at her swain, who felt an uncomfortable chill. He glanced over at the hotel's guidebook, which was still nearby her. He held the phone in one hand and then stretched his legs out as much as he could, leaning and then reaching with his hand, straining to lay his fingers on the book...\n\nHe groaned loudly as he gripped it with his fingertips, holding the edge desperately and drew himself up into a standing position. He looked like he'd run a marathon. Wesley glanced over at his mistress and she could see the exasperation in his eyes.\n\n\"Yes, I've no doubt the County Durham coal miners feel so bad for you,\" she said dryly. \"Find the number, dial, and I will order for us so that we eat sometime this evening.\"\n\nHe sighed wearily and found the number, dialing it. Jenny waited patiently.\n\n\"Good evening, countess!\"\n\n\"A very good evening to you as well,\" Jenny said cheerfully, holding the phone with one hand while caressing her soapy boobs with the other. Wesley just watched dumbly, as tended to be his habit. \"Sorry to bother, but I have come over all peckish, and I was hoping you could send up a groaning board with some red, and then a port to drink.\"\n\n\"Most certainly, mum! Any allergies?\"\n\n\"One of us seems to suffer from an allergy to effort, but that is of no consequence,\" replied the blonde woman, fixing her swain with a look. Wesley cleared his throat and looked away. \"But if you would please include some Stinking Bishop, I would be most grateful.\"\n\n\"Y'can have all you like, mum, it's a little strong for most of our guests, seemingly,\" the hostess said. \"Will thirty minutes suffice?\"\n\n\"More than,\" Jenny said agreeably. \"We will see you then. And thank you.\"\n\nShe waited for the line to go dead and then slid forward in the tub, handing the phone to Wesley. He hung it up and then hurried to replace the phone and the side table to their proper locations. He waited out in the main room, not really wanting to be around his mistress right now.\n\n\"Surprisingly peaceful,\" Jenny murmured to nobody in particular as she laid back again, closing her eyes. \"I never would have given Glostonians credit for it...\"\n\n***\n\nThe Church of St. Edmund, Mansfield, Nottinghamshire, May 1993...\n\n\"Do you, Jennifer Penrose, Lady of Greymoor in her own right, take this man, James Harding, Baron of Ravensworth-Dunharrow, to be your lawfully wedded husband?\" the bishop asked, looking down at the couple.\n\n\"I do,\" Jenny said simply, resplendent in white. Her lacy dress, while reasonably modest in design, did absolutely nothing to hide her figure, including the size of her bust.\n\n\"And do you, James Harding, Lord Ravensworth-Dunharrow in his own right, take Lady Jennifer Penrose, countess of Greymoor, to be your lawfully wedded wife?\"\n\n\"I do,\" James said, nodding.\n\n\"The rings, please,\" the elderly but kindly bishop said, smiling.\n\nMillie, Jenny's younger sister and maid of honour, brought David's ring to Jenny, while his best man brought hers. The bishop was speaking about the symbolism and sanctity of the rings, but Jenny was only partly listening, her mind wandering as she thought of certain things.\n\nKat... I wish you were here for this today... would you have been my maid of honour?\n\nWould I even be here today if I hadn't run away from you?\n\nI am happy, though. Wish me well, Kat, if you can...\n\nThe rings and personal vows were exchanged, and those inside the ancient church erupted in cheers and applause as the bride and groom kissed. The bride and groom rushed out the door, followed by the attendants, and were greeted by yet more cheering and applauding people, throwing confetti and rice. They waved to everyone before clambering into the waiting Rolls-Royce.\n\n\"So, do I get to find out where we are having our honeymoon?\" she asked, smiling at her newly minted husband before kissing him.\n\nJames laughed and poked her nose. \"Jennifer Penrose-Harding, your curiosity is insatiable. And, per your own very specific instructions, I am to not tell you until we are at the airport. However, I remembered your two absolute no-go's... back to Australia, which you so recently escaped, and Canada, where you went to boarding school.\"\n\n\"One does want to see other corners of this big blue marble, after all,\" she reasoned, looking out the back window as the vehicle pulled away. She hadn't told James about Kat. She couldn't.\n\n\"Well, I am afraid you must endure the wedding reception with our parents and families before we can get away,\" James pointed out. \"It would be nice to have an earldom to come back to, rather than being disowned for eloping.\"\n\n\"Heavens, if you have to work that hard to get disowned, then the House of Penrose would make your head spin,\" Jenny laughed. \"I could get exiled for not using a fork correctly.\"\n\n\"There aren't many families as old or older than yours, Jen,\" he said, settling back in his seat and holding her hand. \"The Cerdics, the Barclays, the Blackwells, the Wessex...\"\n\n\"Well, they can all be found in Will's Domesday Book, that's a little different,\" Jenny mused, letting her mind wander at the mention of one particular name he'd brought up. \"They're all related to the Plantagenets; I'm just a mutt from Coventry and Exeter.\"\n\n\"There's never been a more lovely mutt than yourself then, Jenny Penrose,\" James said gently before leaning in and kissing her. She melted into the kiss, losing herself. She did indeed love this man, and she would be a very happy wife. Whatever her struggles with her past, she would endure them. She had to find her own happiness, and hoped Kat had found hers, with the man, whoever he was, that Jenny had moved aside for.\n\nLife would go on.\n\n***\n\nA posh hotel room in Tewkesbury, the present...\n\nJenny was lying on the bed, groaning and writhing in pleasure, groping her breasts as Wesley lay between her spread legs, lapping at her wet, hungry pussy. He was definitely making up for being annoying earlier that night, what with the incidents in the bath, and then his almost Scottish stubbornness in refusing to try the food he wasn't familiar with. Jenny ate more than she should have, because she didn't want to send uneaten food back and worry her hosts.",
        "Just as well that she didn't intend to kiss him; she'd eaten all the Stinking Bishop cheese herself and even after brushing her teeth and using mouthwash, she doubted the aroma was gone, or would be before morning. She needed it to be gone by the time her meetings happened.\n\nWesley seemed to know he'd been a pillock all day and was determined to get the red out of his ledger, because his tongue was so deep inside his mistress that it felt like he was tickling her kidneys. She shivered and cooed lustily, pinching and tugging at her nipples and undulating against his face. She was already heading toward her third orgasm, and she was pretty much obligated at this point to fuck him and let him cum. The only question was whether she'd make him wear a condom.\n\nNo, it would ruin the moment.\n\nJenny seized up and bucked, her hips pressing off the mattress as she groaned through clenched teeth, cumming again. Her legs clamped around his head, forcing him up into a kneeling posture as she pushed hard against him. He held onto her hips, knowing to not stop, his tongue lashing her increasingly wet insides.\n\nJenny collapsed back onto the bed, panting heavily, her normally pale skin flushed pink and shining with sweat. Wesley knelt up wearily, his hands on his thighs while he caught his breath. He didn't have long, though, before Jenny rolled herself onto her stomach and then got on her hands and knees. She reached under and used two fingers to pull her wet netherlips apart, exposing her inner pink to him. She looked behind herself at him.\n\n\"What are you waiting for, boy, an engraved invitation? Get a move on...\"\n\nThe orders given, Wesley knew to not make her wait. He, more than anybody at Heatherly, except maybe Elowen, the ostler girl, was familiar with Jenny Penrose's libido. Even though she was apparently almost fifty (he never would have guessed), she had the sex drive of a depraved teenager. He took hold of her hips and planted the knob of his erect cock against her dripping entrance and she mewled in pleasure when he teased it up and down the opening.\n\n\"No messing about, Wes,\" she breathed, squirming back against him. \"Just slam it home and see if you can make me scream and wake the neighbourhood...\"\n\nWes found himself hoping she wouldn't actually do that, but he followed her instructions nonetheless. He pushed forward hard with his hips, driving his cock deep inside his mistress. Jenny grunted and keened at the welcome penetration, relieved to have a cock inside her. She began slamming herself back against Wesley, while he thrust forward, matching her rhythm. She'd taught him what she liked, and he was diligent in making it happen to the best of his ability.\n\nJenny panted and moaned, grinding herself on his cock, squeezing him with the vaginal contractions she was so expert at. She wanted to get one more orgasm out of the deal, and she would let him cum inside her. After that, it would be time for sleep. A shower in the morning before breakfast, and then on with the day.\n\nWes' cock touching a certain spot inside her broke her reverie and reminded her that she was actively fucking. She returned to pounding back on his tool, one hand reaching up and groping her breasts again. The fingers of the hand she was supporting herself on clenched the pillow at the head of the bed.\n\n\"Good, Wes, good...\" she panted in a whisper, wet, warm pleasure blooming through her. \"Yes, right there, love... ohhhhh, goodgoodgood...\"\n\nShe wasn't trying to hold back, and she could feel that her swain was unlikely to last much longer. This suited her just fine, since she was craving another orgasm. She ground back hard, feeling Wesley grip her hips tight and arch his back, getting in as far as he could, letting out a whimper. Jenny's neck craned and she looked at the canopy above before closing her eyes, riding out this final moment...\n\nJenny's entire body blossomed in ecstasy, and she fought to contain the scream in her throat. Wes was gasping as he jerked behind her, and then she was being filled with his hot cum. Her pussy tightened like a vise around him, clenching fiendishly as it milked him greedily of his essence. This erotic twining lasted almost half a minute before Jenny sighed contentedly and sank down onto the bed, her mind still scintillating with bliss.\n\nSlowly, she rolled over onto her back, noticing that Wes was still kneeling where he'd been, and was back between her legs, rubbing at his face wearily. A quick glance down indicated that he was still hard, the top still oozing and threatening to make a sticky mess of the bed. She smiled and beckoned him down to her.\n\nWesley gingerly lay down on top of his mistress and felt her reach between them and find his still-hard cock, slipping it back into her waiting pussy. She sighed in pleasure and then wrapped her arms around his back, smiling up at him. He could think of only two times she'd ever kissed him, at least, as he would have imagined a lover's kiss, deeply, and with tongues snaking around one another. But both of those times, he'd fucked her good and hard, and she'd cum many times.\n\nTonight, he got an affectionate and rather motherly kiss on the nose, despite being deep inside her.\n\n\"Well now, that went some way toward making up for your obstreperous behaviour at dinner,\" she said finally. \"You were quite the brat about the cheese, young man.\"\n\n\"I'm sorry, mum,\" he said rather lamely. \"I'm not good about new foods.\"\n\n\"Consider yourself lucky that it's the Countess of Greymoor you're fucking rather than her younger sister, the Lady Chudleigh,\" Jenny said somewhat ominously. \"Millie, poor girl, has a very spotty relationship with dairy, and if you had made her mad at dinner, she might have required you to sleep under the covers as penance.\"\n\nWesley swallowed. He'd met the countess' younger sister only once so far, the aforementioned Lady Chudleigh. She seemed nice enough, and he remembered that she was four years younger than his mistress, now in her mid-forties. She had dark hair, as opposed to the countess' blonde, but they shared the brown eyes. Whereas the countess' eyes were cheerful and often glinting with humour and mischief, the younger sister's were often resigned and serious.\n\nSo if she was gassy after eating cheese, Wes would need to remember to not piss her off. He wouldn't put it by the countess to loan him to her sister as punishment, if he was honest.\n\n\"So, young man,\" she said cheerfully, even while she kept his cock deep inside herself. \"How do you plan to avail yourself of your free time tomorrow?\"\n\n\"Haven't really thought about it, mum,\" he said, shrugging as much as he could, given that they were horizontal and superimposed, her legs wrapped around his thighs. \"How long d'you think you'll be?\"\n\n\"Ugh, it could be hours, on and off,\" she sighed, grimacing. \"However, profits wait for no woman. Just keep your phone handy, and try to not fuck any local girls, in case I have a free moment.\"\n\n\"I'll... try not to, mum.\"\n\n\"That's my boy,\" she said sweetly, poking his nose and smiling. \"Go turn out the lights and let us get some sleep. Tomorrow is a busy day in Tewkesbury.\"\n\nWesley pulled himself out of Jenny, and she moaned in pleasure. He walked awkwardly over to the lights and turned them off before wiggling to the bathroom to clean himself off. Many nights, she cleaned him herself, sucking their mingled cum off his cock, but clearly the countess was looking to sleep, and he had to see to his own needs in that regard.\n\nThe room was dark and she was turned onto her side already as he slipped into bed. He cuddled up, spooning her and putting his arms over hers, as was the habit on the nights he slept in her bed. Back in Heatherly, he was always up and out of her room and back in his own before her handmaid came to wake her. He wasn't sure exactly how poorly kept a secret his trysts with her were, but she clearly had no intention of making it too damned obvious.\n\nHere, though, in Tewkesbury, a full two counties (three, if one included Bristol) away from her ancestral home, she seemed not to mind at all if he stayed with her the whole night. He'd half-expected to find himself on a fold-out couch in the corner or some such thing. But here he was, in a very comfortable bed, nestled into this gorgeous woman he was privileged (and paid) to fuck, and things didn't seem so bad.\n\nHe was looking forward to the rest of this trip.\n\n***\n\nHelgrum Hall, Nottinghamshire, March 1997...\n\n\"Mama!\" the young boy exclaimed, rushing up to hug his mother as Jenny walked through the foyer, handing her coat to the waiting valet.\n\n\"Sammy, my little man!\" Jenny exclaimed in delight as she swept him up into her arms and spun him around, laughing gaily. She hadn't been gone all that long, merely two weeks down to Heatherly to conduct some negotiations for her father, but it might as well have been two thousand years to her son. \"My goodness, you've gotten so big since I left! What are you, two furlongs tall now? You feel like you weigh twenty stone!\"\n\n\"No, mummy!\" he cackled as she smothered him with kisses. \"But I've been drinking my milk and eating my greens, so I'll be big and strong for you.\"\n\n\"Ooh, goodness,\" Jenny said, bouncing him up and down in her arms. \"Soon you'll be protecting me from the dragons that try to eat my car when I'm driving.\"\n\n\"Go 'way, dragons!\" Samuel yelled, waving his little fist at the door, and the dragons doubtlessly waiting outside. \"My mama, not yours!\"\n\n\"Just remember to share, Sammy,\" his father said as he entered the foyer, carrying Annabelle, Samuel's twin sister. \"If I have to share your mother with the world, you do too.\"\n\n\"There's my little lovey-belle!\" Jenny cooed as she put down Sammy and took her daughter in her arms, hugging her tight. Annabelle was much quieter than her brother, but nobody could bring out her spunky side like Jenny. \"How's my angel?\"\n\n\"I missed you, mama,\" Annabelle said, kissing her mother's cheek before squirming down out of Jenny's arms. \"Look, I can curtsy like a lady now.\"\n\nShe demonstrated and Jenny returned the gesture with her typical grace before hugging her husband and giving him a loving kiss. \"Mmmm, how I've missed you all.\"\n\n\"How are your parents?\" James asked, taking her arm and walking her back toward their favourite study, each of them holding a child by their outer hand. \"I'm sorry the kids and I could not come with you, but I was needed-\"\n\n\"Tosh, Jim, your work at the hospital is more important than paying obeisance to my cranky old goat of a father,\" Jenny chided. \"But for the record, they are well. Mother says hello, and she misses you all.\"\n\nJames shrugged. \"We could go down to Heatherly for Victoria Day,\" he suggested. \"Fireworks and carrot-crunching rhotacisms for all.\"\n\nShe giggled. \"Papa's been on a kick recently drinking a local beer from Ilfracombe, and I have had simply too much of it for my liking. A proper Midlands stout is what I crave.\"\n\n\"Aiden,\" James called to a nearby attendant. \"Bring some Magpie stouts to the east study, please. And two Tizers for the little folk.\"\n\nThe young man named Aiden nodded and hurried off to accomplish his task.\n\n\"James, you know I don't approve of Sammy and Annabelle having sugary drinks,\" Jenny said, trying and failing to sound stern. \"At least, not until they are old enough to mix them into a proper beverage.\"\n\n\"Only fifteen years to go, then,\" he said cheerfully as they made their way toward the study. Their children had reached the hyper stage of their mother's return, and were running around the room, laughing and showing off for her while Jenny and James settled into a loveseat, ignoring their antics. \"What is a good trip, Jen?\"\n\n\"Oh, you know papa, he's always testing me,\" Jenny replied, shrugging. \"Making sure the expensive education I continue to receive in business and property management is not a waste. He had me conducting negotiations for some lots he's thinking of acquiring in Cornwall.\"\n\n\"I assume those went well, given that you were involved,\" he said.\n\n\"Even he couldn't be displeased with the outcome and was willing to overlook me missing portions of my new business courses, despite the fact that his summonses were the reasons I missed them at all,\" she pointed out. \"He is as impossible as ever, is the Earl Greymoor.\"\n\n\"At least he's not loopy like old Preston Blackwell,\" James mused. \"Luckily the rest of those people are sane, because apparently Lord Hastings has gone quite potty.\"\n\n\"I knew a girl from the Blackwell family when I was going to prep school in Canada,\" Jenny said.\n\n\"Really,\" James said, smirking. \"What did you make of her?\"\n\nJenny thought about her answer. \"She was... it's hard to know what to say, to be honest. She was frighteningly intelligent, possibly the smartest person I'll ever meet. Even when you got to know her, you didn't know what to make of her all the time. Very enigmatic.\"\n\n\"Why was she going to school in Canada?\" he asked, while Sammy and Annabelle continued to rampage around the room.\n\n\"Oh, the senior Blackwell line emigrated to the colonies back in the middle of Vicky's reign,\" Jenny explained. \"They relinquished the titles, which is how the current line took them over. The chance to make fortunes in the colonies meant more than stuffy titles, seemingly. No, this girl was Canadian.\"\n\nJames considered. \"I wonder if she ever met Lord Hastings.\"\n\n\"Now that you mention it...\" Jenny laughed, recalling.\n\n***\n\nBlackwell Manor, Toronto, September 1983...\n\n\"NAAAAHHHH!!!\" shouted a voice from somewhere inside the manor, followed by the crash of something expensive-sounding. \"WHERE IS HE?!\"\n\nKaren looked up from her book as she sat on the floor of the study, frowning at the ceiling. Several of the young girls with her jumped in fright. Jenny seemed unconcerned, just merely curious.\n\n\"Kar, what was that noise?\" Colleen squeaked in fright, huddling into her study partner, Alison, who also seemed unnerved.\n\n\"That, ladies, is Marquess Preston Blackwell, the Lord of Hastings, relative of my family, here for a visit,\" the young bronze-haired girl said. She was only fourteen, but she was remarkably self-possessed, and Jenny was utterly enthralled with her. Thankfully, Ekaterina, or 'Kat', as Jenny was allowed to call her, seemed to feel the same way about the blonde English girl. They were best of friends and loved each other very much.\n\n\"Why is he doing those things?\" Alison asked, her study book clearly forgotten as she hugged Colleen to her. Several other girls were also looking very frightened, huddling close as if for protection. It was like watching orangutans, huddling together, meeping in fright.\n\n\"One can only guess,\" Karen sighed, shaking her head. Near the back of the study, her mother, Miranda Gordon, sat in a comfy chair, reading unconcernedly and seeming unfazed by all the racket. Nearby her, Jordan, the Manor's seneschal, sat quietly, looking around curiously at the sounds. Jenny adored Miranda, she was so much more fun than her own mother, Sarah Rackham. \"He certainly makes a racket, doesn't he?\"\n\nSeconds later, Karen father, Jonathon Blackwell, patriarch of the elder line of the family, slipped into the room and closed the door behind himself, bowing his head and sighing. He finally looked up, seeing all the young girls from his daughter's school, sitting on the floor and staring at him. There were twelve of them, here on a field trip to nearby historical sites, and using the Manor for the weekend.\n\nSo, of course, Lord Hastings had chosen this particular week to visit the colonies and see what his extended family was up to. The problem was, he was crazy.\n\n\"Father,\" Karen said, standing up as he walked into the room and sat down wearily into a chair. She pointed at the door. \"Why must Lord Blackwell be here? What a racket. Thundering around, bellowing like a mastodon with a hernia.\"\n\nBoth Jenny and Miranda stifled snickers. Even at the tender age of fourteen, Kat had a wonderful turn of phrase.\n\n\"He arrived unannounced, kitten,\" Jonathon replied, rubbing at his face. For Kat's father to show exasperation, he must have been really stressed out, Jenny thought. She'd met him several times before, and he was always a model of composure. \"And he is the Marquess of Hastings, I couldn't very well turn him away.\"\n\n\"What is he even shrieking about?\" Karen pressed, clearly irked about this disruption.\n\n\"Kitten, I'm not even entirely sure,\" Jonathon replied. \"But he seems to think that Ashton Blackwell is hiding somewhere in the house and is determined to find him and have it out with him. He's carrying and waving around a cricket bat.\"\n\nAs if to emphasize his statement, another smash could be heard from somewhere. Jonathon winced. That crash sounded very Tang Dynasty.\n\nKaren frowned again. \"Ashton Blackwell has been dead for over two hundred years, father.\"\n\n\"Sounds like someone is on their way to the giggle factory,\" Jenny added, causing several girls to snicker, whereas Kat and her father just turned their heads in unison and looked at her. She cleared her throat and stopped talking.\n\n\"This is unacceptable, father,\" Karen declared, narrowing her eyes at the door. \"The girls and I have work to do, and-\"\n\n\"HA!!!\" Lord Hastings shouted as the door to the study burst open and he came in, waving the aforementioned short-handled cricket bat around. Several girls shrieked in fright, scrambling back toward Miranda while Jonathon just groaned in despair, hanging his head. Jenny stayed still, determined to not move, while Karen stood defiantly nearby.\n\n\"DAMNATION BLACKWELL, WHERE IS HE?!\" raged the marquess, looking around angrily, flecks of spittle leaving his mouth as he shouted. \"WHERE IS HE?\"\n\n\"Who, my lord?\" Jonathon said wearily, standing again and turning to face his guest. He had a resigned look on his face. Jordan also stood dutifully, although he stayed near Miranda, which is what Jonathon would want him to do.\n\n\"DAMMIT, MAN, YOU KNOW WHO!\" shouted Preston Blackwell, the Lord of Hastings. \"I'M LOOKING FOR THAT COWARD ASHTON! HE HAS MY CARDS!\"\n\n\"Your... cards...\" Jonathon faltered, not sure what was happening.\n\n\"MY LUCKY CARD DECK!\" spewed the marquess, going purple, his ash-blond hair sticking out from his head at spastic angles. \"BY GOD, I'LL TAKE THIS PADDLE AND DRIVE IT-\"\n\n\"As you can see, Lord Hastings, he is not in here,\" Jonathon said hastily, hoping to spare the children any unpleasant details the marquess may have been about to loudly impart. \"Perhaps he is out in-\"\n\n\"HE CANNOT LEAVE THE HOUSE, YOU DAMNED COLONIAL, HE'S A GHOST! NAHHH!\" Lord Hastings continued to rant, still red of face. Behind him in the doorway, two attendants he'd brought with him were peering in, hoping to not be noticed by their lord. They looked frightened.\n\nHastings pointed a trembling finger at Jonathon, his blue eyes flashing. \"TELL ME WHERE HE IS, BLACKWELL, OR SO HELP ME, I'LL-\"\n\n\"Lord Hastings!\" Karen said angrily, stomping up to the marquess and grabbing the cricket bat out of his hand. Before he could register what had happened, she spun around and swatted him across the seat of the pants with the face of the bat, hard. There was a very audible slap! sound, like treated willow wood impacting tweed. The marquess stood up, going rigid, letting out a grunt, followed by a squeak, his eyes wide.\n\nEveryone stared at Karen in astonishment. Even the servants outside. Had the young mistress really done that?\n\n\"Lord Hastings, that will be quite enough!\" Karen said harshly, standing in front of him now and glaring up at him. Hastings was still standing still, his eyes wide, as if he didn't dare move.\n\nJenny watched on in utter amazement, her eyes shining in admiration. She'd never seen a marquess' ass get beaten before!"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance",
        "flashback",
        "lesbian",
        "threesomes",
        "humour"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mike-and-karen-ch-22"
}