{
    "title": "Reinventing Emma",
    "pages": [
        "You hear stories of people who walk away from their lives and start over. I was sixteen when I realized that's what I wanted to do. The only problem was where could I go? Sure, other sixteen year olds had run away from their lives in the past, but statistically things don't work out well for most of them, especially the girls. I had reason to know. My grandfather was a minister and had helped more than one runaway over the years. The stories these kids shared were never good. Frankly, many were downright horrifying. \n\nNo, as bad as things were, they weren't bad enough for me to run away from home and chance facing that kind of life. I mean, it's not like my parents didn't love me. They did. I knew that. The fact that they were so clueless wasn't even that odd. Aren't most parents that way when it comes to their kids? \n\nOkay, maybe mine were a little more oblivious than most, but they came by it honestly. They were good people brought up by good families. They weren't exposed to the darker side of life. I think to some degree it was by choice, at least in my father's case. Dad never really wanted to follow in his own father's footsteps. If he had he might have had some idea of how to help me. \n\nMy father graduated college with a degree in architecture. He joined the Peace Corp at his father's insistence. I think it was part of deal they made before grandfather agreed to pay for dad's education. It sounded like something he would do. Knowing Grandfather, he probably figured that not only would the Peace Corp, a worthy institution in his opinion, gain from father's skills, but that my father would also gain from the experience. I don't think either of them expected daddy to meet the woman he was going to marry while overseas, although I wouldn't put it past my grandfather. \n\nMother was also a volunteer. My parents quickly fell in love and decided to get married when they returned to the states. Mom was a housewife, but spent most of her time working on one committee or another after they settled near my father's family. It was a small town where dad's father was the local minister and had been since before my father was born. I spent a lot of time with my grandfather growing up. In many ways, he was my hero. \n\nFor the first fourteen years of my life we lived in our small town and I was happy being the minister's granddaughter. I knew everyone in town. I had a good group of friends. We had fun together without getting into any serious trouble. In short, I lived an idyllic life. \n\nAll that changed, at least for me, when we moved. My father had done well for himself as an architect and received more than one job offer over the years from big companies. I'm not sure what was so special about the one he decided to take. It entailed us moving to the big city which I think was a plus for my parents. They jokingly called the move their midlife crisis. \n\nMe? I was just as excited to go. Sure, I'd miss my friends, but I could always talk to them on-line. It's not like we lived in the Stone Age. Besides, I fully planned on following in my grandfather's footsteps when I grew up and what better place than the big city to get experience helping people? Yeah, I guess my parents weren't the only clueless ones. Of course, my naivet\u00e9 disappeared not long after I started high school.\n\nSome days when I look in the mirror I can still almost make out the girl who left our small town staring back at me, but it was an illusion. She was gone. I knew that. \n\nI won't bore you with the gory detail on what happened. Let's just say that the high school I went to had more than enough people who could have used my help. Unfortunately, most of them didn't want it. There was one particular senior boy who took offense at my attempts to help him. I should have backed off. He gave me more than enough warning. I never should have accosted him at that party. He was drunk, but I just knew that given the chance I could help him.\n\nStill, that didn't give him the right to do what he did to me. Well, him and his two friends. The threats they made afterward about what they'd do to me if I ever told anyone what happened were unnecessary. I'd learned my lesson that night. \n\nYou see, up to that moment my life revolved around God and a desire to do his works. They stripped me of that belief along with my innocence. The problem was that without God I was lost. He'd played such an important part in my life up until that moment that nothing could fill the void. Of course, that didn't stop me from searching.\n\nI tried all sorts of things. I drank. I tried drugs. I'd slept with more guys than I cared to think about. In short, I developed a well-earned reputation, none of it positive. It didn't helped. I was pretty messed up when it finally all came to a head.\n\nI'd done my best to hide what I'd become from my parents. I succeeded reasonably well for a while, but by the time I hit the summer before my junior year there was no hiding it. Hell, I could barely control it. My parents were at wits end by that point. \n\nThat's when they decided to send me back to our old town for the summer. I tried refusing to go, but they didn't give me a choice. I didn't see the point. I'd lost contact with all my friends and the last person I wanted to see was my grandfather. Ever since that night at the party I couldn't even think about him without being both guilt ridden and angry. A part of me hated him for making me think God was the answer to everything. A bigger parted hated myself for feeling that way about him.\n\nMy grandfather wasn't nearly as clueless as my parents. Maybe it was because as a minister he'd seen more of the darker side of life than them. I remember the first hug he tried to give me after I arrived from the airport. I stiffened like a board. That didn't stop him. I pushing him away, but that didn't blind me to the compassion, understanding and love that showed in his expression. I hadn't said a word, but I could tell he knew. Maybe not the details, but the details didn't matter. \n\nSome of my old friends tried to reconnect during that summer, but our meetings were awkward at best. I wasn't the girl they remembered and seeing them and the innocence they still held on to was more than I could stand, especially as I dried out. \n\nThere was no alcohol in my grandfather's house and if our town had a local dealer it wasn't anyone I knew. I would have tried picking something up at the liquor store, but I knew there was no point. Mr. Simmons would never sell my anything. He was a good man and knew I was underage. Besides, even if he wasn't that type of man, no one in our small town would be stupid enough to cross my grandfather. \n\nI'm not sure if my old friends started avoiding me first or I started avoiding them, but halfway through the summer I was spending a lot of time alone. That wasn't a good thing without the alcohol and drugs to subdue my thoughts. That's when my grandfather took a sabbatical from the church and focused all of his attention on me.\n\nGrandfather was patient with my outbursts. I refused to listen whenever he tried talking about God, but I still loved hearing his voice. It was oddly calming. We began to bond once more despite my resistance. \n\nGrandfather didn't preach to me after I blew up at him the first couple of times. Instead, he started telling me stories about my grandmother. I knew them all by heart, but I listened just the same. I always wished that I'd gotten the chance to know her, but she was gone before I was born. \n\nOne day he was talking about how they first met, but this time the story differed from what I remembered. I knew they met at a fair, but I always pictured it as something sweet and romantic. You know, two kids bumping into each other and it being love at first sight. \n\nIt turns out that when I was younger grandfather had been editing what actually happened. Grandmother wasn't an innocent country girl when they met. She was an actual carny. She travelled with a gruff group from town to town setting up the rides and games for the local fairs. My grandfather used the word worldly to describe her, but I knew what he meant. He even went so far as to describe a tattoo she had on her pelvis. It was a butterfly. \n\nI didn't bother mentioning that my own tattoo was in the same place. Of course, mine was a small thorny, colorless rose. It signified a lot of things to me, most of which I tried not to think about.\n\nThe stories about my grandmother became more colorful after that. Mostly, they were about their first couple of years together. She was a good woman, but in no way a saint. Frankly, by the time he was done sharing them all it was weird to realize that in some ways I now probably knew my grandmother better than my father did. Dad knew her as his mom. I now knew her as a human being. Not a perfect one by far, but not a bad one either. \n\nFor some reason it helped a lot knowing that she'd had a rough life growing up and still somehow found my grandfather and happiness. I doubted that I would have that kind of happy ending, but it let me know that I didn't have to keep on going in the direction I was heading. \n\nYeah, my grandfather was one tricky old man.\n\nAbout a week before it was time to go home we sat in the family room and I started opening up to him about my life. It wasn't intentional. The words just started flowing. If anything I said horrified him then he did a good job hiding it. All I could see was love and compassion when I looked into his eyes. When I was done he held open his arms and I fell into them, sobbing uncontrollable. \n\nI fell asleep like that and woke up the next morning laying in his lap with a blanket tossed over me. We were still on the couch and the sun was shining down on us. My grandfather eyes were open as he smiled down at me. I doubt he slept a single wink the entire night. For the first time in a long time I felt safe. \n\nGrandfather being grandfather, he brought up God one last time before I left. I cut him off and told him in no uncertain terms that I didn't believe in Him anymore. Grandfather just laughed and said, \"Bullshit.\" I was stunned. You have to understand. My grandfather didn't curse...ever. He then added that there was no way I could be so angry at someone who didn't exist. It gave me a lot to think about on the flight home. An hour later I had to admit that yes, I still did believe in God. I just wasn't all that happy with Him at the moment.\n\nA few hours later when my plane was landing was the moment I realized that I was sixteen and wanted to walk away from everything I'd become and start over. It's also when I realized that doing so wasn't going to be easy. I decided not to do anything too drastic until I had a plan. I had a week before I had to go back to school. I figured I should be able to come up with something before then. \n\nOne option was to run away, but like I said already, as bad as things were I didn't want to do that. Deep down, I knew that it would only make things worse. Plus, it would hurt my parents and they didn't deserve that. Another option was to wait until I was eighteen before disappearing. I could walk away from my old life completely at that point, get a job and make a life for myself, but what kind of a life would it be? I didn't have a particular gift that I could use to make money. I'd probably end up in some minimum wage job just fighting to pay the rent. Besides, what was I supposed to do for two years? \n\nI mulled over joining the army. I could do that at seventeen with parental consent. That wouldn't be easy to get, but I thought I could convince them to agree if I got grandfather on my side. The thought of leaving my current life behind a year earlier was very tempting, but in the end I decided not to take that path either. I loved my country, but I could never really picture myself in the army. \n\nI knew my parents plans were for me to go to college, get a degree and hopefully meet a handsome young man soon after graduating that I would marry. I would then have a couple of kids and live happily ever after, but that was never going to happen. First of all, with my grades I'd be lucky to get into community college. \n\nSecond, as hard as I tried, I couldn't picture the type of guy they were thinking about being interested in a girl like me. I was damaged goods and I knew it. Besides, after everything I'd been through could I really relate to a guy like that? Get serious. \n\nStill, I wouldn't mind graduating college and being able to go off on my own and get a good job afterward. It was very tempting, but six years seemed way too long of a wait to break free of the life I was leading. That was until I realized that if I went away to college somewhere where no one knew me, I wouldn't have to wait until graduation to change. I could remake myself into the person I thought I wanted to be my freshman year and try it out before entering the real world. That thought stuck with me so strongly that the day before I returned to high school I decided to go for it. \n\nI knew it wasn't going to be easy, but with a plan for my life once more I was able to focus on what needed to be done. I initially thought the hard part would be getting my grades up. It wasn't. I'm not saying it was easy, but it was easy then some of the other things I had to face. I did my best to stay away from the bad influences at school, but that meant dumping most of my so called friends. I mean, I stayed in contact with a few people, but even they didn't understand the changes in me.\n\nMom saw how difficult it was for me and asked if I wanted to go back to live with my grandfather. I could finish school at there. I told her no because in some ways that would have been even harder. I was working toward the new me, but that didn't mean I could go back to the way I used to be. I'd never be that na\u00efve again.\n\nTwo years later I'd succeeded. I picked my college carefully. I made sure that no one I knew from either my old hometown or my high school was going to the same place. It was a lot harder than you might expect. In the end, I picked a school way up north far from everything I knew.\n\nI spend the summer before leaving making myself ready. I spent more time choosing the type of clothes I'd bring with me than I did in actually picking the clothes themselves. Where I grew up girls mostly wore dresses. In high school I dressed dark and usually in pants. I didn't want to be either of those people anymore. \n\nI decided that for college I'd be the girl next store. You know, friendly without being slutty, smart without being a snob. I changed the makeup I was wearing. I practiced how to act for weeks before my parents dropped me off.\n\nMy fear grew as the day neared, but so did my excitement. I wanted real friends again. Frankly, I needed them...which brings us to the beginning of my story. \n\n**********\n\n\"Hello?\" I called out nervously as I walked into what would be my room for the next two semesters. I'd chosen my roommate with care from the site the college offered for incoming freshman months ago. Actually, I spent a couple of weeks obsessing over quite a few girls before I settled on Jenny. She was cute, but not really pretty. She was a good student and was part of a couple of clubs at her high school. She had a close knit group of friends, but didn't seem particularly popular based on her Facebook page. I thought she was perfect for what I was looking for in a roommate. In short, there was nothing about her that would draw unwanted attention to me.\n\nIt's not that I wanted to hide from the world, but by this point in my life I could do with a little less notoriety. I needed time to figure out exactly who I wanted to be. I'd spent two years working toward this day, but honestly now that I was here I was scared to death. What if I couldn't pull it off? What if I could, but I didn't like the new me any better than I did the old? \n\nThe worst part was that old saying was definitely true. No plan survives contact with reality. Or was that the enemy? I guess it doesn't matter. What does was that despite all my planning and research, Jenny waited until two days before we were due to arrive to let me know she was dropping out. \n\nOkay, that's not quite fair. First of all, you can't drop out if you've never actually been to college. And second, she decided to take a year off, not quit. She didn't get into specifics as to why and honestly, I didn't ask. We weren't really friends yet so it didn't seem right to pry. Besides, I had bigger problems. How was I going to find a new roommate in two days? \n\nThe answer was that I wasn't. I had to leave it up to fate. Needless to say, I entered my dorm room with more than a little trepidation. \n\nMy new roommate was already inside, but she was sitting at her desk with a pair of headphones on and didn't hear me enter. She was watching some movie on her laptop. All I could see from behind was that she has long dark hair, not very different in color than my own shorter shoulder length locks. I walked in and dropped the bags I was carrying on the free bed.\n\n\"Hello?\" I repeated. By this point I was close enough for her the hear me. She jumped a little before turning, smiling and pulling off the headphones. She stood a moment later. Definitely not what I was hoping for and I wasn't happy about it. This girl was far too pretty for my liking with her pale skin and deep brown eyes. She would draw a lot of attention which meant guys would be sniffing around. I really had enough of men for the time being.\n\n\"Hi!\" she smiled. \"You must be Amelia. I'm Sophie.\" Well, at least she was friendly.\n\n\"Call me Emma,\" I smiled in return. \"All my friends do.\" Well, all my new friends would anyway. It was a new nickname, just like I was a new me. \n\nAmelia was what I was called when I was younger. Everyone at high school knew me as Mia. I remember thinking how great it would be to be called that when we moved to the big city. It sounded exotic to me at the time. Like I was some foreign princess. That hadn't worked out all that well. I said a silent prayer that things would go better for me as Emma.\n\n\"Emma,\" she said thoughtfully. \"I like that. I wish I could come up with a better nickname for Sophia, but Sophie is the best out of the bunch. Would you believe my mother actually suggested Fifi once?\" \n\n\"Seriously?\" I frowned. Who would call their daughter that?\n\n\"I told her if she wanted to call someone Fifi she should get herself a poodle.\" Friendly and a sense of humor. Things were looking up.\n\n\"I like the name Sophie,\" I offered. She rolled her eyes, but continued to smile. I found myself warming to my new roommate despite the fact that she was unplanned. I was still worried that she'd draw too much attention to us, but there was little I could do about that.\n\n\"Do you need help unpacking?\" she asked kindly. Mom and dad took that moment to bustle in with some more of my stuff. I introduced them and we all spent the next twenty minutes setting my half of the room up. I didn't have all that much personal stuff because I'd left most of that at home since it wouldn't mesh with the new me. \n\n\"I love this top,\" Sophie said at one point as she helped hang up some of my clothes. I nodded and smiled in thanks, wondering what she would think if she knew that most of what I'd brought with me had never been worn before. \n\nMia wouldn't have been caught dead in any of them because they were far too colorful and feminine. The funny part was that Amelia would have thought of most of them as not feminine enough. No, these clothes were all Emma. \n\nThey say clothes made the woman and they had no idea how much I hoped that they were right. I had more butterflies in my stomach than I cared to think about. I was waiting for someone to see me with my new look and burst out laughing, but it didn't happen, at least not yet.",
        "\"I like it too,\" mom said with a happy smile. \"I was so glad when Amelia let me take her on a shopping spree for college.\"\n\n\"My wallet didn't like it all that much,\" dad interjected. \"But I do like the new look.\"\n\n\"Okay, it's time for you two to go,\" I said, swallowing with some difficulty. The last thing I wanted was for my parents to ruin everything by talking about the changes I'd made this past summer as I got ready to leave home. \"I'm hungry and there's a freshman orientation meeting later tonight.\"\n\n\"Do you want to go out for dinner? You too Sophie. My treat?\" my father asked. That would never do.\n\n\"Thanks daddy, but I want to try the food on campus.\"\n\n\"Are you sure? You know what they say about college food. Girls don't put on the freshman fifteen by accident you know.\" I knew he was teasing me and normally it was no big deal, but right now all I wanted was for him to take mom's hand and leave. \n\n\"It's not like the extra weight would hurt her,\" mom sighed. \"She's still far too thin.\" \n\n\"I like the way I look,\" I said defensively. \n\n\"I'd kill to be that thin,\" Sophie added kindly. Now all three of them were looking at me as if I wasn't self-conscious enough already with my new look.\n\n\"Please,\" I snorted, looking at Sophie more closely. I shook my head at what I saw. \"You're perfect. You don't have an ounce of extra weight on you and you're far curvier than me.\" She really was too. It reminded me of my earlier concerns about how the boys would flock to her. \"We're going to have to set up some ground rules. A girl with your looks is going to have guys stopping by day and night, and I need to focus on my studies.\"\n\n\"Amelia Jane!\" my mother cried. I guess I should have waited until my parents were gone before bringing up the subject, but after looking at Sophie it just slipped out. It's not like I was wrong, but mom was just too old fashioned to understand. \n\n\"And on that note,\" my father interjected. \"It's time for us to go.\" \n\nI walked them out of the dorm and back to the car. Mom cried and even dad looked a little misty eyed. He had to almost push mom into the car to get her to leave and then he gave me a hug and a kiss on my forehead before moving to his side of the car. He opened the door, but paused before entering.\n\n\"Amelia, be happy,\" was all he said before getting in. That more than anything else made my eyes tear up. I wiped them quickly as I made my way back to my room. Sophie was there waiting for me. I figured there was no time like the present to get this settled.\n\n\"I'm sorry about before,\" I said as I walked in. \"But we really do need to come up with some ground rules and I wasn't wrong before. You're beautiful and built like the boys like so that means they will be hovering.\" \n\n\"A girl who's not afraid to speak her mind,\" Sophie said slowly and then smiled, adding, \"I'm going to like you. And by the way, if the guys are hovering, it won't only be because of me. You're beautiful too. In fact, you have the bluest eyes I've ever seen.\"\n\n\"I'm not nearly as pretty as you are, but that's beside the point,\" I argued. \"I really want to do well in school and I don't plan on letting anything, especially boys, distract me.\" \n\n\"Me neither,\" she agreed. \"Actually, you'll be happy to know I already have a boyfriend so guys shouldn't be an issue.\"\n\n\"That's great,\" I said, finally smiling. A boyfriend at home was perfect. Maybe having Sophie for a roommate wouldn't be as bad as I feared.\n\n\"Of course, you might change your mind about dating,\" she continued. \"So you're right, we should come up with some ground rules.\" It didn't take long for us to agree on what they would be. It was pretty much common sense. No visitors after ten on weeknights and no sleep overs on the weekend without prior approval. That last part was in case Alex, Sophie's boyfriend decided to visit. \n\nWe went to the student union after that to get something to eat. We barely settled at a table before two guys sat at the table next to us and tried to strike up a conversation. Sophie and I exchanged a look, but didn't comment. \n\nBilly and Ben seemed to be nice enough, but neither were my type, not that I had a type. Billy was average height and obviously worked out. He was decent looking and seemed to have a good sense of humor. Ben was a tall blond and almost as pretty as Sophie. He also clearly had a thing for her. The guys were good friends from the same hometown who decided to room together at college.\n\n\"You're pretty quiet,\" Billy said to me at one point. \"Getting a little home sick already?\"\n\n\"Not really,\" I replied, trying to decide how the new me would act with a boy like Billy. The answer was obvious. The girl next door was just one of the guys without the gas or crude comments. \"I do miss my friends, but I'll be seeing them soon enough and college is exciting.\"\n\n\"So, no boyfriend at home?\" he asked. Okay, so it was weird to realize a guy like Billy was hitting on me. He was obviously one of the popular kids back at his high school and none of those type gave me a second look unless it was to make a crude joke or proposition me. Still, I recognized the look in his eyes. Based on the way he was staring, I figured I had to do something quick to put him off or he'd begin pursuing me more seriously. I didn't need that headache.\n\n\"Actually, I do,\" I replied, thinking quickly. \"His name is...John. He goes to a military academy.\" I figured that last part might help intimidate any guys who were giving me unwanted attention. It didn't seem to bother Billy, but he did back off a little.\n\n\"Lucky guy,\" was all he said before turning to Ben and cracking a joke. Sophie gave me a knowing smile. I didn't bother sighing, but it was difficult. College was definitely going to be interesting if nothing else.\n\nSophie and I went back at our room after the freshman orientation meeting which seemed to be more of a meet and greet than anything else. It was a surprisingly fun, but a lot of that had to do with Sophie. She started telling me which animal each of the people we met reminded her of and why whenever we had a moment alone. Some were pretty bad, but most made me smile and for one or two I even laughed out loud. It wasn't long before I joined in.\n\nWe continued chatting about some of the people we met as we got ready for bed. We were getting along surprisingly well so I couldn't help tease her a little bit about Ben.\n\n\"You boyfriend Alex better be careful,\" I joked. \"Because Ben is a really good looking guy and he seems seriously into you. Frankly, if he stared at you any harder I think his eyes might have popped out.\"\n\n\"What about Billy?\" she retorted. \"I think John might not approve of the way he was looking at you.\"\n\n\"Yeah, about John...\" I began, wondering what I should say. \n\n\"Oh don't worry about it,\" she laughed. \"I think maybe if I weren't dating Alex then I'd probably have made up a boyfriend too. The guys here are awfully aggressive.\"\n\n\"Guys? Did you see some of the girls tonight?\" I asked in amazement. \n\n\"The blond who dragged Billy to the dance floor and pretty much thrust her tongue down his throat for two whole songs before leading him out of the party,\" Sophie said, sounding just as surprised as me. \"And they weren't the only ones making out in public or disappearing early.\"\n\n\"It was weird right?\" I shook my head before continuing. \"In high school if any girls did what that blond did they be labeled sluts forever.\" I had reason to know, not that I was going to tell Sophie that. \"I guess things are different at college.\"\n\n\"I don't know about that,\" she replied. \"I pretty much will think of her as a slut whenever I see her on campus.\" I did the best I could to hide my frown. Sophie hadn't struck me as all that judgmental up until now. I didn't quite sigh in relief when she added, \"Not that it's that big of a deal. It takes all kinds. Besides, to be fair, my brother says that you shouldn't hold anything anyone does the first week of college against them. For a lot of people this is their first taste of freedom and they're bound to let loose before finally settling down.\"\n\n\"You have a brother?\" I asked, changing the subject. \n\n\"Two actually,\" she replied. \"I'm closer to Hank, but Phil and I get along well too. Phil is almost six years older than me. Hank is only two. He's starting his junior year.\"\n\n\"I'm an only child,\" I offered.\n\n\"That sounds heavenly,\" she sighed, but I could tell she was joking.\n\n\"I wouldn't have minded a couple of siblings,\" I said thoughtfully. \"Being an only child can be lonely at times.\"\n\n\"I can't picture a girl who looks like you ever being lonely.\" I didn't quite shake my head. For some reason Sophie seemed to think I was a lot prettier than I was. She'd made a few comments throughout the night. \n\n\"You're great for my ego,\" I said. \"But I'm not really all that good looking.\"\n\n\"You're wrong,\" she insisted. \"I would kill for your legs, and let's not even talk about your smile.\" Sophie shook her head ruefully before continuing. \"Guys swoon when they see it. It's too bad you don't do it more often.\" \n\n\"Guys do not swoon when I smile!\" I snorted. \"Frankly, they're too busy staring at you to even notice. Not only are you beautiful, but you have curves in all the places guys like to see them.\"\n\n\"Men,\" Sophie sighed. \"If it wasn't for my Alex, I'd probably give up on the whole species.\"\n\n\"I have,\" I said, unable to stop myself. It was the truth, but I was saying more than I planned, especially considering how little I knew Sophie. It's not like I hated guys. I'd just had my fill, at least for the time being. \n\n\"A lot of bad experiences?\" Sophie asked. I panicked at the words 'a lot'. I didn't want anyone to think I had nearly as much experience as I did with guys. \n\n\"Not really,\" I replied, which wasn't that bad of a response, but then I had to add, \"In fact almost none. I was a late bloomer and pretty much a book worm back in high school.\" I bit my lip stopping myself from saying anything more. I'd made myself sound like a complete loser and nerd. That was so not the plan.\n\n\"So that's why you're father meant when he said he liked your new look,\" Sophie said thoughtfully. \"I was wondering.\"\n\n\"You caught that huhn?\" I asked, swallowing with some difficulty. I had to be very careful here. It was only my first day on campus and I had almost completely blown the plan already. \n\n\"Sure,\" she replied easily, not seeing my fear. \"Not that I would have guessed. Don't worry. You're secret is safe with me.\"\n\n\"My secret?\" I asked, my heart thumping in my chest. Did I say or do something that let Sophie see right through the charade I'd been trying to pull off?\n\n\"The fact that you don't have any real experience with guys,\" she answered. \"You come across far worldlier than you are. In fact, I bet no one will guess that you're still a virgin.\" \n\nSophie thought I was a virgin? Seriously? My panic subsided considerably. I wish I'd been smarter with my words, but it was better to be thought an innocent virgin than who I really was, or at least used to be. Still, I didn't want to fall back into being Amelia, the girl I was before I had my eyes so rudely opened. Mostly because I knew I couldn't pull it off.\n\n\"Um, I'm not nearly as innocent as you think,\" I said as we each got into our beds. She looked at me oddly and my heartbeat picked up once again. \"I mean, I am a virgin, but I have done some things with a boy.\"\n\n\"Really?\" she asked with a grin. \"Care to share them with me?\" \n\n'\"No,\" I said, smiling nervously. \"We don't know each other well enough for that.\"\n\n\"There's the smile I was talking about,\" she retorted. \"The one that will drive the guys crazy.\"\n\n\"Yep, that's me,\" I snorted. \"It gets boring stepping over all the guys who fall at my feet, but a girls got to do what a girls got to do.\"\n\n\"Oh, we're going to get along fine,\" she laughed. \"In fact, now that I know one of your darkest secrets, I guess it's only fair that I tell you one of mine. You have to promise never to tell anyone.\" \n\n\"Oh yeah? And what might that be?\" I asked with a grin. I knew it was going to be something silly based on her tone.\n\n\"I'm addicted to old television shows,\" she replied, pulling out her laptop as she spoke. \"And not just any shows, but the Sci-Fi and Fantasy ones.\"\n\n\"Seriously?\" I asked, not quite picturing it.\n\n\"Yep,\" she smiled. \"You should see the posters I have in my room back home. I didn't bring any here because I want to keep that part of me secret, but you being my roommate and all, there's no way I'd be able to hide it from you.\"\n\n\"And why is that?\" I was honestly curious about her answer.\n\n\"I don't want everyone at school to think of me as a geek,\" she replied, but then laughed and added, \"Besides, I sort of promised my mother. She afraid I'll end up spending my nights locked in my room watching television instead of going out and making friends.\"\n\n\"Hmm, I wonder why she'd think that?\" I teased. \"I mean, it is night time and clearly, you're making ready to watch something.\"\n\n\"Hey! I went to the orientation first and met loads of people.\"\n\n\"Most of whom you made fun of.\"\n\n\"Beside the point,\" she insisted. \"You want to watch something with me?\"\n\n\"Well, I don't have much exposure to the type of shows you're talking about,\" I said honestly. \"Believe it or not, we only have one television at home and mom and dad don't watch the types of shows you're talking about.\"\n\n\"Wow, you're a virgin in more ways than one,\" she laughed. \n\n\"You're pretty big with throwing that word around a lot, aren't you?\" I retorted. \"You know, it's not something I want everyone to know.\"\n\n\"Hey, I already told you that your secret is safe with me so relax,\" she said more seriously. \"Just breathe while I attached my computer to the television. We'll start you with something light. Charmed. You're going to love this.\"\n\nSophie surprised me by throwing her pillows and a blanket on the rug in front of the television. She also went to one of her closets and pulled out a bag of popcorn and tossed it into the microwave. Finally, she went to the mini-fridge which I hadn't even opened yet and pulled out two bottles. \n\n\"Do you drink?\" she asked. \"They're just wine coolers. I had my brother Hank pick me up a case. Mom and dad weren't thrilled when they saw me unpacking it from the car, but they let me bring it up. The truth is that I'm addicted to these things.\"\n\n\"Sometimes,\" I answered. I didn't drink much these days, but when I did wine coolers would definitely not have done it for me. \n\n\"Have one,\" she offered. \"You can always put it down if you don't like it or the alcohol bothers you.\" Not liking it wasn't a problem, but then again I'd had a drink every so often over the last two years so it wasn't like I couldn't control myself. Besides, it was a wine cooler. My old friends would have laughed at the idea of getting drunk from them.\n\n\"Thanks,\" I said, taking the bottle. I took my two pillows and my blanket and threw it on the rug next to hers. Sophie put the popcorn between us once it was done and we settled in. She held her bottle up toward me and I did the same with mine. She clinked them together. \n\n\"To new roommates,\" she smiled.\n\n\"To new friends,\" I replied and then we both took a drink. \n\n\"Now let's see if I can corrupt your taste in television shows.\" \n\nOkay, so here's the weird part. I really did enjoy the show. It's not that it was a great show, but it was entertaining and different. Sophie made me watch three episodes before we finally went to bed. We joke and laughed pretty much the whole time.\n\nI was half asleep when I realized that I'd survived my first day as the new me, although not unscathed. Apparently, I wasn't quite going to be the girl I planned to be. On the other hand, I had a big smile on my face as I drifted off, so I guess the new me wasn't going to be that bad after all.\n\n**********\n\n\"Are you sure you're going to be okay by yourself?\" Sophie asked for the fifth time. We'd only been roommates for less than two weeks and we were getting along far better than I hoped.\n\n\"I think I can survive three days without you,\" I teased. It was Labor Day and I was surprised by how many people were actually going home. I lived way too far away for that. Besides, as much as I loved my parents, I had no desire. \n\n\"I'm sorry I can't invite you home with me.\" Sophie was just closing her bags as she talked. \"But mom is hosting the family reunion this year and she's awfully stressed. Besides, with Phil and his family staying with us and Hank bringing his roommate home with him, there just isn't any room for anyone else.\"\n\n\"Don't worry about it,\" I smiled. \"I'm not good at parties anyway. Besides, I'd hate being Alex's and your third wheel. You two have fun.\"\n\n\"Are you sure John isn't planning on visiting? Because if he is and he's bringing a buddy from his military school I can blow off Alex. I just love a man in uniform.\" She was teasing me. She knew full well that John was fictitious. It was just another secret she kept for me. \n\n\"Just get going. Your father is waiting outside.\"\n\n\"Yes mom,\" she teased, making me laugh before she hugged me and left.\n\nThe weekend went by quickly. I caught up on my classes, did some studying and spent time reviewing how my first couple of weeks at school were going. The answer was surprisingly good. The best part was that I was starting to seriously enjoy the new me. \n\nHaving Sophie around had actually worked out far better than I feared. Not only were we getting along, but her good looks, sense of humor and outgoing manner were making us both more friends than I could have hoped for on my own despite the fact that she seriously was addicted to old television shows. We would watch a few episodes pretty much every night.\n\nLast weekend Sophie insisted we go out and she invited everyone in the hall to come along. A surprising number agreed. We had a good time and it was nice to get to know most of them. The whole college bar scene was different than I expected. It was far more relaxed. Oh, there were always people working hard at getting drunk, but for the most part people were pretty laid back now that the initial reaction to being away from home was beginning to disappear. \n\nGoing out was fun and seldom cost anything. There was always a guy willing to buy you a drink when you were with Sophie. Still, I only had two most nights. That was my limit and I seldom went past it. Sophie kept pace with me and we spent most nights out talking and laughing. She was turning into the type of friend I'd only dreamed about since moving into the big city. \n\nOf course, she didn't know the real me, but that was a good thing in my book. The only problem was that I found myself tempted to tell her everything because we'd connected so well. Maybe one day, but for now I avoided talking about myself as best I could. I had to make up a few stories about high school. I hated lying to Sophie, but what choice did I have? Thankfully, it was easier to talk about grammar school. She got a kick out of the fact that my grandfather was a minister.\n\nI was looking forward to Sophie's return by Sunday night. I was starting to get lonely. I guess I could visited some of my other new friends who hadn't gone home for the weekend, but the truth was that I missed Sophie. She was the type of person who brightened a room the moment she walked in. That was why I was surprised by how she looked when she got back. \n\n\"What's wrong?\" I asked the moment I saw her. She shut the door behind her, took one look at my concerned expression and started crying. I don't remember moving toward her, but the next thing I knew I was holding Sophie. Her cries turned into sobs. \n\nSophie was a few inches taller than me so I led her to my bed and sat with her still in my arms. We stayed like that for quite a while, but I didn't mind. Sophie was my best friend and this was what best friends were for. ",
        "\"What happened?\" I asked, once she calmed down enough to talk.\n\n\"Alex cheated on me,\" she said, her tears still falling. \n\n\"The bastard!\" I cried, seriously angry for my friend. \"Did you kick his ass?\" This actually made Sophie laugh, if only momentarily. \"I can do it for you, if you'd like?\" I meant it too. I wasn't the same girl I was when we moved to the big city. I'd learned a lot in four years, not the least of which was to take care of myself. No one was ever going to ever force me to do something against my will again. \n\n\"How could he?\" Sophie asked, her pain and confusion obvious. \"Two weeks ago he was professing his undying love and today I learned he slept with some slut at college last weekend. How could he!\"\n\n\"If I've said it once, I've said it a thousand times,\" I sighed. \"Guys are bad news.\" The sad part was that I really believed it. Maybe one day I'd meet a guy who made me feel different, but I wasn't holding my breath. \n\n\"At least he had the decency to tell me.\" It was obvious from her tone that she was fighting another bought of tears. \"He said it was an accident. He got drunk and the next thing he knew he woke up with some girl sleeping next to him. He can't even remember what happened.\" I wanted to cry bullshit, but I didn't. It wasn't what Sophie needed to hear and maybe Alex was being honest. Yeah, right.\n\n\"What did you do when he told you?\" I asked gently. \n\n\"Not much,\" she sighed. \"He made a mistake, but at least he owned up to it. I was tempted to break up with him, but I couldn't throw our two years together away like that. He really does love me, at least I think he does, and God knows, I love him.\"\n\n\"Damn,\" I said, more to myself than her. I didn't like the way this was starting to sound. I had the feeling that Sophie was setting herself up for a lot more disappointment and pain, but it was her decision. All I could do was be there for her. \"Just remember, you could have pretty much any guy you want on campus. You don't need Alex.\"\n\n\"Yeah, right,\" she said, wiping her eyes. \n\n\"I'm serious,\" I argued. \"Hell, Ben would kill for a chance to go out with you.\" That made Sophie frown.\n\n\"There's something not quite right about him,\" she said with a shake of her head. \"He refuses to give up.\"\n\n\"Maybe he thinks he's in love,\" I shrugged. Sophie actually snorted.\n\n\"It's not love that's on his mind.\"\n\n\"You want me to talk to him?\" I offered in concern, making her laugh once more.\n\n\"Since when did you become my protector?\"\n\n\"I care about you,\" I said without thought. \"And I take care of the people I care about.\" Sophie stopped laughing, but continued to smile as she gave me a quick hug.\n\n\"Thanks,\" she said afterward. \"But I can take care of myself.\"\n\n\"I never said you couldn't,\" I replied. \"But just remember, you're not alone. I'm here for you.\" She looked at me oddly for a moment before shaking her head.\n\n\"You're something else, you know that?\"\n\n\"I'm just being a good friend,\" I shrugged in embarrassment. \n\n\"Not a good friend,\" she disagreed. \"A best friend.\" Two weeks and we were best friends? That sounded crazy to me. On the other hand, it's not like I didn't feel the same way.\n\n\"I still think you should let me kick Alex's ass,\" I sighed. \"Or Ben's? Maybe both?\"\n\n\"I thought your name was Emma, not Xena,\" she laughed. \"My little warrior princess.\"\n\n\"Ugh,\" I sighed. \"You're going to make me watch more episodes of that tonight, aren't you?\" Sophie had switch off from Charmed to Xena: Warrior Princess a few days ago. She insisted I'd like it better.\n\n\"It feels like a marathon night to me,\" she replied, making my sigh turn into a groan, but I smiled afterward and started making the popcorn. \n\n**********\n\n\"I still think we should have gone as Xena and Gabrielle,\" I joked as we reentered our room. It was Halloween and both of us had gone over our two drink limit when we went out because of the holiday, although neither of us was really drunk. \n\n\"Are you kidding?\" Sophie snorted. \"First of all, there was no way I was going to dress in leather and show that much skin to the guys at this school. We would have been fighting them off tooth and nail.\"\n\n\"You mean you would have been,\" I teased, sighing melodramatically. \"I would have looked like a stick in a blond wig.\" Xena was a brunette, but her trusty sidekick was a blond.\n\n\"You Gabrielle? Please!\" she laughed. \"You're definitely more the warrior princess than me.\"\n\n\"Hey you're the tall, curvy, dark haired beautiful one,\" I retorted. \n\n\"But you have the blue eyes,\" she countered. \"And the right attitude. Xena more about that then looks, not that you're not beautiful enough in your own right.\" \n\n\"Please!\" I snorted, but by this point we were both laughing. \n\n\"I'm serious you know,\" she insisted afterward. \"Although I can't picture me as a blond whereas you would probably look really good as one with those blue eyes.\"\n\n\"No thanks. I've never had the desire.\"\n\n\"So then maybe it's good we didn't get dressed up as them. It would have been too weird for Gabrielle to be a brunette.\"\n\n\"Anything would have been better than going dressed like this,\" I grumbled, looking down at my costume and shaking my head. \n\nWe were both dressed like mermaids. It sounded like a good idea when we picked it, but neither of us were willing to wear just a bikini top so we had spandex shirts instead which didn't really look bad, just weird. That wasn't so bad. What was were the tails. Mine made my legs feel trapped and I hated that. \n\n\"Trust me, being Xena and Gabrielle would have been worse.\"\n\n\"How can you say that?\" I argued. \"Do you really think your spandex top was that much better than leather? I mean, on me it was no big deal, but with your curves? You can't tell me you didn't notice the way the guys were staring. How could it have been any worse?\"\n\n\"This was still better,\" she insisted. I didn't see it.\n\n\"Give me one good reason why?\" I thought it was a fair question. Sophie paused before answering, which was odd because these days we pretty much said anything to each other. I mean, I still hadn't told her what I was like back in high school, but by this point it almost didn't matter. I was comfortable in my new skin. Emma was turning out to be everything I hoped for, although not quite what I planned. \n\n\"Emma, I'm not sure if you realize this, but a lot of people think that Xena and Gabrielle were lovers.\"\n\n\"Really?\" I asked in surprise. \"I mean sure, I guess I can see it. The show is starting to get pretty weird. But so what?\" We still had two seasons left, but I was in no rush to finish it. There was only so much Xena: Warrior Princess I could take. Lately, we'd been mixing some Andromeda episodes. It was sci-fi, not fantasy and it made for a nice change of pace.\n\n\"Can you imagine what people would have said if we went dressed as Xena and Gabrielle?\" I don't know why, but I didn't get her point until that moment.\n\n\"Oh,\" I said, shaking my head. \"Maybe it's a good thing we went as mermaids after all. I'd prefer not to be the subject of this week's rumor mill on campus.\" \n\n\"People can be awfully mean,\" she said in knowing tone. I frowned as I realized that something must have happened to make her feel that way, but it didn't look like Sophie wanted to talk about it. I figured she'd let me know if and when she was ready. It wasn't like I didn't have my own bad experiences with rumor mills. \n\n\"I'm exhausted,\" I sighed, stripping off the bottom of the costume. I was wearing a pair of boxer shorts underneath. I turned my back when I slipped off the spandex top and put on my nightshirt.\n\n\"Me too,\" Sophie said, changing as well. She only turned partially away from me as she took off her top and put on a long tee-shirt of her own. The whole thing only took a few seconds, but I did catch a glimpse of her chest. I shook my head and looked away. \n\nSophie really was something else. It's a good thing she was my best friend because I could easily become jealous of her otherwise. She was the closest I'd ever seen to a ten in my life and that was with clothes. I had a feeling that without she was even better looking. Certainly the glimpse I saw lent itself toward that assumption.\n\n\"You know, Alex really doesn't deserve you.\" The words slipped out before I could stop them. I shouldn't have brought him up. Alex and Sophie had been fighting ever since she got back from Labor Day and the last thing she needed was to be reminded of him. \n\n\"You're right,\" she sighed. \"But he was my first love and that was hard to walk away from.\"\n\n\"Past tense?\" I asked, raising an eyebrow, looking at her carefully. \n\n\"Yeah,\" she admitted slowly. \"We broke up with a couple of days ago. I didn't tell you because I wasn't ready to talk about it yet.\"\n\n\"I understand,\" I said, going to the small refrigerator we shared, pulling out two wine coolers and handing her one before opening the second for myself. \"Are you okay?\"\n\n\"Not really, but I will be.\" She sounded like she was working at convincing herself.\n\n\"I'm sure you will,\" I said confidently. \"And all the guys on campus will be ecstatic to learn you're back on the market.\"\n\n\"Um, about that,\" she said. \"I'm not ready for dating again. Do you mind if we keep Alex and my breakup our little secret?\"\n\n\"Sure,\" I said, but then grinned and added, \"Maybe you, Alex, John and I should go on a double date some time?\" I'm not sure why, but suddenly we were both giggling. I did mention we weren't particularly sober, didn't I?\n\n\"Only you could make me laugh when I'm talking about Alex,\" she said afterward, giving me a hug. \"I am so lucky to have you as a friend.\" \n\n\"Right back at you,\" I smiled, deciding it was time to change the subject. I went to my bed and sat on it, facing Sophie's bed. She did the same on her bed and faced me. I smiled and asked, \"So, do you really think Xena and Gabrielle are lesbians?\" \n\nI figured it was a safe topic and she might find it amusing. Sophie and I had some of our best conversation at night after getting back from a party. We would sit like this and talk about anything and everything. We came from completely different backgrounds so it was interesting to hear her thoughts on most subjects. I'd always known my family was conservative, but I thought of myself as more moderate. Sophie wasn't quite a bleeding heart liberal, but she was a lot closer to it than me. It made for some interesting conversations. \n\n\"I don't know,\" she replied with a shrug. \"There are worse things they could be.\"\n\n\"Not according to my parents,\" I laughed. \n\n\"They're homophobic?\" She sounded a little surprised which was odd to me considering how much we'd talked about our parents.\n\n\"Most definitely,\" I replied, thinking about some of the conversations mom and dad used to have at the dinner table. \"I'm mean, it's not like they marched in antigay parades or anything, but it's not something they understand.\"\n\n\"In that case, I can only imagine what your grandfather would say.\"\n\n\"You're probably be surprised,\" I smiled warmly as I remembered the old man. \"Grandfather is more of a live and let live type of preacher. I'm not sure he condones that kind of a life style, but on the other hand I've never heard him condemn it either.\"\n\n\"You know, I think I'd like to meet him someday.\" \n\n\"You will,\" I promised, and then laughed and added, \"Certainly at my wedding. He's definitely going to marry me and at this point you're a shoe in for the maid of honor.\"\n\n\"Gee thanks,\" she snorted. \"Now all you need is a groom. Of course, you'd have to get over your dislike of men first.\" \n\n\"Wow, that's from left field,\" I said in surprise. \"But you're wrong. I don't dislike guys. I just don't have the time for them right now.\"\n\n\"Are you sure?\" Sophie asked me, giving me a strange look. \"I mean, it's okay if you don't. I'm not homophobic or anything.\" I looked at her and realized she was serious. Oh my God! Sophie thought that I was a lesbian just because I wasn't dating.\n\n\"I can't believe you just asked me that!\" I cried, throwing my pillow at her. \"I am not gay!\"\n\n\"Me thinks the lady doth protest too much,\" she said, teasing me with the quote from Hamlet of all things.\n\n\"You bitch!\" I said, throwing my other pillow at her as well. She just laughed as she caught it. She waited for me to calm down before tossing both my pillows back to me.\n\n\"Does the idea of Xena and Grabrielle possibly being lesbians really bother you that much?\" she asked a few moments later. I wasn't sure if she was talking about me or them anymore, but I decided to focus on them. It was easy to think about. \n\n\"You know, I'm not certain,\" I replied honestly. \"I like to think I'm not like my parents and a part of me could care less about whether someone is gay or not, but other times it's just too weird for me to accept. I've never really thought of a girl in that way. I mean, sure I can appreciate beauty in and of itself, but that's not quite the same thing, now is it?\"\n\n\"Let me ask you this,\" Sophie said as she took a sip from her bottle. \"Let's say you were an actress and you had to kiss another girl. Would it gross you out?\" \n\n\"A little bit,\" I replied. \"But mostly, I think it would make me uncomfortable.\" I felt a little awkward admitting that so I decided it was time to turn the conversation on her. \"What about you? Are you gay?\"\n\n\"Um, I'm not the virgin here,\" she answered. \"I'm also not the one who doesn't seem to like boys. I have a boyfriend, or at least had until recently.\"\n\n\"I like boys,\" I restated, just to be clear. Although this time I was laughing. \"And you could have been using Alex as a beard. You know, hiding the real you from the world by being in a relationship with a guy you didn't really care about.\"\n\n\"That would explain a lot,\" she offered, trying to keep the joking going, but I could tell talking about Alex again was a mistake. \n\n\"Sophie,\" I sighed in apology. \"I don't know a lot about relationships, but I do know that what you and Alex had was real. You loved him. I'm sorry it had to end, but don't worry. You'll find the right guy eventually.\"\n\n\"Thanks,\" she said, still sounding sad. I didn't want her to be down so I decided to tease her a little.\n\n\"Or girl,\" I added. \"I mean, you're certainly weird enough already with your addiction to old television shows. I could see you being a lesbian. Not that there's anything wrong with it.\" \n\n\"You bitch!\" she cried, throwing my own word back at me along with one of her pillows. I caught it and used it to block the next incoming missile. Sophie seldom only threw one at a time. She believed is carpet bombing the enemy. \n\nI blocked the second pillow, but the third hit me square in the face. I pulled it away laughing, but not before I took a moment to enjoy the scent it carried. Sophie always smelled good and her pillow smelled just like her. I tossed all three back to her, but there was something in her expression that made me pause.\n\n\"You look seriously upset,\" I finally said, realizing the truth.\n\n\"I hate stereotyping,\" she sighed. \"And that was wrong on so many levels. You act as if lesbians have to all be weird or something.\"\n\n\"Please!\" I snorted. \"It was just a joke. Besides, lesbians are weird, but then again everyone is in their own way. Why should they be any different?\"\n\n\"You're too much,\" she said, finally relaxing and smiling again. I hoped it was because she realized I was kidding. \n\n\"And you're a bleeding heart liberal,\" I tossed back, trying to make her laugh. It was an old argument between us. It was pretty obvious that I was brought up far more conservatively than she was. At first we talked about it a lot, being careful not to offend each other, but as we got to know each other we started joking about it. \n\n\"Oh yeah? Well, I think you're a lot more like your parents than you're willing to admit.\"\n\n\"Ouch! Now that hurt,\" I cried, throwing my pillows at her again. This time she refused to give them back so I went over to get them. \n\nWe fought over them for a few minutes, laughing the whole time. Sophie was bigger than me, but I always won when we wrestled. Still, that didn't mean she gave up gracefully. She fought hard before I finally took my pillows from her. I had to pin her to the bed to do it. We were both panting by the time we were done.\n\nSophie was looking up at me, clearly frustrated that I'd won yet again. I was looking down at her and grinning in triumph. That's when it happened. For the first time in my life I saw a girl in a way that would make my parents very unhappy. \n\nIt's not like I planned it or anything. Seeing Sophie under me like that, panting with her perfect lips suddenly hit me in a completely unexpected way. I mean, I'd always known she was beautiful, but this was different. Frankly, it scared me half to death. \n\n\"I think we'd better call it a night before someone gets hurt,\" I said, quickly getting off of her and making my way back to my bed. \n\n\"You're probably right,\" she replied with a sigh as she got under her blankets. I couldn't even look at her and was relieved when she turned off the lights. \n\nWhat the hell had just happened? I'd never wanted to kiss a girl before. I still didn't. Okay, I did wonder what Sophie's lips would taste like a few moments ago, but she wasn't just any girl. She was Sophie. \n\n\"Do you mind if I put on some music to go to sleep to?\" she asked, thankfully interrupting my thoughts.\n\n\"Go ahead.\" Sophie typically needed some music to fall asleep by. At first, she wore her earbuds, but I figured they couldn't be comfortable to sleep in so I let her know after the first few days that the music usually didn't bother me. She still asked every night to be sure before putting it on.\n\nWell, whatever had come over me a few minutes ago was probably related to our earlier conversation and the fact that I was drunk. I guess it was normal to wonder about stuff like that at some point in your life, but I knew myself well enough to know I wasn't gay. I may not be happy with the way I was exposed to sex with guys the first time, but it's not like I didn't like it in general. Okay, so I didn't need it all that often, but that didn't mean I didn't like the way it felt.\n\nThis was all just too weird. I'd finally remade myself into someone I actually liked. I had plenty of friends once more and there was no way I'd let myself do anything that would make everyone ostracize me again. So I felt an odd twinge of something with Sophie. I guess that made some sort of sense. She was my best friend and I did love her after all, but that didn't mean I was in love with her. \n\nBleeding heart liberal or not, I could only imagine how badly Sophie would freak out if I told her what I was feeling. Besides, she just broke up with her boyfriend. She didn't need any added drama to her life. I was certain that whatever I felt was a onetime thing. In fact, I was willing to bet that I'd forget it completely once I sobered up and had a good night sleep.\n\n**********\n\n\"Okay,\" I said as I entered our room and dropped my book on my desk. \"It's official. I hate calculous!\"\n\n\"Tough test?\" Sophie asked with a grin. I noticed how sexy her lips looked when she did that, but I didn't quite shake my head as I forced myself to move past it. I'd been getting good at doing that in the last few weeks. \n\n\"You have no idea,\" I grimaced, going to the refrigerator and grabbing two wine coolers without asking Sophie is you wanted one. \"My brain feels like a pile of Jello.\"\n\n\"You know what that means, don't you?\" she grinned, taking one of the wine coolers from me.\n\n\"Another Buffy Marathon?\" I asked. We'd graduated to watching Buffy the Vampire Slayer episodes now that we'd finally finished all of the seasons of Xena. Sophie had tried to get me to watch Hercules instead, but it was too much like Xena. I needed a break from that kind of show.\n",
        "\"Guess again,\" she laughed.\n\n\"Another season of Andromeda?\" I wasn't particularly crazy about that show, but I watched it with her because it was fun with Sophie. I once joked with her about watching Dr. Who and she told me I wasn't ready for that yet. The girl's mind was seriously warped.\n\n\"Not even close,\" she replied. That's when I realized what she meant.\n\n\"Please no!\" I groaned, knowing there was no point in arguing.\n\n\"It's Bad Movie Night!\" she cried. \n\n\"Every night is Bad Movie Night with you,\" I snapped. \"You have the worst taste in movies I've ever seen.\"\n\n\"Hey, it's not like I've seen any of these before,\" she laughed. \"I just like picking movies that's aren't popular. I admit most of them are pretty bad, but there's been a few good ones too.\"\n\n\"I can't think of one,\" I disagreed. \"The last one was so bad I think time actually slowed down during it.\" That made her laugh again. \n\n\"Hey, at least it wasn't Sci-Fi or Fantasy.\"\n\n\"That's because you've already seen all of those movies,\" I retorted. \"Thank God!\"\n\nThings got a little weird for me after Halloween, but I quickly came to grips with it. The whole idea of me liking girls was crazy and I realized it the next morning. I wasn't interested in girls that way. Well, okay, sometimes I felt a twinge with Sophie, but she was the only one and that probably had to do with our closeness more than anything else.\n\nStill, after three weeks, I was starting to think I should start thinking about dating a guy. I could use the distraction. Maybe I was just horny or something. \n\n\"It was pretty bad, but let's be honest,\" Sophie said. \"We knew it would be. I mean, Showgirls was rated like the worst movie of the decade, maybe even ever made.\"\n\n\"True,\" I admitted with a sigh. It was the most confusing and pointless movie I ever watched. Bad actresses dancing half naked and doing nothing worthwhile with their lives. Worse, toward the end the two female leads kiss for apparently no reason. That didn't really bother me in and of itself, but my focus was split between the screen and Sophie's full lips for the rest of the movie. Thankfully, it wasn't very long. \"But this time, I'm picking the movie.\"\n\n\"Okay, just remember the rule,\" she replied. \"Neither one of us can ever have heard of it before.\"\n\n\"You mean like Showgirls?\" I retorted. \n\n\"That one doesn't count,\" she argued. \"We both were curious and neither of us had seen it before.\"\n\n\"Fine,\" I sighed. \"But get ready for something stupid. I don't want to watch anything that's going to make me think.\"\n\n\"I'm up for whatever,\" she shrugged going to the closet and the popcorn to put in the microwave.\n\nIt didn't take me long to find something. I stumbled on to it and figured it would be perfect for my mood. It was a silly spy parody. The cover had of all things, four girls dressed in plaid schoolgirl skirts. \n\n\"You're going to love this,\" I said, attaching her laptop to the television with the HDMI cable so we could watch it on the bigger screen. \"It sounds so bad it has to be funny.\"\n\n\"What's it called?\" Sophie asked.\n\n\"Um, D.E.B.S.,\" I said, looking at the title page once more. \"The tagline is 'They're crime fighting hotties with killer bodies'.\"\n\n\"Never heard of it,\" she said as she waited for the popcorn to finish. \"But it sounds like a movie for guys.\" \n\n\"I know, right?\" I laughed, throwing our blankets and pillows on the floor in front of the television as usual. \n\n\"Couldn't you just pick a chick flick like a normal girl?\" Sophie sighed, but I knew she was just joking. She loved bad movies and lot of the movies made for guys were the worst. We would spend the entire time watching them, making comments and laughing. \n\nWe got comfortable once the popcorn was done and put on the movie. I settled in my normal spot. So did Sophie. She handed me a wine cooler without comment.\n\n\"You know,\" I sighed as I opened the bottle. \"I think I may be getting addicted to these things too.\"\n\n\"I have a feeling we're going to need them tonight,\" she retorted. \"This movie has all the marking of something really bad.\" As far as I was concerned the credits alone proved her right.\n\n\"Oh my God,\" I laughed before the movie really started. \"This is going to be great!\"\n\n\"I can feel brain cells dying already.\"\n\n\"Shush, I don't want to miss anything!\" I joked back. \"Drink your wine cooler.\"\n\nThe movie was pretty bad, but it was just what I was in the mood for, at least until about fifteen or twenty minutes in when I realized it wasn't going to be quite what I expected. \n\n\"No way!\" I groaned. Sophie took one look at my expression and burst out laughing.\n\n\"Yes way,\" she said afterward. \"Only you could pick this kind of movie and it be about two girls who like each other.\"\n\n\"I don't believe it,\" I argued, but it was pretty obvious. They weren't trying to be subtle about it at all. Who was I trying to kid? The whole plot of the movie revolved around the female villain's infatuation with one of the D.E.B.S. and her obvious reciprocation. \"At least it's funny.\"\n\n\"Only in that, 'oh my God, they didn't really just do that' kind of a way,\" Sophie argued. \"I mean, come on! The villain disappears and leaves a carpet of diamonds on the ground as her calling card?\"\n\n\"Well, her name is Lucy Diamond,\" I shrugged and suddenly we're both laughing again.\n\nWe watched the movie to its very predictable ending, joking and laughing the whole time. The villain sort of reminded me of Sophie, not that they looked all that much alike. I mean, they both had dark hair, but frankly I was built more like the actress than Sophie. It was actress's dark eyes and sexy smile that reminded me of my roommate.\n\n\"Are you sure you didn't pick this movie on purpose?\" Sophie asked me as we stood and threw our blankets and pillows back on our respective beds. \"I mean, you weren't all that convincing on Halloween when I asked you if you were a lesbian.\" This time I knew she was just teasing me. That didn't stop me from being annoyed just the same.\n\n\"That again?\" I groaned. \"For the last time. I am not gay! And don't you dare quote Shakespeare at me again! I had no idea the movie was about two lesbian spies.\"\n\n\"Still, you picked a movie with four half-dressed coeds on the cover,\" Sophie teased. \"Maybe you are gay and just don't realize it yet? Maybe you picked it subconsciously.\"\n\n\"Don't make me come over there,\" I threatened as we got ready for bed. She just laughed again. It was time to go on the offensive. \"Now that I think about it, maybe you're the one who is hiding from her inner lesbian.\" She rolled her eyes, but that didn't stop me.\n\n\"I mean after all, most of the shows you like seem to have gay couples in them. You were the one who told me about Xena and Gabrielle, and if I'm not reading it wrong it looks like Willow in Buffy the Vampire Slayer and the new girl Tara are headed that way.\" We were around halfway through the fourth season.\n\n\"Please!\" she snorted. \"That's ridiculous. Not that you're wrong about Willow and Tara.\"\n\nWe went back and forth for a few minutes until we were both ready for bed. I'd like to say I wasn't bothered by her teasing, but honestly I wasn't sure. On the other hand, she didn't seem bothered by my taunts in the least.\n\nI climbed into bed and fluffed my pillowed. Sophie followed suit. \n\n\"How about we agree that neither of us are lesbians and we drop the subject?\" I asked as we both settled in. Sophie shut the light as I continued. \"The whole this is silly anyway.\"\n\n\"If you say so,\" she teased, but then added more seriously. \"You know I'm just playing with you.\" She paused before adding. \"Besides, like I said on Halloween, I wouldn't care even if you were. All that matters is that we're best friends.\"\n\n\"It means that much to you?\" I asked in surprise. \n\n\"Doesn't it mean the same for you?\" she asked in reply. I thought about it for a moment and smiled. I knew she couldn't see it, but that didn't matter.\n\n\"Of course,\" I replied. \"I wouldn't care if you were a lesbian or even a Martian for that matter, just as long as we stayed best friends.\"\n\n\"Well, in that case...\" she began, pausing briefly and then finishing with \"I'm a Martian.\" I couldn't help it. I burst out laughing. I didn't really think she was going to say she was a lesbian, but for a moment I found myself wondering how I would react if it were true? The answer was that I had no idea. \n\nI'm pretty sure it wouldn't be pretty. Intellectually I knew it was no big deal and there was nothing wrong with it, but on an emotional level it would probably freak me out. It's not easy to stop how you feel about something or someone even when you know the feelings are wrong. Sort of like the ones I was having toward Sophie. \n\nOkay, now I'd gone and confused myself. How could I think my feelings for Sophie were wrong and yet believe that there was nothing wrong with being gay? The two were pretty much mutually exclusive, right? I guess that sort of proved my point. Understanding intellectually and accepting emotionally were two different things. \n\nI didn't think being gay was wrong. That meant that if I did like Sophie like that than I shouldn't feel bad about it, but whenever I thought I might, I did. It didn't matter what my brain knew, there was a part of that insisted it was wrong. \n\n\"So we're agreed,\" Sophie said, thankfully dragging me from my inner turmoil. \"Neither of us is gay, but if we were it would be no big deal.\"\n\n\"You're really hung up on this issue, aren't you?\" I sighed.\n\n\"Hey, I just don't want our friendship to stop you from being who you really are. You're my best friend and wouldn't matter to me whatever sex you prefer,\" Sophie said in a kind voice, and then added before I could object. \"I know, I know, you're not a lesbian. Let's drop it. I promise not to bring it up again.\"\n\n\"Thank you,\" I sighed. It was pretty obvious that she really thought I might be gay. I had no idea why. I mean, sure I didn't date guys, but it's not like I avoided them or was uncomfortable around them. \n\n\"Not that there's anything wrong with it,\" she just had to add. \n\n\"I don't want to hear another word about sexual preference from you unless it's about yours!\" I retorted in annoyance. \n\n\"In that case, I prefer being on the bottom.\"\n\n\"Seriously?\" I couldn't help laugh. \n\n\"Well, you asked,\" she replied, but I could hear the laughter in her voice. \n\n\"That's not what I meant and you know it,\" I said shaking my head. \"Now go to sleep and forget the whole subject.\"\n\n\"Deal,\" she replied. I heard her shifting on her bed. \"Do you mind if I put on some music?\"\n\n\"Go ahead,\" I said, rolling onto my side. The music came on and as soon as I could make out the first song I groaned. \"Seriously?\" Sophie was laughing too hard to respond at first. \"You picked this song on purpose.\"\n\n\"I swear!\" she gasped out between laughing. \"I didn't! It just came on.\"\n\n\"Whatever!\" I groaned, shaking my head. The song was Katy Perry's 'I Kissed A girl'. Sophie laughed pretty much the entire song. It was only half over when I snapped, \"Would you just change the song already?\"\n\n\"Not on your life!\" she retorted, continued to laugh. I said some unpleasant things and tried to ignore her and the song. I only succeeded partially. The worse part was that she continued to have fits of giggling long after the song was over.\n\n********\n\nThe bus dropped me off less than three blocks from my dorm. I immediately started walking with my bags. I was never so happy to be somewhere in my life. Going home for Thanksgiving had been a huge mistake, although it's not like I had a choice. The school closed the dorms for the holiday. I mean, sure it was good to see my parents, but it was weird to be there. \n\nMom and Dad were so happy to see me in normal clothes and telling typical stories that college kids told that their beaming smiles were almost embarrassing. That was still better than the looks I saw some of my relatives giving me. They had no idea how to talk to me. It was like I was a stranger. I guess it made sense. I had reinvented myself, but they had to know that deep down I was still the same girl, right? \n\nIt would have been better if my Grandfather had shown, but something came up last minute at his church and he couldn't make it. That happened a lot so we were all used to it. Still, it sucked. He was the only person I truly felt comfortable being myself with other than Sophie, which was pretty odd when you realized just how much I was keeping from her. I could never keep anything from Grandfather.\n\nI hadn't realized just how much talking to Sophie was changing the way I felt about things. I'd always known my parents were pretty much in their own little bubble and didn't see the world like it really was, but seeing just how close minded they were was shocking. The rest of the family wasn't really that much better. I tried bringing up a few issues during dinner and their reactions were so...well, na\u00efve might be the best word, or at least the kindest. I think some of my cousins understood where I was coming from, but none of them were about to do anything to upset their parents. That was my job. Everyone knew I was the black sheep of the family.\n\nAs if that wasn't bad enough, I tried to escape my parents for a few hours and bumped into some old friends. It was awkward to say the least, yet one of the guys still tried to convince me to go home with him. I guess it was understandable. It wasn't like I hadn't done it in the past. I forgot how much I hated the old me. Sure, I realized recently that it was time to start dating guys again, but what he wanted had nothing to do with dating. \n\nI was home for only a few hours before I started thinking about the three versions of myself once more, something I'd almost been able to put behind me this last month at college. Amelia, the innocent girl I'd been before we moved to the city would have waited until her wedding night before making love. Mia...well, Mia would have gone with the guy out of boredom if nothing else. Emma, the new me, wasn't against sharing herself with someone if she cared enough for them. It might not be love, but it wouldn't be anything as crude as simple fucking either.\n\nI reached my dorm and quickly climbed to my floor. I had no idea if Sophie was back yet, but I was hoping she was. I needed to forget this past week. I put one of my bags down and opened the door. Sophie was inside. She saw me and smiled in greeting, but it quickly disappeared.\n\n\"Wow, I'd ask you how your holiday was, but based on how you look, it couldn't have been all that great,\" Sophie said as soon as I walked into our room. \"You want to talk about it?\"\n\n\"One day,\" I sighed, admitting there was something bothering me when I probably shouldn't have. On the other hand, she knew me too well not to see it anyway.\n\nI really did need someone to talk to and there was no one I'd rather do that with than her, but what if what I told her affected our friendship? Sophie meant too much to me these days to chance it. Frankly, I wasn't sure I could survive without her. Not after being home and seeing how easy it would be to fall back into being the old me. Sophie had somehow become the anchor that tied me to Emma.\n\n\"Parents?\" she guessed.\n\n\"Yes,\" I replied, but then added, \"Not really. I mean they're part of it, but there's a lot more to it than that.\"\n\n\"Tell me,\" she insisted. I was so tempted to do exactly that, but I couldn't. Not yet.\n\n\"Maybe later,\" I said. \n\n\"Okay,\" she said with a concerned look. She paused for a moment. I knew she was trying to decide if she should push it or not. I was relieved when she changed the subject. \"Do you want to go out? A bunch of people are meeting at Murphy's.\" Murphy's was a local college hangout. \n\n\"Not tonight,\" I replied. \"Tonight I need a wine cooler, some popcorn and a stupid sci-fi or fantasy television show to bury myself in. Hell, I'd even take a Bad Movie Night right about now.\" \n\n\"Hmm,\" she said thoughtfully. \"This calls for something new, something special. Are you in the mood for a space western or an updated Buck Rodgers type of show?\"\n\n\"Buck Rodgers?\" I asked.\n\n\"You'll love Farscape,\" she grinned. \"But if you don't we can always switch to Firefly. We'll probably watch them both eventually anyway.\"\n\n\"Have I ever mentioned you are one odd girl?\" I snorted, feeling better already.\n\n\"I'm just happy I finally have someone who likes the same types of shows I do,\" she shrugged. \"Alex never understood my love of all things sci-fi and fantasy.\" I didn't want to talk about Alex right now, although I was happy to see Sophie able to bring him up without looking overly pained.\n\n\"What are we going to watch when we run out of sci-fi and fantasy shows?\" \n\n\"Run out?\" she laughed. \"That will never happen. Doctor Who alone has over thirty seasons and even I lost track of how many different Star Trek shows there have been over the years.\"\n\n\"You can't be serious?\" I asked in amazement, making her laugh even harder.\n\n\"Don't worry,\" she replied. \"If we ever do run out of television shows and movies, there's always books. I've been meaning to introduce you to some of my favorite authors.\"\n\n\"Actually, I'd like that,\" I admitted. \"I could use something to distract me when I'm at home. My parents flip out if I watch too much television.\" \n\n\"Are you sure your parents are actually human?\" Sophie teased. \"Maybe they're the ones from Mars? Either that, or maybe they're time travelers from the past?\"\n\n\"Sometimes I wonder,\" I said, laughed for the first since I got back. Well, actually, probably since I left to go home in the first place. Sophie was smiling at me. I knew she'd made me laugh on purpose and I loved her for it. \"You know, let's hold off on watching something new. Let's go back to Buffy. The last season is starting to get interesting.\"\n\n\"Buffy it is,\" she said, reaching for her laptop. It wasn't long before we were in our normal places on the carpet. Two shows and four wine coolers later I was feeling pretty good. We decided to watch one more episode. \n\n\"Looks like Willow is getting a new girlfriend,\" Sophie said as we watched. I didn't bother commenting. It would only fuel her to say something I didn't want to hear or talk about tonight. \n\nAt one point during the show Willow and her soon to be new girlfriend are sitting in a bar talking about when they first realized they were lesbians. The new girl pretty much always knew, but Willow only realized it when she fell in love with Tara for the first time. That's when Willow said eight words that totally threw me. \n\n\"It wasn't women. It was woman. Just one.\"\n\nI still wasn't convinced I was gay, but if I were, I knew it was something like that for me. Whatever I was feeling was tied to Sophie. That much was obvious. My mind kept going back to that as we watched the episode and I was having problems focusing, especially with Sophie so close. I was relieved when it finally ended.\n\n\"Thanks, I needed that,\" I said getting up off the floor, throwing my stuff back on the bed and putting the last two empty bottles of wine coolers in the garbage we used for them. \"Wow, five wine coolers each. We really were in the mood.\"\n\n\"Don't worry,\" she smiled. \"We've still got two left. It's my turn to buy. I'll ask Beth to get us another case tomorrow.\" Beth was an upperclassman who was pretty nice and didn't mind making an alcohol run for us occasionally. \n\nMy mind was still spinning from the wine coolers and thoughts about the last episode so I decided I needed to get out of the room for a bit. I reached for my robe and towel. \"I'm going to take a shower before I go to bed.\" I needed some time away from my roommate to figure some stuff out. \n\n\"I'll probably be asleep when you get back,\" she replied. \"I'll see you tomorrow.\" \n\n\"Goodnight,\" I offered as I slipped out the door. \n",
        "I was only halfway down the hall when I bumped into one of the girls who Sophie and I hung out with regularly. Pam asked about my holiday and then proceeded to talk about hers for a few minutes. I was happy she had a good time back home, but I was relieved when her roommate Edie joined us. Pam was likable, but a talker. \n\n\"I need to take a shower,\" I said a little too quickly. Edie hid a smile. She was a smart girl and recognized that I wasn't in the mood to chat.\n\n\"We still on for lunch tomorrow?\" she asked before I disappeared. \n\n\"Of course,\" I smiled. \n\n\"See you then,\" she replied and then let me go. Edie was someone special. She was probably my closest friend after Sophie. She wasn't really pretty, but she had a nice smile and a good sense of humor.\n\nI moved to the bathroom and got ready to get in the shower when I realized that I'd forgotten to replace my shampoo. I'd run out just before leaving for the holiday. I grumbled to myself the whole way back to my room.\n\nIt had only been gone five minutes at most, but Sophie tended to fall asleep easily so I eased the key into the lock as quietly as I could, opened the door and slipped in quickly so that the light and noise out in the hallway wouldn't wake her. To say my eyes grew big at what I saw would have been a huge understatement.\n\nSophie's laptop was open, but at an angle where I couldn't fully see she was watching. What I did see was more than a little shocking. There were naked bodies intertwined on the screen and although she had the sound low I could hear moaning. That was bad enough, but one of Sophie's hands was under her top while the other was underneath the elastic band of her shorts. It was pretty obvious what she was doing despite the fact that I couldn't see any actual skin. \n\nThe movement of the hand between her legs sent a shiver between my own that both horrified and enticed me. In some ways that was the worst part of the whole situation. \n\n\"I am so sorry!\" I cried, and then in a panic, I turned around and left the room as quickly as I could. I'd never seen an expression that was so completely mortified. I was guessing mine wasn't any better.\n\nI pretty much ran back to the bathroom and got into the shower as quickly as possible. It was the one place I knew I'd have some privacy. I stayed there a long time trying to get over what I was feeling. Certainly, there was plenty of embarrassment and mortification, but those weren't my only emotions. I desperately wanted the memory of what I saw Sophie doing out of my head, but nothing I did or thought about helped. Worse, my own excitement began to grow as I got over the initial shock. \n\nEventually I had to go back to our room. I was hoping that Sophie was asleep and that we would wake up the next day and act like nothing happened. I figured that was the best possible way of handling it. Apparently, Sophie didn't feel the same way. She was sitting up in bed waiting for me.\n\n\"Are you okay?\" she asked.\n\n\"I'm fine,\" I said tersely, trying to cut the conversation short. She frowned at my tone. Sophie obviously knew I was lying. I was many things right now, but okay wasn't one of them and the last thing I wanted to do was talk about it at that moment. Thankfully, she moved on to her next question.\n\n\"Are we okay?\" That one caught me off guard. I could see that she was really worried about how what I saw would affect our relationship.\n\n\"Of course,\" I said a little more calmly, going to the refrigerator and getting us both the last two wine coolers. I was still buzzed from earlier, but after what happened, I needed another drink. I guess Sophie did too because she took the bottle I handed her and opened it without comment. She also patted the bed next to where she was sitting. I sat down with some trepidation. \n\n\"This is all my fault,\" I added. \"I'm sorry I walked in like that. I wasn't trying to catch you at it or anything.\" Did I really just say that? I started talking faster. It didn't help. \"I needed shampoo and I thought you might be asleep so I came into the room quietly. I wasn't expecting to see you with your hand down your pants.\" God! Someone please shoot me now. \"What am I saying? I'm so sorry!\"\n\n\"Emma, take a breath before you explode,\" Sophie said kindly, patting my leg. \"It was an accident. They happen. I can't say I'm not embarrassed by it, but I'll deal as long as we're okay.\"\n\n\"We're fine,\" I said with a somewhat forced smile. Sophie's touch sent a thrill through me and I had to fight hard to hide my anger. I was so pissed at myself that I could barely think straight. The feelings I was having for Sophie were wrong on so many levels. Here she was worried about our friendship and all I could think about is how amazingly sexy she looked when I caught her earlier and how just her touch warmed my most private places.\n\n\"You don't look fine.\"\n\n\"I will be,\" I said still sporting my forced smile. She stared at me intently trying to gauge the truth.\n\nI'd been sexually active since I was fourteen, but nothing I'd done prepared me for what I felt just by sitting next to Sophie right now. I'd never once thought I had homosexual tendencies until she came into my life. I still wasn't sure. The whole idea scared me. I had to get a grip and find a way to control what I was feeling because it could ruin everything.\n\n\"I think maybe I should stop drinking for the night,\" I said, putting my half-filled bottle down, sure the alcohol wasn't helping. \n\nIt was all so stupid anyway. I knew I'd never act on what I was feeling for any number of reasons, not the least of which was that I did not want to be different from everybody else. I'd done that already as Mia and hated it. Emma was exactly who I wanted to be. She was a slightly above average looking coed with nothing particularly remarkable about her other than maybe the fact that she had an absolutely gorgeous roommate. She wasn't quite the girl next door I'd tried to make her, but she was a hell of a lot closer than who I used to be. No, there was no way I was going to do anything to ostracize myself from my new friends. I took a deep breath and let it out slowly.\n\n\"I think maybe you shouldn't,\" Sophie said with a shake of her head as she handed my bottle back to me. \"You look like you need it. Worse case, it will probably help you sleep.\" I didn't argue. I just finished it quickly. I felt more in control when it was gone.\n\nStill, despite everything there was a small part of me that wondered if I'd take the chance if Sophie wasn't so obviously heterosexual. I mean, she dated Alex for over two years and really seemed to appreciate the attention the guys on campus gave her. Well, all except Ben, but that was different.\n\n\"What's really bothering you?\" she asked. \"I mean, I know you've lived a pretty sheltered life, but even a virgin...\"\n\n\"I'm not a virgin,\" I interjected. The words escaped my mouth before I could stop them. At first I was horrified, but then I felt a wave of relief settle over me. It was time to tell Sophie the truth about my past. If it caused her to hate me then so be it. In the long run that might be better for both of us. My only hope was that she wouldn't spread what I was about to tell her around campus. \"In fact, I'm not any kind of a virgin.\"\n\n\"You're not?\" she asked, clearly floored by my admission. \n\n\"Not since I was fourteen,\" I admitted, standing now and going back to the refrigerator for another drink. I'd forgotten we were out, but it didn't matter. Sophie stopped me before I got there, took my hand and pulled me back to her bed. I hesitated before continuing. \"I lied to you. I'm not the girl you think I am.\"\n\n\"What's that supposed to mean?\" \n\n\"Look, everything I told you about what happened when I was in grammar school and earlier is true, but I pretty much made up anything after that.\"\n\n\"Why?\" Sophie was frowning, but seemed more confused than angry.\n\n\"Because I hated the girl I became in high school,\" I said honestly. \"I slept with a lot of guys, tried drugs and just about anything else that I thought might make me feel better. None of it did.\"\n\n\"I played with being Goth for a time and even after I gave that up I still pretty much wore black all the time,\" I continued, looking away from her now. I needed to tell her everything and I didn't want to see her face when she learned the truth. Well, almost everything anyway. There was no way I was going to let her know how I felt about her.\n\n\"Something pretty bad must have happened when you were fourteen for the girl you describe in grammar school to turn into the girl you're now telling me you were in high school.\" \n\nI sighed to myself. I didn't really want to talk about that, but I should have realized I'd have to with Sophie. She was too smart not to realize the truth.\n\n\"I call them Amelia and Mia,\" I said more to myself than her. \"I know it's crazy, but it's just the way I think about the different stages of my life. Amelia was a sweet innocent girl who was going to save the world. Mia was a completely screwed up, pessimistic bitch who probably wouldn't live long into her twenties, if she reached them at all.\"\n\n\"And Emma is who you made yourself into for college,\" Sophie said, catching on. \n\n\"For the rest of my life,\" I replied. \"Hopefully.\"\n\n\"So what turned Amelia into Mia?\"\n\n\"Exactly what you might guess,\" I said slowly. \"I tried to save the wrong boy, and he and some of his friends showed me the error of my ways. It was quite the awakening, but in a very dark way.\"\n\n\"I'm so sorry,\" she said gently. \n\n\"It was years ago,\" I said with a shrug. \"I've moved past it.\" Mostly anyway. Still, if felt good to get it off my chest and even better when I saw that she wasn't running from the room screaming.\n\n\"So, what made you decide to leave Mia behind?\" Sophie took my hand as we spoke. This wasn't working out quite like I expected.\n\n\"The decision was easy,\" I frowned. \"There was almost nothing about her I liked. It was believing I could change that was hard.\"\n\n\"How did you do it?\"\n\n\"My grandfather,\" I replied, remembering with a smile. \"It took my parents quite a while to react to the changes in me. Almost two years. I love them dearly, but they really are so clueless.\" I lost my smile as I remembered that dark time. \"They finally figured out something was up and sent me back to my grandfather for the summer. He was a life saver.\"\n\n\"Now I have to meet him,\" Sophie insisted. \"And thank him for helping to bring my best friend to me. I mean, I know it took a lot of work on your part, but I'm happy he helped show you the way.\"\n\n\"You know,\" I said slowly, looking at her for the first time in a while. \"This is not the reaction I was expecting. I mean, I did lie to you three months.\"\n\n\"Like I told you on our first day, we all have our secrets,\" she smile slowly. \"And I expect that one day you and I may shares all of ours, but until then I'm willing to accept whatever you're willing to offer. Besides, I don't really care about the person you were. I care about who you are, and so far you've been the best roommate and friend a girl could ask for.\"\n\n\"Yep, you're definitely an odd one,\" I said, smiling slowly. \n\n\"There are worst things to be,\" she retorted. \"Like unhappy.\"\n\n\"I've been both in the past,\" I said, losing my smile. \"I'll settle for normal and happier any day.\"\n\n\"I still think normal is overrated,\" she insisted. \"After all, how many normal girls spend their nights at college watching marathons of old sci-fi and fantasy television shows?\"\n\n\"Hey! We go out too,\" I argued, but I was smiling once more.\n\n\"Sure, once or twice a week. We watch every night.\"\n\n\"Shh!\" I joked. \"I don't want any of our hall mates to know.\"\n\n\"Oh, they know,\" she laughed. \"They just don't care. Well, except for one or two who I think might be jealous.\"\n\n\"Of course,\" I said easily. \"Who wouldn't be jealous if the time I get to spend with you. I guess we could let some of them watch with us.\"\n\n\"No thanks,\" she said in embarrassment. \"Could you imagine what would have happened if one of them had walked in on me earlier instead of it being you?\" Okay, her comment did not make me jealous not matter how much it felt like it. \n\n\"Speaking of which,\" I joked, reaching for her laptop. \"What were you watching? I couldn't quite make it out.\"\n\n\"Oh no you don't! I didn't clear my history yet!\" she cried, trying to grab the laptop from me, but I held her back with one hand and went to her history. I selected the last thing she looked at and a web page appeared with all different categories of porn.\n\n\"Hmm, interesting,\" I teased. The alcohol was obviously affecting me because I actually began reading off some of the categories. \"Hot Moms, Naughty Neighbors, Amateur Wives, Matures only... I wonder which one you like best? I bet I could figure it out?\"\n\n\"If you must know it's the one with the parodies,\" she sighed, finally pulling the laptop from me. \"Is it really any surprise considering how much I like Sci-Fi and Fantasy?\"\n\n\"I guess not,\" I laughed. \"I bet you were watching a Xena parody!\"\n\n\"Me? You're the man hater,\" she taunted back, clearly embarrassed and falling back on an insult she knew would bother me.\n\n\"For the last time, I do not hate men,\" I sighed loudly. \"And now that you know I'm not a virgin, I don't know why you insist on continuing to say that.\"\n\n\"Maybe hater is too strong a word,\" she replied. \"You're just not comfortable around them. I guess that makes sense now that I know what happened.\"\n\n\"Really Dr. Freud? Do tell?\" I asked, not wanting the conversation to turn serious. \"And what does it tell you about a girl when she watches porn parodies?\" I reached for the laptop again, but she fought me off.\n\n\"That's she's horny and misses the sex she used to have with her boyfriend,\" Sophie replied between laughs. \"And it's your fault I'm still feeling that way. If you had only waited another couple of minutes before walking in...\"\n\n\"What are you complaining about?\" I snorted. \"I haven't had sex in far longer than you and I think it's pretty obvious I was used to a lot more of it than you were.\"\n\n\"Well, in that case here,\" she said, surprising me by holding out her laptop and clicking on one of the links. \"Enjoy.\"\n\n\"Don't you dare!\" I cried, but we were both laughing so hard that it didn't matter. A moment later a porn parody of Star Trek came on. I took one look at a guy who was obviously supposed to be one of the main characters and burst out laughing. \"He's too fat to play that role and the ears look ridiculous.\"\n\n\"It's not his ears or his weight that got him the role,\" Sophie retorted.\n\n\"Well, it certain isn't his acting ability either!\" I laughed loudly, but then the green girl he was with began taking off his clothes. \"Wow!\"\n\n\"Exactly,\" Sophie said, putting the laptop down do that we could both see. The actor was rather impressive below the belt and the actress with him seemed to know exactly what to do with it.\n\nMaybe it was all the alcohol we drank earlier or maybe it was really that we both were pretty horny, but we continued to watch. Of course, we cracked jokes and made comments, at least at first.\n\n\"I can't believe she's letting him do that! She is suck a slut!\" Sophie said at one point.\n\n\"Hey, don't knock it until you try it,\" I shrugged. \n\n\"You mean you...\"\n\n\"I didn't say that!\" I interjected with a grin, but then I couldn't help add, \"But I didn't say I haven't either.\"\n\n\"I can't believe I thought you were gay,\" she said, shaking her head.\n\n\"Finally, she gets it!\" I cried, looking up and laughing, but I quickly focused once more at the screen. I did not want to look at Sophie right now. We were both obviously horny and what we were watching wasn't helping. I knew I should get up and move to my own bed, but I didn't. \n\nThe scene shifted to another actor only this time there were two actresses with him. They were all blonds and I couldn't figure out who exactly they were supposed to be, but by this point it didn't matter. I cringed slightly when I saw the two actresses actually kiss, but it wasn't disgust I felt as I watched. I licked my lips and decided just to enjoy myself instead of thinking about what I was feeling. It was easier that way. Besides, Sophie was clearly doing exactly that that. She hadn't said a word in the last few minutes.\n\nWe were both sitting on her bed with the laptop at one end and us at the other. Sophie moved so that she was close to the wall and laying down. I glanced at her and had to look away quickly. She was clearly getting more and more excited. Her eyes were latched onto the screen. I let mine follow hers and in moments I was lying next to her, but we were both focused on the screen and not each other. We each had our own pillow. I mean, I could feel the heat of her next to me, but I didn't look at her again, at least not until her arm bumped into mine. I glanced her way and froze.\n\nSophie wasn't looking at me. It was almost as if she forgot I was there, but that was ridiculous. Or maybe it wasn't. Sophie was rubbing her legs together and one of her hands was pressed between her legs and over her shorts. I remained frozen there watching her, sure she would stop any moment, but instead her hand shifted and suddenly her fingers were slipping under her waistband.\n\nI was about to call out her name, in shock if nothing else, but something held me back. I was pretty sure she'd stop if I did and suddenly I realized I didn't want her to. My own need had grown to the point where I wasn't thinking straight. Honestly, I wasn't even sure if it had anything to do with the alcohol anymore.\n\nI never really got into the whole self-gratification thing, but watching Sophie at that moment made me wonder if I'd missed out on something. Without really thinking about it I pushed the hand closest to her under my own waistband. I was already wet for obvious reasons. I tried to stay focused on the porn movie on her laptop, but truthfully watching what Sophie was doing in real life got to me a lot more. \n\nThe moan that escaped my lips a few minutes later wasn't planned, but I didn't try and hide it either. I was beyond caring about the right and wrong of what we were doing. Besides, it wasn't like we were touching each other. We were just taking care of ourselves in the same room. Okay, on the same bed with her arm rubbing against mine every so often, but that wasn't a lesbian act, not really. We were just two girls in need.\n\n\"Oh fuck!\" Sophie gasped out, as if my moan made it okay to talk now. \"I'm close!\"\n\n\"Me too!\" I whispered hoarsely.\n\n\"Look at them go!\" I glanced down at the screen to see what she was talking about. The guy was behind one of the girls taking her hard while her face was buried between the legs of the other girl. It looked pretty hot, but my eyes made their way back to Sophie's face as her orgasm neared. \n\nHer arm was pressed against mine as she worked herself into a frenzy. I wasn't far behind her. I spread my legs further apart until one was touching the closer of hers. Instead of pulling back, she pressed her thigh against mine. She was biting her sweat covered top lip as her head thrashed back and forth. It was obvious she was doing everything she could to hold off her orgasm. It was just as obvious that she was about to fail.\n\n\"I'm going to cum...right....now!\" Sophie finally cried out and lost it. \n\nShe clenched her legs around her hand briefly and then spread them even wider. I caught a glimpse of her swollen center as it throbbed in release. After that, I lost track of time...well, pretty much everything for a few moments. I was so spent afterward that it took me a few minutes to recovery enough to move.\n\n\"Are you okay?\" Sophie asked me gently. \"I mean, that was way over the top.\"\n\n\"Will you please stop asking me that!\" I said with a laugh as I rolled off her bed. I was afraid that if I stayed I do something terrible like try to kiss her. \"I'm fine. Actually, I'm better than fine. I guess I really needed that.\"",
        "\"Um, happy to help?\" she said, making me laugh again.\n\n\"You did,\" I admitted. \"I've never really gotten all that much enjoyment by doing that by myself. I guess it just always felt too weird, but having you next to me helped for some reason.\" I wasn't about to go into what that reason might be and thankfully, just this once she didn't push.\n\n\"I'm totally spent,\" she sighed. \"Maybe we should talk about what happened tomorrow?\"\n\n\"You and your insistence that we talk!\" I groaned. \"I don't want to dwell on what happened. It wasn't planned and it was more than a little weird, but it happened and we both enjoyed it. How about we leave it at that?\"\n\n\"So, you just want to forget the whole thing happened?\"\n\n\"Forget? Not really,\" I admitted. \"I just don't want to talk about it, at least not tomorrow.\"\n\n\"Okay,\" she said slowly. \"As long as it doesn't affect our friendship.\"\n\n\"Sophie, I'm starting to believe nothing is ever going to do that so relax and get some sleep.\"\n\n\"In that case, good night,\" she said, finally sounding okay.\n\n\"Good night.\" I climbed into my bed and lay there as she turned off the light and asked me yet again if she could put on music. I agreed easily and a few moments later I heard her breathing slow. I knew she was sleeping. \n\nI tried to do the same, but despite my exhaustion from the bus ride and the relief from what happened, sleep came to me slowly. The problem was that my senses were sending my mind data that made it hard to shut down, as if the memories weren't enough. \n\nI could still smell our mutual release in the air. Oddly, Sophie's was almost as strong as mine despite her being across the room. I couldn't figure out why until I remembered feeling the hand she used to take care of herself gripping my arm just below the elbow as I came earlier. I'd been pretty out of it at the time, but now that the moment came back to me I couldn't stop myself from bringing my arm toward my nose. Sophie's scent was intoxicating. I fell asleep breathing it in.\n\n**********\n\n\"Are you ready for your first finals tomorrow?\" I asked Sophie. Her schedule was tough. She had two finals tomorrow and then one the next two day before getting a four day break before her last one on Tuesday. \n\nI'd lucked out in that I only had four finals this semester and they were spread out perfectly. I'd already had my first and although it was tough, it wasn't as bad as I feared. Of course, the dreaded calculous wasn't until the end of the week. I had one final before that on Wednesday and one more early next week, but thankfully the last one wasn't supposed to be that bad. The professor gave out a study guide and based on the other two tests we took this semester his tests were pretty easy as long as you reviewed what he gave us. It wasn't even a real final. It just covered the stuff we learned since the last test.\n\n\"As ready as I'm ever going to be,\" she sighed. \"I feel like I know what's supposed to be on the tests frontwards and backwards, but there's a part of me that's afraid I missed something important. Frankly, at this point I just wish tomorrow was over already.\"\n\n\"I understand,\" I empathized. \"I felt the same way last night. How about we take a break from studying and watch something?\" We hadn't had a lot of time to do that recently with finals beginning, but I figured now was a good time if she thought she'd studied enough.\n\n\"You don't mind?\" she asked in obvious relief. \"I'm wound so tight I feel like a spring about to snap.\"\n\n\"I'll get the popcorn and wine coolers,\" I grinned. \"You pick what you want to see.\"\n\nSophie and I had a bit of awkwardness the day after we got back from Thanksgiving break and watched the porn movie together, but true to what we agreed on she didn't bring it up and as the days passed everything felt like it was back to normal. The only problem was that it wasn't, not really. \n\nFirst, she now knew the real me. I'd told her about how I was in high school and she hadn't told anyone. That I pretty much expected. What I didn't expect was the fact that she still treated me the same. In fact, if anything we seemed closer these days which brought me to my second concern.\n\nJust because we didn't talk about what we did that night and hadn't done it again, that didn't mean it didn't happen. Worse, I couldn't stop myself from thinking about it over and over again. There was a part of me desperate to repeat it while the rest was mortified by the thought. \n\nThe stress of finals wasn't helping. My mind was all over the place in regards to what happened, but I couldn't deny how good I felt the day after. Say what you want about sex, even self-gratification, but an orgasm was definitely a good form of stress release. Last night I was in such a bad way worrying about my first exam that I even tried to give myself one while Sophie was out. It hadn't gone well. I mean, it felt good enough I guess, but I still just felt too awkward and stopped well short of my goal. \n\nDeep down I knew that what I needed was another night like the one Sophie and I shared previously, but it's not like I could just ask for it. Not that I would anyway. I mean, it really was weird and shouldn't have happened. Besides, for all I knew Sophie regretted it and was happy we moved on. I was starting to think that maybe it would have been better if we did talk after all, but then again, probably not.\n\nWe watched the movie in front of the television, with the popcorn between us as usual while we drank our wine coolers. Neither of us went for a second because it was finals. Besides, I wasn't sure what I would do if I had another. I was already staring at Sophie almost as much as I was the movie.\n\n\"That wasn't half bad,\" I admitted once it was over and we stood, putting our blankets and pillows back on our beds. \n\n\"I liked it,\" she smiled, and then climbed into her bed. I did the same on my side of the room. I finally got Sophie to put the music without asking me every night. I had to tease her unmercifully to do so, but it was silly to keep going the way we were. I guess that was true about a lot of things.\n\nFifteen minutes later I was still awake in my bed, unable to sleep. I had the feeling that Sophie was as well because her breathing hadn't really slowed yet. Five more minutes passed and I was starting to get frustrated that sleep wouldn't come.\n\n\"Um Emma, are you awake?\" Sophie whispered, confirming she was having the same problems sleeping as I was. \n\n\"Yes,\" I sighed. \"I can't fall asleep for some reason.\" We couldn't see each other because it was dark in the room.\n\n\"Me neither,\" she said, her voice sounding odd. \"And I really need to get a few hours in before my tests tomorrow.\"\n\n\"Is there anything I can do to help?\" \n\n\"Um, not really,\" she replied. \"I just need a way of mellowing out.\" A couple more minutes passed before she surprised me by sighing loudly and adding, \"This is so embarrassing!\"\n\n\"What is?\" I frowned. \n\n\"Look, I don't want to freak you out or anything, but I really need to get some sleep before my finals tomorrow and I'm getting desperate. Sometimes when I can't fall asleep the only thing that works is if I take care of myself.\" She paused, probably embarrassed by her admission. I mean, it embarrassed me and I wasn't the one who said it. That didn't stop her from eventually continuing. \"I know I promised not to talk about what happened when we got back from Thanksgiving break, but it's not like it didn't happen and since it did I don't see why I need to stay awake half the night afraid to do what will help me sleep.\"\n\n\"Oh,\" I said, not sure how to react to what she was saying. \"Do you want me to leave? I can't come back in a little while.\"\n\n\"You don't have to leave if you don't want to,\" she replied softly. \"I just want to make sure you're not going to lose it if I try to take care of my problem.\"\n\n\"Go ahead,\" I said with some difficulty, my mind spinning. I know I should have left, but I couldn't make myself do it. Maybe what happened when we got back from Thanksgiving hadn't freaked her out half as much as I feared.\n\nStill, I was surprised when she turned in her laptop. I guess I figured she's do it quietly in the dark, but the glow of her laptop lit her half of the room. I faced the wall and tried to ignore it, but after a few minutes I couldn't stay that way any longer. I turned around and saw Sophie staring at the screen. Her hands were still visibly. Every once in a while she'd glanced my way and frowned before refocusing on the screen. It didn't take long to realize that despite her earlier words she was uncomfortable with me in the room. \n\nI got out of bed fully prepared to grab my robe and leave to give her some privacy, but I already took a shower earlier so I hesitated, not sure what to do. I guess I could have gotten changed quickly and left. That would have been the right thing to do. Instead, I let my eyes slip to her laptop screen. This time there were two couples.\n\nI don't remember moving to her side of the room, but I do remember feeling surprised again when she shifting over, clearly giving me room to join her. I hesitated only a moment before lying next to her.\n\n\"They're really going at it,\" I mumbled as I settled in. \n\n\"Yeah,\" Sophie said, clearly excited despite her earlier discomfort. \n\nWe watched in silence for a few moments. I refused to look at Sophie at first, but it wasn't like I couldn't feel her next to me. \n\nThe two women in the movie were on their hands and knees with the guys behind them. Both were brunettes this time, but neither looked much like Sophie or me. That didn't stop me from daydreaming about what it would be like to kiss Sophie. I had a pretty amazing imagination sometimes which wasn't really helping at the moment. \n\nEventually, the two women on screen kissed while the guys continued to do what they were doing. I'd been expecting it, but that didn't mean it didn't affect me. The heat between my legs grew and I felt myself begin to get wet. \n\n\"That's pretty hot!\" Sophie said, her voice thick with need. I wasn't sure what about the movie was getting to her, but I guess it didn't matter in the end. What did was that she finally slipped a hand under her waistband. I was relieved because by that point I couldn't resist touching myself. \n\nIt didn't take long for both of us to get excited enough to help ourselves, only this time when she pushed her hand under her waistband it was the one closest to the wall. That left the one closest to me free.\n\nSophie wasn't nearly as shy this time in seeking her satisfaction. She opened her legs wide. I did the same and rested my knee against hers. I hadn't realized she was using her opposite hand to take care of herself until she took it one step further by placing the hand closer to me on my thigh, somewhat tentatively. I moaned softly and her hand settled, sending shivered through me. I doubt she realized what her touch was doing to me. \n\nI could hear Sophie's fingers working their magic and she was already panting. It seemed like her orgasm was growing more quickly than mine, but I was sure I'd soon catch up. Sophie was rubbing up and down my thigh and squeezing every so often. I slipped a second finger through the sparse hair between my legs and had it join the first in pushing in and out of my opening. Neither of us would last much longer this way. \n\nThe room was beginning to smell like our excitement which reminded me of how I felt the last time. Sophie had grabbed my arm after her orgasm and her sticky finger had left her scent on me. I fell asleep breathing it in, intoxicated by the aroma.\n\n\"You smell so amazing!\" I gasped out. A part of me was mortified by what I'd just volunteered, but I was in too much need to care.\n\n\"You mean this?\" Sophie asked, and then stunned me by pulling her hand out from between her legs and thrusting it under my nose. Her other hand released my thigh and took the place of the first. Sophie's fingers were sticky with her need, and the smell...delicious! \n\nI had no idea why she did what she just did, but I was powerless to stop my reaction. I grabbed her wrist, paused a moment to fully enjoy her scent before taking her fingers into my mouth. Instead of being horrified Sophie moaned loudly. That was more than enough to drive me over the edge. The taste of her excitement and her moan were too much for me. \n\n\"Cumming!\" she gasped while I was in the middle of my orgasm. Her body thrashed next to mine, our legs intertwined. \n\nI'm not sure what we would have said to each other afterward, but thankfully, it didn't come to that. Frankly, both of our orgasms were so powerful that we pretty much passed out when we were done.\n\n**********\n\nI woke up slowly, feeling amazingly good. That only lasted until I remembered what happened the night before. Did I really grab Sophie's sticky fingers and suck on them? I groaned to myself as I opened my eyes. \n\nI was disoriented slightly because I'd forgotten that I'd fallen asleep in Sophie's bed. I quickly glanced over and frowned when I saw that I was alone. That's when I remembered that Sophie had an early test. \n\n\"Sure, and that's the reason why she let me sleep in,\" I sighed as I sat up. \"I'm sure it had nothing to do with what happened.\" I got out of bed and looked at myself in the mirror we shared. \"If you're not careful, you're going to lose the best friend you've ever had.\"\n\nSophie told me that it would be okay if I was a lesbian and it was certainly starting to look that way. I mean, I enjoyed sex with guys, but just taking care of myself next to Sophie and tasting her excitement had given me the best orgasm in my life. If I wasn't a lesbian then I was certainly bisexual. I had no idea how to deal with that, but at the moment it wasn't my greatest concern. Sophie was. Just because she said she'd be cool with me being a lesbian that didn't mean it was true. I mean sure, knowing her the way I did, it probably did mean that, but even still, that didn't mean she'd be okay with me being into her...and God knows, I was definitely that!\n\n\"I'm still not even sure I am a lesbian,\" I argued with the girl in the mirror. \"But I'm clearly a Sophian.\" I could swear my reflection was laughing at me. \"I know, Sophian? Seriously?\" I did begin laughing then, but it didn't help. \"You do know there is no way this is going to work out in the end, right?\" The answer was obvious, but I didn't want to dwell on it so I moved away from the mirror and grabbed my robe. I'd showered the night before, but I felt like I needed another.\n\nI dressed quickly when I was done, grabbed my book bag and headed off to the library. I had a test the next day that I needed to study for. Maybe that would help distract me from my thoughts. As it turns out, studying wasn't all that easy to do with your mind distracted. An hour later I'd gotten nowhere when I felt my phone vibrate. \n\nI looked at the text that came in. It was from Sophie. All it said was, \"My first test is done. It wasn't too bad. I'm going to take the second now. Want to share a late lunch afterward?\" I shook my head and smiled as I read it. Sophie always typed out her messages out fully. She refused to abbreviate. I had no idea why. It was just Sophie. Of course, that was only part of the reason why I was smiling. I figured if Sophie was texting me then we were okay.\n\nI texted back my agreement and told her to come get me when she was done. After that, I went back to studying. This time it went better. I actually got something accomplished. In fact, I was so enmeshed in my notes that I jumped when Sophie dropped her book on the table next to me.\n\n\"Well, thank God that's over!\" she sighed loudly as she sat next to me.\n\n\"How did it go?\" I asked. She spent the next few minutes telling me about both tests. I was only half listening. I was just too relieved to see her acting normally with me after what I'd done the night before to really care.\n\n\"I need to study for my history exam tomorrow, but I need a break first,\" she said when she was done. \"You hungry?\"\n\nThe rest of the afternoon went by quickly. We bumped into Billy and Ben at the cafeteria and they joined us. I made sure to sit between Ben and Sophie. She was still uncomfortable with him, but she didn't want to make a big deal about it. I wasn't thrilled, but I didn't say anything to him. That didn't mean I was going to let him get close to her.\n\n\"Don't forget about our party Saturday night,\" Billy said as we parted after lunch was over. Billy and I had become friends over the last few months. He was a decent guy.\n\n\"We'll see,\" I replied with a sigh. \"We both still have a final next week.\"\n\n\"Everyone whose coming does,\" Ben shrugged. \"Otherwise they'd be on their way home instead.\"\n\n\"A fair point,\" Sophie laughed. \"We'll probably make it.\"\n\n\"See you then,\" Ben said a little too intently. Either that or I was starting to get paranoid when it came to him. \n\nSophie and I went back to the library and studied together. We spent most of the time quietly focused, but it was a companionable silence. Afterward, we went to dinner where we bumped into a few hall mates. Most of the time was spent complaining about tests and studying, but we laughed a lot too. We even agreed to go with a few of them to see the Christmas lights in town since we were mostly done with studying by that point anyway. We stopped for coffee and hot chocolate after we were done and then went back to our dorm. Sophie and I went in to our room to study.\n\nIt was getting late after we spent about an hour quizzing each other on our notes so we decided to go to bed. Neither of us were in the mood to take a shower, so we changed, shut the light and went to bed. I was feeling pretty good by the time I'd closed my eyes. Sophie and I were okay. She hadn't said a word about what happened the night before. I figured she just wanted to forget the whole thing ever happened. Apparently, I was wrong because not five minutes later she turned on her laptop.\n\n\"Do you mind?\" she asked as if she were talking about the weather.\n\n\"No,\" I barely got out. I think she figured I'd join her again, but honestly, I was afraid to. I was scared of what I might do. \n\nIt took Sophie a lot longer to get excited without me sitting next to her. I could understand that. I mean, if I wasn't doing it with her then I was an audience and who wanted an audience for doing that? Still, eventually she was able to get her release. I didn't see if because I refused to look her way the entire time. That didn't mean I didn't hear it, or worse yet, smell it. \n\nIt took me a very long time to go to sleep that night and a large part of me regretted not joining Sophie earlier, but it was the right thing to do, right?\n\n**********\n\n\"I'm going to fail,\" I said in a monotone two nights later as we dressed for bed. \"I hate calculous!\" Sophie had the audacity to actually laugh.\n\n\"You'll do fine,\" she insisted. \"And just think, you only have one more test afterward and it's easy.\" Both of our tests next week were jokes. We'd spent plenty of time complaining about having to stay another weekend because of them. \"Just get a good night's rest and everything will be fine.\"\n\nFifteen minutes later I was still awake. The night before we'd both gone to bed without a problem. Sophie hadn't opened her laptop and taken care of herself again. I remember being relieved and more than a little disappointed. \n\nFive more minutes and I was ready to scream. I was tossing and turning so badly that I was close to getting whiplash. \n\n\"Oh for Pete's sake!\" Sophie sighed, sitting up in bed. I guess I was keeping her awake. She opened her laptop and went to the same site we'd used in the past. \"Here, watch this and get some sleep.\" Sophie was holding out her laptop to me. I'm sure I was blushing badly at what she was suggesting, but that didn't mean she was wrong. "
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "love",
        "college",
        "awakening",
        "gay",
        "lesbian",
        "masturbation"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/reinventing-emma"
}