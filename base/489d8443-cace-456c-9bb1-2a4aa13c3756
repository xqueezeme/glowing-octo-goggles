{
    "title": "The New Principal Ch. 29",
    "pages": [
        "It had to be a miracle, or something close to it, especially after parting ways with a sizeable portion of our science faculty, but we were able to keep everything on track to close up the semester only one week late. It was the last day of classes, then there would be a dead week for studying before the final exams. \n\nThe weather had turned cold, we even had a few light snowfalls, but the campus seemed warmer than ever. \n\nI was still teaching but my history class was a complete one-eighty from what it was before. Every seat was filled, but instead of the dead-eyed rows of fear and tension, the room was filled with small groups of women arguing passionately over the context of the age of revolution in Europe. \n\nI roved around the groups, listening in, making corrections and answering questions. When I got to Deborah Xu's group, I leaned over to help clear up a timeline for one of her partners. As I was finishing, I felt a hand sliding up the inside of my leg. I didn't react, and it moved higher, eventually grabbing tight onto my cock. \n\n\"Susan?\" \n\nThe class monitor, in her flawless uniform, popped her head up from her group. \n\n\"Yes, sir?\" \n\n\"Take down Deborah's name for one demerit. Unsuitable behavior in class.\" \n\nThere was a teasing, \"ooooo\" from the entire class, followed by scattered giggles. Deborah gave an exaggerated pout. \n\n\"I didn't do anything, Principal Lee!\" \n\n\"You know you did, Deborah. We've only got this one class left and we need to get this review prepped.\" \n\nBy that time Susan was at our side and filling out the demerit form. \n\n\"Spa, admin, or service?\" \n\nWe had changed up the demerit system a bit after I came back. Students could still work off demerits by working in the spa, although they got paid now, and there was a waiting list from non-demerit students who wanted to work there. But they also could work for Kimberly in the administration building, or work at the whim of any teacher who needed help. To be fair, it wasn't a very consistent system as far as punishment goes, as we had a real problem with recidivism. But we didn't have any serious behavior problems. I don't think we had anyone complain about that though. \n\n\"Deborah, you are already working in the spa, right?\" \n\n\"Yes, sir.\" \n\n\"Well, then, why don't you see if Ms. Lashgari needs any help with her extra-curriculars.\" \n\nI swear Deborah gave a deep giggled moan in excitement to help out Jennifer with her 'extra-curriculars,' But she kept her face down. Jennifer was in charge of most of the extra-curriculars now, so there was a lot to be done, and I was sure that Deborah would be put to work in a serious way, but I was equally confident that Jennifer would leave time for some cool-down work and plenty of stretching and massage. Can't leave anyone in danger of straining anything, can we? \n\nSusan filled in the form, trying to maintain the seriousness that she strove for in all of her duties, but I could see the hint of a grin on her face as she pushed it over to me for my signature. \n\n\"Ok, now. Back to work. You guys haven't even started the section on colonial influences. Hop to it.\" \n\nA cheerful chorus of \"Yes, sir!\" rang out as I moved on to another group, but there was a bit of whispered teasing before they got back to the assignment. I didn't mind. Honestly, the new atmosphere was much conducive to learning, and I wasn't worried about anyone's grade in that class. \n\nEventually time was up. I released everyone and the room echoed with backpack zippers and cheerful chattering. \n\nI was heading back to the office, but took a detour through the gym, hoping to catch Jennifer after her yoga class. \n\nThe yoga class wasn't a credit bearing course, but enough students called for it that Jennifer put it together, and it had been a real hit. In the short time she had run it, it was such a success that we were already planning for other activity classes. Swimming, massage, and live-art drawing seemed to have the most interest. We were also looking at opening some classes to the community. \n\nThe gym was silent, so I entered quietly myself in case the class hadn't ended yet. \n\nI was right. The room was stiflingly hot, and it felt like someone had turned up the humidity so much that I felt beads of sweat running down the small of my back within seconds of coming in. Jennifer had told me this was all part of the course design. \n\nThere were a couple dozen students on mats in loose ranks facing away from me toward Jennifer at the front of the class. She was only recently off crutches, but still had a cane that she absolutely hated to use. Her doctor was stunned at how well she had been recovering from the gunshot, but of course Jennifer was frustrated that she couldn't get back to full intensity training immediately. \n\nNext to her was the student that had helped out with her class on the morning after the storm, I thought her name might be Liz, but wasn't sure. She must have been in front of the class to model the poses, since Jennifer wasn't able to show the more difficult ones. \n\nBut Jennifer wasn't passive. She moved purposefully down the rows, despite her limp. She offered quiet advice and adjusted body parts here and there. \n\nDid I mention they were all nude? The students wanted to recreate that earlier class completely, including the lack of clothes. That morning after the storm, there was still more than a bit of residual effect of the trick, but I wasn't anywhere nearby when they put this together. Jennifer knew that I wouldn't stand in the way of the class, but she still gave me a good pitch, including all manner of benefits to body and mind. \n\nI'm not proud to say that I can't remember any of her pitch, but I certainly could see the benefits from where I was standing. \n\nWhen Jennifer got to the back row, she noticed me standing there. She smiled warmly, then shot a glance at the clock on the wall. \n\n\"Alright, ladies. It's time to move into a couple of cooldown poses. Let's start with the bridge, then move into the regular final group. Liz, model for us. Everyone, take a look at Liz, that's what you want to look like. We've done the bridge before, I know, but focus on the small things. Feet parallel, shoulders and the length of your arm all touching the mat. Good. Okay, shift into your pose. Liz count us out.\" \n\nEveryone was glistening with sweat in the heated room. I did remember that it was supposed to help with loosening muscles, Jennifer said. But as the girls got on the ground and lifted their hips into the air, I sighed at the row on row of all sizes, shapes, and colors of slippery flesh. They were arching their backs up which made the breasts of the more endowed women side back and up toward their heads. New lines of sweat ran down tight thighs and perky breasts into little puddles on the mats. \n\nI was lost in a daze, just looking over them all. \n\nThe students silently held the pose as Liz counted out the time. Jennifer moved slowly toward me. I couldn't help shifting my attention to the most physically fit women I have ever known as she approached. Of course, even though she wasn't participating, for the sake of unity, she was also nude. Well, she did have a kind of compression binding on her thigh, but other than that she was completely bare, and utterly flawless, just like some Greek goddess of fitness. Her hair was pulled back in a ponytail, but matted at the temples. The sweat was rolling off her as well, running trails down the firm lines of her hip and thigh. There was a heavy bead of sweat clinging but not quite falling from her left nipple that just transfixed me. \n\n\"Eyes up here, Lee.\" Her smile broadened as she reached out to lift my chin. \n\n\"I'm sorry, it's just...\" \n\n\"Yeah, yeah, yeah. I don't mind. I just don't trust you in a room full of girls like this. I told you, this isn't a sexual thing at all. This is a serious body fitness regimen.\" \n\nI lowered my voice. \"So, you aren't turned on at all at this view?\" \n\nI stepped forward and turned her around by the shoulders. \n\nLiz was still counting off the pose. I stepped up behind Jennifer and pressed up against her back. \n\n\"You're telling me that none of this does anything for you?\" \n\nShe mumbled something low and incomprehensible. \n\nI moved my hands down, wrapping her up by the waist. \n\n\"Just look over there at the redhead. What was her name?\" \n\n\"Marie...\" It was obvious that she has already been looking quite closely at the Amazonian Maire. She was tall, taller even than Veronica, and she had an adorable coltish awkwardness that I was certain would appeal to Jennifer's natural desire to help out. I imagined the diminutive Jennifer stretched out against the long lanky Marie. \n\nBecause I am so much taller than Jennifer, I had to lean down to whisper in her ear. My hands naturally lowered slightly from her belly as well. Her belly was slick with sweat. \n\n\"It looks like Marie needs some help with the bridge pose, doesn't it? Shouldn't you be over there, lifting up her back? Running your hands all over her, helping her keep good form? She might need some help, wiping that sweat off of her. You wouldn't want it to get into her eyes, or mouth, would you? Maybe you wouldn't need a towel. Maybe you could just use your mouth. You could just lick your way up...\" \n\nJennifer had been leaning back into me, her gaze locked on the wavering figure of Marie as she tried to hold the pose. She shuddered and moaned slightly as I described what I knew she wanted to do. \n\nShe grabbed my hand and quickly dragged it down over her need. I pressed a finger into her, eased more by her sex than her sweat. My other hand darted up to her breasts, fondling with the force that I knew she preferred. \n\n\"Ms Lashgari?\" \n\nLiz's voice rang out in the quiet of the big room. \n\n\"Ms Lashgari? Should we do the extra cooldowns, too?\" \n\nJennifer groaned, but stepped forward, untangling herself from me. \n\n\"No, that's okay, Liz. Excellent job, Liz, and everyone, well done. I'll see you again for one more meeting before finals. If there are no questions, let's all hit the showers.\" \n\nThere were sighs and contented noises mixed with girls chatting as they stood and put away the mats. \n\n\"Oh, Ms Lashgari?\" I smiled to see that Maire had approached us. She was looking everywhere but at Jennifer's godlike body. \n\n\"Yes, Marie?\" \n\n\"Um, well, I was talking to Liz about my upper thigh. It's kind of stiff and tight. She said that... She said that you gave her a massage once that really helped her and I was hoping...\" \n\n\"Oh, of course, Marie. Let's get to it now, while you're all hot. I'll find you in the showers.\" \n\nThe flush that spread across Marie's face and chest was almost certainly not from the heat. She smiled awkwardly, looked at me and blushed even more, then turned around and sped off to the showers with a \"Thank you!\" thrown back over her shoulder. \n\n\"'While you are all hot?' You're worse than I am. And I should trust you in a room of girls like this?\" \n\nShe laughed a low laugh that sounded more than a little bit hungry. Her eyes were on the door that led to the shower. \n\n\"Yeah, I suppose I am at least as bad as you are.\" \n\n\"So anyway, the reason I came by was to give you a heads-up. I'm sending Deborah Xu to you for demerit service. I figure you could put her to work closing out the extra-curriculars for the semester. Or, you know, whatever you have that needs doing?\" \n\nShe took her gaze away from the door and looked back at me with an arched eyebrow. \n\n\"Or whatever I have that needs doing? I've already got three girls working off demerits with me right now. You could send her to Veronica with her hush hush special collections project. I'm sure she could use the help.\" \n\n\"Ah, thanks for reminding me. I need to go check in on her, too. But as for Deborah, well, she was particularly excited when I suggested she could work for you. Are you telling me that you couldn't find any position she could fill? I know with your leg still not at one hundred percent, you might need a little more assistance.\" \n\n\"Yeah, damn. I am as bad as you are. Maybe worse.\" Her eyes lost focus, and I could tell she was thinking of all the assistance she might be able to get out of the four students she would have working for her. \n\nI thought I'd help her along a bit. \n\nI looked into her unfocused eyes. The funny thing was that I could see in her mind what I already knew. She had put her lust to one side when running the yoga class. She was a professional and a good teacher. So I just pulled down the barrier for a moment and let the lust run free. \n\nI moved forward quickly and kissed her. She pushed back at me hard, pulling my head down to her and running her tongue up and into my mouth. \n\nShe pressed herself to me, molding her nakedness to my body with the desire that had been unleashed. \n\nBut I pushed her back. She held my bottom lip delicately between her teeth as I stood up straight, separating us. \n\n\"Now, now, you've got a tight upper thigh in that shower room that desperately needs attention.\" \n\nShe lowered her head, and make a little happy growl. \n\n\"I'll catch up with you sooner or later. Go take care of your girls.\" \n\nI spun her around and gave her a swat on the butt to get her going. Her ass was probably the only place on her body aside from her boobs that had any fat at all, and I enjoyed the way it reacted. She looked back and gave me a mock scowl, I don't think there was anyone else she would allow to do that, particularly any man, but she was already moving with a purpose to the showers. Her limp was barely noticeable. \n\nIn the beginning, I had planned on stopping by the library, but a whole room full of women doing naked yoga can really throw off your focus. Thanks to Jennifer's reminder, I aimed my feet in that direction. \n\nThe intricate carved hardwood and polished brass made the library probably one of the most beautiful places on campus. But it couldn't hold a candle to the woman who was standing at the circulation desk. She was handing over a small stack of books to a student who seemed caught in a haze of fear and adoration. \n\nVeronica towered over nearly all of the students, but not just in height. She was basically a geek, a loner and sometimes painfully socially awkward. But she played this to her advantage in so many ways. She loved the image of the sexy librarian ice queen, and she was so very good at playing the role. Just like Jennifer, she has a perpetual crowd of worshipful students attending her, hoping to receive a boon from their idol. \n\nThat day, Veronica was wearing her standard kit: long black pencil skirt, but with a dangerously high slit up the side to her thigh, dark tights or hose, unnecessarily high high heels, and a tight white blouse that seemed to act like a corset, unbuttoned just low enough so that even the most prudish person of any persuasion couldn't help but take a peek. She wasn't voluptuous, but she took great pleasure in wearing clothes that showed off the very real and delicious curves she did have. Her dark hair was done up with two pins, maybe chopsticks, in a classic bun. \n\nBut it was her face that raised her into the pantheon of beauties in my book. She had the most incredible lines, like she was carved from a deep mahogany-tinted marble. Some might think her face was too severe, but only if they had never seen her smile. With a smile, those lines, jaw, cheekbone, nose, all seemed to soften into pure joy. And anyone that heard her laugh, well, that unihibited, pure snorting geek laugh was simply music to my ears. \n\nI mean, I loved all of my three girls, but Veronica, Veronica was just something special in every possible way. \n\nShe must have sensed that I was staring at her, because she glanced over in my direction, and I saw the smallest hint of a grin and an eyebrow raised in curiosity. \n\nI was shaken out of my reverie and moved to the desk. \n\nA small clump of students huddled around us expectantly. \n\nVeronica turned back to them, her mask recovered. \n\n\"You have your books?\" \n\nOne of the braver girls replied. \"Um... Yes, Ms Rai.\" \n\n\"Then do you need to be here?\" \n\nThere was a pause as they shifted their weight from foot to foot, clearly hoping to find a reason to stay around. \n\nVeronica tilted her head meaningfully. \n\n\"Yes ma'am... umm... Thank you Ms Rai. Principal Lee.\" \n\nA few others mumbled the same and the troop of students shuffled out of the library. \n\nI looked over at Veronica and tried to stifle a laugh. \n\n\"Your little worshipers are adorable.\" \n\nShe turned her entire body to face me, then leaned on the desk. For someone who struggled to talk to a stranger, she had a perfect innate understanding of how to make the most sensual lines with her body. \n\n\"Do you really want me to shush you, right here?\" Her face was stern, but her eyes sparkled with joy, betraying her amusement. \n\n\"Maybe?\" \n\nShe sighed in resignation. \"Not here, anyway.\" \n\nShe glanced around and found a student who was pushing a reshelving cart. \n\n\"Ginger. Take the desk. I will be in a meeting with Principal Lee.\" \n\n\"Yes, ma'am.\" \n\nGinger was a serious looking girl with long jet-black hair. She looked like she wanted to model her every action on Veronica. Even though she wore the same uniform as everyone else, her's seemed somehow darker and more severe. She parked the cart to one side and them moved behind the desk, every movement clean and with purpose. \n\n\"Very good, Ginger.\" \n\nVeronica made sure that I saw her hand reach out to Ginger's shoulder. Veronica moved slightly behind her, then looked me right in the eyes as she moved her hand lower. Veronica winked at me, telling me what to do. I smiled and looked to Ginger's eyes. \n\nWhen I looked her in the eye, she returned the gaze, her expression not quite as in control as she might have hoped. \n\nI didn't want to enter into her mind. I figured Veronica only wanted to get her worked up a bit, so just pushed gently. \n\nHer eyes opened wide, then wider. In my peripheral vision, I could she Veronica's hand sliding lower, from her shoulder down her back, then over to her side, right above her hip, continuing lower. \n\nThe library was almost totally silent, only the sound of pencils on paper and muffled tapping of laptop keyboards as background to our little game. \n\nEven without seeing in her mind, I could feel Ginger's arousal. She had already been a bit worked up. I wouldn't be surprised to discover that she was always a little on edge in the library. Veronica had that effect on a lot of the girls. Her arousal was coming off her in small little waves. It was also clear that this was not the first time Veronica had played with her, but having me standing right there watching, that was something new. And as much as she was putting all her effort into locking down her expression, the flush that turned her face a bright red and the glistening of sweat showed her struggle. \n\nThen Veronica stepped closed and leaned slightly over her, placing her breasts deliberately into the girl's back. The movement naturally helped her hand slide, gently down and forward from Ginger's hip. Veronica leaned in slightly more, lowering her face to her ear. With her other hand she lifted Ginger's hair up and over her ear so she could get even closer. \n\nI thought it was hardly fair that Ginger was the sole focus there, so I pushed at the lust of both women. I knew Veronica's mind and body so well that I had to be careful lest I overcharge her. Ginger's eyes fluttered slightly as she felt the effects of my trick plus the exploring hand of her boss. \n\nVeronica's mouth was right at Ginger's ear, but her eyes were on me. Her smile was wide and predatory and sexy as hell. She whispered something in her ear, and then bit down gently on the lobe, right above a silver cuff that was hooked there. ",
        "Ginger closed her eyes and leaned back into Veronica's body, and that must have been what she was waiting for. In a flash, Veronica pressed her hand down into Ginger's crotch for a precision targeted rub, then quickly stepped back and walked right out from behind the desk. \n\nGinger's eyes flashed open, in a panic at the loss of sensation. \n\n\"We'll be down in the special collections. You can handle everything up here for a while, can't you, Ginger?\" \n\nVeronica was at my side now and we both looked back to her. She was beyond flustered, left on the edge of trick-enhanced ecstasy. \n\n\"Both hands above the desk, young lady. You must be the professional face of the library.\" \n\nGinger looked like a deer in headlights, but she slowly put both hands on the desk, palms down. \n\n\"Any questions?\" \n\n\"No ma'am.\" Her voice quavered. \n\n\"Very well, I'll be back later to take care of you.\" \n\nThe voice brightened slightly, but was still unsure. \"Yes, ma'am.\" \n\nVeronica spun deliberately on her heel and strode off toward the door that led downstairs. \n\nI took another glance at the Ginger, who was holding herself together remarkably well, then followed along. \n\nWe started down the stairs, but as soon as the door closed behind us, Veronica stopped short and I nearly ran into her back. She took a step back up one step and pressed into my chest. \n\n\"Do you remember this stairwell?\" She spoke without looking back to me. \n\nI smiled wide and pressed into her. \"Of course. We only knew each other for, what, a week?\" \n\n\"Well, when you meet a guy in your dreams, I think that advances the whole timeline.\" \n\nI laughed as she pushed back harder into me. My hands moved on their own, sliding up from low on her hips to her waist. \n\n\"Then we were right here, and we saw those kinds messing around in the library, that dancing girl, and I just couldn't control myself. Do you still have her underwear?\" \n\nI could feel Veronica's breath getting shallower as my hands moved lightly over to her belly and up toward her breasts. \n\n\"I think your lack of control was why they were messing around in the library in the first place.\" She put her hands on top of mine and pulled them up over her breasts. \"And don't tell me you weren't playing eyes with poor little Ginger up there either. She was fluttering like a leaf. I nearly had to hold her up.\" \n\n\"It was so generous of you to hold her up. I saw how you were holding her up. But you weren't feeling anything at all, were you? The queen of the stacks is always in control of herself, isn't she?\" With that tease, I squeezed tight and pinched where I knew I would be most effective. Sure enough, Veronica moaned gently in appreciation and arched her back slightly to try to get a bit more contact with my rapidly growing arousal. \n\nShe didn't reply, so I pushed the matter further. I sent a general wave of lust into the dark stairwell, and immediately felt that lovely tingling lightning arc between us. \n\nWe spend a perfect moment holding tight on to each other, then she peeled my hands off and continued to walk down the stairs without even looking back to me. But she threw an extra sway in her hips to keep me in line. \n\nWhen we got down to the lower level, I could feel the buildup of that lust fog was thick in the stairwell and in the lower rooms, but didn't have time to think about it as she was moving with a real purpose. \n\nI headed toward her office, assuming that whatever business she had to discuss would be there, but she moved to another part of the basement entirely. \n\nShe finally stopped at one of the doors I had never entered. It was unlike the rest of the library, a simple flat door that wouldn't be out of place in any office park across the nation. \n\nVeronica stopped next to the door and turned to face me. She looked perfectly in her element, the prime librarian. \n\n\"Now, Principal Lee, what I needed to show you here are our special collections, or rather one collection. One very special collection.\" \n\nShe opened the door and ushered me into a surprisingly large room. There were two large wooden tables in the front, then bookshelves that ran back deep into the distance. But on the shelves were mainly tall boxes, not books. On one table were three small platforms that looked like mini podiums. They were covered in what looked like velvet. \n\nI looked back at Veronica, puzzled. Her face was transformed. She was trying to tamp down on an incredible excitement, and she just couldn't. It was pouring out of her entire body. She was almost hopping from foot to foot. \n\nHer excitement was contagious, but I didn't know why I was getting excited with her. \n\nThen she gave out a girlish squeal of joy. \n\nThen it flowed out of her like a flood in words so fast I could barely follow her. \n\n\"Ben. I can't even tell you what we've got here. I mean back in the day, I knew there was something here, and when I started working, I took a quick look at them, but the catalogue we had for it was totally wrong. The records said it was all maritime law and records of the of timber trade from up the coast, so I didn't look any further, but when you brought me back to school, I took another look and saw some of it, but I had no idea what it all was, what it all is. I mean, I was so stupid for not double checking and looking more into it, especially when the catalogue was so wrong, I should have known something was at least worth looking into, but then everything went to hell and I didn't have a chance to...\" \n\nI stepped forward and put my hands on her shoulders. Her eyes were dazzling and she stopped talking to just smile the most pure smile I had ever seen on her face. This was a side of her that I hadn't seen. I had seen her in orgasmic ecstasy, blissed out with her body firing off joy out of every pore, but this was different. This was professional, mental. This was a brilliant woman with impeccable training who had stumbled on a discovery that would change her professional life, but I didn't know how or why. \n\n\"It's smut, Ben!\" \n\nI laughed out loud, blowing off all the energy I had built up just watching her get so worked up. \n\n\"No, no, no, you don't get it. It's smut. This entire room. I thought it was just basic pornography and stuff that the loggers would have in their camps and on the boats. That's what I saw first. It was cool, but nothing special. Good enough for local interest maybe, but not anything that people would go out of their way to look at. But, Ben, now that I've got those demerit interns, I've been looking deeper. I didn't believe it at first, but each box was something new. And it's not just recent stuff, and it's not just local stuff. We've got books that are hundreds of years old, books from all over Europe, India, oh, god, Ben, you have got to see the Japanese and Chinese stuff we've got. I've looked, and I could be wrong, because I can't get into all of the databases yet, and there are a lot that aren't in English, too, which is a huge problem we'll have to fix, but Ben, there's stuff here that just doesn't exist anywhere else in the world!\" \n\nI started to understand the enormity of her discovery. I squeezed her shoulders, trying to bring her back to earth and a more understandable cadence. \n\n\"Show me, Veronica. Show me.\" \n\nShe eyes opened up even wider and she literally hopped up and down a couple times. \n\n\"Yes!\" She bolted over to the table and picked a pair of white gloves up from a small box. She put them on and winked at me. \n\n\"I'll be right back!\" \n\nThen she disappeared into the shelves. \n\nI sat down at the table. I didn't know what this really meant. Old books were great, old unique books were even better, but her excitement was pegging so hard that this had to be bigger than I understood. \n\nShe appeared in a flash, but now walking slowly, deliberately, despite her obvious energy. She placed a box on the far table and removed its lid. I leaned over to see her gently, lovingly lift a massive manuscript tome. She placed it on one of the little padded podiums and we both held our breath as she opened the thick leather cover. \n\nEven I could tell that it wasn't paper, but parchment. She has opened it to a random page in the middle of the book. It was hand lettered, something like Latin, but certainly not the same Latin I had in my classes at college. \n\nShe turned a few more pages, and we found illustrations. Lurid and hilarious, scenes of all manner of coupling greeted us. There were orgies and sodomy, masturbation and the most unbelievable toys used in improbable ways. We both leaned closer to try and parse out the writing, without much success. \n\nIn a flash, we had looked through most of that first book. \n\n\"They're all like this. Boxes and boxes full of them. I haven't even gone through a dozen in any detail yet, but I've peeked in hundreds. They're all like this.\" \n\nWe were sitting hip to hip on a bench at the table. She turned to me to explain something, and I caught her scent. It wasn't just the natural scent of her skin. She looked me in the eyes and she swayed slightly. \n\nI realized that the room was thick with a fog of lust. I hadn't done anything, had I? Nothing conscious, anyway. I mean, looking at porn with one the sexiest women on the planet might have had something to do with it, but I didn't mean to. \n\n\"Ben... did you?\" \n\nHer gloved hand touched her cheek, then lowered to her neck. \n\n\"No. I mean, I don't think so... but god...\" \n\nShe nearly tackled me. \n\nIn a flash, her lips were on mine and she had climbed over side-saddle on my lap. I wrapped my arms around her and pulled her tight. \n\nHer kissing slid to the side and down to my neck right below the ear. \n\n\"We don't have time for this, Ben.\" She mumbled into my neck as her hands started to fumble with the buttons on her blouse. \n\n\"We'll just have to be fast, then, won't we?\" \n\nShe pulled back and looked me in the eyes. Her expression was wild with desire. \n\n\"I'm already so hot... but... could you give me a little push?\" \n\nI giggled a bit. \"You sound like an addict. Just a little push, Mr. Pusher Man?\" \n\n\"I just want to get off hard and fast, you jerk. We can play lovely dovey cuddle buns later.\" Her voice dropped deep and smoky. \"I just want to get fucked. Can you do that for me Principal Lee, or do I need to go find Kimberly or Jennifer?\" \n\nBy answer I looked deep into her mind, once again humbled and touched by her clear affection for me. I focused on the pools of lust, already spilling their banks and flowing free. I reached out and encouraged them. There was no need for subtlety, and I could even feel her helping me, opening herself up to my push. Her mind glowed and her entire body responded like a thoroughbred moving from a trot into a gallop. \n\nShe may have been on her way to losing her mind with lust, but she had the presence of mind to twist around and carefully push the platform and book to one side before she hopped up onto the table. \n\nShe wriggled her hips to pull her skirt up, nearly tearing it at the side slit, as I finished unbuttoning her blouse, then unhooked her dark skin-tone bra. \n\nI looked up at her, now wonderfully disheveled. Her skirt was hiked up to her upper thighs, blouse and bra open, exposing her perfect breasts topped with those tiny peaked nipples that were rising and falling with her labored breathing. Her hair had started to come down from the bun. The chopstick pins were barely holding it together. \n\nI could tell that she wanted exactly what she said, but that didn't mean I wouldn't tease her a little bit and enjoy the moment myself. \n\nShe reached out to my belt, but I swatted her hands away and went down on my knees. I wrapped my arms under her thighs and scooted her closer to the edge of the table. \n\nShe immediately knew what I was after and groaned in frustration, but she clearly wasn't going to stand in my way. \n\n\"Ben... I just want your dick, you silly man. We don't have time for... oohhhhgod... Hnnnngggghh...\" \n\nHer panties, simple silky black, were tight but I ducked between her legs and was able to grab onto them and yank them a little bit off only to find her hands there to help me. She bent a leg and slipped it free, allowing me to open her legs up even more. \n\nI had slid my mouth down over her and licked her heavy lips, already thick with cream, right up to her clit. \n\nEven though I did want to bring her off quick and hard, I was never able to resist licking, nibbling and sucking on her delicious labia that spread wide for me. They bloomed open and just begged to be teased. Pulling on her outer lips, then licking as deep as I could into her, then delicately flicking her clit, my tongue was everywhere. I knew how she usually wanted to be built up, but she was already on the edge of popping. \n\nHer arms shot back to hold herself up as she leaned back and pushed herself hard onto my face. \n\n\"Ohbenbenben... fuck yeah... shit... I'm right there.\" \n\nI felt her thighs tighten around my head and she started to tremble. I took this as my cue to redouble my efforts. I pulled my arm back and angled two fingers low on the outside of her, rubbing back and forth to gather her juices before pushing them in. \n\n\"Yes... god Ben, yesyes... push your fingers in... HOLY FUCK! Ginger! What the... unghh... What are you doing here?\" \n\nI tried to twist my head around, but her grip was strong and in a split second, her hand was on the back of my head holding me in place. \n\nAn unsteady voice came from behind me. \n\n\"Ms Rai... I just... I had a question...\" \n\nVeronica's hand stayed firm on my head. \n\n\"Did you... Mmmmaaahhh... leave the circulation desk?\" \n\nI could feel Veronica taking control of the situation which hardly seemed fair at all. I focused on the lust in the room and the lust pouring off of Veronica and me. I urged the lust denser, thicker and more pervasive. It flowed through the room, echoing and reinforcing our desire. I wanted to see if she could keep that control. I pushed my fingers inside her and went back to work, with my tongue dancing on the base of her clit, over the hood and then back again. Her legs opened wider to bring me closer. \n\n\"Yes, but...\" \n\n\"No buts, young... ahhnnn... young lady. I told you that you were in cha... charge.\" \n\n\"Zee's up there...\" \n\n\"But it was yooo... your job... You will need pu... Annnggg...\" \n\n\"Punishment?\" \n\nI nearly laughed at Ginger's enthusiasm. It wasn't surprising that the trick was affecting her as well. We left her buzzing upstairs and now she was down here in this miasma of lust. Intrigued, I let up a little, keeping my fingers moving slightly, but moving away from Veronica's most sensitive areas, kissing the inside of her thighs and licking gently, without a driving purpose to make her cum, easing her back from the precipice. \n\n\"Yes, Ginger. Get your hands out of your skirt! Come over here. Punishment. Right. Move that book to the other table. Ok, now lie down on your back here on the table. Good.\" \n\nI could kind of see Ginger crawl up on the table and lie down. A quick glimpse of her flushed face between long thick curtains of black hair showed how worked up she was. \n\n\"Ginger, how do you feel?\" \n\n\"Ms Rai, I'm... Principal Lee is right there... and...\" \n\n\"He's licking my pussy, Ginger.\" \n\n\"Uh... yeah, I mean, yes ma'am. He's...\" \n\n\"Licking my pussy. He also has his fingers... Ahhhh... inside me. He knows right where my g-spot is.\" \n\n\"Really?\" She had a kind of childish enthusiasm. \"How does it feel, Ms Rai?\" \n\n\"Oh, it's just divine, Ginger, but we need to talk about your punishment for leaving the desk.\" \n\n\"Is he going to...\" \n\nVeronica laughed. \"Oh, no, dear... for him to lick you, to eat your delicious little tight pussy, nibble on your clit... Annnnghhh... that would be a reward!\" \n\nVeronica twisted a bit and I saw her reach out to Ginger. \n\n\"Help me, Ginger. Open up your blouse and undo your bra. I'll just lift up your skirt here. Ginger! You are not in proper uniform. Principal Lee, she is not wearing underwear. That certainly will earn you demerits.\" \n\n\"I'm sorry, ma'am... it's just that the last few days I've worked with you...\" \n\n\"None of that, girl. We'll discuss your demerits later. Your punishment today is that you are going to watch us, but you can't touch yourself.\" \n\n\"Ms Rai, no!\" \n\n\"Tell me what you feel, Ginger?\" \n\n\"Ms Rai, I'm so... ugh... I don't know, I'm just so horny! It's worse than I've ever felt. It's like my... like I'm on fire!\" \n\n\"Good. Now remember, if you hadn't been a bad girl, we might be having a different kind of fun here today. But right now, just watch us.\" \n\nWith that, she pushed my head back into her, and I knew her little bit of teasing was up and it was time to get back to business. If anything, the delay and then mind games had gotten her more worked up. My tongue and fingers might have helped of course, but she was flowing, and I lapped up as much as I could when I got back down into her. \n\nBut Veronica wanted to drive in the lesson. \n\n\"Ginger, can you see okay? Mmmm... He's really good at this. If you had been... ughh... a good girl, he might be eating you out right now...\" \n\nThat didn't make much sense, but I heard the poor girl groaning in frustration. \n\n\"Give me your hands. Hold my hand so you can't play with yourself. Just think about what he's doing... Ahhh... ohgod... he's licking my clit right now... back and forth and ohfuck...\" \n\nI saw her look over toward Ginger, lying prone with her breasts out and her dress up over her waist. Thanks to her uniform violation she was completely on display \n\n\"Oh, Ginger... Ooohhh... I can see how excited you are... Your pussy is so cute and you're so wet... can you... Anghh... you... MMm... ohfuck... can you imagine his tongue... ohgod... ohgod... Hold my hand... I'm going to... ohfuckohfuckohfuck...\" \n\nI pushed hard on the lust in the room and curled my fingers inside her. \n\nShe responded with a gravelly chirp and her body shuddered. She clamped her legs around my head and keened out a cry of ecstasy, first hunching forward then writhing back arching herself back onto the body of the student behind her. \n\nI didn't wait for her to stop shuddering, but hopped up to my feet. I spun her around so she was on her back on the table right next to Ginger. And I finally got a good look at the unfortunate girl. She was in bad shape. Her hair was damp with sweat, and there was a flush that ran from her head all the way down to her beautiful breasts that were pouring out of her hastily undone blouse. Under the wrinkled muddle up her bunched up skirt was a gorgeous gooey mess. She was so wet, that it looked like she had already cum. Her pubic hair was matted down with her arousal, and she was rubbing her legs together, trying to get any friction she could. \n\nI felt kind of bad for her, but I was focused on Veronica. \n\nShe was still dazed and shaking slightly from her orgasm, and I wanted to keep her flying high, but there was a problem. \n\n\"Ginger. Get up here. Ms Rai said you couldn't touch yourself, but you can get up here and undo my pants. Quick, girl.\" \n\n\"Ohgod, Yes sir!\" \n\nLike lightning, she was at my crotch and fumbling awkwardly with my belt and zipper. I looked down to Veronica, her legs were splayed weakly in front of me, and she was returning gradually to a post-orgasmic consciousness. She was gasping for air, but she couldn't hide the smile, and her eyes twinkled with love. \n\nI looked back into her eyes and pushed, causing her to grunt slightly and roll her head back as she slipped back into bliss for a moment. \n\n\"Ok, Ginger, you can't touch yourself, but you can touch me. Why don't you...\" \n\nVeronica cut me off. \"Suck his cock, Ginger!\" \n\n\"What!? Ma'am I never...\" \n\n\"Do you want to?\" \n\n\"Umm... I mean... yeah, of course I do...\" \n\n\"But, you're still being punished so just suck him down a couple times. Just get him wet for me.\" ",
        "\"Yes, ma'am!\" \n\nWithout a moment's hesitation, she dove in with the enthusiasm of the inexperienced. She was able to take a good part of me into her mouth, and she pushed down as hard as she could. Her long hair was flying all over us. It was an admirable first attempt, but I wasn't in danger of losing control. \n\nAfter a few seconds and a couple good attempts, Veronica stopped her. \n\n\"That's enough Ginger. I need him now. This is your job too. Put him right up against me, okay? Now watch... Mmm... watch him push into... OOohhhgod... fuck... Now watch him... fuck... me...\" \n\nI was going to ease a bit into her, but I shouldn't have been worried. She was completely ready for me, so I slid further, as deep as I could. It was a bit awkward because Ginger was still partly in-between us. She was mesmerized watching my cock slide all the way up into her boss. And I could even see her hand sneak back between her legs. \n\n\"Ginger, no touching... ugh... yourself... But you can touch Ms Rai, if you... ugh... if you want to.\" \n\nI gave her a bit of a nudge to push her onto her side right next to Veronica, who was lost in her own bliss, grunting in rhythm with my thrusts. \n\nBy now the entire room was saturated with the lust fog. I had been hard since we started looking at the book, and I knew I wasn't going to be able to go much further, but I wanted to make sure Veronica got there again, so I pushed again. The lust was almost visible to me now, flowing off of Veronica and me in unrestrained waves, and from Ginger too, but from her it was more erratic, less simple and free. But I felt it all flowing through the room and echoing between each of us, feeding and multiplying our lust. \n\nI grabbed Veronica's legs and lifted them up and around, brining them together in front of me. I leaned over her, doubling her over so I could plow down into her, drawing out deeper more animal sounds from her. \n\nThat move forced Ginger back, so she cuddled up to Veronica's side, and Veronica didn't hesitate. \n\n\"Nooo... touching... yourself...\" \n\nShe grabbed Ginger's hands and pulled them to her. Ginger darted toward her, latching on to her breasts. Veronica glanced at me one more time. \n\n\"Harder... harder... I'm nearly there...\" \n\nThen she turned her head and pulled Ginger into a volcanic kiss. Ginger was overwhelmed with sensation. She didn't know where to put her hands, and ended up just rubbing Veronica all over wherever her hands ended up. \n\nAlong with everything else, that seemed to be enough, because as I pounded down into her, she started to scream, muffled into Ginger's mouth and interrupted with a groan with each thrust. \n\nAs she tripped off into an incredibly powerful orgasm, her legs spasmed so hard that they slipped out of my grasp. Her legs shot out to the sides and then wrapped around my waist, gripping me tightly through her convulsions. \n\nThis rearrangement changed the angle of my cock inside her and her cries seemed to go up an octave. Her pussy was clamping down on me in spasmodic fits so tight that I was losing rhythm, pumping faster and faster as I lost control myself. \n\nIn seconds, my legs went rigid and I left my entire body start to shake. Veronica rocked her hips back and I slipped out of her right as I started to go off. I slammed forward again, but missed her so that my cock was pointing up into the air for the first shot. \n\nA massive load exploded out and coated Veronica's flawless dark skin. Ginger dove down almost instinctively and started licking all over her torso. This put her right in line to be hit with the next load on the side of the face. \n\nVeronica had enough control of herself to reach down and pump my cock, draining the rest of my cum onto her belly for Ginger to clean up. \n\nDrained, I fell forward, trying not to crush Ginger at her work. I ended up sliding on my side next to Veronica who turned to me and kissed me lovingly on the lips. She looked me in the eye, and I didn't need the trick to see how full of sensual joy and genuine love she was. \n\nThen, before I even had time to catch my breath, there was a musical jingle coming from my pants, which were still only halfway down my legs. \n\n\"Oh, shit. I'm going to be late!\" \n\nVeronica smiled sleepily. \n\n\"I told you we didn't have time for this. Hmm... Ginger, you can stay right there...\" \n\nI hopped off the table unsteadily. \n\n\"Kimberly's going to string me up.\" \n\n\"She is not. You forget how she's smarter than any of us. She probably scheduled your meeting early so she could suck you off before it started. I hope so. She can get a nice taste of me on your cock, too.\" \n\nShe wrapped her arm around Ginger, who had crawled on top of her and was working with a real focus on Veronica's tiny little nipples. \n\nI buckled my belt and took in the scene. But I really couldn't stay. Noticing the book that we had been looking at, I remembered why she brought me down here. \n\n\"Veronica, do we need to do anything about this collection?\" \n\n\"Ohhh... hmm... Yes, yes... We'll need to redo the climate control down here and put in some serious security. But the big thing is that this can really make us as a research center. People are going to want to come from all over to do research here. We're going to have to set up a system for that. Who knows what sorts of dirty-minded, naughty little grad students we can invite down here, eh?\" \n\nOk, I didn't have time at all to process her suggestion about research, but we did have the funding to start work on the practical stuff. \n\nI shook my head to clear my mind and made for the door, hearing the echoes of Veronica's groaning as I left. \n\nI passed the circulation desk and there was a girl who I wasn't familiar with, I assume it was 'Zee' that Ginger mentioned. She was talking to Lynn, the swim captain that had been the victim of much of Sten's experimentation. \n\n\"Lynn! It's great to see you. How are you feeling?\" \n\n\"I'm okay, Principal Lee. Thank you for asking.\" \n\nShe still sounded a bit monotone, but she was clearly so very improved. After being dosed with the worst of Sten's serums, she seemed to have lost her entire emotional self. Since the auction, I had been working with her a couple times a week, getting into her mind and unbinding her from the chemical restraints that had been locking her down. \n\n\"Are we still on to meet tomorrow?\" \n\n\"Oh,\" there was a spark more emotion in her voice. \"Actually, could we reschedule? The girls and I are planning to do another mock swim meet. I think we've got enough together for a real competition now. And thanks to Ms Adams, we've got those really great swimsuits.\" \n\nShe blushed deeply. \n\n\"We'd love for you to come and cheer us on, Principal Lee.\" \n\nThe girl at the circulation desk smiled broadly. \n\n\"It's a date, Lynn. I'm so happy to hear you are putting the team back together. I think that will help you more than our meetings.\" \n\n\"Oh, I still want to keep up with our meetings, just maybe, I can do both?\" \n\n\"Outstanding. We'll reschedule our meeting, but I've got to go. Make sure you send a campus-wide email for the swim meet. I'm sure you'll have a great turnout. And I'll be there for sure.\" \n\nIt was a balm to my heart to hear Lynn actually giggle as I headed out the library door. It would be a process, but she was going to be fine. \n\nIt was a quick speed-walk across the quad to get to the administration building where Kimberly was waiting for me. \n\nI peeked in the door to her office and had a quick flashback to when I first met her in person at the docks. It seemed so long ago. The first thing anyone saw of her was her incredible untamable mane of red coiled curly hair. In the first few days we were working together, she usually made an attempt to wrestle it into something a little more contained, but now, just like the rest of her, Kimberly was her natural self. \n\nShe was sitting at her desk going through a thick pile of paperwork. Her hair flowed over in massive falls up and over her shoulders on either side of her head. She was wearing a loose jade-green jacket over a silk blouse with more buttons undone than would have been thinkable when I first arrived. No longer were her clothes designed to hide her curves. She still looked professional, but she looked like a woman to be taken seriously, not a meek servant. She was even wearing a bit more makeup, her adorable freckles brought out with a bit more color on her alabaster skin, and a subtle but deep shade of lipstick. \n\nWithout looking up, she chastised me. \n\n\"You are late, Principal Lee.\" She deliberately used the formal tone of voice she used to use. \n\n\"Two minutes, Ms Adams. I hope it's not too much trouble.\" \n\n\"I wouldn't mind so much, but this whole meeting is about learning and relying on others, so it is a bit hypocritical, don't you think?\" \n\n\"You are not wrong, and I do apologize. Is there a way I can make it up to you?\" \n\nShe finally looked up and her lips spread into a wry grin. \n\n\"Well, we can talk about that later. Our guests will be here in a few minutes, but I need to talk to you about something else first.\" \n\nI walked into her office and closed the door behind me. Despite her smile, there was a hint of something serious in her voice. \n\n\"Sure, Kimberly, anything.\" \n\nHer smile deepened. \"That's one of the main reasons I love you so much. I know I could bring anything to you, and you'd be there for me.\" \n\nThis sounded like the beginning of something serious. \n\n\"Is everything okay?\" \n\n\"Well, things are... Ok, I practiced this whole speech, but let me just say it outright. Ben, I want to go back to school. You've given me so much here by putting me in charge of all this, but I still feel like I'm only treading water. I want to go get a Masters in Higher Education Administration.\" \n\nI paused for a moment, watching her expression grow more anxious. \n\n\"That's great, Kimberly, that's wonderful. You're totally right. I mean, this place is awfully small, and you could do great things at a big school.\" \n\n\"No, you... silly. I want to come back here, if you'll have me. I feel like I'm missing so much here. There's so much potential here, and... everyone I love is here... I want to learn how to do this stuff right so I can come back and you and I, and Jennifer and Veronica... we can really build this place into something incredible.\" \n\nI sighed deeply. \n\n\"Oh! I mean, of course we'll want you back, that's not even a question. I have no idea what we'll do without you though. You're kind of the only reason this place is still running after the semester we've had.\" \n\n\"Well, I wouldn't be leaving until after the spring semester, so I could get everyone up to speed on the basics, I could even train one of our graduating interns, and you could hire her on while I'll be gone. The program I'm looking at is a year and a half, and the final semester is practical study that I could do here. So, all in all I would only be gone one year. And as long as we don't keep having... troubles like we had this semester, it should work fine.\" \n\n\"Of course, Kimberly, of course, this is wonderful. And I'm sure there is an employee professionalization program we could develop so you don't go into debt. God, this is going to be so great for you!\" \n\nI moved forward and she stood up from her desk so we could hug. \n\nWe held each other tight for awhile before I realized that she was gently sobbing. \n\n\"No, no, Kimberly, we're going to be fine.\" \n\nShe sniffled. \n\n\"It's not you guys I'm worried about, you egotistical twit. I'm going to have to be away from my family here.\" \n\nI squeezed her tighter. \n\n\"We'll just have to schedule some weekend visits.\" \n\nI sensed her smile through her tears. \n\n\"Veronica better bring her toys, cause I know I'm going to need y'all to wear me out.\" \n\nWe both laughed. \n\nThere was a knock at the door. \n\nWe held each other tighter for a brief moment, then stepped apart. Kimberly moved to her desk and took out a compact to make sure her makeup was still in place. I moved to open the door. \n\nIn the doorway stood the Xu twins, Cynthia, whose short spikey hair had been growing out a bit, and Deborah, with her long straight black hair as it ever was. Behind them were a handful of students I didn't recognize. They were standing in a row, looking nervous and excited. \n\n\"Principal Lee, Ms Adams, we've brought the new pledges for the Dionysian Club for their first experience.\" \n\nKimberly spoke up from her desk. \n\n\"Excellent, Cynthia, Deborah. Please escort them into the principal's office. We will be there directly.\" \n\nI waited for Kimberly to adjust herself. \n\n\"Ben, you are really going to like this. The twins and I have designed a really lovely initiation for the pledges, and this is only the first experience of their pledge week.\" \n\nI smiled at the thought. \n\n\"Pledge week the week before finals?\" \n\n\"Well, we had to find some time, with everything in chaos. Next time we'll schedule better.\" \n\n\"I have total faith in your planning.\" \n\nShe picked up a clipboard from her desk and walked out into the foyer, and I followed behind her. \n\nWe walked to the closed door of my office. She paused before opening it. \n\n\"There's one more thing I wanted to let you know. I wasn't really sure about it, or how to talk to you about it. I haven't told anyone. To be honest, I'm not really sure what it is, or if it's real.\" \n\nI looked at her huge eyes. I used to joke that with her hair and those eyes, she might as well be a cartoon princess. \n\n\"After that night, the night of the auction... Well, I felt a kind of pop in my brain.\" \n\nSuddenly, I felt her move into my mind, and it was like every horny thought of my life was unleashed. I went rock hard in a flash, and thought I was going to cum right there in my pants. \n\nAnd then she was gone, out of my mind. The reaction on her face was priceless. She laughed and the sounds was like tickling lightning up my spine. \n\n\"Oh, god. I think that worked, didn't it?\" \n\nShe turned to open the door. \n\n\"Oh, just think of the fun we're all going to have, Principal Lee.\" \n\nShe opened the door and I saw a beautiful sight. \n\nIn front of my desk were six students in perfect uniforms. They were on their knees with their hands behind their backs. On either side was one of the Xu twins, standing like guards over their charges. \n\nKimberly walked in with an exaggerated sway of her heavenly hips. \n\nAs I followed in, the students on their knees chimed up in unison. \n\n\"Good Afternoon Principal Lee. Good Afternoon, Ms Adams. We are the pledges of the Dionysian Club. We come to you seeking your guidance. Help us learn to know ourselves, show us how to be good sisters and train us to be helpful in all things.\" \n\nI smiled down at them as the door closed behind us. \n\n*** \n\nDearest Readers, \n\nThis is the final chapter of the main-line story for The New Principal. I want to thank you so much for joining us all the way to the end, some two hundred sixty thousand words later (which the internet tells me is a little bit more than The Order of the Phoenix). The encouragement (and criticism) that I have received from readers of this story has heartened me in ways I just can't express. This started as a silly pervy little idea, but, because of your support, it has grown into a... silly... pervy... massive thing. It still has uncountable errors, typos, logic holes and other problems. Those are all mine. But the good of it, the fun of it, and the joy of it belong to you readers. \n\nNow I have deliberately left all manner of loose ends and red herrings just in case I decide to come back to these characters, but I would love to hear from you if you would like to hear more. Would you like to hear about Kimberly at her new school? The further sexualization of Bright Hall? Jennifer's athletics programs? Kimberly's porn research? More of our loveable dunce Ben? Or maybe you are curious about what actually happened to Sten? Let me know. \n\nI'm going to head off to work on a completely different story now, but there's no telling if or when it will be time to head back to Bright Hall and its denizens. \n\nAgain, thank you so much for joining us all on this amazing and absurd adventure. All the love to you beautiful perverts. \n\n-Shudai"
    ],
    "authorname": "shudai",
    "tags": [
        "cunnilingus",
        "ffm",
        "harem",
        "librarian",
        "nudism",
        "school",
        "student",
        "teacher",
        "threesome",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-29"
}