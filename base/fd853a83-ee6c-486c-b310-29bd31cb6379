{
    "title": "The Big Tits Club Ch. 41-42",
    "pages": [
        "****\n\n-- CHAPTER 41: The Second Time --\n\n****\n\nAlice became Matty's Official Girlfriend on Sunday, although she wasn't nearly as imperial about it as Mari had been. To be frank, she had no interest in actually being my girlfriend, so there were no romantic \"I love you\" endearments nor greeting each other \"Hey, boyfriend\" or anything like that. Really, Alice just wanted to get laid as often as possible. In a way, she was rather like a stereotypical \"dude\" in that regard, happy to get her rocks off and get back to her video games.\n\nShe did make time to come visit me Sunday afternoon to kick off her week with a bang (literally). Mother had also come home while we were still getting jiggy, and she greeted Alice as politely as she'd greeted the other girls in similar situations. For her part, Alice was totally chill about the encounter, not fazed in the slightest either despite having her tits out and her pussy plugged. Fuck, I think Alice actually wanted to show off for my mom or something, because she would've kept right on going if I hadn't pinned her down and sort of blushed pink in embarrassment until Mother went away.\n\nOn Monday, Alice surprised the hell out of me by bringing Naimh along, and for a minute I thought the gorgeous redhead had arrived to collect her \"first time for the second time\". But my ex-girlfriend quickly assured me (teased me?) by saying \"not yet\", and then proceeded to show off how wicked hot she could be in a threesome without actually having sex with me. Blasting off into Alice's orgasming pussy while Naimh literally squeezed my testicles in her mouth from the bottom of a sixty-nine position is something I'll remember for a long, long time.\n\nTuesdays had long been Alice Tuesdays. For some reason she decided to wear the trucker hat and actually kept the damn thing on the entire afternoon while contorting her body into various Kama Sutra poses just for the fun of it. She even declared it \"dessert day\" and had me plunder her teeny tiny asshole in a piledriver position. The fact that it was the same position in which I'd fucked Naimh when she screamed her ex-boyfriend's name did occur to me, but honestly I forgot about it moments later. The sensations were just too overwhelming for me to really think about it. Alice apparently thought so too, because she declared the position so wicked hot that we were definitely doing that again.\n\nWednesdays had long been Sam and Zofi day, although lately it had seemingly been just Zofi. Still, Sam hadn't been with me all week and she made time to show up for a crazy foursome. Sam brought Matty Junior, which Matty's Official Girlfriend promptly confiscated, strapped around her waist, and proceeded to never take the damn thing off for the next two hours. By the end of the foursome, Alice's abs looked incredible. I mean, she already had a bit of a six-pack to begin with, but she'd taken to doing the thrusting like a duck to water. Of course she had to go and spoil the mood by threatening to shove Matty Junior up MY ass, after which I nearly tossed the dildo into the trash compactor.\n\nAlice skipped Thursday entirely. She said she was still sore from doing all that fucking, and that didn't even mention all the different ways she'd been fucked. I told her that pumping a girl's pussy or ass took a lot of abdominal strength, and now she finally believed me. Anyway, she was more than happy to let Belle and Mari have me all to themselves for the afternoon.\n\nFriday was Alice's day to orchestrate the orgy. She actually showed up with a notepad on which she'd written down her choreographed ideas. She also brought a jump rope, a hula hoop, precisely four tennis balls, a golf putter, and a plastic water bottle with one of those caps that squirts when you squeeze the bottle. Additionally, she had Belle bring her set of butt plugs, and then rummaged in the family room cabinets until she found the box of Twister. Let's just say everybody went home happy if exhausted. Belle and I were even too tired to have sex later that night, although she did enjoy the novelty of playing with my penis and having it remain completely flaccid.\n\n\"It's so cute!\" she enthused, much to my chagrin.\n\nAnd then came Saturday.\n\n****\n\nThe bell rang, right on time for Alice's weekly video gaming session. As I got up from the couch and walked over to the front door, I wondered whether or not Alice would actually want to play video games or just get jiggy right away. Given how horny she'd been all week, I rather figured we'd have to have a quickie first and THEN turn on the gaming consoles.\n\nWithout checking the peephole I just popped open the door. To my surprise, though, there wasn't a cute Korean babe dressed in her latest sexy geek chic attire on my front porch.\n\nInstead, it was the most gorgeous thing I had ever seen.\n\nNaimh stood with one hip cocked to the side and her arms folded beneath her breasts. The position compressed her big tits together and forward, making them practically spill over the top of her white long-sleeved wrap top that left her taut belly bare. The color made her copper red hair really stand out as it flowed over her shoulders. She also wore stonewashed denim jeans tight enough to look spray-painted on, and tan chunky wedged sandals that boosted her height a little closer to mine.\n\n\"Hey, you,\" my ex-girlfriend greeted me with a knowing smirk. She let her gaze rove up and down my body lustfully, eyeing me hungrily as if I were a piece of meat, and her tongue snaked out across her upper lip for a brief moment. \"Nice to see you again so soon.\"\n\n\"Uh, nice to see you, too.\" A moment later, I added, \"What are you doing here?\"\n\nNaimh shrugged and gave me a Cheshire cat smile. \"I traded places with your girlfriend today. Her idea, not mine, although of course I was happy to accept. I think she actually found her upper limit for how many times she could get fucked in a week. Sam turning the tables and using Matty Junior on her last night might've put her over the edge.\"\n\nI chuckled and briefly rewound my memory to the sight of Sam's platinum blonde hair flying everywhere as she jerked back and forth hammering the hell out of Alice's tight twat from behind. But I swiftly brought my mind back to the here and now as the rest of Naimh's words finally registered in my brain. \"Traded places... meaning?\"\n\nShe smiled and spread her arms out wide. \"I'm all yours today. Although to be honest, I'm not much of a video gamer.\"\n\nI shook my head. \"No worries.\"\n\n\"In fact, I had some alternative ideas for things we could do together, if you're interested.\"\n\nI pursed my lips. \"If you think you can just show up on my doorstep, invite yourself inside, and have us fall into bed together, it's not gonna be that easy.\"\n\n\"I haven't invited myself inside,\" she pointed out, gesturing to her position still on my front porch. \"Actually, I was about to invite you outside.\"\n\nI arched an eyebrow. \"Huh?\"\n\nShe gave me that Cheshire smile again. \"Get dressed. Meet me out front. I'm driving.\"\n\n****\n\nNaimh drove a beater Civic hatchback: cheap and reliable transportation for a teenager new to America. She was just happy to have any type of personal transportation, honestly. Plenty of kids we knew didn't have cars.\n\n\"Sorry it's not a convertible,\" she chided while I hopped into the passenger side.\n\nIt took me a moment to get the reference, but I smiled and replied, \"It's about the company, not the car.\"\n\nNaimh grinned and said, \"Close enough.\"\n\nI glanced into the backseat, judged there to not be room enough for comfortable sex even if the seats folded down, and asked dryly, \"You sure you don't want me to drive the minivan?\"\n\nNaimh's eyebrows rose. \"I didn't invite you out so we could bang in the back of a car.\"\n\nI held my hands up and nodded. \"You're right, you're right. I shouldn't make assumptions.\"\n\nShe flashed me a saucy grin. \"Besides, there's still enough room for me to give you a blowjob.\" And then she shifted the car into gear.\n\nA few minutes later we were on the freeway heading south. She didn't volunteer our destination, nor did I ask. I knew she had a plan in mind and I trusted her enough to go along with it. I did, however, want to take the opportunity to talk to her. In fact, I started with a topic I knew would get my mind off of sex immediately.\n\n\"Do your parents know you're out here with me?\"\n\nShe glanced at me for just a second before returning her attention to the road. \"Yes, actually.\"\n\n\"Really? I mean, do they specifically know you're taking a drive with me, your ex-boyfriend? Not just that you're going out for the day and could be anywhere with anyone, potentially including me?\"\n\n\"No, they know I drove directly to your house and intend to spend the whole day with you. They know that we broke up because I screamed Conor's name during sex. They know that we've remained friends, more or less. I mean, they still don't know you're part of the BTC or that the group of us spends Friday nights fucking each other's brains out. But yeah, they know I'm out here today trying to repair our relationship.\"\n\n\"Is that what the purpose is here today?\"\n\nShe glanced at me again, and in a heartbreakingly sincere voice, she said, \"That's my purpose every day I see you, Matty. Today's just special because it's only you and me, without any of the others around.\"\n\nI didn't know how to respond to that right away, so I paused for a moment to look out the window. Given the freeway we were on, there were any number of possible destinations Naimh could have in mind. \"Is this going to be a short drive or a longer one?\" I asked casually.\n\n\"Trying to ruin the surprise?\"\n\n\"No, not at all. I just want to know if we have time for a long conversation or not.\"\n\n\"Well if you have something in mind, why don't you just start and we'll see how things go.\"\n\nI shrugged and narrowed my eyes. \"What's your favorite color?\"\n\n\"Red, obviously. And green, emerald-green. That one is specifically because you always refer to my eye color as emerald-green.\"\n\n\"Well, they DO look like emeralds to me, and not just because you're Irish.\"\n\nShe laughed musically. \"What's your favorite color?\"\n\n\"Blue. Navy blue.\"\n\n\"As evidenced by the abundant number of navy blue shirts in your closet. Well, that and dark gray. And black. Come to think of it, you're always in dark-colored shirts. We need to brighten your wardrobe a bit.\"\n\nI chuckled. \"Fair enough. Favorite food?\"\n\n\"Coddle with Mam's soda bread.\"\n\n\"I have absolutely no idea what that is.\"\n\nNaimh laughed. \"You'll have to come visit 'round suppertime and try it. My parents would like to meet you, seein' as we're still close enough for me t'come spend'da day with you like this. Well, I think technically you've alread' met, but... well... meet you under better circumstances. Dad's particularly embarrassed by ev'rythin' and would like a chance to make a better impression.\"\n\nI sighed.\n\n\"What? You've met everyone else's parents by now, haven'cha? More'n half of 'em know yoor fuckin' theh dottahs.\"\n\nI blinked. \"Did your accent just get thicker?\"\n\nNaimh laughed and planted her left elbow down against the windowsill and set her head against her open palm. \"Maybe it's the thought of coddle and my parents, plus we just had St. Paddy's day,\" she stated a little more clearly. \"I usually focus on sounding more American.\"\n\nI laughed, thinking about how thick Naimh's accent had gotten when she was yelling at her father outside my house. I was rather glad that part was my dominant memory of the day.\n\n\"Come to think of it, ALL of the BTC's parents now know you're fucking their daughters, don't they?\"\n\n\"Well not Sam's dad. Pretty sure he still thinks I'm gay. And Alice's mom, too.\"\n\nNaimh shook her head. \"Alice's mam knows. She noticed the way Alice was changing her wardrobe and asked. Alice told her you two started messing around with each other, but that there's nothing romantic about it. Just friends with benefits. She's not happy 'bout it, but she's not giving Alice as hard a time as we thought she would.\"\n\nI blinked. That was news to me. But then I thought about what Naimh said about ALL the BTC's parents knowing I was banging their daughters: Belle, Zofi, Sam, Naimh, Mari, and now Alice... yeah, pretty much. \"Now I REALLY hope they don't all get together and start comparing notes.\"\n\nNaimh chuckled at that. \"On the bright side, none of the other parents have come trying to knock down your door except mine, right?\"\n\n\"Yet. But we're getting off topic. Where were we?\"\n\n\"Favorite food. And it's your turn.\"\n\n\"Ah, prime rib,\" I replied before adding, \"with the au jus dip. Favorite place to visit?\"\n\n\"I'm still fairly new here, so I haven't visited much. Hiking Land's End and Chinatown were nice - I got to be with you. Your favorite?\"\n\n\"Uh, Great America theme park.\"\n\n\"I only went the one time with the whole club last summer,\" she commented with a sigh. \"We should go again.\"\n\n\"We should,\" I agreed.\n\n\"Favorite BTC girl?\"\n\nI'd been staring straight out the front windshield, but now turned to look over at the driver with an arched eyebrow and found her smirking at me before returning her attention to the road. After only a moment's thought, I stated evenly, \"A certain ridiculously gorgeous Irish redhead with an amazing rack, a wicked hot body, an alluring accent, and a personality I truly do still want to get to know better.\"\n\nShe glanced over at me again for just a second before nodding straight ahead. And without looking at me again, she said quietly, \"Good answer.\"\n\n****\n\nNaimh's destination turned out to be the Monterey Bay Aquarium. She explained that she'd always had a fascination with the sea, having grown up near the coast in Ireland. She loved all kinds of ocean creatures, and since none of the other girls seemed to share this particular interest, it wasn't something she often got to talk about. I took that moment to recall that she had a stuffed hammerhead shark in her bedroom. She'd named him \"Anchor\".\n\nShe took my hand after we parked and we headed into the aquarium hand-in-hand. Although we were no longer a dating couple, I was comfortable with this level of intimacy. After all, she'd slurped a load of my cum out of Alice's pussy just last night, not to mention the half-dozen other times she had my dick in her mouth. I was pretty sure I could handle holding hands.\n\nMy ex-girlfriend and I moved through the exhibits slowly. I hadn't visited the place in many years, and despite her fascination with sea creatures, her family had never made it this far down the coast to play tourist. We spent a lot of time absorbing the breathtaking view of the Kelp Forest exhibit. We watched harbor seals and sea otters from the back deck. And the Open Sea wing was brand new to me, so we spent a lot of time there.\n\nNaimh seemed to have a lot of little factoids memorized, so I started conducting little pop quizzes to test her knowledge by covering up the information cards with my hand and then firing questions at her.\n\n\"What's a sea otter's favorite food?\"\n\n\"Hard-shelled invertebrates like sea urchins and crabs.\"\n\n\"How does a jellyfish eat?\"\n\n\"Nematocysts -- stinging cells in their tentacles that stun their prey.\"\n\n\"What's the greatest danger to kelp forests?\"\n\n\"Sea urchin overgrazing.\"\n\nI shook my head. \"Creative artist. Budding marine biologist. Is there anything you can't do?\"\n\nShe gave me a wan smile. \"Hang on to the greatest guy in the world?\"\n\nI blushed and looked away for a moment. \"I'm not the greatest guy in the world.\"\n\n\"You are to me.\"\n\n\"That's the sex talking,\" I muttered beneath my breath.\n\n\"Partially, sure,\" she agreed before leaning forward and whispering into my ear. \"The sex IS amazing.\"\n\nThere was a throaty arousal in her voice that almost got me hard just listening to her. But I took a deep breath, and all of a sudden a long quotation I'd recently read came into mind.\n\n\"'Love is a temporary madness. It erupts like an earthquake, and then it subsides. And when it subsides, you have to make a decision. You have to work out whether your roots have become so entwined together that it is inconceivable that you should ever part. Because this is what love is. Love is not breathlessness, it is not excitement, it is not the promulgation of promises of eternal passion. That is just being 'in love' which any of us can convince ourselves we are.'\"\n\nNaimh stepped forward and finished for me, \"'Love itself is what is left over when being in love has burned away.' -- Captain Corelli's Mandolin. I've read it.\"\n\nI gave her a rueful grin. \"I haven't.\"\n\nShe frowned. \"Then how'd you know the quote?\"\n\nI shrugged. \"Was doing internet research about love after our breakup. The quote stuck with me. Is it a good book? How long did it take you to read?\"\n\nNaimh shrugged. \"Audiobook, actually.\"\n\nI looked at her in amusement. \"That's not reading.\"\n\nShe waved me off dismissively and flashed me a grin. \"Same thing.\"\n\nI snorted, took her hand, and then we continued.\n\n****\n\nNaimh and I got clam chowder for lunch in the aquarium cafeteria, and in the afternoon we took the 17-Mile Drive along the coastline to take in the spectacular views. We walked on Spanish Bay beach and added a rock cairn to the hundreds of other ones around. We did some rock-hopping out along Point Joe. And we took photos at the Lone Cypress.\n\nWe ended our drive in Carmel, did some light window shopping downtown, and shared a nice dinner together. As we slowly walked hand-in-hand out of the restaurant, I told her, \"Except for not having any mud baths down here, you planned a better date than either of mine.\"\n\nShe gave me a wan smile and squeezed my hand. \"I loved both of your dates, and every minute I spent with you on them. But we're not done yet.\"\n\n\"Oh?\"\n\nShe pointed at the horizon. \"It's not yet sunset.\"\n\nTogether, Naimh and I walked down to the beach. She'd planned ahead and brought a foldable nylon picnic mat and a towel. We took our shoes off, sunk our toes into the sand, and went so far as to get our feet wet in the surf. But when the sun sank lower on the horizon, we found a good spot away from anybody else, laid out the mat, and sat down together with the most gorgeous thing I'd ever seen settling herself between my outstretched legs. I spooned myself behind her for extra warmth while she put my jacket on backwards over her chest with her arms through the sleeves.\n\nCoincidentally, the jacket covered my arms from view when I wrapped them around her midsection to hug her from behind. My fingers started doing a little walking across her bare midriff, started inching higher, and Naimh glanced back at me over her shoulder with a knowing grin.\n\nShe puckered up as I leaned forward, and we began to gently kiss. Her tongue came out to play and I increased the pressure of my lips. As our passion rose, my hands climbed higher and I palmed her tits beneath the cover of the jacket. She moaned and squirmed a little, and I started grinding my erection into her lower back as we made out.\n\nWe almost missed the sunset, so absorbed in our makeout session we'd become. But I snuck a peek to find a sliver of open air just beneath the golden disk and broke the kiss to direct her attention forward.\n\nSpooned together like that, Naimh and I were both entranced as we watched the bottom of the circle first touch the horizon. And we stayed there, silent, enjoying the feel of each other's body until every last glimpse of golden light was finally gone.\n\nIn a quiet voice, I told her, \"Any resentment I ever had for you just disappeared with that sunset. I forgive you for anything you might feel needs forgiving. I know in my heart there's nothing left but love. I hope you can also forgive me too.\"\n\nShe glanced back at me over her shoulder and quickly pecked my nose. \"There was never anything to forgive.\" And then she kissed me again.",
        "****\n\nThe horny redhead had her legs around my waist the instant we made it through my bedroom door. I spun her around and planted her back against the wall for support while she took charge to wrap her arms around my head and spear her tongue into my mouth like a diving seabird. We made out hot and heavy, our tongues sparring with a jab here, a riposte there, and entangling together a moment later.\n\nWhen my forearms started to burn I pivoted away from the wall and carried her over to my bed. She squealed at the sensation of falling as I launched us over the mattress, the adrenaline rush spiking her arousal. After we landed, her fingers started scrabbling at the hem of my shirt to tug it upwards. And once she got the material trapped around my armpits, I finally broke our liplock long enough to finish ripping the offending garment over my head, baring my chest to her hungry gaze.\n\nThe gorgeous Irish girl growled and showed me her teeth as she stared at and then played with my pectoral muscles as hungrily as I'd ever ogled her tits. She leaned in and suckled on my nipple before kissing her way up my chest, across my shoulder, and fastening her lips around my neck momentarily. Finally, our mouths met again and we both moaned. She started tugging at my jeans, whimpering, \"I need to taste your cock.\"\n\nWell, if she really needed it...\n\nI rolled off her, quickly unbuttoned myself, and then jerked down the zipper. Naimh rolled after me, took hold of the waistband, and yanked downward while I hopped my butt off the mattress several times to help her out. Moments later, I was completely naked while she remained fully-clothed, not that I cared since she was single-mindedly focused on burying my cock into her throat. And as easily as BJ Queen Mari had ever done, Naimh suddenly dropped her ruby red lips all the way down to the very base of my dick.\n\nHer electric emerald eyes sizzled as she stared up at me, maintaining eye contact to watch the pleasure she gave me contorting across my face. She breathed shallowly, holding the position an impossibly long time while milking my shaft with her throat muscles. And if she kept that up much longer, she'd be getting a bellyful much faster than either of us would've originally expected.\n\nBut even Naimh could only hold the deep-throat for so long, and she pulled all the way off to take a deep breath. She then proceeded to pump her head up and down my dick a few more times, although she did not repeat the deep-throat. And with one final gasp, she sat upright with her legs folded to the sides in a W-position and started working off her tight wrap top.\n\nI was breathing hard in anticipation of her big breasts being revealed. The sexpot redhead gave me a saucy look right before ripping the top over her head and baring a nude-colored bra that had helped properly frame and position her mammaries for maximum cleavage. Reaching behind herself, she paused for a moment to wink at me. And only then did she slip the clasp and let the cups fall away.\n\nThat's when I attacked. I jetted forward so suddenly that Naimh squeaked, \"Eep!\" in surprise. I gathered her body in my arms and rolled us over so that I was on top again while I feasted on her breasts and mashed my face into the valley of her cleavage. Meanwhile, my hands worked at her spray-painted jeans. And then it was my turn to yank downward on her waistband while she hopped off the mattress to help me out.\n\nMoments later my long tongue slithered up and into her tight twat. I stared upward to maintain eye contact and watch the pleasure I gave her contorting across the beautiful babe's face. She whimpered and groaned and scratched her fingernails across my scalp. I gave her a tongue-lashing equal to any the other girls had ever given her and then some, and I didn't stop until she erupted in a riot of screaming spasms as she clutched my bedsheets and clamped her thighs around my ears while she came.\n\nAnd then it was time.\n\nTime for our first time.\n\nFor the second time.\n\nI swiftly crawled up my ex-girlfriend's fantastically naked body. I slid my chest across her stomach and tits, compressing her breasts between our bodies while my cockhead nudged into the entrance of her folds. She was still delirious from her climax so I didn't penetrate her just yet. I caressed her cheeks and kissed her forehead, and then kissed her nose, and finally kissed her mouth.\n\nNaimh's irises swam back into focus mid-kiss. At the same time, strength flowed back into her limbs as she wrapped her arms around my shoulders, and she separated our mouths just long enough to breathe faintly, \"Please, Matty, I nee-- NNNNGGGGAAAAAHHH!\"\n\nHer eyes flashed in surprise, her begging request dying on her lips as her mouth gaped open to gasp the moment my thickness suddenly filled her. Her fingers dug into my shoulders and she began flopping beneath me like a fish out of water. For a moment, I thought she was having an epileptic seizure, but then she started screaming and her cunt started clenching and I realized she was having a monster orgasm just from my first thrust.\n\nI held her close in my arms and lightly ground my pelvis down on her clit to maximize her pleasure. Her screams eventually died down, and at last her bodyquakes settled beneath me.\n\n\"Ohhh... Matty...\" Naimh moaned after about a minute as she came down from her unexpected peak. I had already started moving again, slowly, in and out of her wonderfully snug channel with the idea of building into her next one.\n\n\"Hey...\" I intoned in a welcoming voice, staring straight into her eyes. After so many sexual encounters with the nymphomaniac redhead bent over before me while I banged her from behind, it was almost a surprise to be doing this in an old-fashioned missionary position.\n\n\"Hey you,\" she breathed back with a bit of a look of wonder in her emerald-green eyes. They were bigger than I remembered, a look more of wide-eyed innocence on her face than raw sexual heat.\n\nI grinned and bent to kiss her tenderly.\n\nGently.\n\nWe didn't fuck, not that time. Oh, we certainly fucked each other's brains out later that night, but not that first one. I cradled my ex-girlfriend in my arms while she simply held my shoulders. And together we...\n\nWell...\n\nWe made love.\n\nMy thrusts were slow and steady, full-length from her entrance all the way down to her deepest depths. Her hips rolled and undulated beneath me, but our bodies never crashed together with the jarring impacts that usually signified our physical unions. We simply... moved.\n\nTogether.\n\nIn harmony.\n\nIt was wonderful.\n\nOur orgasms sort of snuck up on us. One moment we were rolling across the mattress in sinuous waves, the next I molded my lips to hers and groaned as I felt the dam burst forth within me to begin an unending flood. She whimpered into my kiss and held me close, her milkmaid muscles working overtime to draw out every last drop. And even after I'd finished flooding her, the trembles of her orgasm continued for another minute.\n\nBut at last we both went limp, and I buried my face into the crook of her neck, nuzzling my nose against her jawline.\n\nHer voice was quiet, but clear and heartfelt. \"I love you, Matty... I never stopped loving you.\"\n\nI wanted to repeat her endearment back to her. Truly, I did, but something held me back.\n\nShe sensed my hesitation, paused, and turned her face toward mine to stare into my eyes as I rested on the pillow beside her. \"It's okay. You don't have to say it back. I know it'll take time for you to really even consider thinking about me that way again.\"\n\nI shook my head in the negative. \"It's not that. I DO love you, right now. But at the same time, I'm consciously aware of how easy it is to feel this kind of love at a time like this when we're so intimately joined together. It's like the Captain Corelli's Mandolin quote: 'Love is a temporary madness.' It's certainly erupted, especially right now. I'm still trying to sort out what you're going to mean to me after you leave and this little eruption subsides, and also figure out what I'll mean to you.\"\n\n\"That's easy,\" she replied with a smile. \"I still love you to pieces when I'm at home by myself, lying in bed dreaming of a night like tonight. I'd like to stay here with you tonight, if you'll let me.\"\n\nI arched both eyebrows, and taking a deep breath, I elevated myself with my elbows so that I was perched above her. \"Your parents are okay with that?\"\n\nNaimh's eyes narrowed as she thought about that. \"I think the word 'okay' would not be the most accurate term. Let's just say they've given their begrudging acceptance of the situation.\"\n\n\"I'll have to tell Belle,\" I explained. \"She thinks it's still Alice's week and nobody expected Alice to stay overnight.\"\n\n\"I don't mind her joining us. I realized a long time ago that if I wanted to be with you, I'd have to share you.\" Naimh giggled. \"Of course, given that I love the feel of a naked girl in my arms as much as you do, it's no real chore on my part. In that sense, you're my dream boyfriend: Not only are you handsome, kind, intelligent, strong, and an amazing lover, but you bring me hot young playthings to have fun with as well.\"\n\nThe way Naimh's eyes danced left no doubt that she meant every word.\n\n\"You're trying to make sure I still love you after the eruption subsides,\" I drawled.\n\n\"Well... yes,\" she admitted with a twinkle in her eye. \"Is it working?\"\n\nI grinned. \"Ask me again in the morning.\"\n\n****\n\nWe cleaned up and I checked the clock, surprised Belle hadn't come over on her own yet. She had her house key back, and usually arrived after dinnertime. I started to worry that she'd already come over, found me in bed with Naimh, and then ran away or something. But when I called she asked casually, \"Hey, what's up?\"\n\nI blinked. \"Uh, you're not here. Is something wrong?\"\n\n\"I suppose I should be asking YOU if something's wrong. Neevie was supposed to have to you today.\"\n\n\"How did YOU know about that?\"\n\n\"Oh... well... the girls got together last night and came up with a plan for this weekend. Alice said she was fucked out and offered Saturday as a good date day for Neevie to have her 'first time for the second time'. I actually saw you two drive off this morning. Did something go wrong?\"\n\n\"What? No. Everything's fine. She's still here. I'm just...\" I paused a moment and frowned. \"Waitaminute. You KNEW Neevie was coming over but you didn't warn me?\"\n\nBelle giggled. \"Chicks before dicks. The girls wanted secrecy, so I agreed to secrecy.\"\n\n\"Hmph. I was about to invite you to come join us since this would normally be YOUR night with me but if you're gonna be like that I suppose I don't have to.\"\n\n\"Well, tonight's Neevie's night already anyways.\"\n\n\"She said you could join us.\"\n\n\"She DID?\"\n\n\"Yeah, so... Belle... Belle?\" The line had gone dead. I hung up the phone and glanced over at Neevie beside me, still fabulously naked on the bed. In fact, she was lying back and holding her knees up to her chest, a position which tilted her pussy upwards so that gravity would help trap our mingled cum inside her.\n\nLess than a minute later, I heard my front door slam shut and then the thumping of feet racing up the stairs. Belle burst into my bedroom, eyes glittering.\n\n\"Aww, you saved him for me!\" the impish pixie enthused in delight.\n\n\"All for one, and one for all,\" Naimh cheered and spread her thighs apart.\n\nMatty's Little Cumslut took care of the rest.\n\n****\n\n\"So I owe you a really big apology,\" Belle said a bit out of the blue.\n\nReclining sideways across the big couch, her head propped up on her elbow, Naimh furrowed her eyebrows. \"An apology? What for?\"\n\n\"For... well... for hating your guts.\"\n\nNaimh blinked and sat upright. \"For... what?\"\n\nBelle held her hands up and waved them palms downward in a let-me-explain gesture. \"I never told you just how close I came to fucking everything up.\"\n\nNaimh gave Belle an extremely puzzled look, and then glanced over at me. Pointing one finger at Belle, the redhead queried, \"She's speaking English, right? Because I feel like something is getting lost in translation.\"\n\nI chuckled, tightened my grip around the petite strawberry-blonde tucked under my left arm while she cuddled against my side, and nodded.\n\n\"You've always been so nice to me,\" Belle continued. \"You're nice to everybody, actually, and you're always considerate of the group. Like this whole 'All for one' thing that everybody keeps bringing up. It's been a rallying cry for BTC solidarity.\"\n\nNaimh waved her hand dismissively. \"I wasn't trying to come up with a rallying cry. I just felt blessed for all five of you showing how much you all loved ME. The phrase just sort of popped into my head: the members individually support the group, and the group supports the members. That's all of us, including you, Matty.\"\n\n\"I lost sight of that for a little bit, hence the need for an apology. Matty already knows -- I told him that I hated your guts.\"\n\nNaimh pursed her lips. \"Okay that time I heard you quite clearly.\"\n\n\"I never ACTUALLY hated your guts, but I was extremely, extremely jealous of you: your perfect body, the most gorgeous face Matty's ever seen, your natural ability to accomplish pretty much ANYTHING related to sex without even trying hard.\" Belle sighed. \"To be honest, I still am pretty jealous of you, although I've learned to accept it a bit.\"\n\n\"Jealous of ME?\" Naimh gestured with one hand at the way Belle and I were currently cuddled together. \"I'm the one that's jealous.\"\n\n\"Of me?\"\n\n\"Look at you two,\" she exclaimed in a tone of wonderment. \"Childhood friends grown up together. Sharing each day as it comes, all those dinners with your dad, the weekends spent in each other's arms, the long hours I know you two spend just... talking.\"\n\nBelle and I glanced at each other for a moment, little smiles on our faces.\n\nNaimh jabbed her finger directly at me a few times. \"It's Captain Corelli's Mandolin. Your roots are so entwined together that it is inconceivable you should ever part.\" \n\nBelle looked confused. \"What?\"\n\nI laughed and tickled Belle's nose with my fingertip. \"I'll explain later.\"\n\nNaimh sighed and looked rather melancholy, drawling, \"You two have the relationship some of us could only ever dream of.\"\n\nBelle leaned over from her spot on the loveseat and put her hand over Naimh's. \"Is that the kind of relationship you lost with Conor?\"\n\nThe Irish teenager looked thoughtful for a moment but then shook her head quickly. \"Not quite. Conor was just a boy. He was my first, true enough, but we were children. We never spent the kind of time together that you and Matty do. I never shared my most personal thoughts with him. When I think back on it, my relationship with Conor wasn't any deeper than my relationship with you, Matty. He was my boyfriend, and we had fun together, but that was it. Me running away from home to stay with him had more to do with my fear of moving to America than any particular bond with Conor himself. Now could we have developed into something more intimate had I stayed in Ireland? Perhaps, but we never got that chance.\"\n\nThe three of us ruminated on that silently for a moment. Naimh was the first to pick her head up and smile. \"So like I said: I'm the one who's jealous of you. Even tonight, my first time for the second time with him, and you're the one who's been wrapped up in his arms, not me.\"\n\nBelle abruptly took her hand off of Naimh's and looked back at me in alarm. \"Ohmigawd. I'm SO sorry if you wanted--\"\n\n\"Relax, relax, it's fine.\" Now it was Naimh's turn to gesture with her palms downward. \"I'm the one that invited you here. Had I wanted him all to myself I'm sure you would've let me.\"\n\n\"Of course I would have. Which begs the question: Why DID you invite me to join you?\"\n\nNaimh shrugged. \"It was the least I could do. I owe my first overnight with him here to you. I owe my entire relationship with him to you, actually. If not for you prodding us that night, we never would've gotten together. And even though we eventually broke up, that was MY fault, not yours.\"\n\nBelle furrowed her eyebrows, sat forward with her forearms on her knees, and stared down at the floor for a moment. \"So this is yet another thing I need to apologize for. I...\" Her voice trailed off as she sighed and took another deep breath, gathering herself. \"I had my own ulterior motives in prodding you two to get together.\"\n\nNaimh frowned and sat up straight. \"What do you mean by that?\"\n\nBelle sagged. \"I always believed you two would break up. Matty had been infatuated with you from the beginning -- like I said: perfect body, gorgeous face, complete natural at sex.\"\n\n\"I don't understand.\"\n\n\"I thought that was it. Just physical attraction. I genuinely believed there would be nothing more to your relationship than sex. You two always had white-hot sexual chemistry, but from where I was sitting, it seemed clear to me that you had very little in common personally. At least, you never seemed to have those intimate conversations with him the way I did, y'know?\"\n\nI took a moment to lean forward and explain, \"Belle believed we'd burn white hot and then burn out -- that we didn't have the intertwined roots to last when being 'in love' burned away. She wasn't wrong.\"\n\nNaimh frowned at that. \"Well, I suppose she wasn't.\" Looking back at Belle, she added, \"But you actually set us up to fail?\"\n\n\"I was being selfish. I wanted him for myself, and that wasn't going to happen as long as he remained infatuated with you. So I figured that once he got you out of his system, he'd be all mine.\"\n\nNaimh narrowed her eyes and looked back and forth between us left and right a few times as if her head had turned into a stuck ticking minute hand on a clock. \"Given the way you two are so casually explaining this, I'm going to assume things didn't go according to plan.\"\n\n\"You were right to fear that I'd seduce him that night before we all ended the sex boycott. I'd had the big butt plug in my ass all night and I showed it off to him after you all left. He'd gone about four days without sex and I figured seducing him would be easy.\"\n\nNaimh shot an accusing look at both of us. \"You said you two mutually decided it would be better not to spend the night together because it would be too tempting to break the boycott.\"\n\nI nodded. \"We did... eventually. We didn't lie about that.\"\n\n\"But we didn't tell the whole truth,\" Belle continued. \"I'm going to have to explain this all to the others as well, but I wanted to start with you first because I know how much you love him. I know how much he still cares about you. Even though you went through the whole bit with screaming your ex-boyfriend's name and then breaking up and everything else, he still thinks about you all the time. I had THOUGHT that going through a relationship based solely on sex would get you out of his system, but it didn't. He still thinks about getting back together with you.\"\n\n\"Belle, uh...\" I began in a quiet voice. \"You're not really supposed to give away MY secrets.\"\n\nBelle waved me off and focused on Naimh. \"I'm telling you this to show how close I was to betraying all of you, to claiming I was above the rules and damn the BTC. It was Matty's loyalty to the BTC that saved us and made him turn me down. Deep down, I know there's still a selfish part of me that wants to keep him all for myself, but I really do believe in this idea of 'All for one'. And -I- need, for my own conscience, to admit all of that to you and yet still say, without any ulterior motive, that if you want him, I won't stand in your way. Not anymore. It feels like I went in a big circle just to come back to where I started, but here I am -- in the same place but feeling differently about it -- I'm his anchor. This close, intimate relationship you're jealous of?\"\n\nBelle paused, turned back to me, and squeezed my knee before finishing, \"I'm his little sister.\"",
        "Naimh grinned. \"With benefits.\"\n\nBelle giggled. \"Definitely with benefits.\"\n\n****\n\nThat night turned out much like my first overnight with Naimh. Belle joined us for a wicked threesome, but in the end she got dressed, told us to enjoy a night alone together, and then went home.\n\nAt least Belle got to feel Naimh slurp a creampie out of her pussy and then snowball it back to her.\n\nIn the morning, I woke up first and decided to enjoy Naimh's naked body spooned in front of me. I stayed as gentle and featherlight as I could, teasing her skin and roaming my fingertips all over every inch I could reach before slotting my schlong into her soaking wet snatch and then shoving myself inside while she still slumbered.\n\nThe busty redhead certainly woke up at my penetration, of course, and started laughing when she realized her cunt was already full of Matty-dick. She crooned into my ear and reached back to hold my head while I pumped her from behind. But then she reached into the nightstand, held up a familiar bottle of lube, and waggled it at me invitingly.\n\nThe morning ended with me blasting her bubble butt from behind, skewering my ex-girlfriend's asshole on my turgid pole and spanking both of her cheeks until they were bright red while she howled at me to hurt her and really violate her body down to her sacred core.\n\nYeah, it lacked the intimacy of face-to-face lovemaking, but we both loved it, and who said everything had to change?\n\nAfter I creamed deep inside her colon, we took a shower together and did some light petting and a lot of making out, but neither of us started another sex session. Then we got dressed and headed downstairs.\n\nMother was in front of the kitchen range making brunch, and she was not alone. Both Sam and Belle sat on stools at the kitchen island, clad in sports bras and spandex leggings, sweat dotting their brows having apparently gone for another run together.\n\n\"Good morning, Naimh,\" Mother greeted. \"So nice to see you here again.\"\n\nThe redhead blushed and replied, \"Thank you.\"\n\nMeanwhile, I said, \"Morning, ladies,\" and went over to peck both Sam and Belle on the lips.\n\n\"Have a nice night?\" Belle asked coyly.\n\n\"The best,\" Naimh enthused warmly. \"I'm still jealous you get to fall asleep in his arms so often.\"\n\nBelle looked thoughtful. \"I think the key is that it's still not often enough for me, otherwise I'd take it for granted.\" That last part was directed at me with a bit of a smirk.\n\nThe five of us moved to the dining table and sat down to share a meal. Nobody talked about sex, and I didn't do much talking at all, focused on eating as much as I could. The girls nattered on about whatever popped into their pretty little heads until Mother announced that it was time for her to go, and the girls all said goodbye.\n\nOnce Mother was gone, Sam started playing footsie with me underneath the table, and Belle's hand, which had been resting on my thigh, began rubbing closer and closer to my crotch.\n\n\"Don't forget to save something for Zofi,\" I muttered beneath my breath.\n\nConspicuously, Sam and Belle abruptly stopped their fondling and exchanged rather obvious looks with Naimh. I could immediately tell there was something the three of them knew that I didn't.\n\n\"Actually,\" Sam began slowly while raising her eyebrows and deliberately not making eye contact with me, so I knew she had yet ANOTHER surprise to spring on me. \"Zofi's not coming.\"\n\nI frowned. \"Was it not agreed to on Friday night that Zofi would be my next Girlfriend of the Week?\"\n\n\"It was, it was...\" Sam hedged while exchanging a look with Belle, \"mostly because neither Belle nor I wanted to go next and Neevie is already supposed to go last. The thing is: Zofi's not really interested in being your girlfriend for real. You know that.\"\n\nI narrowed my eyes and glanced at all three girls. I knew for a fact that Zofi had come out as a lesbian to both Sam and Alice, but I wasn't sure about the others.\n\n\"So...\" I began hesitantly, \"Does that mean I don't have a girlfriend for this week?\"\n\nSam giggled and suddenly wore a smirking grin. \"Actually...\" She exchanged new glances with Belle and Naimh. The two of them had smirking grins as well.\n\nBelle looked up at the clock and then back to me. \"Just be patient. It's a good surprise, really.\"\n\n\"Belle...\" I warned.\n\nThe doorbell rang just then.\n\n\"Or maybe you don't need to be patient,\" Belle corrected herself with a wink.\n\n\"I'll go get that,\" Sam announced, darting out of her chair as fast as The Flash. Moments later, I heard the front door open and girlish squeals filled the air.\n\nI didn't want to speculate, but I couldn't help it. Alice claimed to be fucked out, so the only logical explanation was that Mari would get a second week. I had to admit, I wasn't opposed to the idea. The thought of spending more nights snuggled up around her fantastically curvaceous body definitely put some starch in my pecker and gave me warm fuzzy feelings inside.\n\nBut then I turned around and those warm fuzzy feelings vanished. To be clear, I wasn't disappointed or anything...\n\nI was just really, really confused.\n\nSmiling broadly beneath her bubblegum pink hair and still looking as gorgeous as ever stood a beautiful young woman dressed to impress and also show off her firm 34D tits. I picked my jaw up from the floor, gathered myself, and finally managed to say,\n\n\"Hi, Holly. Nice to see you again so soon.\"\n\n****\n\n-- CHAPTER 42: Hollister --\n\n****\n\n\"Nice to see you again so soon.\"\n\n\"It's nice to see you again, too. I'm glad it's under much better circumstances,\" Holly replied while posing quite coquettishly. She was dressed in a plunging V-necked white tank top tied off at the side of her waist to expose her belly with a black lace bra beneath that showed rather obviously through the translucent material. She also wore a hot pink and black plaid short skirt, thigh-high black stockings with garters, and black and white Catholic schoolgirl saddle shoes. Her long, shoulder-length pink hair was tied into two low pigtails just behind her ears, the left one draping across the top of her cleavage. It was the sort of outfit she'd never get away with at school and literally screamed, 'I'm your living sex toy! Take me, throw me onto a bed, and have your way with me!'\n\n\"So? Belle? Shower?\" Sam clapped her hands together and rubbed them vigorously before jerking a thumb over her shoulder.\n\n\"I'll go with you two!\" Naimh announced perkily as she got up from the dining table.\n\nBelle snorted and drawled, \"Real subtle, ladies.\"\n\nI blinked and followed Belle as she also got up and joined Sam and Naimh. \"You realize I'm now picturing the three of you in my shower together.\"\n\n\"Yeah, stop distracting him,\" Holly complained. \"He's supposed to be gawking at me.\"\n\nI glanced back at the pink-haired vixen. \"Believe me, you're plenty worth gawking at. Don't worry about that. But I must admit I'm surprised you're here.\"\n\n\"I would've been here AGES ago if it wasn't for these selfish bitches,\" Holly remarked lightly, gesturing towards the other three girls. \"It was so frustrating to watch all six of them sashaying around school with big, sexually-satisfied grins only to be told at every turn, 'Back away: He's off-limits.'\"\n\nI turned to look at Sam, Belle, and Naimh. \"Am I NOT off-limits anymore or something?\"\n\nThe BTC girls exchanged a look. \"Not anymore,\" Sam confirmed.\n\n\"What changed?\"\n\n\"Well, to be honest, she'd sort of stopped pestering us for a while, and had she asked a couple of weeks ago the answer would've still been 'no',\" Sam explained. \"But after the whole Mari incident, she started talking to us again. Then she started pestering us again. And now with Neevie's little Girlfriend of the Week experiment - and none of the rest of us wanting our own week right now - the timing kind of worked out perfectly.\"\n\n\"I told you,\" Naimh jumped in, \"the whole point of this in the first place was to give you some perspective and be able to compare different kinds of relationships. Adding Holly only helps in that regard, both as someone with a different personality from the rest of us and someone from outside the BTC. You'll get the experience of dating someone you haven't been friends with for a long time already.\"\n\n\"You want me to date her?\" I asked a little incredulously.\n\nBelle jumped in. \"You can do whatever you want with her, including absolutely nothing. We're giving her a trial week; she gets Zofi's slot.\"\n\nI blinked twice. \"You mean she gets Zofi's 'Girlfriend of the Week' slot?\"\n\n\"Exactly.\" Sam shrugged. \"Same as Mari or Alice.\"\n\n\"But your week with Mari wasn't the same as your week with Alice and won't be the same as with Holly,\" Belle elaborated. \"What you decide to do - or not do - with Holly is completely up to you. I mean, we do consider you the property of the BTC, but that doesn't mean we can just loan you out against your will.\"\n\nI frowned. \"But... we barely know each other.\"\n\n\"That's the point.\" Sam looked at me like I was a three-year-old who needed her guidance to find the bathroom, and in a similar tone she spelled out slowly, \"Hence... the three of us leaving the two of you alone for a bit...\"\n\nI frowned. \"Are you all just expecting me to whip it out on command and service her?\"\n\n\"No, no of course not,\" Sam insisted while shaking her head obviously in the negative. Meanwhile, Belle was likewise shaking her head and giving me a look that said I'd never be forced into doing anything I didn't want to. But Naimh was nodding her head up and down, giving me a big smile with two thumbs up.\n\nMy eyelids dropped halfway as I deadpanned, \"I'm getting mixed messages here.\"\n\n\"You need notarized affidavits?\" Sam sighed and gestured to Holly. \"We cleared this with all six of us. You're not required to whip it out on command and service her, but you do have everyone's explicit permission if you want to. We already know SHE wants to. She won't fucking shut up about you at school and it's getting on my nerves.\"\n\nHolly shrugged. \"I've wanted to finish what we started last summer for this entire freaking school year. And whatever the hell you're doing to keep six hot babes like these completely satisfied week after week, I want in.\"\n\n\"I can barely keep up with six of you,\" I said to the BTC girls. \"Now you want to add a seventh?\"\n\n\"For a week. Just a week,\" Belle stated firmly.\n\n\"We'll see how it goes,\" Sam added with a shrug. \"I do feel bad for shutting her out all this time, especially since you left her high and dry the last time.\"\n\n\"She definitely wasn't dry,\" I argued. \"I made sure of that.\"\n\n\"Yeah, well, you know what I mean. And with your virginity no longer an issue... I mean look at her. Tell me that's not tempting.\" Sam bit her lower lip and had a glint in her eye that looked like she wanted to devour her. Actually, Naimh and Belle had that look, too.\n\nMy eyeballs clicked back and forth between Sam and Holly for a moment. Perfectly aware she was being undressed by the girls' eyes, the pink-haired sex bomb posed once again for maximum visceral appeal. And her eyes were doing quite a bit of undressing themselves. I didn't know for sure how much Sapphic sexual interaction there had ever been between Holly and the others. I wondered if Sam and Holly had messed around with each other in the past, and maybe even Zofi too knowing her personal preferences. But I had to believe Belle wouldn't have hidden that sort of thing from me, although Naimh I was less sure about.\n\n\"Okay fine,\" I said finally, straightening my spine as I sat up. \"Here's how this is gonna work. The three of you can go off and do... whatever. I do know Belle and Sam actually need a shower. Holly and I will hang out and... talk... until you return.\"\n\nThe buxom pink-haired bombshell in the slutty schoolgirl outfit pouted. \"Just talk?\"\n\n\"Just talk,\" I confirmed. \"For one thing, Sunday afternoons are a pretty regular time for me to be with Belle and Sam, so your visit is sorta cock-blocking them.\"\n\nHolly grinned. \"Whoever said anything about blocking them?\"\n\n\"My thoughts exactly.\" I grinned as well, already imagining a potential crazy fivesome. \"I assume you're good with sharing.\"\n\n\"Seems like sharing is a requirement for BTC membership already.\"\n\nI arched an eyebrow. \"You're looking for full membership?\"\n\n\"That depends.\"\n\n\"On what?\"\n\n\"On whether or not you can actually live up to your reputation.\"\n\n\"Is that a challenge?\"\n\n\"More of an admission that my expectations are pretty high. I mean, I just kinda wanted to bang you for the fun of it after that first day of school. But now?\" She squeezed her wrists together in front of her, which also compressed her big tits between her upper arms. \"You know the adage about good things coming to those who wait? Well... I've been waiting forever.\"\n\nHolly's hazel eyes sizzled as she stared at me as lustfully as any of the BTC girls had ever stared. I knew right then and there that while she'd let me go unfucked last time, she wasn't going to leave quite so peacefully this time if I turned her down again.\n\nWith a smile, I nodded at the BTC girls and told them, \"You guys go on upstairs. Holly and I are gonna have a little chat.\"\n\n****\n\nAfter Sam, Belle, and Naimh headed upstairs, I stood up from my chair at the dining table and headed directly for the family room without looking back. \"C'mon, let's get you one of Matty's patented back massages.\"\n\n\"Oooh, goody,\" Holly said enthusiastically, and I heard the click-clack of her shoes across the floor.\n\nI parked myself on my usual couch cushion, spread my legs to the sides, and beckoned the scantily-clad teen hottie to come sit in front of me. She sat on the cushion edge and gave me a coy look over her shoulder before facing forward.\n\nI'm not particularly sure why I did what I did next. Perhaps it was because Holly had made abundantly clear that she was a sure thing if I wanted to get into her panties. Perhaps I was a little tired of Sam and her games. Perhaps I was annoyed that nobody ever told me what the hell was going on and whether they admitted it or not, everyone apparently DID expect me to whip it out on command and service them.\n\nI mean, I LIKED whipping it out and servicing gorgeous nubile teenage hotties on command, but still.\n\nThe point is: I was in a particular mood. Tired of feeling manipulated and feeling the need to assert myself, I did the exact opposite of what \"Safe Matty\" was best known for: respecting a girl's boundaries. Instead, I didn't wait for permission. I didn't wait for an explicit invitation. I told you, Holly's outfit seemed to be screaming at me, 'I'm your living sex toy! Take me, throw me onto a bed, and have your way with me!'\n\nSo I took her.\n\nIt started with that skimpy tank top. Without asking, I simply undid the knot at the side of her waist and then tugged up on the hem until Holly wordlessly raised her arms and allowed me to pull it off her. Without preamble, I unsnapped the black bra and slid the straps off her shoulders to leave her back completely exposed. Holly trapped the cups against her own tits for modesty, not so different from the day when I'd given her a backrub in her bikini. And when I took a firm grip of her shoulders and started squeezing my fingers to initiate the massage, she let her chin drop down to her chest and let out a soft moan as I went to work.\n\nWithin a few minutes, Holly's spine was collapsing as I unknotted all of her back muscles and transformed them into jelly. Her shoulders were slumped and she kept tottering forward as if she'd collapse onto the floor in front of us like a drunk driver about to fall asleep at the wheel. I switched to massaging her arms, and within another two minutes both limbs were dead weights hanging down her sides. Holding the bra cups over her tits was no longer a priority, and only the shoulder straps still trapped at her elbows prevented the material from falling away completely. Her torso twisted every now and again as I applied firm pressure to one shoulder or the other, and I got tantalizing glimpses of side boob and turgid nipples from the opposite direction.\n\nThose nipples eventually called to me, and at some point, rather than complete my massage, I reached forward and just grabbed Holly's tits. I squeezed her melons and pinched her nipples rather roughly between my fingertips. At the same time, I bent forward and fastened my mouth on her neck from behind like a vampire, sucking powerfully as my strong fingers massaged and kneaded her titflesh instead of her back muscles. Holly moaned instantly and tilted her head away from my vampire bite, swooning in my arms. A moment later, I yanked my right hand away from her firm titty and shoved it down beneath the waistband of her skirt. Without further ado I hooked my fingers and crammed two of them into her soaking wet pussy already primed from about ten minutes of endorphin-producing back massage. And after coating my penetrating digits with her sweet nectar, I pulled them back just far enough to bracket her clit and start strumming away as if her body was my personal guitar.\n\n\"Oh, gawd... Oh, gawd... Oh, FUCK!\" Holly groaned as she whimpered, shivered, and came beneath my abrupt onslaught. I squeezed her left nipple and bit down harder on her neck, enough to mark her as mine for the next several days. And I didn't relent on my finger-flicking for two minutes or so until she finally stopped shuddering and collapsed limply against my chest.\n\nBut I wasn't done with her yet. Not by a long-shot. And once again, I didn't ask permission.\n\nI simply... took her.\n\nLifting Holly out of my lap, I set her in a seated position on the cushion by my side. Standing up, I quickly shucked my shorts before climbing back onto the couch with both feet. Squatting slightly to get myself aligned, I gripped my dick with my right hand and grabbed her face with my left. I pried her mouth open and stared down at her a little... well... a little malevolently I must admit. Like I said, I was in a mood. And as soon as she obediently gaped her mouth open, I rammed my dick through the hole.\n\nHolly was gorgeous to begin with. She was even more gorgeous with her lips wrapped around my prick, staring up at me with obvious lust but also quite a bit of surprise. I braced my right hand on the top of the backrest and held the back of her head with my left, not allowing her to back away as I pressed further and further forward, plunging my way into her throat until she suddenly gagged, and only then did I pull all the way out.\n\nI narrowed my eyes and gave her a disappointed look. She quickly grabbed my ass with both hands and yanked me back into her mouth, this time forcing her own face forward until she'd accomplished the deep-throat and then swiveling her eyes up to look for my approval. I gave her a tight smile, held the position for an extra second to see if she'd gag again, and only then withdrew until just my cockhead was behind her lips.\n\nThen I face-fucked the hell out of her.\n\nHolly made little \"glug, glug\" noises while I pounded my way in and out of her throat. She gripped my ass to try and manage my depth while I stopped holding her head and instead braced both my hands atop the backrest as leverage for my thrusts. I probably didn't quite let her breathe often enough, because she started to tear up a bit. And after another minute or so I finally pulled all the way out and loomed over her while she coughed a few times and hung her head forward to gasp for oxygen.\n\nStill, there was a naughty gleam in her eyes when she finally looked up at me. \"You're an animal,\" she wheezed, but grinned. \"What happened to the 'Safe Matty' all the BTC girls trusted to never push beyond their boundaries?\"\n\n\"You're not in the BTC,\" I growled, grabbing her head one more time and pushing my cockhead against her lips. \"And even if you were, I'm not that safe anymore.\"",
        "And then I rammed my dick into throat again.\n\nSomehow Holly managed to moan while I fucked her face. This time, instead of bracing myself on the backrest, I just held her head and masturbated myself with her skull. And while I did so, I looked down and saw that she was fondling one of her tits and rubbing her pussy at the same time.\n\nEventually, though, I backed off to let her breathe and then stepped off the couch. With the urge to taste the pink-haired girl's sweet snatch, I quickly knelt on the floor and then yanked her butt up to the front edge of the cushion. I flipped the plaid skirt up and out of the way. Underneath, I found that the little minx was wearing a garter belt but hadn't worn any panties. I took that as invitation enough to dive my face forward into her pretty pink pussy with puffy lips already flowering open in arousal, kiss the little tattoo of red cherries I still fondly remembered, and then suck her prominent clit into my mouth.\n\nHolly's legs slammed shut around my ears as I got down to business, but I reached up to pry her legs apart and give myself enough room to work. I elevated my chin out of the way and allow myself to re-introduce two digits into her cunt, and she screeched and shuddered when I started fingerbanging her in addition to chewing on her clit.\n\nI actually laughed to myself midway through eating her out. I realized Holly was actually the first girl I'd ever gone down on, and instead of fumbling my way around through trial-and-error, I now knew exactly what I wanted to do to her and exactly when. The novice had become the master. With that in mind, I continued to play her like my personal instrument, pushing and prodding, licking and swirling, nibbling and gnawing, until she screamed not once but two separate times, howling her orgasmic ecstasy.\n\nAfter the second climax, Holly's legs fell limply to the sides and my dick craved to finally bury itself inside the first pussy I'd ever gotten such an up close and personal look at.\n\nI sat up straight, wiped my face with my forearm, and then brought my cockhead to her wet and gaping entrance. Once again, I didn't ask permission.\n\nI simply... took her.\n\nI grabbed Holly's ass beneath the skirt and pulled at the same time I pushed forward. The hottie teenager's eyes fluttered as I slowly burrowed my way into her, her vagina surprisingly tight. It wasn't that I thought she was a slut (okay, maybe I thought she was a slut), but either she was just narrowly built or she wasn't used to taking a dick as thick as mine.\n\n\"Ohhh... gaaaaawwwwwwdddd... Maaaattttyyyy...\" the pink-haired beauty moaned as I smoothly slid in to the hilt.\n\nAt full depth, I stopped and stayed there for a moment, soaking in the sensations. Holly, likewise, had her eyes closed with her forehead furrowed as she concentrated inward. I glanced down and realized I couldn't actually see our loins joined together since her plaid skirt had flipped back down in the way, so I lifted the fabric and smirked at the sight of her bare-shaven mons and two-cherries tattoo just above the sight of her pink labia stretched around my thick girth. Retracting slowly, I watched as inch after inch of my dick reappeared, a fine coat of girlcum glistening in the afternoon sunlight reflected through the glass sliding door. She groaned when I almost exited her, the thicker part of my mushroom head stretching her entrance, and then I slowly pushed back inside, watching every inch disappear once more.\n\nI took a deep breath, counted to three in my head.\n\nAnd then I fucked her.\n\nHolly had no idea what hit her. One second all was calm. The next I was rather violently pounding her pussy with all my weight. After a minute, I grabbed her left leg and hooked her knee over my elbow to stretch her out even further. A minute after that, I did the same to her right leg. And a minute after that, I lifted both of her legs over my shoulders to really fold her in half beneath me so I could get extra deep and keep hammering the hell out of her.\n\nHolly groaned gutturally, a surprisingly deep bass rumble coming out of her throat as I knocked the wind out of her. She kept grunting and groaning as she clenched her eyes and tossed that pink hair left and right. As she wriggled her head against the couch's backrest, some of her hair shook free from the elastic band holding together her left pigtail. She ended up with several locks of it trapped in her mouth, but she was gritting her teeth in angst against the overwhelming sensations flooding her brain and couldn't even muster the focus to spit them out. She just wheezed and thrashed and finally groaned again, gaping her mouth in a big O to match yet another orgasm, and those locks of hair finally shook loose.\n\nAfter she climaxed, I unplugged myself and then got a grip on Holly's hips. I flipped her over so that she was kneeling on the couch cushion and braced against the backrest. I swiftly re-entered her wet box from behind, but this time also had an excellent angle to take a healthy swat at her pale creamy asscheek.\n\nHolly yelped with the first spank, but her pussy quivered simultaneously. I smacked her other asscheek, and her pussy quivered again. I alternated for the next several minutes between spanking and just bouncing my pelvis off her butt. Either way, her asscheeks ended up really red until I finally stopped spanking and simply reached around to grab her big titties and use them as handholds to jerk her body back to meet my thrusts.\n\nAll the while she kept up a howling litany, pleading, \"Oh gawd... Oh gawd... Oh gawd...\" And then I licked my thumb and jammed it through her tight anus, causing her to shriek and fuck back at me even harder. \"Oh-gawd-oh-gawd-oh-gawd!\"\n\nIt's not that I ceased to think of Holly as a nice human being worthy of respect. I didn't treat her like an impersonal cum dumpster. I just happened to be in a particular mood and for some reason sensed she was up for being... taken... in this manner. And after a lifetime of being the \"nice guy\", the \"safe\" one, I started saying shit I'd heard in crappy porn videos but NEVER thought I'd ever say myself.\n\n\"Like that, huh? You like having my big dick in your cunt?\" I growled.\n\n\"Yesss! I love it! I love it!\" Holly howled.\n\n\"You do, don't you? You're a total slut for my dick! Does it feel good? Am I stretching your slutty snatch?\"\n\n\"So stretched! So full! I'm a total slut for your big dick! Fuck me harder!\"\n\n\"Oh yeah, you're gonna be my personal slut this week aren't ya? Gonna bend over at my slightest whim whenever I call? I'm gonna walk up behind you in the hallways at school, whisper, 'Pull down your panties, slut,' and you're gonna bend over and let me take you right there against your fucking locker, aren't ya?\"\n\n\"Yes! Yes! Fuck me! I'm your personal slut! FUUUUUUUUUUUCCCCKKKKKK MMMMMEEEEEE!!!\"\n\nHolly came twice more while I railed her from behind, or maybe it was three. It was hard to tell because she was screaming at the top of her lungs the whole time whether in the middle of an orgasm or not. I'm definitely sure the specific way her cunt clamped down on my invading cock signaled two climaxes. I'm less sure of the third.\n\nNo matter. When it was my turn to cum we both knew it. Mostly because I started yelling, \"I'm gonna cum, bitch! I'm gonna spin you around, park your pretty face in front of my throbbing dick and hose it down with all my spunk. My personal slut needs a cum bath, don't you think?\"\n\n\"Yes! Yes! Fuck me and facialize me! I need it! I want it! Spray your slutty slut with all your sperm!\"\n\nI yanked myself out just then and suited action to my words by grabbing her hips and flipping her around. Holly got one knee around but the other one got hung up, so she couldn't quite get a full 180-degree rotation. Still, she twisted her face into my line of fire and gaped her mouth open without prompting. Her hazel eyes were bright and vivid while she moaned in eager anticipation of my load.\n\n\"AAAARRRRRRGGGGHHHH!!!\" I roared, fisting my cock and pumping the first line straight across her nose and forehead. The second splattered over her left eyelid, making her shut both of them. And then she laughed gaily while I squirted more and more jizz until she was practically covered in hot creamy cum.\n\n\"Nnn-guh,\" I grunted after squeezing out the last load. Gasping for breath, I took a step back and staggered when my leg proved a little less than stable. I'd been fucking so hard for so long that the strength was leaking out of my limbs, and I wound up hunched over with my hands braced on my knees.\n\nMeanwhile, Holly was wiping globs of man-spunk from her left eye and popping them into her mouth. She managed to clean her left eyelid enough to feel safe opening it, and her right eye was relatively untouched. She sucked semen off her finger like it was a popsicle and smiled a well-satisfied smile. And that's when the clapping started.\n\nSam, Belle, and Naimh were all behind the loveseat, Sam pivoted to the side so she could sit atop the backrest with one foot still on the floor. Belle had started the round of applause first, but Sam and Naimh quickly joined her. And all three of them wore smirking grins.\n\n\"So...\" Belle began once the clapping died down, \"have a nice chat?\"\n\nHolly and I just started laughing.\n\n****\n\nAlice was waiting for me and Belle at the parking lot and came over to us as soon as we stepped onto the curb. Literally, the first words out of her mouth were, \"Is it true that you told the girls you and Holly were just going to talk while waiting for them to return and then wound up fucking the shit out of her instead?\"\n\nI shrugged and offered up a fist.\n\nAlice bumped it and started laughing. Then she leaned over and pecked my cheek. As we started walking, she elbowed me and asked, \"I also hear she plays well with others.\"\n\nI thought about it and nodded. \"This is true.\"\n\n\"I'm just trying to picture you and those four hotties crawling all over each other on your bed.\"\n\nI tried to act nonchalant and commented, \"I'm sure your imagination is crazier than the actual reality.\"\n\nAlice narrowed her eyes and elbowed me in the ribs. \"Which was your favorite part?\"\n\n\"Favorite?\" I blinked and glanced to my other side at Belle. \"Watching Holly slurp a creampie out of Sam and snowballing it to Matty's Little Cumslut here.\"\n\nBelle giggled. \"That WAS pretty awesome. Holly's got a talented tongue.\"\n\nAlice sighed. \"I shoulda been there.\"\n\n\"You'll get another chance. 'Alice Tuesday' is tomorrow.\"\n\nThe Korean girl snorted. \"If Holly's your Girlfriend of the Week, she doesn't have to stick to the old daily rotation.\"\n\n\"I doubt she'll mess with your regular routines or try to call dibs over any of you. She wants to get on everyone's good side so you all will let her stick around for more than a week.\"\n\n\"You sure she'll want to stick around for more than a week? I got the impression she's flighty and gets bored easily.\"\n\nI shrugged. \"Anything's possible, I guess. I'm just saying that at the very end of yesterday's orgy, she started whining that she was supposed to be my new 'girlfriend' and yet I never actually came inside her. So after we did it again and I finally filled her up, instead of cooing some tender endearment to me while I was quite literally still deflating inside her, she stared straight at Sam and stated quite clearly, 'I want IN.'\"\n\nAlice mused on that. \"On one hand, the six of us are already stretching you pretty thin. On the other, a little fresh blood might be fun. Add another notch to my bedpost.\" Alice grinned and held up her fist again.\n\nI chuckled and gave her another bump.\n\nBelle sighed. \"I'll be good once I get to suck a creampie out of her directly, and then she can go on her merry way. Six is plenty, don't you think? We don't really need a seventh, do we?\"\n\nI shrugged. \"I guess in a week we'll find out.\"\n\n****\n\nHolly apparently took being my Girlfriend of the Week quite seriously, as well as her insistence that she wanted to be \"in\" the BTC. As I said way back in the beginning: if she wanted membership, her rack certainly qualified. But even more than that, she genuinely seemed to want to be friends with the girls and be part of the club.\n\nIn the category of playing my Girlfriend of the Week, Holly immediately stepped into the same mannerisms she'd already witnessed from the others around school. We held hands walking back and forth between classes, made out with each other during recess and lunch, and even had a couple of minivan quickies in the parking lot. By now the school gossips had figured out that after spending an inordinate amount of time making out with Mari for a week, and then spending an inordinate amount of time making out with Alice, I was now spending an inordinate amount of time making out with Holly. People might've ignored us had I kept things between the six known members of the BTC, but Holly's surprise participation kicked speculation into overdrive.\n\nI even overheard one girl hypothesize that I was dating a different girl each week just for variety, but that theory got quickly shot down by her friends as just too ludicrous to be real.\n\nOutside of the school campus, Holly took her role as my girlfriend equally seriously. I never did walk up behind her while she was at her locker, whisper for her to pull down her panties, and then bang her from behind then and there where the whole school could see, but she definitely gave me the impression that she'd actually let me if I were so inclined. (And I did get her to surrender her panties to me in front of her locker on Friday.)\n\nBehind closed doors, from the very beginning Holly referred to herself as my \"personal slut\". Monday afternoon, she came over to my house, walked inside, and before I could even close the front door she'd already dropped to her knees and reached for my zipper, asking, \"Does Master want his personal slut to suck his cock?\"\n\nCurious, I went ahead and replied, \"Master would be very pleased with his personal slut if she would deep-throat him immediately.\"\n\nFive minutes later, after face-fucking her with her head trapped against the back of the front door so she had no choice but to accept every last inch, I slammed myself all the way in and blew a massive load directly into her throat. She was masturbating herself and squeezing her own tits the whole time, and I swear the feel of my cum shooting straight down her gullet set off her own orgasm.\n\nThe rest of the afternoon was more of the same. She never said my name, only referring to me as \"Master\" and referring to herself in the third-person as if her name was \"Personal Slut\".\n\n\"Will Master please shove his big fucking dick into Personal Slut's teeny little asshole? Please?\"\n\nWhat the fuck do you think I said?\n\nAnd that was just Monday.\n\nI didn't necessarily think Holly was a closet submissive or anything. She'd just seized upon a little kink when I called her my personal slut on Sunday, and she reveled in playing the role. For all I knew, she'd eventually get tired of the game and stop calling me Master in another day or two, but in the meantime I was happy to enjoy it while it lasted.\n\nIn the category of genuinely making friends, Holly was equally committed. She'd already been pretty good friends with Sam and Zofi to begin with, and as the week progressed it became evident that she and Naimh got along really well; they had similar temperaments, as it were. Alice became a convert after she got to keep her \"Alice Tuesday\", with Holly unselfishly letting me focus on my longtime best friend. Alice also got a real kick out of Holly referring to her as \"Mistress\" in addition to calling me \"Master\". I still remembered the badass Korean chick getting off barking orders to Zofi that one afternoon before the sex boycott, and Alice's Domme side definitely came out that day.\n\nZofi also got to keep her \"Zofi Wednesday\". After school, I took the time to stop and ask Zofi when she came over why she didn't want to keep her Girlfriend of the Week slot. Her answer that she had no interest in being my real girlfriend made sense for obvious reasons, but when I asked why she didn't at least want to become Queen Zofi and be in charge for a week, she gave me a funny look and asked, \"When have you ever seen ME want to be in charge?\"\n\nShe had a point.\n\n\"Seriously, though,\" Zofi continued, \"I do think that becoming your official Girlfriend of the Week also comes with its own obligations to keep you satisfied. Mari and Alice certainly fucked your brains out nearly every day, right? I love you Matty, and I enjoy our time together, but every day? That's just way too much for me, you know?\"\n\nI chuckled. \"Fair enough.\"\n\n\"In that sense, it was a relief when the girls came to me with the plan for Holly to take over. SHE certainly seems happy to drop her panties for you at her slightest whim. Isn't that right, Personal Slut?\"\n\n\"Uhh... huhhh...\" Holly moaned, briefly lifting her face up from Zofi's crotch, her cheeks glistening with girlcum.\n\nI leaned forward, stirring my cock around Holly's colon in a counterclockwise motion. Getting a fresh grip on her hips, I then retracted and started banging her bunghole pretty hard once more, the brief conversation giving me the time I needed to rest up before resuming my rectal reaming. And Holly groaned in great guttural gasps as I hammered the hell out of her heinie hole.\n\nOf the original six BTC girls, it was Belle and Mari who turned out to be the tougher nuts to crack. While Belle had enjoyed messing around with the pink-haired chick on Sunday in the original fivesome, she was the most outwardly skeptical of letting a new girl into the BTC and granting an outsider equal access to what she considered to be the most valuable possession of the club, namely me, without having put in the years of groundwork first. Mari, on the other hand, was simply shyer about opening herself up to someone she didn't really know very well. Getting herself to expand her Sapphic exploration with the other girls of the BTC had been challenging enough, let alone someone she was only casually acquainted with like Holly.\n\nSensing that hesitation, Holly took the high road and chose Thursday to be her \"rest day\". We'd already fucked four days in a row, and she sincerely offered Belle and Mari to keep me for themselves on Thursday, stating, \"I'm not going to push either of you to do anything you're not comfortable with.\"\n\nHolly was so sweet about it that Mari hesitated to respond, but Belle was quick to chirp, \"Good! Glad that's settled.\" And then later that afternoon my little Annabelle did her level best to fuck my brains out, with Mari's help of course.\n\nIn the end, I lay exhausted across Belle's bed, thoroughly fucked out after cumming three times, once into Mari's pussy, once into Belle's pussy, and the final one into Mari's ass while she was on top of Belle in a sixty-nine. As I lay there, gasping for air, Belle came over and gave me a kiss that took my breath away (what little I had left), and then muttered, \"See? We don't need Holly to make sure you're completely satisfied.\"\n\nThat was the first time all week I started to seriously consider the thought that Holly might exit my life within only a couple more days.\n\nThat was also the first time I realized I didn't really want her to leave.\n\nAnd then came Friday.\n\n****\n\nThe afternoon started much like any other Friday. I parked the minivan in my garage, Belle walked over to her house to drop off her backpack and change, and I headed inside to prepare for the girls' arrival.\n\nThe weather was unseasonably warm for late March, and the girls had already agreed to start the afternoon in the backyard and also bring swimsuits to slip into the hot tub when the weather cooled down. With the recent switch to Daylight Savings, the sun wouldn't set until much later, so the hope was to enjoy the great outdoors a little longer than usual, although the weather was still too cold to fill the pool again.",
        "The most gorgeous thing I'd ever seen was the first to arrive. Naimh came straight through the side garden gate into the backyard and met me by the grill with a peck on the cheek. It was too early to actually start making dinner, but I was cleaning the grates and checking the propane levels. She carried a gym bag with her suit and towel and headed inside to change. Less than three minutes later, the redhead emerged back outside with a brilliant smile on her face.\n\nBy now, of course, I was lounging in Matty's Chair with a beer, awaiting the busty Irish girl's return. She emerged wearing an electric purple outfit that actually had a greater amount of fabric than the skimpy bikinis she usually wore. The front and back of the bikini top connected beneath her armpits with an intricate zig-zag string pattern that ended in a bow with dangling strings that made me want to tug on them just to see if the whole ensemble fell apart like shoelaces. The cups covered the majority of her 34DD breasts, but featured a large oval cutout that revealed a good amount of bottom cleavage hanging over the elastic chest band and invited me to imagine thrusting my dick into that hole and between her tits. The bottoms were relatively high-waisted and featured the same zig-zag string pattern on the hips, and the back was curved inward like a thong to expose her beautiful buttcheeks.\n\nNaimh's emerald-green eyes shone as she sashayed across the patio and promptly settled herself in my lap face-to-face while wrapping both arms around the back of my neck. No words were spoken, and none were needed as she first kissed me softly, and then a LOT more passionately moments later. She was quite obviously revved up, having not had sex with me since the fivesome on Sunday. And without word of warning or request, she abruptly slipped her hand beneath the waistband of my trunks and moaned into my mouth, \"Can I feel you inside me? Just for a bit?\"\n\n\"The other girls will be here soon.\"\n\n\"I don't need to cum. I just wanna feel you. Please?\"\n\nI grinned and nuzzled her nose. \"I didn't say you couldn't. I just said the other girls will be here soon. If you need me that bad, by all means hop on board.\"\n\nWith an impish giggle, the horny teenager pulled the strap of her bikini bottoms aside while I wriggled my ass free of my trunks. Still holding my cock, she held it in position and then slowly sank her already soaking-wet snatch down, relaxing her inner muscles to accept my full length within seconds and then tightening up her Goldilocks pussy around my shaft.\n\n\"Mmm... that's it...\" Naimh moaned in deep satisfaction like a crack addict getting her fix. \"So much more... comfortable... than just sitting in your lap.\"\n\nI chuckled. \"If you say so.\"\n\n\"I say so,\" she confirmed happily before resuming our liplock.\n\nWe remained like that for several minutes, joined together while kissing quite sedately. True to her word, she didn't try to cum. She just sort of worked me with her milkmaid muscles, keeping Mr. Happy... uh... happy... while enjoying the intimacy of the moment.\n\nI eventually started chuckling to myself, and Naimh broke the kiss to give me a puzzled look. \"Did I do something funny?\"\n\n\"No, it's not that,\" I muttered while attempting to control my laughter. \"I actually just starting thinking of the LAST time Holly came to hang out by the pool with the whole BTC. That was before any of us started doing... anything, really. Just like that day, you were the first to arrive, and you had this form-fitting cobalt blue bikini that was simply... stunning.\"\n\n\"I still have it. I'll wear it next time for you.\"\n\n\"Please do,\" I agreed. \"Anyway, I remember being so fucking horny, so ridiculously attracted to you, and yet so fucking FRUSTRATED by The Rule forbidding me from doing anything serious with you.\"\n\n\"I remember.\"\n\nI started laughing again. \"I wish I could go back in time and tell my past self that it would all turn out just fine in the end. That you and I would come to this point in our relationship where you could just walk up without saying a word, start French kissing me, and then casually ask me if you could slip my dick inside you not even to have sex or get an orgasm, but just because it would feel nice.\"\n\nNaimh started laughing too, which as you know did wonderful things to her inner core muscles as they squeezed my dick. She gave me a beaming smile and said, \"Do me a favor and tell past-Neevie the same. It would certainly save me a lot of anguish over the next few months.\"\n\n\"Will do,\" I pledged, and then I drew her face to mine once more.\n\nJust then, the bell attached to the garden gate went off, drawing our attention.\n\n\"Heya lovebirds,\" Alice called, announcing her presence. She walked over to my lounge chair and held her hand out for our usual fist bump. \"Anybody else here yet?\"\n\nI shook my head. \"Not yet.\"\n\nAlice shrugged and looked down at us, and then she noticed the way my swim trunks were down around my upper thighs, leaving my hips bare. Her head abruptly tilted over at a near 90-degree angle, and she arched an eyebrow. \"Did I interrupt you two fucking right now?\"\n\nNaimh briefly blushed, but I explained, \"We're not actually fucking. I mean, she hasn't even moved up or down since she sat down. We're just sort of... making out at the moment.\"\n\n\"With your dick in her cunt.\"\n\nI shrugged. \"She says it's comfortable.\"\n\n\"It is,\" Naimh confirmed happily.\n\nAlice mused on that. \"We can DO that? Just... leave it in there... and make out?\"\n\nI shrugged. \"Sure, why not?\"\n\nNobody else was around yet, but Alice's hand still shot up in the air. \"I call 'next'!\"\n\n****\n\nAlice had arrived wearing her new bikini underneath her clothes, per usual. I was used to the fairly simple two-piece swimsuits Alice got from the kinds of stores that also sold groceries and cheap TVs. Today, however, she wore an eye-popping white and black zebra print designed to draw people's attention to her lush titties and athletically-toned body.\n\nRather than make Alice wait, Naimh stood up off my prick and graciously allowed her friend to take over right away. But Alice hadn't arrived soaking wet in anticipation the way Naimh had, so my best friend decided to drop to her knees and start slurping the redhead's pussy juice off my dick first while rubbing her own clit. Less than two minutes later, she finally straddled my lap and sank her now sufficiently lubricated pussy down around my dick.\n\nAlice and I were still making out when Belle and Mari arrived. Mari noticed from way over by the gate that my shorts weren't quite in the right place, and the two of them came over to verify that I indeed had Alice's pussy wrapped around my dick by three in the afternoon when we were all still waiting for the rest of the BTC to arrive. Alice quickly yelped, \"Neevie started it!\" as if she were a third-grader in trouble. Mari then called 'next' only a split-second before Belle.\n\nThe sound of a big truck engine soon revved from the other side of the house. A minute later, Sam, Zofi, and Holly all waltzed in together. A minute after that, everyone figured out that Alice was still mounted on me, and it only took them that long because the newcomers were too busy trying to figure out why Naimh, Belle, and Mari were doing such a piss-poor job of stifling their giggles.\n\nIn the end, nobody had an orgasm except for me. That's because one by one, each girl took a turn sitting on my dick and making out with me over that first half-hour in the backyard, with Holly volunteering to go last.\n\nAt first, I thought she was still buttering up the BTC girls into letting her join the club by patiently waiting longer than anyone else. But then I realized she just wanted to make sure everyone else got their chance to mount me and therefore couldn't really object if Matty's Girlfriend of the Week started riding him to relieve the pent-up tension he must be feeling from sinking into seven different pussies without being allowed to cum.\n\n\"Will Master please blast all of his hot creamy cum into Personal Slut's tight hungry pussy so she can turn around, lie back on his chest, and let him watch one of these other horny bitches suck it all out of her messy cunt?\"\n\nWhat the fuck do you think I said?\n\n****\n\nIn the interest of enjoying the great outdoors, we collectively decided to postpone the \"wild and crazy group orgy\" part of our daily program until the evening after dinner in lieu of a movie. Instead, the eight of us spent the afternoon playing outside. Sam had us blowing homemade bubbles with pipe cleaners and a bucket full of soapy water. Belle got into a competitive series of checkers games with Alice. And we played lots of games of cornhole (the bean bags and plywood kind, get your mind out of the gutter).\n\nSince Holly was still my doting Girlfriend of the Week, she stayed by my side throughout, showering me with personal attention that made me feel quite pampered, honestly.\n\n\"Would Master like Personal Slut to give him a foot massage while he plays checkers with his friends?\"\n\nThe girls were in their bikinis all afternoon, which gave me plenty of eye candy for hours. And in the end, we didn't even get into the hot tub before dinnertime.\n\nBut after the meal, the sun started going down and the eight of us all eased into the hot tub. Holly was on my right, Belle was on my left, and Naimh was the first to take her top off and toss it aside ten minutes later. So of course, the rest of the girls went topless soon after.\n\nYou'll remember that we'd postponed the usual Friday orgy, and I hadn't cum since that first one after the round-robin makeout sessions, so now with fourteen perky breasts floating around me I got hard REALLY fast.\n\nPersonal Slut slipped her left hand into my lap and started stroking me almost immediately. A minute later, Belle's hand crawled up my thigh and over my crotch, freezing when she felt Holly's hand already wrapped around my rod while conducting a rather obvious jacking motion.\n\nHer pale green eyes darted to mine, and I saw some of her old simmering jealousy there. But before I could say anything, Holly took her hand away, evidently realizing she'd been caught and by whom. I rather abruptly grabbed Belle's hand and stuck it onto my shaft, but Belle was being pouty and yanked her hand back. So now neither girl was giving me a \"wristy\".\n\nI sighed and reached up to rub my forehead in mild frustration.\n\nMeanwhile, Sam had started asking the other girls about their plans for Spring Break. We still had one more week of school left, but then the first week of April we'd be free to do whatever the hell we wanted to do for five days while our parents all had to still do their day jobs.\n\nI immediately thought of what we'd all been doing during a similar situation over Winter Break. Namely, I'd spent nearly every day visiting the girls at their own homes while their parents were at work, repeatedly getting laid while also spending some quality one-on-one time with each of them and discovering so much more about the very special young women I had come to love in different ways.\n\nTo answer Sam's question, Alice shrugged and said she'd probably try to book extra video game time with me whenever one of the other girls wasn't already draining me of all my bodily fluids.\n\nNaimh said she'd been putting off some of her art projects and looked forward to having extra time to finish them.\n\nMari had a bunch of baking recipes to try.\n\nZofi wanted some quiet time to catch up on reading.\n\nAnd then it was Holly's turn. \"Well... actually...\" she began slowly, a somewhat perplexed look on her face. \"So here's the thing... I mean, I didn't plan this... But listening to you all talk about Spring Break... I mean... I just got to thinking...\"\n\nLet me quickly explain. Holly talks fast. She moves fast. She's quick and witty and bubbly and vivacious and she ALWAYS knows what to do next. It's part of her charm and at the same time I can see why it might annoy some people. She's just ADHD like that or something. The point is: the slow pace and obvious uncertainty of Holly's words were confusing the hell out of everybody, and finally Sam just barked, \"Hollister! Spit it out!\"\n\nHolly jerked her head back at the use of her full first name and immediately stuck her tongue out. \"You KNOW never to call me that!\"\n\nSam shrugged like it was no big deal. \"You were like a jukebox stuck playing the same few bars. Just needed a good kick to get you back on track.\"\n\nHolly rolled her eyes, sat up straight, and finally spat it out. \"My family owns this really sweet beach house in East Santa Cruz. Three bedrooms, overlooks the ocean... it's nice. My parents were renting it on long-term lease, but the renters moved out more than a month ago. When I first started thinking about Spring Break my plan was to go spend the week there with my... uh... well now he's my ex-boyfriend.\" Holly glanced up at me with a bit of a nervous look. \"Anyway, the house is still unoccupied, and I'm sure my parents would be cool if like... the BTC wanted to go hang out down there with me for the week.\"\n\nNaimh's eyes lit up first. \"SOLD!\"\n\nMari frowned. \"You sure your parents are gonna let you go do something like that?\"\n\nNaimh shrugged. \"Dad and I have come to an understanding.\"\n\nSam elevated herself out of the tub, planting her arms up on the deck, a position which made her massive 36DD tits rise up above the bubbles, rivers of water streaming down the big globes. \"I'm down if anyone else wants to go. Matty, I'm assuming your mum won't mind.\"\n\nI shrugged. \"Of course she won't.\"\n\nZofi spoke up. \"Well if I tell my parents I'm going with my boyfriend and my friends, I'm pretty sure they'll be fine with it.\"\n\n\"Mine, too,\" Mari spoke up. \"They like you, Matty.\"\n\nAlice scrunched up her face. \"My mom won't like it, but she'll let me go. I already missed Tahoe; I am NOT missing this.\"\n\nEveryone then turned to Belle, the only one left who hadn't confirmed.\n\nFor her part, Belle pursed her lips and looked thoughtful. I immediately knew she wasn't worried about getting permission from her dad, so long as I was the only male present. Rather, she looked a little peeved at the idea Holly had come up with a solution to remain with the BTC beyond Sunday, and not only that, but through the end of Spring Break if not longer.\n\nBut the decision had already been made by majority rule. For Belle to skip the trip would only work in Holly's favor, and so with a final nod, she agreed, \"I'm in.\"\n\n\"WOOO!!!\" Naimh stood up and cheered, shaking her big ta-tas left and right in the open air. \"Spring Break is gonna be AWESOME!\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "big tits",
        "big breasts",
        "harem",
        "pink hair",
        "anal",
        "mff",
        "high school",
        "18-year-old",
        "teenagers",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-41-42"
}