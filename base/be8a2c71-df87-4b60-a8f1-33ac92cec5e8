{
    "title": "Pipe Springs",
    "pages": [
        "By Woodmanone  copyright May/2012\n\nAnother story of the old West that takes place in the turbulent, exciting, and sometimes bloody time just after the Civil War. I've taken some literary license with this story but several of the characters, events, and situations are based on fact. They are part of our country's history.\n\nConstructive comments, critiques, and emails are more than welcome and very much appreciated.\n\nThanks for taking the time to read and comment on my story. I hope you enjoy it.\n\n<center>********************</center>\n\n\"So what brings you to this part of the country Clay?\" Sam Bettors asked the young man sharing his campfire as he scratched his big belly. Sam was about 5' 5 and nearly that big around. His fiery red hair and beard were streaked with gray. The man's close set blue eyes were intelligent and experienced. \n\nHe must be fifty or so, young Clayton Boudreau thought. He and Sam had only met earlier today. Clay had been holed up behind a big boulder with a rock butte at his back and surrounded by upset Paiute Indians. They were intent on making Clay pay for trespassing on their sacred land; Clay was just as intent that they wouldn't. \n\nHe hadn't known he was trespassing; he was just trying to get through the high desert to California. He had some experience with the Comanche in Texas and Apache in New Mexico; but he didn't speak Paiute and couldn't make them understand that he meant no harm or insult to them or their beliefs. As a result; there were several bodies dotting the landscape in front of Clay's hiding place. \n\nA shot from one of the Paiutes bounced off the rock Clay was hiding behind causing him to crouch down a little more to better hide his 5'8 frame. Clay's long dark hair fluttered in the breeze; he'd lost his hat in the race to get away from the Indians. Damn good hat it was too, he thought. Clay's almost baby face showed his displeasure at losing his hat.\n\nClay had been breaking camp just after dawn when the Indians attacked. Luckily his horse was saddled and waiting. He mounted, put the spurs to the animal, and rode as fast as he could. Clay was opening the distance between him and his pursuers when his horse stepped in a hole.\n\nClay was thrown over the horse's head. He rolled as he hit the ground; he was bruised but nothing seemed to be broken. His horse wasn't as lucky. The animal had broken his leg and was thrashing on the ground in pain. In spite of the approaching Indians, Clay did what was necessary and shot the horse.\n\nHe pulled his Winchester, his canteen, and his saddle bags off the horse and ran, limping a little, for a rock bluff rising behind him with the Paiute war party bearing down on him. Looks like I might be here for a spell but I can hold them off long as I've got water and food, Clay told himself. Maybe they'll get tired of being shot at and leave me alone.\n\nHe couldn't get away with the Indians in front of him but the Paiute couldn't get to Clay without losing more men to his well placed shots. Suddenly a rifle shot rang out and one of the Indians fell hard to the ground. He joined the other bodies in front of Clay's position. Clay peeked over the rock he was hiding behind and saw a figure sitting on a wagon. Another shot came and another Paiute was hit.\n\nNice shooting Clay thought; that man is over a hundred yards away. One more shot and the Indians decided that Clay wasn't worth all the trouble. They mounted their horses and with what were probably shouted insults rode away. The man gathered his reins and drove his team closer to Clay's little fortress. \n\n\"Howdy,\" the wagon driver said as he pulled to a stop. \"Hope I didn't spoil all your fun by chasin your friends away.\"\n\nClay chuckled and stood. \"No that's fine. I'd had about all the fun I needed anyway. Thanks for the hand. I'm Clay Boudreau.\"\n\n\"Name's Sam Bettors,\" the big man answered. \"Where's your horse?\" \n\n\"He stepped in a hole and broke his leg while I was trying to get away from my friends yonder,\" Clay replied. \"Had to shoot him.\" \n\n\"Y'all climb up. We'll get the rest of your gear and mosey out of here.\" Sam grabbed Clay's hand, then helped him climb up onto the big freight wagon and grinned. \"Course, you could stay and play with your friends some more ifin you want.\"\n\n\"No Sam, I'm ready to head out,\" Clay answered. As Clay got settled on the wagon seat he asked, \"Where we headed?\"\n\n\"Just makin my westward swing from Fredonia headed to St. George, after a few stops.\"\n\n\"Passed through Fredonia,\" Clay said. \"Didn't think it was big enough to have a freight service.\" A few seconds later he asked, \"Western swing and more stops?\"\n\n\"Got a regular route I do,\" Sam answered. \"Run from St. George to Colorado City to Fredonia. Then turn around and make the same run in the opposite direction back through Arizona to Utah.\"\n\nSam pulled his wagon close to Clay's horse. As Clay worked to get his saddle and bridle off the dead animal Sam straightened on the wagon seat and pointed. \"Yonder's your friends up on the mesa there. They're tryin to work up nerve to attack us.\"\n\nAfter rubbing his dead horse's head, and silently thanking the animal for carrying all the miles since he left home, he threw his saddle and bridle into the back. Clay climbed back onto the wagon, pulled his Winchester from the wagon floor and put it across his lap.\n\n\"Don't worry, I think they've had enough of the two of us,\" Sam laughed.\n\n\"To answer your question, most small towns don't have regular freight service; maybe three or four times a year. But St. George, Fredonia and Colorado City are different. All three of those places is mostly Mormon.\"\n\n\"What's that got to do with it?\"\n\n\"Well, you see Mormon settlements are a little different,\" Sam explained. \"St. George has been there a while; gettin to be a rite big place. So the folk in St. George makes sure that Fredonia and Colorado City get what they need. In return the folks at Fredonia and Colorado City send any extra beef, mutton, or wool and such to St. George.\"\n\nClay was quiet for a minute. \"Don't know much about Mormons,\" he admitted. \"But it's nice to hear about folks takin care of their own.\"\n\n\"Mormon families, and their church, do that more often than most folk.\" Sam chuckled. \"Course they ain't no different than the rest of us. There's good uns and some bad apples. They got rustlers, bandits, and flim flam men just like everybody else. But all and all they're good people. I like most of em.\"\n\nThe two men bounced along in the freight wagon for several minutes when Sam laughed. \"Another thing that's different about the Mormons is that they believe a man can and should have more than one wife.\" Sam cackled like a hen laying an egg. \"Now can you imagine that? A man wanting to saddle himself with more than one full time woman! Beats all I've ever seen.\"\n\n\"The men have more than one wife?\"\n\n\"Yes sir, most do anyway,\" Sam answered. \"Makes sense in a way. The Mormons, and most farmers and ranchers, want big families. To help with the work, don't you know? What better way to have a big family than to have more than one woman birthin children. The women can share the raising of the youngins and they help around the home place.\" \n\nSam cackled again and dug an elbow into Clay's side. \"Course a man has to work extra hard to get all them kids. Know what I mean?\" \n\nClay couldn't help but laugh at his new friend. \"Reckon there's no tellin what folks will believe in.\"\n\nThat evening at dusk Sam and Clay made camp. \"We're bout half way to Colorado City. It's a good three or three and a half day trip cause I have to follow the trail around them blamed mountains yonder. Weren't for them I could make the trip in two days easy. We'll pass through Kaibab tomorrow about mid morning I reckon. It's another of those Mormon settlements I told you about.\"\n\nSam shared his food and Clay did some chores around the camp so his new friend could take it a little easier. He watched as Clay gathered wood for their fire. \n\n\"Grab a cup of coffee if you've a mind. Come sit and tell me your story boy,\" Sam suggested. \n\n\"Not much to tell really,\" Clay replied. He sat down and leaned against his saddle. \"Was workin on a ranch outside of Santa Fe but the place was sold and the new owner didn't have room for a driftin cowboy.\" Clay stopped and sipped his coffee. \"Heard there are some big ranches in California and thought I'd give them a try.\"\n\n\"I think there's more to the story of Clayton Boudreau than that,\" Sam said with a small grin. \"I hear a southern drawl in your speech. Don't sound like Texas, maybe further east and south. But if that's all you want to tell, that's fine with me.\"\n\nClay was surprised that Sam caught his accent, not many had. Most thought he was from Texas. He took a deep breath and continued his story.\n\n\"I was born in Alexandria Louisiana. Never knew my mother, she died givin birth to me. My daddy was a farmer and it was years before he got over Mommy being gone. Once I got about half grown he admitted that every time he looked at me he thought of her.\"\n\nClay got up and poured more coffee for the two of them. Sam pulled a bottle of whiskey out of his camp bag. \"Here boy, let me sweeten that up a bit,\" he said as he poured a healthy portion into both cups.\n\n\"Don't normally drink,\" Clay said.\n\n\"Nonsense Clay. After the day we've had we deserve a little somethin to calm us down,\" Sam replied and chuckled. \"Now go on with your story.\"\n\n\"We was doin okay and then the War Between the States came along,\" Clay continued. \"Daddy never owned any slaves; our place wasn't big enough to need them. That didn't stop the damn carpet baggers and Northern Reconstructionists scum from takin our place. Said we were Southern sympathizers. Daddy tried to stop them and was shot. I fired a couple of shots at them and then ran away.\" Clay stopped thinking back to the day that changed his life.\n\n\"I was 15 and alone with no place to live,\" the youngster said. \"So I stole one of my own horses from the farm and headed west. A squad of Union Calvary chased me for two days. But I knew the country better and lost them. That was about ten years ago. Worked my way through Texas as a ranch hand and thought I'd found a place to stay in Santa Fe. Reckon I was wrong.\"\n\n\"Well if it's a ranch hand you want to be, the folks down to Pipe Springs got a good spread and they're always lookin for help,\" Sam said. \n\n\"If it's such a good spread why do they always need help?\" Clay asked. Something didn't sound right to him.\n\n\"They do have a little trouble now and then with your friends the Paiute and of course the Navajo too; seems the Indians don't like the ranchers any more than they liked you.\"\n\n\"Worked through some troubles with the Comanche in Texas and the Apache in New Mexico,\" Clay said. \"Don't reckon the Paiute could be any worse. How far is Pipe Springs from your trail?\"\n\n\"You plannin on seeing those folks at Pipe Springs Clay?\" When Clay nodded Sam said, \"You don't have a horse and it's a mite far to walk; especially in this country.\" Sam held out his cup for more coffee. \"I'll take you there.\" \n\nBefore Clay could object Sam added, \"The folks at Pipe Springs will have freight to send to St. George so it won't be a loss. Sides, a friend of mine runs the tradin post about a mile from the ranch. Been wantin to see him for a couple of years now. Get some sleep boy; we'll head out at first light.\"\n\nOn the trek to the trading post Sam explained about his friend. \"Riley was a mountain man the last time I seen him. Heard tell he'd just come down out of the high country and wasn't plannin on goin back. Riley said he barely made expenses on his last two trapping seasons. Said he didn't want to spend another winter in the mountains with nothin to show for it.\"\n\nSam chuckled. \"Never would have thought those winters he spent with different Indian tribes would come in handy down in the flat land. But Riley got the job of runnin the tradin post because of his experience with the Indians; now he owns the place. Most of the tribes around here trust him. Course he treats em with respect and he don't try to cheat em. Reckon that'd work with just about anybody.\"\n\nIt was just about midday when Sam pulled his wagon to a stop in front of the trading post. With the slow pace of the freight wagon it took them almost six hours to cover the 14 miles to Pipe Springs. An hour was added to the trip because they stopped at the little settlement of Kaibab. \n\nA giant of a man stepped out of the trading post as they stopped. Clay thought he'd never seen such a big person. He's got to be 6' 7 and he must weigh well over 300 pounds, Clay said to himself. He's looks to be sixty years old or so, but I sure wouldn't want him upset with me.\n\n\"Sam, you old horse thief,\" the big man said in a loud booming voice. \"Ain't seen you in more than two years. How the hell are you?\"\n\n\"Watch who you're callin a horse thief Riley Johnson,\" Sam yelled back with a big grin on his face. \"You're the only horse thief standin here.\" Sam climbed down from the wagon.\n\n\"Been just fine Riley. Got too fat to ride much,\" Sam said as he patted his stomach. \"So I decided to get into the freight business.\"\n\nThe two men shook hands and all but knocked each other down pounding the other on the back. Clay got down smiling at the two friends greetings. They looked funny together; the giant Riley Johnson towering over the portly Sam Bettors.\n\n\"Who's this pup?\" Riley asked pointing to Clay with a smile.\n\n\"Name's Clay Boudreau, Mr. Johnson. I just met Sam the other day when he pulled me out of a bad situation.\" Clay went on to explain their meeting. \"Reckon I'd still be there if Sam hadn't decided to help me.\"\n\n\"I always did have more gumption than sense,\" Sam said to Riley laughing. \"Couldn't let the boy have all the fun now.\"\n\n\"Them Paiutes and the Navajo too, been real excitable ever since the Mormons built their fort,\" Riley said. \n\n\"Buildin a fort makes sense out here,\" Clay replied. \"For protection and all.\"\n\n\"James Whitmore, he was the manager of the ranch, built the fort right over the springs. I don't think the Indians liked being cut off from the only water hole for 30 miles in any direction,\" Riley explained. \n\n\"How long has the ranch been here?\" Clay asked.\n\n\"Well I'll tell ya,\" Riley answered. \"Back in '58 the Mormon missionaries were on an expedition to the Hopi mesas. Fellar name Hamblin discovered and named it Pipe Springs. In the early '60s this Whitmore fellar brought cattle and a few settlers and established a pretty big ranch in the area. Course the Paiute, Navajo, and the Hopi had knowed about the place for hundreds of years and weren't real happy with the new settlers. \"\n\n\"They could've picked a better spot for a ranch,\" Sam interjected. \n\n\"Looks like good cattle country to me,\" Clay responded. \"Lots of natural grass and if the spring gives enough water for the stock, this is a good place to raise cattle. I think you're mistaken Sam.\"\n\n\"Know about cattle don't you boy,\" Riley said. \"Well you're right. It is a good place for cattle or horses or sheep.\" Before Clay could reply Riley continued his story. \"Like the boy said ifin you got water, this plateau is a fine place for ranchin. And Pipe Springs gives plenty of water.\" \n\nThe three men had wandered into the trading post. Riley went behind the counter and pulled out an old jug. He set three Mason jars on the counter. He poured liquid from the jug and slid two of the jars across to Sam and Clay.\n\n\"That some of your squeezins Riley?\" Sam asked smiling as he reached for a Mason jar. Turning to Clay he said, \"Y'all need to try this youngster. It'll put hair on your chin.\"\n\nClay picked up the closest Mason jar and took a big drink. He started coughing and sputtering. His face got red and he quickly set the jar back on the counter.\n\nSam pounded on his back for a few seconds as he laughed. \"Smooth ain't it boy?\" Then he laughed some more.\n\nClay finally caught his breath. When he saw the smiles on Sam and Riley's faces he had to laugh at himself. \"You know I drank some stuff made by some traders down in Texas. They made it stronger for the Indians by addin rattlesnake heads to it. Thought that was the worst tastin stuff I'd ever had.\" Clay looked at Riley with a straight face and added, \"This makes that stuff in Texas taste like sody pop.\" \n\nAfter Riley stopped laughing he asked, \"Now where was I? Oh yeah. Anyway about '66 the Navajo and Paiute started makin raids on the ranch. For the next six years it was almost like a war; the Indians makin raids, and the Mormons runnin them off. The ranch hands would hole up around the spring and outwait the Indians. Sometimes the ranchers would strike at the Indian camps to pay them back for the raids on the ranch.\"\n\nSam chuckled. \"Whitmore decided to build a fort over the spring in '72. A fort was a good idea and it was a smart to build it where he did. Course the Paiute and Navajo were really mad now. The fort cut them off from the water hole they'd been using for hundreds of years.\"\n\n\"I can see where the fort would have really upset the Paiute,\" Clay offered. \"But couldn't the Indians just go downstream and get water?\"\n\n\"You'll see why they couldn't water downstream when you see the fort. It sure enough put them on the warpath. But there weren't much they could do about it. The Indians made some more raids and killed some stock. But killing cattle didn't run off the ranchers. For the last three years it's mostly been quiet over to Winsor Castle,\" Sam finished.\n\n\"Thought you said the man that built the fort was named Whitmore?\" Sam said.\n\n\"He did, but in '73 the Mormon Church bought the place from Whitmore. Sent a man named Anson Winsor to ramrod the ranch and keep up the fort,\" Riley answered. \"This Winsor improved the fort some and pretty soon folks started calling it Winsor Castle.\"\n\nClay had been watching Riley closely as he told the story of the Pipe Springs Ranch. As he finished his story Clay asked, \"How old are you Mr. Johnson, if you don't mind my askin? Sam said you was a mountain man back in the '40s. That's thirty years ago.\"\n\n\"Ya, by the time I met Sam I'd already been trappin for better than ten years. Wintered with Jim Bridger back in '30. He was full of himself and thought he was a hero out of a dime novel, so I only stayed with him the one winter. Went out on my own after that.\"\n\n\"But how old are you Mr. Johnson?\"\n\n\"What year is it anyway?\" Riley asked.\n\n\"1875\"\n\n\"Well let's see. I was born in '07 so that makes me.....bout 68 near as I can figure.\" Riley grinned. \"Reckon I've done everything I wanted and some that I didn't. But somethin new might jump up and that's what keeps me goin.\"\n\nClay yawned and leaned back against a sack of beans. Sam smiled and motioned to Riley to look at the youngster. \"Been through a lot in the last day or so,\" Sam whispered.\n\n\"Y'all welcome to my extra room for the night or for as long as you've a mind to stay,\" Riley said in a loud voice. \n\nClay set up, yawned again and said, \"Don't know about Sam here but I'll take you up on your offer Mr. Johnson. I'm a bit tuckered out.\"\n\n\"I'll take you over and introduce you to Winsor tomorrow,\" Riley offered.\n\nClay nodded and went to get some rest. Riley poured more of the home made whiskey and quickly he and Sam started talking about old times.\n\nTwo hours later Clay woke up. He stood and started to undress; he hadn't even removed his boots. As he bent to pull them off, he heard loud voices coming from the main room of the trading post. That noise is what woke him. Clay buckled on his gun belt, stepped through a door, and entered the main room.\n\nRiley Johnson was on the floor leaning against the counter. He had a knot on his forehead and his nose was bleeding. Clay fearfully turned to look for Sam, but when he saw his new friend he had to grin. There was a man lying face down with Sam's foot on the back of his neck, pinning him to the floor. Sam held a man under each arm with his forearm around their necks.",
        "\"If y'all won't respect your elders y'all will damn well respect your betters,\" Sam said with laughter. \"That's me, Sam Bettors.\" \n\nHe quickly and forcefully pulled his arms together in front of him and knocked the men's heads together. They fell unconscious to the floor. Sam bent over and picked up the man that he'd been holding down with his foot. Grabbing the man by the shirt collar with one hand and his belt with the other Sam marched him to the door. \n\nThrowing the man out the door Sam yelled, \"Y'all don't come back until you know your place and learned some manners.\" Sam walked back to Riley to see how badly he was hurt.\n\nThe man returned from outside holding a pistol. \"I'm gonna kill you old man,\" he yelled at Sam as he pointed his weapon.\n\nA shot echoed in the room and the man fell to the floor. Clay hadn't hesitated when he saw his new friend in danger. He quickly drew and fired his pistol. The man was dead before he fell.\n\nSam looked over his shoulder in surprise. He hadn't had time to respond to the man's yell. \"Damn boy, I didn't know you was a gun hand. Reckon it's a good thing for me that you know how to use that Remington,\" Sam said with a grin on his face.\n\n\"Mr. Johnson okay?\" Clay asked as he came on into the room.\n\n\"I'm okay,\" Riley replied. \"That one there,\" he said pointing to one of the men on the floor, \"Hit me in the nose and I tripped over my own feet. Hit my head on the counter when I fell.\"\n\n\"Where'd you learn to handle a pistol like that,\" Riley asked.\n\n\"I worked for a couple of years for Creed Taylor down in Dewitt County Texas. He and his brother had a feud goin with a family named Sutton. Creed taught me how to use a gun so's I could protect myself. But when the shootin got real serious Creed ran me off. Said I wasn't part of it and made me leave.\"\n\n\"Well I'm real glad he did.\" Sam patted Clay's shoulder in thanks.\n\n\"What started the ruckus?\" Clay asked.\n\n\"That one there,\" Sam said pointing to the dead man, \"got all riled up. Said Riley was tryin to cheat them and started stealin things. That one,\" he said pointing to one of the unconscious men on the floor hit Riley.\" Sam paused for a moment and said, \"That's when I jumped in.\"\n\n\"What'll we do with these fellars?\" Clay said.\n\n\"Slit their throats and throw them into one of the canyons around here,\" Riley said. \"Serves' em right.\"\n\n\"We can't just kill them,\" Clay objected.\n\n\"You squeamish boy?\" Riley asked.\n\n\"No sir, I can stand up to killin in a fair fight if I have to but I can't shoot a helpless man. Maybe I could borrow a horse and go for the law,\" Clay suggested.\n\n\"Nearest law is over to St. George. That's better'n 60 miles just to get there,\" Riley explained. \"Best to just dump em in a canyon.\"\n\n\"Tell you what Riley. Let's wake em up and scare the hell out of them. Then send em on their way,\" Sam suggested motioning toward Clay. He could see that Riley's idea bothered Clay. \n\n\"They'll just come back on us,\" Riley protested. \"Better to do it now.\" He saw Sam's motion toward Clay and added, \"But you took em down Sam so if that's what you want to do, we'll do er.\"\n\nThey drug the two unconscious men outside along with the dead man. Sam threw a bucket of water in their faces and they begin to sputter and wake up. When they sat up and looked around they saw their companion lying next to them with a bullet hole in the middle of his forehead.\n\n\"That'll be you two, if we ever see you again,\" Sam told them pointing to the dead man. \"Toss your guns away and stand up.\" Once the men complied with his orders Sam continued, \"Now get on a horse and head out.\"\n\nThey walked to where their horses were tied and started to mount up.\n\n\"I said one horse. Y'all get one horse between you. You can take turns ridin or carry the horse on your backs but move on,\" Sam ordered.\n\n\"Those are our horses Mister,\" one of the men complained. \"How do you expect us to make it out of here on one horse?\"\n\nRiley was standing in the doorway with a Winchester held in his arms. He raised the rifle and set the butt stock on his hip. \"Were I you, I'd be glad for the one horse. If it was up to me you would never have got up off the floor. You can thank the youngster there that you're not buzzard bait. Now get before I decided to do things my way.\"\n\nThe two men left riding double.\n\n\"Hey Riley what should we do with this one?\" Sam asked pushing at the dead man with the toe of his boot.\n\n\"There's a deep ravine about a hundred yards yonder,\" Riley replied. \"Dump him off into that hole. Buzzards and varmints got to eat too you know.\"\n\n\"Okay. Give us a hand will ya.\" Sam said.\n\nRiley shook his head and looked at Clay. \"You kilt him, you bury him,\" he said and returned into the trading post.\n\nSam and Clay threw a rope around the man's feet and used his horse to drag him to the ravine. Once they got there Sam knelt and searched the man. He unfastened the gun belt and handed it to Clay. Continuing to search, Sam fished two Double Eagle gold coins out of the man's pocket and a tobacco pouch off his belt. Then he pushed the body over the edge and listened to it fall for over seventy feet.\n\nClay took the pistol from the holster and examined the weapon, cocking and releasing the hammer several times. \"Whatever he was he wasn't just a cowboy,\" Clay remarked holding up the gun. \"This is an almost new Colt Peacemaker in .44-40,\" he told Sam. Most cow hands can't afford a weapon like this.\"\n\n\"Most cowboys don't carry $40 in gold coins either,\" Sam agreed. Opening the tobacco pouch he took a sniff. \"Most can't afford this good a tobacco.\" \n\nSam handed Clay the gold coins. \"Reckon the Colt and those coins rightfully belong to you,\" he said and with a smile added, \"His horse too; but I'll hold on to the tobacco. And it's a favor I'm doin you; y'all too young for that vice.\"\n\nClay shook his head and in spite of the circumstances, laughed at Sam. He tossed one of the coins back to his friend. \"Reckon I should share this with you since you were his target but I'll keep the Colt.\"\n\nSam nodded and smiled. \"Tomorrow mornin early Riley will ride over to the ranch and see about a job for you. If they don't have a place for you I'll take you on to St. George with me.\"\n\n<center>********************</center>\n\n\"Mr. Winsor, can I talk with you?\" Riley asked.\n\nAnson Winsor was a small man, especially compared to Riley, but tough looking. His face and hands were like tanned leather from working outdoors for most of his life. Windsor stood straight and was whipcord lean. The way he moved and talked was a challenge to life and its troubles. I won't be beaten his actions seemed to say.\n\n\"What can I do for you Mr. Johnson?\" Winsor replied.\n\n\"Like to introduce you to Clay Boudreau here. He's my friend and he's lookin for a job,\" Riley said. \"I'd appreciate it if you'd talk to him.\"\n\n\"What type of work are you looking for Mr. Boudreau?\" Winsor asked as he turned and shook hands with Clay.\n\n\"Ranch work mostly,\" Clay replied. \"I can work stock pretty good, cattle and such. Know my way around horses too. Can do a little blacksmithing if push comes to shove. Worked for the Bar S up to Santa Fe for three years. Before that I worked for Creed Taylor down in Texas for two years.\"\n\n\"Why'd you leave those places young man? Is there trouble on your trail?\" Winsor watched Clay's eyes as he answered.\n\n\"No sir, not that I know of. Left Creed's place because of the feud between his family and the Suttons. Creed didn't want me gettin involved he said and sent me on my way. The Bar S was sold to a company back east. The company sent out a ranch manager and he didn't have any use for a drifter. That's what he called me, a drifter; even though I'd been at the ranch for three years.\"\n\nWinsor examined Clay and liked what he saw. The young man stood tall, faced you head on and looks you in the eye, Winsor thought. \n\n\"Had some trouble the last few days you might need to know about Mr. Winsor,\" Clay admitted. At Winsor's nod he told the ranch boss about the trouble with the Indians and meeting Sam Bettors. He continued with the story of the three hard cases at the trading post. \"I didn't want to kill that man but he was gonna shoot Sam in the back. Couldn't let that happen.\"\n\n\"That cuss would have probably done me in too Mr. Winsor,\" Riley offered. \"Sides if I'd a been able I would have shot that skunk myself.\"\n\n\"Come along Clay; I'll give you a tour of the grounds and we'll talk. Afterwards we can both decide if you should join us.\"\n\nWinsor led Clay around the grounds close to the ranch house, or in this case Winsor Castle. After looking at the corrals, barns and other outbuildings, Winsor showed Clay the fort. Clay was impressed with the building. It wasn't really a Castle but could pass for one on this high plateau, in this part of the West.\n\nThe fort had a courtyard that was framed by two buildings with gated walls at each end. The northern building had walls close to thirty feet tall, as they backed into a hill; the southern building was shorter at 20 feet. The walls were of quarried red sandstone from a nearby bluff to the west of the fort. Clay could see the markings where the stone had been cut out of the bluff. Mortar was used to fit the stones together and hold them in place.\n\nEach wall was 70 to 80 feet long and about two feet thick. The entrance was through two huge doors on each end of the square. The doors were made from thick tongue and grooved wooden planks. The gates swung open from the middle and were 10 feet wide by 12 tall. That masonry work looks like some of the brick buildings back in Louisiana, Clay thought. Only bigger.\n\nThere was a covered porch running along each of the buildings facing the courtyard. Back home we'd call them verandas, Clay thought. A wide catwalk joined the porches across the east end of the courtyard. The west end had stairs leading to each side of the second story. Clay was told later that the lumber for the gates the porches were from a Mormon sawmill located sixty miles south on Mount Trumbull.\n\nThere were five rooms in each building. A kitchen, meeting room and living quarters for some of the families Clay was told. Every room had a glass window that looked down into the center court between the buildings. Each room's exterior wall had openings cut through the stone to the outside. \n\nClay looked hard at these openings. \"Are those are firing ports Mr. Winsor?\" He asked. \"Seen somethin like that in some of the homes in Texas and New Mexico. People used them when the Comanche or Apache made raids. \" \n\n\"That's right Mr. Boudreau. If we're attacked we can mount a defense without exposing ourselves.\"\n\n\"Must get cold in the winter,\" Clay remarked.\n\nWinsor stepped to one of the ports and swung a wooden shutter across the opening. \"In the winter these shutters will stop the cold and wind from getting into the room.\" Clay nodded and Winsor led him back to the ground floor.\n\n\"Here's what makes our fort special,\" Winsor said as he led Clay through a door into one of the rooms built into the foundation.\n\nWinsor called the room the parlor. He moved a rug out of the way and pulled up a four by two foot wooden section of the floor. Pipe Springs flowed up out of the ground and the rushing water flowed into a covered trough dug into the floor. Motioning Clay to follow him, Winsor showed him that the covered tunnel extended across the floor of the center court to the other side and into that building. They entered a room across the fort. In the center was a pool of clear, cold spring water about six feet across. \n\n\"We dug this room several feet lower than the others. The dirt surrounding the room and the cold water from the spring keep it much cooler,\" Winsor explained. \"So we use it as a sort of cold room to store perishables.\" He waved Clay through the big gate and walked around the fort. He stopped at what was the outer wall of the cold room and pointed to the waterway which flowed from under the fort's foundation.\n\nClay saw two large fresh water ponds about 50 feet from the wall of the fort. Each pond was close to 30 by 30 feet and about 4 foot deep. At the end of each pond was a small door, or weir, that could be raised or lowered to regulate the amount of water held. The escaped water flowed into a stream bed at the bottom of the rise.\n\n\"The Indians or other raiders might get our cattle and livestock if they force us into the fort but they can't starve us out for lack of water,\" Winsor explained. \"That's why the placement of our building is so special. Our springs are a stopping place for most of the travelers crossing the Arizona Strip. Pipe Springs is the only good water for a day's ride in any direction so we get a lot of travelers passing through.\"\n\n\"The Arizona Strip?\" Clay questioned. \"Haven't heard about that.\"\n\n\"It's the part of the Arizona Territory north of the Colorado River and south of the Utah Territory,\" Winsor replied. \"It's an excellent place to raise cattle or most stock for that matter, but the Grand Canyon sort of makes this a hard area to get to. There are lots of grassy meadows in the valleys and the Kaibab Plateau here is good for summer grazing.\"\n\nClay nodded. \"That's what I told Sam. He and Riley told me about the lack of good water in the area so I see why folks would stop here. \" To himself Clay added, I can see why the Paiute and Navajo are on the warpath too.\n\nAs they started back to the front of the fort, they passed a corral that held an angry horse. Two men were trying hard to pull the animal up to a snubbing post so they could saddle him. The horse was trying just as hard to stay away from the post.\n\nClay stopped to watch for a few seconds. \"Crossbreed,\" he mumbled.\n\n\"What's that?\" Winsor asked.\n\n\"That horse is a cross breed, ain't he?\" Clay asked. \"Looks like a mustang and one of your stock horses got together and this colt was the result.\"\n\nWinsor nodded. \"Some Navajo ran off a string of horses about three years ago. We never did catch the animals and they ran wild for a time. Last week we rounded up some of the horses. We need good horses to run the ranch so we thought we'd break some of the mustangs for our use. This stallion was one of them.\"\n\nWinsor shook his head and had a grimace on his face. \"No one's been able to make much headway training him. Reckon he's just too wild and we'll have to let him go or shoot him. The others may be too wild also.\"\n\nClay watched as one of the men used a rawhide lariat to whip the horse. \"Never get him trained that way,\" Clay said aloud.\n\n\"If you like, give it a try Mr. Boudreau,\" Winsor said and motioned toward the corral.\n\n\"Get those men out of there please,\" Clay requested. \n\nWinsor called the men out of the corral. They dropped the rope around the horse's neck and the animal quickly rid himself of the lasso. The mustang watched them go, shook his head and pawed the ground with one hoof.\n\nThat horse has got a lot of spirit, Clay thought. It's like he's challenging those two to come back and fight some more.\n\nClay got the lariat from the cowboy that had been using it and sat down on the top rail of the corral. He watched the young horse for several minutes and then threw the coiled lariat onto the ground about ten feet from the mustang. After several seconds the young horse attacked the lariat with his front hoofs. He screamed his anger and a challenge at the ones that had hurt him.\n\nShaking his head in admiration, Clay began to talk to him in a low soothing tone. He talked for four or five minutes. The horse looked directly at Clay shook his head from side to side a few times and listened to the man's voice. Clay slowly climbed down from the top rail and went back to Winsor.\n\n\"Nothin wrong with that mustang that a little patience won't cure,\" Clay told the range boss. \"Your men probably haven't worked with horses that got as much spirit as the mustangs. They take a little different style of breakin than regular horses.\"\n\n\"You've worked with mustangs before I take it,\" Winsor replied.\n\n\"Yes sir, down in Texas. Lots of mustangs down there; up near Santa Fe too.\" Clay looked at the mustang stallion again. \"I admire them; they live wild and pretty much go where they want.\" \n\n\"I have a few more questions for you if you don't mind.\" Clay nodded his head and Winsor continued, \"Would you have a problem working with people of our faith? The reason I ask is that some people don't approve and in fact hate us for our beliefs. What do you think of our faith Mr. Boudreau?\"\n\n\"Don't know much about it Mr. Winsor. All I know, I learned from Sam and Riley.\"\n\n\"That'd be Mr. Bettors and Mr. Johnson?\" Clay nodded. \"And what did those gentlemen have to say about the Church of Jesus Christ of Latter Day Saints?\"\n\n\"Latter Day Saints? Oh Mormons. Well...Sam says you take care of your own better than most folks he's seen. He said some of you are better off than others, just like any other folks, but that y'all make sure that every family has enough to eat and a way to make a livin. Sam admires that and I do too Mr. Winsor.\"\n\n\"And Mr. Johnson?\"\n\n\"Riley said about the same thing.\" Clay hesitated and added, \"Sam also told me that y'all believe in a man havin more than one wife. Said some of y'all have three or four wives.\"\n\n\"Yes, some do. Does that bother you Mr. Boudreau? Will it cause you a problem if you work for us?\"\n\nClay looked at Winsor for several seconds and grinned. \"Long as I can do my job and earn my wages I reckon what folks want to believe and do with their own lives is their business. Won't bother me none at all.\"\n\nWinsor and Clay continued walking toward where Riley Johnson was waiting. \"Mr. Boudreau I'd like to offer you a place with us at Pipe Springs,\" Winsor said. \"Pays $50 a month and found. We'll give each other a try for a month and see how we fare. You can work with the mustangs and train them to be working stock if you like. I'll pay you $5 a head for every animal you train that we can use.\"\n\nClay didn't hesitate. \"Believe I'd like to stay Mr. Winsor. I'll take the job.\" \n\n\"Good. Today's Saturday, you can gather your gear from Mr. Johnson's trading post and start on Monday.\"\n\n\"Thank you Mr. Winsor. I'll be here at first light tomorrow if you like,\" Clay replied.\n\n\"Tomorrow is the Sabbath Mr. Boudreau. People will be at worship most of the day. So Monday is soon enough.\"\n\nClay nodded, walked over and mounted the horse that until recently had belong to the dead gun hand.\n\n\"Get the job did ya?\" Riley asked. Clay nodded. \"And when do you start?\"\n\n\"Monday morning. Got to find another horse between now and then if I can. I'll need at least two mounts to work cattle.\" Clay looked sideways at Riley and asked, \"You got a horse I could owe you for until I get my wages Mr. Johnson.\"\n\n\"I do, but you don't need to owe me boy,\" Riley replied.\n\n\"But I got to have another horse to work cattle,\" Clay argued.\n\n\"You got another horse in my corral,\" Riley said. Clay gave the old mountain man a questioning look. \"Those three hard cases came in on three horses,\" Riley explained. \"Those men you and Sam let live took one. You already got the one horse; that leaves the other horse for you.\"\n\nClay started to protest but Riley continued. \"Sam don't need no saddle broncs drivin his wagon and I got all I need with Ned here.\" He leaned over and patted his horse on the neck. \"I'd have to feed and water the other until I could get free of him anyway. Be doing me a favor if you'd take em off my hands.\"\n\n\"You could sell that animal for good money Riley. Why would you just give them to me?\n\n\"If a buyer came through I might could sell it. Or I might could sell the beast to the folks over to Pipe Springs,\" Riley said. \"But without you I would have lost my friend Sam. A good friend is hard to come by in this world and he's about the only one I have. So take the horse with my thanks. Okay boy?\"",
        "Clay nodded touched by Riley's words about Sam. \"Riley if y'all got a mind to, you can count me as a friend too.\"\n\nRiley grinned. \"Reckon we can do that Clay.\" He coughed and looked away. \"Nough of this foolishness, let's get some whiskey.\"\n\n\"Did you get the job?\" Sam asked as Riley and Clay rode up to the trading post. Clay nodded. \"Reckon I'll be goin on to St. George by myself,\" Sam complained with a smile. \n\n<center>********************</center>\n\nWell, I've been here three months now, Clay thought. He was driving a small herd of twenty cattle toward the water and grazing near the fort. Reckon Mr. Winsor likes my work. It's a good thing cause I sorta like it here. I get to see Riley at least once a week and Sam comes through every month or so.\n\nThe week before Clay had made a trip with Sam in his wagon to the sawmill at Mount Trumbull. They were to bring back some lumber cut from the pines on the mountain. While he was there he took a half day side trip to see the Grand Canyon. Biggest hole in the ground I've ever seen, he told Sam when he returned.\n\nMr. Winsor greeted the wagon when they returned and examined the load. He asked Sam to put the wagon near one of the out buildings and had some of the men unload it. Clay helped to put the fresh lumber, stacked with a space between each layer, in a shed. It would stay there for a couple of months while it dried out.\n\n\"You have to let the wood dry out before you use it,\" Winsor explained to Clay. \"If you don't it shrinks as it dries and leaves gaps and openings in whatever you've built. He glanced at his young hand and asked, \"Did you get a chance to see the Canyon while you were there?\"\n\n\"Yes sir. They had to take a day to finish the lumber for us so I took a ride over to the Canyon.\" Clay looked off to the south toward the Canyon. \"It sure is somethin; it cuts this part of the country off from the rest. Now I understand what you meant about the Arizona Strip. Reckon we're sorta cut off up here, ain't we?\"\n\n\"It certainly does make it difficult to get to this area from the south,\" Winsor replied. \"The Canyon is over 250 miles long and there's only a few places you can cross it.\"\n\n\"Be tough to do on horseback,\" Clay remarked. \"And I don't care much for walkin. Glad I'm on this side.\"\n\n<center>********************</center>\n\nClay's horse switched directions to push some cattle back into the herd before they could wander away. He was riding the mustang stallion he'd seen while talking to Mr. Winsor when he applied for a job. It had taken him almost a week to get the animal to trust him. He would sit on the top rail of the corral every evening after supper and talk to the horse. Clay also brought carrots, apples, or sometimes a piece of sugar to feed to the stallion. Soon the mustang would approach Clay for his nightly treat. After that he was another ten days before he could ride the spirited horse. Now the mustang was a well trained cow pony.\n\nWinsor had watched Clay's progress with the mustang and with the other three he gentled at the same time in the same way. The ranch now had four horses ideally suited for working cattle in this almost arid mesa country. He was so pleased with the success of the training that he gave Clay the mustang stallion. Clay named the horse \"Puuku\".\n\nPuuku wasn't impressive as horses go. He stood just over 14 hands at the shoulder. But he had a deep chest and very strong sturdy legs. The mustang was quicker from a dead stop than most of the other horses on the ranch and could change direction in an instant. Because of this Puuku was an extremely good horse for herding cattle and other stock.\n\nThe mustang's coloring was strange and he stood out because of it. He was basically a buckskin but had spots of dark brown across his withers. Must have some Appaloosa in him, Clay told Winsor.\n\n\"We suit each other just fine don't we Puuku?\" Clay said as he patted the horse's neck. Puuku nodded his head as if he understood Clay.\n\nReckon we better bed down for the night, Clay thought. No need to ride off into a ravine or somethin in the dark. He saw a small box canyon off to his right and pushed the cattle toward it. It was more of a depression back into the sandstone bluff but it was big enough to hold the small herd overnight.\n\nClay finished his supper of beans and bacon and was leaning back against his saddle watching the fire. He heard a noise from behind him in the dark. Puuku was hobbled off to Clay's right and raised his head from grazing to stare into the night toward the noise.\n\nSomeone's out there, Clay thought. He slowly stood and walked over to Puuku, patting him on the neck and checked the hobble. Clay stepped behind the horse and walked into the darkness. He silently crept around his camp to the other side of the clearing. There was a small figure kneeling beside his bedroll looking through Clay's saddlebags. Pulling his Colt, Clay stepped closer to the intruder.\n\n\"Hold it right there,\" Clay said loudly. \"I've got my pistol pointed at your head.\"\n\nThe figure stiffened at Clay's words and didn't move.\n\n\"Get your hands out of my saddlebags and spread them out to your side,\" Clay said. The figure obeyed dropping a cloth bag that held beef jerky. \"Stand up and put your hands over your head,\" he ordered.\n\nClay could see the person shaking when they stood. Gettin ready to run, Clay thought. \"Don't try it. I'm a better than average shot and I can't miss at this distance. Just hold still.\"\n\nSlowly Clay stepped into the light and circled the standing figure until he could see the face. \"I'll be damned,\" Clay said in surprise. \"You're just a youngin. How old are you son?\"\n\n\"Thir...thirteen sir,\" the boy answered with a quiver in his voice.\n\n\"Put your hands down,\" Clay said as he holstered his Colt. \"What are you doin at my camp? For that matter what are you doin out here all alone?\"\n\n\"I'm not alone. My Pa and sister are just down the trail a bit,\" he answered.\n\n\"What's your name boy?\"\n\n\"Jacob Sanders sir.\"\n\n\"And what are you doin in my camp instead of being with your family?\"\n\nJacob hung his head and didn't answer. Finally he looked up at Clay. \"We heard the cattle and then saw your fire. I was gonna take some food and water. We haven't had anything to eat for a couple of days and our waters almost gone.\" He hesitated. \"I'm sorry Mister. Can I go now?\" \n\n\"Your father send you to steal from me?\"\n\n\"Oh no sir. Pa would tan my hide if he knew I was here. But he was asleep when I left our wagon,\" Jacob said. \"He's hurt and sleeps a lot. Rebecca's asleep too or she wouldn't have let me come either.\"\n\n\"Rebecca?\"\n\n\"She's my sister.\" Jacob shook his head and added, \"Acts like my Ma most of the time.\"\n\nClay hid a smile. He took the bag of jerky and tossed it to the boy. \"Tear into a piece of that jerky while I saddle my horse. Then we'll go see to your Pa and your sister.\"\n\n\"Thank you Mister,\" Jacob said around a mouthful of jerky. Clay tossed him a canteen and the boy took a big drink.\n\n\"Take it easy youngster,\" Clay suggested. \"Too much at once and you'll just bring it back up. Little sips work best.\" \n\nJacob nodded, took a smaller sip of water, and bit off another piece of jerky. Clay finished saddling Puuku and led him over near the fire.\n\nHe mounted and held his hand down to Jacob. \"Climb on up and let's go find your camp,\" Clay said.\n\nClay walked Puuku in the direction the boy pointed. \"You said your Pa was hurt. What happened?\"\n\n\"We broke a wagon wheel and Pa tried to fix it,\" Jacob answered. \"He was able to get some rocks under the rear axle so the wheel was up off the ground. When he was puttin on the new wheel, the wagon fell off the rocks onto his leg.\" Jacob shook himself. \"I'm pretty sure it's broke. Then our horses got away night before last so's Rebecca or me couldn't ride to find help.\"\n\n\"Was probably Navajo or Paiute got your horses. Sounds like you've got a peck of trouble Jacob. \"\n\n\"Yes sir. That's why I was tryin to take some stuff from you. Think it was Indians took our horses?\" Jacob asked. Then he extended his arm past Clay's shoulder and said, \"Over that way about a mile.\"\n\n\"Reckon it was Indians. Not much trouble around here lately but they still like to steal a horse once in a while.\" He grinned and added, \"Just so they don't forget how.\"\n\nClay could see the light from a fire and reined Puuku toward it. As they neared the camp, the clouds drifted away and let the light of the full moon shine down. From thirty yards away Clay was able to see a man lying close to a tilted wagon. A woman sat on the ground next to him.\n\nThe woman heard the horse and stood, cradling a Winchester in her arms. \"Who are you Mister and what do you want?\" She challenged Clay. \n\nClay turned his horse to the side and the woman saw Jacob. \n\n\"It's okay Becky,\" Jacob said. \"This man's gonna help us.\"\n\nRebecca didn't lower the rifle. \"Jacob get down and come here.\" She ordered.\n\nClay slowly raised his hands to shoulder height. \"Boy's right Ma'am. I brought a little food and a canteen for y'all.\" \n\n\"I told you to get down Jacob,\" Rebecca repeated.\n\nJacob slid off the horse's rump to the ground and went to his sister. He carried a large canteen and the bag of jerky. Jacob dropped to his knees and held the canteen to his father's lips. The man was almost unconscious but took a little water.\n\n\"Thanks for the water,\" Rebecca said. \"You can be on your way now.\"\n\nClay used his knees to guide Puuku closer to the woman, never lowering his hands. He was twenty feet away when he realized that Rebecca was a young woman of about 22. Right nice lookin too, Clay couldn't help but think. \n\nRebecca Sanders was slim but looked strong. Her mane of strawberry blond hair hung down her back almost to her waist. It was tied back with a piece of rawhide. She was staring at Clay with big brown eyes. \n\nThose eyes could right through you, Clay thought. He cleared his throat.\n\n\"Would it be alright if I lowered my hands Miss?\" Rebecca nodded. \"My name's Clayton Boudreau, Clay to most folks. As far as me headin on, I can't rightly leave y'all here. That canteen and jerky won't last for very long and it don't look like you're goin anyplace soon,\" Clay said pointing at the broken wagon and her injured father.\n\nHe dismounted still holding his hands away from his body. \"Can I take a look at your father? Maybe I can help.\"\n\nRebecca sort of slumped, nodded and moved a few steps away; she still held the Winchester in her arms. Mr. Sanders' pants leg had been slit open and a heavy wet cloth had been put on his leg below the knee. Clay bent down and looked at the injured leg. It was discolored with bruises and swollen some. Clay felt along the lower leg until he felt a bump.\n\n\"Leg's broke for sure Miss Sanders,\" Clay said to Rebecca. \"But it feels like a clean break.\" He looked the young woman in the eye. \"If you let me I think I can set his leg.\" Rebecca hesitated and Clay said, \"Needs to be done. If it's not, your father will probably lose it.\" \n\n\"Have you done this before Mr. Boudreau?\" Rebecca asked.\n\n\"Yes' em, down in Texas,\" Clay answered. \"One of the hands broke his leg when he got knocked off his horse by a steer.\" Clay smiled. \"It was him that told me what to do.\"\n\n\"I suppose we don't have much choice.\"\n\n\"Well the Fort's about a half a day's hard ride,\" Clay said. \"I could go for help but it'll be at least a day and a half, maybe two days, before we can get back here with a wagon.\" He looked down for a moment and then back at Rebecca. \"I don't know if your father's leg will be okay that long.\"\n\nRebecca nodded, stepped closer to her father and knelt down next to him. \"Daddy can you hear me?\"\n\nMr. Sanders opened his eyes and smiled at his daughter. Rebecca motioned Clay over to them.\n\n\"You leg's broke bad Daddy. This is Mr. Boudreau and he's going to help us.\"\n\nClay laid his hand on Mr. Sander's shoulder. \"Sir, I can set your leg but it's gonna hurt. If we don't set it you could lose your leg or you could end a cripple.\"\n\nSanders raised himself onto his elbows and looked down at his leg. Turning to Clay he said, \"Do it.\"\n\nClay explained what he was going to do. \"Jacob get two of those spokes off the broken wheel please.\" The boy brought the spokes and laid them next to his father.\n\n\"Rebecca, Jacob take hold under his arms and hold tight\" Clay ordered. \"I'll pull slowly on his leg until the bone lines up again and then we'll use those spokes and put a splint on it.\" \n\nClay got up and went to his horse. Searching in the saddle bags he found the piece of rawhide he wanted. Walking back he knelt down and handed the rawhide to Sanders.\n\n\"You might want to bite down on this Mr. Sanders,\" Clay told him. \"When I pull on your leg it's gonna hurt bad but it's the only way.\"\n\nSanders nodded, his children took hold of him under his arms. Clay held onto the man's ankle and slowly pulled on the leg. He didn't stop when he heard Sanders groan. Finally Clay felt the bone slip back into place and he stopped pulling. He looked up and saw that Sanders had passed out. Can't blame him, Clay thought. He put a wagon spoke on each side of the leg and used rope from the wagon to tie them snug against the leg in several places.\n\n\"There ain't a lot of trees on this plateau,\" Clay explained. \"And the Mesquite and Palo Verde round here don't grow straight limbs. That's why I used wagon wheel spokes for the splint. That ought to hold your father until we can get him back to the fort.\" \n\nClay walked to his horse and mounted. \"I'm goin back to my camp and get the rest of my gear. Be back in an hour or so. There's another canteen and somethin more to eat than jerky.\"\n\nBack at his camp he cut some of the sagebrush and creosote. Clay drug the brushes across the mouth of the box canyon where the cattle were bedded down. Maybe that'll keep em from strayin too far, he thought. He packed his gear, including the pot of beans and bacon that he had cooked earlier, and rode back to the Sanders' wagon.\n\n\"Jacob come take this for me,\" Clay said and handed the pot down to the boy. \"There's about enough left to feed you two,\" he explained. \"We cook somethin up for your father when he wakes up. Probably be in the mornin.\"\n\nBy the time he unsaddled Puuku and spread his bedroll close to where Mr. Sanders was, Rebecca had gotten plates and forks from the wagon. She had divided the beans and bacon into three portions. Then she handed a plate to each of them.\n\nClay smiled and gave Rebecca and Jacob what was on his plate. \"I had mine,\" he said. \"Y'all go ahead.\"\n\nAs the group settled down for the night Clay offered to sit with Mr. Sanders. \"You've got to be wore out Miss Rebecca, you too Jacob. Get some sleep I'll watch for a bit and if I get sleepy I'll wake one of you.\"\n\nAs the moon started to set Clay heard Mr. Sanders moving around. He went to the man and put his hand on Sanders' shoulder.\n\n\"It's all right sir. You're doin fine.\" Clay said to reassure Sanders. He held the canteen so the injured man could drink.\n\n\"Who....Oh yes,\" Sanders said. \"You set my leg.\"\n\n\"Yes sir. I'm Clayton Boudreau but most folks call me Clay. Come daylight we'll go for help from the fort Mr. Sanders. We'll have you on the way back by late afternoon I'd say.\"\n\n\"My given name is Eli,\" Sanders said with a weak grin. \n\n\"Get some rest Eli,\" Clay suggested. \"You and your family are goin to be all right. I promise.\"\n\nSanders lowered his head and went back to sleep. Clay returned to his spot next to the wagon.\n\nJust before first light Clay was leaning against a wagon wheel not quite dozing. He heard someone walking toward him and quickly drew his pistol.\n\n\"It's just me,\" Rebecca said from out of the darkness. \"I thought you were going to wake one of us to take our turn on watch.\" She handed him a cup of coffee. \"We didn't have the water to spare to make coffee before. Taste's pretty good.\n\n\"I figured you and Jacob had a hard go the last few days and could use the rest,\" Clay responded as he took the offered cup. \"Come daylight, I'll ride for the fort and get help. We'll bring a wagon and some horses back.\"\n\n\"Jacob told me that you said Indians took our horses,\" Rebecca said in a worried tone. \"Do you think we'll be safe until you get back?\"\n\n\"Don't think they'll bother you anymore,\" Clay answered. \"They're probably on their way back across the Colorado with your horses by now.\"\n\nThe sun came up as Clay was saddling Puuku. He'd changed his mind about heading for the fort.\n\nHe talked to his horse as he saddled him. Clay pulled his Winchester out of its scabbard. \"Puuku I don't think the Indians are still around but you can't tell about them. Sometimes they do things one way and do it different the next time. I'm gonna have you take the boy to the fort.\"\n\nThe horse leaned into his human and nodded his head as Clay scratched his ears. \n\n\"Jacob, come here,\" Clay called. When the boy joined him Clay said, \"I'm gonna send you to the fort on Puuku here. He's a good horse and knows his way home. Point his head east, nudge him in the flanks and give him his head. He'll get you there.\"\n\n\"Yes sir,\" Jacob replied. He was excited to be doing more than just sitting around camp. \"Why did you name him Puuku?\"\n\n\"Puuku is Comanche for horse.\" Clay answered. \"I admire the way the Comanche has with horses.\" He was adjusting the stirrups to fit the boy. \"A white man can ride a horse until it keels over and won't move. A Comanche can come along, get the horse back on its feet, and ride for another day.\"\n\n\"Really?\" Jacob asked not quite sure if Clay was funnin him or not.\n\n\"Really, I saw em do it down in Texas.\" Clay finished with the stirrups and motioned for Jacob to mount. \n\n\"I don't reckon the Indians are still here, but...\" Clay caught the boy's eye. \"If they come at you kick Puuku into a gallop and ride hard.\" He could see a little worry on the boy's face. \"Don't be scared. Ain't an Indian pony in the territory that can ketch Puuku. Just hang on and he'll get you to the fort.\"\n\n\"Yes sir.\"\n\n\"Here strap this around your waist,\" Clay ordered and handed Jacob a spare gun belt with his Remington in the holster; he'd taken to carrying the Colt from the man at the trading post while keeping his old Remington in his saddlebag. \"You probably won't need it but if the Indians ride toward you fire off a round or two to discourage them and then ride like the dickens. Understand? \"\n\nJacob nodded and Clay helped him mount up. Once the boy was in the saddle Clay led Puuku and pointed him east. \"Take the boy home Puuku,\" he said and slapped the horse on the rear. The mustang was at a fast lope in three or four strides. Jacob leaned over in the saddle and just hung on.\n\nRebecca walked over and asked, \"Where's Jacob going?\"\n\n\"Sent him to the fort. Got to thinkin about those Indians and figured I better hang around just in case they decide they want more than your horses.\"\n\n\"But what about Jacob? Won't the Indians go after him?\"\n\n\"Don't believe so,\" Clay replied smiling to calm Rebecca. \"Your horses were led west by two riders. I found the trail at first light.\" He put his hand on Rebecca's shoulder. \"I talked to Eli before I sent the boy. He'll be fine Miss Rebecca.\"\n\nRebecca gave him a small smile, placed her hand on his arm and nodded. \"Can't help but worry about him. Our mother died two years ago and I've been looking out for him and Pa ever since.\"\n\nClay looked away from her, embarrassed at the sudden feelings for her. \"Eli's awake, let's go see how he feels this mornin and get some breakfast.\"\n\nEli was feeling much better, although his leg was throbbing. Clay built up the fire and cooked another big pot of beans and bacon.\n\nRebecca giggled as she ate the food. \"We don't normally eat beans and bacon for breakfast but it sure does taste good,\" she said as she scooped up another spoon full.",
        "\"I'll be glad to get back to the fort and get something besides this to eat,\" Clay replied. \"Been eatin nothin but beans, bacon, and beef jerky for the last three days.\"\n\nAfter they finished eating, Rebecca used a clean cloth from the wagon to wipe the plates clean. Water was too scarce in this parched land to waste washing plates.\n\n\"The boys from the fort will be here by late afternoon and they'll have more food and water,\" Clay remarked as he watched her clean up. Suddenly Clay stood and looked to the south. Rebecca turned following his gaze.\n\n\"We got company comin. Get your rifle and get in the wagon Rebecca,\" Clay ordered. \n\n\"Who are they?\"\n\n\"Don't rightly know just yet,\" he answered. \"Could be a couple of drifters just passin through. But ifin I start shootin you do too.\"\n\nClay walked over to Eli, told him about the incoming riders and handed the injured man his Colt. \"If they get past me don't let em get to the wagon sir.\"\n\nEli pulled himself up to lean against a wagon wheel and cocked the Colt.\n\nClay walked out a few yards and leaned against a boulder with his Winchester cradled in his arms at the ready. Two riders topped a small rise and came into sight.\n\nNot Indians, Clay thought. Maybe drifters like I said. He watched the two men carefully as they rode closer.\n\nThe riders stop about sixty feet away. \"Got trouble, do ya?\" One of the men asked, pointing to the broken down wagon.\n\nClay nodded and examined the two men. The one that spoke looked older and was the bigger of the two. The other man was much smaller and looked shifty to Clay. Looks like a weasel from back home, he thought.\n\n\"Lost a wheel yesterday. But I got people comin from Winsor Castle to help. Should be here anytime now,\" Clay bluffed. He had a bad feelin about the two men.\n\n\"Name's Slayton, this here's Hollister. We could help you put a new wheel on your wagon if you like.\"\n\n\"Don't have an extra with us,\" Clay lied. \"Started out a little under equipped this trip, we did. We'll just wait for the boys to get here. But thank you kindly.\"\n\n\"Looks like you got an injured man up there under the wagon,\" Hollister said. \"Maybe we could help.\"\n\n\"You don't look like a doctor Mister. I reckon we can get by.\" Clay stood from his spot against the boulder. \"Now is there anything else I can do for you boys? If not I'll get back to my camp.\"\n\n\"Mister, we're hungry and ran out of water a spell back,\" Slayton said. \"Could you spare a little of either?\"\n\nClay's feeling of unrest deepened. He saw that they each had a canteen tied to their saddles. They haven't missed many meals either, he thought. They want somethin more than food and water.\n\n\"None to spare boys, sorry. Got about enough to get back to the fort.\" Clay paused. \"Fort's about a half a day's ride to the east. I'm sure they can help you.\"\n\n\"The hell with this,\" Hollister swore, pulled at the piston on his hip, and spurred his horse toward Clay. Slayton turned his horse toward the wagon and kicked him into a gallop.\n\nClay calmly brought his Winchester up to his shoulder and shot Hollister out of the saddle. He didn't watch him fall but turned to get a bead on the other man. Slayton was about forty feet from the wagon when the bark of Clay's Colt rang out followed closely by the sharper sound of a rifle.\n\nSlayton rolled over the rump of his horse and was still.\n\nWalking over, Clay turned Hollister with the toe of his boot. The dead man had a bullet hole in the middle of his forehead. Clay took the man's pistol and searched his pockets. He didn't find anything and walked to Slayton, who was also dead. There were two bullet holes in his chest. Clay searched the dead man and ended up just taking the man's weapon.\n\n\"Reckon the Sanders know how to shoot,\" Clay said softly. He gathered up Hollister's horse, mounted and caught Slayton's horse. Clay rode back and tied the animals off with a long lead to the back of the wagon. \n\n\"Good shootin folks,\" Clay told Eli and Rebecca. He took his Colt back from Sanders and reloaded.\n\n\"What will we do with them?\" Eli asked.\n\n\"Not much to do,\" Clay answered. \"See if they had anything worthwhile and let the varmints have em.\"\n\n\"Shouldn't we get a sheriff or marshal and report this?\" Rebecca asked.\n\n\"Nearest law I know for sure is in St. George. That's better than 60 miles one way through hard country,\" Clay responded. \"Don't aim to make that hard of a trip for the likes of them.\"\n\n\"We should at least bury them Mr. Boudreau,\" Rebecca said. \"It's the Christian thing to do.\"\n\n\"They would have left you folks to rot if they'd got to you Miss Sanders,\" Clay replied with a hard tone. \"But not before you entertained them. What is it the Good Book says? Do unto others as you would have them do unto you? Well we did to them what they would have done to us. They can rot in Hell for my part.\"\n\nClay turned and went to look at the horses. He'd once felt the same way Rebecca did. This land will surely change your mind about some things, he told himself. Clay was talking with Eli when Rebecca came out of the wagon with a pick and shovel. She walked out away from the camp and started to dig.\n\n\"Becky, what are you doing?\" Eli asked.\n\nShe stood and faced her father and Clay. \"Just because these men were pigs doesn't mean I should get down and wallow in the mud with them. I'm going to bury them and say a prayer for them.\" \n\nClay could see the tears in the corner of her eyes. \"I don't know if Rebecca is crying because she mad at me or sad because she had to kill a man,\" he said aloud.\n\n\"Believe me Clay if she was mad at you there'd be no doubt in your mind,\" Eli said with a grin.\n\n\"Well...either way she's got a strong belief in what she sees as right,\" Clay replied. \"Got to admire her for that.\" He watched Rebecca for a minute and said, \"Reckon I'll go give her a hand; this ground sure is hard.\"\n\nRebecca looked up as Clay joined her. He grabbed the pick axe and started breaking the hard packed earth. She looked at Clay and smiled. Nodding her head she used the shovel to scoop up the loose soil. It took them close to an hour to dig two graves, roll the bodies into the holes, and cover the men. Rebecca bowed her head and quietly said a prayer. Clay looked off in the distance until she finished.\n\nAs they walked back toward the wagon Rebecca said, \"That was the Christian thing to do for those men Clay. God bless you.\"\n\nClay stopped and turned to Rebecca, who halted when he did. \"I didn't do it for them Rebecca, I did it for you. It seemed to mean a lot to you so I thought I'd give you a hand.\" He grinned wickedly and added, \"As far as God goes, he could've had those two pass us by. No blessing there.\"\n\nBack at the wagon Clay looked over the horses and rethought his plan. He'd hoped to put the new wheel on the wagon, hitch the horses up and go to meet the men coming from the fort. But the horses were saddle stock and in poor condition. But one will do to go see about the cattle, he said to himself.\n\nHe watered both animals and picked the strongest to go check on the cattle. The horse seemed to perk up after getting water and Clay rode off at a fast trot. He smiled as he came to the box canyon. Some of the more adventurous steers had begun to nose and push at the brush he had used to block the entrance to the canyon.\n\nClay drug the brush away from the entrance and started the cattle toward the Sanders' wagon. He knew the good grass at the foot of the butte near the wagon would hold the cattle for a spell. At least until the boys from the fort get here, he told himself.\n\nHe watched the small herd for about an hour after driving them to the grazing. None of them wanted to explore, they all stayed close. Clay rode back to the wagon, dismounted, and sat near Eli.\n\n\"Won't the cattle get away?\" Eli asked.\n\n\"Nope. Don't think so,\" Clay said. \"There's good grass yonder and most cattle would rather eat than walk around. I think they'll stay put.\"\n\n\"When do you expect your friends?\" \n\n\"Reckon just about any time,\" Clay replied. \"Shouldn't have taken more than an hour to get on the trail once Jacob got there. Course if most of the hands were out workin the herd it might take a mite longer.\"\n\nClay rigged a pair of hobbles out of rope from the wagon and put the horses to graze on the good grass. Nothin to do now but wait, he thought.\n\n\"If you don't mind the tellin what brought you folks through Pipe Springs Eli?\" Clay asked.\n\n\"Well, we're from Abilene Kansas originally,\" Eli answered. \"I'm a blacksmith so I made a decent livin but the town had become a cow town with lots cowboys lettin off steam after the drives; place turned into a shooting gallery. My wife, Molly, had been sickly for quite a spell and died. After two more years of dodging bullets and drunken cow hands we decided to pick up stakes and move\n\nEli stopped as Rebecca sat down next to him. He coughed and cleared his throat. \"After Molly passed our place didn't leave much besides bad memories so we decided to head west.\" Eli had been staring at the ground as he talked but now he looked up at Clay. \"Get a new start in a new land.\"\n\nClay nodded his understanding because he'd been through something similar. \n\n\"That was a bit more than two years ago,\" Eli continued. \"Tried Colorado Springs for a spell; didn't much care for it. Moved down to Pueblo for a few months. Then a fellar I knew back in Abilene came into the smithy one day. We got to talkin and he told some tales about a little town called Visalia in the San Joaquin Valley California. I thought, why not and here we are.\"\n\n\"Why the San Joaquin Valley?\"\n\n\"That's cattle country and there's always work for a blacksmith in cattle or farming areas,\" Eli answered. \"Figured we'd give it a try and if we don't like it we can move on.\" He looked off in the distance for a few seconds. \"Be nice if it worked out this time; I'm gettin tired of movin around.\"\n\nRebecca had been listening to Clay and her father. She looked off to the east. \"Rider's coming,\" she said pointing to a dust cloud. You could see a rider's dust for miles on the flat plateau. \n\nClay looked over his shoulder. \"It's the boys from the fort. They're still an hour or so away.\" Turning back to Eli he said, \"Sounds like a good idea to get a new start sir. We'll get you and your wagon fixed up and y'all can continue your journey as soon as you're fit.\" He stood, caught up a horse, and mounted.\n\n\"Reckon I'll go out and meet the boys,\" Clay said. \"I'll have em come in from the south so they don't spook the cattle.\"\n\nTwo men on horseback from Pipe Springs led the way, following by two figures in a wagon. The two riders were cow hands that came to drive the cattle back to the ranch. John Williams, a jack of all trades for the fort, rode in the wagon pulled by four horses with two more on short leads trailing behind the wagon. He'd come to repair the broken wagon if possible. The figure sitting next to him surprised Clay but it shouldn't have. It was Jacob Sanders returning to his family.\n\n\"Howdy boys, Mr. Williams,\" Clay greeted the men. \"It's good to see y'all. He rode to the right side of the wagon. \"Didn't expect you to be with them Jacob.\"\n\n\"I couldn't leave Pa and Rebecca out here,\" the boy replied. Clay nodded his understanding.\n\nTom, one of the two hands, rode up to Clay as they rode into the Sander's camp. \"Leave it to you to find a good lookin woman out here in the middle of nowhere,\" he said with a big grin. He turned toward Rebecca, touched the brim of his hat and said, \"Howdy Miss.\"\n\nRebecca blushed and nodded returning Tom's greeting. \"Thank you helping us. Thank you Mr. Williams,\" she added to the older man.\n\nThe other cowboy, Jim, said, \"We can't let Clay here have all the fun. Might as well be out here as workin our tails off back to the fort. We'll get y'all back safe and sound Miss.\"\n\n\"Ifin we can get the wheel on that wagon we'll do her,\" Williams said. \"If not we'll load their things into this wagon and head back. Either way we need to get on the trail.\"\n\n\"Why in such a hurry Mr. Williams?\" Clay asked.\n\n\"There's been a couple of raids since you been gone Clay. I don't hanker to get caught out here away from the fort.\" William took off his hat and ran a hand through a great mane of dark, gray streaked hair. \"I aim to keep my hair right where it is.\"\n\nThe two wranglers, Williams, and Clay used the long wagon tongue as a lever to get the axle high enough to put the new wheel on the Sanders' wagon. Four of the horses were hitched to the fully loaded, repaired wagon and with Clay driving they headed back to Pipe Springs. The two cowboys rounded up the cattle and pushed them toward the fort. Eli was resting on a pallet in the back of the wagon complaining that he could drive.\n\nRebecca shushed her father and rode next to Clay on the seat. Jacob decided to ride with John Williams; he found the big man stories about the Indians very interesting.\n\n\"You're not from around here are you Clay?\" Rebecca asked. \n\n\"No ma'am. Born and raised in Louisiana. Lived near Santa Fe before I got here.\"\n\n\"How'd you end up here? Oh sorry, I'm being nosey and it's none of my business.\" Rebecca blushed a little at her forwardness.\n\n\"No, I don't mind talkin about my travels,\" Clay answered smiling at Rebecca's embarrassment. \"My Pa and me had a small place in Alexandria ........ For the next hour Clay told the young woman the story of his travels. How he left Louisiana and why, the people he met and worked for in Texas, and how he thought he'd found a home working in Santa Fe. \n\n\"I was just gettin away from the carpetbaggers when I left Louisiana and I was headed for California when I left Santa Fe. Sorta fell into this job at Pipe Springs. Been a long and sometimes real interesting journey so far,\" Clay finished.\n\nHow long have you worked at Pipe Springs?\" Rebecca was intrigued by this young cowboy. She'd seen his bravery dealing with the bandits and his gentleness in his actions with Jacob. \n\n\"Been there going on six months or so. Mr. Winsor took a chance gave me a job so I reckon I'll stick around for a spell.\" Softly, too low for Rebecca to hear, he added, \"Got no place else to go.\" \n\n\"I guess you get along with the others at the ranch from the way these men greeted you,\" Rebecca said pointing at the two wranglers and Williams in the other wagon.\n\nClay nodded and smiled. \"They can get ornery sometimes but they're good men. Yep, we get along just fine.\" Pointing to the other wagon he said, \"Now Mr. Williams there is a different color horse.\" Clay laughed and shook his head. \"He's just plain ornery all the time. Always complainin about how much work he has and how the younger men don't respect their elders, and how much he wishes he was back in Texas.\n\n\"Truth be told he's one of the hardest working men I've ever met. Always willing to help with your work if need be: course he complains the whole time. But you if asked someone else before him, he'd be upset. John just about runs the operation around the fort. Mr. Butler is the ramrod and Mr. Winsor is the boss but you'd never know it if you heard John yelling orders.\" \n\n\"We met Mr. Winsor when we stopped for water and some supplies. He seems like a good man,\" Rebecca said. \"Most of the people we had dealings with at the fort seemed to be nice people.\"\n\nClay nodded his head in agreement. \"But like with any place you be, there's a few that can rankle you sometimes. You have to overlook them. Some of the Mormon ways are a little strange to a Louisiana boy but most are good people.\"\n\n\"Mormon's?\" Rebecca paused and then added, \"Well, Mr. Winsor and the others we met were kind people, whatever their beliefs,\" Rebecca said. \n\nThe two young people were quiet for several minutes. Rebecca seemed lost in her thoughts. For his part Clay was nursing a feeling he'd never had before. He was hoping that the Sanders, and particularly Rebecca, stayed at Pipe Springs for a spell.\n\nFinally Clay broke the silence. \"To my way of thinkin, it's how folks treat other folks that says what kind of people they are. No matter what their beliefs, ifin they treat others fair that's all that counts.\"\n\nRebecca smiled. \"That's very Christian of you Clay.\"\n\n\"Never did much church goin after Ma died, but the one thing I remember is the Golden Rule.\" Clay turned his head and looked at Rebecca sitting on the wagon seat next to him. \"That 'do unto others' stuff seems like a good way to live your life.\"\n\nTom and Jim pushed the cattle a little harder, whooping and yelling, as the top turret of the fort came into view. Clay shook his head with a smile.\n\n\"We talked all the way back,\" he said pointing with his chin toward the fort. \"Ain't talked that much in a long time.\" Clay smiled at Rebecca. \"Sure did make the trip go faster though.\"\n\nMr. Winsor was waiting at one set of the big gates that guarded the entrance to the main courtyard. \"I didn't expect to see you again Mr. Sanders,\" he said by way of greeting. \"But you and your family are most welcome.\" Turning back toward the interior of the fort he called, \"Come help Mr. Sanders to a bedroom on the first level please. We'll have our doctor look at him.\"\n\nAfter Eli was safely transferred into a room, the 'doctor' examined Eli's broken leg. The doctor wasn't a real medical man, he was the man that treated sick cattle and horses; sort of a veterinarian. He replaced the wagon wheel spokes that Clay had used to splint the leg with smaller thinner pieces of wood and wrapped them with a large piece of cowhide.\n\n\"Stay off your feet for a week or so,\" he told Eli. \"After that take er easy for a spell.\" The 'doctor' patted Eli on the shoulder and laughed. \"If you were a horse we'd a shot you. But I don't reckon your daughter would like that.\" \n\nFor the next month Eli did as he was told. The \"doctor\" brought him a crutch carved from a cedar tree. After a week staying inside the fort he started to walk short distances. His leg was healing and getting stronger so he increased the distances and the time that he walked. Eli was able to switch to a cane and it was easier for him to get around. Five weeks from the day he arrived back at the fort Eli went to see Mr. Winsor.\n\n\"I wanted to thank you and your people for taking care of me and my family Mr. Winsor,\" Eli said and shook the man's hand. \"I'd like to do something to repay you for your help.\"\n\n\"We only did what was right Mr. Sanders. Wouldn't have felt good about myself if I hadn't extended our hospitality and assistance.\" Mr. Winsor gave Eli a slow grin. \"Besides, Mr. Boudreau was quite adamant about helping you. Seems he's taken a shine to you and your family.\"\n\nEli grinned in return. \"Yes sir, Clay pretty much saved our bacon when he found us out on the mesa. I know it's because he's a good lad but I think Rebecca might have something to do with his concern.\" Eli laughed a little and said, \"It isn't the first time some young man has become interested in my daughter.\"\n\nMr. Winsor nodded. \"Whatever his reasons, Clay was very forceful about helping you. He's a fine young man with a good head on his shoulders. I'm proud to have him with us here at the ranch.\"\n\n\"I might have figured out a way to repay you and your people a little Mr. Winsor,\" Eli said. \"Who does your blacksmithing?\"\n\n\"Mr. Thomas, from Fredonia, comes to us about every three weeks or so and does the repairs that we can't handle. Mr. Williams can shoe horses and does what repairs he can.\"\n\n\"That'd be John, who drove the wagon out to rescue us?\" At Winsor's nod, Eli continued. \"I'm a blacksmith by trade and I could do your repairs and such until I'm healed up. Right now I'd need a pair of hands and a strong back to help. Maybe John would be willing to give me a hand.\"\n\nWinsor and Eli discussed the idea and decided that Eli would be the ranches' blacksmith for two months. That would allow Eli's leg to mend completely. At that point Eli could decide what he wanted to do. ",
        "\"If you want to stay I'm sure we can find a place for you at Pipe Springs,\" Winsor offered. \n\nEli, Rebecca and Jacob were given one of the cabins just outside of the fort for living quarters. As Eli worked at his trade, Rebecca helped some of the women with their children. She also taught the younger ones their letters and how to do sums. Jacob tagged along after Clay most days when he wasn't helping his father at the smithy.\n\nClay was glad to hear that Rebecca would be staying for a spell. Over the next two months he made a point of talking to and seeing Rebecca as often as he could. Some of the other single men at the ranch had the same idea and Rebecca was very popular. \n\nRebecca was polite with the men but didn't accept any of the offers for Sunday afternoon rides or picnics. Her interest had narrowed to one special cowboy, Clay. His kindness when they first met, his concern for Jacob and his easy going manner drew her to him. Clay was the one that she went on those afternoon rides and Sunday picnics with. Jacob accompanied them on most of the outings but a few times the young people were alone.\n\nThere wasn't anything special about their times together; just that they were together. They held hands and even had a kiss or two when they were alone as all young people do. Clay had been raised to be a gentleman and Rebecca to be a lady so the hand holding and few kisses were all that happened. A lot of their time was spent talking about their hopes, dreams, and goals. \n\n\"You've come a long way from that drifter you told me about,\" Rebecca said on one of their rides. \"Mr. Winsor was talking about you to Daddy. He said you were one of his best men. Said you had a future at Pipe Springs for as long as he runs the place.\"\n\n\"Mr. Winsor and the folks at the ranch have been good to me,\" Clay replied. \"Reckon I'll stay put for a spell.\" He didn't notice the sad look that crossed Rebecca's face.\n\nClay was going to meet Mr. Winsor to discuss the herd on the far side of the ranch. Winsor thought that with the drought like conditions it would be better to have the cattle closer to the fort. As Clay approached the big gate into the fort he saw Rebecca trying to get past Jasper Young.\n\nJasper Young had come to Pipe Springs a couple of weeks earlier. He was about 30, tall and lean, and cocksure of himself. He's immediately started giving orders to the wranglers and other workers. No one paid much attention to him and that made him mad. Winsor told him that he'd have to earn the respect of the people at Pipe Springs before they would listen to him. It didn't set well with Jasper.\n\n\"You don't understand Rebecca,\" Jasper said as he grabbed her arm when she tried to step around him. \"You could better yourself by marrying me. I'm related to....\" he began to say.\n\n\"Take your hand off me Mr. Young,\" Rebecca ordered and she twisted her arm to dislodge his grip.\n\n\"Were I you, I'd listen to the lady,\" Clay said and grabbed Young's wrist. Neither Young nor Rebecca realized that Clay was there until he took hold of Young. Clay put more pressure on Jasper's wrist until the man released his hold on Rebecca. \n\n\"Didn't your folks teach you manners?\" Clay asked. \"Most ladies don't like to be pawed at.\" He stepped between the two. \"You might want to remember that Young. Specially with Miss Sanders here,\" Clay warned.\n\nJasper stepped back from the hard look on Clay's face. Rubbing his wrist he asked, \"Do you know who I am, you damn cowboy?\"\n\n\"You're the fellar that's about to be taught some manners by this damn cowboy,\" Clay replied with steel in his voice. \"Step back and go about your business Young.\"\n\n\"I'm directly related to Brother Brigham Young,\" Jasper said with pride.\n\nClay gave him an empty look. \"Who's Brigham Young?\"\n\n\"He's the leader of our church and I'll have you thrown off this ranch for interfering with me.\"\n\n\"Well for a preacher he sure didn't teach you any manners, now did he?\" Clay replied. \"As far as running me off, Mr. Winsor hired me and he's the one that'd have to tell me to leave.\" He stepped closer to Young. \"Leave the lady alone, Young,\" Clay warned. \n\nIgnoring Clay, he turned back to Rebecca Jasper said, \"You could do yourself some good by marrying me Rebecca.\"\n\n\"And which number wife would she be?\" Clay asked. \"Your second or third?\" He turned and took Rebecca by her elbow. \"Let me walk you back to your cabin Miss Rebecca.\"\n\n\"Hold on there,\" Jasper ordered. \"This ain't none of your concern.\"\n\nClay turned back to see the angry man standing with his hand close to his gun butt; Young's intent was obvious. \"I'm makin it my concern. And if you draw that hog leg, I'll kill ya,\" Clay in a voice cold as the snows up in the mountains.\n\nJasper Young saw Clay's hard eyes and the way he stood with his hand close to his holstered Colt. For once, the young man made the right decision. He dropped his hand, turned and walked back into Winsor Castle. Walking away, he thought, that man would have killed me sure as hell.\n\nAs Clay walked Rebecca back to her cabin, she asked, \"Would you have shot him?\n\nClay saw the concern on Rebecca's face and the tone in her voice. \"Remember our talk about the Golden Rule? Yes em. If he'd drawn on me, I would have put him down.\" He took a breath and added, \"This ain't Kansas, Miss Rebecca. Out here you have to face dangers y'all don't have there. Out here you have to ready to defend yourself or you might die. So yes, if Young tried for his gun, I would have shot him.\"\n\nRebecca could hear the conviction in Clay's voice and see the wistful almost sad look on his face at the sometimes cruel world he lived in. \"What was that about being a second or third wife?\" Rebecca asked. It was a question more to change the mood than for information\n\n\"You don't know about the Mormons?\" Rebecca shook her head and Clay continued. \"Men of the Mormon church are encouraged to have more than one wife. From what I've heard it's more like they're required to have two or three wives. The first wife is sorta the boss in the house; the second or third ones are more like the hired help. There's a fellar over to St. George that has four.\"\n\n\"You mean even if I was interested in Jasper, it wouldn't be just him and I?\"\n\n\"Don't rightly know if he's already married, but I'm pretty sure you wouldn't be his only wife for the rest of his life,\" Clay replied. \n\n\"Well he's going to have a long wait if he expects me to marry him,\" Rebecca said. \"That pompous ass,\" she added in a low voice.\n\n\"Can you stay for a few minutes to talk?\" Rebecca asked and Clay nodded. \"Daddy is talking about going on to California pretty soon.\"\n\n\"I know,\" Clay replied. \"Heard him talkin about it over to the blacksmiths. He's still talkin about Visalia in the San Joaquin Valley.\" He gave what was more of a snort than a laugh. \"Hear him talk, it's the Promise Land.\"\n\n\"Daddy feels it is the Promise Land, at least for us. It will give us a chance to settle and have a normal life, Rebecca answered. \n\nThe two young people talked for several more minutes and then Clay said good bye to Rebecca and returned to the fort for his meeting with Mr. Winsor. He noticed again how many new faces there were around the fort. All of the outlying cabins were in use, some by more than one family, and there were three wagons close by with families living in them. Sure is getting to be a popular place, he thought.\n\nWinsor motioned for Clay to sit in one of the big chairs in the office when he walked in. Clay accepted a cup of coffee from his boss. For the next hour the men discussed the moving of two of the herds, the best place to move them, and when they would start. \n\n\"Heard you had a run in with Jasper,\" Winsor said trying to hide a smile.\n\n\"Hope I didn't cause you any trouble Mr. Winsor, I mean him being related to the head man in your church and all.\" Clay got a hard look in his eye. \"But I wasn't gonna let him make advances to Rebecca.\" He paused and asked, \"Exactly who is this Brigham Young?\"\n\n\"Brother Brigham is the head of our church,\" Winsor replied. \"And a very important man.\" He smiled and added, \"Don't worry about getting me in trouble. In spite of what Jasper said, he's not a direct relative of Brother Brigham; he's a third cousin twice removed. \"\n\n\"I'm glad I didn't cause you any trouble,\" Clay repeated.\n\nWinsor sat for a few seconds and said, \"Robert Jackson, the range boss, is going back to Salt Lake City right after the roundup. That's in three months. I'm offering you his job.\" Winsor held up his hand as Clay started to respond.\n\n\"Our people go on missions for the church that last from two to six years. Robert's been here for six years and now it's time for him to return to Salt Lake. I think Pipe Springs needs a range boss that can keep things going the same way from year to year.\" Winsor smiled at Clay's reaction. \n\n\"But I've only been here a few months,\" Clay replied. \"And I'm not a member of your church.\" \n\n\"You've done everything I've asked of you and more.\" Winsor smiled at the young man. \"You take charge of cattle drives, you step in and help with the work on the fort and ponds and you're the first one to help with the work around the ranch, even though it's not your job. Your religious beliefs are your own business.\"\n\n\"What about some of the new men that have come to the ranch? Wouldn't one of them be a better choice?\" Clay suggested. \"I mean if they're here on a six year mission they'd be around for a spell.\"\n\nWinsor didn't answer and was quiet for s bit. \"Some of the families are here on their missions, but most of the newcomers are sort of on the run.\" He thought for a bit trying to decide if he should tell Clay the real reason for the increase in population.\n\n\"Clay as you've learned our church suggests and encourage our men to marry more than once,\" Winsor explained. \"We feel it's a way to ensure good families, strengthen and grow our faith. Of course that is only part of our creed.\" Clay nodded his understanding. \n\n\"Not everyone agrees with our beliefs. We came here from eastern states like New York, Illinois, and Nebraska just to name a few. In every place we've set up tabernacles or settled we've faced hatred and persecution. In fact the Federal government is actively against us; passing laws and regulations to make us conform to what they think is right. You understand so far Clay?\" The young man nodded again.\n\n\"Brother Brigham led us to Utah and this area to escape the persecution and so we could continue our way of life.\" Winsor looked off into the distance through a window and sighed. \"Now the government has become more vigilant against us; they've started to enforce their laws even out here. Most of the new families are like refuges; escaping from those laws. Some will be here for quite some time and others will move on shortly.\"\n\nWinsor refilled Clay's cup. \"I'm afraid our faith and way of life will be changed drastically over the next few years.\" He sighed again. \"But back to the present. Will you take the job Mr. Boudreau?\" \n\nClay took a sip of his coffee and thought about what Mr. Winsor wanted to do. Two weeks earlier he would have jumped at the offer. It was more than he could have ever hoped for when he left Santa Fe. But that was two weeks ago. \n\nHe'd been having supper with the Sander's one evening and Eli got to talking. Rebecca had joined her father and Clay on the stoop in front of the cabin after cleaning up the supper dishes. \"Rebecca and I have just about decided to move on to California,\" Eli told Clay. \"We've been her four months, my leg is pretty much healed and I feel we've paid our debt to Mr. Winsor.\"\n\nIt bothered Clay to hear that Rebecca would be leaving. He'd never come right out and said anything to her but he was beginning to love Rebecca.\n\nEli interrupted his thoughts. \"Why don't you come with us Clay?\" \"You're good with stock and cattle and I'm sure you can find a place with us in the San Joaquin Valley.\"\n\nBefore Clay could answer Rebecca said, \"Please come with us Clay. We would hate not seeing you again.\" Rebecca put her head down, hesitated and said softly, \"Oh the heck with it.\" Looking up at Clay she added, \"I would hate not seeing you again. I've come to look forward to spending time with you every day,\" she said with a special smile.\n\nThe young wrangler looked at Rebecca for several seconds. Reckon that was plain enough, he thought. I had planned on California when I left Santa Fe and I sure wouldn't like not seeing Rebecca again. I've got a real good job here but I could get work in California too. It's a lot to take in.\n\n\"When are you leaving?\" Clay asked.\n\n\"End of the month at the latest,\" Eli said. \"That'll be early April and we'll have to cross Death Valley, that's the hottest part of the desert, so we need to have it behind us before full summer hits. And we need to be over the Sierra Nevada Mountains before winter. Those mountains get a lot of snow and we don't need to get caught in a blizzard.\"\n\n\"Riley Johnson over to the tradin post,\" Clay looked at Eli to see if he knew Johnson. Eli nodded and Clay continued. \"He's been all through that country. He said if he owned Hell and Death Valley, he'd live in Hell and rent out Death Valley.\"\n\nEli laughed. \"Then I reckon we need to get through it rite quick. The earlier the better.\"\n\n\"I know it's a lot to ask you to leave Pipe Springs,\" Rebecca said. \"Will you at least think about it?\"\n\nClay nodded and stood to leave. \"I'll think hard on it Rebecca. See y'all tomorrow.\"\n\nNow in Winsor's office Clay had a big decision to make. \"Can I sleep on the offer Mr. Winsor?\"\n\n\"By all means, Clay. Take a day or two and let me know your decision.\"\n\nIt didn't take Clay a day or two to make up his mind. The next morning he went to see Mr. Winsor. \"I reckon I'll have to say no to your offer sir. I plan on leavin at the end of the month.\"\n\n\"So you're headed out with the Sanders are you?\" Winsor said. It was a statement and not a question. \"Guess I should have seen that coming, what with the way you've been squiring Miss Sanders around.\" He offered Clay his hand. \"Good luck to you son. I hope you find what you're looking for.\"\n\nClay nodded his thanks and went to find Rebecca. He motioned for her to join him at the well as she finished the morning reading class. \n\n\"Rebecca, I've decided to come to California with y'all,\" Clay told her. She smiled and started to respond. He held up his hand to stop her. \"I'm only comin with you for one reason.\" He hesitated and said, \"I'm in love with you Rebecca and want to marry you. Ifin you don't feel the same way, I reckon I'll stay at Pipe Springs.\"\n\nA smile as big as the Grand Canyon broke across Rebecca's face. She took Clay's hand and replied, \"Of course I feel the same way. I've just been waiting for you to say something to me.\" She giggled at the look on Clay's face. \n\nRebecca and Clay went to see Eli. He looked up as they walked into the blacksmith shop where he was working. Eli put down his hammer and stuck the metal he'd been working on back into the fire.\n\n\"So are you gonna get married before we leave or wait until we get to California?\" He asked and laughed at their red faces.\n\n<center>********************</center>\n\nClay and Rebecca decided to marry before leaving Pipe Springs. During late summer, the cow hands on the ranch were always extra busy and worked harder for the round up and branding, but they didn't hold a candle to the women that spring that had a wedding to organize in less than three weeks.\n\nSam Bettors made an extra trip with his freight wagon hauling in special high grade flour for the pies and cakes that had to be baked. He also brought several bolts of dress goods because not only did Rebecca require a new dress, according to the women, but several of them decided they deserved a new dress too. The men of the Mormon families usually ran the household but for this wedding the smart ones wisely decided to keep their mouths shut and let the women have their way.\n\nClay found himself standing in front of the meeting room altar in his first store bought suit; the button on collar and string tie were too tight to his way of thinking. Rebecca walked down the aisle on her father's arm wearing a satin dress hand made by two of the women at the fort. Jacob stood next to Clay; proud to have his place of honor as the best man and excited that he was getting a new brother. \n\nSam Bettors had been Clay's first choice as his best man, but Sam begged off. \"Reckon Riley will be celebratin a mite more than is good for him. Best I stay close and make sure he don't fall down or somethin.\"\n\nLooking over the assembled crowd in the meeting hall, Clay had to laugh. Riley had donated a small keg of whiskey for the festivities and when he was reminded that most Mormons don't drink, took it on himself not to let the whiskey go to waste. There were others that had overlooked the non drinking edict but few to the extent that Riley had. Sam was one of those that helped Riley almost empty the whiskey keg. Riley Johnson was being held upright in his seat by Sam Bettors. The only thing that kept Sam upright was the arm of the pew he and Riley were sitting in.\n\nThe wedding ceremony, presided over by Mr. Winsor, was short and to the point. A spread was put out on tables in the meeting room and everyone had a nice supper. Riley and Sam, leaning on each other, took the keg of whiskey back to the trading post; a few of the drovers followed and they continued with their own party. You could hear the laughter and yelling until the wee hours of the morning. Clay and Rebecca slipped out to a line shack to the north of Winsor Castle for their first night as man and wife. \n\nThe newlyweds returned to the fort, early the next morning. Their belongings and supplies were supposed to be loaded on the wagon so they could begin their trek to California. But apparently Eli's religion didn't have a restriction on drinking like the Mormons. He hadn't been in any condition to walk much less load the wagon for a long journey. Rebecca was a little upset, but Clay laughed.\n\n\"Today or tomorrow or even the next day,\" Clay said to his new bride trying to calm her. What does it matter?\" \n\n\"But we should be on.....\" Rebecca sputtered.\n\n\"Wife, we'll go when we're ready,\" Clay said as he put his arms around her. \"And you might show a little of your Christian charity to your father.\" He pointed to Eli who was trying to stop the world from spinning as he made his way to the outhouse.\n\nRebecca tried not to grin but couldn't help herself. Then she laughed. \"Serves him right,\" she said and laughed again.\n\n<center>********************</center>\n\nBetween Eli's condition and last minute additions to their equipment and supplies, Clay and Rebecca had been married for three days before they could start for California. Mr. Winsor gave Clay two more of the cross breed mustangs he'd gentled and trained; a young filly and a mare. It would be the start of a herd for them. He also gave young Jacob a proven mare, again from the cross breeds.\n\n\"You can't ride the wagon the whole way to California Jacob,\" Winsor said and handed the youngster the reins. \"Boy ought to have his own horse for a journey this long. God bless you and a safe journey,\" he said to Clay, Eli, and Rebecca and then returned to the fort.\n\nRiley Johnson handed Clay a .50 Caliber Sharps buffalo rifle and a half dozen boxes of the metal cartridges for it. \"If you need meat this will allow you to shoot from far off. Sometimes a Winchester just don't have the reach, don't you know?\" The big man leaned down and whispered in Clay's ear. \"If need be, it'll keep any hostiles at a respectable distance too.\"\n\nSam Bettors placed two sides of bacon and a 50 pound bag of beans in Clay's wagon. \"No need to go hungry boy,\" he said with a grin. \"Been a pleasure and an honor to know you son.\" Sam turned and walked to where Riley stood.",
        "\"Sam, Riley, if y'all decide to come west, look us up,\" Clay said. \"You're always welcome at my campfire.\" As Clay helped Rebecca onto the seat of the wagon next to her father he thought he saw tears in Sam's eyes. Must be a trick of the light, he thought with a smile.\n\nClay mounted Puuku. \"Lead us out Jacob,\" he ordered. Turning in his saddle he said, \"Come see us. Be something new for you Riley, and Sam you'll get old just driving your team on the same route month after month. We'll be in Visalia in the San Joaquin valley if you've a mind to join us.\" \n\nThe End"
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "drama",
        "action/adventure",
        "historical"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/pipe-springs"
}