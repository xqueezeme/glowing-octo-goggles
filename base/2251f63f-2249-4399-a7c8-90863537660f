{
    "title": "A Succubus Awakens Ch. 09",
    "pages": [
        "I write this as a final addendum to the studies of demonology contained herein. It is not from nothing that demons sprang forth. Some otherworldly force, yet unknown, spawned these abominations. If you aim to stem the tide. To join The Watchers of Enoch. You must look further than simply slaying monsters, and seek loftier goals. Greater truths. The enemy is ever growing, ever changing. To grow complacent, is to die.\n\n<p align=\"right\">-Sir Arthur Thompson, The Demonic Archive</p>\n\nDisubstituted Cyclohexane struggled to hold Amy's attention as the professor droned on. Last night had left her drained. More accurately, her succubus girlfriend had. Gwen had apologized this morning, claiming that Amy's display of dominance sent her over the edge, but that didn't do much good as far as Amy's studies were concerned. She covered a wide yawn with a hand, and wiped away the moisture in her eyes. Organic Chem was in an auditorium style classroom, and today she'd chosen a seat in the back rather than her usual place in the front row. Someone more capable of paying attention would put it to better use. The professor seemed so far away. His words faded as her thoughts wandered.\n\nYesterday had been... amazing. She lacked the vocabulary to describe how it felt. They'd continued their escapades late into the night. Amy felt that she'd lost the initiative at some point, and Gwen had taken control, but she couldn't care less. Gwen had brought her to orgasm over and over as they played. Feeling sleepy in class was a small price to pay for the privilege of bedding a succubus. Not that she would let Gwen know that. Her schoolwork was already slipping. The last thing she needed was Gwen thinking they could have sex whenever she wanted. Somehow, she'd managed to complete her work just before class, but she'd need to be more diligent in the future and prepare for more ...unexpected events.\n\n\"You look like you had a late night.\"\n\nAmy's eyes snapped open. At some point she'd drifted to sleep. Students were filing out of the classroom, and the professor was putting away his things. Standing over her with a leather bag hanging from one shoulder, was Laura Fitzroy. Laura looked nearly as sleepy as she was, but still held herself with the same poise and grace she always did. Smokey mascara and meticulous winged eyeliner gave her a fierce look despite her freckled cheeks and short stature. Amy hadn't bothered with makeup, and must have looked a mess in comparison. She sat up straighter and began to put away her blank notes.\n\n\"Something like that.\" She stood, towering over Laura, somehow still feeling smaller.\n\n\"Too much time with your girlfriend?\" Laura taunted.\n\nAmy froze. Did Laura know? No, how could she. Amy remembered that Gwen said Laura had been referring to them as girlfriends to taunt her for a while now. It was the first time she'd used the term to Amy's face though. Affecting calm, she began walking toward the door. Laura fell in step beside her, hurrying to keep up.\n\n\"Sorry I've taken up so much of her time lately. That must be difficult for you.\"\n\n\"It's fine. How's the ball coming along?\"\n\n\"The ball? Oh, fine. We've been spending our time very ...effectively.\"\n\nAmy came to a halt in the middle of the hallway and stared down at Laura. Laura stopped as well and looked back at her. Pure innocence. Amy was afraid to ask her anything, lest she give herself away.\n\n\"What do you want?\" Could Laura hear how nervous she was?\n\n\"Oh nothing, just to give you some advice.\" Clearly, Laura wanted her to ask for more information. She considered leaving, but as always, curiosity got the better of her.\n\n\"What advice?\"\n\n\"That you don't know Gwen as well as you think you do.\"\n\nLaura held up a hand, a small black square between two fingers. An SD card. Amy glanced back and forth between Laura's smiling face and the card before cautiously reaching out. She half expected Laura to pull it away at the last second, but she let it go easily when Amy took hold. Laura's face seemed a bit flushed, though.\n\n\"What is this?\"\n\n\"Just watch it when you're alone. Got it? Alone.\"\n\n\"Wha-\"\n\nLaura had already turned and was scurrying down the hall, both hands on her bag's shoulder strap. Amy looked down at the card in her hand. What just happened? Nervous churning filled her stomach. Whatever it was, it would have to wait until she got home. She tucked away the SD card and pushed it from her mind, along with a bizarre mix of fear, anger, and jealousy.\n\n<p align=\"center\">-----------------------------------------------------------------------</p>\n\nThe smell of burning fish nearly bowled her over as she walked in the door. All the open windows were open and the apartment was freezing. Gwen stood in the kitchen, leaning against the counter in a seductive pose somewhat spoiled by the stains covering her apron, and the lingering haze of smoke throughout the room.\n\n\"Welcome home, honey.\" Gwen batted her eyes.\n\n\"Oh no.\"\n\n\"I made you dinner. It's uh, not my best work. But I wanted to apologize for last night. I went a little overboard.\"\n\nAmy dropped her bag and purse off in the armchair and began closing windows. \"I'll say, I fell asleep in class.\"\n\n\"Yeah, you looked like death this morning.\"\n\n\"Thanks.\"\n\n\"Still beautiful though.\"\n\nGwen gestured for her to sit at the counter and brought over a plate of overcooked salmon. It was a sweet gesture, so Amy did her best to keep a straight face as she sat. Gwen watched her intently as she brought the first bite to her lips. Surprisingly, it wasn't that bad. Not when you considered that Gwen probably couldn't taste it, and hadn't been much of a chef to begin with.\n\n\"I forgot to wrap it properly so a bunch of grease dripped in the oven.\"\n\n\"Hence the smoke.\"\n\n\"Hence the smoke...\" She confirmed with a grimace.\n\n\"Well it's better than your usual cooking.\"\n\n\"Thanks, I guess?\"\n\nWhen Amy finished, Gwen took her plate and deposited it in the sink. She returned and exclaimed in a cheesy voice, \"Now, for my dinner.\" and began to kneel.\n\n\"Gwen, no.\"\n\nAmy kicked halfheartedly at her as Gwen tried to position herself in the narrow space between the stool and the counter. She caught Amy's leg, but it threw her off balance and she fell the remaining distance to the ground.\n\n\"Ow!\"\n\n\"Not tonight, I'm exhausted.\"\n\n\"Fine, fine. I was mostly kidding anyway. We really need a table.\"\n\nWhen she tried to stand, however, her head slammed into the bottom of the counter. It made a sound like two rocks striking together and a chip of plaster fell from the bottom surface.\n\n\"Gwen! Ugh... your stupid horns just broke the counter.\"\n\n\"Ow...\" Gwen moved sideways and stood to full height rubbing the air a few inches from her head.\n\n\"I'm going to have to pay for that...\" She sighed. It was an accident, no point being mad. \"Are you alright?\"\n\n\"Yeah, I'm fine. Sorry.\"\n\n\"Don't worry about it.\"\n\nThey spent the evening watching movies. Gwen sat in her lap, and they shared a blanket. To Amy's surprise, and to her credit, Gwen never tried to initiate any sexual activity. Amy could feel a horn digging into her shoulder as Gwen rested her head on her chest. She ignored it, and absently stroked a hand up and down the side of Gwen's thigh. After an hour or so, Amy suddenly remembered the SD card, and her strange encounter with Laura. She knew she needed to ask Gwen about it, but found it difficult. Amy grew more and more nervous, and stopped paying attention as the movie played out. Eventually the credits rolled. White text on a black screen. The room grew dark.\n\n\"Gwen?\"\n\n\"Yeah?\"\n\n\"I talked to Laura today.\"\n\nGwen's body tensed in her lap. When she responded her tone was flat and cold. \"Oh? What did she say?\"\n\n\"She told me I don't know you as well as I think I do.\" She decided to leave out the SD card.\n\nGwen was silent for a moment, and when she spoke her voice was soft and sweet, her words dripping with affection. \"Don't worry about Laura, she's just jealous of us.\"\n\n\"But does she know about us?\"\n\n\"A little bit, but it's okay. It's not a big deal.\"\n\nMaybe Gwen was right. Why was she so afraid of Laura knowing they were dating? But all the time Gwen had been spending with her...\n\n\"You haven't ...done anything with her. Have you?\"\n\nGwen leaned back and looked up at her with a warm smile. Amy's heart melted and butterflies filled her stomach.\n\n\"You're the only one I love, Amy.\"\n\nAn urge to lean down and kiss Gwen overtook her and she gave in. In the back of her mind, it registered that Gwen hadn't answered the question, but it didn't seem important. This was all she needed. Too soon, Gwen broke the kiss.\n\n\"I forgot though, I do have to go to Laura's and pick up some paperwork. It won't be long though. Stay here and wait for me?\"\n\nIt was a question, but somehow felt like an order.\n\n\"Okay.\" Amy found herself responding.\n\n\"Thank you.\" A warm glow filled her as Gwen continued. \"Don't worry about Laura, I'll tell her to stop being weird.\"\n\n\"Okay, thanks.\"\n\nGwen got up. Without her warmth or weight something felt like it was missing. Amy pulled the blanket tighter while Gwen threw on a jacket and shoes. Gwen pulled open the door, turned to smile back at her, then stepped out into the cold night air leaving Amy alone to wait. She pouted on the sofa for nearly half an hour before regaining some clarity and remembering the SD card.\n\n<p align=\"center\">-----------------------------------------------------------------------</p>\n\nFor once, Laura didn't seem scared of her. Which was surprising since Gwen had kicked in her door and stormed into her apartment with a snarl. Laura sat at her small kitchen table, waiting. She wore yoga pants and a cropped hoodie that revealed several inches of her toned midriff. Gwen could feel the lust behind those smokey eyes. Fear was there, but tinged with a thrilled anticipation.\n\n\"Mistress.\"\n\n\"What did you say to Amy?\"\n\n\"Not much. I just asked if she enjoyed her time with you.\"\n\nGwen moved behind Laura and rested her hands on her shoulders.\n\n\"And why did you do that?\"\n\n\"Because I was jealous.\"\n\nThe honesty surprised her. Gwen had expected Laura to be her usual defiant self. At least until she applied some \"pressure.\" The surprise did nothing to abate her anger though. She slid one hand to the front of Laura's throat, gripped her hair with the other and craned her head back, forcing Laura to look her in the eyes. Eyes that she knew were filled with a fiery wrath. Excited fear rippled through Laura's aura. She applied pressure with the hand on Laura's neck.\n\n\"What did you think would happen when I found out?\"\n\n\"That you would punish me,\" Laura gasped. Gwen tightened her grip.\n\n\"You want to be punished?\"\n\n\"Yes.\"\n\n\"Why?\"\n\n\"Because you broke me, and now all I want is for you to use me. I want you all to myself.\"\n\nThe words were barely a whisper and left Laura out of breath. Gwen squeezed harder.\n\n\"You don't get to decide when or if I use you. And you don't get to talk to Amy,\" she growled.\n\nIn response Laura smiled. Her face was growing red, and drool leaked from the corner of her mouth when her lips parted. She tried to say something, but it came out in a confused gurgle. Gwen silently stared down at her. If she tightened her grip any more she was liable to crush the girl's windpipe. She considered doing it anyway. Laura had knowingly crossed her. Breaking her hadn't changed her scheming nature, it seemed. Just what her motivations were. Her jealousy of Amy was still there, but it was no longer focused on their academic performance. She let go and Laura collapsed forward onto the table.\n\nLaura took deep heaving breaths, turning her head sideways on the wooden surface so she could see Gwen. She mumbled something.\n\n\"What was that?\"\n\n\"You...\" Laura sucked in air. \"You don't need her.\"\n\n\"And why is that?\"\n\n\"She doesn't understand you.\"\n\n\"What does that mean?\"\n\n\"She's too innocent. You can't treat her the way you treat me. You can't be yourself.\"\n\nLaura's eyes flitted upward. To her horns. She could see them. Even though Amy still couldn't. Gwen had suspected during their last encounter, but hadn't tried to confirm whether it was true. Maybe she hadn't wanted to. Laura could see her for what she was.\n\n\"Of course I don't treat her like you. You're a toy. A pet. I love her, and soon you'll serve us both.\"\n\nGwen expected that to hit home. Laura would hate the thought of being forced to serve Amy. Instead she laughed.\n\n\"We'll see.\"\n\nGwen glared at her, narrowing her eyes and baring her teeth. She snatched the collar of the hoodie with enough force that she felt her claws pierce it and break skin beneath. She pulled Laura up to eye level.\n\n\"What did you do?\"\n\n\"I gave her a present.\"\n\nThe video.\n\nShe dropped Laura unceremoniously. Anger was replaced by panic. It was too soon. Amy wasn't ready yet. She'd overestimated her control on Laura. She leaned against the table. No, she needed to calm down. Deep breaths. She could fix this, but she needed to get home. Fast.\n\n\"Where are your car keys?\" She yanked the threads.\n\nLaura pointed to a small basket on the kitchen counter. Gwen snatched them and sprinted out of the apartment. Laura's punishment could wait. The doorman gasped as she threw the glass door open with enough force to send a crack through it, and raced to the building's garage. Luckily the spaces corresponded to the apartment numbers, and it was easy to find space 707. A white BMW, polished to a spotless shine. She threw the door open, and looked inside. Fuck.\n\nOn her way back upstairs she gave the doorman a hurried \"sorry!\" and promised Laura would pay for the door. Upstairs, she found Laura leaning back in the same chair with her hand down her pants. Her eyes went wide and she froze, blushing.\n\n\"Wha-\"\n\n\"I can't drive a stick.\" Gwen grabbed Laura's arm and began pulling her out of the apartment. As they passed, Laura snatched a brown paper bag off the counter. Gwen barely noticed. All she cared about was getting to Amy before she lost her.\n\nAmy flinched when she heard the lock turn. She sat on the floor, in the corner of the apartment, crying and hugging her knees to her chest. On the floor next to her was a suitcase and a backpack with her laptop and schoolwork inside. Pointless. Gwen had ordered her to stay here, and she'd been unable to cross the threshold and flee. The door opened and Gwen stepped in, disheveled and panicked. Gwen scanned the room, stopping and locking eyes when she found her.\n\nThe glamour was gone. In the room's dim light her eyes shone an unsettling shade of pink. The horns were different than Amy had pictured. Smoother, the ridges less pronounced than they felt. The claws just looked like sharpened black fingernails, curved slightly. After Gwen had left her alone, she'd watched as those claws tore open Laura's shirt. Exposed and tortured her. She'd watched those glowing pink eyes shine with cruelty as Gwen used her powers to reduce Laura to a plaything. Now they were focused on her.\n\nLike Laura, Amy had been warped too, and the video had driven home just how far. As she had watched her best friend, her girlfriend, her lover betray her, and torment another human being, horror hadn't been the only thing she felt. Part of her enjoyed it. Part of her wished she had been there. The part of her Gwen had changed.\n\n\"Amy...\" Gwen took a step toward her and she pulled herself tighter. Gwen stopped, frowning. \"I'm not going to hurt you.\"\n\n\"You already have.\"\n\n\"No. I only lost control that once...\"\n\nAmy shook her head. \"You've been changing me this whole time. I thought you couldn't control it, but you can, can't you.\"\n\n\"Not the whole time. But recently, ...yes.\" She already knew it was true, but the words still broke her heart.\n\n\"Why?\"\n\n\"Because I want you to be happy, and I don't want you to leave me.\"\n\n\"I thought you wanted to go back to being human.\"\n\nGwen tried to hide a smile. \"No. That's what you wanted. I'm happier now than I've ever been.\"\n\n\"Gwen. You're hurting people.\"\n\n\"I know. I'm a demon, Amy. It's what I'm supposed to do.\"\n\n\"It's wrong.\"\n\n\"Then why does it feel so good? Why should I follow human rules when I have this power?\"\n\n\"I'm so stupid for believing you.\" Jim and Xavier were right. About everything.\n\nGwen shook her head. \"No you're not. You're happy aren't you? Why ruin this? I still love you, Amy. I want you by my side. No more pretending.\"\n\n\"You want to thrall me.\"\n\n\"Yes.\"\n\nAnger crept into her voice. \"Why bother with all this? The romance, the dates, cooking dinner. Just use the threads. Force me to be your slave. Don't toy with me.\"\n\n\"That's not what I want.\"\n\n\"And what do you want?\"\n\n\"I want you to come willingly.\"\n\nThe door swung open again and another figure stepped inside. Laura, holding a brown paper bag. The concern faded from Gwen's face as she turned to give Laura a venomous glare. Amy couldn't help picturing the redhead seated, legs spread, in Gwen's lap. Moaning. Climaxing. The crippling satisfaction in her face.\n\n\"Why the fuck are you here?\"\n\n\"It's freezing out there, and you have the keys.\"\n\nGwen looked her up and down. \"Why aren't you wearing something warmer?\"\n\nLaura glanced in Amy's direction and smiled at Gwen. \"I thought you were going to fuck me again. You always ruin my clothes so I wore something cheap and easy to take off.\"\n\nSeditious jealousy pulled Amy's face into a frown. Gwen glanced at her. She could feel it too.\n\n\"Just shut up and stand there.\"\n\n\"Yes, mistress.\"\n\nMistress. Amy struggled to hide her feelings. Pointless when Gwen could feel them all through their bond. The bond...\n\n\"Amy,\" She began walking closer. That seductive saunter that came so naturally. Even amidst her anger and hurt, Amy couldn't help watching the sway of those perfect hips. \"I'm sorry. I meant for it to be slow, and gradual. Painless.\" She knelt. Those glowing eyes were less than a foot away. \"You were supposed to choose this yourself. You still can. Please, be my thrall.\" Gwen held out her clawed hand, palm up.\n\nAmy's mind reeled as conflicting urges fought against each other. She wanted to take Gwen's hand, to be with her like earlier today. To slap it away. To run. To be a slave. To fight. To cry. She didn't know what was Gwen's influence, and what was her own. Remarkably, though, she seemed to be able to make her own decision. She'd expected Gwen to use the threads. Force her to take her hand. Say the words. But it seemed like Gwen really did want her to make her own decision. She knew what the right decision was. She just wished it was easier.\n\n\"Fuck you.\" She slapped Gwen's hand away.\n\nFor a moment, the same anger and hurt that Amy felt was reflected in those inhuman features. Then Gwen regained her composure and sighed. She stood, and returned to Laura.\n\n\"Then sit there and watch.\" Gwen turned and flashed a wicked smile at her. \"Maybe you'll change your mind. She snapped her fingers. \"Laura.\"\n\nLaura perked up and smiled as she skipped over to Gwen. \"I thought we might need these.\" She held up the bag.\n\nGwen's eyes went wide as she peered inside. \"Good girl.\"\n\n\"I was just following orders.\"\n\nGwen reached inside and withdrew her hand clutching a rounded plug made of a polished silvery material. \"Don't look so happy. I'm still angry with you.\"\n\n\"I know.\" Laura's voice was trembling with excitement.\n\n\"I'm going to leave you even more broken than you are now. There won't be any chance of going back to your old life. You'll spend the rest of your life serving me. Is that what you want?\"\n\nGwen and Laura both turned to watch Amy.\n\n\"Yes, mistress.\"\n\nAmy gulped as Gwen began unzipping Laura's ripped undersized hoodie. It swung open, revealing the inner curvature of her breasts. She shrugged it off and bared herself proudly. Scratches marred the pale skin of her chest, and her throat was angry and red. She smiled triumphantly at Amy. Why did Laura want this? And why was she so jealous? Amy knew that what was about to happen would leave her aroused beyond reason. Gwen would make sure of it. She was in complete control, and though it pained her to admit it, Amy knew that if she was pushed too far she would submit to Gwen's desires. She needed to hold out. To stay strong until an opportunity presented itself.",
        "Laura moaned as Gwen's claw traced a line up her side and did a little circle around her nipple. Gwen's other hand caressed Laura's groin. Laura reached up to wrap an arm around Gwen's neck, arching her back and giving a low moan. Laura began undulating seductively, pushing into Gwen's hand. In return, Gwen began to knead while she ran her free hand sensually along the curves of Laura's supple body.\n\nLittle more than two weeks ago, Amy had considered herself firmly heterosexual, when she was interested in sex at all. Now she was unable to look away from the sapphic display before her. They were so beautiful together. Laura's body was tight and firm, more athletic than Gwen's, but graceful. Every movement Laura made felt like part of a seductive dance. Next to Gwen Amy felt clumsy and awkward, Laura looked like she belonged by her side. Her mouth began to water as she watched their pace intensify, their movements become more frantic. Gwen spun Laura around by the shoulders, and they began to kiss. Gwen's hands wandered to Laura's rear, shapely and athletic. So different from Amy's.\n\nGwen shoved Laura backward. Laura gasped, and so did she. Gwen flashed her a smirk. She quickly closed her mouth and glared back. Laura's legs hit the coffee table and she toppled over onto the wooden surface with a slap. Gwen stepped closer and ordered, \"Roll over.\"\n\nLaura obeyed, rolling onto her stomach to face Amy. She still wore that look of triumph. At least until it was replaced by surprise as Gwen grabbed her ankles and dragged her backward until her knees were on the floor, leaving her bent over the table. Gwen reached into the brown bag and pulled out the plug, as well as an enormous ridged, purple phallus. She flipped a switch at the base, and a low buzzing filled the room.\n\n\"Amy.\" She felt her body snap to attention. \"Sit here, you'll have a better view.\" Gwen gestured to the sofa, directly in front of Laura, and began sliding the redhead's leggings down.\n\nAmy rose to her feet, and moved over with trembling legs. Laura's eyes followed her until Gwen knelt behind her, and the vibrations became muffled. They lost focus and Laura let out a high pitched hum. Amy squeezed her thighs together, and watched as Gwen went to work across from her.\n\n\"You should really thank Laura. Without her I would probably have drained you completely. I've been feeding on her for a while now. Eating her aura so that I could resist doing the same to yours.\"\n\n\"Thank you Laura.\"\n\nThe words came out on their own, and Gwen smiled to herself. In response, Laura stretched her hands forward like a cat and gripped the edge of the table nearest Amy as she moaned.\n\n\"I've been resisting it since the beginning. I didn't want to change you at first. But I couldn't help it. I think it's just in my nature.\"\n\nGwen began to ease the vibrater in and out of Laura's sex. Unfortunately, Amy couldn't see what was happening, but as more and more of the toy disappeared behind the curves of Laura's rear, her moans grew more intense.\n\n\"Eventually I realized, why fight it? What's the difference between me following human morality, with you as my guide, and you following a demon's morality?\" Gwen was watching her now. Continuing to play with Laura without looking. \"Why don't I be your moral compass?\"\n\n\"Because, Gwen it's wro-\"\n\n\"Hold her hands.\" Gwen interrupted.\n\nAgain, her body moved on its own. She leaned forward, and took Laura's delicate hands in her own. Laura met her eyes again, and squeezed Amy's palms as Gwen brought her other hand to Laura's rear. Teasing her other hole, Amy realized with a start. A wave of tingling warmth swept through her. Heat rushed to her cheeks. She was entranced. Gwen's puppet. Body and mind.\n\n\"Wrong. What's wrong about it? I prey on humans. It's the natural order of things. Are sharks wrong to feed on other fish?\"\n\nLaura yelped as Gwen extended a finger, her claw slid back, and she pushed slowly into Laura's ass. Laura bit her lip and her moans became squeaky and desperate. Laura tugged against Amy's grip, but she held firm. Gwen didn't want her to let go. Laura wiggled her butt at Gwen, who began easing both her hand and the toy in and out, gradually increasing in pace.\n\n\"I understand you're still human, and that-\" Laura interrupted as Gwen hit a spot that caused her to squeal in delight. \"Shut up.\"\n\nGwen slapped Laura's rear hard enough for the sound to echo off the walls. A red handprint formed on the rounded porcelain flesh. Laura whimpered, following the command despite her pain.\n\n\"Anyway,\" Gwen turned her attention back to Amy. \"You wouldn't condemn a thrall for their actions, right? Serving me, you would be blameless.\"\n\nLaura was writhing on the table between them, desperate. Gwen's machinations had kept pace and her hands were a blur.\n\n\"She's close. What do you think, should I let her come? I'll let you feel it too.\"\n\nLaura's browns knitted and she fixed Amy with a pleading look, groaning through gritted teeth. When Laura climaxed, Gwen would open the connection, and overwhelm her with pleasure. Amy was already more excited than she wanted to admit.\n\n\"No.\" She tried to give Laura an apologetic look. She knew what it felt like when Gwen built you up, only to let you come back down. Laura snarled at her as Gwen ceased her movements.\n\n\"See, you can be cruel when you want to.\"\n\nAmy felt a fresh wave of heat throughout her body. She tensed, squeezing Laura's hands and pressing her legs together again. Gwen was rewarding her. It felt so good. Amy realized that it didn't matter what she chose. Gwen wielded pleasure like a leash. Pulling her along wherever she desired.\n\n\"Let her go.\" Amy did. \"Laura, hold this inside.\"\n\nGwen eased the vibrater in as deep as she could, and increased the intensity. Laura arched her back and gasped, squeezing her hands into fists, before slipping one arm under herself to do as she was told. Gwen stood and made her way around the table. Amy flinched as she bent down beside her, then realized she was just removing her sweatpants. Gwen stepped out of them, her gorgeous legs, perfectly smooth, on full display. Amy resisted the urge to reach out and romantically run her hand along one, as she might have done earlier in the night. A pang of sadness struck her.\n\n\"Help me out of these?\"\n\nGwen stepped in front of her facing Laura, and bent low. Neither girl could see her, and Amy licked her lips as she slid Gwen's panties down, peeling away the strip of fabric covering her delicious flower. If she just leaned forward, she could taste it. Gwen began kissing Laura deeply, and swayed her ass hypnotically. A rebellious arm raised on its own. Amy laid a hand on Gwen's skin and began to caress her. Gwen moaned. Another surge of heat. Neither of them could see Amy. Her other hand drifted between her thighs.\n\nResist! She desperately urged herself to stop, but her mind was unraveling. The only thing she could focus on was Gwen. Before she knew what was happening her mouth was opening, she was leaning forward. You need to escape! Gwen cooed back at her, able to feel Amy's breath on her skin. Amy extended her tongue. You don't want to be a thrall! But part of her did. As always, Gwen's nectar was sweet as she buried her tongue in the waiting folds.\n\n\"Good girl,\" Gwen praised her.\n\nAmy felt her tension fade as her body relaxed and she eased into her task. Vulgar slurping and moaning filled the room as Amy desperately lapped, and Gwen violated Laura's mouth with her serpentine tongue. No longer caring if they saw, she began to play with herself while she pleasured Gwen. So much for staying strong. Her own climax built quickly, no doubt helped along by Gwen's abilities. Electric pulses ran through her, driving her on and on. Amy could see Laura squirming in time with her. Gwen was like a conduit, connecting her to Laura, forcing them to share each other's pleasure.\n\n\"Would you like to come?\" Gwen had broken the kiss. She was staring into Laura's eyes. Laura desperately nodded her head. \"Ask Amy then, if she says yes I'll let you both come.\" Gwen looked back to watch her as Laura began pleading.\n\n\"P-please, Amy. Please let me come.\"\n\nAmy knew that if she said yes it was over. What was left of her willpower would be washed away by a storm of ecstasy that would leave her Gwen's willing servant. Her lips parted. She needed to climax. She needed to escape.\n\n\"No.\" She barely managed to force the word out. It tasted bitter.\n\n\"Why?!\" Laura shouted at her.\n\nGwen turned her attention back to Laura. \"Shhh. You heard her. Not yet.\"\n\nLaura closed her eyes and whimpered as their climax faded. Amy's hips still shifted on their own, grinding against her hand, but she knew it was fruitless. They weren't coming until Gwen let them. Suddenly she regretted her choice. Gwen stood and retrieved the plug. Laura perked up, realizing what was about to happen. She kept her forearms on the table, but stood on her feet, arching her back and spreading her legs wide in an impressive display of flexibility.\n\nGwen caressed the plug with her tongue, coiling it around the tip and sliding downward to coat the entire surface. Amy felt her insides clench, remembering what that tongue felt like. Gwen held out the plug and called to her.\n\n\"Amy, you do it.\"\n\nHer knees nearly buckled as she stood, and moved behind Laura's nubile form. She took the plug in hand, it was heavier than she thought, and nestled it against Laura's backdoor and watched as it clenched in anticipation. The purple base of the vibrator still protruded from her pussy, humming away. Her mons quivered along with it. Shining juices dripped downward through her patch of crimson pubic hair.\n\nGoosebumps prickled up along her neck as Gwen brushed back her hair and whispered into her ear. \"I know you like being in control. I taught you that. Go ahead, take her.\"\n\nAmy began to push. Laura hissed as the plug spread her open. Amy met resistance, and pushed harder. Laura relaxed, and it began to slip deeper. Her orifice grew wider and wider as the reflective silver surface of the plug dilated her, until it reached the widest point, and all at once Laura's body pulled it in, closing tightly around the base and sealing it inside. Laura moaned and her knees buckled inward. The circular base of the plug shifted slightly as her muscles clenched.\n\nAmy took hold of the vibrator and began to ease it in and out. Laura pushed back to give her better access. Once again, she shared a rising, euphoric heat with the broken woman before her that grew each time she shoved the toy deeper. Gwen wrapped an arm around Amy's waist and began to taunt Laura.\n\n\"How does it feel to be fucked by your rival?\"\n\n\"Mmmm\"\n\n\"When you brought the toys, did you think you would be the one to use them on her? Did you think I would choose you over her?\"\n\n\"...y-yessss.\"\n\nGwen let out a cruel trill of laughter. \"You really are pathetic. You were never going to beat Amy. Not before, and certainly not now. You're just my little pet slut.\" Gwen was speaking to Laura, but looking sideways up at her. Gwen reached up and stroked a hand through her hair as she continued, \"Amy is special.\"\n\nPride swelled inside her at the praise. She was special, not just a slave like Laura. Amy reeled back and slapped Laura in the same spot as Gwen had. Laura bit her fist to contain her yell.\n\n\"Tell Amy what you are.\"\n\n\"I'm... I'm Gwen's pet slut.\"\n\n\"Now if you want to come, be a good little pet and beg Amy.\"\n\n\"P-please Amy. Please! Let me come. Just once. I've waited so long.\"\n\nAmy felt that same sense of power she'd had over Gwen last night. She knew it was an illusion, that she was Gwen's plaything. No more in control than Laura. Still, it felt amazing. Gwen hugged her from behind. A hand slid beneath her shirt and teased along her skin. Cupped her breast. Another traced the line of her hips. Gwen's body pressed against hers. Her voice tickled Amy's ear. Her words, dripping with love and affection, wormed their way into Amy's mind.\n\n\"This is how it will be. The two of us, together. We can take whatever we want. Anyone we want. You'll be a thrall, but you'll be special. Please, Amy. I want this.\"\n\nThe last words pulled at her. She wanted Gwen to be happy. To give her anything she wanted. Even if it meant condemning Laura to a life of servitude. Even if it meant betraying her humanity and surrendering herself to Gwen. Being a thrall didn't seem so bad. Xavier's words echoed in the distance. Her rational mind, what little remained, screamed at her to fight back.\n\n\"Well, Amy.\" She felt Gwen's hand cradle her sex. \"Can she come?\"\n\nAmy understood the implication. If Laura came, so would she. Somehow she knew that would signal the end of her freedom. Gwen would claim her, and despite what she said, Amy knew Gwen would use her as she saw fit. Amy felt a smile spread, unbidden, across her face.\n\n\"Yes.\"\n\nPent up lust ripped through them both. Amy felt like she would drown. The sounds that escaped her were inhuman. She could feel every single nerve in her body burning in ecstasy all at once. Laura collapsed to the floor. Amy fell, but Gwen caught her and gently deposited her into the armchair, crumpled and convulsing. For a moment, the world went black. Then all at once, she felt an iron will seize her, and froze. Twitching aftershocks of the orgasm were the only movement she was capable of. Gwen stood over her, looking down, expressionless.\n\n\"You have such strong willpower. I've always admired that.\" Gwen glanced at laura. Drooling and writhing on the floor. \"She was easy to break, but even with the threads, your resistance was too much.\" Gwen shrugged. \"It doesn't matter now though. When you climax, you're defenseless. Now you're mine.\"\n\nGwen leaned down and stroked her hair, like a pet. Her purse was digging into her back. She tried to move, but only succeeded in twitching a finger.\n\n\"I really am sorry. I didn't want to do this by force. That's what I get for underestimating her I guess.\" Gwen snapped up. \"Oh well, let's make some thralls!\" Her voice was light and playful. She grabbed Laura by the wrist and hauled her up with ease, turning her to face Amy.\n\n\"You know I like to tease. I want you to watch while I take her. You'll be next.\"\n\nGwen held Laura up by the back of her neck, and placed her other hand just below Laura's navel. She extended a single clawed finger and pressed. It broke the skin, and Laura began screaming and kicking her feet along the floor, trying to find purchase. Blood flowed from the wound, and began to form a perfect circle a few inches wide, centered on Gwen's claw. The trail it left behind turned black. The room smelled like burning flesh. The moment the circle completed Laura's screams shifted into a higher register, as pain became pleasure. Her body went limp, and her eyes rolled back. Her lips parted in a stupid, open-mouthed smile and she curled her toes. Amy's mouth was dry.\n\nMore blood leaked from the puncture, and a pattern began to emerge. Symmetrical sharp lines like the petals of a rose, sweeping delicate lines like wings, a single rivulet of blood dripped straight down forming a stem. Laura smiled wide, and closed her eyes. Tears rolled down her cheeks, and her screams cut off into gasping silence. Gwen seemed to be affected too. She withdrew her finger and staggered back. Her arm lowered, depositing Laura to the floor, and she fell to her knees. It looked as if she was biting back a moan, and her eyes were closed. Amy felt her hold slip, and inched a shaking hand into her purse. Cold metal brushed against her fingers.\n\nGwen's eyes snapped open and she regained control.\n\n\"Don't worry, love. I haven't forgotten you.\" She stood. \"That just felt better than I expected. Your turn.\"\n\nAmy slid her finger into the ring.\n\n<p align=\"center\">-----------------------------------------------------------------------</p>\n\nAll at once the threads were cleanly severed, and excruciating emptiness whipped against Gwen's senses where her connection to Amy had been a moment before. She fell to her knees, unable to think clearly as Amy staggered to her feet and began moving away. Amy pulled open the door, and paused, turning to look back at her. Betrayal written clearly on her face. Fear and longing overwhelmed her.\n\n\"Amy...\" She choked out.\n\nAmy turned away from her and stepped out into the night. Gone. Dark. Silent. Behind her, Laura stirred. She could feel her thrall's emotions with precision. The fading echoes of ecstasy. The joy at her servitude. The pain in her body. There was no more resistance. Every piece of Laura's soul belonged to her. But Amy was gone. Gwen knelt in silence for a while, thinking. Eventually she stood and gave Laura a gentle kick.\n\n\"Get up.\"\n\nLaura groaned, still too dazed to move. Gwen reached out with her senses and found herself as in control of Laura's aura as her own. As if the threads had coalesced like the fibers of a muscle that she could flex, bending Laura to her will as easily as moving a limb. Laura snapped to attention as she sent her a jolt of irritation. She stood, still trembling. The black mark just above her groin stood out against her skin, marking her as Gwen's. She should have started with Amy. Picturing that mark on Amy's beautiful body brought tears of frustration.\n\nLaura would pay for this. She'd forced Gwen to condense what should have been months of seduction into a single passionate frenzy. She'd put on a good show, but in truth she'd been nervous the whole time. Desperate not to let Amy go. To bend her far enough that she would allow herself to be corrupted. It had almost worked. If only she hadn't given in to her impulses at the end. That stupid display of hubris, thralling Laura first. Fuck!\n\nShe slammed her fist into the coffee table hard enough to splinter it and send a crack diagonally down the center. Laura yelped. Not used to the connection being so strong, she'd let her rage slip across and frighten Laura. Good. It was her fault. She'd cost Gwen Amy. Now she would pay.\n\n\"Laura.\"\n\n\"...yes, mistress?\"\n\n\"Call your fiance.\" Gwen could feel her turmoil, but there was no trace of resistance. Laura would do exactly as she was told. \"And drive us home.\"\n\n<p align=\"center\">-----------------------------------------------------------------------</p>\n\nIt was raining hard now, and Amy hadn't thought to grab her coat on the way out. She marched up the slope toward Jim's house, soaked and freezing. The only possessions she'd escaped with had been whatever was in her purse, and the ring. Luckily that included her car keys. In a stroke of fortune, Gwen hadn't followed her. Which was good because she had barely been able to walk, crippled by the ecstatic heat that had taken hold of her body and the daze that severing her connection had brought. Being in closer proximity to Gwen, she had felt it this time. Physically. Her head and body ached. She felt as if she'd run a marathon.\n\nGwen had betrayed her. No, that wasn't true. Gwen had done exactly what demons do. It wasn't betrayal to obey her instincts. On that count, Gwen was right. This was her own fault. For ignoring Jim and Xavier's warnings. For ignoring her changing personality. For not wearing the ring. She'd been moments away from being thralled. Made a slave for the rest of her life. Just like Laura. The image of Laura's enthrallment weighed heavily. A large part of that weight was jealousy. The ring, it seemed, didn't reverse the changes that Gwen had made to her thinking. Hopefully those would fade with time.\n\nAn uneven crack on the sidewalk caused her to trip, but she threw a foot out and caught herself. She stood straight and pushed her hair back. It slapped heavily against her back. She needed a haircut. Her thoughts turned back to Laura as she continued walking. Gwen's thrall now. How long had Gwen been toying with her behind Amy's back? Was lying to her really so easy? She huffed. Gwen's infidelity wasn't the issue. Amy's participation was. She'd practically broken Laura herself, and enjoyed every second of it. What a hypocrite she was. Lecturing Gwen before turning around to be her accomplice.",
        "None of it mattered now though. Beating herself up wouldn't help Laura. It wouldn't help Gwen. And she would help her. Whether her former friend liked it or not. Anything short of changing her back to a human felt like losing, and Amy did not like to lose. No more timid scholar, no more pushover. If Gwen had changed back willingly, Amy would have been by her side. Her partner. Instead she would be her opponent. The Watchers' house loomed over her as she stood soaked in the freezing rain, and smiled. Gwen had never beaten her.\n\nHey everyone! I appreciate you taking the time to read this story that started as smut, but quickly became something I care deeply about. This chapter marks the end of A Succubus Awakens, but don't worry. There's a lot more to come for Gwen and Amy. If you enjoyed the story, have questions or comments, or just want to yell at me for breaking up your favorite couple, feel free to reach out. Thanks for reading!\n\n<p align=\"right\">-Ash</p>"
    ],
    "authorname": "Autumn_Ash",
    "tags": [
        "succubus",
        "lesbian",
        "corruption",
        "transformation",
        "slave",
        "mind control",
        "mind break",
        "romance",
        "betrayal"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-succubus-awakens-ch-09"
}