{
    "title": "You Get What You Paid For Ch. 06 - Final",
    "pages": [
        "When Clark sees the way I'm \"improperly\" packing my clothes, he sighs, up-ends my luggage, and grabs a single shirt. \"No, no, no. You need to roll them, like this,\" he says, demonstrating his technique by folding in the arms and rolling one of my sweaters into a cylinder.\n\n\"How am I supposed to know? I don't get out much, remember?\" I say, pushing him playfully.\n\nHe just chuckles, placing the shirt into the bottom corner of my bag. \"That's why you have me,\" he says. \"Can't have my boy crossing the country with ill-packed luggage.\"\n\n\"Well, sorry I'm in a rush,\" I tell him, grinning slightly and just letting him take over. I've already pulled out all the clothes and toiletries I want to pack. I just hadn't gone through the motions of actually stuffing them into a suitcase by the time Clark showed up - and now that he's here, I suppose it's just easier for me to hand him the reins.\n\n\"You wouldn't be in a rush if you didn't wait 'til last minute,\" he mutters, bumping me with his hip.\n\nI just laugh, hugging his side as he adds another sweater to my luggage, thankful that he came here tonight to both keep me company and help me get prepared for my trip. \"You know how I am, Dad,\" I tease.\n\n\"That I do, Cub,\" he says, chuckling softly as he organizes. \"Is Adam packed yet?\"\n\nI bite my lip. \"Not yet...\"\n\nClark pauses, looking at me. \"So where the hell is he? Your flight is in, what, ten hours?\"\n\n\"He's playing music tonight,\" I inform him. \"He should be back soon.\"\n\nClark just purses his lips slightly. \"Mhm.\"\n\nI know that look. Even though he met Adam for the first time ten or so months ago, Clark still has some skepticism about our relationship. It's not that he doesn't like Adam. In fact, he adores the guy. I just don't think he can see past the straight-escort-who-fell-in-love-with-a-male-client thing - and I don't blame him. Lord knows I drove myself nuts over that ordeal, and Clark is very protective of me. But what he *does* see is how evidently happy I am, so he keeps any real reservations to himself. I just hold onto the knowledge that one day, he'll completely dismantle them. We'll get there eventually.\n\nAdam moved in with me and Mimi a few months ago. It made the most sense financially for him, and it felt like the right time to make that step forward in our relationship - and I'm so happy we did. Adam brings a special bit of life to my living space that I hadn't previously recognized was missing. His sheer presence is its own little light, a source of joy and humor that casts out the sense of loneliness that once plagued my apartment. Even Mimi quickly warmed up to him, which I take that as a sign from God himself.\n\nI make a killing thanks to that promotion, more than enough to provide for both of us, but Adam refuses to mooch off of me too heavily. So, he works part-time at an organic grocery store, and the rest of his time is spent (by my encouragement) playing gigs with his jazz band. I'm happy with my job, and I want my partner to enjoy the things he loves too even if it doesn't exactly rake in the dough.\n\nIt's been tough finding time to take a serious vacation, though. That three grand has always been in the back of our heads, a fantasy that kept losing the potential of being a reality because of how busy we've both become. Adam's band is recording an album, and I've undertaken some big projects that require plenty of consistent attention. Finally, though, after the band had finished laying down all the necessary tracks and I had finagled some time off, we found ourselves able to dedicate an entire week to a trip - just in time for my birthday, too.\n\n\"I still can't believe you're going to Alaska, of all places,\" Clark murmurs.\n\nI laugh. Adam loves the cold for some godforsaken reason, and Alaska was something he mentioned on a whim a few months ago. I'll admit that it's not my first choice (nor my second) considering I pictured something tropical and beachy as a romantic getaway. But his excitement about Alaska unintentionally convinced me to shelve my \"lounging by the water\" fantasy and go along with what he wanted. Even though I'm not a fan of the cold, I know it'll be fun. It's something I'd never do otherwise, and I'll be with someone I love and cherish - *and*, I'll get to cross something off my bucket list: see the northern lights.\n\n\"It'll be an adventure,\" I say, smiling. \"And it's not like it's our honeymoon.\"\n\nClark pauses at that for a second, lightly fussing with a pair of pants. \"Right,\" he says.\n\nIt's in such a strange tone that I look at him curiously. \"What?\"\n\n\"Nothing,\" he says with a shrug before clearing his throat. \"Just wondering if... you think you'll ever get married again.\"\n\nI feel something odd shift in my chest. It's not like it's something I haven't thought about. I mean, Adam and I have gotten pretty serious. We're committed, and dedicated, and we only have the future ahead of us. Sure, we haven't dropped the \"l\" word to each other yet, but I feel like it's there without having to speak it aloud. It's apparent. But marriage? Every time I think of the future of our relationship, I think of Miguel - how desperately he wanted to marry me, and how happy I was being his husband. If this is the path we're taking, is that where Adam and I will end up? Is that something I want?\n\n\"I don't know,\" I mutter, biting my lip a bit. \"It's not something we've talked about.\"\n\n\"I mean in general,\" Clark says, eyeing me.\n\nQuestion of the year. When Miguel died, part of me was focused on one phrase: \"never again.\" I thought I'd never date, never find love, never marry, never settle... And here I am, happy again, with Adam, loving him as his own entity rather than comparing him to something I've had before. I suppose if we keep going the way we're going...\n\n\"Maybe,\" I say, glancing at Clark and trying not to smile. He can read me like a book, though, and can tell exactly what I'm feeling - and he grins.\n\nJust then, Adam comes bursting into the apartment sounding out of breath. \"Sorry, sorry, sorry!\" he says, instrument case in hand, jacket slung over his shoulder, and gold chain swinging as he runs towards the bedroom. \"Got back as fast as I could.\"\n\nI just laugh gently, accepting the kiss he plants on my lips before he starts putting his stuff down. \"It's okay. I just started packing.\"\n\n\"I think you mean *I* just started packing,\" Clark murmurs to me, and I just grin.\n\n\"We're gonna get, like, two hours of sleep,\" Adam says, laughing softly as he looks around the bedroom. I know exactly what he's thinking, because I was asking myself that same question earlier: \"Where the fuck do I start?\"\n\n\"It'll be fine,\" I tell him. \"We can sleep on the plane.\"\n\nClark snorts. \"I wouldn't bank on that.\"\n\n\"Well here's to hoping,\" I say, slapping Clark in the chest and making him grin. \"Optimism.\"\n\n\"Since when are you optimistic?\" Clark teases.\n\nI just flip him off. \"Shut up and pack, old man.\"\n\nIt takes us a bit to get everything in order, but most of our time is spent debating what *not* to bring. In the end, our bags are pretty simple: several changes of clothes, multiple pairs of underwear and socks, phone chargers, boots, a couple books to read, and our passports. Toiletries can be purchased in Alaska, we've decided. Once we have what we need ready to go for the next morning (including our outfits and tickets), we can finally call it a night.\n\n\"I'll leave you two to it, then,\" Clark says, smiling towards me.\n\nI sigh heavily before practically rushing over to him, hugging him tightly and resting my head on his shoulder. \"I love you,\" I murmur.\n\nClark wraps his broad arms around me and kisses the side of my head. \"I love you too, Cub,\" he says, allowing me to sink into his embrace. Then he chuckles a bit. \"This'll be the longest I've gone without seeing you.\"\n\nShit, he's right. A whole week? Ever since he took me in, I've never gone more than a handful of days without seeing Clark. He's been my rock, my champion, and my father figure, and it's a little strange to think that I won't have him there. In a weird way, it feels like I'm leaving the nest for a bit. Growing up.\n\n\"I'm calling you every day,\" I mutter.\n\nClark laughs. \"Nah. You have fun on your trip. Don't think about me.\"\n\n\"Impossible,\" I say, pulling back and smiling at him. \"I'm at least calling you twice.\"\n\nHe chuckles, patting my shoulder. \"Twice it is, then. And take lots of pictures, you hear me?\"\n\n\"Yes sir,\" I say, grinning as we step back from each other. I watch Clark and Adam hug it out for a moment (during which Clark tells my boyfriend to take good care of me) before the big man takes his leave, locking up on his way out.\n\nWhen I turn to Adam, he smiles at me. \"You ready for a little adventure, Teddy Bear?\"\n\nI laugh, gesturing to the bed. \"I'm ready to sleep. Ask me in the morning.\"\n\nAdam chuckles softly, coming over to snag a quick kiss before he heads towards the bathroom to get ready for a few hours of shut-eye. I just smile tenderly to myself for a second, feeling fluttery - nervous, but excited.\n\n~ ~ ~\n\nFor all the issues I have with its climate, Alaska turns out to be the romantic getaway we both needed. The cabin Adam rented for us is isolated and warm, the perfect antithesis to the hustle and bustle of NYC. Here, it's just me and Adam. There's no one else to answer to, no one else to be bothered by... no one else to interrupt us when we're making love in the cabin. Not that we get interrupted back home, but it's nice to just be loud and carefree and unrestricted. Even just the simple act of sleeping with him in such a quiet environment brings me joy. It was strange at first, because I find it difficult to fall asleep in total silence. But so often Adam would shift in the middle of the night to snuggle closer or reach for my hand or, if he woke up, give me a soft, lazy kiss before drifting off again. It's the little moments like that that make me fall for him even more.\n\nWe start off our trip in Juneau exploring the Mendenhall Ice Caves, waltzing through the upside-down forest of Glacier Gardens, and even taking the Mount Roberts Tramway - which was horrifying for Adam since he is deathly afraid of heights. I felt a little bad that he took it so horribly, but it was his idea to try to \"conquer his fear.\" Plus, I got to play the \"comforting partner\" role for a change. He held onto me tightly the entire way, quaking like a little boy, clearly trying to laugh it off as best as he could even though he looked paler than usual. I'm proud of him for trying, though.\n\nMy favorite days, however, are the final two, because we travel out to Fairbanks to see the Northern Lights on a tour - and God, is it magical. The way the silvery iridescence dances across the eerily-illuminated sky is fucking spectacular. It's almost ghostly in its appearance, but I don't find it haunting. I find it beautiful, and comforting, and mystical. And, to top it off, Adam and I share a cheesy midnight kiss under the aurora borealis when it's officially my birthday. I'm not one for rom-coms and the like, but goddamn, sometimes it feels like I'm living one, and living it happily.\n\nWe're both far too tired to celebrate in any sexy way once we make it back to our cabin. We simply collapse in bed, undress, cuddle, and sleep in until, when we awake, we decide to get breakfast. In theory, we would have loved to try out another restaurant, but I practically fell in love with the crepes at this breakfast/brunch place right near our hotel. With thin cinnamon apple pancakes on the brain, we (as in I) decide to go there again. \n\nWhen we sit down, the first thing Adam does is order a mimosa. I chuckle softly, poking fun. \"Isn't it too early for that?\" I ask.\n\nAdam just stares at me. \"That's exactly when mimosas are for.\" Then he grins. \"You want one?\"\n\n\"I'm good,\" I say, smiling at the waiter.\n\nAdam ignores me, though. \"Make that two mimosas.\"\n\nThe waiter seems to find that comical because he laughs before saying he'll have those out shortly. I just playfully glare at Adam. \"I said I'm good.\"\n\n\"You want one,\" Adam says, grinning at me. I just roll my eyes, which makes him chuckle softly before he glances at the menu. \"Huh. Guess we could have just ordered food since we know what we want, right?\"\n\n\"It's alright,\" I tell him. \"He'll be back in a minute anyway.\"\n\n\"True,\" Adam says, setting the menu to the side before looking at me with a tender smile. \"I'm still thinking about last night.\"\n\nI laugh. \"It was something, huh?\"\n\n\"It was... out of this world,\" he says, the awe still in his voice. \"I'm glad I got to share that experience with you.\"\n\nI smile bashfully. \"I'm glad too,\" I say. \"And that kiss was cheesy as hell, but-\"\n\n\"But you love cheese,\" Adam teases, with a grin.\n\nI chuckle, shaking my head. \"Fuck off.\"\n\nHe's about to respond when he gets distracted by something in his pocket. That's when I realize his phone is ringing - and I almost laugh when I see him roll his eyes.\n\n\"Who is it?\"\n\n\"Toby,\" he mutters. \"I told him not to bother me on my trip.\"\n\n\"Maybe it's something important?\" I suggest, wondering what his bassist could possibly want right now.\n\n\"Who cares,\" he says. \"This is Teddy Time.\" He flashes me a smile as he ignores the call. When his lock screen pops back up, he notices some missed texts and relays one of the messages to me. \"Oh hey! Ma sent you some birthday wishes.\"\n\n\"Really?\"\n\n\"Yup. 'Tell that adorable man of yours happy birthday from the three of us.' And a ton of heart emojis.\"\n\nI snort. \"It does not say that.\"\n\n\"Yes it does,\" he claims, quickly showing me the message. I smile when I read it, feeling a special kind of fluttery warmth inside. I was shocked by how easily the Sullivans accepted me as Adam's boyfriend. When Adam broke the news, his grandmother acted like it was no big deal. I expected the grandfather to remain relatively unaffected, but her? I anticipated at least some shock, or questioning, considering the way Adam made her out to be. Part of me has a feeling Simon may have said something prior - forewarned her, maybe, to give her time to adjust to this information. If so, thank God for Adam's brother. Mrs. Sullivan shows me no animosity whatsoever. In fact, she's been even more familial towards me, going out of her way to let her know that she cares for me and thinks of me often.\n\n\"Tell her thank you,\" I say with a small laugh, \"and that I miss her.\"\n\n\"Will do,\" Adam says, starting to type up a reply. \"She might have a cake waiting for you when we get back.\"\n\n\"A whole cake?\"\n\n\"Of course. That's her thing, remember?\" he says with a smile. \n\nI find myself shrugging a bit. \"Yeah, but like, for your family.\"\n\n\"You're practically family,\" Adam says casually.\n\nHad he been looking up, he'd see the surprised look on my face, but he's still typing away. Practically family? That makes me feel... Well, I'm not sure how I feel. When I first met his family, the thought of getting close to them mostly terrified me, but now, after having the freedom to just be myself with Adam around his grandparents... Maybe family is a concept I can once again get behind.\n\nOur mimosas arrive shortly after, and we put in our breakfast orders before the waiter walks away. Then, Adam clears his throat into his fist before taking a hold of his mimosa and holding it up. \"So... I have some corn I wanna lay on you.\"\n\nI raise my eyebrow, trying not to grin. \"Corn?\"\n\n\"Yeah, corn,\" he says, smiling - but there's something else in his expression. Nervousness? \"You know, like... I'm about to get all corny.\"\n\nI roll my eyes, spinning the stem of my glass. \"You could have just said that.\"\n\n\"I'm just trying to have a little fun,\" he says, waving me off before leaning back in his seat and just... *looking* at me as he holds his drink. He has the softest smile on his face, so tender that I'm getting chills. What the hell is he about to say? \"I...\" Then he pauses, laughing briefly before continuing. \"I think I love you.\" I blink, staring at him. At first, he looks confused by the words coming out of his mouth, but then, after letting them sit in the air for a second, he nods and looks sure of himself. \"Yeah. I love you.\"\n\nI swallow thickly, sucking my lips in. Adam said it first. Here I was, debating on how to properly say it for the past few months, and he beats me to it. Sure, I've told him something along the lines of, \"I've been in love with you since I met you\" when he first expressed interest in me, but words like that don't sound as direct as saying \"I love you,\" nor as meaningful as after months of being together. This is different. This is special.\n\n\"You fucking bastard,\" I murmur.\n\nGod, now I'm smiling like a little boy, and Adam's laughing at me. \"What?\"\n\n\"You beat me to it.\"\n\nHe looks surprised before chuckling again. \"I did?\"\n\n\"Yeah,\" I say, smiling sheepishly, feeling hot and tingly all over - but not in an uncomfortable way. I'm loved.\n\n\"Well shit,\" he says, snorting, looking red-faced. \"You don't have to say it just to... I don't know... appease me?\"\n\n\"I do love you, though,\" I say.\n\nHe pauses before smiling widely at me. \"Yeah?\" When I just nod in response, he too grins like he's a fucking child. \"Well... cool,\" he says.\n\nI burst out laughing. It's as if we're tweens again, asking if we \"like-like\" each other while playing a game of Seven Minutes in Heaven, because it's clear that we don't know what to say. But it's just as evident that what we feel is genuine and pure. \"*Cool*,\" I mock.\n\nHe blushes again, shaking his head. \"I just... Never mind,\" he says, laughing. \"Guess we're on the same page.\"\n\n\"Seems like it,\" I say with a smile, wanting so desperately to kiss him.\n\nGrinning, he clinks his glass against mine. \"To us?\"\n\nI smile and nod. \"To us.\" After I bring the drink to my lips, I take a long sip. Fuck, I feel good. It's all out there, now, isn't it? Now I can stop hesitating to tell Adam how I really feel. I can dish out those three little-but-powerful words like it's nothing. God, it's fucking freeing. \"Turning out to be a decent birthday so far,\" I comment.\n\n\"Well... speaking of birthdays,\" Adam says, sitting up straighter and smiling mischievously, \"I have a special birthday present for you.\"\n\n\"Special, huh?\" I say, feeling giddy from us admitting our deeper feelings for each other - or maybe the mimosa is strong and fast-acting. I don't know. \n\n\"Mhm.\" He's biting his lip as he stares at me.\n\n\"What is it?\" I ask, glancing at him. Does he have something on his person?\n\n\"It's at the cabin,\" he says. \"Well, rather, it'll happen at the cabin.\" I raise my eyebrows, unsure as to what he's getting at. Finally, he spills. \"I want you to fuck me.\"\n\nAt first, I think he's just cracking a joke or something, so I laugh. But he looks oddly serious or something. \"Wait, what?\"\n\n\"I want you to fuck me,\" he repeats.\n\nI squint. \"Like... with you...?\"\n\n\"Taking dick? Yes,\" he says, looking amused now.\n\nI'm still not convinced, so I decide to be explicit. \"You, Adam Sullivan, my straight boy-toy, want my cock in your ass?\"\n\nHe nearly chokes on his drink mid-sip, wiping his lips with the back of his hand and chuckling as he looks around. \"Maybe not so loud.\"\n\n\"Sorry,\" I say, laughing a bit. But this is a serious milestone. I mean, Adam has always said his ass is off-limits to anything that's not a tongue. He's never expressed interest in a finger - wouldn't even let me rub his hole for added stimulation while I'm going down on him. So this is... a surprise.\n\nHe just smiles a bit, briefly looking around. \"I know we haven't, like, talked about it much... but you've always been the... well, the bottom.\"\n\nI grin a bit. \"I *like* being the bottom, Adam.\"\n\n\"So you don't want to top ever?\"\n\nI feel myself blushing slightly. \"Well, I didn't say that,\" I murmur.\n\n\"There we go, then,\" Adam says, taking another sip of his drink.",
        "\"But do you even want to?\" I ask skeptically.\n\n\"With you? Hell yeah,\" he says, so casually that I'm caught off-guard for a moment. Guess I'm the exception to his rule all of a sudden. \"I want it all with you, Teddy.\"\n\nI don't know why that makes every inch of me blush, but I feel my face get warm and my pits get sweaty as I gush for him. This boy. I'm so lucky. So fucking lucky. I consider myself blessed to get a real second chance at love.\n\nAdam and I spend most of the day wandering around the town and checking out local shops, but I'm distracted by Adam's offer of sex. Even as we're sifting through racks of silly souvenirs and scouring antique shops for gifts for Clark and the Sullivans, I find myself constantly checking out his ass. Whenever my eyes home in on those two globes trapped in those slim-fit jeans of his, my cock twitches, suddenly aching to be inside of him. My position as a bottom was something I came to terms with even before we started dating, and even though I would have loved to enjoy a bit of versatility, I knew Adam's limits: most anal play has always been off-the-table. Now, though... Fuck, I just want to get back to the cabin as soon as possible.\n\nAfter nearly a full-day of tackling various museums and tourist traps, we finally return to the cabin. Before the door is even unlocked, I'm already hard, my boner pushing insistently against the inside of my jeans. I even walk a little funny, but I try to keep it not-so-obvious.\n\nAs we slip inside, I wonder what's on his mind. Has he thought about his present to me? Is that the first thing he thought about when he unlocked the door? Does he regret making that offer, and is he hoping that I'd forget all about it?\n\nHe drops the cabin key on the dresser and turns to me, biting his lip a bit. \"So...\"\n\nI smile slightly as I start to remove my coat. \"So...?\"\n\n\"Here we are,\" he says.\n\n\"Here we are,\" I mock, making him laugh.\n\n\"Shut up,\" he murmurs before stepping closer to me. As I pull my coat off of my arms, he gently grabs onto the hem of my sweater. \"I need you to take the reins on this one,\" he whispers.\n\nGuess he *was* thinking about it. Fuck. I chuckle softly before reaching up to take his face in my hands and kiss him. \"We don't have to do this.\"\n\n\"I want to,\" he says confidently, kissing me back as he snakes his arms around me.\n\n\"But you look so nervous.\" It's in his eyes. I can tell. I know him well enough by now.\n\n\"Well of *course* I'm nervous,\" he says with a laugh before pulling me in closely. \"But I know you'll take care of me, birthday boy.\"\n\nI smile against his lips before I nod a little. \"You're gettin' the works, stud,\" I whisper before I reach down to give his ass a firm pat. \"Clothes. Off.\"\n\nHe grins. \"Yes sir,\" he murmurs. He steps back just enough to start taking his clothes off in front of me - and in the interest of playfulness, he adds a little strip tease to it. Humming some tune and swaying his hips lightly, he slowly starts to take off his coat, grinning at me. I laugh, watching his peacoat fall to the floor with a soft thud. Then he starts to lift the hem of his sweater, his happy trail coming into view, followed by that deliciously toned core of his. I bite my lip as more and more of his body is exposed until he removes the shirt with one fluid, practiced motion. Soon, only the gold necklace remains, hanging loosely around his neck. After tossing his shirt to the floor, he runs his hands down his front before letting his fingers rest on the waistband of his jeans, tugging lightly, seductively, enticingly.\n\nI'm two seconds away from ripping the rest of his clothes off when he finally starts unzipping the fly. With one quick motion, he's showing me that he's not wearing underwear. His trimmed bush comes into view before, with another shift of his clothing, his cock swings out to greet my gaze. Fuck, he's hard already. I can't even watch him step out of his jeans because his cock has me transfixed - as usual, of course. It's a handsome piece to match the rest of him.\n\nBut I can't let it distract me. I have other parts of his body to attend to. I make quick work of my own clothes, letting him eye me up and down before I direct him to the bathroom with a quick slap of his ass. He chuckles, swatting my hand away before leading the way and giving me full view of his peach. I lick my lips at the sight of it, at the mere anticipation of penetrating it.\n\nOnce Adam gets the water to temperature, we both step in - and my hands are immediately on his body. I pull him close and kiss him deep, not wasting any time. I want to show him my hunger. It's all tongue, hands, and body, sighs and soft grunts, deep hums of satisfaction and longing. This is open love now. We have to revel in it.\n\nWe start off with cleaning each other off, passing the bar of soap back and forth as we kiss and run our sudsy hands across each other's skin. It's no surprise that we get handsy, fingers and palms running over each other's nipples, cocks, and asses - but this time, I spend extra time on Adam's backside. With a hand on each cheek, I spread them apart and gently work the tip of my index finger against his hole.\n\nAt first, he tenses a bit, gasping lightly against my lips and clutching onto me a little more tightly. \"Shhh,\" I whisper to him. He relaxes a little, and I keep my motions light, very gradually adding pressure over time. It's not a matter of it not feeling good. I know he loves a little stimulation, but I also know he's nervous for what's coming: the real deal. It's foreign and new, and for someone who's spent his whole sexual career keeping that part of him off the menu, it must be a little scary. \n\nI move my lips to his neck and kiss him there. \"Turn around for me.\"\n\nHe gives me a half-smile before pecking my lips and turning his back to me, resting his front up against the shower wall. I lick my bottom lip as I look him up and down, eyeing my meal and running my hands down from his shoulder blades to his hips. I bring one hand between his cheeks and feel around for his hole, pulling his hips back a bit so that he's at least slightly bent over. Over the loud spray, I can still hear Adam moan softly as I rub my finger back and forth. I take my time with it, not adding too much pressure until I feel him relaxing more.\n\nThen, with a soapy finger, I start trying to push into his heat. At first, he clenches completely, and I keep kissing the back of his neck and telling him to relax for me. After a few breaths, his hole loosens its tension ever so slightly, allowing me to ease deeper into him - and Christ, my cock throbs feeling how tight my boyfriend's virgin hole is. And to think, I get his cherry. Happy birthday to me.\n\nI take several long minutes to really rock my finger back and forth and get him used to the sensation before I give him something he loves: my tongue. I kneel down behind him, rinse off the soap, and give him a kiss tongue-first, smiling at the way he shudders and pushes back against my face. The rimming seems to help loosen him up, so I spend plenty of time opening his hole with some lusty, hungry tongue, occasionally petting his ring with the pad of my finger. I switch it up frequently, tasting and testing over and over - but I keep to soft strokes with my fingers. We'll have to take this to the bedroom if I want to *really* work him out.\n\nOnce I've eaten him out good 'n proper, I kiss my way up his spine. Before I even get to his neck, Adam spins around and ropes me into a deep, passionate kiss. I nearly lose my footing, but he keeps a sure grip on me, hugging my body to his and kissing me hard.\n\nHe's panting softly when he breaks the kiss. \"Bedroom?\"\n\nI bite my lip and nod. \"Yeah.\"\n\nHe smiles gently before pulling away, turning the faucet to shut the water off, and then stepping out of the shower. I think we're both eager to get to the fun, so we dry off quickly and then make our way back into the bedroom.\n\nAs Adam situates himself on the bed, I grab a bottle of lube from his luggage. It's the third bottle we've bought on this trip considering the amount of sex we've had - and my goal is to use it up tonight before we have to head home in the morning. Popping the cap, I join Adam in bed and insert myself between his legs, smiling when he opens up for me. He's lying comfortably on his back, one hand behind his head, the other loosely groping his goods. \n\nI squirt some KY onto two fingers before reaching under his balls and below his taint to rub gently around his sphincter. He sighs softly, letting me gently massage that spot for him as he spreads his legs a little more. I lift one up a bit to get better access, progressively adding more pressure with my middle finger until the tip pokes in. As I start to enter him, I glance up at his face so see that his eyes are closed and he's biting his lip, his face a little flushed.\n\n\"How's it feeling?\" I ask as I ease in deeper. Two knuckles now.\n\n\"Feel's okay,\" he breathes out, opening his eyes to look up at me. He smiles a little.\n\n\"You gotta loosen up, babe,\" I tell him, chuckling as I rock my middle finger back and forth.\n\n\"Gee, I'll get right on that,\" he murmurs, looking bitter - that is, until I curl my finger and find his spot. His entire lower body twitches and he moans out mostly in surprise, staring up at me. \"Whoa.\"\n\n\"I know,\" I say with a grin, massaging his button slowly. \"I told you it'd feel good.\"\n\n\"Shut up,\" he whispers, fondling his now-growing cock. He whimpers and laughs slightly as I stimulate him from the inside. Surely the pleasure is distracting from the stretch, so after a while, I add in a second finger. Adam's groans remain low and consistent, and his strokes on his cock are steady and slow, so I match my fingering with those: nice and easy. Now I have my boy squirming, mewling, experiencing something he's never experienced before.\n\nOnce his hole is loosened enough, I speak up. \"Think you wanna try it now?\"\n\nAdam opens his eyes and first looks at where my fingers are before looking up at me. \"Yeah,\" he says softly, looking nervous again.\n\nHere we go, then. I remove my fingers and lube up my cock - and fuck, it's been a while since I've felt this hard. It pulses in my grip like I'm wearing a cock ring, and I grunt when I get it coated. Once it's nice and slicked up, I have Adam hold onto the backs of his knees and pull back.\n\nWhat a strange sight, with Adam positioned like this. I'm not used to him looking so submissive, or having his hole so perfectly on display, shining with lube and ready to take me in. I've always thought Adam was a stud, but this? It somehow makes him even hunkier, more manly, more attractive to me. He's giving his all in this relationship, and that's all I can ask for.\n\nAs I shift forward and run the head of my cock against his most intimate place, I find myself transfixed by the sight of his hole. It pulses lightly, that tender skin in the center of a small ring of fur - like it's calling me in or something. I just hold my cock in a tight fist and give it what it wants. Slowly, I push forward, watching his outer ring stretch along the head of my cock until, amazingly, it disappears... then another inch... and another...\n\n\"Fuuuck,\" he groans, laughing and wincing.\n\nI flick my eyes up towards his face. \"You okay?\"\n\n\"When'd you get so fuckin' huge, Teddy?\" he grunts, clenching his eyes shut.\n\n\"Relax,\" I tell him, running my hands up and down his sides.\n\n\"I'm trying,\" he says softly before gasping a bit when I push in deeper. \"Christ.\" He tugs back on his legs a little more, clenching his teeth.\n\n\"We can stop,\" I tell him, a little reluctantly. This is a new experience for me. I've never fucked a virgin, and I've never had to exercise such patience.\n\n\"No, no,\" he says, shaking his head but still pushing me back. Then, an idea strikes him. \"Petition to get drunk.\"\n\nI laugh slightly, pausing my movements. \"Seriously?\"\n\n\"Yeah. Full-body lube.\"\n\n\"Adam-\"\n\n\"We're drinking,\" he says decidedly, letting go of his legs and pushing me back. I slide out of him before sitting back on my heels to watch him sit up with a grunt. Immediately, he slips out of bed and heads right towards our luggage, where we've stashed our last bottle of bourbon. He lifts it up and grins at me, swirling the contents.\n\n\"That's all you,\" I say with a smirk.\n\nHe laughs, coming back to bed as he unscrews the cap. \"C'mon. Get sloppy with me.\"\n\nHe takes a swig, and I roll my eyes when he passes me the bottle. With a sigh, I take it, trying not to smile. \"Fine.\"\n\nMy goal isn't to get sloppy, but I take more than my fair share as we pass the bottle back and forth. A half-hour is spent just drinking, talking about the trip and dreading the fact that we're heading home tomorrow. It'll be nice to see Clark again, and we have plans to visit the Sullivans, but still, a trip where we only have to worry about the two of us, where we've gotten closer than ever, is hard to let end. \n\nBut finishing off our bottle of bourbon as a warm-up for a fuck is certainly one way to end things. It's clear that Adam has drunk far more of the whiskey than me, because just as I start to feel tipsy, I notice how wide-eyed he is, and how he's slightly slurring his words, and how he's increasingly affectionate: tell-tale signs of a drunk Adam.\n\nHe doesn't tell me with words that he's ready to continue. He just leans in, kisses me deep, and drops the empty bottle onto the floor so that he can hold the back of my head. I hum softly against his lips, letting him feed his tongue into my mouth and feeling my cock start to harden again. God, he's so good at kissing. Within an instant, Adam's lips can make both my mouth and my cock drool.\n\nSlowly, Adam starts to shift into my lap. Once he's straddling me, he pushes me down onto my back so that he's on top - and I let him. If he wants to control the speed, all power to him. I just lie back, feeling warm from the liquor and his weight and his hand on my chest. He digs his nails in lightly before turning his attentions towards the lube. I chuckle as he fumbles with the cap before assisting him so that he can lube us both up again. He overdoes it with the KY on my cock, but I suppose that's best for him. \n\nThen, he tosses the lube to the side, holds my hard-on up, and then very slowly sinks down on it. I look up as his mouth hangs open and he lets out an elongated sigh. \"Fuck, that's better,\" he whispers softly to himself, very tenderly working his way lower and lower. I let out a little groan myself, feeling how tight and warm Adam is on the inside - and how it's slowly encasing me. It's been a long fucking time since I've topped anyone, and I hadn't realized how much I missed it. Adam feels incredible. Silky smooth, hot as all hell, milking my cock as he takes me one inch at a time. Fuck, hopefully the alcohol keeps my orgasm at bay for a bit so that I can enjoy this for a while.\n\nWhen Adam finally bottoms out, both of us moan in such synchrony that we end up laughing. \"This was your idea,\" I remind him, almost dizzy from how deep I feel. \"Don't forget that.\"\n\nHe grins down at me, one hand resting on my stomach, the other on my thigh. \"To get drunk or to fuck?\"\n\n\"Both,\" I say, giggling.\n\n\"I can live with that,\" he says, grinding his hips a bit.\n\nThat grinding motion makes me grunt, and my hips involuntarily lift to meet him, eliciting another moan out of him. \"Show me whatcha got, straight boy.\"\n\n\"You just love that, don't you?\" he says with a soft laugh, his face flushed.\n\n\"Yeah, kinda,\" I murmur, sliding my hands up his thighs to hold his sides. \n\nHe takes it much more easily now, his face looking less strained and more pleasured as he grinds into my lap. For a minute, that's all he does until he slowly starts raising and lowering himself, just a couple inches at a time. Up and down, up and down. We can't even speak. The only sounds that come out of us are groans and moans and grunts and sighs as we grip each other. God, he feels fucking good. I'm not sure if it's the alcohol or him actually loosening up really well, but even I feel fuller inside of him. It's like we're becoming whole, crossing that final line with each other, connecting in a way we haven't prior to tonight. This is special. This is fucking love.\n\nAnd then, when he takes my face in his hands, leans down, and kisses me deep, I nearly melt. His sloppy but eager lips-and-tongue action almost distracts me from the hard-on grinding against my stomach, and I hold onto his sides to pull him in closer in order to give him that added friction. We hug each other close as we both grind and thrust, no longer caring about smooth motions. With this, it's just about following what our bodies need - and they need to touch, kiss, and connect.\n\nI don't know how much time passes, but I start panting against his lips when I feel that tingle in my groin growing stronger. I'm close. \"Adam,\" I murmur.\n\nHe breathes heavily against me as he speaks. \"Yeah, baby?\"\n\n\"I'm gonna cum.\"\n\nHe grins softly, pecking my lips again. \"Cum in me.\"\n\nFuck. Don't need to ask me twice. Adam sits back up and grinds harder into my lap, really digging in as if desperate to get that last full inch in. I close my eyes as I feel that wave of euphoria starts to wash over me, my cock throbbing so intently it almost hurts. I cry out softly, letting little high-pitched moans escape me as Adam slowly rocks his hips and coaxes my load out of me.\n\nAfter I finish pumping out upwards of ten shots, Adam slows to a stop with a tender little half-smile on his lips. \"That was a major fuckin' load,\" he murmurs. \"I could feel it.\"\n\nI breathe out heavily, laughing slightly. Fuck, I could just sink into this bed forever. \"Yeah, so could I.\"\n\nHe chuckles a bit before leaning down to kiss me again. \"Thank you for doing this with me,\" he whispers.\n\nI smile, kissing him again. \"Any time, handsome.\"\n\nThere's a little twinkle in his eye for a moment before he very slowly pulls off of my cock. I expect him to lie down next to me or something, but all of a sudden, he spreads my legs and lifts them back. It catches me off-guard enough for me to flinch. \n\n\"What are you doing?\" I ask.\n\nHe looks up at me as if confused. \"It's your turn,\" he says as if it was the logical next step before he dives right into me face-first. I swear under my breath, practically feeling my hole flutter against his tongue. I thought I was far too exhausted after that orgasm, but fuck, my body's singing. As he easily slips his tongue inside of me, I feel a warmth flood my entire being. There's this odd sense of calm that takes over me, and I just smile softly to myself while Adam rims me slowly. Maybe it's because I know what's coming: Adam's going to make sweet, sweet fucking love to me.\n\nHis movements are far slower than usual, but it's clear that he's taking his time and relishing what he's doing - and God, I'm happy for it. Even though I just came, I feel my cock hardening again. I ignore it for now, though. I just want to focus on the pleasure my man is giving to me: that intimate, soothingly electric tongue massage. He hums consistently against me, never once pulling his mouth away - not even for a second. There's constant pressure, and therefore constant pleasure, and my hole opens up for him like it always does.\n\nOnce again, Adam grabs for the KY, lubing me up much like I did for him: slowly and tenderly. I hum deeply, feeling his expert fingers slip in and rub my G-spot just right. Thank God for his old profession. Whatever he learned on the job, I'm benefiting from. Fingers seemed to be his escorting specialty. I can't even count how many times Adam's made me cum with only his hands and my hole. \n\nWhen he removes his fingers, I whine in protest before I hear that soft squelching noise of him lubing up his cock. He smirks down at me while he preps his cock, working every hard inch with smooth, practiced motions. Then, when my anticipation is at its highest, he positions himself between my legs, pushes my thighs back a bit, and then slowly starts to ease himself in.",
        "Being a practiced bottom makes it easy for us to find a steady rhythm right off the bat, but it's clear Adam's feeling the tender side of things today. He plunges in fairly quickly so that we meet fully, but then, once buried, he leans down to kiss me. There, he starts rocking his hips unhurriedly, smoothly, grinding and really feeling me out. I pant as we work with and against each other, digging my heels into his ass to get him to fuck me even deeper. Fuck, it hits me just right: the thickness, the length, the way he stimulates my prostate, the way he so perfectly completes me. He's just big enough for me to feel like he's *almost* too big, just toeing that line, testing my limits - and I find it thrilling. It gives me chills all over.\n\nAnd then he whispers three words against my lips: \"I love you.\"\n\nI smile brightly at him, sliding a hand up to tightening my fingers in his hair. \"Love you back,\" I tell him.\n\nI swear he doesn't just chuckle: he *giggles*. He leans down and kisses me again, humming briefly against my lips before he remembers something. \"Oh, and, on another note, I'm close.\"\n\nI don't know why, but I burst out laughing, pulling him even closer to me as I wrap my legs around his waist. \"Give it to me, baby.\"\n\nHe hums against my neck before kissing it deeply and starting to thrust a little harder. Not too long after his little announcement, I feel the muscles in his back tensing a little more, flexing under my palms and fingertips. I pant softly in his ear as his groans get a little deeper before finally, he plants himself in me as fully as he can and hits his climax. I sigh softly, nibbling on his earlobe as he empties his balls into me: the final orgasm of our trip.\n\nIt takes him nearly a minute to catch his breath. Then, he gasps out and laughs to himself as he comes down from his high. \"God-fucking-damn, Teddy,\" he breathes out, shaking his head as he lifts himself up a bit and hovers over me.\n\nI just laugh, running my hands up and down his chest. \"What?\"\n\n\"You ruin me,\" he murmurs, leaning down to kiss me again. \n\nI just grin against his lips. \"I don't mean to.\"\n\n\"Whatever,\" he mutters, clumsily rolling off of me, grunting, drunk, chuckling to himself.\n\n\"Don't be mad at me,\" I say with a little smile, turning my head towards him.\n\nHe just snorts. \"Mad? Please. I'm... happy,\" he says softly. \"So fucking happy.\" Then he turns to me with a fat smile stretched across his face. \"I don't wanna leave this cabin ever.\"\n\nI laugh, shifting onto my side. \"We don't have to until morning,\" I tell him.\n\n\"Let's just lie here and cuddle, yeah?\"\n\nHe's so boyishly cute sometimes that I could pinch his cheeks. \"Who's the teddy bear now?\" I tease before sliding closer to him. \n\n\"You're always gonna be my teddy bear,\" he says with a grin, wrapping an arm around me and pulling me close. I rest my front up against his side as he keeps to his back, only tilting his head up to steal a kiss from me. After, I drape an arm across his torso, laying my head on his shoulder and smiling gently to myself.\n\n\"I'm fine with that,\" I murmur.\n\nI hear Adam chuckle before he kisses the top of my head, lightly dragging his fingertips up and down my back. We just lie there in relative silence, sharing warmth and soft touches, keeping close. I'd be perfectly content falling asleep like this and not saying another word, but Adam speaks up after a minute or so. \"Ever think about how far we've come?\"\n\nI almost laugh. \"You mean from charging me for sex to giving me free sex?\"\n\nHe lightly slaps my back to chastise me. \"No, dumbass,\" he says, laughing. \"I mean... Okay, yeah, that's part of it, but I just mean in general.\"\n\n\"I know,\" I say with a grin, kissing his shoulder. \"Been thinking about it lately?\"\n\n\"Of course,\" he says. \"I've been wanting to tell you how I feel for a while now, just couldn't muster up the courage.\"\n\n\"You and me both,\" I murmur, running my hand around his torso in one smooth circle. Adam hums approvingly in response. \"I'm glad you told me first, though. Otherwise I probably never would have said it.\"\n\nAdam laughs, squeezing me a little. \"I figured as much. That's kinda why I went for it.\" Then he chuckles again. \"It was almost stupid of me to toss that at you on your birthday, but I think it panned out pretty well.\"\n\nI grin to myself as I play with his happy trail lightly. \"Hear, hear,\" I tell him. \"Best birthday I've had in a while.\"\n\n\"I'm glad, baby,\" he says softly, kissing my head again. \"And I'm so fucking glad we got to do this trip.\"\n\n\"Mmm, me too,\" I hum, unable to stop smiling even if I tried. \"I wanna look at all the pictures we took.\"\n\n\"Ooo, good idea,\" he says before sitting up slightly. \"I think my phone's in my bag.\" Throughout our trip, Adam's phone has been our go-to camera since his phone takes much higher quality photos than mine does.\n\nI would have grabbed it myself, but before I can move, he slides away from me and hops out of bed to grab his mini-backpack. He starts sifting through its contents and, after a few seconds, begins muttering to himself, seemingly unable to locate his phone. Eventually, he sighs in frustration and ends up upending the bag onto the bed. Out spill his cell phone, his wallet, a water bottle, some snacks and trinkets we bought throughout the day, his charger, loose change, and a little box... a little black, velvety box... perfect for something small...\n\nMy eyes fall right on that little box and nothing else - and all of a sudden, I feel something tighten in my throat. Maybe it's my chest. I can't really tell. \"What's this?\" I manage to ask.\n\nAdam looks over at my hands before his eyes go wide. \"Shit!\" he hisses, quickly snatching the box away from me before I can snag it. \"You weren't supposed to see that.\"\n\n\"But what is it...?\" I ask, blinking a few times before I look up at him.\n\nAdam chews on his bottom lip and stares at me for several seconds before sighing heavily through his nose. Then, he smiles, laughing slightly. \"Guess it's right now, huh?\" he says quietly to himself before looking at me. \"I didn't wanna do this drunk, you know,\" he tells me, popping the lid off the box - and just as I dared to expect, it's a ring. A fucking ring. Immediately, my chest both tightens and explodes. The fuck is he doing? \"Nor did I wanna do this naked,\" he adds with a laugh.\n\n\"I... Do what?\" I ask, my voice sounding small and choked. My heart is pounding, pounding, pounding.\n\n\"To... to ask you to marry me,\" he says slowly before clearing his throat. \"I had this whole thing kinda semi-planned out. Was gonna wait 'til how you responded to the 'I love you,' so... check on that,\" he says, holding up a finger. \"Then I was gonna take you to that restaurant you like. That little French one, where we kinda sorta had our first date? I'd probably hide it in some red wine or the cheese since you're kind of a cheese slut.\" He gives me a grin, throwing up another finger. \"But also that's kind of public, and I know you don't like that sort of thing, so I kept debating on whether or not to, like, just get takeout or something, but that didn't seem romantic enough, and I started stressing about the where and the how and just decided to keep the ring on me in case the moment ever just *struck*, and... well...\" He smiles at me sheepishly. \"Guess here we are.\"\n\nI don't know what to say. I don't know what to do. I'm naked in bed with my equally-nude boyfriend mid-proposal. That's what's happening, right? He's proposing? \"Adam...\" I start to say.\n\n\"Sorry. Right,\" he says, though I'm unsure what he's referring to. It doesn't matter, though, because he quickly gets down on one knee and smiles up at me, all teeth. It's so goofy because of how intoxicated he is, but God, he's so fucking adorable. \"My beautiful, funny, tender, tortured Teddy Bear,\" he says - and I immediately burst out in a mix between a laugh and a sob. I'm definitely crying, at least. I can feel a few tears streaming down my cheeks, and my watery eyes are starting to blur my vision. \"I love you,\" he says, eyes totally focused on me as he holds out the ring towards me, his elbows resting on the edge of the bed. \"I love you, and I've never been so sure about something as I am about us. We feel right. We feel important. And honestly, you might not agree, but I kinda feel like we were made for each other.\" He chuckles softly - the only time he breaks eye contact for a moment. \"Call me sappy all you want, but I fucking love you, and I want everyone to know it.\"\n\n\"I can't believe thi-\"\n\n\"I'm not done,\" he interrupts, playfully chastising me for even thinking about cutting him off. I start laughing again, the tears flowing even more now. I'm tingling. I can't tell where the source is, but my entire skin is vibrating lightly as Adam clears his throat to continue speaking. \"So... Teddy Cohen... Will you marry me?\"\n\nSuddenly, thoughts of Miguel swarm my head. My beautiful Miguel, who unintentionally rendered me a widow, who was, in my eyes, the epitome of a lover, who I truly believed would have been my greatest and my final romance. For a year, I never thought I'd recover. I'd given up on love and sex and relationships, because the hurt was still too heavy to ignore. \n\nAnd Adam so effortlessly lifted that weight off of me. I fell in love with him not through him trying to court me but from him just feeling comfortable enough to be himself, even through a \"professional\" relationship. Before him, I never wanted to open up again. I never wanted to be as close to someone as I was with Miguel, because I couldn't stop comparing everyone to my ex. I couldn't let go. I thought that man was my soulmate, my one and only. And now Adam is here, proving me wrong. I *can* love and be loved again. And I will.\n\nThrough the tears, and the smile straining the muscles in my cheeks, and the fight to hold back blissful, full-of-love laughter, I utter one word: \"Yes.\"\n\n- The End -"
    ],
    "authorname": "ruetheben",
    "tags": [
        "gay",
        "gay male",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/you-get-what-you-paid-for-ch-06-final"
}