{
    "title": "Saturday Night School",
    "pages": [
        "As Charlie Tucker pulled into the parking lot of the school, he wondered, as he often did on Saturdays, what other seniors did on their Saturday nights. Was he missing out on anything that he would later regret? Wild parties, like in the movies, where parents were out of town and everything was chaos? Or were those types of parties just fiction, and everyone was sitting at home on their computers or binging on TV?\n\nHe had two juniors assisting in the AV room, Dinesh and Michael, and those two had a crew of friends that seemed to go to the movies every weekend. Every Monday, they would be talking about the new movie they'd seen. Even if all the movies in the theater were crap, they'd go and see a crap movie.\n\nDinesh had asked Charlie to come with them a few times. But Charlie always declined. If seeing crap movies was the only thing he missed on Saturday nights, then it wasn't any great loss.\n\nCharlie drove straight across the school's parking lot, ignoring the white lines that delineated the spaces. The lot was almost completely empty, except for a red pick-up truck near the front double-doors of the school. \n\nCharlie grinned when he saw that truck. He grinned because he knew it was a trick. Daryl Kramer, weekend security guard and owner of the red truck, was currently at a resort in Miami on a two-week vacation. Instead of hiring a replacement guard while Daryl was out, Principal Edwards had asked Daryl to park his truck at the school as usual, so that it would appear he was still on duty.\n\nCharlie pulled around the school to the back. He liked Daryl. Sometimes, when Charlie worked late in the AV room on the weekends, Daryl would stop by and they'd chat. Daryl was bored patrolling the empty school on the weekend, and he liked to watch Charlie splicing together video in the school's editing bay. \"Move to Hollywood after you graduate, Charlie... that's where you belong!\" the guard always said. Charlie would just smile. Deep down, he knew that the guard had no perspective to praise his work, but Charlie appreciated the kind words all the same.\n\nCharlie pulled his car up next to an unmarked green door in the back of the school. He got out of the car and walked to the door, fishing his keys out of his pocket. He unlocked the door, pulled it open and propped it with a concrete block. Returning to his car, he popped the trunk and began to unload the camera equipment.\n\nThe closet in the AV room also required a key. It was a deep closet, big enough that it could be a small bedroom. High industrial shelving lined the walls. Each piece of equipment had a designated location on a shelf. Charlie liked things to be organized. As he brought each piece of equipment in and placed it on a shelf, he signed it in on a clipboard that hung just inside the closet. \n\nAfter everything was brought in, Charlie locked the green door and brought one of the cameras into the editing bay. He hooked it up to the main computer and started downloading the footage. It was the varsity girl's basketball game, and he had set up three cameras on tripods and carried a fourth. Not a significant basketball game, the team had lost by twenty-two points and their record was 4-11. But Charlie still downloaded all the footage from the four cameras and began to edit it together. \n\nThe AV room had a small window, but it only showed the hallway. Charlie couldn't see outside, and couldn't see the daylight fading. The time in the bottom corner of his computer monitor was the only indicator that night had settled onto the school. Charlie kept an eye on the time. He knew he could sometimes lose himself in the work and let the hours fly by, and this weekend he didn't have Daryl to urge him to go home.\n\nHe was staring at the computer screen with the headphones on when movement flickered in the corner of his eye. He glanced towards the window and saw something just as it passed the edge of the window. Not something, someone. Someone was in the school with him, and they had just passed by in the hall.\n\nCharlie hadn't turned on the lights in the AV Room, and the only light was the glow from his computer monitor. Had the intruder been spying on him through the window? Or had the AV Room appeared to be just another dark empty room from the hallway? He suspected the latter. \n\nCharlie approached the window and peered out. He could see a figure walking down the hallway. Long dark hair, almost to the waist. A girl. Charlie squinted through the blurry glass, trying to decipher what he was seeing. Did he know her? The girl was walking away from him. Her arms were bare and swing by her side in a slow and exaggerated way. She had long legs that were left exposed by an incredibly short skirt. Charlie blinked for a moment, trying to decide where her legs ended and the skirt began. How could a skirt be that short? The girl turned a corner and disappeared from his view. She was headed toward the main office and the intersection of hallways that everyone called the \"Front Tee\".\n\nCharlie considered his options. He could phone the police and tell them someone had broken into the school. But he didn't know for sure that this girl had broken in. Maybe she had a key like he did. Maybe she was a teacher, or some other school employee.\n\nIt wasn't like she was a man in a hockey mask. Charlie decided he would follow the girl and see what she was up to. If she had a legitimate reason to be there, then that was fine. He could tell her that he also had a legitimate reason to be there. He definitely didn't want her to get spooked and call the police on him!\n\nCharlie stepped out of the AV room into the hall. He walked slowly in the direction that the girl had gone, alert for any sounds. If she had broken into the school, then there was a chance she wasn't alone, and he didn't want to be surprised by other intruders. \n\nHe reached the corner and peeked around it, towards the Front Tee. What he saw astonished him, and for a moment all he could do was stare. The girl was standing in the Front Tee, facing towards the front of the school, with the office at her back. She was fifty feet away, but he still recognized her immediately.\n\nMichelle Santos. Beautiful Michelle Santos. At lunch just a week before, Greg Arden had noticed Michelle entering the cafeteria and had remarked, \"Damn, that Michelle Santos always has something on, doesn't she?\" Charlie even remembered what she'd been wearing, a skin-tight pair of jeans and a lacy white blouse that could have been specifically tailored to cling to her breasts. Michelle Santos never threw on a t-shirt and jeans in the morning like some of the other girls. She always came to school looking like she'd spent the morning with a stylist and a make-up artist. \n\n\"That Michelle Santos always has something on, doesn't she?\" Those words echoed in Charlie's mind, because the Michelle Santos he was seeing had nothing on at all. The reason her skirt had seemed so short was because she wasn't wearing a skirt. She was standing in the Front Tee completely naked.\n\nCharlie couldn't do anything but trace her body with his eyes. It was like a dream. She wasn't trying to cover herself; in fact, she looked like she was posing, her feet apart, one hand on her left hip, the other hand at her mouth where she was biting her finger. Her body was flawless. Her legs were impossibly long and smooth, a dancer's legs. He followed them up to her waist then let his eyes pass over her flat tummy to linger at her perfect breasts. \n\nHe was captivated by them. How many times had he seen Michelle wearing something tight or low-cut, offering a tantalizing glimpse of those breasts? How many times had he stared at her chest, trying to imagine what those breasts looked like under the fabric? Now they were right there in front of him, swelling and falling with every breath she took, and he could scarcely believe it. \n\nEverything about Michelle radiated graceful femininity. Her long, delicate limbs. The way her dark hair fell onto her bare shoulders. The way she perched on her toes. Even the soft flutter of her eyelashes. Charlie could have stared at her forever.\n\nBut the way she stood, as if posing, made him wonder if someone else was present. Someone standing unseen by the front doors to the school, taking a pictures of Michelle. Maybe taking a video. Did Michelle have some boyfriend who had pressured her into doing this?\n\nCharlie stepped around the corner. She hadn't noticed him, her eyes focused on what was in front of her. He stepped closer, keeping close to the wall at his left, hoping to disappear among the line of brown lockers. He leaned in, trying to see down the school's front hallway, looking for the shadow of another person. Michelle had both hands behind her head now, combing her long hair with her fingers, letting her breasts jut out. Was someone snapping picture after picture of her, playing the fashion photographer while she went through poses?\n\nCharlie inched closer. The school was quiet, and he knew for certain that his careful footfalls didn't disturb the stillness. It wasn't that she heard him. It just happened that she chose that moment to turn in his direction, perhaps to continue her naked walk through the school. She was looking directly at him, and their eyes met.\n\nHer eyes widened and her mouth fell open. \"Charlie!\" She blurted. He had a half second to admire her body from the front, and then she crumpled to the floor. She shrank into a tight ball, her arms crossed tightly over her chest, her eyes still wide as she stared at him. \n\n\"Michelle?\" Charlie almost continued with: What are you doing? But he quickly realized that it was a stupid question. He could see now that she was by herself. Whatever she was doing, she was clearly embarrassed to be caught doing it. He didn't need to hear her try to explain it. Maybe it was better if he didn't know. \n\nCharlie had a sudden idea, a different strategy. He pitched his voice as a low whisper. \"Don't tell anyone you saw me, okay? I thought the school would be empty... I didn't know you'd be here....\"\n\nShe blinked at him, still frozen. \"I didn't think anyone would be here...\" She matched his whisper.\n\n\"I shouldn't be...\" Charlie looked over his shoulder, as if nervous that he was being followed. \"I broke in. I knew the security guard is off today... so I broke in. Please don't tell anyone...\"\n\n\"I won't tell anyone if you leave now.\" Michelle didn't even want to look at him. Her eyes darted between peeking up at him and looking at the floor, and her face was flushed. \"Just go. I promise I won't tell.\"\n\nCharlie gazed at her, wondering how long she could remain in that crunched-up squatting position. He had the feeling if he walked over and gave her a slight nudge, she would fall over. \"Did you break in, too?\" \n\n\"No. I have a key.\"\n\n\"You do?\"\n\n\"I'm the head of the spirit squad. They gave me keys.\" She still wouldn't meet his eyes while she talked.\n\n\"No kidding.\" Charlie had never seen her at the school on the weekend before. \"Is this the first time you've walked naked through the school?\"\n\nMichelle blushed furiously. \"Yes.\" Her voice was so low he could barely hear her. \"I didn't think anyone would be here. I knew the security guard wasn't here today...\"\n\n\"No one was here, so you decided not to wear clothes?\"\n\nShe looked down at the floor and didn't answer.\n\n\"Where did you take off your clothes?\" he asked.\n\nShe peeked up at him. \"Down the hall. Will you turn around and face the wall behind you? And close your eyes. I'll go get my clothes and get dressed. Then we can talk, okay?\"\n\n\"No.\"\n\nShe blinked. \"No?\"\n\nCharlie shrugged. \"Sorry. You're naked in the middle of the school, by your own choice. And you're also the most beautiful girl in the senior class. If you think I'm going to close my eyes and pass up the opportunity to see you, you're crazy. If you want to get your clothes, go ahead, but I'm not going to look away.\"\n\nMichelle inhaled sharply and her body seemed to quiver. She clutched her arms to her chest and her hands slid up and down on her forearms, almost as if she was trying to warm herself. Charlie could hear a shake in her breathing. He had spoken the first words that had come to his mind, and it surprised him that they had such an effect on her. He watched her with dread, expecting that she would start to cry and he would feel like the worst asshole to have ever lived.\n\nAbruptly, she lifted her eyes and met his gaze. Her eyes were wide but not wet. To his astonishment, she slowly began to rise, unfolding like a flower blooming. She kept her arms over her chest, but extended and stretched her long legs. Charlie knew he was staring, but he couldn't help himself. His heart pounded in his chest when he glimpsed that spot between her legs, a dark line of trimmed public hair leading down to the visible crease of her pink slit. \n\nThis is a dream, he thought to himself. This has to be a dream. \n\nMichelle stood in front of him, with her arms crossed over her breasts but the rest of her body completely visible. Then she abandoned even that modesty, lowering her shaking arms to her side and giving him an unobstructed view of her pert breasts. \n\n\"Okay?\" Her voice wobbled.\n\nCharlie couldn't speak, but managed to nod. It was more than okay. He felt self-conscious staring at her, but her perfect body drew his eyes like a magnet. He tried to keep his eyes on her face, but inevitably would find himself drifting to the swell of her breasts, or her smooth legs, or the curve of her hips. To see her was to imagine touching her, and he felt certain her skin must feel soft as silk. He felt himself stiffening, and hoped Michelle couldn't see the bulge in his jeans.\n\nIncomprehensibly, Michelle stood naked in front of him, motionless except for a nervous twitching of her hands and the visible shake of her breathing. It was similar to the way he'd seen her standing in the Front Tee. Like she was posing, a naked manikin in the middle of the school hallway. Her eyes were fixed on his face, and he knew that she could see every time his line of sight dipped below her neck. She could probably tell exactly which part of her he was examining. It made him feel a little self-conscious, but not enough to look away.\n\nShe finally spoke. \"I'm going to find my clothes now and get dressed. Okay?\"\n\n\"Yeah. Yeah, of course.\" Charlie nodded. The show was over.\n\n\"I'm going to walk past you. My clothes are behind you.\" She rolled her eyes to the side, examining the wall. \"I suppose you're going to stare at me until I get dressed.\"\n\n\"Actually, I'm going that way myself. I was in the AV room.\"\n\n\"Let's go, then. You first.\"\n\nCharlie reluctantly turned and started back to the AV room. He couldn't tell if she was following him or not. When he reached the corner, he glanced over his shoulder and saw her tiptoeing timidly behind him, her bare feet silent on the linoleum floor. \n\n\"How long have you been here?\" he asked.\n\n\"I just got here.\" She paused ten feet behind him, waiting for him to start moving again. So he did, but walking sideways so he could look back at her. \n\n\"How did you know the security guard wasn't here?\" he asked.\n\n\"Mrs. Eliot told me.\"\n\n\"She did?\"\n\n\"Yeah. She told me, be careful if I stopped by the school alone on the weekend, because the security guard wouldn't be there. But his truck would still be parked out front.\" Michelle bit her lip. \"How did you know he wouldn't be here?\"\n\n\"I overheard him talking about going to Miami on vacation.\"\n\n\"So you knew he wouldn't be here and you broke in.\"\n\n\"Yeah.\"\n\n\"Broke in to do what?\"\n\nCharlie hesitated, but an answer came to him quickly. \"To use the editing bay in the AV room.\"\n\n\"What? Why?\"\n\n\"There's a secret stash of porn videos on the hard drive.\" It was a true statement. Every AV employee knew about the secret library. No one knew exactly who had put it there, or if any of the teachers were aware of it. Charlie suspected one of the previous students had stashed the footage there to edit together some kind of \"Greatest Hits of Porn.\" None of the AV crew spoke about it outright, but Charlie had overheard veiled references to the library and its contents, and he knew he wasn't the only one who knew about it. \n\nHe continued, \"I wanted to copy some of the files off the hard drive, try and edit them together.\" He was pleased with this explanation. It sounded plausible and didn't involve him doing anything illegal, other than the breaking and entering.\n\n\"Oh my God,\" Michelle breathed. \"They let you keep porn on the computers?\"\n\n\"It's tucked away on a drive. I don't know if any of the teachers even know it's there. I only found it by accident.\" Charlie reached the door to the AV Room and stopped. She also stopped, ten feet up the hall, watching him.\n\n\"Well...\" he said, reluctant to return to his computer. \"I didn't see you if you didn't see me. Right?\"\n\n\"Right,\" Michelle whispered. \"Thanks.\" Her hands were on her upper legs, tracing tiny lines with her fingers. She stepped forward, still on her tiptoes, and Charlie eased into the doorway to allow her a clear path past him.\n\nBut to his surprise, she crept forward to stand right in front of him. He could barely breath, never having stood so close to a naked woman before in his life. \"Will you show me?\" she asked.\n\n\"Show you?\" Charlie could barely concentrate.\n\n\"The porn you were looking at. Can I see it?\"\n\n\"Um... okay. If you want.\" He stepped backwards into the dark room. Michelle stood for a moment, still tracing lines on her upper legs with her fingers. Then she stepped in after him.\n\nCharlie returned to his familiar chair in the editing bay. The monitor still showed paused footage from the basketball game he'd been editing, what seemed like forever ago. Michelle found another rolling chair and pulled it up next to his. She perched in the chair, her palms resting on her legs, her breasts so close to him that he could clearly see a freckle above her right nipple. He hoped that she didn't notice his hand shaking as he moved the mouse.\n\nHe saved and closed his work, then navigated to the hidden folder. Thumbnail images of the different porn scenes appeared in the directory. They all had vague names, like DLHRY2342 and PBRTS7231. He opened the first one. \n\nA woman appeared on the screen, lounging beside a swimming pool in a tiny bikini. A man with a dragon tattoo on his bicep walked into the scene and crouched next to the woman. He began rubbing sun tan lotion onto her shoulders. Very quickly, the woman's bikini was off and they were both kissing and fondling each other.\n\n\"Oh my goodness!\" Michelle watched with wide eyes.\n\n\"You've watched porn before?\"\n\n\"No. God, no.\" Michelle glanced at him. \"Will you open the next one?\" \n\nThe next video had two women kissing on a couch, and Michelle asked to skip to the next one almost immediately. They continued down the directory, opening video after video. Some of them they would watch a minute or two, while others Michelle asked him to skip immediately. \n\nA few they lingered on. One had a couple undressing and having sex in a library. Michelle leaned forward, and Charlie couldn't help but notice the way her breasts swayed when she moved, and how they came tantalizingly close to brushing his arm.\n\n\"Do you think that's a real library?\" she asked.\n\n\"It looks pretty real.\"\n\n\"With people in it? Studying and reading while they filmed this?\"\n\n\"No. They wouldn't do that. I don't know, maybe it's not real. Maybe it's just a set.\"\n\nAnother had a group of men and women playing strip poker. The women seemed to lose every hand, and quickly ran out of clothes to take off. They started to perform dares after each lost hand. One woman was dared to drink water from a bowl like a dog. Another woman was blindfolded and led outside naked.\n\nMichelle inhaled audibly. \"Oh! Look! A car drove by!\"",
        "\"Where?\"\n\n\"Rewind. Back there!\"\n\n\"Oh, yeah. Too far away to see anything, though.\"\n\n\"But it means it's real! They really took her outside where someone driving by could see her!\"\n\n\"Yeah, seems like they did.\" Charlie glanced at Michelle. She was clearly enthralled by the video, and it gave him the opportunity to let his gaze linger on her body without being noticed. She was sitting with her legs together, but he could still see a sliver of dark pubic hair just below her belly button. He followed the line of meticulously groomed dark fuzz to where it disappeared in the valley between her legs. Her nipples were stiff pink points, with areolas the size of half-dollars. He could smell a flowery scent coming off her, a subtle perfume. \n\nShe had her palms still on her upper legs, and she was sliding her hands forward and back, forward and back. She'd been running her fingers up and down her legs since the moment he'd first caught her. A nervous habit, maybe.\n\nNo, Charlie corrected himself. Not a nervous habit. A reminder. She was touching her bare legs to remind herself she was naked.\n\n\"Michelle, did you have this planned?\" he asked her. \"Or was it spontaneous?\"\n\n\"Hmm?\" \n\n\"Did you come to the school knowing you were going to walk around in the nude? Or did you come here, realize you were alone, and just went for it?\"\n\nShe shifted uncomfortably. \"Um... a little of both?\" She peeked up at him. \"Haven't you ever had that fantasy dream, where you suddenly find yourself walking through the crowded school and you're completely naked?\"\n\n\"I've had a dream like that before, yeah...\" he said slowly. Dream? More like a nightmare. Stark naked in the middle of the hall, everyone pointing and laughing, feeling totally humiliated... It was the kind of dream where he felt relieved to wake up.\n\n\"It's something I always think about,\" Michelle whispered. She watched Charlie closely for his reaction. \"Maybe I'm crazy, I don't know. Sometimes when I'm walking into class, I'll think about what it would be like if I just didn't bother wearing anything that day. If I walked into the school completely naked, not even caring, and how everyone would stare and point at me... and I feel so thrilled inside, just to imagine it. I can't explain it... I try to tell myself that the reality would be terrible... that I'd probably get expelled from school and every one would think I'm some kind of insane sex fiend... but it never stops me from fantasizing about it...\"\n\nHer eyes implored him for reassurance, so Charlie shrugged and nodded. \"Sure. Thrill of the forbidden, thrill of danger. When we had to take PE, I used to always think about sneaking into the girl's locker room and trying to see them showering. Same thing... I'd get expelled and everyone would think I was a pervert. But that didn't stop me from trying to think of a way to do it.\"\n\nMichelle frowned. \"Yeah... but every boy probably thinks about that, right? I don't think every girl thinks about what I think about...\" She bit her lip.\n\nCharlie couldn't help himself. He chuckled, letting his eyes drift down her body. \"Yeah, too bad, huh?\"\n\nMichelle giggled, and Charlie knew that he'd managed to say the right thing. She leaned forward. \"A few weeks ago, I came so close. It was after school. I ran a mile on the track, and then I went to the locker room to shower and change. Only after I finished showering, I came back to my locker and put my towel away, and instead of putting on my clothes, I took out my backpack and closed the locker. I couldn't believe what I was doing. I started to walk out of the locker room, completely naked, and I knew I had to stop but it was so exciting to keep going. Is there a drinking fountain, just inside the boy's locker room?\"\n\n\"Uh... yeah. Right by the door.\"\n\n\"Same with the girl's. I stopped at the drinking fountain for some water. Then I turned right around, went to my locker and got dressed.\"\n\n\"You didn't go out the door?\"\n\n\"No. I came to my senses before I actually walked outside. But I wanted to go outside. It scared me a lot. Just knowing that I could feel a sudden impulse like that and be so powerless to stop it... even though it would have completely ruined my life... it's scary!\"\n\n\"How do you think you would have felt, if you had walked out of the locker room that way?\"\n\n\"Oh, it would have been amazing!\" Michelle answered quickly. But then she averted her eyes, embarrassed by her display of enthusiasm. She spoke in a low voice, \"It's like being addicted to a drug. I mean, I've never done drugs, but I think it's the same. I know it's a bad thing, I know it's self-destructive, but even with all that...I wanted to step out that door so bad...\" Her voice trailed off.\n\nCharlie thought about seeing her naked in the Front Tee, the way she had posed. If this was an addiction, like being addicted to drugs... did that mean he was seeing her on a high? \n\nMaybe that explained the leg rubbing?\n\nThe whole situation was surreal. Michelle Santos, a girl so beautiful that he had never even dared to dream of her, sat naked in the AV room with him. And then, on top of that, he had to entertain the idea that she felt such a thrill at being naked in front of him that she compared it to being high on drugs? That was beyond belief. It had to be a dream.\n\nHe suddenly felt such an urge to reach out and press his hands against her breasts that his body trembled. His penis, partially erect, began to rapidly swell and strain against his jeans. He turned in his chair, praying that she wouldn't look down and notice.\n\nShe doesn't know me, he reminded himself. I don't know her. This thing of hers... it isn't really about me. I just happened to be here.\n\nBut he knew her secret now. And he suspected he might be the only one she had ever told.\n\n\"Let's try something,\" he said. \"I'm going to go back up the hall to the Front Tee. You stay here, count to fifty. Then follow me.\"\n\n\"Um... okay.\" She was confused. \"I'll probably go get dressed first, though.\"\n\n\"All right.\" Charlie didn't look at her as he stood and walked out of the AV room. He smiled to himself.\n\nShe wasn't going to get dressed, and they both knew it.\n\nCharlie turned the corner towards the Front Tee and stopped a quarter of the way down the hall in front of his locker. He tried to imagine it was Monday morning and he was early to school. People were around, here and there, but the halls were still pretty empty. He turned the combination lock and opened his locker. A row of books sat on a shelf at eye level. Calculus, a few novels for European Lit, a book on set building for his Theatre Tech class. Calculus was his first period class so he picked up that book.\n\nIn his peripheral vision, a figure came around the corner. He looked that way, casually, as if just curious to see who else could be at the school that early. It was Michelle, of course, and she was still naked. He pretended she was a surprise, that he'd never seen her naked before until that moment. It wasn't hard to put himself in that frame of mind; he definitely wasn't used to seeing her so exposed. Monday morning, he was early to school, and Michelle Santos had just walked around the corner completely naked. He let his eyes go wide and his mouth fall open. The Calculus book slipped from his grip and banged on the floor.\n\nMichelle froze, not getting what he was doing at first. Then she realized, and she giggled. \"Oh, you're silly!\" he heard her murmur. But she went with it, strutting by him as if she was headed towards the office, nodding at him slightly. He openly stared at her breasts until she passed, then enjoyed watching her ass sway back and forth while she walked away.\n\nShe walked almost to the Front Tee, then broke character and returned, grinning.\n\n\"You'll just have to imagine the others staring at you and pointing,\" he said. \"Unfortunately, I can only do the Charlie Tucker reaction.\"\n\n\"Thanks. I chickened out the first time you caught me. It's much better when I just walk by you like I don't have a care in the world.\" She couldn't hold still, bouncing on her toes in a way that made her breasts shiver delightfully. \"Can we do it again? I won't be shy this time.\"\n\n\"Okay.\"\n\n\"I'll count to fifty.\" Michelle darted away, walking on the balls of her feet like a cat. She disappeared around the corner.\n\nThis time, Charlie closed his locker and started towards the corner carrying his Calculus book. He timed it so he was just about at the corner when Michelle appeared. He stopped in his tracks and stared at her, letting the book fall out of his hand. She smiled at him flirtatiously as she passed. He remained in place, watching her from behind, until she twirled and ran back.\n\n\"How did I look?\" she asked. \"Did I look confident?\"\n\n\"Honestly, you looked sexy as hell.\"\n\nShe smiled and glanced away, embarrassed but clearly pleased. \n\n\"Let's go again,\" he said.\n\nThey slowly walked through the empty school, enacting the same scenario in different locations. Charlie would pretend to be having an ordinary day at the school, Michelle would appear naked and Charlie would look shocked. They experimented with variations. Charlie standing still while Michelle walked by. Passing each other in the hall. Charlie turning the corner to find Michelle leaning against the wall.\n\nThey tried one where Charlie was supposed to come around the corner and find Michelle leaning nonchalantly next to his locker. On impulse, Charlie played this one differently, walking up to his locker, opening it and retrieving his books without acknowledging her, as if it was perfectly ordinary for a naked girl to be standing there. To his surprise, Michelle was really excited after that one, and they experimented with variations on the theme, where Michelle would be waiting somewhere naked and Charlie would pretend to be going about his day as if nothing unusual was happening. \n\nDuring one of these variations, Charlie walked around a corner expecting to find Michelle sitting on a bench. To his astonishment, she was leaning back on the bench with her legs splayed open, her pussy clearly exposed to him. Charlie stopped, stunned. Michelle was immediately self-conscious, sitting up and clamping her legs together.\n\n\"You're supposed to pretend you don't see me,\" she murmured, blushing furiously.\n\n\"Sorry,\" Charlie said. \"Just... you took me by surprise.\" He could feel the blood pounding through his body. His desire for her, simmering for most of the evening, now roared to life, and his erection swelled quickly to the point where it hurt. He was positive that she could see the outline of it against his jeans, and there was no way to hide it. \n\nThe image of her smoldered in his memory, the way she had been leaning back, her legs apart, her pussy exposed like an offering. He imagined leaning between those legs, feeling them tighten around him. He imagined pressing his crotch against hers, grinding against her. Reaching down his jeans, pulling himself free and sliding into her waiting nakedness...\n\nHis testicles tightened and throbbed, and for a terrified moment he was sure that he was about to ejaculate in his pants, right in front of her. \"Please, please no,\" he prayed silently to himself. Fortunately, the pressure abated after a moment, but his erection continued to create a noticeable bulge.\n\nShe stood, and for the first time since he had caught her, she crossed her arms over her breasts. She kept her gaze on the wall. \"No... it's me that's sorry. See? This is what I mean...\" She bit her lip. \"I'd better go home. I had fun with you. But I should go.\"\n\n\"Michelle...\" he couldn't think of the words to say.\n\n\"It's all right, Charlie. It's not anything you did. I just... didn't intend to do so much of this... I should quit while I'm ahead.\" She started to walk down the hall, back towards the AV room. Charlie fell into step beside her. They walked back in silence.\n\nThey passed the door to the AV room and turned the corner to the science wing. Michelle stepped into one of the classrooms, and the motion-sensing light turned on. She had stowed her clothes behind the classroom door, which was propped open. Charlie entered with her, and sat on a table to watch her get dressed.\n\nShe stood in front of him, untangling a pink bra, and he gazed at her, trying to etch the image of her into his memory, knowing that this was most likely the last time he would ever see her standing casually naked in front of him. On Monday morning, the spell would be broken, and they would just be two strangers sharing a secret, a secret they would never discuss. \"Are those your keys to the school?\" he asked, noticing a key ring sitting on the desk next to her.\n\n\"Yeah.\"\n\n\"You have more than one key?\" Charlie only had one key himself, which opened the green door by the AV room.\n\n\"Oh, yeah. I have a few, for different things. One lets me into the main school, one is for the supply room, one is for the athletic building, one is for the art center.\"\n\n\"The athletic building? You can get in there?\"\n\n\"Yeah, of course. They gave me the keys because I lead the spirit squad. I unlock it for the cheerleaders so we can change into our uniforms. And sometimes we hang up banners around the basketball court... or decorate for pep rallies...\"\n\nCharlie stood. \"Well, hey... if you have a key... let's go over there!\"\n\nShe hesitated. \"Why?\"\n\n\"To explore! I've never walked around there while it's empty.\" He grinned. \"You can show me what the girl's locker room looks like inside. Didn't I tell you I always fantasized about going in there?\"\n\n\"Um... I guess we could. Just a minute, and I'll take you over there.\" She began to slip on her bra. \n\n\"Michelle.\"\n\n\"Yeah?\"\n\n\"You don't have to get dressed yet.\"\n\nShe paused, the thin straps of the bra hanging from her arms. \"But we have to walk outside to get there.\"\n\n\"That's true.\"\n\nShe clutched the bra in her fingers, squeezing it against her chest. \"That's too much. It's going too far.\"\n\n\"No one will see,\" he reassured her. \"It's past nine on a Saturday. The school is completely empty. Daryl is in Miami. The main building will block anyone from seeing you from the road, and no one's going to be driving through the parking lot.\"\n\n\"Who's Daryl?\" she asked, distracted.\n\n\"Daryl. The security guard. The one that's on vacation?\"\n\nHe could see by her rapid breathing that she was considering the idea. Her hands slowly dropped and the bra slipped from her fingers to the floor. She gazed into space, biting her lip. \n\nCharlie scooped up her keys and transferred them to his left hand. Slowly, gently, he reached out with his other hand and let his fingers wrap around Michelle's. He expected her to pull away, but she didn't. For a moment, he felt intoxicated by the intimacy of holding her hand.\n\n\"Come on...\" he urged her. \"When will you get another chance?\"\n\nHe stepped towards the door, pulling her. For a moment, she resisted, remaining frozen in place. Then she timidly took a step after him, letting him lead her back into the hall.\n\nShe didn't volunteer which door she'd unlocked to enter the school, so Charlie led her to the green door. \"Oh my God...\" he heard her whisper as he took hold of the doorknob. \"Oh my God...\" He glanced at her, and her eyes were wide and terrified. Her hand was tight around his. She looked up at him, and for a moment he was hypnotized by her deep brown eyes. Did those eyes plead with him to stop? Or did they express a blind faith in him, a willingness to follow wherever he would lead her? Charlie didn't want to guess. He pushed open the door and let in the cool night air.\n\nIt wasn't dark by any means in the parking lot. The sun was long gone, but the parking lot was well lit by bright white fluorescent lighting. Charlie didn't let her have any time to think about it. He stepped out as if it was an ordinary day at the school, an ordinary stroll to the athletic center. Michelle stayed with him, clutching his hand. Her face turned right and left, looking everywhere, as if she was astonished by how big the outside world was.\n\n\"No one's here,\" he whispered. But when he looked at her, seeing her naked body bathed in the white glow of the parking lights, he felt a rush of terror flood through him. It looked so outrageously wrong, to see her so exposed to the world. He thought he had never seen a woman look so naked before. Every detail of her body was illuminated by the outside lighting, from the dark hair that flowed over her pale shoulders, to the dark line of hair that led between her pale legs. \n\nCharlie looked around the parking lot, realizing that it was not as secure a location as he'd thought. It was true that his car was the only one there, and the school blocked off any view from the main road. But past the left edge of the parking lot, a slope led down to the field that was used for soccer and field hockey, and beyond that, a tall chain-link fence separating the school from the woods. The bright light made it hard to see past the edge of the parking lot. Perhaps a circle of teenagers sat drinking beers on the soccer field, watching Michelle walk naked and vulnerable across the parking lot. Or perhaps someone lurked in the woods, watching through the fence...\n\nHe fought the panicked urge to rush Michelle back through the green door and insist she get dressed. The only thing that stopped him was seeing how her other hand traced circles over her bare leg and hip. Her eyes darted from side to side, but she breathed the night air like it was perfume. They walked, side by side, towards the middle of the parking lot, and she matched his pace with every step, walking on her toes across the asphalt as if she wore invisible high heels. \n\nCrickets chirped loudly from unseen hideouts, and from somewhere far away a train whistle wailed. Something scampered through a patch of dried leaves nearby, and Charlie jumped. He peered into the darkness, trying to identify what had made the noise, but Michelle just giggled and squeezed his hand. \"It's all right,\" she said. \"Don't worry!\" She giggled again, and her laughter radiated through the quiet like a ringing bell.\n\nThey approached the athletic center, and Michelle suddenly let go of his hand, taking several steps ahead of him. She stretched her arms in the air, fingers extended, as if she wanted to touch the night sky. She gazed upward with a dreamy look on her face.\n\n\"Oh, Charlie...\" she breathed as she swayed back and forth. \"I can't even describe how this feels. I feel so free!\"\n\n\"Is this the first time you've ever walked outside like this?\"\n\n\"No,\" she admitted, flashing him a sly smile. \"But this is the most daring. I've walked in the backyard a few times. A few other little adventures, too. I'll tell you about them, if you want. But later.\"\n\n\"Ok.\" Charlie scanned the perimeter of the parking lot, just as he had a dozen times already. He was alert for any changes in light that would indicate approaching headlights. If someone started to drive onto the school grounds, Charlie estimated they'd have ten, maybe twenty seconds to get Michelle out of sight before the car rounded the corner. Most likely, a car would park in the front, but it was always possible it might pull around to the back. And even if the car parked in front, that would mean someone would be in the school when they came back.\n\nCharlie tensed as something caught his eye. \"Michelle!\" he whispered. \"We're not alone!\"\n\nA red car was parked just inside the corner of the school, watching them. Charlie reacted swiftly, reaching out and catching Michelle by the shoulders, pulling her behind his back, so that he stood between her and the stranger. \"Stay behind me,\" he warned. \"We'll keep going, but fast, and you stay low. Maybe they didn't see you.\" \n\n\"What? What is it?\" Michelle asked nervously.\n\n\"There's a car parked over there. Someone is watching us.\" Who could it be? Teacher? Student? Charlie peered at the car, trying to make out the features of the person behind the wheel. How long had they been watching?",
        "\"What car? You mean the red one?\"\n\n\"Yeah.\"\n\nMichelle burst out laughing. \"That's my car, silly!\"\n\n\"It is?\"\n\n\"Oh my God! You scared me!\" Still laughing, she threw her arms around him and hugged him from the side, leaning against him for a moment. Charlie felt relieved, and stupid, but more than that, he was acutely aware of Michelle's breasts pressing against his arm. He felt his arm enveloped in soft warmth, and when she pulled away, one of her nipples skated across his elbow.\n\n\"Sorry,\" he muttered. He could still feel the sensation of that nipple touching his arm. Michelle Santo's nipple. He had just felt Michelle Santos' nipple.\n\nShe grinned, walking backwards in front of him. \"It's fine, Charlie. It was sweet, actually. You jumped right in front of me, to protect me. It was cute!\"\n\n\"Yeah, right.\" His face felt hot.\n\nShe giggled and took his hand again. They resumed walking, side by side, hand in hand. Michelle was giddy from the false alarm, bouncing on her toes as they walked, swinging his hand back and forth. Her hand pressed against her hip, sliding up and down, up and down. He peeked at her out of the corner of his eye, pretending not to notice as that hand slid higher and higher on her body, until it slid over her breast. Could she tell that he was watching her? Her fingers stroked her nipple, pulling it into a point and pinching it.\n\nThey stepped onto the sidewalk, just a few steps from the front door of the athletic center, and her hand abruptly fell away from her chest, as if she had just noticed what it was doing. She glanced nervously at Charlie, but he kept his eyes forward, as if he hadn't seen a thing. He lifted the keys up, trying to find the correct key one-handed because he was reluctant to let go of her with his other hand.\n\n\"Here, I'll show you which one.\" Michelle dropped his hand and took the keys. She wiggled one of the keys into the lock and turned it. The door to the athletic center opened, and they stepped inside.\n\nThe athletic center was a large rectangular building, broken up into three smaller rectangles. The left rectangle held the swimming pool, the right rectangle held the basketball courts, and the section in the middle held the locker rooms. After a moment of silent consideration, Charlie and Michelle turned to the right, towards the basketball courts.\n\nThe courts seemed cavernous, with high ceilings and rows of empty seats on either side. It was a strange feeling to enter that large space and stand in the middle of the court. \"It doesn't feel so big when people are in it,\" Michelle remarked after a moment.\n\n\"It's like the building is asleep,\" Charlie said.\n\nMichelle smiled. She walked over to stand just in front of the bleachers. \"This is my spot.\" She looked up at the empty seats, flashing a wide smile as she turned her head from one side to the other. Suddenly, she began to bounce up and down and clap her hands. \"Let's go, Lions! Let's go, Lions! Lions, Lions, Lions!\" Her voice echoed through the building. She held up her arms, making a Y. \n\nThe sight of her bouncing caused Charlie's erection to throb painfully again. He decided he was longer going to worry if she noticed. She had to expect some reaction from him if she was going to start doing nude cheerleader routines. \"I think you just woke up the building,\" he told her. \n\n\"Do you ever go to the basketball or volleyball games?\"\n\n\"Of course I do... most of them. I film the sporting events for the school.\"\n\n\"Oh!\" Michelle looked thoughtful. \"That's right. You probably have video of me cheering.\"\n\n\"Probably.\" Charlie glanced up towards a flat space near the top of the bleachers. That was his spot, where he would set up a camera on a tripod. It had a full view of the court, above the heads of the crowd so they couldn't block the camera.\n\nActually, he was positive he had video of her cheering. He remembered a pep rally for the homecoming football game, a few months earlier. He had zoomed in on Vanessa Watson, who was holding the microphone. Vampire Vanessa, everyone called her, because of her pronounced canines. Vanessa was in her blue and white cheerleader uniform, yelling at the crowd, trying to pump them up, and Michelle was next to her, waving blue and white pompoms. Charlie had centered on Vanessa, and Michelle had been in the shot the whole time. Smiling, cheering, jumping up and down.\n\nIs that what you're thinking about right now, Michelle? he wanted to ask. Are you imagining a full pep rally crowd, watching you bounce up and down naked? Is that what you fantasize about, all those times you're up there doing your cheerleader thing?\n\nHis erection ached, and he had to look away from her. He pretended to be watching the door, as if guarding it.\n\nAfter a moment, he heard her speak from just behind him. \"What now? Still want to see the girl's locker room?\"\n\n\"Sure.\"\n\n\"I'll warn you right now. You're probably going to be disappointed.\" She led the way back to the hallway and turned right where a big sign said \"GIRLS\". They had to go around a U-shaped hallway to get to the door of the locker room. Michelle took the keys again and unlocked the door. She pulled it open and they stepped inside.\n\nIt looked almost identical to the boy's locker room. The layout was the same, only a mirror image, with the rows of lockers to the right instead of to the left. It smelled a little better than the boy's locker room, but the vague scent of sweat and bleach still filled the place. The lockers looked the same as the boy's, lines of dark blue rectangles with circular combination locks. In front of the lockers, long wooden benches were bolted to the floor. \n\n\"The forbidden temple,\" Charlie said.\n\nMichelle laughed. \"Basically, just a locker room.\"\n\n\"I thought the lockers would be pink, at least.\"\n\n\"Nope. Blue, blue, blue. Are they the same color on the boy's side?\"\n\n\"Yeah.\"\n\n\"Maybe that's the color they come in. Do you want to see which one is mine?\" Michelle walked past several rows of lockers and turned down one of the aisles. Charlie followed her.\n\nShe stopped in front of a locker, and placed her hand on the metal door. Instead of opening it, she looked at Charlie with a mischievous smile on her face. \"I know what's missing.\"\n\n\"What?\"\n\nShe seized his hand and pulled him down the row. \"Here. You sit here.\" She indicated a section of bench. \"You're in the girl's locker room, and you're invisible. Have you ever imagined what you would do if you were invisible?\"\n\n\"Sometimes...\" Charlie lowered himself onto the bench.\n\nMichelle returned to her locker and opened it. She took a moment to bundle up the locker's contents into a ball, then closed and locked the door. She grinned. \"I'll be right back. Don't move. Remember... you're invisible.\" She walked swiftly up the aisle and disappeared around the corner. \n\nCharlie waited in the silent locker room. He listened carefully for any sound, wondering what surprise Michelle had planned. After what felt like five minutes, he heard footsteps approaching. \n\nMichelle came around the corner. She was no longer naked, and for a moment Charlie tensed, thinking that another girl was entering the locker room and he was about to get caught. Then he recognized Michelle in her blue and white cheerleader uniform and sneakers. She walked towards him, but kept her gaze to the side and didn't acknowledge him.\n\n\"I'm invisible,\" he reminded himself. \"Invisible in the girl's locker room.\" \n\nMichelle stopped at her locker and undid the combination. The door opened with a squeak. She had a mirror attached to the inside of the locker door, and he could see her glance in it, peeking at his reflection. She reached into the locker, rearranged some things. \n\nShe stepped back, positioning her body towards him, although she was still careful about not looking directly at him. Charlie read the white lettering that spelled \"PHHS\" written over her chest, for Pine Hills High School. Michelle's fingers traced the line of skin that was left bare around her midriff, between where her top ended and her skirt began. She caught the bottom of her tank top and peeled it up, leaving herself in a dark sports bra. She hung the tank top in her locker.\n\nAgain, Michelle traced the skin around her flat belly, and now she pinched the top of her skirt. She turned so that her ass was pointed towards Charlie and pushed the skirt down, bending at the waist as she tugged the fabric down her smooth legs to her ankles. Charlie's heart raced. Was this really how she undressed in the locker room, bending so that anyone watching had a clear view of her pussy? Or was she doing a special strip tease for his benefit? Even though he'd watched her walk around naked for hours, he felt intensely stimulated watching her strip, as if he was witnessing her body for the first time.\n\nMichelle stepped out of her cheerleader skirt and hung it in the locker. Next she peeled off her sports bra and threw it in, becoming once again the naked Michelle he had spent the evening with. She pulled a pair of black shower slippers from the locker and sat down on the bench to switch her sneakers for the slippers. Once again, Charlie wondered if this was really something she did when she changed, sitting naked on the bench like that with her legs so wide apart as she switched shoes.\n\nIt wasn't until Michelle pulled a white towel from her locker that Charlie realized she was actually going to shower. He crept behind her as she walked to the showers. She still pretended he was invisible as she turned on the water and waited for it to heat up. Steam began to drift in a lazy cloud over the white tiled floor. Michelle draped her towel over a silver bar and stepped naked under the water.\n\nCharlie leaned against a locker, watching as she casually rubbed a bar of soap over her breasts. His erection was enormous, feeling like it was going to tear through the front of his jeans. \"I'm invisible,\" he thought. \"I could pull out my hard-on, stroke it, and she would have to pretend not to see.\" The thought was extremely exciting but he didn't dare to do it.\n\nAm I real to her? he wondered. Or just part of her fantasy? Was it serendipity that he happened to be there that evening, to be the stranger's eyes that watched her on her Saturday streak? Would it break the spell if he revealed how much he desired her? Force her to realize exactly what she was doing?\n\nHe didn't pull his hard-on out, but he pressed his hand against it and stroked it through his pants. It gave him some relief. Michelle didn't look his way, didn't notice. He was invisible.\n\nMichelle turned off the water. Her body gleamed as she retrieved her towel. Charlie pulled his hand away from his crotch just before she walked by him, the towel dangling from her hand. He followed her back to the locker and watched as she dried herself off. She peeked in the mirror at his reflection again, just before hanging her towel back in her locker, stowing her shower shoes and closing the door.\n\nHe knew where she was headed. She walked naked to the water fountain, bent over and took a sip of water. Slowly straightening, she turned her head towards the door to the locker room. Despite having toweled off, water still dripped from her wet hair and ran down her back. Michelle took a deep breath. She walked towards the entrance to the locker room.\n\nCharlie watched her open the door and step out. The door closed behind her, and for a moment he didn't move, letting the echo from the closing door resonate through the empty room. From the shower area, he still heard the trickle of water going down the drain, the plink-plink of the dripping showerhead. Charlie walked back to Michelle's locker. He found her keys still sitting on the bench.\n\nMichelle wasn't waiting outside the door when he came out. He closed the door and locked it. The girl's locker room. He had fulfilled the fantasy of his younger self, had stood in the girl's locker room, watching a beautiful naked girl get undressed and shower. Someday, he told himself, it would be a thrilling memory. But at that moment, he just wanted to find Michelle.\n\nShe wasn't in the hallway, but Charlie could see drops of water on the granite floor, leading towards the double doors that led outside. He followed the drops, exiting the athletic building and stepping outside into the night. Michelle stood at the edge of the parking lot, her arms stretched up to the night, looking up at the stars. \n\n\"Are you cold?\" he asked as he neared her.\n\n\"A little.\" She smiled. \"But I don't mind.\"\n\n\"Was it all that you thought it would be?\"\n\n\"It was.\" She gestured at the empty parking lot. \"I walked to the middle and just stood there, for I don't know how long. Almost a minute? I felt so exposed... but so alive! Then I thought I heard a car coming so I ran and hid behind that bush there.\" She laughed. \"It was nothing. No car. I'm just jumpy.\"\n\n\"Let's head back then.\" He stepped onto the parking lot, and was pleased when she took hold of his hand. They crossed back to the school.\n\n\"What about you?\" she asked as she gave his hand a squeeze. \"Did you enjoy the girl's locker room experience?\"\n\n\"Yeah.\" He wanted to say more, but struggled with the words. Every statement he ran through his internal filter seemed crude or overly frank. To avoid an awkward pause, he said, \"You looked beautiful.\" Immediately feeling like this was a feeble response. She looked beautiful every day. It wasn't the right word to capture how she looked with her naked body wet and gleaming, her dark hair plastered and dripping down her bare back.\n\nShe giggled. \"Thank you!\"\n\nThey reached the main school, and Charlie fumbled with his key to the green door. His heart was pounding. All he could think about was how it had felt when she hugged him, the feel of her breasts against his skin, the touch of her hard nipple sliding across his bare arm.\n\nThey entered the school and turned towards the science wing and the room where Michelle's clothes lay strewn in a pile. As they passed the open door of a presentation classroom, Charlie suddenly pulled her in that direction.\n\n\"One more,\" he told her, when she looked at him, startled. \"One more. You wait here, okay?\"\n\n\"Charlie...\" \n\n\"Please. You'll see.\" Charlie entered the classroom and turned on the lights. The left wall was taken up by a long whiteboard. A green rectangular island with a sink rose from the floor in front of the board. To his right, a series of rising rows of seats, like a movie theater. The purpose of the room was to allow the teachers to do laboratory presentations.\n\nCharlie stood behind the counter and addressed the empty seats. \"Hello, everyone. We have a special lecture today for AP Biology. I hope you all read the chapter on human sexuality that was assigned last night. For today's lecture, Pine Hills senior Michelle Santos has agreed to help us with a presentation on female sexuality.\"\n\nCharlie walked to the door. He put the odds at about seventy percent that Michelle would be gone. But she was still waiting out there.\n\n\"Come in, please, Michelle,\" he said.\n\n\"You're silly,\" she murmured, but allowed him to take her by the arm and lead her into the classroom. Charlie brought her next to the island, where she stood facing the empty seats.\n\n\"Let's all thank Michelle for participating in this lecture,\" Charlie said, clapping his hands in light applause. She smiled and waved at the empty seats. \"Michelle has graciously agreed to be naked for the presentation so that all of you can have a real life demonstration of the sexual characteristics of a female.\"\n\nMichelle put her arms out and dropped in a small curtsy. Charlie was pleased to see that she was playing along. He stood beside her and addressed the imaginary class.\n\n\"As you can clearly see, the female body differs from the male in a variety of ways. The female has two breasts, which are primarily used for nursing offspring, but also serve a sexual function, in that they are stimulating to the male. Males are easily aroused by the sight of the female breasts, and also by the feel of them.\" Charlie nonchalantly reached out and pressed his hand against Michelle's right breast. She tensed, starting at him in astonishment. He waited for her to push him away, but her eyes returned to the empty class, and she smiled nervously as Charlie gently squeezed her soft tit.\n\nCharlie continued, \"The breasts can give an indication that the female is stimulated. As you can see, Michelle's nipples are stiff and swollen, indicating that she is becoming aroused.\" He stroked her nipple and then pinched it gently, causing her to inhale. \"The nipples may also experience increased sensitivity when the female is aroused.\"\n\nCharlie stepped in front of Michelle, facing her. Her eyes were wide as she gazed at him uncertainly, wondering what he intended to do. Charlie put his hands on her waist and lifted her, sitting her on the edge of the counter. He touched her knees with his fingertips and gently eased her legs apart, keeping his eyes on her face even though he knew he was clearly exposing her pussy to his view. Michelle offered only token resistance, and when he took his hands away from her knees, she left her legs splayed open, leaning back on her hands. Her eyes moved over the empty seats, and Charlie wondered if she was imagining rows and rows of students, all watching her. \n\n\"Michelle is now graciously showing us her vagina, which also shows signs of stimulation,\" Charlie told the class. \"The outer area of her vagina is swollen, which is a result of increased blood flow, a common sign of arousal.\" Charlie reached down with his finger and lightly traced the outer edge of her labia, causing Michelle to inhale sharply. But she didn't close her legs or push his hand away. He studied her face, watching her eyelids flutter as he gently stroked her clitoris. \n\n\"Another sign of arousal is lubrication.\" Charlie pressed his middle finger against the opening of her pussy and slid it in easily, almost as if he pushed through liquid. Michelle made an \"Ah!\" noise as he moved his fingertip inside her then extracted it. He held his finger up. \"As you can see by the shine on my finger, Michelle is very aroused right now.\" He put his finger back inside her, this time sliding it deep, until his palm pressed against her vagina. \n\nMichelle's hips tensed on the edge of the table as he slid his finger in and out of her. He could see that she was trying to thrust against his hand. \"As the female becomes more aroused, it can start to affect her judgment.\" Charlie leaned forward and kissed her lips. Michelle kissed him back hungrily, opening her mouth and pressing her tongue against his, even as his fingers continued to probe between her legs. \n\nMichelle wrapped her arms around his neck. \"Affect her judgment?\" she repeated, smiling.\n\n\"Yes,\" Charlie murmured, as he pressed small kisses along her chin and down her throat. \"She might find herself doing things she never anticipated she would do.\" \"I suppose that's true...\" Michelle reached down and pressed her palm against the enormous bulge that strained the front of his pants. Leaning forward, she breathed in his ear, \"Let's demonstrate fucking next.\"\n\nShe turned sideways, repositioning her legs so that he was between them. Her hand stroked his erection through his pants for a moment, then her fingers pulled at the snap at the top of his zipper. Charlie reached down and undid his pants for her, and her hand slipped down the front of his underwear, locating his penis and pulling it free. When she squeezed his erection in her fingers, he couldn't suppress a moan, feeling himself throbbing in her grip.\n\nMichelle's legs squeezed against his sides. His hands fondled her breasts while she stroked his penis. Glancing down, Charlie could see that the height of his penis perfectly aligned with the opening between her legs as she lay on the edge of the island. Maybe that's the secret purpose of these islands, Charlie thought. Maybe they aren't for chemistry demonstrations at all. Maybe they're just for horny high school kids to fuck on.",
        "Michelle was pulling him forward, urging him to enter her. Charlie could barely believe what he was about to do. He felt the head of his penis against her wet warmth, felt himself entering her, sinking into her. Her arms wrapped around his torso, pulling him close, bringing him deeper inside her.\n\nOh my God, you're so beautiful, he thought, as he moved his fingers through her hair, pushing the dark strands away from her face. You're so beyond me. How is this even possible?\n\nMichelle pulled his shirt up to his shoulders, so that he could feel her bare breasts pressing against his chest and her hands sliding over his back. He pulled his shirt over his head and tossed it to the side. They embraced, their lips meeting for a long kiss as Charlie slowly moved back and forth inside her. He could feel the muscles of her pussy clutching his shaft, as if desperate to keep him within her. Every thrust was agonizing pleasure radiating through his body.\n\nCharlie had never felt as turned on as he was at that moment. The entire evening had been a long tease for him. Watching Michelle parade her beautiful naked body in front of him all night long had gotten him more worked up than he realized. It was only when he finally had his hands on her body that he felt the intensity of his desire. \n\nHer fingernails dug into his back and she moaned as her body quivered. It was clear that the evening had been a giant build-up for her as well. Now that they were having sex, Charlie wondered how he could have ever doubted this was the inevitable finale of their evening. Perhaps he could have reached for her sooner, made love to her in the girl's shower, or on that bench in the hallway. Or even on the hood of his car, under the night sky. He had the feeling she would have loved that last one.\n\nCharlie kissed down Michelle's neck as she leaned back onto her hands. He kissed her breast, then took her nipple in his mouth and sucked on it, savoring the clean taste of her skin. Michelle dropped lower, resting her weight on her elbows for a minute, finally falling back so her head touched the counter. She stroked his hair with her fingers as he moved back and forth between her nipples, kissing and pinching them. He lifted his head for a moment so he could watch her breasts bounce in time with his thrusts. Michelle's eyes were closed and she was biting her lip to muffle her gasps.\n\nCharlie slowed his pace, trying to prolong the experience, but the urge to push deep inside her became harder and harder to resist. He felt his erection swelling beyond anything he had ever experienced before. Michelle must have felt he was close. She abruptly sat up and shifted backwards on the counter so that he slid out of her. She seized his erection in her hand, squeezing it just as he started to climax, aiming it between her breasts. Long strands of white erupted from the tip of his penis onto her chest. \n\nIt took a minute before his penis stopped pulsating in her hand. Michelle gazed at her breasts, marveling at the sticky layer that now coated her front. She looked up at him, grinning.\n\n\"Class dismissed!\" She laughed merrily.\n\nMichelle disappeared to clean herself up and get dressed, and Charlie walked through the empty school, turning off lights and removing any other evidence that they had been there. He turned off the computers in the AV room. Editing the basketball game would have to wait for another day.\n\nMichelle met him in the hallway, wearing jeans and a pink blouse, and they walked together to her car. Standing in the open doorway, Michelle paused to kiss him. \n\n\"This was amazing,\" she said. \"I didn't expect you to be here, but I'm glad you were.\"\n\n\"I'm glad you were, too.\" She smiled. \"It's not something that can happen again. You know that, right? I went a little crazy tonight, and it was super risky but we got away with it. We can't take the chance again.\"\n\n\"No. You're right.\"\n\n\"Good night, Charlie.\" She leaned forward to kiss him again, this time on the cheek. \"See you Monday.\"\n\nCharlie watched her enter her car. He waited until she pulled away and drove off. Then he closed the door and locked it.\n\nShe was right. It could never happen again. But he knew it would be a night he would never forget. He walked through the empty school, imagining he could still smell the faint scent of Michelle's perfume in the air.\n\nIn fact, it did happen again, and neither of them could have predicted that they would push things even further the second time. But that was a tomorrow to come."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionism",
        "voyeurism",
        "public sex",
        "public nudity",
        "submission",
        "streaking"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school"
}