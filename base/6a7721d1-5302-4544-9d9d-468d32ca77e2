{
    "title": "Surefoot 17: The Cat & the Khanari",
    "pages": [
        "The signal came through loud and clear, certainly enough to betray the anxiety behind the woman's voice. \"Attention Orion vessels! This is Captain Naomi Li of the Independence of the Stars! I am ordering you to cease your attack on this vessel immediately! You are in violation of Federation Law!\"\n\nFrom his seat on the bridge of the slaver ship supervising the raid, Thasrurc stopped gnawing on the succulent roasted Saurian duck perched in his stubby green fingers long enough to croon, to no one in particular, \"Ooooh, I'm *sooo* scared!\"\n\nAround him, his crew laughed - except for Uncle Vakkem, of course. The old Orion sat in a spare chair, alternating between drinking from a bottle of Altarian rum and making contemptuous noises at his nephew, his displeasure at nearly everything Thasrurc said or did evident.\n\nVakkem was a crotchety old bastard; drop a sack of gold-pressed latinum in his lap, and he'd complain about the weight of it. Since inheriting the title of Kahnari and the business from his father - with Vakkem being intentionally passed over - Thasrurc had sought to make a name for himself outside of his father's shadow.\n\nAnd this raid into Federation space was just what he needed. He watched with satisfaction as five smaller Orion raiders, all commanded by loyal cousins, continued to swarm around the Independence like angry wasps, firing their disruptors, slowly but surely wearing down the liner's shields, after which Thasrurc's ship would sweep in, kill the crew, beam away as many young passengers as it could grab, and then return home again with a full hold.\n\nAnd everyone was basking in the success - except Uncle Vakkem. \"Don't be so cocky, boy. You're not home with the prize yet.\"\n\n\"Sit there and get drunk in silence, old man. When I bring back a hold full of prime meat for the markets-\"\n\n\"You won't. He won't let you.\"\n\n\"Who won't?\"\n\n\"The Fat Cat.\"\n\nAnd Thasrurc rolled his eyes: not *him* again. Starfleet Captains had a reputation for being civilised, honour bound... soft. But the Fat Cat was different, they warned. For years Thasrurc had heard horror stories about him, a Caitian who was once a slave in their very system and had somehow escaped, since then showing no mercy to businessmen like themselves. They said he was formidable, ruthless.\n\nThen Thasrurc saw a picture of him, standing with some cadets he was training - and was not impressed. He looked like a clown, smiling inanely for the camera. He looked like a child's toy. He looked like a pet. This was no commander, no warrior. He was a joke! And all the talk from Vakkem and all the other sad old men about him was just piss and wind.\n\nCertainly Thasrurc proved this, by easily diverting the Fat Cat to a neighbouring system with a false distress signal, leaving the Independence to their tender mercies.\n\n\"Orion vessels!\" Captain Li continued over the open channel. \"Cease your attack at once!\"\n\nThasrurc wondered if the woman was pretty, and young; he liked them like that. Well, her ship's shields were almost depleted, so he guessed he would know soon enough. He threw the remains of the duck to the floor and licked his fingers. \"Cheer up, Uncle. I'll give you one of the human women to play with. You might be too old for her to raise your staff, but she might still put a smile on that ugly face of yours.\" He chuckled.\n\nBut the gaunt, wrinkled old bastard just snarled, \"The Fat Cat is going to chew you up and spit you out. Idiot.\"\n\nThasrurc glared, aware that his crew could hear the open contempt. \"Have a care, old one. You may be my uncle, but I'm still your Kahnari.\"\n\nVakkem chuckled, raising his bottle in salute. \"And you will be. For the rest of our lives.\"\n\nSuddenly, Li's voice returned, full of desperation, her prior attempt at remaining strong now eroded. \"For pity's sake, *stop*! We have children onboard!\"\n\nThasrurc smiled now, and finally opened a channel to respond to the woman. \"That's good to hear, Naomi, very good; children fetch a premium price in our markets. But I might keep you for myself. I like how you plead.\" He closed the channel and laughed, declaring broadly, \"We're going home with a full hold, boys!\"\n\nThe bridge crew cheered - except for Vakkem, of course - but then the voice of the Tactical Officer cut through. \"Kahnari! There's a vessel coming in at high warp on an intercept course! It has a Starfleet energy signature!\"\n\nThasrurc started, but then spat, \"Bah! A patrol runabout, some toothless scout that picked up the distress signal! A flyspeck, that's all! With the Fat Cat and his Surefoot diverted to the Mintaka System, no other vessel can-\"\n\n\"It *is* the Surefoot!\"\n\nThe bridge went silent again.\n\nExcept for Vakkem, chuckling and muttering, \"Idiot.\" Then he began drinking faster.\n\nThasrurc rose to his feet. He could do this. He had been waiting for this his whole life. He could defeat this Starfleet vessel and still make it home with a full hold. On the screen, his cousins still continued to fire on the Independence, oblivious to the approaching vessel. \"Alert our ships, get them to regroup and-\"\n\n\"I can't, Kahnari! The channels are flooded with- with-\"\n\n\"With what?\"\n\nUnable to describe it, the Communications Officer simply piped it in over the speakers: a terrible drumbeat and assault of metallic musical instruments, and then a cry, followed by a man's voice, proudly declaring:\n\n\"We come from the land of ice and snow\n\nFrom the midnight sun, where the hot springs flow\n\nThe Hammer of the Gods\n\nWe'll drive our ships to new lands\n\nTo fight the horde, and sing and cry\n\nVALHALLA, I AM COMING!\"\n\nThasrurc looked to his uncle. \"That sounds Klingon! I thought he was Caitian!\"\n\nThe old man wiped his mouth on his sleeve. \"That is the battle song of an ancient band of Terran warriors called The Led Zeppelin.\"\n\n\"What does it mean?\"\n\nVakkem grinned cruelly at him. \"It means he's not interested in talking, in ordering us away or negotiating for our surrender. It means he's keeping you from contacting your ships and organising a counterattack. It means you should have planned for this, and listened to my warnings about him, instead of filling your head with visions of gold pressed latinum and slaves at your feet.\n\nIt mostly means you're an idiot.\"\n\nOn the speakers, the singer declared, \"WE ARE YOUR OVERLORDS!\"\n\n\"Turn that off!\" Once it was quiet again, Thasrurc looked back at his uncle. \"Have you anything *useful* to suggest, old man?\"\n\n\"Yes - leave your cousins to keep him busy while we escape. Our ship does not have the firepower to match him.\" He sneered as he added, \"Or the leadership.\"\n\nOnscreen, his cousins had stopped the attack on the liner, and were obviously trying to swarm around and improvise a defence against the Surefoot as it warped out into real space, bypassing Thasrurc's ship to go after the raiders.\n\nVakkem had a point. They *could* go, and leave them to keep the Starfleet vessel busy long enough to-\n\nNo. Thasrurc was a Kahnari! He would not skulk away and become a laughing stock! There was no way that the Fat Cat was *that* dangerous, no matter how many old men bleated on about him! There were five Orion raiders out there! Five-\n\nFour: Cousin Jaire's ship erupted into a blossom of flame.\n\n\"Withdraw,\" Vakkem urged.\n\nThasrurc ignored him, focusing on the battle, trying to come up with something. He watched the Surefoot dive and swoop and pounce. But there were times when its phasers missed their targets, or when its movements seemed clumsy. *This* was the fierce, formidable foe his father and uncle spoke of? \"Bah. Look at him! You call him a warrior?\"\n\nVakkem looked up again with open contempt. \"You. Are. An. IDIOT.\" He indicated the movements on the screen. \"Don't you understand? He's not fighting, he's *teaching*! He's teaching his cubs how to fight! WE'RE NOT A THREAT! WE'RE A LESSON! GET US OUT OF HERE! NOW!\"\n\nOnscreen, Cousin Raassel's ship was sliced in two. Then Cousin Laikkor's ship was grabbed by a tractor beam... and flung into Cousin Gessir's ship like a rejected toy, destroying them both without firing a single shot.\n\n\"Ooh,\" Vakkem cooed. \"The cadet who pulled that off will get top marks!\"\n\nOnly Cousin Taycuz's ship remained.\n\nScrew Cousin Taycuz. \"Helm! Withdraw back to our space! Maximum warp!\"\n\nTheir ship lurched hard to starboard, protesting as the helmsman took her into warp space, away from the site. Thasrurc sank back into his chair. He had lost five ships, five crews, five cousins - but Vakkem was right, at least he was coming back alive and with his main ship. That had to count for something... hadn't it?\n\n\"Kahnari!\" his Tactical Officer barked. \"The Surefoot is on fast approach from astern, at Warp 9.5!\"\n\n\"Increase our speed!\"\n\n\"We're at Maximum already, Kahnari!\"\n\n\"Then take evasive action, fool!\"\n\n\"It won't be enough,\" Vakkem informed him needlessly.\n\nThe viewscreen switched to the rear view, as the Saber-class starship drew up steadily from the dilated lens of warp space. It looked angry. It looked hungry. Thasrurc's ship lurched, once, then twice... but their ship was built for hauling slaves, not for manoeuvres or combat, and their efforts only allowed the Surefoot to catch up quicker.\n\n\"We could- we could offer him a share in the profits?\" Thasrurc muttered to himself.\n\nVakkem snorted. \"Yes, let's do that! Offer the man we enslaved and tortured for years a chance to be part of it all! He'll lap that up like a bowl of cream!\"\n\nThasrurc rose and approached him, looking ready to break the old man's neck... Instead he leaned in and whispered, \"What can I do? There must be *something*...\"\n\nHis uncle regarded him with glassy eyes. Then he suggested softly, \"Apologise. Be humble. Ask him to spare your crew. Grovel. Kiss his tail. Swallow your pride, O Great and Mighty Kahnari.\"\n\nThasrurc backed away. Was he serious? Wanting an Orion Kahnari to grovel? It was unthinkable!\n\nOn the screen, the Surefoot was moving past them, their aft torpedo bay lighting up.\n\nThe unthinkable became more thinkable. He opened a channel. \"Attention, Surefoot! This is Kahnari Thasrurc! I...\" He couldn't look at his crew as he continued. \"I apologise for the error which resulted in the accidental attack on the Independence of the Stars. And... I promise we won't return to Federation space.\"\n\n\"That was you, grovelling?\" Vakkem asked in disbelief.\n\nThasrurc ignored him. It would get a response from the Fat Cat.\n\nAnd it did: a deep, damning growl of a voice. \"Yeah, bubulah. I can promise you won't return to Federation space, too.\"\n\nAs they watched the volley of torpedoes shoot from the Surefoot, the bridge went silent.\n\nExcept of course for Vakkem. \"Idiot...\""
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "fan fiction",
        "science fiction",
        "federation",
        "caitian",
        "alien11111",
        "orion"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-17-the-cat-and-the-khanari"
}