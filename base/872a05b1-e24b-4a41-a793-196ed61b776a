{
    "title": "The Hawkins Place",
    "pages": [
        "by Philip Johnson\n\n Chapter One\n\nI had lived in the Midwest for all of my thirty-seven years, and a good number of those years were shared with Pat. We never married but we had been inseparable. Now, all of a sudden the Midwest and Pat seemed out to get me.\n\nIt started with me coming home from work one day to find a note from Pat saying goodbye. It seemed she had a sudden need for California sun. Were there warning signs? Probably. Did I see them? Apparently not. Her leaving caused a big hole in my life. She also left a big hole in the house, taking all that was hers and half of my things. All of that left me pretty lost all winter.\n\nFriday night about six months later, the boss stopped me and said they were closing my section and I would be out of a job in thirty days. I only have a two-year degree in business and I wasn't high up the ladder, so there was no severance package to speak of. It took me most of those thirty days to get my act together and plan my future.\n\nI had inherited a very nice house some years ago, and I had done a lot of remodeling over the last few years. By selling that I would have the cash needed to help me along. I had a lot of skills, but no licenses in the trades, and like I said, only a two-year degree so my next job would likely be a pretty humble one.\n\nI had developed a pretty bad taste in my mouth for the Midwest to say the least, so I threw a couple of suitcases in the pickup and headed out. I had no destination in mind but I did have a general direction. I headed south. If I had to move I was going far enough to leave all the memories behind and if I got away from heavy snow, so much the better. \n\nI avoided the larger cities hoping to keep my living expenses to a minimum. That was about the extent of my planning. I would spend a couple of days in an area and then move on figuring I'd know when I was where I needed to be. I got as far as Murphy, North Carolina before the alternator died in my truck. It was Friday so I was stuck until some time Monday at the earliest. While sitting in my motel room I had the strangest feeling come over me like this town would be where I would settle. It wasn't a good feeling or a bad one, just a fact. I had to wonder if the recent stress was making me lose my mind.\n\nI rented a compact car, which was never designed for somebody over six feet tall and two hundred pounds, but it was cheap. I drove to a small restaurant for dinner, and for entertainment I read a local real estate magazine over coffee. I had to admit the prices seemed pretty decent for such a pretty area.\n\nThe restaurant wasn't busy so I took my time, had blackberry cobbler and read some more. Deep in thought I didn't see her coming. \"Hi, looking for anything in particular?\"\n\nI almost spilled my coffee. \n\n\"You just cost me a half cup of coffee and two years of my life.\" \n\n\"I'm sorry. I saw you reading that magazine and I was wondering if you were looking for anything in particular or just window shopping.\" I'd like to say she was a vision of loveliness, but in truth she was just your average woman of about thirty or so with medium brown hair, a pleasant face, not at all fat and great legs. She had a wonderful smile and perfect teeth too. \n\nI told her my tale of woe without getting too deep or depressing and said, \"I was curious about real estate prices in the area. I might be interested in buying assuming that one, I can get a job, two I can afford a house of some kind, and three only if you will join me for coffee.\" \n\n\"I'd love to. My names Mava and I have to warn you I sell real estate. That was why your choice of reading material caught my eye.\" \n\n\"So it wasn't my chiseled good looks, my mysterious aura or my wavy hair that did it then?\" \n\n\"You don't have wavy hair.\" \n\nReaching up to my hair I said, \"I don't?\" Mava smiled and sat down. \"You have nice hair but something must have taken the wave out of it.\" \n\n\"It must have happened when I saw you're beauty.\" \n\n\"Oh brother and I thought I was the one in sales. So tell me what you would like. In the way of a house I mean, if you could find a job.\" \n\n\"It has to be something cheap since I'm not working. Speaking of which, what's it like finding a job here?\" \n\n\"Tough unless maybe you have a particular skill or you're a tradesman.\" \n\n\"I'm skilled in the trades but not licensed.\" \n\n\"You might find something, but it won't pay a whole lot. Lowe's just opened here not long ago and they are always looking for good people, plus some of the contractors might be interested.\" \n\n\"I'm forgetting my manners, would you like a cup of coffee or some of this wonderful cobbler?\" \n\n\"It's the cobbler I came in for. It's the best in town.\" I got the waitress and ordered Mava a cobbler and coffee. \n\n\"So you are a realtor. How is the market here?\" \n\n\"You will not likely ever hear a realtor admit the market is down, but in this area it really is up and likely to stay that way. We are slowly being discovered. Maybe we could get together. I mean I could show you a few houses.\" \n\n\"I don't know. It only took you a second to cause me to lose the wave in my hair. What would happen if I spent several hours with you?\" Mava didn't know if I was serious about a house or not. \n\nSmiling, Mava said, \"I think you're safe with me for now.\" Mava gave me her card and said, \"If you have a general idea what you would like to look at, I could take you around either this afternoon yet or tomorrow.\" \n\n\"The house has to be cheap, waterproof, no doublewides, and be at least structurally sound.\" \n\n\"How many bedrooms?\" \n\n\"Since it's just me it isn't important.\" \n\n\"I have several properties that you might want to consider.\" \n\nWe finished our cobbler and coffee and made small talk, and then I told her, \"Let's go look at a couple of your houses.\" \n\n\"Let's go.\" Mava led me to her Jeep and we got in. Real estate sales must be pretty good for her to have a new Jeep. We looked at several houses, but either they were too rundown, too expensive for what they were or I just didn't like them.\n\nI said, \"Let's try again tomorrow.\"\n\nSaturday morning, Mava picked me up at the motel and we tried our luck again. It would help if I had some clue what I thought I would settle for. Having lived in a very nice house for so many years made it hard to lower my standards so much, but with my future so uncertain I had to be very conservative.\n\nMava showed me several two-story homes that might work and I had her keep them on a short list for me to consider. A smaller ranch style made more sense to me, but what I was seeing was either too expensive or a double wide. Doublewides, what used to be called trailers, presented a whole set of problems all their own. I finally saw a ranch style that had potential. There was even a workshop in the back. That went to the top of the short list. \n\nMava finally said, \"That's probably enough to show you right now Nate. Think about those and if you decide against all of them we'll try again. The more you look at them more you'll know what you want. It just takes time.\" \n\n\"Thanks for your patience Mava. I'm going to stick around the area for a while and feel it out. Maybe we could get together for dinner or something.\" \n\n\"I'd like that Nate, thanks.\"\n\nSunday I was kind of at a loss for what to do. I drove down sixty-four and noticed all the businesses. Most of them seemed almost new including a Bealls department store. For such a small town it seemed to have a lot. Every time I saw a side road I drove down it to see what was there. I got turned around more than a few times, but never really got lost. The town just wasn't big enough. That was enough. I needed more cobbler and coffee.\n\nOnce seated at the restaurant I decided I'd better have dinner but I ordered light to make sure I had room for dessert. Just as I finished dinner, who should come in but Mava with a friend. As I stood up Mava said, \"Hi Nate, getting into the cobbler again I see.\" \n\n\"Yeah, it's addictive. Would you two like to join me?\" \n\n\"Oh, I'm sorry Nate, this is Sheila, a friend of mine and yes we'd love to, \" and a minute later Mava and Sheila ordered their cobbler and coffee. \n\n\"So what have you been up to today Nate?\" \n\n\"Just wandering the neighborhood, driving every road I can find.\" \n\nI should pause here and say that Mava, though not pretty, was easy to look at and I was having a little trouble keeping my mind on business. Sheila was very easy to look at. I'm not prone to being tongue-tied, but she caused me to pause more than once. She did strike me as being a little high maintenance with several rings on her hands, nice clothes, perfect makeup and hair...and a little aloof. None of the rings were a wedding band that I could tell and there was something a little off about her.  \n\nWe made small talk for a while, and Sheila asked me how I came to be in Murphy and why I was staying. It was good to know that Mava wasn't prone to tell all to her friend. I told her of Pat pulling out after so many years and almost cleaning me out. I owed Pat no loyalty that was for sure. After Sheila and Mava left I paid my bill and headed back toward the motel. I saw another side road so I decided to check one more road before the boring motel room. I went past it and didn't give it a second look, but on the way back I noticed the realtor sign said Mava Wilcox. I stopped and looked at it just out of curiosity. I had more time than anything at the moment. It was huge. The roof seemed new but the rest of the house looked in awful shape. Like so many of the homes in this area, this one seemed to come with a lot of property. Unlike a lot of the homes I had looked at, this one sat closer to the street. I had nothing better to do so I sat there looking at it and wondering what its story could be. The front porch was very large, reaching almost from one end of the once grand house to the other, and covered, with steps that had to be twelve or more feet wide. The house was three stories with large stonework across the front and a huge stone chimney promising at least one fireplace. The home was a monster and it was in awful shape. It was hard to find any paint left to see what color it used to be. Some of the siding was missing and where there was stonework, some of the mortar was missing. Two of the windows on the top floor were broken, the front porch posts were rotting and the porch roof was at risk of falling. Why did they pay all that money to put a roof on it, and then let the rest of it go to hell? The more I looked at it the more curious I became. In its day, that had to be a beautiful place. When I pulled away I felt an urge to go back. At the first stop sign I just sat there for a minute. Why would I need to go back to that house? What was there for me? \n\nI went back to my room and tried to watch television. They were calling for rain within twenty-four hours was about all I got before shutting it off. I read for a while then went to the lobby and read the paper and drank their coffee. I finally gave up and went back to my room. I tried to sleep but I kept thinking of that huge old house. What would I ever do with something like that? Remodel it and sell it? My God that would be a massive undertaking. I finally fell asleep.\n\n Chapter Two\n\nMonday morning after a leisurely breakfast I went over to Mava's office, and we spent a good part of the day either looking at or talking about real estate. We were rapidly becoming friends, especially after dinner and about one too many drinks. Tuesday I had to wait until Mava was free late in the morning I asked her about the huge weather worn place on Pine Creek road. \"You must mean the old Hawkins place. It's been on the market forever. It's huge all right. I think it has twelve or fourteen rooms and something like three or four bathrooms. The top floor is only a very large bedroom and a bathroom. It was a beautiful place in its day I guess.\" \n\n\"Just out of curiosity, what they asking for it?\" \n\n\"One sixty nine is all.\" \n\n\"That's enough from what I see. Is it sound?\" \n\n\"I believe it is very sound except for the front porch. It just needs tons of work. They put a roof on it in hopes of restoring it but either the money or the desire just wasn't there for them or they realized it was futile.\" \n\n\"Could I see it?\" \n\n\"You're kidding.\" \n\n\"No, if it isn't too much bother. I'm probably kidding myself and wasting your time but I would like to take a look at it.\" \n\n\"Sure. That's no problem. You want to go now?\" \n\n\"If you have time that would be great.\" \n\n\"I'll get the keys.\"\n\nWhen we pulled in the drive, I noticed for the first time how much work the yard needed just to get rid of the brush that had grown up, let alone any landscaping. I had a tape measure, pad and pencil with me for notes just in case. I had no idea how I could make this work out, but I guess I was indulging myself at Mava's expense. Besides I got to look at Mava that much more.\n\nThe front door was in awful shape as were the window frames. The door opened into a large foyer area that was only partially divided from a huge living room. As we walked through the living room I said, \"Did you say something Mava?\" \n\n\"I didn't say anything Nate.\" \n\n\"Oh, I could have sworn you said something like buy it.\" \n\n\"As much as I'd love to sell you a house, I can't tell you what to buy. I just show the houses.\" \n\n\"I know, I just thought I heard something. I guess I'm being distracted by you.\" \n\n\"That was a very nice thing to say, but I doubt it.\" I continued to look and didn't give it anymore thought. The ceilings were nine feet high and seemed solid but showed water spots, probably from before the roof had been replaced. The floors were all hardwood and looked good but needed sanding and varnishing. There was a huge fireplace with beautiful ornate woodcarvings up the corner posts to the marble mantle. The front of the fireplace had some kind of inlay, but was painted so much I couldn't tell what it was. To the right of the fireplace was a large archway to the dining room with huge crown molding, and a wonderful chandelier that needed cleaning at the very least. On the far side of the living room was a stately and impressively wide staircase going up to the second floor. It seemed in very good shape, but it had been painted more than once and the paint was now chipped and discolored. To the right, off the living room through a large archway was an anteroom, and turning left off the anteroom put you in a large bathroom with antique fixtures. Straight ahead from the living room off the anteroom was a large library with a lot of wood paneling that needed refinishing. We walked back to a butler's kitchen. Everything needed to be stripped and refinished or replaced. Off the kitchen was an enclosed porch that had to measure fifteen by thirty or more. Again, it was sound, but cried out for paint and cleaning at the least. To the right from the kitchen was what I assumed to be a maid's room, but may have just been a storage room.\n\nWe went to the basement next. What a dirty mess. There were things stored all over the place with dust and cobwebs everywhere. The only fairly clean area was the furnace room. It was an old out of date furnace, but at least it appeared it worked and had been maintained. What I could see overhead seemed very solid and well built.\n\nWe went to the second floor where there were four bedrooms. The largest bedroom was huge and had its own large bathroom. There was another fireplace, smaller than the one downstairs but no less ornate. \"Mava, there's potential everywhere. Can't you see what this bedroom would be like?\" \n\n\"I can see you in this bedroom that's for sure...I don't think that came out as I meant it.\" I had to smile. The third bathroom was down the hall and between two bedrooms with a door to each bedroom and the hall. This house seemed to go on forever. There were two more bedrooms with a smaller bathroom. All the bathroom fixtures seemed in good shape if they could be cleaned up. \"What's past that door,\" I asked, indicating a fairly narrow door different than all the others. \n\n\"That goes into the unfinished area. I've never been back in there but it seems to go on and on.\" \n\nAll of the second floor seemed in pretty good shape except for the water spots on the ceiling, and like everything else needed to be totally refinished. We moved on to the last staircase going to the third floor. This staircase was a little narrower and steeper but was adequate. As we ascended my face was next to Mava's butt, and it was a very nice butt to say the least. The stairs opened into a large finished room that had the broken front windows I had noticed earlier, and there was a small bathroom. Surprisingly it was in pretty good shape. I didn't see the purpose of the room unless it was a private reading room or perhaps a sewing room for the maid. I was guessing at best. \n\nAll this time I was taking notes but hadn't measured anything. I said, \"I'd like to go back down and look into that unfinished storage area.\" \n\n\"I'll need to get a flashlight from the car. It gets very dark in there.\" \n\n\"Okay. While you're getting the flashlight I'll take a few measurements.\" I was sure Mava thought I was nuts, or was just wasting her time, but she showed nothing but willingness to accommodate me. I still didn't have a clue where I was going with this, but the house was talking to me. It was pulling me into something. It felt like it was trying to tell me its secrets. \n\nWhen Mava came back I was still taking measurements. I didn't want to measure everything, but by measuring a few rooms it might give me a feeling for the overall size. We took the flashlight and cautiously entered the storage area. As we entered the door eased shut. We had to knock down cobwebs at every turn, but Mava was right. It went on and on, and I had Mava point the flashlight up every few feet so I could check for rot, water damage or whatever. There were a lot of dusty dirty artifacts from previous owners but I didn't bother seeing what they were. It was more important to be looking for any signs of serious damage. When we finally reached the end there was a small window that would let in a little light if it were cleaned. Mava turned around and ran into me. I said, \"Thank you. By the way you smell very nice.\" \n\n\"Thank you Nate.\" I let Mava by me and we worked our way back slowly. Just before we reached the door I tripped on something and fell forward against Mava. \n\nI instinctively grabbed for something to break my fall and it happened to be her hips, and in the process tearing her slacks and knocking her down with me. We ended up in a dusty heap with me on top of her. I didn't move for a minute. I just looked down on her and said, \"I'm sorry Mava, are you all right?\" \n\n\"I think so Nate, but you need to work on your technique just a little.\" \n\n\"I was afraid if I just asked you, you'd say no.\" \n\n\"It's not that I don't enjoy having you on top of me Nate because I do, but I think we would do better if we untangled and stepped back into daylight.\" \n\n\"Give me a second.\" I could hardly see what I was doing, because Mava had lost the flashlight, so I was trying to be careful. In the process of trying to get up I got a handful of one of her breasts. \"That was nice Nate, but aren't you being a little impatient?\" This lady had poise. I got up and finally helped her to her feet. We were very close, with Mava's lips only a couple of inches from me, and I could feel her body heat. I guessed where her lips might be and I kissed her. \n\n\"I think I could learn to enjoy this a lot Mava.\" \n\nIn a soft voice Mava said, \"I could too, but I think we better find some daylight.\" We finally made it to the hallway. \n\nI said, \"Let me brush some of the dust and cobwebs off you.\" I brushed my hands down her back and her legs then decided the hell with it and brushed her butt too. In the process I pulled her torn pants about half way down her hips showing her panties. \"I guess I better let you finish that.\" I stepped back and looked at her. I had to laugh. ",
        "\"Damn Nate, you have talented hands. How'd you get my pants to do that?\" \"I'm afraid you are torn pretty badly.\" Mava still hadn't pulled her slacks up. She looked at the side and saw a very long tear. \n\nI said, \"I owe you a pair of slacks I'm afraid, but you look very nice standing there in your panties. Now I'll have to buy the house. It has too many wonderful memories.\" Mava looked at me and laughed. \"Would you like me to finish brushing you off Mava?\" \n\n\"Do you think I need it?\" \n\n\"Most definitely.\" I started brushing her off more being sure to make her slacks slip farther down in the process and working my way around to the front. \"You got so dirty, maybe if you slipped them off and shook them it would work better.\" \n\n\"Maybe it would at that.\" Mava slipped them off and standing there in her panties, handed them to me saying, \"Maybe you could help me.\" \n\n\"I think between the two of us we could take care of things.\" \n\n\"Why didn't your pants tear instead of mine?\" \n\n\"Maybe because you have great legs and I don't.\" \n\n\"Thank you but I don't think it's fair that I'm here in my panties and you're not even torn.\" I took my pants off.\n\n\"Now that's more like it Nate, but why are you pointing at me?\" \n\n\"I think I'm being told to do something.\" I stepped up to Mava, pulled her against me and kissed her. \n\n\"Oh that's nice Nate and I like your pointer too.\" I kissed her again, allowing my pointer to press against her thigh. Mava kissed me back hard and felt my pointer. I finished undressing us, and then lay her on the floor on our clothes. We made love in the mansion. \"If I buy this house I will hang a plaque on this wall making this spot a shrine to us. Maybe there are some more empty houses we should check out.\" \n\n\"I have to think there are. Maybe even a furnished one or two.\" \n\n\"Maybe.\" \n\n\"Nate.\" \n\n\"Yeah.\" \n\n\"Thanks for falling on me and tearing my clothes.\" \n\n\"Anytime.\" We got up and dressed. We were a total mess now. \"I sure hate to go in the motel looking like this but I need a shower.\" \n\n\"Let's go to my place.\"\n\nWe headed for Mava's house and a hot shower. \"You go first Nate.\" She handed me a towel and left. I jumped in the shower and was all soaped up when she stepped in behind me. \n\n\"Thought I could save water this way.\" \n\n\"I'll wash your back for you Mava.\" \n\n\"Remember there are two sides to me.\" \n\n\"It's the least I can do after tearing your clothes off of you.\" I bathed her. I even washed her hair, but mostly I ran my hands all over her. A\n\nAlmost in a whisper Mava said, \"Nate, I think I'm clean now.\" \n\n\"Are you sure?\" \n\n\"I might need help dressing though.\"\n\nIt was quite a while before Mava made it back to the office. \n\nTuesday I called Mava and told her I was headed north unless she had another house to show me. Then I added, \"I want to spend a few days crunching some numbers on the Hawkins place. It needs a ton of work and I need to have a firm handle on what it would cost. \n\nIn a soft voice, Mava said, \"I have a couple houses I was going to show you that are furnished if you have time before you go.\" \n\n\"I better stay one more day then just to be sure I've seen everything.\" \n\nWe saw two furnished homes that day. \"I wish you were going to be around a little longer Nate.\" \n\n\"I do to Mava. I really think if I do my homework I can come up with an offer, but it won't be what they are asking. The list of things it needs is staggering.\" \n\n\"Will you be back down even if it doesn't work out?\" \n\n\"I wish I knew. I like it here and I like you a lot, but it all comes down to an income and a place to live. I'll be in touch with you frequently and it may even be about the house once or twice.\" \n\n\"Good luck Nate.\" I left for up north the next morning and was home by ten pm. \n\nOn the one hand it was nice to be in a regular house again, but it still had Pat everywhere I looked. I hoped she'd get wrinkled and scarred from all that sun.\n\nI spent the next two weeks doing research on what it would cost to renovate that place, and I even tried to guess how long it would take to do. The second part looked so bad I quit figuring the time issue. I knew I'd have to hire some things done. There was no way I could repair and paint the exterior or tuck point the stone work, and I really needed the professionals for the heating system because the design was more important than the actual installation. I would also need help bracing the front porch before I tore that up. I could replace the doors and windows, but they would be very expensive to buy. It went on and on.\n\n Chapter Three\n\nI was finally ready to make a bid on the house. It wasn't likely I'd get it though. They were asking one sixty-nine. I was going to offer one twenty five. The kitchen alone would set me back twenty-five grand and more, not including the appliances. I could get two fifty for my place and it was paid for, so that left me some wiggle room. But since I didn't know if I'd have an income for some time I had to consider that factor too. If I worked this right I could make a couple hundred thousand on the house and it would only take me three years or so. Not exactly a scheme to get rich quick, but not bad either. It would also likely make me an old man.\n\nI called Mava, but had to leave a message for her to call me, and I hung around the house figuring what I had to do before selling this place. It didn't need much. Once it was empty I'd clean it thoroughly and call it good. If a potential buyer saw something not satisfactory we could negotiate a solution. My plate was too full to worry about it. Mava called me late in the afternoon. \"Hi, Nate, how is it up north?\" \n\n\"I'm restless.\" \n\n\"That's because I'm not there.\" \n\n\"I couldn't have said it better myself. Tell me again how long the Hawkins place has been on the market.\" \n\n\"About eighteen months I think.\" \n\n\"That's quite a while. I have sent you something in writing but I wanted to let you know I've made an offer on the Hawkins place. It's going to be very low I'm afraid. I listed a few of the more expensive items that the house had to have early on and those things alone came to fifty thousand dollars. If they accept, then I have a chance of coming out okay if I do most of the work. I'm offering one twenty five.\" There was a long pause. \n\n\"I doubt they will accept that Nate.\" \n\n\"I know Mava, but to pay much more would be a mistake. It wouldn't even be possible if I didn't do the work. It will take me close to three years to get it done if I contract some of the biggest projects.\" \n\n\"I know it needs a lot and all you can do is offer. I'll keep a good thought for you.\" \n\n\"Thanks Mava. I'll be talking to you in a few days I'm sure.\" \n\nThe next few days dragged on. I didn't have much of anything to do but wait. If the offer was refused I had to decide to either stay where I was, or get with Mava again and see if I could come up with something else I liked. The problem with Mava was, I liked her a lot and it had the potential of becoming serious given enough time, but after Pat I wasn't ready for any serious relationships any time soon. That old house was still talking to me though. In a way I was afraid it would be accepted. I would be committing myself to the biggest and longest project I would ever undertake, to say nothing of the most expensive I'd ever undertake. \n\nI finally heard from Mava ten days later. \"Nate, I think we can make this work but they are counter offering one forty five.\" \n\n\"Tell them I can't go that high. I'll go one thirty. And I'll only go that high if I can put five grand down as good faith and take possession for sixty days rent free before closing. That will give me time to sell my place and pay cash for that one. I have this figured pretty tight so that's my best. If they accept let me know and I'll express my written offer to you and get things rolling at this end.\" \n\n\"I'll pass it along Nate. I have a feeling you will own a house here pretty soon.\" \n\n\"I hope so. Everything else going good for you Mava?\" \n\n\"Pretty good. I miss showing you houses though.\" \n\n\"I do too. If all goes well I'll see you in a few weeks.\" After talking with Mava I wanted to be with her. I had to keep that under control or I'd be in over my head.\n\nI spent the next few days cleaning my house thoroughly and set things up with a realtor to sell my old house. It used to have such meaning to me. Now it just had bad memories. I decided to think positive and started packing every thing I could do without.\n\nAfter Pat left, our friends came around saying all the appropriate things, and would drop in or call. As time passed that happened less and less.\n\nI got my call from Mava. \"They accepted your offer Nate, congratulations. I'm surprised they came down that far.\" \n\n\"Then it begins. I'll let you know when I get down there Mava. I'll call the realtor now and get the things rolling at this end. I could be down there in a week or so.\" \n\n\"I look forward to seeing you Nate, bye.\"\n\nThe movers came on Wednesday morning and expected to unload late Thursday afternoon, and I had my truck loaded with enough that I could survive if my furniture delivery got screwed up somehow. I was leaving a fairly expensive home by my standards, and moving to a huge dump but I was headed home.\n\nI left right after the movers, having turned everything over to the realtor. I pulled into the Holiday Inn in Murphy eleven hours later. I was tired, scared, alone, unemployed, excited, and if my house up north didn't sell I was in deep shit.\n\nBright and early Thursday morning I called Mava hoping to catch her before she got too deep into her day. It sounded like I woke her up. \"You sound a little fuzzy around the edges Mava.\" \n\n\"Hi Nate. I feel a little fuzzy around the edges. You want to tie up the loose ends this morning?\" \n\n\"I better since my furniture is on the highway headed this way.\" \n\nIt took a lot longer than I had thought but I finally had the keys to my house. Mava said, \"It's my tradition to take the buyer out to eat, but buying a house that size means we should go toward Chattanooga for a really fancy meal.\" \n\n\"I won't have time to go that far. The furniture will be here late this afternoon.\" \n\n\"I'll bring dinner to your place then. They should be unloaded and gone by seven.\" \n\n\"You're on lady.\"\n\nI left Mava and headed home. I spent the next several hours cleaning. I couldn't believe the dirt I was getting up. I cleaned the bathroom that was off the library, then cleaned the bathroom and bedroom upstairs. I took a shower and went outside to wait for the moving van. I ended up unloading my truck and getting dirty again instead.\n\nThe movers finally arrived and unloaded. I now had appliances, bedroom furniture and a few pieces of living room furniture. I had a lot to buy later. I made the bed, hung fresh towels in the bathrooms and unpacked some of the kitchen things. \n\nMava pulled in and came to the door carrying a ton of food and wine. At least I had a coffee pot and coffee. \"Here you go sweetie. Meals on wheels.\" \n\n\"I sure appreciate this.\" Mava had brought a wonderful meal and even served me. I had Mava for dessert. \n\nAfterward, Mava said, \"Nate, I can't get serious but I have to say, you aren't making that easy for me.\" \n\n\"I can't get serious either. I'm still dealing with what Pat did to me. But like you said, this isn't going to be easy. I think of you entirely too much.\" To seal our pact of not getting serious we made love again. \n\nMava said, \"On the other hand we should see each other every now and then just to stay in touch.\" \n\n\"You mean like maybe once every week or so?\" \n\n\"Yeah, something like that.\" \n\n\"I agree. Let's kiss on that agreement.\" We did...several times. \n\n\"Nate\" \n\n\"Yeah,\" \n\n\"Would you trip and tear my clothes again about next week?\" \n\n\"I'll see what I can do.\" Mava went home about ten and I fell asleep about three minutes later.\n\nI spent Friday cleaning and talking to contractors about painting and repairing the exterior and I spent the weekend cleaning some more.\n\n Chapter Four\n\nWithin two weeks I had an offer on the house up north. I was sure that if I'd held out I could have gotten another five grand, but I was so relieved I took the offer. I could deal with about anything else now because I had breathing room. I headed north to close the deal on my old place on Monday. then turned around and headed back south the same day getting home Wednesday.\n\nI decided to hold off for a few weeks to find a job. I wanted to at least make the place livable and I planned to be there for a long time. I wanted to be able to sit on my front porch and have coffee, so I hired a crew to gut the front yard and turn it into a lawn. I had every intention of rebuilding the front porch myself. but I wanted to use it now and it wasn't safe. so I had that rebuilt by the same crew that was repairing the house siding and trim, and painting everything. Once I replaced the windows it would be ready for winter.\n\nOne day after the porch had been rebuilt I was sitting having my coffee when a lady came walking up the drive. She looked to be maybe in her late forties. She was very pretty and had a bounce in her step. As she approached she said, \"Hi. I'm Aggie. I live next door to you\" and she pointed toward the east. \n\n\"Come on up on the porch Aggie and have coffee with me, I'm Nate.\" This would be the first of many cups of coffee we would share. Aggie proved to be one of the neatest ladies I had ever met. She was so put together yet modest. Her aura would warm a cold house and I swear could heal the sick. If she'd been just a few years younger I would have been chasing her feverishly.\n\nAs we talked Aggie said, \"I'm so glad to see somebody trying to save this grand old place. It hurt me to see it just crumbling like it was.\" \n\nI told her, \"When I was looking at it, I swear the house talked to me telling me to buy it. It was so strange. Do you know anything about the history of this place?\" \n\n\"A little.\" \n\n\"Maybe I could treat you to dinner one of these nights soon and you could tell me some tales.\" \n\n\"I'd like that Nate. If you ever just need to have somebody to talk to I'm most generally at home. Just come to the back because I'll likely be reading on the porch.\" \n\n\"I'm anxious to pick your brain Aggie. Could you make it to dinner say tomorrow night about six? I'll make us some pork chops on the grill.\" \n\n\"I look forward to it Nate.\" I couldn't wait to hear her tales. I couldn't wait to talk to Aggie. It was like she was reaching me the same as the house had. It was like I was supposed to have the house and I was meant to know Aggie. I wouldn't admit all that to anybody. I was getting weird. \n\nThe next night, right at six, Aggie came knocking on the door. I let her in and she graciously commented on how much I had cleaned up the place already. \"It's temporary. I will be starting to tear into it pretty soon now. I hope I don't annoy you with hammer and saw.\" \n\n\"I just may have to come over from time to time and supervise of course.\" \n\n\"I'd have it no other way.\"\n\nAggie started to tell me about the Hawkins. \"They were a proud but strange family and very private. The house had been the Hawkins place since around nineteen ten from what I was told. It was mostly lumber money that built it. The oldest member of the family that I can remember was Amos Hawkins. He died way back in oh, I guess in the sixties. He had to be ninety when he died. He was the sternest most sour faced man I ever knew. His wife Sadie was as sweet as she could be though. They were opposites in every way.\n\nThey had three children that grew up and moved away. There really isn't much to keep the youngsters here and there never has been. Of those three children I think there were five grandchildren. Only one seemed interested in your place. She was...oh I can't remember her name right now. She and her husband Allan lived in the house for several years with their two children, Kent and...oh, the younger sister was...it'll come to me later. They moved out a number of years ago, but kept the place more or less in repair for quite a while. I think the roof was their last effort. Maybe the money just wasn't there to keep up with it anymore.\" \n\n\"You know quite a bit about the old place Aggie.\" \n\n\"There was also a rumor that one of the kids, I don't know which one, didn't leave with them. They say one of them died and was left behind. After they had been gone a while the rumor just sort of died away. I never believed any of it.\" \n\n\"Now isn't that interesting?\" \n\nOver the next several months I got really close to Aggie. I rarely went two days without talking with her. I was closer to her than I had ever been with anybody. I could tell her anything without worrying she would say anything or criticize me. \n\nI worked on the house like a man possessed. But I finally got a full time job at Lowe's so I had an income of sorts and more importantly insurance. It slowed me down on the house, but it also allowed me to get discounts on supplies, and I often was able to buy things that were slightly damaged for almost nothing. The fact that I enjoyed working there was a bonus. It was a rare week that I didn't go home with a truck loaded with a rented sander or supplies or lumber. It certainly was keeping me fit. Aggie was forever calling me over to eat at her place in the evening. She wouldn't let me pay her, so I finally bought her a huge gift card for the grocery store. The ritual was I'd work for a couple of hours then Aggie would call me and say dinner was ready. I'd go over and eat with her, have coffee and talk, give her a hug and a kiss and go back to work until about midnight. This went on month after month. I was still seeing Mava, but it was more like every two or three weeks. She was tired of spending her time at my place she said. I didn't blame her, but until I could get well on the way I stayed married to the house.\n\nI finally hired Andy, an eighteen year old to help with the painting, hauling, cleaning and whatever I thought he could handle. He was learning fast so the list of what he could do was growing. He was a great help to me, and it provided him with a way to make extra money, and we became good friends as well.\n\nI had started in the living room, stripping woodwork, including the crown molding, repairing walls and restoring the fireplace. I found a beautiful pattern of fancy tiles and wood inlays that cleaned up beautifully. I even discovered a secret door in the end of the fireplace, but unfortunately it was empty. The fireplace turned out better than I could have hoped. I had it updated with gas logs and a remote control igniter, and I replaced the windows. That project carried over into the foyer, which got the same treatment, which led to the anteroom going to the library and the bathroom. I finished the whole area by refinishing the floors. They were now a beautiful shiny golden color. On and on it went. The new front door set me back a chunk of money, but it looked wonderful. It made the whole front of the house look better.\n\nIt was spring and most of the front half of the house was done on the ground floor. \n\nThen I told Andy we were taking a week off saying, \"I've worked your ass off for more months than I want to think about. I've also worked mine off. I need a break. Let's pick up where we left off next Monday night.\" I then called Aggie and invited her to dinner at my place Friday evening. \"Aggie, I owe you so much but if you're willing to eat my cooking again I'd love to have you over for dinner and a little wine.\" \n\n\"You couldn't keep me away Nate.\" I had a date.\n\n Chapter Five\n\nI made a Caesar salad, a pork roast; twice baked potatoes, southern green beans and I even baked my own sweet dinner rolls. I chickened out and bought dessert though. Aggie showed up wearing a beautiful, silky vee neck blouse and slacks that showed what a great body she had. I had learned she was fifty-seven and I was astounded. Seeing her like this made it all the harder to believe. \"Aggie, you are stunning. I feel privileged to have you here for dinner.\" ",
        "\"Nate, you are one of a kind.\" Aggie kissed me warmly and I escorted her to the living room and offered her wine. We talked until I poured the last of that bottle. \"Shall we try the dining room Aggie?\" I put her arm in mine and we went to dinner. \n\n\"Nate, you have really outdone yourself. This looks wonderful. Did you bake the rolls?\" \n\n\"I did, yes.\" \n\n\"You are amazing.\" \n\n\"I used to really enjoy baking, but I was getting fat so I had to quit.\" \n\nBefore we started I toasted Aggie. \"To the prettiest, smartest and most wonderful woman I have ever known.\" \n\n\"Why thank you Nate.\" We sipped our wine and I continued, \"Aggie, you have fed me, nursed me, been a source of information, a confidant, consoled me on bad days and made me laugh for these many months. Your friendship is utterly priceless to me.\" \n\n\"Nate you're going to make me cry in a minute.\" \n\n\"I've wanted to tell you all of that and more for a long time.\" I walked around the table and kissed her longer and with more emotion than I ever had. \n\n\"Nate, you're not getting drunk are you?\" \n\n\"I'm sober as a judge Aggie.\" We were quiet for several minutes as we ate. After dinner we went back to the living room and finished with a little more wine.\n\nAggie said, \"Nate, you have made this a memorable evening. Thank you so much for making me feel needed and loved.\" \n\n\"Aggie, one day while sitting on the porch I thought about you, and the only way I found to describe how you appear to me, is your aura could warm this house and heal the sick. When I was looking at this house it was talking to me. I had to buy it. When I met you, I had to get to know you. You affected me like this house did.\"\n\nAggie came over and kissed me again. Her lips were so soft. \"I wish I was twenty years younger.\" \n\n\"Aggie, you said you're fifty seven. I think you forgot to inform your body. It still looks like forty five.\" \n\n\"Nate, thank you for saying that, but I'm going to have to keep an eye on you. Your eyes are failing.\"\n\nAfter a little pause I asked Aggie, \"Would you be interested in going through all the things with me that were left in the house? The basement has a ton of stuff, the unfinished area on the second floor has a lot and I haven't even looked in the unfinished area on the third floor. Maybe you will know some of the people in the pictures or whatever. It will be god awful dirty though.\" \n\n\"I think that would be a lot of fun. Maybe we will find treasure.\" \n\n\"We'll most likely find junk, but maybe we can find some photos to frame and hang on the wall for atmosphere. You interested in doing it tomorrow?\" \n\n\"I'd love it. Nate.\" I had arranged my sparse furniture around the fireplace. We finished the evening by finishing the wine, watching the fire give the newly finished wood a golden glow, and I could watch the flickering flames make Aggie's eyes sparkle and her cheeks glow. I guessed I was getting drunk. Arm in arm I walked Aggie home. We couldn't be more comfortable with each other. We had known each other our whole lives somehow. \n\nSaturday morning I had breakfast and was enjoying coffee on the front porch when here came Aggie, dressed in jeans and a tee shirt. \"It looks like you're ready to do battle with the cobwebs Aggie.\" \n\n\"I'm ready.\" \n\n\"Coffee first or are you full of coffee?\" \n\n\"I'm full.\" \n\n\"Before we start I have to know. Is Aggie short for Agnes or Agatha?\" \n\n\"It's short for Agnes and if you ever call me that I'll go home.\" \n\n\"Understood. Let's start in the basement.\" \n\nWe spent hours going through clothes, boxes, pictures, broken furniture, an amazing amount of old dishes, coins and it went on and on. I saved things like pictures, an old shaving mug and razor, an old yellowed expense log, a few letters, the dishes and the coins just to name a few. I had a large box that was full of odds and ends. The larger pile I would have Andy haul out to the trash sometime. \"Is this as much fun as you thought it might be Aggie?\" \n\n\"I'm having a ball. I'm sharing somebody's life, or perhaps several lives. A part of them is still alive if even for this brief time.\" \n\n\"You have a lot of romance in your soul Aggie.\" \n\n\"I'll take that as a compliment and thank you.\" \n\nWhen we finished I said, \"I think we need a cold drink and a break before we hit the dust on the second floor.\" \n\n\"I could really use something to drink and the bathroom.\"\n\nWe went upstairs and got some sodas. When Aggie came out of the bathroom she said, \n\n\"I forgot to tell you last night, I think the bathroom is wonderful. You did a great job on it Nate.\" \n\n\"Thanks Aggie. The fixtures were in wonderful condition surprisingly.\" We finished our rest and we headed for the second floor. \"How long has it been since you've seen this part of the house?\" \n\n\"I'm not sure I ever did now that I think about it.\" \n\n\"Let me show it to you before we start.\" I started on the right and showed her the bedrooms with the adjoining bathroom, then the bedrooms and a smaller bathroom, then turning around I pointed out the small door that we would be going in and finished by walking into my master bedroom and bathroom. I sat on the bed while she looked around. Aggie came over and sat next to me on the bed without thinking about it. \"You have quite a suite here Nate. When it's done it will be so very impressive.\" I looked at Aggie and started to tell her thank you but instead I kissed her. Not as a good friend and neighbor but with passion. Aggie kissed me back. When we broke Aggie was flushed. \"You just caused me to have some wonderful feelings I haven't felt in twenty years Nate. I really like the feeling but it scares me too.\" \n\n\"We don't have to act on them if you don't think we should, but I would like to kiss you again though. I can't get enough of those.\" We kissed even more passionately than before. Aggie was breathing hard and her eyes were moist as they looked into me. ' ' \n\n\"Nate, maybe we better go treasure hunting. Then we should have a talk okay?\" \n\n\"Okay.\" I gave Aggie a warm hug and we left the bedroom before one of us changed our minds. \n\nI had flashlights for us and we entered through the little door. I had to smile when I thought of Mava and her torn slacks. This house already had more memories than my other place ever did. We started near the door and worked our way back toward the small window. I found a child's rocker in perfect condition, a lot of children's clothing in very good shape and several toys that would have value as antiques. I stopped and stared off for a minute. \"You okay Nate?\" \n\n\"What...oh yeah, I'm sorry Aggie. I get these feelings some times. It's hard to describe. It's like somebody is talking to me but I don't hear voices. Maybe I'm going nuts.\" \n\n\"Then again Nate, maybe not.\" That sounded a little cryptic. There was some more junk then Aggie found a small box. \"It's heavy Nate. Let's see if we can get it open.\" I couldn't open it without some tools so we laid that aside and moved on. We came to an old briefcase of stiff dried out leather. When we opened it we found a few hundred dollars in old bills. Aggie was animated. \"Nate, this is getting exciting.\" \n\nShaking my head I said, \"That's an odd way to handle money. You said they were strange and you weren't kidding.\" There were more clothes and old books again, some old 78-rpm records and a small empty steamer trunk that was in perfect shape and would look great downstairs. There was an old bible with a lot of family history written in it, and a couple of journals somebody had partially filled. We found more pictures and a long wood box that opened easily revealing an old gun. That made me smile. If it didn't have a lot of antique value it would look great on the wall in the library. As we neared the back we could see a wooden box about four feet long by a foot and a half square. Aggie pulled it near the window and tried to open it but without success. I said, \"Let's drag it out and we can open it and the little one downstairs.\" We dragged all our finds out into the light and looked them over again, then hauled them downstairs to the library. They would be out from underfoot until I had time to do something with them, and there would be room to put the things from the basement as well. \"I forgot about the third floor Aggie. Do you want to check it out or save it for another day?\" \n\n\"If you don't mind, lets save it. I'm anxious to see what we have found so far.\"\n\nI got some tools and after briefly looking at the journals and pictures we got the small heavy box. It wasn't locked, but seemed jammed for some reason. Aggie held it and I pried it trying not to damage the interesting looking box. It reluctantly opened to reveal its secret. There in front of us was a whole box of what appeared to be very old coins. \"Oh my God Nate. This could really be valuable.\" \n\n\"Even if not valuable it's a neat find. This is exciting.\" I picked up several coins and they appeared in excellent condition, all dating back to the nineteenth century or before. It had been somebody's collection. \"Nate, I told you this would be fun.\" We looked at the toys and the gun, and then our eyes fell on the large box. We attacked this one more vigorously. The box was nothing worth saving. I pried, scratching the wood then tried again. It was nailed shut. \"That's weird. Why would they nail it shut?\" We pried some more and it finally started to give. I stood and pulled the lid open. Aggie gasped and stepped back. There, lovingly wrapped in what was once beautiful white silk was the skeleton of a child. \"I guess the rumors were true Aggie.\" \n\n\"Oh, that poor thing.\" I held Aggie as we looked at the child. \"I guess we better call the police Aggie.\" \n\n Chapter Six\n\nThe police were there for quite a while. They took pictures, talked first to Aggie then to me. Later they talked to the two of us together. When we walked to the front door with them we saw TV news trucks out front. \"Oh damn Nate; they'll drive me nuts when I go home.\" \n\n\"Then you won't go home. By tomorrow they will have told their story on the late news and perhaps will hound us a little less tomorrow. We can face them together then.\" \n\n\"Nate, this takes us back to where we were earlier you know, unless you have a spare bed that I didn't see.\" \n\n\"I hadn't thought that far ahead. It's up to you. If you'd rather face the cameras I'll go out with you. If not, you can sleep in my bed with me and I'll do my best to behave.\" \n\n\"I noticed you didn't promise to behave.\" \n\n\"I'm not that sure of myself Aggie.\" \n\n\"Could we talk a little?\" \n\n\"We can talk all night if you need to. How about a little wine? I have one bottle left.\" \n\n\"That might help.\"\n\nWe shut the lights off and sat by the light of the fireplace. I said, \"This is very romantic. It's not exactly what we need right now, but I'd just as soon leave the lights off until they are gone.\" \n\n\"Nate, first of all I want you to know it would be wonderful to make love to you. The very thought of it takes my breath away. There are three things that complicate it for me. One thing is it will change our relationship forever. We can never go back to the way it was again. It might change it for the better but I don't know that. Another thing is what if I fall deeply in love with you? I can't get past the twenty years difference in our ages so that gets complicated. The last thing is purely a physical thing that is manageable but it scares the hell out of me. I haven't been with a man in more years than I care to think about. All those issues are complications to what should be a spontaneous and beautiful experience.\" \n\n\"Aggie, just knowing you think it would be wonderful pleases me. The first point I agree is a big one. I have loved being with you from the first time and I'd hate to lose any part of you. Second, I have trouble worrying about our age difference. But if it is a major concern to you then it's important. You are so pretty and sexy I can't see past that. The last point doesn't matter. We could overcome those fears if that was our decision. \n\nI guess you're right though, making love would not be a good idea right now.\" We were quiet a long time, finishing our wine and looking at the fire. \n\n\"Nate, let's just go to bed and be close.\" We undressed, took a shower and got in bed together. We held each other for a long time feeling each other's warmth. \"Nate this feels so good. I'd forgotten how wonderful it could be. For right now I'm very happy just holding you.\" We fell asleep together.\n\nWe woke about daybreak and I said, \"It seems so natural waking up and having you next to me.\" \"I could get used to this so fast, but I'm getting up because I feel my will power weakening. Besides I have to pee.\" \n\nWe got dressed and went down for coffee. I looked out the window and the street was deserted. We no longer had an excuse. I still didn't want her to go home. \"They've gone I'm afraid,\" \n\n\"Why are you afraid?\" \n\n\"I don't want you to go home.\" \n\n\"Then I won't for a while. Do you have a spare toothbrush?\" \n\n\"I have all sorts of things. When I packed that stuff I just threw it all in a box. I'll get you one.\" Pretty soon Aggie was back smiling. \n\n\"That's better. By the way Nate, you look wonderful naked.\" \n\n\"So do you Aggie. It was harder than you can imagine for me to behave myself.\" \n\nI took a deep breath and changed the subject. \"You want to go through the third floor stuff?\" \n\n\"Why not.\" We went up and entered the third floor room. Aggie asked, \"Why do you suppose they finished this area? I can't see why they would need another bedroom and bathroom.\" \n\n\"I wondered the same thing.\" \n\nThere was a storage area on each side of the room. It wasn't tall enough to stand up in so we went in on our hands and knees. It was more of the same things. We even found some antique Christmas decorations. We pulled most of it out into the room and crawled out so we could stand up. We then went to the other side and did the same thing, pulling everything out and crawling out to stand up. I said, \"It looks like the other stuff. Clothes, old records, mostly junk. \n\nAggie said, \"All the clothes or anything you don't want you might donate to a historical society. They have a different idea of what is important than we do.\" \n\n\"Good idea. I'll save it all and donate it later.\" \n\n\"Why don't I take the journals and things home and go through them. Maybe we can learn more about the family that way. I know you don't have time and it might be fun.\" \n\n\"That would be great Aggie. I'll get them boxed up and have Andy bring them over to you.\" \n\nWe went downstairs and Aggie said, \"I have to go home and take another shower and put on clean clothes. I'm gross.\" \n\n\"I disagree but I understand.\"\n\nAggie wasn't gone an hour and I was looking at the coins and money when Mava called. \"Nate, what the hell happened there last night?\" \n\n\"Nothing much, Aggie and I found a skeleton in a box is all.\" \n\n\"Then it's true.\" \n\n\"I'm afraid so.\" \n\n\"So do I get to hear the whole story or are you going to make me read the damn paper?\" \n\n\"I guess I can tell you.\" \n\n\"Put the coffee on, I'm coming over.\"\n\nMava's car pulled up, so I poured our coffee and set them on the kitchen table, then opened the door for Mava, and... Sheila? I was surprised to say the least. I kissed Mava and told Sheila to come in and I'd get another cup. We sat at the table and I told them the whole story. \"Damn Nate, you sure got this little town buzzing.\" \n\n\"I'm afraid to go out now.\" We talked it all through then Mava said, \"So tell me about Aggie.\" \n\n\"She lives next door and has been wonderful, always cooking for me and so forth.\" Mava smiled and said, \"I'm not jealous but what's she like?\" \n\n\"She's fifty seven years old.\" \n\n\"Oh.\" I knew that would shut that down. Mava didn't need to know the rest of the story. In a somewhat disapproving voice, Sheila said, \"This place is huge. Will you ever get it all redone?\" \n\n\"Oh sure. I have the front half of the first floor done already, plus most of the exterior. I'm way ahead of schedule. Would you like to see it?\" \n\n\"Uh, Yeah, sure.\" That sure didn't sound enthusiastic but I ignored it. Mava led the way, and as we walked toward the living room, I saw Sheila absentmindedly take Mava's hand for a second. That was an interesting development. Sheila was impressed with the grandeur of the room and especially the fireplace. \"This looks very romantic.\" \n\n\"Oh it can be very romantic.\" We went to the library with all of the refinished paneling and all the dusty relics from the attic on the floor. \"Oh yuck, what's all of that junk?\" \n\n\"Those are all antiques that will be donated to the historical society.\" \n\n\"Whatever.\" Sheila was showing her true colors rather quickly. As we worked our way upstairs I said, \"And that's where we found the body.\" I intentionally said body hoping to gross dear Sheila out. \n\n\"Oh yuck, get me out of here.\" It worked perfectly. We went back downstairs and they left. That would be the end of Sheila and I figured that would be the end of Mava.\n\nMonday I went to work and the boss got me right away. \"Nate, let's stay back here in the break room for a minute. I know you want to get on with your workday, but I fear that everybody will want to talk to you and keep you from your job. Why don't you take the day off with pay and tomorrow I'll have some things for you to do in the back where it's a little more private. You've set off quite a stir. In a few days this will blow over.\" \n\n\"Thanks Dean, I appreciate that.\" I slipped out and went home. \n\nI was hard at getting the kitchen ready for demolition when I heard a knock at the door. I looked through the peephole and saw Mava. I let her in and went for my coffee. \"You want some coffee?\" \n\n\"Sure, why not.\" We sat at the kitchen table and nothing was said for a minute. \n\n\"I guess you saw enough yesterday didn't you Nate?\" \n\n\"I saw enough to know that you are bisexual or think you are. I suspect Sheila is well beyond bi.\" \n\n\"You have a pretty good grasp of it I guess. I didn't know I had those urges until I met Sheila.\" \n\n\"I'm not sure you had those feelings before Sheila but it's whatever floats your boat as they say.\" \n\n\"Nate, I'm still trying to sort things out and Sheila thinks she has it figured already.\" \n\n\"I think Sheila has it figured for you. It's what Sheila wants and that's all that matters.\" \n\n\"How can you know that?\" \n\n\"It might as well be hung on a billboard Mava. I have no bad feelings toward you at all and I'm not being mean. I'm calling them as I see them. Sheila will use you up and spit you out in a few weeks.\" \n\n\"I don't think so Nate.\" \n\n\"No, I'm sure you don't, and I hope I'm wrong for your sake.\" \n\n\"I better get going I guess.\" \n\n\"Stay in touch Mava. I still like you, you know.\" \n\n\"Thanks Nate, I'll do that.\" Mava left and I went back to my kitchen project. Damn I led an exciting life. By the time Andy got there I had several cabinets for him to haul out, and then I had him take some boxes of journals and pictures over to Aggie.\n\nOver the next six weeks I gutted the kitchen and redid the walls and wiring, and added venting for the stove. It was Aggie to the rescue again. She kept me from starving but I didn't spend a lot of time just talking with her like I wanted to. I laid new flooring with Andy's help then started the cabinets. I hated living without a kitchen, so I was pushing myself even more than usual. The more the cabinets went up the better I liked the look. I put in cabinets that looked like old country cabinets, Corian countertops, a dishwasher, a trash compactor, a built in microwave oven and a little computer station. It ended up taking me nine weeks and a lot of money, but I had a kitchen to brag about. I even had a hanging rack over the island counter for pots and pans. You could feed an army from that kitchen if you wanted to. I even bought a gas stove that looks like an antique but was really a very modern appliance.",
        "Chapter Seven\n\nIt was Thursday and I felt it was time for another break. I gave Andy a hundred dollar bonus and told him not to come back for a week. I needed a rest, I needed an Aggie fix, and it had to be more than her fixing me dinner. While I was on my lunch break I had called Aggie and told her not to fix dinner and get fixed up because I was taking her out. Murphy doesn't have a lot of fancy places for dining but Doyles Cedar Hill was a nice place to get a steak. For me, steak was a treat. Steak in a restaurant was a very rare treat.\n\nI pulled into Aggie's drive and went for her like she was my date. Looking back, that's exactly what she was. When she came to the door I smiled. \"I'm going to be so proud to be seen with you. You look wonderful.\" Aggie smiled and kissed me on the cheek. \n\n\"You know Nate; you may well get talked about, dating an older woman.\" \n\n\"They could never guess your age and even if they knew, I couldn't care less. I'm honored to have you on my arm.\" \n\n\"Nate, you are so dangerous.\"\n\nDoyles was close so we were seated and having wine in no time. I noticed a couple of women look at us but I was sure it was because we found the skeleton. If not, oh well.\n\nI toasted Aggie and apologized for being so absent the last several weeks. \"I'm anxious to show you the kitchen. I officially pronounced it done last night.\" \n\n\"I can't wait. I know how hard you've worked on it. You're about done with the downstairs aren't you?\" \n\n\"All but the room off the kitchen and that will be no big deal.\" \n\n\"Have you given any thought about what you'll do after the house is completely done?\" \n\n\"None. It seemed so far off I didn't worry about it, but the project is going so much faster than I would have ever guessed. Instead of three years as I'd planned it will take me less than two.\" \n\n\"You have been going at it like a demon. I'm not surprised of your progress, but I can't see you staying there and working for Lowe's the rest of your life. You are too restless and ambitious for that.\" \n\n\"I'm sure I'll have to do something, but I don't know what, and it still seems too far away to worry about.\" We had a nice dinner then I asked Aggie if I could show her my kitchen.\n\nWhen we pulled up Aggie said, \"Have you taken the time to just look at this place recently? You have transformed it and should be very proud it.\" \n\n\"Thank you Aggie. I have been taking photos of everything, so one day I can look back on it all.\" We went in and I told her to close her eyes and I walked her to the kitchen. \"Okay now open your eyes.\" Aggie just looked around not saying a word. She opened doors and looked at it from different angles. \n\n\"Nate, this is your best work yet. You should be very proud of it.\" Then she gave me a hug. We poured some wine and went back to the living room. We talked, laughed and just enjoyed being together. Aggie was getting sleepy so I walked her home, kissed her and hugged her then went home to bed.\n\nIt was Saturday morning and I was having coffee on the porch when Aggie came walking over with something in her hand. \"Morning Nate.\" \n\n\"Morning love.\" \n\nThat made Aggie smile and say, \"Thanks Nate that sounded nice. I have something to show you.\" \n\n\"I've seen it but I'd love to see it again.\" \n\nAgain Aggie smiled and said, \"You're going to distract me and then I'll forget what I came over for.\" \n\n\"Go ahead. I'll behave myself for a little while.\" \n\n\"I found something in one of the journals that I think you'll find interesting. While you read that I'll get myself some coffee.\" I opened to the marked page and started to read it. I found nothing of major interest until I got about half way down. There, dated November tenth, nineteen fifty seven it said, \"My darling little Kent passed on this morning. He has been sick for so long and suffered so, at least he is with the Lord now, is at peace and...\" Whoever wrote it didn't finish. Aggie came out with her coffee and said, \"I think we know for sure who we found now.\" \n\n\"It looks like it. We better call the police I guess. I've wondered different times if the Hawkins have been in a lot of trouble over this.\" \n\n\"I have to think it hasn't been pleasant for them, but with Allan dead they won't know who did what.\" \n\nI called the police and we waited for them on the porch. A detective came walking up and introduced himself, saying, \"My name is Max Halverson but please just call me Hal.\" \n\nI said, \"Pull up a chair Hal. We have something for you to read.\" \n\nAggie said, \"Can I get you some coffee Hal?\" \n\n\"Thanks, I'd like that.\" Sweet Aggie was being the hostess for me. \n\nWhen Aggie came back with the coffee Hal had just finished reading the entry and said, \"That explains a lot doesn't it.\" \n\n\"I think it does yes.\" Hal thought a minute then said, \"They had to be a strange family.\" \n\nAggie smiled and said, \"They did have strange ways that's for sure, but considering how private they were I guess they didn't want others involved in their grief. I'll never understand why they didn't bury him, but I guess it was no different than putting him in a crypt.\" Hal thanked us for calling and asked to keep the journal for the time being, and then he made small talk, finished his coffee and left. Aggie said she was marking different entries that she thought I might find interesting sometime then said she had some shopping to do and left.\n\nThe following week I replaced the windows and a lot of the trim in the room off the kitchen, while Andy cleaned everything and started to paint. By Friday night we were ready to lay new flooring. I asked Andy if he was ready to try his hand and put down the flooring by himself. That seemed to make him happy, so the plan was to move my bedroom furniture to another bedroom so I could start up there and he could lay flooring.\n\nIt was getting late in the season and my mornings on the porch were numbered. I hated winters confinement. I tried to call Aggie then remembered she was spending the weekend with family so I was alone to ponder my future. \n\nAs I sat there I noticed an older woman, maybe seventy years old and a younger woman that I guessed to be thirty, standing out by the street looking at the house and talking. I waited a minute wondering if they were selling something, but they didn't have that feel to them. They finally walked up the drive and approached me. \"Excuse us, but we were admiring what you are doing to the old Hawkins place, I hope you don't mind.\" \n\n\"Thank you. I don't mind at all. Could I get you two some coffee or some sweet tea?\" \n\n\"That's so kind of you yes.\" The ladies settled in chairs and I got the older one coffee and the younger one tea. \n\nOnce I was seated the older one said, \"I'm Grace Greer and this is my daughter Alice.\" \n\n\"I'm pleased to meet you both.\" I was having trouble not staring. Grace was just that. Grace personified. She was a very pretty lady with perfect posture, so very composed and dressed impeccably. Alice was very pretty. She was striking, and like her mother, had perfect posture though dressed more casually, and made wonderful eye contact. \n\nI asked, \"Are you familiar with the old Hawkins place?\" \n\n\"I haven't seen it in years but yes, I was once very familiar with the house.\" \n\n\"Would you like to see it? I'm not done by any means. It's a work in progress.\" \n\nMrs. Greer looked at me and said, \"Restoring an old house like this is like a close loving relationship. It will always be a work in progress.\" \n\n\"That's a beautiful way to put it Mrs. Greer.\" \n\n\"Please call me Grace.\" \n\n\"Thank you, I'm Nate. Nate Walters.\" \"I'm pleased to meet you Nate and yes we'd love to see it if you don't mind. Would another time be better for you?\" \n\n\"Now would be wonderful, please come in.\"\n\n Chapter Eight\n\nWhen they entered the foyer Grace just stopped for a minute and looked, saying nothing. It was like she was traveling back in time. Alice stayed behind her standing closer to me. While Grace looked at the house I looked at Alice. I'd seen the house before.\n\nGrace stepped in a little farther taking slow, short hesitant steps, looking first one way and then another. Finding her voice she said, \"You have done such a wonderful job Nate. It's just like I remember it.\" Her voice had a weak sad quiver to it. I didn't want to talk. I wanted to let her just stay in the past for as long as she wished. She knew this house well apparently. Maybe she could share some stories with me sometime. Alice stayed back with me looking around, but also closely watching her mother relive the past. Grace cleared her throat and tentatively asked, \"Have you done the library yet Nate?\" \n\n\"It is done, and I'm pleased with the outcome, but it's full of old memories of the house. Dusty and unsorted.\" \n\n\"May I?\" \n\n\"But of course.\" I opened the large double doors and stepped back for Grace. She didn't move. It was clear she was crying now, softly and quietly. I stepped into the bathroom and got her a couple of tissues. Grace dabbed at her eyes and stepped back. \n\n\"I'm sorry Nate. I didn't think the memories would be so fresh and strong.\" \n\n\"There is no need to apologize Grace. Would you like to continue, just have coffee or would you like to come back another day?\" \n\n\"I'd love to come back another day if it wouldn't be inconvenient.\" \n\n\"I'd love to have you come back.\" \n\n\"Perhaps we should call first the next time.\" \n\n\"It isn't necessary to call ahead as I'm here most weekends, but I'll give you my number if you're more comfortable with that.\" That done the ladies thanked me several times and left. \n\nThat was so touching. I hoped they would come back. Grace and Alice impressed me to say the least, and the house seemed of great significance to Grace. I hoped to talk to her and I really wanted to see Alice again. I sat on the porch and thought about them for quite a while as I did my best to finish the pot of coffee. I was anxious to tell Aggie but I wouldn't see her before Monday or Tuesday.\n\nI was at loose ends Sunday. I didn't realize how much I relied on Aggie for my social needs as well as everything else. I walked around the yard, which was something I'd done little of since Andy was keeping it mowed for me. I stepped off the area where I wanted to build the garage in the spring and mentally designed it to look like a coach house. I was getting highbrow taste on a lowbrow budget. I wandered back to the house just as the phone rang. I was surprised when it was Alice calling for her mother. \n\n\"Would it be possible for us to stop by this afternoon?\" My mother won't be in town after tomorrow and I'd hate for her to wait until her next visit to see the house.\" \n\n\"I'd love to have the two of you back. Pick a time that's convenient for you.\" \n\n\"How about one?\" \n\n\"That would be fine. I look forward to seeing you.\" \n\n\"Thank you Nate, you are being so considerate.\" I spent an hour or so sketching my new carriage house garage at the kitchen table. The design came to me so clearly and quickly. I knew exactly what I wanted it to look like.\n\nThe ladies pulled in the drive promptly at one. \"Good afternoon ladies.\" \n\n\"Hello Nate. Thank you so much for putting up with us.\" \n\n\"You are welcome here anytime, please come in.\" We entered the foyer again and once again Grace stopped and looked. She seemed a little more in control this time but was still very quiet. \n\n\"May I see the library again Nate?\" \n\n\"Grace, please feel free to wander the house at will. I have no secrets. I also don't have much furniture yet. When I'm done remodeling I'll have to get professional help with that most likely if I'm to capture the spirit of the house.\" Grace smiled at me then looked in the library, but seemed more interested in the things Aggie and I had dragged out. I motioned for Alice to join me for coffee. Grace would likely be a while.\n\n\"Would you like some coffee Alice?\" \n\n\"I'd love some.\" I poured coffee and we sipped our coffee in silence and watched Grace pour over all the dusty treasures. She was getting filthy but she didn't care. I watched her as she slowly and tenderly ran her hand over the gun in the open case. She would pick something up from the dusty pile, look at it and gently lay it back down. I could swear her whole life was being relived in minutes. When she picked up an old toy truck she held it and stared at the wall for several minutes tears running down her cheeks. \n\n\"Alice, your mother looks like she could use a little brandy when she comes out.\" \n\n\"Nate, I think that would be a life saver for her. She is having a hard time with this but I couldn't keep her away.\" \n\n\"She must have quite a history with this house.\" \n\n\"Yes, quite a history.\"\n\nGrace finally came out dabbing at her eyes. I got up and helped her sit down. I didn't ask Grace, I just handed her a snifter with a splash of brandy in it. \"Nate, you are a darling, thank you.\" Her voice seemed stronger like she'd made the journey and had returned. I waited for Grace to take a couple of sips of brandy. \n\n\"Maybe after you have seen the rest of the house, if you're up to it, I could talk you into telling me a little about the house.\" \n\n\"I'd be happy to, but if you'll forgive me I'll use the restroom first. Then we can finish the tour. Grace went straight to the bathroom like she probably had hundreds of times many years ago.\n\nWhen Grace returned she said, \"Nothing in that bathroom is changed is it Nate?\" \n\n\"It's as I found it only cleaned and refinished.\" \n\n\"My God Alice, it was almost scary. I feel like I'm walking back and forth between the past and the present.\" Alice went in and came back out smiling. \n\n\"You are right mother. It's scary.\" \n\n\"Would either of you like more coffee or brandy?\" \n\n\"No, no thank you. I'm dying to see the rest of the house though. \n\nI said, \"Let's go to the kitchen. You won't recognize that room. I had to completely redo it.\" Grace led the way and once there sang my praises. \"You are right. This is totally different but it is lovely. You captured the right mood yet made it very modern.\"\n\nAs Grace turned she saw my drawings of the garage. \"Did you make these drawings Nate?\" \n\n\"Yes I did, this morning in fact. I'm building a garage in the spring and I want it to look like a carriage house or what I see as one anyway.\" \n\n\"If you keep looking through all the old things you will find pictures of the old carriage house. You will be interested to see how they compare to your drawings.\" \n\n\"I'll look for them. What was that room off the kitchen used for?\" \n\n\"The maid had a large table among other things in there, and she would assemble things like centerpieces for the dining room, or she would work dough for baking. It was her workroom and she didn't appreciate anybody else messing around in there. Even us.\"\n\nWe went back to the living room and started to ascend the stairs. Alice stopped and asked, \"Do you have a flashlight?\" \n\n\"I have one upstairs why?\" \n\n\"I'll show you something after bit.\" We continued up the stairs and Alice walked beside me. She reached out and put her hand on my arm. My heart skipped a beat from surprise. I looked at her and she smiled and lipped \"Thank you\" to me. I put my hand on hers and smiling, lipped back, \"You're welcome.\" Maybe it wasn't surprise that made my heart jump after all. Alice took my arm as we went up. As we reached the top of the stairs Grace automatically went to the left and entered my bedroom. \n\n\"Oh, I'm sorry Nate. I did that without thinking. That was my room once upon a time.\" \n\n\"Go right in Grace. I believe it's presentable.\" \n\nAlice looked at me with a devilish grin and said, \"You didn't leave your underwear out did you?\" \n\n\"Alice! That was rude.\" I laughed and looked at Alice, then said, \"That's quite all right Grace. Alice is just having fun at my expense.\" \n\nShaking her head Grace said, \"If anybody will, it will be Alice.\" We moved on to the two bedrooms with the adjoining bathroom. \n\nAlice said, \"I think that was my room but I'm not sure.\" \n\n\"That was your room Alice but I'm not surprised you don't remember very much.\" I said, \"What can you tell me of the bedroom and little bathroom on the third floor?\" \"That was the maid's room. Nobody went up there but her.\" \n\nAs we turned to go back the way we came, Alice put her hand on my arm again. \"I want to show you something in here Nate.\" \n\nGrace said, \"You two take your time. I want to go sit in front of the fireplace for a bit and remember the old days.\" Grace made her way to the stairs. \n\n\"I'll get the flashlight.\" When I got back, Alice took the flashlight from me and said, \"Follow me Nate.\" We entered the darkened area and Alice turned on the flashlight. \"I haven't been here since I was a kid so bear with me.\" \n\n\"I'll stay as close to you as I can get.\" Alice stopped, turned and smiled at me. \n\n\"Good\" and she moved on.\n\nAs we neared the far end she stopped. \"Now this is the part I have to try and remember.\" Her right hand reached out to the wall and pushed lightly. \"No, that's not it.\" Then she did it again...and then again. This went on for a couple of minutes. \"Oh, wait a minute I think I remember now. Here hold the flashlight.\" I held the flashlight and Alice got on her knees. When she did that I pointed the flashlight at her butt. \"Nate, the light would help more over here.\" \n\n\"Not me it wouldn't\" \n\n\"Behave yourself and I'll show you a secret.\" \n\n\"You have my attention.\" Alice pushed on the wall again a couple of times then a secret panel popped open about three feet tall. I got down on all fours with my face within inches of Alice's butt. \"I think I found something Alice.\" \n\n\"What?\" \n\n\"I found that you have a wonderful butt.\" Alice laughed out loud. \n\n\"That's not the secret but thank you.\" Alice slipped through the door and stood up, and then I followed. Once we were standing up Alice shined the flashlight back down the way we came. \"Nate, you have a secret room. A big one. It goes all the way back to the hallway and runs along your bedroom wall.\" \n\n\"Why did they build it this way?\" \n\n\"I have no idea. It must have made sense to somebody though.\" I was so close to Alice I could smell her fragrance. \n\n\"What happens if you turn the flashlight off?\" \n\n\"It gets very dark. Like this,\" and Alice turned off the flashlight. I turned Alice around and we kissed lightly. \n\n\"It isn't my fault you know.\" \n\n\"And that would be because...?\" \n\n\"I was too close to your butt and you smell too good.\" \n\n\"A poor excuse but I'll take it.\" We kissed again only a little longer and more seriously that time. \"I'm only doing this because you are being so kind to my mother.\" \n\n\"And I'm only doing this because your mother wants me to.\" \n\n\"Now how do you know that?\" \n\n\"It was in her eyes.\" \n\n\"Those were tears.\" \n\n\"Whatever, it worked.\" I kissed Alice again several times. \n\n\"We should probably be getting back to mom.\" \n\n\"Maybe if we waited just a few more minutes.\" \n\n\"Yeah, maybe it would be okay.\" We took several more minutes. I finally said, \n\n\"Okay, I guess we better go. I thought I was past the stage of getting home to mom by a certain time but you are worth it.\" \n\n\"So are you Nate.\"\n\nWe fumbled our way out and I put my hand on Alice's butt. She had to guide me you see. When we reached the hall and closed the door, Alice turned and putting her hand on the side of my face, kissed me in daylight. \"I like it in daylight too, imagine that.\" Alice looked at me and let her hand slide slowly down my arm. Then she turned and put my hand on her butt. \"It's this way. Now don't get lost.\" I stayed very close. I wanted to trip and tear her clothes but I thought that might be a bit much. I'd do that the next time. Yes, I had every intention of seeing her again.\n\n Chapter Nine\n\nWhen we got to the living room Grace was sitting there with a cup of coffee and her eyes closed. Alice went over to her and said, \"It took a while but I found the door.\" ",
        "\"Oh, I knew it would take you a little time Alice.\" I swear I saw a smirk when she said that. \n\n\"May I refill your cup Grace?\" \n\n\"No thank you Nate. I hope you don't mind I helped myself.\" \n\n\"Of course not. My apologies for leaving you alone.\" \n\n\"I didn't mind at all. It was wonderful just sitting here in quiet reflection.\" I picked up the remote and lit the fireplace for her. \n\n\"Does that add a little something?\" \n\n\"Oh Nate, that is the perfect touch, thank you.\" \n\nAlice said, \"I hate to spoil things but if we are to get you to Atlanta tonight yet we best be leaving soon so I can be home before midnight.\"\n\nWe walked to the porch and I took Grace's hand between my hands and said, \"Grace, it is an honor and a privilege to meet you. May I hope to see you again one day?\" \n\n\"Nate, you darling man, you just may see me again. I want to see the rest of the restoration and the coach house. Actually I just want to see you again.\" While keeping her hand with mine she turned to Alice and said, \"Alice, come here a moment will you?\" When Alice stepped up Grace replaced her hand with Alice's. I now was holding Alice's hand and looking at her. Grace said, \"Would you tell Nate the rest of the story and take your time about it. I'll be resting in the car. Bye Nate.\" I was very curious where this was going. \n\n\"Nate, this could take a few minutes, would you like to sit down?\" \n\n\"I'd rather stand close to you and hold your hand.\" \n\n\"I understand you know somebody named Aggie.\" I was speechless for a minute. \n\n\"Yes, she's been the dearest person in my life. How did you know about Aggie?\" \n\n\"You choose good friends. Now I also understand she told you a little of the history about the Hawkins place.\" \n\n\"Yes she did.\" Where the hell was this going? \n\n\"Did she tell you about an Allan Hawkins and the child named Kent?\" \n\n\"Yes, she did.\" \n\n\"Did she tell you that there was another child?\" \n\n\"Yes\" \n\n\"That other child's name was Alice. Alice Hawkins Kent. Allan's wife was Grace. Grace Greer Hawkins.\"\n\n\"You mean you and Grace are...\" \n\n\"That's who we are yes.\" \n\n\"Why didn't you tell me right off?\" \n\n\"Aggie suggested you meet us on an even footing to start with and we agreed that she was right.\" \n\n\"How well do you know Aggie?\" \n\n\"Aggie has been a friend to mother for more years than I can count I guess. They lost touch with each other, but when you bought the house Aggie contacted Grace and told her how you loved the place. Then when the problem with Kent came up and the police came calling, Aggie contacted us again. She has kept us informed about you in the most loving way you can imagine.\" \n\n\"Now I understand why Grace had such a hard time yesterday. She must have seen things that belonged to Kent.\" \n\n\"That was a lot of it, but the whole experience was more than she anticipated. I worried about what the shock might do to her.\" \n\n\"I noticed you watched her closely yesterday. My God I have a million questions but one question tops them all.\" \n\n\"I'll answer it if I can Nate.\" \n\n\"Can I see you again and very soon?\" \n\n\"You just might be able to see me next weekend if you want to.\" \n\n\"No...I don't want to wait that long, but if I have to I will.\" \n\n\"Nate, the way Aggie talked I was afraid you were in love with her.\" \n\n\"I am Alice. She has been the single most wonderful woman I have ever met, and I'll always love her but as a dear friend that I'd walk through fire for.\" \n\n\"I'm glad to hear that. I better go. I'll call you next week sometime. Maybe we can have a date and we can play question and answer for hours, because I have a few for you too.\" Alice wrapped her arms around me and kissed me. \"Bye Nate. \n\n\"Bye Alice.\"\n\nOnce they were gone I just dropped in the chair on the porch. I was going to wring Aggie's neck and then I was going to kiss her and tell her I loved her. Then I was going to wring her neck again. Once I had that plan established I went in and got a cup of coffee \n\nI didn't do anything but sit on the porch for the next couple of hours and think. It finally dawned on me. I was happy. I had a good life. I was doing what I liked to do for the most part. I had Aggie. I didn't know if I should put her in the friend column or the girlfriend column. Let's see, I liked my job, I wasn't financially desperate yet, and the more I was in my new house the more I loved it. Now I had Alice in my life. I had a very good feeling about her. I had only been around her a little bit and I was falling for her. It also seemed she liked me an awful lot and I even adored Grace, so if it got serious I might have a great mother in law. As it turned out Pat did me a big favor. A painful one, but it worked out great.\n\nWhile I was sitting there deciding what to fix for dinner I saw Aggie come home. I was giving her thirty minutes, maximum then I was calling her. That would give her time to take a deep breath, pee and rest a minute. I decided to get a meatloaf out of the freezer and have it for dinner, so I got it going in the microwave to thaw and had a cup of coffee. I checked my watch. It had been twenty minutes. I took my time and made two salads and got out some green beans. That was enough. Thirty minutes. \n\nI called Aggie. \"Hello Nate.\" \n\n\"I have about fifty questions for you.\" \n\n\"Is that all?\" \n\n\"Dinner is on the table in thirty minutes.\" \n\n\"I guess I better get on over there then.\" I couldn't be mad at her. She may have done me the biggest favor in my life and it may have been the hardest thing she had ever done.\n\nWhen I opened the door for Aggie I put my arms around her and kissed her. \"I thought you were mad.\" \n\n\"No, I'm confused.\" \n\n\"I knew that.\" \n\n\"I love you.\" There was a long pause. I...I didn't know that.\" \n\n\"I knew it, but refused to accept it, but to let you off the hook, I also realize it can't be. That doesn't mean I don't love you. I'll always love you Aggie.\" \n\n\"Nate, I'm sure you know I love you too. You brought feelings to me I thought were long since dead or at least dormant. Having you near me has put a spring in my step and a smile to my face. I'll always love you Nate no matter what.\" \n\n\"Okay, now we have both finally admitted to loving each other, I want to know how you found the strength to stand by and introduce another woman into my life. I told Alice I'd walk through fire for you but that is nothing compared to what you just did.\" \n\n\"Did you really tell Alice that?\" \n\n\"Yes I did.\" \n\n\"Would you really?\" \n\n\"Without a second thought.\" Aggie got up and kissed me. \n\nI said, \"Aggie, I can't believe how you hustled me. Starting by pretending not to remember Alice or Grace's names. You knew the whole story didn't you?\" \n\n\"Not exactly...I was shocked when we discovered Kent's remains but the rest I pretty much knew. I had to get some of the journals out of your house before you read any of them. It really was a family with strange ways. I'll never know if it was Grace or Allan's idea to keep Kent in that box. I like to think it was Allan's. \n\n\"Have you been seeing Grace right along?\" \n\n\"No, I hadn't talked to her in ages, but when you bought the house I knew she'd be worried about the house she loved so much. I thought I'd put her mind to rest and keep her posted. I have to think she knew you'd find Kent unless Allan did that without telling her. That part is still a mystery to me. Now tell me about Alice.\" \n\n\"What can I tell you that you don't already know?\" \n\nAggie smiled and asked, \"Do you like her?\" \n\n\"I like her very much. She is a beautiful woman but I feel weird talking about her with you.\" \n\n\"I understand Nate but I'm alright with it. I want you to be happy. If nothing develops with you two then so be it. I thought the two of you would be a great pair.\" \n\n\"How would you feel if she ended up living here with me?\" \n\n\"I'd be so happy for you. Plus it might keep you near me just that much longer and I might get to see Grace more often.\"\n\nWe toasted each other and had dinner then retired to the living room and sat in front of the fire. \"Nate, did you kiss Alice?\" \n\n\"Yes\" \n\n\"Did you like it?\" \n\n\"Yes, now stop with those awkward questions.\" Aggie smiled. \n\n Chapter Ten\n\n\"Aggie\" \n\n\"Uh huh,\" \n\n\"No matter what happens in the future. No matter if I'm with someone, no matter who, how, where, what or when, you will always have me to turn to if you need something. If you need someone to talk to, I'm available. If you need help of any kind I'm available. Alice will know that or anybody else for that matter. From now on if I kiss you and wink at you, you will know I'm telling you I love you.\" Aggie set her glass down and put her arms around my waist and her head against me. She didn't say anything for a long time. \n\nAggie finally looked up at me, her eyes watery, and said, \"Thank you Nate. That is all I could ever ask for.\" We fell asleep together sitting in front of the fireplace, holding each other and didn't wake up until about three thirty. \n\n\"Aggie, let's go to bed. You can sleep in after I go to work.\" \n\n\"Okay Nate.\" \n\nI buried myself in the house. It was my escape. I worked poor Andy to death. My bedroom was now down the hall and I was gutting the master suite tossing things out the window for Andy to haul away when he got a chance. I decided to rip out to the studs so that meant a major project was underway including the bathroom fixtures. I was hard at it on Thursday when Alice called. When I heard who it was I said, \"I'm so glad to hear from you.\" \n\n\"Thank you Nate. You sound out of breath.\" \n\nI told her what I was doing and we talked a bit then she asked, \"How is your schedule this weekend?\" \n\n\"For you, it's wide open.\" \n\n\"You smooth talking thing you. Can you stand it if I show up Saturday morning?\" \n\n\"I sure can. Bring your jeans and you can help me remodel.\" \n\n\"Okay.\" \n\n\"I was just kidding, I wouldn't do that to you.\" \n\n\"See you Saturday.\" \n\n\"Alice\" \"Yes?\" \n\n\"Be sure you're dressed when you get here I have a hired hand.\" \n\n\"You're cute... Bye.\"\n\nRight after I hung up the phone rang again and it was Aggie announcing dinner. I dropped what I was doing and headed to her place. I had cut a path straight across so I was there in a couple of minutes. \"What took you so long?\" \n\n\"Sorry, it's a combination of wanting to see you and hunger.\" \n\n\"At least I came first.\" I gave her a kiss and she told me to sit down. We had a nice dinner as usual and we talked over coffee. I finally admitted Alice was coming Saturday and Aggie, after a brief pause, said to tell her hi for her. I said I had to get back because I'd made the biggest mess I'd ever made and had to get it cleaned up. I got up, kissed her, patted her ass and gave her a wink and a smile. Aggie smiled and winked back.\n\nBy Saturday morning I was hanging the first sheet of sheetrock. I had given Andy another bonus and the weekend off. I had decided to work until Alice got there, then I'd shower and take the day off. \n\nAlice arrived about ten thirty and I met her at the door looking sweaty and covered with plaster. \"You sure know how to dress for a date.\" When she came in I kissed her and said, \"Let me jump in the shower real quick. I'll be much better company.\" \n\n\"If you don't mind me rummaging in the kitchen I'll make us some coffee.\" \n\n\"It's in the cupboard above the coffee pot.\" \n\n\"Do you need any help in the shower?\" \n\n\"Don't ask twice or the answer will be yes.\" \n\nI was down in near record time. \"That was pretty fast.\" \n\n\"I was motivated.\" I gave her a quick kiss and got some coffee. \n\n\"So what are you working on now?\" I told her how deep I was into the bedroom and said I had an awful mess. We talked a bit and Alice got a little serious. \n\n\"Nate I have to tell you, I watched you verbally waltz with my mother. She loved talking to you. You have totally charmed her.\" \n\n\"I'm glad she enjoyed herself, but I think a lot of it was the past coming back to visit her.\" \n\n\"That's the kind of thing I'm talking about. That simple phrase, the past coming back to visit her, is what she so enjoyed. Don't be surprised if she comes calling again before long.\" \n\n\"I'd like that. She is a grand lady and I can't imagine the chaos she caused when she was young.\" \n\n\"She claims I'm a lot like she was at my age, so after you know me better you two can discuss it.\" \n\n\"That could be very interesting.\" \n\n\"Before I forget it, Aggie says Hi.\" \n\n\"How is Aggie?\" \n\n\"Spectacular\" \n\n\"You really do have a place in your heart for her haven't you?\" \n\n\"I most certainly do.\" \n\n\"Mother and I think she is special too.\" \n\n\"Would you like to go over and say Hi? I'm sure she'd be delighted to see you.\" \n\n\"Let's do that just for a minute.\" I grabbed the phone and called her. \n\n\"Hi. Alice is here and wants to come over and say hi to you. You decent?\" \"You're right Aggie; you aren't just decent you are great I stand corrected. We'll be right there.\"\n\nI led the way and we cut across to her house. \"I can tell from the path you are a regular visitor here.\" \n\n\"All the time.\" Aggie seemed genuinely happy to see Alice. \n\nAfter talking a minute, Alice said, \"When I asked Nate how you were he said spectacular. What did he mean by that?\" \n\nAggie looked at me and smiled then said, \"He just likes my cooking I guess.\" We visited some more then got up to leave. I went over and gave Aggie a kiss and pat on the butt then winked at her. I wanted Aggie to see that some things would never change as far as I was concerned. Once we were out of ear shot Alice said, \"Do you always kiss her and pat her ass?\" \n\n\"Most of the time yes.\" \n\n\"If I didn't know better I'd think you two were secretly married.\" \n\n\"We are really close.\" \n\nOnce we were inside I asked Alice if there was anything special she wanted to do while she was in town. That caused a long pause. \"Yes but that can wait. Show me your current project.\" \n\n\"Sure but be careful or you'll get your clothes dirty.\" We went upstairs and went into the master suite. \"My God you weren't kidding were you. How long will it take you to put this back together?\" \n\n\"Doing it part time maybe three weeks, four at the most.\" \n\n\"You replacing everything?\" \n\n\"Everything except the furniture. Like I said last weekend, I'll do with the furniture I have for now.\" \n\n\"What are you putting down for the floor?\" \n\n\"The nicest carpet I can find. This is one room I intend to splurge on a little. I have a plumber coming next week to set the bathroom up for a walk in shower, whirlpool tub, fancy double sink etc. etc.\" \n\n\"That sounds really nice.\" \n\n\"I hope so.\" \n\n\"Have you been back in the secret place yet?\" \n\n\"No, I didn't see any point going in alone.\" Alice stepped close, put her arms around my neck and kissed me. \"Going in the secret place isn't needed for that you know.\" \n\n\"I'm still learning the rules.\" \n\n\"For the most part there are no rules.\" \n\n\"Oh.\" Alice kissed me again so I grabbed her butt with my hands and pulled her forward then kissed her back. \n\n\"I like that but I think we should practice.\" \n\n\"Remember, if we reach perfection we have to do it a lot to stay perfect.\" \n\n\"That's true but I'm not afraid.\" \n\n\"You're a brave and beautiful woman you know.\" \n\n\"Thank you sir. Where did you move your bed?\" \n\n\"Let me show you my humble temporary digs.\" We went to my bedroom and didn't come out for quite a while. I finally said, \"I hate to seem insensitive but I'm hungry.\" \n\n\"You mean you'd take food over me?\" \n\n\"I'm going for food and you.\"\n\n Chapter Eleven\n\nOver lunch Alice asked me what I did so I told her about my life changing events then said, \"So here I am, working at Lowe's. I'm using a little of my profits from my last house to remodel this one.\" \n\n\"So you're planning on selling this one once it's done?\" \n\n\"That was my plan, but now I don't want to. The problem is my income isn't set up for what the taxes and insurance will be on this place. It was my plan to do this three or four more times then retire. I didn't expect to get emotionally attached to a place and have it screw up my plans. What do you do Alice?\" \n\n\"I work in publishing out of Asheville and Knoxville. How did you come to choose this place?\" \n\nI gave her the whole story excluding the bisexual realtor and said, \"When I first walked in this place it was in awful shape. I was afraid to walk across the front porch, but once I was inside and standing in the living room, the house talked to me. I know that sounds weird but it did. I almost broke out in a cold sweat. I knew that if I could get it for a right price, I could afford to do what I'm doing. I had to find a way and I did. I haven't regretted my decision for an instant.\" \n\n\"So you're happy with your life then?\" \n\n\"For the most part yes I am. Don't get me wrong, I'd like more money but we can't always have what we want.\" \n\n\"So the house really talked to you?\" \n\n\"Yep\" \n\n\"Does it now?\" \n\n\"Not in the same way. It wanted me here so it's happy now.\" \n\n\"You are weird you know that?\" \n\n\"I've heard tell, yes.\" \n\n\"I like you Nate. I guess I like weird guys.\" \n\n\"Good. I like you too Alice. Except, do you have a nickname? Alice sounds too formal to my sensitive ears.\" \n\n\"I don't like Alice either. If you come up with a nick name I like I'll adopt it.\" \n\n\"What's your middle name?\" \n\n\"Maureen.\" \n\n\"That's easy. Your name is Mo. Short for Maureen.\" \n\n\"I'll take it.\" \n\n\"I just realized, your last name is Kent. You're not married are you?\" \n\n\"No, not anymore thank god.\" \n\n\"A bad experience I take it.\" \n\n\"Two years of sponging, drinking and lying.\" \n\n\"Has it been a long enough time that it's behind you?\" \n\n\"Oh yes, it's been five years or so.\" \n\n\"Good.\"\n\n\"I've decided something else too.\" \n\n\"What's that, pray tell?\" \n\n\"I like making love to you.\" That made Mo smile more. \n\n\"We haven't reached perfection yet though.\" \n\n\"Sad but true. Maybe we should work on that next.\"\n\nThat was pretty much how the weekend went. By Monday I was almost too tired to work. Mo and I had set a tentative date for me going to her place the next weekend. I hadn't been out of town in over a year and it almost scared me. \n\nI worked on the house until midnight every night except Friday night. It was coming along nicely. It wouldn't be long and I would be done with it. I had decided to give Andy a chance and try his hand doing one of the other bedrooms once I was moved back into my suite.\n\nThe next weekend I went to Mo's in Asheville. We spent at least a little time looking at furniture, and Mo was getting a feel for my tastes. We ate out almost every meal testing different restaurants each time. It was apparent that Mo had a few bucks to spare.\n\nOver the next several weeks we saw a lot of each other. It was getting pretty serious between us. I was still going to Aggie's at least twice a week sometimes more. I was still kissing her and patting her ass.\n\nOne weekend at my house we were talking on the porch and Mo asked me what I thought the house might sell for when it was done. \"I'm guessing and planning on something over four hundred thousand. I'll have well over two in it not counting my labor. To reach my goal I'd need to get four seventy five.\" \n\n\"That's a lot of money.\" \n\n\"It sure is, but so much of the house will be new or completely redone and it's an impressive place to say the least.\" \"\n\n'Do you still love it like you did?\" \n\n\"Very much so yes.\" We were quiet for a bit then I said, \"Before I forget it again, when Grace was here the first time and she saw the things in the library did she mention anything in particular that caught her eye?\" \n\n\"Curious you should ask that. She mentioned not long ago that when she saw Kent's toy truck she about fainted.\" \n\n\"Then I'll send it home with you. If she doesn't want it you can return it, but I'd like her to have it or anything else she might have seen and wished she had.\" ",
        "\"No wonder Mother loves you too.\" I looked at Mo then kissed her.\n\nThat night about two in the morning I suddenly sat up in bed and listened. Mo woke up and asked, \"What's wrong Nate?\" \n\n\"I...you're going to think I'm nuts.\" \n\n\"I already do. Did you have a bad dream?\" \n\n\"No, no, not at all. This house is talking to me again.\" \n\nMo moved so she could see me better and asked, \"What do you mean?\" \n\n\"Something or someone or whatever the hell it is says I'll live here for a long time and everything will be alright. It's like it came to me. Not a voice or a sound just a message.\" \n\n\"Are you sure you're alright?\" \n\n\"I'm fine. In fact I feel relief. I know I don't have to leave Hawkins Place now.\" \n\n\"Nate you scare me sometimes. You're that sure the message isn't a dream?\" \n\n\"I'm that sure Mo.\"\n\nSunday morning after breakfast I asked Mo to help me go through some of the things in the Library. We sorted clothes into one pile, books in another, journals and pictures in another and so on. Then I remembered Aggie had that box of journals and pictures, so I asked Mo if it would be all right to have Aggie come over for coffee and bring the things in the box with her. Mo smiled and agreed. I called Aggie and in minutes she was there with the box of things. \n\nAggie joined us and the three of us had a wonderful time. Aggie even started washing the clothes and drying them making a pile of very nice, very old items. I had run across a lot of pictures and was casually flipping through them before adding them to the pile when I saw a picture of the carriage house. \"Oh shit.\" \n\nAggie said, \"What is it Nate?\" Both girls came over and saw the picture of the carriage house. Aggie said, \"That's the old carriage house is all. It's been gone for years.\" \n\n\"Mo, where are those drawings I made?\" \n\n\"They're still in the kitchen, I'll get them.\" Mo came back and laid the drawings out. I took the pictures out and laid them next to the drawings. \n\n\"Anybody have doubts this house talks to me?\" My drawings were the same exact design as the old carriage house. The curve of the door openings, the design of the cupola on the roof, even the length of the eaves was identical. I said, \"You can't believe how fast I drew these. It was well less than two hours.\" \n\nMo said, \"My God Nate, this is so weird.\" Aggie was smiling. \n\n\"Nate, I have no doubt you are supposed to be here.\" We decided we needed a cup of coffee and a break.\n\nAfter about three hours Aggie kissed us both and left. Mo and I decided we'd done enough sorting. There was plenty of time for that. I said, \"I just remembered what Grace said about pictures of the carriage house. She knew they'd be identical, yet she was so cool and calm about it. I'll bet when you tell Grace about this she will smile and nod is all.\" \n\n\"I'm beginning to think you know her better than I do.\"\n\nThat evening after dinner, Mo and I were sitting in the living room talking about everything, past present and future. I said, \"Mo, I love having you here. Actually I just love being with you.\" \n\n\"I love being with you too Nate. So you think you would be happy living in this big old house?\" \n\nI looked at Mo and said, \"I love the idea but it has one condition.\" \n\n\"What's that?\" \n\n\"That you will share it with me.\" \n\n\"What do you mean?\" \n\n\"I mean as my wife.\" \n\n\"Nate, are you proposing to me?\" \n\nI took her hand, looked at her and said, \"That's exactly what I'm doing Mo. I love you so much. You have overwhelmed me. I almost made a fool of myself the first day I ever saw you. Will you marry me?\" \n\n\"I'd have to stay in Asheville frequently during the week. \n\n\"Does that mean you love me and will marry me?\" \n\n\"Of course I love you. I said so when we were talking about Mother earlier today. I said, \"Mother loves you too. I thought I was hitting you over the head, but I guess I was too subtle, and yes I will marry you on one condition.\" \n\n\"What's that?\" \n\n\"We get married in this house.\" \n\n\"That would be perfect.\" \n\n\"There is one more condition.\" \n\n\"What?\" \n\n\"You finish our bedroom first. I have to have the marriage bed in the new suite.\" \n\nWe hugged, kissed, laughed and kissed again. We didn't make love. At least not right then. Mo called Grace and put her on the speakerphone so all three of us could talk. Grace was euphoric. She was almost giddier than we were. I told Grace what Mo had said about Mo being like she was when she was young then added, \"So in a way I'm marrying you. Maybe you can give me some tips on what to lookout for. I think I have my hands full.\" \n\n\"You do have your hands full Nate, but I'll help you through it.\" \n\n\"I knew I could count on you.\" Mo told Grace about us getting married in the living room and Grace cried. After hanging up I realized we had to tell Aggie. That was going to be tough for me. \n\n\"Mo, when Aggie is told about us there is going to be a lot of hugging, kissing and crying. Do you want to be there or should I tell her next week?\" \n\n\"I want to be there. I understand about you two. You have been very up front about her.\" I was scared to death to tell her. Not even Aggie knew how close I came to proposing to her at one point. \n\n Chapter Twelve\n\nI called Aggie and asked, \"Aggie is it too late for Mo and me to come over for a minute?\" Aggie said she'd put the pot on. We walked over and gathered around the table like I'd done a thousand times before. Normally I was as comfortable there as at home. \n\n\"So, what's up with you two?\" Thankfully Mo took over. \n\n\"Aggie, Nate just proposed to me and I said yes.\" There was a pause and I died. \n\n\"I'm so happy for you two. When I set it up so you two could meet I knew you were good for each other. You two belong together.\" I got up and gave Aggie the warmest hug and kiss I could. I had to talk to her after Mo had left but I felt relief. We talked about getting married in the living room and Aggie insisted on being involved in the wedding preparations. When we got up to go I gave her a hug, a kiss, a pat on the ass and I winked at her twice. Aggie winked back.\n\nWhen we left Mo said, \"You two are so near being married you might end up feeling like a bigamist. Have you always had that hug, kiss, pat and wink routine?\" \n\n\"It evolved I guess you could say. I like having two women in my life I've decided.\" \n\n\"You bigamist.\"\n\nMo left straight for work from home very early Monday morning and I went to work like always. Monday night I walked over to Aggie's. \"Hi Aggie, got any coffee?\" \n\n\"Only for you love.\" God that sounded good. \n\n\"I have to tell you Aggie my love, it was incredibly hard to come over here and tell you we were getting married.\" \n\n\"Thank you for your concern, but I told you I was okay and I meant it. All things considered it couldn't work out better. In a way I'll have you longer than if you'd stayed single and had to sell the house. At least you will be close.\" \n\n\"I love you Aggie.\" \n\n\"I know you do Nate, and I love you. Even better, Mo knows we love each other.\" \n\n\"We are a strange pair aren't we?\" \n\n\"We found what works for us and that's all that counts.\" \n\n\"Aggie, over the years did you ever feel like the house talked to you?\" \n\n\"Not exactly no, but I know what you're talking about.\" I went home feeling a lot better. I even worked on the bedroom until one in the morning.\n\nI took some time and rounded up the rest of the things from the storage areas and put it all in the library just in case Grace wanted to go through it. The house was talking to me again apparently, because Mo called and said Grace wanted to come up again. I was glad I'd gotten the things out for her. I rented a small bedroom outfit for Grace and had it put in the bedroom next to my temporary bedroom. When Mo and Grace got there we had lunch and talked for hours, then Grace got up and said, Nate, if you don't mind I'd like to spend some private time with the things in the library. I just want to visit my past once more if you don't mind. \n\n\"Grace you take all the time you want. I'm going to take Mo to look at furniture and we'll meet back here if that works for you.\" \n\nGrace gave Mo a look then said, \"That would be fine.\" I went upstairs for my billfold and when I came down Mo stopped talking to Grace. We left for shopping. \n\nOn the way Mo said, \"I wasn't going to tell you for a while because it was to be one of our wedding gifts but now I have to. Mother still has most of the furniture from this house in storage and she's giving it to us. We won't want it all because it's just too old, but she thought we might like the wood pieces. The tables and the book cases from the library that sort of thing. So we better hold off on buying furniture.\" \n\n\"I wasn't really going to look for furniture I just wanted to give Grace some space. She has some things she needs to put to rest I think. Things she has been carrying around with her for a very long time.\" \n\n\"How can you know that Nate?\" \n\n\"I don't know. I just know I guess.\" \n\n\"My God you two must read each others minds all the time.\" \n\n\"By the way I'd love to have the furniture if you don't mind. We can make this place look so wonderful now.\" \n\n\"Only if we can have more modern sofas and chairs. \" \n\nMo and I fixed dinner and the three of us had a very pleasant evening. I learned what a hellion Mo was as a child, and Grace talked about Allan just a little bit. I was learning more all the time. Grace yawned and apologized then bid us goodnight. Mo and I talked for a long time after that about setting a wedding date and our immediate future then we went to bed. \n\nFor whatever reason, I woke at five am and got up without waking Mo. I felt rested and ready to go. I didn't want to wake anybody so I just dressed and slipped downstairs to make coffee. I was surprised to see Grace sitting there in her robe having coffee. \"Good morning dear lady. What gets you up so early?\" \n\n\"Probably the same thing that got you up so early.\" \n\n\"I can't believe I'm up this early and awake.\" I poured my coffee and topped off Grace's cup then sat down next to her. We made small talk for a few minutes then Grace set her cup down and took my hands in hers and looked at me. \n\n\"Nate, I want to say this before Alice gets up. You and I both know there is something between us. We sense the others needs I guess you could say. You know what I'm thinking without realizing it. I know how you feel about us and about things. I can feel it. I know some of your fears. We are linked somehow, maybe by the house. It really does talk to you doesn't it.\" \n\n\"It really does Grace. I can't explain it, but it does.\" \n\n\"You don't have to explain it, I know. I'm so happy for you two, and I know the two of you and this house are all meant for each other and you will be happy together. I know this and I don't need to tell you how I know it. I love you both dearly, with or without the house, but the house is a very healthy place for the two of you. You can do what you want with the things in the library now. I have no more need of them. Now be a dear and give me a kiss and freshen our coffee.\" It occurred to me I'd never even kissed Grace on the cheek before. I got up and kissed her on the cheek and touched her face with my hand. \"Thank you Grace, for being here, for being so understanding and for being you. I think you are as much a connection for me and Mo as the house is.\" I didn't see it but Grace was watching me and smiling. I poured us fresh coffee and sat down just before Mo came in the room. \n\n\"Okay you two, what are you up to?\" \n\n\"We wondered if you were going to sleep all day.\" \n\n\"It isn't even six a.m. yet.\" \n\nGrace said, \"The best part of the day.\" As Mo poured her coffee she smiled and said, \n\n\"Seeing the two of you alone together makes me nervous.\" \n\nMo and Grace left a little after lunch and I went to work on the bedroom. \n\nMonday night Andy was there and we went at it hard. Every night after work I'd work on the house then go to Aggie's for dinner then work until midnight. Andy would stick with it until about half past nine then head home. The next weekend Mo had to fly to Phoenix so I wouldn't see her for another week. I hated that, but it gave me two whole days to work on the house. The plumber was almost done so it was up to me. By the next Thursday I had the plumber setting the fixtures and I took Friday as a vacation day and finished the room. I was exhausted. I told Andy he was in charge of the remaining three bedrooms and the bathroom but I was kind of in a hurry for them. We went over what the rooms needed and I turned him loose. I had a carriage house to build. \n\nWe still hadn't set the date for the wedding but I was hoping to have the carriage house done in time for a spring wedding. Then it started again. Something was telling me we had to marry by May. The feeling was so strong it rattled me, so I took the pictures and drawings to an architect and had him draw plans for it. I wanted to be certain it was right. Then I hired the contractor that did the other work for me and went over in detail what I had to have. I was running out of time and had to abandon my plan to build it myself. The house was talking to me again. Or was it the house? I was beginning to wonder. I had about four months to finish. I asked Andy how he felt with that time frame and he thought he might make it but wasn't sure. I asked him if he knew somebody who could work with him and be certain they'd be done on time. He said he'd take care of it. \n\nThe next weekend I asked Mo if we could get married the first part of May and she was more than happy with that. She and Aggie would make the plans. The two women in my life. I confided in Aggie about my urgency saying, \"I'm not saying anything to Mo about it and I couldn't explain it if I had to, but I know it has to be early May.\" \n\nWonderful sweet Aggie said, \"I understand Nate. Believe me I do.\" That's all she would say. I guess that's all she had to say.\n\nThe closer the time came, the more the house or whatever was talking to me. I could feel the urgency. It wasn't something that scared me; it was just something that had to be done. Period. I found myself walking around the house touching things up, double checking everything and hounding the construction guys on the carriage house. It was a four car building so it was good sized and the detail had to be perfect. Right down to particular lantern lights. When Mo was there I slowed down and acted normally. She'd really think I'd gone off the deep end and maybe I had.\n\nI took out all the things I was interested in from the collection in the library then called the historical society in Asheville. A lady named Eleanor Taylor came out and took the whole collection that remained. She asked to see the house and was very impressed with it making suggestions on the furnishings and arrangement. I told her I had the original furniture coming and that really impressed her. \n\nI spent several days going over old photos and selected quite a few to hang. I remembered a plaque, something like a small coat of arms that was found in the pile from the storage area on the second floor. I took it upstairs and hung it on the wall just outside the small door. I smiled and said out loud to no one, \"There Mava, just as I promised.\"\n\nMo asked me about it later and I lied to my wife to be. \"It's something that seemed like it should be there.\" Mo patted my ass and that was the end of that. I always keep my promises.\n\n Chapter Thirteen\n\nThursday evening as I was returning from Aggie's, Mava pulled into the drive so I invited her in for coffee. There was the usual small talk for several minutes then Mava told me I was right about Sheila. \"She's a controlling bitch that almost ruined my life.\n\nI ended up seeing a therapist because of her.\" \n\n\"I'm sorry to hear about that Mava. You don't deserve that.\" We talked some more and I told her I was getting married. Mava cried. \n\n\"If that damn woman had stayed out of my life we might still be seeing each other.\" \n\n\"We might, but we'll never know for sure. You're still my friend Mava and I hope I'll still be yours.\" \n\n\"You will always be special to me Nate.\" We talked a while longer and Mava's spirits seemed to improve so I showed her what else I'd done on the house including the master suite, and then then showed her the plaque. \n\n\"I keep my promises.\" I got a hug and a kiss for that. Mava left about ten and I went to bed and I thought about Mava. She was a great woman and a lot of fun to be with. She was also great in bed. \n\nWhenever Grace needed to talk to me she would have Mo call me. I didn't know why. That was just her way, so when she called me herself I was surprised. I told her it was good to hear from her, and she said she wanted to have the furniture delivered if that was okay. I told her absolutely and that I was anxious to see it. The movers were there the next week. I'd never seen any of the pieces so I had to make some fast decisions about what went where. They were amazing pieces, ornate without being gaudy. Like a long sofa table, end tables, occasional tables, lamps that needed some restoration, side chairs that I thought were beautiful, bedroom furniture and it went on and on. I spent a lot of time looking everything over. I didn't even know the names of some of the pieces or where they might go, so I just put them where I thought they looked nice. I was sure Mo would want to rearrange, but we had time yet for that. I was anxious to have Grace see it all back in the house. I sent Grace flowers with a long note of thanks.\n\nWith all the furniture from Grace I had to put an ad in the paper to sell my furniture. That wasn't one of my smarter ideas. Everybody and their brother came. Almost all of them were just curious about the house and more than a few wanted to see where the skeleton was found. I wasn't very nice to those people. I did sell the furniture though.\n\nI guessed the house or who or whatever it was, decided I was on schedule because it had been pretty quiet. I still felt there was heavy significance to early May.\n\n Chapter Fourteen\n\nIt was the first Monday in April and I went to work as usual and was called to the boss's office. I always hate that. \"Nate, how would you like to be an assistant manager? The hours would be a little more variable but the pay would be quite a bit better. I know you can do the job so it's up to you.\" \n\n\"I'm getting married next month so I have a honeymoon coming up. Will that be a problem?\" \n\n\"None whatsoever and congratulations. Let me know by say, next Monday.\" I thanked him for the opportunity and left with a little more bounce in my step. I had been told I would keep the house. It was looking better all the time. My cash reserves were being drawn down quite a bit, so more money coming in would be a big help. I couldn't wait to tell Mo on Saturday. \n\nWhen she got there and saw the furniture she was impressed and agreed with the arrangement for the most part. \n\nThen she added, \"But we have to have a few more modern touches because, though looking grand it's a little depressing. Nate, I know an interior decorator that would be a lot of help to us if you don't mind.\" \n\n\"I think we could use the help, but she'll have to hurry.\" \n\n\"I'll call her Monday.\"\n\nI told her of my promotion and she was happy for me and took us out to dinner to celebrate. When we got home we continued to celebrate in our new suite. \"So, my love, how do you like you're new suite?\" \n\n\"I think it's wonderful, and since you are so good with your hands I think we just might have to spend the day up here tomorrow and keep those hands busy.\" \n\n\"I think you just might be right.\" It wasn't quite all day. Mo loved the carriage house when we walked out there late Sunday. \"I have somebody coming on Wednesday to start the cobblestone driveway and that will be the last of the restoration. It's a good thing too. We're almost out of time and I'm about out of construction funds.\"",
        "After Mo left for her place Sunday night I felt lost. I was already missing her and I didn't have much to do anymore.\n\nAndy was almost done with everything upstairs, so we moved all the tools from the back porch into the carriage house so he could go to work out there. I was going to miss having him around, but the work was almost done. Monday night Mo called and said Julia the decorator could come Wednesday if that was okay, and I said the sooner the better. Within two weeks we had more new furniture in the living room.\n\nIt was now the end of April and the wedding was set for May the sixth. It was only going to be the two of us, plus Grace, the Preacher, Aggie and a couple of Mo's friends from Asheville. The women had reserved a room at Doyles Cedar Hill Restaurant and that was going to be it.\n\nBy the fifth I couldn't sit still. By the morning of the sixth my hands were shaking. It went so fast I hoped somebody was taking pictures because I probably wouldn't remember much of it. We had our time at the restaurant, and then we headed for the coast. We had rented a suite on the ocean for a few days and that was going to be our honeymoon. We spent most of the rest of our honeymoon in our suite at home \n\nIt didn't take us long to find our routine. It was like we had always lived together.\n\nThe library was set up as Mo's office at least temporarily, and I had my desk in the corner. I was writing a journal about all that had happened since arriving in Murphy. Well maybe not all. Mava played a much more minor role in this version. I had photos I had taken as the work progressed along with photos we had found. It was turning into quite a picture book with photos of the house in prime condition, then in neglected condition, and then the restored condition. It would be quite a provenance for the house. I never thought of myself writing but it was coming easy and I was enjoying it. \n\nI was starting to hear from the house again. I couldn't tell what was going on, but it had a heavy feeling to it. There was going to be another significant event in our lives.\n\nThe tables had turned for Aggie. Now she was coming over a couple of times a week and eating with us or with me if Mo was away. I liked being a bigamist. If Mo was away, Aggie would help me sort pictures and find entries in the old journals to include in my tale. If Mo was there and not busy, the three of us would sit by the fireplace and talk.\n\nOne evening as I sat at my desk and Mo was away I felt a sudden sadness, a loss. It caused me to stop and hold my breath for a minute and stare at the library wall. I just let it happen. The front door opened and Aggie came in and came straight to me. I stood up and we hugged and cried. Grace was dead. We knew it. We felt it. That had been the reason for hurrying. Once Grace had seen the house restored and Mo and I married she was ready to go. She had visited her past and made peace with it many months ago. She had chosen her time to go. \n\nWe got the call late that night from a friend of Grace's in Atlanta, long after Aggie and I had grieved. I called Mo and told her she was needed at home and that was it. That was not a message to be delivered by telephone. Aggie and I sat and talked, hugged, kissed and cried for our loss, not Grace's. \n\nIt wasn't long after Grace had left us that it became apparent that Mo now had Grace's talent. Often times the two of us didn't even need to talk. We even knew the instant Mo got pregnant. I was excited and in shock. It wasn't planned.\n\nNow the house doesn't talk anymore and we have a good life. Just me, my two wives and baby James. Oh yes, and James seems especially alert.\n\nThe End "
    ],
    "authorname": "thornapple",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-hawkins-place"
}