{
    "title": "Do the Right Thing? Ch. 02",
    "pages": [
        "(Recap: After finding excitement in showing her body, Charlotte agrees to accompany her boyfriend's best friend, Nate, on a hiking trip. Since she and Nate have engaged in phone sex, Charlotte wonders what will happen on this trip. Will Nate and she explore their attraction or will she \"do the right thing?\")\n\nNate arrived early at our apartment. We loaded up in Nate's car and dropped Reggie off at Logan Airport by seven-thirty. Pulling onto I-93 north, Nate asked if I was hungry. I nodded and he said if I could wait a bit, there was a diner just over the New Hampshire border that had a great breakfast.\n\nNate was easy to engage and we covered a wide range of topics driving up the highway. We got off the interstate and found our way to the diner. It was crowded, but we managed to snag the last booth. Over a gazillion calorie breakfast, Nate described the hike and painted vivid pictures of what we would see from the top of Mt. Washington.\n\n\"What's the cabin like?\" I asked.\n\n\"Rustic,\" he replied, and after a pause, he added, \"at best.\"\n\n\"Don't tell me there's an outhouse.\"\n\n\"No,\" he laughed. \"If I can get the generator going, the well pump will enable us to use the toilet inside. We will have some lights. The shower is definitely in the rustic category. The good news is that the generator also has enough power to fire up the water heater and run the small refrigerator.\"\n\n\"So, what's the bad news?\"\n\nTurning a little red, he said, \"The toilet and a tiny sink are in a little closet, for privacy. But the shower is just in the corner of the cabin. My friend was planning to hang a curtain, but I'm not sure he ever got around to it. Don't worry, Charlotte, I'll step outside.\"\n\n\"Hey, it's not me I'd be worried about. You've seen everything I've got. You should be concerned if I'll be so polite.\"\n\nNate turned even redder. He drank his coffee and smiled.\n\nWe stopped in Manchester to stock up on food, drinks and ice. Nate had three large coolers in the back of his Jeep. He selected steaks and chicken for our meals and we added veggies and other supplies. I made sure we had enough cookies and other treats. By nine-thirty we were back on the interstate heading north.\n\nAs we drove I became more relaxed with Nate. He was great company and I looked forward to spending the next couple days with him. Passing through Franconia Notch, Nate told me the story of the Old Man of the Mountain and how it collapsed into a pile of rocks at the base of Cannon Mountain in 2003. I had seen pictures of it when it was still attached and now regretted I hadn't taken the time to come up and seen it for real.\n\nWe stopped in Twin Mountain for a light lunch at a local restaurant. While we were waiting for a booth we overheard a young woman talking on her cell.\n\n\"That sucks,\" she said. \"Not until Monday?\"\n\nWe could see her shoulders sag. \"Yeah, I understand. Okay, thanks. Just do what you have to. I'll call you on Monday.\"\n\nShe ended the call and we could see her mutter \"fuck\" under her breath. I looked at Nate and he nodded.\n\n\"Hi,\" I said.\n\nShe looked at us wondering why strangers were talking with her. \n\n\"Didn't mean to snoop,\" I said, \"but we couldn't help but overhear. Are you having a problem?\"\n\nShe looked to be on the verge of tears. \"You could call it that. I'm stuck here because my piece of shit car decided this was the perfect spot to give up its radiator.\"\n\n\"Look, we can't do anything about your car, but join us for lunch. At least you can talk with us.\"\n\nShe looked at Nate and me and then at the mostly locals who filled the restaurant. The girl was young, maybe late teens early twenties. Nate and I were each a year shy of thirty. To her we probably looked ancient.\n\n\"Thanks, you don't mind?\"\n\n\"Come on, our booth is ready.\"\n\nNate and I sat on one side and she settled across from us. The waitress gave us our menus and said the special today was meatloaf. We ordered ice teas and she left to get the drinks.\n\n\"I'm Charlotte and this is Nate.\"\n\n\"Gretchen.\"\n\nWe shook hands. Gretchen smiled and let out a deep breath. \"Thanks. I really had myself worked up. It's nice of you guys to reach out.\"\n\n\"Always happy to help a fellow flatlander,\" said Nate.\n\n\"Flatlander?\" asked Gretchen just as the waitress appeared with our drinks.\n\n\"Yep,\" the waitress said. \"That'd be folks living down south. Some say anyone below the Notch is a flatlander and others say anyone below Plymouth. Doesn't make much difference, but good for a heated discussion now and again. Lots of folks with lots of opinions always make for a powerful set-to.\"\n\n\"You can tell a flatlander?\" asked Gretchen.\n\n\"Honey, you stick out like a sore thumb. Not that we mind. Without you we'd have no tourism and no business. Now, what can I get you?\"\n\nWe ordered and Ginny, our waitress, headed toward the kitchen to put in our orders.\n\n\"So, how do you think she knew I was a flatlander?\" asked Gretchen.\n\nI don't know what got into me, but I said, \"Maybe because women up here wear bras.\"\n\nGretchen looked down at her thin tee shirt and the nipples pushing against the fabric. She looked back at me and then laughed.\n\n\"Maybe that's what she meant by sticking out like a sore thumb.\"\n\nThe three of us cracked up. I was relieved that Gretchen didn't take offense at my remark.\n\nAfter taking a sip of iced tea she said, \"What can I say? I hate bras and am not afraid to be seen.\"\n\nI recalled how I felt when I flashed Nate my boobs. Maybe Gretchen and I had some things in common.\n\n\"So, what brings you up here?\" asked Nate.\n\n\"I'm between summer jobs,\" she said. \"Thought I'd climb Mt. Washington. I have to be back Friday to start my next job. Gotta bust it to earn money for next year.\"\n\n\"Still in college,\" I asked.\n\n\"Going into sophomore year. My parents cover tuition, room and board. I take care of books and my spending money.\"\n\n\"What are you going to do now?\" I asked.\n\n\"I don't know. Guess I'll hang around here and see if I can find a cheap motel. This really sucks.\"\n\nI looked at Nate and he shrugged. Thinking about what I had imagined could have happened this weekend and what a new person might do to upset that daydream, I also considered the plight of the young woman. I remembered back when I was in school and how sometimes life just seemed to get to be too much for me. Maybe with another person in the cabin, I could contain my libido and be a good girl. I chuckled to myself as I thought that the bad girl inside me was winning all the recent battles.\n\n\"Hey, why don't you join us?\"\n\nNate exhaled deeply.\n\n\"What do you mean?\" Gretchen asked.\n\n\"We're planning to climb Mt. Washington tomorrow. You can come with us. Nate snagged some sketchy cabin for tonight and we'll head out early in the morning.\"\n\nGretchen looked back and forth between Nate and me. \"That's kind, but I think I'd be sort of a third wheel. You and your boyfriend might have things to do that an unplanned guest might screw up.\"\n\n\"Actually, we're not a couple,\" I said. \"Nate and I are friends. He's my boyfriend's best friend.\"\n\nGretchen looked at us for a while. \"Oh.\"\n\n\"That's a loaded 'oh',\" I said. \"What do you mean?\"\n\n\"I don't know, you two just look like a couple. The way you sit close to each other, talk with each other like you are enjoying it, casually touch each other, and kinda seem comfortable being together.\"\n\nI was conscious of my thigh pressing against Nate's. \"You're fairly observant.\"\n\n\"I guess,\" she said.\n\nGinny brought our lunches and we broke off the conversation and ate. The food was basic, but good. We shared the large order of fries and all agreed they were superior.\n\nAfter Ginny cleared our plates and we were sipping another round of ice teas, I said, \"So, what do you think?\"\n\n\"I think I would have a lot more fun with you guys than sitting in some crappy motel room in this little town. Are you sure you want me?\"\n\n\"Yeah,\" I answered. \"I think it will be fun. I do have to warn you that Nate says this cabin is rustic.\"\n\n\"Rustic like in taking a dump in the woods?\"\n\nI laughed. \"That was just about my first question. No, more like rustic in besides an indoor toilet, there isn't much else.\"\n\n\"I can deal with it,\" said Gretchen. \"As long as I have some privacy when it comes to the toilet, I am really casual about the rest.\"\n\n\"Casual?\"\n\n\"You know, like I don't freak out if someone sees me without clothes and stuff.\"\n\n\"Oh,\" I replied. I wonder if Nate would like looking at her naked. I turned and saw the half-smile on his face. I guess that answered my question. I wondered if I would like to see her nude or would mind if she saw me. I was surprised at the little rush that thought gave me. Her young beauty made her look so innocent. Her dark hair was close to mine in coloring, although she wore it longer than I did. She was maybe an inch or so shorter than I, but had long legs that made her appear taller. As her breasts constantly moved underneath her tee shirt, I imagined they were about the same size as mine. I caught myself wondering what their shape was. I realized I was attracted to her. It had been a while since a girl had that effect on me. \n\nI was planning to push the boundaries on this trip. When Nate described the open shower, I knew I'd be up for taking one and letting him watch. I also had fantasies about getting to see him naked. After our phone sex encounters, I wanted to discover how big his cock was. Masturbating together was another dream I had. The way Gretchen was speaking maybe those ideas were not out of the realm of the possible.\n\n\"So, are you an exhibitionist?\" I asked.\n\nGretchen laughed. \"Subtle one, aren't you?\"\n\n\"Just picking up on what you said,\" I answered. \"Sounded like you might enjoy exhibitionism.\"\n\n\"You might say that,\" Gretchen responded.\n\nGinny brought our check and we split the bill three ways. Gretchen grabbed her backpack and we headed to Nate's Jeep. After tossing it in the back, she climbed in the back seat behind Nate. She and I could look at each other as we talked.\n\nAs Nate drove, Gretchen confirmed my impression that she's an exhibitionist. She told us about her experience as a nude model for an art class at her college. Being a natural story-teller she had us laughing at some of her experiences. I was interested as she described how she liked to be naked in her dorm room while her roommate was an extremely shy person.\n\n\"What did it feel like to be nude in front of her, knowing she'd never seen anyone without clothes before?\" I asked.\n\nGretchen hesitated, smiled and said, \"It was a fuckin' rush.\"\n\nI put my fist out and she bumped it. I knew how she felt as I recalled my reaction when Nate saw me naked.\n\nGretchen explained her theory of how she exercised power by using her body. As I listened, her words resonated. I wondered what Nate thought of all this. I looked over and noticed the big tent in his shorts. \n\n\"Good,\" I thought. \"He's getting into this.\"\n\n\"So,\" I asked, \"is it just being naked that you like, or is there more involved?\"\n\nGretchen smiled. \"How about we get to this cabin, have a bunch of beers and then talk about what more there might be?\"\n\nShe then offered to buy some beer as part of her contribution to the weekend. Although Nate and I packed a six-pack and brought some wine, we weren't planning on a third person. Nate pulled into a small convenience store and Gretchen said she go inside. When I asked her if she were legal, she smiled and said she'd just turned twenty-one.\n\n\"Is that what you meant about being legal,\" she asked showing a sly smile, \"just being able to buy beer?\"\n\nI blushed and Gretchen jumped out of the car. She came out with a twelve pack and a bag of snacks. As she walked toward the car, I focused on her nipples that were much more pronounced now than before. Her breasts moved freely under her shirt. I liked what I saw.\n\nIt was late in the afternoon when Nate found the road to the cabin. He had only been there once before and was relying on some minimal directions from his friend. As we bounced down the dirt lane, I noticed there were only a few turnoffs into other camps. We finally arrived at a smaller drive that had a mailbox reading \"Hart\". This was his friend's name and we turned in.\n\nWe traveled another quarter-mile and suddenly a log cabin appeared in a clearing. A covered porch extended along the front and the back of the property opened up onto a view of a small lake and the mountains in the background.\n\nNate hopped out and used a key to unlock the padlock on the front door. We followed him into the dark interior. True to his description, the interior was not plush, but it was not without a certain charm that matched the exterior. We began to undo the wooden shutters and let some light in. There were screens, so we pushed the windows up and held them in place with sturdy sticks left there for this purpose.\n\nLooking around I saw a double bed against one wall, a small kitchen opposite it and a big couch and two comfy-looking chairs in front of a huge fieldstone fireplace. In the corner next to the kitchen, there was a door, which I presumed was the toilet. In the other corner there was a shower head attached to the wall and a low rim along the floor. I imagined that the rim kept water from spilling onto the floor planks. As Nate suspected, the shower showed no sign of a curtain or any privacy.\n\n\"Well, now I completely get the meaning of rustic,\" I said.\n\nGretchen rested an arm up on my shoulder and said, \"I think rustic may be an over classification.\" She stared at the open shower.\n\n\"Let's get unpacked and then you owe us some more stories,\" I said.\n\nAfter a half-hour's work, we stored our stuff. Nate turned on the propane tank and we started up the generator and put our perishables and beers in the small fridge. Gretchen stuffed six cold beers into a sack and said we should go down to the lake.\n\nArriving at the shore, we discovered several Adirondack chairs stored under a tarp. We pulled them out, arranged them along the rocky beach and settled in. The sky was all shades of red and purple. We opened our beers and sat quietly taking in the sounds of nature and the beauty of the mountains and forests.\n\nWe finished the first beers and Gretchen passed out the second round. \"I think this lake is perfect for skinny dipping.\"\n\n\"I agree, but let's talk first,\" I said. I was a bit surprised that Gretchen was being so forward regarding exhibitionist activities. Although I slowed her down a bit by wanting to talk, I felt the charge of how it would feel to strip off with her and Nate and jump in the water. This weekend was turning out to be nothing like I had imagined. The question remained if it would be a weekend that would be better or worse than what I had imagined. \n\n\"What do you want to talk about?\" she asked.\n\n\"Tell us more about your year in college.\"\n\n\"You want to hear about all my classes?\" she said with a smile.\n\n\"No, I want to hear about you being naked and what follows after that.\"\n\n\"I can do that, but you have to tell me some stories.\"\n\nI touched Nate's arm and said, \"I think I have a couple that you might like.\"\n\n\"Cool,\" said Gretchen. Slowly she wove a tale that took us through her growing sexual relationship with her shy roommate, the day her guy friends participated in a naked mile run and ended up back in their room, her on and off again sexual relationship with another girl and other stories. \n\nI was a bit surprised at her openness. Gretchen said she used her \"girl power\" to influence people. I suspected that these stories were calculated to affect us. She was getting me horny as I listened. \n\n\"So, you're like bi?\" asked Nate.\n\nGretchen smiled and finished her beer. \"I consider myself sexual.\"\n\nI nodded. I bet she could be sexual and I wondered if I might find out just how much.\n\nIt was nearly six-thirty when Gretchen finished her story. We decided to have dinner and headed back to the cabin. Nate dug out a grill from the shed and started a charcoal fire. Gretchen and I made a salad and prepared some vegetables. We had a couple more beers as we worked and kept a light buzz going.\n\nAn hour later the three of us were sitting at the rough-hewn table in the kitchen area enjoying the meal. We shared a bottle of Merlot. Although we had just met this afternoon, we talked with each other like we were old friends.\n\nAfter we cleaned up, it was not even nine o'clock. Nate said we should not stay up too late since we wanted to get an early start on our hike in the morning. At the same time, we all came to the realization that we needed to sort out the sleeping arrangements. \n\n\"What was the original plan?\" Gretchen asked.\n\n\"We never discussed it directly,\" said Nate. \"I sorta figured I'd take the couch and Charlotte could have the bed.\"\n\n\"You guys weren't going to sleep together?\" Gretchen asked.\n\nI laughed and said, \"We never talked about it, but probably not. At least not in the sense of screwing each other sleeping together.\" I looked at Nate and he turned his gaze away in embarrassment.\n\n\"Would it be too weird for you girls to share the bed and I'll take the couch?\" Nate said.\n\nGretchen smiled and shrugged. \"I guess we can make that work,\" I said. \n\n\"That's settled,\" said Nate. \"I know it's a little early, but I'm going to get ready for bed. I want to be up and out no later than seven in the morning.\" He pulled a pair of sheets from his pack and tossed them on the bed.\n\nI said to Nate, \"You can have the toilet first.\"\n\n\"Cool,\" said Gretchen. \"In that case, let's make up the bed. Then, I'm going to take a dip in the lake. Join me, Charlotte?\"\n\nI looked at Nate. He stared blankly. Turning back to her, I agreed.\n\nNate went into the toilet room. The second the door closed, Gretchen whipped off her shirt. She grinned as I stared at her bare breasts. They were better than I had imagined. I startled myself as I realized I had been envisioning her breasts. I guess making up the bed could wait.\n\n\"Told you I liked going naked,\" she said and started undoing her belt. In a few more seconds she stood naked in the cabin. Her body was a lot like mine with average sized breasts and long legs. She was a couple inches shorter and her body exhibited nice muscle tone and tightness. I was getting a lot more excited looking at her nude body than I did looking at my own. She kept her dark pubic hair neatly trimmed.\n\nGretchen rummaged through her backpack and pulled out a towel. \"You coming?\" She grabbed a few beers and headed toward the door. I nodded and Gretchen rested against the door watching me.\n\nWith just the slightest hesitation, I pulled off my shirt and shed my bra. Gretchen smiled as she visually inspected my breasts.\n\n\"They're very nice, Charlotte.\"\n\nI muttered thanks, disposed of the remainder of my clothes and grabbed a towel of my own. She again appraised me. \"You have a beautiful body, Charlotte. Very beautiful.\"\n\nThe sun had just set, but there was enough light peeking over the horizon to let us make our way down to the shore. As we crossed a stretch of pebble-covered ground, Gretchen reached out to hold my hand. She kept two beers in her other hand. \n\n\"Your body looks so sexy in this light, Charlotte,\" she said as we began to walk toward the water's edge.\n\n\"So does yours,\" I replied.\n\nWe helped steady each other. Dropping our towels we walked into the cool water, the soft sand under our feet. Gretchen placed the beers in the water at the shore's edge. We continued into the lake. When we got to our waists, we looked at each other and then dove in. \n\nI swam out a bit and tried to touch bottom. I couldn't and started to tread water. Gretchen surfaced a few feet away.\n\n\"This is so nice,\" she said. \"I never skinny dipped in a lake before. I love the feel of the water over my body.\"\n\n\"Me, too,\" I added. We floated and enjoyed the quiet and sense of solitude. Gretchen asked if we could go in far enough to stand. Soon we could touch bottom. We both squatted down enough that only our heads were above the water.",
        "\"I think you owe me a story,\" Gretchen said. She retrieved the beers and we took long swallows. I was definitely feeling the effects of alcohol. I was also enjoying the rush of having just seen her naked body bending over to retrieve the beer and the glimpse of her pussy through the top of her thighs.\n\n\"I guess I do,\" I answered. \"When you described your freshman year, I was identifying with a lot of what you were saying.\"\n\n\"Identifying in what way?\" she asked.\n\nI took a second to answer. \"Identifying in like getting turned on.\"\n\n\"I thought I saw something in your eyes,\" Gretchen said. She reached out and touched my shoulder. \"Tell me about you and Nate.\"\n\n\"I told you he's a friend and my boyfriend's best friend. That's it.\"\n\nGretchen laughed. \"That's bullshit, Charlotte. There's something between you two. I can see it. Hell, I can feel it. Come on, tell me.\"\n\nAs we bounced in the water, our legs brushed against each other. I felt a pleasant jolt travel through my body. I was already a little turned by being naked with Gretchen in the lake, our bodies touching made it even more sensuous. When she stripped in the cabin, I was turned on by how attractive she was. Her body was toned, but not like an athlete. She looked soft and touchable. I touched my pussy under the water and felt how puffy my lips were. I wanted to describe my recent experiences with Nate because it made me feel sexy talking about what he and I did.\n\n\"Well, it all began innocently enough,\" I said.\n\n\"Isn't that always the case,\" she replied and leaned in to kiss my cheek while her hand traveled down my side lightly brushing my breast as her thumb moved quickly over my nipple.\n\nI touched her face and said, \"Well, maybe after the first time it wasn't so innocent.\" Her hand moved back up my side, softly cupped my breast and this time her motions were definitely not innocent. I took a sharp breath and then her hand moved on. I exhaled and took a long drink of beer.\n\nI told her how I was caught naked by Nate and Reggie. When I described how I dressed for the next night and what happened, Gretchen laughed and told me I was being a bold girl.\n\n\"How did it feel when that store clerk looked down to see your boobs?\"\n\n\"Really hot. I got excited.\" I again discreetly touched my pussy under the water increasing my sense of being turned on.\n\n\"Yeah, know the feeling. And when you took your shirt off at the table?\"\n\n\"God, I almost had an orgasm right there.\" I slipped my finger between my folds and shivered at how good it felt.\n\n\"Did you treat yourself to one later?\"\n\nI was glad it was dark because I know I was blushing. \"Yes. A really big one.\"\n\nI then went on to tell her about the two phone sex sessions with Nate.\n\n\"God, you mean that your boyfriend was in the bathroom and you're having a phone jerk off session with Nate? Awesome.\"\n\nAs I described how reluctant Reggie was to try something different sexually, she kept nodding. \n\n\"Are you talking anal?\" she asked. \n\n\"Does that sound too disgusting,\" I asked her.\n\n\"No. I've never done it myself, but I do like some ass play now and again. I'd be up for full anal with the right partner. Too bad your boyfriend isn't even willing to consider it. Are there other things he won't try?\"\n\nWhen I told her about his refusal to do oral, she screamed. \"No way. Sorry, Charlotte, but if that were my boyfriend, he'd either be eating me out or eating alone.\"\n\nWe both cracked up and I hugged her for a second.\n\nI then told Gretchen how I tried to get Reggie to think about having someone catch us. I described how Reggie thought the idea was repulsive. \"I know he kinda lusts after my sister, so that's why I brought her into the fantasy. He wasn't buying it.\"\n\n\"I love to masturbate with other people,\" Gretchen said. \"One time my roommate and another girl and I did it together. God, that was an awesome night.\"\n\nI was now quite excited thinking about what Gretchen said. An idea was forming in my mind.\n\n\"What would you think if we did that?\" I asked softly.\n\n\"That would fantastic,\" she said. \"Do you think Nate would watch?\"\n\n\"Oh, that would be totally hot,\" I replied. I pushed my finger deep inside and gasped.\n\n\"Think he might join us?\" she asked.\n\nI thought about having Nate naked and hard right in front of us. I imagined him stroking his cock as we played with ourselves.\n\n\"I'd really like to see his cock,\" I said. \"He told me it was big and thick.\"\n\n\"Can't get much better than that,\" agreed Gretchen. \"Especially when it goes along with the rest of the package. Hey, Charlotte, are you sure you don't want to fuck him?\" My cunt gripped my finger and I lost balance.\n\nI slipped under water and came up choking. Gretchen came over and tapped on my back. Her breasts brushed against the skin on my arm. Her nipples felt wonderful as they touched me.\n\n\"Sorry,\" I said.\n\n\"Is that your way of avoiding my question?\"\n\n\"Honestly, Gretchen, I don't know. I don't want to cheat on Reggie and not with his best friend, but I get turned on thinking about sex with Nate. I guess I'm a bit fucked-up. I really just want to do the right thing.\"\n\n\"And, what is that right thing?\"\n\n\"Oh, shit, I'm trying to figure that out. Is it being 100% faithful to Reggie and putting my desires, my sexual desires on hold? Maybe it's putting aside the sexual things I would like to do, but that Reggie won't do? Is it being true to what I feel and letting my self be open to what Nate and I might be able to develop? Is it just running away and not have to deal with all this shit? I am totally confused.\"\n\n\"Join the club, girl.\"\n\nWe laughed. I suggested it was time to get out. \"Oh, are you done playing with yourself?\" Gretchen asked\n\n\"How did you...\" I began to deny it, but then just laughed. \"I think I'm turning into a nympho or something. I can't seem to get enough sex.\"\n\nGretchen closed the gap between us. She wrapped her arms around my neck and pulled me tight to her. Our bodies mashed together. \"That's not a bad thing, Charlotte. Being turned on is not a bad thing. Touching yourself is not a bad thing. Don't overthink all this, just enjoy it.\"\n\nShe pulled my face to hers and we kissed. My pussy contracted as our mouths met. She put her hand on my mound and stroked it. I shivered at her touch. She broke away and holding my hand we climbed out. What was most surprising was that although Gretchen was years younger, she was taking the dominant role. I was letting her lead me.\n\nWe stood on the shore, our bodies glowing in the twilight. Gretchen's nipples were hard. She saw me looking. \"Combination of the air, thinking about what we just discussed, kissing you\u2014and touching your pretty pussy. I can see you're experiencing the same result.\"\n\nI looked down, but I already knew they were hard. \n\n\"May I,\" asked Gretchen. She extended her hand and softly touched my right nipple. The simple touch set off complex reactions in my body. My entire breast was now covered in goose bumps. Gretchen cupped my breast and squeezed. \"You are beautiful, Charlotte. And, you have amazing breasts, soft and firm.\" \n\nShe placed her other hand on my left breast. As she fondled them, she moved her face to mine. Next her lips pressed against my lips. My skin went from chilled to hot as our lips merged. Slowly I moved my hands up to touch her breasts. Gretchen moaned and pushed her tongue against my lips. I yielded and welcomed her tongue into my mouth. We both moaned at the same time. I cracked up and pulled back giggling. Gretchen did the same.\n\nThe mood was broken. \"Let's go back up,\" I said.\n\n\"Sure, but Charlotte...\"\n\n\"Yes?\"\n\n\"That was nice.\"\n\nI nodded, \"Yes, Gretchen, it was nice.\"\n\nWe dried ourselves and holding hands crossed over the pebbles. I felt comfortable holding her hand and clinging to each other we approached the cabin. \n\n\"These towels won't cover very much,\" I said.\n\n\"Nate's seen you naked, right?\" Gretchen said.\n\nI nodded.\n\n\"Well, I guess we're about to double his fun.\" She pushed open the door and walked in. I quickly followed.\n\nNate was sitting in one of the big chairs reading a book. He wore a tee shirt and a pair of basketball shorts. He looked up and his mouth opened.\n\n\"Water was fabulous,\" said Gretchen. Nate stared at her naked body.\n\n\"Really, it was,\" I said. He turned his gaze to me and moved his eyes around my body.\n\n\"Going to take a quick rinse off,\" said Gretchen. \"Hey, Charlotte, we could both probably squeeze in there.\"\n\nAs Gretchen adjusted the water, I waved at Nate and joined her under the spray. She asked Nate to bring her backpack over to us. Slowly he picked it up and carried it to the crude shower. We both noticed the bulge in his shorts.\n\n\"Inside is a plastic bag,\" said Gretchen, \"Could you get it and fish out the shampoo and other stuff?\"\n\nNate dug in the bag and pulled out a clear plastic bag. Inside were a bottle of shampoo, conditioner, a plastic soap dish and a pink vibrator.\n\n\"Just need the shower stuff, now,\" said Gretchen, smiling as she enjoyed the look on Nate's face. He had to push aside the vibrator to reach the shampoo and soap.\n\nGretchen looked at him and then at the vibrator. \"Never leave home without it.\"\n\nShe and I cracked up. Gretchen grabbed my shoulders and turned me so that my back was to her. She began to lather up my hair. I enjoyed the sensation of her fingers massaging my scalp. After I rinsed, I returned the favor on her. She leaned back into me and my breasts pushed into her back. Nate had returned to his chair, but his eyes never left us. I noticed the sizable tent in the loose shorts hadn't abated.\n\nGretchen handed me the soap and I began to scrub her back. I did not hesitate to wash her tight buns. She repeated on my back what I had done on hers. As I let the water rinse the soap, she pushed her body to mine, reached around and delicately washed my breasts. I almost came as she tweaked my nipples. Slowly her hands moved down my body, rubbing the soap over my front. When she reached my patch of hair, she worked soap in with her fingers. Gretchen then cupped my pussy and said loud enough for Nate to hear, \"You can do the rest, Charlotte.\"\n\nI realized I was holding my breath and pushing my butt back into her groin. I let out my breath and took the soap from her. I turned to face Nate and slowly washed my pussy, spreading my lips with my fingers.\n\nGretchen stepped out of the shower and started drying off. I continued playing with myself and, drawing on some inner dark well of courage, slipped a finger inside my pussy.\n\nNate groaned as he was fixated on my finger slowly moving in and out. He had slipped his hand inside his shorts and was obviously fondling himself. I did not want to cum right now and pulled my finger out. I rinsed and turned off the water. Gretchen held my towel out. I stepped into it and let her dry my body. I appreciated how thorough she was. Nate removed his hand, but his shorts remained stretched.\n\nNaked we faced him. I felt Gretchen reaching for my hand and let her grasp it.\n\n\"Guess we should get some sleep now,\" she said. \"We all have to be up so early in the morning.\"\n\nNate stared.\n\n\"Come give us a good-night hug,\" she said.\n\nI watched as Nate was obviously weighing many possibilities in his mind. He finally smiled and stood. We could see the outline of his erection in his shorts as he moved toward us.\n\nGretchen took a step to meet him and moved into his arms. He closed them around her. She pushed her groin into him and moved it back and forth.\n\n\"Sweet dreams, Nate. Thanks for letting me join this adventure.\" She stood on her toes and kissed his lips. For a second, his hands moved onto her naked butt and kneaded her flesh.\n\nGretchen broke away and scooted over to the bed, pulling the covers down and started putting on the sheets. Her pussy kept appearing between her legs as she moved about. I helped her and wondered if I was showing as much as she. When we finished she hopped in.\n\nI looked Nate in the eyes and stepped forward. His arms felt strong and warm around my naked flesh. I could feel his erection, big and thick, against my body. I longed to drop to me knees and swallow it.\n\nI kissed him and said in his ear. \"Thanks, Nate. I think this is going to be fun. Think about what fun the three of us can have tomorrow night.\"\n\nHis arms were around my shoulders. I took them and moved them down. He took the hint and embraced my naked rear. His large hands easily contained my two cheeks. He pulled me tight and I ground against his erection. I turned my face to him and kissed him a second time. We held this embrace, our lips mashing against each other. Finally, I knew I had to stop or I would not be able to stop.\n\n\"Good night, Nate. Thank you.\"\n\n\"Good night, Charlotte. You are so beautiful, so thank you.\"\n\nClimbing into bed, I let Gretchen pull me to her and snuggled against her body as I pulled the sheet and light blanket over us. Nate turned out the lights and stretched out on the couch. In the darkness, Gretchen kissed me, and hugged me tightly. \n\n\"Sleep well, Charlotte.\"\n\n\"You, too, Gretchen.\" I rolled onto my side and Gretchen spooned me. She placed one hand on my left breast and soon our breathing slowed. As the moon began to filter into the cabin, I drifted toward sleep, accompanied by thoughts of making love to Nate and to Gretchen. I was sure I was smiling as I lost contact with the awake world.\n\nI awoke to the sound of the door to the bathroom closing. I looked to see that the couch was empty. Outside the sun was beginning to make an appearance. I eased away from Gretchen, who was still tight up against my body. The cabin had cooled off during the night and I immediately missed the contact and warmth. I dug around in my backpack and found a pair of bikini undies and a sports bra. \n\nAs I was laying out the rest of my clothes, Nate exited the toilet. \"Morning, Charlotte.\"\n\n\"Hi, Nate. Sleep well?\"\n\n\"Yeah, you?\" He smiled as his gaze drifted to the still sleeping Gretchen.\n\n\"Definitely,\" I said and passed him on the way to the toilet. When I came out he was dressed and at the small kitchen counter working on breakfast. Gretchen stretched and sat up in bed.\n\n\"Morning everyone.\"\n\nWe turned to see her naked torso. It was a welcome sight in the breaking dawn. She hopped out of bed and scooted into the bathroom. Nate just shook his head and went back to scrambling the eggs.\n\nBack in the room Gretchen pulled on her tee shirt from yesterday and asked if there was coffee. Nate had boiled the water and prepared a French press that was kept in the cabin. I pushed the plunger and poured three mugs. Nate served the eggs with thick slices of coarse bread. We stood and enjoyed the nourishment. We also enjoyed Gretchen, since every time she moved, her neat pussy peeked out from the bottom of her shirt.\n\n\"So, what's the plan?\" asked Gretchen.\n\nNate explained that we would ascend by the Ammonoosuc Ravine Trail and descend by the Jewell Trail. I offered to make lunches and Nate checked his gear. Even though we were planning on a day trip and do it in daylight, he wanted to be sure we were prepared for an emergency. \n\nGretchen pulled off her tee shirt and took a quick rinse off. Both Nate and I admired her young figure. She dressed similar to me with panties, sports bra, hiking shorts and long-sleeved shirt. She cleaned out most of the stuff in her backpack and offered to share hauling some of the supplies Nate wanted to bring. I filled four large water bottles and Gretchen and I each took one, while Nate carried two. After liberally applying sunscreen and insect repellent, we piled in the Jeep and headed out.\n\nHaving never climbed anything near the size of Mt. Washington, I didn't know what to expect. I was surprised that the trails were not as difficult as I had imagined. We kept a decent pace and more importantly enjoyed the trees, wildlife and eventually the spectacular views. The day was clear and as we rested and ate our lunch, at the Lakes of the Clouds. The view was nothing less than spectacular. \n\nContinuing on we made the top in a little while. The strong breeze at the summit made us happy we each packed a windbreaker, although we welcomed the sun on our faces. We used the facilities and sat and enjoyed the company of other hikers, as well as those who motored up and those who took the cog railway. After an hour or so of visiting, we began to climb down the Jewell Trail. With the steep incline and many switchbacks, I was happy we were going down this trail and not up it.\n\nRiding back in the Jeep, we were still high on the experience of the climb and the spectacular sights we took in at the summit. Gretchen insisted on stopping and getting more beer, since we had made a substantial dent in our supply last night. As she was in the store, I turned to Nate and thanked him for asking me along.\n\n\"I thought you'd enjoy it,\" he said. \"Although having a third person changes things.\"\n\n\"Well, you got to see me naked again, plus seeing Gretchen can't be considered a hardship.\"\n\n\"No, both of you are beautiful. Maybe having her here sorta keeps us from doing something stupid.\"\n\n\"Were you planning on doing something stupid?\" I asked.\n\n\"Honestly, Charlotte, I had all sorts of weird fantasies the last couple days.\"\n\n\"Like?\"\n\nNate shifted in his seat and his face reddened. \"Like maybe doing what we did on the phone, only, you know, in person.\"\n\n\"You wanted to masturbate while we watched each other?\"\n\nNate took a deep breath and held it. As he slowly exhaled, he turned his face toward mine and said, \"Yes.\"\n\n\"Don't want to go to bed with me?\"\n\n\"More than I could ever say,\" he responded. \"But, I can't do that. Reggie is my best friend.\"\n\n\"So, you'll just get naked and jerk off with your best friend's girl?\"\n\n\"Jesus, Charlotte, I didn't mean to make it sound so bad. I thought you might want to do that as well.\"\n\n\"Chill, Nate. I do. I also feel conflicted. I think I would very much like to have sex with you, but not like this, not while Reggie and I are a couple. Admittedly, we are both rationalizing that masturbating together would not be as bad. I think if Reggie knew he'd probably be just as pissed off as if we did sleep together. I wonder if this is the right thing to do. But, then I get such an emotion rush thinking about us doing something sexy and I get more confused.\"\n\n\"Are you saying we should sleep together?\"\n\n\"No. I'm saying that I want to get naked and get off. It's still a little cranked, but my sex drive is in control of my senses. Plus...\"\n\n\"What?\"\n\n\"Gretchen wants to do it with us.\"\n\n\"Get the fuck out!\"\n\n\"Yep, last night we skinny dipped and talked a lot. She's quite an exhibitionist. I told her about our phone sex.\"\n\n\"God, you didn't!\"\n\n\"Yeah, it sorta just flowed out during our conversation. Anyway, she told me she likes to get off while people watch and she watches other people. So, maybe tonight could turn into something really special. She is really sexy.\"\n\n\"Sexy, in like you'd want to, you know, do stuff with her?\"\n\n\"Maybe. If I can't screw you, I could at least have sex with her.\"\n\n\"You've had sex with a woman before?\" he asked.\n\n\"It's not like I'm lesbian, but yes I have\u2014a few times. I had a couple flings in college, just like about all the other girls. It was not such a big deal, but it was a lot of fun.\"\n\n\"And, since then?\"\n\n\"Hey, I didn't know we were going to play True Confessions,\" I said with a smile.\n\n\"You brought it up.\"\n\n\"Do you really want to hear about it?\"\n\nNate laughed. \"Charlotte, what guy does not want to hear about two hot girls having sex?\"\n\n\"Promise not to tell Reggie.\"\n\n\"Promise,\" he replied and raised his hand.\n\n\"Abigail and I have experimented.\n\n\"Reggie's sister?\"\n\nI nodded.\n\n\"Jesus, Charlotte. Abby is unbelievably hot. The two of you together would be like volcanic.\"",
        "\"She is really good, Nate. I mean really, really good. And, it was before I started dating Reggie. Actually, Abagail introduced us. Since Reggie and I moved into Reggie's place she and I have cooled it. I haven't been with anyone except Reggie for these last nine months.\"\n\nI saw the bulge in his shorts. I reached over and touched it. Nate jumped in response.\n\n\"Guess you're right,\" I said. \"Guys like hearing about girls getting it on with each other.\"\n\nI saw Gretchen coming out of the store. She carried some beer and another bag.\n\n\"Hey, guys. Sorry it took so long but the guy working there is from my school. We just got talking and catching up on things.\" She noticed how red Nate was. \"Am I missing something?\"\n\nI turned to her in the back seat. \"I was telling Nate about how the three of us could have some mutual fun tonight.\"\n\n\"And?\" Gretchen said.\n\nI looked down at his shorts. She leaned forward and eyed the tent.\n\n\"Ooh, I think the scenery on this trip is just getting better and better,\" she said.\n\nLaughing, Nate started the car and we headed out. As we drove, Gretchen passed around a bag of jerky. We each enjoyed the salty and nasty treat. When we pulled off on to the side road, she passed us beers. I knew we were in no danger of being spotted by the cops, so we drank, drove and ate jerky.\n\nGretchen asked Nate if he knew what the forecast was for tonight.\n\n\"It's supposed to cloud over and get cool. Might have a thunderstorm during the night. Tomorrow is overcast and a possibility of some rain. I doubt we will get a hike in tomorrow.\"\n\n\"Then it's settled,\" said Gretchen.\n\n\"What?\" I asked.\n\n\"Skinny dipping as soon as we get to the cabin and warm showers later.\"\n\nI took a long drink of beer and felt all tingly thinking I would soon see Nate naked.\n\nWe brought our stuff into the cabin and put the beers into the refrigerator. Gretchen pulled out the last of the cold ones and, after dumping out her backpack, put them and some snacks inside. \n\n\"Well, let's go swimming,\" she said and sat to undo her hiking boots. Pulling her shirt over her head, she looked at Nate and me. I snapped out of it and began to follow her lead. As Gretchen was pulling off her sports bra, I was shimmying out of my shorts. I removed my bra and looked at Nate.\n\n\"You know skinny dipping means you don't wear clothes,\" I said. \n\n\"I have a bit of a problem,\" he said.\n\n\"I bet we've both seen erections before,\" said Gretchen. She dropped her panties and stood facing Nate. In a second I, too, was nude. Standing shoulder to shoulder, hands around each other's waists, we looked at him.\n\nHe grinned, took a deep breath and pulled off his shirt. His chest was covered with soft blond hair. He removed his boots and socks and taking another deep breath, undid his shorts and they fell to the floor. His black boxers tented. Using his thumbs, he pushed them down as he bent over. Straightening up he stood still.\n\nHis cock stood out nearly parallel with the floor. I think it was too heavy to stand up any higher. Usually I am not overly turned on by a naked man. I like looking at them, but am more curious about how they will use what they have. With Nate I thought it was the sexiest cock I had ever seen. Just a tad darker than his golden skin tone, it screamed manly. I'm not that great at estimating cock length, mostly due to never having done so. I said Nate was long, but it was not obscene. I would not compare him to some of the guys I'd seen in porno movies. It was a decent length, though, and thick. My pussy contracted as I thought how I could accommodate him. Imagining him stroking it as we had phone sex made my heart race.\n\n\"God, you guys are freaking me out,\" he said. \"Are you just going to just look at my cock or are we going swimming?\"\n\n\"I might opt for looking at your cock,\" Gretchen said. That broke the ice and we all cracked up.\n\n\"Yeah, wouldn't be a bad way to spend some time,\" I added.\n\n\"I'm going to the lake,\" Nate said and picked up a towel. \"Join me if you want.\"\n\nWe let him walk out the door, our eyes glued to the tight buns moving in front of us. Gretchen grabbed her towel and backpack and ran after him. In a second, I was behind her. The three of us held hands as we crossed the pebbles and waded into the lake. We dove under at the same time and surfaced out in the deeper water. \n\n\"Wow, this is great,\" said Nate.\n\n\"Have you ever skinny dipped before?\" asked Gretchen.\n\n\"Only in a pool, this is way better.\"\n\nWe floated around for a bit, enjoying the cool water and still warm air. As we moved to a spot where we could stand, Nate was grinning from ear to ear.\n\n\"I'm happy you guys thought of this. I can't remember ever having this much fun in the lake.\"\n\nGretchen climbed out and brought back three beers. We drank, soaked and relived our climb on Mt. Washington. Other than the three of us being naked, it was like any friends having a beer and hanging out. Gretchen asked if we wanted another beer.\n\n\"I think I need to get out,\" I said. \"I'm turning into a prune and getting a little chilled. I'd like to take a shower and have something to eat.\"\n\nThe others agreed. We helped each other back across the pebbles and grabbed our towels. After drying off, we returned to the cabin. Inside I checked out Nate. He was no longer erect, but I still marveled at his penis, hanging straight between his thighs. The head was like half a pool ball. I could only imagine what it must feel like pushing past my entrance into my vagina.\n\nI kept my thoughts to myself. Gretchen was not so politic.\n\n\"Shit, Nate, that is some handsome cock. It's even awe-inspiring soft.\"\n\nNate grinned. \n\nI called for the first shower and washed my hair, lathered and rinsed my body and was out in five minutes. Gretchen followed and left the water running so Nate could take his turn. She stood to the side as he stepped into the area. She handed him the soap and then ran her hand up and down his cock.\n\n\"Sorry, I just had to do that,\" she said. Nate wasn't hard, but it looked thicker, if that was even possible.\n\nAs we dried and pulled on clothes, we watched Nate. He soaped his cock and Gretchen slipped her hand into mine. She leaned in and whispered, \"I want to see him work that 'til he cums. That will be so hot.\"\n\nI squeezed her hand to let her know I agreed.\n\nNate ended his shower, dried and wrapped the towel around him. We made dinner and talked about the day we had. Both Gretchen and I thanked him for taking us on the hike. He said we could do it again. We agreed.\n\nBy now the light was fading. As Gretchen and I cleaned up, Nate pulled out a pair of sweat pants. With his back to us he dropped the towel. I nudged Gretchen and we both admired his body as he pulled on the pants.\n\n\"Going to use the toilet,\" he called out.\n\n\"Damn, that is one fine ass,\" Gretchen said.\n\n\"Yes it is,\" I agreed. \"Plus the front ain't too bad.\"\n\nGretchen swatted my bottom and said, \"Did you ever see one that thick?\"\n\n\"Only in a porno,\" I replied. \"And, after you touched him in the shower\u2014which I cannot totally believe you did\u2014it got even thicker. What must it feel like inside you?'\n\n\"I've never even seen a porno,\" Gretchen said. \"But that is the thickest I've ever seen. When he was hard, oh my god. I agree about being inside you. Think it hurts?\"\n\n\"Depends,\" I said.\n\n\"On what?\"\n\n\"Front door or back.\"\n\nGretchen stared for a second and then broke out laughing. \"You know, Charlotte, you have this whole innocent thing going on, but you are really a very dirty girl. And, please take that as a compliment.\"\n\n\"Yeah, well it takes an innocent-looking dirty girl to know one. I think you could pass for a girl scout.\"\n\n\"I don't know about that,\" said Gretchen. \"But I love eating their cookies.\"\n\nIt took me a couple seconds to get it. We both laughed and hugged. Gretchen moved her lips to mine and we kissed. \n\n\"I'm not a girl scout,\" I whispered. \"I have been told that my cookies are...\"\n\n\"Delicious?\" asked Gretchen.\n\nI nodded. I slipped my hand down my pants and was happy to find moisture accumulating in my undies. I inserted a finger and pulled it out. Offering the damp digit to Gretchen, I asked if she wanted a taste.\n\nShe grabbed my wrist and pulled my finger to her lips. In a second she had cleared it off what I had to offer.\n\n\"I take that as a yes,\" I said and smiled.\n\nGretchen pushed her lips to mine and next our tongues were busy exploring. We were rubbing each other's butts when I heard Nate.\n\n\"Not interrupting, am I?\"\n\nI said over my shoulder, \"Yeah, you are. But it's okay. I'd say we were just warming up for tonight's entertainment.\"\n\nWe turned to face him. He was still bare-chested and his erection pushed against the soft fabric of his pants.\n\nTaking Gretchen's hand we walked up to him. I knelt and pulled his pants down and then off. Gretchen wrapped her hand around his erection. Running my hand up his leg, I brushed over his large balls and across his shaft. \n\n\"Let's get in bed,\" I said.\n\nNate sat at the bottom of the bed with his back against the foot board. Gretchen and I knelt at the top facing each other. Slowly we undressed each other. As our clothes fell to the floor, we embraced and kissed. Soon our hands were running freely over the other's body. I turned to see Nate stroking his erection.\n\n\"Let's join him,\" Gretchen said.\n\nWe leaned back against the headboard. I draped my right leg over Gretchen's left and we opened up our thighs as far as we could. The heat from her flesh only added to the sexual flush flowing through my body. I touched myself and sighed by finally gaining some friction where I needed it most.\n\nI could see that Gretchen was also touching herself, but much more aggressively. I gave up my last inhibition and plunged two fingers inside. As I gasped, I saw Nate clamp down on his erection, probably forestalling his climax. Both Gretchen and I had one hand buried in our pussy and the other playing with a boob. I wanted to keep my eyes open to watch Nate stroke and play with his own balls. The intensity was growing to be too much and I shut my eyes. They sprang open as I felt lips on my nipple.\n\nGretchen had bent over and was sucking my right boob. God, she was good at it. I was so wet and so needy that I jammed a third finger inside and pumped with my hips. \n\nGretchen pulled her mouth away and now had four fingers pumping in and out of her. She used her free hand to work her clit, rubbing at a furious pace. \n\n\"Close, Nate?\" I said, using my remaining strength.\n\nHe nodded. \n\n\"Gretchen?\"\n\n\"Almost. I want to see Nate cum first.\"\n\n\"Do it, Nate.\"\n\nHe pumped hard a few more times and then froze. In a second a long spurt escaped his tip and shot up toward his chest. He began pumping again and more shots erupted. He grunted with every thrust of his hips. Gretchen bolted forward and slipped her lips around his head to catch the last two shots. In doing so she exposed her pink pussy to me. I place my index finger at her opening and pushed it in. She moved her butt back to bring my finger totally inside. Feeling her contract made my own pussy spasm. That sent me over the edge and I cried out. Gretchen looked over her shoulder to see me enjoying my climax. I added another finger inside her exposed and wet pussy.\n\nShe screamed and came as she buried her head in Nate's crotch. It took us several minutes to bring ourselves down from the orgasmic highs. Gretchen repositioned herself next to me. She touched my thigh and then my still sensitive pussy. I interlaced my fingers into hers. Nate moved up next to me and I held his hand. His chest still had remnants of his explosion.\n\n\"Well,\" I said breaking the silence.\n\n\"Well, indeed,\" said Nate.\n\n\"Make that three wells,\" added Gretchen and then we all broke up.\n\n\"That was one of the most erotic things I've ever done,\" said Nate.\n\n\"Definitely hot,\" I said.\n\n\"Great for a beginning,\" said Gretchen. Nate and I turned our heads to look at her. \"Beginning?\" we both uttered at the same time.\n\n\"Yep,\" she said with a smile. \"And, the night is young.\"\n\nWith that comment, Gretchen climbed on top of me and straddled my legs. She leaned to the side and kissed Nate. She next kissed me. \n\n\"Make him hard, Charlotte.\"\n\nI released Nate's hand from mine and slid it down his thigh and onto his dick. It was warm and sticky. I let my fingertips graze the top of it and circle his large head. Soon, it began to rise from the dead. All the while Gretchen is grinding her pussy against mine, squeezing my boobs and invading my mouth with her tongue. It must have been a combination of what my hand was doing and Nate intently watching what Gretchen was doing to me that caused the steel-hard mass to fill my hand. I could just about touch my thumb and index finger around him at the thickest part. \n\n\"As much fun as that was before,\" said Gretchen. \"I want to go down on Charlotte. And, I want Nate behind me. Nate, honey, use your imagination.\"\n\nGretchen moved down until her head was resting above my sparse pubic strip and her ass was pointing up. Nate moved behind her. \n\nI watched indecision play across his face. As Gretchen ran her tongue through my slit for the first time I groaned. Nate bent from the waist and licked her from behind. The double licking continued until I was ready to explode again. Gretchen was moving her ass back and forth as Nate serviced her.\n\nGretchen pulled her face away and I wanted to cry because I was so close. \n\n\"Nate, I need much more imagination from you.\" She repositioned her face between my legs and licked aggressively as she shoved two fingers inside. I was teetering on the edge.\n\nNate knelt up and looked at the open pussy. He watched as Gretchen ate me and pumped her fingers. He jumped off the bed and ran over to his backpack. He fished inside and pulled out some condoms. As he climbed back on bed, I said, \"Nate, you devil, you brought condoms.\"\n\nHe smiled. \"Must be the boy scout in me.\"\n\n\"Cool,\" said Gretchen, \"Now, I want some boy scout in ME.\" She then returned to my pussy and captured my clit in her lips. She sucked and touched my g-spot with her fingers. I cried out and came hard. Gretchen busied herself licking the river of my juices.\n\nNate had finished rolling the latex down his erection and knelt once more behind Gretchen, who was on her knees with her head in my crotch. Her eyes and mine met as I watched Nate move forward. Gretchen's eyes widened and her mouth dropped open. She started breathing through her mouth as Nate pressed closer.\n\n\"Oh, god, Nate, give me a couple seconds,\" she said.\n\n\"I wanna see,\" I said. Gretchen nodded. I scooted out from under her and moved so I could see their bodies merging.\n\nNate's thick cock was only about as inch or so into her. He slowly withdrew, the condom-covered rod now sheathed in wetness. Equally slowly he pushed back in until he was about three-quarters inside. Gretchen once again called for a time-out.\n\n\"Fuck, I have never felt anything like this. It really hurts so good.\"\n\nMy own pussy was contracting just watching Nate fill Gretchen. My mind could not even imagine what it must feel like. As Nate once again partially withdrew, I placed my hand on the rigid shaft. I stroked the length of it that was not caught inside Gretchen. I also cupped his balls enjoying both the weight and the size of his testicles. \n\n\"Okay,\" called out Gretchen. Slowly, Nate pushed steadily until his pubic hair brushed her ass. I reached underneath and softly rubbed her clit.\n\n\"Yes, Charlotte, do that. It feels so good. I need to get as wet as I can.\" As my finger played along her hard and exposed clit, Nate began moving in and out. With every inward thrust, Gretchen let out a sharp breath. I could see her arms starting to quake. \n\n\"Put your head down, Gretchen,\" I urged. I helped her rest her head on a pillow with her ass high in the air. Nate was increasing the tempo. I returned to softly rubbing her clit. I could feel Nate's movements as he picked up his pace and his balls slapped up to bang Gretchen's pussy. \n\n\"Go hard now,\" Gretchen groaned.\n\nNate grabbed her hips and slammed into her. His balls hit hard. Gretchen started making grunting noises as Nate completed each thrust. He seemed to be gliding smoothly in and out, so picked up his pace, until his cock was a blur ramming into her. I had never watched someone get fucked and was mesmerized by the sight. Gretchen's pussy lips gripped as he pulled out and seemed to disappear as he reengaged. Her body was covered in sweat. Nate was breathing heavily and perspiration dripped from his face. \n\n\"Close,\" moaned Gretchen. I started rubbing her clit hard and she cried out. I could feel her stiffen and pinched the bud between my fingers. Gretchen let loose with a scream. Nate plunged one last time and held his cock in place. I put my free hand on his tight scrotum and felt the pulsing as he emptied himself.\n\nAfter thirty seconds, Nate leaned forward, letting his soaked chest rest on Gretchen's back. My hand circled the base of his cock as he withdrew. With a loud pop he was free and Gretchen sprawled, face down, on the bed. Nate was not completely soft and his cock felt heavy in my hand. I unrolled the condom, tied it in a knot and tossed it on the floor. Making a decision, I bent and took the damp organ into my mouth, savoring the salty remains of his orgasm. I sucked as much of him as possible into my mouth. Next, I held his sack in my hand and ran my tongue over the testicles, taking one in my mouth to suck and fondle with my tongue.\n\n\"Oh, god, Charlotte, that feels so good, but I am about to collapse.\" \n\nI released him. He looked at me and then pulled my face to his. He plunged his tongue deep inside me. I knew he was showing me that he was not afraid to taste his own cum. I returned the favor and pushed my tongue inside his mouth. We kissed like this, savoring each other's tastes. \n\nHe broke off and smiled. He then fell next to Gretchen and rolled onto his back. Gretchen inched over and laid her head on his shoulder, her hand lying softly on his chest. I moved close to his other side and held his soft cock. In a few minutes we all were sleeping.\n\nMy dreams were filled of images of all sorts of lines. There were parking lines at our station where we kept our vehicle and the lines on a soccer field. I had an image of the line at the motor vehicle registration office and how no one dared cross it without the permission of one of the clerks behind the glass. I even dreamt of one of those cop TV shows with the yellow tape that read, \"DO NOT CROSS.\"\n\nI awoke with a start. As my mind cleared and I looked at my hand still holding Nate's soft cock, I knew I had crossed a line. I also knew that a line like this when crossed cannot be un-crossed. \n\nAs I lay in bed, I felt Gretchen stirring on the other side of Nate. She picked her head up and looked at me. We smiled at each other. She put her hand next to mine on his cock. We both squeezed and Nate opened his eyes.\n\n\"Hi!\" he said, his gaze shifting from me to Gretchen to his cock engulfed in two small hands.\n\n\"Hi!\" Gretchen replied.\n\n\"Have a nice nap?\" I asked.\n\n\"Had a better time before I napped,\" he said.\n\n\"Yes, that was a something else,\" I said. Nate and I locked eyes.\n\n\"I'm going to go into the bathroom,\" said Gretchen. \"You guys discuss what you obviously need to discuss, then come knock on the door. Just don't leave me in there all night.\"\n\nShe bounded over to the small bathroom. We both watched her tight bottom as she made her way across the room.\n\nNate and I both started to talk at the same time. We smiled and he said, \"You first.\"\n\n\"Nate, you know none of this was planned.\"\n\n\"Certainly having Gretchen with us was a surprise,\" he said.\n\n\"I wasn't planning on ending up in bed with you,\" I offered.\n\n\"Really?\" he said. \"Be honest, Charlotte, I think we both knew there was a strong\u2014and I mean very strong\u2014likelihood that you and I were going to end up in some sexual situation. So, can we at least admit that to ourselves?\"",
        "I had already removed my hand from his cock, and sat up. It struck me that I would appear to be a complete fool trying to deny the sexual undertones of our planned outing, especially since we were both naked and in bed.\n\n\"I admit I was..., hell, I am attracted to you. I thought that something might happen. But, honest, I never allowed myself to think that through. Maybe we'd have a masturbation session, only skip the phone part.\"\n\n\"We did more than that,\" he said.\n\n\"Not that much,\" I argued.\n\n\"Charlotte, you sucked my cock. You jerked me off while I was fucking another woman. You and another woman held my cock. I'd say that's a lot more than watching each other masturbate.\"\n\n\"Technically, you're right.\" I looked at him and grinned. Next, both of us were laughing.\n\nFrom the bathroom we heard Gretchen. \"If you guys are laughing, can I come out now? My bum is getting sore.\"\n\n\"A couple more minutes. I'll kiss it to make it feel better when you come out.\"\n\n\"Promises, promises,\" she called out.\n\n\"The question,\" I put to Nate, \"Is where do we go from here?\"\n\n\"Charlotte, I like you a lot. I think if we gave ourselves a chance, I could fall in love with you. I think I've been half in love with you for a while. I never did anything because you're Reggie's girlfriend. So, I'm really torn right now. The main thing is, though, I would like to see if we could give us a chance, to, you know, see if we could make it work.\"\n\nHis words both kicked me in the gut and tugged on my heart. I was feeling the exact same thing.\n\nGretchen yelled out, \"Did you ever hear of hemorrhoids? Sitting too long on the toilet can cause them.\"\n\n\"Please give us another minute,\" I begged.\n\n\"But what if we try it and it doesn't work out?\" I said. \"I will have lost you and Reggie.\"\n\n\"It's a risk. Either way, I'm going to lose Reggie as a friend and that will hurt. I can't pretend this weekend did not happen and that I don't have feelings for you. I can't lie and pretend to be his best friend. Charlotte, I'm willing to try. Are you?\"\n\n\"Coming out, ready or not,\" cried Gretchen. She opened the door and rubbing her butt came back to bed.\n\n\"All worked out?\" she asked and sprawled out face down.\n\n\"Not quite,\" I said.\n\n\"Too bad,\" she said. \"You owe me a butt massage and lots of tenderness.\"\n\n\"How about if I skip the butt and get right to the tenderness?\" I said.\n\n\"Tenderness as in...\" she said.\n\nI placed my hands on her shoulders and she sank into the bed lying on her back. I smiled at Nate and then moved between her legs. Pushing open her thighs, I ran my finger along her still red lips.\n\n\"Sore?\" I asked.\n\n\"A little,\" she said. Looking at Nate, she added, \"But well worth it.\"\n\n\"Tell me if this is too much,\" I said and bent down to press my mouth to her sex.\n\n\"Ooh, that feels so nice,\" said Gretchen.\n\nI softly kissed and licked all around her exterior. Nate took the initiative and began to fondle and suck her breasts. Gretchen started breathing quickly and her hips began to roll.\n\nI pushed my tongue between her folds and licked from bottom to top. Her juices began to slowly appear. I knew that her session with Nate must have left her worn out, but I wanted to bring her to climax. I used my fingers to ease her hood back and licked her clit. Gretchen's growl told me I was on the right track. As Nate continued to stimulate her breasts, I licked her clit, increasing the pressure with each passage of my tongue. As Gretchen became wetter, I slid a finger inside. \n\n\"Ouch,\" she grunted. I knew that I'd better not add a second one. Rotating my wrist I felt for her g-spot. \n\n\"Yes,\" she said as my finger touched the patch. I stroked with my finger and covered her clit with my lips. As I sucked her clit into my mouth, I pushed hard against her spot. Gretchen's hips pushed up off the bed. As I let my teeth just graze her clit while my tongue pushed down hard, I felt her vagina contract around my finger.\n\nGretchen's body tensed. She pushed Nate off her chest and dug her fingers into my hair, smashing my face hard against her crotch. I played my tongue back and forth until the contractions around my finger subsided. Gretchen released her hands from my head. As I moved up to kiss her, I marveled at her sleek body, glistening with perspiration.\n\nShe was wasted. I turned to Nate and he brought his mouth to mine. He licked me clean of Gretchen's juices. I shoved my tongue deep inside his mouth. All I saw now were blurred lines. My hand went to his hard cock and I pumped hard. He cupped my pussy and I pushed against his palm. When I felt his finger moving past my folds I wanted to cry out with joy. Instead, I pulled his hand away and stopped stroking him.\n\n\"Hold me, Nate.\"\n\nWrapping me in his arms, we settled next to each other. \n\n\"Sorry,\" I said.\n\n\"It's okay, Charlotte. I understand.\"\n\nHe reached down and pulled up the sheet to cover the three of us. At least he would be sleeping here and not on the couch. I let myself go as I enjoyed his masculine scent and the warmth of his body.\n\nWe awoke the next day to the rain pattering the cabin's roof. After taking turns in the bathroom, we were back in bed, still naked.\n\n\"No hiking today,\" said Gretchen.\n\n\"Right on that account,\" agreed Nate.\n\n\"So, what's the plan?\" I asked. \n\nThe pause told us all that last night's activities were still on our minds. Would there be a continuation of our sexual adventure? \n\n\"Well, to tell the truth,\" said Gretchen, \"I'm a bit sore.\"\n\n\"And why is that?\" I asked grinning widely.\n\nGretchen held up Nate's cock.\n\n\"Give you one guess.\"\n\nWe all laughed.\n\nGretchen bent and kissed the tip. \"Don't misunderstand me, Nate. Last night was fantasy time. The two of you drove me out of my mind. I would love more, but I don't think I can right now.\"\n\nShe replaced his soft member on his thigh. \"I take it that you guys have not resolved the 'will we or won't we' question.\"\n\nWe each shook our heads.\n\n\"So, how about we clean up, pack up and head out? I'll call to see about my car.\"\n\nNodding, we all agreed.\n\n\"But first,\" said Gretchen. She rolled on top of Nate and kissed him. His arms slid around her butt and held her close. Next, she squirmed on top of me. With our breasts mashed together, we kissed slowly and passionately. \n\n\"Mmm,\" she said, \"I could do this for a long time.\"\n\n\"Me, too,\" I answered as my hands made slow passages up and down her naked back.\n\n\"Time for you to get on Nate,\" she said.\n\nHe and I exchanged a look. I know that's what I wanted and knelt and lowered myself on top of him. Feeling his penis between my legs made my entire body warm. We kissed and I knew it was Nate that I wanted. I realized that what Reggie and I had was over. I hoped it was more than sex that was drawing me to Nate. Afraid to stay too long in such close contact, I got off and out of bed.\n\nWe showered separately, dressed, had a breakfast and packed up. The rain was steady as we loaded the car. Gretchen had called the service station to find that her car would be ready by noon. We headed for Twin Mountain and planned to have lunch. \n\nAfter eating and once again being served by Ginny, we drove Gretchen to the garage. We hugged and kissed and promised to stay in touch. We watched her run holding her backpack. As she entered the door, she turned and waved. My heart turned thinking how sweet it was being with her.\n\nWe headed south and rode in silence for a while.\n\n\"So, back to life as we used to know it?\" asked Nate as we got onto I-93 south.\n\n\"Isn't it called facing the music?\"\n\n\"Well, Reggie won't be back until Friday night,\" he said. \"Want to come to my place?\"\n\n\"More than you'll ever know,\" I told him as I held his hand. \"But, take me to my apartment. I need to think about what I'm going to say to Reggie.\"\n\n\"So, you are breaking up with him?\"\n\n\"I'm going to tell him that I want to move out,\" I said.\n\n\"And when he asks why?\"\n\n\"God, Nate, I don't know. I'm so afraid.\"\n\n\"Afraid of what?\" he asked. \"Reggie may be hurt, but he won't be violent.\"\n\n\"No, I'm afraid that you won't want me.\"\n\nHe looked at me as the windshield wipers kept a steady beat.\n\n\"Charlotte, I've wanted you for a long time. Please, come live with me.\"\n\n\"Is that smart? I mean technically we haven't even made love and I'll be moving in.\"\n\n\"Charlotte, we both know it's a risk. I'm willing to take it. I'm asking if you are, too.\"\n\nBeating down my fears, I put my hand on his thigh. \n\n\"Yes. Yes, Nate, I am.\"\n\nThe confrontation with Reggie did not go great, but it was not as bad as I had imagined. He was hurt, but I think also a bit relieved. After some harsh words, we really talked with each other for the first time in ages. Reggie finally admitted he also had doubts about where he and I were going. During the week apart, he was thinking about the future. He wasn't looking for marriage right now and wondered if we should take a break. We talked about how we had different ideas about sex and intimacy. Regarding sex, he said that he was not comfortable with some of the things I wanted. I reassured him he was a good lover, but at this point in my life, I did want to push the boundaries a little. Reggie told me he did not understand how intimacy could involve more than the two of us. I knew that trying to explain the excitement of it would be lost on him. I said he was right and that we probably would be best going our separate ways.\n\nThat was the good part. The bad part was telling him about Nate. Even though I think he believed me that Nate and I did not have sex, he was hurt. Nate was his friend and he felt betrayed. I was his girlfriend and was leaving him for Nate. There was a week or so of pretty nasty back and forth between us.\n\nNate kept calling and Reggie kept refusing to talk with him. One night, Reggie agreed to go out and meet Nate. It was after midnight when he returned.\n\nInstead of sleeping on the couch, he came into our bed. Putting his head on my shoulder, he cried. I could offer him nothing but my support and affection. He told me that he called Nate every lousy name he could think of. Nate just let him rant. At the end, Nate said he was sorry for hurting him and that Reggie was correct in calling him a traitor. Then Nate told him how much he cared for me and that he could no longer put those feelings aside. They got to talking about me and soon realized that maybe the one thing they could agree on was they wanted me to be happy.\n\nOf course, now I felt like a total shit. Reggie told me he wanted me to follow my own dream. He slept in my arms that night. The next day, I began packing and would be out of the apartment by the end of the week. I don't think any breakup is a clean break. My heart tugged every time I saw him in the morning or thought about him during the day. I knew I would carry the guilt for a long time. The plus side was I was now going to pursue a relationship with Nate.\n\n\"Sure you're not tossing aside one known relationship for the total unknown?\"\n\nI stared at Hank. \n\n\"Oh, thanks for being so supportive,\" I said sarcastically.\n\n\"What?\" he replied. \"You only want to hear the part that fits into a fairy tale?\"\n\n\"Hank, I don't see this as a fairy tale.\"\n\n\"No? Some handsome prince comes along and takes the poor damsel away from her sad, sad life and they live happily ever after\u2014sounds like a fairy tale.\"\n\n\"Fuck you, Hank.\"\n\n\"Touched a sore spot, did I?\"\n\n\"God, just when I need a friend I get a Jewish mother.\"\n\n\"Ooh, now the anti-Semitic comments start,\" he said with a smile.\n\nI gave him the finger.\n\n\"I am impressed by your eloquence,\" he said. \"Look, Charly, you were getting a bit bored with Reggie; that happens. You projected all these sexual fantasies onto Nate and saw him as the solution to your boredom. I get that. Please do not kid yourself into thinking that this is love. According to what you told me, and some of those images are forever seared into my brain, you have not even had sex with him. Played a lot of 'show me yours' and' let me touch it', but no real lovemaking. Yet, you will be moving to his apartment in two days. Charly, can you see where I have some difficulty connecting all this to reality?\"\n\n\"So you think I'm making a mistake?\" I said with a lot of attitude.\n\n\"I'm saying, be honest with yourself. Admit that what you feel for Nate right now is sexual curiosity. Stop equating a lust hunt with some noble journey. Go, get laid, spend time together. After that, you can tell me how you feel.\"\n\n\"Lust hunt?\" I said. We both laughed.\n\nWhen I arrived home on Friday, I saw Nate's Jeep parked outside. Nate was sitting in the shade next to our building's front door. \n\nI kissed him and we hugged. \"Ready to do this?\" he asked.\n\n\"Let's go,\" I said. By agreement Reggie was not going to be there. I had everything boxed and my clothes in hanging bags. We had decided on how to handle the bigger items. Reggie offered me a buy-out of stuff we bought together. I felt it was a little cold, but it worked.\n\nIt took us about forty-five minutes to haul everything out. I took a last walk around the apartment. I debated about leaving a note, but, in the end, put my keys on the kitchen counter. I sent Reggie a text to tell him we were through moving. I thanked him and wished him well. As we rode toward Nate's apartment, I thought I should have left a note. Reggie deserved something better than a text. I mentally added another layer to my guilt pile. Hank's words kept echoing in my mind. \n\nWe pulled up to Nate's building. He started to get out and I just sat there. Climbing back in, he asked me if everything were all right.\n\n\"Nate, I'm thinking maybe we're moving kinda fast.\"\n\n\"Oh, how so?\"\n\n\"Well, I just left Reggie fifteen minutes ago. I wonder if it's smart to literally jump into bed with you.\"\n\n\"Charlotte, you know I care for you. I've had strong feelings for you for a long time. I think you're just nervous.\"\n\nI turned to look at him. \"Of course, I'm nervous. I'm also thinking that I might need some time to get my head out of one long-term relationship before I plunge into another one. Well, I hope we're thinking about a long-term thing.\"\n\n\"I am,\" said Nate.\n\nI took his hand. \"I want to try for it, too.\"\n\n\"Well, what's your option?\" Nate asked.\n\n\"I need to make a phone call,\" I said and got out of the Jeep. I walked to the corner and punched in a number I rarely called.\n\nTwenty minutes later I was back in the front seat. \n\n\"Nate, please hear me out.\"\n\nHe nodded and smiled.\n\n\"I want us to move forward to develop a relationship.\"\n\n\"Good,\" he said.\n\n\"There's more, Nate, so let me just get it out.\"\n\nI drew a deep breath. \"I can't move in with you now. I know that was our plan, but I need some time. I have a friend who will let me crash for a while. During that time, I want us to start to build our relationship. I want you to know that I am in serious 'lust' with you. After our weekend in the mountain, I have a hard time not tearing our clothes off and spending days in bed. But, Nate, we haven't even gone on a real date. So, as much as I want to have sex with you, and know that we will have sex at some point, I'm going to ask if we can go slow on that front.\"\n\nNate kept looking at me as we spoke. After a few minutes, he said, \"Is that it?\"\n\n\"Yes. Do you hate me?\"\n\n\"Charlotte, I want you more than I could probably ever express. Sure, a huge part of that wanting is because you are so beautiful and sexy. But, a big part is also because I like you and I like spending time with you. On the ride up to the mountain, I think that was the best three hours I can remember. I want us to get to know each other better, have dates, enjoy lots of fun things. If you said let's go to bed now, all you'd see would be a blur as I carried you inside.\"\n\nI laughed and said I'd be interested in seeing more than a blur.\n\nNate touched my cheek. \"Charlotte, if that is not going to happen right now, I can live with it. Let's take it slow. I'll ask you out to dinner\u2014tonight if you'd like\u2014and we'll take it from there. How's that sound?\"\n\n\"Sounds like there will be two horny people running around, but otherwise it sounds good. Nate, thank you.\" I leaned over and we kissed. \n\n\"So, where shall I take you?\"\n\n\"To my friend Hank's. I'll show you how to go. Then, you can take me to dinner. We can have our first date.\"\n\nA couple months later, Hank and I were having our morning coffee and bagels at the station.\n\n\"So, tonight's the night?\" he asked.\n\n\"Yep, throwing away the lock to the chastity belt.\"\n\n\"Thank God,\" said Hank. \"Having to deal with a horny and edgy woman is seriously draining our supply of Gin.\"\n\n\"Hey, what about me having to watch two good-looking guys running around in bikini briefs? Think that might affect my ability to cleanse my mind of dirty thoughts?\"\n\nHank laughed. He and Raoul had been more than kind letting me crash in their spare bedroom. Raoul was an Internist with a huge practice and often was late coming home. Hank and I shared more than a few dinners by ourselves. As much as I tried to stay out of their way, I know having me live with them was an imposition.\n\nI was going to meet Nate at his apartment and we would leave from there for dinner. For the first time, I was planning to sleep over, although sleep was really not my prime objective. This would be our first sexual experience since the cabin. I spent more time than usual getting ready. I laughed as I looked in the mirror and touched up my minimal make-up. Nate had seen me completely naked more than once and I was worried about what I was wearing.\n\nAs we drove to the restaurant, I doubted I could eat with all the butterflies in my stomach. I could sense Nate's nervousness, as he was unusually quiet. When we pulled into the parking lot, I turned to him.\n\n\"Look, this is silly,\" I said. \"We've known each for long enough that we should be able to relax. I know that we're both thinking about later tonight, but I'm confident it will be great.\"\n\n\"Is there something happening later tonight?\" Nate deadpanned.\n\nThat was just the thing I needed to hear to break the tension. \n\nI laughed and said, \"God, I hope so.\"\n\nHe kissed me and jumped out. Coming to my side, he opened the door and helped me out. With my arm in his we entered the restaurant. In spite of my previous jitters, I did enjoy a good meal and the conversation between us flowed as easily as it had over the last weeks.\n\nDriving to his apartment, I felt a calm descend on me. I knew I wanted Nate in my arms. Well, I wanted him in other places as well. Remembering our near coupling up in the cabin, I expected to have my world rocked. I was ready for some serious rocking. \n\nIn his apartment, I refused a drink and fell into his arms. Feeling warm and safe in his strong embrace, I told him to take me to the bedroom. He surprised me by lifting me and carrying me to the bed. He gently eased me onto the bed. Thank god, that was the last gentle thing we did all night.\n\nI looked at him and said, \"Strip.\"\n\nSmiling like a kid, Nate pulled off his sweater and shirt, kicked his shoes to the corner, undid his belt and dropped his jeans. I thanked the gods who made men as I looked at the huge tent in his briefs. He bent to remove his socks and then stood. He paused, grinned and stripped off his underwear.\n\nI admit I had tried to conjure up what his hard cock looked like since the time in the cabin. I thought I was successful until I was staring at it inches from my face. My dreams fell far short of the reality. \n\nNate stroked it as I remembered to close my mouth and stop drooling. He smiled as he took a drop of pre-cum and extended his finger to my lips. I greedily sucked it in and was happy I skipped dessert earlier. This was all the sweetness I needed. Nate then took another drop and pushed his finger into his mouth. The guy was killing me.",
        "Nate pushed me back until I was lying flat. He removed my shoes, socks and quickly rid me of my pants. He kissed my toes, ankles, calves--you get the idea. As his tongue swirled around my upper thigh, I know I let out a most unlady-like growl. To my major disappointment, he pulled away and started lifting my sweater. I raised my arms and watched my sweater sail away. Slowly Nate undid the buttons on my shirt and spread it open. He bent and inserted his tongue in my navel. I felt as if he turned on a heat switch. \n\n\"God,\" I thought. \"If he does this to me by tonguing my navel, what's going to happen when he gets to the good stuff?\"\n\nNate kissed around the band of my panties. I was moving my hips encouraging him to go lower and farther. He smiled and decided to remove my blouse, which I happily assisted him in doing. Using his knees, he pried my thighs apart and knelt between them. I could feel the heat from his body. He dropped his head and kissed me. I attacked his mouth and our tongues did a dance that made me wanting more and more.\n\n\"Is this an expensive bra?\" he asked.\n\n\"Not really, why?\"\n\n\"How about the panties? Are they special?\"\n\nAgain I said no.\n\nNate grinned and reached into the nightstand. He retrieved a pair of scissors and pulled the center of my bra away from my body. He snipped it and the tension gave way. He tossed the scissors aside. Casually he flipped one side and exposed my breast. In a second his mouth was on my nipple and I thought he was going to suck it off my body. I know I made another sound that I never heard coming from my mouth before. \n\nNate must have kissed and sucked my right breast for five minutes. By now my crotch was soaked and my mind was quickly turning to mush. He finally relented and then flipped open the other side of the destroyed bra to expose my left breast. I have to admit Nate was an equal opportunity sucker. While his mouth, lips, teeth and tongue did obscene things to my left breast, his hand gently stimulated my right one. \n\nI think I might have had a mini-orgasm. I wasn't sure because my entire body was radiating and vibrating. \n\nNate suddenly rose to his knees. I immediately yearned the loss of feeling of his erection against my mound. Once more with his weird grin, he gripped the fabric of my underwear and tore it apart. I know I came again at that point.\n\nI thought that finally I was going to feel him inside me. I flashed back to watching him use his cock on Gretchen and how her lips gripped him. I wanted that feeling and wanted it bad.\n\nNate looked at my exposed pussy and ran his hand all over it. \n\n\"Please,\" I said, \"Take me now.\"\n\nGrinning, he said, \"Not yet, Charlotte. No, not yet. You kept me waiting for months. I'm going to savor these moments and take my time.\"\n\nHe got off the bed and pulled me to the edge. Kneeling on the floor, he placed my thighs on his shoulders and lifted my butt. My pussy was clinching in anticipation and I was running wet with desire. \n\nNate brought his face to my sex and kissed me. Warmth emanated from my pussy through my legs, up my belly to my head. My arms were tingling. As he began slow, long licks, I thrust my sex against his face. He used his hands to push me back onto the bed and wormed his tongue inside me. Finally, I had some part of him penetrating me. He used his tongue to give me a mini-fuck. My pussy would have expressed deep gratitude if it could talk.\n\nI then felt him spread my lips with his fingers as his tongue slid up to my clit. His lips encircled the already stiff bud and he sucked. God, if there is a heaven let there be pussy-eating like this.\n\nAs I squirmed and moaned, Nate kept a steady contact with my clit, still half covered by its hood. Next, he pushed with his thumb to completely expose it. As his lips once again surrounded it, I felt his teeth lightly scrape the sides. My juices were flowing, covering my pussy and ran down between my ass cheeks. Nate ran his finger through the wetness and moved toward my rear. He rubbed around my butt and spread wetness on the opening. I felt a thick finger pleading for entry and tried to relax my ass. Suddenly, he slipped past the sphincter and inched inside me. He took my clit between his lips, bit down and shoved his finger up my butt as far as he could. I came hard.\n\nI thought I would not be able to catch my breath as I felt Nate detach himself from my special areas and reposition me on the bed. I opened one eye to see him taking a condom from the drawer.\n\n\"No,\" I said. \"We don't need that.\"\n\nHe stared at me and then tossed it away.\n\nWith my legs spread wide, Nate hovered over me. He lowered his still damp lips to mine and I kissed him hard. His taste and mine mingled. I felt his tip at my opening. I lifted my hips to signal my welcome.\n\nHe was trying to penetrate me, but not quite making it. I reached between us, spread my lips and took his cock to the entrance. He smiled and pushed in.\n\nI know women have described the sensation of penetration, but never have I felt anything as exquisite as that first feeling of his large head moving past my lips. I drew a deep breath and held it as an inch or two more went in. I imagined he was half-way to full penetration, when I asked for a moment. Nate bent and kissed me and paused pushing.\n\nI took several deep breaths and then told him to continue. Slowly he worked in and out until more of my natural lubrication covered his cock. With each inward thrust he went deeper.\n\n\"I'm going all the way this time, Charlotte.\"\n\nI nodded and held my breath. The thick rod pushed inside and I could feel his pubic hair brush against me. I asked him to remain still.\n\nMy mind was a jumble of the physical sensations of being filled to more than I thought possible and the emotional rush of having Nate in my body. I ran my hands across his broad chest, taking comfort in the strength I felt there. \n\n\"Make love to me, Nate,\" I finally said.\n\n\"I've been dreaming of this,\" he replied and kissed me. He began the rhythm known to man since Adam first had Eve. As my parts loosened up, he picked up the tempo. In a few minutes he was gliding and I was sailing. His cock touched me like no other man ever had. I never wanted this sensation to stop. We both were sweating and I knew I was reaching a peak.\n\n\"Harder now, sweetheart,\" I said, \"I am so close.\"\n\n\"Me, too,\" Nate said with a wide smile.\n\nHe pounded me so hard my head bounced off the top of the bed. He paused and slid us back down and went back at full tilt. I wrapped my feet around his calves and clutched his arms. I pushed back with my remaining strength and went screaming over the edge. \n\nMy orgasm took possession of me and I lost awareness of everything except the nerve endings firing off all over my body. I thought I felt Nate letting loose, but I could not swear to it. As selfish as it sounds, I didn't care. I wanted my orgasm to extend forever.\n\nI opened my eyes to see Nate grinning. He moved to the side and we faced each other on the bed. He touched my cheek and kissed my lips. I started to get out of bed as I felt his climax oozing out of me.\n\n\"Where are you going?\" he asked.\n\n\"To clean up,\" I answered.\n\n\"Fuck that, I want you here.\" He pulled me tight and pushed his leg between mine, his thigh resting on the sticky mess that was my pussy.\n\n\"Reggie always found that gross,\" I said.\n\nNate put his arm around me and held me close. \"Two things, Charlotte. One, Reggie is not here and please never bring his name up again when we are in bed. Two, nothing about you, about us, about us making love will ever be gross. Nothing! Do you understand that?\"\n\nI could barely see him with my flowing tears. \"Oh, Nate, I love you.\"\n\n\"I hope so, Charlotte, because I can't imagine living for a second without you in my life.\"\n\nWhere we found the strength to accomplish three more love sessions, I'll never know. I do know that I was sore, exhausted, dehydrated and totally ecstatic. I slept in Nate's arms and am certain the smile never left my face.\n\nMonday morning began with a thousand questions from Hank. I gave him my best Cheshire Cat grin. He pouted and stomped around.\n\n\"Bitch, you have been dragging me along on this sordid tale of your sad love life, and now you don't share the big ending.\"\n\nI stood up and beckoned him to follow me. We stood in our tiny locker area. I pulled him to me and kissed him. \"Hank, I love you. I would never have made it this far without your incredible help and generosity. But, right now I need to process all that happened over the weekend. Just let me say that it was the best couple days of my life and I am over the top in love.\" I kissed him again. I thought I might have seen some wetness around his eyes.\n\n\"Goddamn, bitch, you are killing me. Fine, keep your little sex secrets to yourself. I'll just have to use my extremely vivid imagination.\"\n\nWe both laughed. With one last hug, I said, \"Just watch how gingerly I walk and you won't have to imagine much more than that.\"\n\nThe first month living with Nate seemed like a dream. Our lovemaking only got better as we learned more about each other's bodies and desires. Nate was never afraid to experiment. If I asked him to strip and masturbate for me, he'd be naked in less than a minute. I never felt more comfortable with a man than with him.\n\nAt one point he asked me if I were still interested in women. \n\n\"Funny you should ask,\" I said. \"Guess who sent me a text today?\"\n\nHe shook his head.\n\n\"Gretchen.\" A warm smile crept across his face.\n\nI slapped his chest. \"Asshole, you're not supposed to look like that remembering another woman.\"\n\n\"Sorry, but that was a once-in-a-lifetime weekend.\"\n\n\"Maybe not,\" I said.\n\nHe raised an eyebrow.\n\n\"She and I have been chatting online and stuff. I've told her about us and how happy we are. We are happy, right?'\n\nNate ran his thick finger through my exposed pussy and said, \"There certainly are some things to be happy about.\"\n\nI fought back my arousal and continued. \"Well, she was wondering if we could get together. She's got a week off in October and could come visit.\"\n\nNate was silent for a long time.\n\n\"Hell-o, anyone in there?\" I asked as I rapped a knuckle on his head.\n\n\"Charlotte, I would like to see Gretchen again. Maybe we might kinda pick up where we left off, I don't know. It's just that I think this is not the right time. Maybe we could think about spring break. Then we'd have a lot more time for ourselves to get used to being together. We're still getting to know each other.\"\n\n\"How'd I hook up with such a smart guy,\" I murmured as I kissed him. \"I'll tell her to think about the spring. In the meantime, you have some more getting to know me to accomplish.\"\n\nNate slipped a finger inside me. A chill ran up my spine. As he worked it just right, I thought, \"This guy is definitely on the same planet as me.\"\n\n\"Have I ever told you how much I love your pretty little ass?\"\n\n\"How much do you love it?\"\n\n\"I'm afraid words alone would not tell the story.\"\n\n\"So, you might need to show me how much you love it?\"\n\n\"I think I have a part of me that wants to go exploring. Interested?\"\n\n\"Let's say you just 'pricked' my interest,\" I replied.\n\nWe both smiled and kissed. It was so good to be finally on the same planet as my lover. In the end, I know I did the right thing.\n\n*****\n\nLet me give a HUGE thank you to HysLit for his great editing. He helped me clear up a number of fuzzy issues in addition to correcting errors. Please be assured that every mistake you may find rests squarely on my shoulders. \n\n(Author's note: If you would like to know about Gretchen's college adventures, you can find them on my page in the Girl Power series.\n\nI hope you enjoyed this tale. Please feel free to send me a note. You can find my contact information on my page at Literotica. I answer every email.\n\nThanks.\n\nAlthea Rose)"
    ],
    "authorname": "AltheaRose",
    "tags": [
        "flashing",
        "skinny dipping",
        "girl on girl",
        "three way",
        "mutual masturbation",
        "watching masturbation",
        "screwing boyfriend\u2019s friend"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/do-the-right-thing-ch-02"
}