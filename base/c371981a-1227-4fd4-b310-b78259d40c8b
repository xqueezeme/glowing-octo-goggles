{
    "title": "Along Came A Spider Ch. 04",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 22 - Flashback: A Ruse of War \n\nSoutheast Asia. Somewhere on the other side of a politically drawn line, early 1973.\n\nThe helicopters came flying in from the east, nearing the position where the Green Berets were holding out, but just barely. The Enemy was about to make its final, lethal push.\n\n\"Throw smoke, good buddy.\" said the Captain into the radio to the men on the ground. That meant to throw a red-colored smoke grenade.\n\n\"Roger that, I am throwing red smoke.\" came the reply.\n\nSuddenly, eight plumes of red smoke rose out of the jungle in a ring. The Enemy was listening to the Americans' radios!\n\nAnd out of the middle of that ring, yellow smoke rose to the sky as a voice on the radio said \"Shoot the red smoke! I threw yellow!\"\n\nAs the Cobras swooped in and began pouring gunfire into the areas of the red smoke, the Captain chuckled. The Charlies probably crapped their pants when they heard that, he thought to himself.\n\nBut it will give us just the tiniest window to get in there and get our guys, he thought. He gave the orders to go in. It would be a 'hot LZ', but he would not let that nor anything else stop him...\n\nPart 23 - Thrust and Counter-Thrust \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette at 7:00am, Monday, June 20th. \"Channel Two News has learned that Detective Julie Newton of the Town & County Police Force has been arraigned and ordered held without bail! In a search of her home over the weekend, Police found plastic explosives, and she has been charged with unlawful possession of those explosives. Newton's lawyer says the explosives were planted at her home by Commander Donald Troy after Newton provided the SBI with evidence of Commander Troy being the leader of a criminal syndicate.\"\n\n\"Karl Frazier of Public Policy Polling says that Commander Troy's popularity numbers have dropped precipitously since Memorial Day. His personal popularity numbers dropped from 89% to 55%, while his disapproval numbers have gone from 10% to 43%. In addition, the Police Commander's numbers for 'honesty and trustworthiness' have plummeted from 84% to 49%, with 10% undecided in the poll.\"\n\n\"A group calling themselves the 'Committee of Concerned Citizens' has filed a petition asking for the suspension of Commander Troy while he is being investigated. State Senator Katherine Woodburn, speaking for the group, had this to say. Roll tape.\"\n\nThe tape showed Katherine Woodburn speaking to reporters, with a group of people holding signs behind her. Because of the signs, it was not possible to tell how many people were actually in the group. It might have been 50, but was more likely five or six.\n\n\"It is only right,\" said Woodburn, \"that Commander Troy step aside, accept a suspension, and allow this investigation to proceed. Arresting one of his officers for coming forward with the truth shows how deeply corrupt Commander Troy has become. He was too young to be placed in the position he is in, and we must correct that mistake!\" The 'crowd' behind the signs cheered loudly into the Media microphones.\n\nA woman in her late twenties with a very short haircut was also interviewed. \"We need to know the truth about Police corruption. It's about the safety of the children.\"\n\nBettina came back live: \"Also, Judge Harry 'Spud' Nance attempted to dismiss the lawsuit filed by several Council members, but a Federal Judge overruled Nance and stated the case would be brought to the Federal level and combined with another Federal lawsuit concerning the same issues.\"\n\n\"In the Governor's race, it is tightening up considerably, with Governor Val Jared holding a 47-44 lead, within the margin of error. Libertarian candidate Blade Schwartz is at 2%, and Green Party candidate Al Bohrman does not have sufficient support to register a result in the poll.\"\n\n\"And in other news,\" Bettina went on, \"excitement in the Town is growing, as the Reverend Robert Patterson's scheduled appearance for Wednesday draws near. When asked if he thought he would be safe, as his mentor the Reverend Jonas Oldeeds was murdered in our County, he said he believed that security would be adequate, and that the Lord had called him here to heal the wounds of the past...\"\n\n* * * * * * * * * * * * * * *\n\n\"How are you feeling?\" I asked. Cindy looked a little tired. We were sitting in the Chief's office, with the Chief behind his desk. And yes, we were drinking coffee, and lots of it.\n\n\"Okay.\" Cindy said. \"After she was arraigned over the weekend, she talked for several hours. All of it was her saying that she was just following your orders, and she didn't realize it was for criminal purposes. And when she did realize it, she investigated you on her own, then went to the SBI with her material.\"\n\n\"And not to I.A.\" said the Chief.\n\n\"She said she felt I.A. would be rigged on Don's behalf.\" Cindy said.\n\n\"I.A. wouldn't investigate me, technically their boss, anyway.\" I said. \"It would go to Inspector General Wellman. She went over his head too, to the SBI.\"\n\n\"The good news is,\" Cindy said, \"she's admitting to almost everything we charged her with, at least the financial crimes stuff. She says the motorcycle is legally hers, we can never prove she used it in a crime or even driven on a road, and that Don planted the plastique on her; she said he could get it from his Army buddies while she has no way of acquiring such stuff.\"\n\n\"And the old motorcycle is a pile of scrap in a plastic box in our Evidence Rooms.\" I said. \"It goes without saying that the shot fired that destroyed it is now explained.\"\n\n\"Though we don't know who fired that shot.\" said the Chief. Speak for yourself, Chief, I thought to myself, but said nothing out loud.\n\n\"Okay.\" said the Chief, going into 'decisive action' mode. \"I am under increasing pressure to suspend you, Don, but I will not be doing that unless you confess to something. However, it would be a good idea if you lay low for a few days. A week of vacation at your little hideaway on Lake Watchacoochie might be well-advissssssed.\"\n\n\"That's not going to be possible.\" I said. \"But I have the feeling I'm going to be taking care of my own legal business for the next few days. Captain Ross is already leading the Newton investigation, and the only thing that might come up for me is Roland, the Disguise Man. Captain Ross cannot be involved with that, as the victim in that case was her fianc\u00e9e at the time.\"\n\n\"Very well. Okay, Commander, go ahead and get started on that. Captain, stay here a moment.\" I took my dismissal like a man, and headed out the door.\n\nAs I went to my office, the Duty Desk Patrolman came up to me. \"Sir, he said,\" there are a couple of men in the front lobby that asked to see you.\"\n\n\"Okay, I'll be right up.\" I said. I knew what this would be about, and I knew I could stay back here and not let it happen. But in truth, there was no avoiding it. So I went up.\n\nIn the lobby, two young Indian men were waiting. One of them asked \"Commander Donald Troy?\"\n\n\"This is me.\" I said.\n\nThe other man was using an iPhone to video-record this as the first man handed me a document. He said \"You've been served.\"\n\nThen both men went running out the door as if Slender Man himself were walking up to them.\n\n* * * * * * * * * * * * * * *\n\n\"Your Honor,\" said Bernadette Gillem, Esq., in the Federal Judge's chambers in the Federal Courthouse in the City, \"it is absolutely ridiculous to serve a man a warrant to appear as a witness on the day before he is supposed to appear. And with the--\"\n\n\"Your Honor,\" interrupted FBI lawyer James Bond, \"this is a months-long lingering case involving classified information being compromised. There is no more time to waste, and we insist Commander Troy be made available to answer our questions.\" \n\n\"Your Honor,\" said Gillem, \"if I may be allowed to actually finish a sentence without being interrupted by Mr. Bond... I insist that Commander Troy's Constitutional Rights be observed, as well. Mr. Bond has already abused the Commander's rights once, as an FBI Agent's sworn affidavit gives testimony to, and--\"\n\n\"Mrs. Gillem,\" interrupted the Judge, \"this Court has already ruled that Commander Troy's rights were not abrogated. He insisted upon legal representation in all future proceedings, and you are that representation. He never invoked the Fifth, and may still do so at any time.\"\n\n\"Even so, Your Honor,\" said Gillem, already thinking of her appeal to come, seeing the rigged nature of this alleged tribunal of Justice, \"as his attorney, I should be given adequate time to confer with my client, and prepare for any future hearings--\"\n\n\"How much time does Troy need, if he's simply going to truthfully answer the questions put to him a a witness?\" Bond asked, again interrupting again.\n\n\"Are you trying to imply that my client won't tell the truth if he's given adequate time to confer with me, his attorney?\" Mrs. Gillem thundered back. \"Are you saying the only way he would tell the truth is if his rights are stripped away from him--\" \n\n\"I am only saying, replied Bond loudly, \"that this is a national security matter, time is of the essence, and Commander Troy does not need weeks of preparation to give truthful answers as a witness--\"\n\n\"Time is of the essence?\" growled Bernadette Gillem. \"You've been letting this linger for months, and now all of a sudden I'm given less than 24 hours to have my client on the stand? Your Honor, this railroading of my client cannot be tolerated--\"\n\nThe Judge banged a little gavel on his desk. \"Okay, I've heard enough. There are reasonable arguments on both sides. The fact that this has lingered because of FBI interference does make time more of the essence. However, Mrs. Gillem must be given reasonable time to confer with her client. Therefore, Commander Troy's sworn deposition will take place next Monday, June 27th, at 9:00am, in my Courtroom.\" He tapped his gavel to signify the discussion was at an end.\n\n* * * * * * * * * * * * * * *\n\n\"What great, great news!\" Jack Lewis exclaimed as he and Katherine Woodburn finished their lunch in her Midtown State Senate office. \"My poll numbers are going back up, and at long last we're going to get that son of a bitch, the Iron Crowbar!\"\n\n\"Yes, he'll be suspended Thursday.\" said Katherine. \"Robert Brownlee gave his sworn affidavit that the Iron Crowbar attacked him first, and therefore it was assault and battery. Chaplain Ikea and NTF Director Ferrell also have accused Troy of physical assault upon them, and Ikea's beatdown was witnessed by dozens of people.\"\n\n\"Why wait until Thursday?\" asked Lewis. \"Why not suspend him today?\"\n\nOh, that bitch Maxwell pushed back on it.\" Katherine said. \"We also have to get our ducks in a row to go to Court. If Governor Jared does not suspend Troy, we'll get a Court Order for it. We're laying that groundwork now.\"\n\n\"I see.\" said Lewis.\n\n\"The wheels of Justice turn slowly, Mr. Governor-to-Be.\" said Katherine. \"But they are turning. We're going to interview many TCPD officers tomorrow, see what we can get. If they don't give us truthful answers, if they try to cover up or take the Fifth, they'll be suspended.\"\n\n\"There might not be a TCPD anymore, if that happens.\" said Lewis. \"And so the SBI-NTF will be needed all the more in that County.\"\n\n\"That's part of it, Jack.\" Katherine said. \"That'll be part of it. By the way... stay completely away from that County on Wednesday. The Reverend Patterson is going to be coming in and having his rallies.\"\n\n\"I was invited to be there.\" said Lewis. \"I sent my regrets. Maybe Jared can show up and be seen side-by-side with Patterson.\"\n\n\"We can only pray that happens.\" said Katherine. She did not say anything further. It was she, not Britt Maxwell, that had pushed the Commander's suspension back to Thursday. It was imperative that Commander Troy be in charge until then, so that her full plan would come to fruition. If Jack Lewis only knew, she thought to herself, he'd be shocked. Hell, they ALL would be shocked, she thought, laughing inwardly.\n\nPart 24 - Cracks In the Fa\u00e7ade \n\n\"So,\" said Detective Teddy Parker, who was sitting with Lt. Curly Goodwin in I-1, interrogating Julie Newton, \"who else did Commander Troy recruit into his network?\"\n\nNewton's lawyer, Forest Gillis, was sitting back in his chair, looking very bored. Julie was watching the Detectives, a smirk on her face which was a perma-sneer, Cindy noticed as she watched from the anteroom through the one-way glass.\n\n\"I don't know.\" said Julie. \"If you caught me, you should have caught anyone else, as well.\"\n\n\"What about your sister?\" asked Parker. \"What is her involvement in this?\"\n\nJulie tried to keep a straight face as she stared at him and said \"None... that I know of. My sister had nothing to do with anything I did.\"\n\n\"But she's right outside Commander Troy's office.\" said Goodwin. \"He could give her instructions to pass along to you, and you could use her to get messages to him, is that not right?\"\n\n\"No, that is not right.\" said Julie. \"My sister has no clue of the operation that Commander Troy was running. It's too big for her to understand. Most of it is too big or me to understand.\"\n\n\"Why should we believe your sister is not involved?\" pressed Goodwin. \"We're going to have to do a full investigation of her. What do you think that will turn up, Ms. Newton?\"\n\n\"I thought we were talking about Commander Troy.\" said Julie.\n\n\"Noooooo.\" said Goodwin. \"No no no no. We're taking about you, Ms. Newton, and we have been all along.\"\n\n\"You should be talking about Troy.\" said Forrest Gillis. \"He's the real criminal, here.\"\n\nAt that moment, Cindy banged on the one-way glass, then looked in. \"Lunchtime for the suspects, folks. We'll pick this up in a couple of hours.\"\n\nPatrol Officers Lydia Green and Inga Gunddottar came in, handcuffed Julie behind her back, and took her out the perp side door. As she turned left to go to the holding cells, Julie almost ran into the suspect being taken out of Interrogation-2. It was her sister, Yvonne!\n\n\"Julie!\" Yvonne cried out, her face a mask of pain and fear. \"What is going on? Why are they questioning me about you? What's going on?\"\n\nIt took an instant, but Julie Newton hardened her heart. \"Don't say a word to them, Yvonne! Not one word! They don't know anything! Don't let them intimidate you!\" Julie could say no more, as she was led into the holding cell areas...\n\n* * * * * * * * * * * * * * *\n\n\"Think it'll work?\" asked Teresa as she sat in Cindy's office.\n\n\"I don't know.\" Cindy said. \"But Don thinks it may be our last and only chance to get through to Julie. She might just give us something in exchange for letting Yvonne go.\"\n\n\"Think Yvonne is involved?\" Teresa asked.\n\n\"Don doesn't think she is.\" Cindy said. \"But she won't be able to work for Paulina anymore. Remember Nora, Goth Girl Kathy's mother? Same frickin' thing. The innocent get hurt by the actions of the guilty...\"\n\n* * * * * * * * * * * * * * *\n\n\"Laura, are you all right?\" asked Gayle Roberts, coming into Laura's office. She saw the tear trickling down the woman's lovely face.\n\n\"No.\" Laura said. \"Gayle, I'm going to have to do it.\"\n\n\"Oh, nooooo.\" Gayle whispered.\n\n\"I can't go on like this.\" Laura said. \"My children are in danger. My husband will not give up this obsession with this 'Consultant' person. And this... this thing about the classified data... what if it's true? I can't believe it of him... but what if I'm married to a traitor? I can't have my children growing up knowing they're the daughter and son of a traitor!\"\n\n\"No, no way he's a traitor.\" said Gayle. \"Look, maybe you just need a few days away. Get your mind cleared up.\"\n\n\"No.\" Laura said, her voice growing cold. \"I've made up my mind. I know what I have to do...\"\n\n* * * * * * * * * * * * * * *\n\n\"I am here,\" said SBI Legal Counsel Earl Drake, \"to interview Town & County Police Officers with respect to the investigation of Commander Donald Troy. I also need a room made available to conduct these interviews.\"\n\n\"Yes, we're expecting you.\" said Lieutenant Scott Peterson, Public Relations Officer. \"Sergeant, I need to ask you to escort this man an his team to a room to conduct the interviews, and make available what he needs.\"\n\n\"One moment, sir.\" said the Duty Desk Sergeant. He picked up the phone.\n\n\"Who are you calling?\" asked Peterson.\n\n\"The Chief, per his instructions.\" said the Sergeant. Lt. Peterson's brow furrowed and he flushed with anger.\n\nA moment later, Chief Moynahan was at the Duty Desk. \"And what is the problem here, Sergeant?\" he asked, seemingly affably.\n\nLt. Peterson answered before the Sergeant could say anything: \"SBI Counsel Drake is here to interview Officers in connection with the Troy investigation. I'm trying to meet his request for a room to conduct the interviews.\"\n\n\"Ahhhh, I see.\" said Moynahan. \"Well, that will not be happening. Agent Drake can find his own accommodations, perhaps in the State Office Building on Courthouse Square. Furthermore, Mr. Drake, I will save you some time by telling you that I will not be making my Officers available to you for the purposes of your witch hunt. I think you will find that our Police Union objects to our Officers being interrogated like criminals. Get warrants, based upon probable cause, Mr. Drake.\"\n\n\"Chief,\" said the stunned legal counsel, who was totally not used to being treated in such a manner, \"I must remind you that I represent the State in a formal investigation of your Police Commander. I insist that my team be allowed to question your Officers upon the Commander's conduct.\"\n\n\"And every last one of them will take the Fifth.\" said the Chief. \"Every last one of them will decline to answer your questions. It'll take days to process the formal suspensions of over 200 Police Officers, by which time the Courts will be hammering you over probable cause and due process. Now why don't you crawl back to Jack Lewis and tell him that I am in agreeee-ment with Chief Griswold over our mutual and utter disgust of the SBI...\"\n\n* * * * * * * * * * * * * * *\n\n\"Can he do that?\" Cindy asked me in my office, referring to what the Chief had just done.\n\n\"Oh yes.\" I said. \"He can require the SBI to use due process every step of the way in their investigation of me. Well.. technically it's the State DOJ, but you get the idea.\"\n\n\"I'm getting a lot of ideas right about now.\" Cindy said. \"And they are not kind ones about the corruption within the SBI.\"\n\nJust then my personal cellphone chimed. I read the text. My face must've given away my reaction.\n\n\"Don, what is it?\" Cindy asked, her voice tense.\n\nIt took a moment for me to find my voice. \"It... it's from Laura. She just texted me... to come say goodbye to the children...\"\n\n* * * * * * * * * * * * * * *\n\n\"Ah, Pastor Bundy, so good to see you again.\" said Pastor Raymond Westboro. \"This is our new Associate Pastor, Calvin Derkins.\" Bundy introduced the security staff for Rev. Robert Patterson, and the TCPD liaison, Precinct Captain Holsom 'Hal' Briggs, was also introduced to everyone.\n\nAs they began the tour of the facility, that being First Baptist Church, Associate Pastor Derkins said \"We've recently installed a new burglar alarm system on all the windows and doors, that can be partially or fully activated. We had a couple of boys get in here and walk around. The Police Commander gave them a stern talking-to, but it led us to realize we needed to upgrade in these uncertain times.\"",
        "\"Yes,\" said Pastor Bundy, \"it's unfortunate that today's youth don't know the ways of the Lord. What do you say, Captain Briggs?\"\n\n\"Aw shucks,\" said Briggs, \"back when I was young, they were lamenting our youth for dressing up like Madonna wannabees, and in my parents day, they were lamenting Elvis Presley doing those gy-rations on the new color TVs.\" Everyone laughed at the generational comparisons.\n\n\"We have a study room just back of the Sanctuary.\" said Pastor Westboro. \"I often work in here on Sunday mornings before Services. I believe my friend Robert Patterson will find it comfortable until he's ready to come in for the Revival service.\"\n\n\"What about Commander Troy?\" asked Bundy. \"The Reverend Patterson is looking forward to a few words with him. Of course, the last time we were here, he caught that 'Silverfish' burglar. Who is he going to catch this time?\"\n\n\"Hopefully nothing more than a couple of boys trying to come through a window.\" drawled Precinct Captain Briggs...\n\n* * * * * * * * * * * * * * *\n\nI entered the office, and immediately felt that something was different. It seemed stale, as if occupied but no longer the home of a great mind of research. Laura was at her desk. She turned towards me as I came in, and I could see the emotion in her face as she rose.\n\n\"Let's sit on the sofas.\" she said. She had me sit down on the sofa facing the windows, and the door to the clinic, while she sat on the one facing the inner wall and the door to the anteroom.\n\n\"Don,\" she said, struggling to get the words out, \"I... I'm going to Washington tonight. I'm taking the kids with me.\"\n\n\"When will you be back?\" I asked. You know what they say about asking a question you don't know the answer to?...\n\n\"I don't know.\" Laura said. \"Not for a while. Maybe not... at all.\"\n\nMy heart seemed to try to leap out of my chest. \"What?... Why?\"\n\n\"Don, it's been... you know things haven't been very good lately.\" Laura said, looking anywhere except at me. \"We're not having sex, we're not talking like we used to... and the kids... my children are in danger... Don, you've been obsessed with catching this Consultant guy, but... it's eating you up, it's eating us up... and now I don't know if I'm going to wake up and find my kids gone, or dead...\"\n\n\"Honey,\" I said, \"you've always know the risks... from both our jobs...\"\n\n\"It's more, Don...\" Laura said. \"This Federal investigation... if they find you mishandled classified information... they'll bury you alive... maybe even charge you with treason.\"\n\n\"C'mon, I've done nothing wrong.\" I said.\n\n\"Don, some people are above the law.\" Laura said. \"But you and I are not, and if we mess with classified information, we get charged for it. And Casey Walker believes with all his soul that you're a traitor... and I can't... I can't let my children grow up thinking their father is a traitor...\"\n\n\"My God, Laura, you don't think...\" I said.\n\n\"I don't know what to think.\" Laura said. \"I just know I'm going to take the children with me, and we're going to stay in Virginia until all of this is over. It may be months...\"\n\n\"Or never.\" I said. \"What about your professorship here?\"\n\n\"I'm going to have to talk to Dr. Wellman about that.\" Laura said. \"But not now, not yet. I have to decide what I'm going to do first... stay with the Company, maybe go back to Texas, or to California...\"\n\nMy heart was thumping in my chest. This must be what it feels like when it's breaking, I thought to myself. I had never felt more miserable in my life than at this moment... my wife was leaving me...\n\n\"I... I can't leave. I have to stay here.\" I said. \"I can't run away. I've got to stay and take the son of a bitch out.\"\n\n\"When will that be?\" Laura asked.\n\n\"By next Monday.\" I said. \"I have to do it by then, because that's when I'm going to be deposed. After that... it won't matter, will it?\"\n\n\"No. Come say goodbye to the children.\" Laura said. \"We're flying out tonight. The Air Force is sending a small jet for us.\" We got up and went to the nursery room.\n\n\"Daddy!\" Carole yelled out when she saw me. She ran up to me and hugged my leg. I picked her up.\n\n\"Hi, baby.\" I said, hugging her.\n\n\"Daddy, Mommy is taking me to her meetings.\" Carole said.\n\n\"I know.\" I said. \"You take care of Mommy, okay?\"\n\n\"I will.\" Carole said. \"Daddy, are you going to take care of Bowser and Buddy while I'm gone?\"\n\n\"Of course.\" I said, with a sideways glance at Laura. No, she was decidedly NOT taking the dogs. I hugged my daughter tightly, knowing that this could well be the last time I ever saw her. \"I love you, Carole.\"\n\n\"I love you too, Daddy.\" Carole said, hugging her little arms around my neck.\n\nThen I held Jim, and hugged him goodbye. \"Bye Dad-da.\" was all he said in reply to my farewell words. And words cannot express how I felt as I prayed that he would grow up to be a better man than his father...\n\n* * * * * * * * * * * * * * *\n\n\"I just talked to Molly.\" Cindy said. \"She called me. She said everything was fine, she's really watching out for anything unusual, and her fellow Nextdoor County Police Officers are watching out, as well. I tried to get her to come stay with me, but she said she'll be all right, and it would be better if she stays out of my way.\"\n\n\"Good.\" I said, my thoughts a million miles away. The sun was setting outside, casting an eerie light through the blinds of my window. The lights of my office were not on.\n\n\"Don...\" Cindy said, \"I know you're hurting. I can only say... I've been there, recently. If there's anything I can do to help...\"\n\n\"Yeah, thanks.\" I said. \"One step at a time, my friend. We can only take things one step at a time. So... how are things going with Newton?\"\n\n\"She pretty much was shellshocked when she saw we arrested Yvonne and we're grilling her.\" Cindy replied. \"She knows the deal... give us the Consultant, and Yvonne goes free. But I think she knows we're bluffing.\"\n\n\"We may have to show her that we are not.\" I replied. \"By the way, I appreciate you volunteering to go with me to see Laura off at the airport. After that... it's going to be very dangerous to be around me. I will understand if you stay away from me, handle the Police Force...\"\n\n\"I am going to beat you down silly for even saying that... Green Hornet.\" Cindy replied. \"I am your Kato.\"\n\n\"Bruce Lee played Kato on the TV show.\" I said. \"You were a big Bruce Lee fan, weren't you?\"\n\n\"Still am.\" Cindy said, her mind drifting into her memories. \"He was my hero, my inspiration, when I was growing up. Two black belts because I wanted to be like him... never mind that I was a girl.\" Then she said, more sarcastically, \"Fat lot of good that did in the ring of the Boxing Matches.\" Her eyes went to the trophy on my bookshelf, next to the matchstick Trojan Horse.\n\n\"That could be my epitaph.\" I said with a wan smile.\n\nPart 25 - The Embodiment of Evil \n\nThe sleek jet came out of the western sky and landed at County Airport, then taxied to the small terminal building. He watched as a a tall, black-haired woman wearing a scarf and carrying a child, the sleeping girl's head on her shoulder, came out of the Terminal building and went into the airplane. The woman's assistant was carrying the smaller child, in a carseat, and went onto the plane ahead of them. Then came six large bags of luggage.\n\nHe saw the Police Commander and Captain of Detectives watching from about fifty feet from the terminal building. They did not see the young man in all black sneak up to the Police SUV behind them, closer to the Airport gate. He dropped some coins in the cupholder of the vehicle; one of the nickels was actually a powerful microphone that would transmit conversation a surprisingly long distance away. The man who planted the bug would be following the car, listening in.\n\nThe Consultant of Crime watched as the plane taxied out, then took off, flying west-to-east. He used a specialized mobile device to check the transponder of the plane...\n\n* * * * * * * * * * * * * * *\n\n\"What are you looking at?\" I asked as we got into my Police SUV.\n\n\"Just an app on my iPhone.\" Cindy replied. Actually it was a special app from her father; it looked up airplane transponders. \"By the way, I would've been very pissed if that plane had crashed at the end of the runway.\"\n\n\"Been there, done that.\" I said. \"And you know the old saying: 'Fool me once, shame on you; fool me twice, shame on me'. We did not fool the Consultant at all last time; I double doubt we'd fool him this time, and I wouldn't dream of trying it again...\"\n\n* * * * * * * * * * * * * * *\n\nHe smiled as he heard the conversation in the SUV. He got out one of his burner phones and made a call. \"Yes... I need you to do something for me.\" He read out the plane transponder, then said \"It's headed for Washington, D.C. When it gets over West Virginia, over the mountains... shoot it down.\"\n\nAfter a pause, he said \"Yes, I know Stingers are precious commodities. Shoot the plane down. This one will be worth it, I assure you... yes... thank you. Yes, I will reward you more than you can dream... yes, I can dream a lot, too...\"\n\n* * * * * * * * * * * * * * *\n\n\"Go home, get some sleep.\" I said.\n\n\"Where are you going to be staying?\" Cindy asked.\n\n\"The Cabin.\" I said. \"Mom took the dogs up there, and she's staying with them right now.\"\n\n\"I'll head home in a few minutes.\" Cindy said. \"I have something to do in my office before I go.\"\n\nAfter Don left, Cindy got on her computer and ran her airline app, one that only Federal officials should have. She reasoned that she was an FBI Consultant. She watched the transponder of Laura's plane as it traveled east, towards Ohio, Pennsylvania, and West Virginia. It seemed dull, but was somehow hypnotically entrancing to watch the blip move a millimeter east every few seconds on the screen.\n\nThen she saw another blip coming towards the plane. It had no transponder, and seemed to be on a collision course. As Cindy watched, fear growing in her heart, the two blips seemed to merge. For a second, the transponder disappeared. Then she sighed in relief... the two blips separated, Laura's plane continuing east and the other plane continuing its trajectory.\n\nAs Cindy watched, her eyes grew heavy. When she opened them again, the sun was rising over the ridgeline east of the Town...\n\n* * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redhead at 7:00am, Tuesday, June 21st. \"Channel Two News has learned that the Town & County Police Department has formally refused to make its Officers available to the SBI for questioning in the investigation of Commander Donald Troy. Chief Sean Moynahan issued a statement that the SBI and DOJ were not using proper due process, and seemed to be attempting to smear all of his Officers with a label of corruption.\"\n\n\"Sheriff Daniel Allgood supported his Chief of Police, but issued a statement that the Police would need to cooperate when the Officers were provided protection of their rights. Town & County Council Members Thomas P. Cook and Kelly Carnes issued a joint statement condemning the Police Chief, accusing him of covering up for Commander Troy, and demanded Chief Moynahan and Commander Troy resign immediately. Council Members John Colby and Dagmar Schoen issued a counter-statement in support of the Chief and Commander, and said that Mr. Cook should resign his Council seat over corruption and graft issues.\n\n\"Due to the lack of cooperation from the TCPD, the State Department of justice will seek a Court order to compel Governor Jared to suspend Commander Troy. This is expected to occur on Thursday or Friday.\n\n\"SBI Director and candidate for Governor Jack Lewis has issued a statement condemning the Town & County Police Force, saying that it was corrupt when Chief Griswold was running it, and it is corrupt now with Moynahan and Troy in charge. Governor Jared has stated that the current investigation of Commander Troy must run its path before any judgments can be made.\"\n\n\"In other news... what's that?\" Bettina asked, listening to her nearly invisible earpiece. \"Ladies and gentlemen, we have breaking national news from the Channel Two Newsdesk! Let's go to John Hardwood at the desk. John!\"\n\n\"Thank you Bettina.\" said John Harwood at the anchor desk in the KXTC studios. \"Channel Two News has learned that a small jet has crashed into the mountains in West Virginia last night. Rescuers reached the plane only in the last hour, and say that everyone aboard is dead. The plane was believed to be an Air Force jet that transported Government executives about the country. The names are not being released pending notification of next-of-kin, but Channel Two News has learned that at least two adults and two small children were found...\"\n\n\"Oh my God!\" Cindy Ross wailed as everyone in MCD watched, her hand going to her mouth in horror, tears welling in her eyes. \"No, no, no... Oh my God...\"\n\n\"What is it?\" Joanne Cummings Warner asked.\n\n\"The plane...\" Cindy gasped... \"was Laura's plane... Carole and Jim were on it.. oh God, oh God...\" She turned and ran out of the room. Teresa bolted after her.\n\n* * * * * * * * * * * * * * *\n\nCindy Ross hurled herself against the door of Commander Troy's office, almost breaking it down. Going into the office, she saw the Iron Crowbar seated at his desk, looking out the window, his face a mask of shock and agony, the tears rolling down his cheeks.\n\n\"I'm going to kill him!\" Cindy shouted. \"I don't give a shit about the rest of it, I am going to kill that son of a bitch NOW!!\"\n\nI turned to face her. \"If you do, he wins, and their deaths are meaningless.\" I stood up. \"I will take him out myself, but it has to be my way.\"\n\n\"NO!\" Cindy screamed, unable to control her pent up fury. \"He dies! Today! If you don't do it, I am going to!\"\n\nTeresa shut the door to the office. \"Cindy, take it easy!\" Cindy whirled on her, and Teresa squared up to her... totally unafraid, I noticed.\n\n\"Cindy!\" I called out in my most authoritative voice. She turned to me. \"They were my wife and children, I will avenge their deaths. But you must let me do it! It's going to happen, everything is in place, it is inexorable... but if you act too quickly, he'll get away. You won't find him, you won't be able to kill him, and everything will be for nothing.\"\n\nCindy was staring at me, her ice blue eyes almost burning with white-hot fury. I could not tell if I was reaching her. She looked down for a moment, then bent over, and I knew her soul was racked with a pain that barely approached mine, but was still overwhelmingly agonizing.\n\nThen she stood bolt upright.\n\n\"Molly!\" she gasped. \"Oh my God, we've got to find Molly!\" She took out her phone and dialed her sister's number. There was no response.\n\nTeresa was not fast enough to stop her as she bolted out of my office, running like a madman down the hall, but Teresa tried. As Cindy got to her Police SUV, Teresa was on the passenger side, getting in.\n\n\"How...\" Cindy gasped as she got in. \"I only unlocked the driver side door.\"\n\n\"I know, I unlocked the other one.\" Teresa said, showing Cindy the extra key and fob with the lock/unlock button. Cindy did not say anything further, but tore out of the parking lot and down Riverside Drive, blue lights burning and sirens blaring as they drove towards Nextdoor County...\n\n* * * * * * * * * * * * * * *\n\nThe Detectives in MCD were stunned, and a mess. Mary Mahoney Milton was sobbing, her husband Myron trying to comfort her. Tears ran down Joanne Warner's cheeks... and Theo Washington's. Teddy Parker looked sick to his stomach, and Wes 'Coldiron' Masters had an inscrutable blank look on his handsome face.\n\n\"Oh no...\" Joanne said when she looked into the hall and saw FBI Agents Jack Muscone and Martin Nash coming down the hall, their faces showing grim pain. Martin looked in on them, and just shook his head before continuing to the Commander's office for the official notification of the next-of-kin...\n\n* * * * * * * * * * * * * * *\n\nThirty minutes later, I came out of my office and went to the Chief's office. After talking with him for a few moments, he told me to find a place of duty that did not include Police Headquarters. I nodded. I had to get out of there.\n\nI went to MCD. People started trying to offer condolences, but I raised my hand to silence them.\n\n\"Not now, guys.\" I said, my face a mask of stone. \"Thank you, but not now. Coldiron, until Captain Ross returns, you're in charge of the Detectives. Keep doing the great job you've always done, people. And break Newton down.\" With that, I left the room and went down the hall to the exit door as Chief Moynahan came to MCD and called Lt. Masters to his office.\n\n* * * * * * * * * * * * * * *\n\n\"She's not at Nextdoor County Police Headquarters.\" Cindy said as she disconnected the phone. \"They thought she was going to spend the week with me in our County.\" She was already driving 90 miles per hour, but still tried to push the SUV harder.\n\n\"Does she ever go undercover?\" Teresa asked.\n\n\"Not without telling me.\" Cindy said. \"And she'd have made arrangement for the boys.\"\n\nPulling into Molly's condo complex, Cindy was about to rush in, when Teresa stopped her and drew her gun. Cindy's eyes widened in surprise, but she realized Teresa was right: they had to clear the apartment.\n\nCindy unlocked the door and Teresa opened it. \"Molly! It's Teresa and Cindy! Anyone in there?\" There was no response.\n\nTeresa went in first, slowly and carefully. One by one the rooms were cleared. There was no one at home.\n\n\"Everything is neat and orderly.\" Teresa said. \"No signs of a struggle. No baby bag, which means she has that with her.\"\n\n\"Oh, geez.\" Cindy said. \"Oh my God.\" She was trying to hold on mentally.\n\nTeresa said \"Cindy, relax. Breathe. Molly may just have gone into hiding. The Consultant went after Laura and her kids first, and Molly may be just fine somewhere.\"\n\nCindy said \"I know. But... look, remember that guy Fulton that was found near BigPharmaCorp? His apartment was found neat and tidy except for bloodstains. And all these other crimes, the badge crimes... the victims's places were left neat and tidy, as on show for sale. Look around here... Molly keeps it pretty clean, but it's just perfectly clean... too clean.\"\n\nTeresa saw the look in Cindy's eyes change. \"Don't do it, Cindy.\"\n\nCindy whirled and said \"I am going to kill him. Now. If Molly is okay, she'll come out; if she and the boys are dead, it's too late anyway. I'm done with this.\"\n\nAs she went for the door, she felt the sting of an injection into the back of her neck. As she turned, she lost her balance and went down... then her eyes closed as she fell into blackness.\n\nTeresa looked up at the person just coming in the door. \"I had to stop her.\" Teresa said.\n\n\"I know. You did right.\" said the man entering the house...\n\nPart 26 - Night of the Long Knives \n\nThe handsome young Satyr entered Lashes & Lace and went to the back room. Putting on his mask, he was admitted to the underground chambers, and was told to go to the Satyrs' Lounge, a room on the second level down. It was something of an employees' room, but orgies amongst the staff were frequently held there.\n\nOnce down there, a pretty girl, naked except for her high heels and her own mask, wordlessly escorted him into another side chamber. He had never been in this room before. It was small, and poorly lighted with artificial candles. At the far end was Rita, wearing a mask, her usual bluish-silver clingy outfit, and high heel sandals.\n\n\"Ah, my precious Scotty, there you are.\" Rita said in her seductive voice. \"Come, kneel before me.\" Scotty obediently complied.\n\n\"Ah, you've been a bad, bad boy, haven't you, Scotty?\" Rita said as she stood up.\n\n\"Ma'am?\" Scotty asked, confused.\n\nThen he looked around. He was surrounded by other men, most very muscular, all wearing masks... leather masks of executioners, not the party masks of Satyrs and Nymphs. There were also some women in the circle of people.",
        "All of them had long knives, unsheathed, ready for use.\n\n\"What, what is this?\" asked Scotty.\n\n\"A small ritual.\" said Rita. \"A little ceremony when I find a traitor in my midst. I have known that there has been a mole amongst my lovely Nymphs and handsome Satyrs. And now... I know who it is.\"\n\n\"Ma'am, I'm loyal, I've always been loyal.\" Scotty said, fear running through his very soul... and for good reason.\n\n\"Oh, really?\" Rita said. \"So would you mind explaining these?\" She opened her fist, displaying three metallic objects in her right hand, and what looked like a thick U.S. nickel in her left hand.\n\n\"These are bugs, listening devices.\" Rita said loudly, for everyone's audial consumption. \"Only you could have planted these in the delicious Dr. Fredricson's office... and now she's dead. And then this coin, found in the Police Commander's vehicle. He really is very angry, you know. And who can blame him... his children dead because of you.\"\n\n\"Ma'am, I had nothing to do with any of that.\" Scotty said, trying to defend himself. Rita just stared at him, feeling him wilt mentally.\n\n\"You are fortunate.\" said Rita. \"I can only imagine what the Iron Crowbar would do to you if he were here now, what he would permit himself to do in his agony. But you are only with us, amongst... family.\"\n\nRita came up to Scotty, who was still on his knees. She put a golden crown of leaves on his head, then a red robe over his shoulders.\n\n\"Why, I have a wonderful idea.\" Rita said, as if it were a sudden thought. \"Let's play 'Julius Caesar'... and it's the Ides of March...\"\n\n* * * * * * * * * * * * * * *\n\n\"We will now go into Executive Session.\" said the Mayor. He led the Council Members out of the public meeting arena and upstairs to the private meeting chamber, the catcalls and boos of hundreds of people chasing them. People were still angry about the Community Center land sale.\n\nOnce they were in their seats in the chamber, the Mayor said \"Well, it's obvious what tonight's meeting will be about.\"\n\n\"Yes, to do what we should have done a long, long time ago.\" Kelly Carnes sneered.\n\n\"What, arrest Thomas Cook for assault and graft?\" snarled Dagmar Schoen. Cook glared at her, but both she and Jack Colby stared back at him.\n\n\"Look,\" said the Mayor, \"I'm not happy about this. Commander Troy has done an amazing job cleaning up the drug gangs, cleaning up the corruption, and solving some difficult crimes. But apparently he's not totally clean himself, and the State DOJ is finding some things. The standoff with the SBI makes our entire County look bad, and like we're trying to hide something.\"\n\n\"My God.\" said John Colby. \"You heard those people screaming at us in the public meeting, and you say the TCPD not kowtowing to the corrupt SBI is making us look bad?\"\n\n\"Commander Troy's actions have made us look bad for months and years now.\" said Thomas P. Cook.\n\n\"I don't see how saving my daughter's life made any of us look bad.\" said Edward R. Steele.\n\n\"Then you should recuse yourself from this vote.\" demanded Cook.\n\n\"I'll see you burning in hell before I recuse myself from any such vote, Mr. Cook.\" thundered Steele in reply, his eyes boring into Cook's.\n\n\"Guys, I don't want to be here all night.\" said the Mayor. \"Now Commander Troy is likely going to be suspended by the State on Thursday or Friday. What we need to do is decide our course of action when that happens. We can either suspend him ourselves, with the intent to fire him after a Board of Inquiry; or we can countermand the State and refuse to suspend him until the State provides a solid legal Court case. Let's go around the horn for comments.\"\n\n\"I think we should not only suspend and fire him, we should bring criminal charges against him.\" said Kelly Carnes.\n\n\"It's a sad day.\" said Reginald B.F. Lewis. \"I very much fear what will happen to my people when Commander Troy is gone. They respect that man, and there is no one else they will respect. But if he's shown to be corrupt, that respect will be gone, and then there is no hope anyway.\" Everyone peered at the black Councilman, wondering what those cryptic statements meant.\n\nMalinda Adams spoke up. \"Commander Troy has done well in elevating women. Of course, one of those women is his cousin, so I'm not sure how well that counts. But the problem to me is that our Peace Officers are being made to look like brute thugs by that man going around swinging that crowbar, throwing his weight around.\"\n\n\"And the woman he brought up with him doesn't also use a crowbar?\" asked Dagmar Schoen. \"And who was it that led the officers to help the woman being raped by thugs from the Fire Department? That was Commander Troy...\"\n\n\"Let's not go there, please.\" said the Mayor. \"J.P. Goldman, what do you have to say?\"\n\n\"Only that no good deed goes unpunished.\" said Goldman. \"The Iron Crowbar has worked his ass off to clean up this Town. He's been shot, they've tried to kill him several times, and now his family is gone. And some of you here want to kick him out? Reginald says there's no hope for his people... I say there's no hope for any of us if a good man like Commander Troy is paid for his work to protect us by being kicked out by corrupt politicians working for their own enrichment.\"\n\n\"It's not clear to me that Commander Troy has done all that good a job protecting us?\" said Pastor Raymond Westboro. \"The Ward Harvester warehouse explosion, the Standard Tools Building explosion, the explosion of those trucks on the Bypass, the explosion of that car in the Hospital parking lot, the explosion at the Community Center... and I have not even begun listing the names of the victims of his crowbar. Too much violence for me, I'm afraid.\"\n\n\"All right, Mr. McGhillie, close it out for us.\" said the Mayor.\n\n\"My son is a police officer.\" said McGhillie. \"And no, Cook, I won't abstain from the vote. My son says that the morale of the TCPD under Commander Troy is very high. They love working for that man. They know he has their back. They know he stands up to the deeply corrupt SBI. They don't believe this SBI crap about him being corrupt. I suppose some here want him gone, so they can do whatever they please to use their Council seats for profit and political power, rather than serve the People. But if our decision is to do what is best for our Police Force... then give the men and women of the Force the leadership they deserve... and that leadership is the Iron Crowbar.\"\n\n\"The vote will now take place.\" said the Mayor. \"The vote is to suspend Commander Donald Troy from the Police Force if he is suspended by the SBI, or if formal criminal charges are brought against him at the State or Federal level.\"\n\nThe vote was 5-5: Carnes, Cook, Adams, Lewis, and Westboro vs. Colby, Schoen, Steele, Goldman, and McGhillie. All eyes looked to the Mayor for the tiebreaking vote...\n\n* * * * * * * * * * * * * * *\n\n10:15pm, Tuesday, June 21st. Lieutenant Wes 'Coldiron' Masters worked his way through the crowd in the parking lot of Whippets on the southern side of the Tenderloin District. With him were 2d Precinct Captain Damien Thompson, Detectives Theo Washington and Teddy Parker, Sergeant Sean DeLong and Patrolman Jermaine Davis, the last two being black officers assigned to Precinct Two.\n\n\"What a mess.\" said Coldiron as he looked upon the body of a young, fit, white man, naked except for a red cape, with dozens of stab wounds all over his body. He was lying on a white sheet.\n\n\"He didn't bleed out here.\" said Teddy Parker. \"Looks like he was killed somewhere else and dumped here.\"\n\n\"Got the parking lot videotape?\" asked Masters.\n\n\"Got that first thing.\" said Sergeant DeLong. \"Black van came up, must've known where the camera is because nothing can be seen, then it drives away and the body is just lying there on that sheet. No license plate on the van, either, just a temp tag, which I suspect will prove to be fake.\"\n\n\"Call Lt. Perlman out here.\" said Theo Washington. \"This guy has a huge dick. She always liked cases where the dead guy had a big dick.\"\n\n\"Call Rasputin, she would say.\" said Teddy Parker. \"The body was wrapped in this plain white sheet in order to be moved here. Not a high threadcount like the hotels would have. Either a very cheap hotel or bought from Wal-Mart.\"\n\n\"Looks like different knives did this.\" said Theo Washington as he examined the body more closely. \"You can see that some of the wounds are longer than others, suggesting a wider knife.\"\n\n\"All right.\" said Masters. \"The autopsy will tell us more, and maybe we'll get an I.D. from fingerprints. I'd call the Iron Crowbar, knowing how he likes these types of cases, but he's in mourning right now.\"\n\n\"That's not right, killing a man's kids like that.\" someone from the crowd around the crime scene called out.\n\n\"Yeah,\" said another, \"the Iron Crowbar didn't deserve that. His kids didn't, either...\"\n\n\"Wonder what this guy did to deserve this?\" Theo Washington mused as they all looked upon the dead young man...\n\nPart 27 - The Confrontation \n\n\"My nerves are fairly proof, Watson, but I must confess to a start when I saw the very man who had been so much in my thoughts standing there on my threshold.\n\n...\n\n\"'Danger is part of my trade,' I remarked. \n\n\"'That is not danger,' said he. 'It is inevitable destruction. You stand in the way not merely of an individual, but of a mighty organization, the full extent of which you, with all your cleverness, have been unable to realize. You must stand clear, Mr. Holmes, or be trodden under foot.\"\n\n-- Sir Arthur Conan Doyle, 'The Final Problem'\n\n11:30pm, Tuesday, June 21st. I sat on the back deck of the Cabin, alone. All alone. Cindy had awakened in the guest room of Chief Griswold's home, and 'Hornet' did not begin to describe what I was dealing with when she saw me waiting for her in the living room. After a lot of yelling, screaming, and finally crying together, she calmed down enough to be functional again. I even told her to go after the Consultant if she wanted to... and she knew she'd never find him. Then Chief Griswold took over, and finally got her head right and back in the Game.\n\nI contemplated events. The special Council meeting was tomorrow afternoon, before the big Robert Patterson rally. I had not heard from Colby or Schoen; I had no idea what the Council's vote was. I did know they'd asked Griswold and the Sheriff to be there at the next day's meeting. Almost all of my 'Eightfold Fence' list of suspects would be there...\n\nI think I felt his presence before I heard the steps on the outside walk. I folded my arms as he came onto the deck, walking around the right side table, keeping it between us. He looked out over the Town as the clouds rolled in, the fog beginning to obscure the more distant lights. I felt my heart beating in my chest.\n\nIt was him. The Consultant of Crime was here. At long last, we were in direct confrontation.\n\n\"Yes, a dangerous habit indeed.\" he said. When I'd crossed my arms, my left hand under my right armpit held a small revolver. Remember, I'm ambidextrous... and qualified with a gun both left-handed and right-handed. This revolver had a laser sight, and that little red dot was square on the center of his chest.\n\n\"Yes, I would love to say it's been an intellectual joy watching you pursue me.\" he said. \"But I'm long past that. The pain you have caused me... well, murdering your children in that plane crash was only the smallest of payments back.\"\n\nI knew he was trying to goad me. To kill him now, though I deeply wanted to do it, would be the undoing of all of the years of my work. He would die a martyr, his organization would continue, I'd be on Death Row...\n\n\"I simply do not understand how you thought you could come up against me and defeat me.\" he said. \"Your sister foolishly thought so, and she died. Tanya Perlman is lucky to be alive. Pete Feeley, not so much... oh yes... I not only corrupted Angela Harlan, I actually got her to murder one of your police officers.\" He laughed, the evil sound of it searing my soul. Still, I held myself in check.\n\n\"Yes, you have no idea what you are up against.\" he said. \"In fact, you have no idea of the sheer power I hold in my hands, which you can never hope to duplicate. Would you like a demonstration?\"\n\nI just stared at him, not speaking. Holding myself in check... holding myself in check.\n\n\"I'll tell you what I'm going to do.\" he said. \"I'm going to allow you... to commit suicide.\"\n\nHe had my attention, that was for sure.\n\n\"Like father, like son.\" he said. \"I'm going to make you kill yourself, like I made your father kill himself. Here is my most generous offer: if Bettina Wurtzburg tells me and everyone else on her morning newscast that you are dead by your own hand, I will let your mother live. I will let your mistress and your two sons live. I'll let your dyke cousin live and the Officers of your Police Force live. I'll let your nephew live, and his associates and friends survive. And many, many more people...\" He said the words softly, as if they were a caress.\n\n\"Now if you are alive tomorrow, if I do not hear what I want to hear on the morning broadcast,\" he said, \"I'm going to make you kill yourself anyway, but I will kill your family and friends, and many others. So the choice is yours, Commander Troy.\"\n\n\"You'll try to kill them anyway.\" I said. \"Why should I believe a word you say?\"\n\n\"Because I've said I would spare them.\" he said indignantly. \"I'm sure you understand that I cannot run the organization that I do unless I and all my people adhere to a ruthless and rigid integrity. If I give you my word, that is what will happen.\"\n\n\"Of course,\" he said, \"I'll spare your remaining sons... but not that filthy halfbreed niglet you brought into this world. That alone is reason to kill you. And those God-cursed dogs of yours will die, and most painfully.\" He was trying to goad me again... retribution would be merciless, I promised myself. But not now... not now...\n\n\"But the rest of your family, and the thousands of others...\" he said. \"They will be spared.\"\n\n\"So why shouldn't I just kill you right now?\" I asked. The red laser dot appeared on his chest again.\n\n\"Oh, I would die stunned, of that you may be sure.\" he said. \"But whatever would you do with my body?\"\n\n\"Ohh...\" I drawled, the thought amusing me, \"probably the same thing that caused me to realize who you were in the first place.\" I saw his eyes light up as he understood.\n\n\"Oh, I think you are more of a sportsman than that.\" he said. \"Well, I'll be going. Lovely view from this deck. I should've bought this place myself, years ago. Your fortunate... well, as long as the house is not on fire...\" He chuckled sardonically as he made his way around the table and back down the outside walk.\n\nI remained sitting on the deck for a long, long time. The clouds had obscured most of the Town; I could not even see any trains coming out of the western horizon. The weight of the world was bearing down on me, and I was now having to bear it alone. I had chosen this path; I had not expected to pay this high a price to win this battle. My family was gone, my reputation shattered, my career and any possible future destroyed. \n\nAnd now I had a fatal choice to make. As I looked out over my Town, a deep sense of foreboding overtook me. It seemed that Doom walked the heavens...\n\n* * * * * * * * * * * * * * *\n\nThe two figures, in black masks and clad in all black, had crept silently around the far side of the Cabin. They listened to the conversation between the formidable antagonists, the Iron Crowbar vs. the Consultant of Crime. When it was done, and the Consultant gone, they crept back up the road and over the hill.\n\nRemoving their masks, Teresa Croyle and Todd Burke just looked at each other, unable to believe what they had just heard... and unable to believe who the Consultant of Crime was. They silently made their way down the other side of the mountain, now armed with knowledge that could provide needed help to the Iron Crowbar...\n\n* * * * * * * * * * * * * * *\n\nUnaware that the conversation had been overheard, I came out of my reverie. No, everything was in place. Everything I had worked for, planned for, fought for, bled for... it was now time. P. Harvey Eckhart would say that most people fail without realizing they were 99% to the finish. I had to run through the finish, not just to it.\n\nI had spun my web and cast my nets. I had planned this and worked for this day, yes, I had even been able to know the day. I just had to trust myself, and believe that Good would triumph over Evil. In seeming answer, somewhere through the mists the University Clock Tower chimed. It was midnight.\n\nIt was Wednesday, June 22d.\n\nFinis.... for now.\n\nLast chance... who is the Consultant of Crime? And not just the name... what were the clues that led to identifying that most evil of dog haters?\n\nHere it comes..."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/along-came-a-spider-ch-04"
}