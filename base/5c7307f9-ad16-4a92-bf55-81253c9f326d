{
    "title": "UCLA to Big D Ch. 10",
    "pages": [
        "This chapter is an extension of the recent developments in Chapters 5, 6, 7, 8 &amp; 9. If you are new to the story, you might consider reading at least chapter 5 first, but make no mistake it is not a necessity, this chapter is good as a standalone too. \n\nAny references to celebrities or real-life people or places are purely fictional. Any and all sexual situations regarding these individuals are consensual. \n\nIn chapter 9, Jenna's new married 'friend' Gina told her BBC story, in this chapter, the sexy brunette high school teacher Monica conveys hers... \n\n***** \n\nThe three married white women stared at each other in a drug and alcohol induced aroused silence. Gina had just conveyed the details of how she'd come to be here at Paul Washington's LA mansion this night. Jenna and Monica, both here under similar circumstances, had listened in shock and amazement as the busty blonde wife shared the details of her situation. \n\nFinally, she broke the awkward silence as slurred words emanated from her mouth again, \"I hope you guys didn't mind hearing the graphic the details of my situation, but I thought it would be helpful to share as much as possible as I know you both are experiencing similar circumstances. With that, I hope you don't judge me or my husband; I'm trying to come to grips with this whole sordid situation myself. Anyway, enough about me, I'd really like to hear about each of your circumstances too.\" \n\nMonica volunteered to go next. The gorgeous brunette tried very hard to speak clearly, but the alcohol and drugs were having a strong effect on her as well, \"Sure, I don't mind going next, you two have been through plenty already since we arrived tonight.\" \n\nMonica started...I grew up in the Bay Area, my husband and I met at Cal Berkeley. I earned a tennis scholarship and played for the women's team; he was an assistant coach. We dated for a couple of years and then got married after I graduated. \n\nJenna could tell Monica was some sort of athlete, at 28 she still had the body to prove it. Jenna again was reminded of her earlier thoughts about sex with these two beautiful women. Monica bore a strong resemblance to country music singer Kacey Musgraves. Jenna and her husband Ryan had recently seen the sexy Musgraves perform at Hollywood Bowl. \n\nMonica continued...My husband Brad was from Southern California originally and he wanted to get back down here. And while his allegiance was to his alma mater USC, he took a job as the head women's tennis coach at Cal State Long Beach. I bounced around doing substitute teaching jobs before landing my current position teaching 11th and 12th grade math at Long Beach Poly High School. I started there this past January for the spring semester. \n\nA few months back, one of my girlfriends got married, so we threw her a bachelorette party in Las Vegas. During the week leading up to the party, one of my students asked if I had any plans for the weekend. I mistakenly told the class I was going to Las Vegas for a bachelorette party and we would be staying at the Cosmopolitan. \n\nThat Friday afternoon, I kissed my husband goodbye before my friends and I flew to Vegas. We partied hard on Friday night and danced until about 3:00 a.m. We met a group of younger guys from Southern California, but most of us were married so we said our goodbyes and went back to the hotel. \n\nThe following day at the pool we saw the same guys and a few of their black friends. We partied with them again and eventually went out to one of the local clubs. \n\nSomehow I got separated from my friends and started to walk back to the hotel by myself. I ran into one of the black guys that we had partied with at the pool earlier. He reminded me his name was Nate and suggested we have a night cap and then he would walk me back to the hotel. I was pretty wasted but still was completely in control. He asked if I'd ever been to a strip club before. I laughed and said, \"Sorry I'm not gay, why would I go to a strip club?\" \n\nHe said, \"Are you kidding me, women go to strip clubs all the time these days, most of the chicks I know like to see what guys are into and...to compare assets.\" \n\n\"I'm not into comparing assets and I think I know what most guys like. I certainly know what my husband likes!\" I stated matter-of-factly with a smile. \n\n\"Please don't hate me for saying this, but from what I can tell of your body in that outfit and what I saw at the pool today, I can't imagine too many women would want to compare assets with you girl. Your husband is a lucky man! But I still think you'll enjoy the show and I know a couple of the bartenders, we can get some free drinks.\" \n\nI was feeling great about his complements and I wasn't ready to call it a night, besides I couldn't reach my friends and had to admit I was a little curious, \"Okay, let's do it...I've never been to one of those places and I guess I am curious what kind of 'assets' are on display!\" I said to him with a giggle. \n\nNate was younger than me, but he was very funny and he seemed pretty trustworthy. He hailed a cab and we drove several blocks off the strip to a seedier part of town. I nervously asked where the place was and he assured me it was only a few more blocks. He told me to not be nervous and convinced me the place was great. \n\nWe got dropped off in front, he paid the cab and $5 cover. When we went inside it was very dark, colored lights were illuminating sections of the bar. Several girls with large breasts were walking around talking to guys. One of the girls, a really perky young redhead with short hair came up and said, \"Nate who is your friend, she looks good enough to eat!\" \n\nHe responded back, \"Dana, her name is Monica, she is just here to get some drinks and check things out.\" \n\nThe pretty redhead took my hand in hers, \"Too bad Nate, if you want to buy her a lap dance, call me first...in fact I might do one for free!\" Dana smiled and winked at me before walking away. Nick gave me a sheepish smile and shrugged his shoulders. \n\nI looked over and saw a blonde girl with large breasts dancing naked on the stage. I asked Nate where the bathroom was, he pointed it out and said he would order us some drinks. I went to the bathroom and got propositioned by both men and women a few times along the way. When I got back, Nate was sitting near the stage watching the girl with big boobs dance in front of a group of very loud guys. \n\nBefore long, I actually found myself comparing assets with her. \n\nThe stripper's breasts were larger than mine, but not as well shaped. Her ass was bigger but it had a nice shape to it and the loud guys in the front seemed to like it when she wiggled it in front of them. The blonde had a pretty face, but looked like she was living a much harder existence than my semi-pampered life in Long Beach. \n\nNate had bought us each a shot and another drink. He said bottom's up and we drank the shots. We watched a couple more girls dance and drank most of the second drink... \n\n...next thing I remember I awoke back in my hotel room late the following morning naked in my bed. I couldn't remember anything from the previous night beyond sitting near the stage at the strip club. \n\nJenna and Gina covered their mouths, suspecting something nefarious probably happened to her. They were right... \n\nMonica went on...I reached for my phone and saw that I had nearly 20 messages from my friends asking where I was. I looked at the clock and couldn't believe it said 11:45 a.m. My plane was due to leave at 12:30 p.m. I had a strange taste in my mouth that I couldn't place. \n\nI called my girlfriend Lisa and told her I was fine but had overslept and was going to have to catch a later flight. She asked where I had disappeared to the night before. I told her I went to another club with one of the guys we'd met the day before. She said, \"I hope you didn't do anything you are going to regret and aren't too hung-over, good luck catching another flight! I'll see you back in Long Beach.\" \n\nI thought to myself that I hoped I hadn't done anything regrettable either as I couldn't even remember how I'd gotten home. I didn't think twice about being naked, I sleep in the nude most of the time. \n\nAs I climbed out of bed, I realized that many of my muscles were feeling fatigued and my pussy was sore. Just then I realized what the taste was in my mouth... \n\nI jumped out of bed and soon realized that my butt was hurting too. I ran into the bathroom and looked in the mirror. The first thing I noticed was the dried white residue around my mouth and on my chin. My hair was stuck together in clumps. As I looked more closely it confirmed the taste in my mouth...no it couldn't be! I brought my hand up to touch the crusty semen on my face, my fingers smelled like pussy. \n\n\"What the fuck happened to me last night?\" \n\nI looked down and my pubic hair was shaved completely bald. I reached down to touch my mound and my pussy felt very tender and...stretched. I reached around and my butthole was very sore as well, \"Did somebody fuck me in the ass? This can't be happening!\" \n\nI went back out to the room and looked more closely at the bed. I pulled the sheets back and couldn't believe what I saw...cum and blood stains were everywhere! Just then my cell phone rang. I didn't recognize the number, but it was a Los Angeles number so I answered. \"Is this Ms. O'Neil?\" A man's deep voice asked. \n\n\"Yes, this is Mrs. O'Neil who is this?\" I corrected. \n\n\"A friend,\" boomed the voice on the other end. \n\n\"What do you want?\" \n\n\"Are you wondering what happened to you last night?\" The man asked. \n\n\"Who the fuck is this and how did you get my number?\" I snapped. \n\n\"I think you better start being a little friendlier to me Monica.\" \n\n\"Why the fuck would I want to do that, and how do you know my name?\" \n\n\"Because I have these...take a look at the pictures I am texting you now.\" \n\nThis whole situation was very surreal and I was getting quite scared. My phone beeped when the text arrived; I got a terrible pit in my stomach. I opened the first text and it was a picture of my wedding rings. I looked down at my left hand and my rings were gone, I couldn't believe I hadn't noticed earlier. \n\nAs I opened the next text I almost fell down...the picture was of me with a big black cock in my mouth. \n\n\"Monica...Monica are you there? Did you look at the pictures?\" The man asked. \n\n\"...yes I looked at them...I don't understand, why are you doing this?\" \n\n\"Get cleaned up and come up to room 3112. Be here in 45 minutes sharp and don't call anyone. You will be safe, but we need to talk to you!\" \n\nI got off the phone and burst into tears, \"What happened to me last night?\" I took a quick shower and washed all the dried semen from my hair and face. I put my hair up and put on some basic makeup. I threw on a short top, shorts and sandals. \n\nI was trembling as I knocked on the door of room 3112. The door opened and the beautiful redhead girl that I'd seen at the strip club answered the door. She invited me in and I immediately saw Nate, the guy that I'd gone to the strip club with sitting on the couch. I gave him a dirty look; he smiled and then blew me off. \n\nAn older Caucasian gentleman approached and said, \"Ms. O'Neil, hi my name is Roger Cargile. I was the one you spoke to on the phone. Thanks for coming up to see us. We have your wedding rings in a safe place and will give them to you just soon as you agree to do something for us.\" \n\n\"My name is Mrs. O'Neil and why would I do something for you, you stole my wedding rings.\" \n\n\"Actually we didn't steal them, you gave them to us!\" \n\n\"What are you talking about?\" I asked confused. \n\nRoger clicked a remote control and a video played on the big screen TV. The scene was from my hotel room. I was down on my knees and elbows on the bed with my ass in the air. Nate was fucking me hard in the ass with his big black dick. My face was buried between the redhead's legs. \n\nRoger clicked the pause button and said, \"I doubt formal introductions were made last night, but the two people you had sex with are Nate Leopold and Dana McCoy. They are both contractors for my firm.\" \n\nHe continued, \"I'm sure it is a great surprise to you Ms. O'Neil, while you were experiencing the best sex of your life last night, you were actually getting fucked by a couple of 18-year-old high school kids. And it just so happens we have it on video! It's probably not a desirable career move for you to be having sex with high school kids while you are in fact a high school teacher. That said, you put on a very convincing performance. One, that even the best CSI would not be able to determine was drug induced!\" \n\nJenna and Gina gasped. \n\nMonica continued, quoting what Roger said next, \"Sometimes these date-rape drug induced sex scenes don't look as convincing when the victim is an unwilling participant or not sexually talented. But Monica, according to Nate and Dana you were a very willing participant and you couldn't get enough hot young pussy and big black cock! I think when you see the video you'll be impressed with your performance. I know me and the rest of my team certainly were!\" \n\nHe continued, \"You should be quite proud of yourself Ms. O'Neil, you are 10 years older than the two of them and they are trained sex escorts and you kept up all night long. We had all the video we needed by 3:00 a.m., but Nate and Dana had so much fun fucking you that they did the last 2 hours off the clock!\" \n\nRoger made me sit on the couch between Nate and Dana as he started the video from the beginning. He said to me, \"You didn't know it, but we had a guy at the strip club with a video camera filming your experience there.\" \n\nHe told me he would explain why we did this after I watched the video. Roger said, \"I'll tell you what we expect from you when it's over Ms. O'Neil.\" \n\nMonica went on telling the story to Jenna and Gina as she learned herself what happened the night before...Not long after I lost recollection sitting at the stage of the strip club. Dana came over and performed several lap dances on me to the cheers of the loud group of guys near the stage. After watching me get worked up as the hot redhead wiggled her ass in my lap, the loud guys cheered and chanted for me to \"take it off...take it off!\" \n\nIn between acts with the spotlight shining on me and their continued encouragement, I did a sexy striptease. I removed my shirt and fondled my tits through my bra. They kept chanting, \"take it off...take it off!\" Motivated by the moment and obviously very out of my head, I unclasped my bra and held only the cups over my boobs. The cheers got louder and I eventually let it fall to the ground. That was followed by louder cheers from all the guys in the club. \n\nThe DJ announced that the club had an amateur stripper on hand and encouraged me to go up on the stage and dance for the whole crowd. I looked over at Nate, he said, \"Go on Monica, you'll have fun!\" \n\nWithin minutes I was dancing totally naked on stage to the cheers of the entire crowd. I looked to be having a good time as I watched the video without any recollection of it. As I came off the stage, Dana handed me my clothes to the dismay of a whole bunch of guys waiting for lap dances. She said, \"Go put your clothes back on in the staging room, Nate and I have somewhere we want to take you!\" \n\nMonica looked at Jenna and Gina again, \"Dana relayed the next portion of the story to me as we left the club.\" \n\nAs we walked out of the club to Dana's car in the parking lot, she handed Nate the keys and said, \"You drive, I have something I want to get off my chest with Monica. She opened the back door and I climbed in and she jumped in behind me and within seconds was sticking her tongue in my mouth and rubbing my breasts. \n\nWe made out for several minutes as she lifted off my top and played with my tits. She pulled away and said, here is what I wanted to get off my chest...she pulled her top off and removed her bra and told me to suck her gorgeous breasts. \n\nShe said I sucked on her boobs and lowered my hand and rubbed her pussy through her skirt. She suggested, \"Let's take this somewhere more comfortable, do you have a hotel room?\" \n\nApparently I was so horny that I told them that I had a room at the Cosmopolitan. \n\nAs it turns out they actually already knew that. Nate had taken my room key while I was on the stage and the AV guy had left the strip club early and had already set up his equipment stealthily in my room. He recorded everything that transpired after we arrived. \n\nMost of the rest of the night I witnessed on the video...when we got into my room Dana pulled me onto the bed and started taking off my clothes. Within minutes we were both totally naked. She lauded my body and said to me, \"We have to get you nice and wet so you'll be able to handle Nate's big cock. But before we do that, Nate doesn't like any hair on the pussies he fucks, so we need to shave your hairy bush.\" She took me in the bathroom and soaped and shaved my pussy bald and smooth. She brought me back into the room. Nate told me he would be happy to fuck me now! \n\nDana threw me down on the bed and climbed on top of me in a sixty-nine; she soon had me moaning and telling her how much I loved her tongue. Nate then took off his clothes and approached the edge of the bed. The young black guy pulled down his boxers and the video captured my look of amazement at the size of his wonderful cock. \n\nAs I now watched it the following day without any recollection of the night before, I couldn't believe that I had been able to take the huge thing in my pussy and more surprisingly, in my ass. \n\nHe held it out and Dana and I took turns sucking and licking it. The audio mic picked up my comment, \"Oh my God, it is SO BIG! It's twice the size of my husband's!\" \n\nOn the video Nate responded, \"It's not even hard yet, it'll get bigger when you lick my balls.\" I sluttishly sucked his balls into my mouth one at a time and let them pop in and out to his delight. \n\nThe video was edited to show only a small percentage of the action and still lasted well over an hour. It showed me getting fucked by Nate's big black dick in countless positions. I squealed and screamed as he also fucked me in the ass two times. Dana and I ate each other's pussies and sucked each other's tits while Nate fucked us. I couldn't believe they were both only 18-years-old as they performed like porn stars who, based on the video, fucked me like no other night of my life! The video showed them bringing me to climax well over a dozen times. \n\nNate then chimed-in with his deep voice from the couch, \"You sure enjoyed sucking my cock and licking my big balls; I blew my wad in your mouth three times. I'm sure when you woke up today you had my baby juice on your face. When I blew my last load in your mouth at 5:00 a.m., you had just climaxed again from Dana's tongue on your clit.\" \n\nThe asshole continued, \"As Dana and I walked out of your room, you were passed out on the bed with my seed dribbling out the side of your mouth and your own juice leaking from your pussy onto the sheets! I said to Dana, \"Now there's a woman who's been properly fucked!\" She agreed and we both laughed.\" \n\nNate went on, \"I'm guessing your pussy and asshole are both really tender today. I'm not sure I've ever fucked tighter holes, especially from someone your age. Your husband must have a small dick! I know your asshole was virgin territory, but if you weren't married I'd thought your pussy was too. You actually bled some from both holes! However after last night, you should now be adequately stretched out for your next assignment!\" Nate and Dana laughed again. \n\n\"Assignment? What assignment?\" \n\nAs I watched the video I was ashamed at how many times I told Nate how much I loved his huge black dick and how much better it felt than my husband's. At one point, Nate said, \"Prove to me how much more you love my cock than your husband's little dick by taking off your wedding rings and giving them to Dana. You aren't going to get anymore of my cock until you do!\" ",
        "The video showed me hurriedly removing them from my left hand and giving them to her as I begged the black stud to fuck me again. Nate then proceeded to give me the best fuck of the night. He took me from behind and brought me to the edge of climax several times before I begged and pleaded with him to make me cum. He finally granted my wish and I exploded in a wild moaning orgasm. \n\nJenna and Gina gasped and looked over to see whether Monica was currently wearing her rings. She was. \n\nThe three of them also noticed that the porn movie on Paul's playroom screens had switched to a scene of three girlfriends entering a snowy mountain cabin for a weekend of relaxation away from their husbands. \n\nMonica went back to telling the story...At that point Roger finally stopped the video and said, \"You had quite a night Monica! While you were in the throes of one of your countless orgasms, we took your phone from your purse and downloaded all your contacts. I have to commend you for doing such a good job of identifying how you know everyone in your contact list. I guess it's your nature as a school teacher to be organized, but it sure made our job much easier.\" \n\nI looked at him confusingly. \n\n\"As we created the email with the video that you just watched attached, it made it so much easier to know who to send it to. Your husband, in-laws, parents, brothers and sisters, nieces and nephews, your husband's co-workers, your pastor, the principal and faculty at your school, and many of your friends are going to get quite a shock when it lands in their inbox this morning!\" Roger stated-matter-of-factly. \n\n\"You sent that out to all of those people...my husband...oh my God!\" I screamed. \n\n\"We haven't sent it yet, but it is queued up and ready to go at my command!\" \n\n\"Oh thank God...please don't send it out, I beg you. I'll do anything. Why are you doing this to me?\" I pleaded. \n\nHe told me that his firm represented some very influential and powerful alumni and they were hired to ensure that a certain individual commit to go to USC and play football! \n\nI asked what that had to do with me and being drugged into a night of sex and blackmail. \n\n\"Because you are this student's math teacher and it is imperative that he gets an 'A' in your class!\" He responded. \n\n\"You did all this to ensure that I give one kid an 'A' in my class? Who is it...?\" But before I could finish the sentence I knew...\"Its Hank Johnson Jr. isn't it?\" \n\nJenna gasped loudly. Monica had told them earlier that she was Hank Jr's. math teacher at LB Poly. Jenna was well aware of Hank Jr's football prowess; she'd met him back 10 years previously when he was a ball boy at UCLA practices. Her husband Ryan followed Hank's high school career very closely due to his relationship with his dad. Hank Johnson Sr. had been Ryan's quarterback coach at UCLA. \n\nRoger continued, \"On top of being a hot piece of ass Ms. O'Neil, you are a perceptive woman. You see, he is the number one quarterback recruit in the country and the people I work for want to make sure he chooses USC! He has been told by our people that if he commits to SC, he will be guaranteed the grades he needs for admission and 'other perks'! Your fellow teachers have been 'encouraged financially' to go along with the plan and have all accepted our 'proposal'.\" \n\n\"So you want me to guarantee him an 'A' in my class or you will send that email to my family, friends, and employer?\" I asked incredulously. \n\n\"Actually Ms. O'Neil, there is a bit more to it than that, we have pulled strings to guarantee that you will be his math teacher for summer school and the fall semester as well. You will be expected to provide him with 'A' grades in all of those classes.\" \n\n\"Is that what you meant before when you said 'other perks'? Why didn't you just offer me the financial package?\" I asked. \n\n\"In doing our research on you Ms. O'Neil, we learned that you contain a certain moral makeup that your fellow teachers do not. We were concerned that you might not accept the 'financial package', but more importantly Monica you possess a certain 'skill set' that the other teachers do not that will help us accomplish the 'other perks' component of our agreement with Mr. Johnson's representatives.\" \n\nRoger went on, \"You see it is not by accident that you landed the job teaching 11th and 12th grade math at Long Beach Poly. We did an exhaustive search looking for the right candidate to take on the job. When we heard about you, we felt like our prayers had been answered.\" \n\n\"Huh?\" \n\n\"You see Ms. O'Neil you were young, gorgeous, possessed a smoking body, credentialed, and actually looking for a job! Monica, the 'other perks' you will be expected to provide will be sexual in nature. You will become Mr. Johnson's personal 'tutor'. However Ms. O'Neil, since his grades will already be guaranteed, your tutoring sessions will actually be sex sessions. You will be his personal fuck toy until the end of the fall semester in December when athletes declare where they will go to school the following year!\" \n\nJenna and Gina both stared at Monica in amazement at the lengths to which these people would go to accomplish their objective. Monica took a drink from her champagne while the other two girls looked up at the porn film playing in Paul's playroom. The three girlfriends had changed into bikinis and were going for a dip in the hot tub on the snow covered deck of their cabin. \n\nMonica went back to telling her story...You can imagine I was devastated and humiliated. I was being blackmailed to whore myself to one of my students... \n\nRoger then told me that I had been the perfect candidate for the job, but there was one more box that needed to be checked before validating my qualifications...was I a good fuck? \n\nMy performance the previous night answered that question with flying colors! So much so, that they had sent the video to the Johnson representatives and they shared it with Hank Jr. that morning. It was his 18th birthday...what a gift it was for him to see his teacher having wild three-way sex. \n\n\"You sent him that video, oh my God!\" I cried to Roger. \n\n\"Upon seeing you getting thoroughly fucked by a black dude and learning that you would be his sex toy for the next 8 months he said enthusiastically, \"I don't know how any school is going to top USC's offer. When do I get to fuck her the first time?\" \n\n\"...Oh to be an 18-year-old stud athlete Ms. O'Neil. Hank Jr. stayed back a year in school and it is paying huge dividends as everyone is vying for his commitment. The world is his oyster and you will be his pearl Monica!\" Roger laughed. \"It seems kind of unfair that we cater to someone his age. I can't imagine there is much more a confident kid his age would want than to have complete sexual control over one of his gorgeous teachers!\" \n\nI sat with my mouth agape as he went on, \"That brings us to what will be required of you Ms. O'Neil. Every Thursday from 4:30 p.m. until 8:30 p.m. and every Sunday from noon until 5:00 p.m. you will report to a local hotel for 'tutoring'.\" \n\n\"We aligned these rendezvous with your calendar; as you might have already noticed those are both days and times when your husband's team has its matches. You will tell him you decided to take the tutoring job to earn some extra cash while he was working anyway. When your husband's team is away on road matches, Hank will be notified and if he desires to enjoy your sweet 'offerings' longer, he will be awarded that choice without question. If your husband's team is on an overnight trip, Mr. Johnson will have you for his pleasure all night long. The room will be pre-paid and you will be provided with a master key that will give you access anytime. Mr. Johnson will be given $100 to pay you for your 'services' each session.\" \n\nRoger said, \"You will be prompt and enthusiastic at every single rendezvous. You will never tell him 'no' regardless of what he makes you do! He will make all the rules and you will be there solely for his pleasure. Whatever other demands he makes including, lingerie, sex toys, sex aids, bondage, lubricants, etc. will all be provided and you will be expected to embrace them enthusiastically. Last night Nate slipped you a birth control pill, but if you aren't already on the pill, I would suggest getting a prescription right away. Mr. Johnson told us through his people that \"he ain't wearing no condoms and plans to plant his seed in all of Ms. O'Neil's holes!\" \n\nI looked at him incredulously. \n\n\"He has been carefully instructed to not leave any marks or bites on your body as to not alert your husband to your activities. It would be a shame if your husband were to find out about what you have been up to by witnessing a black baby exit your body in 9 months, so get your birth control situation in order!\" Roger warned. \"We also understand Mr. Johnson was quite aroused at your enthusiasm in fucking Ms. McCoy here. He has requested that we provide additional female participation in some of your upcoming sex sessions. He has identified a particular blonde cheerleader from your school who we understand is, along with Mr. Johnson, a student of yours in your 5th period class. Her name is Jenny Welch. My people tell me she is quite popular and very attractive.\" \n\nMy mouth dropped as Roger spoke. \n\n\"We have 'encouraged' her to participate whenever Mr. Johnson requests her presence.\" \n\nWhen I got over my shock I asked how they were going to accomplish that. \n\n\"It seems we located a video of her and one of her teammates 'experimenting' at cheerleading camp last summer. The video shows her in the throes of climax with her cheer uniform still on and her girlfriend's head under her skirt. When threatened with exposure of the video to her strict parents, boyfriend, and cheer coach, which she knew would have resulted in dismissal from the team and non-participation in graduation ceremonies, Miss Welch agreed to do anything to keep it from being made public.\"  \n\nI stared at him in disbelief. \n\n\"She doesn't know it yet, but her 'anything' will be to be an active participant in some of your sexual rendezvous with Mr. Johnson Jr. And while pretty Jenny is graduating in a couple of months, she is attending college locally so she will remain available to Mr. Johnson until her 'agreement' is fulfilled next December. We'll capture some video of her engaging in kinky sex with you and Mr. Johnson soon and ensure her enthusiastic participation until the end of the calendar year.\" \n\nI thought to myself that these people were bastards. Jenny is a bubbly, beautiful girl who is wildly popular and captain of the cheer team. She and her sweet boyfriend, Luke Snyder, had just been recently crowned king and queen of their class at the Senior Prom. The two of them turned 18 in the spring and have been dating since their sophomore year. They are both attending UCLA together in the fall. I had even heard talk about a possible engagement at graduation. \n\n\"Just think Ms. O'Neil, as the adult in the room, you'll be getting a chance to 'teach' two of your students some valuable life lessons for the next several months!\" Roger said jokingly. \"That said, I've been told that young Mr. Johnson Jr. is quite well endowed, so I suspect he'll be 'teaching' you and Miss Welch a thing or two just as young Nate did last night!\" Roger finished with a laugh. \n\nI looked over at Nate and he smiled and grabbed his crotch. \n\n\"Do we have a deal Ms. O'Neil?\" Roger asked. \n\nI was crying as I said to him, \"I don't see that I have much of a choice...\" \n\n\"Great, I will let the Johnson group know. You will receive rendezvous instructions before the end of the school day on Thursday. Dana, can you please retrieve Ms. O'Neil's rings.\" \n\nHe then looked me in the eye very seriously and said, \"Monica, you better fulfill this assignment with absolute perfection or your life will be a living hell, do you understand me?\" \n\nI told him I understood completely. \n\nThey flew me back to LAX on their private jet. I got back home about 5:30 p.m. on Sunday and told my husband that our flight had been delayed. He was so happy to see me and said he wanted to hear all about the trip. I told him it was fun and that we mostly drank and danced. \n\nHe was really horny and suggested we go to bed early and have some fun. I told him \"yes\" but that I hadn't slept much and was pretty tired. I then lied and told him that all the girls had made a pact to shave their pussies in honor of the bride's husband's request that she be shorn for their wedding night. We had sex that night and he loved eating my shaved pussy. I did my best to fake my way through it, but my pussy was very sore and stretched from my long night with Nate. \n\nThe following day between 2nd and 3rd periods, Hank Johnson Jr. came into my class while no one else was around. He locked the door behind him as he entered the room. He looked me up and down and smiled. He said, \"It sounds like we are going to get to know each other much better Ms. O'Neil. I'm going to call you slut from now on!\" \n\nIt was humiliating to have one of my students talk to me like that. \n\n\"Based on what I saw on that video, you are quite the slut for black cock; I can assure you Monica, you won't be disappointed this Thursday! He quickly unbuttoned his pants and reached inside his boxers and pulled out his huge limp cock. My jaw dropped when I saw it hanging in its flaccid state. He laughed and said, \"I'm sure you'd like to suck it right now, but you are going to have to wait till Thursday to enjoy it in its rigid glory slut!\" \n\nI stared at it. \n\n\"I'm going to arrive at 4:30 p.m. sharp. When I walk into the room, I want you naked except for red high heels, thigh-high white stockings, those sexy red librarian glasses you wear and bright red lipstick. Have your hair pulled up. Be down on all fours on the bed with your hungry ass raised up and facing the door. You will address me as Black Master and you'll be wiggling that tight little butt as you look over your shoulder at me! Is that clear slut?\" He said authoritatively. \n\nI nodded as I stared at his big cock and spoke absently, \"...yes Black Master.\" \n\nHe got a big smile on his face and held his dick in his hand before shoving it back in his pants. He walked up close to me and said confidently, \"I'd tell you that you now know what to look forward to on Thursday, but you haven't seen it hard yet. You have that to fantasize about until then!\" He turned and walked out the door. \n\nI was shaking as he departed my classroom. \n\nWhen I got home that night I told my husband about my decision to take on the tutoring job for Hank Johnson Jr. He was very happy to learn that I would be bringing home an extra $800 per month. \n\nMy husband who is an avid booster and active alumni at USC said, \"I just saw an article on that kid in the LA Times yesterday that compared him to Cam Newton. They say he runs like a deer and has a gun for an arm. His dad coaches quarterbacks in the pros and word is the kid's got it all. The article showed a picture of him without his shirt; he is built like a stud for 18. He's a good looking kid also. He sure would look good in a Trojan uniform. Some guys just have all the luck...he's probably hung like a horse too!\" He said with a laugh. \n\nI thought to myself, \"You have no idea honey...he's going to be fucking your wife with that Trojan Horse cock come Thursday...\" But the topic was obviously making me very uncomfortable, so I said, \"Can we stop talking about him like this, he is after all one of my students.\" \n\nMy husband wouldn't let it go, \"They say every big school in the country is trying to recruit him. I hope my fellow wealthy alumni are doing everything they can to get that kid to commit to becoming a Trojan! They should give him anything he wants!\" \n\n\"Oh don't worry they are.\" I thought sadly to myself. \n\nThe rest of the week in class, when he wasn't sleeping, Hank was undressing me with his eyes and making obscene gestures when the other students weren't looking. Several times I had to stop and regain my composure as he wiggled his long tongue in a blur like he was performing oral sex. Surprisingly however, I found my panties getting wet each time he did it. \n\nHe came up to me after class on Wednesday and said, \"Did you notice how good Jenny Welch's big tits looked in that sweater today Ms. O'Neil? I can't wait to watch you suck those things! Hey by the way, I changed my mind, make the stockings red, not white, tomorrow night. And also make sure you wear a low cut top to class tomorrow with a push-up bra and a short skirt, okay slut? I want all the other guys in class to be dreaming about what my cock is actually going to be enjoying!\" \n\n\"But Hank I have a reputation and respect to uphold from my fellow teachers and the students?\" I pleaded. \n\n\"Dress like a slut or I'll call Roger! And call me by my proper name bitch!\" \n\nAfter taking a deep breath I replied defeatedly, \"Yes Black Master.\" \n\nAs my husband left for work on Thursday morning, I reminded him that I would be tutoring that night and would probably be pretty tired when I got home. He said he and the athletic director were taking his team to the Dodger game and wouldn't be home until after 11:00 p.m. He told me not to wait up, which I figured was a good idea considering the way I was likely to be feeling. \n\n\"Teach that kid something honey...be as nice as you can and tell him your husband and his fellow alumni are rooting for him to dominate as a Trojan on Saturdays!\" \n\n\"I'm not sure about Saturdays, but I have a feeling that Trojan is going to teach your honey something on Sundays (and Thursdays).\" \n\nAfter he left I dressed in the clothes that Hank requested. While I was very nervous for what the day would bring, I was disappointed in myself for also being slightly aroused. As I squeezed my tits into the push up bra, I found my nipples were already hard in anticipation of what was to come. \n\nAt school, I was a nervous wreck for the first couple of periods. The boys in class were all staring at my tits and ass as I attempted to conduct the lessons. Mr. Abbott our principal stopped by between periods and stared at my cleavage as I sat at my desk talking to him about an upcoming assembly. \n\nFinally, when 5th period rolled around, Hank Johnson, Jr. strolled into my class and smiled at me before grabbing his crotch and mouthing the words \"THREE HOURS TILL BLACK NIRVANA!\" When class ended, he made eye contact with me and licked his lips before walking out the door. \n\nTen minutes later an envelope arrived that contained only a hotel room key and a post-it note with Renaissance Hotel Room 2201 written on it. \n\nOn the Uber ride to the hotel my cell phone rang. It was Roger, the man I'd met in Vegas the previous weekend. \"Monica, this is Roger. I'm sure you are on your way to the hotel. You remember the warning I gave you as we concluded our conversation last Sunday, don't you?\" \n\n\"Yes Roger I remember, you told me that I had to do this assignment very well or my life would be a living hell.\" \n\n\"Glad you recall what I told you. But do not forget for one second that your sole purpose is to please Mr. Johnson in ways that he could never imagine. You suck his cock, you lick his balls, you swallow his cum, you lick his asshole, you let him fuck you in the ass and you beg for more. If he tells you to drink, or smoke, or spit or swallow...you do as he says. If he sends you to the market down the street naked...you go without question! Do you understand what I am telling you?\" \n\n\"Yes I understand Roger; I will do everything that is expected of me enthusiastically.\" I responded. \n\n\"You better, that email is queued up in my Outlook and will go out in moment if I hear anything different,\" was the last thing I heard before the phone went silent. ",
        "Jenna and Gina were listening intently and guiltily fantasizing about what would transpire at the hotel. Jenna took another drink from her champagne and casually looked in Gina's direction. She subtly glanced at the beautiful blonde's big tits and gorgeous face. Gina's nipples were hard from the excitement of Monica's story. Gina noticed her stare and returned a gaze at Jenna's beautiful body in her sexy lingerie. She noticed a damp spot on Jenna's panties. \n\nThe three girls on the porn video had now removed their bikinis and were making out as they took turns sucking and kissing each other's breasts in the hot tub. One of them had beautiful D-cup tits and the other two were paying most of the attention to her. \n\nMonica took a drink from her champagne and went on with the story...I arrived at the hotel at 4:00 p.m. Room 2201 was the Penthouse Suite. Rose petals were scattered on the floor and bedspread. The butterflies in my stomach felt like Pterodactyls as I set my bag down and walked around checking out the spacious room. I could see the Pacific Ocean and the Queen Mary in the harbor from the big picture windows that provided a 180 degree view to the West. I walked out on to the balcony and felt the cool ocean breeze and warm glow from the sun on my skin. \n\nI walked back into the room and noticed a couple of trays on the large coffee table in front of the 82\" big screen television. One tray contained two shots of tequila and two squares of dark chocolate and a note that read, \"Consume these before your Black Master arrives!\" \n\nI was actually happy to do the shots as I was nervous as hell and they helped calm me down. I lifted one of the dark chocolate squares to my nose and could smell the unmistakable scent of marijuana. I had not smoked pot in years and had never had edibles. I had heard from friends that the edibles could get you really fucked up if you weren't careful about the dosages. I didn't see that I had a choice and I wasn't about to fail my first test so I proceeded to eat them both. \n\nThe other tray contained lubricants, massage oils, edible motion lotions, etc. I was happy to see those there as my pussy and butt had only stopped hurting on Wednesday from Nate and after seeing Hank's big dick, I knew I was going to need plenty of lubrication. \n\nThe wet bar was stocked with more booze than two people could drink in a month and two bottles of champagne were chilling on ice. There was a post-it note on the big screen that said to turn on the TV to channel 199 and have it playing when your Black Master arrives. \n\nI checked my watch and it showed 4:10 p.m. The tequila was already kicking in and I was feeling much more relaxed. I grabbed my bag and went into the bathroom. The large bathroom contained a vanity with two sinks, a walk-in shower, and a large Jacuzzi tub. \n\nI put my hair up and applied my make-up and the red lipstick that Hank had requested. I took off all my clothes and put them in my bag. I'm not sure why, but I sprayed perfume on my tits and pussy mound. I pulled the red tights and high heels from my bag and slipped them on. Lastly, I reached into my purse and put on my librarian glasses. I looked in the full length mirror and had to admit, I looked pretty fucking hot. All I could think of was that I looked like bait for a hungry shark. \n\nThe pot and tequila were kicking in and I was beginning to loosen up a little. \n\nI turned on the TV to channel 199 and to no surprise a porn movie came on. A young blonde housewife was sucking on the huge cock of her black swimming pool cleaner. I climbed up onto the bed and got into the position that Hank had requested with my ass in the air and facing the door. I looked over and the clock read 4:25 p.m. \n\nI watched the pool cleaner shove his cock further into the blonde housewife's throat. I couldn't believe she could take his big dick so deep. I reached between my legs and ran my middle finger through my pussy slit. I was soaking wet! The pool cleaner grunted and pulled his cock from her mouth and blasted his load all over the young wife's pretty face. \n\nSuddenly the door opened and Hank Johnson Jr. entered the spacious room with a huge smile on his face. \"What do we have here?\" He bellowed. \"It's not every day you walk into your hotel room and a whore is waiting naked for you on your bed watching a black bro paint a blonde's face with his jis!\" \n\nHe later told me that the scene in the room was exactly as he had pictured, but his married math teacher (me) was even hotter than he had imagined. My tight little ass and protruding pussy lips looked like a target as I wiggled my butt in his direction. \n\nHe circled the bed, checking out my body from every angle. \"Kneel up on your knees and rub those big titties and play with your nipples for me slut.\" He commanded. \n\nI did as I was told and he whistled out loud and said, \"Monica I suspected you had some nice tits covered up under all those conservative shirts you wear, but I had no idea they were so nice and round with big nipples. I can't wait to lick and taste those baby's! You'd like that wouldn't you?\" \n\n\"Yes Black Master.\" \n\n\"Yes what slut?\" \n\n\"I'd like for you to lick and suck my breasts Black Master.\" I responded quietly. \n\nI couldn't believe I was having this conversation with one of my students. For the past several months in class, I had been the one commanding respect and setting expectations. The situation was now completely reversed and now this 18-year-old man-child was in charge and I was expected to do exactly what I was told! \n\n\"Oh those nice tits will get plenty of licking and sucking, but first I want to check out that tight little ass of yours! Get back down on all fours and crawl over here to me!\" \n\nI crawled up to him at the edge of the bed. \n\n\"Move around and bring that sweet little ass here in front of me...Oooh, now that's the ass I've been thinking about since last Sunday! Put your head down and keep that tight butt raised! Fuckin A...you got yourself some big pouty pussy lips! And look...I can see beads of wetness on em...you are fucking horny for some big black cock right now aren't you Ms. O'Neil?\" \n\n\"Yes Black Master, I am turned-on right now!\" \n\n\"Horny right now for what?\" \n\n\"Your big cock Black Master!\" \n\n\"I bet you are. Trust me, you'll get more of it than you can imagine, but right now, put your fingers back between your legs and play with your married pussy!\" He commanded. \n\nI brought my right hand back and slid my middle finger down my wet pussy slit. He got down on his knees so he could watch me up close. I was very wet and he could see my juices flow across my now soaked fingers. He moved right in between my legs and took a big sniff, \"Wow, that wet married pussy sure smells good!\" \n\nHe hadn't even touched me yet and I couldn't believe how wet I was. The chocolate pot treats were kicking in and I was feeling more relaxed, but still nervous. \n\nI kept playing with my pussy as he stood up and leaned over my ass. Suddenly, I felt a large saliva ball splatter on my butthole. I flinched and an audible gasp came out of my mouth. He watched as his spit trickled down my ass and across my puffy pussy lips. He did it two more times. As I rubbed my clit and felt the wetness from his spit on my asshole, I was starting to get very aroused. That all changed quickly... \n\nSuddenly there was a very hard slap on my ass...WHACK! \"Monica, you have several months of payback punishment coming your way!\" He shouted. \n\n\"What do you mean Hank?\" \n\n\"What did you just call me whore?\" He screamed again. \n\n\"I mean Black Master...I'm sorr...WHACK! He spanked me hard again. \n\n\"Don't ever address me without my Master title, do you understand?\" \n\n\"Yes, it was an acciden...\" WHACK! I screamed in pain. \n\n\"How many times did you send me to detention this semester?\" \n\nI didn't know, but I knew it was more than once... \n\n\"Three times you fucking bitch!\" He screamed. \n\nWHACK...WHACK...WHACK...He spanked me three more times very hard for having done so. I was now crying out loud but recalling my conversation with Roger, I told Hank I had made a big mistake in sending him to detention and I deserved whatever he wanted to do to me. \n\n\"Do you remember making fun of me in front of the class when I didn't know what 'PI' was? Well I remember, and now I'm going to take it out on your 'Pie' bitch...\" WHACK! \n\n\"I'm sorry for all those mistakes I made Black Master...please let me make it up to you!\" I cried. \n\n\"Oh, now you want to make it up to me...you weren't so relenting when I was sitting in detention!\" Hank scolded me. \"How are you going to make it up to me?\" \n\n\"How about if I suck your cock?\" I pleaded. \n\n\"Oh now the truth comes out...you can't wait to get yourself another taste of nigger dick, so you conveniently use that as an excuse to get out of your punishment...but you're lucky slut, I am in a forgiving mood, so I'll give you your wish!\" He got up and walked over to one of the couches in front of the big screen and sat down. \n\n\"Crawl on your hands and knees over here and come get your prize!\" He had a big smile on his face as he watched me crawl across the carpet on all fours. \n\n\"Since you look like a dog Ms. O'Neil, go ahead and bark like one too!\" He laughed. \n\nI swallowed my pride and barked several times for his pleasure. He laughed and told me to put my head in his lap and \"lick around till you find your bone doggy\". It didn't take long as I quickly located something that felt like a salami in his shorts. He stood up and removed his shirt. At 6'-4 and 215 lbs, his thin muscular upper body was definitely that of an athlete. His washboard abs were very impressive. I sat on my knees admiring his body as he looked down at me with a hungry look on his handsome face. \n\nHe told me to lick my lips and get ready for my special treat. I did so instinctively as my pulse increased in anticipation. \n\nHe reached down, unbuttoned his pants, and let them fall to the floor. My eyes got big as I saw the hard outline of his cock in his mid-length stretch briefs. Aside from the previous weekend, which I had no recollection of, I'd never had sex with a man with a truly large cock and I found myself shaking with nervousness. He pulled my head forward and I licked along the huge shaft through his underwear. \n\nHe laughed, \"I know you can't help yourself Ms. O'Neil, but I assure you it tastes much better without the briefs...pull them down and taste for yourself!\" \n\nI moved like I was in a trance as I slowly reached up and grasped the elastic band with both hands and slowly pulled them down to his knees. As I did so, his big black cock sprang forward and hit me in the face. Having seen it limp earlier in the week, I assumed I knew what to expect, but I was completely unprepared now that it was rock hard and aimed between my eyes. I stared down the length of it like a loaded weapon; it had to be 10 inches long and as thick as a big cucumber. Hank's cock was as black as ebony and had huge veins running the length. The head looked like an evil black door knob. I was reminded of the joke my husband made earlier in the week about Hank likely being hung like a horse...the only thought that resonated in my mind at that moment was CLYDESDALE. \n\n\"Oh my God,\" escaped my lips as it hung in the air in front of my face...\"Oh my God...\" \n\nHank got a big smile on his face as he stood over me and voiced, \"Yes I will be your Sex God teach and this stick is gonna be your sexual savior!\" He lifted it up and said, \"...And these big balls right here are gonna fill you up with more Holy black baby cream than that little married pussy has ever dreamed of!\" \n\nAs I remained frozen he brought his dick forward and rubbed it around my face. The scent was intoxicatingly masculine; I knew from that moment that I was his to do anything he pleased. My black student rubbed the big head on my lips first, then proceeded to smear my red lipstick on my cheeks, nose, and forehead. He pushed it under my glasses, dislodged them and then proceeded to rub it around my eye sockets. The head felt like a huge soft rubber mushroom as he pressed it around my face. \n\n\"Stick out your tongue!\" He commanded. I stuck it out and he slapped it playfully with his dick, \"Lick right under the head.\" \n\nAs I extended my tongue and licked the underside of his mushroom head, he began to tease me by moving it around and laughing as my tongue chased the big black moving target. \n\n\"It looks like that black snake moves a little fast for you Monica, here try these, they don't move too fast, except I suspect when they're bouncing off your ass. He lifted his cock and brought his balls to my mouth. \"Lick and suck on them for a little while.\" With my tongue already extended he placed his scrotum on it. I licked one of his huge balls and swirled my tongue around on it, \"Lick the other one now!\" \n\nHe slowly stroked his dick as I pleasured his testicles. \n\nHis ball sack was hairless and his balls were too big for me to take completely in my mouth. I sucked on them individually and let them pop in and out. My husband loved it when I sucked on his much smaller nuts, but I always found the hair to be a turnoff. Surprisingly, I found myself wanting to take Hank's smooth balls in my mouth and suck on them. \"Yeah, Ms. O'Neil now you're getting the hang of it. You like the way those hot black nuts taste don't you slut?\" \n\n\"Yes Black Master, I like how big and smooth they are.\" I admitted honestly between licks. \n\n\"I haven't blown a nut since I found out on Sunday that you'd be sucking my cock tonight. If you think the outside of my balls taste good, just wait till you taste what's inside of them. I made sure to save my first big load for your hungry mouth! What do you think about that, teach?\" \n\nThat admission made me very nervous, but I remembered what Roger told me, so I responded, \"I can't wait for you to shoot it into my mouth Black Master!\" I said as I slobbered on the ebony twins. \n\n\"Wow Monica I never thought you would be such a horny black seed lover. I'll tell you what, I'll give you what you want, but I'm kind of thirsty at the moment. Go over and get me a beer out of the fridge and then come back here and I'll teach you how I want my dick sucked!\" \n\n\"Yes Black Master.\" I said before slowly getting up and walking sexily to the wet bar and grabbing a beer and opening it for him. As I turned to walk back to where he was, he had already sat down on the couch and was stroking his cock as he watched me approach with another big smile on his face. \n\n\"Bring me that beer and then step out in front of me and let me check out that fucking hot body of yours!\" He demanded. \n\nI did as he said and was now standing about 5 feet in front of him as he took the first drink from his beer. \n\n\"Monica, me and all the other guys in class have wanted to fuck you since the first time you walked into our room. We made bets if you were a horny bitch or a prude. I have to admit that I bet you were a cock tease, but I can see now that I was wrong and you are indeed hungry for some black dick. You won't have to wait long to get what you want, but you need to show me how bad you want it first!\" \n\n\"Dance for me and play with yourself...start off by rubbing those nice titties and nipples.\" \n\nThe porn movie soundtrack made for good stripper music, but I danced awkwardly in the 5 inch heels. I had always been an athlete and not so much a dancer and I definitely wasn't used to the heels...especially after the 2 shots and the pot. \n\n\"I sure like the way you look in those red tights and heels. And those sweet tits and sexy ass are getting it done for your Black Master. But white girl, I sure hope you fuck with more rhythm than you dance.\" \n\nI played with my boobs and tweaked my nipples for him. I danced more closely and held my tits together near his smiling face. \"Wow those are some nice titties; I can't wait to spray some black baby juice all over them! Now turn around and wiggle that hot little ass in my face!\" \n\nI slowly turned and wiggled my butt in front of him. He reached out and softly rubbed my ass cheeks with his big hands. Hank pulled me closer and massaged them with both hands before he pulled me against his face and stuck his tongue in my butt. A slight moan escaped from my mouth as he licked my sensitive asshole with his long tongue. I hated that it felt so good. \n\n\"You have a hot little ass Monica, you sure liked it when my black brother filled it with his seed in Vegas, after I break in your tight married pussy, I'll make my own deposit! But first things first, turn around and get down on your knees.\" \n\nI turned and knelt down in front of him as he sat with his legs spread on the couch. His semi-hard dick lay on his muscular stomach. The huge mushroom head rested about 2 inches above his bellybutton and his smooth balls rested on the leather couch cushions. I was nervous as I stared at it. Suddenly, it twitched and rose up and I gasped and nearly jumped. He laughed out loud and told me not to be scared as although it got angry sometimes, it wouldn't bite. \n\nHank was leaning back looking at me as he said, \"It's time for you to learn the art of sucking my cock! I couldn't believe how confident and commanding he was. \"Without using your hands, start at my balls and slowly lick all the way up my shaft to the underside of the head.\" \n\nI lowered my head and did exactly as I was told. His dick was so hot; I thought it was going to burn my tongue. \"Do it again over and over until I tell you to stop...slobber all over it!\" \n\nHe sat there drinking his beer as he watched me lick his huge dick like a fudgesicle for the next several minutes. He poured some beer on it and told me to lick it off. \n\nAfter 15 minutes, he urged, \"Go get me another beer and come back here and get back on your knees. Do it fast so I can give you your next set of dick sucking instructions!\" \n\nI got up quickly and made my way to the refrigerator as fast as the heels would allow. He watched me like a hungry animal as I came back quickly, handed him his beer and got back down on my knees. \n\n\"Spit on it!\" He commanded. I filled my mouth with saliva and spit on the shaft. \"I see that you got your wedding rings back from the redheaded rug-muncher, use that hand to stroke my shaft as you lick and suck the head!\" \n\nMy hand felt small as I stroked the thick shaft. I couldn't even get my fingers all the way around it. His hot dick pulsated as I slowly jacked him off and a large drop of pre-cum formed at the tip. \n\n\"Lick the tip with your tongue teach and tell me how much you like the taste of my seed,\" he said as he ran his long fingers through my hair. \n\nI extended my tongue and fluttered it across the tip of his cock. I licked around the entire head and smeared his silky cream with my tongue. \n\n\"Black Master, your hot cum tastes good!\" I complemented between wet licks. \n\n\"I knew you would like it...but that's just an appetizer; wait till you get the real thing. My balls are stirring up a nice batch for you right now...you're going to get to suck it all out!\" \n\nI opened my mouth as wide as I could and took his head inside. I liked giving head to my husband, but his cock was not nearly this big and I found it hard to breathe as Hank's dick filled my mouth completely. \n\nHe told me to breathe through my nose, \"That's it, suck that big head and imagine what it's going to feel like penetrating your married pussy,\" he bragged cockily. \"Tell me how much better it tastes than your husband's little dick!\" \n\nI hesitated before I responded. \n\nHe pulled it out of my mouth and slapped it against my face and said, \"Answer the question and say it with emotion and detail just like you tell us to do in class, bitch!\" \n\nHe was using my own instruction techniques on me. ",
        "\"Black Master, I love the way your big cock tastes in my mouth. It is so much hotter and better than my husband's!\" \n\n\"Hotter, better, and what?\" He questioned. \n\n\"And bigger Black Master...\" I said as I sucked it back into my mouth. \"...so much bigger!\" \n\nHe got a big smile on his face as he continued to rub his hands through my hair as I took him as deeply as I could. He reached down and squeezed one of my tits and said, \"Yeah baby just like that Monica, you're a pretty good cocksucker slut!\" \n\nI reached down and took his big balls in my hand and massaged them, \"Yeah take care of those balls girl; they're filled with that juice you want!\" \n\nHe reached for a nearby container of oil. He flipped the cap and generously poured it down my chest and onto my tits, \"Rub that oil around on your nice titties Monica!\" \n\nI brought my hands to my tits and seductively smeared the oil around and over them. I played with my rock hard nipples to his delight. I was getting caught up in the moment and suddenly realized I was also very stoned. \n\n\"Wrap those nice tits around my cock and slide em up and down!\" \n\nI suspected it would be this way; he was treating me like porn actress. I wrapped my boobs around his dick and slid up and down. He told me to lick the head of his cock each time it plunged near my mouth. I could tell he really liked fucking my tits. \n\n\"Faster slut...slide em on that big cock faster...yeah just like that!\" \n\nSuddenly he cried, \"Open your mouth and stick out your tongue.\" \n\nJust as I did so, cum exploded from his dick and splattered across my face. Another large spurt erupted and did the same. That one was followed by several more that splashed on my tongue, lips and chin. Semen kept pumping from his cock as he brought it up and pushed it into my unprepared mouth. \n\n\"Swallow it bitch!\" He demanded. \n\nLuckily he hadn't sprayed it all in my mouth and I was able to swallow most of the remaining 4 or 5 spurts of hot sticky cream as they spewed from his dick. Strangely, I rarely let my husband ever cum in my mouth, but like I'd seen on the video from the previous weekend with Nate, I found myself excited to swallow this black teenager's cream. \n\nAs I raised my head to look at him, he got a big smile on his face as he saw the fruits of his labor. My face was covered with his seed. \n\n\"How'd you like that Ms. O'Neil? You liked being sprayed by a real man didn't you?\" \n\nI didn't know exactly how I felt at the moment. I should have been appalled at the way he used me as a sex object, but instead I was disappointed in myself once again as I was aroused and now curious what it would actually be like to have sex with my 18-year-old bull of a student. \n\n\"Black Master I can't believe how virile you are!\" \n\n\"What the fuck does that mean?\" Hank questioned. \n\n\"It means you are very impressive sexually!\" I replied with cum covering much of my face. \n\n\"You ain't seen nothing yet Monica. Go clean up your face and get me another beer. When you get back, I'm going to eat that horny married pussy of yours!\" \n\nI made my way to the bathroom and once inside approached the large mirror. My vision was obscured as one of my eye lids had been sprayed by Hanks cream and was stuck shut. When I was able to focus through my other eye I nearly died when I saw my reflection in the mirror. Hank's thick spooge was splattered over at least half my face. My bright red lipstick trailed along my exposed skin where he had painted it around with his cockhead. \n\nI cleaned my face with a towel before touching up my makeup and reapplying my lipstick, \"How the fuck did I get myself in this situation? And more importantly, why am I looking forward to going back out in that room right now?\" Inexplicitly, I reached for my perfume and sprayed it on my breasts and pussy mound again. \n\n\"But if he's going to perform oral sex on me now, this will be my chance to gain some level of control. I'm sure his inexperienced tongue will be no match for my husband's and I will have the power position as I direct him on what to do. Once he gets a taste, I'll get the upper hand and become the teacher again.\" \n\nThat thought was fleetingly brief as I exited the bathroom and he immediately handcuffed me to the bed's headboard. \n\nHank pushed my knees apart and brought his face between them. He started off slowly and kissed around my mound and along the inside of my thighs. He softly licked the outer regions of my tender lips before lightly suckling my labia. I was trembling... \n\nI thought to myself, \"This isn't what I was expecting at all. I thought he would be a bull in a china shop and instead he was like Mozart.\" \n\nHe told me I smelled and tasted wonderful and then surprisingly asked how I wanted to be pleasured. \n\nI moaned and said, \"Keep doing what you are doing Black Master, it feels really good.\" \n\nHe brought a finger to the entrance of my hole and skillfully teased me as he continued to lick and kiss around my now dripping pussy. He was purposefully avoiding my clit as he expertly worked me into a frenzy. I started lifting my hips in a subtle attempt to get him to coddle my aching kitty. Instead he sunk his long finger into me while he continued to kiss and lick my sopping lips. I nearly came on the spot. He worked another finger in as I gasped and finally begged him to lick my clit. \"Black Master, please don't tease me anymore, I need your tongue on my clitoris!\" \n\nHe laughed and said, \"I knew you'd be begging for it slut!\" \n\nHe brought his tongue to my button and softly flicked it several times. \"Oh Black Master, that feels so good, you got it, please don't stop!\" He tenderly fluttered on and around it until I could no longer control myself. I whimpered and begged, \"Eat Me You Black Stud!\" \n\nHe had me right where he wanted me. \n\nHis tongue became a whirling dervish of sexual energy. He kissed and licked all my most sensitive places and within minutes I was begging him not to stop, \"Oh Black Master, you are so good at that...lick it!\" \n\nHe spit on my pussy and playfully slapped my clit with two of his fingers. \n\nWith my legs unbound, I spread them as wide as I could to give him unlimited access. He stuffed a couple of pillows under my butt and went to town. I'd never been eaten so good. Within minutes I was climaxing uncontrollably. \"Oh fuck Black Master, your tongue...fuh..I'm cumming again,\" I whimpered as he expertly sucked and licked my sensitive pussy. \n\nI quickly realized my husband's cunnilingus skills were amateurish compared to my 18-year-old Black Master. \n\nHank pushed my hips back until my knees were up near my boobs. He licked around my asshole and the sensitive strip between my butt and pussy. He went back to my asshole and flicked it continuously with his long talented tongue. \n\n\"Black Master lick my butt, it feels so good!\" \n\nHe brought two fingers up and buried them in my pussy as he continued to lick around my ass. Three minutes later he brought me to another toe-curling cum. \n\nAs my body continued to shake, he slid up and kissed me on the lips. He shoved his tongue in my mouth and we kissed like newlyweds, \"How do you like the taste of your ass on my tongue Monica?\" \n\n\"It's good Black Master,\" I said without hesitation. \n\n\"Just wait till you get to clean it off my cock Ms. O'Neil! You'll really like that.\" \n\n\"Where did you learn to please a woman with your tongue like that, you're only 18?\" I asked breathlessly. \n\n\"I've been having sex for a long time. Awhile back, my parents hired a hot blonde to be our nanny. She was a freshman at UC Irvine. My parents gave her 10 months of room and board and I gave her 10 inches of something else.\" Hank said proudly. \n\n\"I was already 6'-1\" at the time and she happened to walk in on me changing one day. Immediately, I could see the look on her face as she saw my package for the first time. For the next few weeks I caught her staring at my bulge on several occasions.\" \n\n\"One weekend my parents went to Palm Springs with friends. I woke up in the middle of the night to get a drink of water. As I passed my parents room I could hear a buzzing sound coming from behind the door. I opened it to see where the noise was coming from and I found my nanny Kristi, spread naked on my parent's bed with a vibrator in her pussy. My mom's panty drawer was open and I suspected the toy belonged to her.\" \n\n\"She scrambled to come up with an excuse, but what was she really going to say? I walked up and told her how things were going to be from that point forward unless she wanted me to tell my parents about it.\" \n\n\"She knew she didn't have a choice. I led her back to my room and by the following morning I was the only guy at my school with a hot blonde nanny plaything whenever I wanted it.\" \n\n\"She taught me a lot, but it wasn't long before we both knew who made the rules in our relationship.\" \n\n\"My parents were gone from 8:00 a.m. till 6:00 p.m. every day. As soon as I got home from school, Kristi would put my young twin sisters down for their nap and come straight to my bedroom. She earned every penny my parents paid her!\" \n\n\"Her boyfriend was a 21-year-old star on the Irvine water polo team. I don't know if he had a small dick or what, but she would return from dates with him and sneak into my room just about every time she went out. Kristi and her friends have been getting more than their fair share of the dark stuff since. She and her two best friends love to get together for threesomes or foursomes. I've had some good pussy eating lessons and basically an education in satisfying women in general. Since then, a lot of girls at LB Poly have been enjoying the benefits!\" \n\nJenna was amazed as she listened to Monica's story. She remembered meeting Kristi on several occasions at the Johnson house. She and Ryan had actually talked about how hot she'd looked at a pool party they'd attended the previous summer. She remembered telling Ryan, \"If she was our nanny, we'd have to get a bed made for 3!\" Now hearing she was bisexual was making Jenna even hornier. \n\nMonica continued...Hank said, \"Kristi just moved to Spain to study for the next year, so you came along at just right time Monica. Maybe I'll have a couple of her friends over to join us sometime. I'm sure they'd love to have you lick their pussies while I fuck them. Based on what I saw on the video last week Ms. O'Neil, you'd look forward to eating some more young pussy wouldn't you?\" \n\nI didn't know what to think, but I knew how I was expected to respond. \"It sounds like fun Black Master!\" \n\n\"Speaking of eating pussy, I'm going to have Jenny Welch join us next week. I can't wait to sink my cock in that prissy bitch. She's never given me the time of day in spite of me leading our team to the state finals last year. She and her cheerleader girlfriends all got to go up to the Bay Area for the game, but none of them ever thanked me for getting us there! What do you think about her Monica?\" \n\n\"She's a nice girl Black Master, I'm sure she didn't purposefully ignore you.\" \n\nHank responded, \"No, I don't give a fuck what you think about her personally, I want to know what you think about her as our future sex toy? Stroke my cock and tell me what you want to do to her when she joins us.\" \n\nI couldn't believe he was asking me to describe how I would want to have sex with one of my female students. \n\n\"What do you want us to do Black Master?\" I said hoping he would lead the conversation. \n\n\"I will tell you what I want when her wet pussy is here for us to enjoy next week, but right now I want you to tell me what you want to do with her!\" \n\nI reached out and stroked his thick soft cock. Even in its flaccid state, it was much bigger than my husband's full erection. \n\n\"Yeah...stroke that dick...that's real nice.\" \n\nI couldn't really fathom having sex with Jenny Welch, but I told him what I thought he would want to hear. \n\n\"She'll be wearing her cheerleader uniform when she comes in the door. I'll be wearing one too. You know, one of those white sweaters the USC cheerleaders wear that show off their large breasts, I'll have one of those on and it'll be hugging these,\" I said as I grabbed my boobs and held them up for him. \"My nipples will be poking through the fabric! After we get Jenny liquored up, I'm going to come up from behind her and slip the uniform off of her narrow shoulders. I'll turn her so she's facing you as I softly massage her big young tits through her bra as I kiss down her neck.\" \n\n\"I'll then unclasp her bra and hold it loosely over her D-cups and tease you before I slowly remove it. Her full breasts will then be on display for you Black Master. Again I'll softly squeeze her boobs and play with her big nipples. I'll slowly bring them to your mouth and let you suck them as I keep massaging them for you. Black Master you'll love her amazing breasts!\" \n\n\"How do you know she has such nice tits Ms. O'Neil?\" \n\n\"I've seen her in the shower in the girl's locker room. They are bigger than mine and really pretty! I have to admit that I stared at them when I saw her under the water.\" \n\n\"I like this already slut, what's next?\" Hank said excitedly. \"Keep stroking my cock Ms. O'Neil and tell me more about that blonde slut.\" \n\n\"I will get down on my knees and lift her skirt and run my tongue along her ass through her panties. I'll reach around and seductively slide my hand into her panties from the side and softly touch her sweet pussy. I'll tangle my fingers in her little hairy patch. She has a cute little dirty-blonde muff. Again, I've seen it in the shower. You'll be able to see my fingers wiggling around inside her panties.\" \n\n\"She'll be moaning and telling me how good it feels.\" \n\n\"I'll then slowly pull her panties down, making sure to tease you as I do so. Once they are down around her ankles I'll push her torso forward so her head falls into your lap. I'll tell her to open her mouth and get ready to suck the nicest cock she'll ever have in her life! I'll tell her how much better it's going to make her feel than her boyfriend's dick.\" \n\n\"Meanwhile I'll bury my tongue in her sweet little pussy from behind.\" \n\n\"Yeah Monica that's the slut I'm looking for! Stroke it baby. Tell me how you'll eat that cheerleader pussy Ms. O'Neil.\" \n\n\"You can show her how to suck your big dick while my tongue dances on her hard clit. I can't wait to taste her! After she cum's on my face, I'll slide up and I'll show her how you like your dick sucked. We'll talk dirty to you and beg for your cream!\" \n\n\"You'll spurt your big load on our wiggling tongues and Jenny and I will kiss and share your juice.\" \n\n\"Uh huh...I like that slut!\" He said as he grabbed my hair and pulled my face to his dick. \"Suck that stick!\" \n\nHe popped the big head in my mouth and I swirled my tongue around on it. \n\n\"Fuck yeah Ms. O'Neil, slobber all over that thing...now keep stroking it while you get to the fucking!\" \n\n\"I'll have her take off my clothes while she tells you how excited she is to fuck us both. After Jenny and I suck you hard again, I'll push her down on her back and pull her legs apart and give you access to her tight pussy. I'll guide your big cockhead to her slick pussy and slide it up and down until it's all gooey with her cream. I'll then lick and bite her nipples while you impale her and fuck her wet pussy with your big cock Black Master! And when you're done shooting your hot load into her wet hole, I will bury my face between her legs and lick it out!\" \n\n\"Now you're talking my language Ms. O'Neil, what else are you going to do with that horny little bitch?\" \n\n\"I'm going to spread my legs and pull her head between them and make her lick my clit while you pound her with your huge cock from behind. \n\n\"Uh huh...then what?\" He asked, clearly more engaged as his cock was now fully rock hard in my hand. \n\n\"I'll grab her hair and pull her against my pussy and cum on her face. Meanwhile she'll be orgasming all over your wonderful cock! After that we'll take turns getting fucked by you Black Master.\" I reached down and grabbed his huge balls and squeezed them as I said, \"These big balls will be spraying hot juice all over us!\" \n\n\"Yeah baby, let's get a warm up for that! Turn around and bring me that sexy ass. It's time for you to get taught how to be pleased by a real man!\" \n\nMy 18-year-old student was now treating me like a real master... \n\nJenna and Gina were now fully aroused. Monica hadn't noticed but the two of them had shifted closer together as she told her story. When she shared her fantasy about the beautiful cheerleader, Jenna had slowly reached over and touched Gina's leg. She was now rubbing her fingers on Gina's well-toned thigh. \n\nThe black men were watching and listening on TV's in the great room. The audio and video feeds were coming from the hidden cameras and mics that Paul had positioned around his playroom. Paul, Cole and Hank smoked Cuban cigars and drank Cognac as they listened to the girls telling their stories. Hank couldn't believe his son's expertise in seducing his high school teacher. He'd known the kid inherited the family dick, but was also completely unaware that he'd been banging the nanny. \n\nHank was feeling a sense of family pride, much the way Paul's chest had puffed way out as Gina had lauded his sexual prowess. \n\nSuddenly Paul said loudly, \"Bingo, there's the hand on the thigh. Who'd a thought Jenna would be the first to make a move? She's full of surprises isn't she?\" \n\n\"That a girl!\" Cole said proudly as they all watched Jenna slowly move her hand to Gina's thigh. They watched as she began to rub it more intently. Gina reached down and placed her hand on Jenna's and encouraged her to keep going. \n\n\"Who's going to be the first to lick some pussy? Bets gentleman?\" Paul called out. \n\n\"I got $100 on the teacher. It sounded like she loved the redhead's slit and she was too comfortable in suggesting what she's gonna do to that cheerleader,\" Hank said excitedly. \n\nPaul figured this was easy money. He had told Gina earlier in the day that if she wanted to be fully paid for the weekend, she would need to enthusiastically eat as much pussy tonight as possible, \"I got $100 on Gina. She's had a lot of it lately and the girl's got the bug!\" \n\n\"Boys, you are throwing away your money, Jenna's had a taste for it since college. She can't help herself; my girl won't let me down. I got $100 on my date!\" Cole remembered how Ryan had claimed that she loved it in college and she'd all but admitted to him earlier in the night that she still craved it. He'd seen here waggle her tongue on the tip of his dick like a pro. He knew she wouldn't be able to help herself when the opportunity presented itself. \n\nIt would present itself soon. \n\n\"This should help move things along.\" Paul shouted as he advanced the porn video in the playroom to the next scene where the girls had moved from the hot tub to a big white rug in front of the fireplace in the cabin. They were positioned in a sex triangle, with each of them having their head between someone else's legs. They were moaning loudly and hungrily eating each other's pussies. \n\nMonica continued with her story...I was shaking as I spun on all fours and backed my butt into Hank's crotch. He grabbed my hips and pulled me close to him; I could feel his big dick rubbing against my no sopping pussy. He slapped my lips and asshole with it before he grabbed my hair, pulled my head back and told me to beg for it. \n\nMy 11<sup>th</sup> grade student had worked me into a sexual frenzy and I was truly ready. \n\n\"Black Master, please fuck me with your huge dick! I want it so bad...\" I whimpered pathetically. \n\nHe laughed out loud and said, \"Of course you do, Ms. O'Neil! What grade do I get so far?\" \n\n\"An A+ Black Master,\" I moaned as he teased me some more. ",
        "He laughed and finally brought his big black head to the entrance of my pussy and shoved it inside. \n\nI screamed loudly before my head dropped down against the sheets. He spanked me and pushed his fat cock further into my waiting hole. \"Oh my God Black Master...oh fuck...so big\" was all I could say before my body began to shake uncontrollably and I came all over his huge cock in a moaning, whimpering orgasm. \n\n\"Wow Ms. O'Neil, I thought you'd have a little more cum control than that. I've fucked lots of Poly girls who didn't spew that quickly! I only had it in halfway.\" \n\nMy face was pressed against the sheets with my head turned to the side as I tried to catch my breath. \n\nSuddenly all my breath was forced out as he shoved it in all the way to his balls. \n\nI screamed again in surprise and ecstasy. \n\nOver the next 2 hours he fucked me in every position he could think of. I wanted so badly not to like it, but I must have climaxed a dozen times on his fantastic dick. Thank God I had filled my birth control prescription earlier in the week as his big balls pumped more hot thick semen into my pussy than my husband had in a year. \n\nObviously he was blessed with a huge cock, but the thought that kept going through my mind was how in the world is this 18-year-old so good in bed? Obviously he had a magnificent cock, but he fucked me like Don Juan. He knew exactly what do with his hands, tongue and cock to make me beg for it over and over. I also couldn't believe his staying power. His incredible dick stayed mostly hard for 2 hours straight; whenever it did start to soften he had me suck him off and lick his big nuts until he was rock hard again. \n\nAs soon as I would get him back hard, he would fuck me to another unbelievable orgasm. \n\nJenna and Gina moved closer still. Jenna's hand was now only inches from Gina's crotch as she rubbed along her thigh. Monica could clearly see what was going on with them, but she continued with her story as she liked that it was arousing the other women. She was getting horny herself and none of them were kidding themselves any longer. They'd be eating each other's pussies soon. \n\nShe continued...Hank laughed as I tried to catch my breath. \"Let's give your hole a break. I can't imagine there's much more juice in that married pussy of yours? I'm not sure anyone's ever cum on my dick so much. Go down and lick it clean.\" \n\nI licked around his softening cock. \"How does your cum taste on my cock Monica?\" \n\n\"Black Master it's all over it. It taste's really good mixed with yours.\" \n\n\"Speaking of taste I'm getting hungry. Let's take a little break. Make us some drinks while I order room service.\" \n\nAs I got up and walked on wobbly legs to the bathroom, I could feel Hanks' thick cum oozing down my legs. After relieving myself and cleaning up, I poured us a couple of vodka cocktails. I figured contributing to the delinquency of a minor was the least of my concerns at the moment. \n\nI brought the drinks back over to the bed and sat down on the edge. Hank eyed me hungrily as I did so. He took a big drink from his and said, \"Ms. O'Neil, you better get lots of sleep the next couple of nights, cuz I'm going to fuck you so much Sunday afternoon you might need to call in sick on Monday!\" \n\nI answered as I was expected to, \"Black Master you can do whatever you want to me, I'm here for your pleasure.\" \n\n\"Damn straight, come suck this thing till our food gets here!\" \n\nTwenty minutes later just as he finished exploding in and around my mouth, there was a knock on the door. He was still panting as he said, \"Go get that Monica, that's our food.\" \n\nI swallowed the last of the thick juice and looked at him incredulously. I was fully naked and his jism was still strewn on my lips and chin. \n\n\"Don't clean off my precious paste and go open the door. I'm sure these room service people see naked room guests all the time. Hurry up, I'm hungry!\" \n\nI could hear Roger's warnings about \"doing whatever he says\" in my head as I walked over to the door. It didn't matter who was on the other side, I was going to be exceptionally embarrassed when I opened the door. \n\nIt turned out worse than I could have imagined as I now stood there face to face with the hotel manager and his assistant. They both stared at me in disbelief. I was naked and Hank's thick cum was still splattered around my mouth. \n\n\"I felt like you must have felt when you arrived here tonight Jenna...\" \n\nJenna nodded before Monica continued...\"Excuse me, Mrs. Jones? I am Hotel Manager Mark Yelton and this is my assistant Paulina Petrova, we wanted to deliver your room service personally, introduce ourselves, and to thank you and your husband for choosing the Renaissance for your bi-weekly stays in our Honeymoon Suite for the next 8 months.\" \n\n\"Obviously, you appear to be busy, we'll just wheel this inside and let you get back to your um...evening.\" \n\n\"Honey, who is it?\" Hank called out from around the corner of the room. \n\nIt took me a second to register who he was talking to. When I realized it was me, I said, \"It's the Hotel Manager and his assistant Black Mast...um...honey.\" \n\n\"Don't be rude Monica, invite them in!\" \n\nI stuttered momentarily before asking them to come inside. Mr. Yelton pushed the cart into the main room and was quickly followed by Miss Petrova. \n\nWhen they turned the corner they saw Hank sitting on the bed with his back up against the headboard like he was a king overseeing his court. He had a big smile on his face and his huge limp cock was lying on his thigh while his heavy black nuts were resting on the mattress between his spread legs. \n\nI immediately noticed the contrasting looks on their faces. Mr. Yelton had a look of disgust and disapproval for Hank's lack of respect for his position as hotel manager. Miss Petrova stared in awe at Hank's impressive package. \n\n\"Excuse me Mr. Jones, but would you and your wife mind covering up while we prepare your dinner? It's a bit distracting.\" \n\n\"Fuck no captain! What my wife and I choose to wear in our own room is our business. My wife likes to be naked, as do I! Look at her man; it would be a shame to cover up that body wouldn't it?\" \n\nMr. Yelton stole a peek at me. Meanwhile, Miss Petrova's eyes never left Hank. He noticed her staring; he reached down and stroked his cock and smiled back. \n\n\"Paulina, can you please help me with this.\" Mr. Yelton asked. \n\nThe question startled her but she finally realized her boss was talking to her. She hesitated momentarily before responding to him in a Russian accent, \"Yes, sure Mr. Yelton.\" She tore her eyes from Hank and proceeded to help her boss lay out the spread. \n\nWhen they were done, Mr. Yelton asked if there was anything else we needed at this time. Hank seized the opportunity, \"Paulina, can you please go get me a beer from the refrigerator.\" \n\nMiss Petrova looked over at her boss and he nodded his approval. Mark Yelton was quite confident that Hank was not 21, but figured this was not the time or place to make a scene. Roger's company had compensated the hotel very handsomely for these bi-weekly rendezvous, and Mark didn't want to put that revenue in jeopardy. \n\nHank watched as Paulina walked over to the kitchen in her tight hotel skirt and blazer. He then gestured for me to join him on the bed. I could feel his semen beginning to ooze down my chin onto my neck. As I climbed onto the bed, Hank took my hand and brought it to his cock and mouthed the words, \"Stroke it.\" \n\nI could tell that Mark Yelton was assessing what was taking place in front of him. I was clearly several years older than Hank and my wedding ring was on display as I stroked Hank's big black dick. While he had a very strong suspicion we were not husband and wife, Mr. Yelton obviously had no idea that I was Hank's high school math teacher. \n\nHank was in his element. As an 18-year-old spoiled kid, he was outwardly thumbing his nose at the balding 50-something-year-old hotel manager who was gravelling for his business. Hank reveled in having his big black cock stroked by a naked white woman in the posh Honeymoon Suite while the hotel manager looked on jealously. The fact that I was 10 years older than him only contributed to Hank's sanctimonious smirk. \n\nAs Paulina returned with the beer she again did a poor job of disguising her mesmerized gaze at Hank's goods. She watched with her mouth slightly ajar as I slowly stroked his hardening cock. \n\nFinally, she extended her arm and said in an unsteady voice, \"Here is your big...I mean beer Mr. Jones. Is there anything else I can do for you or Mrs. Jones?\" \n\nHank eyed up and down the Russian born 5'-10\" 24-year-old young woman before saying, \"Oh, I'm sure we could think of something, but no not at this time Paulina.\" \n\nAs they turned to leave, Manager Yelton said, \"Once again, we want to thank you for your business. Miss Petrova will be your personal point of contact. She will leave one of her card's on the table, please let her know if there is anything you need during your future visits with us. We will see ourselves out.\" \n\nAfter they left, Hank laughed and said, \"I bet he wasn't expecting that encounter when he decided to personally make the delivery with his assistant. I'm starving, let's eat!\" He slapped me on the ass as we climbed off the bed. \n\nHank popped a bottle of champagne and poured us each a glass. He had me sit on his lap as we took turns feeding each other grapes, berries, nuts, cheese and crackers. \n\nThree and half hours had passed, but I was still feeling the effects from the pot. I had the munchies as I consumed more than my fair share of the plate. \n\n\"Wow Monica, all that fucking made you hungry didn't it?\" \n\n\"Yes Black Master.\" \n\n\"Let's work you up a little appetite for dessert. He leaned forward and sucked my tits as he grabbed my hips and slid me along his veiny cock. Before long I was bouncing up and down on it. \n\nI couldn't believe we were having sex yet again, but my body didn't want to stop, \"Oh Black Master!\" \n\n\"That's it slut, cum again on that big stick again!\" He kissed me deeply as we increased our pace. He held my ass cheeks and slid me up and down on his cock. I pushed my boobs in his face and he ravenously sucked on my sensitive nipples. \n\n\"Fuck me Hank...it feels so good!\" \n\nHe got another big grin on his face; he didn't mind that I didn't call him by his nickname as he knew I wasn't thinking straight. We climaxed together in a sweaty tangle of arms, legs, hands and feet before I collapsed on top of him. \n\nJenna's hand slipped between Gina's legs and she softly stroked her pussy lips. \n\n\"There's my girl!\" Cole boasted. \n\n\"Wow, I never envisioned Jenna as the slit-licking type!\" Hank Sr. said with an amazed look on his face. \"I've fantasized about her riding my dick, but I never envisioned her eating pussy!\" \n\n\"They are all lesbians deep down inside,\" Paul said as if he were an expert in the area. \n\nMonica moved closer to Jenna and Gina. She continued...It was already 9:00 p.m. I was only expected to be there until 8:30 p.m., but my husband wouldn't be home for a few more hours and I knew I had a little grace time tonight. I didn't want Hank to know that however, so I told him I needed to be going so my husband wouldn't be suspicious. \n\nHe watched as I gathered my clothes from around the room and my bag from the bathroom. I dressed back in the clothes I had arrived in. As I exited the bathroom Hank told me to rejoin him on the bed. I approached and sat down on the edge, \"Take off your panties; I want to check something out.\" \n\nI thought to myself...\"What does he want with my panties?\" \n\nI reached down and slid them off. He took them and admired his jism that had leaked from my vagina, \"Lift up your skirt and spread your legs Monica.\" \n\n\"Black Master, you know I have to be going, my husband...\" \n\nHe cut me off, \"Do it now!\" \n\nI spread my legs for him. He held out the panties and told me to wipe my fingers through his cum and put it back where it belonged. \n\nI swabbed the thick cream from my panties with my forefingers and pressed it between my pussy lips. \n\nAs I removed my fingers I knew what he expected next. I brought them to my mouth and sucked them clean. \n\nHe nodded approvingly with a smile on his face, \"That a girl, you are getting the hang of this Ms. O'Neil!\" He pulled out his phone and snapped a picture of me with my cum-covered fingers in my mouth. \n\n\"Now give me your cell number Monica,\" \n\nHe pulled out his phone and entered my info. He texted me the picture to confirm we were connected. I embarrassingly reached into my purse, pulled out my phone, and clicked on the message. Hank got a big smile on his face when I handed it to him. His thick cum was pooled at the sides of my lips with my fingers pressed between them. \n\n\"Make sure your phone is fully charged by 5th period tomorrow. Also, I want you to wear the same type of revealing clothes you wore today. I want to see lots of cleavage, a short skirt and heels. Panties are optional until 5th period, but when I arrive, you better not be wearing any. Bring your earbuds. While the class is taking the test, put one of the buds in your ear and follow my instructions on your phone. Do you understand?\" \n\n\"Yes Black Master.\" I said with little conviction. \n\n\"Do you want me to call Roger bitch? You better do it with enthusiasm. Do you understand me?\" Hank raised his voice and repeated angrily. \n\n\"I'm sorry Black Master; yes I will do exactly what you want. Please don't be mad. I will dress provocatively for you and follow your instructions on my phone.\" I said with much more enthusiasm. \n\n\"Good slut, I will see you tomorrow afternoon in class.\" He then told me to hold out my hand. He took great satisfaction in paying me my \"tutoring\" fees in $10 bills, one at a time until he reached $90. He then said, \"I'm going to hold back the last $10 until after class tomorrow. I want to see the slutty outfit, pantiless quim and your adherence to our agreement regarding your phone.\" \n\nHe went on, \"You weren't too bad tonight slut, but I want more energy and enthusiasm when you fuck and blow me moving forward. Do you understand?\" \n\n\"Yes Black Master.\" \n\nHe grabbed his dick, \"We both know this is the biggest and best cock you've had in your life. The great part about this arrangement for you Ms. O'Neil is you get to enjoy this stick while you give me what I want. Give it one more kiss on the tip before you go spend the rest of your evening with the little hubby!\" He said with a wide grin. \n\nHe held it out and I kissed it. \n\nGina's hand slipped between Jenna's lingerie and touched her wet pussy. Monica wanted to join in, but knew that would happen eventually. Clearly the story was turning Jenna and Gina on so she continued...I took a long shower and climbed into bed. As I replayed the events of the night, I couldn't help but think about how disappointed I was in myself for succumbing to his every command so obediently. Worse than that, I had enjoyed it much more than I should have. \n\nI was nervous about what the next day and the following 8 months would bring, but nevertheless, I drifted off to sleep quickly. I never heard my husband when he got home as I slept the sleep of someone physically exhausted and completely sexually fulfilled. \n\nThe next morning I awoke to an empty bed. My husband's side was mussed, but he usually left before me on Friday's so I figured he was already up getting ready. Suddenly a thought occurred to me, \"What did I do with my clothes last night, specifically my panties?\" I had absolutely no reason to believe Brad would suspect anything out of the ordinary in terms of my tutoring responsibilities, but nonetheless, I told myself not to be so cavalier with regards to my clothes when I returned from the sessions with Hank. \n\nI slipped out of bed and wandered into the hall. My dress and bra were both sitting on top of the dirty clothes pile, but as I pulled them from the hamper, I got a big pit in my stomach, \"Where are my panties?\" I madly filtered through the top 12\" of dirty clothes, but they were nowhere to be found. I slowly closed the hamper in nervous bewilderment and walked back into our master bedroom. \n\nI entered the bath and sat to relieve myself as countless thoughts were going through my mind. Then out of the corner of my eye, I noticed my black thong sitting in an obscure corner of our large bathroom. My first thought was of total relief, but then I questioned how it made it to that spot. I had still been pretty fucked-up when the Uber driver dropped me off, but I was nearly certain I'd put them in the hamper with my dress and bra, \"I must have dropped them on my way out of the bathroom last night...but how did they get in that spot?\" I walked over and picked them up. Sure enough, a thick sticky clump of Hank's semen remained along the crotch seam. I chastised myself for being so careless the previous night, \"Jesus, what if Brad saw these?\" I reminded myself to be much more careful in the future. \n\nI could smell coffee brewing, but I showered quickly before heading out for my morning java. As the hot water cascaded over my fatigued body, I thought back to all that transpired the previous night. My pussy still felt stretched and I was tender down there. Hank had fucked me for at least three times longer than longest sex session I could ever remember with my husband. After drying myself and getting ready as fast as I could, I walked nervously into the kitchen. My husband Brad approached with a huge smile on his face and handed me a hot black coffee. He looked me up and down, \"Wow, casual Friday at the high school is taking on a whole new meaning. You look fucking hot, but I'm not sure any of the boys are going to be able to concentrate!\" \n\n\"Oh shut up Brad, you've seen me dress up like this before.\" I said defensively, but fully aware he was right. \n\n\"Yeah I have, but only when we go out clubbing!\" He replied laughingly. \n\n\"Some of the other teachers and I all decided that we've been dressing more like librarians lately. Principal Abbott doesn't seem to mind.\" \n\n\"I bet he doesn't!\" He then changed the subject, \"So how was the first tutoring session with Boy Wonder?\" \n\n\"Oh it went fine, we went all the way back to the beginning, I thought it was important to make sure he had the all the basics covered before we got into the more difficult stuff?\" \n\n\"And how'd he do?\" My husband asked with a smug smile on his face. He held my gaze until I subtly turned my head away. \n\n\"Oh...uh...he did okay. He's smarter than most people think, but he has concentration issues.\" \n\n\"Well it must have been a tiring process; you were out cold when I got home. I don't think I've ever seen you sleep so soundly, you didn't even move when I climbed into bed.\" \n\n\"Yeah...uh I was exhausted after a full day at school and then the long tutoring session.\" \n\n\"I bet\" he said in a strange voice with a smirk on his face. Something seemed different about him this morning, but I figured I was just being paranoid. A few moments later he came up and squeezed my tits from behind before he kissed me; the kiss was wetter than our normal morning goodbye, \"I hope you still have this outfit on when I get home from work. We should have some drinks and see what pops up!\" \n\nI gave him a quizzical look before nodding. \n\nAs I walked through the halls on campus I could see the hungry stares from the boys. I felt very uncomfortable standing in front of the class dressed so inappropriately, but Friday was test day so I spent most of the first three periods sitting behind my desk. During the lunch hour a couple of the young male teachers came by my room and made small talk. I could tell they were there to check me out. \n\nMr. Abbott came by and said he wanted to observe 4th period. I told him my students were only going to be taking a test. My response caught him off guard before he stuttered and said he didn't mind and wanted to observe my methods for policing cheating and electronic device management. ",
        "I knew what his true intentions were. I could feel his eyes on me throughout the period. \n\nAfter class he came up and complemented my methods as he stared at my boobs, \"Ms. O'Neil, I couldn't be more excited to have you on my staff (he hesitated to gauge my reaction and see if I picked-up his play on words), I'd like to get closer with you next semester. I hope you will consider joining my advisory panel; it would give us a lot more time to work 1 on 1.\" \n\nI told him I was flattered at the invitation and would give it strong consideration. I was lying through my teeth as the dirty old man gave me the creeps. \n\nI told him I needed to use the ladies room before my next class. He held the door and undressed me with his eyes as I thanked him and headed to the restroom. Inside the bathroom stall I slipped off my panties and stretched my short skirt down as far I could. It wasn't covering much and my heart beat a million miles an hour as I walked back to my room thinking everyone could see my goods. \n\nJust as the 5th period bell rang, Hank strolled into the room with a couple of his buddies. They were laughing and joking as they entered, I couldn't help but wonder what they were talking about. They all stopped to check me out before Hank nodded his approval. Hank's seat was on the far left side of the room near the door. I passed out the test sheets as quickly as I could and made my way back behind my desk. \n\nHank's first text message popped up almost immediately on my phone. \n\nText message: \"Nice outfit slut, I'm getting a little chub over here checking out your tits. Look over between my legs now!\" \n\nI nonchalantly looked over at him. His huge cock was hanging out the pant-leg of his gym shorts. I could feel my eyes getting wider as I stared at it. \n\nText message: \"Remember how good this thick stick made you feel last night? Hold up 1 finger if it was the best sex of your life or 2 fingers if not...\" \n\nI subtly itched near the side of my mouth with 1 finger. \n\nText message: \"Good answer slut, but don't worry, we'll top that Sunday. Nod to me if you agree.\" \n\nI slowly turned to him and nodded. \n\nText message: \"Are you wearing panties? Nod or shake your head.\" \n\nI again looked his way and shook my head. \n\nText message: \"Good, I want to see that horny pussy. Back away from your desk and turn your chair my way. Spread your legs and let me see it.\" \n\nI couldn't believe he was asking me to do this. I looked around the room to make sure the other kids were concentrating on the test. Luckily he was sitting in the chair in the front row and furthest to my left. My desk blocked the other kids from seeing me below the waist. I looked around again before slowly pushing back from my desk about 2 feet and turning my chair in his direction. \n\nText message: \"Okay I can see you now. Spread your legs and raise the skirt. Show me what I'm going to get on Sunday!\" \n\nI looked around the room again before I did as he requested and showed him my naked pussy. A big grin formed on his lips. \n\nText message: \"Good girl, you followed instructions. By the way...nice snatch, is it wet right now? Put up one finger for 'yes' or two for 'no'.\" \n\nI wasn't sure how to respond so I answered with the truth and used 2 fingers to act like I was wiping something from by eyebrow. \n\nText message: \"Okay let's see if we can do something about that slut. Move back behind your desk and install the earbud in your ear.\" \n\nI again looked around the room before attaching the earpiece to my phone and slipping one side in my left ear. \n\nThe next text arrived immediately. It had video file attached. \n\nText video #1: Hank's cum blasted from his cock and splattered on my face. He shoved it in my mouth and I tried to swallow as fast as I could. \n\nThe video caught me so much by surprise that I accidently gasped loud enough that all the kids looked up at me. \n\nI apologized to the class and said \"Excuse me\". \n\nThat one was followed by a series of texts with additional clips from our previous night of sex; he must have had video cameras in the hotel room that he could transfer to his phone. \n\nVideo #2: I moaned and orgasmed loudly on Hank's cock as he fucked me hard doggy style. \n\nVideo #3: I cried out \"Eat me you black stud\" as he licked and sucked on clit while I was handcuffed to the headboard. \n\nVideo #4: I danced slutily and played with myself in front of him while he jacked-off. \n\nI was panting heavily as he broke up the sequence and sent me only a message. \n\nText message: \"Ms. O'Neil, I can see your nipples are getting hard through your tight shirt. Reach up and touch one of them.\" \n\nI moved my hand up and acted as if I was brushing something from my shirt. I touched my nipple and couldn't believe how much it was poking out. \n\nText message: \"Look at Jenny in the front row. Don't her tits look good?\" Wiggle your tongue at her like you are going to do when you are eating her pussy next week!\" \n\nI looked over at him incredulously. He mouthed the words, \"DO IT NOW!\" \n\nI looked around the room before sticking out my tongue and fluttering it at Jenny. Just as I finished, I noticed that the book-worm girl Ellen Kearns sitting next to her was staring at me. \n\nChat message: \"Nice job slut, remember what you told me last night?\" \n\nJust then the following video popped up. \n\nVideo #5: I was stroking Hank's big black dick and telling him what I was going to do with Jenny Walsh, \"I'll push her down on her back and pull her legs apart and give you access to her tight pussy. I'll lick and bite her big young nipples while you impale her and fuck her wet pussy with your huge cock Black Master! And when you're done shooting your hot load into her wet hole, I will bury my face between her legs and lick it out!\" \n\nText message: \"She does look good enough to eat doesn't she? Monica, your face is getting flushed; I can tell the videos are making you horny! Look over at me again.\" \n\nI turned slowly to look at him. His cock had inched further down his leg as he stroked it with his thick fingers. One of the other kids sneezed and I was so startled that I nearly jumped out of my chair. \n\nText message: \"Wow slut, you are wound up tight. Relax a little, lower your right hand and rub your pussy.\" \n\nI looked over at him and subtly shook my head. \n\nText message: \"Do it now or I'll send a text to Roger immediately!\" \n\nI looked around the room to see if anyone was watching me besides Hank. I slowly lowered my hand between my legs and touched my pussy mound. I was so aroused that I closed my eyes and breathed heavily. I lowered my fingers and slid them along my soaking wet lips. \n\nText message: \"I can see by the look on your face, you like the way that feels. When you're done playing with yourself slut, bring your hand above your desk and slide your slippery fingers together to show me the wetness.\" \n\nI slid my fingers up my wet slit one last time and nonchalantly brought my hand up. I again looked around the room to see if I was being noticed by any of the other students. I slowly looked at him and slid my slippery fingers together. Hank grinned as he continued to rub his exposed dick. \n\nText message: \"Wow that pussy must be wet; I can see your fingers glistening from here. Bring them up and wipe some of the wetness under your nose and along your nostrils.\" \n\nI couldn't believe he was asking me to do this, but I also knew I didn't have a choice so I brought my hand to my nose and rubbed it around my nostrils like I was itching a runny nose. The scent of my pussy quickly filled my nasal passage. \n\nText message: \"That a girl, look over and nod if it smells good!\" \n\nI looked up at the clock to see that we thankfully had only had 10 minutes remaining in the period. I then glanced over at him and nodded slowly. \n\nText message: \"Enjoy the scent for the rest of class; I can't wait to bury my nose in that sweet slit. Get lots of sleep tonight and tomorrow...you are going to need the energy Sunday Ms. O'Neil!\" \n\nThe final few minutes passed quickly. Each student passed their test sheet forward. My student assistant thankfully collected them from the kids sitting in the front of each row. She stacked them and put them on my desk. I didn't see Hank again as he slipped out while I was talking to my student assistant. \n\nAfter all the kids departed I let out a big sigh, thankfully relieved that I made it through the day; I could still smell my pussy as I reached for the stack of test sheets. I looked through them quickly to find Hank's. I pulled it from the stack and noticed immediately that it was completely blank with the exception of several juvenile doodles of male and female anatomy. A note was written across that said, \"You get an 'A' for today's test Ms. O'Neil.\" \n\nThere was a $10 bill attached with a paper clip... \n\nGina lowered her head and kissed Jenna on the lips. \n\n\"Now we're talking!\" Paul said excitedly. \"Kiss that voluptuous creature Gina, tell her you want to eat her wet pussy!\" \n\n\"Damn, my son's cock has them all worked up, but my girl isn't getting anything herself!\" Hank said with a frustrated laugh. \n\n\"Don't worry Hank, one of them will be between her legs soon!\" Cole said confidently. \"And I'm sure it's going to be my date!\" \n\nMonica continued...Sunday morning before I left for an educator's brunch, my husband and I sat out on our back deck having morning coffee. I don't know what had gotten into him but he'd been unusually horny the past couple of days; we made love back-to-back nights which was a rarity for us. \n\nSuddenly our neighbor popped his head over the fence and called Brad over. As I sat waiting for him, I thought about some new outdoor solar lamps that I'd ordered from Amazon and wanted to check on their ETA. My phone was charging in the house so I grabbed his and luckily it hadn't returned to the login screen. We didn't share our login's with one another. I tapped on his browser, the web page that popped up was titled, \"The Complete Guide to Cuckold Lifestyle\". My husband walked back around the corner and I slyly pushed his phone back across the table before he noticed. I'd never heard the term 'cuckold' and didn't think much about it until a few minutes ago when Gina told us her story. Now I'm sitting here with a million thoughts going through my mind. \n\nGina's eyes got wide as she stared back at Monica with her fingers still inside Jenna's lingerie. She thought to herself, \"Maybe I'm not the only one whose husband is one of these cuck things?\" \n\nMonica gave her a confirming glance before finishing her story...Later that morning I attended a brunch meeting hosted by the district superintendent. I felt much better about my outfit as I wore a new business suit which I had just purchased two weeks previously. Mr. Abbott and a few of my fellow teachers were there. I could tell he seemed disappointed that I was dressed much more conservatively than the past few days. \n\nThe meeting was scheduled to last until 11:00am, which would give me time to get to the hotel early and change into lingerie before Hank arrived at noon. The brunch was a snoozer and my mind kept drifting to what Hank would have in store for me today. I was nervous, but to my dismay, I was aroused as well. Our sex on Thursday had been the best of my life and while my husband and I had engaged in sex since, I'd caught myself fantasizing about Hank's big cock several times over the past 54 hours. \n\nThe meeting ended on time and I left quickly before Mr. Abbott or any of the other teachers had a chance to corner me. \n\nI arrived at the hotel at 11:30 a.m. and took the elevator to the top floor. I walked down the hallway to the Penthouse Suite but as I reached for my key, I heard the unmistakable sound of moaning. I slid my key into the lock and opened the door; the sounds of sex were definitely coming from inside, \"Was there a porn movie playing loudly already?\" \n\nI turned the corner and immediately saw Paulina Petrova's head hanging over the bed looking in my general direction as grunts and moans escaped her lips. Her long legs were sticking straight out and Hank was on top fucking the shit out of her! \n\n\"Fuck me with your huge dick black boy!\" Paulina cried in her Russian accent. \"I'm going to cum on it again...it's so good!\" \n\nHank noticed me and shouted, \"Monica get over here now!\" \n\nI froze momentarily before he yelled at me again. \n\nI moved to the bed as fast as my heels and tight skirt would allow. As I neared the bed I could see Paulina's large breasts jiggling as she climaxed on Hank's thrusting cock. \n\n\"Climb up here Monica!\" Hank barked urgently. \n\nI didn't know what he had in mind as he grabbed my hair and pulled my head down near Paulina's stomach. He excitedly pulled his black hose from her pussy and wildly began shooting thick streams of semen. The first splattered on the lapel of my new suit, the next did the same on my blouse near my tits. He gained more control and aimed his cock at my face and blasted several more shots around my open mouth and on my tongue and chin. \n\n\"That's my boy!\" Hank Sr. bragged to Paul and Cole as he heard Monica relay the story. \n\nJenna and Gina started kissing passionately. \n\nMonica continued...Paulina looked at me and said to Hank, \"Every time I see your wife she has joojoo on her face.\" \n\n\"Why don't you help her out and clean it off.\" Hank responded. \n\n\"I was hoping you would say that stud!\" \n\nPaulina cradled my head in her hands and brought her face close to mine. She ran her long fingers through my hair and stared into my eyes. Aside from the previous weekend with Dana, I had never been so close to another woman intimately. She slowly brought her lips to mine and softly kissed my cum covered lips. Paulina extended her tongue, parted my lips and pressed some of Hank's jism into my mouth. She swirled her tongue around and we started kissing more erotically. \n\nPaulina reached up and pushed my cum stained new coat from my shoulders and reached for my breasts. She grabbed them roughly and said in her Russian accent, \"I wanted to suck these tits on Thursday. She grabbed my blouse and tore it open sending the buttons flying. Within a minute she had me stripped naked...just like this. \n\nJenna and Gina broke from their kiss to see Monica pulling off her pink babydoll. Her full C-cup perky tits heaved as she looked at the two of them hungrily. Her clean shaven pussy glistened with wetness through the crotchless gap in her g-string. She spread her legs. \n\n\"I bet she did this to you next huh Monica?\" Jenna said as she slid over, pushed Monica backwards, lowered her head, yanked the g-string aside and licked along Monica's sweet pussy lips in a long slow pass. \n\n\"Break out the Benjamin's boys!\" Cole bragged loudly as he held out his hands...palms up. \n\n\"Son of a bitch, Jenna went straight for the pussy, didn't she?\" Paul conceded as he watched the hot married blonde lick Monica's wet cunt. He reached into his wallet and pulled out a $100 bill and slapped it into Cole's hand. \n\n\"Look at Jenna lick and suck that shit; damn she's got talent!\" Hank said in amazement as he pulled out his money clip and paid Cole absently. He never stopped watching Jenna. \n\n\"Nice doing business with you boys!\" Cole bragged as he took a victory puff from his dwindling Cuban. \n\nThe three of them watched Jenna's talented tongue dance on and around Monica's welcoming pussy. \n\nGina quickly ditched the bustier and unsnapped the garter straps from her sexy stockings. Her large soft breasts hung beautifully as she hovered over Monica and fed them to her. \n\nMonica pulled her knees up near her tits to give Jenna complete access, \"Oh my God Jenna, you're tongue feels so good. Yeah suck it just like that...uhn. Oh yeah, lick it, fuck...don't stop!\" \n\nCole looked on eagerly. He had hoped Jenna would be the enthusiastic cunnilingus-giver that he suspected she might be. He was not disappointed. Not only was she enthusiastic, but she was good at it. He thought to himself, \"There are going to be many fun days and nights ahead...\" \n\n\"Uhn, Jenna that feels so good...oh yeah...you got it...oh, oh, oh! Fuck, you're going to make me cum!\" \n\nThe three black men watched in awe as Gina sucked Monica's nipples as her hips shook wildly and she orgasmed breathlessly on Jenna's face. \n\nAs Monica lay trembling, Jenna and Gina quickly repositioned themselves. Gina lay further forward on the huge backless couch in the same orientation as Monica who remained in the same position. Jenna crawled forward until her face was between Gina's legs and her pussy was dangling over Monica's mouth. Jenna immediately felt Monica's soft tongue as it parted her wet puffy lips. She buried her nose in Gina's sweet smelling slit. \n\n\"Jenna please do to me what you just did to Monica,\" Gina whimpered. \n\nWithin a minute 30 inches of Viagra aided big black cock made its way into the playroom followed by Cole, Hank, and Paul. The scene looked like an animal hunt as the large black carnivores descended upon their fair-skinned, helpless prey. The few remaining lingerie items were summarily torn from the bodies of the three fucked-up women. \n\nHank Sr. went straight between Monica's spread legs. He dropped to his knees and buried his 10 inch cock in the teachers' married pussy that his son had spent so much time enjoying for the past two months. \n\nPaul went to the front and lay down on his side. He brought his thick 9 \u00bd inch log to Gina's beautiful mouth and she immediately slobbered around the ebony head. She brought her hand over and stroked him frantically as he rhythmically thrust his muscled black ass and fed her his dark meat. \n\nCole straddled Monica's shoulders and got down on his knees. He brought his cock up and rubbed it up and down Jenna's ass crack. He slapped her thick pouty lips and the wetness splattered down on Monica's face. Cole lowered his cock and pressed it against Monica's chin. The horny school teacher took a break from eating Jenna's pussy to slobber on the head. She couldn't believe the size, it even made Hank Jr's massive dick pale in comparison. The thick rubbery head filled her mouth completely. \n\nThe first orgasm came when Gina screamed, \"Jenna your tongue feels so good...yeah just like that...keep going...oh I'm cumming!\" Not long after, Jenna moaned loudly and sprayed pussy juice on Cole's cock and Monica's face. Monica and Hank soon climaxed together as the 40-year-old black man fucked her as hard and fast as he could. \n\nThe sex that ensued for the next hour could have been made into a best-selling \"how to\" pornographic orgy video titled, \"Black Bulls and White Married Wives...Cries, Climaxes and Creampies.\" \n\nPaul eventually rose from the tangled bodies and led Jenna by the hand upstairs. Hank was in tow. \n\nTwo hours later Hank and Paul returned to the playroom covered in sweat with big smiles and limp cocks. They saw Cole lying on his back sandwiched between Gina and Monica, each of them with a hand on his massive chest and a leg strewn over his spread muscled legs. Gina was passed out and Monica and Cole were kissing softly. Cole's thick semen leaked from Monica's well fucked pussy. \n\n\"You boys were gone quite a while!\" Cole said with a smile. \n\nHank was practically giddy, \"Wow that was worth the 10 year wait!\" \n\n\"She's something else Cole, I envy the next 3 weeks of your life!\" Paul gushed. \n\n\"Is she coming down?\" Cole asked. \n\n\"She's been cumming up and down for the past 2 hour's bro, but right now...she's a little tired you might say.\" Paul bragged with a shit-eating grin. \n\n\"She's in a similar condition to little Miss Gina there,\" Hank said proudly looking over at the passed out woman. ",
        "\"You'll probably need to carry her out to the car Cole. But you might be a little careful cuz she's leaking like the teacher here.\" Paul said as he pointed to Monica's creampie. He and Hank laughed and slapped some skin. \n\nHank chimed in, \"Only difference is Jenna's got it coming out of three different holes! At least you guys won't have to stop at the 24 hour drive-thru on your way home Cole; she shouldn't be hungry for a while. She's got herself a stomach full of protein!\" \n\n\"Amen to that brother!\" Paul agreed as he high-fived Hank one last time. \n\n\"I could tell ol' Hank here isn't getting much outside of the marriage these days; he couldn't get enough of that sweet white shit. The feeling must have been mutual, cuz that squirtin little pussy kept doing its thing on his black meat!\" \n\n\"I'll grab something clean for you to wrap her up in; those sheets are messier than she is.\" Paul bragged proudly. \n\nCole lay between the two naked married women looking up at his black friends. Suddenly an emotion he could never remember feeling began to permeate his body...he was feeling the first pangs of regret. He suddenly began to question his choice to bring Jenna here tonight. He didn't want to admit it to himself earlier, but the entire time he was fucking the other two women, he couldn't stop thinking about Jenna upstairs with Hank and Paul. He resolved himself to the fact that he would not share her with any other men while she was with him for the next three weeks. Women yes...but not men. \n\nCole Steele didn't know how quickly he would have to go back on that resolution... \n\n***** \n\nYour comments are always appreciated, I read them all. Please don't forget to vote...if you liked it, 5 stars are always appreciated!"
    ],
    "authorname": "FifthEstate",
    "tags": [
        "usc",
        "long beach",
        "kacey musgraves",
        "strip club",
        "cheerleader",
        "hotel",
        "drugs",
        "math teacher",
        "ucla",
        "vegas"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ucla-to-big-d-ch-10"
}