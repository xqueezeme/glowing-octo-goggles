{
    "title": "Safe Room Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 9 - Shock and Awe (Continued)\n\n\"Drop it!\" one of the guards ordered.\n\n\"I will not.\" said Joanne, who pulled the hammer back and pulled the trigger. \"If you shoot me, the gun goes off and Karen dies. She's under arrest, and I will not stand down.\"\n\n\"Please, Ms. Joanne, she will not harm you.\" said Conrad King.\n\n\"Sir, my wife is right.\" said Seth. \"Karen is a wanted fugitive, and my wife is doing her sworn duty. If you kill her, you'll have to kill me, because I won't let it go... and it'll be a bloodbath.\"\n\nConrad smiled. \"Spoken like a true King.\" he said. \"But I won't allow my granddaughter to be harmed, nor arrested.\"\n\n\"Go ahead, bitch.\" Karen taunted. \"Shoot me. And then your husband dies with you.\"\n\n\"Stop it, Karen.\" ordered Conrad placidly. \"No one needs to get hurt here.\"\n\n\"She's going to jail, Mr. King.\" said Joanne. \"I'm not leaving here without her in custody.\"\n\nNo one moved. It was growing more tense. And Joanne's thumb on the cocked hammer was growing tired.\n\n\"Away put your weapons.\" called out a voice. \"Stand down, all of you.\"\n\nFrom the kitchen area walked in... Your Iron Crowbar. I was in all black, with my kevlar-lined trenchcoat, Tilley hat, and of course the red crowbar. My weapon was still holstered under my shoulder... for the moment.\n\nEveryone stood stunned, but Joanne had not looked back at me, nor taken her eyes nor her gun off of Karen. Good! she's been well-trained, I thought to myself as I slowly walked up to Conrad King.\n\n\"Mr. King, I said, looking down at the old man, \"please do tell your guards to stand down and holster their weapons. Or it will indeed get very bloody in a very short time.\"\n\n\"Well, the great Iron Crowbar rides in to the rescue!\" Karen Warner all but shouted, her face a mask of smugness.\n\n\"Gentlemen,\" said Conrad King, \"stand down. Put your weapons away. Do it. Now.\" The guards very slowly and very reluctantly did so, but were tense and ready to draw and fire.\n\n\"It's okay, Detective Warner.\" I said. I moved closer to her and whispered \"We can't arrest her. I'll tell you why later.\" Joanne nodded, eased the trigger back, then lowered the hammer as she pointed the gun at the ceiling. But she remained very wary.\n\n\"Why are you here, Commander Troy?\" asked Conrad King, his voice connoting his unhappiness with me.\n\n\"I'm sure you understand, Mr. King,\" I replied, \"that I would never allow one of my Officers to come into a situation like this without backup... considerable backup.\" It was then that Lt. Molly Evans and Detective German, both in uniform and armor, came out from the same place I had.\n\n\"You act as if your Officer was in danger, Commander.\" said Conrad. \"I am annoyed. Of course your Officer, my granddaughter-in-law, is perfectly safe, and always was.\"\n\n\"I am afraid I do not share your evaluation, Mr. King.\" I said. \"Especially when Karen Warner Harlan is in the room. So sorry, sir, but I do not trust her one... little... bit.\"\n\n\"Very well, then.\" said Conrad. \"Seth, I would like to talk with you again, in a safe public setting, but it will have to be for another time. Why don't you and your lovely wife go with the Iron Crowbar.\"\n\n\"Yes, let's do that.\" said Seth. \"Come on, Joanne.\" he said, wanting only to get his wife out of this situation.\n\nWith that, the five of us left, with me bringing up the rear. As I got to the door, Conrad King called out \"Commander?\"\n\nI turned, more quickly than my back would have preferred. \"Sir?\"\n\n\"Well done, young man. You take care of your people. A laudable trait of a leader.\" said Conrad. Then he said, a bit more stern in his voice: \"You play the Game well, son. It is indeed too bad you are not with us. Farewell.\"\n\n\"Au revoir, Mr. King.\" I replied.\n\nPart 10 - Meddlesome\n\nOnce out in the parking lot, I thanked Molly and Detective German for their help. I turned to Seth and Joanne and said \"Why don't you ride home with me, and I'll explain everything at Police Headquarters.\"\n\n\"Sure, sir.\" said Joanne. Then she saw the vehicle I had driven over... the Black Beauty. \"Oh, it is for real! Seth, this is the Black Beauty!\"\n\n\"And appropriately driven by the Green Crowbar, a.k.a. Kato.\" I said. Cindy was behind the wheel. \"Go with her, and I'll drive your car behind you.\"\n\n* * * * * * * * * * * * * * * *\n\nBack in my office, I had Joanne and Seth sit in hot chairs while Cindy sat in her usual perch, the sofa. I sat down in my 'Command Chair', grateful for the lumbar support built into it.\n\n\"I realized,\" I started, \"that if Conrad King was reaching out to you, Seth, he might well also reach out to your sister Karen, and that she might just be there... which is what happened and took that situation into the realm of the law-breaking and the dangerous.\"\n\nI continued. \"And if she was there, I realized I did not know what Karen's reaction to Joanne would be... after all, her mother died while saving Joanne in the Standard Tools explosion.\"\n\n\"I think she hates you for that more than me, sir.\" said Joanne. Seth nodded.\n\n\"Quite possibly.\" I said, \"At any rate, I gathered some backup and we came to the Lakeside Inn & Suites, just in case. And sure enough, Karen was not only there, but she has wormed her way into her grandfather's confidence, which is most very unfortunate for us good guys.\"\n\n\"Why couldn't we arrest her, sir?\" asked Joanne.\n\n\"On what charge?\" I asked.\n\n\"Uh, she's wanted for the crimes committed by that Women's Gang your sister led, sir.\" Joanne said. I could see that Cindy was beginning to grasp the full problem.\n\n\"I see what you're saying, sir.\" said the Green Crowbar. \"We really don't have much of anything on her. The others in that Women's gang are either dead or out of the country, and Eleanor Burke is not exactly a reliable witness.\"\n\n\"Exactly.\" I said. \"So, I apologize for upsetting your family reunion, but there was danger there.\"\n\n\"With respect, Commander,\" said Seth, \"I don't think it was that bad. Karen and I do not have the level of animosity that you and your sister do. And I don't think Mr. King would've allowed us to be harmed, either.\"\n\n\"So you trust your sister with your wife's life?\" I asked Seth, my eyes boring into him.\n\nSeth contemplated, and said \"Maybe not, but in that situation, we were okay.\"\n\n\"No, Seth, we weren't.\" said Joanne. \"As soon as Karen walked into there, knowing I'm a Police Officer and would try to arrest her, they knew it would escalate. At least she did. I don't know what Mr. King was thinking, but he may have been co-opted by your sister.\"\n\n\"Seth,\" I said, \"those guards were very quick to train their weapons upon your wife. Only her brilliant action is cocking the gun and holding down the trigger stopped them from shooting her. And Conrad King is a man who can make problems disappear, with nary a whisper in the Public's ear.\"\n\nSeth saw that he was losing this argument, but I could see in his eyes he was only pretending to concede. \"All right.\" he said. \"Can I take my wife home now?\"\n\nI nodded. \"Keep a sharp eye out. Joanne, if you see Karen, at all, any time, any place, contact me or Captain Ross immediately. Even if she's helping a child cross the street, let me know.\"\n\n\"Yes sir.\" said Joanne. She hustled Seth out of there. After they left, Cindy and I looked at each other.\n\n\"I know you think Conrad King is one of the Big Boyz, and maybe part of Superior Bloodlines,\" she said, \"but do you really think he had harmful intent towards Seth and Joanne?\"\n\n\"No.\" I said. \"He wanted to meet them, especially Seth. He was evaluating them, and might have probed further to see if Seth was worthy to take over some of his businesses. All seemingly legit... except that Joanne is right: Karen is a wanted fugitive, Joanne was duty-bound to arrest her, and Conrad had Karen not only there, but had her show herself. Now what was up with that? Oh... never mind.\"\n\n\"What?\" Cindy asked.\n\n\"Color me deeply cynical...\" I said, \"but let's just say the guards did shoot Joanne. What then?\"\n\n\"Then the Iron Crowbar goes on a rampage, and no one but Seth is left to tell the tale.\" Cindy replied.\n\n\"Well, they weren't planning on me being there.\" I said. \"But they were planning to escalate that situation. If Joanne is dead, in Karen's eyes, and maybe Conrad's, Seth is now free of those 'Police influences'. I'm sure someone doesn't like Seth being married to a TCPD Detective... and one of my very best ones, at that.\"\n\n\"I don't know.\" said Cindy. \"You're going way deep into the Dark Side with ideas like that.\"\n\n\"Touch\u00e9.\" I said.\n\n\"Okay,\" said Cindy, \"if you don't need me any more tonight, I'm going home. Callie gives great massages, and I need one right now.\"\n\n\"Have a good night.\" I said. \"I'm going to do some computer work, then go home.\"\n\nPart 11 - Connecting The Dots\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette from the Courthouse steps at 7:00am, Friday, May 5th. Cinco de Mayo. The party never stops...\n\nBettina continued: \"Channel Two News has learned that the State Office of Ethics and Review will not open an investigation into the arrest of Richard Ferrell, where Police found Mr. Ferrell badly injured and now paralyzed. Citizens for Police Accountability spokesmen Jay Swenson and Ken Eidex issued a statement strongly condemning SBI Inspector Britt Maxwell, questioning her integrity and accusing her of covering up for Commander Donald Troy's Police Force.\"\n\n\"And in other news,\" said Bettina, \"State Senate Democrats, led by 1st District Senator Katherine Woodburn, are organizing committee hearings to investigate Governor Val Jared for what they say is a misappropriation of funds, and using those funds to illegally discriminate against ethnic minorities who are undocumented. Senator Woodburn says dealing with undocumented workers is a Federal pervue, and the Governor has overstepped his bounds.\"\n\n\"And locally,\" continued Bettina, \"Police have no comment on the investigation of the death of Tim Burris, but sources tell Channel Two News that they have no new leads and are making no headway in the case. Asked if this was a crime or a horrible accident, Sheriff Daniel Allgood declined to answer, referring Channel Two News reporters to the Police Department Press Office, who refused to answer or issue a statement on the matter.\"\n\n\"What the Police are talking about, and with considerable excitement, is the beginning of the Police Boxing Matches tomorrow!\" Bettina said. \"Last year's Champion, Commander Donald Troy, is unable to defend his title after his recent back surgery, and it is widely believed that prior Champion Captain Cindy Ross is the favorite to win this year.\"\n\nTo my surprise, not a word was said about that, though Cindy, Teresa, and Joanne were all here amongst the Detectives watching. Joanne looked exhausted; I sensed trouble in Paradise in the Warner household. Cindy's ice-blue eyes showed determination, but Teresa's eyes showed something else: cunning. Ahhhh, I thought to myself, she's doing what I did last year: she's letting Bettina butter Cindy up... hmmm, maybe Teresa even leaked that one to Bettina...\n\n* * * * * * * * * * * * * * * *\n\nThe BigPharmaCorp board gathered in their boardroom for their pre-meeting breakfast. Steak and eggs, mushrooms and gravy, French toast, ham, sausage, hash browns, and biscuits were being served, and the hungry Board members took and ate large portions.\n\n\"Well, Conrad,\" said Wallace Bedford as they sat down next to each other, \"I heard you had a visit from the Iron Crowbar last night.\"\n\n\"Yezzzz, yes.\" said Conrad King. \"I was meeting my grandson for the first time, and his wife is a Police Officer. A situation with my granddaughter, my grandson's sister, developed, and from out of nowhere... *poof!*... there he is, standing in our midst.\"\n\n\"Meddling in your affairs.\" said Bedford.\n\n\"Yes, but it was understandable.\" said Conrad. \"He is obviously keeping his eye on me. Maybe on you, too, Wallace.\"\n\n\"Yes.\" said Bedford. \"We're getting closer to Operation 'Stormbringer', and that red-headed hand grenade with a crowbar shows up right in your midst. That certainly cannot be a coincidence, can it?\"\n\n\"Oh my, no.\" said King. \"Neither the Iron Crowbar nor I believe in coincidences. My idea to have my granddaughter show up had unexpected consequences, but good ones, I think. The Iron Crowbar is probably regretting right now that he has exposed himself to us. We now know... that he knows.\"\n\n\"He's known, and for a long time.\" said Bedford. \"The word I have is that he single-handedly crushed 'Operation Apple Grove' and was responsible for Mitt Baker's imprisonment. Poor man, such a staunch ally, and now he's rotting in a jail cell with a bunch of 'deplorables'.\"\n\n\"I wonder how much the Iron Crowbar knew when he put my son Jack behind bars.\" said Conrad King. \"At least my son is now safely in Europe, out of the Iron Crowbar's grasp.\"\n\n\"Speaking of Europe,\" said Wallace Bedford, \"what is being done about the Iron Crowbar's sister? Your daughter was in prison, but at least she was alive, until the Iron Crowbar's sister meddled.\"\n\n\"Oh, I don't blame the woman for that.\" said Conrad. \"I do blame Raymond Westboro for that, may his filthy name be cursed for all time. In that, I am grateful to the Iron Crowbar for eliminating that piece of filth.\"\n\n\"Yes, I can agree with that.\" said Bedford. \"That bastard fucked us up, trying to take us over while pretending to be our friend. By they way... why was Tim Burris killed? He was just an idiot, a wannabee-soldier and a lousy prepper.\"\n\n\"I have no idea.\" said King. \"All I heard was that 'Paulsen' wanted him exterminated, and so he was exterminated. Either 'Mr. C.' wanted that done, or it was someone cleaning up some loose ends.\"\n\n* * * * * * * * * * * * * * * *\n\nThe MCD Detectives met in Classroom 'E'. Present were Chief Moynahan, Your Iron Crowbar, Captain Ross, Detectives Parker, Washington, Warner, and Davis, Supervisor Milton (Myron), Master Technician Milton (Mary), and Sergeant Rudistan.\n\n\"Okay, guys,\" I said, \"I barely need mention that what is about to be discussed is to be considered 'classified' by TCPD standards. Okay, Myron, Mary, whaddya got?\"\n\nMyron went first, showing a Powerpoint presentation on his computer.. \"We've done a lot more digging into Tim Burris, Jeffrey Burnham, and Melissa Burris. First, Melissa: we've discovered that the reasons for her being put on night shift a lot and having to change jobs is because she has been written up on several occasions for making statements considered racially biased. Additionally, black employees also filed complaints that she showed favorable treatment towards white employees and give white employees better reviews and easier job assignments.\"\n\n\"Jeffery Burnham's job with the University is not quite what he made it out to be.\" said Myron. \"He does work for the University Museum... but on a part-time basis. And his recent trip to Europe was not funded by the University.\"\n\n\"Before you go further.\" I said. \"I want to go ahead and add a couple of things I found out. First, some of the dates of Tim Burris going into his shelter for what he called 'test runs'. One of the dates was the Bulldogs-Wildcats game last Fall... Tim was always afraid of events that created large crowds, thinking them ripe for mass attacks.\"\n\n\"He missed an awesome game.\" said Theo Washington with his 'movie star handsome' grin in Cindy's direction.\n\n\"That's in the eye of the beholder.\" retorted Cindy Ross, her ice-blue eyes blazing.\n\n\"And the beholder of the Red Crowbar agrees with Detective Washington's astute analysis.\" I replied with a grin. \"But all that aside, Tim also tested his shelter from the day before Thanksgiving through the Monday afterwards, almost a week. He also was in there on June 22d of last year and missed all the fun and excitement then, too.\"\n\n\"I have a question.\" asked Chief Moynahan, \"How could he have known June 22d was going to be the day of the final showdown with Pastor Westboro? It's not like we advertised it, much less really knew.\"\n\n\"Ah, Chief,\" I said, \"that brings me to the connection. Tim Burris's parents were moles within the Oldeeds Organization, and it is believed they were found out and murdered by the Oldeeds people. Chief, you remember the death of CIA Agent Mike down in Midtown while you were there. Same people betrayed them both.\"\n\n\"Ah yes, and you came to visit us then.\" said the Chief. \"Setting off wheels in mo-shunnnn...\"\n\n\"Glad I did, sir.\" I said. \"Since it led to you being here as our Chief, Lt. Masters as our Vice Lieutenant, and Lt. Evans keeping her sister out of trouble.. with limited success.\" As everyone laughed, a green crowbar was waved in my general direction.\n\n\"Okay, back to it.\" I said. \"Burris's parents had an Oldeeds connection. And Oldeeds's prot\u00e9g\u00e9, the Reverend Robert Patterson, was supposed to speak at First Baptist Church that evening, and somehow managed to not show up...\"\n\n\"Ahhhh...\" said Rudistan.\n\n\"Yes.\" I said. \"Tim went into hiding when the Oldeeds people were scheduled to be in the vicinity. What do we think of coincidences, Mr. Parker?\"\n\n\"We think they are worse than alibis, Commander.\" replied Teddy Parker adroitly, which made me laugh. Everyone else clapped.\n\n\"Touch\u00e9, Mr. Parker.\" I said. \"A distinct touch on your part. Here, hold this.\" I handed him the red crowbar. He admired it as I continued:\n\n\"So I wondered where Melissa Burris would be during these times.\" I said. \"And Mr. Burnham, for that matter. During Thanksgiving, Burnham's RV was up near Lake Amengi-Nunagen. During the Wildcats-Bulldogs game, the RV was at the RV park near Junction Station, like it always was., and it was there on June 22d and the other dates.\"\n\n\"Curiously,\" I continued, \"Melissa Burris was not at work on the weekend of the Wildcats-Bulldogs game, which was a busy time. She had time off over Thanksgiving, and curiously enough, she was not at work between June 21st and June 24th last summer. Even her cellphone didn't register a ping on any cell tower anywhere in the Nation. Her whereabouts on all these days... is unknown.\"\n\n\"It's known now... she was in that shelter!\" Rudistan said mischievously. Everyone laughed, then Rudistan said \"I'm just joking Commander; I know we don't have proof of that.\"\n\n\"All kidding aside...\" I said, \"... you are likely right. We are definitely going to be pushing her buttons about this. Okay, Myron, keep going.\"\n\n\"Just one other thing, sir.\" said Myron. \"Jeffrey Burnham said Tim never traveled anywhere together, as far as I can tell. But Tim did travel to Gun Shows to sell survival equipment, and I also found some chess tournament postings in Texas and Florida this Winter and Spring that he played in.\"\n\n\"Ahhh, interesting.\" I said. \"Anything else?\" Myron said there was nothing, and deferred to Mary.\n\n\"Sir,\" said Mary, \"I've been digging very deep into Jimmy and Jennifer Amberton of the Jason Rutledge class reunion murder case. I also looked into Susan Gurley, Kate Helmsley, and some of that so-called 'cool crowd'. First, Jason Rutledge and his father had some serious ties to the 'Church of Jesus Christ Christian'.\"",
        "\"Aryan Nations.\" I said.\n\n\"Yes sir.\" said Mary. \"Kevin Arnett also was involved with them, but was so dumb and out front about things that they didn't trust him, and shunned him completely after Jason died. Then we have Susan Gurley and a couple of other girls in her crowd. One was named Kelly Bolling, another named Karen Seymour. Twenty years ago, they and their parents were part of the Town & County Evangelical Church in Junction Station. It was very small, but the members there were allegedly very white supremacist. Captain Malone and his wife were members before migrating to First Baptist, and it was said that Pastor Westboro undermined and destroyed it, and brought some of their people, that he considered worthy, into his own church.\"\n\n\"The cool crowd had no black members, then, eh?\" said Cindy.\n\n\"That would be right, ma'am.\" said Mary. \"Now Jennifer Amberton, n\u00e9e Green, was one of the cool crowd, but her parents had no affiliations with these churches. Kay Helmsley also was not part of that, and of course Jimmy Amberton and his family did not have any such ties at all. Sir, do you want me to talk about their BigAerospaceCorp issues?\"\n\n\"I'll do that myself.\" I said. \"What happened there is that after Jason Rutledge was murdered, Jimmy and Jennifer Amberton both lost their jobs at BigAerospaceCorp. They were each given very large severance packages in exchange for not causing any problems and just keeping their mouths shut. The reason they were separated from the company is because their Top Secret clearances were revoked after the Rutledge murder.\"\n\n\"I have learned that Jimmy Amberton was targeted by Susan Gurley and her crowd, as well as Jason's father.\" I continued. \"But it may have backfired somewhat, as Jennifer also had her clearance revoked, which I'm not sure was intended. I can't tell you much more about it, but suffice it to say we're going to be talking to all of these people, the Ambertons, Susan Gurley, their families and friends... if we can find them: we are suddenly having problems finding Rutledge's parents.\"\n\n\"So what is your plan of action?\" asked the Chief.\n\n\"Interviews!\" I said. \"We are going to talk to these people... and here at the Station, with their lawyers present, if need be.\" I then outlined what we would be doing.\n\nPart 12 - Resisting Arrest\n\nI went into Bodycore Technologies and asked for Susan Gurley. The receptionist picked up the phone and made a call. \"Commander Troy of the TCPD is here to speak to Mrs. Gurley. Is she in?... Okay.\"\n\n\"Sorry, sir,\" said the receptionist. \"Mrs. Gurley is not in her office at the moment. Her assistant said she went out on a sales call and might not be back for some time.\"\n\n\"Where is that assistant?\" I asked in a harsh voice. \"I want to know where that appointment is.\"\n\n\"Sir,\" said the receptionist, \"at this point I must ask if you have a warrant?\"\n\n\"Oh, is that how you are going to play it?\" I asked, my eyes boring into the girl's. \"You do realize that my Captain of Detectives is also the owner of Town Fitness Centers, one of your big clients. When she severs all ties with Bodycore Technologies, your name will be cited as the reason for it.\"\n\nThe girl paled, and picked up the phone. \"I need Security to the front desk.\" A moment later two security officers arrived... who happened to be 2nd shift TCPD officers.\n\n\"Uh, is something wrong, sir?\" asked one of them.\n\n\"He's trying to invade this facility without a warrant,\" said the girl, \"and he's trying to intimidate me.\"\n\n\"Then I would suggest you do what the Commander says.\" said one of the security guards. The girl was shocked.\n\n\"May I help you?\" asked a man coming up from behind. \"I'm Russ Grimes, Chief Operating Officer.\"\n\n\"This policeman is bullying me, sir, and he does not have a warrant. And security won't remove him.\" said the girl.\n\n\"I'm looking for Susan Gurley.\" I said. \"This woman just told me she's on a client call, and if I find out that is not true, this person here will be arrested and will face up to ten years in prison for lying to a Police Officer. And if I have to get a warrant to see Susan Gurley and/or her assistant, so be it... I'll get that warrant, arrest everyone in this building, and get the evidence I need.\"\n\n\"I apologize for the inconvenience.\" said Mr. Grimes. \"Gentlemen, if you'll take the Commander to Mrs. Gurley's office. Meanwhile, I'll have a word with our receptionist.\" He ordered the girl to his office.\n\n\"Warner to Commander Troy.\" said my radio.\n\n\"Troy here, go ahead.\" I said.\n\n\"We've got her, trying to sneak out, sir.\" said Warner.\n\n\"Hold her there.\" I said. I looked up at Grimes. \"Looks like several of your people are going to be finding out about the legal system from the defendant side.\" I turned to the security guards. \"Okay guys, you are on duty as of right now. Go talk to Gurley's assistant, get a sworn statement from her on her interactions with Mrs. Gurley and where Mrs. Gurley was allegedly going. Sworn affidavit, and overtime for you both.\" \n\n\"Yes sir.\" said the guards, who moved out swiftly.\n\n* * * * * * * * * * * * * * * *\n\nSusan Gurley was hurrying to her car, having fled out the back door. Just as she reached it, she heard a voice behind her.\n\n\"Going somewhere, Mrs. Gurley?\" asked a voice. She turned around to find Joanne Warner behind her, wearing a light blue uniform shirt, dark blue skirt, and sensible black shoes. Her gun was still holstered, but she was ready to go for it.\n\n\"I have an emergency.\" said Susan. \"I have to go.\" She tried to get into her car. A TCPD cruiser pulled up and blocked her from backing out.\n\n\"Mrs. Gurley,\" said Joanne, who had drawn her gun, \"get out of the car, slowly, and keep your hands where I can see them.\"\n\n\"Are you kidding?\" Susan asked, pretending to be shocked.\n\n\"Get out of the car, slowly, hands where I can see them.\" ordered Joanne again.\n\n\"Based on what charge?\" Susan snarled. \n\n\"Attempting to evade Police, and lying to Police.\" said Joanne. Officers Hicks and Lydia Green got out of the Police cruiser and effected the arrest.\n\n* * * * * * * * * * * * * * * *\n\n\"This is absolutely ridiculous.\" said Nathan Masterson, attorney for Susan Gurley. \"Felony charges? Really?\"\n\nWe were in Interrogation-1. Susan had been taken through booking, and had called Masterson. Now Joanne and I faced him and his client. \n\nWe'd also issued a ticket summons to the receptionist of Bodycore Technologies, with a charge of Lying to Police, warning her that if she did not show up for the Court hearing, she'd be pursued, arrested, and held without bail until her felony trial. If she showed up, Paulina would offer a plea deal to a misdemeanor and a $100 fine, and next time she'd know better than to disrespect a Police Officer with an aching back...\n\n\"I do not appreciate your client attempting to run away from my Officer.\" I said. \"Very bad manners, at best. Felony, at worst. Now if your client cooperates, I might see my way to reducing the charges against her. If not...\" I let the sentence hang.\n\n\"If not... what?\" asked Masterson.\n\nI ignored him and turned to Susan. \"So, Susan, why were you running away?\"\n\n\"I need to talk with my attorney.\" said Susan.\n\n\"You've had fifteen minutes with him before we came in.\" I said. \"I'm out of patience with you. I'll ask a different question: ten years ago you worked your butt off to get Jimmy Amberton fired from his job and his clearance revoked. Why?\"\n\n\"My client reserves the right to invoke at any time.\" said Masterson. He then whispered something to Susan.\n\n\"I understand.\" said Susan. \"To answer the question, I believed, and still believe, he murdered Jason. I wanted to do everything I could to hurt Jimmy.\"\n\n\"What makes you believe Amberton did it?\" I asked. \"If you have any evidence at all, we would love to hear it.\"\n\n\"If I had evidence, you would've had it ten years ago.\" Susan said. \"It's what I believe, and many of us believe. Jimmy Amberton is slime. He's a piece of shit.\"\n\n\"Why the hate?\" I asked. \"What did he do to you to deserve this kind of hatred?\"\n\n\"He's breathing.\" said Susan. \"He's a slimy little scumbag. He always was. Just having to see that skinny little punk every day in school was disgusting.\"\n\n\"You hate him just for being who he was?\" I asked.\n\n\"Little shits like him are worthless.\" said Susan.\n\n\"In reporting him,\" I said, \"you got your friend Jennifer fired, too. How do you feel about that?\"\n\n\"At first, I was disappointed.\" said Susan. \"But then I realized that she'd married that slimeball, and she was getting what she deserved for staying with him.\"\n\nI said \"Mrs. Gurley, are you now or have you ever been a member of any white supremacy groups, or any organizations dedicated to the supremacy of whites over other ethnicities?\"\n\n\"What the hell?\" asked Masterson. I fixed him with a stare, then turned to her.\n\n\"Well?\" I asked.\n\n\"I'm not answering that.\" said Susan defiantly.\n\n\"Do you feel about blacks the way you feel about Jimmy Amberton?\" I asked Susan. \u2028\"Where is this leading, Commander?\" asked Masterson.\n\n\"Motive for murder, Mr. Masterson.\" I said. \"Racial hatreds, compounded by hatred of Jimmy Amberton, who is white but considered inferior by Susan... maybe Susan kills Jason to cover up she was pregnant with Jason's baby, and tries to frame Jimmy Amberton. She sure seems to hate him enough to do that.\"\n\n\"You are full of shit!\" exclaimed Susan. \"I've had enough of this shit!\" She turned to her lawyer. \"Can we go now?\"\n\n\"You don't seem to understand that you are under arrest, Mrs. Gurley.\" said Joanne. \"You will not be leaving until your hearing, and then only if bail is set.\"\n\n\"I'm going to get that expedited right now.\" said Masterson. \"Invoke now.\"\n\n\"I invoke my right to silence, and will answer no more of your questions.\" said Susan.\n\n\"Oh, that is unfortunate.\" I said. \"Officer Green, escort the suspect back to her cell...\"\n\nPart 13 - Ambertons\n\n\"Did she kill Jason?\" asked Joanne as she, Cindy, and I rode in my Police SUV into Nextdoor County.\n\n\"I doubt it.\" I said. \"One of the Ambertons... or both of them... did that. But proof may be impossible to find. It was only when I brought up the racial stuff that Susan got agitated. I suspect that's why she ran from us this morning, aided and abetted by that receptionist that may soon join her in a jail cell.\"\n\n\"And Masterson is Susan's lawyer.\" said Cindy. I did not rebuke her, though I would rather that connection not be made in front of Joanne.\n\n\"Yes, but that's for another time.\" I said, and Cindy got the hint. I continued \"Now we're going to talk to the Ambertons. This should be interesting. Let me lead the questioning.\"\n\n\"I wouldn't even know what to ask him.\" said Joanne.\n\n\"I know what to ask,\" said Cindy, \"but I'll definitely let the Iron Crowbar take the reins.\"\n\n* * * * * * * * * * * * * * * *\n\n\"All right, everyone.\" said Jimmy Amberton, \"Chapter Twelve. We've got one week to finish it.\" His students filed out, headed to the lunchroom. Hospital food is still worse, but I'm glad I didn't have to eat what the students were being served in the name of 'nutritional correctness'.\n\n\"Mr. Amberton,\" I said, walking into the classroom, \"may we speak with you for a moment?\" We were at Nextdoor County High School, where Amberton taught basic Physics. They had some neat stuff to do experiments with, I noted: air tracks that little metal strips slid along, to test for momentum; some lenses for optics and light-bending tests. Not bad for a smaller high school.\n\n\"Ah, the Iron Crowbar.\" said Amberton. He was medium height, slender, his hair, full beard and mustache red in color.\n\n\"This is Captain Ross and Agent Warner.\" I said. Joanne was an SBI Reserve Agent for the day. \"We'd like to talk to you about something from your past.\"\n\n\"If it's about Jason Rutledge,\" said Amberton, \"I should have a lawyer present.\"\n\n\"You have that right, and if you want an attorney, please call one now.\" I replied. \"But this is not about Rutledge, not directly. I want to talk to you about BigAerospaceCorp.\"\n\n\"We signed confidentiality pacts, non-disclosure agreements.\" Amberton said, knowing what I was going to ask about. \"So I can't talk about that.\"\n\n\"Mr. Amberton,\" said Cindy, \"this is so far a completely unofficial discussion. But if you try to hide behind 'legalities', we'll have to implement our own 'legalities'. Right here, right now, no one knows you said a word. But if we have to take the... next step... then you'll have to talk, and they will know you did.\"\n\n\"All right.\" said Amberton. \"But I'll stop anytime I think you're going too far.\"\n\n\"Fair enough.\" I said. \"Mr. Amberton, you were separated from BigAerospaceCorp after your clearance was revoked, is that not right?\"\n\n\"Yes.\"\n\n\"What happened there?\" I asked. \"Chronologically.\"\n\n\"We came to the reunion, almost ten years ago.\" said Amberton. \"You know what happened there. It took us a few days to get back home, until we told the Police to either arrest us or let us go. After we got back home and returned to work, a couple of days later we were called into the office of the Vice President for Human Resources. A lawyer was with him. The VPHR said that a flag had been placed on our clearances, and we could no longer work there. They tried to hustle us along and out of there, but I started objecting, asking why, getting no answer, then refusing to sign any paperwork and saying I was going to get a lawyer myself. At that point their lawyer offered us a severance package.\"\n\n\"How much?\" I asked.\n\n\"Five million each.\" said Amberton. \"Now I know that Jennifer actually got ten million, half of which she put in an account she doesn't realize I know about. But that's the gist of it. We took the offers.\"\n\n\"How did your wife react during that meeting?\"\n\n\"She was angry, like I was.\" said Jimmy Amberton. \"She might've been the first to bring up getting our own lawyers. She definitely said she was not going to let it ride, and she and her family would be contacting our Senators, and things like that.\"\n\n\"They didn't tell you why your clearances were revoked?\" I asked.\n\n\"At first they didn't even say they were revoked, only flagged.\" said Amberton. \"They came out a minute later saying it was due to the Rutledge death, and several people had contacted them about me being under suspicion for it.\"\n\n\"But not Jennifer.\" I said.\n\n\"They said they were treating us equally as suspects, and that was the word they used, 'suspects'.\" said Amberton. They didn't say much more, but the lawyer told us that if we did not take the severance packages and sign the gag order, the FBI would be 'all over us like white on rice'.\"\n\n\"Do you know who called them about you?\" I asked.\n\n\"Oh sure.\" said Jimmy. \"Susan Gurley. Kevin Arnett. Those were the two I found out about. Probably several others, though; when our clearances were formally revoked, my lawyer got a redacted copy of the 'investigation' of it. Seven names were on it, all blacked out.\"\n\n\"Why would Susan want to harm you and Jennifer?\" I asked.\n\n\"She only went after me.\" said Amberton. \"She hated me in high school and had people pick on me a lot, especially Jason and Kevin.\"\n\n\"Jennifer didn't pick on you?\" I asked.\n\n\"No, she was dating Jason but pretty much left me alone.\" said Jimmy. \"She wasn't mean-spirited like Susan was... and still is.\"\n\n\"Mr. Amberton,\" I said, \"did Susan ever make any statements that would be considered racial or racist in nature?\"\n\n\"Oh did she ever!\" said Amberton. \"There were almost no blacks in County High School back then. She called the few that were the n-word to their faces. So did Jason. A couple of the black students went to the principal about it. The next day they got the shit beat out of them by persons unknown, and were told to 'remember their place'. They transferred to Booker T. Washington High School after that.\"\n\n\"Jennifer wasn't like that?\" I asked.\n\n\"No.\" said Amberton. \"Heck, Jennifer was dating a black man in college before she and I began dating.\"\n\n\"You said Jennifer was hiding money from you.\" I said. \"And you have to know that your youngest child was fathered by another man, since you had a vasectomy. Why do you stay with her?\" The question was unexpected, and meant to rattle Amberton... but he rolled with it perfectly. \n\n\"We've talked through all that.\" said Jimmy. \"We've had some rough spots, but we moved past them. Jennifer is a beautiful woman, and men hit on her all the time. Maybe she's indulged a time or two, but Jennifer loves me and I love her, and we love our children and are going to raise them in a loving, two-parent environment. And that's really all I'm going to say about that.\"\n\n\"So once you were fired from BigAerospaceCorp,\" I asked, \"did Susan Gurley and the others leave you alone?\"\n\n\"Not really.\" said Amberton. \"They kept me from getting a couple of good jobs. I got this teaching job somewhat under the radar. I don't think Susan knew about it until it was too late.\"\n\n* * * * * * * * * * * * * * * *\n\nWe drove southwest from Hillside on State Highway 142, the Buford Highway. There was a lone subdivision of modest homes built in concentric circles around a lake, which was called Norse Lake.\n\nComing to a modest home on the backside of the subdivision, on the 'outer ring', such as it was, we pulled into the driveway and went to the door. I let Cindy lead the way.\n\nA gorgeous blonde in her early 40s answered the door. She was easily as beautiful if not more beautiful than Marie and Cherie Ward had been. She was 5'5\" tall, her perfect hourglass body toned by exercise, her legs shapely and gorgeous, especially in the high heels she was wearing (yeah, I tend to notice women with great legs).\n\n\"Mrs. Amberton?\" asked Cindy. \"I'm------\"\n\n\"I know who you are.\" said Jennifer Amberton. \"Come on inside.\"\n\nThe house was furnished fairly well, and it was clear that kids lived here. And as we came into the den, I saw three children, ages 15,14, and 9. The nine-year-old boy looked more handsome than his 15-year-old brother and 14-year-old sister, who showed some of their father's plain, nerdy looks.\n\n\"Kids,\" said Jennifer, \"go to your rooms while I talk with these Police Officers.\"\n\n\"Wow, are you really the Iron Crowbar?\" asked the oldest boy.\n\n\"That's me.\" I said. I handed him the red crowbar and he looked at it excitedly.\n\n\"Give it back and go to your room.\" ordered Jennifer Amberton. The boy did so, saying \"Wow! Thanks for letting me hold it, Mr. Crowbar!\" I just grinned.\n\nThere was a sliding glass door next to the fireplace on the back wall, which was facing south and therefore letting in the bright light of the sun. \"Have a seat.\" Jennifer said, pointing us to the sofa which faced the door, while Jennifer took an easy chair nearer the door, putting our faces in light and hers in shadow. She's good, I thought to myself. Very good.\n\n\"Would you mind terribly if I sit in this hardback chair?\" I asked. \"I just had back surgery.\"\n\n\"Uh, sure, of course.\" said Jennifer. Now I could at least see half of her face, which was very attractive under her blonde mane of hair.\n\n\"We're here to ask you about what happened ten years ago.\" said Cindy.\n\n\"Uh, I might have to have a lawyer present if you're going to talk about Jason's murder.\" said Jennifer.\n\n\"You can call one,\" I said, \"but we wanted to talk about your dismissal from BigAerospaceCorp.\"\n\n\"We have a non-disclosure about that.\" Jennifer said.\n\n\"Mrs. Amberton,\" I said levelly, \"I am already aware of the contents of the severance packages, which I obtained through Government contacts. What I want to know, ma'am, is why you were dismissed when your husband was the only one that was turned in after the Rutledge murder.\"\n\n\"I don't know.\" said Jennifer. \"They shouldn't have fired either of us, and I wanted to get a lawyer and fight them like hell. But Jimmy said we should just take the severance and go from where we were not wanted. He made sense; he often does about things like that. So I took the millions also, and we left that place.\"",
        "\"Did you like working there?\" I asked.\n\n\"It was okay.\" said Jennifer. \"But imagine a whole bunch of single nerds seeing a woman like me come in, then seeing my husband is like them. I could've won ten sexual harassment lawsuits against some of them and the company itself. They hated Jimmy for having me as his wife, so I would get cuddly with my husband in front of them. That probably was one reason BigAerospaceCorp was so eager to get rid of us when the opportunity came.\"\n\n\"Yet they paid you some pretty large severances.\" I said.\n\n\"Yes,\" said Jennifer, \"but they really didn't have a choice. They paid what they had to in order to get us out of there. And as far as I'm concerned, they got a bargain.\"\n\n\"So you stuck with your husband, even though you had the financial means to leave him?\" Cindy asked.\n\n\"Yes.\" said Jennifer. \"I love my husband. Despite what you might think, we have a good marriage and we're raising our children together like the good parents we are.\"\n\n\"Yet you did not tell your husband of the extra severance money you got.\" I said. \"And I'm willing to bet you not only did not tell your husband you were impregnated by Jason Rutledge until you had to, you haven't mentioned his little trust set up for your youngest child.\"\n\n\"My affair with Jason ten years ago was a mistake.\" Jennifer said. \"But I'll never regret having my child. My husband understands, and treats him like our other two children. As to the money... every woman that is smart will have some kind of backup plan. Divorce is too prevalent to not consider the possibilities.\"\n\nI saw Cindy's face change ever so slightly. Joanne's face showed nothing; she was getting good at this game, I thought to myself.\n\n\"Why did you get more severance money?\" I asked.\n\n\"Probably because I fucked the VPHR's balls off once a month while we worked there.\" Jennifer replied. \"And the CEO was having me bareback even more often; I was lucky I didn't get pregnant by him. As I said... they got a bargain for my silence.\"\n\n\"Changing the subject: when you were in high school,\" I said, \"was Susan Gurley a racist? And was Jason?\"\n\nJennifer showed no surprise at the question as she said \"Yes. Especially Susan. But Jason was, too. I once taunted him that I should try a black man to see if they were better in bed than he, Jason, was. Jason beat the shit out of me. Of course he didn't get into any trouble; and the word was that I had a 'bicycle accident'.\" She made quotes with her hands on the last part. \"But it had consequences: I knew then I wasn't going to marry Jason.\"\n\n\"Ladies, any questions?\" I asked my fellow Officers.\n\n\"Just one, ma'am.\" said Joanne. \"Did Jason ever try to get you to divorce Jimmy and consider marrying him, Jason, in the years after you graduated?\"\n\n\"Oh yes.\" said Jennifer. \"When we had our relationship for a few weeks ten years ago, he wanted me to break up with Jimmy and marry him. I told him that even if I broke up with Jimmy, I wouldn't rush back into marriage, and certainly not with Jason...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Great interviews, guys.\" I said as we continued west on State Highway 142. \"What were your takeaways?\"\n\n\"I'm still not understanding why Susan thought she could turn in Jimmy without Jennifer also getting in trouble.\" said Joanne from the backseat.\n\n\"Think about it, and answer your own question.\" I said.\n\n\"I'm not really getting that, either.\" said Cindy.\n\nAfter some moments of thought, Joanne finally exclaimed \"Oh, I get it! Susan did want Jennifer to get fired, too.\"\n\n\"That's Iron Crowbar thinking, there.\" I said. \"Explain to Captain Ross your chain of reasoning.\"\n\nJoanne said \"I think Susan wanted Jason for herself, and even let him impregnate her. But Jason wanted Jennifer, and always did. I think the others involved just wanted Jennifer to leave Jimmy, but Susan didn't care about that. I think Susan turned both of them in. And they were both fired, and stayed together.\"\n\n\"But how does that matter, since Jason was dead?\" Cindy asked.\n\n\"Because Susan knew that Jennifer killed Jason, and wanted revenge.\" Joanne said. \"Jennifer enticed Jason to go to the practice field with her, for sex. And after they had sex, Jennifer got out the gun she secreted, shot Jason, then went back to the party alone.\"\n\n\"Outstanding!\" I said. \"Very well reasoned. And almost correct.\" I said.\n\n\"Where did I go wrong?\" Joanne asked.\n\n\"Only in the assertion that Jennifer shot Jason, which I have doubts about.\" I said. \"I do think you're right that Jennifer took Jason to that practice field and they had sex. Or sex was in progress when Jimmy showed up. I think he shot Jason with the hidden gun with the Coke-bottle silencer.\"\n\n\"My only question,\" I continued, \"is if Jennifer enticed Jason down to be shot by Jimmy, and therefore was in collusion with him, or if she was innocent and as surprised as Jason was to be confronted by Jimmy while they were coupling. And my answer to that question... is that they colluded, and Jennifer enticed Jason to his death. Gave him sex, though, so it was a heck of a way to go.\"\n\n\"Wow.\" said Cindy. \"I wasn't seeing that at all.\"\n\n\"It was really good, Joanne,\" I said, \"that you saw that Jennifer had to have been turned in on purpose, so that her clearance would be revoked as well as Jimmy's. Susan betrayed her friend. And maybe not just because of Jason's death, though revenge was the primary reason. She's a white supremacist, and took revenge for the death of a fellow white supremacist. And maybe Jimmy and Jennifer killed Jason not out of jealousy or money... but because they were operatives that were assigned the task of taking Jason out.\"\n\n\"Okay, this where it gets deep.\" Cindy said. \"So what led you to that?\"\n\n\"BigAerospaceCorp is a Government contractor.\" I said. \"They have to follow rules similar to the Government's for getting rid of someone. And those severances! Five and ten million? Geez, I didn't get much more than that for being tortured and nearly being murdered by the CIA------ oh, you did not hear that, Joanne.\"\n\n\"Hear what, sir?\" asked Joanne. Damn, she was getting good at the Game, I thought to myself.\n\n\"Thank you.\" I replied. \"So it stands to reason that the Ambertons were being paid through a backdoor channel for the killing. The problem was that the White Supremacists wanted revenge for the killing of Jason, and so the Ambertons were put on the BEEKEEPER list. Exclusive company, I daresay. And they're lucky to be alive.\"\n\n\"Why weren't they killed?\" Cindy asked as the five-mile no-stop sign for the Asylum whizzed by us.\n\n\"Westboro.\" I replied. \"Killing them right after Jason's death would have opened cans of worms for him, in the form of light and publicity in areas he was operating. And who knows, maybe Jennifer Amberton fucked him. After Westboro died, Casey B. Walker came after me first, instead of them... and got wiped out himself.\" Cindy smiled, knowing just who had wiped out a large portion of Walker's highly-trained agents...\n\nPart 14 - Envisioning The Truth\n\nCindy was suitably surprised when I turned onto the road leading to the World Headquarters of 'The Vision'. Arriving at the gate, we were immediately admitted, and we parked in the front parking lot. We were greeted at the door by Dr. Eckhart's aide Tommy.\n\n\"Right this way, everyone.\" said Tommy. \"Dr. Eckhart is expecting you.\" He led the way through the main building and onto the back patio, where a long table was set up for lunch. Twenty acolytes, all college age, the girls in blue shirts and the boys in red shirts, all in black slacks, were there. And dressed in his usual khaki pants, light blue button down shirt and dark blue blazer was the man himself, the Founder and Great Leader of The Vision, Dr. P. Harvey Eckhart.\n\nEckhart hugged his daughter Cindy warmly. And then, per Vision tradition, everyone did not shake hands but hugged everyone else. I was never one for hugging, but was told once by Eckhart's trainer Dennis to 'commit' to my hugs. So I hugged everyone, boys and girls, like I meant it, and I felt better afterwards. I think giving Bowser and Buddy skritchins is even better, but I digress...\n\n\"Ah, we have another guest.\" said Eckhart. From inside the building, out popped Callie Carrington.\n\n\"Callie!\" said Cindy happily.\n\n\"Hey, baby.\" said Callie. She and Cindy hugged, then she gave Cindy a kiss right on the lips. Then the hugging with everyone started again as everyone sat down to lunch. Eckhart was on one end, and he had me sit at the other end of the table. Joanne was to my right, Cindy was to Eckhart's right and Callie to his left. To my left was a gorgeous light-skinned black girl named India.\n\nEckhart stood up, and gave one of his 'Visionary' lessons. \"Ladies and gentlemen,\" he said, \"how many times do we sit down to our meal, thinking of other things, talking with other people, and not paying hardly one bit of attention to what we are putting into our bodies. Today, during this meal, I want you to concentrate fully upon the food you are eating, the drinks you are drinking. I want you to taste the food, savor the flavors, feel the food beginning to nourish your glorious bodies, keeping your minds cleared and thinking of nothing else...\"\n\nHe's right, you know, I thought to myself. I began eating the light repast of House Fried Rice, a small pork medallion in a savory sauce, buttered toast, and a thick liquid drink that was fruity and not unlike a smoothie. I concentrated solely upon the flavors of the food, not paying (much) attention to the outside world. And it was a very interesting experience. Maybe I should have Carole try it with the string beans, I thought, then rebuked myself and concentrated on the flavors, and on the food...\n\nAfter the lunch was over, the acolytes talked about the experience. I noticed Cindy and Callie talking to Dr. Eckhart, but they were clearly paying the most attention to each other. Meanwhile, I talked to India.\n\n\"I began learning chemistry because I was cooking meth.\" said India. \"Fortunately, Dr. Eckhart found me before the Police did. He helped me get clean. And then one of my teachers at Booker T. Washington High had me do a research project on George Washington Carver, and all he did with agricultural chemistry.\"\n\n\"I've had to go to Junior College because my grades didn't catch up in high school.\" said the 20-year-old young woman. \"But I've been accepted to the University, and I'm going to major in Chemistry. I want to be the next George Washington Carver.\"\n\n\"That's awesome!\" said Joanne.\n\n\"And if that doesn't work out,\" I said, \"you'll have a backup plan... you might even become a Police Commander.\"\n\n\"You were a Chemistry major?\" asked India, in seeming awe.\n\n\"Oh yes.\" I said. \"And I worked in a Crime Lab, and am still certified to run tests in a crime lab. But my career took some strange turns. May I offer you one piece of advice?\"\n\n\"Sure, I'd love it.\" said India. I felt as much as saw her eyes on me.\n\n\"The moment you walk onto the University campus,\" I said, \"commit to earning a full Ph.D. in Chemistry. Don't stop short, get that full Ph.D. no matter how hard it is and how hard you have to work. If you find that's not for you, and that would be okay, then double major in Chemistry and something else. The reason is because a Bachelor's Degree in Chemistry will get you jobs for ten years and not much longer, and you'll find yourself hitting a pay ceiling pretty quickly. A Ph.D. will get you a long career, maybe some patents, and you'll have more fun.\"\n\n\"Why didn't you do that, sir?\" asked Joanne.\n\n\"If I had it to do over again,\" I said, \"I might just have done that. But I had the other route: my 'double major', such as it was, was ROTC and a military commission, which ultimately led me to Police work. But my message here is to go as far as you can, and don't stop short.\"\n\n\"I hadn't thought of that, but you're right.\" said India. \"I'll do that.\" And she would...\n\n* * * * * * * * * * * * * * * *\n\nAfter lunch, Dr. Eckhart came up to me and said \"Young Donald, why don't you and I go sit on that bench by the River and have a few words.\"\n\n\"Sure, sir.\" I said. As we began walking, Eckhart's bodyguards began to go with us. He turned to them.\n\n\"Stay here, my friends.\" he said. \"I will be perfectly safe under the guardianship of the great Iron Crowbar.\" With that, we walked down to the River and sat down on the bench there, alone.\n\n\"So, my young nephew,\" said Eckhart, \"how was the experience of your meal?\"\n\n\"Very good, and very interesting.\" I said. \"It's amazing how the flavors were when I concentrated on them.\"\n\n\"Yes, indeed.\" said Eckhart. \"How is your back, by the way?\"\n\n\"Not bad.\" I said. \"I'm getting in some good exercises to help strengthen it, though backs are like heart muscle: they never quite heal completely after being damaged. But I'm learning new martial arts that aren't too tough on my spine.\"\n\n\"Splendid!\" said Eckhart. \"As part of my Enlightenment Camp, I have a sensei teach the spirituality of the forms of Aikido. I'm having my acolytes learn it much more deeply.\"\n\n\"Including your daughter?\" I asked. \"Woe betide her opponents in the Police Boxing Matches.\"\n\nEckhart barked a laugh. \"Yes, my daughter is a determined woman. As is this wonderful young woman she is dating now. Just between us, young Donald, young Callie is a much happier and better-adjusted woman than that Ms. Stiles was.\"\n\n\"And Callie is here today to talk with you about measures to protect your daughter if the need arises.\" I said.\n\n\"Not much gets by you, young Donald.\" said Eckhart with his sinister-looking smile.\n\n\"Including the other reason you had Callie visit today.\" I said. \"You want Cindy to take over The Vision after you're either gone or unable to run it yourself.\"\n\nEckhart peered at me, and I felt the mental power of the man reaching into me. \"And how do you feel about that, Donald?\"\n\nI shrugged my shoulders. \"Cindy is more like a sister and best friend than my cousin. I want her to be happy, above all else. If she's happy working with us in the TCPD, that's great for me. If she'd be happier running The Vision, or eventually being the leader of it and that person on stage, then so be it.\"\n\nI continued: \"You know.. the FBI offered her a job with them, and that had been her childhood dream. And if she'd gone with them, I'd've been happy for her. But she realized that in the here and now, the TCPD was where she wanted to be. So I'm happy for her for that decision.\"\n\n\"She chose to stay with you more than anything else.\" said Eckhart. \"What about you, young Donald? You'd be an incredible presenter and teacher on my stages, changing lives for the good in many more ways than being a Police Officer, however noble that profession is.\"\n\n\"I am where I am supposed to be, Uncle Harvey.\" I said. \"I am doing what I am meant to be doing.\"\n\n\"Yes. You are.\" said Eckhart. \"But in your older age, consider what we are doing here.\" He looked around. \"Well, I guess we'd best get back to our friends, before my bodyguards tear themselves apart with worry. Ah yes, the information you wanted of me.\" He handed me a piece of paper.\n\n\"Jason Rutledge's father, James 'Rusty' Rutledge, went to the Boston area after his son died. He actually lives in New Hampshire, very near the odious Wallace Bedford. You will not be able to pry him out of Bedford's compound; it is as closely guarded as The Vision here.\"\n\n\"Thank you.\" I said. \"What happened to his wife?\"\n\n\"It would seem she vanished from the face of the earth.\" said Eckhart. \"I could not find out if she died, left her husband, or if she's still with him and just has not shown herself for years. But my best operatives could find no trace of her after she left your County with her husband...\"\n\nPart 15 - Slapped Back\n\nWhen we got back to Headquarters, I was called into Chief Moynahan's office. I knew I was in trouble when he did not invite me to sit down.\n\n\"Judge Harry Nance released Susan Gurley on her own recognizance.\" said the Chief. \"He also refused to force her to be ankle-monitored, and accepted Masterson's request for a restraining order against the Police, and against you personally. We cannot maintain any tails on her, and must go through her lawyer to talk to her at all. And you can't speak to her at all without Judge Nance's personal and explicit permission.\"\n\n\"That's a load of crap.\" I said. \"Anyone pushing back on that?\"\n\n\"Ms. Patterson is taking the restraining order parts to Judge Folsom, the chief Judge.\" said Moynahan. \"But even if that part gets lifted, -I- am telling you to not go anywhere near that woman.\"\n\n\"Sir, she------\" I started, but my boss brought down the hammer.\n\n\"Commander, let it goooo.\" said the Chief. \"Others will handle this. Do I make myself clear?\"\n\n\"Yes sir.\" I said.\n\n\"Also,\" said the Chief, \"that receptionist was fired from her job and legal beagles are already at her doorstep, howling to get her to sue you. The Inspector General has the statements of the security guard Officers that just happen to be TCPD Officers as well, and they backed you up completely. They also did find that there are discrepancies in what she told you and what Mrs. Gurley's assistant told the Officers. So I don't fear for you, there.\"\n\n\"What I do have an issue with,\" said the Chief, \"was the unprofessional way you handled that situation. If things are coming to the point where you have to threaten and browbeat a young girl and then file charges against her, then you need to reconsider what you are doing. You're a Town & County Police Officer; you need to show the People we protect and serve respect, and maybe even restrain yourself, even if they aren't cooperating with you. Is that clear?\"\n\n\"Yes sir.\" I said, taking my punishment stoically.\n\n\"Good.\" said the Chief. \"Now go to your office and get your bloodwork done. Dismissed.\" I scooted out quickly.\n\nEntering my office, I saw what I expected to see: Laura waiting for me. Without a word, I sat down in my chair and held out my left arm. She took the blood samples.\n\n\"So, how were you feeling this morning?\" my wife asked.\n\n\"Not bad, really.\" I said. \"But the Chief was right: I did not handle that very well. By the way, I see now why Callie was not at work in your office... you've here waiting for me.\"\n\n\"True.\" said Laura. \"And it was a good opportunity to talk to the Chief, about routine Police Psychiatrist things, and get some of that work done. And I'm sure you figured out why Callie was at 'The Vision' today.\"\n\n\"Plotting with my uncle to protect Captain Ross.\" I said. \"So you also think there is danger to her?\"\n\n\"Darling,\" Laura said, \"the minute you discovered that BEEKEEPER is still active, the shit hit the fan in Washington. You are close to winning, but the 'Mr. C.' cell is now a cornered rattlesnake, ready to strike out at you if they can. Yes, there is danger, and immense danger at that...\"\n\n* * * * * * * * * * * * * * * *\n\nSaturday, May 6th, 9:00am. Four boxing rings were set up in the Police Headquarters gym. In the far corner, closest to the locker rooms, Cindy Ross entered the ring, dressed in white plastic armor, a blue football helmet, and a crowbar painted international orange. Her opponent was Patrol Officer Jeremy Hatch, wearing armor, a red football helmet, and a bright chartreuse-yellow crowbar.\n\nAfter this match, the very first, the other rings would be used for Freestyle combat, while this ring would be used for actual boxing. I was forbidden to be a referee; the Chief told me I was not to be inside a ring while a match was taking place. So I was helping with scoring and 'supervising'.\n\nWatching Cindy's match with me was Todd Burke and Teresa Croyle. Teresa was awaiting the results of a play-in match.\n",
        "It was not pretty. Hatch barely passed the Police Academy, graduating lowest in his class. His physical skills were barely adequate for street duty, while Cindy Ross was a double-black-belt and on a mission. Ten seconds after the referee said \"Box!\", it was over. Two solid crowbar blows to Hatch's midsection then back, and a hard takedown.\n\nOnce it was over, Todd said \"Uncle Don, can I talk to you for a minute?\"\n\n\"Sure.\" I said. \"Let's go to my office.\"\n\nIn my office, Todd took a hot chair while I sat in my Command Chair. I turned on the anti-bugging device, just in case.\n\n\"Uncle Don, Seth Warner came to me.\" said Todd. \"He was pissed that you showed up at that meeting with his grandfather.\"\n\n\"Perhaps he did not realize the danger he and his wife were in, especially from his sister Karen.\" I said. \"When I got there, my Officer had four laser dots from King's guards's guns trained on her.\"\n\n\"I did tell him that you were there for his wife's safety.\" Todd said. \"He said the situation could've been handled better, that Mr. King was not going to have any shooting in his suite.\"\n\nI just shook my head, not knowing what to say. I was right, and Todd and Seth were wrong... dead wrong. But what could I say at this point?\n\nTodd leaned forward, as if sharing a secret. \"Look, Uncle Don,\" he said, \"We brought Seth in when we bought out his father's, well, his step-father's company. I knew of his sister and his mother, and I kept my eyes on him. So far, he's been straight-up. He and Barry Oliver have become good friends. Seth loves his wife more than I can tell you. So while I understand your concern about him meeting with Conrad King, I'll just tell you that I trust him until he gives me reason not to, and for the sake of his wife, your Detective, I think you should, also.\"\n\n\"I hear you.\" I said. \"But there is something else, and the real reason I went out there. I don't think Seth realizes just how bad his sister Karen has become. He still trusts her; he is blind to her Dark Side, for lack of a better term. You also may not realize how bad Karen Warner Harlan is, and Conrad King himself is a snake pretending to be a civilized old man.\"\n\nSeeing I wasn't getting through, I said \"Todd, as you know, Eleanor Burke shot your brother Ned dead right in front of his girlfriend, Goth Girl Kathy. And anyone with brains more than a Betta fish knows who was behind Eleanor's actions. Yet... I would trust Goth Girl Kathy with my life and safety before I would trust Karen Warner Harlan.\"\n\n\"That bad, huh?\" Todd said, trying to joke. But maybe he was finally getting it.\n\n\"Yes. That bad.\" I replied, dead serious, my eyes boring into my nephew's. \"And you can tell Seth, or choose not to, one other thing: his wife's happiness is his responsibility as her husband. But while she is one of my Detectives, her life is my responsibility, and I will never back down from that, no matter if it irritates him.\"\n\nTodd nodded.\n\n\"Okay,\" I said, \"now, there is something I need your help on...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "drama",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/safe-room-ch-03"
}