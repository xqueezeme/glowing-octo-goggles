{
    "title": "Roommate - Huge Changes Ch. 03",
    "pages": [
        "I sat there waiting for a response from Mr. Huge. I was ecstatic, worried and still got the buzz of alcohol. It had been a maybe a minute since I sent my response but it felt like and eternity.\n\nThe message I had sent was. \"That was the best night I have ever had! Loved it! I hope I was ok?\" as a response to the cum guzzling evening I had with his monstrosity of a cock.\n\nI was bobbing my heels of my feet into the bed in excitement like a school girl that had just received a message from their crush. Then a new message appeared on my screen and my heart started racing yet again.\n\n\"It was good. I have never done anything like that before. Glad you liked it.\" Read the response from the owner of the biggest cock I have ever seen.\n\nIt was good? Well, thats better than bad but still my heart hurt a little bit. It was at least good! I need to do this again. Also! I was his first glory hole experience. This was something new for both of us. But with that huge steel pipe of a cock I was most definitely not his first blowjob. I could still taste the delicious creamy cum in my mouth. Just remembering how the cum filled my mouth. How tasty and thick it was. How hard it was to swallow because of the viscosity but how I did it so willingly. I started to pitch a sore little tent when I continued to type.\n\n\"Well so would you like to do it again?\" I sent while trying to hold my feet still.\n\nI laid there with excitement. After a while of waiting I flipped over to lay on my stomach and covered my face with my pillow. My turgid member poking into the mattress. It was still sore from my previous nightly orgasmic events. It caused me to raise my butt into the air. That caused me to blush furiously and peak my eyes up from under the pillow. I was staring into my headboard while previously unthinkable thoughts popped into my head.\n\nWhat if I could satisfy him another way? Show that I was worth something? I could feel my butt clench in fear and excitement. While bracing myself against the bed with my left arm, my right hand slowly made it's way towards my firm butt. One of the only things I have ever gotten complimented on my Sarah must be at least decent, right? It was smooth and hairless like most of my body. I squeezed it tightly. Oh it was firm and and it was pretty relaxing to squeeze. I brought one finger close to my smooth pucker. A slight moan escaped my lips. Then a slightly bigger one once the tip of my finger entered me. The screen on my phone lit up again! I pulled myself out and shivered. Reached for the phone and flipped to my back again.\n\n\"If you can follow my rules.\" Read the message.\n\n\"Well yes! I am up for that\" I said while blushing. He was a little intimidating\n\nI was nervous but all I could do is stare at the screen as I was awaiting a message. It took a while. Maybe he didn't like my enthusiasm.\n\n\"First no names, pictures, selfies or anything that can identify each other. I want to keep that to myself as I think you might want to as well. Secondly we will only meet at that bathroom in The Secret garden\" He responded.\n\nI felt a little dejected. But yeah, I don't feel ready either. I couldn't imagine myself saying to Dan \"Hey this is my boyfriend Mr. H\"... well not yet. Yeah that would be a little embarrassing. Maybe I wasn't really comfortable with who I am yet. Calm down Ray. Just give it time I told myself again.\n\nAfter typing and rejecting several messages I settled on \" Yes! So when would you like to meet up again?\" then hit send.\n\n\"How about this Monday at 12 PM?\" He responded.\n\nThis was so exciting. It felt very... kinky. Just messaging casually about when we we're going to do dirty things. My heart was racing a bit. Felt my cheeks heat up. And my tender dick rise to the occasion. I could still smell him on my breath every time I opened my mouth. Shit I work on Mondays though. Wait I got an hour lunch. Would that work? Should I skip eating to suck dick? Yes!\n\n\"Well, I work on Mondays but I could do my lunch at 1pm. Does that work for you?\" I sent with some hesitation.\n\n\"That works. I will arrive 30 minutes earlier. Don't arrive before 1pm. Looking forward to Monday.\" He answered surprisingly fast.\n\nFirst I didn't think my heart could race any faster but it did. I was squirming in my bed my hand in between my legs. I typed with my free hand with much difficulty.\n\n\"See you on Monday Mr. Huge.\" I responded with great difficulty.\n\n\"Talk to you later Pear :)\" He responded even faster.\n\nA little smiley face! I started to rub my sore little dick faster. He liked it! I started imagining the huge throbbing cock in my mouth as I picked up the pace. How it was gushing it's pre-cum into my mouth. Filling it to the brim!\n\n\"Auuuuggh!\" I moan out loudly as cum almost clear liquid into my pants.\n\nFuck that felt good. I could feel my balls ache with each quiver of the lingering orgasm. Damn I forgot I went commando after the encounter with Mr. Huge and his massive meat. Shit! I slapped my hand over my mouth! Did Ann hear me? Nooo can't be. There is two walls in between us and they're pretty thick. I couldn't even hear Dan when Sarah stayed over every now and then. Unless I was in the living room! I pulled my pants off, wiped my crotch and threw it into the hamper. I fumbled through my little pile of clean clothes in the corner and hurriedly put on a pair of sweatpants when I found them.\n\nI opened the door slowly. Nobody there. Phew I am safe. Well why not get something to drink before bed? I waddle towards the kitchen. The apartment was dark but you still got a lot of light from the city through the big window in the living room. It was a beautiful sight a lot of high-rise buildings creating towers of light in the night and the moonlight was reflected by the sea in the far distance. Yeah this is why I love this apartment.\n\nI opened the fridge door and grabbed a soda. It let out a light \"pssh\" noise as I popped the tab. It was a refreshing cold cola but I felt a little bit sad as the last lingering taste of him was washed away. I let out a sigh. Suddenly there was someone who touched my shoulder.\n\n\"AAAaaahh!\" I screamed as I made a jump away from the perceived danger.\n\n\"Hihihi.\" She giggles as I come chest to face with my cute shorty roommate.\n\n\"Well, you scared half to death. Happy with yourself?!\" I said with a little too stern voice.\n\n\"Yupp! You also got thirsty after tonight's escapades?\" She giggled as she reached for soda in the fridge.\n\n\"Yeah and I couldn't really sleep.\" I answered while scratching the back of my head.\n\n\"Me neither. I feel like I have sobered up. S-sorry for taking so long in the bathroom.\" She stuttered while looking down on her feet.\n\n\"Tha'ts alright, Ann. We all had our first time. You'll get used to it.\" I answered while sipping on my soda.\n\nShe blushed even with the poor lighting in the room I could see it. She looked so cute in her white thick night gown. Made her kinda look like a cute medieval maid. Her long blonde hair cascading down her shoulders.\n\n\"Y-yeah the first time. I will get used to it.\" She stammered again making her face even redder.\n\nShe was adorable. My face blushed a little bit as well.\n\n\"Well, I'm going to head to bed. G'night again Ann.\" I answered and walked past her.\n\n\"Good night Ray!\" She cheered after me with a face still red.\n\nI walked back to my room and was almost asleep before I hit the bed. Several hours later a light knocking on my door woke me up.\n\n\"R-ray are you awake?\" an voiced through the door, I could barely hear her.\n\n\"Uh.. uh... well yeah I am now!\" I shouted back with irritation.\n\n\"Yeah sorry! W-would you like some breakfast? As a thank you for taking me to the bar yesterday.\" She answered with a little bit more oomph.\n\nI got up out of bed put on my sweatpants and pulled open the door.\n\n\"Eeeep!\" Escaped her lips as she held up her hands to her face.\n\n\"Sounds great thanks.\" I responded to her previous question with a satisfied smile.\n\nWe sat down and had bacon with scrambled eggs in the living room. She had made some buttered toast on the side. It was delicious. She would've made a great girlfriend. We spent the rest of the day just watching TV, talking and playing some co-op games together. She was a blast and cute. I was growing more and more impatient and looking for an excuse to leave and spend some time alone with my thoughts and phone. The memory of Mr. H still strong in my mind.\n\n\"Look at that guy he's a giant!\" Ann exclaimed while we were watching a fantasy medieval show.\n\nI had barely paid attention to the show as my mind was elsewhere but that got my attention. I looked closer and the guy was huge. Clad in heavy plate. Towering over the other men large men making them almost look like children. He had broad shoulders and bulging arms. Then I started imagine that was how Mr. H looked like. Me standing below this huge armored frame. His bulge clearly visible in his thick linen pants. Throbbing and getting larger. Looking down on me with a smile. A shiver ran down my spine.\n\n\"W-well yeah he's pretty big, but I have to actually was thinking of laying down and read a book for the rest of the evening.\" I stammered while \"casually\" stretching.\n\n\"Yeah, I think I need to do some more artwork. Gotta keep the clients happy.\" She answered with smile that scrunched her cute nose.\n\nWe both headed to our rooms. I quietly closed the door behind me. Dropped my pants and laid down on the bed with such force it almost took the air out of me. I skimmed through the messages. \"No names, pictures, selfies or anything that can identify each other.\" I read again. I so wanted to see his face though. I decided to take a shower seeing as I hadn't showered yesterday as well as I wanted to cool my emotions. Appreciate what you have Ray! So towards the shower I went.\n\nIt was really nice that there was two showers in the apartment so I didn't have to share one with Ann. Though it wouldn't have been bad to see her walk around with just a towel.\n\nAs I was standing under the hot running water thinking about tomorrow. I soaped up my hands and rubbed my cute bubble butt. I let one finger slowly slip in my behind. I clench around my finger. There was a build up of pressure. It wasn't bad quite the opposite. It felt good. I was shaking with pleasure. This would feel good for him but only if he fit. I put in another finger. There was an increase in pressure as my second finger entered followed by a sharp pain.\n\n\"Auch!\" I let out as I took the second finger out again.\n\nI guess one finger is all I can do right now I thought disappointingly. My mood sunk a bit but I started moving my remaining finger in and out slowly. It felt so good. And I finished as I imagine him filling me up. My knees gave out. I slumped down too my knees. Yeah that has to happen. If this had been three days ago I would've just dismissed it. But now it's different.\n\nI sat down on the bed with my towel over my head. Looking down on my crotch. Would he be turned off on how small I was? It had been an object of hatred and shame for me for a long time. But I had other assets. Right? He wouldn't say goodbye for something so little? Would he? Tears almost escaped the corners of my eyes. I started sobbing lightly. Fuck my life. I curled up into a ball on the bed. Put my pillow over my head to drown the tears. Why was I born this way? Couldn't I have been a bit more normal? It's so unfair.\n\nHaha I'm so emotionally unstable. Happy and horny for the events that have happened but still full of self-hatred. Face wet with tears. Probably snot running down my nose. Mouth was dry as a desert. Uggh I need a drink. I reached out for the day old glass of water on my nightstand. At the same second my hand reached for the glass my phone lit up.\n\n\"Hi! You awake? You still up for tomorrow?\" Read the message from him.\n\n\"Well Yes! I am excited.\" I responded.\n\n\"Good glad to hear. Hopefully you can still eat before going back to work.\" He sent back.\n\n\"Well if this time is anything like last time I won't need to eat. You are very... filling.\" I typed as my face was turning redder and redder.\n\n\"Oh I'm glad to hear. Then remember to bring a backpack :)\" He responded.\n\nA backpack? What? Well of course I would. But why ask for a backpack?\n\n\"Well yes. Your word is my law.\" I typed back with a rising temperature in my face.\n\nMaybe I am coming on too strong? Well I liked it. I would do anything for him not to leave. This was so much fun! Then I went on a roller coaster of emotions. Regret. Excitement. The seconds stretched out to minutes.\n\n\"Yeah that sounds fun. I'm just wondering you are over 18 right? Well of course you would seeing as we met at that bar. Just checking.\" I read his message with a sigh of relief.\n\n\"Yes I am over 18. Thought we weren't going to share private information? How about you?\" I responded with a mischievous grin.\n\n\"Yeah nothing that can't identify each other with. We can still get to know each other casually. I'm in my early twenties.\" I read his message in awe.\n\nHoly shit! He was younger then me! Maybe by a whole 10 years younger. Well at least 21. Because of the bar but. Geez. It got me a bit worked up. I almost started laughing with excitement.\n\n\"Well looks like I am older then. I'm in my early 30s. No worries your word is still law :)\" I responded with a flushed face.\n\n\"That's ok with me. See you tomorrow pear.\" He responded with a casual message.\n\n\"See you tomorrow Mr. H.\" I responded and let out a huge sigh.\n\nThe rest of the evening I tried to distract myself with music and doing some assignments I brought from work. Sleep didn't come easy but eventually I dazed of into dream land. The dreams were filled with him. Standing tall over me with muscles barely contained by his white sleeveless shirt. Him wrapping his strong arm around me while we cuddled in the sofa. Him unzipping his jeans and waving his monster in my direction. I reached for it with my mouth and just before my lips hit his thick pulsing cock I woke up.\n\nI made breakfast with a grumpy look on my face. Don't you just hate good dreams that end too fast? I readied myself up with a quick shower and remembered to bring my backpack. When I arrived at work it was like time slowed down. I was casually talking with Daniel from time to time at work but it didn't really help. Lunch was so far away. I got into the server maintenance to distract myself. While I was verifying our backups for the database Dan came over.\n\n\"Hey man! Do you wanna come with me to this new hot wing place? I'm meeting up with Sarah and I also heard their sauces are the bomb.\" He said loudly while almost hanging on my screen.\n\n\"W-well n-no. Ummm... My stomach couldn't really handle spicy stuff right now.\" I lied with a stutter.\n\n\"Oh c'mon man. Has been a while since just us three hung out. Not that I'm complaining about Ann, she's fun but it's just been a while.\" He said a bit flustered.\n\n\"Well I'm going to have to take a rain check. Say hi to Sarah from me!\" I confidently responded.\n\n\"Oh I will. So how about next Monday?\" He asked.\n\n\"Sure sounds good.\" I said while barely paying attention as I was too busy saving and closing everything and getting ready.\n\nI flung my backpack over my shoulder. Straightened myself our of the chair and nervously fixed my hair and clothes.\n\n\"Well see you after lunch Dan!\" I cheered as I began walking towards the elevator.\n\n\"See ya man!\" Hooted Dan after me.\n\nAs soon as I got out of the building I rushed towards my bike. As I was biking towards the The Secret Garden I felt a more and more anxious. The knot in my stomach was a mess. I snatched my phone out of my front pocket to check for messages. There was one from him!\n\n\"Hey you're on your way?\" It said and it was sent 15 minutes ago and the time right now was 1pm. Hehe. I guess he also must be nervous. I felt a bit calmer.\n\n\"I just arrived. Can't wait Mr. H\" I answered with a smile.\n\n\"Then why isn't your side open yet?\" His message read. Maybe he is annoyed with me?\n\n\"Well I'm on my way opening the front door now.\" I typed as I opened the front door in a rush.\n\nI made my way past the bar speed walking past tables with families and couples. I lowered my head and put both my hands on my back packs suspenders. They had no idea what I was about to do several feet away from me. I hurried down the hallways locking my sight onto the last bathroom. I gave out a sigh of relief when I saw it was unoccupied. Almost slamming the door behind me I slid down to my knees in front of the hatch still holding onto my my phone.\n\n\"I'm here now!\" I typed like my life depended on and afterwards set my phone to vibrate.\n\n\"Then why is your side still closed? :D\" he had merrily replied.\n\nI moved my face closer to the hatch and opened. I was met with a pulsating head of cock and before I could react the mass of meat slammed into my face. I fell backwards with pre smeared over my previously clean face. I looked up and saw my object of desire. Pulsating and large. It covered my view of the ceiling light and cast a shadow over my face. It was just as massive as I remembered huge veins were straining the skin and the head was now fully visible. A small string of pre cum was making a bridge from my forehead to the tip of his cock. I stared in awe. I felt my phone vibrate in my phone.\n\n\"You alright? I hope it wasn't a surprise.\" I glanced over his message with a stunned face.\n\n\"Well yeah. I'm alright. Umm can I take a picture of you?\" I requested nervously while a big pump of pre landed on my head.\n\n\"Sure go ahead\" He responded and as I read it he started bobbing his cock up and down hitting me in the face with a wet smack sound.\n\nIt must've been exciting for him. As his cock was throbbing up and down. Pulses of pre was painting my face as it swung up and down. I backed up a little bit to not be in his line of fire. I took a picture from the side. This massive piece of meat sticking out from the wall. I took a picture from every angle I could I also took a selfie right next to it. I was smiling but my eyes were dilated to its edges and my mouth slightly open in a needy look. I started taking my pants off in a hurry almost falling over as my foot got stuck in legs of my pants then I placed them on the toilet seat along with my shirt. I was naked in front of his monster. I continued to take pictures as my other hand started jerking my dick off. I nervously took step after step closer. I moved my dick closer to his. It was shorter then just the head of his dick! The mass alone of his head was bigger then my cock and balls combined. I took picture after picture placing it just above his massive cock. Fuck this is so hot! He twitched suddenly and my dick and his touched for a brief moment. He was so smooth and warm. My legs gave out under my body. Five quick orgasmic pulses let my cum out on the floor. I felt shivers all over my body. All my little spurts of cum wasn't even close to one shot of pre from him. My and his fluids mixed on the floor. Another shiver ran down my spine. He won in every aspect. My phone vibrated again.\n\n\"You alright?\" He had sent. Must've been worried.\n\n\"Oh I'm alright. Sorry this is just so exciting.\" I sent him\n\n\"Can you touch me again and would you like me to return the favor?\" He asked in the text message.\n\nMy eyes lingered on the message. He doesn't know I have a tiny dick. He doesn't know. I felt my anxiety build up. He doesn't know. He doesn't know and it will stay that way.\n\n\"Well I'm good I prefer giving!\" I lied.\n\nAs soon as I hit send my tongue darted from the base all the way to the tip of the silky steel pipe. I felt the smooth skin, every ridge and all the veins as my tongue went back and forth along the long shaft.\n\nOnce I got his cock covered in our combined pre-cum saliva mix, I scooted over in front of his cock. Grabbing it with both my hands looking straight into his huge cum slit. It was hard and throbbing in my hands yet again. My fingers were barely connecting. It was sooo thick and warm! I was ecstatic. Like a mixture of glee and complete utter horniness. My mind went blank as soon as my tongue connected with his big meaty head. It was spongy and smooth. The sweet taste of pre filling my mouth and my nose filling with the smell of sex and a slight hint of vanilla.",
        "My tongue swirled across his glands. I placed my lips between my teeth and his smooth cock. I wanted more of it inside me. Pumping my hands back and forth and every now and then squeezing hard at the base of his shaft as I tried to take more of him into my mouth. Pulse after pulse of delicious sweet pre came into my mouth. I didn't want to stop. I kept twirling my tongue round and round as I kept an even suction on him. Moaning loudly I just kept going. I felt good. Every twitch and pulse that came from him encouraged me. I was giving pleasure to him. I made him feel good! My jaw was getting stretched and sore. Then suddenly I felt the ridge of his huge glands passed my lips. His head was in my mouth! My previously unattended dick became rock hard and I could feel another orgasm building up again. The already impossibly hard cock in my mouth and hands became even harder.\n\nThen something unexpected happened he started pulling back. I desperately tried to hold him back squeezing down on the monster but it was drenched in pre and saliva. Then I heard a ping from another message. I let go with one hand but still tried to uselessly hold the meat slab back with my other hand. There were two messages.\n\n\"Hey let go and I will give you something.\" Read the first message.\n\n\"Hello? Can you let go?\" Read the second one.\n\nI must have missed the first message! I quickly let go and the cock dragon went back into its cave and the hatch on the other side closed quickly. I quickly typed with a response!\n\n\"I'm so sorry! I missed your messages. I was having too much fun...\" I responded with shame.\n\n\"That's ok. Would you mind licking my balls? You don't have to if you don't want to...\" He responded.\n\nI felt my heart yet again speeding up, my grin widening and my face flushing. My hands were shaking. I hope my heart can survive more encounters with him. This was just too good!\n\n\"Yes! Of course!\" I responded while giggling to my self. I sat in front of the hole staring at the darkness in anticipation. The hatch moved away and I could see a wall of flesh blocking the anything from passing. It kept expanding into my side of the wall. It was smooth, hairless and a little wrinkly. Small almost invisible veins riddle the flesh wall. The one testicle entered my side and slumped down in the massive ball sack on my side. It was hanging menacingly on down along the wall. It was so huge! Bigger then two of my knuckled fist combined. I reached out and touched it with my shaking hand. I cupped it from underneath it felt so heavy and it was radiating warmth. It was shaven smooth but I could still feel a little prickle here and there as I juggled the testicle in my hand. It was like my hands were sinking into this huge orb of flesh.I felt the dense and hard testicle through the soft flesh of his ball sack. I leaned in closer to lick it from underneath.\n\nThen it's twin popped out of the hole and came crashing down with it and extra skin. My face got smothered by the massive ball sack. The laid heavily across my eyes and face. I tried to breathe in but the flesh sucked into my mouth instead. It was salty with a taste of pre-cum that had dribble on top of them. I lifted them up with a heavy testicle in each of my hands. Fucking enormous! I buried my face in between them motor boating these huge balls that would make a bull feel shame. Sticking out my tongue I tried to get them as wet as possible and my nose inhaled the manly odor coming off them. I was in heaven. I had found the source of all the cum and pre. These were the massive cum tanks that provided me with sweet nectar. The skin was contracting and moving in my mouth. It felt heavenly as I sucked on them. I could definitely not fit them in my mouth which is a bit disappointing but sucking and licking them was so much fun. Soon they were covered in saliva. I kept rubbing my face into them while slathering them with my tongue. They're so big! I kept moaning while pleasuring him and in turn myself while doing it.\n\nI felt them twitch and they strained in the palm of my hands. The huge balls tried to pull themselves up. Bouncing and twitching as they tried to re enter into the hole. They scrunched up and twitching wildly against the glory holes edges. I was staring at amazement at this inhuman sized nuts dancing madly against the wall. I returned to serving these violent monstrosities. I felt so good as they bounced up and down. The spit covered smooth skin rubbing against my face. The smell of his huge balls seeping into my skin. Then another stronger smell filled my nose. Cum! It was such a strong smell! I reached down and touched my rock hard cock while licking the twitching flesh in front of me. I came hard while pressing my face into the huge balls.\n\nI kept moaning while rubbing my face up and down the massive cum containers. The smooth and wet orbs stopped tensing up after a while and sank down back to their original place. I was panting like a dog. My arms and legs were shaking. I yet again felt like I had run a marathon. The huge sack of testicles started moving back towards the hole then they got stuck. The two orbs strained against the hole. I let out a little giggle. My phone vibrated.\n\n\"Help! Can you give me a hand?\" Read the message from Mr. H.\n\nI suppressed my laughter as well as I could then moved my hands up to grab on to the huge cum tanks. I pulled them down a little first then pushed the first one. They were still warm and covered in saliva. I gave the last one a light kiss before I pushed it into the whole. It made a \"shluurp\" and \"pop\" sound as it was pulled back to the other side. The hatch closed as soon as it was on the other side. I got a flash of pale hairless skin on the other side before it closed completely. I fell back onto my ass and breathed out a sigh of relief. The pre-cum covered floor made me slide backwards a little bit more and I had to steady myself with my still shaking hands. Then the hatch opened again!\n\nOut from the glory hole came a clear bottle small coke bottle with a murky white viscous liquid inside it! my hand darted towards the bottle as it bounced and skidded on the wet floor tiles. I grabbed it and it was so hot in my hands. Like I was touching someones hot flesh. The bottle was filled to the brim. The viscous content barely moving as I moved it back and forth. I screwed off the bottle cap and the contents spilled a little over my hands.\n\nThe thick and tasty smell of cum filled the room and I put the container towards my mouth. First I just poured the slow flowing liquid onto my tongue. When the first blob of cum hit my tongue my eyes went into my head. I moaned as I gulped load after load into my mouth and I ended up sucking on the bottle like a calf. While I was sucking in my delicious gift I heard a thump from the hole.\n\nAnother bottle tumbled down onto the floor. Followed by another and then another. Several small 300ml coke bottles came through building up a pile on the floor. I counted them in amazement. It was ten of them laying on the floor with the one I had already guzzled down it was a total eleven of them. The hatch closed when the last one hit the floor and my phone vibrated.\n\n\"That should help quench your thirst :)\" Read the cheeky message from him\n\n\"Thank you so much. This was so much fun.\" I responded with cum covered fingers running over my screen.\n\n\"I was worried I might've been too much with the bottles. But you said I was satisfying... You better hurry up so you're back in time for work.\" Read his concerned message.\n\nI panicked a little and my eyes quickly darted to the top right corner of my phone screen. 1:45 PM! I had to be back for work in fifteen minutes.\n\n\"Thank you so much! I will message you later. Gotta hurry!\" I replied still smudging my screen with his cum.\n\nAfter I hit send I brought the fingers up to my mouth to clean all of it off. I moaned slightly with my fingers still in my mouth. He tasted so good and I felt so full and satisfied from that one bottle. I hurriedly cleaned the aftermath with paper towels. Rubbed down the floor and my face down with the course brown paper towels. I packed down the bottles into my backpack. It was now full with bottles of his cum and a spare shirt I brought. After practically jumping into my clothes I rushed out the bathroom and headed back to work.\n\nI was smiling so much when I got back. All my thoughts were of him. I tried to hold myself back from texting him but to no avail.\n\n\"Hi back at work! So when would you like to meet up again?\" I sent while feeling my cheeks straining from the smiles.\n\n\"How about this Wednesday? I'm still at the Secret Garden. That was exhausting my legs are still wobbly.\" He sent back really fast.\n\n\"Well yes I would be delighted. So can I ask you a question?\" I responded with my hurting smile still on my face.\n\n\"Yes of course.\" He sent back just as quickly as before.\n\n\"Can I ask how big you are? Like have you ever measured?\" I sent back with a bit of hesitation. That cock had been on my mind these past few days, I just had to know.\n\n\"Does it matter?\" He sent back after a long nervous pause.\n\n\"No not at all. I would've had fun even if you were different. Size doesn't matter.\" I sent back honestly and with some lingering shame of my own size. I mean it was fun him being huge but anything bigger then mine felt empowering. I was a bit conflicted, I guess.\n\n\"I'm 21 inches. Yeah it's not an easy thing to have this size.\" He responded fairly quickly.\n\nHoly shit 21 inches! There was some wall in between us so I didn't get the best eye measurement. He was practically 6 times my length and with the girth the difference in volume would be enormous. I guess it's not an easy thing to have. I guess he gets a lot of stares when walking about. I bet I could spot his large package if I met him in the streets. Fuck I didn't think of that.\n\n\"I'm sorry. I guess the attention you get can be a little too much.\" I responded with some shame. I guess everyone has problems.\n\n\"I don't get that much attention. I hide it well. But it doesn't really fit the rest of me.\" He responded.\n\nHoly. My imagination was on fire. He might've been a short fat guy. Or a skinny average guy. Yeah... My first thought he must've been tall and massive to fit that organ. It would look even more monstrous on someone other than a big guy. Shit. Now I feel like shit. I mean I know what it's like when certain parts doesn't \"match\" the rest of you. I strengthen my resolve for what I was about to type. I felt nervous and nauseous for what I was about to type but soldiered on.\n\n\"Well I know the feeling. My dick doesn't really fit me either. Thou mines a little below average. I hope you don't mind\" I typed and took several seconds before I moved my finger above the send button. I closed my eyes and hit send.\n\nThe seconds felt like minutes. My face was draining with color and I couldn't look. I kept my eyes closed. Fuck I had been such an emotional roller coaster these past days. Get a grip of yourself Ray! I could feel tears building up. Then the phone in my hand vibrated. I sucked in air between my tears and steeled myself. I slowly opened my eyes.\n\n\"I don't mind at all :) Yeah it's not easy being different. I was home schooled because of it.\" He responded.\n\nThat a little reassurance and a smiley could go so long. I wiped the little build up of a tear from my eyes. Smiled while still shaking.\n\n\"I kinda wanted to be home schooled for a while. Was it your own choice? Or did your parents do it? Either way I wish we could've been friends during school. You seem like a nice guy.\" He responded with my previous smile slowly returning to it's former glory.\n\n\"So we could be friends with benefits? :) because you're really good at the benefits... haha I'm just joking. Yeah you seem like a pretty nice guy as well. It was my parents. Hey this might be a strange request. Could I have those pictures you took. Like only of my dick. You shouldn't be in the pictures. I still want to keep this umm casual.\" He responded after a while.\n\n\"Well yeah of course! It's pictures of you.\" I responded quickly as I attached several pictures from different angles of his enormous piece of meat. Just looking at the pictures made me all hot and bothered. I squirmed in my seat as I felt myself an erection.\n\n\"Thank you. I couldn't take these myself.\" He sent back almost instantaneously.\n\n\"Well why do you need pictures of yourself?\" I inquired him while scratching my head.\n\n\"Oh it's a little embarrassing but I got a fan site where I post and sell pictures.\" He messaged after a while.\n\nHoly shit he had a site. I had to get access to it. I squirmed a little in my seat thinking of it. I bet my eyes glazed over as I thought of it.\n\n\"So could I get a link to the site or do you not want me to see your face?\" I sent back as I thought of it.\n\n\"Oh I don't post anything besides my dick. It's a little embarrassing. I'm definitely not into what I post but it is what sells. So please don't judge me.\" He sent back with a link to his website.\n\nI looked up from my desk. No one else was there. Should I wait until I get back home? I quick look wouldn't hurt. I pushed clicked the link and it brought me to a website with a dark background with a gothic styled text interface. Mr. Huge Cock it read at the top.\n\nThe site had several of pictures of that enormous slab of meat either from the side or above. There was videos of him cumming in a bathroom stall and in a shower. It was so powerful. It was like someone turned on a hose and turned it on and off multiple times. The pressure of the huge loads caused the cock to recoil a little backwards then it came fully back into frame. No hands or any part of his body in the frame just him shooting enormous loads against a shower wall and down a toilet.\n\nThen I encountered a video of him cumming on someones picture. It was mostly guys but some women as well. It was so fucking hot. Then I started reading I had been to busy just looking at the pictures and videos and ignored most of the text above or below the picture. It was mostly him bragging or calling everyone small dicked losers. How they should worship his cock. How a real mans cock should be. The people who commented were ecstatic and very very into it. I thought at first I wouldn't like it. But I almost came right then and there. I knew Mr. H was way kinder then that. But the idea of him dominating me was really really fucking hot. To be his and to make him feel good. To surrender myself to him. To let my worries go and just have him take the reins... felt good. But I was still worried about if he didn't like small dicks.\n\nTo see more you would have to subscribe. About 15 dollars a month. I knew what I would do when I got home. Then my phone vibrated again.\n\n\"Hello? I hope I didn't scare you off. Sorry for sharing.\" He had sent me.\n\n\"Oh sorry you're a bit distracting. No nothing to worry about. It's perfectly fine. People are most assuredly into that :)\" I typed back.\n\n\"Yeah... Not that I hate it but I'm happy that they're happy. So can I post these pictures? And umm I might mention I got a... cock slave to take them for me. I hope that's alright?.\" He responded with concern.\n\nMe being his cock slave. I gasped as I put my hand over my mouth to suppress a moan. I was rock hard and squirming in my deckchair. Damn! He was so powerful. My phone vibrated in my other hand.\n\n\"Not that you are my cock slave. I'm just posting it in the spirit of the site. Sorry!\" He sent before I could respond with obvious worry.\n\nIt was hot. Because he seemed nice and he enjoyed my umm... service. I never thought I would be sucking cock a week ago but look at me now. I smiled wildly as I typed away.\n\n\"Well no worries. You seem like a nice guy.\" I sent with a thought I should've added a smiley.\n\n\"Hey do you wanna chat later tonight? I know you're busy with work right now.\" He sent and as soon as I read it I went from being just horny to being horny and giddy.\n\n\"Well yeah! I would love that. Talk to you later Mr. H\" I sent him.\n\n\"Talk to you later, Pear! :)\" He sent me back.\n\nThen I continued my work on checking the backups on the servers. I would need to change underwear after I got back home. Chatting with him had cause me to leak a little pre. After an hour or so I was starting to feel a little hungry. I didn't really have much to eat while on my lunch. Except the bottle of cum... I reached down into my backpack.\n\nAs I grabbed the bottle I could still feel the warmth in it. I was little bit colder then the first time I received them from him. I held the bottom and brought it up to my face. Shaking it I could see the murky white viscous fluid slosh back and forth. I unscrewed the bottle cap and brought it too my nose. Still a thick and musky smell of cum with a hint of vanilla. He must've used a perfumed soap or something. I lapped with my tongue and as soon the slightly salty cum hit my taste buds shivers went down my spine. Yeah I think I'm hooked by this point. I gulped down some more and put the half empty bottle next to my keyboard with the bottle cap back in place.\n\nAs I was sitting there continuing my work a hand reached over my shoulder and grabbed the bottle. I panicked and reached out with my hand towards it as fast as I could but I wasn't nearly fast enough.\n\n\"Hey Give that back!\" I yelled and turned myself towards the person who grabbed it. There stood Dan and he backed away even further when I raised my voice.\n\n\"Hey calm down, man. So whats this?\" He said as he moved the bottle up too his face to inspect its contents.\n\nThe body was on full alert and I felt like I was about to throw up. My face must've turned pale or beat red. I couldn't tell. I was just a jumble of emotions. And through this I tried to think. Think faster then I ever had. And let me tell you I don't do well under pressure.\n\n\"W-well...\" I paused giving myself some extra time. Then it hit me. \"It's a protein s-shake!\" I sputtered out.\n\nHe unscrewed the bottle and smelled it.\n\n\"Fuck this looks and smells like cum if it weren't for the vanilla I would've guessed that.\" He exclaimed while making a grimace.\n\nI thought my stomach couldn't sink any lower. Now if I had any color left on my face it would've been gone. I probably looked like a zombie.\n\n\"Y-yeah... i-it taste even worse. I was thinking of bulking up... y-you know.\" I lied while shaking a bit. I guess I was lucky he wasn't looking at me. Then before I could react he took a big swig from the bottle. He had thrown his head back and I could see his adam's apple go up and down as he swallowed the content of his mouth.\n\n\"Damn! Yeah you can keep this. Bulking up with this must be a nightmare!\" He burst out while opening and closing his mouth as to remove the flavor.\n\nHe screwed on the bottle cap and handed it back too me. I was too stunned to make an expression And just took the bottle and put it back on my desk. I turned swiveled my chair back to face the screen just sat there for a second. Dan sat down at his desk on the other side of the room still making a sour face. I tried to focus on the screen I could feel the paleness wash away from my face to be replaced by red flush of embarrassment. Holy shit! My best friend has just drank the cum of my... of my... friend with benefits. I looked over at Dan again I could see the side of his face as he was facing towards the window. I guess we have even more in common now. I smiled a bit\n\nAfter I got back home I told Mr. H. He thought it was funny but said he felt sorry that my straight friend had no idea. We started to chat about everything between the heaven and the earth... well except details about ourselves. We talked politics, religion, science etc. So many subjects. And we agreed on almost everything but the things we disagree on we had fun discussions. We didn't have the same taste in music but it wasn't like we disliked each others taste.",
        "Then a week had passed. We had continued chatting and had our \"Secret Garden meetings\" four more times. I was starting to really like him. Like REALLY like him. I had known it was a bit of a personal question but I had asked him if he was single. Because if he was I think I might not be able to continue this. I guess I should've asked him earlier but I had to know. He had responded with a cheeky message confirming him being single and asking why I was asking. I tried to convey my feelings that maybe in the future if we could become more than just \"friends\". He had given me a blatant no. Said he was not ready for anyone. It felt quite depressed from that response but I didn't show it. Just bottle it up Ray.\n\nSo we continued the way we were. More pictures and videos were uploaded to his site thanks to me and the few days we didn't meet up I would masturbate three or four times to his website. I was thinking about sending in a request to have in cum on a picture of my face... but I better not just in case we were to become something in the future.\n\nAnd for plans for the future I had ordered a multitude of dildos of different sizes. To easy myself up to his enormous size. As well as lubricant and posterior cleaning products. Every night I would do a training session with myself, while browsing his site of course. It was fun I couldn't wait for him to get his surprise. Well I was a bit worried about getting rejected. Maybe oral was all he ever wanted, which I must say I was getting better at. He told me his likes and dislikes. I just followed the instructions on my phone.\n\nIt was a Friday night. I had gotten back from work. Sarah and Dan had come over for movie night with me and Ann. We had fun and enjoyed homemade hot wings thanks to Sarah and Ann. They had grown a bit closer which I'm glad for. During the movie night I saw Ann look at her phone every now and then and smiling. She was really into the movie but whenever there was downtime she would pick it up and look at it. Half-way though the last movie Dan and Sarah had to leave. They had to get up early but I guess that was just code for them wanting some intimate time before bed. Ann sat at the sofa and waved goodbye while looking at her phone. At the front door Daniel leaned in close to me and whispered.\n\n\"Hey man, do you have any more of that protein stuff? I don't know about how good it is for bulking up but I was a maniac in bed that night.\" Then he looked me in the eyes wiggling his eyebrows up and down.\n\nThankfully the hallway leading to the front door had it's lights turned off else he would see how red my cheeks got.\n\n\"Y-yeah no. I don't have anymore left.\" I honestly stuttered. I had finished it and any new batches would be going to my stomach.\n\n\"That sucks man. Well if you know where to get more I will buy some of you.\" He said while heading out the door where Sarah waited with her tank top that was waay to small to contain her massive jugs.\n\n\"Bye Ray. Treat my Ann well.\" She exclaimed with a smile. \"Bye Ann! See you tomorrow!\" She shouted right afterwards and you could hear a distant bye from Ann as a response.\n\n\"Well Take care guys. Bye!\" I almost shouted back while closing the door.\n\nThe door closed shut and with a click I locked it. I sighed and chuckled a little to myself. I don't want Dan be addicted to my enormous \"friends\" cum. I headed over to the sofa and jumped over the back of the sofa to land in my same spot. Looked over at Ann. There she sat. Cute and small. Her blonde hair cascading over her right shoulder in a single big braid Sarah had been working on during the first movie. Her smile was a full on grin so her nose was scrunched up and eyes partially closed.\n\n\"Well tell me what is making you so happy. You've been glued to that phone all night.\" I demanded with a mischievous smile.\n\nShe slammed the phone down into her poofy dress and it billowed as she did. Her eyes were wide and her face flushed.\n\n\"I-I just...\" She paused and her brows creased as if she was in deep contemplation. \"O-okay Ray. I met this guy online I really like.\" She muttered while concentrating on the phone between her legs.\n\n\"Well I thought you were asexual?\" I questioned her with a surprised look on my face.\n\nShe thought for a while then began to smile again.\n\n\"Just because I'm asexual doesn't mean I'm aromantic..\" She sighed out.\n\n\"Well that's good!\" I boomed out. A little disappointing but I had found someone I really liked as well so it's just fine that she finds one as well. Maybe I should tell her about my heartthrob. No not yet. I'm not ready to admit to anyone but myself I'm gay. Well I was the only one who needed to know really.\n\n\"As long as he treats you well. Else I would have to beat him up!\" I jester as I flexed my skinny arms.\n\nMy arms sank to my side after looking at them. \"Well I would probably need help from Dan.\" I asserted.\n\n\"Hihi Thanks Ray. You're the best. Wanna finish the movie?\" She inquired while giving me that adorable smile.\n\n\"Sure I am up for that. Let me refill our snacks.\" I excitedly exclaimed as I picked up the bowls to fill them back up in the kitchen.\n\nI opened our pantry and refilled the bowls with candy and chips. I fished out my phone as seeing Anna on her phone made me just a smidge jealous but that feeling went away as soon as I read our messages.\n\n\"Hi Mr. H. How is your Friday evening? Miss you :) also do you want to meet up tomorrow?\" I hurriedly put in and hit send as I walked back into the living room. I placed the bowls down and turned the movie back on. Then slumped down onto the sofa. Ann sat as far away from me as possible. She was into the whole physical touch but she let Sarah get away some touch just no hugs. She must've had a hard upbringing I guess.\n\nI was actually getting into the movie at this point. A hunt for his daughter and he had a particular set of skills. Neither of us had seen it before well except Dan, maybe that's why he wanted to head back home with Sarah? My phone vibrated and I saw from the corner of my eye Ann was on hers. Well I guess two can play at this game I thought and grabbed the phone in my pocket.\n\n\"Hi Pear :D Miss you as well. Got plans tomorrow but if you want this Sunday? Let's do some confessions in our booth together ;)\" His cheesy response read.\n\n\"Hmm yeah sounds good. Well, may I ask what my favorite guy is gonna do tomorrow?\" I responded with a smile on my face.\n\n\"Oh you just say that because you love my cock ;)\" He taunted.\n\nI know it was just a joke but it still stung a bit. I mean yeah his fucking massive cock was fun. But this past week there had actually been some real emotions growing in me.\n\n\"Seriously... I like you. I don't really need your dick. But it's fun you know. I like pleasing you.\" I hesitated before I hit send. Hope he doesn't panic over the I like you part.\n\n\"I was just joking. I like you as well pear. I'm actually going to head out with a friend shopping tomorrow. Haven't done that in a while.\" He sent back\n\nI knew he was just joking but hold the fucking phone. He. Likes. Me. I kinda wanted to laugh out loud but I held myself back because I wasn't alone in the room.\n\n\"Oh heading out with a friend. I wish I could come as well.\" I kinda wanted to add a heart to the end of my message but that would've been a bit too much.\n\n\"Oh you will come on Sunday ;) but yeah she's pretty cool. She going to get some clothes and I am going to get some supplies.\" I read his message with a little pit of anxiety forming in my stomach.\n\nOf course he had female friends. I mean anyone would want a guy with an anaconda for a cock. I almost started to panic but I shoved the feeling as well as I could down to the bottom.\n\n\"Oh so does she know about you. You know.\" I questioned with worry still lingering.\n\n\"No she has no idea. I'm glad I got to borrow her from her boyfriend. Don't worry I'm not her type I think.\" I read it and felt a wave of relief.\n\nWe continued to chat back and forth for the next 10 minutes. We talked about all kinds of things. I wanted us to try do the 16 personalities test, just to find out more about ourselves. And then I asked what he was up to tonight.\n\n\"Oh I'm watching a movie with an actor named Liam chasing after his kidnapped daughter. Though I've kinda not been paying attention. Thanks to you :D\" He sent. I was going to respond with what's the odds. Like holy shit us watching the same \"old\" movie. Then a strange suspicion grew and grew inside me.\n\nNo it couldn't be I told myself.\n\nNot possible I chanted internally.\n\nI had to confirm. So I prepared my message and hit send.\n\n\"Oh so what's he doing right now?\" and I looked over at Ann my pulse rising.\n\n\"He's on some luxury boat kicking ass.\" Was the message I received just as Ann did the final button push on her phone.\n\nNo this must be some kinda of prank. I couldn't take my eyes off her. She sat there in her poofy flowery green dress. Blonde hair in a braid giving that beautiful smile towards her phone. Towards me? She was so cute and small. She couldn't be the owner of that cock. Not possible. I gulped hard and sent a message on my phone.\n\n\"Ann?\" I barely took my eyes of her as I hit send.\n\nHer brilliant smile went away and I saw worry in her eyes. She put her phone down on the seat next to her she looked panicked. She had placed both of her hands on her knees and it looked like she was shivering.\n\n\"Mr. H?\" I spoke with a voice that was barely audible over the fight scene.\n\nHer sky blue eyes darted from her knees and towards me. She gazed into my eyes then down to my phone and back to me. We both sat there and stared at each other. Then the fight scene ended and it got eerily quiet.\n\n\"P-pear?\" She stuttered with an tears forming in the corner of her eyes.\n\nI guess we both knew each others identities now."
    ],
    "authorname": "Eikmoo",
    "tags": [
        "futanari",
        "futanari on male",
        "huge cock",
        "huge balls",
        "roommate"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/roommate-huge-changes-ch-03"
}