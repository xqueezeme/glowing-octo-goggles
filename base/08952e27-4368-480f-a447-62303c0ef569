{
    "title": "The Proposal Ch. 03",
    "pages": [
        "\"This makes no sense.\"\n\n\"I know.\"\n\n\"None whatsoever.\"\n\n\"But it should.\"\n\n\"It really should.\"\n\n\"Then why doesn't it?\"\n\n\"No clue.\"\n\nThe three girls looked at each other one more time, then down at the notes and books spread between them, back at each other, back down, then sighed, almost perfectly in unison. They were trapped on the third floor of the university library, surrounded by a vast amount of knowledge on the topic of accounting, and yet they could not get it together. The series of problems that constituted their take home test was the Gordian Knot, and they lacked the sword to cut it.\n\nFrustrated, Amber flipped open her computer pulled up the Internet, and googled the question at hand. A series of results popped up, and she clicked on the first one. A lengthy essay, posted by a professor from Cornell popped up. She groaned in frustration, and closed it again. Not what she was looking for.\n\n\"Any luck?\" Melanie was trying the same thing, with equal results.\n\n\"None whatsoever.\"\n\n\"Great.\" Amy was the youngest amongst them, having come into college an accounting major, and having stayed that way. She was also set on graduating in four years, and anything that might in the slightest jeopardize that goal made her nervous. \"What are we going to do?\"\n\n\"Relax, and try to think of something.\" That was Ambers standard response, and when she noticed the flashing icon on the bottom right of the screen that told her she had a message, she double clicked it. Checking email is always a good way to relax.\n\nIt was a message from her bank, and she realized that it was Wednesday. Deposit day. Her brow creased and furrowed, and she slapped the computer shut.\n\n\"I have to go.\" The other girls just stared at her as she packed up her bags, and stormed off.\n\nThe guard just waved by now, and the movement up the elevator, through the lobby, up the elevator, through the lobby, by the receptionist, up the stairs, down the hall, was mechanical by now. She always stopped to talk to Madeleine, mostly to prevent herself from bursting in on anything important, but also because the woman was a treasure trove of information about Jonathan, and always seemed happy to see her.\n\nThis time was no different, if anything, she was even more ecstatic then usual. She came out from behind her desk, and hugged the younger woman in a tight bear wrap that squeezed the air out of Amber's lungs, holding her close.\n\n\"I can't believe you pulled that off. Mr. Games was in such a great mood today. He told me he got to see Sam, that you convinced him to go see her.\"\n\n\"It was his idea\u2026\"\n\n\"Don't be modest now. I remember when she was born! What a little angel. I hope her bitch mother didn't corrupt her too much. She was so sweet, even at a young age. He would bring her by the office so that we could meet her, and she was always very well behaved. What a lovely child. Thank you so much.\"\n\n\"You\u2026you're welcome.\" She smiled, and pointed towards the door, getting a nod in response. Letting herself in, she saw him seated at his desk, face buried in one of the hundreds of reports and papers that always cluttered his desk. How he found anything was a mystery to her.\n\nShe approached him silently, knowing fully well by now which way to move across the carpet to get close before he raised his head to look at her.\n\n\"Hello there.\"\n\n\"Hi.\" She stopped where she was, adopting a posse that she knew he liked, cocking her hip out to the side, turning her shoulders just so that her tits were outlined in her blouse, skirt sliding up her leg. The smile she gave him was pure sex, and she knew that he was reacting just by the look in his eyes.\n\n\"What do I owe this rare pleasure to?\"\n\n\"Got a minute for me?\"\n\n\"Always.\" \n\nHe stood, and they dropped onto the couches that crowed the corner of his office. She kissed him first, almost climbing into his lap, her lips ravaging his, her hands tracing his chest, feeling his shirt, and tasting him. She left him breathless, and herself flooded between her legs.\n\n\"The money.\" The emotion in her voice was very clear and apparent.\n\n\"Yeah?\"\n\n\"You can stop.\"\n\n\"I don't want to.\"\n\n\"I don't want it.\"\n\n\"It's yours.\"\n\n\"No.\"\n\n\"Yes.\"\n\n\"Don't do this!\" That came out louder then she had wanted it to.\n\nShe stood up, stalking across the room, turning, then coming back. \"Why do you want to do this?\"\n\n\"Amber\u2026you quit your job for me. I am basically paying for you to go to college. The money pays for your apartment, your food, your car insurance, whatever other bills you have. Face it, you have no other income. This morning I closed a deal that paid me well over ten times in one hit what I pay you if this goes on all year long. You are halfway into a semester. Why create hardship now?\"\n\n\"I'll get a job!\"\n\nHe stood, sighed, and took his little lioness into his arms, kissing her long and hard. \"My little tiger. Why? What has changed? I love you, and it has nothing to do with money. Let me give you the money.\"\n\n\"It's a lot of money!\"\n\n\"It's a matter of scale. If Bill Gates gives some guy on the street a million bucks, it's a lot to that guy. But to Bill, it's pocket change. It's pocket change.\"\n\n\"You're not Bill Gates.\"\n\n\"I like to think I'm better looking then him, yes.\"\n\nShe sighed, sinking against his chest, and kissing him. \"Listen to me. I know this is not what you dreamed of. Few women of your intellect and ability do. You want to be all big and bad, do your own thing, blaze your own trail. And you will. But you meet a man, and he loves you. And he hopes that you love him just a sliver of what he feels for you. I'm a old man, and I was brought up to take care of my girl.\"\n\nShe smiled at him, softly kissing his face, taking it into her hands. \"You won't take no for an answer, will you?\"\n\n\"What a silly question. You can not even imagine how happy you have made me.\"\n\n\"So why even bother fighting it?\"\n\n\"Now you are getting smart.\"\n\n\"I want diamond earrings.\"\n\n\"What karat?\"\n\n\"You are unbelievable.\" But she laughed, they kissed, and then they did what comes natural on leather couches. But if you asked, he would say that she did it to him.\n\n\"So what does he call you now?\"\n\n\"I don't know. I've gotten used to being his little call girl. And if he calls, I'll still come running.\" She grinned at Jessica across the dinner table, slowly rolling another serving of spaghetti around her fork. \"Nothing really changes. I mean, it just changes how we feel about what we do. All along he wanted somebody that he could do the things he enjoys with. Now he still has that, but the person he enjoys them with shares an emotional connection with him. And I think I have the advantage of already knowing things he does not like. He does not like to deal with emotional baggage, for example. He does not like to talk about work.\"\n\n\"So you just aren't going to show him negative emotions?\" Tammy seemed unconvinced.\n\n\"No, I'll just have to package it differently.\" Amber shrugged. \"I didn't say that I had all the answers. I just said that I feel in love with a boy, and that he was kind enough to fall back.\"\n\n\"Not really a boy.\"\n\n\"Rain on my parade, why don't ya?\"\n\nPutting her plate in the dishwasher, she walked into her bedroom, and dropped onto the massive bed. It was better this way, she figured, since he had managed to worm himself deeply into her life anyway. He had bought the bed, the nightstand, the couch, and the closet. All the clothes inside the closet had either been paid for by him, or the money from him. School, books, just about everything had been touched by Jonathan, so why not love him? And he was a hurricane in bed. What more could one ask for in a man?\n\n\"You going to run off again?\" Amy was really nervous now. They had still not completed the take home test, and it had been a whole week since their last study session. So they only had until Friday. Crunch time.\n\n\"Relax, I'm at my best under pressure.\" Amber smiled at the younger girl, and opened her book. That, and she had cheated.\n\n\"Look here. I did some research on my own,\" which was a lie, but no need to inform Amy that she had clearly broken the rule about outside help. She could tell Melanie that later. She would understand. \"This is what I found. We were looking at all backwards the entire time. You have to put the standardized income first, and then add the tax rates, see, like this.\" She slid the printed piece of paper across the table.\n\n\"Wow. Where did you find this?\"\n\n\"Where do you think?\" To which the standard response was Internet, and she left it at that. No need to mention that her boyfriend was an accounting genius, and had felt the need to point out the simple mistake that the three students had been making all along.\n\n\"This is awesome. We can solve the rest of the equations now!\" Which meant she would, as Melanie and Amber watched the girl go to work. At times like this, the two had learned, it was best to stay out of her way. Melanie shot Amber a knowing look, and the girl smiled back. Why spoil it?\n\nThey were done a good hour later, after they had completely written out the entire test, and put their names on it. Amy was entrusted with carrying it to class the next day, because she was the most committed to this idea, and the one least likely to forget. That, and she was headed straight home.\n\nMelanie and Amber turned right outside the library, heading towards the Student Union. Both of them had dates that night, but both not until later. So they ambled about a bit, laughing at how the test had been resolved, and watching the first of the spring flowers come out.\n\n\"So this boyfriend of yours\u2026is he an accountant?\"\n\n\"Kinda. He works in banking.\"\n\n\"Cool. I need to get myself one of those. The one I have works in nothing, but aspires to greatness in the rock music field.\" They laughed at that one together.\n\n\"If I come across another single one, I'll let you know.\"\n\n\"I bet you will.\" The sharp voice caused them to pause and turn around. Neither of them recognized the woman at first, but then she came forward, and when the light hit her face just right, Amber gasped. It was Angelina.\n\n\"Hello Amber. Nice to meet you.\"\n\n\"Hello\u2026\" The younger woman stepped back a bit, leading Melanie to do the same. \n\n\"Good to finally meet the bitch putting the moves on my husband.\"\n\n\"Ex-husband.\"\n\n\"Don't get snotty with me, whore. Came all the way out to California, did ya? What for, to steal my daughter from me?\" The last part was delivered in a shrill crescendo that caused heads to turn. Melanie took a step sideways, separating herself from Amber.\n\n\"We were in Vegas, and when he said that you guys were right there in L.A., I said why not\u2026\"\n\n\"Bitch, you ever come near my child again, I'll kill you with my bare hands.\" Angelina turned around, and stormed off.\n\n\"Who was that?\"\n\n\"Look up crazy ex-wife in the dictionary, and you'll see her name there.\" She shook her head, pulling out her cell phone. He would probably want to hear about this.\n\nHe was wearing jeans, something she had never seen before, and she mentioned it. He shrugged, saying he had just come from the gym.\n\n\"You go to the gym?\"\n\n\"Jesus woman, how do you think I build the stamina to keep up with you?\" He held her door open for her, and she slipped inside, flashing him with her panties as she did so.\n\n\"Woman, thou art lose.\"\n\n\"I know, and you love it.\"\n\nHe pulled away from the curb, and they headed towards the interstate. \"So what all did she say?\" He was not looking at her, his eyes focused dead ahead as he listened to her recount the episode and what exactly had occurred.\n\n\"Get out my phone, call Samantha.\"\n\nShe dug through the center console, finally finding the small plastic device, and pulled up the number. \"Hey, look at that, I'm on speed dial.\" Right next to his daughter.\n\n\"I need my call girl available.\"\n\n\"Always daddy.\" She listened to it ring, then the girls voice came across from a continent away.\n\n\"Hello?\"\n\n\"Sam, it's Amber, your dads girlfriend?\" He gave her a face, but she stuck her tongue out at him.\n\n\"Hey, what's up?\"\n\n\"Ahem\u2026do you know where your mom is?\"\n\n\"Cancun with her boyfriend, why?\"\n\n\"Oh\u2026ahhh, hold on.\" She handed the phone to Jonathan, shrugging as she did so. He gave her a look, but took it. She could only hear one side of the conversation, and since she didn't want to turn the music up, she played with the seat warmer instead, until he dropped it back into her lap.\n\n\"She wants to come visit me.\"\n\n\"Cool.\"\n\n\"I'll send her a ticket once this thing with her mother is sorted out. She said there is something she wants to tell me.\"\n\n\"That she's missed you.\"\n\n\"She already told me that.\"\n\n\"Maybe she wants to say it again.\" They pulled up to the marquee that marked the entrance to The Club, and the valet pulled open her door. She slid out, waiting for him to come around. They were almost at the door when she caught the flash of motion out of the side of her eye, pushing him aside.\n\nShe was not entirely sure where Angelina had come from, but the woman was there, and she had fire in her eyes, and claws bared.\n\n\"I can't believe you would bring this BITCH HERE!\" Again the crescendo. Without even thinking about it, Amber had put herself between Jonathan and the raging ex-wife, bell boys and attendants scattering, and two men in suits trying to push through the door to get outside.\n\n\"YOU DIRTY FUCKING WHORE!\" Angelina was in a full rage now. Amber would never remember what happened, but time seemed to slow as Angelina lunged at her, and without even thinking about it the younger woman slid to the side, brought her hands up, and jabbed her assailant in the face twice, pivoted, and threw a haymaker that almost lifted her off her feet.\n\nAngelina stumbled backwards, stunned but not stopped. The two security guards were outside now, and Jonathan was trying to say something, but she came again. Amber faked left, her whole body going right, and threw a round house punch that set the older woman up, followed by a straight driving jab that spun her on her heels, and slammed her into the side of the idling Beemer. \n\nTime came back to its normal speed, and Amber realized that she had instinctively crouched down into a stance that had come back from way back when, throwing her body into gear when the moment had presented itself.\n\n\"You know\u2026you're quite the bargain. Great sex, wonderful company, and a bodyguard.\" Jonathan took her arm, and ushered her inside. The look on his face was priceless.\n\n\"She beat her down?\"\n\n\"Bitch slapped her. Well, more like bitch TKO'ed her. Right there, out on the street.\" Jonathan held up his hand as if he was swearing an oath.\n\n\"Did you talk to her afterwards?\" Randy wanted all the details. He was a great fan of catfights. \n\n\"Yeah. Apparently she has a black belt in Tae Kwon Do, or something like that. Did it for like twelve years or something ridiculous, and then gave it up when she came to college. You should have seen it.\" He brought his arms up in a boxing pose, shadow boxing invisible ex-wives. \"It was amazing.\"\n\n\"Why did Angelina come out here now?\" Markus could care less who beat whom down. His legal mind had been consulted last night, and the request for a restraining order had been hand walked to a judge that they were all friends with this morning by an eager younger lawyer of his firm. A call to a fellow member of his parish had quashed the police report that Angelina had filed. Knowing the Chief of Police had its benefits.\n\n\"She probably found out that I came to see Sam. Sam turned eighteen a couple months ago, killed the child support. I still send some money out there, but she knows that when Sam goes to college, it's over. So she probably was trying for a cash grab.\" The fact that Jonathan even said those words stunned everybody at the table. A couple of months ago, the topic of his ex wife would have had him reaching for the tall glass of vodka, no ice, and no mixer. Amber's hold over him had to be truly powerful.\n\n\"What did your girl say?\"\n\n\"Nothing. Just that if I had any other ex girls that wanted some, they could bring it on.\"\n\nShe danced back and forth, side to side, eyes closed, hands and feet whirling around her in motions that wanted to do things, wanted to move a certain way, but could not quite get it together. She had competed at the national level three times in Tae Kwon Do, making it as far as third place the last time she fought, harboring serious Olympic ambitions. But getting a date in small town Lincolnton was no easy task if you were known for your ability to break boards with your bare hands, so she buried that part of herself when she had come to college, deciding that it was time to become the girl that her mother had always wanted, the one that her oldest sister said she would need to be if she ever wanted to get a good man. As if Erica would know. At the tender age of 26, she had been married twice already.\n\nAnd so she was a bit rusty, her mind still sharp in the kata's and forms, but her muscles and reflexes not quite able to keep up. But the thin layer that she had built over that part of herself had shattered when she had sensed the attack coming. Angelina was no brawler, no matter how much Latin fury she had. Her every move had been telegraphed, her movement slowed by the selection of shoes and fashionable clothing. Amber had been at some disadvantages herself, the skirt not exactly great fight-wear, but her flats giving her a mobility advantage. That and when she balled her fist she knew where to throw it.\n\nShe spun backwards, her feet leaving the ground and whirling through the air. She landed, punching in two directions at once, her kiap shattering the tentative silence of the empty gym. It was seven in the morning, too early for anybody but the most dedicated student. \n\n\"Bravo. Bravo. But I don't want a rematch.\" The voice intruded into her personal space, and her eyes flew open, watching the woman come towards her across the half court that she had been working out on. The left side of her face was still swollen, and the eye would probably be black for a while. Apparently a dentist had fixed the two teeth already, though.\n\n\"What do you want?\" The younger girl straightened herself, rolling her head from side to side, two nasty pops echoing of the wood floor.\n\n\"I want to apologize. I was kinda out of control the other day.\"\n\n\"You know you are not supposed to come within one hundred and fifty feet of either myself or Jonathan.\"\n\n\"Jonathan is my ex husband, and since we have a child together, I'll go to talk to him if I choose to.\"\n\n\"You do that. After all, why not try to include him now that Samantha is all grown up, and he does not have to send you any more money. Is that why you came out here?\"\n\n\"No. I came out here because Sam told me that her dad had found himself another toy, another young girl that he cast his spell over.\"\n\n\"Is that right?\"\n\n\"Honey, you have no idea what you are dealing with. How old are you, nineteen?\"\n\n\"None of your business.\" Her eyes searched the woman's blue depths, but there was nothing there. Was she on some kind of drug?\n\n\"Well, I know how he is with women. I fell for it, too, once. He is a charming man, a man who knows words. And he will hurt you, the way he hurt me.\"\n\n\"Really?\"\n\n\"You are playing with fire, kiddo. And you will get burned. Look at yourself. Red hair the flavor of the week? Right now you have hormones and age on your side. But you do realize that he is an older man, with almost unlimited resources, and broad access to girls of your age group. He'll have a new slut next year.\"\n\n\"That right?\"\n\n\"Deny it all you want. I just wanted to see for myself. I see it has been a steep decline since I developed the power to leave him.\" Angelina smiled, then turned and headed for the door.\n\n\"I guess you didn't let him see his daughter all those years so that he could not corrupt her?\"",
        "The ex-wife stopped dead in her tracks, spun around, and stared at the younger woman. \"You leave my daughter out of this. He gave up joint custody.\"\n\n\"And he never called afterwards, or wrote, asking to see her?\"\n\n\"You little fucking whore. Just because you can give him your O face right now, don't get snooty with me. I give you a year.\"\n\n\"I give you two minutes to get out of here, or I'll whip your ass again.\"\n\n\"You know, if you call ahead, I'll have breakfast waiting for you when you get here.\" He watched her drop the paper bag on the conference table, then stalk across the room towards him. She was dressed for school in jeans and a t-shirt, and yet he found her incredibly sexy. She was sexy when she was mad.\n\n\"Angelina came down and tracked me down in the gym.\" She related what the woman had told her, and he listened, having fully expected this turn of events.\n\n\"She must have come to see you right before she went to the airport. She flew out a couple of minutes ago.\"\n\n\"How do you know?\"\n\n\"Friends in low places.\"\n\n\"Naturally.\" She came around the desk, and sat on his lap. \"I want you to fuck me. Right now, right here, on your desk. Don't hold back anymore. I want it all. Show me how you feel.\"\n\nHe looked in her eyes, then he obliged. Their clothes formed a pile on the floor as they stripped each other, kissing and racing. It was fast, his cock already hard, her pussy sopping wet. She ignored the stabbing pain of whatever he laid her on, and once he entered her it disappeared totally from her conscious mind.\n\nThere was biting, clawing, scratching, screaming, begging, tears, release, tension and satisfaction as he alternated between eating and fucking her. She was out of control, thrashing around on his desk, her body on fire, her pussy sending out signals like never before. Her clit was in danger of exploding any minute, and her brain was unable to handle all the signals racing up her spine.\n\nThey were sweating, glued together, papers sticking to them, eyes wide and wild, breathing ragged and rushed, the moment eluding her until he granted it. She cried out his name, as he filled her, her nails breaking the skin on his back as she dug in, legs wrapped around his waist.\n\nThey lay together, panting and wheezing, trying to catch their breath, trying to not slip off the table. Finally he released her, and she collected her clothes, heading for the bathroom. She stood before him; naked as the day she was born, looking at the man in her life.\n\n\"I love you Jonathan. No matter what, I love you.\"\n\n\"I know you do.\" He stroked her cheek, kissing her forehead. \"I love you Amber. You are a little angel.\"\n\nShe smiled, then turned and headed into the small bathroom, noticing that he had stocked the medicine cabinet with an almost exact copy of the hygiene products she used at home. At least he was putting that detail-oriented mind to good use. She smiled at the gesture. He had even invested in a hairbrush.\n\nIt was time to head to class, so she pushed back into the office, finding Mike and Jonathan standing over the conference table, looking down at what looked like some kind of massive blue print.\n\n\"Hello Amber.\" Michael Robinson looked like he was damn near seven feet tall, something not helped by the fact that no matter how much he ate, he was as skinny as a scarecrow. He had started balding a while back, and on a dare he had shaved his head. Now it glinted in the overhead lights, which he almost touched with his dome.\n\n\"Hello Mr. Robinson.\" He grimaced, but she smiled her best smile at him. He insisted she call him Mike, but she just could not bring herself to do it. She called Jonathan by his name, instead of Joni, or some other bastardized version, so it was either Michael or Mr. Robinson.\n\nJonathan came over, kissing his girlfriend on the lips before she had to pull away. She was going to be late for class already. \"I'll call you later.\" She accompanied it with the sexiest smile she could muster, and the look on his face told her it had achieved its effect.\n\n\"Can you cook?\"\n\n\"What do you mean, can I cook? I've been a bachelor for a while, I can take care of myself.\"\n\n\"I figured you had a chef on staff.\"\n\n\"Don't be ridiculous, of course I can cook. Come over here.\"\n\n\"Ok. Let the record show that I asked first, and gave you the chance to back out of this idea.\"\n\n\"You are getting a spanking when you get here.\"\n\n\"Ohhh\u2026I feel speeding ticket number seven coming on.\" She dropped the phone onto the bed, and looked at her closet. What to wear to a dinner for two at his house?\n\nHis house sat on a two-acre plot in an older part of town, where the trees had been there long enough to grow into majestic creations of nature, and the houses didn't all look the same. Most of them had walls that surrounded them from back when that was still in style, and some of them even had functional gates. His house was one of those.\n\nShe had her own code to get in, and so the gate slipped into the ground, allowing her to roll up the driveway to the house, parking in front of the garage. The yard was beautifully maintained a crew that came by twice a week, and who put a lot of emphasis on flowers. Many of the ones he gave her were freshly cut from his own yard. That added a special touch.\n\nShe also had a key to the house, but he rarely locked his door, so she just let herself in. The entry was a huge and imposing, with two sweeping staircases leading upwards, and a large entrance down several steps to the living room. He had redone the whole place in granite a couple of years ago, which went well with the fire he had going in the huge fireplace against the far wall, and the white and black furniture he so favored.\n\nThe whole house was rigged with a wide variety of wireless gadgets and such, including speakers that softly played classical music. She had downloaded a wide variety of more modern fare to the server that ran the house, but she doubted he ever listened too much of it.\n\nSomething smelled good, so she turned right, and walked back up two steps stepping past the dinning area that was set for two, and into the huge kitchen. She had always just figured that he had paid somebody to install every type of kitchen device known to man, hang a bunch of pots from the ceiling, and then stock the house with enough food to feed an army. She had never thought he actually knew how to use any of it. She had been wrong.\n\nHe had his sleeves rolled up, and was standing over the indoor grill that sat next to the massive glass-top stove. The flame was roaring at a constant, controlled throttle, and she could hear him humming with the music. A series of bowls were sitting on the island between them, and she could see shrimp marinating in a shallow dish sitting off to the side. A wok was sizzling on the stove, and the smell filling the air was delicious. He had surprised her again.\n\nWhich gave her an idea. Without making a sound she slid to her right, and quietly pulled open the door to the pantry. She did not close it all the way, trying to minimize sound, but found what she needed in the semi-darkness, and managed to set up her little plan.\n\nJonathan had done a lot of things in his lifetime. One of them was a vacation that had been meant to reconnect him with a wife that was clearly on her way out of his life, spent at an old castle in France, being taught how to cook by three world class chefs', and lounging on the beach. He still stayed in contact with Pierre. If he ever saw Andre', he was going to punch that clown in the face for getting it on with his now ex-wife. Or maybe not. Most of his anger at that situation had recently dissipated.\n\nBut one of the things he had never seen was a naked woman standing in his kitchen. Well, she was not really naked. She was dressed in high heels, and an apron that had not been used in years, probably because it had several holes in it, and the lose strings barely held it back.\n\n\"When you got yourself a call girl, is this what you pictured?\" She was in her pose again, hip cocked out, hair down, smoldering eyes and sultry voice. He grabbed the counter, his cock wanting to burst out of his pants, and sent a silent prayer upward, thanking his dear lord and creator for blessing him with such an abundance of lovely skin, a full harvest of incredible breasts, a flood of shining hair, and the beautiful hills of her ass.\n\n\"No. But let me tell you, the reality is outliving my wildest dreams by far.\" And had, since the day they first started screwing like rabbits. \"Wow. You are incredible.\" He took her into his arms, feeling the heat from her body through the thin material, his hands tracing down her back and ass, squeezing it, listening to her giggle.\n\n\"What an amazing little woman I have.\"\n\n\"You like it?\"\n\n\"Love it.\"\n\nShe slowly backed away, smacking his hands down. \"Cause you don't get any until after dinner. I'm excited to see if your cooking is as good as your bragging.\"\n\n\"You are kidding, right?\"\n\n\"Nope.\" She hoped up on the counter, crossing her legs, flashing him her pussy. He could tell that it was freshly shaved.\n\n\"I think I preferred the days when I would just tell you to have sex with me.\"\n\nShe giggled again, her breasts jiggling. \"So what are we having?\"\n\n\"Shrimp wrapped in bacon and cheese, with stir fried vegetables.\"\n\n\"Impressive.\"\n\nAnd it was. She would never have thought that his many talents included gourmet cooking, but then again, why not? With his laser like focus on the smallest details, it would follow naturally that he would be a great chef.\n\nHe continued to try to talk her out of her apron as they sat at the table, the candle dancing with the wind from their voices and laughter, until finally they adjourned to the massive couch, and she granted his wish.\n\nHe took it off slowly, and she slid into his lap. She liked being on top of him, like the reactions it got from him. Climbing onto his face, she lowered her pussy down to his hungry tongue, and he went crazy on his desert. It took all her strength to keep herself upright over him, her body shaking and quivering as he grabbed her hips and ate her with his hearts content. She cried and bucked against him, fucking his tongue, her arms flexing and clenching, until finally she was not able to hold herself anymore, and she slowly slid down his body, her pussy leaving a trail of juices down his chest.\n\nA big hungry cock was waiting for her, and she moaned out as it filled her. She slid right onto it, taking all the way into her. They sat like that for a moment, feeling connected, as she adjusted her legs under her, and looked into his eyes.\n\n\"You are so beautiful.\"\n\n\"You are sweet man. Now I'm going to fuck you senseless daddy.\" And she did.\n\nThere was a peaceful quality when she was sleeping, the sheet halfway down her waist, exposing her breasts, slowly rising with her shallow, easy breathing. She seemed to always be smiling when she slept, and he wondered what she dreamed.\n\nHe sat in his chair, watching her, hands folded underneath his chin. It was routine for him to get up in the middle of the night, a time for him to sit in the perfect peace and quiet, and let his brain roam over the problems that he had to crunch out.\n\nTo his very organized way of thinking, she was not a problem. Indeed, she was the solution to many of the things that ailed him. Like the ray of light that burns away the fog, she brought out depths of happiness in him that he had not experienced in a very long time, if ever. A woman who would love him no matter if he had nothing, and who care not how much he did have. A woman who laughed uncontrollably no matter where they were, and who was honestly awed by all the silly trappings of wealth. What an angel.\n\nAngelina showing up was not something that had caught him off guard, or unprepared. He had known the minute she had stepped of that plane, and been ready for it. What he had not expected was for her to track down Amber, and confront her. But he was pretty sure that his ex had also not counted on getting her ass kicked by the little firecracker. He sure hadn't. It was common for her to pop up whenever he had a chance at happiness, and then piss all over it. Her usual displays had been enough to scare a different woman away, but he did not think that Amber scared easily. \n\nShe rolled in his bed, the sheet pulling up with her, obscuring her tits now, but exposing her ass and back. He fondly remembered the first night he had been with her, the way she had been like a babe in the woods when it came to true intimacy, not the wham-bam-thank-you-ma'am screwing of inexperienced partners she was used to. That had been months ago, and since then she had grown leaps and bounds into the aggressive, self assured and self confident tigress that knew what she wanted, what she wanted to do, and was not to be deterred.\n\nHe had always considered himself fairly experienced, sexually. But he had never done it in a car until she had climbed on top of him, or in a commercial airliner. Her passion seemed to know no bounds, and the way she used her eyes, hips, and tits to entice him was something that made his heart skip a beat each time. As much as he had shown and taught her, she had done the same for him.\n\nSlowly her left leg slipped backwards, backwards, backwards, sliding across the sheets as she rolled onto her stomach, clutching her pillow tight. A small droll spot former under the corner of her mouth, and he had a strong desire to go kiss those full lips. But there was a certain reality here that could not be denied. \n\nShe was twenty-one, moving through college, not yet totally sure what her life would hold. He was approaching forty-three, twice her age, and well established in what it was he wanted to do. What if she wanted to leave the city when college was done? Would he go with her? Kind of late in the game to start moving around again. He could start, run, and be successful with a company anywhere in this country, but did he have the energy left for that? But would it even come to that? She could meet somebody in class tomorrow, some young stud with bright eyes, good hair, and white teeth, the kind of pussy hound he used to be in college. But even if they made it, where would they be when he was seventy, and she was hitting fifty? The gap looked a bit bigger then. And what if she wanted kids\u2026how did he feel about that?\n\nHe stopped the spinning cycle in his brain, the duty Brain cell cutting off the power to a loop of thought that was not going anywhere. What was the alternative? Let this sweet piece of ass slip through his fingers, and hope against hope that there was a woman his age that could do the same things for him that this one could? Fat chance. \n\nOne of the things he liked most about the business was grooming up and coming bankers. He used a lot of quotes and historical examples to illustrate what he tried to teach them, and one of those now came to mind. Anything worthwhile caries the risk of failure. Lee Iacocca said that, he remembered. If he wanted to be warmed by her fire, he would have to risk getting burned.\n\n\"You coming to bed?\" Her voice ripped him from his revelry. She was sitting up, the green emeralds blinking in the moonlight, licking her lips.\n\n\"I'll be there in a minute.\" He watched as she slipped from the sheets, slowly stalking towards him. His breath caught as her fingers touched his face, drawing it in close, hugging him to her flat stomach.\n\n\"You okay baby?\" Leaning down, she kissed the top of his head, scratching his back. He did not know what a light sleeper she was, and that she knew fully well when he slipped from the sheets, when he returned, and that he sat there and watched her between. It was still rare for them to spend full nights together, but she remembered each one.\n\n\"Yeah, I'm fine.\" He smiled up at her, watching her hair shine. She was lovely and he told her so. She giggled, then slipped onto his lap, legs wrapping around him, kissing him softly. She held his face in her hands, kissing him all over, pulling him close, and cuddling him into her. \"Come to bed.\"\n\nHe picked her up, carrying her back to the massive four-post structure. They slid under the sheets together, but she saw in his eyes that sleep was not there yet. She had a solution for that, crawling onto him. He protested weakly, already having been ravaged by her twice that night, but she ignored him. Other parts of his anatomy were more accommodating, and soon enough he was screaming her name. She cradled him close, watching him pass into sleep in her arms. She loved her daddy.\n\nThe small white ball curved up, up, up, passing through its apogee, and began to curve back down. It had sliced slightly to the right, but landed almost perfectly at the two hundred yard marker, hitting the green, bouncing a couple of times, and rolling to a stop on the far side of the white sign.\n\n\"That's a dollar.\" Markus could not match Jonathan in straight drives, but he was known for his precision accuracy. He had pinged the sign a second ago, a feat that Jonathan had bet him he could duplicate.\n\n\"Take your stinking dollar.\" Jonathan watched as his friend picked up the greenback, sniffed it, and stuffed it in his pocket. \"Dirty motherfucker. Put it towards little Jonathans college fund.\"\n\n\"I might buy my wife something nice with it. Like a pack of gum.\"\n\n\"You ought to, after she gave you six kids.\"\n\n\"I know, I'm a lucky guy. How lucky have you been lately?\"\n\nJonathan laughed, teeing up another ball. \"Five bucks says I can do it now.\"\n\n\"Go for it.\" Markus leaned back against the bench, knowing fully well that he was going to walk out of here tonight with at least twenty bucks. \n\n\"This whole relationship thing is screwing with me. I mean\u2026I don't think I've ever been this happy. You know what I did the other night?\" He whacked the ball, watching it curve, curve, curve, and then slam right into the center of the sign, a loud clang echoing through the night. The massive spotlights lighting up the driving range applauded, or at least he liked to think so.\n\n\"What?\" Markus slid the five bucks underneath the water bottle serving as their cash exchange.\n\n\"Went to a dance club. And danced. Or tried to, anyways. She more used me as a pole to dance around. It was awesome. One of those loud places full of college girls and cheap beer. Two dollar vodka drinks all night, pouring Absolute, so that wasn't that bad. She's an incredible dancer. So next time Margie is giving you shit about wanting to go out dancing, we're game. Five bucks I can do it again.\" He teed up, and resumed his stance. \"But then, I lay awake at night, either alone in my place, or with her next to me, and I wonder what will it be like in fifty years. What if she wants kids? What if she meets some Giambi look-a-like with massive arms in accounting class, who's hung like a horse, and spits game like a Vegas casino? What if she gets tired of me in ten years.\"\n\nHis swing was beautiful, the slice of the ball flat, cracking off the tee like a rifle shot, cutting through the air, and slamming into the sign, bouncing back with a loud clang. Markus could not believe it, and forked over the next five. What the hell had gotten into his friend?\n\n\"But then\u2026I think so myself that the other option is even worse. Three hundred yarder for five.\" He teed up, squared up, and looked downrange. \"I mean, I could ditch her, and be alone again. Or I can hang on, ride this one till the wheels fall off, and then walk away with a smile.\" The ball raced into the night, high, high, high, high, high, then seemed to just drop, and bounce against the three in the three hundred yard sign. Markus almost vomited, slipping his last five-dollar bill underneath the bottle. This was unreal.\n\n\"Three fifty, double or nothing.\" Jonathan dropped his last ball onto the tee, took a deep breath, and squared up. \"That mall we are going to build in Lincolnton? Apparently they have some kind of festival up there every year, something to do with something the farmers around there grow. The city council wants us to come up and see it, and display our final plan. So, I'm thinking I should go, and meet the parents while we are at it. What do you think?\"",
        "\"Well, you are dating now, so you should go meet the parents.\"\n\n\"You think so?\"\n\n\"Yeah. Let them see the dirty old man their daughter has fallen for. Come on, you're a charming guy; you'll be all right. They are going to love you, I'm telling ya.\"\n\n\"Thanks.\" The tee broke as he whacked the ball, driving it flat and long with incredible force, both of them holding their breath as it raced downrange, barely clearing the 300, and striking the bottom edge of the three fifty.\n\n\"Let's go get a beer. My treat.\" Jonathan smiled at his friend, who gave him the finger, muttering evil things under his breath. Damn that puppy love.\n\n\"You don't have to do this.\"\n\n\"I want to.\"\n\n\"I'm just saying. You don't have to do this. If you don't want to. I mean, don't pretend for me. Don't do something you think I want you to do. It's ok.\"\n\n\"Is there something you don't want me to do? I mean, do you not want me to meet your parents?\"\n\n\"When do I get to meet yours?\"\n\n\"They are dead.\"\n\nThat shut her up, sinking into the seat of the Beemer as they rolled down the interstate towards home. \"That's not fair.\"\n\n\"What?\" He was trying to decide if this was an argument, not really sure why.\n\n\"I'm sorry about your parents. But now I can't say anything else.\"\n\n\"You shouldn't. Listen, I want to meet the parents of the woman I love.\"\n\n\"You sure?\"\n\n\"Yes, damn it!\"\n\n\"Ok.\" She smiled at him, sliding out of her shoes, and pulling her legs up under her. \"Want to see something?\" She did not wait for a response, but slid her legs onto the dashboard, spreading them wide open, pulling her skirt up to her waist. She was not wearing any underwear, and he could tell by the sheen on her skin that her pussy had to be wet as could be. Reaching into her purse, she pulled out a small vibrator, flipping the switch. The sound seemed unnaturally loud inside the very quiet car.\n\nIt took all his focus to keep his eyes on the road, as he listened to her fuck herself with the pink rabbit. The longer they had been together, the louder she had gotten. And that held true with plastic lovers as well. Unbuttoning her blouse, she began to roll her nipples, her descriptions of sexual activities getting very graphic, his cock getting very hard, and both their breathing getting fast and shallow.\n\nHe listened to her moan and cry out as she came, her body shaking in the seat next to his. She slumped into herself, trying to catch her breath, watching him reach down and adjust himself. Pulling his hand away, she giggled as she leaned down, slipping out of the shoulder belt, and unzipping his pants.\n\n\"Ever have road head?\"\n\n\"No.\"\n\n\"Let me tell you. For a dirty old man, you are pretty tame.\" She felt him smack her ass, and yelped. She was trying to get him to spank her more, and he was slowly getting into it. \"Ohh daddy\u2026what a big cock you have.\" \n\nHe wanted to scream when she sucked him in, her teeth dragging across the head, and down the shaft. She truly went to work now, stroking him, fondling his balls, swallowing the tip of his cock, slobbering all over him, moaning and panting against his cock.\n\nGrabbing her head with one hand, he eased over to the right hand lane, slowing down a bit. His eyes were glued on the road ahead, his breathing now irregular and erratic, despite his best intentions to control it.\n\nShe was now kneeling on her seat, her ass high in the air, wiggling in tune to the music. She kept sucking him all the way in, deep into her throat, as if she was going to suck his very being out of him, and swallow him whole. Her long fingers squeezed the thick cock in her mouth, her tongue slathering the head.\n\nShe knew his buttons, knew what to do, knew what to give him. It was a dance, a game she gladly played for him, a show that she would keep up as long as he wanted her to. So she let him cum down her throat, swallowed it all, laughing and giggling with glee at his eruption in her throat, finally sliding back into her seat, smacking her lips.\n\n\"You are a great lover.\" Straightening her clothes, she smiled at him.\n\n\"Me? You do most of the heavy lifting.\"\n\n\"No, no, no. You are the one that brings all the good toys.\" She waved the rabbit, sliding it back into her purse. \n\n\"Well, I'm not what I used to be, I have to keep up with the competition somehow.\" \n\nShe leaned over, kissing his cheek. \"There is no competition. Don't be silly. You don't think I see you at night, sitting in that chair, watching me sleep? You don't think I know you worry? I do the same thing. I am afraid.\" She pushed her face into his shoulder, and he reached over, hugging her to him. \"But I love you, and I believe in that. Just believe.\"\n\nThey smiled at each other, kissed, then she pointed out the exit, and they raced up the ramp, turning at the top, and passing the city limits. Downtown lay right ahead. \n\n\"Not much to see, I'm sorry.\"\n\n\"Well, I'm working to change that. Perfect bedroom community.\" Or so all the studies said. The problem were a couple of industrial plants that were not exactly what one might call environmentally advanced, along with a strong hog farming sector. This place was a goldmine; all you had to do was scrape away the pig shit.\n\nShe pointed him towards town hall, a new looking brick structure that combined the town and county administration, along with the sheriffs department, and the post office. \"Efficient. I like it.\"\n\nHis appointment was not for another hour, so they walked around, browsing the small stores and shops that populated the \"historic\" downtown. She had never really taken the time to read the historic plaques that lined the roads, but he read each one, up one side and down the other. \n\n\"You gonna hang around, or you want to take the car and do your own thing?\" He was dangling the keys, and she gave him a queer look. \"Where would I go?\"\n\nHe shrugged, popping the trunk and pulling out his materials. \"I don't know. Go home and prepare your parents, hide all your baby pictures, whatever, visit old friends.\"\n\n\"I'm good, thanks. I want to see you in action. And besides, everybody is going to be there tonight.\"\n\n\"Sweet.\" He shrugged his shoulders as a way of acknowledgement, that part of his plan still being a bit hazy. He had hoped for a quiet dinner with the 'rents, maybe take them to whatever limited fine dining options this lovely town offered. But apparently the Okra Festival always coincided with her families' annual family reunion. Why not? Have season kick off and the super bowl in one came, keeps it short and sweet.\n\nThe meeting of the county council was not really open to the public, but the usual senior citizens who were really interested in local government were sitting in the back of the room, and she joined them, greeting several. She realized that he was watching her, as she was watching him. They smiled at each other, and she watched as he set up his presentation. The Chairman of the council gave him the floor, and he launched into his pitch.\n\nShe had to admit, it was impressive. He played the crowd, including the people in the back row as much as those in the front. There was laughter, deep thought, question and answer, and in the end roaring applause. He slowly let the spell slip from his fingers, shaking hands with the County Council before working along the back row. He came to her, and clasped her hands in his, leaning down to kiss her cheek.\n\n\"My, this town has beautiful daughters.\"\n\n\"If I let you put it in my ass, will you buy me a set of tits?\" He pulled back not sure if he had heard her right, but she only gave him a devilish smile, the momentum of his movement carrying him past her to the next person.\n\nIt wasn't until they climbed into the car that he finally had time to ask her.\n\n\"What did you say in there?\"\n\n\"When?\"\n\n\"When I kissed your cheek.\"\n\n\"Nothing.\"\n\n\"Yes you did.\"\n\n\"No, sure didn't.\" She gave him a million watt smile, making him weak. He shook his head, and they rolled out of downtown, towards the farms.\n\nHer parents' house had been built on the edge of a shrinking forest, a fenced in horse pasture behind it, and a barn that looked freshly painted beside it. He already knew that her family had once been into farming, but that they had sold most of the land years ago, and both her parents had worked for the manufacturing plants ever since, making something or another. She was not entirely sure what it was, and he had not pressed the issue. It was not important, and he was not really interested in knowing everything about them upfront. It would bias the picture.\n\nThere was a long line of cars, trucks, and SUV's parked before the house, and he pulled to the end, aligning himself with the massive Chevy monster. \"Do we need to go to town so I can buy a pickup truck to fit in?\"\n\n\"Funny. Are you sure you want to do this?\"\n\n\"Don't start that again, please?\"\n\n\"Well, just so that you know\u2026this is my family, and I have no compulsions about punching somebody in the face if they say something to you.\"\n\n\"I know fully well that you have very little problems punching anybody in the face. I've seen you do it.\"\n\n\"Don't mention it. I'm like Kevin Costner, only better looking. And I won't leave you hanging when the chips are down.\" She left the implied message hanging between them for a second. Then she kissed him, hard and fast, stealing his breath, and leaving him heated. \"Come on tiger, let's play.\n\nMaybe it was better this way, he realized once they got inside. There were so many people! The anonymity allowed him to slowly move through the crowd, taking a look at the people that made up her family, near and extended, blood and marriage.\n\nThey finally made their way through the house, mainly by her pulling him along behind her, and stood on the massive wooden deck that spread out into the pasture that served as a backyard. Four long tables had been set up on the grass, and more people were seated along them. Along the back rail of the porch another long table served as a buffet, backed up by several smaller ones scattered around the perimeter.\n\nAmber took a quick look around, then pulled him to the right, along the wall, waving to several more people, then pushed back into the house, standing in a kitchen that was nearly as big as his back home. But unlike his, this one was bursting at the seams, with people pushing, shoving, and sliding through the crowd. Holy crap. Where did all these people come from?\n\n\"See that couple back there?\" She pointed through the crowd into a small alcove that probably normally served as a breakfast room. The table was probably doing duty outside, and a group of people was standing in the sunlight falling through the glass walls. He could clearly make out four couples, and he took the oldest one as the one she was pointing at. But he asked to be sure.\n\n\"Yeah. That's my parents. The guy to the right is my oldest brother Jack, with his wife Kelly, the one I told you about. Next to him is my sister Erica, with her husband Matt. On the other side is my sister Sarah, with her husband Ryan.\"\n\n\"You are the only one not married.\"\n\n\"Working on it.\" She pushed her ass back into his crotch, giving it a little wiggle. He smiled, and they pushed through the crowd.\n\nHe was not sure what he would say, not sure what he would do. But he rested his laurels on the fact that she would probably punch her brother in a heartbeat, most sisters were willing to. Same with the husbands. High hopes that no women would get ugly. That left mom and dad, the only ones he really cared about anyways.\n\n\"Mom, Dad, this is Jonathan.\"\n\nAnd so the words hung out there, along with his hand. He already knew that her father was ten years his senior, her mother having crossed the start line eight years ahead of him. He could see their eyes focus on him, could feel the laser like intensity of parental scrutiny, feel the judgment. Then her fathers' hand closed around his, a solid grip. \"Pleased to meet you Jonathan. Welcome to our home.\"\n\n\"Thank you, glad to finally be here. Nice house. Are all these people really your family?\"\n\nAmber quietly slipped away, going in search of the vodka. She knew her daddy, and knew by the rasp in his voice that the four second pause between her saying his name and her father grabbing his hand had probably seemed like an eternity to him, or long enough to dry out his throat anyway. She found the bar set up in the living room, grabbed a tall glass, some ice, and splashed the cranberry and vodka that he was so fond of into the glass. Slipping a plastic cup over the top, she shook it, then turned around, finding herself face to face with Erica, Sarah, and Kelly.\n\n\"Hello.\" Slowly she moved sideways, but the three older women mimicked the movement, all staring at her with what she thought was supposed to be a look to make her talk. \"Can I help you?\"\n\n\"You didn't tell anybody you were seeing somebody.\"\n\n\"I told mom and dad.\"\n\n\"You know they don't tell anybody, that doesn't count!\" Erica was beside herself. How could her sister do this to her!\n\nAmber let out a long, low sigh, and looking at her oldest sister. Erica was a self-described relationship guru, having written a relationship column for a newspaper in the states capital for a while. But her first husband worked there as well, so their divorce had made her move across town to the independent newspaper, where she wrote what could politely be called sexual advice. For her to not know what was going in her own family in such matters was tantamount to a personal failure to her.\n\n\"Hi Erica. I'm Amber, your youngest sister. Pleased to meet you. I don't know if you got that memo, but it said I have my own life, and I don't need to give you a transcript.\"\n\nSarah rolled her eyes at the youngest of the three sisters, then pulled her away from the other two. It was impossible for Erica and Amber to be in the same room for more then ten seconds without arguing. They were like that, and nobody really knew why. Probably too alike. \n\n\"How long have you guys been dating?'\n\n\"Like half a year, something like that.\"\n\n\"Really? And you never told anybody?\"\n\n\"Mom and dad.\"\n\n\"Yeah, I got that. What's up?\"\n\nThey were standing at the threshold to the kitchen, and Amber cast a quick glance over to where Jonathan was standing. Her father and brother were laughing hysterically at something he had just said, and her mother was trying her best to look like a lady, covering her hand with her mouth while laughing. Her mother was so funny when she had people over.\n\n\"Come outside.\"\n\nThey walked onto the porch, and down onto the grass, then around the house towards the barn. Leaning against the fence, they watched the horses graze and gallop around their enclosure, ignoring the two girls. Amber offered her sister part of the drink she was still carrying, and they shared it she told her.\n\n\"I meet him back in January. I had a shitty date, and was relaxing in a bar before heading home, and he came in to hang out with the people he knows there. I found out later he knows them because he owns the damn place.\"\n\n\"He's a bar owner?\" Sarah was another one who was not really a fan of Kelly. \n\n\"Well, yes. But not really. Anyways\u2026and this is between you and me!\" Amber's eyes and voice told her sister how serious this was, and the other one nodded. Between the two of them, there were secrets that were holy. This was one of them. \"I went back to the hotel room that he keeps in the hotel the bar is in with him, and he rocked my world. I mean, incredible sex. Best sex ever. And we started seeing each other.\"\n\n\"Just like that?\"\n\n\"Well\u2026he's very charming. And he pays well.\"\n\n\"Excuse me?\"\n\nAmber offered her the glass again, and while she was drinking, explained their initial arrangement, and how it had changed over time. \"He really didn't want it, really didn't want to fall in love with me, I think. And I didn't want to, because I knew he didn't want me to. But neither of us could help it. And now I'm hooked.\"\n\n\"And he still calls you his call girl?\"\n\n\"He never really did. To this really close group of friends he has, he did sometimes. But nobody else really. That was my thing. I still call him daddy.\"\n\n\"That's sick.\"\n\n\"Please, you have never called Ryan daddy when you guys are doing it?\"\n\n\"Sure I have. But that's in bed. You can say whatever you want in bed, it's totally separate.\"\n\n\"Sarah! Don't tell me you are one of those sex only in bed people!\" Amber was truly shocked. This was the girl she had watched her first porn with, trying to gleam what it was going to be like when Sarah went to her first prom a couple of weeks later.\n\n\n\"Well, the bed and one or two select other places.\"\n\n\"If both those places are in your house, I'm going to cry.\"\n\n\"Shed tears then, I know you can cry on command.\"\n\n\"That's so sad.\"\n\nAmber shook her head, finishing of the rest of the red liquid in the glass, then crunching up one of the ice cubes between her teeth. It was a habit most of her family grimaced at, and Sarah was one of those people. The two girls turned as Ryan approached, and took his wife into his arms, kissing her forehead.\n\n\"Your boyfriend was in the same fraternity in college as your dad, so they are best friends now.\"\n\n\"Really? I didn't know he was in a fraternity in college.\"\n\n\"That's because you were not born yet when he went through college.\" Ryan laughed out loud at that one, ignored by both girls.\n\n\"Whatever. How do mom and dad seem?\"\n\n\"They love him. Were you worried?'\n\n\"Him more so.\" Amber pushed herself upright, heading back towards the house to find a refill and her man. Didn't want him to have too much fun without her.\n\n\"You are sure your parents are ok with this?\"\n\n\"When is the last time you slept in a girls room?\"\n\n\"This week, your room.\"\n\n\"No, no, no. A girl's room. I still have Barbie's on that board over there, and all my stuffed animals and such.\"\n\n\"Yeah, the pinkish wall color is definitely in this year.\"\n\n\"Come on, does it make you horny?\"\n\n\"Horny?\"\n\n\"You are about to get raped, you know that, right?\"\n\nHe did, he could tell by the look in her eyes. Ohh, and the fact that she had him pinned to the bed was a clue. The lights were off, and the only illumination was from the moon falling through the window. The extended Mathews clan had partied until late in the night, and he had found most of them very receptive. They got raised eyebrows and a few odd looks, but most of them were just glad that Amber had found man that made her happy. The only one that gave him bad vibes was the mother, but what could one do? Amber was the youngest, he expected that. The baby albums and high school yearbooks had come out over her strong objections, and she had insisted on sucking his cock earlier in the small half bath downstairs, despite the fact that he had physically tried to prevent her from sneaking in there with him. He really had to go.\n\n\"I want what you have!\"\n\n\"Woman\u2026you made me screw you this morning, sucked me off in the car, again downstairs, and you are going to do me again? I'm not a piece of meat that can perform on command, you know.\"\n\n\"Parts of you are.\" She grabbed his cock through his pants and squeezed, making him moan. \"I need a big hard cock now, I'm all worked up.\"\n\n\"I can tell. Make you a deal. Lay on your back.\"\n\nShe did, and then grabbed a pillow when he went to work on her. His tongue always drove her crazy, and this time was no difference. Thrashing around on the bed she screamed into the pillow, trying her best to hold it in as her body shook under his treatment. Unbelievable.\n\n\"Good?\"\n\n\"Oh hell no!\" She rolled him back onto his back, mounting the man of her dreams. \"Not a word.\" Then she sealed his lips with hers, and made him scream down her throat.\n\n\"So\u2026this festival\u2026\"\n\n\"The Okra strut?\"\n\n\"Yeah\u2026\"\n\n\"What about it?\"\n\n\"What's it about?\"\n\nAmber's father laughed out loud, and Jonathan saw where his daughter got it. \"The Okra. You, know the vegetable. There are huge Okra farms around here. So every year we celebrate the season, basically. Big to do for kids, beer tents, all kinds of stuff.\"",
        "\"Really?\"\n\n\"Yeah. We're all going to go down this evening, I assume you guys are staying.\"\n\n\"Oh, absolutely.\" Jonathan picked up a part of the newspaper, and cast a glance towards Amber, who was busy playing with the smaller members of the family.\n\nHe let his eyes linger on her beautiful form as she ran around the tables, carrying a little girl on her back, a mob of toddlers and young kids chasing her. She looked so natural and normal with kids, and the happiness on her face was truly beautiful. She saw him starring at her, and she blew him a kiss, then kept going. Ah, how he loved that boundless energy.\n\nMrs. Mathews walking up, and sitting down on the bench next to him interrupted his view of her, and he could tell by the look on her face that this was no social call.\n\n\"Jonathan\u2026I really think you are a nice guy\u2026but I have some concerns\u2026\"\n\n\"Karen.\" Her husbands voice was sharp and decisive, but she ignored it.\n\n\"I mean\u2026where do you see this in twenty years? Do you see yourself having kids? And what if Amber wants to get a job.\"\n\nHe smiled at the woman, buying himself a second by taking a sip of coffee. \"Well\u2026I hope she gets a job. What else is she going to do? At least for a little bit she should work, get that experience, see what there is in the world that she wants to do. You have a very smart daughter, and I think she'll be a very capable accountant. Or whatever she wants to do. It's not like I have to work. So if she wakes up one morning and decides that she wants to be an accountant in Miami, we'll be there by nightfall. And the kids thing\u2026I have a daughter of my own. Samantha, she's eighteen. I've changed diapers before.\"\n\nKaren nodded, smiling at the man. The smile was pure form, but he knew that. He had been around the block once or twice. \"And in ten years? Twenty? When she is in her early thirties and wants to do things? What will you be doing?\"\n\nHe had been thinking about that a lot. Trying to decide what twenty years really meant in the scheme of things. How much of a difference did it make? And he had come to a simple conclusion in his thinking. \"I don't know. But I do know that I make your daughter happy now. And when the time comes when I don't make her happy anymore, I'll fondly remember the times I did and wave goodbye as she pulls away.\"\n\nHe could see husband sending wife signals with looks out of the corner of his eye. He could see wife trying to subtly send signals back, but she was directly in front of him, so success was eluding her. \"Mrs. Mathews\u2026\"\n\n\"Call me Karen.\"\n\n\"Karen then.\" He smiled at her. \"I know what you are worried about. That twenty years from now it will be over, and your daughter will be forty, well past the prime age for starting a family and such, finding a good husband who will love her and take care of her. I think about those things with my own daughter. How would I feel if she came to me with some thirty year old? And I can only hope that I'm the kind of man that makes your daughter happy.\"\n\n\"You don't care what I think, do you?\"\n\n\"Care enough to pretend that I do.\"\n\n\"I figured that. Bill?\"\n\nHer husband looked up from the newspaper at the mention of his name, a questioning look in his eyes. Again the look signals, and he would have bet his Gulf stream that they had talked about this last night in the privacy of their bedroom, and had come to one of those married agreements where the wife wants something, the husband agrees, and then passes into sleep, which resets his settings back to neutral, and wipes out whatever it is that he said yes or no to the night before. Women as experienced as this one should really know better, he thought.\n\n\"Mrs. Mathews\u2026Karen\u2026you can just tell me how you feel.\"\n\n\"Well\u2026ok.\" She sighed, looked over at Amber, then back at him. \"I have a friend, who is a member of the same club, or whatever, that you frequent back home. She called me a while back, and told me that a woman that looked surprisingly like Amber had been in a brawl in front of the club. I didn't believe it at the time, but when I asked her about it yesterday, she confirmed it. I do not like my daughter being involved in a relationship with a man whose ex-wife is crazy enough to fly across the country, and start a fight in the middle of a street. Nor do I like my daughter being involved with a man who feels the need to refurnish her room and spend inordinate amounts of money on her. What are you paying for? What are you trying to buy?\"\n\nHe smiled at that. He figured that the money would come back to haunt him. He had seen Amber's insurance bill, and it was incredible. Thousands of dollars annually for the privilege of driving. He would never pay anything like that for Sam, he had already decided that.\n\n\"Well\u2026your daughter makes me very happy. And since she quit her job, I felt I could help her out. It meant nothing. All it did was create more opportunities for us to be together.\"\n\n\"And us to save money.\" Bill finally did chime in, but the look from Karen made it clear that his input was not appreciated.\n\n\"Why exactly did she quit her job?\"\n\n\"You would have to ask her that.\"\n\n\"I did. And she would not tell me. She was very evasive, which is not like her.\"\n\nHe found that a bit hard to believe. He was pretty sure that Amber had been a hellion to raise. They had told him so yesterday, and good money said that she had not developed that fierce streak in three years of college.\n\nHis jaw was about to open when he felt her fingers on his shoulders. The touch told him that it was she, and she slid behind him, wrapping her arms around him and kissing the back of his neck. \"What you guys talking about?\"\n\n\"I was asking your friend here what his intentions are.\" Her children had never known Karen to beat around the bush.\n\n\"Don't give him a hard time. It's not his fault he got molested by me and I haven't let him go since.\" She dragged him away by his arm, back into the house, and into her room, slamming the door shut.\n\n\"Don't attack me again.\"\n\n\"Not yet. I'll get you later. What did she want?\"\n\nHe sat down on the bed and told her, while she bounced around the room. The girl had way too much energy today.\n\n\"Can I ask you something?\"\n\n\"Anything.\" She hoped on the bed with him, jumping up and down on her hands and knees.\n\n\"Do you want kids?'\n\n\"Yes.\"\n\n\"My kids?\"\n\n\"Absolutely.\"\n\n\"How many?\"\n\n\"Two.\"\n\n\"What are their names?\"\n\n\"Emily and Jacob.\"\n\n\"Good to know.\" He smiled at her, and she jumped onto him, pinning him down and kissing him all over. \n\n\"You know how to ride a horse?\"\n\n\"Yeah\u2026\"\n\n\"Lets go!\"\n\nHe had been wrong in his initial assessment of the woods. They stretched forever. Or at least it felt like it as they rode through them, the horses slowly walking along as they talked, and looked at the sun shinning down through the leaves.\n\n\"I love coming out here. My uncle owns all this land, and he keeps talking about how he's going to develop it, and get rich of it. But until then, nobody is out here except my family. And they don't like coming out here.\"\n\n\"I thought you said your family sold most of the land.\"\n\n\"To my uncle. He had great plans, like you, to develop Lincolnton. Never happened, not really sure why.\"\n\nHe nodded, trying to stay balanced on the horse. He did know how to ride; he just hadn't done it in about ten years. She slowed down to let him catch up with her, and he could already tell by the look in her eyes that she had mischief on her mind. As soon as they were even, she pulled her shirt over her head, her breasts swaying freely as the horses continued to move. He gulped, his eyes fixated on her pink nipples, and again complementing her on her skin.\n\n\"You say that a lot.\"\n\n\"Because you have beautiful skin. Naturally beautiful skin, it doesn't come out of a bottle.\"\n\n\"You are such a sweet man.\"\n\nThe path turned, and then dipped down towards a river that widened into a small pond. He could see fishes moving around in the clear water, and a grassy spot on the far side that had clearly been made by man. The rock border was a good indication of that. The horses trotted through the water at a fjord that kept their stomachs dry, then naturally turned onto the meadow, and started to graze. They seemed used to this routine.\n\nHe already knew what she was going to do, so he just watched her hop of, strip naked, and jump in the water. The girl was crazy, but it was fun to watch her splash around. Apparently the pond was much deeper in the middle, as she would dive under, swim through the swarm of fishes that was moving from side to side, and then burst back to the surface.\n\n\"You coming?\"\n\n\"You going to try to drown me?\"\n\n\"Maybe once or twice.\" She was smiling at him from the water, small drops pearling down her skin, pooling at the tip of her boobs, and falling into the water. He sighed, climbed of the horse, and took one last look around. Ahh, what the hell.\n\nHe swam to her, and they treaded water in the middle, with the deepest part at least four or five feet below him. As most pools of water, it looked bigger once you were in it, and he tried to remember when the last time was that he swam in a natural body of water like this.\n\n\"First time I ever had sex was on that grass.\"\n\n\"When, last week?\"\n\n\"Smartass.\" She exploded out of the water, her powerful legs propelling herself upwards, and trying to push him under with her hands. But he was read for her, so he let himself slip beneath the surface, with her crashing down into the water on top of him.\n\nHis arms embraced her, and they rolled in the blue weightlessness, kissing and holding each other. Air finally became an issue, and they rose to the surface, still holding on tight. Her breasts were mashed into him, and he liked the feeling of her hard nipples poking him. She was rather partial to his spear rubbing against her, and she told him so. He only laughed, and they swam back to the edge of the water.\n\nReaching into the pack she had strapped to the back of her horse, she spread a blanket on the grass, and they sat down for a more relaxed make out session, taking the time to kiss all the parts that had been a bit less accessible before. She lay back, letting him reexamine the body that he so loved, his lips and fingers taking their leisurely stroll down her chest, across her stomach, back up her back, down her arms, to her legs, up the insides, through her ass, and finally ending with him eating her pussy. \n\nShe cried out his name, and pushed him down further into her with her legs as he dove in, his tongue devouring her, flicking her clit, sucking the juices out of her, and taking her to the places only he could, the places she loved to go. The sensation was always part flying, part falling, all pleasure, and he did not disappoint this time.\n\nShe let him go until she could not take it anymore, her body shaking, the wetness on her skin no longer from the water, but from sweat. Pulling him up to her face, they kissed again, her breathing fast and shaky, the smile on his face seemingly never ending.\n\n\"Listen here, Mr. Games. I know that my mom was giving you a hard time. And I know that you are a silly, silly man, and that you are worrying about the same things, even though you have specific instructions from your call girl not to worry about it. If you don't behave, I'll have to spank you.\"\n\n\"That right?\"\n\n\"I have a riding crop, and I'm not afraid to use it.\"\n\n\"You scare me sometimes.\" But he kissed her anyway, holding her close. She whispered in his ear as he clutched her to him, and when the tears came, he didn't hold them back. Happiness was not something to be ashamed of; he had learned that along time ago. And it only made their passion that much sweeter when they made love on that meadow."
    ],
    "authorname": "Rattlesnake1775",
    "tags": [
        "older man",
        "younger woman",
        "call girl",
        "sugar daddy"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-proposal-ch-03"
}