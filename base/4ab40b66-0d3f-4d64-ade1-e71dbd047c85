{
    "title": "Crystal Clear Ch. 18",
    "pages": [
        "This story is part of a stand-alone continuation of my Road Trip series (see the end of 'Road Trip \u2013 California' for a list of the chapters of that series, in the order to be read). You need not read that series to enjoy this series. Although real places and celebrity names are used for realism, this story is fiction. Please 'read, enjoy, vote, and comment.'\n\nSynopsis of This Story Up to This Point: After a motorcycle road trip laced with grief, love, incest, and sex (read the Road Trip series), Jim, girlfriend country singer Crystal Lee and her sister Ellen, a love interest named Claire, and a nymphomaniac housekeeper Nadia lived together. Jim finished his first movie, enjoyed several orgies with his leading lady and rescued her when she got kidnapped in Nicaragua to great media acclaim. Later, the press discovered that Jim fathered a child in Ohio during the road trip, but Crystal and Jim managed the news, revealed the truth, and the story faded away quickly. During the baby story, the pair met Edie, the sexy reporter who deduced Jim's parenthood, and they bring her back to Nashville for further loving romps before they leave on a concert tour. Billy, their bandleader, and Dan, their publicist, joined the group more often. Claire finally revealed her mysterious past, admitting to doing porn films and being a high-end escort even sharing some details. Crystal and Jim get Grammys for their great music. During a concert in London, Jim receives a blackmail note. He hires a private detective to help search for the culprit, and hence meets Margo. The musical and movie entourage moves to Paris for the next concert and movie premieres. Ultimately, Jim and Margo fly back to London, joining the Mile High Club en route, confront some suspects and resolve the blackmail threat to Jim. After leaving Margo and one of the suspects more than satisfied, the tour and premieres continue. In Berlin, some CIA agents asked Jim to do a special task in Moscow; swap iPods with a mole and bring the iPod with the secret data on it back to the west. He succeeds and receives a highly sex-filled thanks from the female CIA agent. \n\n\n\n\n\n<center>Crystal Clear Ch 18\n\nConcerts, bombs, and heroes</center>\n\n\n\nThe concert Crystal Lee and I were to give started at eight o'clock. Actually that was the time the cover band, The Hobo Palace, started to play with their cute and sexy little singer Cindy Wonder. Every time I thought of Cindy, I recalled several pleasant sexual interludes we'd shared, sometimes with others. Cindy was a pint-sized blond sexpot nymphomaniac, not unlike the rest of the people I hung out with. \n\nEarlier in the afternoon, Crystal and I walked the Aviva Stadium just outside Dublin, getting a feel for the seats and how various attendees would be able to view the stage. Billy our band leader came with us. We also had a long coordination talk with the audiovisual people supporting the concert with our laser light show and special effects. \n\nI still got nervous before performing, so I took a walk around the stage, even taking a look under the elevated stage and checking the aisles Crystal and I would run down to get to the stage. I walked the various corridors of the stadium too, at least those near the stage and the green room. I marveled at how clean, and neat everything was; I learned the stadium had opened in 2010 but even so I could tell the people of the city took care of their jewel.\n\nI noted as I walked the careful attention to security. At the entrance gates, there were metal screening machines, and more subtly to the sides modern equipment to sniff out explosives. A large contingent of police and special security guards were starting to take up their positions around the arena as well. Later, I'd realize what a false sense of security these machines offered.\n\nGuinness breweries hosted a buffet dinner for the singers, both bands, and the rest of our entourage. I must confess that the burnt flavor of the revered brew did not suit my American taste buds. I explained I needed a clear head for the concert, and stuck with Diet Coke. Crystal and Cindy followed my lead as well. Cindy was so cute the way her nose crinkled up at her first taste of the brew.\n\nJust as we finished dinner about six-thirty, the doors opened up and the fans that had been waiting poured into the arena. Terry told us there was a sellout crowd of 51,000. The program would have five parts: starting at eight, The Hobo Palace would play for twenty minutes or so; there'd be an 'in-the-dark' two-minute drill by the roadies to change out band instruments as some random country chords played through the audio system of the stadium; at the end of two minutes, our band would segue in with the opening bars of Texas Dawn, the first song that Crystal and I had done together \u2013 now a song that had sold over sixty million copies worldwide. There'd be a buildup of the music, from simple chords on various instruments, to the entire band playing the song's intro, and then Crystal and I would come racing down different aisles, climb opposite stairways, and move together at stage center, just as we needed to start singing. We'd do forty-five minutes; there'd be a fifteen-minute intermission, and then we'd do another forty-five plus an eight-minute encore.\n\nI kept walking around in the lower corridors of the stadium, rehearsing some of the lyrics and holding a vision in my head about what the concert would be like \u2013 song by song. Crystal found me about seven-thirty; \"Want a blow job, Lover? You seem unusually tense tonight. Anything wrong?\"\n\n\"No, it's just my being nervous. You're used to doing this. Remember up until a couple of years ago, most of my time was spent behind a computer and a keyboard; there weren't 51,000 people I had to please either; only my boss and a dozen or so others that were our clients whom I rarely saw. Oh, and thanks for the offer, but I think I'll save myself for the party later.\" I ran a finger down her cheek, and she turned and sucked the digit into her mouth in a lewd gesture. After that we kissed.\n\nAbout fifteen minutes before eight, I heard some canned music come on the PA system. The idea was to get people in the mood. Despite the sound of the music that filled the place, I found a relatively quiet corner. I sat on a bench and meditated, focusing on a small niche in the wall as I let my mind become calm and rise to a higher level of consciousness. I was aware but turned off. Somewhere in the ten-minute period, I felt a surge of chi \u2013 spiritual energy, and a sweep of love for all mankind. A great sense of well-being also swept into me. When I rose, I felt renewed, as though I'd slept for eight hours and finished an energizing run. I made a mental note to come back to this state during intermission; I was ready for anything at that moment.\n\nI stood with Crystal, and we watched The Hobo Palace open and excite the audience. Cindy sounded like Stevie Nicks, but with a tight trim little body that probably made every male tongue in the place water, and probably many female tongues as well. They belted out five songs, about three or four minutes each.  Cindy thanked the audience for their support to a large round of applause, and then the stadium went dark \u2013 well, almost dark.\n\nAbout twenty-five roadies were split almost evenly between getting rid of The Hobo Palace's</I >band equipment, and getting our no-name band set up. The 'idle' music had started, slowly building to the point where our band would take over just after a loud PA announcement about our part of the concert. I moved over to the other doorway I was to burst through. An usher with a walkie-talkie stood beside me to be sure we exited at just the right moment. We'd done this entrance before with great success.\n\nAfter a squawk on his radio, the usher turned to me and said, \"GO!\"\n\nI burst through the curtains in front of the door and looked across to see Crystal coming out her door. Two spotlights picked us up instantly and followed us as we ran the short distance to the stage, touching hands of fans in the VIP section along the way. Cameras flashed. The crowd roared in welcome. The music volume went way up, especially as we climbed to the stage level.\n\nOur timing was spot on. We came together, picked up our wireless mics from a stand, and started singing the first verse of Texas Dawn precisely on the mark. We gave each other a big smile as we got into the song. Around us some large screen LED displays showed close-ups of Crystal and me, the band members, our backup singers, and various other scenes of excited fans, and other visual eye candy such as tumbleweeds rolling through a western ghost town.\n\nWe did eight songs, but each of the eight ran an average of five minutes, plus one of them was a medley. Every song got a standing ovation and huge cheers. Intermission time came, we segued from out last song into some pre-recorded music, and Crystal and I left the stage.\n\n<center>* * * * *</center>\n\nBack under the stadium, as Crystal and I walked down one of the corridors, she said, \"I need some water. My voice was getting gravelly towards the end of that set.\"\n\n\"Take a bottle back out with you for the next set. No one will care if you use it.\"\n\n\"I think I will.\"\n\nWe went into the green room, and both got some water. I hit the men's room. When I came out, Crystal was pacing. I told her, \"Try meditating. I'm going to take five to center myself a little \u2013 to pick up some more chi. Get mindful. I'll be right around the corner.\" I gestured to one wall.\n\nWe both meditated and knew the language. She nodded and went to a corner of the room and sat quietly. \n\nI left the room to find the bench and niche in the wall I'd used before the concert started. I found the corner; the place was still quiet, although overhead I could hear the thunderous noise of the crowd in the first tier of the stadium stands. \n\nI closed my eyes briefly, told my inner clock I wanted three-hundred seconds of peace and chi. When my eyes opened, I locked onto that little niche in the wall, no bigger than the tip of my finger. It was just something to focus on and otherwise held no existential meaning.\n\nExactly five minutes later, I arose, felt renewed, and started to head back to the green room. Somehow, I'd managed to ignore the five thousand or so fans directly overhead despite all the noise they made.\n\nAs I turned the corridor from my meditation spot I saw a large backpack leaning against the wall of the green room and directly under one of the main supporting columns for the first and upper tiers of the arena.\n\nIt hadn't been there before.\n\nIt looked out of place.\n\nMy intuition kicked in. My chi.\n\nI went over to it and carefully opened the top of the bag and peered in. I remember thinking it odd that no one else was around.\n\nSHIT. SHIT. SHIT. \n\nThe backpack was a bomb. A GREAT BIG FUCKING BOMB! One part of my mind screamed, and the other remained calm and started to list the steps I needed to take to assure people's safety.\n\nI backed away from the bag and ran into the green room. Crystal, Terry, and a few others were standing around waiting for the cue to go back out.\n\nI yelled, \"GET OUT OF HERE NOW; THERE'S A BOMB ON THE OTHER SIDE OF THAT WALL.\" I pointed to the one wall. \"Get security or the police down here. But get away from here. See whether you can clear the stands above us. Get people diverted away from here.\"\n\nWe all burst out of the room in different directions. \n\nI went back to the bomb. I had to see if I could defuse it. I had training years ago in Army Special Forces in explosives, although most of the stuff I did involved blowing things up instead of stopping explosions.\n\nI knelt down beside the bag, and carefully examined the bag for trip wires or booby traps. I didn't see any, but my intuition told me there had to be at least one. I carefully unzipped the side of the bag, searching every fraction of an inch for some triggering device. I did love my life, and didn't want to end up in little pieces all over the stadium grounds.\n\nAs I bared the guts of the bomb by folding down the zippered flap of the backpack, I could see the bomb was made up of twenty or thirty pounds of PE4, a plastic explosive similar to C4 but with slightly more deadly effects. As I recalled the exit velocity of the explosive particles topped 30,000 feet per second; C4 was about two-thirds of that. Either way, if the bomb you were disarming exploded you were dead \u2013 D. E. A. D. and splattered all over creation; there would be no bone or soft tissue fragment large than a pea.\n\nPressed into and around the plastic explosive were multiple detonator caps and scrap metal, such as nails and ball bearings. The shrapnel would add to the deadly nature of the bomb.\n\nIf the bomb went off, my guess, given the size of the PE4, was that it would clear an area above and around me about a hundred-fifty feet in radius. All in that zone would die. Outside that zone, many more would be hit by the shrapnel and be seriously injured or die. Because of the bombs proximity to a major structural column, the upper tiers of stadium would probably cascade down on the lower tiers \u2013 not a good thing to let happen. The stage was not that far away from when I squatted; it too would be decimated.\n\nBehind me, I heard the scuffle of arriving feet. By now, I was lying on my stomach trying to assess the underside of the device by unzipping the bag's flap down to the floor. I had already studied the timer, and the four visible sides of the bag with one side open. Now, I could see a pressure switch on the bottom of the device. If we picked up the bag or lifted the bomb in the bag, it surely would detonate.\n\n\"What's happening Mr. Mellon,\" one of the security people asked. \n\n\"Just give me a minute. Can you clear the stage and the area above us?\"\n\n\"How bad is it?\"\n\n\"Very, very bad. This is about as high powered a device as you can get given its size.\"\n\nA policeman approached cautiously, \"The bomb squad are on their way. They're coming from downtown.\"\n\nI said, \"So, they'll be here in about twenty minutes?\"\n\n\"Yes, maybe a few minutes longer.\"\n\n\"Good, then they can help pick up the pieces. This bomb is set to go off in fourteen minutes.\" I glanced at the LED display on the timer.\n\nI heard a dozen people swear behind me. Several ran off.\n\nI carefully reached into the device and started to separate the wires so I could see their colors and where they emanated from. \n\nI turned to a policeman nearest me; \"I need wire cutters, a screw driver, tool kit, if you will. Fast!\"\n\nSeveral men ran off in different directions.\n\nI heard the music of the concert gear up through the walls of the stadium. Seconds later, I heard Crystal start her hit song Flirty, Flirty Cowgirl. I knew she'd go about ten minutes with this rendition of the song. I wondered why she'd started singing given the warning I gave everyone in the green room, including her, about the bomb.\n\nI turned to a policewoman about twenty feet away, as though the distance would save her; I said, \"I want you to go out by the stage. Take some other police with you. When you hear this song end \u2013 and in no more than ten minutes from right now \u2013 I want you to get Crystal and the band members off that stage and running, and I mean running to the other end of the stadium. I don't care what you have to do, but you do it. Understand?\" I waved my arm at the ceiling, \"And get the area cleared above us!\"\n\nShe nodded, turned, and sped away at a good pace. I heard her voice talking to a couple of others on her walkie-talkie as she turned a corner \u2013 a corner that wouldn't be there in thirteen minutes and a few seconds unless I could stop this thing.\n\nOut of the corner of my eye, I saw someone with a camera taking pictures of me and the bomb. 'My God,' I thought, 'We're about to be blown to bits and the paparazzi are here.' I waved him away, and went back to the bomb.\n\nI talked to myself. I'd been taught to do this. \"Red wire comes from the battery pack, runs into left side of timer. White and black wires run from the timer to blasting caps on left side of bomb. The blue wire runs from the left side of the timer to the battery pack. Green wire comes from the battery pack to the timer. What the hell; this is DC; there shouldn't be a third wire from the battery to the timer. Hold that thought.\"\n\n\"Red and yellow wires goes from the detonator to right side blasting caps ... blasting caps are in series just as on left. There are no wires on back of bomb that I can see. The bomb must have been assembled inside the bag on top of the pressure triggering device. Oh yes, there they are; another set of blue and black wires running up middle of bomb from the pressure pad to the timer and detonator; they'd be hard to reach, but not impossible.\"\n\nSomeone slid in beside me almost like a baseball player sliding into home plate. He was a young police officer who'd stripped off the top half of his uniform down to his t-shirt. He dropped a handful of tools between us. \"How can I help? I've had some training in this stuff \u2013 in Afghanistan.\"\n\n\"Just hang in with me for a few minutes. You take a look.\" I called his attention to the pressure sensor as well the extra wire between the battery pack and the timer. \n\nHe said, \"If we cut the wires from the pressure sensor, we could at least move the bomb. It'd still be active.\" I enjoyed his thick Irish accent despite the current circumstances.\n\n\"Hard to get to.\" I pointed to the wires near the middle of the stack of explosives. \"I'm afraid if we reach in to cut the wires, it'll tilt the timer. There might be a mercury switch inside the timer.\"\n\nHe said, \"Most likely, there are capacitors inside the timer. If we cut the battery wires, the bomb will still go off. The way it works is the capacitors then fire off their charge right away. Boom boom.\"\n\nI could see the paparazzi photographer had snuck closer and was taking more photos of the two of us leaning over the backpack. \n\n\"How could we cut the wires from the pressure sensor to the timer? If we try to pull them out, they'll pull the sensor too, and the thing will go off.\"\n\n\"I'm Daniel, by the way. I know you're Jim.\" We spent five precious seconds and shook hands.\n\nDaniel said, \"Let me take a look from your angle.\" We shifted positions.\n\n\"If I shot through the device at this angle, I think a bullet would sever one or maybe both of the wires.\"\n\n\"Just do one,\" I said. \"With two, you might complete a circuit in that fraction of a second a bullet would hit both wires.\"\n\n\"Ah, good thinking.\"\n\nDaniel undid his side arm and pulled out a Glock. He turned to the men standing behind us and in his thick brogue said, \"We're going to try something. If this doesn't work, well, you know ... you'll all join the angels if you stay close by here. If it does work, we'll need a route clear to the nearest outside door and a place to deposit this thing outside where it won't do much damage. May God bless us all.\"\n\nFour men ran off; the others stayed including the photographer who kept taking pictures, now with a telephoto lens.\n\nOne of the men who'd run off came back as Daniel and I tried to ensure any ricochet would not come back into the bag. He said, \"We've got a path for you cleared to an outside door into the parking area. There's a culvert if you can get the bag that far. One of the other gents will show you. He's waiting by the door.\"\n\nDaniel started to aim his gun into the side of the bag, steadying the short muzzle with his other hand. I caught a glimpse of the timer as it changed from '6:00' minutes to '5:59'. I thought, well only 360 seconds left to live.\n\nI spoke, \"Better do it now. We'll have a chance to get it away from here.\"\n\nDaniel sighted down the barrel of the handgun. \"Goodbye World,\" he said, and then I heard the loud retort of his handgun. My ears hurt from the sharp sound. Bits of concrete went flying from the wall behind the bomb where the bullet ricocheted away; a few rained down upon the two of us.",
        "The fact that I had heard something and formed a thought about that fact meant the shot had not detonated the device. \n\nDaniel said, \"One wire is severed.\"\n\nAs Daniel started to stand, I reached down, quickly zipped up the side of the bag to contain the bomb, lifted the device with a wince, and broke into a run down the corridor for the door. \n\nDaniel ran faster than I did, as did one of the policemen directed us to the outside door. I carried the thirty-pound bomb, clutching the backpack to my chest as I ran. It made me unsteady, and by now I knew there couldn't have been any other switch in the bag that would detonate the device if the bag were disturbed.\n\nDaniel held the door for me, as we hit the cool night air. I heard the last verse of Crystal's song start in the distance \u2013 that meant I had only two or three minutes to get this thing far away from the stadium. I said a silent prayer of gratitude for my ability to run. Every step I took led me that much further from the people in the stadium. Every step I took meant more people would live. All those morning runs and exercise led me to this moment and the ability to take the bomb to where it could explode in relative safety. \n\nA policeman up ahead gestured to us. Daniel ran ahead of me; \"Head that way,\" Daniel pointed to a deep drainage ditch that had probably been designed to carry rain runoff from the parking lot to the Irish Sea. We cut through some lanes of parked cars and started to run along the lip of the long trench.\n\nDaniel said, \"Look!\" He pointed at where the channel dipped into a large culvert \u2013 a pipe about four feet across with a coarse wire cage across the end to keep humans from entering. We ran and slid down the side of the gully into a wet bog in front of the large pipe. \n\nI rapidly said, \"The bag or bomb are both too large to fit through the holes in the bars.\"\n\n\"No, wait,\" Daniel yelled. He pulled out his Glock again and aimed it at the large pad lock holding the gate in place. He fired, and the lock disintegrated, the metal parts flying in all directions. I saw one graze his face, leaving a small gash.\n\nDaniel swung the large gate open, and I ran about twenty feet into the dark concrete watercourse. I set the bag down, turned and ran back to the opening. \n\nDaniel and I scrambled up the wet slope of the trench, sliding back several times before we reached the edge of the parking lot and level ground.\n\nSeveral others had been approaching from the same direction we came. Daniel shouted at the top of his lungs, \"RUN LIKE HELL! GET AWAY FROM HERE.\"\n\nWe both bore down in our sprint, putting one lane of cars and then a second between us and the culvert holding the bomb.\n\nJust as we sprinted into the third lane of parked vehicles the explosion hit with a HUGE force. \n\nKA-BOOM!!! \n\nI went flying forward between two parked cars because of the pressure wave from the blast. The earth shook as though the planet would crack apart. An immense cloud of debris apparently rose from the explosion in all directions, but mainly out of the open end of the culvert.  Shrapnel of all kinds started to rain down upon us. I scrambled under the car I'd fallen beside. I could see Daniel squirming beneath a pickup truck one vehicle over when I looked past the undercarriage of the car I was under. A second later, a rock the size of my head smashed down where I'd fallen leaving a six-inch deep pock mark in the asphalt of the parking lot.\n\nAs the shower of rocks and debris slowed and then stopped, I heard the cacophony of hundreds of car alarms triggered by the explosion \u2013 maybe thousands. When all seemed clear of falling debris, I slithered out from under the car. My ears ached from the sound of the blast. I found I had a bloody nose, and a gash on my forehead, most likely from my fall. My arms and legs ached. My ears were ringing from the sound wave of the blast. One hand was bloody and badly ached from a severe bruise.\n\nAbout sixty cars that had been nearest the blast had been turned over or tossed about into the next aisle. I could see the edge of a crater between the first and second row of vehicles. Every vehicle within sight had serious damage. Many other autos had shattered windshields and side windows. The cars in the second row nearest the bomb lay at odd angles; several were upside down or flipped over, and at least a dozen had been flung onto their sides by the force of the blast. As far as the eye could see cars were covered in dirt and rocks of varying sizes \u2013 some as large as a living room chair.\n\nI walked to the edge of the crater. Where the culvert containing the bomb had been A crater in the earth about thirty feet deep and about a hundred feet across sat smoldering from the heat of the blast. There had been at least six feet of dirt and paved parking lot atop the culvert; across the crater, it had all been blown into the sky and rained down on the cars. Any trace of the ditch, iron gate, or concrete pipe had been obliterated. The crater continued to smoke like an angry volcano on all sides as I turned to find Daniel. \n\nAs I headed to where Daniel had been, he popped up between two cars. He looked stunned and in shock; he had a strange look on his face. His left arm had been ripped open by some piece of debris; blood gushed from just below his bicep. \n\nI whipped off the bandana I'd been wearing as a 'western prop' for the music show, and he allowed me to tie the scarf tightly around his upper arm as a tourniquet. I said to him, \"Let's get you to a doctor. Come on. Can you walk?\"\n\nHe looked at me and haltingly said, \"You don't look too good yourself. Better than me, though.\"\n\nDaniel walked gingerly next to me trying to immobilize his arm as we threaded our way between cars and headed to the stadium. The stadium looked undamaged, but I could see that some smaller rocks and debris had been hurled at least that far. Amazingly, one car had been hurled so it lay crumpled beside the door from the stadium we had exited.\n\nIn the distance, I heard the emergency sirens \u2013 the klaxons \u2013 of dozens of emergency vehicles racing to the scene.\n\nDaniel stumbled, and I brought my arm under him to support him. At that instant, a camera flash went off; there stood the same paparazzi photographer who had been taking pictures of me working on the bomb. He also had some scrapes and bruises, and blood running down his face from a scalp laceration; he must have been in the parking lot when the bomb detonated. \n\nThe newsman let his camera swing down to his side; he came to us at a run, \"How can I help?\" He moved to support Daniel's other side.\n\n<center>* * * * *</center>\n\nThirty minutes later, I sat with Daniel and Brendan Spencer, the photographer, on the back bumper of an ambulance. We had all been treated for our wounds. Daniel's was the most severe \u2013 a broken bone from some falling piece of debris, and he'd need some hospital treatment and many stitches to sew him back together. A field nurse had done what she could to stop the bleeding.\n\nThe bomb squad had shown up, but their role had changed from prevention to diagnosis. I knew that they would spend countless hours at the bomb site sifting through every piece of evidence they could find. I also knew I'd spend several more hours with the police recounting details about the knapsack and bomb, and so would Brendan since he'd taken pictures of the device.\n\nThe concert had stopped \u2013 taken an unplanned intermission as emergency vehicles poured into the parking lot. Public address announcements informed the crowd what had happened and urged them to stay put. Repeatedly, announcements were made that even if people could get to their cars, they would not be able to leave the parking area because of the large gathering of emergency vehicles. The whole stadium had become a crime scene.\n\nTerry and Crystal somehow found us sitting on the ambulance. I introduced them to Daniel and Brendan. After an initial bout of hysteria and concern Crystal quieted down and held me unbelievably close to her. She sobbed wildly, so glad that I was unhurt. Later, I'd have to pay special attention to her, not an unpleasant thing to do. Her concern was genuine, and full of love. I had a huge rush of adrenalin still surging around in my veins. I asked, \"Did anybody in the stadium get hurt?\"\n\nCrystal and Terry both shook their heads. He said, \"I don't think so. Some policewoman escorted Crystal and the band off stage and back into the far side of the stadium about a minute before the bomb went off; people were puzzled about what was happening until the big bang. We could see the fiery explosion because the fiery plum went so high, some small debris rained in here and there, but other than that nothing really bad.\"\n\nI looked at Crystal who still snuffled into a tissue. \"Care to do the second half of the concert? Can we round up the band?\" She was still on the edge of tears about what could have happened \u2013 all the carnage, but she nodded in agreement and squeezed my hand. We hugged again, and then I held her hand as we headed off to reenter the stadium and finish our show for the now captive crowd. Daniel wished us well.\n\nFifteen minutes later, Crystal and I walked up onto the stage to a second thunderous round of applause from the fans still in the stands. We had found everyone in the band, and they were more than eager to continue. It appeared that maybe ten or twenty percent of the crowd had left despite the announcements to stay put. I had visions of many people walking home in the middle of the night.\n\nMy bandaged hand, forearm, and cheek were obvious additions to the onstage show, plus my costume was covered in dirt, and my backside muddy from where I'd slid down the embankment into the drainage ditch \u2013 when there was still a ditch. I'd brought Brendan with us as he turned out to be a good fellow, and he'd helped me get Daniel to medical aide. He wandered around in the VIP seats close to the stage and took a couple of hundred pictures of us before he waved, and sauntered away halfway through our second set.\n\nWe sang for ninety minutes straight until Crystal and I were both hoarse. At our invitation, Cindy Wonder, the singer from The Hobo Palace band joined us on stage for most of our set. The concert that was to have ended at ten o'clock didn't end until half past midnight. The parking lot remained in chaos, particularly in the areas with damaged vehicles. Police had cordoned off a large area and didn't want the vehicles moved until the bomb squad had studied the scene. Several trucks with large spotlights dotted the parking area by then turning night into day; the focus had become everything in the blast zone \u2013 probably a radius of 500 feet.\n\nThe police had arranged for about a hundred buses for the hundreds of people whose cars were damaged beyond use or in the cordoned off zone. More buses seemed to be arriving by the second. Some crude process had been set up to route people to buses going to particular urban or suburban locations. Our limousines had been damaged beyond use in the explosion. Crystal, the band, and the rest of our entourage filled one bus and eventually got back to the Four Seasons. We fell into bed about three-thirty in the morning, late even by our standards.\n\n<center>* * * * *</center>\n\nNancy flopped down on the bed beside Crystal and me. We'd both been sound asleep. Through squinted eyes, I peered across Crystal's nude body at the clock \u2013 eleven in the morning. Nancy bounced a little on the bed, \"Come on, you two. Get up. Time to face the day and a grateful public.\"\n\n\"Huh?\"\n\nNancy, who wore only one of my t-shirts, dropped a stack of newspapers onto the foot of the bed as I sat up. The headlines were all focused on the explosion ... but more than that, they focused on the fact that I'd again become a hero: I'd discovered the bomb, tried to defuse it, and then at great personal risk had gotten the device far enough away from the stadium to minimize damage and save lives. One paper's headlines said I'd put my own life at risk to save thousands: hyperbole at its best.\n\nReading the front page story in one paper, I learned that only eight people had been hurt by flying debris \u2013 all had been in the parking lot, but two people had been killed in the blast: a stadium guard and a policeman who had come after us to help as Daniel and I ran away from the arena with the bomb. We hadn't seen them as we ran from the culvert, and apparently they hadn't heard Daniel's shout to 'Run like hell.' All had been too near 'ground zero' at the wrong time.\n\nSeveral newspapers quoted a police statement saying that if the bomb had detonated where I had found it, over a thousand people would have been killed instantly and many hundreds more severely injured, and that presumed that the upper tiers of the stadium didn't cascade down on the lower ones.\n\nNo one had yet taken credit for planting the device; speculation ran from the IRA to Al Qaeda terrorists, and even included the humorous possibility that someone didn't like country music.\n\nAlso on the front page of several papers were pictures of me kneeling or lying down in front of the knapsack inspecting the bomb. One was a close-up of me picking the wires apart on the bomb. A second showed Daniel firing his gun into the bomb to cut the wires. Another picture showed Daniel and me running down the interior corridor of the stadium as I clutched the knapsack to my chest. Others showed the crater, and the chaos in parking lot with all the destroyed and shattered vehicles. If the event hadn't been so tragic, it would have been right out of a B-grade movie.\n\nI had told my story to Brendan as we sat on the bumper of the ambulance. I guess the papers with the most accurate versions were the ones he had some affiliation with. \n\nNancy leaned and kissed me. \"I just wanted to be the second to kiss a real live hero this morning. I'm sure you'll get many more. The lobby is full of paparazzi, but the hotel staff has held them off bothering you. Also, two women called \u2013 an Ellen and a Claire who said they were Crystal's sisters; they want you to call them back as soon as you wake up despite time of day. Also, Anna, your sister, and Lauren, your sister-in-law, called separately, and they seem desperate to talk to you too.\"\n\nA groggy Terry leaned against the door jam. He said in a sleepy voice, \"Why don't we do something with the press at twelve-thirty or one o'clock. That'll give us all time to get decent and eat. Oh, and you should know, I talked to Ellen last night; I couldn't sleep so I let them know what had happened. She told me it was already on American television \u2013 every channel. Now, can we order up room service?\"\n\nNancy chided him, \"Eat and sex. You must be a guy!\" Terry just nodded numbly in his stupor.\n\nWhen the press conference started, Terry estimated there were two hundred members of the media present, and more kept filing into the back of the ballroom the hotel had assigned us for the press event. Television cameras from two-dozen networks across the globe had been set up; two score of photographers sat in the front row taking pictures of everything that happened; and a mass of microphones and pocket recorders lay on the podium or the adjacent table to pick up the audio of the press conference. The room broke into pandemonium when Terry, Nadia, Jill, Nancy, Crystal, and I walked in the door. By agreement, Terry would moderate the press conference.\n\nOver the initial shouts of a hundred questions, Terry held his hands up. The room didn't quiet for two minutes, but finally the din died down. Terry and I walked up to stand behind the podium. Crystal and the others lined up along one wall. Terry autocratically stated that the press conference would start with me giving my version of the events, and then we would entertain questions only from people he called upon. No unruly shouted questions would be answered. \n\nI described going for a short meditation during the intermission, coming back, seeing the out of place bag, sensing something was wrong, and doing a little exploratory probe of the knapsack. I told about ordering up some help, and then falling back on my Army Special Forces experience to figure out what we could do with the bomb, particularly how to move it. I told of Daniel's arrival and how he saved the day by innovatively shooting the wires to the pressure plate that we couldn't reach, and then how he'd led me to the culvert where we'd stashed the bomb. I told about how we'd been blown to the ground by the pressure wave, sought shelter under a couple of vehicles, and then how we'd found ourselves, described our injuries, and our feelings after the debris stopped falling from the sky. I also applauded the bravery of the two policemen who had died in the incident, pointing out that we were all trying to preserve life and property.\n\nAt that point Terry opened the room up for questions, picking on various individuals for over an hour. By that time, I had to answer many questions being asked with 'I don't know,' 'You'll have to ask the police that,' or other deflecting statements. My part in the explosion had been hashed over, as well as a few questions about what Crystal thought of me, and whether we were going to the premiere the following evening (Yes, the less disruption we allow this terrorist to create, the better off we all are).\n\n<center>* * * * *</center>\n\nThe explosion and press event diverted people's attention from being horny, at least until after dinner. Nancy had left for several hours in the afternoon to put the iPod I'd smuggled out of Russia into 'better hands,' and to go to her hotel and get some other clothing and makeup. When she rejoined us, she brought a suitcase and wore an attractive casual but sexy short dress with a three-inch wide black belt that accentuated her narrow waist and amplified her rack. Nancy started to spice things up when she twirled her skirt to show us she had gone commando for the rest of the day. She also pulled aside part of the top of the dress to prove she was braless as well.\n\nI teased Nancy about the black belt, saying something about karate, and martial arts. She nodded and told us she indeed had those qualifications in Tae Kwon Do, the Korean martial arts, explaining that in this art the black belt or 'third Dan' also contained three levels indicated by black stripes on a white belt; she had all three black stripes. She amazed me further by explaining that she could conduct many strikes of the art wearing high heels, a fact that could turn deadly for any opponent since she wore stiletto heels most of the time, even during a couple of our sexual escapades.\n\nWe had a catered dinner in the hotel room because so many paparazzi remained in the public areas of the hotel. Nancy became the target of our conversation and entertained us at dinner with stories from her CIA training at the Arlington, Virginia headquarters and later at Camp Peary near Williamsburg \u2013 a place affectionately known as 'The Farm.' She was careful to explain that everything she told us was unclassified. She had funny stories about all the training activities and the tricks they tried to play on the instructors: students practiced surveillance and counter-surveillance techniques, clandestine communications methods, brush passes, servicing dead drops, explosives, weaponry, and defensive and offensive driving to mention a few unusual skills. Nancy had specialized in the Baltic countries and Russia because she had taken Russian in high school and college, so had some background in the area. She also had some other qualifications, such as a commercial pilot's license.\n\nI couldn't share with Nancy and the others that I too had been at Camp Peary for two weeks when I was in the Army Special Forces for some highly specialized training about a mission we were about to conduct in the Middle East. I was about eight years older than she was, so I thought it unlikely we'd been there at the same time.",
        "After dinner, we 'retired' early. Terry, Jill, and Nadia paired off, leaving Crystal, Nancy, and me to the large bed. Nancy proved highly innovative about how we could make love, and after we got started Crystal and I got in the groove with her ... well, I got into her groove actually.\n\nI'd gone to shower after dinner, and when I came out of the bath I discovered Nancy nude and lying back on a pile of pillows. Between her legs lay an equally naked Crystal whose head bobbed and twisted as her tongue stormed about in Nancy's gorgeous red hot sexual center.\n\nI guess Crystal must have sensed my presence because without looking she said to me, \"Yummy. You should have told me that Nancy was this sweet. I could dine here all day ... but tonight this is the perfect dessert.\" She bore back in with her tongue, and I watched Nancy stiffen in erotic response to the feminine assault.\n\nNancy had a silly glassy-eyed look on her face. She made eye contact with me, \"Do you know your girlfriend has the most talented tongue of anyone I know \u2013 well, except maybe for you. She can ... oh, shit, here I go ... aaaaagggaaaaaaaiiiiiiiinnnnnnnn.\" Nancy's eyes closed, and her body thrashed around as she tried to maximize clitoral contact with Crystal's tongue.\n\nI lay down beside Crystal. She pulled away briefly, and French kissed me; I could taste Nancy as we loved. Crystal said with a lecherous smile, \"Want to help?\"\n\nI nodded. Crystal went back to licking, so I moved one hand under her chin and slowly inserted a couple of fingers into Nancy's dripping quim. Nancy had another mini-orgasm from the way her body reacted and the moan of pleasure we heard.\n\nCrystal let me move my hand around until I found Nancy's G-spot, an area deep inside and anatomically behind her clitoris. As I started to massage the area with my fingertips, Crystal went back to gnawing and munching around the immediate area. A couple of Crystal's fingers also joined mine inside the brunette.\n\n\"Oh, fuck, you guys are ... are ... can't someone come and fuck me. That's what I need, a big hard cock right now ... deep inside me ... Ooooooooh, fuck.\"\n\nCrystal nudged me. I jerked my fingers from Nancy's soggy pussy, and Crystal moved to the side slightly. I knee walked between Nancy's legs and used my hardening cock to smear her wetness plus the juices left by Crystal's attention around her nether region. Occasionally, I'd let only the head slip into the opening of her vagina. Nancy would writhe and try to capture more of me. Eventually, I gave into her longing as well as my own, and our dance of love started.\n\nCrystal massaged Nancy's upper body and breasts, and often kissed her. The pair was forming a bond deeper than the casual friendship brought about from our Russian adventure. \n\nI heard Nancy invite Crystal \"to place your pussy over my face, pleeeeeaaassseee.\" Crystal tossed some pillows off the bed to make more room, and then lowered her own quaking slit slowly onto Nancy's tongue \u2013 her eyes closed and a look of rapture crossed Crystal's face. When she opened her eyes, we stared at each other, and then kissed and whispered, \"I love you\" to one another.\n\nAs Nancy ate Crystal's gushing box, Crystal used one hand to massage Nancy's clit right above where my cock pistoned in and out of her body. With her arms reaching up to Crystal's erect nipples, Nancy started to cum every minute or so. Crystal fired off a few times too. The only sound soon became our gasps for air, our sighs of pleasure, and the rhythmic slap of my body against Nancy's quim. \n\nI filled Nancy when I came, so much the overflow oozed out and created a large wet spot on the bed I'd have to face later. I cradled Nancy and Crystal to me during our afterglows.\n\nLater that night, Nancy orchestrated a swap so she could be with Terry and Nadia, as Jill joined Crystal and me. Things worked out extremely well for us.\n\nCrystal and I stayed in Dublin a week longer than expected; Nadia and the band flew home to Nashville the next day. Jill flew back to LA after the movie premiere. During the unplanned week, I got interviewed extensively by the police, we did two more press conferences, we did the premiere of Crystal's movie, and Crystal and I attended the funerals of the two policemen who had been killed in the explosion and visited the injured in hospital. \n\nNancy took some accumulated leave, and she, Crystal, and I managed to cement our relationships with each other rather firmly several times each day with the echo of sweet, sweaty flesh pounding around our bedroom. The three of us went on long runs each day so we stayed in shape for our other physical activities.\n\n\n\nTo be continued."
    ],
    "authorname": "Romantic1",
    "tags": [
        "celebrities",
        "group",
        "polyamory",
        "bomb",
        "terrorist",
        "cia",
        "dublin",
        "hero",
        "concert",
        "explosion"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/crystal-clear-ch-18"
}