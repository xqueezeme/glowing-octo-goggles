{
    "title": "The Gateway to Sin",
    "pages": [
        "Warning: The following story contains graphic sex, graphic violence, graphic misuse of convenience store inventory, profanity, unlicensed pets, unnecessary roughness, unnecessarily loud moans of feigned sexual ecstasy, multiple homicide, poor hairstyle choices, obstruction of justice and conspiracy thereof, conspiracy to file a false police report, home invasion, sexual relations under false pretenses, illegal possession of firearms, unregistered firearms, discharge of said firearms within city limits, sweater vests, prostitution, hypocrisy, helicopter parenting, invasion of privacy, pornography, bearers of false witness, bribery, grand theft auto, infidelity, uninsured motorists, police corruption, public indecency, tax evasion, destruction of private property, unsafe transport of pets and a Raiders fan.\n\nAll characters are over the age of 18. Except the cat.\n\nAs much as Travis wanted to answer her naughty, beckoning gesture, he couldn't decide whether or not her smile touched her eyes. Temptation exuded from every aspect of her: the dark hair cascading down her bared shoulders, the tip of her tongue touching her full, red lips, the way one arm held the fabric of her bra to her chest while the other reached out for him... at least, he thought her bra was still partly on. The black plastic board in the magazine rack covered up the rest.\n\nIt wasn't such a big deal to buy it. He was old enough to do it legally. Hell, he was very nearly old enough to drink legally. He'd tried that at parties, though, and found he didn't really care for the buzz. Or the vomiting. Or waking up on his friend's couch with any number of profane things drawn on his face in black Sharpee. Or explaining himself to his parents. No, drinking definitely wasn't his thing.\n\nSex was another matter. He hadn't tried that. He wanted to, not that he had a partner, but even so there was so much stopping him: fear of rejection, fear of humiliating himself in his own ignorance, fear of shaming his parents... fear of God. Travis didn't believe the way his parents did. There were things that they preached he simply couldn't accept. But there was always the lingering worry that on some levels\u2014not the homophobia, or the way they talked about other religions, but still\u2014Travis worried that on some levels, his parents might be right.\n\nTemptation stared at him through clear plastic wrap from the other side of the store countertop. There were other eyes there, too, on other girls lurking under even more tawdry magazine titles. The girl under the Surrender to Lust banner held his attention, though, right until the guy behind the counter spoke.\n\n\"Good evening. Can I help you, sir?\" he asked. Travis blinked and stepped back, feeling his breath catch in his throat as he looked at the clerk. Dark-toned skin. An accent. A light beard. A strong nose. Dark hair, dark eyes. A curious expression. Something about him spoke of a kind disposition, a hard life and a terribly boring job. His nametag said \"Ali.\"\n\n\"Um. No,\" Travis answered when his naturally deep voice finally worked again. \"No, sorry, I'm just thinking.\"\n\n\"Then can I help the lady behind you?\" asked Ali.\n\nAgain, Travis blinked. He looked over his shoulder and down at the older Asian woman holding an armful of simple convenience store stock. He was a tall guy, and immediately felt like he was looming over her there in his black sweats and hoodie. \"Oh, gosh, I'm sorry,\" he mumbled. Travis backed away, careful not to bump her with his gym bag. His wet sneakers squeaked awkwardly on the tile as he moved away into the candy aisle, where he perused colorful packages of chocolate and snacks as if he were interested in any of it.\n\nHis old flip-phone told him it was fifteen after ten. By now, his mother had likely taken one of her sleeping pills. Dad would still be up. Travis would come home, finding Dad still in his slacks and sweater vest, working on the church booster club's financial statements or maybe organizing the next prayer group newsletter. Or scouring the home PC for signs of pornography or songs with profane lyrics.\n\n\"Hi, Travis. How was karate class?\" he would ask when Travis came in, with that slightly disdainful tone that he had ever since Travis gave up boxing in favor of kung fu, not that Dad could be bothered with the difference. Lord, the way Travis had to fight for the right to spend his own damn money however he wanted. It seemed to be the price he paid for living at home while going to school on Dad's dime.\n\n\"Fine, Dad,\" he would say.\n\n\"What kept you so late?\" Dad would ask. Travis would have to decide whether or not to be honest and say he was out buying dirty magazines, or instead say something about sticking around to clean the dojo or the bus being late or any number of lies that would stain his soul forever on top of the magazine of dirty pictures that would be in his gym bag.\n\nSuch a simple thing: just a magazine in his bag. But all Travis could think of was all the horrible ways it could be exposed. That, and all the horrible things that could happen to him once he started on this downhill slide of lust. Would he wind up addicted to it? Would he turn into a complete pig? Would God strike him down with misfortune as punishment for his sins?\n\nIt was stupid. So stupid. He knew these things he'd been taught all his life couldn't possibly be the way the world really worked. People looked at porn all the time. They did much more sinful things and led happy, healthy lives. Travis knew that. His friends at school all knew that, and in fact did it all the time. But they didn't grow up in the home of Richard and Peggy Hennessy, and hadn't been reminded from birth that God was always watching.\n\nAt that moment, God watched Travis stall. The lady paid for her odds and ends and shuffled out into the rain, leaving Travis in the convenience store with no one but Ali... and God, of course, but he never actually had anything to say.\n\nStupid, Travis told himself. This is so stupid. I'm not gonna go to Hell because I want to look at naked women. I'm not gonna go to hell for jerking off. It's not going to destroy my life. It's just porn.\n\nHe took a deep breath and pulled out his wallet. The ten dollar bill inside couldn't be traced by his father, who wouldn't see it on Travis's bank statements that he constantly read without Travis's permission.\n\nHis face set in determination, Travis returned to the counter. Ali's back was turned as he rustled through a cabinet. \"Um, excuse me?\" Travis asked. Ali didn't answer. Travis realized he was speaking barely over a mumble. He inhaled again. \"Excuse me?\"\n\n\"Yes?\" Ali replied, turning around.\n\n\"I'll have, um...\" Travis blinked. He gestured to the magazine rack behind the counter. \"Could I have a copy of Surrender to Lust, please?\"\n\nAli shrugged. \"Sure,\" he said. Travis couldn't tell if there was judgment in his eyes or his tone. He seemed indifferent... didn't he? The clerk turned to pull the magazine out. Its plastic wrap caught awkwardly on the rack as he pulled on it, forcing Ali to fuss with it to get it out neatly.\n\nThe \"bing bong\" tone of the door chimes rang out as the door opened. Travis's eyes snapped to his left to see two men and a young woman enter. The guys were both noticeably larger than the woman, dressed in clothes that were probably stylish in a fashion genre Travis had never understood. The largest looked like he might step right out of his baggy jeans at any moment, while the other walked with his shirt collar popped up and his ear glued to his phone. Excessive gold jewelry hung from their necks and rode their fingers. Neither seemed particularly pleasant.\n\nIt was their companion, though, who instantly had Travis's complete attention. Her skin bore a smooth, flawless tan that spoke of Latina heritage. Her hair, lightly brown with subtle blonde highlights, spilled over to one side like a brown waterfall. The miniskirt and thin, tight top did a lot to show off her natural curves and flat belly, but it couldn't have been very warm. It was late September, and Seattle was already threatening to skip straight into late autumn temperatures.\n\nHe only stared for a heartbeat, maybe three, before he turned his face back toward the counter. Yet the damage had been done; she had entered with a frown, but then smiled winningly at him as their eyes met. Travis realized he had seen her before, more than a few times, walking up and down the sidewalks of Aurora. His friends had a mocking game they called \"Walking or Working,\" where players driving the north end of the major street guessed the activities of women on the sidewalks. This young woman, probably the same age as Travis, had been a \"contestant\" more than once.\n\nIn a car, with nobody else hearing, it seemed harmless enough. It wasn't like they yelled at the pedestrians they passed by. But now, making eye contact and seeing that smile, Travis suddenly felt very guilty indeed. She was a human being.\n\nShe was also a woman, who almost certainly noticed as she walked by that Ali had just put the copy of Surrender to Lust on the countertop. It turned out the model on the cover had a bra, after all, but it was entirely off of her chest and dangling in the fingers of the hand that cupped her otherwise naked left breast.\n\n\"Here you go,\" Ali said too loudly for Travis's taste, \"one copy of Surrender to Lust. Anything else?\"\n\n\"Uh, no!\" Travis blurted. \"No, j-just that.\"\n\n\"Okay. \n\n\"Hi,\" the woman smiled, leaning up against the counter.\n\nTravis considered dying on the spot. He had no idea what to say at a time like this. Something. Anything. His mind reached for a suggestion.\n\n\"Bitch, I am gonna fuck you up!\" snapped a voice behind Travis.\n\nNot what I had in mind, Travis thought. He blinked, standing even straighter in surprise as the man with the phone stepped into the candy aisle behind him. \"I mean it! You don't have what you owe me, I swear to God you will choke to death on my cock.\"\n\n\"Uh, Rudy,\" the woman hissed to him, \"there are other people here.\"\n\n\"Vanessa, shut your fucking whore mouth,\" snapped the man on the phone. \"Nobody cares anyway. No, not you, Teri,\" he said back into his phone. \"Fifteen hundred. That's what you charge. That's what I told you to charge. Not a fucking penny less. Bad enough Illyana's down with her fucking cold, I'm not losing money on you tonight, too.\" He paused. \"Joey. Cuervos, man.\"\n\n\"On it,\" said the larger of the two men.\n\nThe woman shook her head and looked to Travis once more. \"Don't suppose you're looking for a date tonight?\" Vanessa asked.\n\n\"Uh. No,\" Travis shrugged. He looked at Ali, imploring him silently to hurry up with the register. So. Awkward.\n\n\"No, you aren't gonna leave me, Teri, 'cause you know what'll happen if you try,\" Rudy continued menacingly. \"If my money isn't there when I get back, you're gonna take another fall down the stairs again, you got me? Maybe a couple falls.\" The voice on the other side of the conversation could be heard making some sort of plea just before Rudy cut the connection on his phone.\n\nTravis winced. These were plainly bad people\u2014at least Rudy there was, anyway\u2014but there was literally nothing Travis could do about it, anyway.\n\n\"Hey, Ach-med, where the fuck are your Cuervos?\" called out Joey from the other side of the store.\n\n\"In the center case, sir,\" Ali answered as he finished ringing up the sale. \"There you are. Eight forty-five.\"\n\nTravis already had the cash in his hand. He put it down on the counter immediately. \"There you go. Keep the change.\"\n\n\"Are you sure, sir?\"\n\nVanessa gave a little grin. \"Big spender,\" she winked.\n\n\"Yeah, I'm\u2014\" Travis paused. He realized then that he'd left his transfer pass back at the dojo. Shit, I need the change after all. \"Um. No, actually, uh, sorry. Go ahead and ring it up.\"\n\n\"No problem.\" Ali keyed in the transaction on his register.\n\n\"Fuckin' hurry up, man,\" Joey said then, appearing behind Travis with a case of beer. \"Ain't got all fuckin' night.\"\n\nOver the sound of the beeping register buttons, Travis heard a sharp, heavy snort from behind him. Vanessa's eyes went wide. Travis glanced at her, then up at the security mirror over Ali's shoulder. He could see Rudy snorting something out of a tiny bit of plastic.\n\n\"Rudy!\" she hissed, stepping forward.\n\n\"Sorry, sir,\" Ali muttered, \"the register tape's jammed.\"\n\n\"What, bitch?\" Rudy snarled at Vanessa.\n\n\"You told me you weren't carrying anything!\" Her voice remained barely above a whisper, but Travis could still hear every word. It wasn't like they were far away.\n\n\"The fuck's it to you?\"\n\n\"Rudy, you know what happens if I get caught in a car carrying shit,\" she pressed. \"I'm not trying to tell you your business, but\u2014\"\n\n\"If you ain't, then shut the fuck up.\"\n\n\"Look, I'm just sayin', I'll take the bus over or somethin', alright? You get crazy when you're on that shit.\"\n\n\"What? Fuck that. You ride with Joey an' me. You can ride the fuckin' bus back, but this asshole john is payin' up front and he ain't payin' you.\"\n\nTravis tried to keep his attention on Ali and the register tape. Against his will, his eyes flicked up to the security mirror at exactly the wrong moment.\n\n\"Rudy, lemme just\u2014\"\n\nHe grabbed her by the neck. \"Bitch, don't even fuckin' start!\"\n\nTravis couldn't look away anymore. He turned around. \"Hey man, let her go,\" he said, trying to sound reasonable rather than challenging.\n\nHe immediately felt a heavy hand on his shoulder. \"Mind your own business, boy,\" said Joey.\n\n\"Yeah,\" Rudy agreed, his eyes wide and crazy as he continued to hold Vanessa, who clearly wasn't enjoying this. \"Just buy your fuckin' jerk-off mag and scurry out of here, bitch.\"\n\n\"Let her go,\" Travis repeated. \"You don't have to grab anyone like that. And take your hand off me, please,\" he added to Joey with his voice growing more assertive.\n\n\"Rudy,\" Vanessa struggled, \"just calm\u2014\"\n\nJoey spun Travis around roughly. Travis was ready for it. He turned into the move, bringing his right fist up in a swift hook into Joey's temple. It caught the bigger man by surprise; Joey fell against the counter. Travis brought his foot down hard on the side of Joey's knee.\n\nRudy shoved Vanessa away, knocking her against the rack of candy and gum. His hand went to the small of his back as his friend went down. By the time Travis turned on him, Rudy had the pistol out.\n\nTraining took over. Travis did exactly as he'd been taught. With one hand, he grabbed Rudy's wrist, and with the other he took hold of the gun and twisted hard. Rudy let out an unmanly shriek as his finger broke. Travis kept hold of the gun, roughly pulling it down and out of Rudy's hand.\n\n\"Motherfucker!\" Rudy screamed. His other hand came around to punch Travis across the jaw. Travis staggered and dropped the gun. Rudy came on at him, tackling Travis against the counter.\n\nTravis struggled, getting one arm around his opponent's waist and one leg up against Rudy's for leverage. He heaved the Rudy through a twist that put him in exactly the position Travis had been in, bent over backwards with his head against the counter. Travis followed up by bringing his elbow down toward Rudy's jaw with all the force he could muster, but against a struggling opponent it didn't exactly go as planned.\n\nTravis's elbow came down hard against Rudy's neck.\n\nThe sound of the blow was frightening. Rudy jerked and flopped uncontrollably. Travis blinked, suddenly horrified at what he had done, and then he heard a metallic click.\n\nHe found himself staring down the barrel of Joey's revolver as the bigger man struggled to his feet. Travis heard a gunshot, and then another... only they didn't come from Joey's gun. Joey fell against the side of the countertop, blood pouring from the center of his chest as he tumbled to the floor.\n\nVanessa remained crouched in the snack aisle, holding Rudy's pistol. Smoke wafted from its barrel. The wide-eyed shock and fear on her face mirrored Travis's as they stared at one another.\n\nAli sighed. \"I knew I should've changed out the register tape an hour ago.\"\n\n\"Is he dead?\" Vanessa demanded, pointing at Rudy. \"Are they both dead?\"\n\nAli looked over the counter at Rudy and then at Joey. \"Oh yes. They're both dead.\"\n\n\"Holy shit!\" blurted Travis. He knelt down to check Rudy's pulse.\n\n\"Rudy\u2014Rudy can't be dead!\" shouted Vanessa. \"You just beat him up a little!\"\n\n\"Oh, he's dead,\" Ali nodded sagely.\n\n\"He can't be!\"\n\n\"Listen, girl, I am from Mosul! Okay?! You think I don't know dead men when I see them?\" He stabbed a finger tward Rudy. \"That man is dead. And so is that man. Very dead.\"\n\n\"Oh God, call 911!\" said Travis, his voice wavering with fear.\n\n\"No!\" countered Vanessa. \"We can't call the cops!\"\n\n\"It was self-defense!\" Travis pressed. \"We're not gonna be in trouble for that!\"\n\n\"It was self-defense for you,\" Vanessa said. \"I just shot\u2014fuck, I just shot Joey!\"\n\n\"Yeah, but that guy was gonna kill me if you didn't shoot him,\" Travis argued, pointing at Joey. \"It's on the security cameras, right?\"\n\n\"Shit,\" Ali sighed, coming out from behind the counter and heading toward the door. \"Those cameras have never worked since I've been here.\" He promptly hit a couple of switches to turn off the exterior lights, then produced a hooked rod which he used to pull down the sliding door over the store entrance.\n\n\"What are you doing?\" Travis asked.\n\n\"Making sure I don't have customers wander into this,\" Ali scowled. He turned to look at them both. \"So. He wants to call the police. What about you?\" he asked Vanessa. \"Are you in any trouble with the authorities?\"\n\nTravis's jaw dropped. \"How is this even something we need to talk about?\"\n\nAli's hands came to his hips. \"Have you ever tried speaking to Seattle police without being a white male?\" Travis's only answer was to drop his jaw even further. \"Exactly. So allow us a moment. They won't become any more dead than they are already. Now. Girl. Talk.\"\n\n\"I\u2014\" Vanessa's voice failed her. She finally lowered the gun. \"There's still two more of them. They've got my baby.\"\n\n\"Then why don't you tell the\u2014?\" The question died on Travis's lips. Given what Ali had just asked, he felt dumb for even thinking it.\n\n\"I can't prove it!\" said Vanessa. \"I can't prove anything! All I've got on me is my driver's license and a couple of condoms! They've got everything else. I don't even have keys to get in where I live.\"\n\n\"Oh, goodness, what am I thinking?\" Ali muttered. He strode between the two stunned young people in his store to walk over to the tiny aisle of housewares. \"So you have a baby? A boy? A girl? What name?\" As he spoke, he grabbed a small plastic package of sponges and a small bundle of pink mechanic's rags.\n\n\"Chester,\" Vanessa sniffed. \"His name's Chester. He's not even two and he's all I've got. They keep him locked up while I'm out working.\"\n\nSomething inside of Travis twisted as he saw the distress on Vanessa's face. \"Look,\" he said, \"that's kidnapping, right? If they're forcing you to\u2014you're a hooker, right? I mean a prostitute? If they're forcing you\u2014\"\n\n\"You think I'd be in this situation if the cops ever followed up on shit like that?\" Vanessa snapped at him. \"You ever been told you're not a credible witness? Or been arrested on a bullshit charge by the cop you just asked for help? I can't even begin to tell you the shit these assholes have gotten away with.\"\n\nTravis looked to Ali, hoping he would have something reasonable to say. The older man seemed to be handling the stress of the moment much better than he or Vanessa. Ali busied himself stuffing sponges into Joey's shirt to sop up the blood from his fatal gunshot wounds. \"So their associates will take revenge on you for this through your boy?\" Ali asked.\n\n\"Hell yeah, they will!\"",
        "Ali nodded. He looked to Travis with something of a sad face. \"So there you have it. By the time she is done dealing with the police, even if she is not charged with anything, her boy disappears. Or ruthless men come looking for her. Probably both.\"\n\n\"Lemme go get him,\" Vanessa said, taking a deep breath to steel her resolve. \"Just gimme a little time and I'll get him out. Then you can go to the cops and do whatever. The cops will probably catch me and put Chester in some sort of... I don't know what, but at least he won't be with Rudy's guys and he won't be hurt.\"\n\nAli nodded. \"How many are there?\"\n\n\"Just two.\"\n\nAli looked to Travis. He didn't say anything.\n\n\"Oh, hey, waitaminute,\" Travis mumbled.\n\n\"Boy, listen to me. You see the trouble she is in. You had the courage to stand up for her when these men threatened to harm her.\"\n\nTravis and Vanessa looked at one another. \"Look, I never wanted to kill anyone,\" she said. \"If it was that simple I could've found a way to take a gun and just shoot them all and run, but\u2014\"\n\n\"Is that your plan now?\" Travis asked. \"Where'd you learn to shoot that, anyway?\"\n\n\"I grew up in Arizona.\"\n\n\"Oh,\" Travis said. That answered that, apparently.\n\n\"And yeah, if I have to go it alone, I'm probably gonna have to shoot them. I'm not some helpless damsel in distress. I just didn't have any options before.\"\n\n\"You are not,\" Ali agreed, \"but you don't need to stand alone, either. Young man. Think. If we call the police, we doom her boy. You will give your statement to the police and probably be up very late, but eventually you will go home and sleep in your warm and safe bed, and you will wonder what happens to her and to her boy. Do you want that?\"\n\nTravis glanced at Vanessa. \"You have some sort of plan?\"\n\n\"I'll come up with something one way or the other,\" she nodded, \"but if I'm not alone I've got a lot more in the way of options besides just shooting people, yeah.\"\n\nTravis couldn't believe he was even discussing this. He wondered what his parents would say about this, and how many questions they would have... and, suddenly, he wondered why he cared so much about that. \"No,\" he answered. \"No, I don't. What about you?\"\n\nAli shrugged and gestured to the two bodies. \"I have to take care of this mess if we are not going to call the cops. I suspect no one will miss these men, will they?\" he asked Vanessa.\n\n\"Nobody's gonna file a missing persons report, if that's what you mean. These people don't call the cops, no matter what.\"\n\n\"So you're just gonna hide them?\" Travis asked.\n\n\"I have options,\" Ali shrugged. \"This is a very convenient store.\"\n\n* * *\n\n\"I was afraid of this,\" Vanessa sighed. \"There's probably a bunch of people in there right now. We'll have to watch and wait.\" Her eyes darted this way and that as she drove past the large house. Every available parking space on both sides of the street was taken up.\n\nTravis sat in the passenger seat of the black Mercedes hoping nobody would recognize him. It was dark, late and raining, but he was nervous just the same. He felt like he had good reason, after all; he was in the stolen car of a dead man being driven by a prostitute, with at least two guns and quite possibly hidden drugs, too.\n\n\"How many people live there?\" Travis asked.\n\nVanessa let out a grunt. \"I wouldn't call it living. I'm there, about three other girls are there, Rudy lived there and so does Adam, but Giovanni and Joey crash there so often you wouldn't know they've got their own places. Well. Past tense, in Joey's case, anyway. One of Rudy's girls actually thinks she's his girlfriend and lives there by choice. Then there's me and Illyana... she came over from Russia, and Rudy keeps all her papers in a safe. Just like mine. She'd probably get deported without 'em. There are a couple other girls that he keeps on a looser leash, but he threatens them when he feels like it, too. He was talking to one of 'em on the phone in the store.\"\n\nShe drove further down the street. The neighborhood was entirely residential, with narrow streets and many tall trees. \"I'm hoping we can just chill here for awhile without being seen and wait until some of them leave. That place is Grand Central Station most nights. Probably some johns in there right now.\"\n\n\"They bring guys over? I would've thought that'd be dangerous. Like a good way to get everyone busted.\"\n\n\"It's not like there's a book of pimps' regulations. Rudy's little gang does all sorts of shit they shouldn't. They don't bring lots of johns over; just the ones they know are low-risk and high dollar. Some of these guys want to make sure their families never find out. Some of 'em just have freaky tendencies. Walk around here long enough, you might very well find a couple girls working in these cars.\n\n\"Oh, here, this is a good spot,\" she said. \"We can see down the hill to the street outside the house.\" Vanessa went through the stop, start and shuffle of turning around and parallel parking as Travis watched.\n\n\"You have a plan?\"\n\n\"Thinkin' about it. Depends on how much it'll thin out down there. The fewer people there are when we go in, the better. Hopefully I just need you to distract people.\"\n\n\"I'm not afraid to fight.\"\n\n\"No, but the deeper you get into this, the worse I'm gonna feel. I don't want a hero, I want an assist. Okay?\"\n\nSilence fell in the car until Vanessa spoke once more. \"I don't know whether to thank you first or apologize,\" she admitted. \"I'm sure this is pretty fucked up for you.\"\n\n\"It isn't for you?\"\n\nShe tilted her head to concede the point. \"My life has been fucked-up crazy for the last few years, yeah, but this is a whole new level of crazy. I just want it to stop. This'll sound clich\u00e9, but I'm really not like this.\"\n\n\"What are you really like?\"\n\n\"What are you really like?\" she countered. \"All I know about you is you can fight, you stick up for women when men are slapping them around and you buy porn.\"\n\n\"I don't\u2014!\" he started, then stopped himself. Travis let out a deep breath. \"God, I'm almost twenty-one and that was the first porn I've ever bought. I'm not a pervert.\"\n\n\"I wouldn't judge you if you were,\" Vanessa snorted.\n\nHe stared at the dashboard. \"I did football and wrestling in high school, but that was mostly to make Dad happy,\" he shrugged. \"Been taking kung fu for the last three years, which my Dad hates 'cause it isn't 'American' enough for him. I went to Catholic all-boys schools. I still live at home. I'm going to college partly on my Dad's dime, so I follow all of his rules, and I hate myself for all of it.\"\n\n\"Hey, college is expensive,\" she shrugged. \"Can't fault anyone for sucking it up and dealing with parental bullshit for a few extra years if it pays your way. Wish I could've done that. I'd give almost anything to go back to school. Anyway... how bad can he be if you turned out so good? I mean, parents always make kids do stuff they don't want to do, right?\"\n\n\"Dad lives in a 'Leave It to Beaver' fantasy world and figures our problem is that we haven't invaded enough Arab countries. He's one of those dudes who only reads the lines in the Bible that back up his bullshit and ignores the rest.\"\n\n\"Fuck.\"\n\n\"Yeah. My dad's that guy.\"\n\nVanessa let out a long breath. \"Okay, so he's an asshole,\" she conceded, \"but you seem to have turned out okay.\"\n\n\"Thanks,\" Travis shrugged.\n\n\"No, I mean it, I'm really... I know how crazy this is. Believe me. I'm really grateful.\"\n\n\"So that's the answer you were looking for.\"\n\n\"Not really. Now I just know about your dad. What're you really like?\"\n\nTravis blinked. She had a point. \"I'm... I dunno, I'm dull, I guess? My dating life is kind of crap because I feel like I don't know how to act with girls. Hell, I wouldn't know what to say to you now if we weren't both staring at twenty to life,\" he grimaced. Vanessa smirked. \"I don't like booze. I don't smoke. I don't do any drugs. I volunteer at an animal shelter. No girlfriend. Virgin. That's me. Super boring.\"\n\nHe mistook the grin playing at her lips for amusement, and figured the little sparkle that appeared in her eyes was something that was always there. \"There's nothing wrong with any of that,\" she said. \"I could stand to be around more guys who didn't get wasted and were nice to animals.\"\n\n\"What, you don't like bad boys?\" Travis frowned. \"You're a hot girl in your twenties, right? Early twenties? Doesn't that mean you should only be attracted to assholes who treat you terribly?\"\n\nShe sat back in the driver's seat. \"Some of us learn faster than others,\" she grumbled. \"I'm the first to admit I'm a party girl, but I always know when to quit and go home. When I had a home to go to, anyway. I'm not some battered woman caught up in a cycle of abuse, okay? I've literally had no place else to go lately and like I've said, it's not like they don't have leverage on me.\"\n\n\"I'm sorry,\" mumbled her companion. \"I didn't mean it like that.\"\n\n\"No, I know. I get what you meant. I'm just sayin'. I know I'm a little crazy sometimes, but I'm not like batshit broken psycho girl or anything. I just got stuck in a trap. Believe me, if I can make a clean break here, my first priority is to find a way to go back to school.\"\n\n\"So is that what you're really like?\" Travis asked again. \"How'd you end up in this mess if you know better?\"\n\nVanessa rolled her eyes, clearly at herself more than anything else. \"Oh, I screwed up a bunch. I'm not sayin' otherwise. But I was in college once, too. Started dating a guy. Thought he was cool. Found out what an asshole he was when we went to Mexico together and he used me as a drug mule without asking me. I'd have dumped his ass right there if I'd known he was into that. But there I was, caught with a shitload of coke in my bag at the airport. My ex-boyfriend figured out the score before I did and started copping pleas. The prosecutor figured he could still get an extra check mark in his conviction column and fuck what anyone's confessions said or how credible his witnesses were, right? My public defender was good, but she wasn't fuckin' Superwoman. I got eighteen months and figured I was lucky.\n\n\"My family basically freaked out and disowned me. I couldn't get a job. I figured I needed a clean slate, so I took what I could scrounge up and came out here, but it was 2009 and I couldn't land even fuckin' Wal-Mart or McDonald's, and well...\" she shrugged. \"I like sex. I like sex a lot. I don't see anything wrong with what I do, really. When I was just operating on my own I could decide to turn guys down if something seemed wrong or if they grossed me out. It wasn't like I couldn't defend myself if one of 'em tried something violent. You learn things in prison, y'know?\n\n\"Last year, along came Rudy. I was tired of handling everything on my own. He was slick enough to go easy at first, but one thing led to another and as soon as I trusted him a little too much, bam. He's got all my papers, he's got Chester and he's probably smart enough to find me even if I did run on him. And he'd have to look, too, otherwise his other girls might run, too.\"\n\n\"But with him gone?\" Travis asked.\n\n\"I don't think Giovanni or Adam are all that clever,\" she shrugged again. \"Besides, once it gets obvious that Rudy isn't coming home, there'll be sharks circling around the guys soon enough. I want to get Illyana out if we can. The rest will know when to bail on their own. I just need to cut all the strings at once and then figure out how to start over again.\"\n\nTravis stared down the street towards the house. \"You worried about Chester?\"\n\n\"Not really,\" Vanessa shook her head. \"I mean yeah, but he's probably asleep. It's not like he knows what's goin' on around him.\" She tapped her forehead. \"You go through the kind of crap I have, you learn to compartmentalize and prioritize, and not to borrow trouble.\"\n\n\"Wish I could do that. All I can think about right now is prison. Or worse.\"\n\n\"Yeah,\" she conceded with a somewhat shaky breath. \"Yeah, there's that. I'm thinking about all that, too.\" The two fell silent for a moment and Vanessa ran her hands through her hair. \"The waiting is making me crazy. I need to do something.\"\n\n\"Me, too,\" Travis agreed without really thinking about it.\n\n\"Get in the back seat,\" Vanessa said.\n\nTravis blinked. \"What?\"\n\n\"Just get in the back seat. Trust me.\"\n\nHe considered several things that she might have in mind, but discarded all of them as unlikely. He didn't really know what she was planning. But he had trusted her this far, though, and at this point figured he had nothing to lose. Travis went along with her instructions.\n\nVanessa came around on the other side, and gestured for him to move in closer. \"Sit in the middle,\" she said.\n\n\"What're you doing?\" Travis asked, obeying without thinking about it.\n\n\"I'm calling it something life-affirming,\" she said, closing the door behind her before she crawled over Travis and planted a firm, hungry kiss on his mouth. She tasted faintly of strawberries. He hesitated, then kissed back, then realized he was getting carried away with himself. Or maybe she was. Maybe both.\n\n\"Vanessa,\" he grunted, loving the way she felt against him and wishing he could just go with it, \"you don't have to do this.\"\n\n\"Yes and no.\" She kissed him again. Vanessa unzipped his hoodie, spreading it open to run her hands over his abs and chest. Her grin told him she liked what she felt. \"I know nobody's forcing me. I know you don't expect anything. But we're both wound up and we've got the time.\"\n\nVanessa tugged him forward a bit and then straddled him, pinning him to the seat with her knees slipping down beside his hips. Her short skirt made it very easy to move. Travis glanced down to see how the folds of its fabric pushed up to reveal the black lace barely covering her sex, which pressed up against the hardening flesh between his legs. He was at once grateful and chagrinned to be wearing sweats tonight. When his eyes came back up to hers, she bit her lip in a naughty grin that told him she saw exactly where he was looking.\n\n\"You like that?\" she breathed, grinding against him.\n\n\"Yeah,\" he whispered hoarsely, then swallowed and repeated, \"yeah, I do.\" Travis slid a bit lower, pushing his legs up against the front seats to offer Vanessa more room and more support.\n\n\"Don't be nervous, Travis,\" she told him, stroking the side of his face. Her fingers turned to lightly brush her nails down his neck. Her hair dangled intimately across the side of his face. \"I know it's your first time. Just relax and enjoy it, even if you don't last long. We're both all wound up. It's okay. You can touch me. Don't be shy.\"\n\nShe drew him into another kiss. He became more cooperative, enjoying the feeling of her tongue against his and the invitation in her breath. Travis had never gotten beyond first base before. Vanessa left no ambiguity about how far she wanted to go, sweeping away so many of Travis's usual worries when it came to situations like this... not that he'd ever been in these circumstances.\n\nHis hands slid slowly up her legs, coming to a rest upon her hips, underneath her skirt. There wasn't much fabric at all to those panties. His fingers found the strings and small loops tying them together. His touch slipped out again, going over the skirt this time to slide along her sides. Vanessa let out soft little moans of appreciation at his touch. Her lips parted from his, but remained very close as she murmured, \"You've got nice hands.\"\n\n\"You've got nice legs,\" he countered. \"Nice everything.\"\n\n\"You haven't even seen nearly everything yet,\" she grinned. \"But I'm happy to show you.\"\n\n\"This wasn't exactly how I expected my first time to be.\"\n\n\"I'd love to make it more comfortable for both of us,\" Vanessa apologized softly, \"but this is what we've got.\"\n\n\"It's not just the car.\"\n\n\"I know,\" she nodded. \"Things could go really badly tonight. I can't tell you...\" she sniffed and shook her head, then forced herself to grin. \"You don't want to go to jail or die a virgin, do you?\"\n\n\"Hell, no,\" he answered. \"Not when I could be with you.\"\n\nVanessa's smile widened. She shrugged off her top to reveal a thin lacy black bra. She couldn't get enough of the mesmerized expression on his face as she playfully leaned back, grinding her crotch into his once more while she gave him a view of the rest of her body. Her fingers came to the center of her bra, deftly releasing the clasp.\n\nThe offer in her eyes and her smile was too much to resist. Travis's hands slid up her flat belly to her chest, where they gently spread apart the cups of her bra to reveal her firm, small breasts. Her breath caught as his fingers brushed under them, then slowly crept up to encircle and softly pinch her erect nipples. Vanessa sighed in approval and worked her hips down harder onto him.\n\n\"You're beautiful,\" Travis told her.\n\n\"I feel like it with you.\"\n\nHe continued exploring her by touch. His hands roamed over her, stroking her chest, her collarbones and her neck. She writhed under his touch, moaning now and again and alternating between closing her eyes to enjoy herself and looking at him with a naughty invitation.\n\n\"I could let you do that all night,\" Vanessa purred, \"if we had all night. But we don't.\" She bit the side of her lip again and looked down meaningfully at their most compelling area of contact.\n\nHis hands slipped low, down to her legs and then up under her skirt once more. She watched his face expectantly as he slipped the knots at her hips loose, then obligingly lifted her hips up to let him slide the panties free. He couldn't help but look down. Travis thrilled to the sight of her well-groomed landing strip.\n\n\"Your turn, baby,\" she urged him. Travis's thumbs hooked under his sweats, but then he paused and looked at her. She read his mind and shrugged. \"Tubes are tied and I've always used condoms. I know I'm clean. If you're really a virgin...?\"\n\nStill rocky with adrenaline from their first meeting at the Quik Stop and facing uncertain fates, they silently agreed to a little indiscretion. Travis's sweats slipped away, putting an even broader smile on Vanessa's face as she watched the big reveal.\n\nWet lips slid against the length of Travis's cock in an intimate kiss. She purred again. \"I like you more and more, Travis,\" she said.\n\nShe drew close to him once more, kissing his mouth as she continued to tease and taunt his dick. When his arms came around her waist, she said, \"Don't rush it, baby. Savor it.\" Then she swayed her hips around until she was directly above his cock and slowly, relentlessly sank down on it, enveloping his flesh with hers. Their mouths parted and they shared the same breath as she took him inside her.\n\nSitting on his hips now, Vanessa remained still and held him close to revel in the full feeling within her. Travis couldn't believe how good she felt, and hardly wanted her to move at first, but then she gyrated her hips just a little to remind him that moving felt even better.\n\nThey kissed again, trembling with pleasure, and then Vanessa couldn't resist anymore. She rose and fell on his cock, impaling herself and grunting with desire as she did it again and again, gradually increasing the rhythm. Travis more than helped her along, pushing up into her needful sex with his own.\n\n\"So good,\" Vanessa shuddered. \"Oh so good.\"\n\nTravis silenced her with a kiss, which she accepted hungrily though it slowed their tempo. They devoured one another's lips and tongue until the pleasures at their center became to great to ignore anymore, and then gave themselves over to lustful fucking that eventually fell back into a sensuous grind and passionate kiss once more.\n\nThe cycle repeated again and again, building with pleasure each time. Finally, Vanessa let out a loud groan. She couldn't remember ever feeling so comfortable with anyone, or so turned on. Everyone she had been with in the last couple of years had been a customer, and everyone before that had turned out to be a disappointment. Travis was none of that. He brought down every wall without even trying. \"Oh God you're gonna make me come,\" she said, partly in surprise and partly in joy.",
        "Travis took that as a cue to keep up what he was doing, thrusting up into her as she came down on him. He thought he might lose his mind or at least lose control first, but soon her breath and her voice made it clear he had held out long enough. Notes of ecstasy and satisfaction fell directly into his ear before the first uncontrolled spasms shot through his cock.\n\nEven in her haze, Vanessa realized what was happening. As her orgasm finally abated she slowed herself down, letting Travis release into her freely.\n\n\"Wow. Vanessa kissed him again and then parted to catch her breath, \"I'm not sure I believe that was your first time.\"\n\n\"Scout's honor,\" Travis huffed. They held close a moment longer, just breathing together until he said, \"I feel like I could go again.\"\n\n\"Yeah, you do,\" Vanessa laughed. \"Oh my God. You feel awesome.\"\n\n\"Is that okay?\"\n\n\"Is what okay? You? Hell, yeah.\"\n\n\"No, I mean... more?\"\n\n\"Uh... oh, where are we?\" Vanessa thought aloud. She looked around, then over her shoulder down at the house. \"Wait, I think there are some cars gone there.\"\n\nThen a white light flashed directly in through the window, falling across Vanessa's naked chest and face. They both started in a panic, looking directly into the flashlight and freezing. The light tapped on the water-coated window. \"Roll this down,\" someone ordered.\n\nTravis winced, feeling caught and defeated. Thoughts of prison and his shattered future flashed through his mind. There was nothing for it but to own up to all he had done. Travis reached out to the window control, pressing the button with an apologetic look to the similarly worried young woman in his lap. As Travis had suspected, the window came down even without the key in the ignition.\n\nThe flashlight stayed in their faces. \"Look at me,\" came the order. \"Let me see you... oh. Yeah. Thought it was one of you girls,\" the cop said. \"Don't bounce so much. Gets obvious. You wanna get it on in a car, drive out into the woods or something.\" With that, the cop's flashlight turned away and he walked off.\n\nTravis looked at Vanessa with wide, shocked eyes. She seemed mildly surprised herself, but hit the button to roll up the window and shrugged. \"Bribe money well spent, I guess,\" she said.\n\n\"I can't believe that just happened,\" blurted Travis.\n\n\"Yeah, well,\" Vanessa shrugged. \"They aren't all dirty, but a few are fucking rotten.\"\n\n\"But he just\u2014I mean he didn't even ask to see our IDs to run us for warrants!\"\n\n\"Why would he? If he found something on you he couldn't ignore, he'd have to bust me, too, and that'd end the gravy train.\" Vanessa looked over her shoulder again. \"Baby, as good as you feel, we've gotta do this thing.\"\n\n\"I know,\" he said, entirely conscious of the way she still enveloped his cock. \"I know, I just...\" he shrugged as she turned back to face him. \"Thank you.\"\n\nSomething inside her had already melted, but when he said that she felt it happen all over again. \"Oh, no, Travis... thank\u2014\" She stopped. \"You really think you could go for more?\"\n\nHe nodded with a mixture of embarrassment and excitement. \"Yeah, I do.\"\n\n\"I think I know how to pull this off without shooting anyone... but you're gonna have to really trust me. And you're gonna have to be pretty naughty.\"\n\n* * *\n\n\"Oooh, yeah, bitch! Oooh! See that? That right there? That's why I love me some fuckin' Raiders!\"\n\n\"Gio, they just put a prime athlete in the fuckin' hospital on a bullshit play,\" Adam countered. He already knew this had happened, of course; they were watching a TiVo'd game from hours earlier, and Adam had already caught the spoiler updates on his phone. But he didn't know how dirty the play actually was until now.\n\n\"Yeah? And?\" Gio shrugged. He brought a plastic cup to his lip to catch a fat wad of chewing tobacco from his lips. \"That's life in the big city, motherfucker. Play the game, take your fuckin' chances!\" He and Adam had to shout, of course, so that they could hear one another over the unnecessarily loud sound system for the television.\n\nAdam scowled, carefully scratching at his scalp so as not to mess up his tight blond cornrows as he looked at his longtime business partner. He had known Gio back in high school, before all the cheap, overly-ambitious tattoos and the giant earlobe spacers. Gio had been bloodthirsty back then, and had only worsened in time. Clearly, he never understood why the coach bounced him from the junior varsity football team.\n\n\"You got no fuckin' appreciation for the fuckin' sport, mo'fucker,\" Adam declared, pointing an accusing finger at him. \"Only assholes like the Raiders anyway.\"\n\n\"Fuck you, dude,\" Gio shrugged, \"you're the asshole sitting in Seattle rooting for the fuckin' S-t-e-a-l-e-r-s.\" He drew a large pinch of tobacco from his tin of Copenhagen and wedged it between his gum and lip.\n\n\"That was fucking years ago and the fuckin' ref\u2014!\"\n\n\"Uuuhhh!\" Gio grunted, presenting his pale, pasty middle finger and the small gold ring depicting a hand flipping the bird that rode upon it.\n\nThe fist pounding on the front door interrupted their discussion. Gio and Adam glanced to one another curiously. Each put a hand on his baggy jeans to make sure they didn't slide any further down off his hips as they rose. Closer to the door than Adam, Gio put his eye up to the peephole and stared for a moment. Then he turned back to Adam. \"It's Vanessa.\"\n\n\"I thought she had a call,\" Adam frowned. \"Is Rudy with her? Or Joey?\"\n\n\"No, just some other dude.\"\n\nAdam waved for Gio to open the door. He killed the volume on the television with the remote as Gio interrupted the next set of knocks.\n\n\"What?\" Gio asked.\n\n\"Nice,\" Vanessa frowned, thrusting her hand back into the pocket of the black hoodie. \"I've got a customer.\"\n\nGio and Adam both looked at Vanessa and the tall young man with her skeptically. \"You don't fuck customers here,\" Adam said.\n\n\"Yeah, and why you wearin' a hoodie?\" Gio pressed.\n\n\"Because it's fucking cold, jackass. And he's not here for me. He's here for Precious.\"\n\nThe pair of gatekeepers exchanged another set of suspicious looks before turning back to Vanessa. \"Where's Rudy?\"\n\n\"Rudy didn't tell me where he was going,\" Vanessa shrugged. \"He never does. Look, you gonna let us in or what? Otherwise I gotta give this guy his money back and we'll both tell Rudy you cost him business.\"\n\nAdam and Gio both looked to the tall youth beside her. \"What's your name, white boy?\" Gio asked.\n\nTravis blinked. Did he seriously just call me that? The only one present who wasn't white was Vanessa. \"John,\" he answered flatly. He hoped he didn't have to say much. He hated this plan.\n\n\"Cash,\" Adam demanded, holding out a hand.\n\n\"I've got it,\" Vanessa said.\n\n\"Give it here.\"\n\n\"Fuck you. Inside, when John here sees the goods and knows it's worth it.\"\n\nThe pair standing in the doorway fumed at her as if they shared the same brain. \"John\" spoke up. \"This already seems like an unreasonable amount of money for what I'm gonna get,\" frowned Travis. \"If it's gonna be a hassle\u2014\"\n\n\"No, no fuckin' hassle,\" Adam shook his head. \"You've got it?\" he asked Vanessa.\n\n\"In my pocket, in cash. Small bills like everyone likes it. Only I'm watching you count it out with Gio as a witness so you don't stiff me like you did that one time.\"\n\n\"Bitch, I never stiffed you!\" Adam protested with a weak laugh. He patted Gio on the arm to direct him out of the way. \"That was just a misunderstanding or some shit. Gio, go get Precious.\"\n\nAs they entered, Travis felt a bit surprised by how posh and comfortable the living room was. In talking to Adam and Gio, he expected it to look more like a low-end frat house or a dive bar inside. Instead, he found a clean living room with tasteful, comfortable furniture. Then again, he considered, this place entertained high-paying johns. It made sense to keep the place welcoming.\n\nTravis wished they could just hit both of these guys over the head, grab what Vanessa needed and run. But there was no telling what could go wrong once it got violent, and neither of them wanted any more blood on their hands than was absolutely necessary. Vanessa needed room and time to accomplish several things, and for that she needed a distraction.\n\nHe felt awkward about this. Embarrassed. Horrible. He wasn't sure he could go through with this.\n\n\"You're in luck,\" Adam said, \"Precious doesn't have any dates tonight. Her and Rudy were gonna\u2014\"\n\n\"Adam,\" Vanessa interrupted, \"you're talking too much again.\"\n\nAdam shot her a nasty look, but said nothing more. She was right, after all.\n\n\"Hello,\" came a voice from the other side of the room. Stepping out from around the hallway corner with Gio was a tall redhead with long, slender legs and luscious curves. She wore only green silk panties, a matching bra and heels. \"I'm Precious.\"\n\nTravis felt much better about Vanessa's plan.\n\nPrecious walked closer to them, only to be stopped by Adam's hand. \"Cash up front,\" he said.\n\nVanessa pulled a roll of Rudy's cash from the pocket of her hoodie. She held it up for a moment and then put it back in her pocket. \"One hour. Like I said, we count it together.\"\n\n\"Only one hour?\" Precious grinned.\n\nTravis hesitated. He wondered what he was supposed to say. \"For starters,\" he replied, hoping he sounded cool.\n\nSmirking, Vanessa leaned in and whispered to Precious, \"He's got more, but I don't want to get shaken down by these assholes and lose a repeat customer.\"\n\n\"Guess that makes sense,\" Precious murmured.\n\n\"Cut right to the chase. He likes it loud and hard. Tips big,\" Vanessa added. Precious shot her a curious look; the two had never gotten along. She was surprised to hear Vanessa offer her any sort of help at all. Vanessa just gave a shrug. \"Rudy said to make sure we don't lose this one.\"\n\nWith that, Precious took Travis by the hand. \"What do I call you?\" she asked.\n\n\"Just call me John,\" he answered, feeling a bit steadier as he passed by Vanessa and saw her wink.\n\nGio and Adam turned to Vanessa expectantly. \"Money,\" Adam said.\n\n\"Upstairs,\" Vanessa gestured, and started walking that way. \"I'm watching you count it out and I'm watching you put it in the safe.\"\n\n\"Bitch, I'm about to slap you,\" Gio complained.\n\n\"This is not the night to fuck with me, guys,\" Vanessa warned.\n\n* * *\n\nPrecious brought Travis into one of what looked like several bedrooms. There wasn't more to any of them other than queen-sized beds and tiny dressers. She shut the door behind herself and then slid her lithe body up against his. Travis wondered how genuine the smile on her lips really was, but then he decided not to give too much thought to anyone's honesty here.\n\n\"Vanessa says you like to skip straight to it,\" Precious murmured.\n\n\"Uh,\" he blinked, surprised at how directly her hand slid down from his chest to his groin. It slipped under his waistband, rubbing down between his junk and his leg, then up and down the other side. \"Yeah, that's... that's about right. I like to be direct.\"\n\n\"Good as that sounds, I need just a little moment to warm up for you. But I'm pretty sure I can hold your attention while I do that.\" Her lips brushed across his neck as she spoke.\n\nIn almost any other circumstances, Travis would've loved to let her take her time. Vanessa had already told him what a snot Precious was, but he was ready to excuse that while she was painted against him like this. \"What do you have in mind?\"\n\nPrecious favored him with an alluring smile. She led him to the end of bed, then had him turn with his back to it. She grabbed a pillow from off the bed and dropped it between their feet. Then she slid slowly down his front, pressing her hands and her tits against his chest, his abs and his groin as she went. When she finally sank to her knees, Precious hooked her hands over the waistband of his sweats and pulled them down along with his boxer briefs, freeing his raging hard erection.\n\nShe took his cock in one hand, stroking its length with an admiring grin. \"Tonight won't be a chore at all,\" she said. Her tongue slid up his shaft, ending in a swirl over the head. If she tasted anything from Travis's earlier escapades, she gave no sign of it.\n\n\"You want to get out of these sweats?\" she asked, keeping her mouth close to his cock as she stared up at him. \"Your shoes?\"\n\nHell yeah, I do, Travis thought, but kept that to himself. There was more going on here. He needed to be able to react quickly, as if that would be even remotely possible. \"I think...\" he wavered, looking down at the naughty glory before him. His whole body trembled with excitement. He needed a line. A line. Something slick.\n\n\"I think I'd rather you be direct about this,\" he decided.\n\nPrecious answered by kissing the head of his cock, opening her mouth more and more until finally she had half of him inside. He was a bit too big for the rest, or at least too big to take it all right away.\n\nTravis let out a moan. So did Precious. \"That's some yummy cock,\" she said. She kept one hand on the base of his shaft while the other reached for the drawer of the dresser behind her. His eyes fluttered, but stayed open just long enough to note the pile of condoms in the drawer and the bottle of lube she picked up.\n\nThe redhead shifted up, bringing herself further upright and sliding her mouth down over more of his cock again. She bobbed up and down, letting the head rub against the roof of her mouth. Her hands hiked the panties down her legs. She got to work on her pussy with the lube as she sucked Travis off.\n\n\"Wow,\" Travis breathed. Suddenly the exorbitant fee for Precious's time seemed perfectly reasonable.\n\n* * *\n\n\"One, two, three, four, five\u2014\"\n\n\"Wait,\" Vanessa said.\n\nAdam looked up from the pile of money on the desk. \"What?\"\n\n\"There are two stuck together there.\"\n\n\"There are not.\"\n\nVanessa reached in and snatched up the suspicious bill before Adam could stop her. She pinched it between her fingers and slid it apart from the one beneath it, then looked at Adam with a cynical smirk. He looked up at Gio and shrugged.\n\n\"Start over,\" Vanessa demanded.\n\n\"Fuckin' whatever,\" grumbled Adam.\n\n* * *\n\nHe could've let this go on and on. Travis sat on the end of the bed with Precious's head bobbing up and down on his cock while she played with herself, making all sorts of happy little noises. It couldn't have been more than a couple of minutes. It felt like longer. Whatever hang-ups he used to have about sex were absolutely wiped from his mind while his cock was in this woman's mouth. Travis could gladly let this go on for hours. He would prefer Vanessa, but...\n\nVanessa. Right. There was a plan. A goofy, ridiculous, dishonest plan that involved doing the other thing he now really wanted to do with Precious anyway. \"Hey,\" he groaned. \"Much as I like that... I figure I oughta stick with my plans.\"\n\n\"Aw,\" Precious protested with a grin after her mouth slid back from him. She took care to keep at least one hand stroking him at all times.\n\n\"You're awesome, though... maybe next time?\"\n\n\"I'm up for it,\" she said as she reached for a condom from the nightstand.\n\nTravis leaned back on the bed and watched her wrap him up. He'd never worn one of these before. It wasn't so bad.\n\n\"You said you like to be direct, so how do you want to fuck me?\"\n\nHe blinked at her uninhibited grin, then shook his head to clear it. \"On the bed,\" he gestured and stood. \"Lie back.\"\n\nPrecious slipped up along him in much the same way as she had slipped down earlier. She turned past, pulling her bra off before she lay back. The redhead looked curiously down at Travis as if to ask if he was ever going to get his pants off from around his ankles, but then he simply grabbed her legs, raised them both and slid her close. \"Mmmh,\" she murmured, \"taking charge, huh? Oh,\" she gasped then as his cock slid against her pussy. She moaned just a little as he positioned the head, and then moaned loudly as he pushed in.\n\n\"Oooohhhh,\" Precious sang out as he sank into her. \"OOOOH YEAH FUCK YEAH. God what a fucking big cock.\"\n\nTravis almost stopped. She felt good, and looked good, and couldn't act worth a damn. He knew in the back of his brain that if this wasn't only his second time and if he wasn't still so goddamn horny she would've ruined the whole thing.\n\n\"OH JACK I MEAN JOHN FUCK ME,\" Precious begged loudly.\n\nShe's hot, he reminded himself. She truly was, but just the same, he had to concentrate on the one thing about her he knew for sure he liked. Travis knew nothing of her genuine personality, but she certainly had a body.\n\n\"OOOOH GOD MAKE ME COME,\" she moaned on only is forth or fifth thrust.\n\nTravis remembered that Vanessa probably had to put much more annoying things than this out of her mind when she worked. It wasn't like this was unpleasant. Precious's only faults\u2014as far as anything mattered here\u2014were her volume and her dialogue.\n\n\"FUCK ME LIKE YOUR WHORE, BABY,\" Precious droned.\n\nHe pounded into her. At least it broke up her dialogue a little.\n\n\"UNH! UNH! BABY! UNH! JACK! COCK! FUCK! YEAH!\"\n\n* * *\n\n\"There. Done. You happy?\" Adam slapped the last Benjamin down on the desk with the rest, agreeing with the count that Vanessa had given.\n\n\"No,\" she said. She wasn't happy yet. She didn't hear any noise from downstairs. \"Do it again.\"\n\nAdam and Gio both rolled their eyes in dramatic frustration. \"Jesus Christ, whore,\" Gio blurted out, \"what the fuck do you think we're gonna do?\"\n\n\"I don't want him cutting Rudy short and then blaming it on me!\"\n\n\"He's not!\" Gio frowned. \"I'm here. You agree on the count. So do I. So does Adam. So we're cool, okay?\"\n\n\"Ooooh yeah fuck yeah!\" came a voice from downstairs. Neither of the guys seemed the least bit surprised.\n\n\"Okay,\" Vanessa sighed. She threw her hands up and stepped outside of the upstairs \"office.\"\n\nAdam slipped two of the hundred dollar bills from the stack, gave one to Gio and put the other in his pocket. They fist-bumped with a grin. \"Go downstairs and make sure Precious doesn't yell out the safe word or nothin',\" Adam said.\n\n\"On it,\" Gio nodded. He walked out of the room, completely oblivious to Vanessa standing flat against the wall to his right outside the door. Gio turned to his left to head downstairs.\n\nPredictable assholes, she thought with a roll of her eyes. She glanced inside. Sure enough, Adam slipped an extra bill into his other pocket before he turned toward the safe. Downstairs, Precious got Travis's blatantly fake name wrong as she cried out with unconvincing desire and increasing volume. She heard the headboard slam against the wall again and again. She heard the television turn on downstairs.\n\nVanessa slipped inside, drawing Joey's revolver out from under its hiding spot in her waistband and under the bulky pockets of Travis's hoodie.\n\n* * *\n\n\"OH! GOD! YEAH! FUCK! YEAH! OH! MORE!\"\n\nTravis slammed into her, trying harder to make noise than he was to enjoy himself. It helped him hold off orgasm, he figured, if he thought of things other than how good this felt despite the excessive noise.\n\nThe headboard thumped up against the wall in a steady beat.\n\nHe hoped Vanessa was doing okay with her end of the plan.\n\n\"FUCK! ME! FUCK! ME! FUCK! ME!\"\n\n* * *\n\n\"Fuck! You! Fucking! Asshole!\" Vanessa grunted each time she pistol-whipped Adam on the back of the head. She held him up by his collar after the second blow, making sure he didn't collapse completely to the floor with a suspicious thump Precious and Travis couldn't cover up.\n\nAdam lurched as his struggles ended. She let him down onto the floor, kicking him hard in the gut just for old times' sake. She kicked him again out of sheer pettiness, and finally she patted him down to take his gun and other belongings.\n\nAssured he was down for the count, Vanessa turned from him to the open safe in the closet. She knew there would be some cash\u2014Rudy and his companions were awfully leery of banks given their sources of income\u2014but the sheer amount of it stunned her. There were doubtlessly other stashes that Adam wasn't trusted with, but Vanessa couldn't afford to waste time looking. She took what she could get, which was much more than she expected. Besides, there were more important things here than the cash.",
        "Her heart leapt as she found the manila folder containing all her life's papers. Transcripts. Birth certificate. Legal papers. It was all here. There were other important papers, too. Vanessa grabbed the trashcan, dumped the contents out over Adam's fallen body and then swept everything from the safe into it.\n\nShe closed the door behind her without a second look at Adam.\n\n* * *\n\n\"OOooooooh God yes.\"\n\nTravis thrust into Precious again and again, still hard enough to bump the headboard against the wall. Her volume gradually reduced, though, falling to simple, rather convincing grunts as she ran out of breath. \"Uh,\" he mumbled, \"are you okay?\"\n\n\"Yeah,\" Precious huffed. \"Yeah, just...oh, wow.\" Her legs slipped around Travis's waist. \"This is... actually... oh... really good... seriously, keep fuckin' me like this and I'm... I'm gonna have to tip you.\"\n\n* * *\n\n\"Ugh, she needs acting lessons so badly,\" Illyana sniffled as she heard the door open. The young blonde's cold made her Russian accent sound silly. She hardly looked up from her cheap bed, deciding instead to pull her pillow up around her ears.\n\nVanessa shut the door behind herself. \"Illyana, how are you?\" she asked her roommate urgently.\n\n\"Be better tomorrow,\" came the response, followed by a cough that led to some distinctly unladylike spitting into a bunched up bit of bath tissue.\n\nThe sight of her made Vanessa even angrier. The bastards couldn't even be bothered to go out and get Illyana an actual box of tissues, and probably not cold medicine, either. Hell, they'd only given Illyana the night off because visibly sick hookers didn't exactly rake in the big bucks.\n\nVanessa put it aside. \"Honey, where's my boy?\"\n\nIllyana pointed toward the open closet on the other side of Vanessa's bed. There, curled up in the old plastic hamper full of dirty clothes, was Vanessa's little love. \"How can he sleep through that racket downstairs?\" Illyana asked.\n\n\"He's a good boy,\" Vanessa said, crouching down next to her. \"Illyana, I need you to get up.\"\n\n\"Eh? Why?\"\n\n\"Because I've got your passport, your visa and enough cash to start you all over again, but we've gotta leave right fucking now.\"\n\nIllyana raised her head wearily at first, looking at Vanessa with bloodshot eyes, and then sat bolt upright when she saw the bounty sitting in the trashcan. \"Bozhe moi!\" she gasped.\n\n\"Get dressed. Throw something on, anything, doesn't matter what as long as it's warm. The car's just a couple blocks away.\"\n\n\"What car?\" Illyana asked. \"What\u2014?\"\n\n\"Illyana, you've gotta trust me here, okay? Get dressed. Wear the leather jacket. You've gotta carry Geronimo and hold onto him for dear life no matter what, okay?\"\n\n\"Da. Yes. Okay.\" Illyana rubbed her face as she forced herself out of bed.\n\nVanessa went over to the hamper to collect her boy. \"And you,\" she added, hugging him close, \"if anyone asks you, your name is Chester, okay?\"\n\nGeronimo meowed.\n\n* * *\n\n\"That's a fair hit!\" Gio complained. He watched as the play was repeated in slow motion on the television screen, growing even more irritated as the announcers complained about roughness and the culture of the teams. \"Oh, cry me a fucking\u2014hey, Adam! Get down here! They're playing your whiny bitch song!\"\n\nHe finally heard the shuffle of feet descending the stairs. Either Adam had trouble with the safe, Gio figured, or he had just waited until Precious quieted down again. The banging still hadn't let up yet, but at least her screaming had.\n\nSeeing the approaching form out of the corner of his eye, Gio turned in his plush living room chair to taunt Adam further. \"Hey,\" he said, \"them mo'fuckers\u2014AAAAGH!\"\n\nVanessa caught Gio dead in the eyes at very close range with her pepper spray.\n\nGio lurched out of his chair, quickly becoming tangled up in his overly-baggy jeans. He fell to the ground with one hand on his eyes and the other fumbling for his gun. \"Motherfucking bitch!\" he wailed.\n\nIllyana stood behind Vanessa in a leather jacket and jeans, holding the Serengeti housecat close and trying to alleviate his nervousness. She stepped further away so the smell wouldn't alarm Geronimo. \"Since when do you carry that?\" she asked.\n\nVanessa kicked Gio hard and snatched the gun from his waistband. With him down and disarmed, Vanessa searched his pockets for his phone, wallet and car keys. \"Picked it up at a convenience store tonight,\" she explained.\n\n* * *\n\nPrecious was just really getting into this guy and his relentless drive when she heard the scream. \"What the fuck?!\"\n\nTravis immediately stopped thrusting into her. \"Okay, just chill out here and I'll take a look\u2014\"\n\n\"Fuck that!\" Precious blurted, shoving herself away from Travis. She leapt off of the bed, throwing the door open without a care for her nudity. Travis was not so immodest; he paused for the single second he needed to pull his sweat pants back up, grateful for the third time that he wore such convenient clothing tonight. He followed behind Precious, quickly finding her at the end of the hallway with her hands in the air.\n\n\"Go back in the room you just came out of,\" said Vanessa from behind her gun, \"and fucking stay there until somebody comes and gets you.\"\n\nFor a moment, Travis wondered if she was talking to both him and Precious. When the redhead moved off, though, Travis saw an immediate change in Vanessa's expression. He also saw the man writhing in pain at her feet, and the blonde far behind her holding a cat.\n\nHis brows came together immediately. \"Waitaminute,\" he said.\n\nVanessa strode past Gio and then Travis, moving to the first bedroom door in the hallway and throwing it open. She found Precious there, hurriedly dialing someone on her phone. This room was much more thoroughly furnished and decorated than the others. Vanessa pointed the gun at Precious once more. \"I said the other room, bitch! Drop the phone and go!\"\n\n\"Okay!\" Precious blurted out, quickly obeying. Vanessa just scowled as the redhead rushed past. She picked up the phone, thrust it into her pocket and then threw the closet open. \"Couple more things and then we're gone.\"\n\n\"Vanessa, what the hell's going on?\" Travis demanded.\n\nShe pulled out a shotgun and two more pistols from a shelf within the closet. \"I don't want to leave these assholes with their guns,\" she explained. \"Careful, they're loaded.\"\n\n\"That's not\u2014that's not what I mean!\" Travis frowned as she shoved the shotgun into his arms. \"Where's your son?\"\n\n\"Illyana's got my boy,\" Vanessa said. \"I never said he was my son.\" Her eyes met his, set in cold resolve. \"Okay, I feel really bad about not telling you the whole truth, but he's still my responsibility and he's the only family I've got. Would you have come if I had told you he was my cat?\"\n\nTravis frowned darkly. \"Don't give me that shit. I've got two cats of my own at home.\"\n\nVanessa's argument came to a halt. \"Oh.\"\n\n\"Yeah.\"\n\n\"Okay then.\"\n\n\"Is his name really Chester?\"\n\n\"No, it's Geronimo.\"\n\n\"Good,\" Travis sighed. \"Chester's a terrible name for a cat.\"\n\n\"Hey!\" Illyana called from the hallway. \"Can we leave now?\"\n\n\"Fucking bitches,\" Gio tried to protest. There was a brutal thump. \"Ow! Stop kicking me in the head!\"\n\nTravis and Vanessa returned to the living room. Vanessa paused to lean over Gio and issue him a final warning. \"You have no guns, no phones, no money and no car keys. You're nothing but dumb muscle and you know it. Don't even think of trying to find me.\"\n\n\"Oh fucking shit just go away!\" wailed Gio.\n\nVanessa walked to the bottom of the stairs to pick up the trashcan and dropped her stolen items into it. \"Let's go,\" she said to the others.\n\nTravis took the lead, wanting to keep an eye out for possible witnesses or problems. His eyes swept the residential streets as they hustled over two blocks and across the next, grateful once again for both the rain and the poor street lighting. He saw no traffic passing by. The street where they had re-located the Mercedes had been fairly empty, though now there was at least one other vehicle that hadn't been there before. It caught Travis's eye right away.\n\n\"Jesus, is that Rudy's car?\" Illyana asked as she followed. She coughed again, holding Geronimo tight despite his protestations about the rain and being held.\n\n\"Yeah. I know where it'll get stolen and taken to a chop shop if we leave it overnight,\" Vanessa said as they crossed the street to get to the Mercedes. She opened the car and put the trashcan inside as Illyana moved around to the passenger side door. Then she realized her partner had fallen behind. \"Travis?\" she asked.\n\nThe tall young man with the shotgun strayed away in the street. He stared at the SUV parked on the other side of the street with its lights off and the silhouette of someone sitting inside. \"Dad?\" he asked.\n\n\"Travis?\" Vanessa repeated behind him. She watched as everything about his posture and stride changed from wary caution to anger and purpose.\n\nHe rapped on the SUV's windshield. \"Dad!\" he growled loudly.\n\n\"Holy shit,\" Vanessa and Illyana breathed in unison.\n\nThe man in the driver's side, dressed in a vanilla sweater vest and a nice button-up shirt, looked to his left in surprise and obvious fear. A second form appeared inside just then as a young woman lifted her head up from his lap. \"Travis, wait!\" the man yelled.\n\nHis face twisting in rage, Travis hoisted the shotgun up over his head and brought the butt of it down on the windshield. The glass buckled and cracked in a spider web under the impact. \"Travis, stop!\" yelled the man in the SUV.\n\n\"Son of a bitch!\" Travis growled. The girl jumped out from the passenger's side and quickly ran down the block. The driver's door opened. Travis's father stepped out, one hand up to ward off his son's anger and the other holding up his unfastened and unzipped pants. \"Is this why you're so okay with Mom's sleeping pills, Dad?\" Travis demanded.\n\n\"Travis, it's not what you think!\"\n\n\"Oh, bullshit! It's exactly what I think! It's called fucking hypocrisy, Dad! And cheating! And\u2014Jesus Christ, you are such a\u2014!\"\n\n\"Don't blaspheme at me, young man!\" Travis's father ordered as if his commanding tone would turn the tables on the moment.\n\nIt didn't. \"Fuck you, asshole,\" Travis scowled.\n\n\"Dammit, Travis, I can explain.\"\n\n\"You don't have to explain anything to me,\" Travis said. He pumped the shotgun. His father went white as a ghost, stepping back from his son. Travis aimed the shotgun at the back wheel well of the SUV and fired. The tire burst immediately. Buckshot pierced the frame in a dozen little spots. \"Explain all this to Mom,\" he snarled.\n\nTravis turned from his father and walked away. He much preferred the company of the whore he'd just met that night. At least her lies were forgivable.\n\nThey didn't say anything right away as they drove. Vanessa kept her eyes on the road. Illyana sniffled. Geronimo complained. Travis stared off into space.\n\n\"Sweater Vest is your father?\" ventured Illyana.\n\n\"Yes,\" came Travis's flat answer. He paused, then eventually turned to Vanessa. \"Tell me you never\u2014\"\n\n\"Does it make any difference to what you think about me if I did?\" she asked.\n\nHe didn't answer right away. It was hard to think through his anger, but for her sake, he tried hard to be honest. \"No,\" he replied finally.\n\n\"No, I didn't,\" Vanessa said. \"I hardly ever even saw him. That block is someone else's turf, anyway. He has a thing for Asians and black girls. That's all I know.\"\n\n\"Same here,\" Illyana chimed in. \"They say he is kind of douchey.\"\n\nGeronimo meowed loudly, scratching at the upholstery.\n\nVanessa drove. \"Illyana,\" she said, \"I need you to pull the cards out of all those phones and smash them. We're gonna go over the 520 and throw everything off the floating bridge, okay?\"\n\nIllyana nodded. \"Will Sweater Vest call the police?\"\n\nThe question hung in the air for a long moment. \"I don't know,\" Travis frowned. \"Maybe. Maybe not. I don't know. I'm so sorry. I just complicated the hell out of this, didn't I?\"\n\n\"Don't worry about it,\" Vanessa told him.\n\n\"No, I did. I'm sorry. We were about to get away clean, and I just\u2014\" Then his phone rang. \"Shit. Speaking of,\" he grumbled as he looked at it. \"I really don't want to answer this.\"\n\n\"Give it to me,\" Vanessa said. She held out her hand. \"I'll handle it.\" Travis looked at her as it rang. \"Look, you came to my rescue tonight and helped me get out of this shit. Let me help you back. I know what to do.\" Travis's expression remained dubious, but he was out of ideas. He handed over the phone.\n\n\"Is this Travis's dad?\" she asked by way of greeting. \"Shut the fuck up. Shut up and listen to me. I know whose whores you were hiring and who pimps them. I know what they charge and what blocks they work. If you don't want trouble with the cops, you will call a fucking cab, go home, and then wake up in the morning and report your car stolen and act like you don't know a fucking thing. Don't tell me you don't know how to lie to your wife or the cops.\"\n\nShe waited. \"It's the only way you don't wind up in jail, asshole. Your family life may already be in the shitter, but I'll put everything else in there if you try anything clever, you got me?\"\n\nTravis looked on in awe. \"I wouldn't have thought of that,\" he mumbled when she looked back at him.\n\nShe put the phone against her shoulder. \"You never lived on this side of the law. He still wants to talk to you. Want me to hang up?\"\n\nHe shook his head. Travis took the phone from her. \"Tell Mom,\" he said.\n\n\"Travis\u2014\" his father tried.\n\n\"When you finish with the cops, you tell Mom the truth or I will. I'm moving out either way. I should've gone a long time before this. Don't call me again. I'm busy. Probably for the rest of my life. Goodbye.\" With that, he snapped the phone shut.\n\n\"Do you know where you're gonna go?\" Vanessa asked.\n\n\"Not really,\" Travis shrugged. \"I've got a couple friends I could stay with until I figure that out, at least.\"\n\n\"Yeah,\" Vanessa nodded, and put her hand on his leg. \"Yeah, you do.\"\n\nHe looked back at her a bit sadly. \"Thanks,\" he said, \"but do you know where you're gonna go?\"\n\n\"Holy shit,\" Illyana interrupted. \"Vanessa, do you know how much money this is in here?\"\n\nVanessa smiled back at Travis. \"Back to school,\" she answered.\n\n* * *\n\nThe text message came earlier than he expected. Travis had his phone sitting underneath his computer monitor. He clicked away at mindless internet silliness, killing time until the work day ended. He was well ahead on his most recent project, anyway, and his team lead knew it. As long as Travis didn't make a spectacle of himself, the boss didn't mind allowing him a little lazy time.\n\nTravis actually worried a bit when the phone buzzed. It was a little too early for her to be calling. She'd be in class until at least four o'clock. Travis picked it up, turned it over and glanced at the picture of Geronimo lazing in the sun before he opened the message.\n\n\"Prof sick. Class canceled. Came home early. We love the flowers. What's the occasion?\"\n\nHe smiled and responded. \"No reason.\"\n\nBy the time he had it keyed in, there was already a follow up. \"I need your help with something. Come home soon.\"\n\nTravis frowned. \"What's wrong?\" he replied. His mind wandered as he waited. Was something wrong in the apartment? Did something happen at school?\n\nHis eyes turned back to the computer, but his mind stayed on Vanessa. They hadn't had much in the way of problems since they moved in together. She was responsible with money. Serious about school. She partied, but knew when to quit, stayed away from drugs, and never once left him in doubt about their relationship. She even got along with his mother. He wondered what could be wrong.\n\nThen came the picture mail. He opened it up. It was obviously a self-taken picture from Vanessa's phone. In the background he could see the cheap Ikea table in their dining nook, and the bouquet of roses in the middle of it, with Geronimo shamelessly munching away on the petals. In the foreground was Vanessa, looking up at him with an enticing grin and a self-evident problem summed by the follow-up text message: \"All my clothes fell off again.\"\n\nTravis took a deep breath. \"Hey, Harvey, I think I'm gonna have to take off a little early today. I've got an emergency at home.\""
    ],
    "authorname": "bashfullyshameless",
    "tags": [
        "first time",
        "male-female sex",
        "prostitution",
        "backseat",
        "blowjob",
        "comedy",
        "action",
        "latina",
        "interracial"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-gateway-to-sin"
}