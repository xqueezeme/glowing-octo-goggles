{
    "title": "My Little Ventrue Pt. 07 Ch. 18",
    "pages": [
        "~~Beatrice~~\n\nEveryone left. S\u00e1ndor was apparently a really, really strong Begotten, to the point he surprised Fiona when he opened a pathway back to the real world without issue. A wave of the gargoyle's hand, and the darkness in the forest flickered. Fiona, or Vrall or whatever, went through it with her man, and they disappeared, supposedly to arrive near Damien's apartment so he could take a moment to recoup. Two crows sat on Damien's shoulders, and several more plus a few rats scurried along with them. Mulder, Scully, and the few that survived Jack's assault. A second later, S\u00e1ndor did it again for Clara, opening to somewhere in the Carthian district. And then again, for Aaron, who was dragging the now barely conscious Othello. S\u00e1ndor opened a portal to the outskirts of town, guided by Aaron's suggestions. Mark had already left with Azamel, so, that left Beatrice, Jennifer, and the gargoyle.\n\n\"Why did you not leave with your friends?\" the beast asked.\n\nTriss shrugged, and dragged herself over to the altar she knew had been S\u00e1ndor's imprisonment. This was where Elen had done her ritual, with knife and skin. Triss could almost feel the residue of a strange power emanating from it. Not so strange, really. It felt similar to Cr\u00faac.\n\n\"I thought Athalia might come through. I wanted to talk to her,\" she said.\n\n\"The door between our lairs has closed. I am, once again, closed off from the other Begotten.\"\n\n\"Closed off?\" she said.\n\n\"Yes. Athalia, Fiona, Azamel, and Mark have linked their lairs. They may travel between their many realms freely. I... have not linked my lair with anyone in many years.\"\n\n\"Sounds lonely,\" Jennifer said. She came up behind Beatrice, and hugged her, arms looping around her stomach. She either wanted to keep close in case Triss started to fall, or she just wanted to be close in general. It was good, either way. Triss was too exhausted to be surly and dismissive. And it felt good to let Jennifer in close again. She leaned back into Jennifer's body, and sighed.\n\nTriss turned her head enough to give her friend a small kiss on the cheek. \"How long were you under Elen's control?\"\n\n\"Four years.\"\n\n\"Jesus Christ.\" She shivered, and set her hands on the altar. It was sloped upward, but at the lowest point where it pointed toward the center of the clearing, it was low enough that her arms came down in order for her palms to reach it, with a bit of a slouch, too. \"He murdered your family, to capture you?\"\n\n\"... yes.\" Slowly, with delicate hands completely at odds with the Horror she'd seen earlier, the gargoyle lowered some of the many bodies into the hole he dug. They didn't deserve a burial, especially if they helped Jeremiah capture S\u00e1ndor, and yet the monster was burying them. From how careful he was being, she suspected he'd give them a proper burial, if it'd been viable.\n\n\"Horrible,\" Jennifer said. \"Absolutely horrible.\"\n\nTriss winced. Yeah, it was horrible. But how long ago did Triss and Jen brutally butcher a bunch of kine, sacrificing them into a big rusty bowl, so Triss could communicate with some otherworldly entity of blood and pain? Those people had been brothers, sisters, sons and daughters, maybe even mothers and fathers too. Tough to think of the hunters as being so low, when--no. No, don't think that shit. The people you killed were just scumbags and worthless cockroaches. What you did is not the same as killing the family members of the people you were hunting. Jeremiah and Angela were the lowest of the low. Don't compare your journey into the world of blood sacrifice, to their pathetic, cowardly, shitty tactics.\n\n\"Well,\" Triss said, \"fuck him. He taught Angela to fight dirty like that, and it got them killed.\"\n\n\"Yes... yes, it did.\" The gargoyle put on the smallest smile, before he came over to them, and squatted like he was perching on a jutting stone of a church wall. God damn he was huge, muscular as all fuck, and she stared at the beast for a few seconds as he pulled his huge wings in snug to his back.\n\nHis face was expressive in a way she hadn't been prepared for. It was a demon face, yes, but a human demon face, with dark steel-colored skin, deep set eyes, pronounced eyebrow ridges, and of course, giant horns. Like, big, curly, scary, giant horns. And with his very hard, broad chin, he would have looked perfectly at home sitting on a throne, looking stoic, and giving orders to his army of demons. When he talked, she could see hints of his teeth behind his lips, all of them sharp, with some very nasty, pronouncd fangs. Those teeth had chomped Jeremiah into bite sized chunks.\n\nSpeaking of teeth, and biting.\n\n\"Your neck ok?\" she said, gesturing to it.\n\nThat, of all things, brought a real, if momentary smile to the squatting monster's face. \"Yes, mostly.\" He raised one of his hands to his neck, and rubbed at the wound. The skin was mostly closed, but she'd managed to fuck his neck up pretty good. Damn proud of that.\n\n\"I guess Athalia didn't come back,\" Jen said.\n\nTriss nodded. \"I'm not surprised. It... it...\" Fuck it. She turned around, and hugged Jennifer, full on hug. She set her face in her friend's neck, and just held on. No crying, no sobbing. She'd cried enough for a decade, at least. But, she wanted a hug. \"Killing Angela wasn't fun.\"\n\nJennifer chuckled, a tiny laugh, only audible cause Triss was close enough to feel it. \"You thought it would be?\"\n\n\"Yes. I thought I'd kill her, laughing and dancing the whole time, you know? It'd be great. I'd feel great.\" Sighing, she ran her hands up and down Jen's back a little, continuing the hug. \"Instead, all I did was... execute a defeated, broken, stupid girl. And I did it in front of her crying mom.\" After making sure the hug was good and long, she backed off and set her hands on Jen's shoulders. \"Felt more like... like a scene from Old Yeller, or something, you know? I was putting down a rabid dog. I wanted to be screaming with joy! Not... not...\"\n\n\"Jeremiah's last words,\" S\u00e1ndor said, his quiet voice rumbling with so much bass, he sounded more like a subwoofer, \"were to tell Angela to run. His last words... were an attempt to save her, while he died.\" The gargoyle, still squatting with his two lower arms resting on his knees, raised his two higher arms out in front of him, and slowly grabbed the air, as if grabbing Jeremiah again. \"I did not kill a monster. I killed a person. It had to be done, but that does not alleviate the weight such death places on our... souls.\"\n\nUgh, she hated that that sounded right. Killing people brought with it something she couldn't quite put her finger on, until S\u00e1ndor just said it: weight. She'd been killing a lot of people lately, and that weight was starting to pull her down, like shackles tied around her throat. Killing Angela was more weight on her soul, and good god, that fucking sucked. Killing the bitch should have freed her, not added to a growing mountain of bones tied to her.\n\n\"You sound... wise, I guess,\" she said, smiling up at the gargoyle. Jen slipped behind her, and started hugging her again, this time putting a kiss on her ear as she did. Triss didn't pull her head away this time. It felt nice, to have Jen's hands on her, and after tonight, after the misery of Athalia's sobs faded, maybe she'd let her do more. Not tonight, but later.\n\n\"I've been around for many centuries,\" the beast said. \"I guess... wisdom snuck up on me.\"\n\n\"Centuries?\" Jen said from over Triss's shoulder. \"We thought Begotten aged. Slowly, but they did.\"\n\n\"It depends on whichever Horror has cursed us. The... gargoyle, ages very slowly, like the stones of a castle wall. I will live for centuries yet, I imagine.\" With a great, heavy sigh, the beast slid his long tail along the earth, until it was curled around the front of his ankles, and then behind him again. \"I... I have to apologize, Beatrice.\"\n\n\"Apologize? For--oh... right.\" Right. S\u00e1ndor was a big part of the reason Julias was dead. \"You were under a fucking spell, dude. And after learning about what Jeremiah did to you, the fuck am I going to do, yell at you because you were forced to help kill my boyfriend? Christ man, you lost your wife, and your son! I...\" She'd started yelling, and only after her volume rose, did it slap her in her stupid face that she was yelling at herself. \"H... How was he, at the end? Julias, I mean.\"\n\n\"Ridiculously strong. I knew of the ancilla, and what was to be expected of a Ventrue his age, and yet he surprised me. Defeated me. He demonstrated resilience, and strength that I had not expected. I could tell he was fighting for something, for someone.\"\n\nGod damn it. She smiled, and took a breath, forcing down the sudden urge to cry again. \"Tch, yeah, he was. Me, and for Jack, too.\"\n\n\"Jack...\" The gargoyle shivered, and that included his wings, all four of them reaching out with their long arms to shake, as if dislodging snow. \"The curse is a horrifying taint. I... I would have lost that fight, if he'd really tried to kill me.\"\n\nJen and Triss both shivered as well. Yeah, she could believe that.\n\n\"So, Mr. S\u00e1ndor, you're going to stay here in your lair?\" Jennifer stepped around Triss, and walked up to the squatting titan. Without a bit of fear in her step, but definitely a bit of sway in her hips, she came up under the monster's head, and grinned up at him.\n\n\"I... yes. I will heal faster here. And... I have nowhere else to go, for now. S\u00e1ndor's life, my old life, is gone.\"\n\nThe damn Ventrue put a hand on the gargoyle's knee, and chuckled. Or, giggled, if Triss was hearing right. \"So, you could stay in Dolareido?\" Oh good god she was flirting with the gargoyle.\n\nThe gargoyle tilted his head to the side, as if perplexed by her blatant flirting. Maybe he was. Well, he'd helped them a fuckload, least Triss could do was save him from Jen's legs.\n\n\"Jen, stop flirting with the giant gargoyle. It--he's a gargoyle.\" She was tempted to make a comment about his obvious lack of a penis, but then, she knew Jessy had sex with Eric when he was transformed, and werewolves didn't walk around with dicks and balls. Maybe it formed when the desire was present? Werewolves were spirit things, not biological, and S\u00e1ndor was a dream thing, not biological.\n\nHell, did vampires really count as biological? They may have lived in a world of blood, but blood and flesh were proving capable of more than she'd ever thought, considering what Elen had done, and what she'd done with Cr\u00faac. Maybe it was time she stopped thinking of vampires as simple bodies of flesh and blood, and more like how she thought of dream monsters, spirits, and ghosts.\n\n\"Athalia's not coming,\" Triss said. \"Let's go.\" It was probably a good thing she didn't. Triss wanted to talk to her, but she still hadn't resolved her feelings about the whole situation, and she knew it. It made her feel guilty, not knowing how to feel. She'd killed a woman's daughter, and that woman was a fellow monster, too. The least she could do was understand how she felt about it, so she could feel justified, or something. It was the least she could fucking do, so she could talk to Athalia, and know where they both stood.\n\n\"Fine, fine.\" Jen rejoined her, and the two of them started toward the village road. At least, until Jen stopped, and leaned in close to Triss's ear. \"We should ask him to come home with us.\"\n\n\"Jen, Angela's been dead thirty minutes. Can't you--\"\n\n\"Not to sleep with, dumbass.\" She looked over her shoulder back at the gargoyle, and draped her left arm over Triss's shoulders. Ow, legs, not healed, ow. \"Though, I mean, we've both seen him in his human form, without his shirt. He's a sexy man. Hell, he's sexy right now. But, not what I meant. I meant, he's has no home, and he's lost everything. Perhaps we should extend him a hand?\"\n\nTriss rolled her eyes. Jen wasn't fooling her. It was true they'd both seen him without his shirt, that night they fought him and a few other hunters in Elen's flesh chamber, and he'd been a gorgeous man. A little tall, quite lean, muscular but not overly thick. He actually kinda looked like Jack, just scaled up; even had the short dark hair. Only difference besides the overall size, was the Begotten had had some gruff on his face.\n\nShe tried to think about how hot he'd looked when they'd been fighting him, with his abs and shit on a sweaty display, but the image was ruined. That was the night Julias died. But, hey, if Jen wanted to fuck him, she was free to fuck him. Poor girl hadn't fucked anyone since Superman died.\n\n\"Go ahead,\" she said, and immediately regretted it. No, she didn't want a stranger around. She wanted to be alone, or maybe talk to Jacob about all this shit, about revenge, about this hole in her fucking gut that wouldn't go away. He'd understand; ancient fucker understood everything.\n\n\"S\u00e1ndor,\" Jen said, turning around, and hooking her other arm around Triss's throat gently, so her wrist dangled over Triss's further shoulder. \"Did you ever find out where the Circle of the Crone sleeps during the day?\" Except for Jacob, of course. Elders didn't expose their backs when sleeping, even to their comrades.\n\n\"No.\"\n\n\"We sleep on the outskirts of town, in a cave hidden in a ravine. It's not far from the path you made for Aaron, East of there. You'll know you've found it when you see three giant rocks propped up next to each other.\"\n\nThe gargoyle stared at her, his steely expression so damn hard to read. Fucker was stoic, so stoic it was almost comical. It was so hilariously different from the raging bull that'd been trying to kill them before, she wasn't even sure it was really him. If he got angry, would he become that raging death machine, like his Horror had been? It'd been scary strong.\n\nAnd a scary strong Begotten would be a powerful ally.\n\nTriss raised a brow as she looked at the Ventrue still hooking her neck and shoulders, and Jen spared her a quick, knowing smile. That crafty slut. Well, she said her sire had sired her because she was both attractive, and conniving.\n\n\"I will... visit, sometime.\"\n\n\"Wonderful!\" Jen let go of Triss, and clapped her hands together once, before rising onto the balls of her feet for a moment, then landing on her heels. Just enough of a tiny, 'girly' flirtatious jump, to make her tits jiggle a bit inside her suit top. If it'd been someone like Fiona, Triss would have chalked it up to just natural flirtiness; the redhead flirted like breathing. With Jen, on the other hand, it was calculated, always calculated.\n\nCalculated boob jiggle. The thought made Triss laugh, and she struggled to get it under control. Pain ripped through her, but she laughed anyway. When Jen turned to face her, Triss hooked an arm over her shoulders, and leaned on her, desperate to get some weight off her legs and ribs. But she still laughed. The pain didn't matter. It felt good to laugh.\n\n\"Before... you go,\" the gargoyle said, \"I...\"\n\n\"Yeah?\" Triss asked.\n\n\"I... do not know who to tell of this. But, the presence that... attacked me in my lair, months ago, the one that rescued Jack and the others...\"\n\nOh shit. Triss's laughter came to a quick stop, and she turned her and Jen around so she could look at the gargoyle again while keeping her arm on Jen's shoulders. They hadn't gotten very far, just to the edge of the clearing, and she wasn't looking forward to limping over all the destroyed trees back to the creepy village road anyway.\n\n\"You're talking about Black Blood,\" she said. \"A spirit.\"\n\nThe titan nodded, and slowly looked down. \"It came.\"\n\n\"He came? Like... like, tonight, he came?\"\n\n\"Yes.\"\n\nOf course he did. Of fucking course he did. The damn thing had probably been watching from outside the nightmare somehow, looking for an opportunity to take advantage of the situation.\n\n\"What'd he do?\" she said. \"If he showed up, he was up to something.\"\n\n\"I do not know. Except... it... he helped me break the ritual.\"\n\n\"Say what?\" She stared at the gargoyle, but the beast simply remained where he was, squatting over the grass and death around him. Stoic bastard. \"Black Blood helped you?\"\n\n\"Jeremiah's ritual took the nightmare from me, and blinded me. The... the spirit, removed the veil from my eyes.\" He snorted, just like a big, heavy animal that didn't like its situation might. A damn powerful sound, and Triss shivered as she felt the heavy bass of it flow past her. \"The spirit was... cold.\"\n\nTriss and Jen looked to each other, and sighed. Yeah, that was Black Blood. His presence was cold, but not in temperature. It was cold, the way death felt cold.\n\n\"Thanks for telling us,\" she said. \"I'd avoid telling anyone else except for us witches. Black Blood isn't exactly well liked in Dolareido.\"\n\nThe monster nodded, and turned his head back to look down at the ground in front of him. He didn't move. Literally. He didn't breath, didn't shift, didn't adjust, he just squatted there like a statue. Like an actual gargoyle.\n\n\"Hungry?\" Jen said.\n\n\"Oh god, very. Fucking starving.\" She gave her friend a smile, and started to limp toward Dracula's knock-off castle.\n\nAngela was dead. Jeremiah was dead. The hunters were defeated except for some still hiding out in the city, and they weren't nearly the threat they'd been with their leader. Triss and the gang had won. Yeah, Athalia probably hated them, but they saved Azamel's life too, so that was a point in their corner for keeping the Begotten on their side. Jack managed to become Jack again, normal Jack. And they'd made an ally in S\u00e1ndor. Everything was looking up.\n\nShe could go home now, maybe go visit Julias's mansion, and do something to seek finality. Burn it down, maybe? The Invictus would probably have her head for that. Maybe walk around the mansion for a while, and just absorb the sad memories. Maybe cry until it hurt, like she'd done so many times already? No matter how bad she felt about killing Angela, about how horribly the night had gone and had been, there was a piece of her that was genuinely happy. Vengeance was had. Time to move on.\n\nBut, why was Black Blood here? How did he know what was going on? What the fuck was Jacob up to?\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nFlowing Sanctuary kicked them out of the Hisil, under threat of reporting them to Avery, and beating them to a pulp. And it had the power to make it a reality. It became clear, as the strange entity guided them to the nearest locus, and then sent them packing, that Flow was a very powerful spirit.\n\nThe boys told Tash a story, a third hand account of how Avery, who'd lost her pack and her previous totem spirit, met Flow when she was dying. They didn't know what, but something happened to Simon and his pack, between now and the last time Avery had come to the city. Flow had been tiny then, apparently a water spirit who'd obtained a desire to protect others somehow. It wasn't far fetched. Water could be a very protective force in certain circumstances. A river could be a wall between predator and prey. The surface of a lake could be the barrier between predator and prey. She'd have to ask to find out, and after tonight, she was afraid to ask Flow anything.\n\nTogether, Flow and Avery had helped each other survive, and forged a friendship. That friendship was how Flow became her totem spirit, instead of a deal struck or forced enslavement. Flow was too powerful to be forced to do anything, probably.\n\nSo, Tash and friends had been forced out, back to the physical world. Eric looked upset. The man was finally reaching out to affect the paranormal world, instead of being pulled into it, and got shut down for his efforts.\n\nNatasha frowned down at the sidewalk as she turned the thoughts in her head. \"I wonder...\"\n\n\"Mm?\" the boys said, looking over their shoulders at her. She'd fallen behind the group, trapped in her thoughts.\n\n\"I w-wonder how Flow found us. Dolareido is a b-b-big city.\"",
        "\"It probably tracked Matt and me down,\" Art said. \"We've been working together for years. I'm sure it can find us if we're in the Hisil.\"\n\nThat made sense, she supposed. She wasn't sure how spirits sensed, but if Flow was acutely familiar with the 'scent' of its pack, then--\"Um, then m-maybe Eric should do what he wants... without you?\"\n\nEric glanced over his shoulder at them, shrugged, and continued on. He was cranky, but she was confident he'd get over it. And the streets of Dolareido weren't the best place for this sort of conversation anyway.\n\n\"She's right,\" Matt said. \"Sorry Eric. I mean, we knew Flow would disagree, but we didn't think it'd actively block us.\"\n\nArt sighed as he shrugged. \"Avery must have warned it, tipped it off that we might do something like this. Damn woman knew what you were going to do, Eric, and of course whatever Avery thinks is right, she does.\"\n\nAvery was strong willed, to the point it'd be a problem if she ever disagreed with Antoinette about something important. She'd willingly fight the elder, if she thought it was the right thing to do. And, while the werewolf must have been extremely dangerous, Antoinette was half a millennium old. Eric, on the other hand, was a fresh pup, and Avery would have no trouble smacking him around.\n\nShe pulled out her phone, and checked her messages. She'd gotten into the habit of turning off the vibration, for fear it might get her in trouble someday in a precarious situation. And--oh, oh god. One from Jack, one from Antoinette, each a couple hours old, and a new one from Antoinette. Uh oh.\n\n\"Um, I have t-to get back to the Elysium, immediately.\"\n\n\"Business?\" the boys said together.\n\n\"Yes. Um, Jessy, you'll w-want to talk to McDonald, too. Something happened. Something... b-big.\"\n\n\"Big?\"\n\n\"Y-Yes. Um... we... we d-d-don't need to worry about the hunters anymore. M-Most are... dead, including Jeremiah, and Angela.\"\n\nEveryone stopped, and stared at her. She'd had to whisper it, so quiet they wouldn't have been able to hear it if they hadn't been paranormals. The text said some hunters were still in the city, and she couldn't risk them hearing. Even letting normal kine hear such a profound statement was risky.\n\n\"Wow,\" Matt said, \"um... ok? I guess we'll head back, and see what Avery knows.\"\n\nNatasha stared at the text again for a moment, took a second to nod to each person in the group, including a knowing one for Jessy, before she vanished.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nAs she descended the stairs of the Elysium tower, she froze. People were talking, voices she recognized.\n\nJack, and Samantha. The two were sitting in one of the recreation rooms, the one with couches and an enormous TV, meant for digesting news in luxury. Jack was talking about his fight with the hunters, from the little Natasha picked up, and mentioned Angela was dead.\n\nSo, Natasha did what any self respecting Mekhet would do. She Cloaked herself, and pressed her back to the archway of the room's entrance. Spying! No, not spying, but she just couldn't help herself.\n\n\"Angela's dead?\" Samantha said.\n\n\"Yeah, she's dead.\"\n\n\"I... I... I don't know what to say.\"\n\nThat earned a chuckle from the kid. \"Neither do I, Mom. I don't know how to feel about it. It... it...\" Natasha couldn't see him, from how she kept her back to the frame of the arch entrance, and Jack might be able to spot her if she peeked, with his new power. If he could sense her right now, he wasn't letting it affect his conversation. Maybe he was too tired to.\n\n\"It must have been horrible.\"\n\n\"Yeah, it was. We won, really won. We took them down and didn't lose a single person. But... yeah, it was bad.\" After a long sigh, one Natasha knew Jack often made while rubbing his buzzed hair, he continued. \"But, we're safe. Or at least, a lot safer. There's still some hunters in the city, but--\"\n\n\"What about Athalia?\"\n\n\"Athalia? She... she was there, yeah.\"\n\n\"Oh no. She helped kill her daughter.\"\n\n\"No. It was the plan that she'd help kill her, or possibly capture her. In the end, she... she tried to save Angela, and we had to kill her anyway. I... I don't think... Athalia's ever going to forgive me, for that.\"\n\n\"Oh Jack. I can't imagine. I... I can't imagine.\"\n\n\"I have to go talk to my bosses in a minute, Mom. But later, we can--\"\n\nSome shuffling fabric sounds signaled that they were hugging, and Natasha felt her heart break. She'd been super happy to learn the hunters were defeated, so happy she'd forgotten about Athalia. Antoinette would tell her to not concern herself with Athalia's pain, but it was easier said than done. Maybe with a hundred years under her belt, Natasha could close off her heart like that, but for now, it all hit her no matter how hard she tried to keep it out. It was one of the reasons she didn't hang with people as much as someone like Jessy. She absorbed the emotions of people around her, whether she wanted to or not.\n\nShe didn't stick around anymore, and instead moved on to the primary experimentation room, where she knew Antoinette awaited her. It wouldn't be good to come to Antoinette feeling emotional about poor Samantha and poor Athalia, and poor Mary, and poor... whoever else was hurt. Undoubtedly, other people had been hurt. But Antoinette would want her calm, smart, and logical.\n\nShe walked into the grand room where Antoinette stood by the massive table off to the side, covered in laptops. In the center of the huge room, was the dangling chandelier of blue, though it was off, and some regular white LEDs were on instead. All the laptops were on, and around the laptops, were a host of strange items Natasha had never seen.\n\n\"Prince, I--oh, w-what are these?\" Immediately, the shrunken head grabbed her attention. It'd have creeped her out in the past, and while it was still definitely creepy, it didn't bother her anymore. After months of dealing with Antoinette's strange research, a shrunken head was pretty normal.\n\nExcept, it wasn't just a shrunken head. There were a whole bunch of things! A knife that must have been carved out of a bone. A necklace that had bits of bone hooked on it. It was a sm\u00f6rg\u00e5sbord of occult objects, and they all had a very obvious motif: the key aspects of each were made of human body parts. And, in the center of it all, was a very creepy book, a big, fat, thick book that demanded she read it. Except, the cover was obviously made of skin, probably human skin, and if she opened it, she was likely to summon the Apocalypse.\n\nThe book put everything else into context. This was the hunters' stuff, the shaman's stuff, and Antoinette had taken it from the dream.\n\n\"Oh m-m-my god...\"\n\n\"Indeed.\" Antoinette looked to her, grinned a knowing grin, and sat down at the table as she gestured for her to do the same. \"The hunters are defeated, and I have gained many new items for my collection. We will have much to study, I think.\" And, without fear, she opened the book. Natasha froze, expecting it to scream, to burst into flame, to unleash a black demon arm, or at least do something more than be a book. But it just sat there, doing book things, waiting to be read; deciphered, actually, as she didn't recognize the letters.\n\n\"I can't b-b-believe it. The hunters are gone?\"\n\n\"Yes, except for, as I warned you, perhaps a dozen that remain in the city, leaderless. Though tomorrow night, you, I, Daniel, and Jack will talk with Harcourt.\" She frowned at the mention of the hunter's name, the one she'd mentioned in her text. \"These hunters must come to my tower, and only after I have personally inspected them, will I allow them to leave. I expect that there will yet be more deaths, hunter deaths, before this problem is completely resolved.\"\n\n\"The p-part of war no one talks about. It never stops instantly, d-d-does it? It always... trickles to a stop.\"\n\n\"Quite true, Miss Vola.\" Antoinette smiled at her, proud, and Natasha buzzed with joy. Teacher's pet. \"The realities of war are never as final or definitive as in literature. But, for all my frustration with Jack for the reckless assault he led tonight, the hunters are defeated. Only one true problem has been created in the aftermath.\"\n\nUh oh. \"Problem?\"\n\n\"Elen lived through the encounter. And, while I admit that I had hoped she would, so I could capture her, and learn what she knew, it is not I who possesses her.\"\n\n\"She lived, b-b-but she's not here? Then, who ha--Jacob. J-Jacob has her.\"\n\nAgain, Antoinette smiled. \"Your deduction skills improve, my student. Oui, that infernal Nosferatu has taken her, with Black Blood's aid. And now, my strongest ally, and perhaps strongest enemy, is potentially armed with the skills of a terribly skilled shaman of flesh.\" Sighing, smile gone, she gestured to the assortment of occult goods. \"And while both Jacob and I gained from the fallout of my beloved's assault, I fear he has stolen the better of the spoils.\"\n\n\"B-But, we have her book, and--\"\n\n\"I doubt she needs this scripture, Miss Vola. For a creature that absorbed in her craft, it is likely that she can wield the art as easily as a musicians plays their instrument.\"\n\n\"B-But, even a musician needs their sheet music for really long and complicated songs!\"\n\nThat pleased the Prince, and she nodded as she sat back, tapping her chin with a finger. \"Correct again, little one. Yes, it may be true that Elen will need the book, or her tools, for some of her more grand efforts. Jacob may come to bargain for said tools, or, he may attempt to take them by force.\"\n\n\"What!? W-Why would he do that?\"\n\n\"Because, Miss Vola, Jacob is forever obsessed with his rituals. He toys with barriers, as you and I do, and I fear that Jacob will... No. I judge the man too harshly. But remain vigilant of the possibility, Vola.\"\n\n\"I will.\" The idea of Jacob going from his usual, strange, unpredictable but still-a-friend self, to a genuine enemy, was terrifying, far more terrifying than the hunters, or the werewolves, or Azamel.\n\nAntoinette leaned in then, and offered Natasha a rather predatory grin. \"And do not think I do not know, that you know I sent you a text earlier today, Vola, one that you ignored. Knowing you, you either had your phone off to help hide your presence and not annoy others, or more likely, you were out with your boyfriends, on an... adventure. Perhaps you were out, learning of the Hisil?\"\n\nNatasha froze, gulped, and nodded. Better to not say anything, and put her foot in her mouth.\n\nThe Prince chuckled. \"You are free to be adventurous with your desire to learn of spirits and of Uratha. As long as you are careful, as I trust you to be, and to share with your teacher valuable information.\" Natasha nodded vigorously. \"Good. I summoned you here to familiarize yourself with these items before sunrise, as you can imagine. But also, your priorities have changed with the defeat of the hunters.\"\n\n\"Oh, r-right. If Jack's taken them down, then I d-don't need to be hunting for them anymore.\" If she hadn't been in the Hisil tonight, she would have gotten Jack's call, or following text. She would have come. Maybe it was a good thing she didn't?\n\n\"I wished for you to explore ways to defeat Begotten. For now, consider such an activity as your lowest priority. Azamel and S\u00e1ndor can be... trusted, to an extent. I wish for you to continue learning of spirits and the werewolves, though that is to be your second priority. Your primary task, young Mekhet, will be to discover whatever it is that haunts my city.\"\n\n\"Haunts?\"\n\nAntoinette leaned back, and adopted her serious face, like steel. \"Surely you have noticed it. Something lurks within the shadows. It watches. It affects in ways I have yet to determine.\"\n\n\"Black Blood? Or... Maria?\" The thought of her old boss being up to something so nasty that Antoinette considered it to be a 'thing' haunting her city, was not a comforting thought. At least with Black Blood, it was practically expected.\n\n\"I do not know, Miss Vola.\" She shrugged. That was scary, Antoinette shrugging. To see the elder straight up admit to not knowing something was always startling. \"Perhaps. The Begotten have noticed the presence of something, and Jack is aware of it. I imagine several of his interactions with the Begotten brought this strange presence to light. It creeps and crawls, just at the edge of my awareness, Vola. I have learned more of its presence through things not seen, rather than seen. The spirits we summon have mentioned something that scars the land, and cuts holes through the Gauntlet, but know not what. I cannot help but--\"\n\n\"Um... I m-may have an idea.\"\n\nThe Prince raised an eyebrow, her steel expression shattering for one of intrigue. \"Oh?\"\n\n\"Y-Yes. I d-d-don't know if it's connected, but... when I was in the Hisil, with Avery, a little while ago, one of the spirits, and David, they... they umm... said that the strange spider monster, the Azlu, it didn't come naturally. Something... d-drew it here.\"\n\nThe Prince froze for a moment, and her eyes slowly, slightly squinted at Natasha, like she was lining her up as a target. \"And you wait until now to share this with me?\"\n\nNatasha felt her whole body suddenly encapsulate in ice. Antoinette almost never looked at her that way, that angry way, with cold fury flowing out of her. Fix it fix it fix it!\n\n\"I-I'm sorry! I had planned to, in a more... d-d-detailed report.\" It hadn't been long since that first trip into the Hisil, and she'd been a little more concerned with the hunters. Yeah, the hunters! \"The hunters were t-taking p-p-priority! And... I... didn't think it was important.\"\n\nAntoinette's fury always came in two forms: fire, and ice. Fire came and went predictably, and Antoinette was better at controlling it than most. Ice, on the other hand, made Natasha feel like she was staring into the eyes of an alien intelligence, something with a mind greater than hers, something that looked at her with disdain like how a human might look at an ant that'd had the nerve to get on their food. It was the sort of anger only someone who'd had decades of experience being a leader could truly wield.\n\nBut, Antoinette sighed, and the ice melted away. \"I apologize, my student. I have not truly involved you in this hunt for the mysterious force. I should not expect you to make connections regarding it.\"\n\n\"I should have m-mentioned it, though.\"\n\n\"Perhaps, but I am sure you would have eventually, as you did.\" Leaning back, Antoinette looked up at the ceiling far above them, and combed her hair over her right shoulder down onto her chest. \"So the Uratha have also had their attention drawn to something unusual within the city.\"\n\n\"Y-Yes. One of the spirits... um, Street-Tail King, it said it would give them information about the Azlu, if they promised to... p-pursue the mystery, to its end, and deal with it for Street-Tail. It was... afraid.\"\n\n\"Pursue the mystery to its end. That does sound undoubtedly linked, does it not?\"\n\n\"It d-does.\"\n\nAntoinette shook her head as she looked at the table, and Natasha could only guess at the million thoughts running through her head.\n\n\"There is a connection we are not seeing, my student. The hunters have been a distraction, and I fear the Carthians and Terra Den will continue this trend of distractions. You will be my eyes and ears, Natasha, in a way my sheriff cannot. Continue to learn of the Uratha and the spirits. And make more of an effort to befriend the Begotten. And, if possible, learn more of Black Blood.\"\n\n\"B-B-B-Black...\" Oh god.\n\n\"Tread lightly, my student. Black Blood does not care for my presence, and undoubtedly knows you serve the Ordo as well. Should an interaction occur, it should only be because an Uratha acted as catalyst. You are not to broach the spirit on your own. Understood?\"\n\n\"Yes ma'am!\" Her boss didn't need to tell her twice. Black Blood was legitimately the scariest thing she'd ever seen. Scarier than a psycho Lucas. Scarier than a spider monster. Scarier than any of the Begotten, and she'd seen three of their Horrors by now.\n\n\"On a far more enjoyable note, I am hosting a ball in several days, Miss Vola, in celebration of the defeat of the hunters. Everyone is invited.\"\n\nOoh, a ball, another opportunity for Tash to feel awkward and out of place. Yaay.\n\n\"Everyone?\"\n\n\"Indeed. Tensions run high between the Invictus and Carthians. With the hunters defeated, it will be far safer to host a gathering, and it presents me an opportunity. I would like to announce victory officially, and to insure those who achieved it are known, the witches in particular. All four were there.\"\n\n\"Oh, r-right. Aaron, Othello, Jennifer, and Beatrice. If... if you m-make it known that they helped defeat the hunters...\"\n\n\"Then the city will appreciate their presence, and it will help sooth tensions with them. I will do the same for Clara, if she agrees. It would help with soothing tensions with the Carthians; they like the werewolves.\" Sighing, a painful and weary sigh, she looked at the waves of hair she combed with her fingers. \"I am not sure whether to invite the Begotten though, or at least, I am not sure what to do of Athalia. She acted against Jack, indirectly, but against him nonetheless, in a futile effort to save her daughter.\"\n\nThat was a dilemma. If Antoinette was trying to host a 'all paranormals invited' ball, not inviting one would a pretty big statement. Bad politics. It'd put a red flag over Athalia's head, and would insult the Begotten as a whole, probably.\n\n\"M-Maybe... ask Samantha?\"\n\n\"Ah, that is an interesting proposal, my student. Of all that would disagree with Athalia's presence, Samantha is the most truly damaged by the Begotten's daughter, even more so than Beatrice.\" With a satisfied nod, she smiled. \"And, I would like to warn you of Elaine. She will be there.\"\n\n\"You're old friend, right. B-But, warn me?\"\n\n\"Oui. Elaine is a Ventrue of the Ordo Dracul, as you know, and as old as I. She is... dangerous, Natasha, and while she is a close friend of mine, I am not so oblivious as to think this visit of hers is purely coincidental. She is up to something, my student. Keep your eyes open.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\n\"What?!\" Maria and Michael said, together. There was a considerable amount of venom in their words, and plenty of surprise, enough that Damien wasn't sure how to continue. He looked to Jessy beside him, but she was staring at him in a similar manner.\n\nThey were in the Xnomina headquarters, in the top floor for an impromptu meeting at Jack's request, with very little time left before sunrise. Considering the circumstances, the two elders had known it'd be a serious meeting before they arrived, but Jack shocked them both.\n\n\"The hunters are defeated,\" Damien said again. Maybe it wasn't a good idea that he opened this conversation, Longinus help him. Damien had decided to, but it was clear that as Damien tried to direct their focus to him, they were quickly catching on that this night was Jack's, good and bad.\n\nPart of him felt relieved. He was tired, hungry, and sore. He needed sleep, and the sun would be up soon. Let Jack deal with the two elders.\n\nJack looked down, rubbed his head a couple times, and took a deep breath. And so began the tale of how a rather outgoing and dull-witted hunter named Brace Harcourt came to them with a proposal. Jack told them of the help the Circle of the Crone provided, that Fiona and Athalia helped, and how he used the power of the curse to blitzkrieg the hunters. Conveniently, he left out how the curse had its own personality, and relished in the chaos it'd created. He told them about the nightmare, about S\u00e1ndor, and how Damien freed him. He told them about Azamel, and how Jeremiah nearly killed her. He told them about how Antoinette now had the three hunters as prisoners, how Elen was still alive, and that Jacob likely had her.",
        "That sent a shiver up Damien's spine. Elen was still alive. And it wasn't Antoinette who'd got her, Jacob had. Knowing that psychopath had a flesh witch to torture secrets out of, was not a pleasing thought.\n\nJack didn't mention Clara. And he didn't mention how Athalia hadn't helped them like she was supposed to. Damien noted these. Last thing they needed right now was holes in their story. Jack wanted to protect Clara, and he wanted to protect Athalia. If Athalia had truly betrayed them in an effort to save her daughter, Damien was surprised he felt that way. But, he didn't know the details of what happened at the end, and judging by the somber look on Jack's face, and everyone else when he'd woken up in the nightmare for that matter, it hadn't been good.\n\n\"Let me get this straight,\" Michael said, sitting back against the office table edge as he folded his arms across his chest. \"You did not contact either me or Madam Turio. You did not even contact the Prince, someone you have sway with, Mister Terry. You did not contact the Invictus at large for aid either. Instead, you decided to trust witches, and this curse that you still do not fully understand.\" His voice rose until it was booming. He didn't yell, but he came close, and Damien found it growing more and more difficult to hold still.\n\n\"Yes, Mister McDonald,\" Jack said. \"I had no time. Harcourt's offer was legitimate, and the time frame small.\" Sighing, Jack looked to his boss, and met the man's gaze in a way Damien never would. \"And I knew this curse was strong enough to deal with them.\"\n\nDamien winced, and finally looked down. Yeah, it was strong enough to deal with the hunters, and S\u00e1ndor, and maybe both at the same time. If, instead of fighting inside alien and unusual places, the fight had been in Dolareido itself, he bet Jack would have had an even easier time beating them. A vampire, in a city, with walls and shadows and nigh infinite creatures to summon, was a far more dangerous creature than one in a strange place, like a fish out of water.\n\n\"And where were you during all this,\" Michael said to his childe.\n\nJessy stood up straight, ripped out of her shocked expression that'd been locked on Jack for some time. \"Uh, I was out with some of the werewolves, and Natasha... sire.\"\n\nAnd if Jessy didn't join them, that meant whatever it was she was up to with the werewolves, had prevented her involvement. Considering how important dealing with the hunters was, that put a sign over her head saying she was doing some shit with the werewolves that was either a big deal, or involved the Shadow realm. Either way, it was clear Jessy hadn't told Michael about it, and her sire growled as he glared at her.\n\nThroughout all this, Maria watched, and glared as well. Michael was content to wear his rage on his surface, but Maria kept it buried, only leaking out through her eyes.\n\n\"The hunters are defeated,\" Maria said at last, standing up from her seat at the huge table. \"I am sure you realized as you launched this assault, that Mister McDonald would not approve, Mister Terry.\"\n\nThe boy nodded. \"I did, Madam Turio. But there was no way I could convince you that this curse was strong enough to succeed, except victory.\" His voice rose as well, a little louder than Damien thought smart. \"I had to make a decision, where only I could be fully aware of the elements involved. I knew I could do that, that the curse could do it, and we did.\"\n\nThe two elders aimed their stabbing eyes at the boy, but Jack did not back down. Jessy and Damien both inched themselves away from him, just a little, afraid he might spontaneously combust under the power of their glares.\n\nBut, after a few moments of painful silence, the two elders looked to each other, and sighed.\n\n\"You speak truly, Mister Terry,\" Maria said. Damien sighed as he felt the tension melt out of him. \"While your actions were extreme, it is true that these are unusual circumstances. The Circle and the Ordo acquiring new toys to fuel their experiments does not bring me joy, but knowing that the majority of the hunters have been defeated, does.\"\n\nMichael nodded. \"This is a great thorn out of our side. As much as I'd like to be angry with you, Mister Terry, you've beaten an enemy, and secured your own revenge. Now, we can focus on the Carthians, and their infuriating need to disturb the balance.\"\n\nMichael went on, talking about the politics of Dolareido, how the Carthians were pushing against the Invictus, using Terra Den to fight Xnomina, and how Garry Tones was a loose cannon. Maria, on the other hand, was happy to let the man rant as she looked at Damien. The knowing glance traded between them was plenty. She did not like what she'd heard about the curse, and was reminding Damien that it was his responsibility to deal with Jack, if it came to that.\n\nAfter tonight, it didn't seem like a such a ridiculous notion, that he might have to kill Jack. He prayed he wouldn't have to, but unless he found a way to reseal the curse, the possibility of Damien having to do something was very real, and sickening.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Can't believe it,\" Jessy said as she stepped onto the elevator. \"You fucking killed them all?\"\n\nSighing, Jack shook his head. \"No. Like I said, Elen killed most of them.\"\n\n\"But, you would have killed most of them, if she hadn't done it for you, right? Hell, you had them on the run.\"\n\n\"I did... it did.\" The boy shuddered and shook his head again. \"It was nasty, Jessy. Not like, a great war story I want to share, ok?\"\n\n\"But, you won! Julias is--\"\n\n\"Yeah, I know. And I get it. But later, ok?\"\n\nShe put her hands up in surrender. \"Sure, sure. But, I mean, you must be a little happy, right? Angela's dead! Jeremiah's dead. Christ, you got em!\" Laughing, she clapped the man on the shoulder. \"Julias avenged! No more sweeps every fucking night. No more worrying about that fucker blowing us up during the day. Parties are back on the menu?\"\n\nAs much as Damien was trying to appreciate Jack's rather sober and serious attitude, Jessy got Damien smiling. Him, and a moment later, Jack as well. Perhaps the man wasn't as depressed as he seemed. Jessy was right, after all. They'd won.\n\n\"Yes, parties are back on the menu, you fucking dumbass,\" Jack said, throwing his hands up not unlike Jessy had moments ago. \"The Prince is going to be hosting a party soon. Or, you know, ball.\"\n\n\"Ooh, like the last one? I got this new dress that--\"\n\n\"Not like the last one. Well, maybe a bit? My mom's going to be there, and this will be the first, real social thing she's gone to since her embrace, except for a couple trips to Bloodlust for drink. So, you know, lay off fingering and blowing the kine that come?\"\n\n\"Agreed,\" Damien said. Social gatherings, parties, balls, they weren't things he enjoyed, and seeing kine being stripped, Kissed, and sexually pleasured, only made said things more difficult for him. Now that he had a girlfriend, maybe it'd be different? Fiona would be there, and being that she wasn't a vampire, she couldn't simply turn off her body's desires. It'd be a night of her trying to get into his pants, because everything around her would be lighting her blood on fire.\n\nIn retrospect, maybe it wouldn't be so bad?\n\n\"Well, I won't be enjoying myself that way, anyway. Eric doesn't seem interested in getting more legs in the bed.\"\n\nDamien shrugged. \"Perhaps he's happy with your relationship, sexually speaking? Not all relationships need to include wanton sex orgies.\"\n\n\"Of course he's happy, I'm fucking awesome. And I'm damn happy with Eric, too. But I keep thinking, man it'd be hot to have some more legs in this bed. Like, I'm thinking he'll really love it, too. He's a guy, right? What guy doesn't want two, or three, or five sets of lips sucking on his cock?\"\n\nRolling his eyes, Damien gestured to Jack. \"Does having more legs in your bed make your nights with the Prince more enjoyable?\"\n\nThe kid shook his head, without hesitation either. \"Honestly? No. I mean, I enjoy Ashley and Julee's company, and I enjoy that Antoinette enjoys their company. The sex isn't better with them there, but it certainly is different.\" He tapped his chin then, and Damien and Jessy waited for his growing thought. \"It can actually kinda ruin the romance sometimes, you know? Antoinette loves her ghouls, but it's not romantic love, and when she and I want to be romantic, it can be a little hard to do that with them around.\"\n\nThat got Jessy thinking. \"Romance, right. I... I guess I don't do the romance thing very well. Never been in a real relationship, you know? Not good at this whole 'hey I like you, we should be friends and fuck, but also emotionally support each other' thing.\"\n\nJack laughed. \"Eric's divorced, right? He's probably got a bunch of triggers you're setting off, warning him that you're not taking the relationship seriously when you propose having more people in bed.\"\n\n\"I am taking it seriously!\" Like a child throwing a tantrum, she stomped around the elevator as it continued its descent. \"Like, really seriously; by my standards at least. I don't normally let myself get all... mushy, you know? But I do with Eric.\"\n\nNodding, Jack leaned back against the wall of the elevator. It was a long way down, and they had a little bit to talk. \"I'm sure if you keep trying, you'll have more legs in your bed eventually. But in the meantime, I'd suggest dialing down on the orgy pushing a bit, and dial up the romantic lovey dovey stuff.\"\n\n\"Bleh. Bleh!\"\n\nJack and Damien laughed, and Damien leaned back against the elevator wall next to his friend. He said nothing though, this particular topic well outside his expertise. Better to let his friend talk, and he could absorb and learn. Jack didn't seem like the sort of guy to be well versed in social romance constructs, but then again, he was very smart, and had Antoinette for a lover.\n\n\"You were out with him tonight?\" Jack said.\n\n\"Yeah, with Tash, visiting the Shadow realm. Scary shit! Those spirit things are fucking weird. Some of them look like they came out of a Dr. Seuss story. Some of them look like they came out of a nightmare. And now that we've all literally been inside nightmares, I can say that with authority.\"\n\n\"Learn anything useful?\" Damien said.\n\n\"Nah, just that the werewolves have a spirit, Flowing Sanctuary, and she won't let us stir up trouble. Black Blood wasn't around either, but if Jacob has Elen, then I'm guessing that's why.\"\n\nBefore Damien could ask what sort of trouble the damn Gangrel was attempting to cause, the elevator door opened. Fiona jumped in place at the door, several times, wearing her usual leather jacket and jeans, and helped Damien out of the elevator. Much as he'd been holding up well for the last minute meeting, truth was he desperately needed to lie down and sleep. He insides ached, and Clara hadn't given him enough blood to fully recover; even if she had, he still needed sleep to use it.\n\n\"Fiona,\" Jessy said, \"ball happening in a few days. Gonna celebrate! The boys here are suggesting we vamps tone it down, you know, sexually speaking, compared to last time.\"\n\n\"Well fuck that! Ye want to celebrate, right? I say, more sex than last time!\"\n\nDamien, who'd just finished hooking his right arm over Fiona's shoulders, facepalmed with his left. Of course Fiona would agree with Jessy. She'd have agreed to skydiving without a parachute, if someone suggested it, especially Jessy. Those two were not good for each other.\n\n\"Please don't,\" Jack said. \"My mom's gonna be there, and she's not exactly, uh... a slut, like the two of you?\"\n\nDamien winced, expecting a backlash. But Fiona and Jessy laughed, shrugged, and stuck their tongues out at him. At the same time. Had they been hanging out together?\n\n\"Only one man in my life, ye wankstain.\" Rolling her eyes, she leaned in and put a kiss on Damien's cheek. \"Now, I'm gonna take that man home, and take care of him.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThey went to his apartment. The sun would be up very soon, maybe twenty minutes, and there wasn't time for a visit to her place to drop her off. His apartment was a typical expensive apartment, except that he hadn't decorated it, at all. Nothing but cold steel colors, with plenty of blacks, including blackout curtains. While he'd slept here before, he'd mostly slept in Maria's den, with the rising threat of the hunters.\n\nNow, with the hunters shattered, no leaders, no special flesh chamber to hide within, the chances of them attacking was minuscule; attacking his apartment building specifically, beyond minuscule. And with the reinforced walls, extra locks on the door, blackout curtains, and bedroom with no windows, the chances of someone or some sunlight managing to reach him while he slept was extremely low.\n\nDolareido had been built from the ground up to house vampires after all. Only the elders slept in places more secure, and perhaps the witches and their cave.\n\n\"Victory!\" Fiona said, and she giggled openly as she set him on his bed. Black sheets, black pillow cases, white walls. His girlfriend couldn't help but laugh when she looked around, shrugged, and sat on the bed with him. \"The hunters are gone!\"\n\n\"Not completely gone.\"\n\n\"Na, but close!\" Nodding like she understood the world and its secrets, she started to undress him.\n\n\"You don't have to--\"\n\n\"I want to. I was so worried! Ye coulda died, and I wouldnae 'ave been there! Athalia, she... she tricked me, and--\"\n\nHe shook his head, and set a hand on her shoulder. \"I don't know what happened exactly. Do you know the details? Of what happened between Jack and Athalia, at the end, with Angela.\"\n\n\"Na.\" Sighing with a big, heavy sound, she turned to face him, and flomped on him. Flomped, like a big dog not aware of its own size. He was flattened to his bed, and he groaned as the impact of her body awakened his wounds. \"Fuck! Sorry. I'm such a dobber.\"\n\nHe smiled, and hugged her as she cuddled into his chest. Sunrise was coming, and they didn't have much time for anything. He doubted either of them would really be in the mood for sex anyway, not after tonight. Even monsters could only look so much death in the eye before it made them sick.\n\n\"Athalia...\"\n\n\"What?\" he said.\n\n\"Athalia, she'll be... sad. She talked about her daughter, ye ken? Blethered on about her, about how... how much it was her fault, that Angela turned out like she did.\"\n\n\"Everyone's responsible for their own actions.\"\n\n\"Aye, but it's nae the same! Athalia's Horror couldnae help it, and it... it really hurt Angela, ye ken? She grew up with nightmares, all the time. And Athalia, she was so... so...\" Sniffling, Fiona nuzzled her face into Damien's neck, and sighed louder, straight into the side of his throat. The warmth of her breath was pleasant. \"I'll talk to her, but I know she'll be so sad!\"\n\n\"Sad enough... that she'll want revenge?\"\n\nFiona shrugged into his body, and kissed his neck once before growing still again. \"I dinnae think so, but... I dinnae know. She'll be...\" Sad. Fiona couldn't find a better word for it. It was a sadness Damien knew he'd never be able to appreciate it, but he didn't need to. For the moment, his concern was whether Athalia would be a problem, and if it was a good idea to leave her alive.\n\nHe could kill her, he knew he could. He wasn't Daniel, but that didn't mean he couldn't sneak up on Athalia and end her, or snipe her from a distance. All these events had been driving him to be better, faster, sneakier, and with Daniel to train him, he knew he'd be good enough to kill the monster if he caught her in the physical world.\n\nGood Lord. It was frustrating that he kept framing his problems with 'could I kill this person?' First Jack, now Athalia. Who next?\n\nHe kissed Fiona's hair, wrinkled his nose as the frizzy mane tickled his face, and hugged her. \"Can you get home from here? Or should I--\"\n\n\"Aye, I can, easy. Ye rest. I'll burrow home from under yer bed, once ye're down.\"\n\nHe laughed at that. It was a sound he didn't make often, but a lot more when she was around. He was dating a monster that came from under the bed, literally.\n\n\"Can you get into places the same way?\"\n\n\"Kinda. Getting back to my lair is nae the same as opening a door. If I've been there before, I can burrow there, if there's some darkness around. But I cannae take others that way. I need to open a door for that, and that would need a lot of similarities between a place in my lair, and where I'm opening up to.\" She kissed his neck again, and nuzzled in close, as if she was going to sleep. Maybe she was?\n\nHe was lowering his guard down quite a bit, having someone else in his bedroom while he let sunrise come. Vampire instinct told him he should go find somewhere safer to sleep, somewhere where people didn't know his location, or at least do it alone. But, he trusted Fiona, far more than he figured he'd ever trust another. She was too damn sweet to do anything to betray him.\n\nAnd, there was a painful reality he and the other Kindred had trouble accepting: Begotten could get almost anywhere, go almost anywhere, as long as they'd been there once before. They were the Houdinis of the paranormal world, evidently, and if you were unlucky enough to get pulled into their lair, they were insanely powerful.\n\nOne of those inescapable monsters, someone that could get you from under your own damn bed, now hated Jack and Beatrice. Jack with his curse could take her in a straight fight, sure, but Athalia didn't have to play nice. She could strike out from the shadows in a way that'd make any Nos or Mekhet jealous. No wonder Antoinette wasn't happy they were in her city.\n\nWell, Damien was happy they were, or at least, happy Fiona had come. As sunrise came, and he let Kindred instinct pull him down into the deep slumber of his daily coma, he indulged in the sensation of Fiona's body on him.\n\nThey'd won. No more hunters, mostly. They could take a moment to relax, and worry about other problems now, problems that seemed less liable to blow up buildings in a reckless attack. But, for the second life of him, he could not completely relax. Something or someone was out there, creeping around in Dolareido, sneaking, cutting holes and creating portals, according to Fiona. As much as Damien knew he'd have to deal with the Carthians, and potentially Jack, and maybe even Maria or Jacob, as least they were known quantities. Knowing something else was out there, maybe harmless, maybe not, was itching at the Mekhet half of him.\n\nHe had to learn more.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nThe next night, she awoke, and without a word, began to fuck her little Ventrue. First for his pleasure, and then for hers.\n\nAntoinette relaxed into the mountain of pillows against her back, bed beneath her, and grinned at the boy between her legs. With her ass on her blankets, her knees were raised, and thighs hooked over Jack's shoulders. His mouth was wrapped around her sex, completely, and his tongue lapped and massaged her clitoris. His weight was on his elbows, left hand hooked around her leg to rest on her stomach, while his right hand stretched her open with several fingers, and pressed up against her g-spot.\n\nOh, how she had taught her little Ventrue well. After burying her clitoris in rough, almost frantic licking for several seconds, and nearly bringing her toward her second orgasm, he slowed down. He switched to a gentle suckle, drawing her lips with his own, before doing the same for her clitoris. No longer did her lover dedicate his efforts simply to making her orgasm. As his skills had developed, he had long learned how to insure each orgasm was teased out of her, so each was powerful once it finally arrived. He had learned to trust his skills, trust in her arousal, and build the pleasure.\n\nShe smiled down at the buzzed head between her milky white thighs, and offered him a small moan. She did not need to moan of course, despite the coursing bliss she felt sparking outward from her swollen clitoris and aching depths, but the sound not only elicited joy from her lover, it also added to the art of the experience. Her moans were, after all, honed, and masterful.",
        "With a slow, teasing motion of her own, she ran her right hand down from her shoulder to her right breast, and trailed through the cum that coated her. Once her fingers reached her nipple, she teased her middle finger around and around her swollen, pink areola, where it jutted out from her large bosom. Instant sparks, tiny jolts of electric pleasure that danced from her large nipple, into her chest, and down to her core.\n\nIt was the combination of the gentle, playful friction of fingertips along the engorged skin, combined with the pleasing heat and wetness of her lover's cum, that sparked the greatest pleasure from touching her breasts. In truth, she craved it. Massaging her lover's seed into her skin, and drawing pleasure from her breasts and swollen nipples as she did, had become a regular aspect of their love making. All the better to masturbate with her breasts, as her man licked her sex and fingered her insides.\n\nAs she watched the boy between her thighs, she smiled. Jack had proven capable of suppressing the curse twice now, and that settled many of her concerns. It was still a great threat, but after last night, she no longer let it scratch at her thoughts all hours of the night. Jack not only had some degree of control over it, but the curse proved that it desired as other Kindred desired. Perhaps it would become another Viktor, or Tony, or Lucas, and she would be forced to deal with it and its rising ambitions. For now, it had climbed down her list of concerns considerably.\n\n\"Jack, my love,\" she said, talking smoothly, despite the rising pleasure dancing along her thighs, down into her toes. \"I have been thinking of Elaine, as of late.\" Her climax was fast approaching, and she licked her lips slowly, putting on a display for her watching Ventrue. When her words stirred his eyes to open wide, she gently squeezed the whole of her right breast with her right hand, causing his cum to trickle out from between her fingers as she eased her cupping grip down her breasts, before her hand slipped underneath the heavy weight.\n\n\"Ou hav?\" he said, words muffled.\n\nShe laughed. He knew better than to stop kissing her, unless she requested it, and she had not. But, just to remind him, she squeezed his head and neck with her large, curvy, hard thighs, and the boy's eyes went wide again for a single moment, before he resumed his suckling and licking with emphasis. Laughing once again, she released his skull from the death trap of her thick legs, and resumed teasing her breast.\n\n\"I have indeed. I cannot help but wonder what she will do, to attempt to draw you from my embrace. I trust her to not perform Disciplines upon you, especially now, considering your condition. And even if you did not carry the curse, she would not resort to such tactics, as you are mine. No, I expect Elaine to attempt to--\" Jack started to finger her faster, and her breathing stopped for a moment. Perhaps he was annoyed with her, for teasing him so? His hand hooked about her hip pressed on her pelvis, a couple inches past her sex, and his other hand drove three fingers up toward it in a rapid pulse. Her engorged g-spot lay between the two hands, and the assault sent pleasure washing over her like a tidal wave.\n\nShe closed her eyes for a moment, and released a single, precisely arranged moan, with a beautiful pitch and perfect volume, as her insides clenched. The boy ceased licking and suckling, and kept his tongue flat to her clitoris, holding still and letting the bliss spread as he continued to finger her slit. She arched her back slightly, jutting her breasts outward, and while she was making an obvious effort to show off for him, to put her body on display and let her lover drink in the sight of her beauty, it was also true that orgasm was coursing up and down through her. The delightful sparks erupted outward from her sex, earning drops of her juices onto the boy's face and fingers, as the bliss flowed down to her toes, and back up to her chest. She drew the pleasure further, massaging her breasts and teasing her soaked, swollen nipples. With his fingers pressing up against her depths again and again, as she teased her aching areola, massaging his cum into them, she had little trouble milking the pleasure to its fullest.\n\n\"I expect her to attempt to seduce more directly,\" she said, voice a touch softer, and a touch higher. Her climax was only just beginning to fade, after all, and even one as skilled as her could not keep her voice perfectly level, as orgasm aftershocks rippled outward from her between her legs. \"She is Ventrue, after all, and does not do subtlety well.\" Better than a Gangrel, of course, but that meant little.\n\nShe relaxed her thighs, releasing them from Jack's head, and the boy lifted it. He kept his fingers inside her though, gently pushing up on her depths, in a similar rhythm to her milking grip on her breasts. Oh yes, she had taught him well. To milk the final sparks of climax was vital, after all.\n\n\"And, um, you're just going to let her?\"\n\n\"Oui.\" With a small grin she knew her lover recognized, she leaned down for him, kissed him on the forehead, and slipped off the bed. Her legs and breast still tingled with orgasm aftershocks, but alas, she had several emergency meetings to arrange, after all, and could not wait much longer. \"I look forward to seeing her fail. And, truthfully, I look forward to watching you squirm as Elaine makes Jennifer seem quaint.\" Both were terribly attractive Ventrue, and in typical Daeva fashion, perfectly content using their beauty to persuade and manipulate. Unlike Daeva, they did not care to guard themselves with pretense, or disguise their manipulations in any way.\n\n\"You really like watching me squirm, don't you?\"\n\n\"Oui. Call it a guilty pleasure, my love, and punishment, for your rashness last night.\"\n\n\"A guilty pleasure.\" Her lover frowned at her, but it was a weak frown, melting within moments as she grinned at him through the corner of her eye. \"I'm never going to be as comfortable with all this sex stuff as you, am I?\"\n\n\"Nonsense. With another century or two under your belt, I am sure you will be freed of all sexual... hangups, as people refer to them in present times.\" As she started touching up her makeup, Jack stepped behind her, and started combing her hair. The both of them were nude, and yet the boy no longer stared at her in unending awe; one of his barriers already shattered. Jack probably did not realize that, were he still human, he would now be comfortable on a nude beach. Mostly.\n\n\"I dunno. I don't think it's fair to really call it a hangup that some people just kinda prefer to be private about their sex lives.\"\n\n\"Oh?\"\n\n\"Yeah. For a lot of people, privacy kinda increases the intimacy, you know?\"\n\n\"Perhaps.\" It did not take long to finish; she had been perfecting her beauty for centuries. She smiled at her lover through the mirror, analyzing his expression. \"I do not believe it is the literal act of sex where such intimacy is found, my love. I believe proximity is merely the bridge that allows two to connect their emotions, and that that bridge can be built in many ways.\" Chuckling, she turned around again, and set her hands on the boy's shoulders. Now, he was no longer able to hold his composure, and his gaze fell to her breasts several times before finally stabilizing on her eyes. \"I could love you with all my soul, you damned fool, even with ten pairs of legs wrapped around you, and a thousand eyes watching. As long as your hunger, lust, and emotions were centered on me, and mine upon you, that bridge would form without issue.\"\n\nJack returned her smile, nodding. \"I guess if I get as old as you, I'll be more comfortable with intimacy, or, I mean... well, you know.\"\n\n\"Oui. You will learn to not attach simple, physical touch, as the guiding force of romance.\" She tapped her chin at that, before she walked over to her wardrobe, and began to dress. \"I would be remiss to not mention gender differences. Men, even elder male Kindred, are perhaps a little more limited to opening themselves so.\"\n\n\"Ha, maybe. But then, what about Natasha? Her relationship is pretty unique. I keep expecting to hear that Matt and Art have started fighting over her, and she has to choose. Typical girly paranormal romance trash, right? Instead, all I hear is that they both seem to like her a lot, and are good friends.\"\n\n\"Indeed. I did not expect her relationship to survive as long as it has, before devolving into something juvenile. I underestimated the emotional maturity of Matthew and Arturo.\" As she slipped on her bra, a black and uplifting thing, she turned to face Jack, so he could watch. He enjoyed watching her, and she enjoyed having his eyes on her. \"Our relationship is simpler. We love each other, my love, and others who wish to partake of the sexual energy we create are welcome to do so.\"\n\n\"Are they?\" he said, eyes locked firmly onto her body. \"I believe you once said you didn't want other Kindred in our bed.\"\n\n\"That I did. Kindred are selfish creatures, that wish to acquire and control all they can. I said I would share our sexual energy, not release to another.\" She paused in front of the mirror for a moment, considering. \"The relationship that has developed between Beatrice and Jennifer has also surprised me, though that is mostly a question of Jennifer, and her bizarre tastes.\" Grinning, Antoinette slipped into her business skirt, and made sure to display her curvy derriere in its full glory for her lover. \"The only Kindred I would trust to respect our relationship, if they joined us, is Elaine.\" The boy sat up straight again, and she slowly licked a fang as she drank in his reaction. Shock, surprise, wonder. \"Does that idea interest you, my love?\"\n\n\"I uh, I mean, the last thing I want is to do something you don't want to do, Antoinette. And, I mean, I'm already having sex with three women on a regular basis because of you. I'm the luckiest guy on the planet! Last thing I need is even more... you know, women in bed.\"\n\n\"But?\" She sensed a but, and she again smiled at the man as she slipped on her white shirt.\n\n\"But, um... I gotta admit, I am a guy. There's something alluring about, you know, having more women in bed. Kinda appeals to some lizard brain part of me, I guess? Gotta build my harem.\" He shrugged at that, as if admitting to tomfoolery. All she could do was laugh at his delicious self awareness.\"I do kinda like all these experiences you keep putting me through, too. Most of them kinda shock me at the time, and my reflex is to say no, but you put me through them anyway, and I end up kinda loving it.\"\n\nOne of the many reasons she loved her little Ventrue. Not only did he agree to do the things she borderline forced upon him, he was always happier for the experience.\n\n\"I am glad to have expanded your tastes, Jack.\"\n\n\"But, I don't know anything about this woman.\"\n\n\"Ah, of course.\" She came over, sat beside her still naked Ventrue, and set an arm behind him so she could rub his buzzed hair in that way he enjoyed. \"Elaine, a tall and curvy woman, not dissimilar to myself. Wavy blonde hair, and exquisitely large breasts, almost as large as mine.\" Naturally, a comment about breasts was enough to grab Jack's attention, and she laughed as she stroked his buzzed head a little harder. It was a delightful sensation, the feel of such short hair fighting against her fingers, almost prickly.\n\n\"I uh, I meant personality, and history. Like, what sort of... things, have you done with her?\"\n\nNodding, she leaned in close, and set her lips to her lover's ear. With slow, husky breaths, she slid her hand down from his head to his back, while her other reached out, slid down his stomach, and reached for his flaccid length. Her touch was signal enough for her surprised Jack to reignite his Blush, and she made one of her perfected, calculated moans for him. She Blushed as well, and licked her tongue along her teeth, preparing.\n\n\"Elaine has joined my bed enough times, that we have touched every inch of each other's body, my love. We have locked our legs together, and rubbed our slits against each other's until juices were literally dripping.\" The boy went rigid once again, as did his shaft in her grip. \"I have had a dozen kine paint our breasts in white, and we have rubbed our bodies against each other until the seed was spread and massaged into our skin. I have kissed away the cum of men, and the juices of women, from her breasts, as she has mine. I have held her close and delighted in the sensations of her climaxes, as she was fucked by several men, and women, at once.\"\n\n\"Good... god...\"\n\nLaughing, Antoinette pulled Jack up onto the center of the huge bed, light as a feather. She spread his legs, and the boy's body went limp as he submitted; his shaft did anything but.\n\n\"I would never invite another Kindred into our bed without your express permission, my love. It is a threshold, a border I would not cross lightly.\" She lowered herself down onto him, and set her lips to the already wetting head of his cock. Her story had elicited a strong reaction in him, as she knew it would. No doubt he was imagining himself now, painting her breasts with his seed, and watching her rub her body into another curvy woman's bosom. \"But, as I said, I trust Elaine, and we know each other well. Something tells me you would enjoy having me sit on your girth, while my friend caresses my body until I climax upon you?\"\n\n\"I really do wonder why\"--his own moan interrupted him, as she slipped her lips around his glans, and began to lick and suckle--\"why you enjoy having sex with me so much, with a history like that.\"\n\nWithout removing his cock from her mouth, she rolled her eyes, grinned her succubus grin, and sank her head down onto the naked man's length. Once every inch of his shaft was buried inside, with her leaning down over him between his legs, and Jack lying on his back, she reached out, pressed her hands down against his hard stomach, and bathed his length in bliss. She had done this hundred of times with her lover, and as the boy said, she had quite the history. It took four minutes to bring him the orgasm.\n\nJack, panting and shaking for the moment with the sheer brute force of the bliss she had forced upon him, managed to push his weight up onto his elbows, and gazed down at where her lips were still locked around the base of him. She knew how to milk him, how to best draw out the final sparks of pleasure, before she at last lifted her head. Swallowing was not necessary. He had cum down her throat, and within five or ten minutes, his seed would fade into nothing more than the faintest trace of dust.\n\nOnce she lifted her head, she offered him her succubus smile again as she pat him on the chest lightly. \"We have discussed this before.\"\n\n\"I know, I just--\"\n\n\"Jack, as one becomes well versed in any particular thing, skill, hobby, they go through phases. Excess and indulgence is one of those phases, but with time, it passes, and instead, the practitioner learns to enjoy quality over quantity.\" She stepped off the bed, found her work shoes, and slipped them off. \"The way your eyes sparkle as I bring pleasures to your door, entices me to no end, little Ventrue, in ways no orgy ever could.\"\n\nThe boy sat up, and scratched his head in that wonderful way, as he watched after her. \"I'm uh, glad you like them. I grew them myself.\"\n\nShe rolled her eyes at the hilariously poor attempt at humor, but chuckled nonetheless. \"And, I admit, your body delights me as well.\" Standing at the edge of the bed, she leaned over him. Her hands found his abs, and she traced the chiseled lines, the subtle indents at the bottom that hinted at the famous 'eight pack' she knew men -- and women -- craved. His pectorals were equally as defined, with small indentations that ran outside them, and his shoulders, and along his legs. He was a short man, small, but that simply made it easier for her to fit him in her embrace when she wished to.\n\n\"I grew that t--\"\n\nShe slapped his chest, hard, enough to earn a loud slap sound, and send the boy into groans of pain. Exaggerated groans, but groans nonetheless. He enjoyed playing her games. She loved that he did.\n\n\"As for Elaine, she has grown to appreciate more refined and specific tastes as well. No more does she bathe in the seed of two dozen men as a weekend treat.\" Nodding as she dug through her hazy memories, she cleaned the dust from several, and marveled at the sheer excess she and Elaine had once enjoyed. \"She once played the proverbial Jezebel, and danced the streets of England centuries ago, pretending to be a whore, and luring men into sexual situations that... damaged their lives, in a way. Once, she had a banker and the owner of an esteemed company fighting each other for her affection. First, with currency, then with fists.\" Antoinette could not help but laugh at the memory, and the joy of which Elaine told her of her manipulations. A Daeva would have delighted in the obsession of her adoring doters, but Elaine delighted in the skill of which she used to control them. \"Another reason to be careful with her, Jack. She does oh so enjoy to manipulate, as most Ventrue do.\"\n\n\"Whoring in England? Like, a prostitute?\" Jack sat up, and looked up with thought. Something had sparked a memory in him, and he dug through it, not unlike her. \"She, uh, does sound kind of dangerous.\"\n\n\"Indeed. Dangerous, but my oldest friend, save for Daniel. And she is a member of my order. We may trust her, mostly,\" she said. Again, the boy's eyes looked up, hunting for something in his own mind, but unable to find it. What was he searching for?"
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "paranormal romance",
        "vampire",
        "romance",
        "werewolf",
        "monster",
        "romantic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-07-ch-18"
}