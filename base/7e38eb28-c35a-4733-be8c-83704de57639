{
    "title": "The Twelve Vitali Ch. 28",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nLucca walked into his office just before six and was surprised to see Cat already there and waiting for him with coffee in her hand. He noticed the woman, who was obviously her personal security for the day, slip out of the office once he arrived and go to stand nearby where she could view the doorway to the office. He remembered her from during the week as Jones. Jetta Jones.\n\n\"Is that for me?\" he asked, amused and indicating the coffee in her hand.\n\n\"Sure, if you take it the same way I do,\" she said cheerily, despite the early morning. She was determined to make the best of today and begin making it up to Matteo for not showing how well she knew his brothers during their time in the Athenaeum. \"I did get you a vanilla latte though, which I thought you might prefer,\" she said, indicating the cup on his desk.\n\n\"Thank you,\" he said, not overly surprised that she had asked Matteo about what sort of coffee he liked.\n\n\"So, boss, what's on the agenda for today? Cat asked.\n\n\"Catch up on the backlog,\" Lucca said, sitting behind his desk and turning on his computer. \"We'll need to go out to the site in an hour or so. Is Matt in his office?\"\n\n\"No, he and Ricco were enjoying the role reversal this morning,\" she laughed softly, and tilted her head as he didn't smile but looked at his computer intently as if uncomfortable to be alone with her. \"I'm sure he wouldn't mind if you went upstairs if you need to talk to him,\" she said quietly, suddenly unsure of herself.\n\n\"It's fine, I can wait until he arrives,\" Lucca said, tapping on his keyboard as he answered emails that had come in overnight. Despite being at the gathering for the past two weeks, he hadn't stopped working, and there was little to catch up with. He was used to having to work while being mobile and supporting his family when they needed assistance. Between his fathers and siblings, it was rare to have a day where he could just concentrate on work. He glanced at her briefly and considered his day ahead. 'What was the agenda?' He asked himself. He usually just took each day as it came, remaining flexible and making sure everything ran smoothly. Matteo had a knack for finding the right people for the right job, and had surrounded himself by highly skilled, reliable and trustworthy people within his company, which made Lucca's job infinitely easier.\n\nHe hadn't expected to have Cat with him today, even after his bravado at requesting she come to pay the bet today. He had thought Matteo would pull rank and keep her away from the company and their work. The fact that he hadn't, and she hadn't asked him to, spoke volumes about her character. He looked at his schedule for the day and considered what he could move and what he needed to attend to.\n\nCat stood looking awkward as he worked and, at a loss of what to do, she finally took a chair in front of his desk and picked up her tablet to check her own emails and the schedule set up by Arturo to see if she was missing anything important that he would have to cancel. Sipping her coffee, she was content to work in comfortable silence with Lucca until he was ready to speak to her.\n\nIt finally sank into Lucca what Cat had been trying to prove in the Athenaeum. She really had gone out of her way to get to know them all and be part of this family, as they expected her to, but no one had truly gotten to know her outside of her relationship with his brothers. It hadn't occurred to him to find out from Matteo how she liked her coffee or where she might like to go for lunch today, yet she had shown up earlier than him with his favourite coffee and a smile.\n\nHe needed a girlfriend, and badly, before he let himself fall over the line of a simple passing crush on his brother's wife to obsession. Perhaps he could let her play matchmaker and check out the eligible women from the other tables and point him in the right direction. It couldn't hurt. She would be in prime position to find out about the women he would be expected to take an interest in as she began talking to the other mothers. He hadn't had a lot to do with the other tables as one of the younger members of the family and living with the stigma of being the son of a second wife. Not that his older siblings had ever treated him as such, but preferential treatment had always been for the older children of the family by his fathers.\n\nHe wasn't resentful; it was just the way it was. Just like all of the laws and traditions they adhered to, none of them was so awful that people openly rebelled or resented their parents. Well, for the most part, some of the women chose a different life, and that was reasonable, considering the expectations on them from an early age. He was glad his parents weren't as strict as some of the other parents of his friends he had gone to school with. He considered her again. She was frowning at the walls of his office.\n\n\"Did you request this artwork?\" she asked as their eyes met. \"Or did Vanessa install it for you?\"\n\n\"Vanessa,\" he said, looking up at the two paintings he barely even acknowledged as being there. \"Why?\" Lucca asked.\n\n\"I wouldn't have thought they suited you and your style,\" she admitted. \"They suit the office though, and I guess that's what she was aiming for; harmony in the space. Maybe I could look at the archive for you and find something that may be a bit more for you to personalise your office.\"\n\n\"I'm pretty busy, so, to tell you the truth, I don't really care what's on the walls,\" he shrugged.\n\n\"May I show you something?\" she asked.\n\n\"Sure,\" he agreed, and she stood, indicating that he should follow her.\n\n\"Sit at Matt's desk and lean back in the chair,\" she instructed as they walked into Matteo's office.\n\n\"He sees the things that motivate him to make his company better than others, to be more responsible environmentally and to create beauty in a world of concrete and steel,\" she said, watching him carefully before turning to look once again at the photos that adorned the walls in here. \"The first building he designed and created on his own terms, from breaking ground to beautiful landscaping, the pictures are all about him and his dreams. No matter what he built since then, it all started there, and the furniture was chosen to go with the art instead of art being hung to match the furnishings. This office is all about the man behind the desk. Does that make sense?\" she asked.\n\n\"Show me Ricco's office,\" he said, coming to his feet and walking with her to the next office. He could feel her reluctance as they entered the space and tilted his head at her as he took a seat behind Ricco's desk. Behind him, shelves of leather-bound books lined the walls, but on the walls in front of the desk he could see the paintings that his brother was possessive about to the point of escorting them to and from the Donati exhibition of Cat's work. \"What does Ricco see when he leans back and takes in the office?\" he asked as she came to stand beside him as she had in Matteo's office.\n\n\"Like Matteo's artwork, these paintings have emotional value to Ricco, memories tied up with the past,\" she said without going into detail.\n\n\"A wildflower meadow? It doesn't really seem like Ricco's style,\" Lucca said. \"It's pretty, and suits the d\u00e9cor in here, but it's not what I would have thought a corporate lawyer would have on his walls.\"\n\n\"That's because I am not a corporate lawyer, Jacobi is,\" Ricco said, walking into his office, surprised to find them there. He smiled as he approached Cat and kissed her. \"Is there a reason for this intrusion?\"\n\n\"Cat was explaining why my office sucks,\" Lucca shrugged. \n\n\"I never said that!\" Cat gaped at him, making him laugh.\n\n\"Tell me why these pictures mean so much to you? What do you see when you lean back in your chair and look at them every single day?\" Lucca asked.\n\n\"That meadow is where I fell in love with Cat for the first time,\" Ricco said honestly. \"Back when we dated, just after the court case.\"\n\n\"It's a real place?\" Lucca asked. \"Why not just use photos, like Matt's office?\"\n\n\"Cat created these when she worked for Vanessa, and I didn't want anyone else in my meadow,\" he explained. \"There are a series of them, the rest are in my office upstairs in the apartment, and probably are a better representation of why they are among my most valued possessions. I am, however, contemplating a small change, eventually, with some added photography,\" he said thoughtfully. \"Not immediately, just eventually. Probably before November,\" he nodded.\n\n\"Why November?\" Cat asked.\n\n\"Matt's birthday,\" Lucca guessed. \"I'd like to see the ones upstairs now,\" he grinned.\n\n\"Okay,\" Ricco said easily, unconcerned with the content of the painting being obviously intimate. Cat had painted them to go into the building where people would never know her or even meet her. He knew she felt differently about telling people about her daydreams behind the paintings. Lucca wasn't just anyone though, and it was obvious he cared about her.\n\n*****\n\nMatteo walked into his home office as Ricco went to get ready for work. They were purposely giving Cat time to work with Lucca alone... Or as alone as she could be with her security nearby. He was going to take the opportunity this morning to talk to the staff that would work for Cat and look after the most precious person in his world, as well as his home. He had the feeling Arturo believed too much of the family propaganda about a woman's place and needed a little education about his wife's position in this family and his life. He wasn't about to let anyone have control over Cat's actions. That control belonged to him, and even Ricco knew not to mess too much with that fact.\n\nLogan would be here this morning, and keeping Arturo from overstepping his brief would be in his job description, but Matteo wanted to make himself clear after seeing him in action over the last week and speaking with Lisa. Lisa was a godsend, and he was happy she had made the move from just looking after him to looking after his new family. They had always had a good working relationship, and he was glad that seemed to be extending to Cat as well now. The two women seemed to be forming a friendship which he wasn't sure about, but he was allowing, as he knew his wife wasn't used to dealing with staff and giving orders to other people. That was where his concern over Arturo's behaviour had stemmed from originally.\n\n\"Come in, Ladies,\" Matteo said to the staff, seeing Lisa tap on his door. He watched them all file in and stand before his desk. With so many new staff he was glad that Vanessa had insisted on a large and imposing desk for his home office before anyone even knew about the formation of the new table. Explaining the bed and Ricco's office had been harder, but it wasn't an unusual arrangement within the families, and accepted on a certain level outside of the leaders of the table. More often, however, a widow would move in with one of her brothers-in-law and his wife rather than two brothers living together.\n\nMatteo waited patiently as Lisa introduced each woman and her designation within the household. He spoke to each briefly about their satisfaction with working with his family. He reiterated the clauses in their contracts that would allow them to seek alternative positions within the family or break their contracts, then sat back and gave each the time to speak to either accept the offer to continue rather than return to the households they had left to come to work in his home.\n\nEach spoke deferentially but with enthusiasm about remaining part of the household and looking forward to working between this home and the new home where the Master and Mistress would start a family of their own. Satisfied, Matteo dismissed them, but asked Lisa to remain.\n\n\"And you, Lisa, are you content to remain with my family and me?\" Matteo asked, genuinely concerned that he had been asking a lot of her recently without taking enough time to speak with her personally before each change occurred.\n\n\"I am, Sir,\" she said simply. \"It has been a joy to see you so happy with Master Ricco and Catriona.\"\n\n\"Good,\" he nodded, wondering how to approach the delicate question of his wife's naivety without undermining her in this woman's eyes. As if reading his mind, she spoke again.\n\n\"If I may speak, Sir?\" she asked. At his nod, and seeing him lean back in his chair steepling his fingers, she continued. \"Catriona has expressed her displeasure at being referred to as Mistress. I have explained that it is necessary for the general staff, particularly the young ones for them to remember their place, and she has agreed on the provison that I call her Catriona. I cannot, in good conscience, call her Cat, as she requested, so it is a compromise we have reached. I will be careful when there are visitors to use the title Miss, which she is not happy with either, but will accept over Mistress from me.\"\n\n\"I see. It's a reasonable compromise,\" Matteo agreed, realising that Lisa had not given in easily to Cat's demands to be more casual in the relationship with her as if they were friends instead of employer and staff. \"She would not accept Mrs. Vitali?\" He queried.\n\n\"She believed most of her visitors will also hold that title, and it may cause confusion,\" Lisa explained, showing that she did attempt that compromise.\n\n\"That's fair,\" he accepted the explanation. \"Is there more?\" he asked, feeling that Lisa still wished to speak.\n\n\"We have spoken about her desire for a permanent family home and my input into the staffing and staff requirements for that home. I am not as comfortable with this, but she is very insistent,\" Lisa said honestly.\n\n\"I imagine that she values your honesty and knowledge of such things. There is someone I would like you to meet before we speak again. I have meetings this morning, but I will organise for that person to come here if I am unable to take you there,\" Matteo said, thinking that Cat was right in this instance. Lisa was loyal and trustworthy, and obviously loved his family. He would want her to remain as housekeeper and head of household staff. He would arrange a meeting with Theresa, housekeeper and right-hand woman. She was as formidable as Theresa herself.\n\n\"As you wish, Sir,\" Lisa said immediately upon his request.\n\n\"The only person aside of the family who live here that you will answer to is Logan. In matters of security you will answer to Knox, as usual,\" Matteo continued after her agreement to meet the person he had in mind. \"As far as Hugh or Arturo are concerned, you are their equal and do not have to explain yourself or your actions to them. You and Knox are the most valued senior staff members here and will be treated with the deference you deserve. That does not change now that my position within the family has changed and others are joining our staff. Have you been issued with your own card for household expenses?\" He asked.\n\n\"Yes, with a small limit for speciality purchases. I was led to believe that Logan would manage the household budget and Arturo would manage the day to day expenses that arise,\" she said, having clearly taken on board everything she had been told when the cards were issued. \"I am sure it won't be a problem to keep that setup.\"\n\n\"I will monitor that closely. I do not think I like that setup and would like you to have better autonomy when it comes to looking after the people I love. I would like you and Arturo to work in concert as equals, along with Knox and Hugh, with Logan overseeing both households to insure they are maintained to the standard we expect,\" Matteo commanded.\n\n\"I understand, Sir,\" Lisa nodded.\n\n\"Thank you, Lisa,\" Matteo said, dismissing her. He took a few minutes to gather his thoughts and went to see if Arturo had arrived for work, despite knowing that Cat would not be here today. Walking into what was Cat's office, he could hear other voices, telling him that Arturo was on a conference call.\n\n\"Excuse me, Gentlemen, Matteo has just arrived,\" Arturo interrupted their conversation and stood up to greet Matteo. \"Good morning. I'm sorry, am I late for our meeting?\" he asked, checking his watch.\n\n\"Not at all, I was done early and came to see if you were free,\" Matteo said, taking a seat. \"Please, continue with your call.\"\n\n\"Sebastian and CJ Donati are in on the conference call, if you would like to join us,\" Arturo offered.\n\n\"Good morning, gentlemen. Is there a technical problem I don't know about?\" Matteo asked.\n\n\"Not at all,\" CJ chuckled. \"As a wedding gift, Peri has asked me to set Cat up with a program she created for keeping track of the family and events. It works particularly well after all the refinements we have made over the last few years.\"\n\n\"We are just trying to work out a time to install it and give some training for both myself and Cat,\" Sebastian said. \"Arturo won't commit without checking with her first. Is she still there, or is she already acting as Lucca's assistant for the day?\"\n\n\"I'll give her a call. What's the preferred date?\" Matteo asked.\n\n\"The sooner, the better,\" CJ said. \"Sebastian and I have been talking about some of the system protection systems we have in place. We were thinking about an information exchange, spending a little time in each other's backyard, so to speak.\"\n\n\"This week would be good. If not tomorrow, then Wednesday?\" Sebastian added.\n\n\"What does Cat's schedule look like?\" Matteo asked Arturo.\n\n\"Catriona wanted this week left free to work with Logan on the house. She was pretty specific about that,\" Arturo said. \"I have been putting off a million requests for lunches and meetings already for this week.\"\n\n\"Alright, I'll let her know I think this is a priority. Give me a few minutes,\" he said and stood, getting up from the desk and moved toward the doorway as he dialled her number.\n\n\"Miss me already?\" she answered her phone.\n\n\"Always,\" he grinned into the phone.\n\n\"Well, you're in luck, we're coming up for a few minutes.\"\n\n\"Great. Can you come into your office when you get here for a minute?\" It was more of a command than a request, and he knew she wouldn't say no.\n\n\"I'll check with my boss, but I am sure he won't mind,\" she said cheerily, hearing Matteo growl at the word boss. A minute or two later they walked into the small office and Cat went to the desk where Matteo was talking to the two technical engineers.\n\nOn hearing what was being spoken about, she agreed readily. Anything to make her job easier was fine with her, she could give up one more day before beginning her work with Logan on the house on the hill. Arturo did not look happy, and she frowned slightly, wondering what had happened, but said nothing in front of so many of the men from the table. She wanted to navigate her relationship with Arturo on her own without their interference. Perhaps Matteo's interference and insistence of the importance of this meeting had bothered Arturo for some reason, and she tried to remember what was on her schedule for the following day. Aside from meeting Logan and the design team, she couldn't think of anything else, and she would still have had time to meet them at some stage, she was sure.\n\nArturo ended the conference call and stood as Cat, Lucca, and Ricco left the room, not noticing that Matteo had stayed after following them to the door and closing it. He let out a large sigh and, placing his elbow on the desk, lowered his forehead to his hand, counting back from ten before attempting to reschedule Cat's week for her.\n\n\"Problem?\" Matteo asked in a flat voice, making Arturo look up in surprise.\n\n\"Honestly?\" Arturo looked up at Matteo.\n\n\"That's the expectation here,\" Matteo said shortly.",
        "\"My problem is six foot three and standing four feet in front of my desk,\" Arturo said without pulling any punches, surprising Matteo.\n\n\"I'm your problem?\" Matteo said with a growl.\n\n\"I wasn't just obstinate with CJ and Sebastian, Catriona had plans that were important to her, but she is always going to roll over and give up what she wants in favour of what you or Ricco or your fathers want. I work for her now, not you. Because you didn't bother to ask me about her schedule or why I may have said I wanted to check with her before committing to a meeting time, she is going to look bad to the Gambaro family. They extended their stay at the house on the hill to have lunch with her and Logan tomorrow when they go to look at the house,\" Arturo spoke with frustration in his voice.\n\n\"You didn't say anything at the time?\" Matteo accused.\n\n\"I am hardly going to make her choose between you and her own plans, especially not in front of so many people!\" he said disgustedly. \"I would never make her feel as if she had made a mistake or embarrass her in front of anyone. I don't work for you, I work for her, and she has her own priorities. She is desperate to begin the renovation process because she wants to start a family as soon as possible and doesn't want to be dealing with a half-finished house when that happens. She has half-finished paintings because she is constantly putting yours and Ricco's needs before her own when, from what I have seen this morning, you have no regard at all for her plans and the things she wants to accomplish while dealing with the demands of this family. I haven't even touched on the demands of the women of this family, who she will once again prioritise above herself, no doubt,\" Arturo leaned back in his chair and stared at Matteo, not quite believing he had spoken to him that way, but it was too late now. \"When was the last time you actually gave her time to do what she wanted or prioritised some time for her to just paint and enjoy being here when it was a studio? She's packed it up because she knew she would never get to use it, and that's what she loves, painting!\" \n\nMatteo said nothing as he stared at the young man. He felt like an absolute arsehole that he couldn't refute anything Arturo had just said, but their lives had been so rushed leading up to the gathering and the wedding that they hadn't had the chance to stop and take the time to just relax and enjoy any moments unless they were in bed together.\n\n\"You can fire me if you want, but I would bet that you didn't put off any of your work commitments or spending time with your family and friends,\" Arturo went on, prepared to say his piece now that he had started. All of the frustration he had felt over the last week as he watched her work her butt off to prove herself to this family came out. \"From what I understand, even when you went overseas to hand over the international projects, she spent time with each of your brothers and cousins between her wedding plans so that she wouldn't let you and Ricco down when the announcement came.\"\n\n\"You made your point!\" Matteo growled angrily. He was angry at himself, not Arturo, for pointing out how unfair he had been to Cat and realising why she constantly fought him for small freedoms. Arturo's summary of his impression of their relationship also spoke volumes for the attitude that Matteo had picked up on and been suspicious of over the last week.\n\n\"Have I?\" Arturo challenged. \"Or have I just ensured that I won't be keeping this job? You won't find someone who would protect her interests better than me. I promised you that when you interviewed me. She will be my priority, not you or your brothers or your fathers.\"\n\n\"Honesty and loyalty...\" Matteo said, dropping into a chair and meeting Arturo eye to eye. \"Are possibly the key attributes I look for in anyone that works for me or those I love. I will hardly fire you for that. Pointing out what an arsehole I've been, however, that's a bit hard to take.\"\n\n\"You wanted honest,\" Arturo said, relaxing slightly as he took in the slump of Matteo's shoulders.\n\n*****\n\nCat had visited two different building sites with Lucca and taken notes for him as they walked around inspecting sections that were nearing completion. They had talked about the pictures in the offices of Matteo and Ricco further as she tried to explain that art on the walls, just for the sake of having something there, was such a waste.\n\n\"If it's your space it should be somewhere where you have things that you love and make you happy. Things that can pull emotional heartstrings, or, at the very least, make you smile when you think of them,\" she grinned. \"The picture, itself, doesn't really matter as long as there is meaning behind it.\"\n\n\"What does that mean?\" Lucca furrowed his brows.\n\n\"Well, I knew a man once that had old movie posters in his living room because it reminded him of sneaking into the local cinema as a kid and how much fun he had there hidden down the front. He was a big movie buff because of it, so he kept those memories close where he watched those movies now,\" she tried to explain. \"You could have a picture of Jasmine because it reminds you of your grandmother's perfume, and it's much easier to look at than a picture of her maybe. The picture, itself, doesn't have to be the exact memory, just bring up the emotion, so to speak. I am not explaining it well at all.\"\n\n\"So let's say I had a secret indulgence that made me happy, but I didn't want anyone else to know about it. I could have a picture that was a representation of it without actually putting it out there for everyone to see,\" he mused.\n\n\"Do you have a secret indulgence?\" she asked with a grin.\n\n\"Maybe,\" he said coyly. \"You've given me something to think about.\"\n\n\"Is it a real secret, or is it something your brothers would know about that you just don't want to tell me?\" she asked.\n\n\"I doubt anyone is aware, even my watchers,\" he chuckled. \"It's nothing bad or anything, just something I don't share with anyone else because they wouldn't be into it.\"\n\n\"You would share it if you thought someone was into it?\" she asked. \"What if you met the girl of your dreams? Would you share it with her, or at least tell her what it was to see if she might be into it?\" Cat asked.\n\n\"Sure, if we were getting serious,\" he shrugged. \"It's not a huge deal. Where would you like to go for lunch?\" Lucca asked as he held the car door open for her.\n\n\"Where would you normally go for lunch?\" she asked.\n\n\"I'd normally just grab a sandwich or something as I went from one job to the next. I'd like to take you somewhere nice for lunch though. It's not often I have a lovely assistant to do that with,\" Lucca laughed. \"So where would you like to go? Just name it, and I am sure I can get us a table.\"\n\n\"Here's the thing,\" she said softly. Aware that Hugh and Bradbury, who had taken over from Jones during the morning, sat in the front of the car. \"I am beyond happy and grateful that your family has accepted me and treated me like one of you practically from the beginning of my relationships with Ricco and Matt, but I come from such a different world. Asking me where I'd like to go for lunch is like asking me to name a crater on the moon. I wouldn't know where to go for lunch... at least, not the type of places you would go.\"\n\n\"Okay,\" Lucca said, hearing the anxiousness in her voice and not wanting a simple question he had asked to be the cause of that anxiety. He leaned forward and gave Hugh the name of a restaurant before sitting back and looking at her. \"This was what you were trying to prove with your speech in the Athenaeum,\" he said in a statement. \"It's only because it doesn't matter where you came from that we forget and assume you have had the same experiences as us growing up.\"\n\n\"I appreciate that, I do, but it makes for a lot of awkward occasions when I don't have Ricco around to save me,\" she admitted.\n\n\"Ricco? Not Matt?\" Lucca asked.\n\n\"I think Matt sometimes forgets, too, whereas Ricco was there and saw me for who I was in the beginning. Matt never really knew the girl I was before I went to Brisbane,\" she said, defending Matteo. \"Ricco is probably more aware of my discomfort at certain questions.\"\n\n\"Can you tell me about it? Your life when you were growing up?\" Lucca asked. \"Or is it something you just don't want to revisit anymore?\"\n\n\"I'm not ashamed, if that's what you mean. I am pretty open about where I have come from and that I have no family aside of David,\" she said again in a defensive voice.\n\n\"I'd genuinely like to know,\" Lucca said soft voice.\n\nCat began in the car, telling him about growing up with her mother and grandmother until her grandmother's death and her mother's descent into drugs and alcohol. During lunch, she spoke of the struggles she faced trying to look after David, as well as herself. She smiled at the few happy memories she had as she told him about the goodness of her neighbours, who also lived in the squalid council flats. Eventually, she relived her mother's death and her dependence on Ned and the things she sacrificed to try and keep David at school and working toward a future away from the crime and gangs of her neighbourhood. She genuinely smiled when she spoke of when Frankie picked David up from a street gang hang out and took him to the local football club.\n\n\"Every time I tried to leave Ned, he would find me and drag me back until I just stayed put and he left, knowing I wouldn't move and he could find me whenever he wanted or needed. He kept coming back to ensure I was staying where he left me, but when David and Mick finally convinced me to move in with them and make a break for good, Ned went ballistic. That's when David called Frankie for help, and your family got involved. I guess you know the rest, or at least most of it,\" she finished the story.\n\n\"Honestly, Papa and Ricco never discussed your court case. None of us knows what happened to you or why you went to court,\" he said. \"I can guess now, but no one knows the truth, I don't think.\"\n\n\"Ned found where I had gone; he broke in and destroyed everything I owned. My room and the studio I had created in the garage. I came home early that day because Maryanne didn't like the art I was doing in Vanessa's studio and wanted to see what I did at home. Ned assaulted me and threatened David's life before David arrived home and disturbed him. Ned fled the scene, and David called for help.\" The images in her mind flashed through as if only partially remembered now. \"I refused to go in the ambulance, so Frankie took me to his house and called Paolo to see me. Ricco was there when I woke up the next morning. The rest of the story you now know,\" she said confidently.\n\n\"I can fill in the blanks,\" Lucca murmured, realising she had been raped and beaten by someone who claimed to love her on more than one occasion. The man had used the only leverage there was against Cat, her brother, David. The whole story of her life just made him sad, and he understood just how uncomfortable she felt now from the simple question of 'where would you like to go for lunch' when she obviously had no clue about anything outside of the neighbourhood she grew up in.\n\n\"Let's go,\" he said, suddenly throwing some money on the table and standing to offer her his hand.\n\nThe abruptness of his actions made her think she had been too honest with him, and she worried that he thought less of her because of her early life and her relationship with Ned and the fact that she had stayed with him for so long. She considered asking if she should just go home and let him finish his work day on his own, when he smiled widely at her, making her tilt her head curiously.\n\n\"Change of plans, I have an idea,\" he explained.\n\n*****\n\nMatteo worried about Cat during the day. Arturo's words had stayed with him, and he realised he had taken for granted that she had done what was necessary since her return from Brisbane rather than anything she wanted. She had left almost immediately for her trial, and then the engagement had thrown her into wedding preparations, and her obsessiveness about getting to know his large family so she didn't embarrass him and Ricco at the gathering had kept her from the very thing that made her the person she was. Her creativity was what had got her through the harshness of her early life, and he had all but snuffed it out without even realising it. She'd packed up her studio, the studio she wanted, without a seconds hesitation when she became the mother and took on more responsibility for him.\n\nShe had been so effortless in her support of him, and all he was dealing with, he had lost sight of what she was giving up to be his wife. His mind went back over the last two weeks they had spent together during the gathering and wedding to find one small thing she had done solely for herself. She had argued with him for small freedoms, and even safe worded once, but he knew he couldn't count those, as that was self-preservation, not something she did just for herself. The one thing she had asked for, her car, he had denied her by giving her a driver and restricting her movements.\n\nShe hadn't even been out with David and Mick without his engineering the meeting himself to ensure their safety. His thoughts bothered him a lot, and he went to speak with Ricco to see if he was too hard on himself or if he had truly been acting like a super controlling arsehole without even realising it. Cat hadn't complained about being so involved in the gathering or the pressure of becoming the little mother after the wedding. Or maybe she had, and he just hadn't heard her.\n\n\"Hey,\" Matteo said, walking into Ricco's office, seeing him sitting at his desk.\n\n\"What's wrong?\" Ricco immediately asked, taking in his brother's expression. Matteo filled him in on everything Arturo had said that morning and his own thoughts throughout the day so far.\n\n\"Well, fuck,\" Ricco said. \"That makes two of us then,\" he said, shouldering some of the blame. \"though I doubt she sees it that way. Life has just been rushing past us all because there was so much happening. It will slow down eventually, and life can go back to normal, or as normal as it can be for us.\" Ricco chuckled.\n\n\"I guess, but I still hate the thought that she feels she has to put off the things she wants to do in order to do what everyone else expects,\" Matteo sighed. \"What we expect of her.\"\n\n\"Why don't we see what we can do to lighten her load a little and make sure we check her schedule more often to make sure she doesn't overdo it when people randomly pop up in phone conferences. I doubt she would be happy if we suddenly changed our world to make hers easier.\" Ricco reasoned.\n\n\"What if we moved out to the house on the hill while she met with the renovation team? We could commute each day, it's not that far,\" he reasoned.\n\n\"I can work from anywhere these days, though I am happier near my office,\" he agreed. \"I started winding down my public practice and taking on more of Papa's caseload for the family weeks ago.\"\n\n\"Let's work out the logistics of spending some time out there before the renovation begins,\" Matteo suggested. \"We can use it to test out the daily commute before we commit to the house on the hill instead of looking for somewhere closer.\"\n\n\"I think you have already committed to the house on the hill by giving it to her and letting her renovate it. You couldn't take that away now and not be a huge arsehole,\" Ricco chuckled.\n\n\"I didn't know I would be Chair when I did that,\" Matteo said, sinking his head into his hands.\n\n\"I'm not saying she wouldn't understand and agree with you about the commute, but, after feeling so shitty this morning, do you really want to take one more of the things she wants away from her?\" Ricco challenged his brother.\n\n\"Fuck!\" Matteo looked miserable hearing the words. \"This whole relationship happened so fast, I'm still adjusting. I'm used to just getting things done in the most efficient way. Tell me I haven't always been this much of an arsehole?\"\n\n\"I doubt you will find anyone who would label you as a true arsehole,\" Ricco chuckled. \"Look, the reality is that you have known Cat for four months, half of that time you had to spend apart, so you've had a two month relationship before you got married. Not only that, but you have had a few life changing experiences in that time personally as well, including our relationship.\" Ricco took a breath as he voiced the pressure on both his brother and Cat as if only seeing it himself for the first time. \"You have to expect that there will be a period of adjustment for everyone, but instead of being able to work through it on our own, like we normally would, we have a lot of people watching and judging us for what we do now.\"\n\n\"Fuck!\" Matteo said, hearing his life as it was now served up to him like that. \"Alright, let's toss around some ideas to make our lives work better for Cat. How bad will the commute honestly be at peak hour? If Knox drives, we can work from the car on the way in.\"\n\n\"True, or we could build a helipad on the roof,\" Ricco chuckled.\n\n\"It's already there, we just don't have a helicopter or anyone who can fly one,\" Matteo shrugged.\n\n\"You're rich and can buy one and hire a pilot, so, problem solved. That would negate the commute for you, even though Knox would still have to drive it if you needed him out there. Although, if Hugh were out there, you probably wouldn't even have to get Knox to drive every day,\" Ricco reasoned.\n\n\"I haven't ever been out there with Cat. All of her memories of that house are tied up with you and mine with Nik,\" Matteo sighed.\n\n\"Then it's time to exorcise those demons,\" Ricco shrugged. \"Why don't we spend the weekend out there and discuss her ideas for renovating. You will probably find Nik doesn't exist there anymore, and, for me, that's where I fucked up my relationship with her, so there are not as many good memories as you think for us.\"\n\n\"Can I interrupt?\" Logan knocked on the door as the two men were talking.\n\n\"Yeah, come on in,\" Ricco invited. \"We were just talking about the renovation project.\"\n\n\"Great, that's what I've come about,\" Logan walked in and took a seat beside Matteo. \"I know you said this is Cat's project, but if it's going to be your primary residence, there are some things we need to discuss that she doesn't necessarily need to concern herself with.\"\n\n\"Such as?\" Matteo asked.\n\n\"I assume you're going to want an athenaeum big enough for the eighteen of us. We can't keep crowding into your Papa's place once he hands over the Chair to you, and you don't have one here. I'm assuming, because you didn't expect things to play out the way they did.\" He said reasonably. \"You will also want a separate but equal server out there as back up, and probably a sizable generator so you can be self-sufficient, to a point, if it ever becomes necessary. I'm not sure how Cat would be with doomsday planning, but it's something you should think about, given the threats, not just to us, but to all of the families. Having a house out of the city has a lot of advantages in that regard.\"\n\n\"We were just talking about a helipad as well,\" Ricco said, swiftly covering the fact that they had begun to think of that house as a permanent residence, despite Cat's intentions. \"We might want to look at acquiring the surrounding blocks of land for a small airfield as well if we are going to make that the main base of operations for the family businesses. The block's big, but with all the things you are suggesting, as well as what we have been thinking of, it would make the most sense.\"\n\n\"I can do that, I'll get Zion to help now that he is going to be Mister Moneybags,\" he chuckled. \"If anyone on the table truly suits his new position, it's Z.\" Logan laughed. \"We may as well have what we need going into the future put in place now so that the renovations and upgrades don't continue forever.\"",
        "\"You said you could work from anywhere, and I guess, with Lucca taking on more and more in the running of the company, I can loosen the reins a little more to work from there, at least part-time,\" Matteo said. \"As long as we have both homes set up to support it. We're going to need to have an Athenaeum here as well, so we better start looking into that as well. I think we need a table meeting to make sure we have covered all our bases and give people time to consider their roles and what they will need going into the future that our fathers haven't considered with the new technologies available.\"\n\n\"I'll go out with Cat and the architects this week and start scoping out the surrounding land. Maybe we could meet next week? Without the old men?\" Logan suggested.\n\n\"Yeah, that will give me time to consider the space here, and where I want to place the spaces we now need to have in the building,\" Matteo agreed. He checked his watch, wondering if it was too early to have a drink. His head hurt, and he worried about Cat and if she was as happy as she said with him now that the table had been announced.\n\n*****\n\nCat lifted her hands above her head and squealed in delight as the large pirate ship swung to its peak and her body lifted slightly from her seat before it whooshed back in the other direction. This was her third ride on the huge attraction at Luna Park, and she wondered why she had never come here before... Money, possibly, and time. She'd always had to work, and her free time was mostly taken up by David and his football until recently. She turned her head to grin at Lucca, who, like her, was acting like a big kid at the amusement park that afternoon. She had needed this escape from the world and the pressures of her life now, and she was beyond grateful to him for bringing her here.\n\nLucca watched Cat and the way her face lit up with genuine happiness, as if all her worries about her past, as well as her future, seemed to melt away as their afternoon progressed. It was hard to believe she had never been to Luna Park or any of the places he had asked about that he had loved growing up. He found himself wanting to show all of them to her, and it was a constant jolt to his system to see the glittering ring on her finger, reminding him that she was off-limits to such thoughts. He understood why Matteo had been in such a rush to marry her, and why Ricco had remained in love with her, even after she had left him for good and moved interstate.\n\n'They were better men than him,' he thought to himself as he helped her from the ride, placing his hands on her waist to steady her. He couldn't imagine ever wanting to share her if she was his. Allowing himself a small moment of uncaring that she was married to his brother, he took her hand and walked toward the nearby refreshment stand where Bradbury and Hugh waited for them. He'd done nothing wrong and had been a perfect gentleman all day, but he felt a pang of guilt as Hugh's eyes lowered to where he held her hand in his.\n\n\"I guess it's time to go back to reality,\" Lucca said. \"Are you hungry? Would you like to have dinner before we head back to HQ?\" He asked, wanting to prolong the day and the time he had alone with Cat, knowing it would possibly never happen again.\n\n\"Dinner sounds great, but I should probably check in with Matteo to let him know,\" she smiled. \"It's been a fun day, it would be nice to have dinner, and I am still curious about your secret indulgence.\"\n\n\"You can call him when we get to the car,\" Lucca suggested with a smile, and they turned to walk towards the entrance. Hugh moved ahead to get the car and pull up closer to the entrance for them, while Bradbury remained to shadow their progress through the park.\n\nOutside they stood and waited as the car pulled up and Bradbury opened the door for her as Cat climbed inside. Cat had barely gotten her leg in, and Lucca had one leg in the car when it took off. There was a sickening thud as Lucca fell to the ground, his head bouncing against the concrete as Bradbury took off running after the car and the woman he was supposed to protect. He already had his phone in his hand and was pressing the alarm button, swearing profusely as he ran ineffectually after the disappearing car.\n\n\"Just sit back and relax, no one wants to hurt you,\" a figure that had been crouched in the front passenger's seat said to Cat as the car built up speed. \"Once we have what we need you will be returned to your husband. Give me your phone and purse,\" he requested, holding out his hand. Cat handed them over. If nothing else she was a survivor, and she had spent years surviving bad situations, this was no different, she told herself.\n\nThe car stopped, and she was pulled from it and pushed into the back of an ambulance. She had barely acknowledged her new surroundings and the men inside the vehicle when it moved out into the traffic with sirens blaring and lights flashing. She caught a brief glimpse of the car and her personal belongings behind them, and she closed her eyes, wondering how Matteo would find her now. She worried about what this would do to him and how Lucca would cope with having to tell his brother they were ambushed because he wanted to show her a fun time at an amusement park because she had never been to one.\n\n\"Don't drug me, I won't fight you!\" she pleaded as a thick rubbery band was strapped around her upper arm above her elbow.\n\n\"We just want a blood sample,\" the man spoke abruptly, holding up an empty syringe and vial. Cat relaxed and let them draw the blood. \"Saliva too,\" he showed her the swab, and she opened her mouth, wondering how that would work, considering her mouth had become so dry with her fear.\n\n\"Why are you doing this?\" she asked.\n\n\"Our employer believes you are family and would like that confirmed before anyone knowing his identity, and he had serious doubts that your husband would allow this testing to occur,\" the man said in a brusque businesslike tone.\n\n\"He was probably right,\" Cat said, acknowledging that she wouldn't have believed it either. \"I don't have a father, none was listed on my birth certificate. How would your employer even know that I was alive, let alone could possibly be related? And what about my brother?\"\n\n\"It is my understanding that any siblings younger than yourself would not be from the same father,\" the man said, continuing with the same tone. \"As for your other question, all of Melbourne knows who you are and what you look like, Mrs. Vitali.\" He moved away from her and sat behind the driver, who turned off the siren but left the lights flashing. The ambulance slowed down and pulled over slowly. They sat there for long minutes before the men in the back with her moved to open the door.\n\n\"We will be in touch should the results come back positive,\" he said as the ambulance drove off, leaving the two of them in a side street before she could think to turn around and look at the licence plate. \"I trust you will be able to find your way home from here.\" He said, and left her, moving around the corner into the main street to meld in with the crowded peak hour flow of traffic and pedestrians. It took her a minute to get her bearings, and she walked across the narrow city street and into a hotel lobby.\n\n\"Hello, my name is Catriona Vitali,\" she said as she approached the concierge.\n\n\"My god, it is her, isn't it!\" the young girl at the reception desk gushed, but silenced herself after a sharp look from the concierge.\n\n\"Oh, good, you recognise me! I've just been mugged, and I have no identification or phone or anything, and I am desperate to call me husband! Would I be able to use the phone, please?\" Cat asked breathlessly. \"I am sure my husband would reimburse you for your trouble.\"\n\n\"Of course, Mrs. Vitali, if you would follow me to our VIP lounge,\" he offered. Cat followed him through a door and sat as a phone was brought to her, and some iced water. \"Would you like me to call the police so you can report the mugging and loss of your belongings?\"\n\n\"Thank you, yes, I should, but I just want to speak to my husband right now,\" she said, feeling her eyes welling up with tears as she looked at the phone and tried to remember his number. She'd never had to dial it before, it was always just programmed into her phone. Tears rolled down her cheeks as she tried and failed to remember anyone's number but her own, and decided to call that, hoping that it would be forwarded to Arturo's phone. She felt overwhelming relief when he picked up almost immediately.\n\n\"Arturo,\" she choked on a sob. \"I need Matt!\" She dissolved into tears as he demanded to know where she was. The concierge, seeing the predicament, took the phone from her hand and gave Arturo the information and took instructions.\n\n\"Mrs. Vitali, I've been instructed to take you to a suite. Can you walk with me?\" he asked gently, and she nodded, getting up and taking a breath to try and stem her tears.\n\n*****\n\nMatteo was still in Ricco's office when the alarm sounded on their phones. He spent the next hour with a frantic sense of his world ending as people moved and spoke around him. His whole family and the people who worked for him were trying to find Cat. When Arturo finally barged into the crowd of people around him and said he had spoken to her, his world stopped for a split second, and he ran out of the building to his car. She needed him. It was the only sentence she had managed to get out between sobs, Arturo had said, she needed him, and he needed to be there immediately, if not sooner.\n\nCat jumped as the door flung open and Matteo swept down onto her, wrapping her in his arms and kissing her tears away. She cried all the more, she was in shock, she knew, but she had no words, just tears that she couldn't seem to stem. She could hear his murmur, but not understand what he was saying as she clung to him. She wasn't even aware of the multitude of people who had followed Matteo into the suite.\n\n\"Carry her into the bedroom, Matt,\" Zachary said, softly patting his shoulder. \"I'll need to examine her and make sure she is alright, Papa is with Lucca now,\" he explained, using the same soft cajoling voice.\n\n\"Lucca?\" Cat sobbed.\n\n\"He's hurt, but we have to worry about you right now,\" Matteo said, holding her close as he walked the few meters to the bedroom, followed by Zachary. The only one who wasn't hurt was Bradbury. Thank god someone was able to raise the alarm, or the consequences could have been far worse. Not that they weren't bad, he had a traumatised wife, and his brother was unconscious in a hospital bed, and he didn't know what was happening there. He had never felt so out of control in his adult life.\n\n\"Did they inject you?\" Zachary asked, seeing the cotton ball and tape on her arm.\n\n\"No, they took blood and a swab of my cheek,\" Cat hiccupped slowly as her sobbing began to subside. \"They said their employer wanted a DNA test and that he knew Matteo would never allow it. They never harmed me, not physically,\" she whispered. \"What happened to Lucca? He fell when the car took off suddenly.\"\n\n\"The police are here, and they want to interview you,\" Ricco said quietly, coming into the bedroom. \"Your belongings were recovered with the car. Thomas is bringing them. Kalum is doing crowd control here at the hotel.\"\n\n\"And Lucca?\" she asked, hoping he had heard something. She saw a look pass between the three men who hovered over her. \"He's hurt, Cat, he's in the hospital, but Paolo is with him, and he has the best care.\"\n\n\"This is all my fault, I am so sorry!\" she looked at the three men. \"He gave me such a wonderful day, and I did that to him!\" she broke into fresh sobs.\n\n\"You didn't do anything!\" Matteo said adamantly. \"Ricco, tell the police they will have to wait until the doctor is finished examining her.\" He looked up at Zachary. \"Tell me, why was it so wonderful to spend the day with Lucca?\" He stroked her hair, willing her to calm down again by trying to get her to talk about other things.\n\n\"He's very much like you. I think we need to find him a wife before I fall in love with another one of your brothers,\" she teased sadly. \"Did you know he has a secret indulgence? He thinks no one knows, but someone must in this family. I doubt anyone has any real secrets.\"\n\n\"It wouldn't be much of a secret if I knew, would it?\" Matteo chuckled. \"You really need to stop falling in love with my brothers and cousins. Luckily, Zach, here, is already married and immune to your charms!\"\n\n\"I wouln't say I was immune,\" Zach joined in the teasing banter.\n\n\"Good grief!\" Matteo sighed exaggeratedly, and put a hand to his forehead as if getting a headache thinking about it. \"Lucky I got in first and put a ring on it,\" he growled, but his wide smile ruined the growl's effect.\n\n\"I love you,\" she reached up and took his hand and held it tightly. \"From the moment they let me go, all I wanted was to see and hear and feel you, and I couldn't remember your phone number, or anyone's phone number. I called my own number hoping someone would pick it up.\" Anxiety over the feelings flowed through her again. \"So much for my tough chick from the wrong side of town routine, huh?\" she gave a lop-sided smile. \"I just can't seem to stop crying today, and I feel sick, like I might throw up,\" she admitted.\n\n\"I just want to check that they didn't put anything harmful in your arm when they took the blood. Do you think you could pee?\" Zachary held up a specimen jar and indicated the bathroom. Cat took the jar and got up from the bed, feeling light headed, and headed into the bathroom without a word.\n\n\"She was pretty adamant that they just took the blood,\" Matteo said, looking at Zachary with a raised eyebrow.\n\n\"The shock of the situation could be made worse because she is hormonal. It wouldn't be the first time the Vitali men hit the jackpot when they began trying for a family,\" he murmured softly, making Matteo gape at him. \"It's been well over a month since she came off birth control, and I don't want to give her medication for the shock, if there is a chance. The test results will change what I prescribe, you understand. It's pretty accurate.\"\n\nMatteo blew out a huge breath but said nothing, merely nodding his understanding. He considered the idea and wondered if it may be too much of a shock for her, on top of what had already happened today. He wasn't sure he could take the news either right now.\n\n\"Don't tell us,\" he said suddenly. \"Not until after Cat speaks to the police. I think we're both dealing with enough right now, and that should be a happy occasion, not this chaos,\" Matteo said.\n\n\"Okay,\" Zachary said warily. \"After the police leave, though. It will be important when she asks for a drink later if it's positive. Red wine, one glass at most, even if it's negative. Alcohol is not the solution here.\"\n\n\"I get it,\" Matteo said quietly, still nodding his head. \"I'm good to go, though, right? Something tells me I'm going to need something to help me sleep tonight.\"\n\n\"I'm sorry,\" Cat said sadly, coming back into the room. \"I am so sorry this is happening to us.\" Tears welled in her eyes again.\n\n\"You have nothing to be sorry for, Kitten,\" Matteo gathered her into his arms again as she handed the sample to Zachary and he disappeared into the bathroom with some indicator strips. \"Do you think you can manage to see the police now? It might be better to get it over and done with.\"\n\n\"Okay,\" she whispered. \"You won't leave me, will you?\" she clung to him as they spoke.\n\n\"Never! Not in a million years will I ever leave your side again, if that's what you want,\" he smiled. \"It might get a little uncomfortable when one of us has to use the bathroom, but I can do it if you can,\" he tried to lighten the mood.\n\n\"That's not what I meant, silly,\" she smiled, despite everything.\n\n\"I will stay by your side as long as you need me, and then probably sometime after that,\" Matteo reassured her. \"Are you ready?\" he asked. \"There are a lot of people here who want to make sure you are alright.\"\n\n\"Yes, I am fine, honestly, it was just the shock of it all. Are Hugh and Bradbury okay?\" she asked, realising she hadn't even thought to ask about them.\n\n\"They are both fine,\" Matteo said, walking with her to the door, not wanting to see the expression on Zachary's face when he re-emerged from the bathroom. He doubted he would be able to refrain from asking now that the idea had settled into his mind.\n\nThe police interview went quickly, as she could tell them very little about the people who had taken her. They hadn't hurt her and had released her within an hour of abducting her. She never got a good look at the driver, and the man who spoke to her wore a cap and a clear mask over the top half of his face, distorting his features. The others all wore similar clothes and masks and never spoke with her. The only real information she had was that an unknown employer of the men believed he might be her father and wanted a paternity test, or at least a relative of some description.\n\n\"Ric,\" Zachary said quietly as the police officers stood to leave. \"Let Kalum show them out. Join us for a minute, would you?\"\n\n\"Sure,\" Ricco agreed, worried now that something else was wrong, other than what he had heard her tell the police. He followed Matteo and Cat into the bedroom.\n\n\"How are you feeling now?\" Zachary asked Cat.\n\n\"Like a crybaby,\" she sighed. \"I am fine. I wasn't hurt or abused in any way. I'm more worried about Lucca now. Have you heard anything from your father?\"\n\n\"Not yet, but I'm sure he has everyone doing their best for Lucca,\" he said gently. \"I'm not going to prescribe you anything, as you seem much calmer now. However, if you find yourself getting overwhelmed again, call me. Don't self-medicate with anything, and that includes alcohol. Do you understand?\"\n\n\"Yes,\" she said slowly, \"But I feel fine now, I'm sure you won't have to worry about me.\"\n\n\"I need you to come into my office in the morning, and I need to take a blood test now to send off with the overnights,\" Zachary continued.\n\n\"Is something wrong?\" she asked, suddenly worried.\n\n\"Do you remember when your last period was?\" he asked softly, and smiled as her eyes widened.\n\n\"Seriously! You think I'm pregnant already?\" she asked in astonishment.\n\n\"I'm ninety-nine percent sure that you are, given the test I did with the specimen you gave me. That, combined with the shock of what happened today, would account for your hysteria. Your inability to stop crying earlier,\" Zachary explained further at Cat's frown.\n\n\"Wow!\" was all she could say as her head swung between Matteo and Ricco, unsure who she should hug first. \"This is good news, right?\" she finally blurted as they didn't move.\n\n\"The best! I just wasn't expecting that when I walked in here,\" Ricco finally said, and reached down to wrap his arms around her, pulling Matteo into the hug as well.\n\n\"Let's wait until the blood tests come back before we say anything to anyone. Just to be sure,\" Matteo said cautiously, then grinned at Ricco. \"We're going to be Papa's!\"\n\n\"Cat is truly a little Mama now,\" Zachary grinned. \"Rest tonight, you are in shock. You can have one glass of red wine, a small one to celebrate, but don't be tempted to take any medication until we have spoken tomorrow.\" He packed up his bag and walked out of the room, giving the trio a few minutes to digest the news.\n\nCat felt her eyes well up again, and fresh tears threaten. Her emotions were all over the place, and she gave a teary smile.\n\n\"It's all too much?\" Ricco asked gently.\n\n\"The last four months of my life have been all too much, I think I just need a timeout,\" she shook her head. \"What I really need right now though, is to make sure Lucca is okay. Can you take me to the hospital if they haven't released him yet?\" Cat asked. \n\n\"I will go to the hospital and check on him while you let Matteo feed you. Bradbury said you were on your way to dinner when you were abducted, and you have a little life to think about now,\" Ricco put his hand over her belly. They had shielded her from how badly hurt Lucca was until now, and, if they could, they would keep it from her tonight, at least until she had some decent rest and came to terms with everything that had happened to her.",
        "\"That sounds like a good plan,\" Matteo agreed. \"Where would you like to eat?\" he asked.\n\n\"At home,\" she said softly.\n\n\"Done, I'll call Lisa and let her know we're on our way. Do you feel like anything in particular?\" he asked, helping her to her feet.\n\n\"Everything she makes is yummy,\" Cat said noncommittally. \"You can choose. Ricco, can you let Lucca know I will come and see him later, or to call me and let me know he is okay?\"\n\n\"Sure can,\" Ricco smiled, and he planned to as soon as his brother woke up. He wasn't lying to Cat, exactly, but he also wasn't being fully honest about his brother's injuries and the fact that he remained unconscious after a fracture to his skull.\n\n*****\n\nThe steam from the shower was fogging up the mirror and surrounding Cat's body as Matteo leaned in the doorway and watched her through the moulded glass tiles of the shower. She moved the soapy sponge over her body, tilting her head back to wet her long dark hair.\n\nHe unfastened his belt and kicked his pants off, then pulled his shirt over his head, tossing it on the small pile of Cat's clothing. He stepped into the spray of the water and smiled as her head jerked in surprise as he joined her in the large shower. She leaned her back against the side of the shower to make room for him and shivered; the tile chillingly cold against her back. Matteo brought her chin up with his finger. Her blue eyes shone beautifully up at him, and he brought his mouth down to hers softly, slowly moving his hands down her sides to graze over her belly. He needed her, to feel her and know she was really there with him after today.\n\n\"I am so excited about this,\" Matteo murmured his hands flattening over her belly as he continued to kiss her. Cat tilted her head to the side and wrapped her arms around him, her hands trailing down to his ass. She moaned into the kiss when his hand dropped lower and rubbed her pussy, his fingertips teasing her before moving them up and down her wet slit.\n\n\"Me too,\" she whispered and smiled, placing her hands on her belly as he continued to tease her.\n\n\"I'm looking forward to these getting bigger and fuller,\" Matteo moved his head down, briefly flicking her hard nipples with his tongue and kissing them. He pulled one, then the other between his teeth, still being gentle with her, and she found she was enjoying the feel of him as he explored her body for the thousandth time.\n\nMoving down, Matteo placed a kiss on her still flat belly and knelt before her, startling her. He nuzzled his nose in the small bush of hair on the top of her pussy, lowering his head to lick up and down her hot slit, the shower water running from her stomach down to her pussy as he slowly pushed his tongue in and out of her. She pressed her hips forward into his face as his warm tongue filled the entrance to her tight hole and slid back up over her clit time and again. Cat ran her fingers through his damp hair, and he pulled her closer by wrapping his hand around her thighs to squeeze her ass. He circled her clit with the tip of his tongue, lightly flicking over it. His hot breath sent shivers up her body.\n\nThe gushing shower water drowned her soft moans as he pushed two fingers inside of her, starting slowly, then getting faster, moving them in and out as he sucked her hard clit. Her hips bucked and she cried out as she felt the tension in her body coil and let go. She trembled and shook as he supported her.\n\nWhen Matteo stood again, his hard cock trailed up her leg and pressed against her hot pussy. He moved slowly, easing his cock slowly into her. Her lips parted and she let out a small gasp, leaning forward to rest her head on his shoulder as he began to move within her. He lifted up her leg, draping it over his hip, and rammed into her once, ensuring he was fully embedded.\n\n\"Yes!\" Cat hissed, willing him on, needing to feel him deep inside her, his arms around her and supporting making her feel safe and adored and loved.\n\nIt was all Matteo needed to hear, and he began to fuck her hard, reclaiming her. He had died so many times from the time the alarm had gone off until he held her in his arms again. He needed her so badly. He couldn't imagine his life without her. He loved her beyond anything he could have comprehended before meeting her. He felt her stiffen and begin to tremble again and he let go, coming with her and clinging to her tightly as the hot water ran over them. It was late, and he turned off the water, carrying her from the shower and wrapping a towel around them both.\n\nMatteo laid Cat in bed and snuggled up beside her, holding her until she fell asleep, then he got up and got his laptop and phone and brought them back to the bed to make sure everyone else in the family was okay and Lucca was on the road to recovery.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "amusement park",
        "shower sex",
        "abduction",
        "brothers"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-28"
}