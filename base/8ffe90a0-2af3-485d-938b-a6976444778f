{
    "title": "The Only Time is Forever",
    "pages": [
        "The author reserves all rights, except for those ceded to Literotica, per the rules.\n\n*****\n\nBill jerked his hand back as the rose thorn punctured his thumb. Sucking on it, he looked at the row of bushes his wife had planted, many years ago. He never enjoyed all the care they took. But, he had kept them looking tidy & lovely, 22 years later, as they gave him one of the best memories of his wife, Ann, and it was a memory that did not come with pain.\n\nHe had been driving the two of them home after their friend's birthday party. They both had each consumed a few drinks over a couple hours. Bill had never convinced himself that he could not have avoided the herd of deer that ran out of the woods on that rural highway. \n\nHe had swerved right to miss the second one, when the third one came through the windshield. The car went off the road, and slammed into a pine tree on the driver's front corner. Cars of the 90's weren't nearly as safe as they are now; doctors said Ann died instantly from the deer hit. Among those friends that Bill had told the story to, they knew he had suffered a broken ankle & leg, fractured ribs, some internal injuries, and a concussion. \n\nIt was only occasionally that he even noticed the slight limp. Now the suffering was all in his memories. Bill had tried dating a few years after the accident. Some of the ladies that had offered condolences to him while was recovering in the hospital, had suggested they go out. Later, after recovery from most of the injuries, he had finally dated several of those that had asked him out. It was soon clear that a couple of them were husband hunting, hoping to snag him in his loneliness. \n\nThe other was quite appealing, but Bill realized he could never satisfy her the way she deserved and desired, so he ended it after a few dates. That same concern had been with him since, so he had not dated anyone in over 18 years.\n\nBill had tried the common things to help make the day-to-day pain of Ann's loss go away. He had given away all her clothes, shoes, and costume jewelry. He sold her good jewelry and the few furniture pieces that held his strongest memories of her. The remaining things that tied him to her, he had donated. Except for the house itself with its roses, some photos of them, and souvenirs of their travels; all other physical items that reminded Bill of Ann, had been removed.\n\nThis expunging, plus time, had ridded him of the worst pain. Bill was down to loving memories and occasional longings. These he could control enough to keep himself out of depression. Happiness was a harder thing to sustain, so he often focused on mental exercises to improve his mood.\n\nOne of the best exercises was to fight his normally shy and reserved nature, and force himself to cheerfully talk to neighbors and strangers while out in his front yard. He was often there, given the frequent needs of the rose bushes. While this plan started out with him feeling animated, he eventually began to enjoy the interaction for its own sake. He no longer was he using it to avoid memories; he liked it just for the brief companionships it provided.\n\nToday, it was Melissa that was walking past the picket fence, which was the limit that Bill would let the rose bushes advance towards the sidewalk.\n\n\"Hey Mel, what is making you look so happy today?\" \n\nShe had been walking by, fairly regularly, for the last 5 years. He had seen her grow from a skinny 12-year old, to a petite, presumably 17-year old, young woman. They often chatted, for short periods.\n\n\"Hi Mr. Haerth!\" she chirped. She held her smile as she said, \"I got an 'A' on my science test.\" \n\nHer big, friendly smile was quite a contrast to the Goth look she seemed to be practicing with. The somber character of her long, black hair, black lipstick, and heavy black eye makeup, just looked wrong with a happy grin residing in the middle of it.\n\n\"Well, congratulations! Your hard work paid off. Are you aiming at a college degree in science?\" Bill asked, genuinely.\n\n\"Yeah, but I am only a junior, so college is well over a year away.\"\n\nHe responded, \"I was guessing you were 17, now?\"\n\n\"I am, but my birthday falls just after the cutoff, so I am about the oldest student in my class.\"\n\n\"I suppose that just gives you more time to decide what you want.\" \n\nShe replied, \"I guess. I wish I knew more of what I wanted...Well, I have to get home to mom. Maybe see you tomorrow, okay?\" \n\n\"Great. Bye Melissa.\" \n\n\"Mel, Please!\" \n\n\"Sure, sorry.\" \n\nBill had to wonder what had made Melissa turn toward the Goth style in this last year, and concurrently, want to be called just Mel. She had been filling out nicely with age, from the earlier gangly kid. Right when she seem to be perched to blossom into a rather cute, petite, slender young woman, the Goth style had arrived, and buried all the hard work nature had done to give her attractive qualities.\n\nThe following day, Mel came past Bill's house a little later than usual. He was relaxing on the porch, sitting in a chair. He waved as Mel looked his way. \n\nMel gave her usual, \"Hi Mr. Haerth.\" \n\nHe noted, as she stood at the gate post, that this time there was only a simple smile on her face, and no bounce in voice. \"Everything okay, today? You seem to have lost yesterday's cheerfulness?\"\n\n\"Yeah...well, sorta okay. Just not a great day.\"\n\n\"Anything I can do to help?\"\n\n\"Ummm...would you mind if I asked you a question?\"\n\n\"Ask away,\" he assured.\n\n\"I, kinda, don't want to ask it this loudly. Can I come up on the porch with you?\"\n\n\"You are welcome anytime, young lady. Can I get you some of my fresh lemonade, made fresh from my lemon tree in the backyard?\"\n\n\"Yes, please,\" she said, as she reached to the back of the gate post, and lifted the release.\n\n\"Here you are,\" he offered, as he came back out the front door, and handed her a tall glass, with a flex-jointed straw.\n\n\"I will help you anyway I can Melis...MEL,\" he added.\n\n\"You always have been nice to me, Mr. Haerth, and easy to talk with. On the porch here, you can call me Melissa, if it easier. Actually, I still like that name, but I just don't like the way some kids at school say it. My mother gave me that name because, in Greek mythology, there was a princess of Crete who learned how to gather honey, but she got changed into a bee. So my name means 'honey bee'!\"\n\n\"No wonder you always liked my roses.\"\n\n\"Very funny!\" she said with a sarcastic grin, \"Anyway, as you may know, I don't have a father. My mother has her problems, and is hard to talk to about some stuff. I DO love her, a bunch, but talking about some girl-boy things just...doesn't work...ya know?\"\n\n\"Sorry about your father's death, and mom's difficulties. I think I understand what you mean. It has been many years, like 45, since I was 17, so I hope I can offer something useful for a teen of today.\"\n\n\"No apology necessary about my dad. My mothe...sorry, he died...five years ago, and I wish it had been longer than that. If I hadn't needed him to create me, I would wish he had never been born.\"\n\n\"That has got to be tough having a father like that. He was that bad, was he?\"\n\n\"He was a terrible person, Mr. Haerth. Mom said he was better before I was born. But, then he just got worse every year after that, no matter what we tried to do.\"\n\n\"By the way,\" Bill said, \"most people pronounce my name incorrectly, as if were spelled \"H-a-r-t-h\", like you would pronounce the hearth of a fireplace. Actually, the first part is pronounced like 'Hair.' But, let's make it even easier, and you just call me Bill. Okay, Mel?\n\n\"Deal, Mr...Bill,\" she giggled.\n\nBill thought to himself, \"What a wonderful sound, a giggle, and so long since I remember hearing one.\"\n\n\"Alright,\" he said, \"I assume you came up here for another reason than to give me some family history?\"\n\nHer sparkle dimmed a bit, and she said, \"I thought, maybe, you could offer a little perspective...on boys?\"\n\n\"I will try. But, they will only be my well-aged opinions.\"\n\n\"Fine...Well,\" she continued, \"There is this boy at school that has been patting my butt as he walks by. Not all the time, but when the hallways are not so busy. When I turn to look at him, he quickly turns away, and keeps walking.\"\n\n\"He doesn't say anything?\"\n\n\"No. A couple times, I have said, 'HEY' or 'Don't,' but he never says anything.\"\n\n\"Do you know his name, or anything about his personality?\" Bill asked.\n\n\"I think his name is Ted, and maybe he is a little shy or weird, as I don't see him hang with the cool group, ya know?\"\n\n\"How does he dress?\"\n\n\"Usually, just regular jeans and collared, short-sleeve shirt,\" she explained.\n\n\"Okay, here is my guess,\" Bill sighed, \"Since he doesn't hang with the cool crowd, and has not followed up on his pats with any suggestive remarks, or anything at all, my guess is that he probably is shy. A guy that was trying to hit on you would probably either smile, wink, or say something, plus he would not avoid your eyes. Is this Ted someone you think you might like, or at least, not dislike?\"\n\n\"I don't know, really. I don't think I would dislike him, other than the patting.\"\n\n\"What you might try, then, is this; when you see him in a hallway, say 'Hi, Ted,' with that lovely smile you have. If he stops to talk to you, and isn't rude, then he probably likes you, and just learned a very inappropriate way to show it. If you can talk, and you seem to like him, then tell him that if he likes you, then he should just say so, or at least hand you a note if he is too shy. And, that patting your butt is not flattering, and is not appreciated. Oh, and thank him for talking to you.\"\n\nBill continued, \"This way, you show confidence, and have a way to both judge what he wants, and to communicate your preferred method of interaction, while discouraging the inappropriate method.\"\n\nWhat if he pats me first?\" she asked.\n\n\"Then call after him with his name, to try to get him to stop and talk to you. If he avoids you, and just keeps going, then I would say loudly, or even yell, 'Do it again, and I will report you!' and then do report him, if he does it again. One way or the other, his patting you has to stop, ASAP. Make sure you have told him to stop, and it is best if you do so publically, before you report him.\"\n\n\"Great ideas. Also is this smile I should use?\" she asked, smiled broadly.\n\nBill laughed, and said, \"Yes, that one, or its little brother! Your smile is one of your best assets.\"\n\nMel looked at her watch, and exclaimed, \"Oh, mom will be wondering where I am! I had better go. Thanks for the great advice, and delicious lemonade. Can I ask you other such questions, another day?\"\n\n\"You are welcome, anytime, Mel. If I am not outside, just knock or ring the doorbell.\"\n\nShe said \"Bye!\" as she closed the gate.\n\nHe found he enjoyed talking with her, quite a bit. To him, she was rather cute, had a nice sparkle in her eyes, a heartwarming smile, and a rather bubbly character, with mischievous bits of humor.\n\nThe next day, Mel stopped at his fence, and said, \"Thanks a lot...Bill...You were right. I talked to Ted, and he was just shy. He apologized, big time, for patting me. I think I made a friend, but I doubt it will be more than that. See you later!\"\n\n\"You are welcome, Mel. I am glad I could help,\" he said, as she waved and walked on.\n\nOver the following weeks, approaching summer vacation, she would always say \"Hi\" when she saw him outside, and once or twice a week, she would stop and ask his opinion on various aspects of student interactions & personalities.\n\nClose to the end of her junior year, Bill was startled by a knock on his door. He got up, and went to the door. He found Mel there, looking slightly concerned. He opened the door, plus the screen door, and said, \"Hello Mel.\"\n\nShe looked down, and said, \"I need your help.\"\n\n\"Anything, Mel. Would you like to come in?\"\n\nShe stepped in, and looked around, as this was her first time inside his home. She spoke up, \"Thanks. Nice home. Looks a little plain in here, though, if you don't mind me saying so.\"\n\n\"When I got rid of the things that reminded me of my late wife, Ann, I never bothered to add new things.\"\n\n\"You never told me you were married before. Is it okay to ask about her?\"\n\n\"As long as we do not talk about her for too long, I can handle it,\" he replied.\n\n\"What happened to her?\"\n\n\"Twenty...twenty-two years ago, actually, we were driving home from a friend's party. We hit a deer on the highway, north of town. Ann was killed, and I was in the hospital for quite a while. I have gotten rid of most of the things that reminded me of her, for my own sanity. But this is the same house we lived in, and the rose bushes were her second love.\"\n\n\"I'm sure you miss her a lot. Not like me and my dad,\" she responded, quietly.\n\n\"Yes,\" he replied, \"I think it is time for a new subject, before my eyes well up.\"\n\n\"Sorry,\" she added, \"Actually, my problem, today, is a want to know how to show a boy that I might be interested in him?\"\n\n\"Have you spoken to him before?\"\n\n\"No, I just see him at school, usually in the lunch room.\"\n\n\"So, you still eat lunch at school; not out with friends?\" he asked.\n\n\"Yeah. Mom doesn't have the money for me to go out to McD's, or somewhere, more than once or twice a month.\"\n\n\"Has this boy done anything to indicate that he is interested in you?\"\n\n\"Well, I catching him look at me, often, but then he turns his head away when I look at him.\"\n\n\"Have you tried flirting with him?\"\n\n\"Like, how?\"\n\n\"Do you give him 'The Eyes' to bait him?\" he asked.\n\n\"The eyes...huh?\" she responded, with a puzzled look.\n\n\"Oh, boy...we have some work to do. I may be 62 years old, but I don't think male-female flirting has changed that much. Hasn't your mom told you how to get a guy's interest?\"\n\n\"Nah...that is what mom cannot talk about,\" Mel added, while lowering her head.\"\n\n\"Don't Move!\" Bill said.\n\n\"Why?\"\n\n\"Keep your head where it is, but look up at me.\"\n\n\"What?\" she queried, while doing as he asked.\n\n\"Now give me a small grin, but no teeth.\"\n\nShe added a rather flat smirk.\n\n\"That is not a grin. I want you to look like someone is threatening to tickle you!\" he chided.\n\nThe edges of her mouth curled up, the twinkle in her eyes joining the smile.\n\n\"That...right there! Remember that. Head down to show you are a bit shy; eyes up to show you want to look at him; and that little, WARM smile. That says to the boy, 'I can't help but smile when I know you are looking at me.' Don't look at him for more than a second; look away for a few seconds, then look at him again.\"\n\n\"I feel silly!\" she said.\n\n\"Would you like a juicy cheeseburger, now?\" he inquired.\n\n\"Wow, yeah, thanks!\" she said, as her head came up, and a big smile appeared.\n\n\"And do you feel silly, now?\" he asked.\n\n\"No, why?\"\n\n\"You think it feels silly to show a boy you are interested in him, but you had no trouble showing me how exited you were about the hamburger.\"\n\n\"I am not sure I get it?\" she responded.\n\nBill explained, \"Your reaction to the hamburger, was genuine. It was enthusiastic, and fully positive. There was no doubt that you wanted it. Flirting is more subtle, but you need to make your reaction appear genuine, and positive, even if you feel you are acting. It is your way to tell him that, yes, you do want to meet him.\"\n\n\"Well, that is, unless the boy is too shy to act upon an obvious flirt,\" he added. \"Now, do the 'The Eyes' again!\"\n\nMel gave a small sigh, lowered her head, looked up and grinned.\n\n\"Remember the tickling! ...Yes, that's it. Can you feel the smile in your eyes?\"\n\n\"Sorta\"\n\n\"You have got to have your large eyes involved in the smile. It is you ace in the hole! You may not have runway model looks, but you have a killer sparkle in your big eyes when your smile reaches them. Added to your great smile, they are your best ammunition to entice boys, sway teachers, and even influence adults.\"\n\n\"You really think so?\" she asked, with a bit of true shyness, her head still down.\n\n\"Yup, and here is lesson #2. Keep your head down, where it is, but keep your eyes on me as I move to your right...Now, can you still see that I am looking at you?\"\n\n\"I think so.\"\n\n\"Good. That is your second tool. If the boy is off to your side, don't look right at him. Try to keep your face straight ahead, and use your peripheral vision and glances, to see the boy. Add your killer grin. So, head down, side glances, and add the grin,\" Bill instructed.\n\n\"Alright,\" she said as she sucked in a breath, \"Like this?\" She lowered her head, turned her eyes, and added a grin, which she adjusted to get it right.\n\n\"You got me! I am melting where I stand!\"\n\n\"Bill!\" she laughed and blushed, \"Thanks...So do I get the hamburger, now?\"\n\n\"Won't your mom be making you dinner?\"\n\n\"Nah, tonight is PTA, and she left me a frozen meal. She won't be home for a couple hours or more.\"\n\n\"Then burger it is,\" Bill said with a sparkle. As they were going out to the garage, he was asking, \"Single, Double, Jalapenos, Fries or Tots...?\"\n\nWhen they got to Bill's favorite burger joint, \"The Burger Joynt,\" they went inside. Bill ordered for them, and they sat down.\n\nHe asked, \"Mel, may I ask you a personal question?\"\n\n\"Sure, Bill.\"\n\n\"Well, I have been talking to you for, something like, five years, when you walk by my house. I have watched you grow, and I really expected this year to be the year you blossomed into a young woman. But you came out with this dark Goth style, or whatever is called. Why? It doesn't seem to fit your cheerful personality.\"\n\n\"I don't know...\"\n\n\"No, my Mel is a smart girl. You know there is a reason. Just take your time, think, and tell me...Oh, after I get our food order though; they just called our number. Right back,\" he said, as he was rising.\n\nWhen he returned and set the food down, she did not reach for it right away. Bill looked at her, seeing her looking down, with a couple tears coming down her cheeks, making her heavy mascara run.\n\nHe said, \"You don't have to tell me about the Goth thing, if it is that hard?\"\n\n\"...my...Mel...?\" she sniffed.\n\nBill was puzzled by her reactions and the question. \"Well...yes. I feel like we are friends, now...Is that a problem?\"\n\nMelissa shook her head, while daubing her tears with the napkin she had pulled from the dispenser on the table. She just wanted to escape from the strength of these emotions she felt, while at the same time, she wanted Bill to hold her tight, so she could really cry. About what, she was not sure.\n\n\"Take all the time you need, my dear,\" Bill said, trying to sound comforting.\n\nHe added, \"You still want to eat, or should we take it back to my house?\"\n\nShe sniffed out a \"Let's go.\" \n\nBill picked up their meals, and went to the counter to get the food put in take-out bags, plus the drink holder. Melissa came up to him, and they walked outside. As they started towards his car, and balancing the food order, he tentatively put his arm around her shoulder. She leaned into him.\n\nAs he was driving the few miles back to his house, he finally asked, \"Are you going to be okay?\"\n\nShe slowly replied, \"Sorry for the tears...My father beat my mother...many times. He tried to attack me when I was twelve. I guess I just got too emotional when you called me 'yours.' Not something I have heard before, from a man, you know?\"\n\n\"Well then,\" he said, \"I claim you. You are my Melissa now!\"\n\nMel nodded slowly, while looking away from him, out the window, and drying more tears.\n\nWhen they got back to Bill's house, she excused herself to clean up.\n\nHe spoke up, \"Can I ask a favor?\"\n\n\"Yeah...What?\"\n\n\"For me: Would you wash that make up off, and take off the studded dog collar?\"\n\nShe smiled and nodded.\n\nWaiting for her to come back, he set out two TV trays, and set them side-by-side in front of the couch. When she joined him, she removed her leather jacket, and sat behind the tray that he had set up with her food on it.",
        "\"I think the crying made me hungry,\" she said, with a mix of a chuckle and sniffle. She unwrapped her cheeseburger, took a bite, and added two French fries to her already full mouth.\n\n\"I think your crying made me hungry, too,\" he said, smiling. She chuckled, nearly choking with her full mouth.\n\nThey worked through most of their food, when he asked, \"You want to watch some TV?\"\n\nShe said \"Sure,\" as she twiddled her last, long French fry through some ketchup.\n\n\"Here,\" he said, handing her the cable box control, \"you choose what we watch.\"\n\nShe picked a just-started Hallmark Romance channel movie (a channel known for the predictably similar feel-good scripts).\n\nBill saw that they were getting a glare off the flat screen TV, from the setting sun. He reached back behind them to the table lamp, and switched it off to improve the TV's contrast. Before he could bring his arm back down, Mel leaned against him, and tucked her feet up beside her on the couch. Surprised, and unsure how to respond, he left his arm on top of the couch, even though it was not in the most comfortable position.\n\nThey stayed in those positions for the whole movie, with Bill quiet and Mel occasionally uttering encouragement, or admonishments, to the female lead in the movie.\n\nWhen the movie was over, she said, \"I gotta go. This was great. Thanks so much for the food, too. Maybe we can do it again?\"\n\n\"It would be my delight, my dear,\" he said, adding the last two words quite intentionally, this time.\n\nShe put on her jacket, with her dog collar in the pocket. She walked to the door, and dropped her head, and gave him a side glance with the correct grin.\n\nHe said, \"Be careful with that at school. You could make some boy walk into a wall!\" \n\nShe giggled and left.\n\nBill was rather conflicted about what he thought had happened this evening. It seemed most likely, to him, that he had become something of a good dad figure for her. He and Ann never had children, and he never would. However, there was something about Mel that he knew needed his attention.\n\nThe following day, Mel came by and found Bill on the porch. He waved her up.\n\nBill noticed she was wearing her black leather jacket and boots, but no studded dog collar or wrist bands, and no black fingernails, lipstick, or mascara. Her hair was in a simple ponytail. He put a questioning look on his face.\n\nMel responded to the look, \"I never answered your question, last night. I have thought about it, a lot.\"\n\n\"It seems you have made some decisions, given the change in your appearance. And I think it's a definite improvement, by the way,\" he said.\n\n\"We, mom & I, don't have much money, so most of my clothes came from the thrift store. I was getting a lot of nasty teasing last year for my old clothes. I was angry at the kids who picked on me, and I just wanted to hide. Goth was a way to feel invisible. If I am dressed Goth and get teased by the other kids, it doesn't seem so personal, you know?\"\n\n\"I can understand that, but has something changed in your thinking?\" he asked.\n\nMel said, \"The Gothies, as our local group likes to call themselves, are mostly a bunch of downers. It was already depressing me. I have tried flirting at school, but the Goth bit has gotten in the way of that, too.\"\"\n\nShe looked at him, \"But, it is really you that I wanted to thank. It wasn't just you asking me why I was Goth, but the way you treat me when we talk, and all the good advice you have given me. You have made me more confident and happier.\"\n\nHe said, \"Well, thank you. I will add another piece of advice; no matter what you are wearing, or whatever doubts you may have about yourself, never let it show. Always walk with confidence, stand erect, and move with grace; show the world you are quite happy with exactly who you are. It is quite attractive to the right kind of men. Do you have any tall girls at school that slouch down?\n\n\"Yeah. Is that what you mean? They are not happy with themselves?\" Mel said.\n\n\"Yes\" Bill responded, \"They do more harm by looking ashamed of being taller than the boys, by slouching, than they gain by not sticking up so much. If you want to stay Goth, or whatever style you choose, make sure you 'own it' when you wear it. Come out of hiding showing strength, and have the confidence to say 'I don't care what anyone thinks of me, because I KNOW I am great person! If they don't see it, it is there loss.' So, now you have the summer to create a new you!\"\n\n\"Maybe\" she replied, \"My mom just got laid off at the plant. The company says it will only be a month or two, until they get all the new equipment installed. So mom wants to go see her sister in Kansas. We may stay there until the company calls mom back to work. We leave real early on Monday, because it is a 9-hour drive out West. \n\nShe went on, \"In case I don't get to see you for couple months, I wanted to make sure I thanked you for everything. You are a good friend, and you have been more like a dad in these last few months than my real dad was in his whole life.\"\n\n\"Well, that is quite an honor, you are entirely welcome. I will miss you and hope to see you by mid-summer,\" Bill added quietly.\n\n\"I will miss you too. Hope we come back sooner...Bye.\" She got up, walked over to Bill, squeezed his hand, and left.\n\nHe watched her walk away, while he wiggled his fingers and thought of her hand on his.\n\n------\n\nIt had been about a month since Melissa had left. A month in which he had not realized he would miss her as much as he did. The thoughts of the sparkle in her eyes, and that wonderful smile, were with him so often. Sometimes, Bill even had a memory of Ann, but, instead, pictured Melissa (without the Goth makeup).\n\nIt was mid-June, when the porch creaked and he looked up to see the mailman walking out of Bill's fence gate. He opened the door, and reached around to get the mail out of the wall-mounted mail box. He thumbed through the bills & ads, but stopped when he found a nearly square, colored envelope that had a return address from Kansas. He opened the envelope up, and read the card. He sat down on the porch and smiled, with his eyes starting to well up. It was a sweet Father's Day card, and it was signed \"Love, Melissa.\"\n\n-----\n\nIt had now been two and half months since Melissa had left, with only a week until school started up again. Bill was tending to Ann's rose bushes by adding some soil, when he saw a pair of brown sandals stop outside the fence. He also noticed the light blue painted toe nails.\n\n\"Hey stranger!\" a familiar voice rang out. He looked up to see Mel...no...not Mel, but Melissa. He stood and looked at her, up & down. She was wearing a simple, but cute, light blue sundress with small daisies on it. She had on a bead necklace and matching bracelet. Her straight, shoulder length hair was a honey brown, and she wore a light pink lipstick.\n\n\"Well, hello beautiful. My, we have certainly changed! Come on in,\" he said as he opened the gate. \n\nShe stepped in, paused and looked at him with a strained smile, and then threw her arms around him, while her head rested on his chest. \n\n\"I'm so glad I am back and you are here,\" she said, speaking into the pocket of his shirt.\n\nBefore he even realized it, his hand was stroking Ann's hair. When she pulled back and looked up at him, he suddenly pulled his hand away, as he saw Melissa's face. \"I'm sorry,\" he said, \"that was out of line.\"\n\n\"Why,\" she asked, \"I thought if felt really nice?\"\n\n\"I ...I just forgot myself for a moment, and thought of my late wife.\"\n\n\"Ann, right? Did she like it when you stroked her hair?\" Melissa inquired.\n\n\"It was one of her favorite things.\"\n\n\"I can understand. I think it is one my favorites, too. Please, do it again sometime?\" she asked, with a big smile.\n\n\"Well...uh...we'll see about that,\" he slowly responded, \"Want to come in?\"\n\n\"Do I get some of your world famous lemonade?\"\n\n\"Absolutely,\" he replied, chuckling.\n\nMelissa sat next to Bill on the couch, and told him all about her Kansas trip: How her aunt had made her blue dress, and a couple more, for her; how her younger cousins, two boys, had a crush on her, and how the small town had just one movie theater, which had only one screen.\n\n\"My aunt, mom's sister,\" Melissa added, \"spent a lot of time talking to my mom. It seems to have helped mom, as she is more cheerful, and I can talk about some things more easily with her. But not, you know, boys, dating, or sex.\"\n\nBefore Bill could comment, she continued, \"And, I tried 'The Eyes' on some boys. Those Kansas boys did not know what hit them!\" she giggled infectiously. \"One even took me to the movies to see Spiderman. He held my hand through the whole second half of the movie after the popcorn was gone. He tried to kiss me but I didn't let him.\"\n\nShe whispered to Bill, \"It didn't feel quite right...I wasn't sure I liked him that much!\"\n\nMelissa continued, \"Well, I guess with dad being such a bad man, then that is why mom has told me to not trust men, to watch out when they try to kiss you, and to not let them get you alone.\"\n\n\"That was wise to trust your instincts that way,\" he told her.\n\n\"Yeah, that is kinda what I thought, too. But, what if I want to be kissed? Should I wait, or just kiss him? Say, if I wanted to kiss you?\"\n\nBill was not sure he had heard that right! \n\nHe stumbled through his answer. \"It...well...it would not be a...fatherly thing...to kiss one's daughter, that way. I...uh...think you should be able to figure that out for yourself...who should kiss who first. It is very...situation dependent.\"\n\nHe added, \"Have you finished your lemonade?\"\n\n\"Yes\" Melissa said. She looked at him curiously, as he hurriedly took her glass, excused himself, and quickly went to the kitchen.\n\nWhen Bill finally returned, he said, \"I have a couple errands I need to run, can I drop you at home?\"\n\n\"No thanks, I like to walk,\" she replied, feeling a little confused, \"Can I stop by again, soon?\"\n\n\"Of course you can, Melissa.\"\n\nShe waved as she went out the door.\n\nBill sat down, questioning what was happening between them. He thought she needed a father figure. Had he somehow encouraged her to think of him in other ways? Did he actually want her to see him as a man first? Had he fooled himself?\n\n-------\n\nA couple days later, Bill had just used the bathroom and was going to go back out to the front yard. He looked through the screen door, and saw Melissa smiling and waving, while wearing a yellow bikini top, with a towel around her waist, and flip flop shoes. Her hair hung down wet. \n\nBefore he could even respond to invite her in, she opened the gate and bounded up the steps. She flung the screen door open, and ran towards him, losing the towel as she came. Melissa grabbed him in a bouncing hug, while she squealed, \"I Got WHISTLED AT! ... I used 'The Eyes' and he wants to call me!\"\n\n\"That is great, sweetheart!?\" he said, fighting choking. With her bouncing, he had instinctively put his hands on her bare waist. Suddenly, he recognized that his hands were feeling her smooth, soft skin pass through them, with the slight impressions of her ribs adding to the sensations.\n\nTears started down his cheeks. Twenty years without touching a woman suddenly burst into his senses. He tried to turn his head as she pulled back, and he let go, but she saw the tears.\n\n\"Bill!?\" she exclaimed, \"What is the matter? ... Please?\"\n\n\"I am sorry,\" he said, \"I do not mean to worry you.\"\n\n\"But, why the tears?\"\n\n\"It was just...well...a flood of emotions, and memories...as I have not touched a woman's skin in about 20 years, or so.\"\n\n\"Would you feel better if I let you touch me again, because I liked it, too?\"\n\n\"No...I can't...you are only 17.\"\n\n\"But, I turned 18 yesterday. Didn't I tell you? Does that make it okay for you to touch me?\"\n\n\"No, my wonderful girl. Anyway,\" Bill said, trying to redirect the conversation, \"do you even realize how much you have grown this summer, your looks and personality?\"\n\nShe took his hand and led him to sit on the couch. He dabbed his eyes with a tissue. Melissa went and picked up her towel, and a small beach bag she had also dropped. She moved to stand in front of him and, trying to lighten the mood, giggled, \"I do fit into a bikini alright, don't I?\"\n\n\"Oh yes,\" he chuckled, \"You 'own it'. I can see why you got whistled at. Is your hair colored now?\"\n\n\"No, this is my natural color. The black was a semi-permanent that is gone in a couple months.\"\n\n\"It is a beautiful color. It is so good to see that Melissa is not hiding anymore.\"\n\nShe sat down next to him. \"Kansas helped, as I was away from all the kids that knew me, and teased me. I tried to just be me, with no hiding behind Goth clothes. Having my mother more cheerful, sure helped. And, of course, I thank you for all your help. Melissa is back!\"\n\nShe went on, \"Can we watch TV? I told my mom I would be stopping here, and my 'new' mom said it was okay. No questions...what a shock! She did ask me to call to let her know if I would be here awhile. So, TV?\"\n\n\"Sure,\" he said, \"You choose again.\"\n\n\"Can I use your phone?\"\n\n\"No cell phone?\" he asked.\n\n\"No, too many bucks.\"\n\n\"The phone is on the desk. I will get some snacks.\" He heard her making the call as he returned with the chips, Oreos, and root beer.\n\n\"All set,\" she said, as she hung up.\n\nMelissa, true to form, chose a chick-flick. They both nibbled & sipped on the snacks, until they had had enough. The movie had run for about a half an hour, and now the two love interests in the movie had finally stopped arguing about everything, when they (of course) realized they were attracted to each other. The misunderstanding and subsequent cheesy drama, with the tearful resolution, would surely follow, he thought.\n\nBill noted Melissa picking up her now-dry towel and folding it several times. She then startled him by putting the towel on his lap, and laying down on the couch with the towel as her pillow, for her still-damp hair.\n\nHe felt a lovely contentment, and reflexively placed his hand on her bare side, occasionally gently stroking it. She kept up her comments to the movie's characters, but added some happy humming and wiggled, when he stroked her. He thought he may have crossed the line, but thought he could bend it just a little, since it pleased her this much, and because he knew he would never, really take advantage of her.\n\nWhen the movie was over, she said that she should go. She thanked him, and reached up on her toes and kissed his cheek. \"Is that acceptable, for a now 18 year old?\"\n\n\"I suppose I will let it pass. Good evening, and tell your mother 'Thank you'.\"\n\n-------\n\nA few days later, Melissa stopped by, dressed simply in denim cutoffs, and a tight t-shirt, and flip flops. She found Bill on the porch, where she joined him, sitting opposite, with her legs crossed under her knees.\n\n\"Afternoon, Mel...issa,\" he said, clumsily.\n\nMelissa smiled at his stumble, \"Afternoon to you, and you can call me whatever you want. Today, I was hoping you could help me with something...kinda embarrassing.\"\n\n\"I will do the best I can, honey bee.\"\n\nShe chuckled, at the reference to the meaning of her name.\n\n\"The boy from the pool, Rich, wants to take me out tomorrow night. Mom knows about that.\"\n\n\"Sounds like you are interested in him?\" he responded.\n\n\"I think he is funny, and he is so cute. I feel kind of silly around him.\"\n\n\"That sounds like you are definitely interested in him.\"\n\n\"But he wants to take me to a drive-in movie. Mom doesn't know that part. I talked to a couple of my girlfriends at school, and they were both excited that I was going to get my V-card punched. I don't know if I am ready for that, any of that. What do you think?\"\n\n\"Wow,\" he replied.\n\n\"That bad?\"\n\n\"Enough. Okay, my unvarnished opinion is that you are not ready for that. And, I assume 'V-card' refers to your virginity?\" he asked, in a concerned manner.\n\n\"Yup, that 'V'. \n\n\"May I suggest we go inside, so this conversation is not so public?\"\n\n\"I would like that,\" she said, as she got up.\n\nThey went in, and sat on the couch, facing each other.\n\n\"He started, \"Okay, I am going to very blunt about this, so I apologize in advance. Just know that I am trying to help.\"\n\n\"Go for it,\" she replied, promptly.\n\n\"First of all, I take it you don't think your mother can talk about this?\"\n\n\"Not even 'new' mom. The few things she has told me about the way dad treated her, that way, is that she never enjoyed it, and later, he was just brutal. The memories are too hard for her.\" \n\n\"Well, I am certainly sorry for your mom, and how it affects you,\" he replied, \"And, school has taught you about STD's, the basic physical functions on sex, and the potential for pregnancy?\"\n\n\"Yes, school covered those. Plus, mom had me start on birth control just before I turned 16. I, obviously, haven't needed it yet, but mom feels better that I have it.\"\n\n\"All right, Bill started, \"A guy that wants to take you to a first date at a drive-in movie, is either very inept, which I doubt, or very likely, just wants to get you in the back seat to fuck you.\" \n\nShe jumped slightly at the four letter word, which he saw. She nodded for him to go on.\n\nHe resumed, \"My instincts tell me this guy is charming, suspects you are a virgin, and that is a big part of the reason he is interested in dating you.\"\n\n\"But, he seems nice enough. Why do you think he is that bad?\" she asked, with a concerned tone.\n\n\"Okay, let's back up some more. First, at my age, I have all those years of seeing many men behave badly towards women. But, certainly not all of men are like that. Hopefully, you want a man who will be concerned about what you want, what makes you feel good, and cares about your happiness. Too many men know how to play a young woman, so that the guy can just put his dick in her. After that, the hunt is over, and they are gone. I suspect your potential date to be one of these.\"\n\n\"I vote for the caring ones!\" she chirped.\n\n\"Good, and there are still a good number of caring ones out there. A nice, good man is not going to invite you, on a first date, to a place best known for teen sex. He will invite you to someplace public, so that you are more comfortable. Among these 'other' men may be some nerds & geeks, but at least look for kindness to start with. But, even among the nice and polite men, some may be less interesting after you have had sex with them.\"\n\n\"How so?\" she asked, with a real look of curiosity.\n\n\"Sex may be great for how it feels, but it is, also, an excellent tool to judge people's character. Not only are you physically naked together, but the primal character makes their personalities naked, too. Someone can seem nice, but in bed, they show little interest in pleasing you. I realize I am not sounding too encouraging, but when you find someone caring to make love with, it is another dimension beyond just fucking. And when you really love someone, it is even another level above that.\"\n\n\"Really, wow!\" she exclaimed\n\n\"I would want you to at least find someone caring to first experience sex with. Then you will understand, much better, what is involved, so that you recognize the less caring ones more easily. Also, some men can even be very skilled at the pleasures of sex, without really providing the kind of closeness that can offer you so much satisfaction, before and after sex. Don't mistake skill for caring.\"\n\n\"This is actually is sounding complicated.\" she said.\n\n\"It is complicated. But it can be something so wonderfully sensual, satisfying, and pleasurable, that it deserves to be complicated. People are complicated, and they bring those complications to the bed. I am just trying to give you some idea of what you may be stepping into, when you open that 'V' door, and hope you can start off with the best choice and a great experience.\"",
        "\"That is a lot to think about,\" she exclaimed, \"Well, I think I had better go see how mom is doing, and think about what you have told me, and what I want to do.\"\n\nBill said, \"I still feel I did not explain it well enough. Sex is such a strong physical experience that is hard for words to give you a thorough perspective. I hope I have helped.\"\n\n\"You did...OH! I almost forgot, I wanted to ask you if you would take me to dinner, you know, as my belated-birthday present? Would that be okay? I mean it will not be a 'date,\" she said, as she rolled her eyes.\n\n\"If your mother does not object, I would be delighted to take my lovely lady out for a nice birthday evening.\n\n\"Mom has already said 'Yes', so it's a...agreed,\" she chimed happily.\n\n\"Then, how about in two days; Friday evening?\"\n\n\"That would be super!\" she beamed.\n\n\"What time do you get out of school, Friday?\" he asked.\n\n\"About 3:30\"\n\n\"Will you stop by here, on your way home from school, Friday? I will have a surprise for you.\"\n\n\"Sure, thanks!\"\n\n--------\n\n\"Bill?\" Mel called through the screen door on Friday.\n\n\"Hello Birthday Girl. Come on in,\" she heard him announce, from the back of the house.\n\nBill came walking towards her, as she entered. \"Happy late birthday!\" he said again, and this time he opened his arms to offer her a hug. She happily accepted.\n\n\"Okay,\" he started, \"what kind of food would you like to have this evening?\"\n\n\"Gee, a choice. I like Italian, and of course American and Mexican. I have heard French is delicious, but have never had it.\"\n\n\"Want to try French?\" he asked.\n\n\"Sure, but aren't those fancy restaurants? I am not sure I have any clothes that are fancy enough?\n\n\"That thought crossed my mind, too,\" he said, \"Follow me.\"\n\nShe followed him back into the house, a part she had never seen, and went into a bedroom.\n\n\"Is this your bedroom?\" she asked, as she looked around.\n\n\"Just the guest room. Now, I have always thought that you looked to be the same size as my...Ann. So, I hope these fit.\" He reached under the bed, and pulled out several boxes. \n\nOne flat, white box had a decorative bow and a card. Melissa looked at him, smiling, and then turned to read the card. Her smile grew. She slid the lid off, and exclaimed, \"Bill, it is beautiful!\"\n\nShe lifted the dress out of the box, and held in front of her, facing the mirrored closet doors. The dress was a light yellow, done in a thin, flowing fabric, and had a few sequin accents. She set the dress down, which is when Bill noticed he had left the price tag on it.\n\nShe opened another box, and found matching shoes with short heels. She slipped off her sandals, sat on the edge of the bed, and put on the shoes.\n\n\"They fit, and they are perfect!\"\n\nShe stood, crossed her arms across herself, and lifted off her sun dress.\n\n\"Modesty, please, young lady!\" Bill exclaimed.\n\n\"Geez Bill. Don't be such an 'Old Man'! You saw me in my bikini, which is smaller than my bra and panties...Now zip me up,\" she mockingly commanded as she dropped the dress down her arms and over her head.\n\nHe gingerly pulled up the zipper, as she bent her pretty neck forward and held her hair to the side. He also snatched off the price tag.\n\n\"Wow!\" she said, followed by a long pause as she looked in the mirror. \"Is that really me? I have never had anything nice like this!\"\n\nShe opened another box, and it was a matching clutch purse. \"Double Wow!\" she exclaimed. She turned to face him. \"How do I look for our da...evening out?\"\n\n\"Wonderful,\" he replied, warmly, \"You will be the prettiest lady there tonight.\"\n\nShe dropped her head, and looked up with \"The Eyes.\" \n\nBill smiled, \"Save that for the young men, Miss Melissa Traynor!\"\n\n\"This will be a wonderful night. Thank you, THANK YOU!\" she almost sang.\n\n\"Can I pick you up at 6:30?\"\n\n\"Great...Just honk when you get there, and I will come out.\"\n\n\"Honking is rude,\" he said, \"I will call you, and you can come out.\" He guessed she did not want him coming to her front door.\n\n\"Do you have my number?\" she asked.\n\n\"I think so,\" he said, pulling out his cell phone. He looked at it, and touched the screen.\n\nMelissa's new purse started chiming. \"What?\" she said, looking at Bill, curiously. She opened the purse, and pulled out a cell phone from the fitted pocket. She looked at him, and answered the phone, cautiously, \"Hello?\"\n\nShe saw Bill's lips move, but heard his voice in the phone, \"It is yours; all paid for, and with an unlimited plan.\"\n\nHe saw a tear run down her cheek. He reached out and gently wiped away the tear, as she said, with a sniff, \"But...but...\"\n\n\"Happy Birthday, my dear,\" he interrupted, \"Now, you better get home and get ready. Need help with the boxes?\n\n\"No\" she sniffed, \"they will be easy to carry. You know where I live? Oh... can you help me put your number in this phone?\"\n\n\"The number is already in there,\" he said, \"and, yes, I know where you live, just a couple blocks north. I will wait IN THE LIVING ROOM, while you change your clothes.\"\n\nShe quickly turned her back to him, and he paused to pull her zipper down, and then he left the room.\n\n\"Prude,\" she teasingly shouted behind him.\n\n\"Out here,\" he replied, playfully.\n\nWhen she had changed, and had her presents gathered, she came out and stopped in front of him, as he stood up.\n\n\"Really, thank you,\" she said, and startled him when she quickly kissed his lips. \"I'm 18 now!\" she pronounced as she pranced out the door.\n\n\"I didn't say that 18 was old enough for me!\" he chided. He stood in the doorway and watched her walk up the block, as he gently touched his lips.\n\nAbout 20 minutes later, his cell phone rang. \"Hello?\"\n\n\"Mom loves what you gave me, and she told me to thank you, so, so much. She was crying, too. See you at 6:30. Bye!\n\n\"Bye\" he replied, smiling to himself.\n\n--------\n\nAt 6:28 PM, Bill called Melissa's new phone as he stood by his car. The front door opened and out she came in her new clothes, her hair pulled back and wearing more makeup (well, other than Goth) than he had ever seen on her. The facial transformation was very flattering to her big eyes. He could also see the curtains of the front window had moved back, as she approached his car.\n\n\"You look lovely, Miss Traynor,\" he said, as he opened her door.\n\n\"Thank you, Mr. Haerth,\" she said, smiling at the extra politeness she put into saying it.\n\nHe went around and got in the driver's seat.\n\n\"Do you feel older?\" he asked, with a smile.\n\n\"Actually, quite a bit,\" she replied.\n\nHe let her choose a radio station as they drove to the restaurant.\n\nWhen they got to the French restaurant, the valet opened her door for her. She stepped out, but hesitated for a moment, until she realized that Bill's elbow was bent out for her to hold onto, like in the old movies.\n\nThe dinner was wonderful for her, enjoying all the rich, new flavors, and the sparkling apple cider they shared. Bill quietly guided her on some of the manners of eating in a fine restaurant. She had a smile on her face the whole time, and put her hand on his as often as she could.\n\nOnce the valet had brought Bill's car back, and they were seated, she asked quietly, \"Can we go back to your house...you know...and watch some TV?\"\n\nHe glanced at her, and then put his eyes back to driving duty, \"As long as you behave yourself, young lady.\"\n\n\"I am only 18 once!\"\n\n\"That is what I am afraid of,\" he replied.\n\nWhen they got back to his house, he said that he wanted to use the bathroom, and hang up his sport coat.\n\nWhen he came out to the living room, he found that she had turned on the TV (to a chick flick), had closed the curtains, and brought herself a Mug root beer. Plus, she had set out a Fat Tire Belgian Ale for him, from his fridge.\n\n\"A beer?\" he asked her, as she sat sideways on the couch.\n\n\"Come on,\" she replied, \"Because of me, all you had was sparkling apple cider all night. Just have one beer, and let me have one sip, so I can feel like I got away with something!\"\n\nHe sighed, and sat down.\n\n\"The movie just started and you didn't miss anything important,\" she added.\n\nShe moved over and snuggled under his arm. He mentally flinched at her getting so close, but the contact felt so good, he convinced himself to bend the line, yet a little further.\n\nShe rested a hand on his thigh. He bent his arm that was behind her and played with a few hairs around her face, those which had come loose from the clip at the back of her head. She looked up at his face. He looked down at her with a small smile, and turned back to watch the TV movie. She snuggled tighter and shifted her hand so that she placed her palm over his thigh.\n\nThe next time he went to bring the beer to his lips, she took her hand off of his thigh, and put her hand around his beer bottle. \"My turn,\" she smirked.\n\n\"Just one...and No Chugging,\" he replied, as he released the bottle.\n\nShe took a long sip, and handed him the bottle, back.\n\n\"Hmm?\" she said, \"Heavy, rich. Not sure if I like beer.\"\n\n\"It can be an acquired taste.\"\n\n\"Like some men?\" she said, with a big smile.\n\n\"Are you practicing your flirting again?\"\n\n\"Is it always practice?\"\n\n\"Behave,\" he answered.\n\nShe giggled, and proclaimed, \"I have to use the lady's room.\"\n\nBill moved his arm so she could get up.\n\nShe walked off as a commercial for indigestion prevention was on, for the third time during this movie.\n\nBill had his eyes on the TV when Melissa passed through his view. He was startled that she was not wearing the yellow dress he had bought her, nor any shoes. She had on his bathrobe, which she held closed, but had not tied closed.\n\n\"I did not want to damage my beautiful dress, so I laid it out on the bed in the guest bedroom.\"\n\nThis time, she laid down, and put her head on his thigh. He saw her hair fall over her face, before she swept it back. \"She had taken the clip out of her hair, too\" he realized.\n\nHe started to run his fingers over and through her lovely, smooth hair. She purred quietly and wiggled closer.\n\n\"Happy Birthday,\" he said.\n\n\"Hmmmmm...,\" she murmured.\n\n\"Behave,\" he whispered.\n\nWhen the next commercial break arrived, she rolled onto her back to look up and smile at him. \n\nHe stifled a gasp when he saw that the bathrobe had slid open, and she was naked underneath, one nipple staring at him.\n\nHe reached out, and started closing the front of the robe, while saying, \"That is not behaving, Miss Traynor.\"\n\nShe stopped his hand, pulled on the robe in his hand until his grip relented, and then she placed his hand on her ribs.\n\n\"Pleeeaaase...,\" she asked softly.\n\nBill was battling within himself to find a satisfactory response, when she moved his hand up, fully covering her small breast.\n\n\"This isn't right,\" he said, as he slowly withdrew his hand from her delicately soft breast, feeling the small nipple harden as his palm traveled across it.\n\n\"I forgot to tell you,\" Melissa said, \"Rich, the boy who wanted to take me to the drive-in last night. I called him and asked him if we could go to dinner instead. He apologized that he had just remembered something he had to do that night and couldn't make our date. He said he would call me. I told him not to bother...You were right...and I am still a virgin.\"\n\nMelissa sat up, stood, and then moved to straddle his legs on the couch, as she sat on her knees. The bathrobe was open all down front.\n\nHe looked at her face, searching to see the girl he treated as a daughter, instead of the slim, naked young woman, who had her small patch of matching honey-brown hair perched on his lap.\n\n\"A father does not do this,\" his voice quavered.\n\nShe looked at his face, with tears welling in his eyes. She placed her hands on his cheeks and used her thumbs to wipe away the forming tears. Her big eyes looked right into his.\n\n\"I told you I had a lot to think about after our 'sex' talk, and I have decided. \"You were also right...that my first time should be with someone caring. You, William Haerth, are the most caring, kind, decent man I have ever known. In the time we have spent together, you have been more of a father than I ever dreamed I could have...you know?\" She paused to wipe away his tears, then her own.\n\n\"But, you are not my father, in the way that would make this wrong. You are my friend and my guide, and I want you to guide me in this, too.\"\n\nHe saw her head tilt and her lips move towards his. His mind pleaded for her to stop, but his lips greeted hers contentedly. Her lips were so soft; her hair smelled so lovely, with a hint of floral; her hands felt just so right, as they cupped his cheeks, while her lips gently twisted against his. One of his hands went to her bare waist.\n\nHe could not open his eyes to look at her. He did not know whom he wanted to see when he opened them. Was it Melissa or Ann? Then he remembered one of Ann's favorite sayings, \"Never wait for love to catch up, just run to catch it.\" If he did take Melissa to his bed, as she was asking, but instead, thought of her as Ann, then that would be the real betrayal, not that of his fatherly role.\n\n\"Anybody in there?\" Melissa queried gently.\n\nHearing her voice, Bill opened his eyes slowly and nodded. He looked in the hazel eyes, the same color as Ann's eyes had been. He said to himself, \"These are Melissa's eyes, this is her face. It is Melissa that is here, now.\" He moved his head forward and kissed her, tentatively. \n\nAfter absorbing a long moment of his touch, she pulled back and looked into his eyes, and smiled. \"So, 18 is okay, then?\" \n\nHer look was puzzled when he replied, \"Yes...and no.\" \n\nHe placed his full palm around the other side of her waist, and sighed, \"I can't do all that you want.\"\n\n\"But I am saying it is okay, you can be my first,\" she sweetly replied.\n\n\"Melissa, you are sitting on my lap, and I assume you know enough that you should be able feel my erection under you?\"\n\n\"Yes, I know, but...,\" she suddenly realized that she felt nothing there.\n\n\"Even if there were nothing more in the world that I wanted to do, I cannot 'punch your V-card' for you.\"\n\nShe watched his fallen face, looking for answers.\n\nHe took a deep breath, and started, \"I never believed we would be at this moment, or I would have told you sooner. The accident that killed my...killed Ann...also damaged me there, and I cannot have any erection, nor can any medical option work for me.\"\n\n\"Can you feel anything there?\" she asked, concerned for him.\n\n\"About the same as you touching my arm, but there is almost no, further, erotic response.\"\n\nHe searched for her reaction, as her thoughts worked behind her eyes. Her response came as she put her hands behind his head, gripped his hair, and kissed him hard. \n\nIt was her first hard kiss, and she reveled in the new sensations it created.\n\nHer breathing was lightly elevated as she looked into his eyes, feeling a warmth that she had not known she possessed, and said, \"You were the one who told me 'The Fuck' was only part of the total experience. Take me to your bed and show me the all the rest. Show me what being cared about feels like, and show me what Ann felt when you showed her how much you loved her.\"\n\nShe watched as his face sank to her shoulder, small sobs muffled by the bathrobe. This time, she stroked his hair.\n\nShe took her new cell phone from the pocket of the robe, and pressed the directory listing for \"Home.\" \"Hi mom,\" she said, softly, \"Yes...yes I am. I will see you tomorrow morning. Don't cry...I am as safe as I can be. Love you, too. Okay, bye.\"\n\nBill's head slowly rose and his red eyes looked at her, \"She knows...and she is okay with this?\" he questioned.\n\n\"It was very hard for her. But from everything I have told her about you, she trusts you to protect me, and care for me. Of course, she doesn't know I will still be a virgin when I see her!\"\n\nHe chuckled lightly, \"Sounds like a special woman. I would like to meet her sometime.\"\n\n\"Oh, I think you will,\" she replied, warmly.\n\n\"There is just one condition on this night,\" he said, quietly.\n\n\"And that is what, Mr. Haerth?\"\n\n\"This is the only time. You take what I can show and you use it to find the right young man for you.\"\n\n\"The only time!? But what if...\"\n\n\"The ONLY time,\" he said firmly.\n\n\"But, can we still...you know...watch TV together, or talk, or go out for dinner?\"\n\nHe paused, and then said, \"Yes, we will have everything else, but you will not be in my bed again. Deal?\"\n\n\"Alright\" she said dejectedly.\n\nShe slid off of his lap, and felt his hands trail down from her waist, to her thighs, to her knees, before she stood. She put out her hand out for him. \n\n\"As this is my only night, I don't want to lose another minute.\"\n\nHe stood, turned off the TV, and took her hand, and they walked to his bedroom. When they had entered, she took out her cell phone, and held it out to him, \"Show me how to set the alarm for 8 A.M., please?\"\n\nHe smirked, tapped the phone, and said, \"Set alarm for 8 A.M.\"\n\n\"Alarm set for 8 A.M. tomorrow morning,\" the phone responded.\n\nShe took the phone and set it on the night stand, then turned to him and started undoing the buttons of his shirt, as she chuckled, \"Clever man. Now show me what clever things you can do to me.\"\n\nHe pushed the bathrobe off her shoulders, and she let it drop to the floor. \n\n\"You don't think my boobs are too small?\"\n\nHe reached down and gently squeezed both of her nipples. He heard her gasp and felt her legs weaken.\n\nBill said, \"As long as they react to my touch like that, they are perfect for me.\"\n\nHer thoughts soared, as he pulled her close, and she felt his hands run through her hair, slide down her back, and stop, cupping her butt. She reached between them, and finished unbuttoning his shirt, and started unbuckling his belt.\n\nHis hands gently replaced hers, and he took off his remaining clothes. He turned down the sheets and comforter, and then turned and lifted her light body. He gently set her on the bed and then he lain down beside her, and softly kissed her.\n\nHer mind was lost in the sensations of his warm body, fully in contact with hers, and she pulled him tight to her.\n\nBill's hands started to explore all of her; her firm thighs, delicate neck, soft, small breasts...all of her.\n\nShe tentatively explored Bill with her hands, gaining confidence each time she touched him that her touch did please him. She learned to reach through and around his moving arms to bring her hands into contact with his skin.\n\nShe sank into the moment; caring not for the time, the room, the rest of the world. She listened to her own breathing, as it gained speed. She delighted in the way his touch of one spot on her skin would make her whole body want to answer him.\n\nThen it happened. He gave her a long kiss, this time his tongue probing her lips. She accepted, answering with her tongue. Just as she was learning how their tongues could dance, his hand touched her between her legs. The shiver and her gasp surprised her.\n\nThe more he went on, the more she found how he could provoke uncontrolled responses from her body. She came to know the many sounds of pleasure she contained, as they escaped in response to his touch.\n\nAt last, she learned the delightful agony he could create in her. It was nothing like she had imagined, as it was so unlike her own hand. When she could take no more, her body clenched, shook, and jerked, then finally sagged.\n\nThen there was quiet, except for the gasps of her receding breathing. For the first time, she recognized the coolness her sweat was creating. \n\nIt was the absolute contentedness she felt, as he held her, that surprised her most. She had dreamed of his touch and to be in his arms, but nowhere in her dreams had she predicted the utter stillness of her mind, drowning in happiness, as she listened to his breathing.\n\n\"Is this what he wished for me to know?\" she asked herself. She pondered that as his hands started to roam her body, once again. As the night continued, she discovered the effect that his warm mouth and tongue had on her. Her nipples sent signals through her that cried out, pleading for all he could give her.",
        "When she felt she had, again, reached her limits with this delightful agony, her body held out for even more, until his tongue made every nerve ending in her burst into fire . She started to see stars before her eyes were returned to her mind's control, and then she was able to focus on him, and his Cheshire cat smile.\n\nNothing had prepared her for these feelings. She had known what it was like after her own hand had made her crest. But, to be here, in his arms, HIS arms, not just someone's arms, as she rode the remaining waves within her. It was something she could only absorb; not something that could be explained or remembered in words.\n\nShe sensed him looking at her, and she returned his look.\n\n\"See what happens when you flirt?\" he chuckled.\n\nShe laughed, tiredly. Then she paused...and started to cry.\n\n\"Are those good or bad tears?\" Bill asked, gently.\n\nMelissa looked at him, and whispered through her tears, \"I don't think my mother has ever felt this or known this much happiness.\"\n\n\"That is a terrible thing, and I hope she can find it someday,\" he responded, as he slowly stroked her skin.\n\n\"Me, too...me, too,\" she sniffed.\n\nDespite the moment of sorrow that had intruded, it could not take root, as his hands found new nerve endings of hers to trigger. She stopped him, and sat up, studying his questioning look. She moved over Bill, so as to straddle him, feeling him under her wetness.\n\nShe smiled, and said, \"I assume I cannot give you all that you have given me, but it is my turn to learn what I CAN do to you!\"\n\nMelissa watched his eyes close, as her hands moved up and around him. She added kisses, and her tongue, all over him. She delighted when she made him twitch or groan. She moved to tantalize his legs and feet, toe by toe. She had him roll onto his stomach, which she followed by using her finger to write \"I Love You\" on his back, although he did not recognize the pattern.\n\nWhen she had exhausted the search for any missed skin she had not caressed, she had him turn back over. She extended her full body on top of him, and kissed him with all the passion she could muster.\n\nThen she rolled off of him, lay herself next to him, and spread her legs wide.\n\n\"I want to feel you on me, between me, against me,\" she pleaded.\n\n\"But, you know I can't...\"\n\n\"You still will enjoy me, won't you?\" she answered to his hesitance.\n\nHe nodded and moved between her legs. She felt him rest against her wetness, and she started moving her hips, rubbing his skin against her most sensitive spot. She drew him down to a kiss, the rate of her breathing rising.\n\nShe kept moving, faster and with bigger movements, with his weight on her. They kissed, on and on, as she started to moan into his kisses. She knew it was approaching, and she finally broke the kiss, and looked into his eyes. \n\nHe looked into her hazel eyes, wide and anxious. Then she closed them, wrapped her legs around him, and let out a short scream, as she shook beneath him. \n\nHis tears came again, dampening her face. She started to cry, too, unsure if it was for him, or herself, or even her mother. As she calmed from the storm, he rolled off of her, and wiped at his own tears. She rolled, and wrapped herself around his side, her head on his shoulder, her tears ebbing.\n\n-----------\n\nThe phone alarm sounded, startling them both awake.\n\nShe looked at his face and saw his eyes had a sorrowful look.\n\n\"Never again?\"...She had to ask that question.\n\n\"No, my wonderful, beautiful woman. Your future is not with me.\"\n\nShe nodded, and whispered, \"You know I will never forget this, don't you?\"\n\n\"I told you it was complicated. But it will become a pale memory, if you are wise and choose the right young man to share your life with, for the two of you can create hundreds of such memories.\"\n\n\"I better get dressed and get home. I doubt mom slept, even though she let me do this.\" Melissa gave him her last kiss.\n\nThey got dressed, and went to his car, and he drove her home. She got out of the car slowly, then leaned back in the car's door opening, and smiled. \"I only turn 18 once. Thank you for the rest of my life.\"\n\nHe nodded\n\n\"TV soon?\" Melissa asked, hopefully.\n\nBill smiled and nodded.\n\n----------\n\nOver the rest of her senior year, she visited often, asking more questions of life and watching TV, while she curled into him. Sometimes she even fell asleep on his thigh, and when she did, he often whispered, \"Behave, my lovely.\"\n\nHe helped her find a partial scholarship, for a college about a 3-hour drive across the state. He would pay for the balance of her education. He bought her a used Mazda 3 sedan for her high school graduation present.\n\nShe had some dates during her senior year, though she remained a virgin. She discussed with Bill all the good & bad points of each date. Among those dates that she let touch her, none of them had the caring she sought. What she said she had learned from him and dating, was the ability to distinguish physical pleasure from an emotional connection.\n\nWhen it came time to leave for college in the fall, she had her car loaded to leave, when she stopped at Bill's, after calling first to make sure he would be there. When she came to the door, he let her in. She stood there looking at him, choking back some tears, as she said, \"We get a week's break in a few months. I will see you then. Maybe I will even drive home for a weekend or two, and we can get in some TV time.\"\n\n\"It would be my pleasure to have you here, anytime. And call anytime you need to...Or just want to,\" he added.\n\n\"I will,\" she said. She gave him a big hug, and then walked to the door and started to go out, when she stopped and turned towards him. \"You know I would have married you, don't you, if you had asked me?...I do love you.\"\n\n\"I love you, too...but, I could not have lived with myself if I had been that selfish ...AND, I will be ecstatic, some day, when you tell me that you are engaged. Of course, he had better be a great young man.\"\n\n\"Oh, any man who is to be in my life, has to get my dad's approval. And, my dad had better give me away!\" she laughed.\n\n\"Yes, he will,\" Bill replied, \"Come back soon. I will delight in seeing your face coming up the walk. Behave yourself.\"\n\nShe turned and left, waving as she got into her car.\n\n--------\n\nIt was ten days later, on a Saturday, when Bill came out of the kitchen, and was delighted to see Melissa walking towards his front steps. He went to the door to greet her, but as he did, he realized it was not his Melissa. \n\nThis was Melissa in 20 years or so. She wore a familiar sundress, and was of the same height and build. She had the same eyes, with a few lines added at the edges. Her hair was a little shorter and the honey shading was a bit darker. She had a similar walk, but with a slightly unsteady stride.\n\n\"Hello,\" he said, \"I am William Haerth.\n\n\"Hello,\" she said, \"As I think you have guessed; I am Melissa's mother. My name is Sylvia Traynor.\n\n\"Please come in,\" he said.\n\n\"Thank you,\" she said, nervously.\n\n\"Please have a seat. Can I get you something to drink, possibly something to calm your nerves?\"\n\n\"It is that obvious, is it? I could use something in a hard liquor to help me.\" She sighed heavily, as she sat on one end of the couch.\n\n\"I don't keep that much on hand. I have vodka, tequila, and Fireball whiskey?\"\n\n\"Oh, the Fireball would be perfect. It is one of my favorites...NOT that I drink that much!\" she said, hurriedly, \"Just when I do have something, I like the Fireb...,\".\n\n\"Don't worry,\" he replied, gently, \"I thought nothing bad.\"\n\nHe brought her glass over, as well as a glass for him, and the Fireball bottle.\n\nHe poured a couple fingers worth for each of them, and she thanked him.\n\nHe sat on the couch, about an arm's length away from her, and asked, \"May I ask why you are so nervous? I hope it is nothing I have done?\"\n\n\"I think it will become apparent. If I may start?\" she said, \"And, well, it is something you have done, but not at this moment. You are very kind to see me, unannounced.\"\n\n\"You are welcome, anytime. You do have my curiosity, though, so please proceed at your own comfort.\"\n\nShe paused, and he took the time to note how much of Melissa he saw in her; just a quieter, cautious Melissa.\n\nSylvia started, \"First of all, I have to thank you, beyond my abilities, for all the financial help you have given Melissa. It helped her so much, and relieved me of a number of concerns. But, I have to ask you, as it worried Melissa too, whether you have done too much, in that she has never heard you speak of a job?\"\n\n\"Do not worry yourself, at all,\" he replied, \"I was fortunate enough to retire at 55, when my father left me a nice amount of money in his will. I am not wealthy, but safe and comfortable.\"\n\n\"And your mother?\" she asked, cautiously.\n\n\"Ah...she passed many years ago, dying in childbirth of what would have been my younger brother. I am an only child. My father did remarry, to a strange woman, whom he divorced.\n\n\"I am sorry for your losses,\" she said, quietly.\n\n\"If I am not intruding; Melissa often referred to your 'tight budget'. Didn't your husband have life insurance, and are you secure?\"\n\nShe took a deep breath, and said, \"As to the latter, we are secure in a minimal way, as I was fortunate that the house was an inheritance of my late husband's, and was paid for. So my modest wages have gone for the usual necessities and such, what with a teenage daughter.\"\n\n\"Well, I am glad you are stable, anyway,\" he responded.\n\n\"But, as to the first part of your question; it is one of the reasons I came here today. My husband did have an insurance policy...\" She paused to raise her head and look directly at his eyes. \"The policy, of which I was the sole beneficiary, does not payout when the husband is killed by the beneficiary.\"\n\nThe short pause was deafening.\n\n\"My god!\" he exclaimed, \"Melissa never said a word about how he died.\"\n\n\"As she promised,\" Sylvia added.\n\n\"How horrible for you! Did Melissa witness it?\"\n\nShe leaned against the back of his couch and sighed, heavily, from the relief of not hearing any rejection.\n\n\"Regrettably, yes,\" she said, \"He was a terrible man, who got more violent every year. I was the stupid wife who stayed with him for the sake of our daughter. When Melissa was 12 years old, he decided she was 'woman enough to be introduced to the ways of the world,' as he put it.\"\n\nShe continued, \"He grabbed her, and I tried to stop him, and he pushed me, hard, to the floor. I came at him again, scratching at his face, and he grabbed my left arm, and threw me across the room, breaking my arm when I hit the dresser. Melissa was screaming for him to stop. I remembered that he kept his pistol in the dresser and I got it out, released the safety, and pointed it at him. I yelled at him to stop. He looked at me, and went into a rage like I had never seen, and that is saying something. He lunged at me, and I fired three times, hitting him twice, both in the chest. He fell across my feet, dead.\"\n\n\"I hardly know what to say!\" as Bill drew in a deep breath.\n\n\"I regret Melissa saw it, and I regret having to take any life. But, I can't be sad that bastard is dead. And it is my life's wish fulfilled that Melissa has not seemed to have suffered that much from seeing his death, nor my foolishness in marrying him. Of course, the only blessing was having created Melissa.\"\n\n\"Now that you have told me,\" Bill said, \"I am, also, amazed that Melissa handled it so well. She had told me she hated him, and thought he was a worthless father...Wait a minute, was this that case in...\"\n\n\"Yes\" she interrupted, \"He was Frank Edwards. Traynor is my maiden name.\n\n\"Lord, she is his daughter! I read about that case...thank god it was ruled justified self-defense. Plus, I think you are anything but stupid, and, rather, that you are very courageous.\"\n\n\"Thank you,\" Sylvia said, \"Melissa told you that the Goth style was her response to being teased about her clothes, which she also was teased for, but the real reason was that the word got around school that I killed her father...\"\n\nBill said, warmly \"Then I am even more amazed at her inner strength, given how little it showed on the outside. I can understand why you are so nervous, given that you came to tell me all this.\n\n\"Bill, - If I may call you Bill? - that is the lesser part of what I came here for, and of what makes me nervous. Before I get to that, I first have to thank you for everything you did for her, emotionally. \n\n\"Yes, please call me Bill...\"\n\n\"...It was you, Bill, that got her out of that funk. For the first time in her life, she had someone that acted like a father. You cared about her, listened to her, explained life to her, and let her cuddle against you. And she loves you, both as a man and her father, and you handled that wonderfully. For many years, I was too trapped in my own fears of men and my failed marriage, to be able to talk to her about anything involving relationships.\"\n\nBill was starting to see her calm a bit, and when she did, he saw more of Melissa's sparkle in Sylvia's eyes, and Melissa's wonderful smile. \"More Fireball?\" he asked.\n\n\"Thank you. I may need more than two, before I am done,\" she sighed.\n\n\"Please feel free to speak openly and frankly with me, if it helps.\"\n\n\"Thank you, I may need to. My daughter has told me everything about you, and what you two have done, together. I wish I had not found it so difficult to discuss such things with her. And, I already see what it is about you that appealed to her, so much.\"\n\nBill said, \"You are very kind. I hope nothing I did with Melissa offended you.\"\n\n\"Offended me!?\" she laughed, for the first time, and he heard Melissa's wonderful laugh rise from her.\n\nShe continued, \"Nothing of the kind. You are a god send! It may not have been a method society typically endorses, but you gave her an immeasurably wonderful perspective on love and sex. I could not have done it, and I feared so much for her future when she only had me and school friends to look to for guidance. God, I agonized when she spent the night with you, but she had such faith in you, and she had told me so many wonderful things you had said and done, that I had to trust her judgement over mine.\"\n\n\"I have to say that a trust like that is one of the most amazing things I have known a parent to do, and is very flattering to me,\" he replied, relieved.\n\nHe was getting more impressed with this lovely woman, by the minute. \"I must say that; I am so happy you came over here, both to know you, and know of Melissa's true history. I think it is a great credit to you, that she was as mature and collected, as she was, when I first met her.\"\n\n\"Oh, do you need to be somewhere?\" she asked.\n\n\"Sorry, if I gave that impression! No, you are quite welcome to stay as long as you want. I am quite enjoying your company. Are you still nervous?\"\n\n\"Yes\" she said, \"I guess I had better get to the hard part.\"\n\nHe questioned, \"After all that you have said, there is still a hard part?!\"\n\n\"Yes\" she replied, and dipped her head and looked up at him, with a small grin.\n\nHis mind exclaimed, \"That was 'The Eyes'!\"\n\nShe continued, \"I actually came here with ulterior motives.\"\n\n\"Now you really have my curiosity running rampant.\"\n\nShe looked up at him, and then swallowed the rest of her second Fireball, before pouring herself a third glass.\n\nSylvia took in a deep breath, and let it out. \"You have not only helped Melissa, more than I can ever thank you for, but you have helped me, as well. As Melissa told me everything, I started to fight my own fears, and I stopped hiding behind them. I am trying to get back into a normal, happy life, if I can know such a thing. You made me believe in good men again; you in particular.\" \n\nHe said, his words coming out unevenly, \"I am amazed...and honored that I could have...unknowingly, helped you as well.\"\n\nSylvia's voice quavered, \"I have come to you to ask for your help.\"\n\nTears started to come down her face.\n\nBill reached out and took her hand. \"How can I help? Anything I can do, I will.\"\n\n\"It took every bit of courage I could find, plus Melissa's pushing, for me to come here today. But, I told myself I wouldn't cry!\"\n\nHer emotions were too much for him, and he moved over next to her and held her in his arms. \"It will be alright Ann, I will make it...I'm so sorry, Sylvia. Ann was my late wife's name.\"\n\nShe looked into up his eyes; hers no longer crying, but still quite wet. \"My full name is Sylvia ANN Traynor.\"\n\n\"I...uh...well!\" he stumbled, \"What a coincidence.\"\n\n\"Is it?\" she asked, \"I love rose bushes, too.\" Clearly fighting to get the words out, she continued.\n\n\"I came here to...ask you to...ask you...to...Oh, damn! ... I WANT YOU TO SHOW ME WHAT BEING CARED ABOUT FEELS LIKE...and what Ann, your Ann, felt like when you showed her much you loved her.\n\n\"Uh, Wow!...to say this is surprise is an understatement!?\n\nShe hurriedly added, \"If you don't want to, I fully underst...\"\n\n\"I didn't say that,\" he interrupted.\n\n\"Then you...?\" she said, as she started to cry again, this time happily, and scanned his face to be sure he meant it.\n\n\"I would be honored to help...But...I can't...\"\n\nHer fingers on his lips stopped him. \"I know. Melissa told me EVERYTHING,\" Sylvia said, quietly.\n\nShe reached up and kissed him softly.\n\nHe looked at her, his eyes pleading that she really understood him. \"So you know that I...\"\n\n\"...can't fuck,\" she finished. \"Okay, here is where I take you up on your offer to speak frankly,\" she said, her hands shaking, \"I was fucked, brutally, for over 10 years, in every hole I own! I was groped, raped, and beaten. There was never a moment of kindness or caring from Frank. I took it for Melissa. Now she is safe and whole, much of that due to you. Fucking, I don't need. I want to be whole for once; to feel what is to be desired, to relish in a man's touch, to know tenderness, even if the emotions are only manufactured by you!\"\n\nHe looked down at her smiling, crying face, and stroked her hair. \"Oh, the caring and the emotions will be quite real.\"\n\nHe smiled, wryly, and asked, \"You want to watch some TV?\"\n\nSylvia laughed. Then she stood, wiped the last tears away, and extended her hand, while wiggling her fingers at him, enticingly. \"You have some place you need to be...all night?\"\n\nHe took her hand, and she gave him a small tug, to hurry his rising from the couch. She started walking him to the back of the house, when she stopped and turned to him.\n\n\"One question,\" she blurted.\n\n\"Anything,\" he asked, with a slight look of concern.\n\n\"Is this the ONLY time?\"\n\n\"I think you have paid enough; you have earned the unlimited ticket,\" he said, smiling, broadly.\n\n-------------\n\nA little over two years later, nearing Christmas time, the phone rang. Bill answered, \"Hello.\"\n\n\"It's me!\"\n\n\"How is my girl doing out there?\"\n\n\"I AM ENGAGED!!\" Melissa squealed, \"But only if you approve, Dad! Can I bring him home for Christmas?\"\n\n\"That would be wonderful. I looked forward to meeting any man you would pick!\"\n\nHe lowered the phone down to his lap. \"Sylvia Ann, our daughter is engaged!\" Sylvia took the phone, with her head still in his lap. He pressed the mute button on the TV.\n\n--The End--"
    ],
    "authorname": "GoneGray",
    "tags": [
        "daughter",
        "father",
        "female virgin",
        "mother",
        "old man",
        "romantic",
        "sensual",
        "young woman",
        "mature",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-only-time-is-forever"
}