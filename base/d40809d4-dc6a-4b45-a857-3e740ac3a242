{
    "title": "Married and Discreetly Sucking Cock",
    "pages": [
        "I'm making several assumptions about you, the reader, while authoring this guide. I'm assuming you're a lot like me. You're an older, happily married man who has been curious about sucking cock for a while. You want to meet another man to fulfill this growing need and desire, but you're unsure about how to arrange it, where to meet, and how to prepare. I've spend years dreaming and fantasizing about sucking cock for the very first time, and I've come up with the steps that I would perform prior to tasting another man's cum. I hope you find this guide helpful in achieving this objective, too.\n\nThe Candidate. I'm sure you're eager to suck cock, and may be willing to suck just any cock or the first one that comes along. Don't! What I would recommend is that you find another married man, who is in the same situation - happily married, interested in sucking cock or having his cock sucked, and ready to follow through on doing it. A married man has just as much to lose as you do. You're less likely to be blackmailed or assaulted (usually) and the risk of disease is much lower especially if he hasn't done this before and has been faithful to his wife. I'm not trying to advocate discriminating against other men, but as far as your safety and security, another married man is a much more appealing candidate. Finding him, however, is the hardest part and beyond the scope of this article.\n\nMeet First. There are many reasons to meet your \"partner\" ahead of time. He may be weird. He may not have good hygiene, have an unappealing body type, or may have misrepresented himself online. The ideal scenario is to meet in a public location, have lunch together, and discuss topics like two ordinary men would. Discovering that you have similar interests and could potentially be friends is like hitting the jackpot. It provides the perfect cover going forward if you decide to repeat your activities in the future. If you're friends, your wife is less likely to suspect that you're sucking his cock when you're together. It's also worth emphasizing that you can rule him out when you meet him. You may not \"click\" together, or you may just get a bad vibe off of him. Ensure that he agrees to this beforehand, that either one of you can walk away for any reason, or even no reason after meeting in person.\n\nDiscuss Expectations. You've fantasized about this forever, so make sure you're both on the same page. You might want him to aggressively fuck your mouth, call you a dirty cocksucker, or have other details in your head. Personally, I want the man to just stand or sit back while I'm on my knees pleasuring him, with his moans and sighs only audible, perhaps his hand on the back of my neck holding me in place. Make sure he knows what you want, but find out what he wants as well. Given this example, a man who wants to fuck my mouth, degrade me, and choke me with his long cock would be eliminated as a potential object of my oral pleasure.\n\nMost men have the post-orgasm aversion to cum. Make sure that if you expect to have your cock sucked afterward, that he will not become apprehensive and get the urge to flee the scene. Aversion is real, but can be overcome by commitment and the erotic nature of the situation.\n\nDiscuss grooming habits, such as if you prefer him to be as hairless down there as possible - assuming this won't arouse suspicion in his wife. Consider abstaining from sex and/or ejaculation for several days prior to the event to maximize the amount of semen ejaculated. Also consider asking him to drink pineapple juice a few hours before the event!\n\nThe Venue. Many lives and marriages have been destroyed because men haven't planned accordingly. They perform fellatio in public, in an adult theater, or in plain view in their car and are seen by someone. You can be arrested, and in some locations labeled a sex offender if the act is in plain view. Just don't do it. Hotels are also a risky choice. There is surveillence. Paying with a credit card leaves a paper trail that a wife can discover. That said, it's a better choice than in public or plain sight.\n\nI recomment renting a self-storage unit, especially one of the climate controlled ones. They're not very expensive, and you can justify it to your wife by telling her you need to store boxes, equipment, or other possessions to free up storage space at home. They're private, the door can be closed, and going to one with another man is less likely to arouse suspicion. It also provides an excuse for where to go and why, and if your spouse uses a tracking app with her phone she'll see you're exactly where you said you would be.\n\nPreparation. Make sure the storage unit is ready for your activity. Consider having a folding lawn chair if he expects to be sitting down while you suck him. The outdoor cushions for patio furniture are also good for kneeling on due to their padding. If that's not feasible, make sure you have a towel that can be folded to provide comfort on the concrete floor. It's also advisable to have a box with towels, washcloths, mouthwash, and bottled water that can be used to clean yourself up. The idea is to leave no evidence, and to not have the smell of cum on your breath when you go home to your wife.\n\nI would also recommend that you both disrobe completely. Put your clothes to the side. They won't get dirty but most importantly they won't be stained by an errant shot of semen that might fly through the air, etc. \n\nOne final note on preparation. I've tasted and consumed my own cum since I was a teen. I enjoy the taste. I also enjoy swallowing it. Make sure you have swallowed your own semen so that you know how it feels going down your throat. It causes somewhat of a burning sensation. Also, some women become nauseated and even throw up when it hits their stomach. I'm not saying it will happen to you, but it's probably best to ensure you don't have a similar reaction.\n\nSuck That Cock. A guide on How to Give the Perfect Blowjob is way beyond the scope of this article. You've fantasized about this for years. You know what feels good when your own cock is licked and sucked. You've watched enough porn and seen women skillfully performing fellatio, hungrily eating cum, and wished you were them. Fulfill your desire. Make a life-long memory, and give him the best head of his life so that he will remember the event even when he's old and senile!\n\nRemember, some men can't achieve orgasm via fellatio alone. He may want to jack off and watch himself ejaculate into your mouth. The only thing I would strongly suggest is to commit yourself to swallowing. Consume and eliminate the evidence. No body shots. No facials. Don't let it drip on the floor or get on your clothing. Cum causes bad stains that are difficult to get out, and this potentially puts you at risk of being discovered by your wife.\n\nPost-Orgasm. You've sucked your first cock. The taste and smell of another man's semen is on your breath, and you feel the warmth of it in your stomach. You're officially a cocksucker. Whether he's standing or sitting reclined in a lawn chair, allow him to enjoy the moments that follow his orgasm. Lick and suck his balls for a while. As his cock softens, the remnants of semen in his urethra will appear as a pearlescent dollop at the tip of his cock. Lick it off. Allow him to rest. This \"after care\" will also serve to arouse him once again. Perhaps he will be able to feed you another load. More importantly, the arousal will allow him to overcome any aversion or doubt in his mind and proceed to sucking your cock if that's the goal.\n\nClean up. Use mouthwash. Wipe the sheen of sweat from your bodies. Dress, perhaps shake hands, and return to everyday life knowing that you've achieved your objective of sucking cock and tasting another man's cum.\n\nConclusion. I hope you find this article helpful. I also hope you fulfill your desire to suck cock and taste another man's seed. An ideal situation for me would be to meet a new friend, to be able to share our most forbidden sexual thoughts and fantasies, and to be around each other with our wives while they are completely oblivious that we suck each other's cocks at every possible opportunity."
    ],
    "authorname": "Whispor",
    "tags": [
        "cocksucking",
        "curious",
        "how to",
        "planning",
        "blowjob",
        "oral sex"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/married-and-discreetly-sucking-cock"
}