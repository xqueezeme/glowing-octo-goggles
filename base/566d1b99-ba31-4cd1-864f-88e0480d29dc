{
    "title": "The DomBox",
    "pages": [
        "Tarsa nervously looked out at the circus of leather, latex and flesh in front of her, tugging the hem of her short maid's dress.\n\n\"Come on Tarsa, if you're not a bitch about it, you'll have a great time.\" Her boyfriend Ron jibed, walking past her in his heavy leather 'dominator' coat. Tarsa suppressed a scowl at Ron's latest annoyance at her for being anything other than a sex object. It was his idea to come to the Berlin Fetish Market after-party, and Tarsa objections had been met with the usual rounds of moaning, begging and temper tantrums until she agreed to come for a quiet life.\n\nTarsa headed straight towards the bar to get some drinks, while Ron decided to mingle on the dance floor, barely containing his excitement at all the submissive women in the crowd.\n\nAt the bar, she ordered enough drinks to numb her for the night, and a beer for Ron. She sat on a bar stool and felt a shiver run over her as she realised that with her short skirt and thong, her bare buttocks were touching the leather of the seat.\n\nTwo shots in, Tarsa began to relax a little, not enough to join the woman in a gas mask being spanked by her boyfriend, but enough to feel comfortable at the bar in an outfit picked out for her on the Chinese section of eBay during one of Ron's late night wank sessions.\n\n\"Haven't seen you here before.\" A smooth voice asked from next to her. Tarsa turned to see an older lady in a very extravagant purple and black dress, the kind a widow would wear while telling the police she had no idea what happened to her husband. \"You interested in trying anything out or just here for the show?\"\n\n\"Oh, me, no\" Tarsa stuttered. \"I'm just here for...\"\n\n\"Your partner? Oh don't say a word, let me guess who you're with.\" The lady interrupted. She cast her eye over the crowd and her face broke into a mischievous grin the moment it landed on Ron. \"I'm guessing you came in on the arm of Mr. Tall, dark, and enthusiastic over there.\"\n\n\"Yeah, he's into this sort of stuff.\" Tarsa sighed.\n\n\"I figured, wallflower putting away drinks like you are. Anyhoo my name is Louise, I'll stay with you if you want, nothing kinky, just some nice company.\" Tarsa was happy for the company, considering the alternative was joining Ron, currently getting very carried away in a conversation about proper whipping technique with a large bearded man.\n\nLouise turned out to be great company, Tarsa didn't feel like talking so Louise got the conversation flowing with her life. Tarsa couldn't believe that someone could actually be a millionaire selling sex equipment and organising fetish parties but Louise seemed to have a perverted entrepreneurial flair to her. Eventually conversation turned to Tarsa's life.\n\nLouise was politely interested in Tarsa's life, although the loud music and party atmosphere had ramped up and didn't allow her to communicate everything.\n\n\"Iranian immigrant... dad died... met Ron at Stuttgart University... technical engineer for a security firm.\" Louise's ears perked up.\n\n\"You want to go outside for a cigarette?\" Louise yelled, Tarsa was not a huge smoker but decided that the smoking area would be more enjoyable than watching Ron getting more and more handsy with other women.\n\nOutside, Louise gave Tarsa a cigarette and lit her own at the end of a long luxurious cigarette holder.\n\n\"So Tarsa, technical engineer for a security firm? That means you know a lot about locks right?\" She asked as casually as she could muster.\n\n\"Yeah, these days it's all electronic, it's as much about programming key cards and secure encryptions as it is physical barriers.\" Tarsa replied, happy that conversation felt more on her home turf now.\n\n\"Hmm, how would you feel about a freelance project on the side?\" Louise asked bluntly. \"I've been looking for some innovation in my product line, and someone who creates security systems seems like just the sort of out of the box thinking I could use.\"\n\nTarsa was unsure about taking a job with a woman she had just met at a fetish club, but she had to admit she could use some extra money and maybe a creative project would help with the fog of misery that had been hanging over her life recently.\n\n\"OK, what did you have in mind?\" Tarsa asked.\n\n\"Not how I work sweetheart. Give me your bank details and email address, I'll wire you \u20ac500 and send you a date and location to present your prototype.\" Louise announced, getting out her phone.\n\n\"You always give \u20ac500 to people you just met without even knowing what you're going to get from them?\"\n\n\"Actually I don't do business with anyone I haven't seen in a skimpy maid's outfit, so you're just lucky on that front.\" Louise quipped, Tarsa was very unsure about everything, but the way she saw it \u20ac500 was \u20ac500 and sure enough it was in her account before she had finished her cigarette.\n\nBy the end of the night both Tarsa and Ron were jubilant with excitement. After Tarsa had finished listening to all Ron's tales of 'not technically cheating' debauchery she told him about Louise's offer. They stayed up all night chatting about what Tarsa could make with \u20ac500. Ron's suggestions tended towards the more sadistic but at their core Tarsa was able to pick out some key themes and she got to work the next day ordering the supplies she would need.\n\n...\n\n\"Good afternoon Louise. Thank you for giving me this opportunity.\" Tarsa announced in a very stylish living room. Louise lounged on her sofa, nursing a hangover that could floor a rhino, idly petting a chihuahua. \"When you asked me to build a product, I knew that \u20ac500 should buy you more than just a new kind of handcuff.\"\n\n\"Fuck me, I gave you \u20ac500?\" Louise interrupted. \"Sorry Hon, genuinely don't remember much of that night.\"\n\n\"Alright...\" Tarsa continued, thrown by the revelation but not discouraged. \"Well let me show you what I got. How would you feel about a new total integrated bondage system? I give you the DomBox.\" Tarsa pulled back the table cover and revealed an intimidating black box with a single red LED on it.\n\n\"The DomBox is the first step on a build your own bondage system that your clients can use in the comfort of their own home. Let's have a demonstration.\" Tarsa went and put a pair of handcuffs on Louise, who responded with an encouraging smile. \"Now the only way to unlock those cuffs, is to hold them in front of DomBox when the light turns green. How do you get the light to turn green? Well that's where the app I have programmed comes in.\"\n\nTarsa got out her phone and excitedly showed Louise the DomBox app.\n\n\"It's pretty rudimentary at the moment. There is a button here that will turn the light green, for if you are doing couples play and you want someone else to hold the key to your freedom, then there is a timer, for if you want to be tied up for a length of time. Finally the DomBox has a microphone that will turn the light green if it hears the safe word. Greengrocer!\"\n\nAlmost immediately the light on the DomBox turned from red to green and Louise obligingly held the cuffs over the box and felt them release from her wrists.\n\n\"But this is just the start, anything can have a DomBox clasp put on it and the DomBox app has infinite customisations. Imagine locking yourself into a harness that won't be released until a random and unknown amount of time passes. Imagine exposure play where there's a pedometer in the handcuffs and they won't be released until you have walked a certain distance. Imagine microphones that wait for you to say a degrading sentence before DomBox will release you. This is the start of a journey where the possibilities for couples bondage or lone kink explorers are pretty much endless.\"\n\nTarsa looked expectantly at Louise for a good minute before the hungover kink magnate realised she had finished.\n\n\"Do you have any trademarks on this?\" She asked.\n\n\"No, I just developed the technology.\" Tarsa replied.\n\n\"Alright, as far as I am aware no other company is developing something like this. Keep it on the down low and I'll fund more development while we wait for the trademark. I'm actually genuinely impressed, this might end up being the best drunk purchase I've made in a while.\"\n\nTarsa grinned from ear to ear as she was sent away with a signed contract, a company credit card, and another \u20ac500 to develop the DomBox further.\n\n...\n\nTarsa reached for another bottle of wine, her eyes filled with tears. It was her second night at the out of town hotel she had booked in a hurry after storming out on Ron. \n\nIt was bad enough when he tried to control her and push for her to do sick fetish stuff, but ever since she had gotten the contract to develop the DomBox, he had started to try and control her professional life too. He started suggesting the sickest shit for the DomBox, and every time she finished a new function he would immediately pressure her into testing it personally with him holding the controls. Eventually after a hard day at work, she snapped and told him to either leave her alone or she would be testing the DomBox on him in his sleep. Anyone with an iota of emotional intelligence would interpret that as a sign to back off but it just made Ron double down on being a control freak. Tarsa actually felt great when she packed a bag and told him to go fuck himself.\n\nOn the table in front of her, among the empty wine bottles, was the DomBox with its latest attachment, a small safe that could hold analogue keys or a phone, that could only be unlocked when the light turned green. There was also the slave collar she had been filling with every sensor imaginable to coordinate with the DomBox app. Tarsa was due to meet with Louise tomorrow, but she was certain Louise wouldn't begrudge her a small hangover all things considered.\n\nLouise warmed up the app to check her latest addition, GPS tracking on the collar. The little blip on the map confirmed that the collar was working. She decided she could go for a walk to clear her head and test the collar while she was at it, setting the DomBox to turn green once the collar had travelled to the hotel pool and back.\n\n\"Why don't you do it naked?\" She slurred in a mocking imitation Ron voice. \"You're such a bitch if you don't do everything I tell you.\" Tarsa stopped and swayed in front of the hotel door.\n\n\"You know what,\" she said to nobody in particular. \"I will do it, just because it's what Ron wanted, I'm going to walk to the pool and back naked and he's not going to get to enjoy it because he was a dick.\"\n\nTarsa slipped off her sweat pants, vest, and underwear, leaving them on her hotel bed. She affixed the collar around her neck, enjoying the feel of cool leather constricting around her. She picked up the DomBox to take with her when she had another idea. She took the key card to her hotel room and slipped it into the DomBox safe, clicking it shut.\n\nShe opened her door a peek and looked out down the ground floor hallway. It was mid-January so the hotel was pretty much empty due to the holiday lull, even if it had guests, it was 2am and Tarsa was certain they would be asleep. A draft hit her as she opened the door wider, covering her body in goosebumps and forcing her to retreat back to room with embarrassment.\n\nIn her room, Tarsa closed her eyes and saw Ron's mocking face. She heard his voice saying \"I always knew you were a prude without me.\" She gritted her teeth and with a mind full of rage she jumped out of the hotel door with the DomBox and shut it behind her before she could change her mind.\n\nTarsa let a little squeak escape her mouth as she tried the hotel door handle and found it locked. She was now going to have to walk to the swimming pool and back naked if she wanted to get back into her room. For a second she contemplated leaving the DomBox outside her door, but quickly changed her mind as she was testing it and needed to know if anything went wrong, plus she didn't want anyone stealing it.\n\nThe layout of the hotel flashed through Tarsa's mind, she didn't know the hotel too well but she had wandered the halls the night before to test the collar's pedometer. As far as she could remember the pool was a chained off outdoor area at the back of the hotel, currently closed off for the winter months. The direct route would take her right past the 24 hour reception, so instead she decided to walk out of the way to some nearby stairs, up to the second floor, along the corridor, find another set of stairs on the far side of the building, back down to the ground floor, and along to the back door that lead to the pool. Her legs shook as she began her long journey.\n\nTarsa felt a little thrill run through her as she pushed open the door to the stairs not knowing if anyone would be on the other side. To her relief the stairs were empty, she walked up them and into the second floor corridor. The corridor was in pitch darkness, as Tarsa took her first step, the motion sensors turned on the lights above her, shining a spotlight on her naked body. In shock she dropped to a crouch, letting the DomBox clatter to the floor, her arms wrapped around her exposed breasts as they rose and fell with her rapid breathing.\n\nTarsa regained her composure and began to slowly and surely walk down the corridor, every few steps a new light would turn on, her nudity banishing the darkness and her heart racing at the thought of how exposed she was. About half way down the corridor she saw another set of stairs, peeking around the door to the stairway it became clear that these stairs lead to the reception area, so she would need to keep walking.\n\nThe hallway swirled as the combination of adrenaline and alcohol surged through Tarsa's blood. Each light that popped on causing her to jump at the prospect that she would be lit up for some unseen watcher. The DomBox nestled under her right arm while her left did a terrible job of covering her streaming pussy. After a while Tarsa noticed the end of the corridor coming up on her fast, surely there must be stairs soon? She had scanned every inch of the walls as she walked hoping for another stairwell and it was looking like there may not actually be one.\n\nThe corridor came to an almost dead end without another stairwell on sight. Instead it had a small glass door labelled 'fire exit'. Tarsa peered from the door, outside there was a rickety metal staircase leading down the side of the building. For Tarsa the choice was stark, either definitely be seen by the receptionist but stay inside in the warm, or take the staircase and run around the outside of the building in mid-January. She reasoned that this hotel was fairly remote, on the leafy outskirts of Berlin flanked by other hotels, if she was fast enough she could go outside and get it done without being seen.\n\nA shiver ran up and down her as Tarsa pushed the fire escape open. The cold air whipped around her body and as she took her first step, her foot tingled at the feeling of cold metal on her bare flesh. She turned and pushed the fire door to, making sure not to close it entirely, before turning to begin her descent.\n\nThe first thing that struck Tarsa was that the fire escape was clearly visible from the road in front of the hotel, anyone out late at night could look up and see her naked body high above the trees. She dropped into a crouch and with the sudden movement the fire stairs shook and the sound of rattling metal wrung in Tarsa's ears. She gritted her teeth until the rattling stopped, hoping that nobody in the hotel was awakened and curious. Despite her desperate need to get down to the ground, she was going to have to be careful not to make any sudden moves.\n\nSlowly and steadily Tarsa crept down the stairs, her body shivering with excitement and cold. At one point a car drove down the road and Tarsa had no way of knowing if they had seen her or not. Eventually she reached the ground, her feet prickling with the cold dew on the grass. Freed of her need to go slow and steady, Tarsa sprinted down the thin garden between the buildings and towards the pool.\n\nAs Tarsa got further from the road, she had to slow down to give her eyes time to adjust to the darkness, the only light coming from the red LED on the DomBox, keeping her mindful that her journey wasn't over. Eventually she reached the concrete clearing that surrounded the pool, the pool was surprisingly sizable as it served all the surrounding hotels, their buildings overlooking the flat and exposed shared area. The pool was uncovered and the mid-January freeze had frozen the surface solid.\n\nTarsa sprinted across the concrete and hid behind a vending machine, timidly looking out over the area. There was the hotel she had just come from, small and sleepy, no lights on there. There were also two other hotels, much taller and more foreboding, both with a smattering of lights shining out of the rooms. The lights could have just been left on by a careless cleaner or absent minded guest, but it was also likely there were awake guests in those rooms, just waiting to look out of the window and get a glance of Tarsa's naked body.\n\nTarsa made a break for it and hid under one of the patio tables dotted near the pool, intently looking at the red LED, desperately willing it to turn green. As she sat under the table, feeling her bare bottom start to turn numb on the cold concrete, Tarsa thought back over how she had set up the GPS, she remembered choosing the pool, but as she thought back her mind swam with the memory of clicking right in the middle of the pool and the little red pointer hovering over the middle of the square of blue.\n\n\"Patch note: allow distance tolerance on GPS trigger.\" She angrily whispered to herself. She looked out on the pool, she was happy that it was frozen as neither the DomBox nor the collar were waterproof (another patch note Tarsa thought through), but it was still totally exposed with three hotels overlooking it.\n\nTarsa took some deep breaths before crawling out from under the table, shivering as she approached the pool edge. She lowered herself down and felt the ice embrace her foot. She yelped in surprise before covering her mouth with her spare hand. Quickly she ran to the centre of the pool, ignoring her now numb feet and began hopping up and down waiting for the collar to communicate to the DomBox that she had made it to the coordinates.\n\nAt the same time the light turned green on the DomBox and Tarsa heard a loud catcall echo around the pool area. She looked around to try and figure out who had seen her and as she did so the bottom of the DomBox opened and her room key clattered onto the ice. She dropped into her hands and knees and began frantically searching for the key while the loud leers continued, apparently attracting the attention of a second man who joined in yelling his appreciation of Tarsa's body. Once she found the key she took off, sprinting back to her room, her body bright red with embarrassment.\n\n...\n\nTarsa collapsed back into her room, her body shivering and covered in goosebumps, her nipples stiff enough to stack CDs on, and her pussy streaming with excitement.\n\n\"Fuck you Ron.\" She whispered to herself as she climbed into bed and masturbated herself to sleep.\n\n...\n\nTarsa rang the doorbell while cannonballing her second energy drink of the morning, trying to drown out the high pitched yipping of Louise's chihuahua. A perky Louise answered the door and immediately got the measure of Tarsa's situation.\n\n\"Good morning\" Louise chirped. \"Come in and sit down, we're not in a hurry today.\" Tarsa was happy for the invitation and slumped on her sofa. Louise put the kettle on and began preparing an elaborate coffee that she knew worked wonders on hangovers, trying to find a tactful way to broach the subject.\n\n\"Wanna talk about it?\" She settled on.\n\n\"Been a rough couple of days\" Tarsa admitted. \"But the DomBox is better than ever.\"\n\n\"We have all day to talk about the DomBox, I want to know how you are doing. I don't want to overstep my bounds but my guess would be you gave Mr. Small, dark and loathsome the boot.\" Tarsa gave a slow nod of agreement. \"Honey, I don't know if this is what you need to hear right now, but when you hang around fetish clubs as long as I have, you recognise small dick energy when you see it.\" Tarsa gave a small chuckle.",
        "\"There's actually nothing wrong with small penises.\" Louise hastily corrected herself. \"I once knew a man, decidedly below average anatomy, but he could give me more pleasure with a withering stare than my whole inventory of toys working together. But small dick energy is when you don't adapt to your small penis, you just make it everyone else's problem. With that insecure, needy and controlling attitude, you are far better off without that in your life.\" Louise returned with two coffees and Tarsa was grateful.\n\n\"So he move out or you?\" Louise enquired.\n\n\"I left, currently staying at a hotel.\" Tarsa replied.\n\n\"Well that won't do at all, I have a spare room, as lavish as the rest of the house, it's yours until you find somewhere. I just need to move out some of my little Brutus' toys\" Louise offered, giving her unimpressed chihuahua a patronising stroke. Tarsa spluttered out words of thanks, genuinely boggled at the level of generosity being shown by a woman she was currently meeting for the third time. There was a knock at the door and Louise's eyes lit up as Brutus sprinted to give the door a good bark.\n\n\"Hilda darling is that you?\" She announced opening the door with much aplomb. Stood at the door was a short woman in fairly conservative clothes and a wide grin on her face. \"Tarsa this is Hilda, she is the best product tester I have ever worked with. Hilda this is Tarsa, she has made a product that's going to make all of us rich.\" Both Hilda and Tarsa blushed at Louise's gushing introductions.\n\nHilda sat down and Louise went through the usual small talk points, asking about the family and the day job, like they were friends having a chat in a cafe rather than colleagues about to subject one of them to every sexual scenario currently envisioned from the DomBox. Once conversation started to become thinned, Hilda took a deep breath and announced, \"right, should we get started then?\"\n\nAs if it was the most natural thing in the world, Hilda began to get undressed while Louise explained the concept behind the DomBox. Every so often Hilda would chime in with insight or a suggestion and Louise would quickly type it into a nearby laptop. Tarsa had to admit Hilda was precise, she picked up on the lack of waterproofing on the collar pretty much immediately, before moving on to the clasp settings and the lack of ringlets around the notches meaning the collar would fall apart after not much intense use.\n\nLouise pointed everyone's attention to her computer, which had a bullet point list of their agenda for the day.\n\n\u2022Timer functionality.\n\n\u2022Microphone test\n\n\u2022Pedometer\n\n\u2022GPS\n\n\u2022Business\n\nHilda put on the collar and the handcuffs before calmly sitting back down on the sofa. Louise used the app to set a timer for ten minutes and joined her, continuing their conversation. Tarsa was stunned by how unashamed Hilda was of her body, she had breasts Tarsa could only dream of, but that came with thick thighs and a subtle caesarean scar above her pubis. After some not so subtle staring, Tarsa had to air her views.\n\n\"Sorry, but do you have to be naked for the timer check?\" She asked, trying her hardest to convey sincerity and not look like she objected.\n\n\"Engineers huh?\" Hilda noted to Louise. \"It's not just about the measurable, I have to experience it as it was meant to be used. For example, you are a stranger and I am baring my naked body to you, that is a bit embarrassing, not knowing how much time is left is one way of heightening the thrill, but what if you could put a stopwatch on your phone so I could have sight of how much longer I'm have to feel this way, watching the minutes or hours tick by. I am also mindful that I keep glancing at the DomBox to check if the light has gone green, if there was a sound to inform me, I could be tied up facing away from it and imagine the sweet relief when I hear the tone. I couldn't envision these things if I wasn't feeling the way I feel, being naked and handcuffed on Louise's sofa, could I?\" Tarsa had never heard such thoughtful analysis from someone handcuffed naked in front of her.\n\nAfter 10 minutes the DomBox light turned green and Hilda unlocked herself. She took a moment to rub her wrists and neck while explaining some minor technical tweaks, before putting the handcuffs and collar back on for the microphone test. She ended up saying the safe word in every time of voice, sometimes feigning pain or excitement and Tarsa felt a lot of pride that the microphone was always able to discern what had been said and unlock her. The only time the microphone couldn't pick up the safe word was when Hilda imitated having a gag in her mouth and they resolved to develop a safe word button for gag play.\n\n\"I have another idea.\" Hilda announced, \"I did a consulting gig for a spanking video, and I remember the sound guy pulling his hair out trying to get the sound balance with the pops of spanking. Is the sound unique enough to be picked up by the microphone? Because if so you could have the DomBox pick up how many times you've been spanked and not let you go until you reach a total.\" Tarsa had to admit that once again Hilda hat hit upon a good idea, while Hilda chatted with Louise she was able to Google some sound profiles of claps and slaps. It took barely any time to program in a sound pop of over a decibel range for a fraction of a second as a trigger, with a bit of extra time to build a rudimentary counter. Louise and Hilda marvelled at how quickly she worked.\n\n\"Well now we have to test that.\" Hilda announced, putting the handcuffs and collar back on. She leant over the sofa, her bottom high in the air for Louise, who came over and gave her an almighty swat on the backside. The counter Tarsa had set up ticked down from 10 to 9. Louise nipped into another room and came back with a variety of spanking implements Tarsa could not believe existed. They tried different paddles and whips, at different angles and powers, each time Hilda would squeal with delight. Louise even invited Tarsa to give Hilda a good couple of swats to be sure, something Tarsa enjoyed far more than she was willing to let on.\n\nWith the spank counter calibrated they moved on to the pedometer. Louise had an in house gym and decided Hilda should use the treadmill. The pedometer in the collar needed a bit of refinement to catch the steps properly but soon all were happy with the results and a sweaty Hilda had additional notes.\n\n\"Is there a way for the tech to know the difference between walking and running?\" She asked.\n\n\"Not the standard pedometer, but I could put a vertical G-sensor in there that we could calibrate with the force of up and down motions.\" Tarsa responded.\n\n\"That's good, for people who like exercise play you can force them to run for a certain amount of time, or paired with the GPS you could force someone to walk naked rather than running and hiding.\" These were all good ideas and Tarsa was amazed at the fetish creativity Hilda could conjure up.\n\n\"That brings us to the next test, GPS.\" Louise announced.\n\n\"I... um, actually, did a little test with that function myself last night.\" Tarsa admitted with a blush, having no idea why she would choose to share that but enjoying the atmosphere enough to be comfortable.\n\n\"Hey! Check out our own dark horse, you have many twists and turns don't you?\" Louise cheered. \"Learn anything?\"\n\n\"Um, yeah. The GPS now has a feature to be within a certain radius of the point, set to three metres as default.\" Tarsa stated.\n\n\"And to think you had to ask me earlier why I had to be naked. Real experiences get the best feedback wouldn't you agree?\" Hilda joshed, giving Tarsa a playful nudge.\n\nLouise set up the DomBox to release Hilda if she walked to the bottom of her back garden and back. Hilda suggested it would be an idea to add multiple destinations so people could pre-set up a journey rather than just going A-B. Tarsa was actually amazed at how big Louise's back garden was and marvelled at Hilda looking so calm as she navigated it wearing only a collar and some handcuffs, despite Brutus following behind nipping at her heels. When she got back she had plenty more notes and Louise decided it was now late enough for them all to have a glass of wine while they talked business.\n\nTarsa had always known Louise was a businesswoman, but her general way of being had always been antithetical to her professionalism, which is why Tarsa was so blown away when it came time for Louise to show her what she had been up to. The DomBox was now trademarked across the EU and USA. Louise had sourced every stage of the production line, and lined up a bunch of her existing bondage sets to have clasps replaced with DomBox compliant locks. Soon it wouldn't just be collars and handcuffs, the DomBox would work with body harnesses, head harnesses, chastity belts and a selection of padlocks all designed to hold one thing or another in place. \n\nLouise held out a chart with a timetable for implementation that had the DomBox available to the public in 3 months (with a launch party already in the early stages of planning.) She asked if Tarsa wanted to attend and if she was comfortable with it maybe even give a speech. Louise also asked if Hilda would be willing to take part in the demonstration.\n\nFor Tarsa it was all moving so fast, and she was excited to see where it went next.\n\n...\n\nTarsa sat in Louise's house and thought about how the past three months had flown by. She had spent every moment she wasn't at work or sleeping working on the DomBox. This hadn't left much time for house hunting, but the living arrangements at Louise's were enjoyable, Louise was a gracious host, Brutus had begrudgingly accepted her, she had even attended a couple of fetish parties, which were far more fun when you didn't have a boyfriend pressuring you to take part in every twisted activity he thinks of.\n\nLouise had gone ahead to the hotel where the product launch was taking place and Brutus was with the dog sitter, but although Tarsa was able to get launch day and the day before off work, she wasn't able to get the whole week so was left alone in Louise's house on a lonely Wednesday night.\n\nTarsa had just finished the last of the updates she felt were vital to the launch. She had stayed up late into the night working on an intuitive interface for setting up multiple conditions for the DomBox to release a slave. Now people could have their slave freed if they do one of many things, could force them to do multiple things, or even have a succession of things that have to be done in a specific order. As a coup de grace she had even added functionality to allow slaves to be forced to repeat a step if they failed to meet certain criteria. Tarsa let out a big yawn and leaned back in her chair, all she had to do was check everything was working fine and she could go to bed.\n\nShe knew she could quickly check the technical specs and maybe try placing the collar in different positions, but working with Hilda had opened Tarsa's eyes more than she would care to admit, late on a weekday night in an empty house in Berlin she plotted to do a full test of her system. She did an inventory of what equipment was available to her, placed some things in the DomBox safe, then designed a DomBox routine designed to test every aspect of the new system.\n\nSTEP 1:\n\nINPUT(spank)=10\n\nSTEP 2:\n\nOR(\n\nINPUT(G-sensor:\"running\")=300\n\nINPUT(Pedometer)=5000\n\nSTEP 3:\n\nINPUT(spank)=10\n\nSTEP 4:\n\nINPUT(GPS location)=1\n\nIF(INPUT(G-sensor)=>\"jogging\", AND(STEP-1, OUTPUT(collar speaker)=2\n\nSTEP 5:\n\nINPUT(GPS location)=2,\n\nIF(INPUT(G-sensor)=>\"jogging\", AND(STEP-1, OUTPUT(collar speaker)=2\n\nSTEP 6:\n\nINPUT(GPS location)=3,THEN:\n\nIF(INPUT(G-sensor)=>\"jogging\", AND(STEP-1, OUTPUT(collar speaker)=2\n\nSTEP:7\n\nINPUT(GPS location)=4.\n\nIF(INPUT(G-sensor)=>\"jogging\", AND(STEP-1, OUTPUT(collar speaker)=2\n\nTarsa hit confirm on the app and watched as her DomBox LED turned red. Any clasps she attached to herself now would be on until the end of her ordeal. Firstly, predicting how this adventure would develop, she placed her key to Louise's house in the DomBox safe, before leaving the DomBox hidden outside Louise's front door.\n\nBack inside she stripped down before grabbing hold of a harness made of leather straps. This had drawn her eye since the moment she opened the door, she slid it up her legs, feeling the leather tighten around her thighs as the straps separated around her pussy. She lifted the two straps of the harness over her shoulder, pushing her breasts through the slots and feeling them bulge as she pulled the harness tight, eventually clicking the whole thing into place on her back.\n\nNext she took a ball gag and pushed it into her mouth, clipping it shut behind her head, she would now be unable to talk until the DomBox allowed her. Then she put on the collar, a bit overkill with the amount of straps she had on but necessary for the sensors hidden within. Finally she got two leather cuffs and wrapped them around her wrists. So far nothing had really trapped her in the ordeal, if she chickened out she could always put some clothes over the harness or even just sit down at the computer and override the DomBox's programming. But the cuffs had two DomBox clasps on it that would attach to the harness behind her back, once those clicked into place she would be stuck. Tarsa took a deep breath, and felt a well of joy overflow inside of her as she clicked the cuffs into place.\n\nTarsa was now stuck in her erotic outfit, the red LED of the DomBox collar staring deep into her heart as she stared at her erotic predicament in the mirror. Once she had overcome the original excitement of her predicament, she began to get to work. Her first port of call, ten spanks on the bottom.\n\nAmong the wealth of toys and devices Louise had in her house was a spanking machine, usually brought out at parties. This was a simple device that had a paddle on a rotating wheel, with a stick part way round that would bend the paddle back and release it in a firm spanking motion as the wheel turned. Tarsa had lined this up with the dining table before she had started and she was eager to get her ass glowing and red for the rest of her ordeal. She clumsily fumbled to remove the remote control, before bending over onto the table, her breasts pressing against the unyielding wood she pressed the remote and heard the motor whirring to life.\n\nThe first time the paddle hit her bottom the motor was just getting warmed up and it didn't make the loud crack necessary to register on the device. Tarsa immediately thought about how that wasn't so bad, maybe she had been wrong to be so hesitant about programming in two sessions of ten spanks.\n\n*Thwack*\n\nTarsa screamed into her gag, the paddle had made hard contact across her bottom. Her breathing quickened as she felt her cheeks begin to glow, before another spank hit home. She squirmed on the table as her eyes began to water and she bit down hard on her gag as the paddle swung round again. Each spank lighting up her senses, Tarsa's world revolved around explosions of pain in her bottom and it seemed like an eternity before her collar beeped in acknowledgment that it had recorded 10 swats. Tarsa immediately pushed the off button on the remote, but it was not soon enough to prevent the running down motor from giving her one last soft spank on her crimson cheeks.\n\nTarsa pushed the machine out of the way and stood up, rubbing her raw bottom with her handcuffed hands. Next was Step 2, which Tarsa had set up as her dip into exercise play. She would have to run for 5 minutes straight, a difficult task in a tight fitting harness with her hands tied behind her back, if at any point her speed dropped below what the G-sensor considered running, the count would begin from scratch. She had also put in the safeguard that after 5000 steps the DomBox would end the step. Tarsa's legs shook as she got onto Louise's treadmill, and she looked at the controls.\n\nToo late Tarsa realised the flaw in her plan, the controls were on a panel at chest height, with her hands tied behind her back she was not going to be able to turn the treadmill on. She tried every gymnastic she could think of to try and manoeuvre her hands into place, but after a while she collapsed onto the ground in defeat.\n\nTarsa's mind raced at the possibilities, how was she going to get running. She could wander around the house for 5000 steps, but that was a long way, it would take forever, and it would be monotonous rather than fun if she wasn't trying to run. She considered what lay ahead of her in the ruthless DomBox programming and felt it wouldn't be too much to run around Louise's back garden. \n\nTarsa slid the back door open and looked out over Louise's garden, it was dark and foreboding. She lowered herself onto the grass, the cold dewdrops tingling under her feet. She plotted as close to a circular route as possible and began to run. The harness offered no support or control to Tarsa's breasts as they bounced around wildly, her handcuffed hands leaving her treacherously unstable as she dodged between the flowerbeds. Despite it all Tarsa kept running, knowing that if she didn't pull off five uninterrupted minutes of running she was doomed to walk 5000 steps just to get to the next stage.\n\nTarsa was part way round her third lap of the garden and the going was tough, she had begun to sweat and her long black hair was clinging to her face, the gag made it hard for her to take deep breaths and so her muscles were beginning to suffer. She turned a corner and suddenly felt her feet slide from under her on the wet grass. Her world tumbled around her as she hit the lawn with a thud, her hands unable to cushion her landing.\n\nShe struggled back to her feet, the left side of her torso and leg were now stained with mud she couldn't brush off until the end of her endeavour. Her shoulder ached from the impact and she resolved to not try the running route to freedom and more. Dejectedly she started to walk around the garden.\n\nIt took over half an hour for the collar to emit a beep of acknowledgment, at which point Tarsa collapsed where she stood. Her legs had a subtle dull ache from the exercise and she longed to brush off the dirt still clinging to her, moreover the ball gag had forced her to leave a trail of drool clinging to her body. Next up she had to clock 10 more spanks, the pain of the last spanks was beginning to fade and it was time to get her red cheeks positively glowing. She got up and went back to the house to warm up the spanking machine again.\n\nTarsa clumsily backed up against the back door and fumbled with the doorknob with her handcuffed hands, the fumbling quickened and frustration turned to fear, the back door wasn't budging, she was locked out wearing nothing but a harness, a gag and a collar. She could slip round the side to where the DomBox was holding the front door key, but she still had to find a way to get 10 spanks, not to mention the GPS path she had committed to once her bottom was raw.\n\nShe frantically looked around the garden, trying to find anything that she could use to spank herself with. She found a metal spatula attached to an outdoor BBQ but couldn't get the angle right with her hands tied just above the bottom. She tried sitting down heavily on Louise's garden furniture to no avail. She looked at the garden gate, wishing it were wooden so she could slam it on her bottom, but just her luck it was made of metal bars that didn't make enough noise.\n\nTarsa took a moment to sit and think through her options, with her heart beating a mile a minute and her brain a fuzz of fear and arousal. She took a deep breath and accessed her inner MacGyver. Thinking fast she grabbed the spatula and wedged the handle between the bars on the garden gate, she managed to liberate some string that was holding a tree to a post and clumsily tied it to the spatula in the gate to make sure it didn't slip. She had positioned the spatula in such a way, that as she gradually opened the gate, the spatula bent against the gatepost. Eventually when the gate had opened far enough, the spatula would release and Tarsa heard a satisfying whoosh of speed.",
        "Tarsa steadily lined her bottom up to the edge of the gate, slowly she edged forward. After two steps she felt a wave of joy and pain as the spatula swatted her bottom with a loud enough smack that the collar must have picked it up. Her bottom was cold and still slightly damp so the pain permeated to her bones and Tarsa felt her bottom radiate with a sudden heat, but she was proud of herself for her ingenuity and excitedly reset her improvised spanking machine.\n\nEach spank sent shivers up and down Tarsa's body, the spatula was cold and unyielding. Due to the unique setup the spatula always hit more or less the same part of her bottom, causing Tarsa to scream into her gag. After the tenth swat, the collar graciously gave a friendly beep to let Tarsa know that her bottom was sufficiently spanked for the DomBox, it felt like it was glowing in the dark.\n\nFinally it was time for the last part of her predicament, her late night deviant walk. She had programmed in four GPS locations that she would have to visit one after the other, however in a fiendish twist, if at any point the collar sensed she was moving at anything faster than a jog, it would take her back one step. At the time memories of her walk around the hotel had made Tarsa daring in her programming, now she was facing it her teeth began to chatter.\n\nThe first location was the entrance to a park near Louise's house. It was very late at night on a weekday so Tarsa was hoping for quiet streets in the sparse wealthy neighbourhood she had found herself in. The air was still and quiet but that didn't stop Tarsa's heart from practically leaping out her chest as she slowly began to walk down the front driveway and away from Louise's house. She reached the pavement, turned right, and left behind her the safety and privacy in favour of more adventure.\n\nTarsa was extra careful not to walk too fast, the first part of the adventure was the most cruel as if she tried to run before she reached the park, she would have to give herself ten more spanks before she could continue her adventure. She turned a corner and shuddered as the house was no longer in sight, but down the street, thought the flood of lamplight the entrance way to the park beckoned. She continued to walk down the street towards the park when the sound of an approaching car filled her ears. \n\nTarsa panicked, she desperately wanted to run and hide but she knew the consequences of that would be unthinkable. Ahead of her there was a car parked by the side of the road that she was sure she could crouch behind, but it was a good way away. She quickened her pace, careful to keep a smooth walking motion that wouldn't trip the g-sensor, but in a matter of seconds her body was lit up by car headlights. She screamed into her gag as the car streamed past her, knowing that some stranger could see her naked harnessed body. The car slowed a little but kept driving away into the night. Tarsa collapsed next to the parked car and squealed to herself, embarrassed to her core but mainly wishing her hands were not handcuffed away from her now streaming pussy.\n\nOnce she had gathered her wits, Tarsa once again began walking to the park. Luckily no more cars travelled the road and she practically leapt for joy when she reached the gates and heard her collar make the friendly beep that acknowledged her completing the first part of her journey. She ducked behind a tree out of sight and prepared for the next step. Down a small path through some trees there was a football field, Tarsa had placed her second destination slap in the middle of it, remembering the rush of having to stand somewhere with no cover in any direction.\n\nTarsa walked down the dark weaving path through the trees, with the streetlights being left behind, the only light was Berlin's light pollution bouncing off the cloudy night. The path twisted and turned and with every corner Tarsa's heart raced at the thought of someone being there, not noticing until she practically bumped into them. She reached the clearing and gasped at the sheer size of the football field, it was much smaller in her head when she had planned this.\n\nThe path emerged by the goalposts, meaning the furthest possible walk with no cover for Tarsa. She hid behind a tree, intensely scanning the dark horizon, looking for any sign of human life. With trembling legs she stepped out and began to walk across the grass. As she walked further and further from cover, she squeezed her ass in fear, every rustle of the wind or movement in the corner of her eye made her want to run for cover. She got to the centre of the field and heard the friendly beep echo around the park, suppressing a giggle, she turned and began to walk to her next destination.\n\nThe third GPS tag was located in a children's play area further across the park. When she programmed in this one, fresh in Tarsa's mind was thoughts of delinquents gathering there to smoke and drink, forcing her to either wait for them to disperse or walk among them, having to endure whatever they wanted to do with her vulnerable trussed up body. She'd never known her pussy to be pleading for attention as much as it was as she began to walk off the pitch and towards the park.\n\nFollowing another winding path through the park, Tarsa made her way towards the playground, her ears pricked for sounds of other people hanging around late at night, part of her hoping to find a willing accomplice to fuck her right there and then. She turned the corner to see an abandoned play park, begging for her to desecrate it with her harnessed body. She strolled into the middle of the park and with a satisfied sigh she heard another beep of completion. She glanced around the park, daring the darkness to yield potential witnesses to her humiliation seeing nothing but playpark equipment. As she glanced around she had a naughty idea.\n\nBy the edge of the park there was a spring rocker, a brightly coloured wooden horse, attached to the ground with a large spring that, during the day, allowed children to bounce backwards and forwards. Tarsa approached, and without fear or regret, began to grind her thirsty pussy against the horse's head. The effect was immediate, Tarsa's pussy went from a tingle to a throb as the horse grinded against it, the spring taking every thrust and amplifying it until Tarsa's whole body was flowing with passion. As her pleasure began to build up Tarsa began to thrust herself harder and faster against her new found plaything, moaning with delight into gag.\n\nTarsa was screaming with joy when she heard her collar make a different, more harsh beep than before, the G-sensor in her collar had mistaken her thrusting as running and was informing her that she had been taken back a step. The sound barely slowed Tarsa, she was too close to a glorious orgasm to stop now, her hips thrusting as hard as they could, grinding her pulsating pussy into the horse, she felt wave after wave of orgasmic bliss roll over her body, shivering and thrusting she heard the collar make another buzz of disapproval before collapsing onto the ground to twitch in post-orgasmic bliss.\n\nOnce her head was clear Tarsa took a moment to think through what had happened. As far as she was aware she had been taken back two steps, by her calculation that meant she had to go back to the centre of the football field. She sighed and walked back to the path heading towards the football field.\n\nTarsa was part way down the path towards the field when she felt something fuzzy brush up against her leg. She looked down to see a brown cocker spaniel expectantly drop a tennis ball at her feel. Her first thought was that she wasn't in a position to throw a tennis ball for an excitable dog, she in fact had a ball in her own mouth right now. It took her a while to figure out that a dog must also be mean a dog walker and panic. She quickly and carefully walked off the path into the trees, while behind her the sound of a man calling for his dog wrung through the park behind her. From her hiding place behind a tree she saw a young man with a whole gaggle of dogs, some on leads, some running free. She wondered what kind of weirdo walks dogs at such a late hour before realising she didn't know what time it was, plus she could hardly be judgemental when it came to weird night time park activities.\n\nShe waited in the bushes until he had passed, giving a good amount of time to be safe before heading back to the football field. As she walked back into the centre of the football field, her mind raced at sharing the park with another person as she heard the beep from the centre of the field and began to head back to the park she actually felt a drip of her pussy juices run down her leg. Once she got back to the path through the trees, her progress became slower, trying to hide her footsteps and listen for any errant dog walkers. Nonetheless she made it to the playpark without issue and focussed her attention on the next challenge. Her final GPS location.\n\nAs she got more and more into planning the predicament, Tarsa was increasingly horny and erratic, and she had really decided to push herself for the final GPS position. Tarsa gulped knowing that her next destination was the amphitheatre on the far side of the park. She followed yet another path through a wooded area and came across a large field that sloped towards the amphitheatre. The plays in the park were very popular in this area so the area around the amphitheatre was totally cleared so as people from far and wide could see what was happening on stage. As well as this, Tarsa was shocked to discover that decorative lights were left shining on the stage throughout the night, meaning she would be lit up like a Christmas tree to anyone who came into a large area of the park.\n\nTarsa walked down the hill and up to the stage of the amphitheatre, clumsily she shuffled herself on to the chest high stage by leaning over it and wiggling herself up. She staggered to her feet and wandered around the stage, her ears desperate to hear that final beep that told her the DomBox was now unlocked. Eventually she was able to wander to just the right part of the stage to hear her collar beep, she was one walk in the park away from getting back to safety.\n\nWith the bright lights shining on her from all angles, Tarsa could not see beyond the amphitheatre, which is what made it so shocking to her when she climbed down and was face to face with the dog walker from earlier.\n\n\"Oh my God, are you OK?\" He asked, eager to help. Tarsa was not able to do anything but groan into her gag, her hands desperately trying to pull their way out of her handcuffs to cover her exposed flesh. \"Do you need me to call the police?\" Tarsa's eyes grew wide and she shook her head vigorously. \"Umm... did you do this to yourself?\" Tarsa hung her head low and shamefully nodded. \"OK, this is a long shot but are you a friend of Louise Wolff?\"\n\nTarsa's mind raced about how this random dog walker would know about Louise, but her thoughts were answered as Brutus gave a friendly yap and jumped against her leg, this was Louise's dog sitter. Tarsa nodded and immediately the dog walker got the measure of the situation.\n\n\"Well any friend of Louise's is a friend of mine. My name is Max, can I walk you back to Louise's house?\" Tarsa looked the man up and down, he was young and blonde, definitely not one Tarsa would pass an opportunity to spend time with, Tarsa figured as she had already been seen by him she might as well be chaperoned back and so nodded at the suggestion. Max reached into his backpack and pulled out one of his spare leads, hooking the clasp around a ring in Tarsa's collar. 'Come on girl.\" He cheerfully ordered.\n\nTarsa stood stunned for a second, she had clearly misinterpreted what he had meant by \"walk her home\". The lead pulled tight and Max was forced to turn around.\n\n\"Come on girl, heel.\" He commanded in a former tone of voice, Tarsa obeyed and began to keep up with the other dogs following behind. \"You can't really say a safe word with that gag in you, so if I go too far just hum the first notes of Beethoven's fifth symphony around your gag\" He instructed, giving Tarsa a quick demonstration of the hums he would look out for. Tarsa felt a tingle deep inside of her, she had just adopted a Dom in the park, one who cared for her but would still put her through this humiliation. She felt like a pet and it made her crimson to get core.\n\n\"I suppose you can't really tell me your name through that gag, but as you are now a female dog I'm just going to call you Bitch, OK?\" Tarsa's mouth gave a hum of approval before her brain had any say in the matter. Max continued a slow meandering walk across the park, making sure each dog's needs were met. Tarsa noticed that the sky was beginning to lighten, she had been up all night on her adventure and morning was coming fast. She tried to rush Max by pulling ahead on the lead but every time she did Max would pull her back with a firm command of \"heel!\"\n\nMax did not adjust his walking route one bit for the sake of Tarsa, he walked from the amphitheatre field to a lake that he liked to walk around, and then on to the largest pathway that led right through the centre of the park. Tarsa squealed to herself as they reached the path, it was still very early in the morning, but in the distance there were clearly other people that Max had no intention of avoiding. The stares of the first pair of joggers penetrated Tarsa like a spear through the gut, then Max encountered another dog sitter and stopped to have a quick chat while the dogs socialised around Tarsa's feet. \n\nOnce he got moving again Tarsa was feeling deeply degraded, but it was about to get worse as Max took a detour to the side of the wide path. Tarsa stared in horror as he walked towards the public toilets, her horror doubling as one by one he tied the dogs to a lamppost outside.\n\n\"Now all of you behave while I quickly nip to the toilet.\" He sang before disappearing behind the door. Tarsa was now tied and harnessed in a park, and as the sun rose more and more people began to walk by and stare.\n\nMax clearly took his time, Tarsa felt she had been outside forever and seen by the entire population of Berlin, her shame coalescing in a ball of tension in her stomach that yearned for release. Eventually Max came out of the toilet and collected up his dogs, making Tarsa swoon with relief. He broke off the big main path to a small path going through the trees that Tarsa recognised as the closest exit to Louise's house. She was overjoyed that she would soon be out of these handcuffs and out of public now that the sun had chased away any vestiges of twilight. They got to the gate and Max stopped.\n\n\"OK everyone, that was a good walk, but I noticed Bitch hasn't done a wee yet. I don't want her making the carpets dirty so we're going to wait by the gate until Bitch takes a piss.\" Max announced. Tarsa stared at Max, his tone was kind and singsong but she was under no illusion this was an order. She looked around, the gate was directly next to the road, anyone walking or driving would see her so she had to go quickly. She closed her eyes tight and slowly squatted next to the gatepost. She clenched every muscle but some vestigial semblance of decency meant nothing was coming out. Suddenly there was a roar of a car engine and the blare of a horn being sounded repeatedly. Tarsa yelped in shock, her bladder loosening to let out a stream from her pussy as a cyclist watched in passing and the other dogs sniffed around the spreading puddle. Tarsa wished the world would swallow her whole as she squatted and urinated in front of anyone nearby, doubly so when she finished and Max chirped \"good girl\".\n\nOnce Tarsa was done Max walked her the rest of the way home, dragging her along the pavement as the morning commuters drove past, and the nearby homeowners watched in disgust from their front windows, she could have sworn half the neighbourhood must have seen her disgrace before they walked into Louise's driveway. Max walked round the side to tie up the dogs in Louise's back garden while Tarsa found the DomBox and released herself from the handcuffs and gag, leaving on the harness. She got out the front door key and went into the house, where she made a bee-line for the back garden. She practically tackled Max through the fence as she thrust her body into his, her mind a whirlwind of lust, she could just about push out a sentence between each passionate kiss. \n\n\"I... need... your cock... in me... right now.\" she demanded, the bulge in his trousers confirming Max was happy to oblige.\n\n...\n\nAs Tarsa lay gasping for air in post-coital bliss on Louise's lounge floor, the drained dog sitter caught his breath long enough to ask.\n\n\"By the way, I never got your name?\"\n\n\"Bitch.\" Tarsa replied, \"my name is Bitch.\"\n\n...\n\nTarsa's morning was spent between scattered naps, DomBox launch preparation, and spacing out to mentally return to the fun she had forced upon her that night. She packed up some clothes and sundries in one bag, and the DomBox with several attachments in the other, before making her way to the airport to catch her flight to Amsterdam. Checking in at Berlin airport was no too difficult, although Tarsa felt a deep blush at the look she got from security officials scanning her bag filled with vibrators, handcuffs, harnesses, whips, locks and every form a sex toy imaginable. She arrived at Amsterdam to see a chauffeur waiting with her name on a sign, an unexpected touch of luxury courtesy of Louise, the hotel was close enough to Amsterdam to be classy, but far enough on the outskirts that they wouldn't attract too much attention.\n\nTarsa walked into the event space to see a bustle of activity, Louise in the centre of it all directing builders, decorators and event managers to create the perfect blend of official business product launch and dirty sex party. Louise saw Tarsa and immediately every other person around her became an irrelevance as she strode over to her to give her a big hug.\n\n\"Tarsa darling, the star of the show, wow you have some bags under your eyes girl... I know that specific look of exhaustion, someone got laid last night.\" Louise guessed.\n\n\"... This morning.\" Tarsa admitted.\n\n\"Now that's how you get back on the horse, what was he like? After what you had before you need someone with a big heart, big wallet and big cock.\" Louise pressed.\n\n\"Um... Max the dog sitter\" Tarsa responded, biting her bottom lip.\n\n\"Oh wow, two out of three.\" Louise quipped, \"you know in the past I have also housed some men and women at his kennels alongside Brutus, he's very open minded.\"\n\n\"Oh I am aware.\"\n\n\"Now I know what the first topic of conversation at the bar tonight will be, but for now I have a party to put together and you have a room to check in to.\" Louise handed Tarsa a key to her room, it was not a cheap one.\n\nFor Tarsa the day was a whirlwind of excitement, after she had unpacked and got the full measure of her huge and luxurious hotel suite, she wandered downstairs to have a drink and watch the hustle and bustle of people turning a large but drab hotel space into a grand ballroom of fetishes with a magnificent stage at the front. Eventually as the evening wore on Louise was comfortable enough with progress to take time off to have some good and wine with Tarsa. The discussion began with an itinerary for the launch, Louise was going to run the show, welcoming people and hyping up the crowd, Tarsa's job was control the DomBox during the demonstration with Hilda, while talking over its specs and capabilities, before Louise opened it up to the audience for questions. After all this was done, the event would open up to a big party with plenty of people having free test runs of the DomBox.\n\nWith masterful social awareness Louise surmised that Tarsa was comfortable and drunk enough to begin to discuss what she was dying to hear about.",
        "\"So what happened with Max the dog sitter? I want to know everything.\" she splurged. Tarsa felt a familiar lump of embarrassment in her stomach, but Louise had always been supportive of her, and she surmised that if she didn't tell Louise now she probably would find out from one of the many neighbours who saw her humiliation that morning. Over the course of a couple of glasses of wine she told Louise the whole story.\n\n\"Wow!\" Louise exclaimed with genuine surprise and admiration, downing her wine. \"Wow! I saw you getting into my world but I figured, hey let her dip her toes in, maybe she may ask to borrow some handcuffs or one of my milder whips. Then I'm away one night and you go ahead and do stuff kinkier than I've seen from some of the most experienced people on the circuit. You're an absolute demon, maybe you should give a demonstration after Hilda.\" Tarsa profusely declined the offer but had to admit to herself that she was tempted. \n\nThe conversation and merriment didn't last too late, as Tarsa and Louise were aware they had a long day ahead of them tomorrow, so they turned in early and Tarsa slept like a baby in a large luxurious bed.\n\n...\n\nThe next day Tarsa was having a very fancy breakfast when Louise came to join her, not long after Hilda arrived, a middle-aged man in cargo trousers carrying some bags at her heel, looking like a suburban married couple on a tacky holiday rather than the entourage of a fetish legend. We all had breakfast together and watched as the lobby began to fill with the wild and exuberant that made up the totality of Louise's fetish contacts. They all decided it was time to go back to the hotel room to get ready for the presentation. Tarsa had finished her coffee and begun to make her way through the hotel lobby towards the lift that led to her room, when she felt her arm grasped, cutting her momentum.\n\n\"Tarsa!\" announced the friendliest tone of a voice that filled Tarsa with dread.\n\n\"Ron, what are you doing in Amsterdam?\" Tarsa spat, pulling her arm away from his hand.\n\n\"I know we've been going through a rough patch recently, but I couldn't miss your big day.\"\n\n\"We're not going through a rough patch, we're going through a separation.\"\n\n\"Really, after all you've been through in the past month you have to admit I was right. I tried to get you to be more open to fetishes and now you're at an international fetish party, launching your own speciality sex toy.\"\n\n\"You never cared about me, you wanted a fuck toy that could cook for you.\" Their discussion was beginning to turn into an argument and it was attracting attention. Luckily enough Louise had noticed what was going on and swooped in to rescue Tarsa.\n\n\"Alright, move along piss dribble, the talent had to get ready.\" Louise interrupted, quietly waving over security behind her back.\n\n\"This doesn't concern you.\" Ron spat back, he was not used to being talked to this way by a woman.\n\n\"Honey, you concern me.\"\n\n\"Yeah, well what are you going to do about it?\" Ron asked, turning to try and intimidate Louise.\n\n\"Me, nothing. But these two large men on my payroll are eager to continue this conversation outside.\" Security arrived with impeccable timing and Louise blew Ron a kiss as he was escorted out the door.\n\n...\n\nTarsa stood at the side of the stage with the DomBox under her arm, wide eyed at the size of the crowd. Tarsa knew that Louise had contacts but she never suspected she could fill a large room with people eager to see a sex toy of her own design. If Louise had similar nerves she wasn't showing it, she seemed just as comfortable and eccentric on stage as she did in the bar, selling the crowd on a totally bullshit story of what happens when the best private security engineer in Germany was so unsatisfied with her terrible boyfriend that she built an integrated bondage system and then immediately dumped him. She claimed that Tarsa was installing her security system and just happened to mention her foray into bondage and she bought the rights off her the same day for a fortune, and now Tarsa doesn't need to work ever again but continues to work for Louise because she's doing what she loves.\n\nLouise finished her speech introducing the DomBox to rounds of applause and camera flashes, at this point Hilda joined Tarsa off at the side of the stage, wearing a drab business suit and the DomBox collar, for the first time ever Tarsa noticed signs of nervousness in Hilda's eyes. She took a moment to wonder what could be going through Hilda's mind right now, about to be punished and humiliated in front of a large audience, she had to force herself to stop thinking about it as it made her insides feel warm in a way that was not conducive to a business presentation.\n\n\"... So please welcome to the stage, inventor Tarsa Gul and lead product tester Hilda Weber\" Tarsa and Hilda walked out, waving to the polite applause.\n\n\"So this is the DomBox.\" Tarsa announced, showing it to the audience. \"Throughout this demonstration the DomBox app on my phone will be screen mirrored to the projector above so you can see just how easy it is to program in customised bondage scenarios for yourself or your loved one.\" Tarsa went through the basic product pitch while Louise went to fetch a box of equipment for the demonstration.\n\n\"So now what you've all been waiting for, the demonstration.\" Without prompting Hilda removed the drab grey suit so she was standing in front of the audience wearing nothing but her collar. \"As you can see, at the moment the collar has a little green light on it, this means that Hilda can take it off whenever she wants. The collar comes as standard with the DomBox as it is filled with sensors but it isn't the only thing that can feed in. So let's start with something basic, using the app, you can see that I have programmed in a simple routine that Hilda cannot take off the collar until she has been spanked ten times.\" A counter appeared on the screen and Hilda obligingly bent over for Louise. Louise gave her a thwack on the bottom and the counter dropped to nine.\n\n\"But that's a bit simple for someone of Hilda's taste. Once a program is set it can't be altered but the DomBox has a programmable safe word to end everything, Greengrocer.\" The counter dropped to zero and the light on the collar turned green. \"Now let's add a second step to the counter. In this new program Hilda still has to be spanked ten times, but it won't count unless the collar hears her say 'thank you master after each one', so let's give that a go.\" Tarsa gave Hilda another spank and the counter stayed at ten.\n\n\"Thank you, master!\" Hilda announced, dropping the counter to nine.\n\n\"Now release from a collar isn't that great on its own, but this chest is filled with DomBox accessories that can be programmed in to give Hilda a good time so for now how about we cuff Hilda and attach these nipple clips?\" Louise acted as Tarsa's assistant, cuffing Hilda's hands behind her back before attaching two nipple clips on a chain between her nipples. \"That's better, now Hilda, go and ask the audience nicely if they are willing to spank you and get you released.\"\n\nHilda slowly lowered herself off the stage and went to the front row of the audience, pleading with them to spank her, each time she would thank her master before moving on to another one.\n\nEventually Hilda finished getting spanked by the audience and returned to the stage to remove the handcuffs and nipple clips. By which time Louise had put all of her equipment on a rack and Tarsa was displaying a list of all DomBox functions on the screen.\n\n\"So we now come to the question and answer section, questions can be about the particulars of the product or a demonstration from Hilda here.\" Louise announced, loving the sight of hands going up. The initial questions were business focussed, asking about promotions, pricing and scheduled updates that Louise was able to handle with her usual class. Eventually Louise called for a question from a man at the back of the room that Tarsa recognised as Hilda's husband.\n\n\"I see a bunch of exciting features on that list, is it true I can force someone to go back a step if they don't meet criteria?\" Tarsa could have sworn this was a planted question but judging from the look on Hilda's face she thought this may be a married couple hijacking this event for some play. \"If, for example, I requested that... Hilda was it, put on a chastity belt on full vibration, before walking to the end of the car park and back, could I have it force her to do it again if she doesn't moan with excitement the entire way back.\" Hilda gave her husband a performatively angry glare, the kind with no malice but heavy implication she'd be getting him back later for it.\n\nTarsa programmed in the GPS coordinates and the condition that if on the way back the microphone picked up less than 60db for less than five seconds she would have to go back. Meanwhile Louise lubricated the dildo and butt plug attachments to a DomBox chastity belt, before easing them into Hilda and snapping the belt closed, a red light confirming the belt wouldn't come off until her husband's ideas had come to fruition. Once on Louise turned up the vibration and gave Hilda a friendly swat on the bottom to help her on her way. Slowly Hilda walked down the aisle and towards the exit already moaning with delight as Tarsa switched the app to show Hilda moving as a pin on a map.\n\nWhile Hilda was on her adventure, Louise decided to keep things moving with the questions. There were a few more technical questions while Hilda struggled to make it back from the car park. The questions began to thin and Louise noticed a lot of hands going down without having asked their questions.\n\n\"I'm sensing that a few more people had demonstration requests so how about we take a few of them and have them waiting for Hilda once she makes it back.\" Louise observed. Automatically a few hands went back up.\n\n\"I'm not looking for anything too kinky, I just want to see if the DomBox can be trained to listen to any voice command, even ones it hasn't heard before. So could we start a counter that forces a slave to repeat 'I'm a horny bitch' ten times.\" The first questioner asked. For Tarsa this was an easy setup and she was about to answer when Louise jumped in.\n\n\"Well that one is easy enough, surely you could demonstrate that Tarsa?\" Tarsa could see the look in Louise's eyes, it sounded like a reasonable request but deep down she knew it was just the start.\n\n\"OK,\" she tentatively replied. \"As Hilda is using the system I'm going to need another collar that I will program into my own DomBox account. Usually this means holding it in front of the DomBox but I know my ID and how to program it in on the fly.\" Tarsa announced, plugging the collar and a spare DomBox into her phone and quickly reprogramming them. She strapped the collar around her neck and was about to open the app when Louise interjected.\n\n\"Come on Tarsa, you're not going to just take off a collar are you? Don't you want to give them the full experience?\" Tarsa gave Louise a stare and saw a cheeky grin on her face. \"What do you say we get our lead programmer naked and in an arm sleeve until she says 'I am a horny bitch' ten times?\" Tarsa rolled her eyes for the crowd, but felt a tingle of excitement over what she was about to do. The audience was a sea of cheering and celebration and caught up in the moment Tarsa nodded in agreement. She quickly reprogrammed the arm sleeve to her account before standing on stage and facing the audience, trembling at what came next.\n\nTarsa's shaking hands struggled with the zip on her dress, before awkwardly wiggling her body to let it fall to the floor. The audience all noticed that she was not wearing matching underwear and her large beige knickers (her most comfortable pair) confirmed to everyone present that this was not a planned stunt. Tarsa squealed with embarrassment while her hands began to work at the bra clasp behind her back, it took longer than usual but she managed to steady her nerves long enough to get the clasp off and release her breasts to the approval of the crowd. Moving swiftly to act before she was paralysed by her embarrassment, Tarsa quickly pulled down her knickers and added them to the pile on stage.\n\nTarsa's heart was tap-dancing against her ribs as she stared at the audience applauding her naked body, she wanted to run and hide but managed to hold herself in place long enough for Louise to delicately move her arms behind her back and slip on the sleeve. Tarsa gasped as her arms tightened behind her.\n\n\"OK, so how do you set this up?\" Louise asked aside from the audience, picking Tarsa's phone off the floor.\n\n\"Before you do that you need to log out of the test account and log into mine, my username is administrator, password BeanieBab1es!\" Louise followed Tarsa's instructions and a serious look crossed her face.\n\n\"It's not letting me in\" Tarsa came and watched Louise follow her instructions and was mortified, she had followed them properly. \"Is there a bug? We need to fix it but we can't let people catch on.\" Tarsa immediately tried her safe word, the light on the collar remained red. She tried talking Louise through a couple of fixes but nothing seemed to be working.\n\n\"I don't know what's gone wrong but the main controls for the app are on my laptop back in my room.\" Tarsa was panicking but Louise was able to keep her cool, turning to address the audience.\n\n\"Ladies and gentlemen, a slight hiccup, Tarsa still has a program running from last night which includes the GPS coordinates of her room, so she's going to quickly nip back while we continue to think of things for Hilda to do.\"\n\n\"Couldn't she just use her safe word?\" One of the audience helpfully pointed out. Louise floundered but Tarsa was able to think of an excuse.\n\n\"I was working on new ways to integrate safe words and motions to allow increased use of gags, but to do that I had to switch off safe words on my account. Don't worry the option to switch off safe words will not be available on publicly released DomBoxes.\" Tarsa bullshitted. She had a moment to appreciate her quick thinking before realising that everyone was staring at her expectantly, she was on the hook to walk back to her hotel room like this.\n\nShe got Louise to get her room key out of her bag, gulped and began to make her way off the stage and down the aisle. Just before she got to the door, it burst open and Hilda, screaming in orgasmic bliss, fell into the room. While all attention was on her Tarsa snuck out.\n\nThe lobby was filled with people who just witnessed an orgasming housewife moan her way to and from the car park several times, so the sight of another naked woman barely phased them. Tarsa still felt a pang of humiliation but overcame it in order to run towards her room.\n\nAs she navigated the hotel corridors, Tarsa closed her eyes tight every time she passed a new holiday maker, heating their gasps and comments with crystal clarity as she ran to her room. She managed to get the door open and collapsed to the floor with relief as she closed it behind her.\n\n\"Wow, that worked quicker than I thought.\" Announced Ron, sitting on Tarsa's bed. \"I felt like we needed to finish our talk without interruption, and I know you well enough to know you use BeenieBab1es! for all your passwords. I didn't expect you naked though, that actually skips ahead a couple of steps on my plan.\"\n\n\"What have you done?\" Tarsa yelled.\n\n\"I've just locked you out so we can talk and I can show you that I was right. Right now your nipples are standing up and I bet you're wet down there, did you come here from the even naked?\" Tarsa did not respond and just gave him an angry scowl. \"Look, it's water under the bridge now, I wanted you to get into this and you clearly are, so why are you still fighting me?\"\n\n\"Because if you hadn't been a colossal wanker I would have gotten into this sooner. But our whole relationship was about you wanting what's best for you and now I see it I want nothing to do with you anymore.\"\n\n\"No...\" Ron mused, \"no you just won't put aside your pride for one second to admit I was good for you. Well if you won't maybe your invention will.\" Ron grabbed Tarsa's laptop and began to type away, Tarsa tried to see what was going on but Ron pushed her away and with the arm sleeve she couldn't fight back. Eventually he triumphantly struck enter.\n\n\"Having admin access is great, I just reprogrammed your active DomBox session. So DomBox is going to force you to make a choice. Option one, you walk to GPS coordinates of my room, room 156, and say the words 'I'm sorry Ron.' Or, if you genuinely only like this and not me, you will have no problem taking option two; going to the GPS coordinates of the centre of the exhibition hall, yelling the words, 'I'm a whore, do whatever you want with me' and then not say anything else or leave the hall for one hour.\" Ron shot her one last smile as he left the room. \"The choice is yours.\"\n\n...\n\nRon sat in his room, wondering what was taking Tarsa so long. He had left the door unlocked and was keeping an ear out for the sound of hurried footsteps in the hallway. Suddenly his phone bleeped, he had received a text message from an unknown number, it simply said 'BeenieBab1es!' followed by a link. Ron clicked on the link and saw Tarsa's smiling face.\n\n\"The viewer count in the stream has just gone up to one so I assume you're watching Ron. Firstly, you are an idiot. All I had to do was make eye contact with Louise and she realised something was wrong and cut me out of my bonds. Which is lucky because there isn't a function to listen for my words, you programmed the timer to restart every time it heard any words from anyone. Now I have been trying every which way to get it through your thick skull that I'm not interested so let's do this.\"\n\nThe camera zoomed out to reveal Tarsa was stood in the middle of the exhibition hall, she was in the same state Ron had left her in, wearing nothing but a collar and a sleeve. Around her men and women in a variety of fetish outfits wielded every sex toy Louise could get her hands on.\n\n\"Fuck you Ron.\" Tarsa shouted. \"Everyone else, I'm a whore, do whatever you want with me.\"\n\nRon went on to watch as his ex-girlfriend was violated by a room full of people. Tarsa had never let Ron do any anal play, but she moaned with delight as Hilda's husband push a moderate sized butt plug into her. Tarsa had always shut down Ron's request for a threesome, and now he watched as she sucked a stranger's cock while Hilda fucked her pussy with a strap on. Tarsa had all manner of vibrators and wands rubbed against her clit as she screamed in orgasmic delight, begging for more degradation between pleasuring men and women alike with her mouth at the hand. She was whipped and spanked with all the tools she could handle until her tits and bottom flowers red. After an hour Tarsa stopped everyone for a second so she could address the camera.\n\n\"Well it's been an hour like you said, so I'm going to turn off the stream, but rest assured I'm not stopping, the night is young, I'm going to make a list of every weird and fucked up fetish you wanted me to indulge and I'm not leaving Amsterdam until I've done them all. You guys will help right?\" The room cheered. \"I think I'll start with golden showers, that was always top of your list. But before that, everyone on three, 1... 2... 3...\"\n\nThe room in unison yelled so loud Ron could hear it through the halls as well as through the stream.\n\n\"Fuck you Ron!\"\n\nThen the stream went dead.\n\n...\n\nTarsa woke up in her room, surrounded by men and women who had been with her all night while she indulged every sick fantasy they could conjure, she was sticky and in pain but supremely happy. She managed to throw on enough clothes to be decent and headed down to breakfast where Louise was already waiting.",
        "\"Early sales of the DomBox are through the roof, and Ron checked out in a huff last night. I'd say this trip was a success.\"\n\n\"Yeah, but it was a bit much, maybe next time you have a business trip you could just keep me in kennels.\""
    ],
    "authorname": "Iwroteathing",
    "tags": [
        "degraded",
        "enf",
        "fetish",
        "humiliation",
        "moral degeneration",
        "pet play",
        "predicament bondage",
        "public humiliation",
        "self bondage",
        "spanking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-dombox"
}