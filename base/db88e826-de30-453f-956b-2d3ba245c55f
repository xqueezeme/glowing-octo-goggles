{
    "title": "Treasure Ch. 61-65",
    "pages": [
        "Alpha Forrest held it together until the three Warriors left the room and closed the door. The three, all members of the Banff Pack, had just informed him their Alpha was recalling them immediately and they were leaving the Pack. It had been a bad day, starting with the loss of all his Omegas. \n\nHe hadn't been woken with his coffee as he normally was at 0530, and before six the Pack was in an uproar. The kitchen was dark, nobody was around making breakfast, and the guard at the gate hadn't even checked the vehicles that were leaving to see who was in them. Alpha Forrest and others tried linking them, but by the time they knew they were gone, it was too late to do anything. They were out of range of the Pack. \n\nThat was just the tip of the iceberg. The Pack was unsettled after the attack on Coral, and the sudden departure of his top Beta and the visiting guests further destabilized them. The other Council members left early in the morning; Chairman Gruber was flying back to Germany, and Councilman Waterman to Wyoming. He spoke to both of them during the course of the morning, updating them on the disappearance of Beta Carlson and the Omegas. \n\nSomething happens around lunchtime, when the first of the loanee Pack members started coming to his office to state they were leaving. Since almost the entire old Pack leadership was eliminated after the trials, and the remainder were Omegas or young males needing rehabilitation, the Council filled the Pack with volunteers provided by North American packs. During the time those people worked at Bitterroot, they would transfer their allegiance to Councilman Forrest, who was the designated Alpha. He was dependent on these people for everything, since he had no Pack of his own. \n\nNow it was nearly dinnertime. As the men left, he opened a list in his desk drawer of the Pack in North America. \n\nAdirondack Pack, New York \n\nBanff, Canada \n\nBitterroot, Montana \n\nBlue River, Canada \n\nCascade, Washington \n\nCasper, Wyoming \n\nDenali, Alaska \n\nDonner, California \n\nKatahdin, Maine \n\nMonongahela, West Virginia \n\nOxbow Lake, Minnesota \n\nHe rubbed his temples as he looked at the list; the names that had been crossed off were ones where people had left today. Five packs out of ten had pulled out already, leaving his Pack in shambles. None of the Alphas would say why, just that events had occurred that forced them to withdraw their people now, and they did not know if or when they would be replaced. There was more to it, and he knew what it was. Rori King and her band of misfits were turning the Packs against the Council. \n\nTime was running out on him and the Council. The deal they had made seventeen years ago, to turn a blind eye to one Pack taking out another in exchange for millions of dollars in compensation, was in danger of being revealed. The money was a bonus, a payment for services, but the real kicker was in taking out the former Alpha of the Pack, Lars King. He was only two years from Council eligibility and was determined to oust Chairman Gruber from his post. Well liked and politically astute, the Council members were terrified the Packs would elevate him at the next elections. \n\nIf only Alpha Todd had done the job right, they all would have been happy. Todd would have raised the child as an orphan before mating her, the Pack would be a memory, and they would keep their power and inherit the assets of the dissolved Pack. Instead, his men let a young woman slip through the lines with her and leave her where humans could find her. \n\nGiven a second chance when she was closer to her age of majority, Todd screwed it up again. This time there was no hiding it; they had to swoop down on his Pack and decimate it before their secret could be revealed. Now Rori King was making a move, threatening them and restarting a dead Pack, and taking the others with her. \n\nSome he understood; both Oxbow and Adirondack Packs had family links, but the others were a surprise. The challenge would keep the Cascade Pack on the sidelines until Sawyer won, which he was sure to do. The problem was that with two or three more defections, they could depose the entire Council. It wouldn't take much investigation for a new Council to figure out what they had been up to, and then they all were dead. \n\nHe made the call, bringing in the rest of the Council. Twenty minutes later, they all agreed with his plan. Rori was threatening them with exposure, but probably was bluffing. Even if she wasn't, they could survive being exposed. They could not survive her becoming Alpha of the Arrowhead Pack. \n\nHe called in his Theta, the leader of their security forces and his senior wolf with the departure of Beta Carlson. Thomas Manchin was from the Donner Pack, his son's Pack, and was absolutely loyal to him. He stood in front of his desk, hands clasped behind his back as he waited for orders. \"The situation with Rori King has become untenable,\" he said. \"She is a grave threat to the future of the Donner Pack and to all our Packs. She is at large, and I can't trust the Packs to apprehend her and turn her over to the Council. Some may even be assisting her,\" he told him. \n\n\"What are my orders, Alpha?\" \n\n\"Take a dozen men. In order to establish herself, she is going to have to go to Minnesota. Here's the name of the estate lawyer she will have to visit.\" He handed him the contact information. \"It is critical that she not complete the legal paperwork required to inherit the Pack assets. Capture her if possible, kill her if necessary. Anyone else with her or that gets in the way of her capture, take them out.\" \n\n\"And if she is hiding with a Pack? Oxbow is in that area.\" \n\n\"Don't go onto their Pack lands and don't do anything to attract their attention. If they find you, you are seeking a Council fugitive per the existing warrant.\" \n\n\"I understand, Alpha.\" \n\nAlpha Forrest handed him a stack of reloadable credit cards. \"Use these, I don't want a paper trail that can lead back to us. Take men you trust, from this Pack or Donner. Stake out his house and the entrances to the Oxbow Lake Pack. I do not expect any contact from you unless you have her or need assistance,\" he said. He gave him a burner phone. \"Keep this on, I will text any updates to you. We are lucky that Rori's injuries will prevent her from flying, so it gives you a chance to get into place before she can arrive.\" \n\nThey talked for a few more minutes, and he got permission to take three warriors from this Pack with him. They then called Alpha Daniel, who agreed to get seven more to meet them in Duluth. He was sending them in a private plane, so they would be able to travel with the weapons, surveillance gear, restraints and chemicals they would need for the capture. \"Good luck, Thomas,\" he said as he walked him to his office door. \n\n\"I won't let you down, sir,\" he said as he walked out. Alpha Forrest smiled a little; one way or another, his problem would be taken care of and their plans would proceed. Their continued rule was more important than a breeder. \n\n- \n\nAvoiding the Packs mean moving south, instead of taking a more direct line to Minnesota. Rori set the next waypoint, Salt Lake City, into the navigation system as they headed east again. \"Interstate 80 is not far from Casper,\" she said as she looked at the maps. \"There's not a lot heading east-west to take other than that. Do you think they are watching the interstate?\" \n\n\"They will be if they are smart, but the shortest route would have been north. I'm sure they have people from other Packs watching I-90 and I-94 up in Montana,\" he said. \"Shit, that's the route everyone from our Pack is taking to Minnesota. What if they get trailed?\" \n\n\"They got far enough away before it was realized they were gone, but I'll tell your Mom to check for tracking devices,\" she said. \"You keep sunglasses on and a hat during the day and pay attention to the cars behind you. We can rest at night so I'm not driving. Don't make it easy for them. love. If a car stays behind you when we're making the slow climb up those mountains, we're made.\" \n\nHe thought about it for a while. \"What about an escort? Even better, drivers?\" \n\n\"My parents would be ideal, except they are looking for them too.\" She broadened the map, looking to see who was in the area. There were two possibilities, the closest in Vegas. \"I have an idea. I stayed with the Las Vegas chapter for a few months and have friends there. Do we have room in the back for another bike or two?\" \n\n\"Sure, two easy.\" \n\n\"Let me see.\" She pulled out her phone and looked up the number for Bunny, the Old Lady of the Vegas chapter President. Bunny was great, she was in her fifties now but had been a cocktail waitress at the Playboy casino back in the seventies, and the stories she could tell of THOSE times were amazing. She had met Aces, who was working security at the casino, when one of the patrons trapped her against the roulette table and ripped her panties off. They both lost their jobs when he put the salesman in the hospital, but they had found each other. He had been President there for almost twenty years now. The phone rang, and her raspy voice answered. \"Rori? Where the fuck are you, girl?\" \n\n\"I'm in Idaho,\" she said with a laugh. \"In trouble again, running away to a new place with my fianc\u00e9.\" \n\n\"Oooh, this story I gotta hear,\" she said. \"You aren't hiding from your parents, are you?\" They had been at the wedding of Possum and Roadkill, and had done a round of shots with her and Jenny. \n\n\"No, they love him, but people are after us again.\" She briefly explained what was going on and what they needed. \"If someone can meet us in Salt Lake, we're pretty sure we can make it there without being noticed. They can park their bikes in the back and drive us to northern Minnesota where we have another safe place to stay.\" \n\n\"Shit, girl, just come here, we'll keep you safe.\" \n\n\"I need to get to Minnesota, I have urgent business there. Can you see if anyone would be willing to do this for us? It would be a long ride home, but we'd pay for gas and expenses. We just can't risk someone spotting us on the road and having Brotherhood bikers around us would just draw attention.\" \n\n\"Hang on a sec.\" She covered the phone as there was some talking, they were obviously in the main club area. \"We'll meet you at the rest stop on I-80 just east of Echo where I-84 joins up, since you're coming from the north, you'll be taking that to avoid the city anyway. Aces owes me a vacation, and this sounds like fun,\" she said. \"We'll leave in an hour. I'll bring the tequila, you get the food. You'll get there first, so find a parking space and wait for us.\" \n\n\"You don't have to come, you could send a prospect or something,\" Rori said. \n\n\"Girl, you should know better. Nobody messes with a Lady, and Aces lives for this shit. He gets bored too easy sitting around the clubhouse, and we can stop at a few clubs on the way back. We'll see you tonight. We're going to road trip together, girl!\" She laughed at that. Aces had made a fortune in real estate in the Vegas building boom, then got out before the market cratered. He was always around the Club, and Bunny was always bugging him to take her places. \n\nNow they just had to make it through southern Idaho and Utah without being seen. \n\nCh. 62 \n\nChase parked their RV in the truck area of the rest stop northeast of Salt Lake City about eight that evening. A quick phone call showed they had some time before Bunny and Aces would catch up, and Rori wanted to take advantage of it. She led Chase back to the bed, pulling off the T-shirt of his she was covering up with as he sat on the edge watching her. She wasn't wearing a bra, and her thoughts and the cool air caused her nipples to harden. \n\nHis eyes darkened in lust, and she and her wolf loved the feeling of making her mate forget about everything but her. She stretched, bringing her hands to the ceiling as her body moved between his knees. She wasn't a tall woman, but she was strong and athletic. His hands reached out to her hips, pulling her closer as his mouth sought one of her stiff nipples. \"Chase,\" she moaned as he sucked on one. She pulled at his shirt, and he popped off long enough to pull it off before his mouth went to its pair. It felt so good, she could feel her body preparing for him, and both smelled her arousal. \n\nHe placed his large hands on her thighs, lifting her and pulling her onto the bed until she was straddling him. The move allowed her to sit even in height, and their lips crashed together as they tried to get as close as they could to each other. Her pert breasts were smashed to the broad planes of his chest, her arms around his neck. He was moving her hips slowly, making her panties damp as he rubbed her against the hardness below his jeans. She moaned into his mouth as a hand went into the back of her underwear, a long finger reaching back and rubbing her moistening slit. She arched her back, moving herself into his fingers as he first stroked her, then pushed one inside. \"Oh god,\" she said as she began to push back against his hand. \n\n\"These have to go,\" he said as he rolled her to the side, laying her down on the bed. She couldn't talk, she just wanted them gone so she lifted her legs and allowed him to pull them down and off. He stood next to the bed, unbuckling his belt and jeans, pushing them down to his ankles as he watched her watching him. She licked her lips unconsciously as his maleness was freed, bouncing in front of him like it could sense her presence and was reaching for her. He kicked them off as her hand reached out for him. Her delicate fingers wrapped around his length, pulling him closer. \"What do you want, love.\" \n\n\"I want you inside me again,\" she said as she spread the pre-cum around his spongy head with her thumb. \"I want you to fill me completely.\" \n\nHe smiled as he crawled up on the bed, moving over her until he was settled between her legs. She reached down and positioned him at her entrance, and her eyes closed in pleasure as he pushed forward. \"So perfect, so beautiful, so MINE,\" he said as he finally bottomed out. He kissed her as she wrapped her legs around his ass, holding him in place while she adjusted. He didn't feel any pain, and she felt amazing; wet, warm and squeezing him tightly. \n\n\"Make love to me,\" she said as she started to move her hips against him. He supported himself on his elbows as he drew his hips back slowly, letting her feel every bump and vein of his cock as it pulled out. She moaned loudly as he pushed back in, and he felt her gripping him like a velvet glove down his length. \"So good,\" she sent to him. \n\nHe slowly built the pace, wanting to make their first time in human form last. She wanted more of him, her feet moving down to the bed so she could push herself up faster than he was going. \"Patience, love,\" he said as he gripped her thighs and brought them up. Keeping his hands behind her knees, he pushed her legs up next to her chest, exposing her fully to him and his control. She moaned in pleasure as he started to long stroke her like this, up on his knees, able to push in fast and hard. The angle helped him hit a spot that drove her wild, and she thrashed underneath him until she broke. \"CHASE!\" Her body locked up, all except her greedy pussy which clamped and spasmed around him, not wanting to let him move. He held off himself, continuing to pound down into her as the first quickly moved into the second. \n\nHe pulled out as she broke again, leaving her begging for his cock. He needed a quick break, he was almost there, and he wanted her to peak once more before he joined her. Rolling her over to her hands and knees, he lined up his stiff prick and slammed home. She screamed again, then started to push back on him as he continued to fuck her hard. \"Harder,\" she begged him as he grabbed her hips. He didn't need the encouragement; his own peak was rapidly approaching. The small space was filled with the smack of their hips together, the liquid noises from her gushing sex, and their heavy breathing. Rori lowered her shoulders and face to the bed, bracing herself as she felt the bomb in her sex getting ready to explode. \n\n\"RORI!\" Chase slammed into her, holding her tight as he started to cum hard. Rope after rope was sent through his thick cock, deposited at the entrance to her womb. She came with a scream, her body squeezing the last of it out, her cervix opening and closing as it tried to pull his seed further inside. Chase's legs locked up, and he pulled her over onto his side, his cock still deep inside. Both were exhausted, and quickly fell asleep with her wrapped in his arms. If they were going to get pregnant, they had a good start at it. \n\n- \n\nIt was a little after eleven when Aces exited the freeway for the Echo Canyon rest area. The truck lot was near capacity, and there were dozens of RV's mixed in. He pulled in behind a truck and parked. \"Come on, I need to go to the bathroom before we find them,\" he said. They both got off the motorcycle, leaving their helmets on the handlebar. He double checked his wallet, keys and pistol before he took her hand and walked towards the building. Both were a little sore from the long ride up from Vegas. \n\nHe checked his phone, no messages but Rori had sent them their license plate number. When they were both done, they walked back out. \"Let's find the right one before we get on the bike again,\" she said. \"I can use a walk.\" \n\n\"Me too,\" he said as he led her to the ones closest to the exit. They were about halfway down the sidewalk when he froze, pulling her behind him. In the darkness between the two tractor trailers on each side, a large Class C motorhome sat. The plates were from Oregon and matched what they were looking for. The two men outside it, pistols in hand, were on each side of the door leading up. \"Shit,\" he said. \"Text Rori there are bad men outside with guns, and stay out of sight,\" he said as he pulled his own pistol. \n\nShe moved back to one of the concrete picnic tables as he continued moving left until the semi-trailer blocked them from seeing him. Moving quickly and quietly towards the line of trucks, he was glad so many were idling. The background noise hid the sound of his boots as he crept forward. He reached the back of the trailer two down and pressed himself to it, listening intently. \n\n\"Open up, Chase, you're wanted,\" a man said as he pounded on the door to the RV. \n\n\"Not happening,\" came the response. \n\nAces moved to the nearest trailer, then to the back of the RV as the outside men continued to negotiate. \"Look, we know Rori is in there. Nobody wants her hurt, including us. Give her up and we let you go,\" he said. \n\n\"Like Chase would believe him,\" Aces thought. \n\n\"I'll never give her up, she's mine, we've mated,\" he said. \n\n\"Look, there are more of us coming, and you're not going anywhere. Let's do this quietly so no one gets hurt,\" he said. \n\n\"Fine,\" he heard Rori say. \"We'll open up, just don't hurt us.\" There was a click, and Aces looked around the corner as the side door to the RV opened. The next sound to be heard was unmistakable and caused the two to freeze. \n\nThe racking of a pump-action shotgun. \n\nThe first man was halfway up the stairs when he froze, and the second man moved back a few feet from the opening. \"Drop it,\" Rori said. \n\n\"You can't get away,\" the man said. \"They will be here in minutes, they know what you are driving. You won't make it five miles down the road before we take you out.\" \n\nThe second man was backing up, heading straight for Aces who ducked back behind the back of the toy hauler. The bad guy probably thought he could get in somewhere else or was going for help, but as soon as he got to the corner he took a pistol to the temple. Aces stood over the unconscious man. \"Chase, second man is down, take that fucker,\" he said. There was a loud smack then the sound of a man hitting the ground. ",
        "\"Clear,\" he said. \n\nAces ran around to the door, seeing Rori sitting on the bed as Chase held a Remington 870 combat shotgun in his hands. \"Aces, thank God,\" she said. \n\n\"You all right?\" \n\n\"Yeah, we're fine.\" \n\n\"You have to get out of here,\" Aces said. \"Grab what you need and get on your motorcycle. I'll take care of this thing.\" \n\n\"I have to get it out the back.\" Chase tossed Aces the keys to the RV out of his jeans then ran back to the door, hitting the winch that would open up the toy hauler rear end. Rori was grabbing their phones and her backpack and anything else she might need. By the time the ramp hit the ground, he had his Harley unstrapped, his helmet on and had started it up. \n\nRori ran back, pulling the backpack on before she went through the door and got on behind Chase. Aces followed her out the back, running down the ramp as Chase drove down and turned right for the entrance. Bunny was running towards him, phone in her hand. \"Get the RV started, I'm getting our bike,\" he said as he handed her the keys. He ran down the line of trucks, jumping onto his Harley and putting on his helmet while placing hers between his legs. He drove down the line and straight up the ramp, parking the bike and hitting the winch control as soon as it was shut down. By the time the back was up, he had his Harley secured. \"DRIVE,\" he told his wife as soon as the back was secure. \n\nShe put it in gear and pulled forward as he was moving into the main part of the RV. He grabbed the shotgun, putting the safety on and setting in on the floor next to the passenger seat as he sat down. He double-checked his Smith and Wesson M&amp;P9 to make sure it was safe in the holster sewn into his cut. He buckled himself in as they got up to freeway speed. \"How long until the nearest exit,\" he asked her. \n\n\"Eight miles,\" she said. \n\n\"Shit,\" he said as he searched the freeway for anything suspicious. If the guy hadn't been lying, more people were on their way. He looked down at the speedometer, it was at sixty-eight. \"Can this go any faster?\" \n\n\"No,\" she said. \"I'm already in fourth gear trying to get up the hill.\" \n\nHe spotted a police turnaround coming up. \"Take that, we need to head back towards Salt Lake.\" \n\nShe slowed as they approached the spot, turning and crossing the median and waiting for traffic to let her enter the westbound lanes. They pulled across into the slow lane, and she accelerated as quickly as she could, glad for the downhill assist. \n\nIf they had arrived two minutes earlier, they would have made their escape, but the four black Expeditions closed at high speed and surrounded them. \"Shit, we've been made,\" he said. \n\n\"No shit, sherlock.\" She looked out to her left, the passenger side window was down. A big guy with a crewcut, carrying a big pistol, was pointing at them to exit at the rest area. \"I think they want us to pull over,\" she said. \n\n\"We need to give them time to get away,\" he said. He got up, going back to the bedroom area and sliding open a small window. \"Don't stop for anything,\" he said. Sticking the end of the shotgun up to the screen, he took aim at the front passenger tire and fired. \n\n\"Shit!\" Bunny swerved onto the shoulder as the SUV momentarily lost control, bumping the side of the RV. The impact knocked Aces onto the bed, and he scrambled back to the window. The Expedition swerved back, then as it slowed it the tire blew off and the rim caught on the road. It skidded to the right, barely missing the back of their RV before it hit the trail vehicle. Both went into the ditch. \n\nHe stood back up, getting ready to fire again when Bunny locked the brakes up. It wasn't fast enough to prevent the impact, as the SUV in front of them could stop far faster than the big RV. He fell forward, losing the shotgun as he tried not to roll all the way to the front. The SUV was braking hard, slowing their vehicle with it. The remaining Expedition was next to Bunny's door, keeping her from moving back into the road. \"GAS,\" he told her as he scrambled up. \n\n\"I'm to the floor now,\" she told him. \n\n\"Stop, we'll hold them off for a bit,\" he said. She shifted to the brakes and put her hazard lights on, slowing to a stop by the side of the road. While she was stopping, Aces pulled out his cellphone, calling his Vice President. \"Trike, we're in some trouble. Two SUV's, Wyoming plates. First is 285JJW, second is 552 WAR. If you don't hear from me in twenty minutes, let the Chapters know. Track the fuckers down and avenge us.\" \n\n\"You got it, boss.\" \n\n\"I'm going to leave this on so you can listen in.\" He looked up at Bunny. \"Keep your hands on the wheel and keep calm,\" he said. \n\n\"They're coming.\" The second SUV had pulled behind them on the shoulder, and men were moving quickly towards them. All of them hand hands inside jackets, and there was no doubt what they were holding. He made sure the door was open, then sat on the bed with his hands on his knees. The door flew open, and four men surged in, guns ready. \"We give up,\" Aces said. \n\nTwo men threw him to the ground, quickly cuffing his hands behind his back. His pistol was tossed onto the bed, and they pulled his identification out of his wallet. One went forward, holding a pistol on Bunny as he took the keys from the ignition. \"CLEAR,\" the last man said as he finished checking the bathroom and the toy hauler areas. \n\n\"Where are they,\" the leader asked Aces after he kicked him in the ribs, the snapping of them echoing through the space. \n\n\"They left, just like you should,\" he said. \"Do you have any idea who you are fucking with right now?\" \n\n\"All I see is a biker punk,\" he said. \n\n\"And all I see is a couple guys who are going to be dead by the end of the week if you don't let us go. We're the Steel Brotherhood, and we know who you are. Ten thousand members and affiliated across the country, and you've just rolled up on a Chapter President. See that phone? My Vice President is listening in. You've got thirty seconds to get the FUCK out of here or the whole Brotherhood is going to be after you.\" \n\nThe guy from the back came up, standing in Aces's vision. \"Her motorcycle is here, it's pretty distinctive. His is gone.\" \n\n\"Fuck.\" They were humans, and this was going bad quickly. \"You took out a vehicle and hurt one of my men, we'll call it even. Have a nice fucking day.\" He removed the cuffs before he and his men walked out the door, slamming it closed behind them. \n\n\"Baby, are you all right?\" Bunny had come back as soon as they got into their cars and sped off. By that time, he was sitting up and coughing, which hurt like a bitch. She helped him into the chair. He looked at his hand, spots of blood covered it. \n\n\"Drive, baby. Get me to a hospital.\" She buckled him in and put the RV back in gear, heading back towards town. \n\nCh. 63 \n\nChase drove his motorcycle hard, well over a hundred miles an hour as they escaped from the rest area. He was lucky that traffic was light and the cops weren't out; soon they were in Wyoming. \"Shouldn't we be getting off the road,\" Rori asked. \n\n\"It won't take long until they figure out we've escaped on a motorcycle,\" he said. \"Right now, time is not our friend. We have to get as far away as we can from the RV before we stop.\" \n\nShe liked being by him, but being on his motorcycle was not as much fun as being on her own, which had been left behind in the RV. She understood why, it would have taken more time to get hers unhooked and ready than just jumping on his, but still- she wanted her own ride. She pulled herself closer to his back, wishing they had the time to pull on their leathers instead of just jeans, boots and shirts. The night air was starting to get them cold. \"We can't ride forever, we're going to freeze if we keep doing this.\" \n\nThe Evanston exit was coming up, with it signs for some of the recreational areas. \"Take this exit so we can check my phone,\" she said. He exited the freeway and turned south while she checked her navigation. \"Any reason why we couldn't stop for a while and call for help?\" \n\n\"I don't want to register at a hotel.\" \n\n\"We're wolves, all we need is a place off the road to curl up.\" She checked her phone, there was the Flaming Gorge National Recreation Area to their southeast. Looking at the maps, the better part was that on the back side the road led to Denver. She entered the waypoint, and they drove another hour on the back roads until they entered the hills and left civilization behind. Along the way, Rori was busy with phone calls, glad that her helmet had a Bluetooth link to her phone. Her first call was to her parents, letting them know what had happened and that they were headed for the Denver chapter. Mom put her on speakerphone in the clubhouse of the Renton chapter; the men and women were furious and promised they would get them protection. Her second call was to Bunny. \"How are you,\" she asked. \n\n\"We'll be fine. Those men found us a few minutes after we got onto the freeway and it went bad fast,\" she said. She related the events on the road to her, and Rori had the link open to Chase so he could listen in. \"The RV has a few dents in it now, sorry about that.\" \n\n\"I'm just glad you're all right. Where are you now?\" \n\n\"Park City Hospital.\" She paused and caught herself. \"Before they left, the leader kicked Aces in the ribs pretty hard. He has three broken ribs and a punctured lung,\" she said. \"I drove him down here, they got it reinflated and he's in recovery now.\" \n\n\"Oh my God, Bunny, I'm so sorry.\" She never wanted her friends hurt, then she thought about the reaction. \"Does the Club know?\" \n\n\"Oh yeah, Trike was listening in when it happened. We got license plate numbers, one of the Ladies ran them. They're all registered to a private company up near Casper. We've got members from five chapters converging on them now, they'll regret the day they fucked with the Brotherhood.\" \n\n\"We can't have them going after the Pack, Rori, that won't end well,\" Chase sent. \n\n\"Bunny, I need you to call Trike back. Keep the RV, take it back to Vegas since Aces won't be in shape to ride for a while. There's something more important right now.\" \n\n\"What is it, honey?\" \n\n\"The men who attacked you are after me because I found out who my birth parents were, and there is a big estate involved. I need to head to northern Minnesota to meet with a lawyer and claim it. If I don't make it, those men stand to inherit everything. That's why they want me so bad, because it goes faster if I get it and turn it over to them. I'm never going to give them what is mine, though.\" \n\n\"They fucked with a Chapter President, Rori.\" Bunny's voice was low and serious, she wanted blood. \n\n\"Yeah, and I'm sure he fucked them up too,\" she said. The laugh on the other end told her she was right. \"Getting me there safe is more important than getting this guy back. Trust me, there will be plenty of time for that on the ride home.\" She paused for a moment. \"We had planned to sneak up there in the RV because we thought it wouldn't attract attention, and that didn't work. Maybe it's time we attracted some attention.\" \n\n\"Thunder run?\" \n\n\"Damn right. You think you can find some people up for a long ride?\" \n\n\"For you? Oh, hell yes, girl. I'll call every Steel Lady in the country if I have to.\" \n\n\"Tell everyone to meet us at the Denver chapter, we're going to the North Shore of Minnesota. Nice riding, but things may get a lot cooler than Vegas so plan accordingly.\" \n\n\"There's a lot of chapters between Denver and Duluth, so they can do parts of the ride. We'll tuck you in to the center of the formation and roll, nobody is going to fuck with the Brotherhood. We own the fucking road.\" \n\n\"Thanks Bunny. Tell Aces thank you and I'm sorry.\" She hung up the phone and put it away. \n\nThey found an empty campground and parked the motorcycle in the trailhead, undressing and leaving their clothes in the saddlebags. Shifting quickly, they sniffed and rubbed against each other before running into the woods. She was starving and wanted to hunt. Chase taught her how to find and catch rabbits, and after an hour she had eaten two and was happy. He found a sheltered spot, under some deadfall, and they curled up nose to tail and quickly fell asleep. \n\nShe woke up the next morning needing water and to go to the bathroom. Chase was still sleeping as she crawled out of their shelter; her breath was foggy in the cool morning air of the mountains. Finding a spot to relieve herself, she focused her senses and heard a stream. Trotting downhill through the pine needles and leaves, she found the water and took a long drink. She felt him approach before she saw him, and he took a drink of his own. \"I don't like waking up alone now that I have you,\" he said. \n\n\"Sorry. We should get going.\" \n\n\"It's too bad we can't drive the Harley in wolf form, I could use this coat,\" he teased. They ran back to where they had left their motorcycle and shifted, pulling on their clothes from last night. He had a jacket he offered her, but she declined since she would be swimming in it. \"We'll stop and buy more clothes where we can,\" he said. \n\nThe ride was cold but fun; they found a general store in a small town and bought sweatshirts, gloves and a jacket for her. It was the middle of the afternoon before they arrived at the Denver clubhouse, which looked to be on a war footing. The gate was closed and guarded, the lot was full of bikes, and she saw cuts from at least four chapters as they pulled up. \"Who the fuck are you,\" the Prospect said, not seeing a cut on Chase. \n\n\"He's my fiance,\" Rori said as she got off and removed her helmet. \n\n\"RORI!\" She recognized some of her friends from the Kansas City chapter. \"Open the fucking gate, prospect, she's a Steel Lady.\" He did, and she was soon mobbed by a dozen bikers and their Old Ladies. \"Everyone, this is Chase Nygaard, my soon-to-be old man. He's a doctor from Washington. Chase, this is Tank and his old lady Double D, he's the President of the Kansas City chapter.\" \n\nTank pulled him into a bro-hug before Double D gave him a big kiss. \"Oh, our little Rori is growing up and found herself a doctor,\" she said with a grin. \n\n\"Actually, I found her,\" Chase said. \"I'm the lucky one.\" \n\n\"Well, he rides which is good, but he doesn't have a fucking cut, so I'm not sure I approve,\" Tank said. \n\n\"He can get one. We've been a little busy.\" \n\nRori saw a man coming out of the clubhouse and waved at him. \"Trike, what are you doing here,\" she asked. \"Why aren't you in Salt Lake with Aces?\" \n\n\"He's fine, I sent a couple patched members up there to escort him back to Vegas,\" he said. \"They won't release him from the hospital until tomorrow. I figured you would want your bike, so we had the Prospect load it in the van. It's out back with your gear you left behind.\" He pulled something out from behind his back. \"You should never leave this,\" he said as he handed over her Steel Ladies cut. \n\n\"Thanks Trike,\" she said as she hugged him before putting it on. \"We were kind of in a hurry.\" \n\n\"Time for Church now that you're here,\" Panhead said. \n\n\"Chase, this is Panhead, he's President of the Denver chapter.\" \n\n\"Thank you for your help,\" Chase said as he shook the big man's hand. \n\n\"We'll see about that. Members inside, Old Ladies and Prospects stay here, except you two,\" he said as he turned his back on them. \n\n\"Come on,\" she said. Holding his hand, she led him into the Clubhouse, which she had visited once during her time in Kansas City. They were holding church in the main area due to the number of clubs, and the four Presidents were sitting at a table up front. They listened as Rori described what had happened and why, and Trike told everyone what had happened with the attack on Aces. He was going to be released in the morning and would return to Vegas to recover. \n\n\"What do we know about these guys,\" he said. \n\nTrike stood up, his Club had a computer guy. \"The vehicles are all registered to a private company, state documents show the company is run by a guy named Raymond Waterman. The board includes his father, Royce Waterman, and three other people. They own a couple thousand acres of land that backs up to the Bighorn National Forest. They are rich, the holding company owns a number of businesses in the region, and it looks like a few hundred live on the property. It's like a private town there, well back from the borders of their land. We sent a guy to the nearest town, they're pretty tight lipped about them. What we know from the attack is that they are well funded and trained.\" \n\n\"It's like a private security force,\" Rori said. \"They are dangerous, and in the big picture of things they aren't important. They were after me, and if I am safe and inherit my parent's estate, they have nothing. The men who did this, they don't matter.\" \n\n\"Raymond Waterman does, if he gave the orders, he will pay for it,\" Panhead said. \"We can't let someone attack a President and get away with it.\" \n\n\"Aces got hurt because of me, let me take care of him,\" Chase said as he stood up. \"Trust me, I will make sure the lesson sticks.\" \n\n\"You aren't Brotherhood, Chase.\" Panhead looked at him, not liking anyone not in a cut like his. \n\n\"Not yet, but Rori is a Steel Lady and she will help. I will make sure of it. My first priority is to keep Rori safe and get her to Two Harbors where she can meet the lawyer. Everything else doesn't matter.\" He sat down next to her and pulled her tight. \n\n\"Why don't we just put them on a plane? They can be there in a few hours, Denver airport has a dozen flights a day to Minneapolis, then they can take a commuter plane up to Duluth,\" Tank said. \n\n\"Too many paper trails,\" Rori said. \"The men we are up against have law enforcement in their pockets, they can put a flag on our names with the TSA. We can't afford to be caught and delayed, or we'd already be there. That's why we didn't fly from Portland.\" \n\n\"Bunny suggested a thunder run, and my President agrees,\" Trike said. \"We keep to the freeways, but surround her with Club the whole way, stopping only for gas and at affilitated Clubs. We know we have the people to keep her safe this way.\" \n\n\"We can shuffle her between Clubs,\" Panhead agreed. \"Denver and Vegas can escort her to Kansas City. They stay overnight, then KC takes them to St. Paul. Then the final day they are taken all the way to the North Shore. Simple, and it makes the rides a reasonable length.\" \n\n\"We're in,\" Tank said. \"I'll talk to the boys back at the club, get the smokers fired up and the beer on ice. We haven't had Rori around in a while.\" \n\n\"She needs an engagement party,\" Double D said with a nod. \"There are members across the country that are going to be crushed finding out she's off the market as soon as she made age.\" \n\nThe Church broke up, and they called the St. Paul chapter and arranged things there for the last night. Chase and Rori left their bags in the Prospect's van after getting their leathers, and they mounted their bikes with the others. Three dozen Harleys headed out of the gate, staying in formation as they reached the Interstate where they really opened things up. \n\nRiding in formation was old hat to Rori, but for Chase it was a new thing. The Club members gave him a little extra room until he was comfortable with it, and an hour later everything was tight as normal. The Club made an imposing sight on the freeway, and everyone pulled over to the right and let them pass as they powered by. Even the police didn't mess with them as they blasted by at eighty miles an hour. \n\nThey stopped once at a truck stop, taking over six pumps as all the tanks were topped off while people used the bathrooms and grabbed snacks. Chase used one of his reloadable debit cards to pay for it all while the Ladies escorted Rori to the bathrooms, a few patches waiting outside. They roared back out fifteen minutes later, and made Kansas City about ten at night. The clubhouse was rocking as they pulled in, food was ready and the kegs were flowing. They partied with her friends until midnight, then collapsed on the bed in the guest room. ",
        "The next morning, they were on the road again at eight. There were about twenty-five in the group on this leg, and they rolled into St. Paul at six, this time being able to spend more time at the party. Her parents had flown in and were waiting for them, able to spend a few hours before their flight to Orlando. They had a great time, going to bed well after midnight. \n\nFinally, at nine the next morning, they started the five-hour run up to the North Shore. The President of the St. Paul chapter was happy to help but didn't like leaving her outside Club protection up there. \"It's all right, I have family that will protect me once we get close,\" she said. The weather in the late fall was perfect for riding, as long as you dressed for the cold wind off the lake, and the scenery was beautiful. \n\nThe handover was planned for a North Shore landmark and favorite touring stop, Betty's Pies. Chase called his Mom after they passed through Duluth and set it all up. The bikers swarmed into the parking lot, taking over a large section of the lot before heading in. Chase and Rori parked on the edge next to some other motorcycles, then walked inside. Two minutes later, they joined the large group that was leaving the restaurant and pouring into the lot. Getting back on their motorcycles, they followed the SUV's and were trailed by two other motorcycles as they left again. \n\nAn hour later, Rori was being embraced by her Aunt and Uncle for the first time as they all cried happy tears. \n\nCh. 64 \n\nThomas Manchin called his Alpha back in Bitterroot with the bad news. \"Sir, Rori King and Chase Nygaard are here but we couldn't get her,\" he said. \n\n\"FUCK!\" He had been in a bad mood since the Casper Pack had lost them three days ago. The idiots who found them in the rest area truck parking had foolishly tried to apprehend them instead of waiting for help. They hadn't been seen since. \"What happened?\" \n\nHis men had spotted the two inside the line of motorcycles and followed them to the restaurant, not knowing that a dozen members of the Oxbow Lake Pack were already inside. When they all left, they could do nothing except follow them to the Pack Border. \"They were never accompanied by fewer than a dozen humans or Pack members, sir. There was nothing we could do, no chance to grab her. There's more, sir.\" \n\n\"Now what?\" \n\n\"They've completed the mating, sir. I could see the mark on her neck, and her scent has changed.\" \n\n\"This gets worse and worse,\" he said. Now that she had mated, giving her to his son wouldn't work. They would have to hold the pair until they delivered a daughter to continue the line, then wait for the daughter to grow up. Everything would have to push back another twenty years, but the basic plan could still work if they did it right. There was still a chance for the money if they acted soon. \"Where is the lawyer?\" \n\n\"He was at his office, sir. I pulled everyone off him when we got a positive identification of Rori, I needed all the vehicles for the surveillance and tracking.\" \n\nAlpha Forrest thought for a moment about their next move. The Oxbow Lake Pack was harboring her; he could bring this up, even have Chairman Gruber call them and threaten them with sanctions, but she had blood ties to them. He was sure they would withdraw from the Council before handing her over. That gave him an idea, one he could use to shut down the momentum Rori was having among the Packs. He set that aside for now. \"We cannot allow her to sign those papers, Thomas. Visit the lawyer and find out where the original probate papers are being kept and bring them to me. Make sure you get all the account information, passwords, everything we need to execute the final disposition of the estate after the time runs out.\" \n\n\"He won't just give them to me, they are legal documents kept in locked safes!\" \n\n\"Well, you'll just need to convince him to open them for you. Do I have to teach you how to wipe your ass too?\" \n\n\"No sir.\" He thought for a moment. \"What about the lawyer? What do I do with him when I have everything?\" \n\n\"Take him somewhere deep in the woods and bury him, preferably on Arrowhead Pack property. Make sure no one ever finds him,\" he said. \"Don't screw this up, Thomas. We're running out of time here.\" \n\n\"I understand, sir. I won't let you down.\" \n\nAlpha Forrest hung up the phone and tossed it back in his desk. He was disappointed that they had missed their chance, and Chase and Rori were spooked enough now to surround themselves with people. He went to his laptop and set up a group video conference with the other members of his conspiracy. \"It's bad news, gentlemen,\" he started as the other two came online. \"Rori King has has once again involved humans in this mess.\" \n\n\"There's more since what she did with the Casper Pack?\" Chairman Gruber was nervous, that had been too close for comfort. Several men had been injured and they almost got in a fight with two humans on the freeway. They were lucky nothing had been reported to law enforcement. \n\n\"Yes. She is back in cahoots with the Steel Brotherhood, and the motorcycle gang escorted her all the way to the Oxbow Lake pack. She arrived there this afternoon, confirmed by our men in the field,\" Forrest said. \n\n\"Has she made contact with the lawyer yet? We're screwed if she does,\" Waterman said. \n\n\"Not that we know of, and my men will make sure she doesn't,\" Forrest replied. \"They have him under surveillance, and she can't execute the estate without being there in person.\" \n\n\"How are you going to prevent that from happening,\" Gruber asked. \n\n\"They are going to find the papers for me, then kill the lawyer and hide him where he'll never be found,\" he said. \n\n\"That's risky. If they get caught it goes straight back to us.\" Gruber felt like a gambler with a run of bad hands, betting more each time convinced his luck had to change soon. \"Miss King is becoming more trouble than she is worth.\" \n\n\"She is mated with Chase now. My men confirmed it.\" \n\n\"SHIT!\" Gruber pounded the desk, causing his camera to shake. \"They have ruined EVERYTHING.\" \n\n\"They have messed with our timing, but long term we can still get what we want. We have to do something quickly to stop her,\" Waterman said. \"If she has time to rally a couple more Packs to her side, she will have enough votes to dissolve us and then we're dead men.\" \n\n\"I have a plan,\" Forrest said. \"We need to strike now and hard. Rori has given us an opportunity; not only is she slam-dunk guilty of exposing us to humans, she now has the Oxbow Lake Alphas giving her aid and shelter. Such aid to a wanted Council fugitive is against our laws and gives us reason to depose the Alphas.\" \n\n\"They might fight that,\" Gruber said. \n\n\"If we catch them with the fugitives in their Pack, what can they say in their defense? None of the other Alphas will be able to argue against them being punished. We remove the Alphas, maybe a prison sentence, and put our own man in charge of their Pack. They'll never get to a two-thirds majority if we control four of the eleven Packs.\" \n\nThere was silence as the other two men thought it over, but he was right. It was the only way. \"How do we do this,\" Waterman said. \n\n\"Send all loyal Warriors from all the Packs and the Council Enforcers to Duluth immediately,\" Forrest said. \"We surround the Pack and take over as soon as they are in place. We hold the trials immediately afterwards, before any allied Packs can respond.\" \n\n\"Do it,\" Gruber said. \"I'll be there as soon as I can, as soon as we have them in place, we attack.\" \n\n- \n\nRori was deliriously happy, and that feeling was shared among many that afternoon. \n\nShe was hugged and kissed and welcomed by everyone in both Packs. Once they were settled, the first order of business was to form her Pack. When she arrived, she only had Chase and Coral in the Arrowhead Pack; ten minutes after the ceremony started, she had them all. Colletta was the first, she would be an Elder in their Pack and promised to help Rori learn how to do her new job. She no longer needed to return to help Sawyer; now that he had found Ashley for his Luna, her old pack would be in good shape after the challenge. \n\nRon Carlson had just watched the ceremony, intending to rejoin his Banff Pack at the earliest opportunity. Patty and the three other Omegas who had found their mates among the Oxbow Lake Pack were cheering on their friends as they made their declarations of allegiance. One by one, the Omegas walked up one by one to accept Rori and Chase as their Alphas. Rori was bursting with pride and love as her Pack grew and grew with each addition. \n\nWhen it was over, and her Pack link throbbed in her head, she turned to Chase in wonder. \"Is this what it is like to be in a Pack?\" \n\nHe nodded, realizing again just how new everything was to his young mate. \"Just wait until they need something,\" he said with a laugh. \"There are no days off in this job.\" \n\n\"Congratulations, Alphas,\" Michael said as the two Packs went off to start the party that would stretch well into the night. \n\n\"We will eat, dance and then tonight at sundown we will hunt,\" Margaret said. \"I'm so excited, we used to have combined hunts with your Pack in the old days, and I miss them.\" \n\nThey sat at the head table, eating and drinking in celebration. Rori learned a bunch about her parents and the people of her Pack as the meal went on. Margaret even had her Pack email her any photos they had of Rori or the Pack, and they had put it into a slide show that was projected on the screen in the back of the dining hall. Rori had a tough time eating as she was so engrossed in the pictures and the stories. \n\n\"These are amazing,\" she said with tears rolling down her face as a photo of her with her father, in wolf form, as she was crawling up on him. \"Thank you.\" \n\nMichael reached to the table behind them and pulled out a wrapped box. She opened it up, inside was a photo album with a picture on the cover, her as a newborn with her parents. \"Oh God,\" she said as she opened it up. \n\n\"The ones people couldn't let go we scanned and printed,\" Margaret said. \"Everything was burned in the fires, so this is all we can give you to link to the past.\" \n\nRori jumped up and hugged her aunt, then her uncle joined in. \"Thank you,\" she said as she hugged them. She sat back, looking through the book as the plates were being taken. As dessert was served, Rori realized who had been missing the whole afternoon. \"Where is Coral?\" \n\n\"She is on assignment,\" Colletta said. \"The Council is bound to find out that you are here, you weren't exactly subtle in how you tore through towns on the way.\" She laughed a little, dozens of bikers in formation were hard to miss. \"There were three things we needed you to do, and you've completed two- you've mated, and you've reformed the Arrowhead Pack. The last thing is to receive your inheritance. It's the next obvious thing for the Council to go after, especially since they are so desperate to get the money that is rightfully yours. We've been picking up wolf scents, both near our borders and in town. We've got our warriors on alert because of it. The Council has people waiting for you to show up.\" \n\n\"I hadn't thought of that,\" Chase said. \"We should see him tomorrow, first thing,\" he said. \n\n\"We can't wait that long to get this done,\" Ron Carlson said as he approached with a man. \"Rori King, aka Charlotte, may I present Ralph Emerson, Family Law Attorney.\" The man was formal and dignified, wearing a three-piece suit, his greying temples against black hair. \n\nRori and Chase stood up and shook hand with the man. \"Thank you for coming to see us,\" Chase said. \n\n\"I've been waiting a long time for this moment,\" he said as he smiled broadly. \"The last time I saw you, your Mom was burping you in your father's office. They were good friends of mine, and good people. Your Pack is missed, more than you can imagine.\" He lifted his briefcase. \"Is there somewhere we can talk?\" \n\n- \n\nTheta Thomas moved his men into position, approaching the target from three directions with the lakeshore in the background. His men had been watching it for a day, learning his habits and figuring out the best time to grab him. After his talk with Alpha Forrest this afternoon, they had stepped things up. Luckily, the lawyer was hard working and his light was still on well after the rest of the offices cleared out for the day. \n\nThe twelve men were divided up into four groups. Two had one of their SUVs and were watching the entrance to the Oxbow Lake Pack, making sure Rori and Chase didn't slip out unnoticed. Two were covering the back entrance in case they ran, two were staying with the two big SUV's out front, and the other four were going through the front door with him. One of his men had fixed the door so it wouldn't latch, letting them get into the small office building after hours without a key. He left one man in the lobby, then led the way quietly up the stairs. His men were ready with cuffs and a hood, while he was carrying an autoinjector with a sedative powerful enough to knock him out for a few hours. All of them were armed, just in case. They needed to interrogate him and get the paperwork, and for that he must be awake, so he was planning to scare him into compliance. \n\nThey could hear the seventies rock playing through the closed door of Ralph Emerson, Attorney at Law as they reached the end of the upstairs hallway. They would be going in single file, he would be point. His job was to go straight for the target and get him away from any phones and alarms. The other two would make sure no one else was around, while the last guy would make sure the door stayed closed. It was a simple, foolproof plan, he thought as they lined up on the door. They pulled their pistols out and got ready. \"Three, two, one, GO!\" \n\nHe pushed the door open, the door alarm beeping its warning. Running through the waiting area and past the empty receptionist desk, he burst into the office, not even bothering to grab the handle. The other two were right behind him, all with their guns up. \n\nHe wasn't there. \n\nHe heard a pop and felt something like a pinch in his neck. He spun towards where the sound was, but it was like he was moving through quicksand. He lost control of his body, falling to the floor. He tried to link, but nothing worked. The last thing he saw was a pair of motorcycle boots covered by black jeans. \n\nCh. 65 \n\nCoral supervised the loading of the prisoners, thrilled the plan had gone off as she had hoped. When Michael's men had scented the strange wolves in the area around Mr. Emerson's office, it set off alarm bells. \n\nOver breakfast that morning, they had discussed what it all meant. \"They are probably waiting for her to show so they can take her,\" Sawyer said, Ashley on his lap. \"They have people on the Pack entrances for the same reason.\" \n\n\"She's being escorted by two dozen bikers, they can't take her around all those humans,\" Coral replied. \"What if she goes there first? Now that they are mated, that's the last thing the Council can take from her, the Arrowhead inheritance.\" \n\nSawyer paused. \"They don't have to take it, they just have to prevent her from claiming it,\" he said. \"Shit, they can just take him out.\" \n\nMichael looked over at them. \"Killing him won't stop it, the papers are still in his safe, another lawyer would just take over.\" \n\n\"Unless they get the papers too.\" Coral instantly recognized the danger, but this was no snatch-and-grab, they would have to spend time in the office and 'convince' the lawyer to produce everything. \n\n\"I think we need to secure him,\" Michael said. \"He's a close friend to the Pack, has been for a long time. Your father went to school with him, and he knows of us.\" \n\nNow it was Coral's turn to have wide eyes. \"How?\" \n\n\"He fell through the ice while fishing with your father back when they were in high school. It was bad, he would have died except your father and some of his friends shifted and pulled him out. They surrounded him and warmed him with their fur until a fire could be started. He owed your father his life, and he would never reveal the secret. I found out later, after he had completed law school and started working in town. He's a good man.\" He got up from the table. \"I'll call him.\" \n\n\"Wait,\" Coral said. \"If the wolves around him scent us, they might just kill him and sort it out later. Give him my name, tell him to trust me and do what I say, and I'll protect him.\" \n\n\"How?\" \n\n\"The Brotherhood. Nobody is going to be watching them after we transfer Rori and Chase to our control, and those boys are itching for payback.\" \n\nShe was right; she had joined the group for lunch at Betty's, but when Rori left with the Oxbow Pack contingent, she joined the big group of bikers for their lunch. Rori had told them to trust her, and they were itching for action. When they regrouped in the city, she pulled out the supplies she had brought; dart pistols and injectors filled with werewolf-strength sedatives, silver-coated handcuffs and in-ear communicators they used when working with members of other Packs. \n\nShe couldn't get close as it would tip the enemy wolves off, but the Brotherhood had no such issues. They left their cuts in the Prospect's van, put on sweatshirts or jackets, and walked into the busy office building one at a time. They didn't raise any suspicions as bikers were common when the weather was good. \n\nAfter talking with Ralph Emerson, one of the guys who was similar in size swapped clothes with him and he walked out, his hair hidden by a ski cap. They packed him into the Prospect's van and drove him along a back road at the edge of the Oxbow Territory, turning him over to the Pack. He had changed back in the van, and with his briefcase in hand he got on the ATV for the ride back to the Pack House. \n\nEight bikers armed with dart pistols or syringes stayed in the building while Coral stayed in the van, monitoring the outside with six others. They waited for hours as the building emptied out, and when the wolves showed up, they were ready. Coral coordinated things so as soon as they broke into his office, the waiting others would take out their targets. It had worked perfectly, and thirteen men were stacked like cordwood in the back of the big van. \n\n\"Where are we going now,\" Trike asked as he sat riding shotgun. His bike and all the others had been left behind in town, they would remove all evidence of the men. They were even returning their rental cars to the place in Duluth. \n\n\"Deep in the woods,\" she said as they drove down a driveway that had seen little use, it was cracked and full of potholes. \"Once they are dropped off, take the van back to town and go for a drive. Rori will call you when you are needed again.\" She reached into her pocket; they had taken all the wallets of the men, and there were a bunch of prepaid debit cards in there along with cash. \"Split this up amongst the guys, you can call the number on the back and get the balances. If it isn't enough for all your help, we will get you more.\" \n\nHe took the stack but shook his head. \"We aren't here for the money, Coral. They fucked with one of us.\" \n\n\"Use it for gas or food, I don't care. Throw a party.\" He nodded and put it in his pocket. \"The guys you really want, the one who hurt Aces and the man who ordered it, we'll get for you in exchange for your help. We'll drop him off at your door.\" She was certain that when everything came out and the Council was deposed, the Alphas and Betas involved would face punishment. They had no problems with that final justice coming at the hands of bikers, they would be just as dead. \n\nCoral pulled to a halt as they came to an overgrown clearing in the otherwise tall pines. They could see a lake through the trees, but this area used to be homes. \"Where are we?\" \n\n\"This is where Rori was born, and her parents died,\" she said. \"Come on, we have to unload them.\" She found the ruins of the Pack House, burned out and overgrown with weeds. In the corner of the basement was a concrete box with a thick steel door hanging open. The place gave Tripod the creeps, and he couldn't wait to get out. ",
        "Working together, they grabbed the unconscious men, carrying them through the damaged door and into the dark cave of a room. They set them down on the concrete floor until they filled the center of the room. Coral handed him the keys. \"Head back into town, I've got it from here,\" she said. \n\n\"What are you going to do with them,\" he asked as he took them in his hand. \n\n\"Give them a choice,\" she said. \"Now get out of here. I'll have Rori call you later.\" \n\nShe watched him drive away, and as soon as he was gone a figure stepped out of the trees down by the lake and walked up to him. \"Hello, Ron,\" she said to the Banff Beta. \n\n\"I brought some stuff that might help,\" he said as he set the bag down and gave her a hug. \"Come on, we need to secure them before they wake up.\" He unzipped the side pocket of the bag and they both put on gloves before he unzipped the main compartment and started pulling out the silver-lined shackles. They kept the feet close together and had a chain going up to the hand shackles, and they prevented the person from standing up straight. Then they tied additional chains to link the men together, the combination making escape impossible. The silver kept them from shifting and prevented a Pack Link from working. They would be as helpless as humans when they woke up. \n\nIt too fifteen minutes to change everything out. They set them with their backs against the wall and waited for them to wake up. \"Everything going well back at the Pack House,\" she asked. \n\n\"Really well, all the Pack inductions are done, and the party should be over since the hunt started at sunset.\" Days were short in October this far north, and sundown was already upon them. Ron filled her in on everything that had happened while she was with the Brotherhood. She was truly happy for Rori stepping into the Alpha role, and finding out more about her parents and her early life. \n\nThey heard the first groan of the men starting to wake up and just ignored them until they tried to get up. Ron pulled a pistol from under his jacket, the nickel-plating glinting in the moonlight. \"Ready to start?\" \n\n\"Why not?\" She started to record audio on her phone they would need for the trials. They walked through the door, facing the men who were now wide awake in the dark room. \"You fucked up, boys. You attacked a human outside your territory who was under the protection of the Oxbow Pack.\" \n\n\"Where are we,\" Thomas said. \"Release us immediately, we are here on Council business.\" \n\nCoral just laughed. \"We don't recognize the authority of that Council. To us, you're no better than rogues. Do you have any idea what this room is?\" The men looked around in the dim light coming from the broken door; there wasn't much inside, just concrete and puddles of standing water. \n\n\"Let me tell you a story,\" Ron said. \"Seventeen years ago, on this very spot, a Pack was getting ready to turn in for the night. With no warning, fifty warriors from the Bitterroot Pack tore into this compound, killing everything in their path. The Omegas, the pregnant women and the children all gathered here in the safe room.\" \n\n\"This is the Arrowhead Pack?\" The warrior was looking around panicked, they could smell his fear. \n\n\"It is. If you watched the trial, you know what happened. Every person outside this room was slaughtered, while the people inside heard the screams and felt the bonds break. The women knew who Todd was and didn't open the door no matter what he threatened them with. They refused to let themselves or their children be taken captive by such an evil man.\" He looked at the ruined door. \"They slit the throats of their own children before killing each other.\" The men looked around, and the smell of fear was strong. The spirits of the dead would still inhabit this place, and they would be angry. \n\n\"There were eighty-seven people in that Pack when the night started. By morning, eighty-six were dead.\" She walked to the far end. \"When the Beta finally cut through the door lock, they found the floor covered in blood and a pile of bodies right here. Pregnant women, children, babies, all dead.\" Some of the men were starting to cry, it was a horrible thing to contemplate. \"And the man you take orders from was complicit in it. The Council covered it up, making a deal with Alpha Todd to profit from the extinction of an innocent Pack.\" \n\n\"YOU LIE,\" Thomas said. \"Alpha Forrest would NEVER be part of something like this, he has honor!\" He struggled against the chains, his loyalty to him demanding it. \n\n\"Just listen,\" he said. Taking out his phone, he played the audio file he had recorded days earlier after Coral's trial. They watched the expressions change on the men, from anger to disgust to resignation. \"Councilman Forrest, Waterman and Gruber have been in it for themselves for decades. They didn't do a real investigation so Alpha Todd's involvement would not come out. When Todd failed to capture Rori and his men were caught, they knew people would ask uncomfortable questions about that day if they didn't step in. They tried and executed them before they could confess of the Council's involvement.\" \n\nCoral looked at them with disgust. \"They were willing to kill Rori's fated mate and force her to breed with Daniel, the Donner Pack Alpha, so the Forrests could get their brood mare and the other two could receive a big payout. They auctioned her like she was a prize heifer.\" \n\n\"Fuck me,\" Thomas said. His head hurt, they were all in shock now. \n\n\"He sent you here for nothing more than greed,\" Coral said. \"They are desperate to keep Rori from claiming her land and her Pack, because if she doesn't claim it, they get it all. Tens of millions of dollars.\" She knelt down next to Thomas, a silver knife in her hand. \"You men are expendable to him, and since you failed in your task, I wouldn't expect a rescue. You might live if you cooperate, though. What were your orders?\" \n\nThomas was broken, everything he had built his life around was now gone. \"We were to go to the lawyer's office, force him to get the original paperwork for the Arrowhead estate, then bring it to him,\" he said. \n\n\"What then?\" \n\n\"I don't know. I was supposed to call him when I had it done.\" \n\n\"Just so you know, Mr. Ralph Emerson, Esquire, is currently transferring the estate to Rori at the Oxbow Lake Pack House. Alpha Forrest has lost; he doesn't have Rori, she's mated to Chase, and now she will have the land and the inheritance. You can bet that if anything happens to her now, the Council won't stand to inherit a penny.\" She watched the men shiver, they knew they were loose ends now. \"The Council is on borrowed time, they just don't know it.\" \n\nThomas swallowed hard, this was a tough pill to swallow. \"This was my fault, these men acted on my orders. Punish me as you will, but let them go home to their mates, they were just doing their jobs as they were told.\" \n\nCoral took the knife, placing it under his chin. It sizzled as it made contact with his skin. She used it to force his head up, so it was looking at her eyes, which were stirring with her Beta dominance. \"I don't want your head, Thomas. You are obedient and loyal, but you have been used just like the others. Cooperate and you will live, you have my word and the word of my Alpha.\" \n\n\"What do you need?\" \n\n\"First off, no one is to break their Pack bond, or we'll kill you. We can't give him any warning.\" The men quickly agreed. \"Thomas, you need to make the call. Let him know that you have the paperwork and the lawyer is being disposed of and ask what your instructions are. Whatever he tells you, you say you will do.\" \n\n\"What if he asks about Rori?\" \n\n\"She's still at the Oxbow Lake pack, and your men are making sure she doesn't get out without being followed.\" He nodded as she began to unshackle him. \"There's no cell reception here, so we're taking a walk. If you run, if you warn your Alpha, if you don't do what we have told you, you die along with everyone here. This concrete floor will once again be covered in blood.\" \n\n\"I'll cooperate,\" he said. She led him out as Ron stayed behind, pistol in hand at the entrance. Walking up the hill, they found a spot with good reception. She handed him the phone, and he flipped it open and pressed the saved number. Coral pulled her own phone out and started a voice recording as she held it by his head. A few rings later, a familiar voice answered. \"It's done,\" Thomas said. \"I have the papers, and our problem is being taken care of as we speak.\" \n\n\"Good,\" Alpha Forrest said. \"Let your men know I appreciate what they have done tonight.\" \n\nThomas' face cringed, but he took a breath and answered normally. \"I will, sir. What are my orders?\" \n\n\"Surround the Pack and make sure Rori doesn't leave. If the Alphas leave, follow them, we need them to be on the territory when the Council arrives.\" \n\n\"They Council is coming here?\" \n\n\"We're all flying to Duluth tonight or tomorrow morning, we will be ready to arrest the Oxbow Lake Alphas for treason at sundown. Stay far enough back you don't spook anyone. We're coming in a convoy, we'll drive straight into their territory and take over as we arrest them. Have your men take shifts and be rested, you'll be needed to prevent anyone from escaping the territory.\" \n\n\"I understand, sir. It will be done.\" \n\n\"You're a good wolf, Thomas. I'll call you when we are about to attack.\" He hung up the phone and handed it back. \n\nCoral pulled out her own and made a call. \"Houston, we have a problem,\" she said as her brother answered."
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "biker",
        "wolf",
        "mates",
        "alpha",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/treasure-ch-61-65"
}