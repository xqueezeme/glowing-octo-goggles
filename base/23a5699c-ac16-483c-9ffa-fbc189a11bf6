{
    "title": "Soulseeker",
    "pages": [
        "Well, hello again. For those loyal to this new series, I apologize for the lengthy gaps between the chapters. I'm not one of those gifted writers who can write a chapter a day, but I'm writing them as fast as I can. But I'd recommend giving yourself a week before checking.\n\nAlso, I had a slight problem with the detailing on this chapter, so it got rejected the first time. Hopefully I fixed whatever was wrong.\n\n\n\n\nHer eyes flickered open, squinting for an instant as they adjusted to the light. She'd forgotten that wreaths of hellish flame didn't dim when she'd fallen asleep; even now they were still blazing with all their might. She blinked through her fading sleep, pushing the warm blankest aside so she could move. She pushed herself up onto her hands, swinging her legs over the side of the bed. She stretched her arms up, rolling her neck to crack her spine back into place. \n\nBeing explored by three ravenous demons had worked her body into a serious kink.\n\nAn instant later, Claire winced sharply and folded her hands onto her stomach. That small handful of cherries she'd had last night didn't tide her over for long. Her insides roared painfully, demanding nourishment. Her eyes flicked to the enormous table at the far end of the room, her mouth watering at the sight of the piles of food that were still left.\n\nBefore she moved to eat, a shadow caught her eye. Seated at one end of the table, Darrow was hunched over the table, his face buried in plates of roasted pork and charred fish. Every so often he would raise his head from the platters, using one hand to lift a massive jewel-crusted goblet to his lips. Dark liquid spilled down his chin, pooling on the stone floor.\n\nCan't say much for manners.\n\nSwallowing silently, Claire inhaled deeply and stepped quietly onto the cold floor. Cautiously, she took silent steps towards the table, her hunger and her fear of Darrow waging war with each other. She might be starving, but the last thing she needed was Darrow turning her into dinner.\n\nShe stopped a foot from the table, watching him eat. His lack of manners, while understandable for a demon, still made her grimace in disgust. She wrapped her arms around herself, rubbing her hands over her bare skin. She was still naked, though a new burst of hunger from her belly made her forget her humiliation.\n\nShe cleared her throat, trembling from nervousness. \"Darrow?\"\n\nHe paused, lifting his head and turning it to stare at her. Black eyes regarded her cautiously, as if waiting for her to lash out or run away screaming. \n\nShe swallowed again. \"Can I...may I join you?\"\n\nHe stayed motionless for a moment, and Claire wondered if he was imagining throwing her onto the table and forcing himself upon her. The though made her shiver again.\n\nInstead, he scooted his chair to one side, offering her enough space to move into a seat of her own. She settled into the hard wood, squirming to find a comfortable place. Finally giving up on making the seat more manageable, Claire folded her hands into her lap and stared at the table. Her eyes flicked up to see Darrow still staring at her, his onyx eyes boring into her own.\n\n\"May I eat?\" Her voice was quiet, filled with fear.\n\nHe cocked his head to one side. \"Why are you asking me?\"\n\nShe dropped her head again. \"I'm afraid you'll bite my hand off.\"\n\nThe statement seemed to knock him off balance slightly. For barely an instant, she saw a flicker of pain and embarrassment flash through his eyes. He reached out a muscled arm and gripping the edge of a gilded plate loaded high with blackened stripes of beef and piles of rice. He shoved it towards her, stopping when the platter was an inch away from touching her chest. He pulled his arm back and settled into his chair, though his eyes never wavered from her.\n\nShe offered a faint smile. \"Thank you.\" She reached out, instinctively pausing when she saw that the table was devoid of silverware. \n\nDarrow barked out a laugh. \"You mistake us for being refined, my dear. No forks or knives here. You use your hands.\"\n\nShe stared at the plate of food, unsure about how to proceed. She'd been raised to act like a lady, and that meant no eating without proper equipment. On the other hand, her hunger was now borderline starvation. She sighed and reached out her hand, picking up a slice of steak with her fingers. Sweet, heavenly juice dripped from the piece of meat, making her stomach twist in anticipation. She shrugged mentally and brought the slice to her mouth. Manners could wait, her body couldn't.\n\nFlavors of smoke and spice burst into her mouth, making her moan at the taste. Her famished body nearly shook with delight. She chewed slowly, wanting to savor the luscious aromas for as long as she could. Claire swallowed, taking in a harsh gasp from holding her breath in for so long. Faster than her eyes could follow, her hand shot out and snatched another piece and brought it to her mouth. She hesitated an instant before it touched her lips, taking a deep breath and biting it carefully. She may be in hell, but Claire still wanted to show she was a respectable lady no matter where she was.\n\nDarrow laughed. \"You show far too much decorum here.\"\n\nShe looked at him, a small strip of beef hanging out of her lips. \n\nHis lips kicked up in a sly smile. \"We are demons, miss Harding. What makes you think any of us were ever raised with manners or proper etiquette?\"\n\nEmbarrassed, she dropped her head and looked away, a bright blush working its way onto her face. What was she thinking? Of course they were never raised that way. They didn't care whether or not she cut her food into pieces or took delicate sips. All they cared about was eating and conquering her. She groaned. She must have made a complete fool out of herself.\n\nFrom the corner of her eye, she saw Darrow watching her sulk. To her surprise, he made a face of uneasy embarrassment and looked away from her. \n\nSo he does have other emotions besides angry and suspicious. Well, that's good to know.\n\nHer heart jumped a bit. Maybe he wasn't always as vicious and angry as he portrayed himself to be. Maybe, just maybe, she had a chance of being able to work with him. Swallowing the last bit of meat, Claire cleared her throat and straightened herself, turning to look directly at him.\n\nShe inhaled deeply, centering herself and preparing fro an assault. \"Thaltos told me-\"\n\nDarrow's head snapped up, his black eyes piercing hers. \"He told you what?\"\n\nUh oh. Bad move.\n\nShe slid into her chair an inch, blushing furiously. Not a good way to start the conversation.\n\nHe leaned forward, his arm supporting his weight on the table. \"He. Told. You. What?\"\n\nShe whimpered and scooted back as far as he could. His eyes narrowed at her, clearly incensed that she would start off their bond this way. She swallowed loudly, her heart pounding in her chest.\n\n\"He told me...the girl you collected ran off with your friend. And that's why you're always so angry.\"\n\nHis eyes softened as he sat back in his chair, exhaling a deep sigh. He folded his hands across his chest and stared off into the shadows. \"Elaina. I've gotten to the point of not discussing that harpy anymore.\"\n\nClaire breathed a sigh of relief and scooted back into the seat of her chair. He wasn't going to eat her or kill her...yet.\n\nHis eyes flicked back to her, an unusual softness in their black depths. \"But I suppose, being an oh-so-curious human, you want to know the story. Hmm?\"\n\nNervously, she nodded her head. She wanted to lie and allow him the privacy he deserved, but her curiosity got the best of her. Besides, he'd offered.\n\nDarrow settled into his chair, tilting his head back and closing his eyes. \"It's quite a story, my girl, so I'll break it down for you. About five hundred years ago I had struck a deal with a poor couple from the squalor alleys of Paris. I promised them wealth beyond their dreams; they promised their young daughter when she came of age. With my help, they climbed the ranks of the French elite and lived in the most luxurious houses you could imagine. Castles, chariots, absurdly elaborate gardens. You name it, they purchased it. To them and their children, it was everything they could have ever wanted.\"\n\nClaire inched forward and leaned her elbows on the table, nibbling at a fresh slice of beef as she listened.\n\n\"Years passed and the time came for me to collect my payment. As often happens with newfound wealth, Elaina's parents had become very distant from her, so wrapped up in their new lives that they practically shoved her out the door to me. Her parents bargained with me when she was very young, no older than five, she she'd grown up on the false wealth they'd been given. As to be expected, she grew up to be nothing more than a whiney, spoiled brat with a cheerleader body and a microscopic fuse.\"\n\nClaire snorted. \"Sounds like my friend Lindsey. That girl will only eat if it's served to her on a platinum spoon.\"\n\nDarrow's mouth twitched. \"Sadly, it's a reality for many privileged children. Elaina was no exception. I tried for months to break her in, and she did well, but her only issue was trading sex for gifts. I wanted a blowjob? She needed a new dress first. However, the longer I worked to train her, the less time she'd spend with me. Along with the extortion, Elaina was secretly running off with Tarrin, a very close friend of mine who I'd known for centuries.\" His eyes narrowed at the memory, showcasing his still-raging anger.\n\nShe swallowed another slice of meat. \"Why is that such a problem? You, Thaltos and Silthos, share me.\"\n\nHe held up a finger. \"Ah, but all three of us made the deal for you. I made the trade for Elaina. And it's a big deal because that violates the bartering contract. Once a deal is complete, the human prize must stay with their keeper. No exceptions. And no other demon may claim a human other than their own unless they've traded for it. Both Elaina and Tarrin broke the rules.\"\n\nShe nodded, scooping up a handful of rice. \"Thaltos told me she was kicked out.\"\n\n\"Yes, and handed over to the Catholics as a witch.\" He smiled and winked at her. \"She wasn't really, you know. But we don't treat traitors and rule-breakers too kindly here. Tarrin was disowned by everyone and exiled into your world as punishment. He's a demon, mind you. Human don't take well to demons in their realm. There's not much of a chance that he survived very long, but if he has, he can never return her. If he does, he'll be condemned as enemy and executed.\"\n\nClaire swallowed her mouthful of rice and stared at him. \"Why so harsh?\"\n\n\"We don't want a repeat of the same thing. If he comes back, there's a general fear that he'll do the same thing again with another demon's girl. He's always had a curious affinity for luring them away, so most owners are afraid of losing their prizes to him.\"\n\nShe swallowed the last grains of rice and nodded. \"That makes sense, I guess.\"\n\nHe nodded. \"Coming from this side of the argument, it makes a lot of sense. I lost a very close friend that day. But I got rid of an absolutely worthless girl.\" He managed to crack a tiny smile.\n\nShe sat back in her chair, debating her mixed feelings. On one hand, she still felt Darrow was an angry, vindictive demon who took out his wrath on those around him. On the other hand, his back-story gave an understandable explanation for his behavior. Not that his actions were pardonable, but she could now understand why he acted the way he did.\n\nMakes sense tome. I know people who'd explode because of less shitty stuff happening to them.\n\nShe looked back at him, sympathy starting to blossom in her heart. She'd never been fond of demons, but she'd always had a soft spot for those who had been wronged. \"I don't suppose there's anything I could do to make you feel better.\"\n\nHe snorted a laugh. \"Beyond a good blowjob, not really.\"\n\nShe pulled back, a look of angered disgust on her face. \"You're a pig.\"\n\nHe laughed again. \"I'm being honest. I haven't had a decent suck in centuries. And from the look on Silthos' face, you give a damn good one.\" He settled into his seat, smiling wickedly at her. \"Besides, I find it calming. You've masturbated, haven't you?\"\n\nClaire blushed and looked away, though she nodded slightly.\n\nHe shrugged. \"As far as I'm concerned, they're the same thing when it comes to stress. Whether you get yourself off or someone else does it for you, it's a wonderful stress relief.\"\n\nStill avoiding his gaze, she had to agree with him.\n\nNo argument there.\n\n\"There's no real difference in how it works, just how it feels. If you do it, you can control exactly how fast or firm your touch is. You have complete control, and who knows your own body better than you?\"\n\nShe nodded, reaching out to grab a fresh pear.\n\n\"On the other hand, there's nothing quite like the feel of a beautiful woman's mouth around my cock.\" He grinned at her. \"It's a weakness.\"\n\nShe smiled back, trying to look as unfazed as she could. She wasn't uncomfortable with talking about sex. Hell, she'd gone to high school. It was Darrow himself still made her uneasy, but only because she hadn't had much time getting to know him. The two of them were still strangers, no matter how turned on he got.\n\nDarrow leered at her hungrily, his night-colored eyes tracing the curves of her breasts. His stare made her uneasy all over again, forcing her to squirm in her chair. Sighing, she pushed herself away from the table and stood, taking quick steps toward the bed to put some distance between them.\n\n\"Where are you going? We were having a great conversation.\" She heard his chair grind against the floor as he stood to follow her.\n\nShe quickened her steps. \"Your staring makes me uncomfortable. I don't appreciate being gawked at.\"\n\nThe pace of his footsteps matched her own as he followed. \"I was only admiring you. I haven't seen a woman as beautiful as you in nearly three centuries. That fact that I own a bit of you simply makes it hard to believe.\"\n\nShe scoffed. \"That doesn't mean I appreciate it. Though I'm going to guess you don't really care what I think, do you?\"\n\n\"That's not entirely true. You may be our conquest, buy you are still a virgin. Until you decide you're ready to be initiated into our world, you hold the cards, my dear.\"\n\nShe stopped, turning around to face him. She stared into his eyes with a mixture of annoyance and curiosity, her mind formulating the question as she breathed. It was a question she desperately wanted answered. It was a question that could solidify or take away the only control she'd ever had.\n\n\"So...as long as I'm a virgin, if you want sex you have to do what I say?\"\n\nDarrow smirked. \"Within reason, yes. You can't bribe us or demand a payment to pleasure you. But you have the right idea. As long as you maintain your chastity, we must ask permission before we seek out pleasure.\"\n\nShe stepped backwards, letting her knees lose so she could collapse onto the bed. Thankfully, she'd judged the distance right and ended up sitting on the soft blankets. She breathed a sigh of relief. His answer had confirmed that, even though she'd been raised to view sexuality as ugly and sinful, she was still in control of her own body. It also meant that she was in control of Darrow and the others, as well. Their pleasure, for now, was in her hands.\n\nClaire watched as he continued to follow her path, slowly making his way toward the bed. As she watched, she noticed his cock, still heavy and engorged as always, swing back and forth in perfect rhythm with his steps. The image of that thick pole of flesh made her stomach suddenly clench out of hunger and need. Her sex twitched, sending an unheard-of signal to her mind that it wanted attention.\n\nA thought flashed into her mind, one so risqu\u00e9 and outlandish to her it nearly knocked her backwards. She could ask for anything.\n\nFeeling more daring than she'd ever felt in her life, Claire looked up at Darrow with a look of nervous determination. \"Tell me, do you enjoy devouring women?\"\n\nHe offered her a guilty smile before bending down to kneel at the foot of the bed. He rested one arm on the blankets, staring at her with humorous eyes. \"Call it another weakness.\"\n\nWell, isn't that a coincidence? That's just what I need at the moment.\n\nShe smirked. \"Really? How often do you crumble to that weakness of yours?\"\n\nHe barked out a laugh. \"Not as often as I'd like to. You're the first girl we've been able to collect on in over three hundred years, and I can guarantee there's probably not many women walking about just waiting for a demon to come up and ravage them.\"\n\nShe nodded, considering her possible routes. For some unexplainable reason her body was burning, begging to be torn apart and conquered. Not its usual demand, but a demand nonetheless.\n\nDarrow sighed and leaned his head back, staring up at the ceiling. \"I'd love to do it everyday if I could. There's nothing quite like the taste of a woman's pussy. Absolute magic.\"\n\nThis is far more than just a coincidence.\n\nClearing her throat, she looked at him with unsure eyes. \"You could eat me again if you want.\" Her stomach did a cartwheel while her ravenous body cheered.\n\nHis eyes snapped to her. \"You're fooling me.\"\n\nClaire shook her head, rubbing her thighs together to ease the burning.\n\nHe turned his head to look at her, a mixture of hope and disbelief in his eyes. \"You're being honest?\"\n\nShe nodded. \"I'm...in need of a little relief at the moment.\" She bit her lip, trying to suppress her body's ever-growing need.\n\nDarrow laughed and twisted so he faced her completely. \"My sweet girl! If that's the malady you're suffering from I would gladly help to relieve you of your discomfort.\"\n\nShe offered a pained smile. \"You wouldn't mind?\"\n\n\"Claire, my dear!\" He pressed his hand to his chest and grinned. \"I'd be honored.\" \n\nShe sighed in relief. \"Thank god.\"\n\nDarrow leaned in close, his breath tickling her thighs. \"Say the word and I'll leave you breathless.\"\n\nShe backed away an inch, his enthusiasm startling her a bit. Her body still burned for release, she just hadn't expected him to be so eager.\n\nHis smile faltered a bit. \"Claire?\"\n\nShe shook her head. \"I'm fine. You're excitement took me by surprise a little.\"\n\nHis smile returned. \"Ah, my apologies.\" He leaned closer. \"It's just the memory of your sweet, delicious pussy that's driving me wild.\"\n\nShe blushed. \"I honestly wouldn't know.\"\n\nHe inched closer, rising up so his hands could rest on the bed as he leaned over her. \"You really should try it. Your body is like heroine.\"\n\n\"Try what? Taste my own body?\" She raised her eyebrows. \"I'm not that flexible.\"\n\nHis smile turned vicious. \"I can fix that.\"\n\nWithout another word, he pitched forward and gripped her ankles, hauling them into the air so she tumbled backwards. He crawled forward on his knees, leaning down and tossing her ankles over his shoulders. Not waiting for any direction, Darrow plunged his head between her thighs and immediately began to feats upon her flesh, his tongue probing her delicate insides just as he had done before.\n\nClaire threw her head back with a ragged cry. She clenched her teeth, closing her eyes to savor the feel of his expert tongue. Against her will, she moaned his name, reaching down to grip his head. To her surprise, her fingers twisted into long, thick strands of night-black hair, something she'd never noticed until now. She shrugged off her surprise; instead she curled her fingers tighter, holding onto him for dear life.\n\nThankfully, Darrow never waivered from his task. His tongue rubbed and stroked every hot spot she had, making her twitch and jerk with every touch. His long talon-like fingers gripped her thighs, holding her steady for his incessant teasing.",
        "Claire rolled her head to the side and let herself go, making sure to relish each and every gifted touch he made. When his lips wrapped around her tender clit, she arched her back, pushing her sex harder against his mouth. She'd become far more brazen and confident in the last few days, her new freedom allowing her the courage to ask for anything she wanted.\n\nHis teeth gently scraped her clit, dragging a lust-filled howl from her throat. \n\n\"Oh, yes! Again! Do it again!\"\n\nHe obliged willingly, running he razor-sharp teeth against the sensitive nub over and over again. She screeched into the still air, so close to her climax yet just barely out of reach.\n\nDarrow pulled his mouth away from her sex, running his tongue along the length of her slit over and over again until her head spun. She loved the feel of his tongue massaging her pussy, but it wasn't enough to set her free. She writhed against his touch, shaking her head back and forth in frustration.\n\n\"No. No! Come back! It's not enough. Please come back.\" She knotted her fingers in his hair, pulling back sharply to bring him home. \"I need more.\"\n\nHe heard his amused laughter an instant before he crushed his mouth against her, nibbling and chewing at her sex until tears ran down her cheeks. She whimpered against him, urging him on. She was close, so close she could taste her release on the tip of her tongue. He gave her one more rough lick against her clit, the pressure finally burning the rest of her fuse away.\n\nFireworks of blue, emerald and silver exploded in her mind, setting her body free as she rocketed into the stars. She let lose a piercing scream that sliced through the heavy air. Her spine arched to its full extent, the muscles in her long legs tightening as she struggled to hold him. In the midst of her climax, her teeth had bitten into her lip, drawing a bead of liquid ruby that stained her mouth.\n\nAn eternity later, her body finally relaxed and collapsed into the bed. Sweat beaded on her skin, her lungs burned, her hair splayed out in tangles around her head. She unwound her fingers from his hair, her limbs falling onto the blankets like a rag doll. She closed her eyes, taking in deep breaths to calm her racing heart. The fire in her belly had died away, leaving behind a trail of rapture and exhaustion. \n\nWow. Now that was a ride.\n\nThe springs of the mattress squeaking under his weight, Darrow moved farther onto the bed, crawling up until pausing beside her. Reaching out, he gently cupped her cheek in his warm palm, turning her head so she could look at him. Her eyes flickered open, staring into his own. She saw him smile, then watched him lean forward and press his lips to hers. \n\nShe tasted salt and a honeyed sweetness, a flavor she'd never experienced before. Nevertheless, she kissed him back eagerly, moving her mouth against his in a sensual dance of tongues and lips. Still, she couldn't place the unique flavor on his mouth, and her mind spun to find an explanation.\n\nTry what? Taste my own body? I'm not that flexible.\n\nI can fix that.\n\nThere was the answer. She'd told him she would never be able to taste her own body, so he gave her a chance to do just that. She didn't deny that her fluids were a good mixture of flavors, but the thought of devouring herself just didn't seem very appealing. Besides, her body was probably far more delectable to Darrow that it would ever be to her. \n\nDarrow held the kiss for minutes longer than it should have lasted, making her wonder if he had a new plan brewing inside his head. She felt his mouth pulling at her lower lip, sucking on it as if it was a piece of hard candy. She remembered during her climax that she'd bitten her lip hard enough to draw blood, putting the pieces together in her mind.\n\nAh, I see. So that's another weakness.\n\nShe giggled to herself that he could be so easily motivated. Surely a demon of such age and power could withstand a simple drop of blood? She shrugged and let him feed, hoping somewhere in her heart that this would help him to trust her.\n\nAfter another minute of allowing him to feast, her mind began to spin and her vision blurred. She placed her palms against his chest and gently pushed him away, trying to break away soon enough that he wouldn't drain her. She closed her eyes again and placed her palm against her forehead, trying to stop the room from spinning. \n\n\"Claire?\" \n\nDarrow's voice was distant, with and echo-like quality to it that frightened her.\n\nShe rolled over and groaned into the pillow. \"I think you took too much.\"\n\nShe heard him curse, felt his weight disappear from beside her. Her mind was still fuzzy, making even the smallest movement feel like she was being tossed by waves. \n\n\"Claire.\"\n\nHer eyes flickered open. Three Darrows were kneeling at the edge of the bed in front of her, their six eyes staring at her worriedly. In their hands they held three massive jeweled goblets filled with dark red liquid. She stared at them confused, wondering why he had suddenly split into three people.\n\n\"Drink this.\" The three said in unison as they offered their cups. \"It will make the spinning stop.\"\n\nShe nodded slowly, reaching out to grip the chalices. Her hand only wrapped around one and she brought it to her lips, drinking down the liquid inside. Sweet with tiny hints of pepper, Claire downed the glass in ten seconds, then let go of the cup and covered her eyes.\n\n\"Feel better?\" His voice was clearer now, the echo gone.\n\nShe pulled her hands away, looking again at only one massive demon. She nodded, pushing herself up slowly onto her knees. \"Yeah. What was in that?\"\n\n\"Just a little dragberry juice. It's native to the underworld. If your scientists knew what that little fruit could do, they'd kill each other for it.\" \n\nShe shook her head, trying to clear the last of the fog. \"What happened?\"\n\n\"Exactly what you said. I took too much of your blood. Forgive me. It's another weakness of mine.\" He reached out and reclaimed the cup, placing it on the floor.\n\nShe nodded, reaching up to steady her head with one hand. \"So I figured. You seem to have a lot of those.\"\n\n\"Are you feeling better?\"\n\nShe nodded and smiled slightly. \"Why are you being so nice to me all of the sudden.\"\n\nHe sighed and smiled. \"I thought I had harmed you. The last thing I want is for Thaltos coming in screaming that I made you unusable.\"\n\nShe shook her head. \"No, before this. You were kinder to me than usual at the table. You were more open.\"\n\nHe sat back on his heels and smiled. \"The more comfortable you are with me, the more comfortable I am with you.\"\n\nHer mind began to clear, so she smiled back. \"I think I'm fairly comfortable with you now.\"\n\nHe laughed, a strangely beautiful sound that danced in the air around them. \"I'll give you bonus points for allowing me that taste of your blood. Not many humans are up for that kind of intimacy.\"\n\nShe looked at him curiously, watching him with a sideways glance. \"So...does this mean you trust me now?\"\n\nHe paused for a moment, his gaze steely. \"Perhaps.\"\n\nShe groaned and hung her head. \"What do I have to do to make you trust me? I'm not Elaina; I would never do that. I'm way too scared to.\" She returned her gaze to him. \n\"What do I have to do to make you understand that?\"\n\nA sly smile crossed his lips. \"A good blowjob might help a bit.\"\n\nShe scoffed. \"You don't give up, do you?\"\n\n\"I am persistent.\" He crossed his arms over his chest, staring at her curiously. \"Is it so bad, Claire? You didn't seem to have too hard of a time with Silthos.\"\n\nClaire rolled her eyes. \"I was exhausted and didn't have much choice. \"\n\nDarrow shook his head. \"I don't believe you. I think you did a good amount of work.\"\n\nShe blushed but didn't look away. This was a critical moment where she had to stand her ground, but she had to tread carefully. One tiny misstep could shatter their freshly-made bond.\n\n\"Fine, then,\" she announced. \"I did do a little work on Silthos' cock, and I'll be the first to say I actually enjoyed the experience. I don't mind sucking people off now that I've tried it. But that doesn't mean that I'll give them out just to earn your pretend trust. It's your cock in my mouth, so be careful how you ask for it.\"\n\nAn amused smile cracked his features. \"Strong words for a captive of demons.\"\n\nShe lifted her chin an inch. \"My body, my rules. You want a blowjob, you have to ask nicely.\"\n\nIt was Darrow's turn to roll his eyes. \"Very well, then. Miss Hastings,\" he reached out and cupped her and in his warm palms, \"I don't suppose you would do me the honor of wrapping you lips around my cock and sucking on it like a lollipop. Would you please do me that one favor, Claire? I promise I will never ask such a disgraceful thing from you again.\"\n\nShe fell back onto the bed, laughing so hard tears started to well in he eyes.\n\nHe sat back, watching her with amused eyes. \"There. Was the polite enough?\"\n\nIt took her a moment to catch her breath before she could sit up again. She wiped the tears from her eyes and nodded. \"Come up here, you big lummox.\"\n\nDarrow gave a shout of happiness and crawled onto the bed, moving so he could lay back and rest his head on the soft pillows. He stretched out, folding his arms under his head so he could watch.\n\nShe turned around and crawled toward him. She knelt on the soft bedding, staring at his outstretched body. Every muscle was perfectly defined, his dark red skin taught and smooth. Tiny, delicate swirls swooped and intertwined across his flesh, a perfect balance to his iron strength. All in all, he was a good chunk of eye candy...for a demon.\n\nHis cock was a masterpiece in itself. Eight inches long and thicker than any human male, it stood loud and proud, presenting itself in all its glory. The plump tip shined in the firelight, making her think of a freshly picked fruit just waiting to be eaten.\n\nClaire smiled and shook her head. All her life she'd been warned of sexual deviants and now she was the one with perverted thoughts. She figured the best was to handle this was to just block out her thoughts and go for it. She had a nasty habit of over- thinking things, and she wasn't going to let her overactive imagination get the best of her now.\n\nShe adjusted herself to a comfortable position, leaning over his cock as she stared at it. She flicked out her tongue, tasting his flesh like she did with Silthos. He was far sweeter then his fellow demon, with a darker, smokier taste to his flesh. Not bad for someone who ate women like candy. She licked him again, running her tongue up the length of his shaft, smiling when she heard him moan slightly.\n\nDeciding to play, Claire bent down and wrapped her lips fully around the thick tip of his cock, swirling her tongue in slow circles. Darrow jumped in surprise, groaning at the feel of her tongue. She smiled around his cock and continued her teasing before sinking down and taking as much of him as she could. The tip barely brushed the back of hr throat, a warning for her not to go too far. She pulled back an inch, moving to a comfortable pose before she began to have her fun.\n\nShe moved slowly at first, rocking her head up and down in an easy rhythm that kept him under control. He shifted slightly, the muscled of his abdomen contracting with each brush of her tongue. She quickened her pace just a little, still wanting to maintain control of him with she explored.\n\nWhile hand supported her weight on the bed, Claire's other hand slipped down between his powerful thighs, seeking out his most valuable piece of anatomy. She found his balls after a moment, her fingertips barely brushing against the sensitive skin of his scrotum. Darrow jerked against her, groaning through clenched teeth. Bingo.\n\nCarefully, she reached out and cupped his sac in her hands, holding the two solid orbs in her palm. They were heavy and warm, almost majestic to the touch. It amazed her that so many things came from such small parts of the body. With a gentle touch, she began to massage each orb, rotating her thumb in slow circles. She kept her pace slow, matching the controlled stroking of her mouth. She wanted him to trust her, so she needed this to last as long as possible.\n\nDarrow, for his part, did his best to resist the urge to grab her head and force her down. He simply lay on his back, his hands folded under his head, gritting his teeth.\n\nShe giggled inside herself. For the moment, his body was all hers. She could do anything she wanted and he'd have no choice but to comply. But Claire wasn't malicious like that. She wanted his trust and his love, so she kept her rhythm steady and gentle. She switched her massage to his other ball, maintaining the slow, gentle motion she'd perfected.\n\n\"I'll bet Silthos didn't get anything close to this.\" Darrow groaned as she teased him. \"You're a natural.\"\n\nShe smiled around his cock and kept her movements steady. Her touch was still soft and easy, her tongue moving in slow circles around his shaft as she suckled him. They remained like that for several minutes, a perfect cadence built between them as she brought him higher and higher.\n\nHe began to writhe against her, gritting his teeth against the building tension. One hand reached down and stroked her hair, fingers twining into the dark stands and coaxing her up.\n\n\"You have to stop, Claire,\" he rasped. \"I'm not allowed to come in you yet.\"\n\nAs best she could Claire nodded and pulled away from him, sitting up on her knees as she watched him calm himself. His breathing slowly returned to normal as beads of sweat formed on his skin. She smiled to herself. Apparently she'd done a good job.\n\nA moment later, Darrow pushed himself up and leaned back against the wall, tipping his head back and closing his eyes. \"Slower than I'd like, but still damn good.\" His eyes flicked to her. \"Where did you learn that?\"\n\nShe shrugged. \"I didn't learn anything. I'm just guessing.\"\n\nHe laughed. \"Keep making guesses. They feel fantastic.\"\n\nShe shifted, crawling across the bed to sit next to him. \"So do you trust me more now?\"\n\nOne massive arm reached down and wrapped around her shoulders. \"My dear, I have full faith in you.\"\n\nShe smiled and rubbed her cheek against his arm. \"Good.\"\n\n\"Good, indeed.\" He chuckled to himself. \"I understand why Silthos was so upset when he couldn't finish. You suck like a damned whore.\"\n\n\"And I'm a virgin. Imagine that.\" She yawned, the exhaustion from her last orgasm finally taking effect.\n\n\"You poor thing. I've exhausted you.\" He moved to pull her close as he flipped the blankets back. \"What would Thaltos think?\"\n\nShe giggled as she slipped under the warm sheets, settling into the bed. She rolled over and placed her hand on his arm. \"Stay with me?\"\n\nDarrow paused for a moment, a look of confusion crossing his features. Finally he smiled and nodded, crawling under the sheets himself. He scooted closer until his chest and abdomen brushed her back. She squirmed against him, pressing herself harder to his body. A strong arm wrapped around her waist to hold her close, warm breath spilled down her back.\n\n\"Thank you,\" he whispered.\n\nShe smiled. \"No problem. What's happening tomorrow?\"\n\n\"Not sure. We take each day as it comes. Why?\" \n\nShe shrugged. \"Just curious.\"\n\nWarm lips pressed against her head. \"Goodnight, Claire.\"\n\nShe nodded and closed her eyes, strangely secure in his arms. Of all of them Darrow had made the biggest improvement, doing a complete one-eighty in her heart. She hoped the bond they had created, as fresh and as delicate it was, would last longer than the one he had with Elaina. Above all, Claire hoped she would never become anything like Elaina. She wanted to be Claire, just with demons.\n\nShe fell asleep in seconds, her dreams filled with Darrow, his tongue and the taste of dragberries.\n\n\n\n\nI'll address one more problem: I've had one commenter point out that the ever-changing titles are a bit confusing. I'm sorry; I don't mean them to be. I personally like the fact that each chapter starts off with a different theme, so I'm going to keep changing the title. Luckily for you, I have an idea: \n\nComing soon to a Literotica page near you \u2013 Chapter 5 \"Secretkeeper\""
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "hell",
        "blow job",
        "oral sex"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/soulseeker"
}