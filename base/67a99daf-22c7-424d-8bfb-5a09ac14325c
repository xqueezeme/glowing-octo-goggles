{
    "title": "The Bra Salesman Ch. 04",
    "pages": [
        "Thanks again to everyone who has commented and voted, it definitely keeps me motivated to keep writing! Enjoy the next chapter, expect Chapter 5 some time around mid-to-late Jan.\n\nChapter 4: The More, The Merrier\n\nTasha is straddling me, naked and rhythmically bouncing up and down as fast as she can on top of my extremely thankful cock, as I stare at her glorious 48-inch breasts wildly bouncing in front of me with spellbinding magnificence. I've been doing this every night for the past three nights, and there was a tiny part in the back of my brain that wondered if I would ever get tired of this. But watching her amazingly beautiful tits thrash in front of me as her tight, muscular cunt holds my erect eager-to-cum dick firmly inside her, I realized that I would have to be out of my fucking mind to ever get weary of this. \n\nI pull out my smartphone and take another picture of her for my archives. Her eyes are closed and she doesn't even notice, but she already told me she didn't mind if I \"document the effectiveness of these exercises over an extended period of time.\" And by that, I mean she'll let me take pictures of my fucking her naked body as much I want.\n\nIn fact, she'll let me do anything I want at this point. She completely believes everything I tell her now, whether it's that I'm a bra salesman or that these exercises I've been doing with her will help her fit into her lingerie. There was a time a few days ago when she was beginning to doubt me, but that time has come and gone. And I have been cumming ever since. Now she is more than willing to do anything I want. I've been trying to think of what else I want, I mean other than squeezing her tits and fucking her for all eternity, but nothing else is really coming to mind.\n\nEarlier today at work, I was showing some of my photos to the coworker I get along with best, Dave. He's about my age, a tad overweight, and sits a few cubicles down the aisle from me. He didn't believe me when I told him what I'd been doing at night this week and kept joking about what a huge liar I am. At least he did until I pulled out my collection of personal pictures. Then he couldn't stop telling me what a goddamn brilliant mastermind I am.\n\nBut when I showed him the two minute video of me fucking her amazing body, he was begging me to let him come over and have a turn with her. Like she's some bottle of beer I should pass around to my friends. Excuse me if I don't want any backwash, so to speak. Wah wah, he's a lonely guy who hadn't gotten laid in who knows how long, yeah yeah. I found me a large-breasted, na\u00efve simpleton to fuck, go get your own.\n\nSpeaking of which, she is still hammering away at my cock, and I am loving every luscious slap of her thighs against my body that makes her tits shudder as she gasps, \"yes.\" She comes down hard again, \"yes,\" over and over again, \"yes.\" By now, I am gripping her hips keeping her steady so that she can keep slamming herself downward, \"yes.\" Yes I love hearing you say \"yes.\" Oh yes, keeping say \"yes.\" Yes ma'am, \"yes.\" Yessireebob, \"yes.\" Yes we have no bananas, but \"yes\" we have plenty of cock, \"yes.\" \n\nHoly shit, now she's really going to town. She's going up and down so fast that her breasts don't even know which way to flop. As far as I'm concerned, they can bounce around in any direction they want as long as it's a few inches in front of my face. Ungh, she's really pounding herself down hard on my groin, but I can't really complain, right? Every time she crashes down on top of me, she's screaming \"YES!\" \n\nI open my mouth and try to capture some of her breast flesh in my teeth, but her tits are shaking too fast for me to catch. \"YES!\" C'mon, I just want a little bit of tit in my teeth! \"YES!\" Damn, missed again! \"YES!\" Jesus, I really need to practice my eye-mouth coordination. \"YES!\" I don't know exactly what else I would practice on, though. \"YES!\"\n\nOh my god, my cock is ready to explode with cum-explosion happiness. \"YES!\" No no, hold out as long as you can. \"YES!\" Remember that wreck you saw on Interstate 95? \"YES!\" Or that clip on TV that showed stomach surgery? \"YES!\" Godammit, her pussy feels incredible. \"YES! YES!\" Shit, I don't know if I can \"YES! YES!\"\n\nShe leans forward and my head is buried in her massive chest, glistening with sweat, and she continues humping me. \"YES! YES! YES!\" Having her erect nipples amidst a mountain of boob rubbing against my face is too much for me, and I let loose with several warm streams of jism deep inside her. \"YES!\" Jesus Christ, she's not stopping. \"YES!\" I think she's going to rip my cock right off my body with that cum-soaked cunt-grip of hers. \"YES! YES! UNNNNNGH!!\"\n\nFinally I feel her entire body slow down and her muscles relax. My face is still submerged in the cleavage between her enormous, sweaty breasts. Life is an incredible and blessed gift, full of hope and laughter, where the universe bestows upon all living things the honor of potentially achieving happiness and peace. Of course, I believe that now, because like I said my face is still submerged in the cleavage between her enormous, sweaty breasts.\n\nBut as I reach up with my two hands and grab her nipples and lightly twist them in my fingers, I thought about how wonderful my life is right now, and that I shouldn't be such an asshole, that I should be generous and thoughtful. I mean, not to her, I'm going to keep lying my ass off to her. No, I mean to my coworker.\n\nAnd this is where the foresight for my online purchase is really going to payoff. \"Hey Tasha?\" I said panting, as she kept humping me. \"I'm concerned about something.\"\n\nShe looked at me, gasping for breath with her blonde hair disheveled and her gorgeous top-heavy body covered in perspiration, \"What is it?\"\n\n\"Well, we've been doing these exercises for several days now, and you've been feeling an improvement in how your lingerie feels, right?\" I mean, that's what I keep telling you every night.\n\n\"Oh yes, absolutely!\" she said, agreeing with my studied, professional assessment that I've worked really hard to lie about. \"You've done an amazing job!\"\n\n\"Thanks. The thing is, I think tonight's exercises might have loosened and relaxed your breasts too much. I'm thinking we should stop and check how your bra feels.\"\n\n\"Okie doke, I'll go get one.\" She began backing up so that she was no longer straddling me. God, if I could figure out a way to live my entire life so that her naked body was constantly straddling mine for the rest of my life, I would die a very happy man. \n\n\"Actually, I've got a 48F right here for you. See?\" And I hopped off the bed and went over to my clothes. And by that I mean the random pile of garments I had torn off my body about a half hour ago in my eagerness to fuck those amazing tits and ass. I pull a white bra with turquoise lace out of my left jacket pocket and show her the label on the bra that clearly says 48F.\n\n\"Great, let me try it on!\" She reaches out to take the bra.\n\n\"Alright... just turn around and I'll help you put it on.\"\n\nShe giggles and turned around, and behind her back I stuff the 48F bra back into my left jacket pocket and pull out another bra from my right jacket pocket that looked exactly the same, but this one was a size 44DD.\n\nShe was smiling when she took the bra from my hands. But as she struggled and struggled to fit herself into the smaller bra, her smile turned into concern. And when she finally managed to hook the bra together and saw her massive breasts splooging out of the top of the bra, her bottom lip began quivering. \"Oh my god,\" she said as she looked at me. \"You were right! My breasts having gotten too relaxed! What do I do?\" \n\n\"It's ok! Don't worry!\"I said reassuringly. Her eyes started watering, which made me feel lousy for being such a horrible person. Well, it would have made me feel that way except I had long ago gladly accepted that I am in fact a horrible person and let go any feeling of lousiness that might accompany that revelation.\n\nI put my hand on her shoulder and spoke in the most soothing voice I could, \"I know some exercises that can tighten you up again, but they are very complicated and I'm going to need some help. Do you mind if I call in a specialist?\" \n\n\"Yes! Please!\" She nodded her head so fast that I was afraid she was going to damage whatever few brain cells might be left rattling around in her skull.\n\n\"Of course!\" I pulled out my phone and called up my coworker. As I'm calling him, I see Tasha is frantically pacing the floor, and her naked breasts are jiggling, her supple thighs are tensing, oh my god, look at her stunning ass, so round and... \"Hello? Hello?\" I hear Dave's voice say. Oh right, I'm making a phone call.\n\nI clear my throat and begin. \"Dr. Cooper, I have a situation here that needs your immediate attention.\" I wish I had time to let him know what I'm doing, so I hope he understands. Tasha is now standing still, with her hands behind her back, looking expectantly at me. Oh my god, it's going to be hard to talk to him with her jutting her delicious tits out like that.\n\n\"Dr. Cooper? What the fuck are you talking about, John? Is this some sort of joke?\" That's what I was afraid of. This is exactly why I didn't put this numbskull on speaker. Don't look at her body, don't look at those beautiful tits, and her toned stomach, and that cute little pussy just waiting to be fucked, those... Right, phone call.\n\n\"Yes it's me. Do you remember the client I had spoken to you about before?\" Come on, lamebrain, put it together. Her eyes are drilling into me with the same intensity as my cock wants to drill into her. \n\n\"Client? What are you...? Waaaait, are you with that girl with the huge knockers?\" Finally he's catching on. \n\n\"Yes, that's her. Well, I'm with her now and we have a situation.\" My God, look at her naked body, so curvy, so smooth.... Gah, focus, focus, focus.\n\n\"Oh shit! Are you telling me I can come over there and fuck her?\" Jesus, I hope his ear-piercing squeaky voice can't be overheard through the phone. \n\n\"Exactly. Can you come immediately to her apartment?\" I give him the address slowly, because I can tell he's so excited that his shaking hands won't be able to write anything down legibly.\n\n\"Holy fuck! I'll be there!\" And click he was gone.\n\n\"Mmm hmmm. Mmmm hmmm. That's right, it's an acute case of Sudden Teenietit Syndrome. Mmmm hrmmm. You think so? Excellent. Yes, that's good to hear. Thank you! I'll see you soon.\" I calmly turn off my phone and turn to her. \"Dr. Cooper is one of the finest physicians I know with a specialty in this field, and I think between the two of us we should be able to fix everything.\" \n\nShe was sniffling, \"Thank you so much, I don't know what I would do without you.\" Probably not get fucked so much, most likely. She stands up and gives me a bear hug that presses her wonderful tits into my chest. I feel a small drop of cum fall from between her legs onto my toe and I can't help but smile. \n\n\"It's no problem at all,\" I tell her. \"Just so you know, some of these exercises are going to be pretty intense and kind of strange. So I'm going to request that you not ask any questions, just let us do what we need to do, and I promise you're going to feel better.\" I figure it'll be easier this way than having to come up with some bullshit explanation for every perverted thing we end up doing to her. Besides, I don't know how convincing Dave can be, and I just as soon make it so that he has to talk as little as possible.\n\nIt's barely five minutes before I hear the loud screeching of a car coming to an abrupt stop outside, and one minute later I hear a knock on her door. I open the door and see my coworker hunched over, panting profusely. \"Dr. Cooper,\" I say, \"I am so glad you could make it.\"\n\nBut I don't think Dave is listening to me now. He's looking around me and staring at the naked woman with the gigantic breasts as she stands up and smiles at him, \"Thank you for coming, doctor. Please do whatever you have to do to help me.\" I give him a subtle thump on the arm so that he will wipe that stupid drool flowing over his bottom lip. \n\nAll of a sudden, I recognize that inviting Dave here could be the worst mistake I've made yet. If Dave starts acting like a sex-crazed freak, then she might realize what a ridiculous scheme all of this is. She may throw us out and never let me anywhere near her again. Crap, I called my friend in a moment of post-coitus relaxation and only now is my brain engaging long enough to understand that I have to keep Dave in line if I'm going to keep this scam going.\n\n\"Tasha, do you mind if I consult with my colleague for one moment?\" She nodded enthusiastically as I grabbed Dave by his arm and half-dragged him into the kitchen.\n\n\"Thankyouthankyouthankyouthankyou!\" Dave said with a huge ridiculous smile on his face. Actually, it's not that ridiculous. I'd have the same smile on my face too if I were him. \"This is fucking fantastic!\" \n\n\"SSSSH!! Keep it down!\" I whisper. \"Don't let her hear you! You owe me big time for this, so do NOT fuck this up for me!\" I don't mean to jab my finger at him, but I can't help it.\n\n\"Ok, ok, anything you say. What do you want me to do, John?\" he whispers back.\n\n\"Albert! Remember, my name is Albert. And you are Dr. Cooper. You are professional physician who has done this many, many times before, so do NOT walk around with that perverted, juvenile grin on your face!\" I give him a light smack on the cheek and he immediately puts on a stoic frown on his face. \"No Dave, don't look mad! Just be calm. Cool. Like this is no big deal. Just another day at the office. Do NOT fuck this up for me!\" \n\n\"Right, right, right. I hear you, John. I mean, Alfred.\" \n\n\"Albert!\" I never realized how hard it is to whisper and yell at someone at the same time.\n\n\"Right, right, right. Albert. Got it, John.\" Oh my God, he is SO going to fuck this up for me. \n\nWe walk back into the room, and I put on a cool demeanor as... oh Jesus fucking Christ, Dave, get that creepy leer off your face. I understand she has an incredible body, but show some fucking decorum. \"Tasha,\" I say, trying to get her to focus on me on not the wide-eyed ogling of my soon-to-be-ex-partner, \"we have discussed the matter, and we feel we need to take some strong measures and quickly.\"\n\n\"What do you want me to do?\" Wow, so many thoughts have suddenly come to mind that it's really hard to sort out what... crap, now I'm the one with the creepy leer on my face. I take her hand and escort her to her bedroom, with Dave following along behind. Ugh, I think he's skipping. I shoot a glance to him to calm the fuck down, and his jovial trot turns into a normal walk. \n\nI turn my attention back to her, \"Please sit on the edge of the bed, keep your legs on the floor, lie down, put your hands over your head, and close your eyes. Dr. Cooper is going to work on your groin and try to relax your entire body. I'm going to do some work on your chest and see if we can get your pectoral muscles to unclench.\"\n\n\"Sure thing,\" and she immediately hopped onto her bed and splayed her gorgeous body for us. Dave looks at me with wonderment, and he gleefully mouths out \"Are you fucking serious?\"\n\n\"Is something wrong?\" Tasha asks. She's looking up at the two of us, and Dave is now stricken with such fear that his mouth is twisted in an unnatural curl that is godawful painful to look at. I rub my head, realizing that this schmuck is going to undo all my hard-earned bullshit.\n\n\"No, everything is fine.\" I say reassuringly. \"Just relax and let us do our job.\" And by our job, I mean letting us fuck you every way humanly possible and maybe a couple of inhuman ways as well if there's time. \n\nShe laid down again and closes her eyes. She takes a huge breath that makes her huge chest bob up and down with a delightful jiggle that is so sweet and innocent that I want grab her tits and fuck her as hard as I can until she is covered in cum. Ok, so that's not the greatest metaphor ever. I'll work on it later.\n\nDave spreads her legs apart and stands there gazing at her wet pussy like he's lost in a hypnotic trance. He looks over at me and mouths, \"Really?\" I smile and nod at him. I even gesture towards her cunt like I'm fucking Vanna White showing off a vowel. He looks back at her pussy and just stands there. Uh, hello? Go ahead, you prick. She's waiting for us two to begin our therapeutic treatment, so don't stand there like a jackass. \n\nChrist, is he going to chicken out, Mr. All Talk And No Fuck? What is he waiting... finally! He's dropping his pants. Damn I never really thought about what a hairy guy Dave is, but now that I see some of exposed skin, he looks like a cat just threw up ungodly amounts of hairballs all over him. Yeesh. Ugh, now he's just shoving himself in, no warm-up, no foreplay, no attempt at making this seem like a legitimate exercise, just ram it on in. You're welcome for already getting her wet and ready. \n\nAs I went to my jacket, I saw Dave smiling and fucking her furiously. I pulled out the bottle of cherry-infused oil I had bought a few days ago hoping for a time like this to use it. I took a breath and then got onto the bed. I had been waiting for a chance to do this ever since I first saw her wonderfully large breasts in that department store dressing room. I carefully straddled her stomach and then poured a generous amount of oil onto to her tits.\n\nMy fingers were in heaven as they dug into her soft, oily flesh and rubbed the oil all over her immense chest. Her tits were now drenched in oil, glistening the dim light of the room. I grabbed a huge handful of breast flesh in my oily hands and slid my cock between her massive tits. Slowly I slid my cock back and forth, letting the oil from her tits lubricate my hardened dick.\n\nBehind me, Dave was slamming his groin harder and harder into her, which shook her entire body. I could feel her tits jiggling within my clenched fingers as I continued to slide my unbelievably happy cock back and forth in the deep cleavage of her huge breasts. Her eyes were closed but she was moaning with pleasure.\n\nAll of a sudden I heard Dave shout, \"Oh shit! I'm going to fucking cum! Ooooh yeeeeah!!!\" and I could hear his groin slapping loudly against her, and every thrust made her body quiver. She opens up one eye to peek out at us, because even someone as dense as her knows that is not how a professional doctor talks, so I'd better do something to legitimize this situation. And by that, I mean reassuring her that our bullshit lies do make sense.\n\nI lean in to her and ask, \"Are you feeling relaxed? I know Dr. Cooper is doing some intense work on you.\" Of course, as I'm saying this, I hear Dave growling like some mongrel animal as he stops thrusting forward, so I assume he's blown his load now. Finally. \"But we're hopeful this will resolve your muscular atrophy. Can you feel your muscles unclenching?\" \n\nShe smiles at me, \"Ooooh yeah,\" and then puts her head back down and closes her eyes. \"You're both doing a wonderful job.\" It's a job in and of itself trying to cover for Dave and his stupid disregard for the precarious nature of this entire scam. I'm just glad he got laid and can relax and let me do my thing.\n\nDave had pulled out of her by now, but I was just getting warmed up. I tightened my grip on her tits and pushed them together as I thirsted my cock back and forth faster between her amazing mounds of mammaries. As much as I loved the feel of her mouth or her pussy over my dick, the feel of her huge, oily breasts pressing down on my throbbing cock was incredible.\n\nNow I was shoving myself harder and harder, and the skin of her breasts rippled every time I slammed my groin into her chest. She arched her back underneath me, but she kept her arms over her head and her eyes closed.\n\nI tried to keep myself from grunting, but I was fucking her tits like a beast now. I was gritting my teeth and digging my fingers deep into her flesh, ramming my cock into her quivering bosoms. When she moaned louder, I couldn't hold back and more and streams of warm jism shot out of my cock and into her cleavage and down her chest. Seeing my cum mix with the oil on her body made me feel quite proud of myself for some weird reason.",
        "I got off her and she started to open her eyes, \"Keep your eyes closed,\" I commanded her, \"and relax. Dr. Cooper and I still have some work to do.\" I leaned over and wrapped both of my hands around one of her breasts and licked her erect nipple. I could taste the cherry in the oil and I slid my tongue all over her breast, enlarged with arousal. \n\nNow that I'm here, I'm trying to remember if I got the kind of oil that is edible or not. Shit, I'm concerned that maybe I didn't get the edible kind. I mean, I'm not concerned enough to actually stop licking her tits, I just hope I don't have to get my stomach pumped as a result. But honestly, it would totally be worth it.\n\nDave was standing over me in wide-eyed amazement, so I looked up at him and then looked at her other erect nipple, jutting out all lonely. He licked his lips and then kneeled down beside her, but then leans towards me and whispers, \"Look at her boobs! They're so goddamn amazing!\" \n\n\"What was that?\" Tasha leaned up for a moment and looked at the two of us. \"What did you say?\" Nice going, Dave.\n\n\"Dr. Cooper was just commenting on how the therapy seems to be making a difference already.\" Dave is now nodding his head in agreement. Idiot.\n\n\"So we're done?\" she says with a smile and gets up on her elbows.\n\n\"No, we still have a lot of work to do.\" She's still looking at me. \"Just lay down, we're going to do a tactile and oral massage to see if we can reduce some of the swelling.\" She's disappointed we haven't cured her yet, but she agrees to lie back down on the bed and let us continue our therapy. And by that, I mean rub our tongues all over her chest.\n\nDave is staring at me now and mouthing the word, \"Sorry.\" I glare at him and mouth back, \"Do NOT fuck this up for me!\" He gives me the ok sign and then the two of us go back to the oily, cum-covered breast we each have in our hands. I go back to where I left off, holding her breast and licking her erect nipple. Dave starts doing the same thing, squeezing her massive breast with both hands and shoving as much of her nipple and tit into his mouth as he could.\n\nShe was slowly writhing in pleasure as the two of us lightly gnawed on her breasts. I felt her jerk all of a sudden, and I saw Dave was now sinking his teeth into her flesh. Great, he's going to ruin this. But then I heard her whisper \"yes,\" and saw the Dave had reached down and was thrusting his fingers into her moist pussy, still drenched with cum. \n\nNow she was twisting with arousal, gasping for air, as Dave rubbed his fingers all over the top of her clitoris. I bit my teeth into her defenseless breasts and felt her turn towards me and barely whisper, \"yes.\" Or maybe it was \"Jess\" or \"fetch,\" but it sure sounded like \"yes\" and that makes a lot more sense so I'm going with that.\n\nShe was moaning and spreading her legs as far apart as she could, letting Dave enter her as deep as he wanted. He was thrusting faster now and her hips were grinding against the bed, trying to keep up with his erotic rhythm. \"Yes! Yes!\" she kept saying. \"YES! YES!!\" Oh my god, this slut is going to orgasm again! The two of us continued biting her breasts and sucking on her engorged nipples as Dave pounded her pussy so hard that tiny drops of leftover cum were bursting out of her vagina.\n\n\"UNNNGH!\" she gasped and her entire body quivered for several seconds. I could feel her soft, oily tit wiggling in my mouth. Then I felt her entire body collapse into a relaxed and peaceful state. \n\nI was about to whisper some encouragement to her, about how relaxed she feels, about how the treatment is going well, about how well she was doing, and other stupid fabrications I could think up. But before I say anything, Dave stands up and, grabbing her arms, shifts her so that she is lying diagonally on the corner of the bed, her groin resting on one edge with her legs dangling off the side and her shoulders on the other edge with her head dangling off the other side.\n\nDave starts taking off his shirt, which I don't underWOW is he a hairy fucker! My God, I have carpets that aren't as hairy as his back and chest. Jesus Fucking Christ, Dave, are you a type of Yeti? For God's sake, put your shirt back on before she balks at having anything to do with your shaggy ass and, by extension, my ass as well.\n\nWait, what is she doing? Is she opening her mouth and inviting Dave to put his cock into her? And she's using one of her hands to rub her pussy as she spreads her legs farther apart so I can get to her? Oh my Lord, she wants to fuck both of us together. I can't believe it! Oh shit!! She has been turned into an unstoppable fuck machine, willing to be penetrated in every way, allowing her incredibly large tits to be used in whatever way we see fit. This is the happiest day of my life! It cannot possibly get any better than this! I am unbelievable grateful Dave is here to help make this happen!\n\nDave looks at me and starts laughing, \"Come on, John! Let's do this!\"\n\nAll of a sudden she stops and says, \"John? Who's John?\" She leans her head forward and looks at me, \"Albert? Why is Dr. Cooper calling you John?\" Dave, you are the stupidest motherfucking idiot I have ever known! I cannot believe I was so fucking stupid to bring you here!\n\n\"Well, you see...\" I suppose I could, no that wouldn't work. \"Uh, that is...\" What the fuck do I do now? This is fucking horrible! This is your fault, Dave! Thanks to you and your fucking mouth, my cover is blown. And now she's going to realize what a shithead I've been this entire time, and she's never going to let me anywhere near her again. And you can fucking forget about anything else you were imagining in that stupid pinhead of yours. Jesus, now that she realizes we've been lying to her this entire time and posing as someone different, we'll be lucky if we can avoid jail. The one good thing I can count on is that you'll be in jail with me so I can beat your fucking ass every day for the rest of my miserable life for screwing up my fucking life, you stupid prick!\n\n\"I'm sorry to confuse you, Tasha.\" Dave speaks up. Just shut the fuck up Dave and let me handle this! \"John is Albert's middle name, and it's what I've called him ever since we first met years ago at a conference in Phoenix when they put the wrong name on his nametag.\" \n\nTasha looked at me and smiled, \"John! Hee hee! That's a good name too!\" she said with a giggle. And with that, she laid back down on the bed and wrapped her luscious lips around Dave's erect cock. Holy shit, that was incredible! Dave was actually, unbelievably, mind-blowingly fucking awesome! I had no idea he was capable of such exquisite and sophisticated bullshit. That was bullshit worthy of... hrmm, how exactly would someone be worth bullshit? Doesn't matter. The point is, I take it all back Dave, you are the greatest friend a guy could ever have, you fucking genius! \n\nI try to give him a smile, but he's not really looking at me. He's staring at the large-titted woman sucking upside-down on his dick as he starts kneading her oiled breasts. Can't say I blame him on that. I don't know if he's noticed the wads of my cum that have mixed in with the oil, but I didn't want to ruin his moment. Acutally I think he'd still grab her immense tits even if they were covered in a thick, gooey layer of cum from a wide range of men as long as he was one of them. \n\nJesus, look at her. I see her opening her jaw as wide as she can in order to let him get as much cock as humanly possible into her. Her lips are now pressed against the base of his shaft and his balls are scrunched against her nose. God, I hope he's showered those hairy monsters sometime in the last few months, but I hear her moaning with pleasure so I guess she doesn't mind it too much.\n\nI decide I'm going to take this opportunity to do something else I have wanted to do. I stand up and pull one of legs straight up so that her pelvis turns a little to the side, even as her shoulders stay flat on the bed. I thought my dick might need more time to recover, but seeing her gorgeous body naked on the bed and having someone's dick stuffed into her mouth made my erection as hard a rock again.\n\nI took my cock, still well-oiled from the titty fuck, and slowly pressed against her anus. I hear her murmur in surprise, but she doesn't resist me as I carefully push my cock into her ass. Oh my god, I knew her ass looked incredible, but I didn't dream it would be this amazingly tight. I can feel her tighten her gluteals, squeezing my cock with more force than even her vacuum-like mouth which Dave is now enjoying.\n\nShe tightened her groin again, and my cock is now throbbing inside her incredibly snug ass and can barely move. I try moving in a little further, but her butt muscles are gripping me too much for me to be able to go in any more. I push harder and I move a little before her ass clutches my pulsing cock with a force I thought impossible for anyone to achieve. \n\nI strain harder and harder until at last I shove my cock all the way into her ass so that my groin is now resting against her butt. I am holding on to her leg aloft above her... did I say hold? I meant I wrapped my arms around her leg like a zealot environmentalist would hug a tree.\n\nDave is now moving himself in and out of her, and I can see is cock is glistening with her spittle. Or is that cum? Has he already cum? No, I don't think so. Now I push my groin forwards and backwards, but her ass is so tight around my cock that I don't actually slide anywhere. Our two bodies just shift back and forth, with my cock held firmly in place by her gorgeous ass.\n\nI'm wondering if maybe I haven't made a huge mistake. I mean, how on Earth is fucking someone in the ass remotely going to help them relax and fit into their lingerie better? I hadn't thought of any good reason, and now I'm thinking that this was going to be impossible to explain.\n\nBut then I see her extend one of her hands in my direction, her fingers spread out towards me, as if begging me to take her hand. I wasn't sure why she wanted this, but I figured if the woman the two of us are gangbanging wants me to hold her hand, then by God I'll do it. \n\nI put my hand in hers and immediately she lunges forward a little and grabs my wrist. I instinctively grab her wrist and next thing I know she is pulling me forward as hard as she can. Shit, how can she have such an amazing grip? I feel like the bones in my hand are going to snap at any second.\n\nWith her other hand, she reaches up and grabs Dave's hip and pulls him forward so that he lunges into her even more. Her leg is resting against my shoulder, and with her pulling me forward, I'm pressed so hard against her groin that I think my balls are about to get sucked into her ass as well.\n\nOh my god, she's rocking herself back and forth, so that Dave and I take turns lunging into her. She pulls Dave in and swallows his stiffie, and then she pulls me deeper into her ass, as if I could get any deeper. \n\nMy cock is pulsating with a new load of cum ready to ejaculate. I am gripping her leg that is up the air and resting against my chest trying to resist urge to cum, because I so want this moment to last a while. But I don't know if I can hold out, watching her fuck the two of us so vigorously. If I had known she was this much of a slut, I would have brought Dave over a long time ago. Which I guess would have been yesterday.\n\nDave is now sliding his cock in and out of her mouth in rhythm with her rocking back and forth. \"Mmm,\" she yelps as his cock pushes into her welcoming mouth. \"Mmm!!\" Now she's pulling him harder into him. \"MMMMFF!\" Her yelps are becoming more high-pitched and laden with orgasmic pleasure. \"MMMFF!!\" I see the veins on her hand desperately trying to slam his body into her mouth so that she can swallow as much of his cock as she can. \"MMMRRLLFF!!!\"\n\nBetween watching her devouring Dave's cock and her tight ass squeezing my throbbing cock, I can't stand it any longer. I feel the jism build in my veins and then explode inside her, which makes her ass clench even more so that I think I lose all blood flow to my cock. A few seconds later and I have unloaded my entire load of cum inside her. Her ass gradually loosens enough so that I can pull out of her, like a cork coming off a wine bottle but without the pop. Which would have been so cool if it had happened.\n\nJism starts dribbling out of her anus, and my cum-soaked cock starts getting limp. But Dave is still hammering away and she is still yelping in pleasure, \"MRRMFF!! MRRMFF!! MRRMFF!!\" Man, she is sucking away at his cock like a thirsty desert person drinking on a hose of water.\n\nSuddenly Dave's jaw drops several inches and his half-opened eyes glaze over, and I see his groin lurching into her. I can't see any jism coming out of her mouth, but with her head dangling off the bed, I can easily see her extended neck as I watch her take several large swallows. Dave's hands are rigidly clenched around her breasts as she slowly slides her tongue up and down his shaft a few times making sure she licks every last drop of his cum off his erect cock.\n\nDave throws his head back and is panting as she rolls over on her stomach, still holding on to his erection. \"I'm sorry, Dr. Cooper, I didn't mean to... it's just... I really liked the taste of your... you know... but I wasn't trying to... I'm sorry.\" Dave gives me a look of confusion, wondering why she is apologizing to him?\n\n\"It's fine, Tasha,\" I jump in. \"Both Dr. Cooper and I have experienced this with some patients before. It's quite normal for some women to experience... arousal, and it's nothing to be ashamed about.\" Dave goes along with it and looks down at her with a reassuring and gentle forgiveness. Or maybe that's a lustful look of satisfaction. God, do I look like that when I put on my reassuring face? Jesus, I hope not, because if I do then I look like a fucking psychotic letch. \n\n\"I appreciate what you've done for me!\" Oh I assure you, not as much as we appreciate what you did to us. Dave slides his fuzzy forearm against his scalp to wipe the sweat away. \"Do you think it worked?\" Right, the bra. We need to wrap this up neatly and prove to her that our intense therapy did the trick and we didn't double-fuck her for no reason at all. Which we did, of course, but I'd hate to spoil this idyllic moment.\n\n\"Let's find out,\" Dave says and he pulls out one of the bras I had given her earlier. Wait, how the fuck did he get that from my jacket? WHEN the fuck did he get that from my jacket? Did he get the right one? Oh my fucking God, does he even know which bra is the correct one? I hope you know which bra was right! Fuck, are you a rock-solid bullshitter, Dave? Or did you get incredibly lucky last time and are now about to ruin everything? You had better have gotten the right fucking bra, or I am never letting you fuck any other large-breasted simple-minded women again! Right, as if I have some spares lying around.\n\n\"It's fits great! Thank you both so much!!\" Ok heart, you can start beating again now, thank you. And I should probably start breathing again as well.\n\nI clutch my chest as she bounds off the bed and gives Dave a huge hug that makes her breasts squeeze sideways against his sweaty, hairy body. Then she leaps over near me and gives me a similar hug that presses her gorgeous tits into my appreciative body.\n\nTasha steps away from me with a concerned look on her face, \"I do have one question, though.\" Shit, I hate questions. The last thing my post-coital brain needs right now is figuring out to come up with yet another stupid explanation for what we've been doing. \"Could this happen again? With my boobs clenching up? Do I need more therapy?\" \n\nI look at Dave, who is staring at me with a huge smile on his face. No fucking way. I appreciate all the help he gave tonight, but there's no fucking way I'm going to keep doing this with a loose cannon like Dave. It's way too dangerous, and I need to stop this before it get out of hand.\n\nDave takes several lunging steps towards Tasha with that weird grin on his face and says, \"Standard protocol requires at least five sessions. Are you available tomorrow?\"\n\nOh shit."
    ],
    "authorname": "bobrobertson",
    "tags": [
        "lingerie",
        "bra",
        "busty",
        "tits",
        "gangbang"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-04"
}