{
    "title": "My Only Talent Ch. 30",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\n*****\n\nOh, I Can't Go For That! No Can Do!\n\nI wish I could say that I slept like a baby Sunday night after our second 'swap fest' (as Lara had dubbed them) with Suzanne at G\u00fcnter and Strelsa's apartment. I was exhausted, and I certainly slept deeply, but that meant dreams. Not happy, puffy bouncy baby boy dreams, nor early adolescent flying dreams, but rather the disconcerting almost nightmares of a young man with some issues. In my dream, I was attending a big wedding. I wasn't really too clear on whose wedding it was, but it was a very big deal. Some of the details are easy for me to remember, but other seemingly important things didn't seem so important to me at the time. \n\nIt was a big wedding, Dallas daddy's money style, but it was in a small town in the middle of the US - Kansas, Iowa, Nebraska or somewhere like that. It was to be held at a big ugly concrete event center that usually housed cattle auctions, tractor pulls, and indoor flea markets. There were lots of bridesmaids and groomsmen, and I seemed to vaguely know all of them, but I didn't really seem to know who the bride and groom were. All of the people involved were staying in a Holiday Inn Express that was between an Interstate and the state highway to the airport. It didn't have its own restaurant or room service, but there was a Hardee's on one side and a Red Lobster on the other, spanning both the low and high ends of the town's available culinary spectrum. The local shopping mall was just a few hundred feet away, of course. \n\nThe mother of the bride looked just like one of the serving ladies at the Jester dining hall, but wearing clothes from Saks Fifth Avenue rather than her normal Dickies cotton twill work pants and a burnt orange knit cotton polo shirt. Her primary concern seemed to be with how to find enough decorators and florists to completely disguise the event center and make it look like a country club dining room. Secondary issues included finding rental chairs that didn't have chewing tobacco spittle or cow manure on the legs, and a band that could imitate the Lester Lanin Orchestra that had apparently played at her own wedding, many moons ago. She would have gladly paid the freight to get them here from New York, but the orchestra was already booked for the chosen wedding date that the groom's incredibly gauche family had insisted upon in this horrid little town. \n\nShe gave me instructions, in that impatient way that women who are only interested in talking about what they want usually do, on how to get to the tuxedo rental place in the mall. I started out the side door of the Holiday Inn Express, echoing her procedural directions in my memory: start at the mall entrance nearest the hotel, right past the pretzel place, left at the Sunglass Hut, then go past the (long closed) Waldenbooks and it's right there: Jim's Formal Wear. I wandered, distracted by the people watching opportunities. It wasn't quite as good as the Texas state fair, but it was pretty amazing. I spotted a JFW logo.\n\nI approached the counter and gave my name to the gum chewing high school girl behind it. She consulted a printed list in a manila folder, and then cast a jaundiced eye at me, seeming to spend a lot of time looking at my ass. \"These pre-orders are never right! Come over here a second, I need to measure you.\" She pointed to her right. \n\nI stepped up onto a little six inch tall platform in front of an angled trio of mirrors, and she pulled a yellow cloth tape measure from her pocket and started with my chest, then my waist, and my hips. She snorted. Then she measured my inseam with particular care. \"Gonna have to charge you more. You need different sizes of pants and coat.\"\n\nShe went into the back of the store and came back with an incredibly ugly powder blue tux on a hangar, put it up on the little chrome bar sticking up, and began to cover it with plastic from a roll attached to the counter. She looked back at the manila folder. \"Looks like the bride's family is paying for it all so never mind.\"\n\nI finally felt assertive. \"I don't care who is paying, I'm not wearing that baby blue piece of shit!\"\n\nShe crossed her arms in front of her and leaned toward me. \"This is the only color for the wedding. That's what the lady wants, and that's what the lady gets!\"\n\nI turned on my heels and walked back out of the store, intent on reversing the steps that brought me here. I looked up to see that the mall was composed of three wings laid out in three different directions, and discovered that I could walk diagonally across the parking lot and directly back to the hotel, covering one fifth the distance of the route the bride's momma had specified. Simple and direct, that's the way to go! \n\nAs I approached the hotel, I heard the mother of the bride screaming at me, in a horrendous tone of voice somewhere between the earsplitting cry of one of the flying hoard of giant grackles that roamed the ESU campus and the hot smelly screech of unevenly worn brake pads: \"Robbie Roberts! You come here this instant!\"\n\nSuddenly I woke up. My alarm clock was bleating loudly, having exhausted the ten minute grace period where it just played the radio, and was now filling the room with an irritating and distorted tone that was impossible to sleep through. By design, the snooze button no longer worked after the grace period had expired, and I pulled the cord out the wall about the same time one of Kevin's flip-flops landed on my head. This semester, he wasn't keeping the same kind of early hours that I was. He didn't need to get up for another two hours.\n\n\"Jesus, Robbie! Turn that fucking thing off. Are you sick or something? I don't remember you ever sleeping through your alarm. What the hell did you do last night?\"\n\nI didn't want to talk to Kevin right now, not about Jesus and especially not about what I did last night. I now had only about 30 minutes to shower, get dressed, get something for breakfast, and make it over to Greg gym for Saskia's conditioning class. The gym was right across 21st Street, but I still had to cut corners somewhere to make it on time. The shower was not optional, owing to the presence of various dried secretions from last night's exertions. I ended up wolfing down a couple of triple zero yogurts and grabbing a chocolate milk, which I chugged down on the way over. \n\n*******\n\nDr. Asa Weltschmerz, M.D., PhD, and lots of etc. was sitting at his desk, hours before anyone else showed up in the office. His new position as med school Dean in waiting had certainly changed his lifestyle, not to mention his goals. He had to recruit lots of new faculty members, and they had to be world class: even better if they were just about to become recognized as world class right after the joined his faculty. Identifying them wasn't really the hard part - it was working all the issues to get the staffs they would need in place and get their final commitments to move. Specific lab equipment, jobs for the spouses, schools for the children, and getting the research postdocs they wanted to move to Austin while leaving the unwanted ones behind at their old school. What a mess.\n\nHe missed the relatively simple joy of treating patients and seeing them get better, especially the kids that thrived. He thought of Lara and smiled. A year ago he had nightmares about having to tell his best old college friend that his only daughter was pre-suicidal. Now instead she was asking his advice about pre-natal vitamins, human genetics programs at med schools, and the best ways to ensure she had healthy children with Robbie. For his part, Robbie Roberts was the most puzzling and amazing patient that Asa had ever had. He was a mutant neurological phenomenon that Asa couldn't talk to anyone about, much less write the papers about that he wanted to. At least Robbie was going to help him solve some of his faculty recruiting problems. Sometimes you had to use one problem to solve another, especially when there just wasn't time to solve both serially. \n\nIn fact , he could see two or three things on his 'to do list' that could be combined and potentially handled as one task, and Robbie was most likely to soon deliver the first baby step to success right to his doorstep. \n\n*******\n\nMonday morning goin' down. Saskia's workout plan nearly killed us. The good news was that I was not too sore when we started. But she promised to \"ramp things up\" and she delivered, in spades. I was pretty sure I was going to be amazingly sore tomorrow morning. Everyone in the class was at their limits by the time we finished, and drenched in sweat. She called a halt three minutes early so she could give us an update.\n\n\"Good workout, people. In your one on one meetings this week, I will do some more detailed measurements and tell you about your individual plans and set our new goals. We will program the machines to work you in the best way to build your muscles, taking into account your individual responses to the routines so far. I will offer some of you some really serious 'stretch goals' if you are game.\"\n\nHFS! My current stretch goal was just to be able to walk down to breakfast on Tuesday, Thursdays, and Saturday's without having to plan every motion. I went back up to the room, showered again, and headed for my first class. \n\nOn the way, an incoming email pinged VIP: it was the always in motion international VP of Sales: Barry T. Fermy. He was updating me on the projects we had bid on in the Middle East over Christmas break. The risk profile generated by expert insurance actuary and uber nerd numbers guy Alexis T Quandry had thoroughly nixed the Yemeni deal - he said it was 99% certain the current government would fall long before the project could be completed. Most of the other risky deals killed themselves by demanding ridiculous pricing or impossible completion dates, but the UAE shipyard construction deal was signed and I could expect a check for my commission from the all-risk policy written by Lara's dad's insurance company on Abelard Peters' huge construction project there. I would also have my choice of summer jobs as a safety inspector either in Dubai or on the larger but more prosaic project to upgrade the \"Chunnel\" between England and France, Tier Group's other big ongoing effort.\n\nI already had two other co-op job offers from the people I met at the reception. I guess those thank you notes really did differentiate me from the other guys. I had to make a decision this week about which offer to accept. I instantly narrowed it down to Dubai or England, planning to ask the USA based jobs for a rain check until next spring. From now on I would alternate one or two semesters in Austin and one semester on the job somewhere, and I wanted to work for at least three or four different employers during my co-op program to gain varied experience and make lots of contacts. I would also hopefully collect enough paychecks in the process to cover my school costs. I could make some great contacts in Dubai, I was sure, if I didn't get arrested and flogged for attempted fornication. London, however, promised the zaftig and very accommodating art historian Peggy and her new super model friends, and perhaps two overly enthusiastic teenage tennis twins. \n\nMy classes were going well, and the TA's were getting used to my follow up questions on the stuff I didn't grok from the lectures - at least they didn't cringe when I showed up for office hours. My chief source of worry right now was Suzanne's potential sexual adventures that may or may not include me, either by my choice or hers.\n\n*******\n\nI was just as sore Tuesday morning as I thought I would be, and very much aware of how strange and off balance my chest and shoulders felt. I would wait and see if I felt better this afternoon and perhaps try running then, but this morning's plan was a little homework after breakfast followed by taking Saskia to Asa's brown bag lunch seminar at the med school. I made my way gingerly down to breakfast and indulged in a heaping helping of bacon and eggs as protein sources rather than the more politically correct triple zero yogurt. It seemed as though I was even hungrier this semester than the last, and the yogurt just didn't make me feel full they way the bacon did. I added in some glazed cinnamon rolls to top off my glucose tank, hoping to learn more from snooping Saskia's Suzie signals on the way over to the Med School. \n\nBack up in the room, I brushed my teeth and polished off the prep for my next physics lab to the accompaniment of Kevin's sonorous snore and a few muffled spring bird calls (thankfully not grackles) through the (welded shut) dorm window. There was considerable 'dorm-lore' about the windows. When the dorm was first opened in the late 1960's, one tower was all-male and the other all-female, with a more secure lobby to keep roving males out of the girl's rooms. The windows opened up at the top for ventilation, which hopefully discouraged the exit of objects like water balloons or rocks. One story was that girls would try sneak guys in through the windows, so the windows were welded shut. The other was that students would leave their windows open at night and wake to find Mexican free tailed bats (like the one million plus now famous residents of the understructure of the Congress Avenue bridge) had decided to hang out on the ceiling, so the windows were welded shut to prevent potential cases of rabies. Kevin's dad told a more cynical and likely tale: several students had leapt to their death from the windows and the university had welded them shut to reduce future liability. \n\nWhen I got downstairs, Saskia was waiting on the sidewalk outside of Gregory gym, looking fit as a fiddle. She was, in point of fact, fit as the whole orchestra. Her Suzie did sizzle a little as she saw me, then she seemed to hold it in, almost like Nora did. I opted for the soft sell, kissing her gently on the cheek, and then tuning up my receiver. Saskia was in a great mood, and talkative. \n\n\"Thanks for inviting me, Robbie. It gives me a chance to get out of the depressing orbit of the evil Arturia Brown and get exposed to some real scientists for a change. How is it that you know Dr. Weltschmerz again?\"\n\n\"We met at an ESU home football game. He went to college with the father of one of my friends, and we all sat together for the rest of the season. I got to know him pretty well.\"\n\nShe snorted again. \"Not exactly the student section, eh?\"\n\nI laughed. \"Not hardly. Apparently one of the things a dean has to do is raise funds.\"\n\nShe looked thoughtful. \"I suppose schmoozing donors at ESU games is better than lying, taking over grants, and cheating the foundations the way Arturia Brown does it.\"\n\nI remembered something. \"You know, Saskia, Suzanne Pliskin says the same kinds of things about Arturia, so I know that you two do actually agree on something, but I sense a lot of tension when you mention each other. What's the deal with that?\"\n\nSaskia snorted, then she drew in a deep breath. \"I suppose I hated Suzanne for being one of Bob the Knob's favorite students: much more of a favorite than I was. She wasn't even a physiologist, or a real scientist: she was a damn bullshit squishy so called science economist. Yuck. She was also much prettier than I was, and she got a lot more attention than I did.\" Saskia's Suzie signals supplied another datum: she was attracted to Suzanne, and that made her even angrier, and hotter, too. \n\nBy now we had reached 17th Street and turned east toward the medical center. On our right was the 'super drum' AKA the Frank Erwin Center, site of ESU basketball games, rock concerts, and high school graduation ceremonies. Word was it was to be demolished soon to make way for a new complex of medical school buildings, with a new basketball and concert venue to be constructed somewhere east of IH35, continuing the massive expansion of the university footprint beyond the original 'Forty Acres' campus plan. We turned back south on Trinity - we were almost there.\n\n\"I suppose it doesn't matter anymore now that Bob the Knob defected to UCSD.\" She sighed. \"Now Suzanne doesn't have any more contact with him than I do, but I am now held by the 'wicked witch of postdoc prison' who may never allow me to publish all the work I started when Bob was here.\" \n\nWe climbed the few steps up to the building where Asa's office was. I led the way and Saskia looked around intently. Asa's forty-something receptionist ogled my butt again while we waited, but also spent some time looking at my chest. Asa emerged to greet us. \n\n\"Hi Robbie! Doctor Grandael, welcome, I am glad you could come today.\"\n\nSaskia was clearly enthralled with Asa: wide eyed and animated. \"I am excited to hear Dr. Augie!\"\n\nAsa smiled. \"If you would excuse me just a moment, I need to talk to Robbie alone briefly. Patient confidentiality, and all that.\"\n\nSaskia almost curtsied. \"Of course. I'll be right here.\"\n\nAsa took my arm and steered me into his office, shutting the door behind us. \"I want you to go down to see Dr. Dee again for a few minutes before the seminar begins. We want to follow up on your testing. Are you still hungry all the time? Anything else you can tell me about your diet that might be relevant?\"\n\n\"Yeah, doc, I am still hungry much of the day, but it may be the training I am doing with Saskia. She is trying to build up my chest and shoulders, and bringing home the concept of 'no pain no gain' in a very dramatic way.\"\n\n\"Be sure to eat more protein. Zero fat yogurt would be best.\"\n\n\"That's exactly what Saskia said. But I still crave fat and sugar. In fact, I remember something else about my diet. When I went through puberty, I developed some strange and very powerful cravings. \"\n\nHe nodded thoughtfully while I went through the inventory of foods I had such a burning need for, and described how many of them were still on my hit parade. Suddenly his face lit up, and he snapped his fingers.\n\n\"I should have realized this. That massive 'antenna array' of yours with all those extra nerve fiber cross connections probably has more myelin insulation than half a dozen normal people. When that complex of neurons first began to really expand and grow, apparently during early puberty, you would have needed all those foods in massive quantities to feed your Schwann cells. Your biochemical metabolism was grabbing cholesterol and lipids out of your bloodstream as fast as it could and using them as raw materials to build layer upon layer of insulation for your internal listening device. Even now as a young adult, just the normal cell turnover would be like that of two or three people. No wonder your circulating cholesterol is so low. Your brain is sucking it all out of the bloodstream to use for itself. The same thing is happening to glucose to power all those extra neurons. I feel funny saying this to a patient, but you should eat all the fat and sugary foods you want. Chicken and beef liver, fried chicken, avocados, butter beans, asparagus, donuts, chocolate fudge, anything you want. As long as you don't gain visible layers of fat on your torso, go for it. Have you ever tried calf brains and scrambled eggs?\"\n\nCome to think of it, Jay Kincaid's grandfather (and Millie's future grandfather in law) 'Cactus Jake' Warner made that for breakfast on the ranch when they butchered calves for veal. I had some when I was there once and I loved it. Now I knew why.\n\n\"Let's not mention this to Dr. Dee. I don't want to give him any more clues to your secret talent. Likewise Dr. Grandael - she is also curious and well educated. Speaking of that - how committed do you think she is to her current position at ESU? Could I recruit her as a postdoc for the new medical school?\"\n\nI giggled. \"Shoot, doc, she would crawl through ground glass and work for minimum wage just to get away from Arturia Brown!\" I went on to explain her situation and both Saskia and Suzanne's opinions on the apparently thoroughly execrable Dr. Brown. He began to nod his head excitedly.",
        "\"One more thing, doc. I have been having some dreams - about stuff I think about but really don't want to think about - stuff I can't really do anything about.\"\n\nHe looked interested. \"We should talk when we have time. I'll send you some possible times.\"\n\n\"I can't pay you, doc.\" \n\n\"Don't worry about it. Working with you is like reading a good book that titillates and then satisfies my scientific curiosity. I should be paying you. Plus it gives me a chance do something I enjoy but seldom get a chance to do - practice 'psychiatric dermatology'!\"\n\nI knew what psychiatry and dermatology were, but I didn't understand the combination of them. I must have looked confused, because he went on to explain.\n\n\"Lots of doctors go into dermatology. The hours are predictable, the income is usually good, and few if any patients ever get really sick or die or call you on weekends because they need emergency care.\" He smiled. \"Some psychiatrists only treat rich patients that really don't have any big problems, but still need to talk about the problems they do have to someone. They aren't really very sick, and they aren't at risk, they mostly just have 'normal' insecurities and anxiety. I call treating those kind of patients 'psychiatric dermatology'.\"\n\nI might have looked angry. I felt like he was dismissing me.\n\n\"Don't take offense, but you don't have any real problems - psychiatric or otherwise. You had a happy and relatively normal childhood, you are very healthy, and way above average in intelligence. You have been admitted to one of the best engineering schools in the world, and you have at least two hot girlfriends at your beckon call, including one that is independently wealthy and hopelessly in love with you. 99% of your fellow students would gladly trade places with you, and 99% of the people in the world would gladly trade places with any student at ESU. So let's keep things in perspective, shall we?\"\n\nMy expression must have softened, as did his tone. \"But there is still stuff that bugs any young man, and sometimes talking about it helps. I think your 'talent' makes you even more sensitive than most to other people's feelings, and perhaps to your own emotions too. Let's work on that and help you avoid some common but unnecessary neuroses. I'll send you a few times that we might talk, but I insist on face to face meetings. For now, you head down to see Dr. Dee while I give Saskia a tour and my recruiting pitch. Dr. Dee will bring you to the seminar room and we will all meet up there.\"\n\nI headed down to the second floor lab where Dr. Dee, that creepy gastroenterologist and denizen of digestion, who had once glowingly described my stool samples as 'truly fantastic', lurked. Perhaps this time they would be even better. \n\nDr. Dee felt the need to make conversation, in his own weird way. Making the smooth transition from discussing my stools in particular to human stools in general, he told me about a German anatomist in the 1800's who saw the invention of indoor plumbing and toilet paper as the beginning of the decline of western civilization. Herr Doctor X apparently believed if one ate a proper diet and got enough exercise, the consistency of one's output and the proper action of the various sphincter muscles would result in 'no external trace' of a recent bowel movement, especially if one crouched down over a hole in the ground as man was meant to do, rather than sat on a toilet. At least I had another weird sociological theory to discuss with my mother. \n\nThirty minutes later we entered one of those steep 'amphitheater' style lecture halls, full to the brim with folks in white lab coats. Asa waved and pointed to the two vacant seats next to him and Saskia, the only ones left. We got there just as the lights blipped and everyone quieted down. \n\nAsa introduced Dr. Augie, who stood up and talked like Suzanne's father: fast, nonstop, grammatically perfect and chock full of content, with no fluff. Lots of movement, extended eye contact with numerous audience members, and appropriate hand gestures. The audience was spell bound. I managed to keep up with some of it. I heard 'Schwann cells' like Asa had just mentioned and made a mental note to look them up, and glial cells like we had talked about before. I already knew what EKGs and EEGs were, but this put them in a whole new perspective for me. I also caught what a SQUID was and vowed to spring that one on Oiler and Ralph when I got back to UDP. I sort of got 'action at a distance' ('spooky' I wasn't so sure about) and an inkling of what I was doing when I listened to Suzie signals, and suddenly I realized that I knew something Dr. Augie did not. He was describing all this stuff as hypothetically and theoretically possible, and I knew it was happening, for real, in my head. \n\nI realized the brain was like my embedded systems class - lots of semi-autonomous systems busily doing their own little thing but also talking to each other. And not just on one local area network, either, but using lots of redundant and distributed electrical, chemical, and electrochemical pathways. Pathways that were tied together in such a way as to try to compensate for the vulnerabilities and failure modes of each individual mechanism. It suddenly dawned on me that the brain was the most complex yet elegant engineering design of all - mechanical, chemical, and electrical. I heard more about that Penrose guy that Ralph had mentioned, and was almost lost in the possibilities. \n\nDr. Augie closed with the concept of electromagnetic reciprocity. I knew what the words meant, at least grammatically. But his final, speculative (for him) sentence blew what was left of my very recently expanded mind. If you could receive, you should also be able transmit as well. If you could send, you should also be able to receive. I guess that's why my 'pinging' sonar drills worked, and I could send stuff to Nora. But that meant Nora should be able to send and receive too! What about the tennis twins? I knew that they could send Suzie like loud little air raid sirens. Did they have 'fractal antenna arrays' like I did? Could they receive? Could anybody? Could everybody? Even if they didn't have my antenna array? What kind of mutant adaptation was it? \n\nI was in a daze as the audience filed out, with many people pushing past, swimming upstream and down to try to talk to Dr. Augie. I just stood there waiting for the room to clear. \n\nThen the hot and dark little postdoc doc that reminded me (and my circulatory system) so of Esmeralda Estigoy and had offered to help Asa set up the MRI machine for my 'secret' test approached me. \"We meet again Mr. Roberts. Who is that woman that came in with Dr. Weltschmerz?\n\n\"That's Dr. Saskia Grandael, from ESU. She's a research physiologist.\"\n\n\"Oh, I see. Dr. Weltschmerz is paying a lot of attention to her. She looks like Ronda Rousey with black hair.\" I detected a pretty raunchy Suzie note. I think the good doctor was really feeling it for Saskia.\n\nI didn't know who Ronda Rousey was. \"Well she is certainly in good shape!\"\n\nThe good doctor smiled. \"She sure is.\"\n\nAsa waited patiently for the room to clear, and then formally introduced us to Dr. Augie, referring to Saskia as his latest postdoc recruit. She was so excited that she was barely touching the ground, but managed to ask a relevant question that seem to impress Dr. Augie. He said he would have to think about that. Saskia acted like she had just won an Oscar. \n\nWe thanked Asa again and began walking north back toward campus. Saskia prattled on like a little girl who had just had her best ever birthday party.\n\n\"So Asa said he could handle Arturia and get her to publish all my stuff this semester. I don't how he can do that, but he assured me that he can. So beginning June 1, your humble trainer will be employed full time at the med school, making twice what I am now, and doing real science with real scientists! Arturia will be in my rear view mirror permanently.\" She shivered and kissed me on the cheek. \"I don't know how I can thank you enough, Robbie.\"\n\nI stopped to whisper in her ear again. When my lips touched her earlobe, her fantasy carrier filled my Suzie receiver, and I knew exactly how she could thank me, and serve her own desires, too. \"As soon as you turn in my grade for your class, and you are no longer officially my instructor, I will blindfold you and put you on your knees, and you will serve me in any way I please. I will then be your instructor, and you will learn full well how to please me, and how to please anyone else I order you to!\"\n\nShe quivered, she stumbled, and her Suzie signal exploded like a little stick of dynamite. Neuro-electrodynamic dynamite, to be more correct. Quantum? Who knows?\n\nI continued. \"So when the semester ends on May 15th, at 5:00 PM you will be mine to use as I please, my pet. You will do everything for me that a woman can do for a man. That is only the beginning. You will soon learn what incredible things you are capable of.\" Her Suzie sounded like a hallelujah chorus. \n\nI thought of something else. \"By the way, Saskia, you have a secret admirer among the med school faculty!\"\n\nShe stopped and grabbed my arm. \"Who?\"\n\n\"I might tell you who she is later.\"\n\n\"She?\" A really funny Suzie tone grew and sputtered. \n\n\"I might invite her to our little end of semester party.\" Her Suzie growled, low and nasty. \"You would meet her then, but behind that blindfold, you wouldn't actually get to see her.\" Her Suzie went absolutely crazy. \n\nWe walked back to campus in silence, but Saskia kept an iron grip on my forearm. I stayed with her all the way back to her office in Belmont. By the time I got back to the dorm, the color was just returning to my arm. I was sure she could affect my circulation in other, more pleasurable ways in the near future. Besides a consultation with the hot female doctor, she was also going to have to kiss and make up with Suzanne, in a way she had so far only anticipated in her fantasies. I wonder how my fit and almost lovely Dr. Grandael will look on a leash.\n\n*******\n\nI went through my physics lab still thinking about Dr. Augie's talk. After class, I asked the instructor about SQUIDS. The good news was he told me how to relate them to the wave motion stuff we were covering in the syllabus. The bad news is that he also give me an additional assignment to research them further and write a paper, but maybe I could at least use what I learned to bug Oiler and Ralph. \n\nI realized I could no longer put off joining the study group for linguistics. I logged onto the electronic blackboard site and found I was already assigned to one with four other students, and it was scheduled to meet Thursday evening about an hour after my one on one meeting with Saskia ended. I would just have time to wolf down dinner before I rushed diagonally across campus to the Comm SchooI where the sessions were held. I was assigned to summarize and present 10 of the designated journal articles - many of the ones I had scanned but not read in depth. By Wednesday at noon I would have to post a PowerPoint presentation of my summary online for the other students to read before the group meeting, and I would likewise have to read all of theirs. Given my Wednesday morning schedule, that effectively meant I would have to finish it tonight. This was not going to be an easy Tuesday.\n\nI worked feverishly to complete the physics lab protocol on time and then made it to the linguistics lecture - for the first time ever it was complete with a real live professor. He was a pretty good speaker and made we wonder about most of the issues he raised. He went on and on about how important the discussion sessions were. Naturally.\n\n\"Linguistics is unique in that it must be discussed intensely among several people in order to be understood. One can glean some solo understanding of gravity and the laws of motion by throwing rocks by yourself and observing where they go and how long they take to get there. That's how most kids learn to throw a baseball. But even a rudimentary understanding of linguistics requires that you bat the shuttlecock of knowledge back and forth across the net for a while, not only seeing where it goes, but how other people react to it and communicate about it. It is the inevitable collision of observer and observed, the inherent inability to tease things out and examine them alone that makes it so challenging, yet rewarding.\"\n\nOkay, doc, I get it. I'll work hard on the discussion stuff. Then I thought about what Dr. Augie said about quantum theory and the interaction between the observer and the observed perhaps determining the outcome. Maybe linguistics was even more interesting than I thought. Was there such a thing as a 'quantum shuttlecock'? I went back to the dorm to dress out in my running stuff, sprinted through my sprints, and then returned to my reading and worked on my summary presentation with renewed vigor. My growling tummy demanded I take break for dinner, and I headed down the stairs.\n\nNora texted me an invitation to have dinner at the co-op Thursday night when she was cooking. Drat. I couldn't do that and have a one on one with Saskia and go to the linguistics discussion section too. I tried to express my sincere regret in 140 characters, and asked for a rain check. Thankfully, I got it: she would offer the spot to Suzanne for now. I worked well past midnight to complete my presentation, and fell asleep about 15 milliseconds after I pressed the 'send' key. In what seemed to me like only 15 milliseconds after that, the alarm signaled the beginning of another wonderful Wednesday. I had to figure out how to fit in reading the other student's summaries before the discussion group.\n\n*******\n\nAfter I scarfed down breakfast and made it across the street to Greg Gym, I noticed that Saskia looked like a different woman. Her hair and skin shown bright and healthy, her eyes were sparkling, and her voice sounded inviting and happy. By comparison, she had been clinically depressed before, I just didn't recognize it. The prospect of getting out from under the yoke of Arturia Brown must seem like a fairy tale happy ending. Good for her! I was certainly planning to give her my own kind of 'happy ending' when the semester was over. Her new mood did not affect her devotion to improving the fitness of her conditioning class, however, and she worked us relentlessly, perhaps even more enthusiastically and completely than before. She said this would be our last 'generic' session and hereafter each person would have a specific individualized plan to follow, complete with individual programming of the exercise machines and real time feedback to tell you (and Saskia) if you were making sufficient effort or not. Some people would lift two times and week and do aerobics and/or flexibility only once, and that might change from week to week. \n\nAfter another pounding workout, I was woolgathering a bit while my heart rate stabilized, and wishing that I had eaten a little more breakfast, when the two 'fit women' from the class approached me. One had short brown hair, the other short black hair. They were dressed in tight pastel tee shirts and contrasting dark and very tight spandex gym shorts. They looked like they had stepped right out of one of those early morning TV exercise videos that are more soft porn than training regimen. \n\n\"Hi, Robbie, I'm Rene'\" They both said with a giggle and more than one wiggle. \n\nThe black haired one continued. \"Yes we are both named Rene'.\" She laughed. \"We both work as personal trainers to help pay for graduate school, and we often use 'before and after' pictures to motivate our clients. We noticed you, and we have certainly noticed that your chest and shoulders are already looking hotter.\" All four eyes played over my chest. My nipples crinkled.\n\nShe touched me on my arm. Not an overtly sexual gesture in a normal context, but here it just reinforced my already almost painful erection. She looked down. \n\nSo did the brown haired Rene'. \"The true champions are the ones who respond well to a challenge. Keep up the good work there, Robbie.\"\n\nThe other Rene squeezed my arm a little harder and made eye contact. \"I hear you do a little personal training of your own, Master.\" She dropped her eyes demurely and smiled even wider, bowing her head. \"Maybe you could work me out sometime?\"\n\nMaybe I could, but if I thought about it right now I would never be able to walk out of here. Saskia was having an animated discussion with someone at the front of the class. I watched the two Rene's walk around the corner. My erection subsided and my heart rate slowed, and I started back up the hill to the dorm.\n\nI dropped my stuff on the bed. Kevin was in the room with two laptops linked together, frantically working on editing the video he had shot for his sci-fi parody film project. \n\n\"Orinda looks even better on camera than she does in person, Robbie.\"\n\nI doubted that, especially compared to the kind of up close and personal in person I had seen. I looked over his shoulder. She certainly was one of those people that they say the camera loves. Her face just leapt off the screen, her eyes shining. \n\n\"She does look really hot. How much more shooting to do?\"\n\n\"It depends. She had a bunch of ideas for additional scenes - flashbacks to her time at Starfleet Academy, her first cruise as a midshipman, and some fantasy dreams, all good ideas and even some hot sex scenes. But trying to fit them all in and use a body double too is impossible. I will either have to cut several of them, or have huge and obvious continuity problems that I won't be able to reshoot to fix, so I'll have to throw the scenes out.\"\n\nI supposed that was bad. \"Could you do all the new scenes with her, with no body double, and just make sure that her face doesn't show in the XXX cut of the film?\"\n\nHe looked thoughtful. \"Yeah, I could just leave the audience hoping she'll take a facial but she never actually does. But she'll have to do the other XXX stuff, just without her face on camera. Maybe it will work. I could also just have her narrate some memories with some generic B roll, if I have to.\" He already had Orinda on the phone by the time I left for the dining hall.\n\nI loaded up my plate with spaghetti and ladled on the meat sauce. No asparagus tonight - it must be out of season and expensive. Lima beans and some yellow squash casserole worked fine, though, and there was cobbler for dessert. As I finished going through the serving line, I noticed Jean Nancy Percer sitting by herself near the windows.\n\n\"Hey John Nan Say\" I said, trying to pronounce it the way she did. \"How's life treating you?\"\n\n\"Hi, Robbie. Pretty good. I'm dating a really great guy now.\"\n\nI assumed that meant he and his family had a very nice balance sheet and a promising series of future income statements. Perhaps it was the guy I saw her chatting up right before classes started. Something occurred to me. \"So, he is a prospect for a long term relationship, you mean?\"\n\nShe smiled contentedly. \"Yes, very much so, I think.\"\n\n\"So you only date guys who are, how should I say, 'real marriage material'?\"\n\n\"Yes. My grandmother taught me that if you only hang out with rich people, one of them will eventually fall for you, and you don't end up knocked up and trapped with some poor schlub.\"\n\nAt least she was honest about it. \"So let me ask you a question. Let's say you land a real whale - a Forbes 400 list kind of guy.\"\n\nShe looked very interested. \"Do go on.\"\n\n\"And you get married and everything is cool.\"\n\n\"It would be.\" She looked confident. \"My mother and grandmother would be ecstatic.\"\n\n\"And then you go to bed with him on the honeymoon and let him go all the way with you?\"\n\n\"Yes. It would be just heavy petting until we got married, and then I'll let him have me after the wedding.\" She looked happy.",
        "\"Suppose he wasn't all that satisfied with your performance in bed?\" She looked scandalized. \"Suppose he took on a mistress that could do things for him that you wouldn't or couldn't or didn't know about? And that conniving mistress was constantly whispering in his ear that he should divorce you and marry her? Was there a pre-nup?\"\n\nThat made her look really worried. \"What kind of 'things' are you talking about?\"\n\nI told her, in some detail. Her face turned to stone. \"Well, I never!\"\n\n\"That's just the point, beautiful. As they say in the custom car biz, you are built for show, but you don't really know how to go. And guys usually need the go as much or more as they want the show! How many times have you read about guys with trophy wives that they leave at home while they take their mistress to Bali? She may not look as great as the wife, but she will do things for him that the wife can't. How many times does that spell divorce?\"\n\nShe looked ready to kill someone, and I was the closest one at hand. Despite that, I knew it was time to go for the close.\n\n\"But there is a way to avoid this risk. You are a great looking woman, Jean Nancy, and looks will never be your problem.\"\n\nHer expression brightened.\n\n\"What if you were as skilled as or even better than any potential mistress in bed? What if you could do things for him so wonderful that he would never even consider another woman?\n\nI saw the wheels turning in her head, like a calculator working out the certainty of future cash flows. But then a frown crossed her face.\n\n\"But I don't want to be...\" She paused. I closed. \n\n\"How many woman learn about boats because their future husband is into sailing? Or golf, or tennis, or wine, or fishing, or photography or log cabins, or whatever?\"\n\nShe was buying that. \"Well, sure, that's just good common sense.\" A light dawned in her eyes. \"So if I learned...\"\n\n\"Exactly. And you would almost certainly discover that you liked doing it too, plus you could get your husband to do anything for you that you wanted, if you just do those 'special things' for him.\" \n\nShe saw the advantages of that. And a little Suzie carrier emerged, tentatively signaling some fantasies. Then she looked at me very suspiciously. \n\n\"And just who do you suppose could teach me these things, Robbie?\"\n\nI smiled, I hoped not too smugly. \"Why, you may have hit on the perfect solution, Jean Nancy. I don't want to get married anytime soon, and I don't think I am the kind of long term prospect that you are looking for, anyway. But I think you are hotter than a depot stove, and I would crave turning you and your beautiful body every way but loose for a semester or so, on the down-lo. Strictly confidential, and for the betterment of your future marriage and society as a whole, of course.\"\n\nShe feigned shock, but I continued.\n\n\"You would learn how to do things that any man would want you to do again and again, and be afraid of ever being apart from you. You took PSY101 last semester, right?\" She nodded.\n\n\"Well after I teach you how, any man who had spent the night with you will most likely follow you around like one of Konrad Lorenz's imprinted ducklings!\" This was one of my mom's favorite reasoning points when she expounded on her wacky anthropological theories of modern cultural rituals - that early imprinting leads to repeated, unthinking behavior that becomes a cultural norm.\n\n\"I would never tell anyone about our relationship - only that you are wonderful young lady and that I am proud to call you my friend. But I have to insist that you are complexly honest with me and yourself about all of your sexual desires, not just your financial ones.\"\n\nShe gulped, and I knew I had her. \"When would you want to...\"\n\n\"I want you right now beautiful, but practically speaking, next fall semester would be earliest that would work.\"\n\nShe gulped again. \"Let me think about it?\"\n\n\"I'll be thinking about you, Jean Nancy.\" I certainly would. I would be thinking about the lovely noises she would make the first time I made her come, and the look on those lovely dark blue eyes when I came in her mouth.\n\n*******\n\nI heard my phone beep in an email while I was in the shower. It was from Susan, the new head honcho of the Booties - Beta Omicron Theta sorority. She was taking me up on my offer made during Spring Rush. Her email virtually quoted me, saying she was ready to \"open herself up to me in private, and tell me the absolute truth about her desires, so that I could give her even more insight and advice about her desires than I gave to those women at the 'addicted to Austin' party.\" \n\nDamn. I did offer that, and in front of a couple of dozen of her BOT sisters, but I didn't think she would actually take me up on it. Her proposed meeting time is Sunday for early lunch, a few hours before going to Strelsa and G\u00fcnter's place. At least it would be a distraction so I didn't have to obsess about watching G\u00fcnter do Suzanne. I tell her yes, but just the two of us, in complete isolation and privacy. She agrees, and suggests we meet Sunday at her families 'lake house' which interestingly is not too far from the PIG lake house. \n\n*******\n\nThursday continued my hectic pace of this week - I barely fit in my running and my minimum study schedule. If I didn't do the proper prep for physics lab, and thus did not get the required data in the allotted lab period, I would have to sign up for a makeup lab period - taking away even more time and sleep. I was pushing the limits of my school and dating separation plan - I had no time whatsoever for weekday night dates like I had squeezed in last semester, and I was considering having to limit dating activities to weekend nights only and studying during the day on Saturday and Sunday. What sacrilege! \n\nThe first time it seemed like I had a moment to even sit down was when I finally arrived at the Comm School for the evening linguistics discussion group. It was held in a classroom sized space with an entire long side wall of mirrors, and a table with 12 seats. There were screens and projectors on both of the short front and rear walls, and a very plush carpet. Kevin, my roommate, the RTF maven, had explained to me that these rooms were often used for 'focus groups' and the mirror wall was a one way portal for observers in the next room to watch the group reactions. It seemed to me that it wouldn't be worth anyone's time to observe our little discussion group. \n\nI surveyed the room and observed the arrivals. First was a dark and petite Asian woman, who looked like a candidate for the Students Older than Average ('SOTA') campus organization, which had the reputation among frat boys as a great way to meet hot older women. Oiler told me it was usually full of guys who had worked for a few years before returning to ESU to finish an undergrad degree or get a graduate degree, and women were often in short supply. Whatever her situation, this woman was good looking enough to be slightly intimidating, dressed very formally, and sending Suzie for nobody. She had printouts of all the articles she had been assigned, with post it notes sticking out all around the edges. Her name sounded something like 'Men Ho'. She took a seat at the foot of the table and folded her arms in front of her chest, appearing to be waiting impatiently for the rest of the crowd to arrive. She glanced at me dismissively and then looked away.\n\nThe next to arrive was someone I recognized, thanks to a recent article in the Daily Texan featuring the 'early spring enrollee' football recruits. They called him 'Husky' but his full name was Russel L. Varna. He was the latest in a long line of Varnas that had attended ESU, beginning with his diminutive great grandfather 'Swede' Varna, who played football for ESU in the era of leather helmets with no face guards and was considered one of the toughest and hardest hitting players ever, despite his small stature. He went on to become a very successful high school football coach in west Texas, and began sending a large crop of his high school players and his descendants to ESU, where most of them played sports and became coaches. \n\nHusky Varna was the largest and meanest Varna so far, earning his nickname as an aggressive linebacker who cut through the opposing team's blockers like a chainsaw to search for and destroy the ball carrier. He was not pursuing a career as a high school football coach, however, as he planned to be a college professor and was offered several purely academic Ivy League scholarships but chose to attend ESU and play football. This was much to the chagrin of his mother, a California transplant who met his coaching father at a convention for school principals in Dallas. She wanted her son to go to her beloved Stanford University - thus his middle name of Leland. He was a Linguistics major, the first I had ever actually met. Much to the chagrin of the Stanford football coaches, he and his mother had reached a compromise, and he planned to attend Stanford for graduate school after he graduated from ESU. Meanwhile he was a very real prospect to be a starter on the ESU football team next fall as a true freshman, and was thus on the doorstep of ESU fame.\n\nOur fourth and final group member came in a few minutes late, dancing and singing along with her iPod, popping her bubblegum, and smelling like expensive perfume. I instantly hated her, but I couldn't take my eyes off of her. She had brown hair and matching brown eyes full of sparkles and intelligence, and was about 5' 10\" tall, with a nice figure and a baby face. Her skin was flawless - with an alabaster tone like a healthy baby's butt, unblemished and perfect, and her cheeks were currently flushed and red, apparently from rushing up the stairs, and arriving late even then. There was a lot of other skin exposed, too. A tight little sleeveless shirt with a bare midriff and a short skirt, despite the fact that it was still cool in Austin at the end of January. The skin at her waist was as perfect as the musculature underneath it, too, damn her. Her name proved to be Lynn Da Britain. Really. Not 'Duh' like 'ya think' or 'Daah' like an Irishman's daddy, but 'Dah' like 'dit dah' or the 'Da Bears' - the professional football team in Chicago - where she was from. Strictly speaking, she was from the suburb of Winnetka, Illinois.\n\nShe took one look at Husky Varna and launched a strong and raspy Suzie signal that said 'fuck me now, and how.' What a stupid slut. She then glanced at me and sent a little restrained Suzie that said 'maybe later if nothing better turns up'. Why did that piss me off so much? What did I care? I would jump right over two of her to get to Lara or Suzanne. But then why did she fascinate me so?\n\nWe began with the presentations of the articles we had worked on. Lynn Da went first. Some perverse part of me was hoping she would sound stupid - obviously unprepared and trying to fake it with some twingy twangy awful Chicago gangster accent and poor grammar. Why did I want to hate her so? Why could I barely stop myself from reaching out to touch her perfect skin? \n\nShe had certainly read the articles. Carefully. She summarized them succinctly in a flat and very faint Midwestern US accent that was as smooth as any female news anchor I had ever heard. Perfect grammar. No \"uh\", no \"duh\", and no if's and's or but's. She sat down, smugly, looked right at me, and smiled. Bitch!\n\nHusky Varna was next. He was obviously very bright, and had a strange subtle accent that was part west Texas twang and at the same time part lilting Swedish. He had read his articles, too, and he understood them. Not only what they said, but what they didn't say. The questions they answered, and the even greater number of issues they raised. I had to force myself not to respect him. \n\nMen Ho went through her stuff. She looked cool, but her presentation was just adequate. Her intellect was not going to intimidate anybody, even if her looks might. \n\nThen I went through my stuff, using my standard study habit of paraphrasing the stuff I understood, and pointing out the stuff I didn't get, like I was talking to the TA and trying to get some help. \n\nHusky Varna snorted. \"Nobody gets that. Those are some of the biggest unresolved controversies in the literature - the linguistic equivalent of 'is light a particle or a wave?' If you can come up with definitive answers, they'll give you an honorary PhD on the spot!\"\n\nWe spent most of the rest of the hour opining on just these issues, and answering the rest of the 'discussion questions' the professor had posed for this session. With about ten minutes left, Husky put up an email from the professor that detailed the assignments for the next discussion group. I suddenly found myself paired with Lynn Da, and assigned to work with her to prepare a 5 to 8 minute debate segment for the next group meeting, where we took opposite positions on a point raised in a classic paper and argued our positions in front of the group. Some of them would be chosen to be presented to the entire class.\n\nAs we walked out, Lynn Da fell into step with me. \"Robbie? Okay, I am pretty busy on the weekends. Could we get together on Monday or Tuesday to work up our little debate? Okay?\"\n\nI'll bet you are busy on the weekends spreading your legs, you cheeky slut! \"MWF are my really busy days, but I could do Monday evening after 6, or Tuesday before 10 or after 3. What works best for you?\"\n\nShe smiled. \"Tuesday afternoon, Okay? I live just across the street in Kinsolving. Where are you?\"\n\n\"Jester, but I'll be up near ACES that afternoon. How about we meet in the lobby of your dorm at 3?\"\n\n\"Okay. Take care, Okay?\"\n\nShe held up her phone and we swapped contact info via Bluetooth. Okay? She turned and stepped off toward Kinsolving dorm, putting her earbuds back in. Her walk was hypnotic, and I couldn't help staring at her until she went up the steps into the building. I even found myself unconsciously shifting my weight side to side in time with her hips. Damn her! Okay?\n\n*******\n\nI got back to my dorm and spent about two hours getting ready for Friday math class. I was very suspicious that it was the perfect time for a pop quiz. I got out the Tupperware container of brownies my grandmother had sent me for some glucose fortification and went thought the UDP test files looking for questions that obviously came from the material in the current chapter, and working up my answers to them. Even though we had been assigned only the 'even' problems in the text, I worked through the 'odd' numbered ones, just in case the instructor was that obvious. I even got out the 'secret weapon' that Oiler had loaned me - and old 'Schaum's Outline' paperback that covered the material from our course. Many of the problems were constructed to have answers like zero or one half or one, to take any detailed arithmetical computation out of the process of solving them correctly, and he said lots of instructor's cribbed questions from these old books. I worked the problem sets that had solutions given so I could cross check myself. \n\nI made it through everything and found myself yawning. Kevin was still at ZZZ. I brushed my teeth and crawled under covers, setting my alarm a little early to make sure I didn't sleep through it again. \n\nSuddenly I was once again at the PIG lake house. It was a huge party with tons of people. I was sitting on the bank of the lake on a towel by myself. It was hot and I was sweating. Suddenly a big ski boat approached, making lots of noise like it was pulling quite a load. It was. There was a pyramid of skiers behind the boat. The bottom row was a group of Suzanne's muscular soccer girls. On the shoulders of the soccer girls were Mrs. Douglass, Janet, Melanie, Peggy, Elizabeth, Millie and Chrissy. On their shoulders rode Lara, Suzanne, and Nora. All three of the top row were in constant motion, trying to climb up on the shoulders of the other two, to be the top rider on the pyramid. I suddenly realized nobody was watching the water in front of them, and they were about to hit a huge dead tree sticking up just out of the water. \n\nI woke up. It was 2:30 AM. I hoped I could get back to sleep.\n\n*******\n\nI woke up just before the alarm went off. Funny how that happens. On the way down to breakfast, I got a text from Candy Matson. Her Dad's best friend had been killed in a light plane crash, and she was going to Oklahoma City for the funeral, so no slave training sessions for her this Friday and Saturday. She had copied Suzanne and Lara. Both responded with sympathy, then promised to punish her smartly later. Lara then invited Suzanne and me over for Friday night leftovers, popcorn, and Netflix, mentioning that she would set up her massage table, too. She was surely the hostess with the mostest.\n\nI got to the conditioning class at Belmont Hall right on time. Saskia looked even better than Wednesday, if that was possible, and her new training setup blew me away. Each machine recognized our Fitbit and who we were, and had all our recorded information about our history of doing each particular exercise. Weight settings, resistance settings, damping, force exerted, reps done; it was all there. They also set the bar just a little higher for this session than any previous session. I knew the little ear sensors were sending heart rate and pulse ox to the computer programming the machines. Who knows what else Saskia may have devised? It was a little creepy. I started on my first set of bench presses, and about number six I realized I was going to have to really push to make it to the tenth rep. \n\nAs I finished the eighth rep, Saskia's voice whispered in my left ear \"Two more Robbie! Push it!\" I made it through number nine. \"I just love a strong finisher.\" Number ten took everything I had. Right before I reached the top, Saskia's voice said \"Just a little harder, Baby, right there! Do it!\"\n\nI finished with a grunt. Saskia grunted with me! \"That was so good, Robbie! Two more sets, Baby.\" \n\nI saw the machine countdown my resting period on the screen, as my heart rate dropped a fraction, and I did my best to move air to get the oxygen I needed. Somewhere from high school biology a little diagram reappeared in my head: AMP=>ADP=>ATP and back again in a circle. The countdown reached zero, and I pushed it.\n\nThe next station was preacher curls. The last set I thought my elbows were popping like knuckles. Then we rotated to the next station. What followed was 50 minutes of maximum exertion, with Saskia speaking suggestively in my ear to me, especially during the last set of each exercise, and her little robotic torture assistants making sure that each exercise pushed me to my limits. I have no idea what her voice was saying to the other class members, but it was as if she was talking directly to my member, and despite all the other exertion, it was responding. Just another demand on my already overtaxed circulatory system. \n\nThere was a pop quiz in math. Most of the class groaned, but I just wanted to see the questions. Before he revealed them, the prof said we could substitute our highest pop quiz score for our lowest exam score, if we chose. I might. When the questions went up on the screen, I recognized three out of the four as being lifted verbatim from the Schaum's outline. Hoo Ha. Physics went well, and in embedded systems I managed to get the TA to declare my car as my semester practical. I was on a roll. \n\nI started dinner with a roll, too. Fried chicken, green beans, collard greens, and 'nanner puddin' for dessert. Shucks y'all. Polished off my afternoon classes, recopied and improved my notes and then dutifully put my books away in the bookshelf (that I had grabbed so helpfully several times while boffing Suzanne) where they could sleep unattended until Monday. I needed a little break. I had to lay in a little 'pre-dinner' before heading over to Lara's apartment, just in case the leftovers didn't get the job done for me. I had about an hour and half for a nap.",
        "*******\n\nDwight stayed up all night doing some emergency coding, or at least that's what everyone at his new California assignment for the agency thought he was doing. They had discovered a bit of a problem with response time in certain map scenarios, and the problem was obviously the sorting algorithm that they were using. It only took Dwight about ten minutes to install an improved version that the agency often used, pre-sorting the choices and 'pruning the tree' before sorting to find the final path. The rest of an hour to tune it up and make sure it met specs, like the old version didn't. At the project review meeting the next morning, Dwight would step up with a rumpled shirt and sleepy eyes, report that the problem was solved, and get noticed by some people he needed to meet and check out.\n\nWith that done, now he had the rest of the night to observe who else was pulling an all-nighter - and what folks around here normally did on 'third shift'. He started with the break room. It was empty. There was some left over birthday cake from someone's party this afternoon, and some very badly burned coffee. Dwight didn't drink coffee, but he felt duty bound to pour all that old crap out and make a new batch. It was interesting that they didn't have one of those 'circulate the water through the aluminum envelope' machines that were so popular now. This was a real live coffee maker - 36 cups worth. He loaded it up and started the brewing cycle.\n\nNext stop - loading dock. You could learn a lot by observing loading docks and parking lots. At MIT, he saw a cool old paper about a guy who could predict stock prices of Silicon Valley companies just by tracking to density of cars in the parking lots. It was done back in the early 80's. Dwight had built an app that called some earthsat sites and automated 90% of the process. He found that these days it worked better for hardware makers than software or SAAS companies, even for the ones with plants in Malaysia or China. But at his next agency polygraph, he had to explain in great detail that all the stock trading profits were from the app, not insider trading.\n\nThere were the normal janitors emptying the garbage kind of things happening, and one guy taking fixed asset physical inventory with a scanner. There was no guard around though, even though the doors were open and garbage was being offloaded. Not good. He walked up the hall and found the guard chatting up a female janitor, both of them leaning against the wall. He went up a level and passed by the customer service area - two FSE's on duty for the customers in Asia where it was already tomorrow. One had his feet up on the desk and was reading a lurid and colorful T&A magazine. In these days when every broadband stream in the workplace was usually monitored and or interrupted if not white listed, the old jugs mags and porno books were becoming collector's items.\n\nUp another level to 'mahogany row' - the C level offices. It was still often called that, even though paneling was now usually bamboo - much more PC. The VP Sales Asia was talking on a speaker phone very loudly in very bad Mandarin, and furthermore badly misrepresenting the product. If he made the sale some poor FSE would end up telling the customer the truth and catching all the shit later. That might be the plan. His door was open and he was clearly getting frustrated about his inability to communicate. The customer was in Shanghai, but this guy was speaking in a very bad nasal northern dialect. Dwight decided to keep his mouth shut and keep his language skills secret for now.\n\nDwight went back to his office and logged into the packet sniffers he had planted, reviewing the file transfers, email traffic and VOIP calls. Something was rotten in Denmark. Someone was sending out a really big file, to an ipv6 address that was obviously, at least to Dwight, spoofed. Who and what could he or should he tell about this without someone tumbling to his unauthorized sniffing of the network? He finally decided to change one bit in the file, which would show up as an edit made by the spoofed external user just at the time the transfer had started a few minutes ago. That bit marked it for being backed up singly, rather than with its normal cohort of files. Would that be enough for the sysop to spot it and tumble to the unauthorized transfer?\n\nAs he emerged from his office, he turned down the hall to see which sysops might be on duty. But as he passed by the CEO's office, he was astounded to find the door open and the sound of female laughter and a truly off key male singing voice. There were two 'young ladies' who might be 18 but surely were not yet 21 draped across the couch while the CEO sat up on his desk and sang, if you could call it that. This was not good.\n\n*******\n\nI was back at the Holiday Inn Express. The bride's mother was still hollering and chasing me, and asking to see my checking account balance. I ran over to the exhibition center, where a crew was putting up wires covered with cheap plastic flowers to try to hide the concrete walls. There was a rehearsal going on - the bride looked just like Lynn Da Britain, except 50 pounds heavier and smoking a cigarette. I ran up toward the front of the room, yelling \"Stop, stop.\" Kevin was shaking me awake. \"Robbie, wake up. Aren't you supposed to go to Lara's for supper?\"\n\nI showered hurriedly and put on a nice shirt and some slacks. The shirt was a little tight across the chest. It was a little cool out so I put on my English blazer, without the lining, and sauntered over to Lara's. I was about 20 minutes late arriving. Suzanne opened the door and kissed me - Lara was in the kitchen. When we got to the kitchen, we all three kissed each other.\n\nLeftovers Lara style turned out to be 'planned overs' in the form of a previously made up but uncooked chicken casserole just about ready to come out of the oven, a fruit salad, and freshly cooked gruyere potatoes and green beans almandine. Sure beats the hell out of two day old bologna sandwiches. The smell of good food acted directly on my brain and made me feel much less anxious. Lara puttered at the stove while Suzanne and I finished setting the table.\n\nSuzanne, as usual, began the conversation. \"This smells wonderful, Lara. I am getting two great dinners in a row. Nora's cooking at the co-op last night was unreal. Dinner for 24, and she didn't even break a sweat, and it was four stars all the way. If Wall Street doesn't work out she can always open a restaurant or do a cooking show. The people over there at the housing co-op already worship her meals, and I can understand why!\" \n\nLara piped up. \"I am surprised there were open seats for guests on one of her nights to cook.\"\n\n\"Only because two people had to be out of town.\"\n\nLara beckoned to me. \"Help me carry stuff to the dinner table, Robbie?\" That was largely symbolic, given that the kitchen counter was 4 feet from the table, but I was glad to serve. The food was great, especially compared to the dorm, which was not that bad, in its own way. \n\nLara talked about her new schedule, revealing her changed goal of getting in to law school. I had heard law school enrollments were way down in the last few years. I thought she needn't worry - anyone who could pay tuition could probably get in. But she made it clear she did not want just any law school. Georgetown, Yale, Harvard, and Stanford were her top list. UT Austin was her backup school, and SMU was her final backstop. \n\n\"Why the change, Lara?\" Suzanne looked curious.\n\nLara laughed. \"I can't stay an undetermined major forever. Seriously, I wanted to do something that would be compatible with my non-career plans. I want to have a family, and I figure if I have a law license I can find something to do whatever the family situation.\"\n\nSuzanne asked \"What would be your preferred family situation, Lara?\"\n\n\"Four kids or more, but I can't have them by myself.\"\n\nI had been in another of a series of sophomoric discussions at UDP about just this subject, so I offered up, \"Actually, these days you might be able to!\"\n\nLara looked at me funny. \"I have been studying the issue. There are at least three ways I could have a baby as a single woman that would allow me to contribute at least half of the child's genome, and a few more that offer me a contribution of somewhat less than half but reduce the probability of certain genetic anomalies. But I don't want to raise kids by myself. I want them to have a dad and a mom in the home - I am convinced that is the best situation for a child.\"\n\nSuzanne took up the conversation, with a little challenge in her tone. \"That's very traditional of you, Lara.\"\n\n\"I don't want to say that's the only way to do it, or anything like that. That's just my opinion and how I would have to do it. I would also home school, but that's not for everyone, either.\"\n\nSuzanne was getting interested. \"Robbie, would you be a sperm donor for a single woman that wanted to have a child?\"\n\nThis had been the crux of the UDP discussion - mainly that you could later get tapped for child support even if the 'mom' originally did not want you involved other than as just a donor. In my case, it would be totally irresponsible to let a kid who was likely to have inherited my only talent grow up without some help from his Dad. That wasn't the only reason, either.\n\n\"No. I think I would have been really screwed up without my Dad being there for me while I was growing up, and I think it's even worse for little girls. 'Daddy Issues' are a very real danger for a young girl.\" I also remembered Ralph going on and on about 'extra-chromosomal inheritance' and some of the as yet unexplained differences in babies that resulted from artificial or modified fertilization. \"If I was going to be the father, it would be through normal intercourse and the mom and I would both have to be there for the kid until it was fully grown. That's just my opinion. Someone else can do it their way.\"\n\nLara smiled, then frowned. \"It's a brave new world in many ways, but sometimes I get surprised. I spoke to an old Hockaday chum of mine, now a very out and outspoken lesbian. She was shocked to learn that old 'Super Straight' Lara had been with a woman. But then she got really angry when I told her that meant I was bi! She said people are either gay or straight or are kidding themselves and that bisexuals were the biggest fraud of all, and then walked away in a huff.\" \n\nThat reminded me of another UDP sophomoric discussion about gender roles. That seemed to be the only kind of discussion going on about that subject. Ralph was shocked to discover that one of his early childhood role models from television reruns, Doogie Houser, was played by a gay actor. Ralph could certainly identify with the perfect SAT score and skipping lots of grades in school, but he was flummoxed by the gay thing. Especially after he read something in a gossip rag at the dentist's office. He had thought he understood what gay guys did in terms of sex acts, but he thought they all just did the same things to each other, sort of back and forth. The article quoted his once favorite actor as saying he was married to another man, and that he was the 'wife' in the relationship and the other guy was the 'husband'. This lead to an extended, embarrassing, and very sophomoric discussion of 'tops' and 'bottoms' and then 'power bottoms', to which an exasperated Ralph had said \"How do they keep all those roles in mind? Do they wear colored tags to the gay bars? Is there a secret handshake? That's even more trouble than trying to understand women!\"\n\nLara brought me back to the present conversation. \"Well, child bearing is all futures and hypotheticals for now. Suzanne, why don't you be the first on the massage table tonight?\"\n\nSuzanne giggled \"I thought you'd never ask!\" and walked over to the massage table, skinned out of her jeans and top, which was all she had on, and did one smooth 'un-dip' with her arms up onto the table. Her body was for all practical purposes perfect, and often inspired me to try some almost impractical things, just for fun. She turned over onto her tummy, and I began massaging her feet while Lara did her hands. Lara offered me some of her special massage oil, and we both worked toward the center from the edges. The massage table was extra-long, and Suzanne was not, so there was plenty of room to stretch her arms out towards one end of the table, and her legs toward the other. Her chin and nose were facing down into the little 'chin and nose porthole' in the cushion that faced down to allow her to breathe. Suzanne made little sighing noises, and became more and more relaxed. It was amazing how peaceful it was for me to just concentrate on pleasing her. \n\nIt occurred to me that when I just ignored her Suzie signals and just let myself go and do what I wanted, Suzanne seemed to get off the best. Would that work in reverse? If I just let Suzanne do what she wanted, would that get me off the best? That's all the time I had to speculate, as when my hands reached the back of her thighs and Lara's reached her deep back muscles, Suzanne's little Suzie was loudly whistling a happy tune. Suddenly Lara and I both detected the telltale aroma of the incredible Suzanne Snatch, AKA the Preternaturally Perfect Pliskin Pussy. \n\nLara did one of her cartoon character imitations: \"Ruh Roh! Perhaps you better turn over.\"\n\nSuzanne did turn over, slowly and languidly, smiling smugly and making eye contact with each of us as she did so. She glistened, literally. I realize that I am grateful just to be in the room with this woman. We repeated the routine - start at the extremities and move toward the center. Lara, the massage table owner, had set the rules: the first two orgasms of the evening had to be manual - massage induced - rather than actual sex acts. As a result of this rule I had previously discovered that I really did not like hand jobs -even when given by such spectacular women as these. Lara loved doing it too me, though. She liked to see 'undeniable visual evidence' that she had 'got the job done' as she put it. But I also discovered that using my hands to get these two off completely fascinated me. When I was a kid, I was spellbound the first time I used a potter's wheel, seeing that just minor movements of my fingers could result in such dramatic changes in the clay. \n\nBut this was even better. Minor movements of my fingers produced some really large and artistic reactions in this new and wonderful medium of spectacular female flesh. Soon my fingers were making a 'vee' alternatively squeezing and spreading Suzanne's outer pussy lips, while Lara's perfectly manicured fingers and red nails reached inside and brought her to a spectacular sneezing orgasm. \n\nThe players changed places, and Lara soon succumbed to same treatment, with the same result, sans sneezes.\n\nAs I rotated onto my place up on the table, they bade me to start on my back, and I saluted them without using my hands. When I was approaching the point of no return, they had me turn over and around. This placed my legs toward the short side of the table, and the rest of my body on the long side, and there was only one place for my dick to go - down into the 'chin rest' porthole. This was the only yoga position I actually liked. Lara called it the 'downward dangling dong'. Since the first two orgasms having been attained through manual means, Lara was now 'legal' and she swung under the table with her red fingernails being the only thing showing on either side of the top of massage table. She began to slowly lick and suck me while Suzanne bent my legs at the knees and massaged the back of my thighs. \n\nI suddenly remembered having a crush on a gorgeous diver on the 'elite swim' private swim team in Highland Park. She was a senior when I started high school, and a highly recruited world class diver. She was short coupled like Suzanne, but her core muscles were thick and powerful, able to twist her body rapidly and in any way she wanted between the time she left the diving board and when she hit the water. She had a very stereotyped exercise routine that she performed poolside so everyone could see, consisting of sit-ups, push-ups, etc. plus a spectacular finish. She suspended herself under the diving board with her feet pressing against the underside, and put her hands on either side of the diving board and did 'upside down push ups', counting each one off as her nose (and simultaneously her hot, pointy little breasts) touched the bottom of the diving board. \n\nI am sure that all this was for somebody's benefit other than mine, and I'm not even sure she even knew I existed, but I never missed an opportunity to watch the spectacle. The fantasies I had then suddenly connected with the reality of what was happening to me now, but Lara was no fantasy, and when I came she sucked me dry in a manner decidedly superior to my pubescent fantasies, and her fingers straining to pull herself up against the underside of the table were more exciting than my memories of the diver. Suzanne, standing at the end of the table, put her thumbs up against the insertion of my gluts into my pelvis and kneaded and pressed like she was forcing the final measure of toothpaste out the bottom of the tube. I never knew dental hygiene could be so fulfilling.\n\nWe all three did some heavy breathing and stretching, and then Suzanne said \"Come on, Lara, lets hide in the bed. He'll never find us there!\" They scampered off toward the bedroom, all of a dozen feet away, giggling crazily. I stretched, waiting long enough to make them wonder if I was actually going to follow them or not. They needn't have worried.\n\nEven if I hadn't known exactly where they were going, I could have found them easily by following the slurping noises. They were in fact under the covers, and locked in a slowly moving 69. I pulled the covers back slowly, and as they were revealed, they got even busier. I just stopped and beheld the beautiful sight. Then Suzanne, who was really getting into going down on Lara, dropped to the foot of the bed and propped Lara's butt up on a small pillow, and then used the two big square pillows that matched the bedspread and normally covered the head of the bed placed under the knees to prop Lara's legs wide apart. She then dove into Lara's crotch like a madwoman, and Lara began growling. I had never seen Suzanne so hungry for pussy. \n\nI didn't take long to contemplate that, though, because my inner teenage boy was fascinated by Lara's amazing chest, now flushed red with excitement, rising and falling with her deep breaths, and adorned with some very large and very erect nipples. The valley between her big breasts now seemed like the perfect place for my dick. It was. Even better than I thought. Happily, Lara looked up and smiled, then looked down and my dick, and smiled again. That's my girl!\n\nI grabbed her teats roughly and wrapped them around my cock, and then fucked the little valley, squeezing her nipples hard between my little finger and third finger on each hand. Happy Valley. Heaven Skin. She had a big Suzanne induced orgasm and opened her mouth to gasp at just the right time. Suddenly I was totally relaxed, all over.\n\nBut Suzanne was ready for round two, and pretty aggressive about letting us know what she wanted. She pulled one of us to each breast, and we were glad to accommodate her. But it wasn't exactly Madonna and Child time, either. Soon as was on my back, erect, and Suzanne was sliding herself on top of me. Perfect fit. Lara faced Suzanne and sat on my face, and I lost myself in pleasing her, tuning her Suzie up like a piano tuner with a digital meter. Lara and Suzanne were kissing each other passionately, and looked a lot better than any of those 'I kissed a girl' videos that my roommate favored so. My view from underneath them was not ideal from a cinematographic point of view, but it was totally hot.",
        "For some reason, I remembered one of our last times with Millie - a frenzied foursome that focused on a submissive Suzanne right after she completed one of her long training runs. After some serious flogging while Suzanne was strapped to the trapeze, Millie and Lara both donned dildos and penetrated her pussy and her ass, while I fucked her mouth with reckless abandon. I heard some new and very raucous Suzie notes from Suzanne that night, before a series of sneezing orgasms carried her away on an endorphin cloud. I realized that was probably the scene she was thinking about recreating with G\u00fcnter, me and another player yet to be named, but with three authentic, real live dicks instead of the plastic peni. \n\nIf I was to 'have her any way she will have me' like I promised, and if I wanted to please her the best I could, shouldn't I be on board with her plan? And after all, wasn't all this just part of her delayed, but now seemingly resurrected, plan to have some 'wild college days' before she finished her PhD. Did I want to be with Suzanne long term? Yes. If she had done her wild college days before I ever met her, would I still want to settle down with her? Yes. Even if she told me all about it? Yes, but it would probably be better if I didn't hear it. Could I stand watching G\u00fcnter penetrate my best girl? Should I go forward with the 'swapfest' planned for this Sunday night? Hadn't I already promised to? Man is not a rational animal, man is a rationalizing animal.\n\nWe all three settled down into Lara's big bed in one big cuddle fest. I lay on my back with one girl on either side. I knew from disappointing personal experience not get my hopes up, nipple-wise. But suddenly both girls were toying with my happy nipples, seemingly fascinated. They caressed my chest, rubbing from my belly button up to my shoulders and back. Nirvana with a side order of perfection.\n\n\"Robbie, I know you have just started working out, but your chest suddenly looks a lot bigger!' Lara breathed.\n\n\"Look at those pecs! I like them.\" Echoed Suzanne. \n\nThe both swirled their fingers around my nipples and kissed the side of my chest. A double girlfriend hall of fame moment.\n\n\"I just can't keep from wanting to touch your chest.\"\n\n\"Me too!\"\n\nHoo Hah! I need more voltage. Raise the kites, Igor! I mean Saskia. You can crank up those machines to the max for me. Sock it to me. I'll endure anything you devise to get more of this action! I fell asleep on my own little Cloud Nine.\n\n*******\n\nDwight was stunned to inaction, certainly not the norm for him. He could not believe what he was watching the CEO do, and on site in his own office, to boot. Just a 30 second video of this song shot with an iPhone and sent to Gawker or Deal Breaker could kill the company's next funding round deader than the dodo. If he did this shit with his office door open, who knows what might be happening behind closed doors. This CEO was ripe for manipulation, and his exploding ego was such that he could not see that these two 'very young ladies' could only be around him for not so good reasons. \n\nBut what could Dwight do about it? Whatever he did, Roger Sherman, his nitwit supervisor, would second and third guess him to death. He knew this newly appointed CEO had only been a lab rat scientist before, and with the new position, a big salary, and some female attention for the first time in his forty nine years on earth, he was feeling his oats. But the oats he was chewing were laced with corporate equivalent of the ergot fungus, and sure to give him a hell of a ride and an even worse hangover. Not to mention screw up Dwight's career path. This might be his last big field assignment if they made him quit field work to marry Carmencita, because he would give it up for her in a heartbeat if he had to. His plan had been to go out with a bang - a big success on this final field gig, and then get kicked upstairs to management on a decent trajectory. Could he still pull that off? \n\n*******\n\nI drifted off to sleep and suddenly I was ten years old again, and taking another long car trip with my parents in the 'Robertsmobile'. Because my father rode airplanes around for business at least three days of most weeks, when he took some vacation time, usually in the summer, he insisted on driving wherever we went. Even though he had literally a million frequent flyer miles on several different airlines, we drove. And just as he had a specialized small 'airport car' to leave parked at the airport, he also had a big honkin' full sized white Chevy Suburban for our summer vacation trips. With just the four of us, there should have been plenty of room for luggage and other stuff.\n\nBut we needed all the room we could get. My mother had never heard of the concept of traveling light. Her rule was two pieces of luggage for an overnight trip, plus at least one piece for each additional day. For a one week trip, she often brought along 8 or more bags. Or I should say she packed 8 or more bags. My father and I brought them all along, in and out of the Suburban at every overnight stop, like serfs and footmen. He stopped planning trips longer than about 10 days, because he stubbornly refused to tow a trailer behind the Suburban just for her luggage. \n\nSo we drove all over the United States before I even started high school, seeing every tourist trap in the lower 48. My folks even kept a log book, checking off each state as we reached it. We then drove to Alaska on the Alaska Highway. But even my dad couldn't drive to Hawaii. \n\nBut he did tell a joke about it, every summer, usually just after we left our driveway. \"A fellow is swimming on the beach in California when he notices something in the sand, and when it digs it up it's an old urn. He rubs it to clean the sand off and a Genie pops out. The Genie says you may have one wish, for anything you want.\"\n\nUsually he would pause for effect here. \n\n\"The guy thinks for a moment and says that he hates to fly but always wanted to visit Hawaii, and asks the genie to build a bridge all the way to Hawaii so he can drive there instead of flying.\"\n\n\"The Genie gets a pained expression and goes on and on about tides, erosion, coral reefs and endangered species, and expansion joints and earthquakes, and disrupting sailing lanes and fish and bird migrations, and Pacific typhoons, and finally says it is just too hard to do and asks him to please pick another wish.\"\n\n\"The guy thinks a moment and says that if he can't have that bridge, then he wants to truly understand women.\" \n\nThe Genie gets another very pained expression and says \"One lane, or two?\" \n\nI guess didn't really understand the significance of that joke back then.\n\nMy mother would sit in the front passenger seat and alternatively knit or read. My dad wanted to listen to the radio. Continuous news and talk stations, working the radio dial to keep a station in range as we moved across the countryside. This always engendered an argument with my mother, who wanted all music all the time. They finally compromised by playing music CDs most of the time, and my father would tune the radio and pick up the news at the top of each hour. \n\nPerhaps in an effort to placate my mother's ire, and improve his chances to actually need the separate room with a king size bed they always got while on trips, my father would bring CDs of music that was popular when they were dating or first married. This resulted in my sister and me knowing a lot more 80's tunes and lyrics than we wanted to. My parents even had 'their song' - an old Hall and Oates ditty about \"You make-uh my dreams come true.\" It was often the first thing we heard after that Genie joke. \n\nIn my current dream, I was wandering aimlessly across the countryside, strapped tightly in my seat belt, and someone else was driving, and the stereo was playing another song further on down the list on the Hall and Oates Greatest Hits CD, singing \"You've got the body, Now you want my soul, ... Yeah, I, I-I, I'll do almost anything, That you want me too, ooh, Yeah, But I can't go for that, nooo, No, No can do.\" \n\nI wonder what that dream meant.\n\n*******\n\nSuzanne woke me up early Saturday morning. She was going to take a bus with her soccer club girls to a tournament in Houston, spending all day Saturday and most of Sunday there. I was usually looking for any excuse to drive my still new (to me) car, so I had volunteered to run her up to the ESU Intermural Fields parking lot to board the bus. It was 0500 hours and we had to meet the bus at 0600, but Suzanne insisted on a doggie style quickie in the bathroom so we wouldn't wake Lara. She was still my kind of girl.\n\nAfter kissing Suzanne goodbye and watching her board the bus and wave, I drove around mindlessly for a while. It helped me think. Or in this case, it helped me to not think. My stomach growled loudly, reminding me of another way to avoid thinking about Sunday night. I thought about going to UDP for breakfast, but the cooks had Saturday morning off, and I needed some hot food. I drove the car back and parked in Lara's second space, then walked briskly north to the Jester dining hall.\n\nI was just about the only one there. Scrambled eggs, bacon, and (previously frozen) orange juice occupied my attention for a while. Lara had an LSAT review class most of the day, then we were going to meet at her place tonight for leftovers and Netflix as a hollow substitute for the postponed Candy training. I trudged upstairs and put on my running togs. Kevin was spending the weekend with Lou Baby's parents. I would pay to see that. Hopefully he would tell me all about it when he got back. I went down and did my sprints, and then recalling last night's female reaction to my newly expanding chest, I did 100 pushups and as many chin ups as I could manage. \n\nFinally,I played my last avoidance card - school work on a Saturday. I did a first draft of my upcoming 'debate' for linguistics with Lynn Da. That kept my head down until lunch, then I went through next week's reading assignments in math, physics, and linguistics, and wrote the damn SQUID paper for the physics lab guy. That research got me to thinking. Could a sensitive and advanced SQUID detect the Suzie signals with a technological receiver, rather than my biological receiving array? \n\nI took a shower and skipped my usual pre-dinner at the dining hall, and walked to Lara's building. She was in a strange mood, and insisted that we go out to eat, not her usual choice. On a Saturday night in Austin, the population pressure on restaurants is pretty fierce, which usually means long waits if you didn't have a reservation. We ended up going way north on Burnet Road, almost to the Pickle Campus, and after a mercifully short wait (my stomach was playing quite a tune by now), we snagged a table for two at a Mexican restaurant in a strip center. It was right under a Planned Parenthood office, and I wasn't sure what that might mean. \n\nThey brought us a bowl of tortilla chips and offered us a choice of how hot the table prepared salsa should be. The waiter looked at me suspiciously when I asked for Habanero maximum heat, as if to say \"you can't handle the truth, Gringo.\" He gave me a sample on a chip and I dipped it and chewed it for a while, smiling and looking him right in the eyes, then asked if they had any Xochitl brand XXX hot commercial salsa in the back. He looked insulted, and then went back to the kitchen and brought out a whole bright orange Habanero, and chopped it up finely, including the seeds, and added it to the salsa dish on the table and mixed thoroughly. Perfect. Lara had to stick to the bean dip. \n\nThe Mariachis fired up two tables away, loud and proud, for a birthday party. They were supposed to bring good luck. I wondered if they could do Daft Punk. They had a big loud Guitarron Mexicana, but no horn section. It was just as well. I couldn't look at another musical instrument right now without seeing wave motion equations from physics. The loud music seemed to improve Lara's mood, and I was hoping my habanero hot sauce fueled hormonal storm and John Henry act later would make her feel better too. \n\nWe didn't get back to Lara's place until almost 10 PM. We put on Netflix and made out on the couch all during the movie, then went to bed and fucked like rabbits. All very conventional. All very wonderful. I slept soundly, but had no dreams that I can remember, nor wanted to. \n\n*******\n\nSunday started early, too, as Lara had to go the second day of her weekend LSAT prep marathon. Transportation was no issue - it was held at the Hampton Inn a block from her building. I walked her over and kissed her goodbye in the lobby, to the obvious consternation of a bellman who had that now familiar look that said 'why is that girl with that loser?' The joke is on you pal - she loves me.\n\nI grabbed a couple of sweet rolls in the dining hall when I got back to the dorm, and took a nap, setting my alarm in time for my lunch meeting with Susan from Beta Omicron Theta. Her family's 'lake house' where we were to meet was on the other side of the river, in the (previously) little bedroom community of Westlake Hills, and Google maps said it would only take me about 15 minutes to drive there on a no traffic day like today. A quick zoom in to street view showed me it was no small cottage - it was perched on a hillside overlooking the river, and Zillow told me it was just a little over 6,000 square feet, and last sold for over $5M. Whew!\n\nI spent the next few minutes doing a little additional research on Miss Susan. Her father was a partner in a big law firm in Houston, the same one that Susan's grandfather was 'of counsel' for, along with several other big time but now out of office politicians from both parties. Lobbyists all, I assumed. Her mother was a very high end realtor - I didn't see any houses listed with her below $2M. On the BOT website, Susan was listed as a political science major who planned to go to law school. That gave me something to think about besides G\u00fcnter and Suzanne while I drove. \n\nOiler and Bigun had equipped my car with a speech to text SMS app that linked to my phone, so I texted Susan to let her know I was about 5 minutes away. Her reply appeared across my windshield on the heads up display \"drive thru gate - park by green lantern\". I guess the space next to the Flash was taken. I turned into the small driveway and sure enough there were three little single parking spaces in the front yard all surrounded by some very HGTV landscaping, and one of them was right next to an antique street light that was sort of an oxides of copper shade of green. The gate closed right behind me, and Susan appeared, holding open a big wooden door with hammered metal straps in that same shade of green and beckoning me to enter. \n\nShe led me up one level to giant 'great room' that looked out over the landscape with a nice view of the river and all the other expensive houses nearby, and we sat on stools at a countertop that was between the great room and the big kitchen. They must share a decorator with Lara's dad: lots of duplicated stainless steel appliances. There was a little 'mini-spread' brunch laid out on the counter top and she told me to serve my own plate and then we would talk. The covered and heated dishes had scrambled eggs, bacon, some corn tortillas, pico de gallo, sliced avocado, and some lukewarm but passable commercial hot sauce. Some fresh orange juice in a glass pitcher nearby finished my lunch checklist. I was going to be okay, food wise. I chowed down and prepared to listen.\n\nLike the women at the 'Addicted to' party, I expected she would waste some time telling me what she thought she should say, rather than the truth. Not this time, Master.\n\n\"When I came to Austin to go to school, I was going to be Daddy's little angel. Go to law school and be an even better lawyer than anyone in his big law firm, marry a hot quarterback or a stellar heart surgeon, and after a brief but brilliant legal career where I got my picture on the cover of several glossy magazines, settle down and have 3 or 4 beautiful kids and play golf or tennis in the afternoons while the kids excelled at private school, and then take wonderful weekend trips with my stud muffin husband while Grandma and Grandpa doted on the kids.\"\n\nPretty complete little plan, I thought. \"What happened?\"\n\nShe sighed. \"I was a legacy to my mother's sorority, and when I pledged it was the happiest day of my life. I was assigned to be the little sister helper to the sorority president, Debra Plouff, a senior who was also the most beautiful and smartest woman on campus. I was in awe of her. I wanted to be like her.\"\n\nI sensed there was a lot more to this story. She launched a little Suzie signal, off key and melancholy sounding. \n\n\"I had a big crush on Debra, too. The first time I had ever felt that way about another girl. She was a one woman clique within the sorority, and I desperately wanted to be a part of that clique. She made me do her laundry, and brush her hair, and even do her nails. I loved it. I wanted to spend every minute with her. I wanted to know everything about her.\" \n\nShe shifted around on the little chair. \"When the first away football game came along, all the other girls took the charter bus to go to the game. But Debra said she had to stay to study for a test on Monday after the game, and she asked me to stay with her. I was so happy! I took my books to her room after the bus left, and quietly studied so as not to break her concentration. About 11 PM, she put all her books up, and stretched, and told me to come over and give her a massage to help her relax.\"\n\nShe took a deep breath and drew herself up to her full height, sighing. Her Suzie sighed too. \"She shed her clothes and I rubbed her and after a while told me she wanted me to kiss her breasts and eat her pussy. I was mortified, but frantically excited at the same time. She told me what to do, and I did it, craving her approval. When she said it felt good, I was overjoyed. When she came, I felt a buzz of excitement like never before.\"\n\n\"Then she pulled her covers up and said I could stay the night in her roommate's bed if I wanted to, and went to sleep by herself in her bed in two seconds. I was crushed. I went from the highest high to the lowest low. I wanted her to touch me too. The next night the same thing happened. She kept me like a yoyo on a string for that whole semester. Then one night Debra gave me a little kiss on the lips before sending me back to my room. I was hooked all over again.\" \n\n\"Then she taught me to eat her ass. I was grossed out at first but I wanted to please her. It made her come very strongly, and she would kiss me several times on the nights when I did that. Then she taught me how to use Ben Wa balls on her, and it made her come really hard, and she would touch my breasts when she kissed me. Now I was truly in love, and even more desperate for her to touch me.\" \n\nShe stood up and hugged herself, with a funny look on her face. \"At Spring Break in the second semester, she went off to spend the week with her new boyfriend at his family's place in Florida, leaving me heart broken in Austin without even saying goodbye. When she got back, she asked for another massage and I ended up doing everything for her again. After she came several times, she kissed my breasts, driving me crazy, and then made me go down on her again. The next day, she began to touch my ass when she passed by me sometimes at the sorority house. I was enchanted again.\"\n\n\"About two weeks before the semester ended, Debra asked me to spend the night with her while her roommate was gone on a weekend trip. She sat on my face and roughly got herself off. Then she pulled me under the covers with her and kissed my breasts and gently touched my pussy through my nightgown. I was infatuated with her all over again. Then she had me spend the rest of the night licking her ass while I used my fingers in her pussy. I was so desperate for her to touch me some more that I would do anything for her. Anything!\"",
        "\"The day before finals, she took me to bed and demanded that I totally devote myself to pleasing her. I ate her for two hours straight. I got her off with my fingers, I worshipped her ass with my mouth for another two hours, then used the Ben Wa balls on her with my fingers in her pussy again. I literally made her come all night. I was exhausted. Then, just before dawn, she began to gently kiss me and touch my breasts. Tenderly and wonderfully like she never had before. Debra touched my breasts, she kissed them, and she gently bit my nipples. I was in ecstasy. Debra loved me, she wanted to please me! Then she took off my panties and ate my pussy like an angel. I came so hard I passed out.\" \n\nSusan shivered with the memory, but then her eyes got steely. \"When I woke up, she was lying beside me, looking at me. I looked at her and started to tell her how much I loved her, but before I could say anything, she said \"That's it for our little fling, pledge girl. It's been fun but it has now run its course.\"\n\nSusan began to cry. \"I was astonished. I was paralyzed. I was almost suicidal. My heart was broken.\"\n\n\"I almost flunked out of school because I failed most of my finals. My 'loving big sister' Debra got married that summer, to a guy that had just finished medical school and joined a big dermatology practice in Houston. I didn't even get invited to the wedding.\" \n\nShe drew herself up and her look morphed from sad and determined to predatory and evil. \"Never again! Not to me. I was never going to be on the losing side of that little game again. I cried and sulked all summer, then went back to school in the fall. I started dating guys that met my husbandly criteria, and I prick-teased them constantly, telling them I would have sex only with my husband. But I also found myself a mousy little freshman pledge girl to get me off. She was even more naive and stupid than I had been. I did to her exactly the same thing my big sister had done to me, but even better. I would come home from a date and make her eat me. She ate my pussy every night for the first six weeks before I even told her that she was pleasing me. I spanked her when she didn't clean up my room for me.\"\n\n\"I made her eat my ass every night, then spanked her because she didn't do it well enough, and made her eat my pussy some more. She became even more devoted to me. I told her she could not masturbate without my permission. When she did, I made her do it where I could watch. She soon said she couldn't have an orgasm unless I was watching. I used her like dog for the whole long term school year. The last night before finals, I made her serve me all night until dawn so she couldn't study, and then I slowly and teasingly stripped her and caressed her. She got so wet she soaked her bed, and then I quickly tongued her to one little climax. She screamed that she loved me. I told her it was over.\"\n\nSusan gulped, then smiled. \"She didn't even go to her two finals that day.\" She laughed. \"It was fantastic. I was on top. It got me high. Then my milquetoast pre-med boyfriend asked me to get engaged that afternoon, so I broke up with him, too. So much fun. I had cleared my slate for the next summer and fall. I am on my third little freshman pussy licker now, and I will make her come once and then dump her just before finals. I have two guys chasing me like crazy and I will never let either one of them even get to second base. I love watching them squirm. Life is good!\" But her Suzie said it wasn't. It had a haunting tone, off key and disturbing, with hints of that awful Melanie music.\n\nI reached up and touched her chin, moving her eyes up to look at me. \"So what's the problem?\"\n\nShe began to cry. \"I can't go on like this all my life. It's not good enough for me!\"\n\nI thought I saw the problem. In Engineering 101 we were taught to call it 'setting infeasible conditions', or 'erroneous problem definition', so I sought some clarification.\n\n\"Do you still have the plan to be a super lawyer with a successful husband and three kids? What kind of relationship do you want with him?\"\n\n*******\n\nLess than a mile from Susan's 'lake house', Asa Weltschmerz was relaxing by his pool. Sunday afternoons were the only time of the week he could 'veg out' as his kids put it, and just think. He had spent the morning speaking to a fund raising 'power breakfast group' at ACC, happily avoiding having to play golf with anyone, and this evening he would dine with another group of donors who were primarily supporters of ESU athletics. This was going to be the first actual test of the response to his grand strategy to enhance fundraising for the med school, and ESU in general. \n\nRobbie Roberts actually made it all possible. The $100M single donation from Sapiento was twice as much as Asa had counted on, and it gave him some room to maneuver, fund raising wise. Since ESU had the most sports revenue of any school, and athletics brought in lots of big donors, too, he decided to position the medical school as having one of the best physiology departments in the world, and to be seen as contributing to both academic prestige and to results on the field of play. \n\nHe planned an assault on several fronts, from building up a very controversial developmental optometry group to help the athlete's improve their vision, luring Bob the Knob back to complete his vision of completely individualized training programs, and genetic screening for recruits. Saskia Grandael turned out to be a real find. He could get Arturia Brown to do anything he wanted if Asa would agree to be listed as co-author just one of those papers that Saskia's work had made possible. Arturia's citation index would climb to levels never before even remotely possible, and she could apply for grants she never could before. Asa would demand that one paper be completed and submitted before he dropped three others with Saskia alone. Two could play academic power games, and he was much better at it than Arturia would ever be. \n\nSaskia could help him locate and recruit the post docs that Bob the Knob would want, and another source had shared that Bob's wife and kids did not like San Diego, at all. They wanted to come back to Austin. The oldest one would discover that he was not only admitted to the ESU honors computer science program, but that he got a scholarship that canceled out the free ride to UCSD that Bob's faculty status conveyed. Bob's wife, a surgical nurse, just happened to have been offered a great position at the expanding University Hospital, with the option to get into a PhD program and eventually become a full professor of nursing. Saskia was going to be a big help to close the final deal. \n\n*******\n\nSusan's face had turned to stone. \"All the guys that look like they could make good money are too wimpy. I can't respect them, so they don't get me hot. My plan was to just have them as a husband, not a lover, and get my jollies from submissive women. But the thrill is gone from that, now, too.\"\n\nI tried to tap into her Suzie fantasy carrier. She was so upset that it was hard to tell anything from it. I could just ask her, I suppose.\n\n\"What do you really want, Susan? Do you want a man with a good income that you can dominate and/or cuckold by having other men?\"\n\nShe gasped. \"No. I would rather just have him be asexual than be like that.\"\n\n\"Do you want a man at all? What kind of man would make you hot?\"\n\nHer face twisted like she was fighting something. I caught a splash of Suzie images: Millie at the UDP Halloween party in her almost naked metal fuck suit, on a leash and taking my strobe lit metal cock piece in her mouth. Another image of Susan on her back with her legs wide open, almost doubled over, and a powerful looking man whose face was obscured really pounding into her, hard and fast. \n\n\"Do you want a woman?\"\n\n\"As long as I can dominate her and make her my worm!\"\n\nBut her Suzie belied that hardness. I played a hunch. \"What time in your life were you the most excited sexually? What feeling would you like to have over and over again in the future?\"\n\nHer answer came right away. \"When I realized that Debra was actually kissing my pussy, and that she actually wanted to please me, too.\" Then she looked as if she was surprised at her own answer. Her face softened.\n\nI asked her again. \"Do you want a man who would demand that you please him, but who also wanted to please you? A man that you could also trust as a husband, provider and father?\" Her face took on a silly grin, and she shook her head yes, almost too much.\n\nShe finally spoke. \"That would be nice. A strong dependable husband and a compliant little sister on the side.\"\n\nI tried to get her to say more. \"I suppose ideally the man should be into that little sister, too, and vice versa, so you could all three be open and honest with each other?\"\n\nShe looked happy and calm, like I had just described Nirvana.\n\nBut then, her face changed to a predator's glare, and she leaned forward toward me and pinned me with her eyes. I suddenly could see her as a ball busting district attorney about to slice and dice a hostile witness on cross examination. \"Do they still teach probability and statistics over at the Cockrell School of Engineering, Roberts? Finding an arrangement like that would be about as likely as being on the way to the lottery office to turn in your single winning Powerball ticket, and then getting hit simultaneously by lighting, a meteorite, and a blue '57 Chevy!\"\n\nAfter that she seemed to dismiss me as a dreamer, and soon ushered me out. At least I had kept my promise to her.\n\n*******\n\nAs I left Susan's, I drove around aimlessly, feeling a little detached. Suzanne then texted me right back into abject reality. \"Almost back to IF bus stop, my animal. Can u pick me up?\" Of course I was physically capable of it, but did I really want to? It was only two hours until dinner at Strelsa and G\u00fcnter's place. I wished that was all it was. On my way to the Intermural Fields, I drove slowly by a good portion of the Austin State Hospital grounds, which was appropriate because Suzanne was slowly driving me crazy. \n\nShe smiled and waved when she saw me, and then threw her soccer bag in the back seat and hopped into the front. When she kissed me on the cheek, I could see a purple bruise forming on the side of her left leg. \"Ouch, babe. Looks like you got tackled pretty hard?\"\n\nShe made a motorboat noise with her lips. \"They got me and not the ball, and we got a score on the free kick. I guess that's what they call taking one for the team.\" I did want to extend that analogy right now. \n\n\"You smell great Robbie, but I don't. I need a shower. Can you take me to my apartment?\"\n\nHer place was south of the river, a small nondescript complex tucked in right next to huge showy one. At least this time when I pulled into her parking lot, there was no phony cable TV truck with Dwight parked there scanning for Russians, as far as I knew, anyway. There was also no chance that just the two of us were getting ready to go to a simple fraternity toga party, either. She finished her bottle of water while I drove. When we got there she quickly disappeared into her bathroom, with no hint of an invitation for me to join her. \n\nSuzanne liked to take long showers, and she was taking this one without me. That gave me time to think. Too much time to think. I was left alone to ponder my emotions, and they were a very dark and mixed brew. I fell back on my mom's one and only psychoanalytical technique, which she first employed when I was 5 years old, and I did not want to go to my first day of kindergarten. \n\n\"Robbie, what's the worst thing that could possibly happen if you go?\"\n\nPerhaps in compensation for my slow and clumsy physical development and late onset of puberty, my imagination and verbal development were well ahead of schedule. I began to talk at 14 months, and according to my father, I never shut up again. I also could come up with a lot of ideas to talk about.\n\n\"The school could get hit by a tornado and everyone would die. A bully could punch me in the face and I could lose all my teeth and be deformed for life. I could get polio.\"\n\nMy mother congratulated me on my imagination, and then talked me through how likely and unlikely some of these things were. By this process she led me to the stuff that was relatively likely and that I was really scared of: that nobody would like me or talk to me, some big kid would hit me, or that all the other kids would tease me like my older sister did. Then she got me to admit that even if these things did happen that five year old Robbie could probably deal with them. But my current situation was definitely an adult problem.\n\nSo let's face the music, Roberts: what's the worst thing that could happen tonight if I go through with this and I watch my best girl Suzanne suck and fuck G\u00fcnter, who is older and taller than me, better looking, and probably has a much bigger dick?\n\nShe could look up dreamy eyed from sucking G\u00fcnter's (assumedly) huge cock and say \"Now this is a real dick. I never want to see your pitiful little thing again!\" Was that why she told me that Strelsa had been thinking about my dick? Because she had been thinking about G\u00fcnter's giant pleasure pole? \n\nWhen G\u00fcnter fucks her, she could sneeze five times and scream \"Oh My God! It's so big and so good. I can never be happy with Robbie's little weewee again!\"\n\nDr. Phil would say that I was afraid of losing control in the relationship. No shit, Sherlock. But I never really had control, did I? I told Suzanne I would take her any way I could have her and be her little meat puppet, and she could dump me anytime, and if she did I would be happy for the time I had with her before she dumped me. I knew going into it that she was so beautiful that she could get any guy she wanted. Maybe people were right to wonder why she was with a loser like me.\n\nIf she really loved me, why would she want two or three dicks at once? Shouldn't she be satisfied with me? Shouldn't she be so happy with me that never even wants to try anything with anybody else? Wasn't I so happy with her that I never wanted to try any other girls? Uh-oh. \n\nI recalled the discussion I had with Ralph, wherein he opined that upon discovering that your girlfriend wanted multiple guys in bed with her all the time that you would just dump her and be glad you figured it out before you fell in love with her. Too late for that, dummy! Ralph was a 'zero sum game of love' kind of guy, arguing that whatever love your girlfriend gave to someone else was something she wouldn't give to you.\n\nI remembered another one of our UDP sophomoric bullshit sessions about 'open relationships' versus 'traditional monogamy'. Cisco, of all people, was expounding the open relationship way of looking at things. He said you should be able to say \"My partner loves me so much that she trusts our relationship to expand outward by experiencing even more love with others\". That sounded like a hippy dippy version of the old line from the cheating husband about 'who ya' gonna believe, me or your lying eyes?' \n\nI seemed to remember Suzanne talking about me and Peggy after she tumbled to what was going on. She laid it on pretty thick about her understanding that I wanted to 'rub up against something big and bouncy and kiss it and play with it and enjoy it' and about me being 'an understanding and interesting man'. I thought she was talking about me playing with Peggy's big breasts and ass. But maybe she was talking about her playing with G\u00fcnter's dick, too. Shit. \n\nCisco had continued pitching his position. \"The relationship should be so open and trusting that we can experience sexual and romantic thrills with other people and it does not threaten our bond.\"\n\nWell, I had certainly experienced thrills with Peggy, Candy, Elizabeth, and Orinda. Suzanne knew about all of them, though not in total detail. Except Elizabeth. Somehow Elizabeth was different. I certainly didn't want to just see Peggy after I had her instead of Suzanne, just because Peggy had bigger tits than Suzanne. Hell, Peggy had bigger ones than Lara, but I would never prefer her to Lara. But was it different with a dick? Was a big dick much more pleasurable for a woman, meaning there was a real functional difference, not just an aesthetic difference? If so, why didn't all human males evolve huge dicks a million years ago? \n\nHow was G\u00fcnter dealing with all this? Obviously he and Strelsa hadn't gotten divorced since last week, and when we left their apartment it sounded like he was really into her, so to speak. Strelsa did not have any trouble getting off with my dick, whatever its relative size. I was absolutely certain that she truly enjoyed sucking it, too. I certainly enjoyed her enjoying it. \n\nI remembered Cisco's final point from the discussion at the UDT house. Something like \"There is an unlimited supply of love, so loving more than one person is a choice that can expand your potential for giving and receiving love.\" So the more dicks Suzanne gets the happier I should be, right? Right. \n\nI guess the key question is how jealous do I feel and how well can I deal with it? I believe jealousy is normal, in that 99% of all people I know about have problems with it. Some people kill over it, some people just get out and leave the relationship behind forever, and some people just forgive and forget and go on. But how many people actively practice a lifestyle that repeatedly subjects them to intimate situations that are sure to trigger the green monster?\n\nMaybe it was like a fear of heights. You climb one step and then try to relax and adjust to being up there. Then you take another step and wait until you settle down, and eventually you can climb all the way to the top of the stairs with no problem. But Suzanne was going to go all the way with G\u00fcnter tonight. I had no time to adjust. Was it better to just tear off the bandage all at once, or take it slow? Maybe it was better to not get cut at all!\n\nI guess I would wait and see how I reacted to tonight's action. I knew a few things for sure right now. I would never accept this kind of thing in a long term relationship with a wife. With a hot lover in the short term, maybe. It might be that if I watched Suzanne with G\u00fcnter, it might turn me on like it did when I watched her with Strelsa. I sure hope not. But even if it did, I could not abide with passively watching my wife with another man. It might be that after I watched Suzanne with Gunter, I would never want to touch her again. That would be quite a loss, but as it is very popular and very annoying to say lately - it is what it is. I had agreed to go forward with this, and I had already done Strelsa with G\u00fcnter as my audience, so I would try to be a silent voyeur tonight. I would soon learn that Suzanne was either just a hot girlfriend during our 'wild college days' or if she was really a long term option for me. \n\nWith only about 20 minutes left until we were due for dinner (a 15 minute drive from her place), Suzanne emerged from her bedroom, hair shining, in full makeup and heels with a low cut dark blue dress. She looked totally fantastic, of course. Bitch!\n\nI drove, she talked. \n\n\"Robbie, you know I love you, and I always will.\"\n\nUh-oh. This can't be good. With women, isn't it always the good news first and then the very, very bad news second when the 'talk' starts out like this?\n\n\"I love Lara, too.\"\n\nWho doesn't?\n\n\"I trust both of you. I trusted you enough to let myself be a total slut with you both. I discovered that I was a total slut when I let myself go with you. Because of all the things that happened to me before I met you, I was shut down, sexually. I realize now that I was also shut down emotionally. I would have stayed that way if you hadn't been so honest with me. When you said you were just a freshman and you weren't even thinking about long term relationships, and you would be my meat puppet, I realized that was just what I needed. You just can't shut yourself off emotionally, no matter how badly it hurts to stay open and vulnerable. I know now that I can't shut myself off sexually either. I am a slut, just like Millie is. In the long term I want to be a one man slut, like Millie is doing with Jay Kincaid. Before I met you, I never thought I would have a long term relationship with a man again, so it really didn't matter, back then. Now it does.\"",
        "I knew not to say anything. I wasn't sure I could right now, even if I wanted to.\n\n\"I know now that my inner slut needs some 'wild college days' before I settle down. But I am trying to be an ethical slut - and be as open and honest as I can be, and to get as many thrills as I can without taking too much risk of hurting myself, you or Lara. I would never do anything behind your back. I think I need a couple of thrills like you got with Millie, Miss Big Teats and Ass, Orinda, and maybe some I don't even know about. But that's okay. Yes it made me jealous, and I was afraid you would get seduced away and not want me anymore. It made me competitive - I wanted to be even better for you. To make sure I had you.\"\n\nControl huh?\n\n\"But there are a couple of things that I want to try and that I will keep wondering about until I do. And our 'swap fest' nights are a perfect opportunity for me to try some of those things. I could never try them it if I didn't have you to trust. I mainly trust G\u00fcnter because you trust Strelsa and she trusts G\u00fcnter enough to marry him.\"\n\nSo you are going to fuck this other guy, in front of me, to show me that you trust and love me? Thank you so very much.\n\n\"There are some sexual things that all men think about, and some sex things that all women think about. Most people never actually get a chance to do them, or if they do, it is in a stupidly risky situation that they should never have put themselves in.\"\n\nMy curiosity was suddenly piqued. I thought I knew one of the main sex dreams most guys think about: two girls blowing them at once. With girls, was it two guys to blow at once like Suanne's carrier images made clear was one of the things she thinks about? \n\n\"All guys fantasize about having two girls suck their dicks at the same time, right? Most girls fantasize about a threesome with a man and a woman, and you and Lara were way better than my very best fantasies. The other most popular woman's sex dream, as far as I know, is to get to be a push-me-pull-you: one guy from behind doggie style and one guy in your mouth. That is one of my biggies, that and that plus one, so to speak.\"\n\nShe was certainly being open and honest with me. Trusting? Did I want to be trusted this much? \n\n\"This is a unique opportunity for me. Minimum risk, maximum return, with people we trust. I want to go for it. But if it means losing you, I don't want to do it. So I guess we are talking long term relationships now, aren't we?\"\n\nDamn. Now I knew I was supposed to speak, but what should I say? Tell them the truth, Robbie, and then you don't have to remember any lies.\n\n\"I had this conversation with myself while you were taking a shower. I could never put up with this if we were married, but...I already did Strelsa, and I enjoyed the hell out of her.\"\n\n\"So it's okay with you for me to enjoy the hell out of G\u00fcnter?\" \n\nThe question was so bald faced and presumptive that it stunned me into silence. For just a second too long.\n\n\"Robbie Roberts you really are the most interesting man...and perfect for me!\"\n\nI almost broke off my new steering wheel. I'm pretty sure I pulled a muscle in my already prone to soreness chest. I kept it together long enough to make it into the garage of Strelsa and G\u00fcnter's building, and into their parking space (they had no car, so far). Suzanne popped her door open and started for the entrance before I even set the parking brake. Her heels on the concrete floor said \"tap, tap, tap.\" The same sounds that nails made when sealing a coffin. Was this the death of our relationship?  \n\nWe took the elevator up to their floor, and when the door opened, the smell of fresh cut flowers on the table between the two elevators hit me right in the nose. Pavlovian sequence in progress - ends in remembering the exotic European sushi taste of Strelsa's pussy, just as she opens the door and gives me a hug. A strong, wonderful hug.\n\nG\u00fcnter looks even more nervous than last week. Small talk. Strained laughter.\n\nI have no idea how I look, but I am 100 times more nervous than last week.\n\nNo cheese dusted salad. No yellow tomatoes. No erection. \n\nThe first course is something new, unexpected, and amazingly good: Mango Habanero Coleslaw. \"I made some extra Julienne habanero to put on yours Robbie. I spent a little extra time cooking to please you, since that is all I can do for you tonight.\" Thanks, I think.\n\nSuzanne is fired up. \"This slaw is fantastic, Strelsa! Sweet and hot at the same time. Sort of like both of you.\" She gives G\u00fcnter a hot look. He turns red. So does Strelsa.\n\nThe entre' is very different from previous nights too: spicy chicken pasta with vegetables in cream sauce. It's incredible. I suppose I should savor it.\n\nSuzanne is feeling uninhibited. She catches my eye and then puts her tongue up on her upper lip and holds it there. Now I have an erection. Works every time.\n\nSuzanne then gets a long noodle on her fork, makes eye contact with G\u00fcnter, and slowly slurps it up all the way into her mouth. Both Strelsa and I are looking right at her. She knows it. Her Suzie crows loudly. It's the first time I have noticed it tonight. \n\nG\u00fcnter looks at Strelsa and gives her a stupid grin. Neither one of them looks at me.\n\nStrelsa serves dessert. At least it's not a chocolate \u00e9clair. Kevin once showed me a very strange video of Paula Dean's cooking show outtakes wherein she appears to fellate an \u00e9clair, and then another video (without Paula Dean) with several extremely disgusting sexual interpretations of the definition of an \u00e9clair. I'll admit I am an ass kind of guy, but this \u00e9clair stuff shuts me right down, violating one of my cardinal rules. I don't think I'll never eat one again. An \u00e9clair that is. \n\nWhat Strelsa does offer up is fresh local blackberries with Amy's Mexican Vanilla ice cream. Damn that's good. Suzanne manages to catch my eye again, and touches her tongue to her upper lip with vanilla ice cream on it. Damn that woman.\n\nThen it's Deja vu all over again. Suzanne stands and says, \"I'll help you clear, Strelsa.\" My erection is suddenly gone.\n\nThe dishes are in the dishwasher in record time, and somehow we are all drifting towards the bedroom. The setup is the same as last week: candles, pillows, and that damn chair at the foot of the bed. I take my seat like a doomed man.\n\nPerhaps Strelsa and Suzanne have staged things. Strelsa has Gunter sit on the side of the bed alone, only about four feet from my chair, and she helps him take off his clothes. She and Suzanne remained fully clothed. They both step back, with Strelsa closest to me, and Suzanne slightly further away.\n\nStrelsa begins a slow strip tease. There is nothing wrong with G\u00fcnter's circulatory system. His cock looks several inches longer than mine, but thinner, at least in proportion. Strelsa is now naked. She kneels in front of him, and begins to slowly lick his dick. Suzanne begins to strip, slowly, seductively, as only she can do it. Even with the bruise forming on her left leg, she stills looks perfect to me. \n\nG\u00fcnter's eyes are glued to Suzanne. Who can blame him? I can. \n\nHe makes a funny noise when she takes her bra off. They are spectacular. She leaves her (new, at least to me) little turquoise blue panties on and kneels next to Strelsa, her eyes now glued to G\u00fcnter's. By now Strelsa has taken about a third of G\u00fcnter's dick in her mouth. Suzanne smiles at him, extends her long and strong tongue, and gently licks the side of the other two thirds of G\u00fcnter's cock, never taking her eyes off of his.\n\nI wondered if seeing this would turn me on - I was afraid it might, even while I fervently hoped it wouldn't. But suddenly I was filled with lust - bloodlust. I wanted to pick up the jawbone of an ass, a baseball bat, or even a tennis racket, and bash G\u00fcnter's skull in. Over and over, hit, hit, kill, kill, die, die! \n\nG\u00fcnter's eyes roll up in his head, he grunts, and he comes in Strelsa's mouth. She's a real trooper, making very sympathetically wifely yum-yum sounds and cleaning it all up. Then he topples slowly like a felled tree. Suzanne, keeping her wits about her even in this situation, reaches up with both hands and grabs his head, steering him toward the top of the bed instead of letting him fall back across it, so his head doesn't make a bloody crater in the wall. I realize he is out like a light.\n\nI must have blacked out right after that. When I wake up, my head is lolling back against the top of the chair and the back wall of the bedroom, and G\u00fcnter is laid out on the bed. Strelsa has mounted him amidships. Suzanne is sitting on his face, and now G\u00fcnter is the one making the yum yum noises. Strelsa and Suzanne are facing each other and kissing. \n\nStrelsa makes an unhappy face and climbs off of G\u00fcnter. There is now officially something very wrong with his circulatory system, at least in the pelvic area. The girls lie on either side of him and fondle his chest. Now I am really jealous. I guess you would expect a rowing coach to know how to develop his arms, shoulders, and chest. He looks like the 'after' picture for Saskia's class, and I still look like the 'before' picture. \n\nBut despite the two wonderful girls and active nipple stimulation, his cock remains flaccid. Tough break, buddy. Really sorry. Really, I am. Really. \n\nI am ecstatic. Strelsa is mortified. Suzanne is chagrinned, and her Suzie signal is non-existent. \n\nSoon we are dressed and making very awkward goodbyes. Strelsa sniffles just as she closes the door. G\u00fcnter makes a very un-Rammstein-like noise. There is no body slamming against the door tonight. \n\nI have no acting skills at all, but I need to do something to keep from breaking out it a silly grin. I decide to grind my jaws together as hard as I can to look serious, and we take the stairs down to the parking garage. \n\nI am not going to say a thing. I know Suzanne will eventually. I get my seatbelt on and start the car, and turn out onto the street. It was still early, but something told me to take Suzanne home. I turned toward the south to go toward Riverside Drive. \n\nSuzanne looked around, and said, \"Robbie, could we go to your dorm room for a while?\" Her Suzie began to sizzle, just a little.\n\nDon't laugh out loud, Robbie. That will just piss her off. \"I am not sure if Kevin will be there or not. I know he went out with Lou Baby tonight, but I am not sure if they will come back to the room or not.\"\n\nShe sighed, then said, \"Let's take our chances.\" That sounded promising. Very promising.\n\nI paused for a moment. \"I need to tell you something else.\"\n\n\"What is it, Robbie?\"\n\n\"It made me crazy to see you touch G\u00fcnter, and not in a good way.\" \n\n\"You mean it made you jealous? It made you angry?\"\n\n\"Beyond that. I wanted to kill him. I think I was so crazy mad that I passed out.\"\n\n\"I thought you trusted me enough to not be jealous?\"\n\n\"I thought I could let the anger go, but maybe not.\"\n\n\"You mean you are still angry, at me? Mad with a jealous rage.\"\n\n\"I'm afraid so.\"\n\n\"Well, I have been naughty. Just not as naughty as I wanted to be.\" She put her tongue up on her upper lip and held it for a while, until she was sure I was looking. \"I guess I'll just have to take my chances, won't I?\" Her Suzie bubbled up louder. \"Perhaps you will be very rough with me, and force me to do whatever you want?\"\n\n\"Perhaps I will.\" \n\nHer Suzie redoubled. \"Spank me, choke me and use me like a slut?\"\n\n\"I don't think I can deal with my emotions any other way.\" \n\n\"Push my head into the wall cushion and pull my hair, and fuck me until I scream?\"\n\nI didn't say a word.\n\nHer Suzie pealed like bells. \"You can turn around at this next corner, can't you?\" Oh my. \n\nI thought of one problem. \"But what if Kevin and Lou Baby are there?\"\n\nHer voice took on a raspy character that matched her Suzie signal. \"They can watch!\"\n\nNow I just had to figure out how to get her to shower, douche, and brush her teeth twice before I touched her again.\n\n*******\n\nDwight had never met the CEO, and no way could he think of how to talk him out of doing stupid stuff like this. He stood frozen for a second in the doorway while the taller and slightly older seeming of the two escorts looked him up and down with a practiced eye. \n\nShe spoke first. \"Hey, Sugar! I can tell you are in good shape under those semi-fruity clothes, but I can't tell if you like girls, boys, or both. Come to think of it, it may not matter. We can get a party going here in any case!\"\n\nThings were going from bad to worse. At least Roger Sherman wasn't here. But what if he was watching the take from the bugs? Somebody was, Dwight was sure of that. \n\n*******\n\nI parked my car at Lara's building, and we walked to the dorm. Suzanne was walking fast, and she drew several wolf whistles from passing cars. I didn't see any firetrucks. \n\nWe had the room to ourselves. Suzanne looked almost disappointed. I remembered the now forgotten first semester plan that Kevin and I had hatched to double team Lou Baby, the little scene between Lou and Suzanne on the way to the lake, and Kevin's reporting that his just whispering Suzanne's name got Lou wet. It made me curious.\n\n\"What would you really have done if they had been here?\"\n\nHer Suzie crowed triumphantly. \"I would have made her get down on her knees and lick my pussy while both our boyfriends watched!\"\n\nHoly Toledo, Batman! She really meant it this time. I would file that away for future consideration. But I had other, much more immediate plans for her right now. I also wondered if Kevin and Lou were coming back here tonight. I guess we'll find out."
    ],
    "authorname": "conanthe",
    "tags": [
        "fraternity",
        "lesbian",
        "sorority",
        "linguisitics",
        "bdsm",
        "whipping",
        "anal",
        "hair pulling",
        "spanking",
        "habenero"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-30"
}