{
    "title": "Dawn's Anal Awakening Ch. 03",
    "pages": [
        "Dawn Simmons, 18 years of age, was ready to go to Wheaton, two states away. \n\nShe had started packing early because she didn't want to be caught unawares when she reached her dorms. Speaking of dorms, she wondered if her roommate would be nice. While the buildings were mixed gender, the guys tended to stay on one floor and the girls on another. If her roommate wasn't nice, it would be difficult to get the kind of sexual gratification she had gotten used to over the past months. \n\nOh yes, Dawn Simmons was a slut and she knew it. She was sure of it, and she loved it. According to her hot older neighbor, Eric Sherburn, not many women were open to sexual pleasure like she was! Secretly, she thought that the main reason they weren't open to more sex was the fact that sex with the wrong person was so mediocre. And if she was really honest? There were too many people who didn't have the proper sexual skills. \n\nDawn had slept with 10, maybe 11 boys around the town before she had been sexually enlightened by Eric. All of those teenage dicks could never satisfy her, but Eric's massive rod had pulled orgasm after orgasm after orgasm from Dawn's body. She eagerly welcomed his hard cock in any of her young holes. It didn't matter if he wanted to fuck her mouth, her pussy, or her ass, she loved the way he did it and the mere thought of his dick made her cream her pants. \n\nIf she had never met Eric, Dawn doubted that she would have ever realized her true nature as an anal slut and lover of sex based on her past experiences with boys! But now that she knew how amazing sex could be, there was no way she could ever go back! \n\nMom and dad had been increasingly emotional over the past week as the start of the new term approached. Mom had gifted her lots of clothes, while dad had gotten her a used car that he fixed up. It was a garish yellow color, but Dawn loved it anyway. \n\nOfficially, orientation week started on Monday, but Dawn wanted to leave early because she wanted to settle into the dorm. She managed to persuade the office into letting her take her key earlier. \n\nWhich was why she was currently piling her suitcase into the back of her car on a Thursday morning. \n\n\"Howdy, neighbor.\" \n\nDawn spun around, a big smile on her face. Eric stood there in his jogging shorts, looking at her with a fond expression. \n\n\"You're leaving soon, yeah?\" \n\nDawn fidgeted. \n\n\"Yeah, 6 am tomorrow. We'll arrive early morning. My parents are taking the day off,\" she said, feeling a little sad. \n\nEric nodded as if he had been expecting that answer. He moved closer and bumped her shoulder encouragingly. \n\n\"Still have a lot to pack?\" he asked, waving at another neighbor who jogged past with their dog on a leash. \n\n\"Well... there are a couple of boxes Mom wants me to bring,\" Dawn said slowly. She gave Eric an innocent grin. \"But I think I need a big and strong neighbor to help me carry them!\" \n\nWith that, she turned and walked towards her house, making sure to sway her hips from side to side. \n\nEric choked on thin air and then came running up to walk just behind her. \n\n\"Well, I guess it's my duty as your neighbor to help you,\" he said, adjusting his shorts to hide his boner. Dawn grinned and let him into her house. \n\nAll this time, they had been fucking in Eric's house, because it was easier for him to do laundry or clean up the stains they left all over the house. \n\n\"Nice place,\" Eric commented, moving over to the fireplace where there was a picture of Dawn at 15, wearing her braces and grinning at the camera. He turned to Dawn and raised his eyebrows. Dawn rolled her eyes then went to the stairs. \n\n\"Come on, my stuff is upstairs.\" \n\nEric followed close on her heels until they were standing in Dawn's bedroom. \n\nIt was done in pastel shades, with various pink and purple items everywhere, obviously a girly girl's room. Eric felt a little dirty for what he had done to this young woman. Sure, she had been legal, consenting, and perfectly eager for his cock all those months ago, but seeing her room really drove home the fact that she was much younger than him. \n\n\"Stop feeling guilty,\" Dawn said, pulling Eric out of his thoughts. She drew the blinds and locked her door quickly, stripping off as she went to her bed. \n\n\"I knew what I was getting into. Your cock is by far the best I've had!\" Dawn said easily. \n\nShe leaned back on her elbows and opened up her legs. The anal plugs that Eric had bought for her had become almost a permanent fixture in her ass. Dawn was practically never without one of them. And ever since she had realized her anal lust was greater than most people, she usually wore the largest one so that she could get her ass reamed at a moment's notice. \n\nNow was no difference. Her spread legs showed off the base of her anal plug, which twitched every time she clenched her tight asshole. \n\nEric marveled at how wet she was already. \n\n\"This is what you do to me, you know? You showed me how good sex can feel. I'm really thankful that I met you,\" Dawn said softly. \"If it weren't for you, I might have gone my entire life not realizing that sex was supposed to be mind-blowingly amazing. I'm glad that I let you train my ass, that I let you fuck my ass, and I'm super thankful that you helped me realize I'm a complete and utter anal slut.\" \n\nEric groaned. She looked so young, so innocent, but she said such filthy and dirty things with that beautiful pink mouth of hers. That same mouth had eagerly slurped on his cock, tried to swallow all 10 inches of his massive schlong, then convinced him to ream her over and over and over again in her 18-year old pussy and ass. \n\nHer holes, oh her holes! Both were always eager to be filled. Dawn preferred having her ass filled nowadays and anal always made her cum harder, but her body couldn't hide the fact that being pounded in either hole made her incredibly wet. Her pussy gushed so easily that Eric was amazed. The mere suggestion of a cock in any of her holes could make her juices flow. Her ass was incredible as well! It had taken to the training like a duck to water, opening up to welcome all manner of invaders, being stretched just enough that Eric could fuck it relentlessly without injuring that small hole, but also tight enough to grip Eric's cock in a vice and milk his balls completely dry. \n\nAnd to think, she was offering it all to Eric now. \n\nHe crossed the room, dropping his shorts as he did so. He yanked his boxer briefs off and his cock sprung free, twitching in the cool air. \n\nEric looked down at the girl, marveling at how she was all his for the moment. He could have any hole he wanted and she would welcome it eagerly. \n\n\"Did you-\" Eric started to ask. \n\n\"I did, this morning with the bidet,\" Dawn whispered, hands coming up to massage her tit flesh and push them together. Eric shivered at the thought of Dawn bent over in her own toilet, biting her lip to stay quiet as she flushed her rectal passage out with water from the bidet while her parents were downstairs. Did the sudden gush of her bowel contents into the porcelain bowl alert them? Or did she wait till they were gone, then moan and whimper as she cleaned her hole out? \n\nHowever she did it, it didn't really matter right now. There was a willing young woman that was waiting for Eric's hard cock. \n\nHe slowly crawled onto the bed and took hold of the base of the plug. He jiggled it once, twice, making Dawn gasp and groan with pleasure. She grabbed harder at her tits, twisting and rubbing her nipples until they were poking outwards. \n\nStretched out on her pastel pink bedsheets with strawberries and unicorns on them, Dawn looked vulnerable. If Eric didn't know any better, he would have called her innocent. She was looking at him, wide-eyed trusting. \n\nEric pulled on the plug gently, never ceasing to admire the way Dawn's anus stretched to give up its intruder. She made a soft sound of arousal when Eric carefully set the plug on the nightstand, then lifted her legs to her chest to show off her eager holes. Eric took in the sight of Dawn like this, her bald pussy and ass already glistening with her cunt juices. She looked like a debauched angel and Eric was loving it. \n\nHe moved to kneel between her legs, moving them until they rested on his shoulders. \n\nEric didn't bother saying a word. Unlike previous times where they had fucked with increasing urgency in search of bigger and better orgasms each time, the two of them didn't feel the need to rush what would be their final fuckfest before Dawn left for college. \n\nEric lined up his cock and slid it slowly into Dawn's pussy. Her mouth parted and she exhaled softly with a moan. Eric ground his cock into her repeatedly, gently fucking her cunt and using her juices to lube up his cock. When he felt his cock was sufficiently lubricated with her pussy cream, Eric pulled his dick out of Dawn's cunt, then slid it all the way to the hilt into her cute little derriere. \n\nDawn moaned softly, her hands still massaging her tits. Eric bent his head down to suck on her nipples while his hips never stopped their incessant invasion of her tight anus. He reached down to toy with her pussy and clit, teasing her G-spot and love nub in the way only he knew how, but Dawn pulled his hand away. \n\n\"Make love to my asshole, Eric,\" she panted \"Make sweet anal love to my hole, make me cum from anal love-making like you made me cum that first time!\" \n\nEric moaned at her words. Making love anally was always a boost to a man's ego. It meant that his partner trusted him unequivocally with her body. You could buy an anal fuck if you really wanted one, as long as you went to the red-light district. But the girls there couldn't fake the tenderness of lovemaking. It was an incredible show of intimacy, one that Eric had never expected to happen with Dawn! He took her words to heart and thrust deep inside Dawn's bowels, moving his hips in circular movements to drag his cock against her rectal walls. \n\nDawn was in anal heaven. Eric was making love to her asshole in slow thrusts, sliding his cock in and out of her rectal cavity, aided only by her pussy juices! She stared deep into his eyes, feeling safe and cherished with how gently he was fucking her eager bottom. \n\nEric leaned down and kissed her softly, nipping at her plump pink lips. Dawn opened her mouth and twined their tongues together slowly. Eric stroked her hair, shifted her position, and then fucked deeper into her pink and puffy rosebud. \n\n\"Look at you, look at you so open for me, taking my cock so sweetly,\" Eric whispered. Dawn flushed at his praise. \n\n\"Look at how your hole just gobbles my cock up, the man you marry is going to be a blessed man, to have this hole available to him every day and every night! Maybe you'll tell him that you gave your anal virginity to me. You'll tell him how I trained this asshole to open up, stretched it out and made it cum, then made sweet love to it!\" \n\nDawn moaned louder. She couldn't believe that she was doing this! When she was younger, she dreamt of making love with her future husband in their marriage bed, but here she was making love not with her pussy, but with her teen asshole, in her childhood bed! \n\n\"Oh yes yes! I'll tell him everything,\" Dawn panted \"I'll tell him how well you drilled me into my first anal orgasms, then fucked me through assgasms each day. I'll tell him how I thought of you in school each day, dreaming of your cock pounding me in the butt! Then I'll tell him about how you made love to my ass so tenderly, so sweetly and I'll tell him how I came so hard from the anal love making!\" \n\nShe squeezed the cock currently invading her rectal cavity. No matter how many times Eric's cock slid home into her bottom, it never failed to arouse her. The stretch, the burn, the drag of his swollen cockhead through her inner walls and on her anal ring, everything about his cock fucking her asshole aroused Dawn to no limit. \n\nEric thrust deeply, visibly holding himself back from touching Dawn's pussy, clit, or tits. He loved to manhandle her, but Dawn didn't want that. She wanted a physical affirmation of her true nature as an anal slut, meaning she wanted to cum solely because of the cock plundering her ass! \n\nIt didn't take long for Dawn to reach her peak. It wasn't just the fact that she loved anal and the sensations that came from having her shitter well fucked, her body had long since associated cock with pleasure. And although she wasn't being pounded the way she was in the past, Dawn's body still responded as if the cock breaching her asshole was giving her the reaming of her life! Her anal delight grew and grew and grew, creating a roiling storm under her skin. Eric was looking at her with such fondness and affection as he made sweet love to her anal passage. \n\n\"Cum, my dear slut. Cum on my cock,\" Eric said with a soft smile. He often repeated phrases like that just before she came, and she had been subconsciously conditioned to respond by cumming when she heard things like that! \n\n\"Ohhhhh,\" Dawn moaned, her asshole clenching on Eric's tool as it slowly but surely stretched out her brownhole. \n\n\"Oh oh oh aaaaaaah!\" She cried out, unable to stop her body from shaking and convulsing as her neighbor made sweet anal love to her asshole atop her childhood bed. \n\nDawn's orgasm rolled through her, making her feel like a boat upon rough seas, tossed about by the waves of pleasure. Unlike the previous orgasms Eric gave her, this one was gentler, but no less powerful, wracking her body in drawn out pleasure as her ass worked and pulsed on Eric's thick cock. She spasmed helplessly as Eric continued to fuck into her bowels \n\nThis time, Eric couldn't hold back. His self-control was in tatters around him. Dawn trusted him wholly with her body and her begging him to make love to her ass like this showed just how much regard she had for him. He was aroused by the fact that he had so much power over her, power to make her cum over and over and over again. That even now, without the relentless anal reaming Dawn loved to received, she orgasmed easily because his cock was fucking her ass. \n\n\"Ah ah I'm cumming!\" Eric growled, his hips stuttering in their pace as he lost control. His last few thrusts were wild and rougher than he would have liked, but Dawn didn't seem to mind. She grabbed Eric's hips and pulled them forwards, forcing his cock deep into her ass so that he would fill her up with his hot spunk. \n\n\"Oh yeah, yeah yeah!\" Dawn whispered. She kept Eric's hips mashed up against her bottom until the last of his orgasm had rolled through him and his cock had stopped twitching inside her asshole. \n\n\"You're so fucking amazing,\" Eric said fervently. He bent down to kiss her until his cock softened and slipped out of her ass. \n\nAs always, Dawn kept her legs up. Eric reached for the anal plug and then slid it back into Dawn's ass to keep his jizz inside. Her anus opened up around the metal and closed on the neck as easily as breathing, as if Dawn's hole hadn't just taken a thick cock and a sound plowing.\n\n\"Thanks for the going away present,\" Dawn said, stretching her legs and arms out and relishing the sensation of the anal plug stretching her well-fucked shithole. \n\nEric laughed. \n\n\"Give me an hour and I'll give you another!\" \n\nDawn gave him a wicked grin, reaching for her clock to set the timer. \n\n\"Oh you're so on! \n\n----- \n\nDawn reached Wheaton early on Friday morning, three cumloads in her ass and one in her pussy because she had felt it had been too neglected. It was so fortunate that Dawn was driving her own garish yellow car because otherwise her parents would have wondered why she kept fidgeting, unable to sit still. She wouldn't know how to explain that their next-door neighbor had given her a rigorous fucking in all her holes, with extra special attention on her teenaged rosebud, which left her too sore to sit properly in the car. The cumloads in her asshole could be kept inside with her usual anal plug, but the one in her pussy was slowly sliding out, which was really arousing and made her panties wet and uncomfortable. \n\nIt was a testament to how well her ass was trained now, that she could move around carrying her stuff to and from her new dormitory without feeling the need to relubricate the plug. The soreness of her anus had become a part of everyday life, a reminder of her slutty nature. At first, she had been embarrassed and aroused at wearing the plug around her parents, but now it felt like just another accessory, albeit one buried deep in her rectal cavity to keep cum inside her. \n\n\"My little girl is going off to college!\" Dad had wept when Dawn was setting up her table, putting all her cosmetics on the dresser. \n\n\"She's all grown up now, stop crying!\" Mom scolded Dad as Dawn continued to unpack, hanging up all her nice dresses and stacking her shirts in the corner. \n\nHer parents cleaned and dusted the small living space, helping Dawn to arrange her furniture just the way she liked it. \n\nShe was to room with an older girl, or so the office had told her. The older girl's roommate had quit college to be a superstar or something, leaving her without one. Dawn was there to fill the gap. She was thankful that the other girl wasn't there to see how her parents wept over everything she did. \n\nIt took Dawn a good solid 8 hours to arrange everything, assure her parents that she would call if she needed help, then usher them back into the car so they could begin the drive home. \n\nThe moment she got back to her room, Dawn collapsed onto her new bed. She sighed into the bedsheets and then shimmied her jeans and panties down to her hips. \n\nDawn gave the plug in her hole a little jiggle, trying to recall the feeling of Eric's cock. She moaned softly as it stimulated her rectal nerves, sending a wave of pleasure through her asshole. \n\n\"Aaaaah,\" Dawn whined, wishing she was back on Eric's cock. It had barely been a day and she was already horny for him! \n\nShe started to push and pull the plug out of her ass, letting the widest part stretch her cute little butthole. She closed her eyes and thought of Eric. \n\n\"Wow.\" \n\nDawn froze mid thrust at the voice coming from the direction of the bathroom. Her asshole was stretched wide open around the plug, and whomever it was had a direct full view of how it was glistening with her juices. \n\n\"Don't let me stop you!\" The voice said, coming around to stand next to Dawn. \n\nDawn's face turned red out of embarrassment. She didn't know whether to push the plug in or pull it out now. She lifted her head to look at who it was. \n\nThere, standing in the doorway to the bathroom, was a beautiful long-haired brunette. Her eyes were light hazel and her mouth was pinker than Dawn's. Her tits were at least a 34D, supported by a bra that pushed them upwards and outwards. Dawn felt her mouth go dry at the sight of this bombshell. \n\n\"H... hey,\" Dawn said weakly. The brunette crossed the room, took Dawn's hand where it was wrapped around the base of her plug, then roughly pushed the plug back into Dawn's eager asshole. Dawn let out a soft gasp. She thought it would stop there, but it didn't. Oh no, the brunette tugged, pulling the plug out, pushing it in, helping Dawn to fuck her ass! \n\n\"Oh-nnngh!\" Dawn moaned as her shithole was stretched. Being assfucked with her plug was erotic enough, having her hot older roommate help her with it was doubly so! \n\n\"You wanna cum like this? Or would you like something better?\" her roommate asked.\n\n\"Better?\" Dawn asked, head foggy from anal pleasure. \n\nThe hand guiding hers disappeared as the brunette knelt down and pulled a box out from under her bed. She opened it and withdrew something with a flourish. \n\n\"Oh my gosh!\" Dawn gasped. \n\nIt was a gorgeous strap-on, the black 9-inch silicone cock attached to a soft harness! Dawn couldn't help the way she stared at it in naked hunger. ",
        "\"Look at you, you want it so bad,\" her roommate said, amused. She didn't wait for Dawn to say yes, merely stripped off her panties and stepped into the harness, pulling it up around her waist.\n\nDawn watched in wonderment, mouth starting to water at the thought of that slab entering her ass. The strap-on was one of those that had a small dildo and nubs on the inside to stimulate the wearer as well. Dawn couldn't believe that her roommate was now sliding that dildo inside her shaved cunt and buckling the harness securely.\n\n\"Do you want it?\" \n\n\"Y... yes, I want it!\" Dawn stuttered, flushing completely red.\n\n\"Then convince me!\"\n\nDawn wasted no time in shucking off her jeans and pants completely. She lifted her legs and spread them wide, grabbing the base of her plug and fucking her asshole roughly.\n\n\"I want to be fucked in the ass, please fuck me in the ass! Please I need cock so badly!\" Dawn moaned, locking eyes with her dark-haired roommate and hoping that her pleas would be enough. \n\nHer roommate grinned, crossing the room quickly and shoving her fingers up Dawn's snatch. \n\n\"Look at you, all gooey already from toying with your ass!\"\n\n\"Yes! I'm an anal slut, please I need cock in my ass! Please fuck my ass!\" Dawn continued to beg. \n\nHer roommate grabbed Dawn's hips and flipped her over so that she was bent over the side of her bed. She dragged the slab of silicone up and down Dawn's slit, coating it with her girl juices, teasing her pussy.\n\n\"I don't think I will,\" her roommate said at last and then promptly pushed the tip of her faux cock into Dawn's cunt.\n\nDawn had thought that Eric's thick rod had pushed the limits of her pussy, but this one blew them all out of the water and set new limits! Her pussy was stretched so wide, split so open, she couldn't catch her breath. The cock was so thick that it could barely fit inside her alongside the plug in her ass! She could feel every realistically made vein along the fake cock rubbing against her pussy walls. Each scrape made her cunt quiver and pulse in an attempt to make sense of this monstrous invader!\n\nHer pink mouth opened and Dawn exhaled, eyes wide with shock as her roommate forced that monster deeper, and deeper, and deeper into her sopping wet cunt. \n\n\"Oh oh no!\" The intense feelings of being so well filled in her horny pussy managed to distract Dawn from her unfilled ass momentarily.\n\n\"My cunt, it's being split open!\" Dawn wept.\n\n\"I know, I'm splitting it open!\" her roommate crowed, obviously amused by Dawn being overwhelmed by her cunt sensations. She jiggled the base of Dawn's plug, angling it downwards so that it ground against the thin wall between Dawn's rectum and pussy. The feeling of pressure on both sides of her holes were too much to bear, Dawn gasped, words leaving her completely.\n\n\"Why don't you introduce yourself, little slut,\" her roommate said. \n\nDawn was struggling to think amidst all the pleasure coursing through her body. It was almost impossible to form any sort of comprehensible speech that didn't revolve around getting thoroughly fucked like this.\n\n\"I'm... I... My name is ... nnnngh... Dawn Simmons!\" Dawn managed to get out \"I'm - oh oh oh OH - gonna be - annnngh - 19 next year - mmmmngh! Oh yes oh yes I love - ah - ah - ah! I love getting - ooo ooo ohhhhhh - getting fucked in the ass!\"\n\nHer last statement startled a laugh out of her roommate. Dawn didn't know what to make of it, too preoccupied with being opened up on that thick black silicone cock.\n\n\"Mmhmm, well you're in luck, Miss Dawn Simmons the. I'm Kennedy Harper and I love fucking girls!\"\n\nKennedy slammed her dildo all the way into Dawn's pussy with each word of her last sentence, lighting up fireworks behind Dawn's eyelids. \n\n\"Nnnngh!\" Dawn sobbed, her pussy starting to convulse on the black dick. \n\nKennedy cruelly pulled her strap-on all the way out, leaving Dawn to clench on empty air. It was the most horrible feeling that Dawn had ever experienced! No cock in her cunt while she came? The deprivation felt like the worst kind of torture. \n\nDawn tried to move her hips back in search of cock, but Kennedy held her hips in place until her ruined orgasm was over. \n\nIt was the first time a cum had felt so unfulfilling!\n\n\"I thought anal sluts only cum from anal,\" Kennedy asked, delivering a sound smack to Dawn's bare bottom. She started to spank Dawn roughly, alternating between each asscheeks.\n\n\"Not really,\" Dawn panted, still feeling extremely horny. \"Anal makes me cum harder, but pussy fucks are good too!\"\n\n\"Well, do you think you can take this monster cock?\" Kennedy asked, not stopping in her assault of Dawn's butt, turning it a bright cherry red. \"Because the last time I fucked a girl in the ass, it wasn't anal but painal.\"\n\nHer answer came in the form of Dawn's pussy letting forth another gush of juice. The thought of being speared open by a thicker cock than usual was arousing. Maybe she wouldn't be able to walk tomorrow. Maybe she would have to limp throughout her orientation. Maybe all the guys would see and immediately know that she had been fucked roughly in her shitter!\n\nDawn moaned a little and Kennedy laughed. \n\n\"If I start, I won't stop,\" Kennedy warned \"This is your last chance to back out before I start pounding.\"\n\nDawn reached back and spread her asscheeks open, pulling out her anal plug in a clear invitation.\n\nKennedy chuckled. She lubed her silicone cock with Dawn's pussy juices, then pressed it against her slightly open anus. It couldn't close fully because it had been stretched all day, which was just the way Dawn liked it.\n\nKennedy began to apply pressure, leaning forwards to push her cock inside Dawn's shapely bottom. For the first time in months, Dawn felt her anus protest. The slow inward journey of Kennedy's cock into Dawn's rectal passage was being resisted by her anal ring!\n\n\"Relax, girl. Relax and breathe!\" Kennedy coaxed her. Dawn breathed out noisily, forcing her muscles to go slack. It was difficult, the new cock being thicker than Eric. But both girls were determined to see lodged all the way inside Dawn's bottom and no degree of tightness was going to stop them. \n\nDawn rocked backwards as Kennedy pumped her hips forward. Her anus resisted once, twice, three times, then finally gave way, submitting to the invasion with great reluctance. \n\n\"Aaaeeeee!\" Dawn whimpered as her sphincter was impaled painfully \"It hurts,\" she whispered. Kennedy stroked her blonde hair several times, then started to thrust again.\n\n\"I warned you, slut. I'm not stopping now that I've started. This cock is going all the way inside your cute little butt whether you like it or not!\"\n\nThe dominant way Kennedy said it as a fact made Dawn's pussy gush. Yes, it was going all the way in! She had no more choice in the matter because she was an anal slut who had offered up her shithole and there would be no turning back, no take backsies!\n\nShe lay there helpless, Kennedy pumping her hips forward insistently, forcing inch after inch of that huge dick into Dawn's sore anal passage.\n\n\"Aw yes, take it, take it all!\" Kennedy said, admiring Dawn's body sprawled over the bed, unable to get away from her punishing cock. She slammed her hips forward harder, making Dawn yelp as her asshole was split further. Her rectal walls were being pushed wider and wider apart by Kennedy's massive strap-on!\n\nDespite the burn, despite the stinging pain in Dawn's shitter, she couldn't help but feel aroused. A thick cock plowing her ass? Yes please! The thought of her young hole being opened up, stretched to breaking point, taut around Kennedy's thick cock, it was incredibly hot and it made Dawn moan uncontrollably.\n\n\"You like that, slut?\" Kennedy growled \"You love the way my cock is hurting your shitter?\"\n\n\"Yes yes yes!\" Dawn sobbed \"I love cock in my ass!\"\n\nKennedy pulled her hips back then slammed forwards again, driving her cock deeper. She thrust over and over again, not stopping until her black slab of silicone was firmly nestled between Dawn's red asscheeks. She massaged the globes of Dawn's ass, making the younger girl cry out in pain.\n\nThe dark-haired girl moved her hips in circles, watching as Dawn's hips moved along with hers. Dawn was so stretched, so tightly speared on that strap-on that every movement Kennedy made forced Dawn to follow. Kennedy couldn't resisted scraping her nail around the puffy anus doing it's best to grip her silicone cock. It was a real pity that she didn't have a real cock, she bet that Dawn's rearhole would have felt incredible!\n\n\"Oh nnnngh!\" Dawn whimpered as Kennedy's well manicured nail lightly scraped across her sensitive sphincter. She couldn't relax, or tighten her hole at all, helplessly impaled.\n\nKennedy spent another minute just admiring the sight, then started to slam her monster strap-on in and out of Dawn's horny asshole. \n\n\"Aaaeee!\" Dawn wailed. The thick silicone slab scraped against her rectal walls on its way out, threatening to turn her asshole inside out. It was only her youth that gave her anal passage the needed elasticity to maintain its shape, thought she had no doubt that if she continued along her current path, her asshole would be ruined long before she reached 40!\n\nKennedy set up a punishing pace, fucking Dawn's shithole recklessly, not bothering to give her time to adjust to the size at all. \n\nDawn cried, tears running down her face as her ass was plowed. Her new roommate seemed to have no regard for her anal wellbeing, using Dawn's hole like it was only a cocksheath, a source of depraved pleasure. Dawn was incredibly turned on. While Eric had always fucked her wildly and roughly, there was always some degree of gentleness and care involved. Not this time. She was nothing but a mere fucktoy for her roommate and it made Dawn's pussy juices flow. She felt like a porn actress in one of those rape fantasy shoots, being mercilessly used until she satisfied each and every cock.\n\nThe thought made her asshole twitch and clench involuntarily, which made Kennedy's subsequent stab into her anus incredibly painful! But far from quenching the horny ache between Dawn's legs, it only heightened her anal passion and sent her into a wild anal orgasm.\n\n\"NNNGHHH!\" Dawn wailed, her shitter pulsing, clenching, convulsing on Kennedy's black strap-on. Each clench tightened her rectal walls, making Kennedy's repeated and rough invasion of her shitter an agonizing experience. But Dawn's anal predilections far outweighed the hurt and her pussy continued to drip as Kennedy pounded away, reaming her shitter without an ounce of regard for her anal pleasure.\n\nKennedy couldn't believe her eyes. Her younger roommate was a true-blue anal slut who came despite the painful reaming that Kennedy was steadily dishing out upon that tight shithole. Dawn was cumming, and cumming harder than any girl Kennedy had fucked, all the while crying from the hurt lavished upon her anal passage.\n\nAnd she didn't seem to stop cumming! Kennedy watched as wave after wave of pleasure coursed through Dawn's body, making her convulse, twitch, and spasm on Kennedy's strap-on. The harder Kennedy pummeled that hole, the harder Dawn seemed to cum!\n\nHer first painal orgasm led into the second, and then the third, and a fourth weaker one, until Dawn was only a twitching pile of limbs on the bed, trembling fingers still trying to hold her red asscheeks open so that Kennedy could continue to pound her shitter.\n\nKennedy, a tried and true lesbian with a passion for luring her girlfriends into exploring anal and then ruining their assholes, was astounded. In all her life, all her girlfriends, she had never seen such a submissive anal slut that readily took her thickest strap-on with minimal complaint, and then proceeded to cum multiple times from painal fucking, AND THEN not try to get away from the continued chafing of cock in and out of her anal passage, which had to be oversensitive by now!\n\nShe slowed down, wondering how long she could fuck Dawn's hole until the blonde would push her away. Kennedy continued to plow the once-tight hole, the ring of muscle now a bright red from the relentless fucking. But Dawn didn't push her away. Instead, she lay there quietly until she caught her breath. \n\nDawn had welcomed Kennedy's careless treatment of her rearhole with open arms and an open asshole. This utter anal submission made Kennedy so hot and bothered that her own pussy clenched down around the dildo on the inside of her strap-on. She ground her hips against Dawn's bottom, relishing the feeling of the dildo stretching her pussy walls while enjoying the sight of Dawn's submissive asshole opening around her cock.\n\nNow satisfied, Kennedy slowly withdrew her cock from Dawn's raw hole. \n\nThe cockhead dragged on Dawn's anal ring, pulling it outwards as it left. Dawn moaned softly at the friction. Although her sphincter hadn't been able to fully close for quite some time, this was wholly different. This time, her shithole gaped open, showing off how red and chafed her rectal passage had become from the painful reaming. \n\nKennedy felt a pang of guilt. Here was a beautiful girl, and Kennedy had used her hole like it was a mere toy, ruining it and ensuring that Dawn would't be able to walk properly tomorrow.\n\nKennedy quickly retrieved a tub of soothing cream from her little box of toys. She coated her fingers liberally with the cream, then plunged them inside Dawn's asshole, scissoring them and coating Dawn's insides.\n\nThe younger girl whimpered, but made no move to get away at all. Kennedy tried her best, but her fingers weren't long enough to reach the deeper parts of Dawn's raw hole.\n\nShe had no choice but to pull out a slimmer, but longer dildo and coat that in cream instead. She pushed it as deep as she dared, moving it around to ensure that all of Dawn's sore passage was treated. \n\nTo her shock and awe, Dawn's hole clenched around the slimmer dildo, tightening up as much as it could. It twitched weakly, spasming from time to time as the sudden tender fucking of that abused shitter lit up the pleasure nerves along Dawn's anal cavity. \n\nKennedy fucked her through yet another weak orgasm and waited until Dawn came down from her high, completely spent, to remove the dildo. \n\nThe dark-haired girl stood up on shaky legs. She unbuckled her harness to find that her own juices had leaked out the side, coating the insides of her thighs all the way down to her knees. Kennedy removed the strap-on and the dildo, putting them in the bathroom so she could clean them later. Then she came back out to tend to Dawn.\n\nThe younger girl was completely exhausted by the force of her painal orgasms, unable to move. Kennedy grabbed her legs and pushed them onto the bed, then flipped Dawn over to lie on her back. Dawn's angelic face was streaked with tears from how hard she had cried, which made Kennedy feel even guiltier. Dawn looked at her under half lidded eyes. \n\n\"Thank you, Kennedy. I enjoyed that,\" Dawn said, mustering a tired smile.\n\n\"... You're welcome,\" Kennedy replied, a bit of her guilt disappearing. There was no shame in hurting the asshole of a beautiful girl if the beautiful girl wanted it, right? \n\nDawn yawned.\n\n\"Kennedy, do me a favour, plug me back up?\" Dawn asked, eyes already closing from exhaustion. \n\nKennedy laughed in disbelief. Dawn was truly an anal slut. Even after so much painal, Dawn couldn't go to bed without her ass filled. \n\nKennedy grabbed the anal plug from where it lay, then pushed Dawn's legs up to slot it back into place. Unfortunately, Dawn's anus still had yet to recover from its brutal pounding, and couldn't keep the plug in place!\n\nDawn moaned with disappointment when she felt the plug slip back out. Kennedy tried a few more times, but the hole was too fucked out. It needed something bigger.\n\nKennedy grinned to herself, she had just the thing.\n\nShe grabbed her box of toys and rummaged around inside, finally pulling out a cock shaped like a dog's cock. It was a kink that one of her exes used to have. The base of the silicone cock had a knot and functioned almost like a plug!\n\nDawn watched her, half asleep and confused. She made a little sound of pleasure when Kennedy started to push the cock inside. Her asshole opened up easily, swallowing up the cock. Dawn moaned as the fake round knot pushed at her ruined anal ring, then slipped inside with a squelch. Her sphincter twitched, then settled around the knot as if it was always meant to be there. \n\nHer anal lust completely and utterly satisfied, and her sore hole plugged up, Dawn the anal slut fell asleep with a smile on her face.\n\n--\n\nUp next, more lesbian anal and some gangbang action! Remember to vote and comment!"
    ],
    "authorname": "kinkbugs",
    "tags": [
        "barebacking",
        "erotic couplings",
        "lesbian",
        "lesbian anal",
        "painal",
        "strapon",
        "anal",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/dawns-anal-awakening-ch-03"
}