{
    "title": "Cheryl's Irresistible Legs",
    "pages": [
        "After high school I worked odd jobs for two years saving for college. I lived at home until I was 22, and then for the last few years of school I had enough money to move into a small house near campus with two friends. Living away from home was supposed to help my social life, but in reality I still had trouble meeting women and getting dates. Let alone getting laid. My roommates had much more success in that department. Most weekends at least one of them had a woman over for the night, and sometimes during week day evenings as well. They rarely stayed with one woman long mostly preferring to play the field and one night stands.\n\nMy sex life consisted of looking at porn online and masterbating. I have always had a fetish for women's legs, nylons, pantyhose, garter belts and high heels. Any one of those would get my attention up. So images or video of women in nylons were my normal inspiration. While one or both of my roommates might be fucking in their rooms I would put on headphones and listen to music or play video games. One night while in the kitchen making myself something to eat my roommate John came home with a very pretty woman. She was about 5 ft. 8 in. tall in her high heels. She wore a tight fitting black skirt, white blouse and black high heel pumps. She spoke with a charming and kind of sexy British accent. He introduced her to me as Helen. He offered her something to drink. We stood around in the kitchen talking while I cooked and they drank for a few minutes. I told them I would be done in a minute and leave them alone so they could sit in the living room in private.\n\nHelen looked me in the eyes and said, \"That's ok, we'll be going into his bedroom as soon as I finish my drink\". I assumed that is where they would end up, but I was surprised at her bluntness towards me. I liked her direct approach of saying what was on her mind. She finished her drink and they walked into his room. I stared at her legs as she walked away from me. I grew hard just looking at her. If she had been wearing nylons with seams up the back I probably would've cum right there in the kitchen.\n\nSince they were in his room I stayed in the living room to watch TV and eat. After about two minutes Helen walked out of the bedroom and over to the kitchen. She had left her purse on the counter. I couldn't help but glance over for another look at those legs. She caught me looking so I tried to say something to seem less obvious so I blurted out \"Is everything ok? can I get you anything?\" trying to sound like I'd get her more wine, but it sounded more out of place and weird. She just smiled at me and said, \"No thanks love, but if I do need anything I'll come find you\". I didn't know how to respond to that. I just stared at her realizing the top few buttons of her blouse were now undone and there was a good amount of cleavage from what were probably \"C\" cup breasts. Probably undone while John was fondling her.\n\nI didn't know if she was just trying to shock me (probably), was flirting with me (highly unlikely), or might have a wild and kinky side (you never know). I watched her walk into his room again and turn to look at me as she closed the door with a grin on her face. I went to my room to play some video games and try not to think about how I was still a virgin, and how John was having sex with a beautiful woman with fantastic legs that he probably didn't appreciate. Before I could get the headphones on I heard her clearly say \"First you need to lick my pussy before I'll consider sucking your dick\". That was it for me. No time for video games. I was going to sync the headset up to the computer to look at porn videos and stroke myself. While the computer booted up I clearly heard her moaning very loudly.\n\nI started stroking myself while listening. I felt like a pervert listening to John and Helen, but I was so hard and turned on I just kept running my hand up and down my 6 inch cock. I quickly went to my dresser and pulled out a black thigh high stocking I had bought. I imagined it was Helen's and I wrapped it around my dick and kept stroking with it. It felt soft and smooth against my rigid cock and I savored the feeling of it. I got closer to the wall to listen to them. Helen said \"Lay on the bed so I can sit on your face while I suck you.\" That triggered my orgasm right then and there. I hoped they didn't hear me grunt or moan as I came. Shooting rope after rope of cum uncontrollably all over the wall and floor. I jerked myself off again as I listened to her moaning while they fucked. They didn't say much, but didn't need too for my arousal. Helens loud moaning was more than enough for me especially with the image of her legs in that skirt and those heels.\n\nI had cum twice in 10 minutes just from listening to them fuck. I sat on the bed to relax and wait for my erection to diminish so I could get a drink of water to cool off. I could still hear her moaning which wasn't helping matters. I was still not fully flaccid yet, but I didn't think much about it. So I put on my shorts and a t-shirt and went into the kitchen. Her moaning finally quieted down or stopped altogether. I drank a large glass of water and was getting another to take into my room when Helen walked out of John's room again closing the door behind her. She was wearing his full length dark blue robe and I assumed she was naked underneath. As she walkedI could see her smooth tone thighs where the robe met in the front. She had taken off her heels, which was probably for the best because seeing her in those would've probably had me growing hard again with no place to hide my arousal.\n\nShe walked into the kitchen and sat on the bar stool at the counter and crossed her legs. She said \"Oh good your still here. There is something you can do for me. Get me another glass of wine.\" It was more of an order, but I found it erotic to be obeying her simple command. I filled her glass from earlier and handed it to her. She asked what I was up to tonight with a slight smirk on her face. I wondered if she knew I was listening to them. While I wasn't erect, there was a slight bulge in my shorts and she might have noticed it. I told her I was just hanging out listening to music and relaxing. Trying to sound casual and not like the pervert who just jerked off with a stocking to a mental image of her as he listened to her moan in orgasmic bliss.\n\nShe finished her glass and demanded another. I filled it as ordered and she got up to walk back to his room with the wine glass in her hand saying \"Well time for round two. Maybe he will do better this time. You should get out and get laid. It's a lot more fun than listening to music or whatever you are doing. I'll let you know if I need anything else.\" And with that she walked back into his bedroom. I went to my room, put in some ear buds and fell asleep to some music instead of listening to them screw. I don't think I could take any more of that. My dick would be way to sore from all the stroking if I kept listening. The next morning I had to leave early so I didn't see her leave, and never saw her again. John said she was \"Kind of a bitch\" and didn't care to see her again, but I got the impression she got what she wanted from him and wasn't overly impressed and wasn't looking to come back.\n\nAfter that night I was even more determined to get laid. My part time job and school kept me busy. So I still had trouble meeting women. One day at work I was told to report to a different department because they needed help there. I went over to the other building and got put to work right away. I was introduced to a very nice woman named Cheryl who has a very attractive face with a angelic soft quality to it, shoulder length light blonde hair, glasses, what I would guess are C cup breasts. She was in a skirt wearing tan nylons. She has shapely calves and the way her skirt hugged her thighs and butt, her sexy figure was quite obvious. Her high heels were only about inch and half tall. More for practicality of work than for style, but I kept staring at her legs. She was 26 years old about 5 ft. 4 in. tall and maybe 120 lbs. Not a model by any means, but still very pretty in an elegant and obvious manner. I knew she was out of my league, but my weakness for skirts and nylons were getting the better of me. She was my part time supervisor while helping out in the new department. We worked together a lot and she caught me looking at her several times. I was 23, almost 24, at the time. I am athletic and have a descent build, but I'm nothing special. 6 ft. tall and about 165 lbs. No big muscles or 6 pack abs or broad shoulders, but I exercised when I could just to stay in shape. I have short brown hair and would've said my looks were average.\n\nCheryl always wore skirts to work. Nothing flashy just simple plain colors that were either just above or just below the knee. Always looking feminine and professional at the same time. I couldn't help but stare at her shapely calves and she always wore nylons. As I worked I'd be wondering if they were held up by a garter belt or if they were pantyhose or just stay up thigh high nylons. I would try and make small talk with her whenever I could and even tried flirting a little bit, but I'm socially awkward and am not good at talking to people. Especially women. Especially women I'm attracted too. She didn't seem to mind my awkwardness, and would do more than her share to carry a conversation. Often giggling when I tried to be funny or amusing. I had spent three weeks working with her and knew I was about to go back to my regular job in the main office building. I decided it was now or never to ask her out.\n\nI didn't have much of a chance with this beautiful woman, but I was thinking with my penis and not my brain. As my supervisor it may have been wrong for her to go on a date with me from a professional point of view, but that was about to end. When we were finally alone in the break room I pointed out how it was my last day tomorrow and wondered if she would like to get a drink or dinner Friday or Saturday night. She said, \"You're cute and I've liked working with you so sure why not\". It wasn't exactly and enthusiastic response, but it was still a yes. A yes from a beautiful woman. For three weeks I'd been staring at her legs then going home and jerking off to the idea of running my hands up and down them, of kissing them, and of licking them. Now I was going to get a chance if I just played my cards right.\n\nAfter work Friday I went home showered, changed clothes and met her at the restaurant she had chosen. I was crushed to see she wasn't wearing a skirt or heels. She still looked stunning in tight jeans and loose fitting top. The restaurant was fairly casual so it was appropriate attire, but I still longed to run my hand up her legs under her skirt and hopefully bury my head between her thighs. I guess I had very high expectations for a first date between us, and for no other reason than I was horny. Dinner went well and I had a good time, and I hoped she did as well.\n\nAs the night went on I had forgotten all about touching and kissing her legs and of the chance of getting laid. I just enjoyed being with her. However, I felt something was missing and it wasn't just her skirt. She must have a good time too because she said we should see a movie Saturday afternoon, and asked me to pick her up. I eagerly said yes and walked her to her car. She gave me a quick kiss goodnight and said she'd see me tomorrow.\n\nWhen I got home I was still overly optimistic about my chances with her, and even though I had a good time talking with her I was still trying to figure out what seemed to be missing. I realized she wasn't acting as my supervisor anymore. She wasn't telling me what to do, she wasn't in charge and I liked that aspect of our interaction together in some ways. Looking at porn online had led me to a lot of different fetishes and interests. My love of women's legs sometimes led to images of dominant women having their legs worshipped. That type of thing never occurred to me as something I'd enjoy, but the more I saw the more I looked for it. I was starting to think I had a submissive side, but wasn't sure if it was truly that or just my fetish for legs and nylons, and my desire to have sex for the first time. Mostly I had enjoyed just spending time with Cheryl. Not being bossed around was just different. It was not a problem for me. She was easy going and put me at ease on our date.\n\nThe next day I picked her up at her apartment and I suggested she pick the movie for us to see. She was wearing jeans and a casual shirt again, but still her attractiveness was obvious. No luck on skirt and heels again. On the drive there she said she'd like to cook me dinner after if I was interested. I immediately said yes probably sounding overly eager.\n\nThe movie was fine, but I kept thinking about going back to her place. When we got there she led me in and we sat and talked for a few minutes. She got up to make some pasta and salad and I followed her into the kitchen offering to help. I enjoyed our time together and talking with her was easy and natural, which is not normal for me. I was really starting to like her and had actually stopped thinking about what might happen sexually. Dinner was good and we talked for hours after eating. The less I thought about sex the better the date seem to go.\n\nEventually while sitting on her couch she leaned in and kissed me. I took the hint and leaned over and kissed longer this time. We started making out and gently touching each other. She pushed her tongue into my mouth and played with my tongue. I did the same to her and sucked on her upper lip. I ran my hand up the outside of her jean covered thigh several times. I carefully felt her perfectly pert left breast. Eventually she reached down and rubbed my cock through my pants. Up until now I've had experience with making out a few times with girls in college and high school, but this was now new territory. I got very hard very quickly. This continued on for about 30 minutes when she finally pulled back from me. I had one hand between her legs rubbing her through her jeans and I thought maybe I had gotten a little too rough or had gone too far. I thought it was over and she was going to ask me to leave when she said \"It's getting late, why don't we go into the bedroom.\" I stood up and she grabbed my hand and I followed her to her room.\n\nShe said she would be right back and stepped into the attached bathroom. I stood there not knowing what to do. In a minute she returned. She stepped towards me wearing only a black bra and matching lacy panties. She pointed out that I was very over dressed. I should've already gotten down to at least my underwear but was too inexperienced to know that. She lit about a dozen candles and then shut off the lights. I slipped off my clothes standing before her in only a pair of checkered boxer shorts my erection clearly showing under them.\n\nShe reach forward and grabbed me by the cock and said \"I'm glad you approve of my attire\". I nodded and said how sexy she looked. We laid down on the bed. My hands roamed over her body. Taking my time not to miss an inch of her. As we kissed and touched I had a sudden realization and got very nervous. Not just because this was a first for me, but because I had really fallen for her and didn't want to mess this up between us. I figured if she likes me before sex hopefully she still will after. I kissed her lips and neck as I explored her. Her panties were cut high on the hips and showed off her legs. I kept drifting my hand back to her legs while she reached into my shorts and took hold of my eager dick. \"Someone is ready to go isn't he\" she said. I paused trying to think of what to say when she realized what was going on.\n\n\"Oh my gosh, are you a virgin?\" she asked compassionately. I could only nod in embarrassment. \"Is that ok?\" I asked. She just smiled and seemed to like the idea of taking my virginity. I went back to kissing her and she ran her hand up and down my rock hard shaft. I thought I would have good stamina when I finally got to have sex because of how much I masterbated, but the feel of someone else touching me was quickly bringing me to the point of no return. She was incredible at how she stroked me, and I pulled my hips away from her hand and started kissing down her chest. I hoped she didn't realize I was trying not to cum already and that I just wanted to explore her sexy body more, which was definitely true. She reached up and slid off her bra for me. I took her right nipple into my mouth and licked and sucked it. Her full breasts felt amazing in my hand and mouth. This was better than I had ever imagined. My right hand slid between her legs and played with her pussy as best I could through her panties. I didn't know if I was doing it well, but I could feel her wetness through them. I could've slipped my hand inside of them easily just as she had done to me, but I didn't realize it at the moment.\n\nI swirled my tongue around her nipple and sucked on it. Then I'd start kissing the rest of her breast trying not to miss a spot. I'd keep alternating between left and right. I was enjoying every second of it and was not calming down much. I desperately hoped she was enjoying it as well. I decided to be bold and take a chance so I slid down further and began kissing her stomach. As much as I enjoyed the feel of her hard nipples in my mouth and sucking on her firm breasts I wanted to feel her thighs wrapped around my head. It was selfish to be thinking about what I wanted, but at the moment I was just so wrapped up in the experience. She laid back and let me move lower. I planted small kisses down her tummy and sides as I tried not to seem over anxious to plunge my tongue inside of her. She gently put her hands on my shoulders and encouraged me to go lower. That was all I needed and I moved down and softly kissed on the front of her panties. My hands roamed up and down her legs as I kissed her crotch. Occasionally moving to the edges of her panties or even kissing her hips.\n\nI was lost in lust and desire. I started kissing her left thigh while I rubbed her pussy through her panties. Then I moved back up and kissed across the small strip of fabric right over her pussy lips. She moaned softly in approval. I started kissing down her right thigh all the way to her knee. Then I licked up her leg to her now dripping cunt. I carefully grabbed her panties and began sliding them down her legs. I kissed each leg as I went until I slid them off over her feet. I kissed he tops of her feet and then the bottoms then kissed and licked my way back up until I was inches from Cheryl's bare pussy. It was shaved smooth and looked perfect to my virgin eyes. I placed a soft kiss right on the lips and then as gently as I could I licked up and down each side. I was new at this and nervous and desperately wanted to make her feel good. I had read and seen enough online about going down on a woman to know what I was supposed to do in general, but this was finally the real thing.\n\nEach woman is different and this wasn't a porn actress getting licked for a video camera. After teasing her as much as I thought I should I pushed my tongue against her sex and made a long hard lick from the bottom all the way up to the top pressing hard and getting my tongue as deep as I could inside her wetness. She moaned and put her hands on the back of my head holding me in place. I licked and kissed her pussy. It took some time but I figured out where her clit is and licked it often before going lower and slipping my tongue into her wet folds. Then I'd move back up and flick her clit with my tongue before sucking it between my lips. She started to squeeze my face between her sexy smooth firm thighs. I was in heaven. I kept licking and sucking and finally she cried out \"Don't stop, don't ever stop, oh FUCK I'M CUMMING!\" I licked her clit for all I was worth. I didn't care how hard she was squeezing my head between those sexy thighs or how hard she pushed my face against her crotch. I was loving every second of this experience. After a minute she unlocked her thighs from my head and pushed my head back and away from her. I was worried I did something wrong, but she just needed a minute to calm down. She was hyper sensitive at the moment and as much as I wanted to keep going down on her she need some time.",
        "I never stopped rubbing her legs the entire time and even now was still stroking them. She looked down at me between her legs and told me to take off my shorts. I had forgotten all about my cock and actually fucking her. I was throbbing from excitement. I was hoping to have calmed down but I was still hard as a steel beam and felt like I could burst at the slightest touch. I liked that she commanded me to take them off and did as I was told.\n\nI moved up between her legs, but she told me to wait. She guided me onto my back and straddled me. I could feel her wetness on my stomach and she looked down at me and smiled. She said, \"You have my pussy juice all over your face\" and she giggled. She then took her right hand and wiped my face off as best she could before leaning down and kissing me. I found the idea of her kissing me after going down on her erotic and kinky. As she did she moved her body lower until her pussy rubbed against my cock. She sat up briefly sitting on the underside of my erection sandwiching it between her wet snatch and my stomach. She looked me in the eyes as she positioned herself above me and lowered herself down onto my firm dick. She wanted to see my expression as I experienced this amazing sensation for the first time.\n\nI just moaned loudly as I stared up at her beautiful smile. She settled herself down fully impaled on all 6 inches of me. I clenched my muscles trying to resist cumming. I blurted out \"Oh fuck Cheryl you feel so incredible\". She said \"Don't move yet, you're so thick I love the feel of your cock inside me\". Hearing that made the urge to cum even greater. While I wasn't long at least I had some girth and she was enjoying it. She very, very slowly raised herself up and then slowly moved down again. She repeated it a few times and told me to just be still. I couldn't help but throb inside of her. My instinct was to thrust up into her and cum, but she went incredibly slow and guided me as we made love. She knew I wouldn't last long so she slid down so I was balls deep inside of her warm dripping pussy.\n\nShe looked at me and said caringly \"It's ok, just let it happen\". Then she leaned down and kissed me. As she pulled up again so I was almost completely out of her she then dropped down onto me suddenly and I lost all control. I shouted \"Oh Cheryl, Cheryl Oh fuck oh Cheryl\". I don't know how many times I repeated it. My cock erupted inside of her spasming over and over pumping my seed into her depths. I've never cum so hard or so much in my life. Just as the last few pumps were coming out of me she raised up and down quickly on me. Bouncing hard I could feel her cute ass hitting my balls. She was riding me hard and fast. She wanted to cum on my cock before I got soft and she knew just the right way to use it to make herself feel good. I could feel her tighten around me and leaned down and pressed herself into my chest. I wrapped my arms around her and held her as she shook and spasmed with my cock deep inside of her.\n\nAfter she had finished cumming she just laid on me letting me hold her. I could feel our mixed juices running down my balls onto the bed, but I just wanted to lay there and hold her. After several minutes she rolled off of me. I was still panting and semi-hard. I felt good knowing I was able to make her cum with my mouth and tongue and that even though I only lasted a very short time that she was able to make herself cum with my dick anyway.\n\nShe pulled the sheet up over herself and relaxed. I reached my hand over to her hand and held it while we lay there breathing. It had been a wonderful experience for me and I hoped for her as well. She finally spoke and said \"I hope you don't think less of me. I usually don't have sex on the second date.\" I replied, \"Yeah me either\". That got a laugh out of her. She was so caring and sweet with me. \"I was so nervous when you said you were a virgin. That is a lot of pressure on a woman to make it a good experience for the man.\" I told her, \"I'm sorry to have made you nervous it didn't show at all, but I was more nervous. Trust me on that. You were incredible in every way. It was a perfect experience for me.\" Sure, actually having sex was fantastic, but I genuinely cared about Cheryl. She was beautiful, caring, thoughtful, sweet and actually easy for me to talk to compared to most people. She is a special woman that I was lucky enough to be my first. I didn't know if this was going to turn into a relationship, but I knew I wanted it too and not just because of the sex.\n\nI felt I should probably clean myself up a bit. I asked her to excuse me for a second and pulled the sheet away from myself as I turned to get off the bed. I realized I was naked in-front of a woman and was not sure the protocol of what I should do. Should I walk naked to the bathroom or put on my boxers? I decided on the conservative approach and reach down and grabbed my shorts and pulled them up my legs. I felt much more exposed and self-conscious now that I was not so horny and eager. I went into the bathroom and washed my face and cleaned our cum off my penis and balls.\n\nI returned to the bed, but before I laid back down Cheryl said, \"What do you think your doing? If you want to get back into bed those have to come off\" pointing at my underwear. I slid them down my legs and went to crawl under the sheet, but she pulled it away. I laid there exposed and naked. \"I like the way you look with all the public hair shaved off. It looks cleaner, sexier.\" She said bluntly. \"Thanks\" was all I could think to say. She wrapped the sheet around her body and got up walking to the bathroom.\n\nShe returned a few minutes later having cleaned herself up as well. Just before getting to the bed she dropped the sheet standing before me naked. My cock quickly began to grow hard. \"WOW!\" is all I said at first just staring at her glorious nakedness. Her cute smile, amazing breasts, hourglass hips and perfect legs all right there for me to stare at. \"You are so fucking sexy!\" I said without thinking. She smiled and climbed onto the bed next to me. She reached down and began stroking me. I grabbed her face in both hands and kissed her. We just lay there gently touching each other for a few minutes. She broke the silence \"I hope you don't think I was being too pushy when I used my hands on your shoulders to push you down lower. When you moved down from my breasts I was hoping you'd go down on me, but you stopped at my tummy. Most guys don't go down on a girl the first time and some never do. I also just thought it would be easier for your first time if I was on top. That way you could lay back and enjoy it.\"\n\nI just smiled, \"I didn't think you were pushy. That is where I was headed and hoped you were ok with it. I just couldn't resist kissing as much of you as I could on the way there. In fact, I kinda liked the guidance to know it was ok to keep going. And when you wanted to be on top, I really liked looking at you and feeling you ride me. I wouldn't change a thing.\" She told me it would always be ok for me to go down on her. \"I thought you forgot about my pussy for a while there you spent so much time kissing and licking my legs.\" I told her I didn't forget, but she had great legs and I'm sorry for staring at them so much at work. She realized I'm a leg man and told me she liked my attention to them as long as I made my way back up to her sweet spot. I said \"I was hoping I did it right, but any guidance you wanted to give I'd be happy to listen\" She told me she will have to teach me to use my fingers at the same time. I eagerly replied \"Well practice makes perfect so I'll practice every change you give me\".\n\nShe told me she hoped we get lots of chances for me to practice, but now she wanted me inside of her again. This time I moved on top of her. She spread her legs and my fully erect cock lay against her pussy and I laid on her and kissed her. Her breasts felt great against my chest. My arms supporting me above her, but still with our bodies pressed together. I tried to seem like I knew what I was doing so I moved my hips a little rubbing my engorged head up and down her already wet pussy lips. She extended her legs up and around my waist and quietly said \"Give me your cock right now\". I pushed forward and slipped inside her as slowly as I could. Our bodies one. We kissed with our tongues exploring each other's mouths and I started to slowly thrust in and out of her. My hands explored her body. One hand always holding me up the other rubbing a tit or her thigh. Her legs squeezing my torso as I pumped in and out of her.\n\nI was doing better from becoming over excited this time, but was still approaching climax too quickly. I wanted to keep this up all night. I slowed my pace and kept kissing her, but her legs kept pulling me inside her showing me what she wanted from me. I put my head next to hers and she wrapped one arm around my back the other hand on the back of my head. I sped up my pistoning in and out of her. I was losing all control. She shouted out \"I'm going to cum, don't stop, don't stop, oh cum with me, oh fuck\" and then she bit hard onto my shoulder as her body convulsed under me. I couldn't have stopped if I wanted too. I was grateful she told me to cum because I was going to either way. Having cum once already about an hour ago I did not think I'd have much left, but her tight pussy milked me over and over. I just kept pumping my load into her and she just kept moaning as I did. \"Oh Cheryl\" was all I managed to say, but I just kept repeating it as we climaxed together. I was on top of her, fucking her, but it was really her directing what was going on. Using her body and words to instruct me how to make love to her. After we both stopped moving I rested on my forearm's so my weight was not on top of her, but our bodies still pressed together. My spent dick still held tight by her wonderful snatch. We both breathed heavily, out sweaty bodies exhausted but satisfied. I finally rolled off of her. She leaned over and kissed me. We each lay on our sides facing each other.\n\nThere was an obvious bright red mark on my shoulder from where she had bit me. I honestly didn't notice it. \"Oh shit, I'm so sorry. I didn't mean to do that. I was just caught up in the moment.\" She reached over and tried to make it feel better by rubbing it. I brushed the hair that was in her face away and said \"I'm ok. At the time I barely noticed it. I'll be fine. Cheryl you can do whatever you want and I'm sure I'll enjoy it\".\n\nI hadn't meant it to sound submissive, but there was definitely an obvious submissive tone to it. She picked up on it and said \"I'm also sorry I keep giving you orders on how to make love to me and when to cum. I guess I'm just use to being your supervisor.\" I figured I should just be open and honest with her so I told her it was kind of exciting to have her give me orders or commands in bed. It let me know what she wanted and how to make her feel good. Both of us were nervous about opening up to each other, but we both seemed to want our relationship to continue and so we were now exposing ourselves more than physically to each other and just being honest. She decided to take a chance and said \"Well if that's the case this might lead to some new, interesting, and kinky things between us in the bedroom.\" I told her I liked the sound of that, but that I wanted it to be just that. In the bedroom. \"I really like you Cheryl. You are smart, beautiful, sexy, sweet, caring and so easy to get along with. I hope I'm not getting ahead of myself, but I want date you. I'd like us to have a relationship based on more than just sex. So I want us to be equals all the time, but I will gladly learn anything you want to teach me in the bedroom. I will eagerly do whatever you say. I will do whatever I can to fulfill any sexual fantasy you have\". Before I could finish she placed a finger to my lips to shut me up. Then she moved closer and softly kissed my lips. \"I want those things too. I've always had a dominant side to me. Most men don't like to have a woman in control especially in the bedroom. So I've always tried not to express it with any men I've dated. I'm glad I can now be honest about it with someone. I want a relationship too. One that is not based on what goes on in the bedroom. That way if sexually something isn't compatible between us there is still the foundation of our relationship.\"\n\nWe kissed again. This time she reached down and stroked me. Then she moved her hand and massaged my balls. She gently cupped and squeezed them. Her first real physical dominant gesture. Then she pulled them down. Not enough to hurt me just enough to let me know she had them and could do what she wanted with them. I liked the feel. No one had ever played with my balls before and certainly not been rough with them. I started growing hard again. I didn't know if I had it in me, but her touch was inspiring me. She pulled the sheet down to watch me grow hard from her touch. \"I guess you like this huh?\" she said as she continued to squeeze and pull my balls. I just nodded and enjoyed her touch. She got to her knees next to my hip. With her other hand she started stroking me. Up and down her hand traveled my 6 inch member. She would stop and rub her thumb just under the head and make me twitch. \"Oh Cheryl you are so good at touching me\" I said to her.\n\nShe immediately stopped and climbed off the bed and picked up her black lacy panties. I didn't know what I had done wrong. I thought she was going to get dressed and that we were done. Maybe she just did that to tease me and get me hard and now wanted to leave me frustrated to see what I would do. Instead she climbed back onto the bed. \"I love hearing you moan and call out my name, but I have decided I am going to play with your body and I don't want you distracting me.\" With that she took another chance doing something kinky and placed her panties into my mouth as a gag. I could've easily spit them out if I wanted too, but I got a strange thrill from it. I could smell her pussy and perfume on them and enjoyed the taste. She spread my legs and kneeled between them. She grabbed my balls again and pulled down. My hard cock pointed straight up as she did it. Then she gently slapped my shaft. When she saw I wasn't protesting she continued. Each slap a little harder. Side to side or right against the underside of it. If I was flaccid it would've been incredibly painful, but being fully erect it only stung. I was enjoying it and started to throb.\n\n\"I'm going to enjoy using this cock however I want\". Then she started stroking me having never released my balls. Having cum twice already I thought I would be able to hold off for a long time and wasn't even sure I could cum again. Cheryl had other ideas and knew better. She quickly brought me right to the edge and moments before I would reach the point of no return she would stop. She would let me calm down and then start again. She did this three times. Watching my expression each time as she played me like a puppet. After the third time she released my balls and pulled the panties from my mouth. Between my heavy breaths I said \"Thank you for touching me\". She smiled and rolled onto her back. \"Your turn to touch me now.\"\n\nI wasn't sure what to do. Was she going to tell me what to touch and when? Should I use my hands or my mouth? I just decided to go for it and moved down the bed just slightly so my head was next to her chest. She just lay there as I reach across her body and rubbed her farthest breast. I took her other tit into my mouth and sucked her nipple. She sighed with contentment. My hand moved from her breasts and traveled down her side to her hip and then down her leg as far as I could reach. I rubbed her thigh a few times and brought my hand up along her body to her breast again. I played with her nipple rolling it between my fingers while I flicked the other one with my tongue. Then I let my hand wander down to her outer thigh again. This time I propped myself up a bit so I could lean across her body and take her other nipple into my mouth. She kept moaning as I worshipped her body.\n\nThis time as I slid my hand back up her body she reached down and grabbed my wrist. She guided my hand to her sex showing me where to touch her. I gently rubbed her crotch and her pussy lips. I would part my fingers so they would slide down the outside of each side of her wet folds. Then bring them together and slide up along her length. Occasionally cupping her entire cunt in my hand and pressing down hoping to stimulate her clit. After a few minutes I slid my middle finger inside of her. She moaned \"Oh yes\" as I did. I was now alternating between which of her magnificent tits I was sucking as I finger fucked her. I pushed my finger in and out quickly. She told me to slow down and to use my index and middle finger. I did as I was told and gently fingered her. She reached down and pushed my hand a little lower so I was moving it inside of her at a slightly different angle. She pushed my thumb down against her clit and told me to rub right there while I moved my fingers.\n\nShe had guided me to her G spot and her clit to give her maximum pleasure. I kept licking her breasts as she grew in excitement. I had just moved my head to her closest nipple when she placed her hand on the back of my head holding it against her. I licked and sucked it as best as I could while my fingers moved back and forth inside of her and my thumb rubbed her clit. \"That's it, just like that, FUCK FUCK FUCK!\" was all she could say as her climax overwhelmed her. Her thighs squeezed my hand and she held my head firm against her as I licked. She came hard all over my fingers and then ordered me to stop. She released her grip on me with her hand and thighs and I rolled over onto my back next to her. I was still rock hard laying there naked next to Cheryl's naked post orgasmic body. She caught her breath and then grabbed me by the hand that had been fingering her. She moved my hand up to my mouth and placed my index and middle finger in my mouth and told me to suck them. I closed my lips around them and licked them as she pulled my hand away. She leaned close to me and said \"Don't forget that was my cum and yours on your fingers\" and smiled at me. I had forgotten about cumming inside of her earlier. At this point I didn't care. It was erotic and sexy as hell. She had a great sexual imagination and I longed to let her explore it with me. She then put the same two fingers in her mouth and sucked on them. It felt good to feel her lips on my fingers like that, and she used her tongue on them as well while they were in her mouth. It was more symbolic of her to lick them after I did, but it drove the kinky point home.\n\nShe reached down and gave my shaft a few quick strokes then mounted me. Her thighs on each side of my torso. She quickly impaled herself onto me. Her pussy still soaked from her orgasm. This time it wasn't slow and passionate. This time it was physical and raw. She wanted cock and I had one. She quickly started bouncing up and down on me. I could feel her ass push down into my balls each time she slid down. She was moving up and down fast enjoying the feel of it all and so was I. I moaned out her name again. She stopped as before and placed the panties back in my mouth. When she did I couldn't stop my cock from throbbing inside of her. She felt it and smiled knowing the panty gag was exciting for me as well as for her.\n\nBefore slipping me inside of her again she turned around. I now had a great view of her ass, but couldn't see her face or tits. She kept her balance on her feet squatting above me and with one hand reached down and took a hold of my dick. She placed it at her entrance and lowered herself down. The tight wet feeling of her cunt is amazing. This new angle of penetration was providing a totally different sensation too. She leaned back supporting herself over me with her hands and feet. Her fitness of holding herself like that was impressive. She said \"Fuck me!\" and I began to thrust up into her. She was able to hold herself still as I tried to press up into her as much as possible on each pelvic thrust. I reach up around her and grabbed her tits. Her nipples were already hard and felt good to touch. She just started mumbling \"Yes fuck yes fuck yes fuck\" as I get pushing in and out of her. She sat forward moving off her feet to her knees sitting upright on me so I could no longer feel her breasts. Her full weight on my hips stopped my thrusting and she just let herself be impaled on me. She reached down and played with her clit all while still muttering \"Yes fuck\". After a minute or so she finally stopped cumming.",
        "I felt proud that I had not exploded yet. More from her experience rather than my control, but I was still glad she came again. She twisted around on me never taking my erection out of her. She hadn't fully calmed down from her orgasm yet, but she tried to rub her clit again this time so I could watch. As she did her overly sensitive body tensed and I felt her thighs squeeze against my hips. Instead she raised herself up off of my still eager dick and slowly slipped her ring and middle finger inside her sex. Then with her other hand she pulled her panties from my mouth. She replaced them with her wet gooey fingers. I eagerly sucked them tasting her juices. She pulled them almost completely out of my mouth and then slowly slid them back in at the same exact time she slid back down onto my cock. I kept licking and sucking her fingers and she started to fuck my mouth with her fingers. Eventually I even started bobbing my head forward and back as I licked them.\n\nShe soon felt ready for more and pulled her fingers from my mouth and put her panties back to gag me. She rode me hard and fast. Slamming down hard onto me. I instinctively tried to thrust up into her and match her movements, but she placed her palm firmly on my chest to signal me to not move. I did as she wanted and let her ride me again. Soon she was cumming all over my cock again. This time just as she started to orgasm she raised herself up so I was only about half way inside of her. She stayed like that for a few seconds and then dropped down onto me. She placed both hands on my chest and scratched at me as she slowly ground her clit into my crotch. This orgasm didn't seem as intense for her and she soon started moving on me again. She could tell by my expression that I was getting close and she let me slide completely out of her. My cock slapping my stomach as it fell free of her. I was throbbing and covered in her cunt secretions. She then started to rub herself up and down the length of the underside of my shaft. Never letting me slip inside her velvety glove. Her wetness and her weight on me felt good and I knew I was about to cum again. Just before she picked up her pace to finish me off she reach up with a hand and grabbed me by my hair lifting my head up so I was staring at her pussy as it rubbed me. My chin pressed hard into my chest. Just as she did that she gently whispered \"Cum now\" and without control over myself I came as instructed. She kept rubbing me as my cock spewed my cream onto my own face and chest. Being my third climax that night I did not have as much cum so I was fortunate in myself facial to only have two blasts hit me squarely in the face. Most of it catching my cheek and her panties still clenched in my mouth. The rest shot onto my chest and stomach. When I had finished she just kept rubbing herself on me. She enjoyed the feel of my cock head and shaft stroking her clit and she had another orgasm as I lay spent beneath her.\n\nShe finally laid onto my cum stained body and pulled the panties from my mouth and thrust her tongue into it. She took her hand and wiped my cum off my cheek. We kissed deeply for a moment and then she laid her head on my chest not caring if my semen got on her face or in her hair. She breathlessly asked \"Did you like that?\" I was just as out of breath and could only whisper \"Yes I liked it. I've liked everything about today with you.\" \"Me too\" was all she could say.\n\nWe both soon fell asleep. Her naked body on mine. Both sexually spent, both sweaty, and sticky with cum. We only slept a few minutes. She moved to climb off of me. I didn't know what to do. I was a mess, I didn't have a change of clothes or anything with me to spend the night. I didn't know if she wanted me too or not. Before meeting Cheryl my ideal sex scenario would've been licking pussy, fucking and going home to relax. Now with Cheryl I wanted to stay. I wanted to hold her and wake up with her. Not knowing what to do or say I just leaned over and kissed her softly on the lips. Lingering for a while to savor the feel of her lips against mine. When we parted she stroked my cheek and asked, \"You're staying the rest of the night right?\" I just smiled and nodded.\n\n\"Just so you know I'm going to be busy tomorrow. I don't want you to think I'm kicking you out in the morning. I just need to go clothes shopping and tomorrow is the only chance I will have to do it.\" I looked at her and decided to press my luck. \"Do you want some company while you shop?\" I asked hoping to get to spend the day with her. \"You really want to go clothes shopping?\" She responded. I thought for a second and gave her the most honest answer I could. \"No, but I like spending time with you. So if that's following you around stores carrying your shopping bags that is fine with me.\" She smiled and said \"Great it will be fun just hanging out together\". She pulled the sheet up over us both and rolled onto her side facing away from me. I moved closer to her, my chest against her back and placed an arm around her. We were both sound asleep within minutes.\n\nI awoke when she climbed out of bed to go into the bathroom. She didn't take the sheet and I watched her naked body strut across the room. She was still gorgeous and sexy. This was the morning after though. I was a mess in every way possible. She returned and stopped half way to the bed. Still naked she placed her hands on her hips and said \"Join me in the shower\". I didn't need to be told twice.\n\nShe got the water running and we crowded into the small shower together. The water felt good and I was already hard from just looking at her. She let me under the water first to clean off my hair and wash down a bit. She reached over and stroked my cock a few times then used it as a handle to move me around so she was under the water. She handed me a sponge and a bottle of liquid flowery smelling soap and said make sure I get every inch of her clean. I started with her neck and worked my way down. Her back was too me and when I was almost to her ass she turned so I could soap her breasts and stomach. As I did she would reach out and stroke me and then slap my cock once or twice. She turned back around and I washed her ass and the backs of her legs. I kneeled down to get her ankles and feet. She turned so I could wash the front of her legs.\n\nI was still kneeling and had worked my way up to her thighs when she backed up slightly placing her back against the shower wall. \"Use my tongue to clean the rest of me.\" She lifted her right leg and placed it over my shoulder. I buried my face in her snatch. I kissed and licked it all over for a few minutes before sliding my tongue inside of her. I lapped at her like a starving man eating for the first time in days. She told me to steady myself and she pressed down with her right leg onto my shoulder as she lifted her left leg up and rested it on my other shoulder. Her weight was now on me and leaning back against the shower wall. With the hot water running down my head and back I licked her clit and sucked it into my mouth. Then I'd move my tongue down and slid it in and out of her while she rubbed her clit against my nose. I moved back up and focused on her clit again. She let out a moan and called out my name as she came on my tongue and face. She stayed motionless for a minute and relaxed. She carefully placed her feet back on the floor of the shower. She said \"Get cleaned up and dry yourself off. I'll be in the bedroom. Leave the towel in the bathroom.\" I did as I was told to do. I quickly soaped and rinsed myself off. Got out and dried myself.\n\nI hung up the towel and walked back into her bedroom naked. She was sitting on the side of the bed. She had put on a bra and t-shirt, but nothing else. Her feet on the floor her legs parted to see her freshly licked pussy. I had not calmed down since seeing her naked before so I was still hard and ready to go. She motioned for me to come towards her. When I was a few steps away she commanded \"Kneel!\" I got down on my knees in front of her. \"Kiss my feet now!\" she barked. I lowered my head and kissed the top of each foot. As I lifted away from her she lifted her right foot and placed it against my face. \"Suck it\" was all she said and pushed her toes into my mouth. I do not have a foot fetish, but they are at the end of her sexy legs and I eagerly did as I was told. Soon it was her left foot I was sucking while her right dropped down and teased me erection. I was then told to kiss her shins and calves. I spent as long as she would let me kissing each leg. When she was satisfied she had me doing the same to both thighs. Then she grabbed my head and guided to her pussy again. She wanted more cunnilingus and I wanted to give her more. I kneeled on the floor at the side of the bed. She placed her legs over my shoulders and laid back onto the bed. I licked and kissed her as before. She was moaning and finally said \"Use your fingers inside me like I showed you before\". I slipped my fingers into her and found her G spot again. It was hard to lick her clit and finger her at the same time, but I managed and thanks to her guidance she had another powerful orgasm. When she had finished she used her foot to push me back and away from the bed.\n\nI sat there on the floor waiting to be told what to do next. She sat up and looked at me, \"You're a fast learner\" she said. I replied \"I have a great teacher but still think we should practice more\" and smiled. She reached behind her and grabbed two tan thigh high nylons that she had laid on the bed when I was in the shower. \"Help me put these on\" was her simple order and she handed one to me.\n\nI'd never put a woman's nylons on her before so I wasn't sure how to proceed. I rolled it up and placed it at her foot. She slipped it in and I gently pulled them up her curvy, smooth leg. She stood up when I got it past her knee and finally to her thigh. She handed me the next one and I repeated the process. This time she placed her hand on my shoulder to keep her balance as she lifted her foot. She sat back down and crossed her nylon covered legs with a swish sound.\n\n\"I think you've had enough pussy for one day, but I want to see you cum. Stroke yourself for me.\" This was new and slightly demeaning. I'd jerked off hundreds of times alone, but now I was supposed to do it in-front of her. I was still hard and kneeled in-front of her gradually stroking myself. She just watched as I played with my dick for her viewing enjoyment. I felt embarrassed to be touching myself like this, but it was also strange thrill. She encouraged me as I did it. \"That's it, stroke your cock for me\" and \"I love seeing your dick hard and ready to burst\". I stared at her beautiful legs and my hand played with my penis in front of her.\n\n\"Stop\" was her sudden order. I removed my hand and kneeled there before her naked and hard. She uncrossed her legs and brought her right foot forward. She slipped it under my balls and gently ran it up my sack and shaft and teased the head with her toes. The sensation was amazing. She did it a few times and then without warning she lightly kicked my balls. Normally this kind of thing would make a man double over in pain, but it was such a light tap that I certainly felt it, but not enough to be painful. She then kicked my veiny hard shaft this time a little harder.\n\n\"Stand\" was her next command. She re-crossed her legs as I stared at them lustfully while standing up. She reach forward and began to fondle my balls then gripped my rigid member in her palm and squeezed it hard. The head sticking up above her fist as she tightened her grip. \"I can feel your pulse in your dick\" she said looking up at me. She held me firm for a few more seconds and then began to stroke me gently. \"You can only cum when and if I say you can\". I nodded my acknowledgement of her order. She expertly masterbated me as I stood there. I began to moan and whimper trying to hold back the sensations she was giving me. I was almost there and desperate not to displease her so early in our relationship. She had to know I was losing it. \"Please may I cum?\" I finally blurted out. \"Ah that's what I've been waiting to hear. Do you want to cum for me, is that it? Let me hear you say it\" she responded to my plea. I asked again trying to do better this time \"Please may I cum for you?\" I begged. She stroked faster and pointed my cock at her shapely nylon covered thighs. \"Yes cum for me, cum on my legs! I know you want to cum for me\" and with that I erupted shooting my seed onto her thighs and shins. I was surprised at how much cum she stroked out of me based off the previous night's activities I thought I would be running on empty. She just kept tugging me, milking every drop she could until I had nothing left to give. Her legs were covered in my thick white jism. She playfully patted my balls after releasing me and said \"Well done\". She stood up and we embraced. Kissing each other like lovers do and holding each other tight.\n\n\"Why don't you go home and get cleaned up again and then come back and pick me up so we can go shopping together? Say about two hours from now? That will give us both time to shower and dress and for you to get back here ok\". I responded that I'll be back in two hours as was looking forward to our day together. She wrapped a small towel around her waist, just enough to cover her cute butt and crotch, while I got dressed. She walked me to the door and kissed me goodbye. \"Oh by the way while we are shopping you need to buy me a new pair of thigh highs\" she said pointing to the sperm stained ones on her glorious legs. \"I'll buy you nylons anytime you want\". I said as I walked out the door to my car.\n\nTo be continued..."
    ],
    "authorname": "Subleglover",
    "tags": [
        "legs",
        "first time",
        "stockings",
        "high heels",
        "femdom",
        "dominance",
        "submission",
        "oral sex",
        "pussy eating"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/cheryls-irresistible-legs"
}