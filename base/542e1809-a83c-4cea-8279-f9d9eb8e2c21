{
    "title": "A Pleasurable Experiment",
    "pages": [
        "Chapter 1 \n\n\"So,\" Dr. McMillan said, \"if you'll just take off your clothes, I'll explain what we're going to do.\" Dr. Siobhan McMillan watched as her newest test subject smiled nervously and looked around the laboratory. Like everything else in the clinic, it was very white and clean. However, the lights had been dimmed, making it feel a little less clinical. Dr. McMillan - in her white coat -- smiled reassuringly. What was her name? Katie The girl sighed and began undressing. Katie was Dr. McMillan's 2<sup>nd</sup> test subject of the day and twelfth of the series. She needed at least 30, and preferably closer to 50 or more, to have a statistically significant sample that she could base her postdoctoral biology-sociology combined research on. \n\nSiobhan stood holding a clipboard and a pencil next to something that looked vaguely like a dentist's chair: Wide, comfortable and probably adjustable in any number of ways. Except with straps. On a small tray next to the chair was a selection of objects - medical equipment, one assumed. They were all connected by electrical wires to a small table on wheels next to it. On the table was something like a control panel, the most striking feature of which was a huge red button -- vaguely reminiscent of a fire alarm. \n\n\"Once you're ready,\" Dr. McMillan said -- \"ready\" being a euphemism for naked - \"you'll sit down in this chair and get comfortable. Okay? I appreciate you volunteering for this experiment, and you will, of course, be paid the $250 that the ad referenced. We are trying to gauge, well, you might call it the 'science behind sex.'\" There are hundreds of books and other items out there in Cosmo and whatnot claiming this way or that way is the best way to have great sex. But it is all anecdotal -- I mean, how do you really know? Does that really work? So I have designed a study to test pleasure. I have gone through a series with the men and discovered what works and what doesn't, and now I'm on to the women, and that is where you come in. Ready to proceed?\" \n\nKatie nodded. She was wearing only bra and panties now and was clearly somewhat reluctant to take off the rest. But Dr. McMillan smiled as if to say: I know how you feel. \"What did you discover for the guys? I mean, what works?\" Katie asked in an embarrassed but curious voice. \n\n\"All the data needs to be collated and it'll be in my published works. But let's just say that one area was 'heads' above any other for stimulation response.\" Katie nodded in unspoken confirmation. \"When you're comfortable,\" Dr. McMillan went on, \"- in your own time, there's no hurry - I'll wire you up.\" She put down her clipboard and pointed to the equipment on the tray. \"There's really two kind of devices,\" she said. \"The stimulators and a number of electrodes to check your responses.\" Katie stood naked in front of her. She was 22 years old and had a body that bespoke of a college lifestyle -- the freshman 15 had hit. She was of medium height, had long legs and an average bust. Long blonde hair framed her plain but not unattractive facial features. \n\n\"Are you ready?\" Dr. McMillan asked with a business-like tone. \n\n\"I think so,\" Katie said, forcing a smile. \n\n\"You'll be fine,\" Dr. McMillan said. \"You might actually enjoy it. In a way, that's the whole point, right?\" Katie sat down on the chair. It was covered with a synthetic fabric that felt slightly cold against the naked skin, but otherwise it was designed to be soft and comfortable. Dr. McMillan skillfully adjusted the chair, until Katie was half-lying, half-sitting. Dr McMillan picked up the first device: A leather strap fitted with two rubber suction cups, wired to the control panel. \n\n\"Please sit up straight for a second,\" she said. Quickly she strapped the device around Katie's chest, fitting the cups over her nipples. \"This,\" she explained, \"is the mammarian stimulator. You'll feel it applies suction as well as vibration to your breasts.\" \n\nDr. McMillan picked up another device. It looked a bit like a thong bottom, except instead of a crotch it had two straps joined together by a round metallic object the size of a pillbox. \"This,\" she explained, \"serves two purposes: These two straps are moisture sensors. And this\" -- she pointed to a round plastic button underneath the pillbox thing - \"is the clitoral stimulator.\" Katie nodded. She was blushing slightly, as Dr. McMillan fitted the straps around her back and thighs. The moisture sensors went against her labia, and the stimulator fitted over her clitoris. \n\nThe next device was wheeled into place between Katie's now open legs, a powerful piston connected to a long thick dildo that thrust out towards the young co-ed. Katie frowned. \"Yes,\" Dr. McMillan said. \"It looks a bit weird. But it is important and indeed, I think you'll find it essential at certain points. This is the vaginal penetrator. Please hold still.\" Dr. McMillan adjusted its location until it was only an inch from the young woman's shaved pussy, and slathered on a good helping of lubricant onto the dildo. The good doctor then ran a power connection test and the piston withdrew the dildo slightly, then pushed gently forward and pressed against and then into Katie. The blond shivered and opened her mouth as if to protest, then a look of resignation flickered across her face -- after all, she was voluntarily naked and strapped into a chair with two other sexual toys attached to her. \n\nThen, as Katie sat down, she picked up a fourth device. It looked similar to the dildo device, except that it was only about one-fifth of the size. \"This,\" she said, \"I will not use without your permission, okay? I'll be very much obliged if you try this out, too. And many women enjoy this stimulation immensely. But - and I really mean it - it's your decision alone.\" \n\n\"What is it?\" Katie asked. \n\n\"The anal stimulator,\" Dr. McMillan said. \n\n\"No,\" Katie said, somewhat regretfully. \"I... I'm sorry, but I'm not into that kind of thing.\" \n\n\"That's okay,\" Dr. McMillan said smiling professionally. She put the device back on the tray and picked up a handful of electrodes, wired to the control panel. \"In that case,\" she said, \"I'll just attach these and you'll be all set to go.\" She quickly attached the electrodes to Katie's temples, breasts, stomach, chest area above the heart, and thighs. Then she pushed the table with the control panel up against the chair. \"Are you okay?\" Dr. McMillan asked. Katie nodded. \n\n\"Fine,\" Dr. McMillan said. \"I'll leave you to it then. I'll be in the control room. If you want anything, just call me. And this is important: If you want to abandon the experiment at any time - just push the red button. That will immediately switch off every device and every form of stimulation. Do you understand?\" \n\n\"Yes,\" Katie whispered. \"I understand.\" \n\n\"And if you don't mind,\" Dr. McMillan. said. \"I'll just strap you down.\" \n\n\"Sorry?\" Katie said. \n\n\"Of course, your right hand will be free to press the red button,\" she explained. \"But for the sake of the experiment, we have to rule out the possibility of masturbation.\" Dr. McMillan fastened the straps around Katie's arms and legs. \"It's not too tight, is it?\" she asked. \n\n\"No,\" Katie said. \"It's... okay, I guess.\" \n\nDr. McMillan smiled. \"A bit weird, I know,\" she said. \"You'll be fine. Just relax. And enjoy.\" Dr. McMillan picked up her clipboard and turned around to leave. She walked through a door, apparently into the control room. Next to the door, there was a huge smoked-glass mirror the size of a shop window. The lights dimmed further - leaving the room in near darkness. Alone in the darkened room, she immediately seemed to relax. Then Dr. McMillan's voice came through a loudspeaker, \"Would you like some music?\" \n\n\"Um, yes...do you have some soft piano music \" Katie responded. \n\nMoments later, the soft strains of Chopin filled the room. Sighing, Katie closed her eyes and seemed to relax -- clearly waiting for the experiment to begin. \n\n--- \n\n\"She's less nervous than most,\" Alan said. Dr. McMillan raised her eyebrows. Her lab assistant wasn't really supposed to talk about test subjects, but who could help but watch an attractive young woman strip naked, get tied down and have sex toys attached to her. \"She chose no anal stimulation,\" she said. \"And you know how much we need those data. Oh well. Let's get ready.\" \n\nThey sat next to each other at the instrument panel in the control room. Above it, through the big two- way mirror, they saw Katie lying naked, strapped to the chair. Alan had oriented his control panel so that it looked mostly towards Dr. McMillan rather than the test subjects. That had been a remnant from when they had done the male tests, and he didn't regret it now. It gave him a chance to watch Dr. McMillan as she conducted the experiment, and the lovely doctor was the main reason he was here. Indeed, he has taken a year off from going to business school to take this crappy lab assistant job just to near her -- the famous Dr. McMillan, beautiful and red-haired. She had blasted her way through Penn State's undergrad I nearly went there, if hadn't got that scholarship to Ohio State and Stanford' Ph.D program in biology. He doubted Stanford Business School would give him another year off, but he'd do whatever it took to stay close to her. Someday I'll ask you out, if I ever screw up my nerve he thought to himself. \n\n\"Let's start with clitoral stimulation at 2.3\", Dr. McMillan said. Alan turned two dials. This would turn on the vibrator in the strap above Katie's clitoris. All dials went from zero to ten, and the clitoral vibrator was now set at speed two, intensity three. This would massage her clit slowly and gently. \n\nDr. McMillan watched the meter on the instrument panel, monitoring her excitement. \"Okay,\" she said. \"She's responding. Go to 2.5.\" Alan raised the intensity to 5, making the device massage the subject's clit with the same slow speed but with moderate force. \n\n\"Mmm,\" Katie's voice came through the pickups. \n\nDr. McMillan glanced at a meter slowly beginning to move and made notations on her pad. \"We have moisture,\" she said. \"Mammarian stimulation 3.1.5.\" The mammarian stimulator had three controls: One for suction, one for speed, and one for intensity. Alan worked the dials, activating the suction cups on Katie's breasts. Sucking gently, they vibrated very slowly, but with some force. Almost like a tender love-bite, he thought. \n\nKatie was now moving about slightly in the chair, slowly getting aroused. \n\n\"Very good,\" Dr. McMillan said. \"She's highly responsive. But I'd like more moisture before we penetrate. Increase clitoral stimulation to 5.5.\" Alan turned a dial, keeping the force of the clitoral vibrator at the same level, but increasing the speed. Through the window, Dr. McMillan saw Katie squirming in the chair. \n\n\"Oh yes,\" she was whispering. \"Oh yes...\" \n\nDr. McMillan inspected the meter and nodded, smiling slightly. She saw out of the corner of her eye that Alan was watching her, not Katie, and was smiling at her. She had always found his attention during tests odd and a bit disconcerting, but she wasn't going to complain that her lab assistant paid attention to her instead of the naked subjects in the other room! \n\n\"Great,\" she said. \"Let's go to penetration. Immobile to one inch - slowly.\" Carefully, Alan turned a dial for the vaginal penetrator. In immobile mode, he simply controlled how far into the woman's pussy the dildo went. \"One inch,\" he said. \n\nKatie gasped loudly, as she clearly felt the artificial cock entering her. \n\n\"Moisture is more than sufficient,\" Dr. McMillan said. \"Go slowly to full length.\" Alan turned the dial. Inch by inch the device slowly pushed the dildo deeper and deeper into Katie. \n\n\"Oh yeah,\" she gasped. \"Oh yeah. Oh yeah. Oh God.\" The audio records took everything down for later review. \n\nDr. McMillan looked at the meters and made a further note on her clipboard. \"I think she's building towards a climax already,\" she said. Alan had finally turned the dial all the way. \"Full length,\" he said. \"Seven inches and immobile.\" \n\n\"Mammarian stimulus to zero,\" Dr. McMillan said. \n\nAlan switched off all suction and vibration to Katie's breasts. She was now feeling only the dildo inside her and the vibration on her clitoris. \"Clitoral stimulation to 2.8,\" Dr McMillan said. Alan turned two dials. The device now vibrated slowly against Katie's clit, but with great force. Dr. McMillan studied the meters carefully. \"And...\" she said. \"... orgasm!\" \n\n\"Ahhh!\" Katie cried from the room, her feet kicking helplessly inside the straps. \"Ahhh!\" \n\n\"Hmm,\" Dr. McMillan said, \"this is promising. Penetration to mobile at 5.4.\" Dr. McMillan wasn't going to give the woman a break. Katie was still in the middle of her first orgasm, but the doctor wanted to start the dildo thrusting into her. At 5.4, it would be thrusting half its length into her at a slow, but steady pace. Alan turned the dials and heard Katie crying out in the room.\" \n\n\"Ahhh! Oh yes! Yes!\" \n\nDr. McMillan bit into her pencil, feeling a slow flush of response coursing over her cheeks. The woman's arousal had hardly dropped from the orgasmic level, and it was already building again. She should get good data out of this run, if it lasted. \"Penetration to 8.5,\" she said. Alan turned the dials, making the dildo go almost full length, and just a little bit faster. Katie wriggled about in the chair, moaning aloud. \"8.5,\" Alan confirmed. \n\nHe tried to focus on his work, but he felt his cock swelling and rising inside his pants. Hearing, and somewhat watching, this young woman in sexual ecstasy couldn't help but be arousing, but it was mainly standing next to Dr. McMillan that he was responding to. Alan had held secret his overwhelming crush on her as best he could for the last 6 months. Alan shifted in his seat, hoping Dr. McMillan wouldn't notice the growing bulge in his pants. But she didn't even look his way. She was too busy following the meters in the control room and taking notes on her clipboard. \n\n\"Ohhh!\" Katie cried. \"Ohhh!\" \n\nThey heard the heavy metal chair creaking loudly as she writhed her body, trying to get even more out of the dildo sliding in and out of her. Dr. McMillan raised her eyebrows. \"Gradually increase penetration to 8.8.\" Alan's hands were trembling slightly, as he adjusted the dials, making the latex cock pump into Katie's pussy in an ever-increasing rhythm. He almost felt sorry for the poor girl. He would have given her a break, but that was not for him to decide. As always, Dr. McMillan wanted to test endurance. \n\n\"Oh God!\" Katie cried, her body shaking with every thrust of the dildo. \n\n\"The moisture levels are impressive,\" Dr. McMillan said quietly. \"Switch off clitoral stimulation. Mammarian stimulation to 5.8.8.\" Alan turned the dials, giving Katie's clitoris a rest. Instead, her breasts were now sucked and vibrated with great force in a fast rhythm. The effect was like a lover sucking her nipples vigorously, then tugging at them. \n\nDr McMillan watched, as the meters showed Katie's arousal rising again, once more approaching orgasmic levels. Alan saw the reddish glow on Dr. McMillan's cheeks, and wondered how she managed to maintain her detachment when it was natural to have a response to such authentic pleasure. What could Dr. McMillan be thinking as she watched Katie driven wild by that thrusting dildo, relentlessly fucking her, to another orgasm? Was she imagining herself in her place? Was that what she'd like? To be the subject of the experiment herself? \n\n\"Ah! Ah! Ah!\" Katie gasped, obviously almost at another orgasm. \n\nGod, Dr. McMillan was gorgeous, Alan thought. He shook his head, trying to snap out of it and focus on his work. The latex cock kept thrusting into Katie's pussy in a relentless, mechanical rhythm. It could go on forever, and Katie knew that. She threw herself about in the chair, arching her back, tugging at the straps with all her strength. \n\n\"Aaah!\" she cried - a deafening sound of lust. \"Aaah! Yes!\" \n\n\"And another orgasm,\" Dr McMillan said calmly. \n\nKatie's face was red. Her entire body glistened with perspiration, strands of her blond hair sticking to her sweaty face. \n\n\"Mammarian stimulation to 8.2.0.\" Dr. McMillan said. Alan turned the dials, closing down the vibrations, instead applying powerful rhythmic suction at a slow pace. Katie moaned softly. \"8.2.0,\" he confirmed. \n\n\"Clitoral stimulation to 8.5,\" Dr. McMillan said without looking up from her clipboard. Alan hesitated for a second. The experiment was clearly putting a great strain on Katie -- he wondered if she could handle clitoral stimulation at this point. Of course, she could always use the red button to switch it all off, but what if she passed out? Would Dr. McMillan call off the experiment, if the test subject lost consciousness? Two quick and powerful orgasms are not easy on anyone. But obeying his dreamy doctor, Alan turned the switches, making the device vibrate rapidly against Katie's clit with moderate force. \n\n\"No... Please!\" Katie gasped. \"Stop it! I can't...\" \n\nDr. McMillan pretended not to hear her. \"Vaginal penetration to 10.6,\" she said. Alan turned the dials, making the latex dildo slow down slightly. Instead, it went in all the way with every thrust. All seven inches of the thing buried itself in Katie's pussy again and again in powerful strokes. \"Stop!\" Katie gasped. \"Please stop!\" \n\nHer arousal levels were climbing again. Dr. McMillan moved to the microphone. \"If you want to stop the experiment, please press the red button next to you.\" \n\n\"Oh God!\" Katie cried, but did not hit the button. Rather, she pushed against the thrusting, timing the strokes to respond as if it was a lover pushing into her. Dr. McMillan watched her intensely. \n\n\"I thought so. The mind says we cannot handle it, that we should stop, but the body knows what it knows, and will not be denied. There is a certain point where our passions overcome our inhibitions. She knows that we are watching her, and was clearly worried about what we were thinking of her, hence her protestations. But that inhibition wasn't enough to stop the pleasure. There must be a point of no return for pleasure -- interesting. I wonder if I could hook up brainwave scans to the next pool of subjects...\" Dr. McMillan said, apparently to herself. Alan watched her, amazed at her restraint. He could see that her nipples were hard and pressing through the white lab coat that swarmed so seductively over her shapely form. His erection strained against his pants. She must be more turned on than me, since she's been watching and I haven't. How can she stand it? I'm getting to my point of no return just looking at her, and she's fully dressed! \n\nThe sounds of passion continued to come over the speakers and Dr. McMillan gave a sharp nod. \"Once more, max clitoral stimulation!\" \n\nAlan turned the dial to 10, and heard a sharp gasp. The readings went wild as Katie flailed about for a moment, then peaked as she arched her back and thrust her hips downward and experienced what must have been an extremely powerful orgasm. She fell back into in the chair and lay there trembling. The devices buzzed and shook all around her body. \"Ooh...\" she whimpered, her right hand fumbling for the red button, \"ooh...\" With trembling fingers, Katie found the button and pressed it. With a whirring sound, all machinery ground to a halt. Katie fell back in the chair, sweating, exhausted, and glowing. \n\nFor a few seconds, all was quiet in the control room. The only sound was the Chopin piano music from the other room. \n\n\"Thank you very much, Katie,\" Dr. McMillan said into the microphone. \"I'll be coming in to help you out.\" \n\nChapter 2 \n\nKatie had gotten dressed, and Dr. McMillan paid her the fee, thanking her for her participation. Visibly embarrassed, the young woman nodded silently, then hurried out to the taxi. ",
        "Alan poured himself a cup of coffee and printed out the results of today's experiment: Several pages of graphs and statistics. Dr. McMillan collapsed in a chair beside him with an exasperated sigh. \n\n\"Damn!\" she said. \"She looked so promising.\" \n\n\"She was very responsive,\" Alan said. \n\n\"She refused anal stimulation,\" Dr. McMillan said. \"And after three orgasms, she'd already had enough. We should be able to do better than that. It's as if the test subjects get scared. They reach a level of pleasure they've never experienced before. Then they're afraid to lose control, and they push the damn button. If we could just persuade them to go on, God knows what results we might get.\" \n\nShe leaned back in her chair, stretching her body. Alan noticed the outline of her prominent breasts beneath the white coat, her nipples still hard. \"I mean,\" she went on. \"I think I could do better than that myself.\" \n\nAlan stared at her. \"You mean...\" he asked, \"use yourself as the test subject?\" \n\n\"Oh, well, I don't know about that,\" Dr. McMillan said, standing up. \"Just an observation.\" \n\nAlan held up his hand and gave her a challenging look, his heart fluttering as the conversation finally moved beyond the dry lab talks that had dominated his interactions with the aloof Dr. McMillan since he joined her during the male trials. \"If it is good enough for them, why not you? Shouldn't a scientist be willing to understand everything about her own experiment? How can you write your paper if you can't answer the obvious question that everyone will ask: and where did you fit on the data set? Did your results work for you? Because until now, everything has been anecdotal, and they'll still have that frame of reference.\" \n\nDr. McMillan looked up at him with both hesitation and curiosity. \"I don't think it is appropriate for the scientist to be the subject of the experiment. And who would collect the data?\" \n\n\"That's just an excuse. You know that I can take down the data for you -- I certainly did that a lot during the male trials. I think you have to try it in order for your research to be accepted.\" \n\nDr. McMillan gave Alan an appraising look. \"That's a pretty good argument for a too-old lab assistant. Or is it MBA student? OK, I'll do it.\" \n\nAlan felt his heart leap at her comment. She knew! He thought he had hid his background from her, but she must have checked up on him. So she knew that he had taken time off from business school to take this job. That meant she must have guessed that he had done it because of her! It was the only reason for a promising broker to turn down a summer clerkship at Lehman Brothers in the City and take a year away from school in this hot market. So that meant...he smiled. She had been waiting for him to make the first move, all this time. And she had taken his challenge to finally be it. Hence the reveal of her knowledge of him. Wow, this is going to be the best or worst day of my life... \n\nDr. McMillan walked in, and Alan followed her into the laboratory. He didn't really believe she would go through with this; it was too close to the many dreams he had of her. \n\nDr. McMillan stood next to the chair and took off her coat. As she began to unbutton her shirt, she glanced at Alan. \n\n\"You're not embarrassed, are you?\" he asked. \"I mean, you have others do it all the time.\" \n\n\"Uh, no,\" she said. \n\nHe picked up the various devices, carefully wiping and disinfecting them. Still, he watched as Dr. McMillan Siobhan now, she's a test subject swiftly undressed, slipping off her shirt, her white skirt and her white satin bra. She smiled self-consciously, as she finally pulled off her panties and placed them in the drawer next to the chair. \n\nAlan looked at her. Her body was perfect, slightly toned, with a pale smoothness that excited him. Her legs were slender and her breasts were fleshy, but elegant. Between her thighs, neatly trimmed hair a natural redhead framed her secret place, as gloriously red as the elegant shoulder-length hair around her lovely face that charmed him with the freckles and smile lines. Alan had never asked about the origin of her name, but there was something exotic about her appearance -- he assumed she was Irish and that pale beauty excited him. His cock had been semi-erect before as the excitement faded from their last experiment, but at the sight of Dr. McMillan's naked body he felt it stretching to a full hard-on inside his pants in seconds.  \n\nShe sat down on the chair, making herself comfortable. \"Okay,\" she said with just the hint of a smile. \"You know the drill.\" \n\nAlan bent over her as he strapped the mammarian stimulator around her chest. He smelled the sweet scent of her skin and felt the softness of her breasts as he did the clasps slowly. Next, he fitted the clitoral stimulator around her waist, and maneuvered the vaginal penetrator into place. The skin between her thighs felt soft and warm, and Dr. McMillan shivered slightly at his touch. \"You want anal stimulation?\" he asked casually. \n\n\"Of course,\" she said. \"I intend to do this right.\" \n\nWithout a word, Alan picked up the anal vibrator. He applied lubricant from a small tube and strapped the device in place beneath the chair, aligning it so that the probe fitted in a recess, ready to push upward at the right moment. Her buttocks were soft and round. He had to fight the impulse to caress them. He didn't feel cautious anymore. As he fastened the straps around the doctor's arms and legs, he felt in control - and he liked that feeling. He savored it, and the sight of her now-helpless position, naked and vulnerable and awaiting to be sexually plundered. God, it made him so hard just looking at her. \n\nDr. McMillan seemed to sense it, too. She looked up at him with an expression of curiosity - as if witnessing a new side of his personality. She's losing control too -- maybe for the first time. A day of firsts for both of us? Alan sat down by the mobile control panel. It was equipped with the same dials and meters as the bigger panel in the control room. He pulled the control panel towards him, placing it just out of Siobhan's reach. \n\n\"Alan,\" she said. \"I can't reach the red button from here.\" \n\n\"Oh,\" he said. \"That won't be necessary, will it? I mean, I'll be right here. You just ask, and I'll switch it off.\" \n\nThere was just a hint of a smile on his face, and Siobhan looked at him curiously. \n\n\"Right,\" she said hesitantly, \"I'd like to...\" \n\n\"I think we'll start with clitoral stimulation at 5.5,\" Alan interrupted and turned the dial. \n\nSiobhan twitched in the chair, as the device started massaging her clit at medium speed and intensity. \n\n\"I...\" she gasped, \"wait, not like that. Um, ahh, I have this experiment...planned...\" \n\n\"Mammarian stimulation at 5.2.8,\" Alan announced, handling the controls. Siobhan's breasts were sucked and vibrated vigorously at a slow speed -- as if a lover kissed on her nipples. \n\n\"Please...\" she moaned, \"I want to...ah...to do this...um, right...so just listen, and, um, yeah, that's good, just like that...\" \n\nAlan watched the moisture meters - she was wet and getting wetter. Could she have been wet already, in anticipation of the experiment? Of him experimenting on her? He looked at her naked body, strapped down, subjected to the stimulation of the machinery. His cock was pushing hard against the fabric of his pants, almost hurting in its intensity. \n\n\"Vaginal penetration immobile to one inch,\" he said. He turned the dial, pushing the latex cock just inside the mouth of Siobhan's pussy. It seemed to go in smoothly, making her groan. \n\n\"Alan,\" she whispered. \"Please...\" \n\n\"Vaginal penetration to 1.8,\" he announced. As he turned the dial, the dildo began moving swiftly back and forth, but only just slipping in and out between her labia. The meters showed her arousal growing, and he saw her juices oozing out around the edges of the vaginal penetrator. \n\n\"Oh my god!\" she gasped. \n\n\"Vaginal penetration to 8.5,\" Alan said calmly. He turned the dials again, making the latex cock go slower, but deeper, thrusting into Siobhan in a steady rhythm, almost burying the entire length inside her with every stroke. Her naked body quivered. \n\n\"Alan!\" she cried. \"I think I'm coming... Ahhh...\" \n\nHe glanced at the meters - and sure enough: Her arousal levels were already building to a maximum. He watched, as the climax hit her, her back arching in the chair, her mouth open wide. \n\n\"Ohhh...\" she moaned, \"ohhh...\" \n\nBut seconds later, still trembling, she looked over at Alan. \"Keep going,\" she gasped. \"Cut the mammarian stimulation a bit. Otherwise, you're... doing fine...\" \n\nAlan cut the mammarian vibrators, keeping only a moderate suction, just letting her feel it. \"Clitoral stimulation to 8.8,\" he announced. Turning the dials, he increased the speed of the vibrator massaging her clit. Buzzing wildly, the tiny device vibrated her love button at almost maximum speed. The meters showed her moisture increasing. Over the noise of the machinery, Alan heard the tiny wet sounds, as the latex dildo slipped in and out of her dripping pussy. \n\nFascinated, he constantly shifted his gaze between the meters and her beautiful body, trying to keep her arousal at a maximum at all times and drink in the sight of her. Siobhan moaned with pleasure in the chair. \n\n\"Yes,\" she exhaled, \"yes, that's it. Oh, my God...\" \n\nInside Alan's pants, his cock was so hard, it was painful. He couldn't help thinking how good it would feel to simply unzip and let his hard-on out. But no - he had to focus on bringing her to another orgasm. \n\n\"Clitoral stimulation to 3.8,\" he said. He gradually slowed down the speed of the vibrator, stimulating Siobhan's clitoris, reducing it to a low, hard throbbing, so slow she could almost feel every beat. \n\n\"Mmm,\" she moaned, biting her lip. \n\n\"Clitoral stimulation to 8.8,\" Alan announced. And just as slowly, he turned the vibration speed back up again, changing the low throb to a loud electric buzzing sound. Watching Siobhan intently, he gradually changed the speed from fast to slow to fast, making her writhe with pleasure in the chair. \n\n\"Oh!\" she cried. \"I'm gonna come again! Aaah!\" Her juices flowed freely, as the orgasm surged through her body. She tugged at the straps, throwing herself about in convulsions of ecstasy. \"Ohhh yes!\" she sobbed. \"Ohhh...\" \n\nBreathing heavily, Alan unbuttoned his lab coat and threw it on the floor. The experience was overpowering him; far stronger than anything he had experienced when helping with the regular test subjects. I can't stand it any longer Then - finally - he unzipped his pants and let his hard, throbbing cock out. Oh, that felt good. His erect member twitched impatiently, clear fluid dripping from its tip. \n\nSiobhan gasped as she saw it. \"Alan!\" she exclaimed. \"What... what are you doing?\" \n\nAlan grinned. \"I thought I'd improve the experiment a bit.\" \n\n\"Don't ruin it!\" Siobhan whined. \n\n\"How? It's just penetration. Plus, you know, you're all tied up. What exactly are you going to do about it?\" \n\nAs if she was only realizing it now, she began tugging at the straps. Her face was flushed a bright red - the latex cock was still pumping into her, the clitoral stimulator still running. Trembling and struggling, she fought it for a bit, but it was futile. He stroked in front of her and stared intensely into her eyes. She made eye contact and electricity and sexual tension crackled between them, and then she relaxed back into the chair. Surrendered. To him. \n\nAlan turned the vaginal penetrator off and clitoral stimulation all the way down to 2.2, just ever so slowly and gently teasing her, keeping her aroused. Then he undid the straps holding the latex dildo in place and slowly pulled it out. Its surface was wet and glistening. It almost made him want to lick her juices off it - taste her. \n\nThen he stood between her legs, his erect cock pointing up at her dripping wet pussy. He knew very well that his cock was thicker than the latex dildo. And he could see from Siobhan's eyes that she'd noticed it, too. \n\nHe pulled the control panel towards him. He placed his cock at the mouth of her pussy and pressed gently against her, threatening penetration. \n\n\"Alan, please...\" she whispered. It wasn't clear to either of them if she was asking him to stop, or to take her. \n\nAnd with one swift thrust of his pelvis, he pushed the entire length of the shaft into her. \"Ohmigod!\" she cried. \n\nAlan gasped. The sensation was amazing. Wet and hot, Siobhan's pussy swallowed his cock, clenching it with her pulsating flesh. He began thrusting into her, his cock hard and throbbing with excitement. It was like they were made for each other. \n\nAlan reached for the dials, turning the clitoral stimulator slowly up to 8.2 - faster and faster, but still just the faintest touch. Siobhan whimpered with pleasure. \"You wanted to know...\" he panted, still stroking into her, almost out of breath, \"how much you could take... I'm helping you... find out...\" \n\nSiobhan was sweating now, and Alan was as well. Tiny drops of perspiration trickled slowly down her face, her breasts, her thighs, some hers, some his. Alan thought it made her even sexier, made him want to fuck her deeper, harder. He hammered his rigid cock into her again and again. Whenever he entered her, he could feel the slight throbbing of the clitoral stimulator on the skin of his cock. Alan reached for the control panel and turned a dial he hadn't touched yet. \"You like that?\" he gasped. \"Now how about... anal stimulation.\" \n\n\"Oh!\" Dr. McMillan cried, as the little vibrator throbbed against her ass. \n\nStill pushing in and out of her at a steady pace, Alan kept turning the dial. It began to vibrate more. \n\n\"Oh!\" she gasped, writhing lasciviously around his cock, \"oh yes!\" \n\nShe squealed helplessly, tugging at the straps. With shaking fingers, Alan turned another dial, making the anal vibrator strobe back and forth between high speeds and low throbbing ones. Alan looked into her eyes. She wasn't protesting anymore. All her objections had vanished and been replaced with pure, insatiable desire. Her eyes were gleaming, full of pleasure. I wonder if she can see the love in mine...Alan turned the anal vibrator up to maximum, and he could feel it throbbing rhythmically underneath him. He was sliding in and out of her pussy in the exact same rhythm. \n\n\"Yeah, Alan!\" she gasped. \"Give it to me! Give it to me good!\" \n\nGrunting and sweating, Alan kept thrusting into her, finally pushing her over the brink. \n\n\"Aaah!\" she cried as yet another climax hit her. Siobhan arched her back, shivering as she savored the sensations of her climax. She looked up at him, her eyes glazed. At that moment, he exploded inside her, renewing her pleasure with his own throbbing pulse that only an ejaculating cock could give a woman. Gasping for breath, Alan held completely still inside her, feeling her pussy tightening around his pulsating cock. \n\n\"That was amazing,\" she whispered. \"Kiss me.\" \n\nAnd Alan leaned over and put his lips to hers for the first time. They kissed greedily, their tongues eagerly lapping against each other - the kiss of two lovers. \n\n\"Oh yes,\" she whispered. \"Now let me out, please. I'm exhausted.\" \n\n\"Not yet,\" Alan said quietly. \"I want to look at you. You are so beautiful.\" \n\nAlan kept his cock perfectly still - the entire length buried inside her pussy. He felt the shaft twitching involuntarily every now and then. He turned the dial for anal vibrator down to 8.2, making it move slowly but powerfully. Siobhan closed her eyes, moaning almost imperceptibly. Alan reached for the dial for the clitoral stimulator. Gradually he increased both speed and force. From 2.2 to 5.5... \n\n\"Oh!\" she gasped. \n\nYes. It was working. Although she had thought she was finished, he managed to get her excited again. From 5.5 to 8.8. He could see the tiny device buzzing and throbbing, and he felt the vibrations on his cock. His member, starting to go flaccid, became semi-erect again, then fully erect as the motions of their hips and the vibrations brought them both back to renewed energy and pleasure. Siobhan bit her lip. Her nipples were hard as pebbles. Alan felt her juices flowing abundantly around his erect cock. \n\n\"Alan...\" she whispered. \n\nFrom 8.8 to 10.10. Relentlessly, the machine vibrated her clitoris at maximum speed and force. He resumed breast stimulation, bringing her nipples back into the swirling vortex of pleasure. Siobhan quivered in ecstasy, yet another orgasm in the works. \n\n\"Ohmigod!\" she gasped. \"Ah! Ah!\" \n\nThe buildup had affected him too -- he was hard again, ready to take her again. Now Alan began thrusting into her pussy, slippery and filled with his spunk, with deep and hard thrusts. She was about to come, and he wanted to come with her again. \n\nHe could hardly hold back anymore. The feeling of her soft, succulent pussy sucking his cock in -- the sight of her naked body, strapped to the machine, subjected to the endless stimulations of the devices - knowing that this was driving her to new heights of sexual pleasure - all this was enough to make him come any second. \n\n\"Alan!\" she cried, writhing on the seat. \"I'm coming! Ohmigod! I'm coming!\" \n\n\"Unhhh!\" he grunted, as the semen shot from his jerking cock. \"Unhhh! Unhhh!\" They both reveled in the glorious moment, each other's pleasure feeding into the others until it swelled past anything they had experienced before in their lives. \n\nBreathing heavily, Alan fumbled with the dials and hit the red button, switching everything off at once. \n\nThe buzzing sounds slowed down and suddenly stopped, giving way to an unexpected silence. They hadn't noticed how much noise the machine was making. But now it was switched off, the laboratory was eerily quiet, making their heavy breathing sound savagely loud. \n\nAlan looked at the naked, sweating woman in the chair. Tears were streaming down her cheeks. Whether it was from exhaustion or pleasure, he wasn't able to tell. Gently, he undid her straps and helped her get dressed. She was a bit unsteady, which didn't surprise him. He was impressed that she was able to stand up at all. \n\n--- \n\nAn hour later, in the control room, Dr. McMillan studied the printouts. \"Four orgasms,\" she said calmly. \"Quite impressive over such a short period of time.\" \n\n\"And notice,\" Alan said, pointing to a graph, \"how each climax was stronger than the previous one.\" \n\n\"That is unusual,\" she said, nodding. Then she gave Alan a big smile. \"We did quite well, didn't we?\" \n\n\"I guess make a good team,\" he said. \n\n\"We sure do.\" Dr. McMillan put the papers down. \n\n\"I know this seems complete backwards and old fashioned but, ah...\" how can I lose my nerve after what we just did together? \"Would you like to have dinner with me to tonight?\" Alan asked. \n\n\"I thought you would never ask. But no more experiments until we, ah, know each other better\" Siobhan replied with a smile. \n\nHe grinned cheekily, running his hand through her hair. \"We shall see. I think you like being tied down and taken, and it was amazing for me. We might need to cross-check the data set. You'll agree to another test if I think it necessary, won't you doctor?\" Alan's tone shifted from playful to forceful, and he gripped her hair hard and pulled her into a passionate kiss. \n\n\"Yes, I think I will...\" whispered Siobhan, a warm glow filling her as this handsome man took the lead that she had wanted him to take after so long..."
    ],
    "authorname": "AlanProject",
    "tags": [
        "dildo",
        "toys",
        "tied",
        "submissive",
        "anal",
        "machine",
        "multiple orgasms"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/a-pleasurable-experiment"
}