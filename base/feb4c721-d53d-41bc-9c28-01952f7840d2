{
    "title": "Gumdrop Ch. 03",
    "pages": [
        "Author's note:\n\nThis story has been inspired by the premise of another one about hucows in this website that I unfortunately cannot find anymore (if you know it, please write to me to help me provide a proper credit). While the very beginning in similar, the rest (a whole novel) is what I find a more satisfying development. Here's the third chapter. Since I already completed the whole story, from now on I will post regularly.\n\nAs absurd as the concept of a hucow is, I tried to take it quite seriously, to delve in the psychology of a hucow and her owner, in search of what this admittedly strange fetish means, at least to me. Therefore, beside the tropes of the genre (kinky sex, humiliation and de-humanization), you will find the musings of a young girl who chooses to become a cow in a quest for true love and a place in the world. I hope that the result is an original and refreshing take on the matter. \n\nAll kinds of feedback are appreciated, especially those about grammar, as English is not my first language.\n\n* * * * * * * * * * * * * * * * *\n\n3. The fair\n\nWhere do you buy cows? In a country fair. Well, it turned out that this was valid also for hucows. In this case a fair was more like a convention of enthusiasts, but Aidan assured me that everyone tried their best to adhere to the fantasy. A few days after my dream, he asked me to go with him to buy (the technical term for \"hire\" in this context) the first two cows of his herd. I was beyond excited: it would be just the two of us for a couple of days, and I was coming as future manager of his farm. It was time for my move. We were in the middle of summer and it was sweltering outside. So, between that and the fact that we were going to a sex-themed event, I had plenty of excuses to dress as slutty as I could.\n\nI was wearing a dark purple cowboy hat that contrasted beautifully with my pink hair, cut in a bob and matched perfectly with a short-sleeved blouse with a pink and violet tartan pattern, knotted and partly unbuttoned in such a way that it covered only my bust and showed my cleavage and my tummy, where I sported a brand new dream-catcher belly piercing. For the occasion I hade made myself a pair of very short denim shorts out of normal jeans. They had a very low waist, and I cut out the inside of both the front and back pockets, so that you could see a slice of my butt and thighs. I had also bought a couple of red cowgirl boots. Needless to say that, while we were traveling in Aidan's sports car, he had a hard time not being... Well hard!\n\n\"So, how does it work?\" I was asking, while licking mischievously a shocking pink lollipop.\n\n\"The girl who wants to become a cow signs a contract that obliges her to wear her attire at all times, except when there is an emergency of course, and establishes what her farmer can and can't do. Typically, how often she must have sex with the customers, if she wants to do anal and that sort of things.\"\n\n\"And this is legal? Is it not, like, slavery?\" I asked, a little perplexed.\n\n\"Oh, you'd be surprised what is legal these days!\" Aidan chuckled.\n\nWell, I said by myself, I better find out what exactly is legal these days if I want to stay out of prison!\n\n\"So, when you say buy, you just mean hire, right?\" I checked, just half-ironically.\n\n\"Yes, or buy someone else's cow, if it is allowed in her contract. Formally, it is just a change of employer, but it goes a long way in making the fantasy more realistic for the woman.\"\n\n\"And how long do these contracts last?\"\n\n\"Usually a year and they can be renewed. Sometimes the renewal is automatic unless one of the parties disagrees. There are a lot of women who just want to forget all about human stuff and live as cows as long as they can. You'll see.\"\n\nI wondered what it would be like living like that. Aidan had explained to me that between the hormones, the milking and of course the sex, an average hucow had a bunch of climaxes every day. If you forgot for a moment the whole humiliation and prostitution thing, it almost seemed alluring. You were paid a ridiculous amount of money to not have a worry in the world, being pampered and cumming all day. After having that thought, I remember that I blamed it on my anxiety about the future and my horniness. I do not still know if I was right or if being a cow was already an unspoken desire of mine.\n\nWhen we arrived, it seemed to me that we had just traveled to a parallel universe. The fair was hosted by a big ranch. We parked in a graveled open space, and we headed for a big field filled with marquees, little corrals and a couple of food trucks. It was all like a normal fair. What I was not prepared for, despite knowing full well what the fair was all about, was a couple a naked girls getting off a horse-trailer. They were unmistakably hucows. On their feet they wore the craziest shoes I had ever seen. They were basically heelless calf boots where the platform was a very realistic cow hoof. The rest of the shoe was madeo fcow hide. Their arms were similarly decorated with sleeve gloves, that encased their hands in a cow hoof. For some reason I had imagined that hucows would be fat, but all these girls were perfectly in shape and almost lean, a fact that greatly enhanced the impression that their huge boobs made. They were as big as cantaloupes! A man who seemed their owner, corralled them towards the fair, lazily swishing a crop on their buttocks, already quite red. As if this scene was not already shocking enough, every time he hit them, they mooed. Now, when I say moo, you may imagine a person actually uttering the word moo. You could not be more mistaken. These hucows emitted a sound that was eerily similar to a cow's call, except for the fact that was less powerful and maybe more high-pitched.\n\n\"What the fuck?..\" I mumbled without even noticing I was speaking out loud.\n\n\"Oh, yeah, I forgot!\" Aidan said, slapping his forehead \"Women who are actually serious about becoming cows have a little device implanted in their upper respiratory tract that, whenever they use their vocal cords, forces the air to go out from the nose and not the mouth.\"\n\nI must have frowned because he felt that I needed a practical example: he opened his mouth, took my hand and put it in front of it and mooed. I felt that no air had passed through his mouth and I understood and tried myself. I could moo too!\n\n\"So, wait, they cannot speak?\" I suddenly asked.\n\n\"Nope, as real cows.\" he answered in a revering tone.\n\nAs we approached, I could have a better look to these \"serious hucows\". Even though they were periodically whipped, they seemed to be enjoying all of it, to the point that I had the distinct impression that they slowed down on purpose just to make the crop lash at them.\n\n\"Good cows only move when they are prodded.\" Aidan commented in a low voice, accompanied by the sound of the cowbell they both sported hanging from a big leather collar. Despite the height of the heels, their gait was quite confident and regal, as if they were extremely proud of themselves. As we were passing them by, I noticed that they had a bull ring passing through their nose septum, so big that it reached halfway between their lower lips and their chins. Another tinkling sound drove my attention to their pussies. Their outer labia each displayed three big rings. The weirdest piercings of all, though, were two big triangular yellow tags on the top of their ears. Aidan, one again, answered my mute question:\n\n\"They are tags containing the serial number of their contract, a QR-code of their limits and an ID number to identify them.\" he explained and then pointed to the tattoos on their buttocks and their backs \"These are also branded, for further safety. They probably have microchips too, all to ensure that their contracts cannot be modified in a second moment to their damage.\"\n\nI had to admit, these people were really committed. A part of me wondered who they were actually protecting by making the contracts unalterable. I could see how this ensured that the hucows did not have to do things they did not agree to, but at the same time it made sure they could not change their mind afterwards.\n\nAs we entered the fair, we were welcomed by a rather festive atmosphere. Everybody seemed to know everybody. There were shops selling cow attire, both for professional hucows and amateurs, milking machines, themed sex toys, the most expensive cheese in the world (my mouth actually gaped at its sight) and of course, milk. However, most of the space was occupied by various farms showing off their cattle. Aidan, taken with his enthusiasm, took my hand (I think that my heart missed a beat), and we headed confidently toward a stall called \"Redhead Angus\". Behind a stall displaying milk bottles and assorted produce, there was a small corral, where three hucows, all redheads and in attires similar to those we spotted earlier, were accommodated in what seemed to be a portable version of Aidan's milking stands, only without the part that supported the head and shoulders. They just rested with their elbows on the fence or on dedicate supports. Two of them were being milked and were mooing loudly in what seemed to me an unequivocal O-face.\n\n\"Aidan!\" called a burly man in his fifties, with ginger hair and a cowboy attire \"What brings you here? Should I worry?\"\n\n\"Eoin!\" Aidan greeted him cheerfully \"As a matter of fact you should!\"\n\nThe other did not seem to take the news well as he reached us.\n\n\"Really?\"\n\n\"Not because I'm not a very satisfied customer.\" excused himself Aidan, raising his hands \"I am opening a farm of my own!\"\n\nAs comprehension dawned on Eoin, he returned to his previous upbeat tone:\n\n\"Good for you, I should've known!\" he said and then, addressing me \"And you must be his new cow! Came here for the transformation?\"\n\nWhile I was busy blabbing an embarrassed \"no\" and blushing, Aidan introduced us:\n\n\"No, this is my ward, Leah. As a matter of fact, she is going to help me manage the farm! And this, Leah, is Eoin, my supplier.\"\n\nWe shook hands, but Eoin did not seem to understand the source of my embarrassment:\n\n\"Well, sorry for the misunderstanding, but you really are a dazzling, you would make a wonderful cow.\" he said.\n\n\"Thanks!\" I mumbled, adjusting pointlessly my hat.\n\nBehind him I saw another girl, with a burgundy fringe leather jacket, bellbottom pants and a cowboy hat letting a man in the fence and pointing to one of the hucows. While she was heading in our direction, to my dismay the man approached the hucow, unbuttoned his pants and, after jerking off a little, started humping her. Just like that, in front of everyone, even though I was probably the only one who bothered to look. On her part, the hucow did not even bother to turn her head, but merely half-closed her eyes and bit her lip, seemingly enjoying herself. By the time the unknown girl reached us, the hucow was mooing, clearly enjoying herself while the man was grunting with a horny expression on his face.\n\n\"...starting with just two. Maybe I'll call you from time to time, for some advice.\" Aidan was saying, when she interrupted the conversation:\n\n\"Dad, there's a guy who wants to know if he can buy milk, but we are all reserved, right?\"\n\n\"Who, the one humping Bessie?\" asked Eoin, turning around.\n\n\"Yep.\" \n\n\"Tell him no. I think we are going to have some spare, but I'd rather give it to old customers, like Aidan here.\" instructed Eoin \"Oh, and this is my daughter, Fergie.\"\n\nFergie was a pretty girl, probably my age, with flaming red hair in a long braid that danced behind her back. Her face was round, quite pale and sprinkled with cute freckles. Her blue eyes lingered on me far longer than they did on Aidan, while we introduced ourselves.\n\n\"She is going to join her sisters after the fairs! I bet her milk is going to be delicious!\" Eoin was saying, very proudly. His daughter rolled her eyes in embarrassment and gave me a shrewd sneer:\n\n\"Dad!\"\n\nI think I managed to keep my face perfectly still, because she kept looking at me in a friendly way.\n\n\"Hey, why don't you show Leah, here, how we rear our hucows, while we arrange the transportation of Aidan's? She is going to manage Aidan's farm soon!\" proposed Eoin.\n\n\"Wonderful idea!\" approved Aidan.\n\nApparently happy to get out of the spotlight, Fergie gestured to follow her and I hurried after her, noticing that she had a really nice ass. All of a sudden I realized that I was about to think \"she is going to be one fine hucow\". Damn! How much did it take for me to start thinking as a farmer?\n\n\"Sorry about my dad, I've always been the rebel one and he wasn't sure I would decide to follow my sisters' path. Then, when I turned eighteen and started attending the fairs with him, I made up my mind, so now he's acting all proud and excited. Well, how much do you know about hucows?\" asked Fergie, as we approached one of them who was being milked.\n\n\"Very little.\" I answered, a little distracted by the loud smack that the man mounting Bessie made when he slapped her ass. (Mounting? Seriously Leah?)\n\nFergie seemed bewildered and I blushed.\n\n\"Really?\" \n\n\"Well, it's all Aidan's idea. He mostly wants someone to oversee his employees, but I do want to learn more about hucows.\" I replied, a little defensive, concentrating on the hucow in front of us, who was staring me curiously.\n\n\"Sorry, didn't mean to criticize.\" apologized Fergie with a smile \"It's just unusual to meet anyone here that is not in the scene. Anyhow, this one being milked, here, is Princess.\"\n\nYou could see how Princess was Fergie's sister: they had the same eyes and a similar build. Anyhow, the hucow was a few years older, her face was a little more triangular and her lips were pouty. Her breasts were a little smaller than those of the hucows that I had seen at the entrance, but maybe it was an impression due to their hanging attached to two big transparent cups, sprinkled with milk and connected to the pump. \n\n\"You see, there is no more milk in her udders.\" said Fergie and then, with a smirk at my frowning \"Yeah, udders: would you call something this big a boob?\"\n\nPrincess mooed proudly and Fergie caressed her curly hair fondly.\n\n\"Now I am going to unplug the pump. Don't expect your hucows to warn you when they are empty: they are so horny and sensitive that the mere pumping makes them have micro-climaxes sometimes\" she explained, showing me how to do it, while Princess grimaced with her tongue out, bumping on her bull ring. I noticed that she had a big tongue piercing. Fergie probably spotted me looking at it, because she said:\n\n\"Yeah, that's one of the standard piercings. Guys like the sensation of a big barbell when the hucow gives head and it makes it harder for them to try to articulate words.\"\n\n\"What's the purpose of the other piercings?\"\n\n\"Well, the bull ring can be used to lead them and sometimes tie them, but it's there mostly for aesthetic reasons. As for the rings on their outer labia, they make it possible to lock their pussies, when you are not sure that the customer will use a condom.\"\n\nI was aghast:\n\n\"What?\" I half-shrieked.\n\n\"Ah, don't take it too hard, we do it for the cows. You see, the point is that, in order to produce milk, they must be fertile. There will always be the idiot who thinks that he can pull out in time and it's not that complicated to get away with it. The cow may not notice the absence of a condom and the customer can hide from the cameras behind her.\"\n\nPrincess mooed seemingly in agreement, rolling her eyes.\n\n\"How can they not notice that there's no condom? And if you lock the pussy...\" I started.\n\n\"Traditionally hucows should be fucked in the ass.\" explained Fergie, while Princess leered at me \"And as for their sensitivity down there... You have any idea of the number of cocks they see?\"\n\nShe then proceeded to the next hucow, named Spot, apparently because she had a big birthmark on her shoulder, and let me unplug the milking machine, to see if I had learned. At first, it was awkward to touch a stranger's boobs, but then I remembered that I had to think of them as udders and everything came more natural to me. Moreover, Spot did not seem much interested in me.\n\n\"Where do you buy milking machines for hucows?\" I asked, when Fergie patted me encouragingly for my good job.\n\n\"Nobody produces them, of course. There are people who adapt goat pumps, though.\"\n\nMuch to my relief, the man that was humping Bessie had reached climax and was now fastening his belt.\n\n\"Everything alright Bessie?\" Fergie asked her, patting her cheeks. Bessie looked fine and mooed with a sleepy smile.\n\n\"In a moment we are going to clean you, ok girl?\" added Fergie. Bessie mooed again, this time with a pleading face.\n\n\"What's wrong with her?\" I asked worriedly.\n\nFergie then confidently grabbed the hucow's udder, nodded to herself, took my hand and placed it on the udder:\n\n\"Squeeze a little. Can you feel that it's full?\"\n\n\"Yeah.\" I confirmed, shamelessly lying.\n\n\"See, Bessie here needs to be milked. Wanna give it a try?\"\n\nWell, I had learned how to unplug the milking machine, I did not see why not learn how to plug it.\n\nFergie meticulously got me through the procedure, but before I started, she looked back at her father with a bratty smile and, once she was sure he was not looking, she stopped me:\n\n\"Hey, wanna try it the natural way?\" she proposed in a whisper. At first, I though that she meant to milk Bessie by hand, but then she made herself more clear by sticking a thumb in her mouth and sucking it.\n\n\"What?\" I whispered astonished.\n\n\"Come on!\" Fergie teased me \"I do it all the time and my dad is taking Aidan to our trailer!\"\n\nAnd then, without notice, she put her lips on one of Bessie's udders and gave two powerful sucks, closing her eyes in pleasure, while Bessie mooed softly above us. Fuck it, I tried it too! Bessie's nipples, as the other cows', were really long. I never had another woman's nipple in my mouth! When I sucked it, a trickle of warm milk entered my mouth and it was the weirdest thing ever! It did not taste quite like normal milk, but I liked it.\n\n\"Shit it's good! How much was it worth?\" I asked grinning to Fergie, who was quite satisfied with her successful corruption attempt on me.\n\n\"You don't wanna know!\"\n\nAfter I successfully fastened the milking machine to Bessie, who seemed quite eager to be emptied, we headed for the opposite part of the fence, apparently to clean her.\n\n\"Isn't your dad pissed that you drink his milk?\" I asked, now that I and Fergie had bonded with our little mischief.\n\n\"He's never caught me and it's not a big deal. Our main revenue comes from him pimping my sisters out.\" said Fergie lightly, so that I felt bold enough to pop the big question that had been buzzing in my head until then:\n\n\"So, these are all your sisters?\"\n\nThe cowgirl did not give any sign of being fazed by the topic.\n\n\"Yeah, I mean... No, two of them are my half sisters, but I don't pay attention to such silly details. Oh, and I also have a brother, who managed to skip this fair leaving me to do most of the work!\"\n\nWe entered the corral and we were now facing three asses in display. I noticed that each of the hucows had their name tattooed on their lower back in ornate letters.\n\n\"What name are you going to choose you become a hucow? I mean, I assume that Spot was not the original name of your sister.\"\n\nFergie was wearing a pair of working gloves, not unlike those used by common farmers in appearance, but I could see that the fabric was very smooth.\n\n\"The hucow does not choose her name.\" she said, examining expertly her sister's asshole \"But my father, in his excitement, revealed to me that I'm going to be Cheeky.\"\n\nI snickered:\n\n\"I think it's perfect!\"\n\nFergie sneered and slapped Bessie's buttock:\n\n\"Yeah, no shit.\" she commented and then, with louder voice, she said \"Hey Bessie, come on girl, squirt it out!\"",
        "After a moo, Bessie pushed out her sphincter and a some jizz came out dripping. Fergie put unceremoniously a finger in her sister's asshole to facilitate the flow. With a sigh, I forced myself to squat down to have a better view of Fergie's work and then I noticed the padlocks. When Fergie was talking about locking a pussy, she really meant it! She had used two small padlocks going each through four of the eight rings of her sister's labia, the upper one fixed to an additional ring situated at the meeting point of the labia with the pubis. She proceeded to unlock them and then fetched a cylindrical object that I took to be a tank with a pump, connected to a hose with a small nozzle.\n\n\"Come behind me now.\" suggested Fergie, absentmindedly hosing her sister's genitalia with a powerful jet. The hucow mooed, but she seemed to like it. Then, after the girl adjusted a knob, the water came out more slowly and, to my dismay, she just stuck it up Bessie's butt, making the hucow moo again, this time uncomfortably. Making humming noises in a way that made the whole scene resemble a person refueling their car, she filled Bessie's ass with a water enema and then extracted abruptly the hose again, making her moo in protest. A jet of water burst out of her sphincter immediately and met with a parabolic trajectory the hay on the ground. I noticed some more jizz and a few brownish specks mixed with it.\n\n\"Yeah, this is not the best part of tending to a hucow.\" admitted Fergie, rubbing a generous amount of lube on Bessie's butt-hole and pussy and pulling out her gloves afterwards \"You've got to use special products to prevent infections from fungi and whatnot, since they stay naked all the time and come in contact with stuff that's been on the ground, like the hay. Their chips stimulate their immune system to be more aggressive on that front, but you know... Better safe than sorry!\"\n\nI nodded, impressed by the discipline of the cows and that prompted me to ask:\n\n\"So, how long have your sisters been cows?\"\n\n\"Er, let's see: 2, 2, and 3 years\" answered Fergie, pointing at them in the same order she had introduced them to me.\n\n\"And how long does a cow usually... well remain a cow?\"\n\n\"These?\" she said with a snicker, slapping Bessie's buttock \"Until they stop producing good tasty milk.\"\n\n\"So, ballpark...\"\n\n\"Dunno, maybe 20 years? We are using a new treatment that came out only a few years ago, you know, more balanced, so we don't really know how long it takes... My mom has been a hucow for 16 years, so I do hope that for us it will last longer, otherwise we've been duped!\"\n\nAgain, it took all my willpower to keep my face still.\n\n\"So, your mom has been a hucow? So long ago?\"\n\n\"One of the first, actually!\" said Fergie, quite proudly \"At that time you had to have children to initiate the process. The technology was quite crude, you see. My dad has had to monitor her health and her sister's quite closely, but he's a good doctor, so he managed to solve all the issues he met. It was uncharted territory. A lot of my mom's and my aunt's earnings were spent to keep them healthy.\"\n\nSince Fergie did not seem to be bothered by my questions, I could not refrain myself from keeping them going:\n\n\"And your mom has been a hucow for all your childhood?\"\n\n\"Oh yeah. I heard her talk for the first time when I was 13, because my father forced her to remove the device that made her moo. You know, she didn't want to stop being a cow, she was the one who convinced my father to transform her into one, but she couldn't produce milk anymore and no one was interested in fucking her either, so we did not know what to do with her. It was quite pitiful. My father managed to convince her only by reminding her that she could finally take care of us.\"\n\n\"Wow. It must've been hard for her to adapt back to... er, a human life.\"\n\n\"Oh yeah, very much. At first, she did not even remember how to speak, but my father is one stubborn fella, so before the first of my sisters followed her in her path, she was already talking. It is quite romantic that we took care of her and now she takes care of us.\"\n\nRomantic was not the word that came first to my mind but then again: Fergie seemed surprisingly well-adjusted and she decided willingly to become a cow. None of her sisters seemed unhappy. So maybe there was something to be said for being a hucow.\n\n\"And what about you and your sisters? Don't you want to have a family?\"\n\n\"Oh, we will have calves of course!\" said Fergie with a huge smile, and slapped Bessie's ass \"My father artificially inseminated Bessie here, as soon as he was sure she could sustain a safe pregnancy. Then he proceeded to impregnate the others in rotation, so that they were not all unavailable at the same time. He's found the perfect sperm donors, 'cause the kids are the cutest! We all love them so much! So, I want to do the same.\"\n\n\"And who is going to raise your children?\"\n\n\"My brother of course. Babysitting is his excuse for not being here and making me do all the work, while I wait for the test results for my transformation, you know? He is studying pedagogy just for that. And in case our daughters will want to follow our footsteps, we are going to have the first ever hucow breed, the Redhead Angus!\"\n\n\"But will they really have a choice? I mean, if some tells them that it's their destiny...\" I objected, growing uneasy.\n\n\"Look, I know how it sounds, but it wasn't my father's idea to have us become cows, or the pregnancies either. It was Bessie's, she's the mastermind behind the Redhead Angus breed.\"\n\nI really did not know how to retort, so Fergie went on, possibly sensing my shock:\n\n\"You see, we grew up seeing the stark contrast between the lives of normal women and our moms and... Well, we realized that we could choose either a quiet existence devoid of stress and full of pleasure or a life spent hustling for things that society teaches us to desire and that ultimately do not give us any lasting satisfaction. We made our choice.\"\n\nI did not know whether I was more appalled by amount of crazy that had just been unloaded on me, or by the fact that it did not seem that crazy to me. My musings, anyway, were interrupted by the arrival of Aidan and Eoin.\n\n\"So, shall we go and scout the market?\" proposed Aidan. I nodded and we bade farewell to Fergie and Eoin.\n\nWhen we were sufficiently far away from them, I told Aidan what I had learned.\n\n\"Yeah, they are very hardcore...\" he admitted \"But all in all they are nice people and probably the ones that take the best care of their cattle. They are those who promoted certain safety rules among the farmers to make sure that nobody is abused, you know.\"\n\nI nodded, still wistful.\n\n\"Anyway, you should know that most hucows do it for a couple of years to earn just enough to pay for college or something like that.\"\n\n\"And what about their breasts? Do they shrink?\"\n\n\"A little, but not that much. Anyway, that is a plus for the kind of girls that decide to become hucows.\"\n\nWe arrived at the market, which was divided in two parts. On one side there were several chairs occupied by girls who wanted to become cows and people interested in buying them, intent on interviewing them. All the wannabes seemed to have roughly my age and looked very anxious. As we approached them, I understood why. The buyers were examining their health exams and making questions about their sexuality that would have made anyone uneasy. \n\nOn the other side, the one to which we were headed (hand in hand!), hosted several hucows and their previous owners. As we strolled around the fence, I saw several of them sticking proudly their chest out and letting people suck their udders, clearly to taste their production, while their owners showed certificates about its amount. Other potential buyers were fondling the cows' genitalia and prodding their assholes, without eliciting many reactions. Some of the hucows even looked slightly bored. In this varied and admittedly profoundly weird panorama, a cow stood out. She was spotted! Her skin color was black, but she probably had vitiligo, because there were several huge spots of pearly white skin all over her body. Contrarily to all the other girls, who kept their hair short, she had long black dreads. Her eyes were slightly elongated, almost almond-shaped and observed the little crowd around her with a slightly fearful expression. As soon as I saw her, I pulled Aidan in her direction.\n\n\"You have good taste, my dear.\" he commented when we reached her.\n\nWhile we were waiting for a taste, I ambled around her, to see her from all the angles. Her body was an ode to proportions. On her left butt cheek, the one that had not been branded and that was mostly white, there was a tattoo of a cupcake and the invitation \"Have a bite!\" was written below it. \"Cupcake\" was apparently her name too, as I learned from the tattoo on her lower back, very similar to those of Fergie's sisters. Her udders were huge, but firmer than those I had seen until then. As soon as the throng around her left an opening, I managed to squeeze in and see her face closely. Nobody was paying attention to it: they were all concentrated on her udders. I, on my part, was mesmerized by her features. She had a triangular face and her mouth, full and adorned by four lip rings on her lower lip, jutted slightly out harmonically, following the shape of her skull. Her nose was wide but small. Up until then, she had been staring worriedly to the people inspecting her, but now she was looking at me as intently as I was rapt by her. Aidan was behind me and I immediately whispered, incapable of controlling myself:\n\n\"I want her.\"\n\n\"Well, let's have a taste first.\" he replied.\n\nWe both bent over on her nipples. Aidan just sucked and appraised the milk in his mouth. I, with my tongue hidden in my open mouth hovering on her areola, decided to taste her skin too, moving it in circles around her nipple, teasing it by pushing the flesh to my teeth and causing her to emit a low moan. I loved her mooing. Only then, after I had paid my respects to this Nubian goddess, I sucked and tasted her milk. To be honest, I did not feel much of a difference with that of Bessie's, but it did not matter to me. Cupcake had to be mine.\n\nWhen we reconvened a little farther, Aidan told me the details of her contract:\n\n\"It is a very permissive contract. It allows unlimited automatic renewals, which means that she wants to work as long as possible, and basically all the sexual practices that could be asked from a hucow. She is going to be extremely expensive and I think I know why.\" Aidan explained to me.\n\n\"Because she's perfect?\" I suggested, blushing a little afterwards.\n\n\"Yes, and also because she is trying to save her father's life. She has never had an owner before, he convinced her to become a hucow because he is overwhelmed by gambling debts and needs the money. If he secures her sale, he is going to be able to ask a bank for a loan using her earnings as a collateral.\"\n\n\"Holy shit!\" I gasped \"And how do you know all of this?\"\n\n\"I have my ways.\" replied Aidan vaguely \"And I'm sorry, but she costs alone almost as much as I wanted to spend for both the cows.\"\n\nI was disappointed, even more so now that I knew why she was the only hucow I had seen at the fair who did not seem comfortable with her future job. Somehow I was sure that she would fare better if I owned her. However, I was not the one putting her money in the venture, so there was nothing I could do about it.\n\nWe spent the next hour inspecting the cows at the market, tasting their milk and evaluating their production, their contracts and their bodies. Aidan had donned a rubber glove and stuck his middle finger in every cow's asshole:\n\n\"Traditionally, the butt-hole is the most important fuck-hole of the hucow,\" he explained to me in response to my quizzical look \"because that is where she is going to be fucked most of the times. She must be able to relax it with ease to allow customers in, but it must not be too lax, otherwise anal sex will be less pleasurable. Here, \" he then added, handing me another rubber glove \"try this one.\"\n\nHaving finally got used to the whole atmosphere of the place, I had become quite confident in this sort of operations: when in Rome... The cow we were currently appraising was called Butterscotch. Her owner had told us jokingly that she was a perfect Jersey Cattle. Apparently it was a pun on a breed whose hair, just like hers, was fawn and, moreover, she was from New Jersey. The hucow had looked at me eloquently with the typical amused and slightly embarrassed expression of a teenager after hearing a \"dad joke\". While another potential buyer was groping intently one of her udders, I pushed my index finger in her insides. She did not put up any resistance when it entered, but I could feel a certain squeeze when I was in. She probably had heard what Aidan was saying.\n\n\"See, that one was good.\" he told me, on our way to the next candidate. Watching him sucking blissfully her milk, it occurred to me:\n\n\"Is Penelope ok with all of this? I mean...\"\n\n\"Oh, we talked about it. As long as it is cows, I can do whatever, she won't be jealous.\" assured me Aidan, who still blushed a little.\n\nThat was so unfair! These were girls just like me, why could not she make an exception for me too?\n\nWhen we were finished, we went to a themed cafeteria to regroup. I felt quite sleepy, for we had woken up very early and I had started to feel the fatigue due to the tension: this was, after all, my chance to finally be with Aidan. So I ordered a jug of coffee, and the waitress came back with a teat-shaped mug filled to the brim (these people had a thing for puns, apparently). We were soon joined by Eoin and Fergie, who gave us advices until we formed a shortlist of hucows we were interested in. The next day, in the afternoon, there would be an auction, and I was all excited about it: I have always wanted to be in one, yelling prices and all that! Aidan then invited them to have a look around with us, unfortunately: if it were up to me, it would have been just the two of us all the time. We ended up walking in pairs: Eoin in front, with Aidan, gossiping about other farms, and me and Fergie in the back. She did most of the talking, mostly about all the cool things you could buy at the fair.\n\n\"...and then I found this gorgeous little vintage Swiss cow bell, probably made for calves, and I thought: this has got to be around my neck!\" she was telling me \"Hey, dad, there's a rodeo!\"\n\nAidan and Eoin seemed both excited about it, and we headed towards a small square fence that was padded and filled with a big soft mat. By the time we found a spot between the people cluttering around it, a farmer had ushered a hucow in, lazily lashing her buttocks with his crop to push her towards the center, where she rested on all fours, grinning as soon as the crowd cheered for her. She was wearing a heavily padded cap and other padded protections on her elbows and arms.\n\n\"Ok, what am I watching?\" I asked Fergie.\n\n\"That man \" she replied and pointed at a guy, naked except for a cowboy hat and protections similar to those of the hucow \"is going to mount the cow's asshole from behind. His objective is to ride her for as long as he can. He is going to wear a condom and dip it in the same substance that coats a ginger root. As soon as he penetrates her, it's going to burn like hell, and she'll get frisky and try to unsaddle him. So you see, like a normal rodeo, basically.\"\n\nThe cow was now tainting the cowboy by waggling her rump, for the crowd's amusement.\n\n\"Holy shit!\" I murmured when he grabbed her hips and thrust his quite impressive cock in her butt. She immediately started mooing loudly and trying to shake him off quite violently: those protections were indeed necessary. She pushed backwards, jabbed with her head and elbows, tried to roll, but the man was hugging her waist mercilessly.\n\n\"Aw, man, I so wanna try it before my transformation, but my stupid sisters don't like it!\" complained longingly Fergie.\n\n\"You mean as a rider? How?\"\n\n\"With a strap-on!\" she replied, like it was the most obvious thing in the world \"It's even safer, you know?\"\n\n\"How so?\" I wondered.\n\n\"Well, men risk breaking their penis.\" was her matter-of-factly answer.\n\n\"Ouch!\" \n\n\"Yeah, that's why they usually get themselves a mild drug-induced erection, so that their cock is not too hard. Anyway, from time to time, there's always the one who cannot prevent himself from having a real hard-on and... Crack!\" she explained, moving up and down her eyebrows with a devilish smile. Somehow I knew that she would consider it a badge of pride and I pitied the fools who would try a rodeo with Cheeky.\n\n\"Well, I guess I'll have to content myself with playing the other side.\" she continued.\n\nThe hucow had finally managed to escape the cowboy's grasp, pushing with her hooves on his thighs. A LED screen was showing the time elapsed and the man was making the V sign, while the cow, her face all red and covered in tears, was mooing in pain, bringing her useless hooves to her back, until her owner entered and rubbed her with a balm that calmed her down.\n\nMy attention shifted to Aidan, who was standing a few meters away from us, separated by other members of the audience. He was smiling like a kid on Christmas.\n\n\"You like him, don't you?\" asked all of a sudden Fergie, shrewdly.\n\nI turned my head to her too fast and gave myself away:\n\n\"It is that obvious, huh?\"\n\n\"Not here, in principle, as everyone behaves like they are flirting with anyone in this kind of events, but knowing that you are all new to this, yeah, it is pretty obvious. What's he to you anyway?\"\n\n\"He is my ward. I... I recently lost both my parents.\" I finally managed to admit. Fergie had been open to me with a very personal and controversial subject and I felt I could too. Fergie knew better than delving into my tragedy.\n\n\"I'm so sorry to hear that...\"\n\nAfter a short, but still awkward silence, she asked:\n\n\"He married? I noticed a ring.\"\n\n\"Yeah.\"\n\n\"Well, that does not necessarily constitute an obstacle, you know?\" she said, helpfully.\n\n\"Yeah, I know, their marriage is not working, if you ask me. I'm counting on being able to open his eyes to that.\"\n\n\"Oh, yeah, sure, that too. But I meant that usually people into hucows are very... Unconventional, so to speak, regarding sex, so it may very well be that he and his wife would like to add some spice to their marriage.\"\n\nI frowned at her:\n\n\"No, I don't really like Penelope and I'm not into women, anyhow.\"\n\n\"You were into Cupcake though!\" sneered Fergie.\n\n\"It was not like that!\" I retorted blushing \"I was just impressed by her beauty! And I know for sure that Penelope won't allow anyone near her husband, except hucows, apparently, that fucking hypocrite!\"\n\n\"I'm sorry, girl.\" said Fergie, patting me on the back.\n\nLater that afternoon we headed back to our room in the guesthouse of the ranch. We had to share it, due to the amount of people attending the fair. I am sure you understand how unfortunate it felt for me. \n\nI was in the shower, mulling over my next move. All that time to think about how to approach Aidan about my feelings for him and now I did not know what to do! I had trusted that, when a good occasion presented itself, I would recognize and seize it, but he seemed so taken by the whole farm thing, that he did not notice how cute I was. While we were traveling it was so much better! I had kept pretending to be asleep and he watching me with a hard-on. Had I lost my only chance? But what was I supposed to do while he was driving? I kept imagining the moment in which we acknowledged our reciprocal feelings to begin with a kiss, given by me and impossible to resist to for him, and surely that could not happen in a moving car!\n",
        "Still wistful and discouraged, I came out of the bathroom in my bathrobe to fetch my brush, which I had forgotten, and I found him lying on his bed topless, absentmindedly stroking his swollen crotch, his trousers still on but unbuttoned, looking at the window opposite to where I was standing. He did not notice me. In a desperate move, I let the towel fall on the ground, I crept behind him and, before he could do anything, I straddled him: he was trapped.\n\nMaking my weight shift on his erect cock, I caressed my pussy and whispered:\n\n\"So, Aidan, have you been a good boy? 'Cause god knows if I want to be a bad girl when you're around!\"\n\nAnd...\n\nHe smiled!\n\n\"What's going on?\" he asked, half-pretending he did not know.\n\nThen I slowly leaned over him, making my hard nipples caress his hairy chest until my eyes where right in front of his and I kissed him. It was an intentionally shy and brief kiss.\n\n\"The problem is what is not going on, even though I keep thinking of you every minute, whether I'm awake or not...\"\n\nWithout a word he kissed me back, but this time it was a long passionate kiss. He then toppled me, making me giggle and stood on his knees, just about to remove his pants, when I rose and did it for him, finally seeing his huge cock for the first time. It was almost a religious moment. For a while I remained in awe, agape, stroking it, and then I gave one shy lick on his glans, making him shiver. Feeling immensely powerful, I lowered myself even further to pass my tongue over the length of his shaft, while finding one of his hands and guiding it towards my wet pussy, which he grabbed with confidence, as if it had always been his, making me moan. I spotted a grin on his face, when he suddenly put a hand on my head and pushed it down, making me suck his member. He was inside me and it was the best feeling in the world. It had been two long and painful years since the last time I had felt truly alive.\n\n\"No, I must not do this!\" he cried, all of a sudden, and moved backwards. No, no! It was going perfectly, what did I do?\n\n\"Why not?\" I asked flummoxed.\n\n\"I am married, Leah!\" he cried, like it was the most obvious answer of the world, but it was not and I intended to show him!\n\n\"But you are not happy! You would be happy with me, we understand each other!\" I urged him.\n\n\"But I love her!\" he defended himself. I noticed that he did not deny that he was not happy.\n\n\"And I love you!\" I yelled, tears filling my eyes.\n\nThat shut him up.\n\n\"I love you, Aidan, and I know that our ages are wrong, that you are married, that you are my ward, but that does nothing to stop me from loving you!\" I whined, now seated. He then sat beside him and, like the first day I met him, he hugged me.\n\n\"I'm sorry, Leah, deeply sorry, because the truth is that I love you too.\" he whispered.\n\n\"Then what's the problem?\" I asked, breaking off his hug.\n\n\"That I still love Penelope too and you are right, I'm not happy with her anymore, but I made a vow, it is my duty to at least try and make it work again.\"\n\n\"How can you be unhappy with someone and still love them?\" I objected.\n\n\"Ah, Leah, you make me feel old now... I imagine that you have never been in a long term relationship, but when you are, you'll understand that a couple is bound to go through phases like this and if we left each other every time that it happens, nobody would be with anybody for more than a couple of years. Love is easy only at the beginning. Afterwards, sometimes, it requires an effort.\"\n\nWe remained in silence for what felt like an eternity.\n\n\"I can wait, though.\" I proposed, full of hope \"You can try to mend you relationship with Penelope and when you fail, we'll be together!\"\n\nThat did not convince Aidan at all.\n\n\"I don't want you to waste your time for me and it wouldn't make sense. How am I supposed to be committed in my effort if I know that you are still there for me if I fail?\"\n\n\"If you really love her you will be committed!\" I retorted.\n\n\"Yeah, but I love you too. Look, Leah, the waiting thing, it just doesn't work. It's stuff for movies and books: the truth is that love cannot be put in a fridge and consumed later. What we have makes sense only now and now, we cannot be together. If I could be with you and Penelope at the same time, I would, believe me, Gumdrop.\"\n\nMy world had just started falling apart when, as if somebody had hit the pause button and rewind, I found a way to keep it together. Gumdrop was the solution!\n\n\"Yes you can be with me and Penelope...\" I murmured \"I just need to not be me!\"\n\n\"What?\"\n\n\"I am going to be your hucow!\" I proposed, looking him in the eye.\n\n\"Leah, you are not making any sense... I understand that you are distraught, I am too, but...\"\n\n\"No, it makes a lot of sense! I don't know what to do with my life, the mere idea of going out there and making one from scratch terrifies me. And it's not just that. I don't think I can ever be like everyone else, it is as if that tsunami set me forever apart from anyone. I am already living like a hucow: technically I am human, but anyone who knows me will always see me as an oddity, I would not fit anywhere and I don't think I can take care of myself. I need a farmer, I need someone who looks at me and sees me for who I am and loves me for it. You are that person, Aidan!\"\n\nHe did not answer, but I could sense that he was considering the idea.\n\n\"And you are going to spend a lot of time at the farm, so we can be together there, because I am going to be truly yours!\"\n\n\"Are you sure?\" he asked after another never-ending silence.\n\nI answered by getting up and fetching my clothes.\n\n\"Come on, let's go and do this, before I change my mind!\"\n\nTime seemed to accelerate, beaten by my heart pounding in my throat. In my memory first I was naked in our room and then suddenly we were in the conversion center. I have no idea of what happened in the middle.\n\n\"Ok, we need to draft the contract.\" said Aidan, heading towards a desk where a notary was waiting.\n\n\"Can you do this by yourself?\" I asked panicking. He frowned:\n\n\"It concerns you, how can you not be present?\"\n\n\"I cannot discuss my terms of being a hucow, Aidan! I'm being able to do this just because it still does not feel real, but the moment it does, I am not sure I can muster enough courage not to chicken out!\"\n\n\"Well, that's a problem, isn't it?\" he replied sarcastically.\n\nI ignored him and kissed him on his lips:\n\n\"I am sure I love you more than anything, but becoming a cow is a big thing and scares me shitless. I want to do it for you, and I trust you. Just go there and write the contract without having me in mind, but the hucow of your dreams, and I'll just sign it, because I am going to make you the happiest farmer on earth!\"\n\nAnd with that, I left Aidan slightly agape, to find Fergie.\n\nShe was presenting her sisters to a customer, who chose Princess and started humping her. When she came out of the fence, I grabbed her shoulders from behind and said hastily:\n\n\"You. With me. Now.\"\n\n\"And good evening to you too.\" she replied sardonically, tipping her cowboy hat, and slightly amused.\n\n\"I need you to distract me.\" I explained, after we had reached a calmer part of the fair.\n\n\"What do you want me to do, dance? Look, I know I dress like a cowgirl, but I don't do country dance or anything.\" she joked \"What happened, what did he do?\"\n\n\"It's not what he did, but what I am about to do!\" I said anxiously, pacing.\n\n\"Ha! I knew it! You are going to be his cow!\" she exclaimed, to my astonishment.\n\n\"How did you know?\" I asked, astonished. Also, I felt I was about to puke.\n\n\"Because it is the obvious solution, silly! You scared? You look like you are about to be sick...\"\n\nShe was so right! I leaned against a pole, but nothing came out of my mouth.\n\n\"Come here, girl.\" murmured Fergie, taking my face between her hands \"It's going to be fine!\"\n\nSomehow the warmth of her hands calmed me down a bit.\n\n\"You know what? We should celebrate! We are going to choose your cowbell!\" she proposed.\n\nAnd so she took my hand and dragged me to the stalls that sold cow accessories. Fergie was talking but I was in a trance. I looked at the elaborately decorated collars, the hooves with various pattern of cow hide, bull rings of assorted metals and shapes, tails ending in butt plugs, vibrators and crops, to train your cow with reward and discipline, stick and carrot, actual sticks to use for caning... Could I really do this? Forego my humanity, be treated like an animal, constantly fucked by complete strangers, for love? My hands were trembling visibly and Fergie noticed. She stroked my hair, trying to soothe me with words. And then I saw it, a sign from the universe. Surrounded by more traditional cowbells, there was one covered with glitter, pink, almost looking like a...\n\n\"Gumdrop.\"\n\n\"What?\" asked Fergie, confused.\n\nI pointed to the bell and said:\n\n\"That's my bell!\"\n\n\"Isn't it a little tacky?\" replied Fergie, somewhat skeptical.\n\n\"No, you don't understand, I know how he's going to name me: Gumdrop. That one is perfect.\"\n\n\"Oooh!\" murmured Fergie, now understanding \"I'll take that one please.\"\n\nI was still a little out of it, so she managed to pay before I could stop her.\n\n\"It's a present, silly!\" she said, when I weakly tried to pay her back.\n\nI thanked her with a kiss on the cheek:\n\n\"Thank you Cheeky! But seriously, I hope that the contract is ready, because I'm not sure I can take any more of this.\"\n\n\"Don't worry, I'll make you sign it!\" she reassured me.\n\nIt took us a while to find our way back to the marquee where my transformation would take place.\n\n\"Here you are!\" called Aidan, getting up, holding a bunch of papers in his right hand \"I feared that you had changed your mind!\" he then whispered worriedly while he was hugging me.\n\n\"Sorry!\" I apologized, blushing a little, since for a brief moment I truly had changed my mind, before finding my bell. The bell!\n\n\"I had to find my cowbell!\" I explained, doing my best impression of a shy girl, and I showed him.\n\n\"Oh, it's perfect for my Gumdrop!\" he approved, while I giggled.\n\n\"So, where do I sign?\"\n\nPutting a hand on my back, he ushered me to the notary table once again. This time I sat, Fergie and Aidan beside me, holding my hands.\n\nThe notary looked nothing like I ever pictured a notary, but rather like a middle-aged cowboy.\n\n\"So, Leah, have you perused your contract? Is there anything you need clarified?\" he asked with a bored voice. I had no intention to read it, now that I had finally regained my confidence.\n\n\"Yes and no, thanks.\"\n\n\"Ok, your future owner here has given me the bank account to which your compensation will be transferred. Could you please check it?\"\n\n\"Compensation?\" I stuttered. The notary looked at me suspiciously.\n\n\"The money you earn.\" he explained annoyed.\n\nI stood up and grabbed Aidan's arm:\n\n\"Will you excuse us for a moment?\" I said, in a rather panicky voice.\n\nWhen we were at a safe distance I spoke again:\n\n\"I'm not doing this for the money! I don't want your money!\"\n\n\"But you gotta take it, otherwise it's not legal.\" he explained and then added \"If you really don't want it, you can transfer it back to one of my accounts. You just have to set a periodical transfer.\"\n\nAidan always understood me. After a little tweaking, I managed to connect to my online banking account and set everything up. I was finally ready to sign! The first signature was hard, because my hand was trembling, but as soon as Aidan held the other one in his, I became more confident. In a few seconds it was over.\n\n\"Well, now, Gumdrop, you can go to the operating room for the transformation.\" said the notary, in a clearly rehearsed formula.\n\nMy scared look was met by Fergie, who promptly reassured me:\n\n\"Don't worry, they just have to make a couple of tiny cuts for the chip and the thingy that will make your boobs become magnificent milk producers!\"\n\nWe then walked in a tent that looked like a field hospital. A man in a white coat was waiting for us beside a padded bed. Aidan introduced me:\n\n\"This is Gumdrop.\"\n\n\"Well, hello there, Gumdrop.\" replied the man, who now was definitely sending very creepy vibes \"Disrobe and come sit on the table, please.\"\n\nEveryone was looking at me. It was silly, but I was embarrassed of getting naked in front of a stranger, which did not make sense, considering what I was about to become! As I said, it had not been real in my mind then. Trying to pretend I was in a hospital, I removed all my clothes.\n\n\"Cool, you're pink down there too!\" observed Fergie, when I sat on the table \"Love the tat!\"\n\nI managed to smile at her and say \"Yeah, I wanted to do something reckless for my eighteenth birthday.\" with a trembling voice.\n\n\"Don't worry, there's nothing to fear. You'll go to sleep as a girl and you'll wake up as a cow!\" she reassured me.\n\n\"Sleep?\" I replied.\n\n\"Yeah, for psychological reasons we find it better to put you to sleep.\" explained the doctor, who had not bothered to introduce himself.\n\n\"Wait, before you do, could you leave us for a second?\" Aidan asked.\n\nAfter the doctor and Fergie obliged he said:\n\n\"Ok, a couple of things. One: do you have any preferences for the other cow? Since you are going to spend a lot of time together, it's only fair that she is one you like.\"\n\n\"You are so thoughtful...\" I thanked him \"But I wouldn't know. All those that made to the shortlist seemed as nice as the next... hucow!\"\n\nIf only Cupcake was available... Wait, but she was!\n\n\"Well, then...\" Aidan was saying, when I interrupted him.\n\n\"Wait! Now that you don't have to buy a second cow, can you acquire Cupcake?\" I asked timidly.\n\n\"Oh, yeah, you are right! Sure, anything for my Gumdrop!\" assured Aidan.\n\nHis Gumdrop... Somehow, hearing him saying that swept away any residual doubt in me.\n\n\"Second: I love you and I'll see you when you wake up!\" he added and then we locked in a passionate kiss, the first of many."
    ],
    "authorname": "bushyTrail",
    "tags": [
        "anal sex",
        "big tits",
        "hucow",
        "lactation",
        "milk",
        "older man",
        "public",
        "romance",
        "transformation"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/gumdrop-ch-03"
}