{
    "title": "The Big Tits Club Ch. 53-54",
    "pages": [
        "THE BIG TITS CLUB by bluedragon\n\n****\n\n-- CHAPTER 53: Home --\n\n****\n\n\"I'm Rachael. Pleased to meet you.\"\n\nThe young woman's resemblance to my Head Girlfriend was unmistakable. \"You're Sam's older sister. She's talked about you.\"\n\nRachael's eyes narrowed. \"Somehow I doubt that.\"\n\nI smirked and looked down for a moment. I knew Sam wasn't particularly close with either of her older siblings. \"Well, she's talked enough for me to know you're finishing up your first year at Stanford Med. She's not here, by the way, although I do expect her back pretty soon. Won't you come in?\"\n\nRachael nodded and walked past me into the foyer when I stood back and gestured her inside. I couldn't help but let my eyes give her the once over. Including the sisters' mother, all three Smith women were quite buxom and curvaceous. All three dyed their hair platinum-blonde. But Rachael looked to have picked up her father's height and stood perhaps two inches taller than both Sam and their mom, and Rachael's hair was also styled with extra waves and curls that bespoke of additional time spent in front of a mirror each morning. Her outfit was both tasteful and alluring. And at the age of 23, Rachael carried herself with poise and maturity while remaining at the peak of her youthful beauty.\n\nAll in all, she was a very attractive young woman.\n\nI closed the door and turned around to find that attractive young woman looking not at me, but up the stairs instead. Zofi was coming down, but the brunette stopped only a third of the way down in surprise and exclaimed, \"Rachael? What are you doing here?\"\n\nRachael didn't react except to frown as her eyes shot daggers at me. \"Does your girlfriend know you're banging her best friend?\" she accused a little hotly.\n\nI smirked and splayed my hands out openly. \"Sam knows everything.\"\n\nThe newcomer processed that, giving me a furrowed-brow expression that looked exactly like Sam's whenever she mentally processed something. I chuckled and gestured towards the formal living room, asking politely, \"Can I get you something to drink?\"\n\nRachael eyed me carefully and cocked her head to the side like a bird. \"You know what? I'm glad Sam's not here yet. You and I need to talk.\"\n\n****\n\nInstead of going home, Zofi decided to stick around and be part of the subsequent conversation out of an interest in protecting Sam. I think she worried I might say the wrong thing or otherwise give away too much information to the enemy. I was a male after all, and therefore easily misled by a beautiful girl. And Rachael was a gorgeous busty blonde used to getting her way.\n\nThat said, my loyalty to the BTC gave me the steel spine I needed to deflect many of Rachael's questions. With Zofi curled up against my side, her long legs tucked up beneath her while the lissome brunette wrapped herself around my left arm acting rather... well... more expressly affectionate than she usually acted, it was more than obvious that my relationship with Sam was not an exclusively monogamous one. But beyond that, Rachael wasn't getting anything out of me about the BTC.\n\nSome things, I could tell her. Was Sam imposing? Not at all. Did she really have her own room? Of course. Was I gay? Obviously not, especially the way I kept struggling to keep my eyes from dropping down to Rachael's cleavage.\n\nWas I prepared to let Sam stay through summer until we all went off to college? Of course. Did I love her? Yes. Would Sam come home if their dad stopped being such a stubborn arsehole?\n\n\"Well...\" I smiled and shrugged before finishing, \"That one you'd have to ask Sam yourself.\"\n\nIt wasn't a one-way conversation. Zofi had her own questions, and once Zofi got started, so did I.\n\nWhy was Rachael here? The girls' 'Mummy' had called in reinforcements. Had the 'stubborn arsehole' changed his mind about cutting Sam off for rejecting her Stanford acceptance letter and going to hated Cal Berkeley instead? Well, no. Why did Sam and Rachael never really get along?\n\n\"Well...\" Rachael laughed and looked away for a moment before finishing, \"That one you'd have to ask Sam yourself.\"\n\n\"I intend to, but what do YOU think?\" I pressed. \"When you first came to the door and I said that Sam had talked about you, your response was rather doubtful. You seem perfectly aware that your relationship is a little strained.\"\n\nThe gorgeous blonde sighed. Her right leg was crossed over her left knee with her hands interlaced atop the right knee, and she looked down at her thumbs for a moment, watching them flip-flop which thumb was on top. After a deep breath, she regarded me coolly and stated, \"The short answer is that she's always been jealous of me. I've had everything she ever wanted, and she's always struggled to measure up.\"\n\n\"Not that you ever helped her,\" Zofi chided with more than a hint of bitterness. I got the impression Sam had bitched about her older sister to Zofi many times.\n\nRachael sighed. \"I'm five years older than her. By the time she was in eighth grade I was already in college. I had my own life, my own things to deal with--\"\n\n\"And didn't have time for your baby sister,\" Zofi finished for her.\n\nRachael pursed her lips and narrowed her eyes. \"It's not my fault Mum and Dad spent Sam's formative years trying to challenge her by saying, 'Well Rachael did this' or 'When Rachael was your age, she could already do that'. I heard about all that stuff second-hand weeks or even months after they happened. And what, was I supposed to apologize for the things I'd accomplished when I was younger?\"\n\n\"No, everyone should be proud of their accomplishments,\" I replied seriously. \"But at the same time, was everything easy for you when you were younger? Did your parents challenge you too by saying, 'When John was your age he could do this or that'? Did you ever struggle to measure up to their expectations?\"\n\nRachael sighed. \"This is the part where you tell me I could've at least let my baby sister know things weren't always easy for me, either. Let her know that I had my own fears and insecurities I had to get past in order to achieve what I did.\"\n\nI shrugged. \"You said it, not me.\"\n\nThe prim blonde scoffed, \"Nobody had to help me. I didn't have a big sister to reassure me when my parents were tough.\"\n\n\"Apparently, neither did Sam,\" I shot back.\n\nRachael scowled a bit, and I started to feel bad. Here was a young woman I'd only just met, and a guest in my home at that, and here Zofi and I were basically attacking her. So before she could respond, I held my hand up and apologized, \"I'm sorry. It's not my place to get on your case like this. We've only just met.\"\n\n\"Well we haven't only just met,\" Zofi challenged, her gaze flinty.\n\n\"Zofi, please,\" I soothed, rubbing her hip. She gave me a confused look while I asked her to cool it with my eyes. And when I turned back to Rachael, I stated firmly, \"Regardless of your current relationship or lack thereof with Sam, you're here. That means you give a shit. At least, I hope you're not here only because your mom asked you to make an appearance and you'd be happy to leave now and tell her, 'I tried.'\"\n\nRachael eyed me curiously, her expression again quite familiar to one of Sam's expressions. It was as if she'd already formed her opinion of me as just another guy unworthy of her consideration, but my abrupt shift in tone was fucking with that opinion.\n\n\"You, me, Zofi... even your mom who apparently sent you here to make peace,\" I continued, \"we all care about Sam. We want her happy. And as much as I might selfishly want to keep my girlfriend under the same roof as me, I know how much it hurts her to feel estranged from her family like this. You asked me before if Sam would go home if your dad stopped being such a 'stubborn arsehole'. I think the answer is: Yes, she would.'\"\n\nZofi frowned. \"But Sam loves it here! She loves being here with you. She loves being here with your mom. Why would she move back home?\"\n\n\"Because it's 'home'. You're right: she gets to be with me, she gets along great with Mother, and she doesn't have to put up with her parents comparing her to Rachael. But this place can never feel like home. Every morning, she wakes up in my arms not only because she enjoys waking up in my arms, but because the few times she wakes up in the spare bedroom, she's confronted with the fact that she's not living under her own roof. This isn't where she belongs.\" I raised my eyebrows and gave Zofi a serious look. \"Have you noticed she never completely unpacked? So much of her stuff is still in suitcases or boxes, ready to move back to her REAL home when the coast is clear.\"\n\nRachael frowned. \"But why? When I was home, I couldn't WAIT to get out of the house and out from under my parents' thumb. From my perspective, it seems like Sam actually did something I could never do: break free of their expectations, move out while still in high school, and find a really nice situation for herself with you. If I were in her position I'd stay here instead of going back into the lion's den.\"\n\n\"Yeah, why not just stay here?\" Zofi chimed in. \"Does it even really matter? In little more than three months she's moving to Berkeley with you anyway, and whether or not she lives at her own house will be completely moot.\"\n\n\"In Berkeley, Sam and I will live in our home together. That's different from feeling like an outsider crashing in my home. Plus, whether or not you think three months is a long time,\" I sighed while reaching up to caress Zofi's cheek, \"when three months is all the time you have left, you don't want to waste a minute of it.\"\n\nWhimpering softly, Zofi grabbed my head and kissed me fiercely. I lost myself in her embrace and kissed back with equal passion, at least until I remembered we had an audience and pulled away to glance sheepishly back at Rachael. \"Sorry about that.\"\n\nThe older girl's eyes clicked back and forth between me and Zofi. \"What, exactly, is your relationship with each other?\"\n\nZofi wrapped her arms tighter around my shoulders. \"I'm his girlfriend.\"\n\nRachael's eyes narrowed. \"Mum told me Sam was his girlfriend.\"\n\nZofi rolled her eyes. \"Sam's his Head Girlfriend. I know: it's complicated.\"\n\nRachael blinked and looked thoughtful. \"You know, Mum DID tell me to report back every little detail I learned, like the bit about whether or not Sam has her own room. But I think I'm going to omit this little detail. She'll be happier thinking they're exclusive. As for Dad, he actually still thinks Matty's gay and Sam's just crashing because he has the room.\"\n\nZofi giggled.\n\nRachael gestured at the pair of us. \"The three of you clearly have things worked out to your satisfaction. So why mess with that? You still haven't explained why you think she wants to come home.\"\n\nI sighed and took a deep breath. Giving Rachael a frank look, I explained, \"You probably don't know much about me, but my parents divorced when I was little and my mother was absent most of the time afterward; I pretty much spent my formative years next door with the neighbors. I'm fairly independent now, and while my mother and I have quite honestly had a much better relationship these last few months, I still spent years looking around at other families - at my friends and the way they interacted with their parents -- and couldn't help but feel a deep sense of loss.\"\n\nMy voice was a little thicker than I would've wanted, and Zofi squeezed herself around me protectively. I patted her shoulder, let the side of my head press against hers, and then looked back at Rachael.\n\n\"Running away and moving in with me for good would effectively cut Sam off from her parents. On the surface, it may seem like an ideal situation, but we all know what kind of message that would send if they didn't reconcile before the end of the year. She's insulting her parents by moving out right now. She's disrespecting their authority over her, which is why your dad is being so stubborn about not giving in. The fact that she went to such an extreme measure hopefully got the point across how serious she is about NOT following in the rest of your footsteps, but at the end of the day I don't think she's ready to completely burn the bridge. If she did, she'd forever feel that same deep sense of loss I've felt all my life at not having the family everybody else around me has. And as stubborn as she is about not giving in before your dad does, she really does want to go back home where she belongs.\"\n\nRachael didn't respond to that right away. She just sort of processed what I was saying for a while, and again I was struck by how similar she appeared to Sam. Finally, though, she looked back at me. \"You really believe she wants to come home?\"\n\n\"I know it,\" I stated with certainty. I arched my eyebrows, adding, \"And this is where you come in.\"\n\n\"Me?\"\n\n\"You agreed to come here at your mom's request, right? I'm guessing her marching orders were to talk to Sam and somehow convince her to come home, in addition to doing a little fact finding about her situation here with me. Well that works both ways. If you're the golden child that Sam was always struggling to emulate, that means you've got some clout with your parents. They'll listen to you. YOU can convince your dad to extend an olive branch, because I'm telling you now that as much as Sam wants to reconcile, she will NOT make the first move. Go home. Tell him what I've told you. He has the power to get his baby girl to come back to the nest, if only he can let go of his pride.\"\n\nRachael shook her head. \"I dunno about that. You think Sam's stubborn? You've never gone up against my dad's stubbornness. I'd put 50-50 odds on him caving in sometime around the next millennium, let alone before you two leave for Berkeley.\"\n\nI gave her a frank look. \"It's worth a try. IF you're willing to make the effort for your little sister.\"\n\nJust then, the sound of a key in the front door drew our attention. I turned my head to glance out the window, and sure enough Sam's Escalade was parked outside in the driveway.\n\nMoments later, my Head Girlfriend herself walked in and immediately fixed her older sister with a frosty stare. \"Thought'ah reckonize' yo' cah'routsahd. What'ah y'doin' heeyah?\" Her accent had gotten thicker.\n\nAlthough she'd certainly thawed while chatting with us, Rachael's demeanor immediately switched back to 'imperious elder sister' at Sam's arrival. She rolled her eyes and scoffed condescendingly, \"Don't ask questions to which you already know the answer.\"\n\nSam narrowed her eyes and it looks could kill, Rachael would be dead a hundred times over. For a long few seconds, the two sisters simply stared each other down.\n\nBut eventually, Sam spoke.\n\n\"Zofi, would you be a dear and walk Matty over to Belle's place? It's nearing dinnertime.\" Sam's voice was ice and her gaze never left Rachael's face.\n\n\"No welcome hug or goodbye kiss for your loving boyfriend who was schtupping your best friend while you were gone?\" Rachael taunted.\n\n\"Matty, Zofi, and I are perfectly comfortable with our relationships to not get stung by your pathetic barbs. The three of us will talk later.\"\n\nI nodded as Zofi and I got up, agreeing, \"That we will.\"\n\nWhen Zofi got up, she grimaced a little from my afternoon's maiden voyage into her rear passage. And when Sam noticed, she immediately lost her ice queen demeanor. \"Oh shit, Zofi, I was gonna ask how--\"\n\n\"It's cool. Matty was great,\" her BFF interrupted with a small wave. \"We'll find another time I can give you all the details.\"\n\nSam rolled her eyes and scowled at Rachael, grumbling, \"Just one more thing to be pissed off at her about.\"\n\nI walked over to Sam, and she gave me a quick peck. I didn't ask if she needed anything from me; she'd already made clear she could handle this and would feel better if I was out of the house. \"I'll bring you a plate back,\" I told her.\n\n\"Thanks,\" she muttered, her attention already back on Rachael.\n\n\"Oh, and don't break any furniture,\" I added.\n\nThat got Sam to look back at me in confusion. \"What?\"\n\nI bared my teeth and hooked my right hand into a claw. \"Meow...\"\n\nSam snorted and cracked a smile. I gave her a quick kiss again, and then Zofi and I headed out.\n\n****\n\n\"So what happened then?\"\n\nSam took a deep breath and exhaled slowly, releasing the tension in her shoulders as she did so. We sat together atop my bed, she with her legs crossed between my two outstretched legs while I continued to massage her neck.\n\nKeeping her head pitched forward and limp, allowing me to tilt it to one side or the other as my magic fingers worked at her tense muscles, Sam muttered, \"She said she'd talk to Dad and work her 'Favorite Child' magic on him for me. She's always had him wrapped around her little finger. If she tells him he's being a stubborn arsehole and he needs to apologize, he might actually listen.\"\n\n\"And then what?\" The moment the words left my mouth, I grimaced and silently cursed myself for the selfish whine in my voice.\n\nSam caught it, and she slowly raised her head back upright. Reaching back with her right hand, she briefly covered mine to stop my neck massage. And then after turning her head back to look at me and evaluate the expression on my face, she let herself gradually fall backward until her weight pressed against my chest and caused me to recline back against my pillows and headboard.\n\nThus situated with her head on my left pectoral, Sam reached up to grab both of my hands and pull them to her big breasts. She'd been topless for the massage after all. After she planted my palms on two of my favorite things in the world, she glanced up at my worried face. \"I love you, Matty,\" she began reassuringly.\n\n\"I love you, too,\" I replied sincerely but screwed up my face immediately afterward. \"I'm sorry. I promised I would never be clingy or otherwise impede on your normal--\"\n\n\"No, no, it's alright, don't apologize,\" she cut me off with a coy smile. \"I rather like the idea that you'd miss me if I was gone.\"\n\n\"WILL you be gone?\"\n\nSam exhaled. \"What I was thinking would make the most sense - under the assumption you and Beverly won't mind -- is me staying here on school nights: Sunday through Thursday. Then I can spend weekends with my parents, sleep in my own bed, and give you back to Belle at the same time.\"\n\nI smiled immediately. The worst-case scenario had been Sam moving home completely, but it had also been the scenario I'd believed was most likely. For her to suggest remaining here with me five nights a week was more than I could've hoped for, and it showed in my eager, \"Really?\"\n\nSam giggled and pressed my palms a little tighter around her tits. Already I knew that if she adopted this position more often: lying on my chest letting me hold her boobs, she could probably get me to agree to damn near anything. Giving me a warm smile, Sam said, \"I'm happier in this house than I am in my own and I'd much rather be here with your family than mine. But at the same time, my house is...\"\n\n\"Home,\" I finished for her. \"You don't need to explain yourself.\"\n\nSam nodded. \"And I really do miss my parents, even my stubborn arsehole Dad. But I think spending weekends with them will be more than enough time to remind me why I'll be eager to return here Sunday nights.\"\n\nI nodded. \"I'm glad things seem to be working out for you.\"\n\n\"It would seem I have you to thank for that.\"\n\n\"Me?\"\n\nSam smiled. \"Rachael actually apologized to me for not being a better big sister growing up. Do you know how many times she's ever apologized for that?\"\n\nI blinked. \"Uh, not many, I'd imagine.\"\n\n\"Zero,\" Sam corrected, \"at least until today. I asked her about that, and she said talking to you made her realize that apologizing was the least she could do to make it up to me.\"\n\n\"I... uh... didn't realize I had that much of an impact.\" I shrugged.\n\n\"At the same time, she's not thrilled about my situation consuming her precious time to not only visit me, but to also spend an evening using her leverage with Dad to get him to admit he's in the wrong. And for that, she said I'm going to owe her big time.\"",
        "\"Umm, okay...\"\n\nSam smiled. \"Do you know how many times she's ever told me I owe her one?\"\n\n\"Zero?\"\n\n\"Good guess.\"\n\nI gave her a curious look. \"So what does all that mean?\"\n\nSam gave me a hopeful smile. \"I think it means she might start making an effort to actually BE my big sister.\"\n\n****\n\nEverything happened really fast after that. It was late that night when Sam's dad called my house and had a brief conversation with his daughter. The very next afternoon, instead of lounging around my swimming pool with the rest of the BTC for one of our regular Friday afternoon hangout sessions, Sam was in her room packing up. Her books and the majority of her school clothes she was leaving behind for the expected school nights she'd be spending with me, but her most precious personal mementos she was taking back where they belonged: in her bedroom. In her home. And all too eager to return, as soon as she was done packing, she came to give me a quick kiss goodbye, told the rest of the girls she'd see them at school on Monday, and then left my house as suddenly as she'd arrived nearly five weeks earlier.\n\nIn the evening, I found myself standing in front of the toilet brushing my teeth. Yes, you read that right. See, my bathroom mirror ran the length of the countertop and across the wall above the toilet, and Belle was brushing her teeth right next to me over the sink. She tended to let more foamy toothpaste dribble out of her mouth than I did (especially whenever she did that gag-reflex-probing thing as \"training\").\n\nWe moved around each other with practiced ease, the same way we moved around each other in her kitchen while making dinners together. When I was done and needed to rinse my mouth, she wordlessly stepped to the side while continuing to rub on her facewash. When I was done rinsing, I wordlessly stepped aside while she cleaned off her face.\n\nWhen we were both done, we climbed into bed together and she lay her head on my chest while cuddling herself around me in a firm hug. But as pleasant and familiar as the position felt, I couldn't help but sigh a little mournfully.\n\n\"Missing Sam a bit?\" Belle asked softly.\n\n\"Yeah,\" I sighed. A moment later, I bent to kiss her forehead. \"Thank you for being here with me. I need you tonight, need my anchor, to remind me everything will be alright in the end.\"\n\nShe smiled immediately, and then looked up at me. \"Everything WILL be alright.\"\n\nI sighed again. \"It's weird. Three weeks ago we had this big discussion about whether or not Sam would become my girlfriend. She said she felt obligated to become an affectionately devoted girlfriend while I told her I didn't want her changing her behavior just for me. I sort of figured things would stay status quo, but in the end having her living here for so long just lent itself to us spending an incredible amount of time together. I got used to her presence. I got used to waking up with her every morning, even if we didn't always fall asleep together. And just the idea that she's back home right now instead of in the bedroom across the hall...\"\n\nWhen my voice trailed off, Belle rubbed my chest as she murmured, \"You miss her. That's to be expected. And even though you stated you wouldn't expect her to always be here for you--\"\n\n\"I started expecting her to always be here for me,\" I muttered. \"I mean, I always knew she wanted to go back home, and I told myself to be mentally prepared for her to go back home, but I let myself start to believe it might never happen. And with the three of us going to Berkeley together, I started to think I might NEVER have to wake up in the morning without her under the same roof for the rest of our lives.\"\n\nThat comment got Belle to sit up and look at me. \"For the rest of your lives?\"\n\nI blinked. \"Well, for the next three months and around four years at least.\"\n\n\"Nuh-uh, you just said 'the rest of our lives',\" she teased with a smirk.\n\nI chuckled and shook my head. \"Tell me YOU haven't thought about getting a place together in Berkeley being the start of you never having to wake up without me under the same roof for the rest of our lives.\"\n\n\"Of course. A lifelong 'sister' gets to think about being together with you forever. Isn't that the whole point?\"\n\n\"I suppose.\"\n\n\"Sam, on the other hand, is a girlfriend.\"\n\n\"So are you.\"\n\n\"Pssht.\" Belle waved me off. \"I'm one of seven girlfriends at the moment, and even that's only temporary until the BTC comes to an end. Sam's never gonna be your sister, so that pretty much means the only way you're going to live the rest of your life together is if you marry her.\"\n\nI sighed. \"Let's not read too much into a throwaway comment like 'the rest of our lives' unless you want me to go back to strictly avoiding any discussion about other girls with you.\"\n\n\"Not necessary. I'm not jealous of Sam. I think she's perfect for you, and she makes a much better girlfriend for you than me. I really AM happy with my place in your life, and I'm looking forward to the way our relationships will grow once we're on our own together in Berkeley.\"\n\n\"Me too.\"\n\n\"Besides, I know something you don't that is sure to make you feel better.\"\n\n\"What's that?\"\n\n\"So I got to talking to Zofi this afternoon. She told me about your conversation with Sam's big sister. About how you figured your house could never really feel like 'home' for her.\"\n\nI arched an eyebrow. \"And?\"\n\nBelle grinned at me. \"So Zofi talked about all that stuff with Sam at school today to get Sam's take on the idea.\"\n\nI arched both eyebrows. \"And?\"\n\nBelle squeezed me tightly. \"Apparently Sam told her, 'Home is where the heart is, and my heart is with Matty.'\"\n\nI squeezed Belle tightly in return. \"You're right: That does make me feel better.\"\n\n****\n\n\"Holy crap,\" I muttered in absolute shock at the sight before me. \"If this is the way you're going to greet me whenever you're gone for a couple of days, I might encourage you to leave more often.\"\n\nSam giggled and asked, \"I take it that means Master likes Tight-Arse Slut's surprise?\"\n\n\"Master likes VERY much,\" I confirmed.\n\nBefore me, Sam and Holly knelt completely naked in the middle of the foyer wearing blindfolds with their wrists handcuffed behind themselves. Behind me, Belle closed the door quickly. We had just walked over from having dinner with her dad, and I'd been wondering why she was furtively glancing around during the walk as if afraid somebody might see us. Thankfully, the street had been empty when I opened the front door. I also understood now why she'd stepped away for a moment just before we left, probably to make a phone call.\n\nIn less time than I would've imagined, Belle managed to strip herself naked and walk over to me holding a third blindfold and set of lined handcuffs.\n\n\"Somebody did some shopping over the weekend,\" I marveled.\n\n\"Ask your Head Girlfriend,\" Belle giggled while giving me a pixie wink. Moments later, I covered her eyes and pressed her naked body against my midsection while reaching down to fasten the cuffs behind her back. Once the metal audibly clicked, I seized her head in my hands and rather roughly shoved my tongue between her lips. She caught on quick and moaned into my mouth while I let my hands rove all over her naked body.\n\n\"Master orders his Sluts to stand up before their knees get bruised and wait here for just a moment,\" I stated after breaking my lips away from Belle's. Silently, both Sam and Holly obeyed.\n\nMeanwhile, I held the back of Belle's head and guided her in front of me to make sure she didn't accidentally bump into anything while blindfolded. I led her into the family room, grabbed three of the throw pillows, and set all of them down in a row. After guiding Belle into a kneeling position atop the far-right pillow, I returned to collect both Sam and Holly as well.\n\nOnce I had all three of my Sluts kneeling in a row, I disrobed myself and stepped forward. Tight-Ass Slut was first, and I held her head in my hands and separated my thumb and pinky as silent direction for her to open her mouth. She willingly obeyed, and moments later she made little \"glug, glug\" noises while I slowly pumped my way in and out of her throat.\n\nNext came Personal Slut. Her hair was still lime green but her dirty-blonde roots were becoming quite evident, typically a sign that she was due for a change. After Tight-Ass Slut's little warmup, I was a little rougher with Personal Slut, not yet thrusting rapidly but I did push all the way in to a deep-throat and held it there a second too long, bringing her right to the point of gagging. With her wrists still cuffed behind her back, she was helpless to resist, and when I finally withdrew she gasped and coughed just a little. Still, not bad for a girl who'd actually been unable to deep-throat me the first time we ever hooked up way back in the beginning.\n\nMatty's Little Cumslut, I already knew, couldn't actually get all of me in. Even pushing a couple of inches into her throat left about an inch of my dick still remaining. Her proportions were just too small. Still, after face-fucking the two Sluts before her, I was having a little bit of a power-trip and pushed my Baby Belle a little more than I probably would have otherwise, and her little \"glug, glug\" noises really got my adrenaline going.\n\n\"Please, Master,\" Holly started whining. \"Personal Slut needs Master's dick in her mouth again.\"\n\n\"No, it's Tight-Arse Slut's turn next!\" Sam complained.\n\n\"Glug, glug, glug,\" Belle grunted as my dickhead repeatedly entered her throat. I laughed and finally pulled out of her mouth.\n\nJust to fuck with Sam's sense of order, I went out of order and went back to Holly. It was the sort of thing I would never do under normal circumstances, but when she got to referring to herself as 'Tight-Arse Slut' in the third person, normal circumstances went out the window. Sam whined and moaned and pleaded, especially when I went back to face-fucking Belle after Holly. She actually started crying, which just made her relief all the sweeter when I finally grabbed her head and skull-fucked the hell out of her for about thirty seconds. I swear she came while I did so.\n\nEventually though, I brought all three girls together around my dick at the same time, still with Sam on my left, Belle on my right, and Holly in the middle. Personal Slut licked and sucked my mushroom head while Tight-Ass Slut and Matty's Little Cumslut each stuck her tongue out and slid its tip along the sides of my shaft. I pivoted slightly, pulling out of Personal Slut's mouth and feeding my dick to Matty's Little Cumslut instead. Meanwhile Tight-Ass Slut and Personal Slut blindly found each other's lips instead, moaning as they made out with each other. Then it was Tight-Ass Slut's turn to bob her head up and down my dick. Matty's Little Cumslut ducked below to lick my balls while Personal Slut kissed Tight-Ass Slut's shoulder and worked her way up to Tight-Ass Slut's cheek. The two of them started making out again, and when Matty's Little Cumslut discovered my cock was in the open air, she tilted her head back and stuck her tongue straight up, licking the underside of my shaft back and forth from below.\n\nI lost track of how long I let the girls trade off blowing me. When Belle and Holly started making out with each other, I was inclined to hold Sam's head and just keep face-fucking her while watching the former frenemies get along so well. Eventually, though, I wanted to get inside some pussy, so after pulling away from the girls I moved their knee cushions and parked the three of them in a row along the front of the big couch, each of them bent face-first over the seat with her ass pointed back at me and her wrists still cuffed behind her back.\n\nOnce again, Tight-Ass Slut went first. She'd braided her long platinum-blonde hair into a single braid, which quite frankly invited me to grab onto it and use like horse reins to tame my wild filly. I pounded away at her heavenly snatch and yanked back on that braid to arch her back and make her groan as pain mixed with her pleasure.\n\nPersonal Slut went next, her shorter green hair offering no grip, but the handcuffs at her lower back working just fine for similar effect. She kept her head down with her cheek turned to the side, moaning and groaning as I had my way with her. And I added a few healthy spanks to her perky asscheeks as well. Plus, since my two other Sluts were within easy reach, I extended my arms to pop first two fingers into their pussies from behind so I could penetrate all three of them at the same time.\n\nMatty's Little Cumslut was last but certainly not least. Her tight twat threatened to suck out my ejaculation when her climax made her clenching cunt constrict rather compactly around my conquering cock. But I managed to ride out the waves, gave her an extra counterclockwise gyration, before withdrawing and returning back to Tight-Ass Slut's tight slot.\n\nI went through one more round of pounding my three Sluts from behind as they were bent over in a row, but after that I decided to change things up a bit. While still buried in Belle, I flipped the switch on her handcuffs to unclasp them and set them aside. Then I pulled out and did the same to Holly. Sam's cuffs were last, and I glanced back to see both Belle and Holly kneeling upright and gently rubbing their wrists. But their reprieve didn't last long before I grabbed Holly and parked her directly on top of Sam's bent-over body while she yelped in surprise.\n\nSince all three girls were still blindfolded, Belle couldn't see what was going on. With Holly yelping, I looked over and caught her reaching one hand up to peek beneath her blindfold. So I pointed my finger at her and roared, \"No peeking, Slut!\" And even though she quickly put the blindfold back into place, I suddenly seized her in my arms, bent her over the couch cushion again, and spanked her quite harshly five times while she yelped tiny little shrieks and instinctively tried to cover her ass.\n\nAfter that though, I went ahead and parked Belle right on top of Holly, creating my Three-Slut Stack. And feeling just a little bad for how hard I'd spanked her, I lined up and started fucking Belle first.\n\nOf course, I fucked Holly and Sam as well. I switched back and forth between all three Sluts, relishing their hot, tight, and wet pussies but remaining inside none of them for long enough to get any of us off, including myself. So that's when I pulled out, reassembled the girls on the floor in front of the couch, and found the small electric timer we'd used for a number of our various games, both sexual and otherwise.\n\n\"Okay sluts. Each of you gets three minutes to ride me,\" I announced while parking my butt in the center seat. \"Whoever manages to get me to cum inside her pussy gets a prize.\"\n\n\"What's the prize?\" Holly laughed.\n\n\"My cum in her pussy, obviously,\" I replied with a laugh.\n\nSam clapped her hands eagerly. \"I wanna win! I wanna win!\"\n\n\"Nuh-uh, bitches,\" Holly pronounced as she climbed into my lap first, still blindfolded but quickly getting her hand around my dick as she straddled my lap. Guiding me into position, she sat down with a sigh of contentment feeling inch after inch of my dick fill her up. And then cupping her big D-cup tits in her hands, she leaned forward to thrust her melons into my face and grabbed my head when I latched onto a proffered teat and started sucking.\n\nI actually think Holly's bright idea was to distract me with her tits so I wouldn't notice the timer, but I'd already started the countdown before she climbed aboard. She was happily humping away when the alarm went off, and I grabbed her ass and made her stop while she whined about it.\n\nSam offered to let Belle go next, but Belle was banking on me surviving Sam's pussy and deferred. So Tight-Ass Slut climbed aboard and showed Personal Slut what a few extra hundred cc's of mammary flesh could do in terms of smothering Master's face. And when her milkmaid muscles went into overdrive as she made herself climax on my cock, she almost made me cum with her.\n\nBut I held out, and then it was Matty's Little Cumslut's turn. Her teeny tiny twat squeezed and hugged and milked me for all I was worth. But when I popped a finger up her butt and started wriggling it, she found the tables turned as she thrashed and quaked in climax instead.\n\nHolly then got another round, and she mounted me reverse cowgirl while pulling my hands up so I could play with her tits. I enjoyed her firm melons for a while before sliding my hand down between her thighs. A little bit of rubbing with a little bit of thrusting made her go off like a Roman Candle, and the lime-haired beauty screamed like a Roman Candle too.\n\nBy then I was getting worn down. Sam sensed this, and she changed up tactics by holding my head and kissing me sweetly instead of really humping herself up and down my dick. Her milkmaid muscles worked me over though, and when she leaned in to lick my ear and murmured, \"Tight-Arse Slut loves Master very much,\" I couldn't help but groan back, \"I love you too.\"\n\nAnd then suddenly I was filling up her womb.\n\n\"Sounds like Tight-Ass Slut wins,\" Holly laughed as I grunted and groaned throughout my release. \"But now that we've all had Master's dick in our mouths and our cunts, will Master please shove his big fucking dick into his three Sluts' teeny little assholes? Please?\"\n\n\"Oh, that's right!\" Sam exclaimed brightly, her flooded cunt still mounted on my half-hard erection. \"I told Antonio that his prom date would lick your creampie out of my cunt while she spread her arsehole for your massive dick. We never actually did that!\"\n\n\"Until tonight!\" Holly cheered and blindly reached forward to grab Sam's armpits and start yanking. \"Up, Sam, up! Lemme at that cum!\"\n\n\"Aww, really?\" Matty's Little Cumslut whined, only her pouty mouth visible as the blindfold covered her nose as well.\n\n\"You can still slurp out Matty's creampie from whichever arsehole he spunks,\" Sam reminded her.\n\n\"I know, I know,\" Belle muttered sullenly. \"I just want ALL of Matty's cum.\"\n\n\"I'll snowball it to you after I suck it out,\" Holly offered.\n\n\"Ooh! Goody!\" Belle brightened.\n\nSighing, I reached forward and removed Sam's blindfold, and then said, \"Master orders his Sluts to take off their blindfolds. Personal Slut, come clean out Tight-Ass Slut. Matty's Little Cumslut? Come get me ready to sodomize Personal Slut's teeny little asshole.\"\n\nThe three girls eagerly went into action. Sam pulled off me and flipped over, her knees up and her thighs spread. Holly dove in and started slurping sperm straight from Sam's sodden snatch. And when Belle came to me, I grabbed her head and brought it to my crotch for use as a fluffer. She happily took to the task, corkscrewing both hands around the base of my re-growing shaft while sucking powerfully on each upstroke in order to coax my prick into elongating once more.\n\nAnd that was just Round 1.\n\n****\n\nHolly did spread her asscheeks for me while she munched away at Sam's cunt. By then though, she'd already slurped out all of my spending and snowballed it to Matty's Little Cumslut. Still, it was the thought that counted, and the green-haired girl grunted and clutched Sam's thighs while absorbing every inch of my dick burrowing deeper and deeper into her lubricated ass.\n\nMeanwhile, Belle knelt next to me alternately shoving her tongue into my mouth and feeding her tits to me. It was fun making out with my impish pixie, but after a minute or so, I pulled back and said, \"Go upstairs and buckle on Matty Junior.\"\n\nBelle's pale green eyes glowed with excitement, and she eagerly went to complete her task.\n\nIn the interim, I focused on reaming out the green-haired girl. While no stranger to anal sex with me, she was still much tighter than Sam, Mari, or Naimh, and I couldn't just start pounding away up her backdoor. She grunted and groaned as I slowly pumped in and out, eventually unable to focus on eating Sam any longer. Instead, she pushed up with her forearms into more of a doggy-style position, eyes clenched as she whimpered, \"Fuck me, Master. Fuck my slutty asshole.\"",
        "\"Such a good asshole,\" I groaned as I thrust in and out of her tightness. \"Master loves Personal Slut's teeny little asshole. It's so tight. It's so hot. You're so hot! Personal Slut looks so fucking hot bent over with Master's dick up her ass.\"\n\n\"Does Master really love it? Does Master wanna cum deep inside Personal Slut's tight asshole? Please, Master. Personal Slut is your willing cum dumpster. Dump a big load of creamy cum in Personal Slut's bowels so Matty's Little Cumslut can suck it out.\"\n\n\"Master decides where he's gonna dump his big load of creamy cum,\" I grunted and sped up as Holly's anal chute started to loosen up a bit. \"Tight-Ass Slut. Crawl under Personal Slut in a sixty-nine. Oooh, that's it. So fucking hot. You two are such hot little bitches. My Sluts are such gorgeous bitches. Naked and sweaty and eating each other's cunts while Master blasts Personal Slut's tight butthole with his big dick. Fuck yeah. And here comes Matty's Little Cumslut with a second cock for Personal Slut.\"\n\n\"Oooh, for me?\" Holly exclaimed excitedly, turning her head around to see Belle literally skip back into the family room wearing a strap-on dildo around her waist. The blunt phallus bounced with her.\n\n\"Uh-huh. In a minute,\" I replied. \"But not yet. First, Master wants Tight-Ass Slut to sit up on the couch again. Master wants to watch Matty's Little Cumslut fucking her.\"\n\n\"Yes, Master,\" Sam confirmed obediently, smirking as she slid back out from underneath Holly.\n\n\"Yes, Master. With pleasure!\" Belle affirmed happily.\n\n\"MY pleasure, Slut,\" Sam growled a little imperiously.\n\n\"Yes, Mistress. YOUR pleasure,\" Belle replied deferentially, bowing her head.\n\nI blinked in surprise, and Sam shot a look of surprise at me as well. But I shrugged for her to just go with it, and Sam grinned while sitting up on the couch and spreading her legs. Moments later, Belle bent over her, plugged Matty Junior in, and started thrusting. Then, I got Holly to climb up onto the cushion right next to Sam and brace herself against the backrest. And the green-haired girl grunted as I re-inserted my fat cock into her rectum.\n\n\"Ungh, ungh, ungh,\" Holly grunted before me while I repeatedly violated her ass.\n\n\"Ungh, ungh, ungh,\" Sam grunted as well while Belle repeatedly pounded her.\n\nThe two hot babes then turned to face each other, drawing their heads close together so they could make out. A moment later, Belle caught my attention and puckered up. I leaned over and started kissing her as well, the four of us making a complete circle (square?) of lust as we pounded away.\n\nBut then it was time for my main event. Sam had been diddling Holly's clit with her right hand, and Holly abruptly broke her liplock with the blonde to howl her orgasmic release. I took that as my cue, so when Holly came down from her high, I scooped both forearms around her midsection and rolled us over so that I was sitting on the couch with Personal Slut still skewered on my shaft in a reverse cowgirl position.\n\nWordlessly, I snapped my fingers to get Belle's attention and then pointed downward between Holly's thighs. She understood right away, unplugged from Sam's snatch, and moved over to settle between Holly's thighs.\n\n\"Oh, fuck,\" Holly cursed as she felt a second blunt instrument begin pushing into her pussy while her asshole was still stretched to its limits by my fat dick. I kissed the Egyptian hieroglyph on the back of her neck and squeezed her firm tits from behind just before she let her lime green head loll back over my left shoulder. She shivered in my grasp and never stopped moaning while Belle smoothly slid forward, penetrating Personal Slut's pussy until it was completely full of fake phallus. And then, after meeting Belle's eyes with mine, I raised three fingers, silently counted down, and then we started thrusting.\n\n\"Ohhh... holy... FUCK!\" Holly gasped as she felt both cocks start alternately pistoning within the close confines of her inner core. \"Fucking 'A... Holy SHIT! I can't... I can't... I'm gonna... AAAAAWWWWWAAAAAUUUUGGGGHHH!!!\"\n\n\"Well THAT was fast,\" Sam drawled beside us, a smirking grin painting her face.\n\n\"We're not done yet,\" I grunted, using the springiness of the couch cushion to help me while Belle simply crunched her ab muscles to keep going.\n\n\"Fuck-fuck-fuck-fuck-FUCK!\" Holly cried, thrashing between Belle and me. There were no more 'Masters' and no more 'Personal Slut' comments, at least not for a little while. The feelings of two dicks pounding away at her had her in orgasmic orbit, too incoherent to string a full sentence together, and within the span of five minutes she came three times.\n\n\"AAAAAWWWWWAAAAAUUUUGGGGHHH!!!\"\n\n\"AAAAAWWWWWAAAAAUUUUGGGGHHH!!!\"\n\n\"AAAAAWWWWWAAAAAUUUUGGGGHHH!!!\"\n\n\"Can I go now?\" Sam asked after the last one, a little impatiently. She'd been rubbing herself and making out with me every now and again, but watching Holly scream her pretty little head off had my Head Girlfriend a little wound up.\n\n\"No more...\" Holly pleaded, teetering on the edge of unconsciousness. \"No more...\"\n\nBelle was sweaty but grinning. She stopped thrusting, and at my gesture, pulled out of Holly's snatch and backed away. I felt my thighs instantly get wet from the copious amount of girlcum leaking out of the green-haired girl's absolutely SOAKED pussy.\n\nI helped Holly roll off me. She wound up curled into a fetal position with her head on the armrest. The gaping black hole of her lewdly stretched anus remained pointed back at me, not looking like it would close up anytime soon.\n\nMeanwhile, Sam was already climbing into my lap reverse-cowgirl, but I stopped her movement and instead said, \"Belle, sit down.\"\n\n\"I'm Matty's Little Cumslut, Master,\" Belle reminded me.\n\nI chuckled and nodded. \"Sorry. Tight-Ass Slut, sit in her lap. See if you can suffocate her with those marvelous mountains on your chest.\"\n\n\"Oooh, yummy,\" Belle chirped happily. Soon enough, Sam was seated on Matty Junior and Belle was suckling away at a puffy pink nipple. But then Sam went still and shivered as I began burrowing inch after inch of my dick into my second backdoor of the day.\n\n\"Ohhh, yeahhh...\" Sam moaned as she felt me filling her up. \"Tight-Arse Slut loves Master's cock in her tight arse. Fuck me, Master. Fuck my slutty arshole.\"\n\nOnce I reached full depth, I leaned forward, pressing my chest into her back. I nibbled on Sam's neck and shoulders until she turned her head back so her lips could reach mine. And then we made out like a pair of teenagers in love (which we were) until Belle started banging her fists against my back.\n\nOops, I think we actually started smothering Belle in titflesh.\n\nBelle was able to catch her breath though, and together Matty's Little Cumslut and Master started making another busty slut orgasm a bunch of times between us.\n\nThe first time Sam came while mounted on our two dicks sounded like a regular old orgasm. Her breathing sped up, she bent forward to brace her forehead on the backrest, and she tightened up before groaning, \"FUUUUCK! FUUUUCK! FUUUUUUUUCK!!!\"\n\nThe second time she came was more of the same. This time, she arched back at me, making me wrap my arms around and palm her big boobies in my hands while she let her head fall back against my shoulder, screaming, \"I'M CUMMING! I'M CUMMING WITH BOTH OF YOUR COCKS INSIDE ME! FUUUUUUUUCK!!!\"\n\nThe third one though, was just a little different. She started off the same as the first one, with the sped-up breathing and bending forward to brace her forehead on the backrest. But this time when the pleasure began to crescendo deep inside her, she reached back with both hands and to grab me. \"Matty... Please...\" she whimpered.\n\nShe didn't call me 'Master', and her voice was no longer that of 'Tight-Ass Slut'. This was Sam, and I responded by slowing down my thrusts.\n\n\"I'm gonna cum. I'm gonna cum with your dick in my arse. I love feeling your dick in my arse,\" she whined. \"But I need you to feel you cum in me too. Please, Matty? Cum with me. Cum with me, lover. Cum deep in my arse...\"\n\nSo then I responded by speeding up again. \"I'm gonna cum, Sam,\" I groaned into her ear from behind as I set my forehead down against her upper back. \"I'm gonna fill up your tight asshole.\"\n\n\"Yesss, lover, yesss...\" she hissed, shivering with excitement. She couldn't maintain a grip on my body, so she settled for bracing her left forearm against the top of the backrest just above Belle's noggin and reaching back with her right hand to hold my head.\n\nAdjusting my grip on Sam's hips, I really began to lay down the lumber, focused intently on Aphrodite's anus before me and my thick shaft splitting apart the two round hemispheres of her juicy buttcheeks. I watched my cock rhythmically disappear and reappear, keeping my forehead against Sam's back as leverage so I could really put every ounce of power into my thrusting.\n\n\"Fuck. Fuck. Fuck,\" Sam grunted in harmony with my heavy hammering. \"So. Fucking. Deep.\"\n\n\"So. Fucking. GOOD,\" I grunted back, reveling in the heavenly sensations, and I could even feel the way Belle continued thrusting her Matty Junior on the other side of Sam's inner membrane. \"Gonna cum, Sam. Gonna cum.\"\n\n\"Cum in me, lover! Cum in me! I'm waiting for you! I need to feel it! Give me all your sperm! Bathe me in your seed! Flood my bowels and fill my core and FUCK! FUCK! FFFFFFFFFFFFFFFUUUUUUUUUUUCCCCCCKKKKKK!!!\"\n\n\"AAAAAARRRRRRRGGGGGGGHHHHHHHHH!!!\" I howled as my balls let go and began ejecting wave after wave of hot lava straight into the darkest depths of Sam's asshole.\n\n\"FFFFFFFFFFFFFFFUUUUUUUUUUUCCCCCCKKKKKK!!!\" Sam screamed again as she felt me filling up her core.\n\n\"AAAAAARRRRRRRGGGGGGGHHHHHHHHH!!!\" I yelled one more time as I retracted two inches and then slammed forward again, blasting her butthole with every drop of baby batter I could. Until finally I ran dry and collapsed flat on Sam's back, hugging her closely from behind.\n\nSam sighed with an utterly satisfied smile. Glancing back at me, she pecked me quickly on the nose and said, \"See this? The three of us together like this? THIS is home.\"\n\nWheezing from my exertion, I grinned and kissed her cheek. \"Home is where the heart is, and my heart is with you. Both of you.\" I craned over and also gave Belle a quick peck while she beamed up at us happily.\n\nUnfortunately, the shift in weight made Sam's forearms buckle, and she collapsed straight onto Belle.\n\nBelle's fists started hammering on my back. We were smothering her again. Thankfully, she had a good sense of humor about it and was laughing as we let her breathe.\n\nSam then bent forward and briefly started French kissing the much smaller girl beneath her. \"You've GOTTA try this, Baby Belle. Two at once?\"\n\nBelle snorted and wiggled her hips, making Matty Junior wobble within Sam's snatch. \"These two weapons are NEVER gonna fit in me at the same time.\"\n\nSam glanced back at me. \"Well, we can TRY.\"\n\n****\n\nWe didn't try fitting both me and Matty Junior in Belle that evening, not when she hadn't pre-stretched herself with the butt plug. After we cleaned up, Belle did ride me cowgirl bent over so that Holly could give her a rimjob and fingerbang her ass a bit. That seemed to be as good an equivalent to a full DP as any. In the end, I stood up and jacked my meat over all three of my horny Sluts' faces, showering their beautiful visages with copious amounts of man gunk. Sam took me in her mouth to slurp out the dregs, proclaiming that counted as a full trifecta for the evening. I wasn't about to argue with her.\n\nIn the end, Holly and Belle both went home, and my Head Girlfriend and I fell asleep in each other's arms. Sam slept especially well after spending two nights away from me. Seriously, I woke up in the middle of the night just to check on her, and she had the biggest smile on her face even in her sleep.\n\nHolly was still walking a little funny at school the next day. I tried to apologize for going off on a bit of a power trip and reaming her out a little harder than I might've done otherwise, but she just shoved her tongue into my throat and then made Master promise to do it again.\n\nOverall, it was a fairly ordinary Monday. Sam, Belle, and I drove home after school. Belle walked over to her own house. Sam's absence over the weekend had her feeling particularly affectionate and she cuddled with me on the big couch, saying she planned to ask Naimh if she could join us. The whole \"one for all\" concept had apparently been played out, and we were back to our regularly scheduled Neevie Monday.\n\nShe was late though. Most Mondays the nymphomaniac redhead could hardly wait to come over and play, but today the minutes ticked by long enough that I started to wonder if she was skipping for some reason. I didn't really worry about it at first, distracted as I was by an amorous platinum-blonde in my lap trying really hard to be a good friend and wait for Naimh while simultaneously playing tonsil hockey with me. But eventually, it was Sam who pulled away from my mouth, looked at the clock, and exclaimed impatiently, \"Dammit, where IS she?!?\"\n\nI frowned and gave Sam a serious look. \"You don't think something's wrong, do you?\"\n\n\"What, like a car accident?\"\n\nI shrugged. \"I mean, you always seem to know everything about scheduling. Did Neevie pull a 'one for all' and someone else is supposed to show up instead?\"\n\n\"No, no, we discussed this. Today is Neevie Monday,\" Sam insisted.\n\n\"Then what else could it be?\"\n\nBut just when I started to worry and think about courses of action for determining Naimh's whereabouts, the doorbell rang. Sam and I both got off the couch and went to the front door. I checked the peephole and sighed in relief, telling Sam, \"She's here.\"\n\nI opened the door and opened my arms for a hug, greeting \"Hey, we were just starting to worry about you.\"\n\nAlmost simultaneously, Sam grumped, \"You're late. What's going on?\"\n\nThe busty redhead on my front porch looked back and forth between us, practically vibrating with pent-up energy. I couldn't quite tell at first if something was wrong or she was just super excited, but I got my answer when she launched herself into my arms and squeezed me fiercely.\n\n\"I got into Cal from the waitlist! I'm coming to Berkeley with you!\"\n\n****\n\n-- CHAPTER 54: The Third Time --\n\n****\n\n\"Holy shit!\" Sam exclaimed as she leaped forward and wrapped her arms around both of us.\n\n\"I know!!!\" Naimh squealed, releasing me with one arm so she could draw Sam into our group hug.\n\n\"You just found out?\" Sam asked.\n\nThe redhead nodded. \"I stopped home to drop off my backpack and freshen up before coming over here. I always get the mail on my way in, saw the Cal Berkeley logo in the corner of one envelope, and just started freaking out. I mean I was bawling right there in the kitchen I was so happy.\"\n\nI grinned and squeezed her tightly. \"I can imagine.\"\n\nNaimh made a face. \"But then I started feeling really, REALLY bad. I mean, I had to stop, get ahold of myself, and call Alice to tell her the news.\"\n\nI winced. \"How'd that go?\"\n\nNaimh's expression was regretful but not upset. \"She said she was happy for me and knew that me joining you at Berkeley was what I'd always wanted. And while it would've been nice to go off to college with one of the BTC, Lucia and Seo-yeon are both going to UCLA, so it's not like she won't know anybody else there.\"\n\n\"That IS something,\" Sam agreed.\n\nI sighed and held Naimh close. \"You had us worried for a bit when you didn't show up on time. I started wondering if you'd gotten into a car accident or something.\"\n\n\"Sorry it took so long.\" Naimh shook her head and gestured to her face. \"After crying in the kitchen I had to re-do my makeup.\"\n\nThat got all three of us to laugh. Sam held the back of Naimh's head, and the back of mine, and she pulled us together so that our three foreheads came together like a tripod. \"Holy shit, I can't believe there's four of us going to Berkeley now. Belle's gonna be super excited.\"\n\nNaimh popped her head up and winced. \"I really hope so. She hasn't been jealous about you coming to Berkeley, has she?\" Naimh asked Sam.\n\nThe blonde shook her head. \"No, she's been a model student about it. She keeps reminding both of us that having me be Matty's official girlfriend would keep all the greedy bitches from stealing him away from her at Berkeley. She knows I'll share.\"\n\nNaimh's electric green eyes flashed momentarily. \"And will that still be the plan? You as Matty's official girlfriend at Berkeley?\"\n\nSam sensed the slight shift in tone and stood up a little straighter, and in a quietly serious voice she stated, \"We can both be Matty's official girlfriends. Two of us for sure would keep greedy bitches away.\"\n\n\"Would you be jealous about sharing him with me?\" Naimh asked hesitantly.\n\nSam shook her head slowly, looking hurt. \"How could you even doubt me?\"\n\n\"I'm sorry. It's just...\" Naimh abruptly let go of us and turned to walk further into the house. Sam and I briefly glanced at each other and followed. I think Naimh originally meant to only pace a few steps away before turning back, but when she saw us behind her, she continued on just a little further until reaching the formal living room sofa and sat down.\n\nSam sat down next to her while I took a wing chair.\n\n\"I'm sorry,\" Naimh repeated, reaching over and holding Sam's hands. \"I know this is really sudden and the three of you have been all excited planning your big Berkeley adventure together for more than a month now.\"\n\n\"You're more than welcome to join us in getting a place together, if you want,\" Sam said quickly. \"I mean, I don't know what your parents would think about getting an apartment or maybe a house with us or if they want you in the dorms. I mean, you told me they've barely tolerated you seeing Matty with the idea that you'd be going to UCLA come fall. This, obviously, would change that equation a bit.\"\n\n\"Yeah, I don't know either,\" Naimh sighed. \"I haven't even told them yet so who knows how they'll react? But as for you guys, I really don't want you to feel like I'm crashing your party.\"\n\n\"You can't crash when you've been invited from the beginning!\" Sam laughed before adding, \"Actually, think you can help me talk Zofi into giving up Princeton?\"\n\nNaimh smirked and drawled, \"Exactly how big of a house were you thinking of getting?\"\n\n\"Well it looks like we might need four bedrooms now,\" I commented with a worried look. \"Haven't seen too many of those available.\"\n\n\"We could always ro-sham-bo or play musical beds like Tahoe or Santa Cruz,\" Sam laughed.\n\nNaimh giggled and added, \"Or just have a rotation for Matty's Roommate of the Week.\"\n\n\"Let's not get crazy here,\" I muttered.\n\nNaimh sighed and squeezed Sam's hands. \"You're really not upset about me coming with you? As recently as ten minutes ago I'm sure you thought you'd get to have him all to yourself save for the occasional little sister slurping out his creampie.\"\n\nSam waved her off. \"First of all, Belle would never be 'occasional' with him. And second, I was never going to be the clingy girlfriend needing to spend all my time with him.\"\n\nNaimh's eyebrows went up. \"You mean like you're not spending all your time with him these days as it is?\"\n\nSam frowned. \"What do you mean?\"\n\nNaimh gave her a frank look. \"I mean a few weeks ago you apologized for asking him to become your boyfriend and promised me you'd never start monopolizing him.\"\n\nSam's frown deepened at the implication. \"I haven't been monopolizing him.\"\n\n\"Haven't you? When's the last time you didn't spend the night in his bed?\"\n\nSam gestured. \"I just spent the whole weekend at my parents' house.\"\n\nNaimh waved her off. \"I mean right before all that.\"\n\n\"We were doing the 'one for all thing' right before that.\"\n\n\"You KNOW what I mean!\"\n\nSam shook her head and furrowed her brow, processing. A moment later, she gave Naimh a confused look and asked, \"Have I upset you?\"",
        "\"Well...\" Naimh took a deep breath and gave Sam a serious look before stating unequivocally, \"Yes!\"\n\nSam and I exchanged a confused glance. I shifted forward on the chair and gave Naimh a serious look, asking, \"Have -I- upset you?\"\n\n\"Well, yeah... kinda...\" the redhead hedged with a sigh and a waggling hand gesture that I nevertheless interpreted to mean the same unequivocal 'Yes!' she'd just used to answer Sam. She then closed her eyes and rubbed her forehead. \"I'm sorry, I don't mean to be jealous of your relationship with him.\"\n\n\"But you're jealous of my relationship with him,\" Sam drawled quietly.\n\n\"I can't help it.\" Naimh sighed. \"You got the relationship with him that I wanted. I mean, right when I resigned myself to the idea that we didn't have a future together because we'd be going to different schools, right when I convinced myself he would be happy to run out the rest of the summer being the BTC's boyfriend instead of belonging to just one of us...\"\n\n\"I went and asked him to be my boyfriend,\" Sam finished for her.\n\nNaimh nodded. \"I told you then that I wasn't happy about it.\"\n\n\"And I told you then that I wouldn't take him away from the rest of you.\"\n\n\"And now we've circled back to the beginning where alright, technically you haven't taken him away from the rest of us,\" Naimh sighed. \"But he's clearly in love with you, Miss Head Girlfriend. Maybe I should have moved out of my parents' house to be with him.\"\n\n\"It's not too late,\" Sam muttered. \"We could probably talk Beverly into converting her office into another bedroom for the rest of the year.\"\n\nNaimh shook her head and waved her off. \"I wasn't being serious. My dad would have a heart-attack if I moved out again.\"\n\n\"I'm really sorry about the whole falling in love thing,\" Sam apologized. \"I swear I never intended--\"\n\n\"No, no,\" I interrupted. \"Sam's feelings for me haven't changed. I'm the one who told you I'd stay friends-with-benefits with the rest of the girls and then went and fell in love with Sam. I should be the one apologizing.\"\n\n\"No, no, don't apologize,\" Naimh stated while shaking her head. \"I don't actually blame either of you. I'm happy for you both. There's clear love and emotional connection between you that I never had with him, and I would never wish for anything but happiness for two of my best friends.\"\n\n\"Thank you for that,\" I said sincerely.\n\n\"It's just...\" Naimh took a deep breath and exhaled slowly. \"You may have noticed I haven't been around quite as much as usual. I mean, we still have our playtime, but...\"\n\nSam's eyebrows went up as Naimh's voice trailed off, and she nodded slowly. \"But sometimes it hurt watching him be with me? Watching what you wanted but couldn't have?\"\n\n\"Something like that.\" Naimh shrugged. \"I didn't want to begrudge you two your happiness. I figured it was easier to start the process of letting go. I was going to UCLA and we'd be separated after all, right?\"\n\nSam and I exchanged another glance. I nodded my head slowly and stated, \"Obviously, that's no longer the case.\"\n\nNow Sam leaned forward and squeezed Naimh's hands. \"This is a GOOD thing.\"\n\n\"Is it?\" Naimh looked wary. \"At first I was so excited to come with you guys, but now I'm starting to wonder if I'm not better off going to UCLA so I don't have to watch you two and feel jealous of your relationship.\"\n\n\"You're not serious.\"\n\n\"Of course I'm not serious. But...\" she sighed and shook her head.\n\nSam grinned. \"Don't you get it? You gave up on developing your relationship with Matty BECAUSE you believed you'd be separated in three months anyway. But now you don't have to! Don't you realize how different things are going to be when none of us are living with our parents anymore and you can be with him nearly 24/7 if that's what you want? I mean, the two of you might try to prove me wrong, but I'm pretty sure you can't have sex ALL day every day. So that'll leave lots of time for cuddling and conversations and building that emotional intimacy you always wanted with him.\"\n\nNaimh's eyes were on me but she replied to Sam, \"He already gets that with you.\"\n\n\"And Belle. He gets a lot of emotional intimacy with Belle, too.\"\n\nNaimh rolled her eyes and glanced at Sam. \"You're not helping your case, Miss Lawyer-in-training.\"\n\n\"Matty is NOT monogamously in love with me. He's not monogamously in love with Belle. The two of us spend the most time with him, at least ever since I moved in here, ergo we have the greatest opportunity to develop these emotional bonds. And once Matty is living together with YOU? C'mon, it doesn't take a Bachelor's Degree to figure this out.\"\n\n\"He doesn't love me like that,\" Naimh muttered a little dispiritedly.\n\n\"Doesn't mean I can't,\" I replied immediately.\n\n\"Belle's already your lifelong little sister. Sam's already the one you actually fell in love with out of all of us.\"\n\n\"You're still the most gorgeous thing I've ever seen.\"\n\n\"Even more than Aphrodite?\" Sam teased.\n\nI rolled my eyes and refused to engage with that question. But I focused on Naimh and stated, \"You and I had these conversations about our relationship not long ago. You admitted back then that if you were going to Berkeley your feelings would be different. But at the time we both thought you were bound for UCLA, and with that looming separation in the back of our minds, we both agreed on a friendship with benefits.\"\n\n\"And my changing schools changes your mind?\"\n\n\"Yes, absolutely. Before, we both agreed to be friends because our future was finite. That's not the case anymore.\"\n\n\"Look at what happened with me,\" Sam added. \"Little more than a month ago, Matty and I were likewise locked into the idea of never being more than friends with benefits and just enjoying the time we had left before college separated us.\"\n\n\"Then she told me she was coming to Berkeley, and for the first time I started to wonder, 'What if?' She and I were able to actually stop and think about our feelings for each other with the idea they might actually have some time to grow and develop.\"\n\n\"AND I moved into your house and got to wake up in your arms every morning,\" Sam added.\n\n\"Well yeah, that too.\" I turned my focus back to Naimh. \"Don't you want to come with us to Berkeley and discover what you and I can mean to each other now that we ACTUALLY have the time to find out?\"\n\n\"Of COURSE I do.\" The luscious Irish redhead sighed and gave me a sweetly sincere look. \"Because I have NEVER stopped loving you.\"\n\nI smiled broadly, and Sam leaned in towards Naimh, whispering something that sounded like, 'Go to him.'\n\nNaimh did come to me, getting off the sofa and swiftly crawling into my lap. I met her with open arms and puckered up to meet her kiss, and I felt my shoulders unknotting from unrecognized tension as our passion with each other built.\n\nI don't know how long my nymphomaniac redhead and I remained there making out, but after we broke for air, Naimh stared down at me with fire in her emerald irises. \"I am SO moving in with you guys,\" she murmured before giving me a quick peck on my nose.\n\n\"You were always welcome,\" I said warmly. \"Right, Sam?\"\n\nI got no immediate response, which made both me and Naimh turn around to look for her. Sam was no longer on the sofa, but she hadn't gotten far. I spotted her at the foot of the stairs, trying to silently sneak away.\n\n\"Where are you going?\" Naimh pouted playfully.\n\nSam winced. \"I was trying to let you two have your own moment.\"\n\n\"You didn't have to do that,\" Naimh insisted, and I expected the next words out of her mouth to suggest the three of us all get naked and celebrate her Cal Berkeley admission together. But her actual next words took me by surprise. \"I was just leaving anyway.\"\n\nSam looked pretty surprised, too. \"Wait, what?\"\n\nShe beat me to it, so I just muttered, \"What she said.\"\n\n\"I know: little out of character for me. But as much as I enjoy fucking you, I'm a little more anxious about this Cal Berkeley thing. I need to write a letter to UCLA declining their offer of admission, I need to fill out the paperwork for Cal to accept theirs. I need to figure out how to break the news to my parents. And hell, I can imagine they won't be too happy about the idea of me moving in with you. Explaining that we'll be living with Belle and Sam too might help, or it might not, I don't know.\"\n\n\"Remind them Berkeley isn't so far away and you'll be close enough to visit home regularly, unlike UCLA.\"\n\nNaimh popped her eyebrows. \"Or maybe they'll try to make me commute back and forth instead of live with you.\"\n\nI made a stink face.\n\nNaimh laughed and smiled down at me. \"I'll be back. But right now--\"\n\n\"You're just super-excited about getting into Cal,\" I finished for her.\n\nNaimh nodded. \"I nearly called you instead, but I just wanted to tell you in person before going back home to get everything in order.\"\n\n\"It's cool. I understand.\"\n\n\"Besides, it's not like I'm leaving you empty-handed.\" Naimh grinned, looking back at Sam. \"That's definitely a nice part about sharing you with others: never having to feel guilty about leaving you if something else comes up.\"\n\nI smiled and rubbed her shoulders before pulling her down for a quick kiss. \"No problem. Besides, looks like we'll have at least four more years to be together.\"\n\n\"I know! SO excited. I'm SO, so happy we're going to be together at school next year!\"\n\n\"Me too.\"\n\n****\n\nAlthough I would have been alright going to Berkeley with just Belle, having first Sam and then Naimh join us had my future looking brighter and brighter. The selfish part of me wondered if there was still time to talk the others into rescinding their other offers and coming as well, but I already knew I wouldn't actually try to do it.\n\nStill, that point got driven home clearly when Alice showed up on my doorstep for Alice Tuesday with Mari, Zofi, and Holly in tow. Literally, the first words out of her mouth were, \"Don't get any pipe dreams about the rest of us joining you. Much as the idea of having seven harem girls drop everything else in their lives to follow you around providing infinite nookie, it's not gonna happen.\"\n\n\"Uh, well, 'hello' to you too,\" I replied while taking a step back and letting them in. I didn't think it was a coincidence that the three girls coming to Berkeley with me were not present, and that the four girls not going to Berkeley were.\n\nAlice sauntered in past me, heading straight for the family room. Mari, Zofi, and Holly followed in after, although Holly paused at the door to rub my chin and lean in for a sweet kiss. \"Hello, Master,\" she greeted demurely.\n\nI chuckled and grabbed her ass as she went by, and then I closed the door and followed them in. Alice was already stripping her clothes off, although not to get naked. She apparently wore a swimsuit beneath her clothing and was preparing to head out into my backyard.\n\nNone of the other girls, on the other hand, were wearing their suits under their clothing. Still, that didn't stop them from changing into their suits right there in the family room. We'd all seen each other naked plenty of times by now, and I leaned against the wall with my arms folded across my chest to enjoy the sight of first Zofi's big D-cups, and then Holly's big D-cups, and finally Mari's massive Double-Ds being exposed for my viewing pleasure. Zofi casually put her suit top on right away and started changing her bottoms, not paying me much attention, but Mari caught my gaze and stopped to put her hands on her hips and shake her ta-tas. Moments later, she spun around, dropped her jeans just below her bubble butt, and waggled her panty-clad ass at me while I laughed and enjoyed the view.\n\nBy now, Alice was already heading out the sliding door, and Zofi would follow soon after. Mari and Holly finished changing right around the same time, but when Mari headed for the sliding door, she glanced back and found that Holly wasn't following her. \"You coming with?\" she asked.\n\nThe lime-green-haired girl shook her head and replied while keeping her eyes directly on me, \"I'm gonna help Matty pick out a swimsuit.\"\n\nMari snorted and said, \"Well, don't keep him TOO long. Alice still wants to talk to him. So see you guys in like... an hour?\"\n\nHolly chuckled and only now glanced back at Mari. \"Something like that.\"\n\nMari rolled her eyes and headed outside. Ever since I'd re-filled the pool, she'd made a point of getting her laps in for exercise. Alice was probably already doing the same, while Zofi was more likely to just lay out with a good book. She might even (gasp) actually do her homework.\n\nMeanwhile, I pushed off the wall to stand up straight and wordlessly turned around to head for my bedroom. I heard Holly silently follow after me.\n\nI actually went into my closet to fish out my regular swimsuit. Most days it felt like I spent more time on Matty's Chair giving backrubs than swimming, especially since the weather hadn't truly heated up yet, but I still planned on hopping in the water for a bit. But just after I'd unbuttoned my shorts, I felt Holly mold herself against my back and reach around my waist. Her hands slid beneath mine, dislodging them from their grip. She took over unzipping me and then pushed both my shorts and boxers down, where gravity took over to drop them down to my ankles. With my garments out of the way, her left hand dipped lower to tickle my balls while her right hand encircled my already-growing shaft.\n\n\"Personal Slut seems particularly impatient this afternoon,\" I murmured, exhaling as I let the pretty teenager with the colorful hair begin masturbating me.\n\n\"Personal Slut wants to ensure Master is properly satisfied,\" she replied firmly.\n\n\"So... Personal Slut isn't looking for personal satisfaction herself?\" I asked while glancing back at her.\n\nHolly's eyes looked up to meet mine. With a smirk she replied formally, \"Personal Slut would be happy to accept whatever Master deems appropriate.\"\n\n\"Kneel, Personal Slut,\" I commanded.\n\nQuickly, she obeyed.\n\n\"Hold your hands behind your back and open your mouth, Personal Slut.\"\n\nQuickly, she obeyed.\n\nTaking her head in my hands, I placed my swollen mushroom head into the gap of her open mouth but did not yet penetrate. Instead, I swabbed my cockhead around her lips, teasing her with it while she moaned and kept trying to get me into her mouth to no avail. She stared up at me, her hazel eyes pleading, only this time it wasn't just a playful look. Rather, she looked like she hungered for my cock and my tease was actually causing her anguish. So when I stopped screwing around, held her head, and started pushing myself inside, she closed her eyes and moaned as rapturously as if she'd just tasted the most heavenly chocolate cake imaginable.\n\nAt first, I pumped her mouth slowly. Holly obediently kept her hands back and absorbed my thrusts. When I probed her gag reflex, she swallowed, took a deep breath, and allowed me inside. Moments later she was making that \"glug, glug\" noise as I face-fucked her, but she stared straight ahead and seemed to be mechanically enduring it instead of enjoying it.\n\nI stopped then, and fully withdrew to allow her to catch her breath. She panted softly, and after cocking my head curiously, I let go of her head and instead reached up to hold the highest of the two closet rods across this section of my closet. Then, relaxing, I told her, \"Make love to my cock with your hands and mouth, Personal Slut.\"\n\nHolly's eyes darted up to me, and she smiled while reaching up to take my shaft in her right hand. She pumped my thick column of man meat while lavishing attention on my knob. Her enthusiasm was much more palpable, and she seemed intent on giving me the blowjob of a lifetime. She even deep-throated me of her own accord, grabbing hold of my ass and tugging me forward until she had her lips around the base of my cock.\n\nBut I didn't want to cum here in the closet. I let her bring me to the brink, but then I reached down to stop her before she got me off. She whined a bit, but I stared down at her and intoned, \"I want to eat you, Personal Slut. Master wants to taste your sweetness.\"\n\nHolly shivered and stared up at me adoringly. Reaching down, I hoisted her up into a bridal carry with her right arm wrapped around my neck and shoulders. She felt so light in my arms. She grabbed my head and kissed me fiercely right there in the closet, and we stayed there for a couple of minutes making out before I finally pulled my lips away and navigated out into the bedroom, taking care to not hit her head or legs on the doorframe.\n\nI laid Holly gently across my bed and drank in the sight of her. She wore a yellow bikini with white trim, but I admired the outfit for only a moment before reaching forward and dragging the bikini bottoms away. She unhooked the front-closure of the top and let the cups fall away, palming her big tits and mashing them together briefly while I settled between her thighs. The green-haired girl stared at me in eager anticipation while I blew a cool stream of air across her protruding clitoris. And then I leaned forward slowly, inexorably, admiring her pretty pink pussy with puffy lips already flowering open in obvious arousal, the tattoo of paired red cherries within her bikini area calling to me.\n\nI apparently leaned in too slowly, because Holly suddenly reached forward to grab the back of my head and yanked it forward, not letting up the pressure until I wrapped my lips around her clit and started hoovering.\n\nHolly didn't really say anything coherent for the next fifteen minutes. I played my Personal Slut like my personal instrument, making her scream and screech exactly when and exactly how I wanted. I was familiar with eating all the girls, but Holly in particular was really easy to please despite my comparative lack of practice with her. Everything I did set her off, and she thrashed around so much I finally had to pry her hands off my head lest she tear out my hair.\n\nShe came twice, and I built her up to a third but didn't set her off. I nibbled her clit and banged two fingers in and out of her juicing pussy, right up until her abs clenched in rolling shudders I recognized as pre-shocks to the \"big one\". But just before she got there, I pulled my lips off her little eraser nub and started kissing that cherry tattoo instead, just because. And while she whimpered and moaned at the edge of orgasm, I swiftly crawled up her naked body, notched my throbbing cockhead into her folds, and smoothly slid in like her pussy was made of butter.\n\n\"Ohhh... gaaaaawwwwwwdddd...\" the green-haired beauty moaned as she felt herself suddenly filled with cock. Her mouth flapped a few times like a gaping fish as her chin elevated to the ceiling. At full depth, I circled my pelvis counterclockwise, really bearing down on her, and she abruptly shuddered and came.\n\n\"Fuck-FUCK!\" Holly exclaimed at first, but beyond that her jaw kept flapping noiselessly as her body quaked beneath me. She writhed and juddered for about a minute, during which time I kept grinding down on her clit. But then she finally went still beneath me, and I brushed back sweaty green bangs away from her forehead before dipping down to gently kiss her.\n\n\"Mmm... thank you, Matty,\" Holly moaned blissfully, still floating away on Cloud Nine.\n\nI had been carrying a suspicion this afternoon, and her use of my name sealed it for me. Despite her greeting me as \"Master\" at the door, this was not a day for treating her like my personal slut. And I responded in kind, giving her another tender kiss and murmuring, \"You're beautiful, Holly.\"\n\nShe seemed surprised by my use of her name, and blinked at me curiously for a moment. I continued caressing her hair and tracing her cheek with my fingers, at least until she cinched her arms around my neck and started passionately Frenching me instead.\n\nThe next ten minutes can only be described as \"lovemaking\". To be sure, I wasn't in love with her, nor did I even particularly \"love\" her in the way I knew I loved the original BTC six. I felt quite affectionate towards Holly, and of course I lusted for Personal Slut, but we'd never developed the kind of bond I had with the others: simple as that.",
        "Still, Holly and I made love this afternoon. I never growled nasty things about stretching her slutty cunt. She never referred to herself as my cum dumpster. We remained joined together missionary-style, more sinuous writhing in harmony than me just bending her over and having my way with her. She came once more, a quiet orgasm all things considered. And after her peak passed, she held my face in her hands and cooed rather cutely her desire for me to fill her up. And after speeding up a bit down the final stretch to get that heavenly sensation, I slammed forward one final time and gave her what she asked for: my hot cum splashing so intimately deep inside her.\n\nIn the end, my eyes were closed as I slumped down against Holly's chest. She cuddled me close, slowly nibbling on my neck. And when I finally found enough strength in my limbs to get my elbows beneath me and hoist the bulk of my weight off her chest, I stared down at the beautiful young woman who had been my first oral experiences (in both directions), marveling at how far we'd come.\n\n\"That was nice,\" she sighed happily. \"Thank you, Matty.\"\n\nI smiled warmly in response. \"I'm sorry it's not like that more often.\"\n\nShe shook her head. \"Don't apologize. Personal Slut happens to really like it when Master just bends her over and uses her.\"\n\n\"But not always. Not today.\"\n\nShe blinked and took a deep breath. Furrowing her eyebrows, Holly looked rather uncertain of herself. But rather than press her, I simply waited her out, returning to stroking her cheek and brushing back her hair with my fingers.\n\nEventually, though, she found her voice. \"I knew at school that I wanted to come here and fuck you as soon as I got the chance. There are limited enough opportunities with six other girls who need your attention. But then once we got in the closet, I...\"\n\nHer voice trailed off, and that uncertainty returned.\n\n\"It's no secret,\" she said finally, \"that I get bored pretty easily and usually move on to find new diversions sooner than later.\"\n\n\"If this is your way of telling me you're ready to move on, I'll say that I appreciate what we had for the time we had it, but I won't try to keep you caged.\"\n\nShe shook her head like I didn't understand. \"I'm not ready to move on. Rather... I'm...\" She paused and grimaced. Taking a deep breath, she exhaled and murmured, \"I'm not used to this feeling. I'm not used to ever... missing... someone. I don't think I like this feeling.\"\n\nArching an eyebrow, I asked. \"You can't miss me when I'm right here.\" I flexed my semi-hard dick within her for emphasis.\n\n\"But I know I'm GOING to miss you when you're gone. I've never felt that about... anyone before.\"\n\nI chuckled. \"This is where I'm supposed to tell you it's the orgasms talking.\"\n\nShe shook her head. \"I don't love you. I mean, I'm not in love with you. But I will... miss this. I will miss you. I will miss the whole BTC, actually, which feels really odd because Sam had been trying to get me to join for more than a year and I was always like: I'm not the settling down type, y'know?\"\n\nI blinked. \"Are you trying to say you want to settle down with me or something?\"\n\n\"No, of course not. I mean, I would've been thrilled to date you a little longer and be your girlfriend for a couple of months before I inevitably got bored and moved on. But it's already been more than two months since that first Girlfriend of the Week thing and... and I'm gonna MISS you.\"\n\nI kissed her quickly. \"I'm gonna miss you too. Master's had a lot of fun with Personal Slut. But even beyond that, Matty likes hanging out with Holly too. And I'll never forget you were my 'first' in a lot of ways. Sam may have ultimately gotten my cherry, but you were the one who set everything in motion. I really should say 'thank you'. So thank you.\"\n\nHolly blushed and rather nervously played with her hair. I chuckled and bent to kiss my way down her neck, across her shoulder, and even down her chest to suckle a pink nipple into my mouth for a bit.\n\n\"Stop that. We should probably get outside.\"\n\n\"What? Mari said we could have an hour, right?\"\n\n\"That was a joke and you know it. We were supposed to have a quickie that should've ended ten minutes ago. But then somebody had to throw me onto his bed and stick his tongue in my twat.\"\n\n\"Guilty as charged, Your Honor.\"\n\nHolly took a deep breath and sighed. Shaking her head rather sadly, she said, \"You know I never thought I'd ever meet a guy I'd want to stay with long enough to miss him. I always figured they'd get clingy and needy before that happened.\"\n\nI suckled on her nipple a bit before picking my head up. \"Maybe you figured you'd never meet a guy who already had six girlfriends and therefore would be incapable of becoming clingy or needy.\"\n\nHolly mused on that. \"That's a good point.\"\n\nI leaned in and kissed her. \"Tell you what. Here's my plan: Enjoy what we have for three more months and then part on good terms promising to be forever friends. Yeah, we'll miss each other when we start living in different zip codes, but we'll find ways to keep in touch. Stay part of the BTC so that when we all get together for the holidays--\"\n\n\"Personal Slut can spend some time with Master...\"\n\nI chuckled. \"Or Holly can spend some time with Matty too, if she'd like.\"\n\nThe green-haired girl looked up at me, holding my head with both hands just behind my ears. And in a quietly serious voice, she murmured, \"I think she'd like.\"\n\nAnd then she kissed me one more time.\n\n****\n\n\"Ohmigawd, Matty... I think I'm gonna cum...\"\n\nI chuckled and continued rhythmically pressing my thumbs into the bottoms of Mari's feet. She reclined across Matty's Chair with the backrest completely lowered while I sat cross-legged atop the foot of the chair with her feet in my lap. Although I didn't think she was actually anywhere close to cumming, her fat nipples were making huge dents in the fabric of her bikini top, and the way she kept rubbing her thighs together made her arousal pretty evident. If I kept this up, the luscious Latina was liable to try and mount me.\n\nSo I kept it up, obviously.\n\nBut Alice had other plans. The pretty Korean girl sat upright on the next lounger over, her towel still wrapped around her after drying off. She'd stayed in the pool doing extra laps while I had been giving Mari her massage. But now with that kind of non-sexual exercise out of the way, she gave me a look that was all business.\n\n\"Okay, so the five of us need to talk,\" she began, \"Now that half the BTC is going to Berkeley with you. Well, almost half now that we're counting Holly. Sorry.\"\n\nHolly waved her hand from her seat at the outdoor patio table. \"No worries, I get it.\"\n\n\"Do we have to do this now?\" Mari groaned, forearms draped across her own face while she tried to melt into a puddle from the way I hadn't stopped massaging her calves and feet. \"Can't you gimme like... five more minutes?\"\n\nAlice rolled her eyes, dropped her chin into her right palm, and stared over at Zofi. \"Holly just had to get laid first, Mari needs to finish her massage, did you need to use Matty to get some kind of physical stress relief before we get into this?\"\n\nZofi turned onto her left side on her lounger and bent her right knee in a pose that reminded me of her semi-nude photoshoot the night she gave me her virginity. \"No, I'm good for now.\"\n\nMari sighed, flung her arms off her face to stretch out to the sides almost low enough to touch the deck. And then started sitting up. \"Fine, fine,\" she grumbled. \"It IS Alice Tuesday after all.\"\n\n\"Damn straight. And I'm using it not to get laid, but to make sure all of us are on the same page about how these next few months are going to go.\"\n\n\"What do you mean, exactly?\" Holly asked. \"I mean, when you invited me to come today I wasn't about to ask stupid questions, but what's there to discuss?\"\n\nAlice gestured at me. \"Sam, Neevie, and Belle are gonna get him all to themselves once they leave for school. I think it's not unreasonable for us to collectively figure out how we want to best spend the time we have left, and then unionize to make sure we get it.\"\n\nZofi looked amused. \"Unionize?\"\n\n\"Present our ideas collectively. Guilt trip the other three into letting us get our way.\"\n\nMari gave her wry grin. \"You don't think we could just... y'know... ASK the others?\"\n\n\"Tomayto, tomahto...\" Alice waggled her head left and right.\n\n\"What kind of ideas did you have?\" Holly asked.\n\n\"I liked being able to orchestrate orgies when it was my G.O.T.W.\"\n\nHolly looked confused. \"G.O.T... oh, Girlfriend of the Week.\"\n\n\"Yeah, you weren't here yet, but when it was my week, I got priority, I got to tell everyone what to do, that sort of thing. It was fun.\"\n\n\"I got to be Queen Mari,\" the Latina remarked.\n\n\"Yeah, that's where I got my idea,\" Alice confirmed. \"We could schedule more weeks where each of us got to be Matty's Head Girlfriend instead of Sam.\"\n\n\"Well I would like more overnights with Matty,\" Mari mused. \"Maybe even during weekdays.\"\n\nI sat up straight. \"Would your parents let you do that?\"\n\nMari shrugged. \"They like you.\"\n\n\"Then why aren't you asking for more overnights?\"\n\n\"Uh, I dunno. You and Sam were clearly falling in love and I didn't really want to shoehorn in on that.\"\n\nI smiled. \"Sam would be perfectly happy to give up a night whenever you wanted; you know that. You really DO need to get used to advocating for yourself or too many opportunities are going to pass you by.\"\n\nMari thought about that. \"Mari Monday Nights has a nice ring to it.\"\n\nThe girls and I all chuckled at that.\n\nAlice looked over at Zofi. \"What do you want from him this summer?\"\n\n\"Oh, I'm good with whatever, really,\" Zofi said demurely while holding a hand up. \"I don't think I need him to... take care of me... as often as the rest of you do.\"\n\nHolly head-nodded towards the brunette. \"I think she's more interested in how much time she gets to spend with Sam this summer, so the more the rest of us do with Matty, the more that frees up Sam to spend time with her.\"\n\nZofi looked thoughtful. \"That's a good point.\"\n\nAlice grinned. \"You could tell your mom you're having overnights with Matty, and then actually go spend the night with Sam.\"\n\nZofi's eyes brightened. \"Hey...\"\n\n\"Well if we're in the business of making scheduling requests,\" Holly continued, \"I don't have a day of the week yet: Neevie Monday, Alice Tuesday, Sam and Zofi Wednesday, Mari and Belle Thursday, etc. I've been living off your 'one for all' good graces since Prom.\"\n\n\"Maybe we can talk Neevie into giving you Mondays and she'll pick up a regular overnight,\" Alice suggested.\n\n\"If not, you can have Thursdays if I get Monday nights,\" Mari offered.\n\n\"Will Belle agree to that?\" Zofi wondered.\n\nMari shrugged. \"She already gets weekend nights with him. And if the union asks, she'll be fine with it. Plus there are assorted days like today when it's technically Alice Tuesday but she invited us all along. It's the least we can do to give you a consistent time with him, unless you want an overnight.\"\n\nHolly shook her head. \"Snuggling's not my thing.\"\n\nI chuckled and muttered, \"That's not what it seemed like half an hour ago.\"\n\nHolly blushed and looked away from me for a moment. \"Well, overnight snuggling, at least. I like my own bed just fine.\"\n\n\"Fair enough.\"\n\nZofi leaned forward. \"You all realize this may all go out the window once school's out. No more homework. No exams to study for. Hell, all seven of us may end up hanging out here by the pool every day for three months.\"\n\n\"That's fine. I'm good with sharing, so long as Alice Tuesdays still mean I get to be in charge on Tuesdays,\" Alice confirmed. \"That time I got to be Sam's 'Mistress' was FUN.\"\n\nEveryone laughed again.\n\n\"Today's an Alice Tuesday,\" I pointed out with a suggestive waggle.\n\n\"Excellent point, my dear Matthew.\" Alice sat up, clapped her hands together, and started rubbing her palms quite vigorously. \"Now where to begin...?\"\n\n****\n\nWhile Alice waited until the whole group was together Friday afternoon to formally reveal her plan to \"unionize the non-Berkeley girls\" and make their scheduling requests, the actual information had already been spread around. Even though the girls told me not to tell Sam, Belle, or Naimh about their intentions, by Friday Alice had already talked to Naimh, Mari had talked to Belle, and Zofi and Holly both had talked to Sam. So Friday's little quorum turned out to be a mere formality.\n\nIn the end, the four NBGs (Non-Berkeley Girls) set my daily schedule as: Holly Mondays, Alice Tuesdays, Zofi Wednesdays, and Mari Thursdays. It was tacitly understood that Sam could join Zofi, Belle could join Mari, and Naimh could join either Holly or Alice, but that the NBGs would officially be in charge for their designated days. In the evenings, Belle still got Friday and Saturday nights, Mari got Monday nights, and Naimh got Wednesday nights. That last one was a bit of a surprise, but she told her parents that they might as well get used to her spending one night a week with me before we got a place together up in Berkeley. And Sam got the remaining three nights.\n\nI started wondering if either Mari or Naimh was going to start annexing space in my closet for herself.\n\nInterestingly enough, we didn't have a big orgy on Friday. We hung out by the pool and played card games. I grilled up dinner, and afterwards we watched a movie. That's not to say I didn't get laid at all, as Alice swam up to me while I'd been sitting on the pool edge, peeled my swim trunks down, and gave me a blowjob before climbing out of the pool and to go for a ride. Later that night, I held Belle in my arms while she clutched all four limbs around me and crooned, \"In.\" So it's not like I went without or anything like that.\n\nBut it occurred to me on Saturday morning that I hadn't had sex with Naimh in over a week, what with her skipping Neevie Monday after getting her Berkeley acceptance, and never asking for a minivan quickie at school. It's not that I necessarily minded, what with six other girls constantly asking for my special services, but I did wonder what was going on.\n\nI didn't have to wonder very long.\n\nThe doorbell rang, right on time for Alice's weekly Saturday morning session. Without checking the peephole I just popped open the door. To my surprise, though, there wasn't a cute Korean babe dressed in her latest sexy geek chic attire on my front porch.\n\nInstead, it was the most gorgeous thing I had ever seen.\n\nThe Irish redhead stood on my front porch dressed in a white and blue striped sundress with spaghetti straps and a plunging V-neck that fully exposed the white lace center of her bra. Aviator sunglasses hung at the bottom of the V-neck, its light weight somehow feeling like it would drag the material even lower and expose her nipples if she so much as tilted her head forward. Morning sunlight made her red hair shimmer like it was on fire, and her freckled face glowed. At the moment, she stood erect with her right arm straight down but her left forearm scooped beneath her bosom with her left hand holding her right elbow. The position elevated her breasts for maximum cleavage, and she smiled coyly while watching my gaze NOT yo-yo down her fantastic body, but rather just go down and stay there, enjoying the view.\n\nThose freckles really DID go down all the way.\n\n\"Hey, boyfriend,\" Naimh greeted merrily.\n\nI finally brought my gaze back up to her gorgeous face. \"Hey, girlfriend,\" I greeted in reply. \"I'm assuming Alice knows you're here?\"\n\n\"Of course. She was nice enough to let me take you out today.\" She flashed me a Cheshire smile and reached a hand out to me, having never stepped inside. \"C'mon, you're dressed just fine the way you are. I'm driving.\"\n\nI didn't actually take her hand right away. First, I went back to collect my wallet and keys, and then I joined Naimh outside and hopped into the passenger side of her beater Civic. A few minutes later we were on the freeway, and I felt a sense of d\u00e9j\u00e0 vu idly wondering where our destination might be. It took me a moment to figure out why I felt that sense, but eventually I remembered sitting in this seat while Naimh drove me to the Monterey Bay Aquarium ahead of our \"first time for the second time\".\n\nI suppose that made this our \"first time for the third time\". I mean, we had been on other dates before, but something felt very different about this one, and not just because she was doing the driving instead of me.\n\nOur real first time had been just that, our first time. Our \"first time for the second time\" had been the renewal of our friendship after the break-up. And this time?\n\nI thought back to the way Naimh had greeted me upon arrival at the door, saying, 'Hey, boyfriend.' It was far from the first time she'd said that to me ever since we'd formally declared all six of the BTC girls to be my official girlfriends, but there was something a little different about the way she'd said it today. It was as if for the past several weeks she'd been my girlfriend in name only because everybody else was my girlfriend, and not in the way she'd been my girlfriend back when it was only the two of us.\n\nAnd I had a feeling that was about to change.\n\nWe didn't stay on the freeway long, and wound up in downtown San Jose at the Museum of Art. Its collection wasn't nearly as expansive as San Francisco MOMA, but Naimh and I spent almost as much time in the smaller museum as I had spent with Zofi in the larger one. Zofi and I had mostly just wandered around admiring the artwork, you see. Naimh and I would sit down and TALK about it. SJMA was focused on contemporary art, which meant a lot of dynamically abstract pieces that were highly subject to interpretation instead of some photorealistic painting of a bowl of fruit or things like that. Naimh and I could never seem to agree on the meaning of whatever piece we happened to be looking at, and the debates that followed could get rather heated. And yet I knew both of us were having fun.\n\nAfter the first hour in the museum, she tried to apologize for talking my ear off. I simply rubbed her leg and reminded her, \"I love you sharing something you're so obviously passionate about. And it doesn't hurt that you're the most achingly gorgeous teacher I've ever had.\"\n\nThat earned me quite a kiss right there. If we hadn't been in the middle of a museum, she might've tried mounting me.\n\nLunch was at a trendy fusion caf\u00e9 within walking distance of the Plaza de Cesar Chavez, and after the meal we found a park bench in the shade with a view of the museum entrance ahead of us. We chatted for a bit more, me finishing off an iced coffee while she sipped at the rest of her smoothie. We talked a little bit about the museum artwork but eventually we got into a little makeout session right there on the bench. And after a few minutes, she pulled back and murmured, \"I think it's time we went back to your place before I impale myself on you right here in front of everybody. Good lord it's been so hard keeping my hands off you all week.\"\n\n\"Why HAVE you kept your hands off me all week?\"\n\n\"Because I want our first time together after I got into Berkeley to be one-on-one and part of a nice date, not a hurried minivan quickie or as just one naked girl with six other naked girls around. So take me home and fuck my brains out NOW.\"\n\nI chuckled. \"You're driving.\"\n\n\"Oh, right. Let's go!\" she climbed out of my lap, stood up, and practically dragged me off the bench.\n\nMaybe I should've driven. Naimh was horny enough to drive rather aggressively, not quite dangerously but still. Thankfully, we made it to my house in one piece, and a short time later that pretty little sundress fell to the floor as we fell onto my bed.\n\n\"In me, boyfriend,\" she groaned. \"I need you IN me. Stick it in! Stick it in! Stick it... AAAAAAAUUUUUGGGGGHHH!\"",
        "\"Soooo sweet,\" I groaned, pushing myself balls-deep into her tight pussy. The horny Irish girl lay flat on her back with her legs spread wide to the sides, holding them with her hands beneath each knee. Her head had been up as she urged me to 'stick it in', but now that we'd achieved penetration, she let her head fall back to the mattress. \"I've said it before: You have the Goldilocks of pussies.\"\n\nNaimh picked her head back up and took a moment to get the reference before grinning. \"Just right?\"\n\n\"Just right,\" I agreed.\n\n\"Then come fuck my Goldilocks pussy,\" she cooed. \"Pound me, boyfriend... Oooh, yeah... Harder, baby, harder! Ohmigawd. You're so deep inside me! It's so good! Fuck! Fuck! Fuck!\"\n\n\"Oh yeah, girlfriend,\" I groaned. \"Your pussy is so perfect. So fucking good. You feel so amazing. Sex with you has always been so amazing. You know how to move right when -- aww, FUCK yeah -- just like that. So good, girlfriend! So fucking good!\"\n\n\"Fuck me, Matty, fuck me!\" she cried while raising her legs over my shoulders. She crossed her ankles behind my neck while I leaned forward, bending her in half. \"Fuck me, baby! Harder! Harder! Oh HURT ME, Matty! Ungh! Ungh! Ungh! AUGH!\"\n\nThat last one had been accompanied by a resounding [THWACK]. I had pressed forward far enough that with her legs hooked over my shoulders, the nympho redhead was curled up under me like an armadillo while I dug my toes into the mattress and really hammered her. This elevated her ass up off the bed, in perfect position for me to let fly with my right hand to spank her at her urging for me to hurt her.\n\nAnd I didn't stop.\n\n[THWACK]\n\n\"AUGH!\"\n\n[THWACK]\n\n\"AUGH!\"\n\n[THWACK] [THWACK] [THWACK]\n\n\"AUGH! AUGH! AUGH!\"\n\nUnfortunately, pausing to spank her ass in this position kept making me lose my fucking rhythm. I stopped spanking and pulled out, roughly flipping her sweaty body over to the side. She squealed as she rolled, but didn't resist as I manhandled her onto all fours, slotted my dick back into her pink taco, and rammed my way forward.\n\n\"FUCK, Matty, FUCK!\"\n\n[THWACK] [THWACK] [THWACK]\n\n\"AUGH! AUGH! AUGH!\"\n\nHer ass now reddened enough, I bent forward, grabbing her by the tits and yanking back on them while I continued jackhammering my dick into her perfect pussy. She screamed and moaned as I twisted her nipples. And the more I savagely fucked the hell out of her, the more she howled for me to fuck her even harder.\n\nShe came first, a full-blown climax with thrashing and shaking and screaming that ultimately sapped her energy and made her forearms collapse. I let go of her round titties lest I collapse with her, and instead I knelt upright, pausing every now and again to resume spanking her already red asscheeks. And that's when she planted her cheek against the mattress and reached back with both hands to spread herself for me.\n\nI glanced at her face and recognized the wordless request in her expression, as if the spread asscheeks hadn't been obvious enough. Relocating my hands to her hips, I withdrew my rock-hard erection from her still-quivering quim, notched the angry purple head at the entrance to her anus, and abruptly jerked my hips forward.\n\n\"FUCKITY-FUCK!\" Naimh screeched as I suddenly invaded her anus. Her fingers bunched up the bedsheets and her entire face reflexively clenched almost as much as her sphincter did. But a moment later she relaxed, and then sighed, and then went limp beneath me with a deliriously happy grin on her face while I began sawing in and out of her sacred core.\n\n\"Soooo gooooood,\" my bodaciously buxom girlfriend wheezed as she absorbed the intense sensations. \"Fuuuuuck meeeeee... Fuuuuuck my aaaassssssss...\"\n\nI lost track of how many times Naimh came that way. It was as if she'd saved up all of the orgasms she should've gotten with me all week and let them out now instead. One climax started bleeding into the next, her tell-tale quivers and quakes only just starting to subside when her next peak sent her body into involuntary shudders once again.\n\nHer fingers went absolutely limp, no longer clutching the sheets at all. Her head flopped around, eyeballs rolling around like marbles inside her head. Her jaw was slack and she obviously drooled. But still the climaxes kept coming.\n\nShe couldn't even scream anymore. She just sort of moaned \"Fuuuuuuuhhh...\" in a zombie-like state while I continued hammering her ass. At last her knees collapsed as well, so that she lay flat on her stomach while I drilled straight down into her near comatose body, at least until the next time her colon clenched up around my cock as she climaxed over and over again.\n\nHer backdoor started to gape wide open, unresisting, and several times I pulled completely out, stared down into the black hole, and grinned before slamming myself back in again. But all in all, there was only so long I could keep that up, and at one point when I paused to catch my breath, lying flat atop my girlfriend's prone body, she managed to go a full minute without orgasming and her eyes started to refocus.\n\n\"Holy shit, Matty,\" she whined, her first coherent words in more than ten minutes. \"Feels like you ran over me with a truck.\"\n\n\"Is that a good thing or a bad thing?\" I wheezed.\n\n\"The BEST thing. Ohmigawd... Did you cum yet?\"\n\nI shook my head. \"Not yet.\"\n\n\"Such a fucking stud. Servicing seven hot babes and still got enough to pound the shit outta me.\"\n\n\"I aim to please.\"\n\n\"I want your sperm on my face. Cum all over my pretty face.\"\n\n\"Ohhh, fuck, Neevie...\" I retraced slowly and started pumping once again.\n\n\"Shower me with your semen, boyfriend. I love feeling your hot jizz splattering all over my creamy skin.\" She bent her elbows and covered the backs of my hands with hers, interlacing my fingers while I braced myself above her and picked up the pace. Her fingers tightened in response to my increased cornholing of her colon, and she slid her knees up to form more of a frog position beneath me, using her remaining strength to fuck back at me.\n\n\"Fuck me, boyfriend. Fuck my arse. Fuck me. Love me. Hose me down. Harder, baby, harder! So good! So deep. I can feel you in my bowels. I can feel you in my sacred core! I love you so much! You're the only man for me! I promise you, baby! I'm yours! For the rest of my life I'm yours! My arsehole belongs to you! You're the only man who will ever be with me like this! I love you, Matty! I LOVE YOU! FUUUUUUCK! I'M CUMMING AGAIN! I'M CUMMING!!! AAAAAAAAAAAUUUUUUUUUGGGGGHHHHHH!!!\"\n\n\"NEEEEVVVIIIIEEEE!!!\" I roared, feeling my balls come to a boil. I pounded my way through her rectum, really reaming her out during the final stretch. But I didn't forget her last request, and just before my cock started spraying, I yanked myself out and roughly flipped her over.\n\nThe first shot sprayed across Naimh's big right breast, coating a glob right across her nipple and up towards her neck. Taking a big step forward, I planted my right foot just past her left ear and aimed my prick downward, so that the second shot splattered a line across her nose and forehead. The third shot then painted her gaping mouth and left cheek.\n\nShe surprised me then by grabbing my ass and yanking me downward. I lost my balance and toppled forward, only just catching myself on my forearms. My cock, however, she guided right into her gaping mouth. Uncaring for where my dick had just been, my nympho Irish girlfriend swallowed me down to the root, letting her head drop onto the mattress while tugging my ass down until she'd skewered her own throat, forcing my remaining ejaculation to spurt straight down into her stomach.\n\n\"Hngh! Hngh! Hngh!\" I grunted as I spat out my final globs, pinning Naimh's skull between my pelvis and the mattress. My hips twitched and I groaned as I squeezed out the dregs. And when I was finally done, I felt all of my muscles turn to jello as I collapsed.\n\nBut only for a bit. A moment later, Naimh slapped my ass and I realized she couldn't breathe. I quickly flipped over, withdrawing my dick and allowing her to cough and turn over onto one side.\n\n\"Sorry 'bout that,\" I apologized with a wince.\n\nShe just coughed again and grinned, knowing full well that she'd put herself into that position in the first place. And after recovering quite quickly, she sighed and smiled the smile of complete and utter satisfaction.\n\n\"So!\" she began brightly while scraping cum off her face and popping her fingers into her mouth, \"Now that that's out of the way, we can continue our conversation. What was your favorite piece?\"\n\nI blinked, still out of breath and not understanding. \"Umm, what?\"\n\n\"From the museum,\" she explained, propping herself up on her elbows as she clarified, \"Your favorite piece of art.\"\n\nLying flat on my back taking deep breaths, I stared at the ceiling and thought about that for a second. \"Umm, really? I'm not sure my brain is working just yet. That was a pretty intense fuck.\"\n\n\"I know. Loved every second of it. But seriously, if we're gonna have a chance of making this a real relationship and not just be fuck buddies, we have to make time to... y'know... talk and stuff.\"\n\n\"And stuff,\" I muttered, but forced myself to think about it. \"I forget the name, but that big sculpture hanging in the atrium, with all the pieces of colored glass arranged seemingly at random? It looked to me like a star going supernova. The way the sunlight reflected through all that was really cool, certain bits reflecting light off each other in an infinite number of combinations, and I kept trying to figure out how the whole assembly was held together.\"\n\nNaimh rolled her eyes and muttered, \"Leave it to the engineer to be more interested in the mechanics of the artwork than the meaning of the artwork. It wasn't a supernova; it represented the breadth of human emotion.\"\n\nI smirked and thought about something Alice had said earlier. \"Tomayto, tomahto.\"\n\nNaimh just shook her head.\n\n\"How about you? What was your favorite?\"\n\n\"Uh, I don't know.\"\n\nI frowned. \"C'mon. You asked me for my favorite. Surely you had to expect me to ask the same of you.\"\n\n\"Too many favorites to count.\"\n\n\"Top three?\"\n\n\"Mmm...\" she pondered for just a moment. \"Noisy Blushes, The Breathing Room, annnnd... Unrequited.\"\n\nI looked at her blankly. \"You'll have to describe them because I don't remember the names. Actually, I remember The Breathing Room. What was Noisy Blushes?\"\n\nNaimh gave me a wry grin. \"Your supernova. It's called Noisy Blushes.\"\n\n\"Oh, okay then. What about Unrequited?\"\n\nThe redhead blushed... well... noisily. It was a deep scarlet flush that briefly flooded her freckled face as she averted her gaze, and I immediately figured it had something to do with love, as if the title Unrequited hadn't already given it away. I still had no idea which specific piece she was talking about, but her reaction made that point rather moot.\n\nTaking a chance, I reached out and held her hand. \"You DO know that your love for me isn't unrequited, don't you?\"\n\nShe squeezed my hand back and sighed. \"But isn't it?\"\n\n\"I do love you.\"\n\nShe sighed. \"You love all of us.\"\n\n\"Doesn't make my statement less true.\"\n\n\"You love me because I let you destroy my poor arsehole just now.\"\n\n\"Well... yes, I enjoyed that part quite a bit too. But there's more to our relationship than just sex, right? Tell me you didn't have a good time at the museum. Tell me you don't love cuddling on the beach watching the sunset.\"\n\n\"Of course I do.\"\n\n\"Then what's the problem?\"\n\nShe sighed. \"I want you to love me the way I love you.\"\n\n\"Which is how, exactly?\"\n\nNaimh took a deep breath and exhaled slowly, collecting her thoughts. She stared off into the middle distance, eyes unfocused. \"I love you like Noisy Blushes. The whole point of that piece is that it has no walls, no defined outer boundary. Everything is just exploding outward like...\"\n\n\"Like a supernova?\" I drawled with a wry grin.\n\nNaimh rolled her eyes and muttered, \"Okay maybe it looks like a supernova. But it's a supernova of emotion. There are no boundaries; it's limitless. The walls are shattered and yet I'm back at the start, staring outward into the distance seeking boundaries that aren't there not because I'm looking for limits, but rather just seeking some kind of definition to give myself a sense of order. I'm lost in the vast sea, adrift. I'm trying so hard to believe in a world I can't see while billions of cosmic particles are passing through me. There's some meaning out there. I can feel it. There's a future for us out there. I know it. But I'm still back at the start... adrift... feeling and believing and knowing there's... something... Happiness. Comfort. Brilliance in those infinite combinations of light. I want to scream with joy at the top of my lungs feeling the complete fullness of all those glittering pieces summed together. But it's a maze that requires me to find the right combination, as if each piece is a steppingstone across the ocean of space and I'm scared to miss a step and fall for all eternity into the black abyss. I... uh... sorry... I think I went off on a tangent there.\"\n\nShe was blushing again, but I smiled and caressed her cheek while drawing her face to mine. From only inches away, I gave her a sincere look and said, \"I already told you: I LOVE your passion. And for all your uncertainty, please remember something very important we've already talked about.\"\n\n\"What's that?\"\n\n\"'Love itself is what is left over when being in love has burned away,'\" I quoted. \"We've been through the fire. The bliss of orgasm has passed and the temporary madness has subsided. All that's left is you and me, and we're still here, aren't we? We dated; we broke up. We lost each other for a bit but still found each other again. Our ups and downs to get to this point have made us who we are. These are our roots, now entwined together. I love you, Naimh O'Brien. It's inconceivable that we should ever part. I'm standing at the start with you, hand-in-hand. If we make a misstep and fall for all eternity into the black abyss, I want to fall with you.\"\n\nNaimh's emerald-green eyes flared at that pronouncement. And then suddenly her taste filled my lips, her scent filled my nose, and my world exploded.\n\nLike a supernova.\n\n****\n\nMy girlfriend and I cuddled in the aftermath of our of lovemaking, my second load still imbedded deep inside her sacred core and not yet leaking back out. Both of us were still panting, grinning shit-eating grins and nuzzling our noses together when the phone rang.\n\nAt first, I wanted to ignore it, but a quick check of the display's caller ID told me it was Zofi. It was highly unusual for her to call me on a Saturday afternoon, so with a frown, I reached over to answer the phone.\n\n\"Hey, Zofi. What's up?\" I asked casually.\n\n\"Code Blue,\" was her response, her voice wavering. She wasn't crying, but she was close, I could tell.\n\nI sat up straight in alarm. Naimh sensed my sudden tension and likewise pitched up on her elbow. And my tension only increased when Zofi explained...\n\n\"My mom saw you and Neevie making out in the park.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "harem",
        "high school",
        "big breasts",
        "big tits",
        "18-year-old",
        "anal",
        "teenagers",
        "sluts",
        "mfff",
        "orgy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-53-54"
}