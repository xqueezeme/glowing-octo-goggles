{
    "title": "Iron Heart Ch. 03",
    "pages": [
        "Well here it is at last. Thanks Mokelke for being awesome as usual and thanks to you for reading on with this one. It's been a fun time writing it and i might have one more of it or not i don't know yet. Read it, comment on it, love it I hope and vote away! Enjoy the show kids!\n\n\n\n\n\nBen's eyes cracked open at his usual five in the morning. He would normally start his shift in an hour, but as he looked out the window he saw it was pouring rain by the bucket load. He was lucky to have gotten home from the Shore before the bad weather started the night before. He was even happier still when he saw the blinking of his phone messages as it was likely the Union Rep saying that it was an off day.\n\nAll that was a nice thing, but something far better slumbered in his arms. That something was a petite Puerto Rican woman named Leta. They had started out with Ben spooning her tight, but as the night wore on she had tossed and turned so much she now sprawled on top of him, her face buried in his chest. Her cute body was draped along his and he was smiling at her as she snored softly. Her hair was a jostled mess, but it only added to her flair.\n\nBen decided to let her sleep and closed his eyes for a while longer, enjoying the feel of her young and muscled body against his rough physique. At seven he cracked them open again and this time found himself on his back with Leta flopped half on him. He chuckled as she was trying to hold him like a giant teddy bear, but his massive bulk prevented that. Ben shuffled out from under her and she whimpered angrily. Her eyes began to crack open and Ben saw she was not pleased in her comfort being disturbed.\n\n\"I have to get Rochelle up for school honey, I'll be right back,\" he said softly and she pouted, but curled into his pillow and went back to sleep.\n\nBen chuckled softly, seeing her this grumpy at this time of day told him she wasn't a morning person, but nonetheless it made her even more adorable to him. He could relate as he wasn't a morning person by choice, only need. Ben put on his tank top and shorts. Like a ghost, he slipped out of his room to start the day. The experience of moving through a house early without waking people came in handy with four children and Ben used all his tricks now. He went to Rochelle's room and softly roused her. Rochelle looked at the clock and flopped over and pulled the blanket over her head.\n\n\"Too early,\" she whimpered.\n\n\"Yeah, yeah, yeah, up and at 'em,\" Ben said as he pulled the blanket off her body.\n\nRochelle sat up and looked at him with a half-asleep half-agitated look. Ben's stern visage changed the look when he tapped his foot impatiently.\n\n\"Hey, I gotta be up at this hour, so do you young lady,\" he said in his fatherly tone.\n\n\"You win,\" she complained and went to the bathroom to get ready.\n\n\"Damn right I do,\" Ben said under his breath and chuckled. It seems it was a family trait as Rochelle wasn't a morning person either, but alas she had school to get to.\n\nHe blew out a sigh as he heard the shower kick on and went to the kitchen to make her some breakfast. He set the coffee pot on and started making some breakfast. Knowing how picky Rochelle was, he was glad had a lot of years of preparing her breakfast to know what she loved. After diving into his cabinets and fridge he was as proud as ever at the end result, a nice fruit melody and a tall glass of freshly made OJ. Hearing the shower turning off he set the table and walked to the bathroom door. Knocking softly he spoke loud enough to be heard.\n\n\"Breakfast is on the table, baby. I'm gonna get dressed and get you to school.\"\n\n\"OK daddy,\" he heard her reply and Ben went to get dressed.\n\nHe walked back to his bedroom and saw the cutie still asleep and he about laughed loudly at what he saw.\n\nLeta took up his whole bed as she was totally sprawled across it. Ben's mattress was a special memory foam one and he could see it was paying off as she was completely lost to the world.\n\nDressing quickly he kissed her forehead and Leta actually purred in her sleep and curled into his pillow tighter. Ben smiled at that and walked out to the kitchen. He poured a cup of coffee and sipped it as Rochelle bounded in. She was in her uniform and looked cute as normal. She kissed Ben on the cheek and sat down to devour her breakfast. Ben cracked his neck loudly trying to shake of the stiffness of the night. He rolled his head and as he had his eyes closed he remembered what happened the night prior. He turned away from Rochelle so she wouldn't see the erection that was beginning to tent in his jeans.\n\n\"Have a good night last night, honey?\" he asked trying to change his mind's focus.\n\n\"No, my date left me for Clarissa Bougins!\" she complained.\n\n\"OK, and why did he make that mistake?\" he asked confused.\n\n\"Because he told me, 'Oh I'm really not into girls with black hair, I like blondes',\" Rochelle said in a mocking teenage boy voice.\n\nBen almost spit up his coffee as she went on a tirade about boys being dumb. For five long minutes he listened to each complaint and as he nodded his head and heard her out. A side effect of her complaining was that Ben was glad to have the hard on go away. Ben looked at the clock and gulped the last of his coffee. He took her bowl as she finished and set it in the dishwasher. Rochelle drank down her juice and went to get her coat and book bag. Ben got his coat and looked at the rain as he opened the door. It was an absolute mess. He knew that flooding might be a problem soon and he hoped the highways would remain opened until he had to go get her later.\n\nHe got his umbrella and opened it for the both of them and rushed out to the truck. Ben went to her side so she could get in without getting soaked and held the door open. Rochelle bounded into the truck and shut the door. Ben sloshed back to his side and got in.\n\n\"Holy shit, it's comin' down!\" he exclaimed.\n\nRochelle laughed as she looked outside. It was pouring and they had to drive in it. The drive to her school two towns away took nearly twice as long as they had to deal with the accidents from the people who forgot to slow down in the rain.\n\n\"So did you have a good night, daddy?\" she asked coyly.\n\n\"Yeah. Went out and came home after you did,\" he said without giving anything away.\n\n\"Where did you go?\" she asked.\n\n\"Out on a date if you must pry,\" Ben said truthfully.\n\n\"With the same woman that you mentioned from the shore?\" she pried further.\n\n\"Yes, the same one,\" he replied and pulled into her school.\n\nAs they pulled into her school Ben gave her the umbrella and a kiss on the cheek. Rochelle patted his shoulder and opened the umbrella and rushed out into the mess. Suddenly she turned back and ran up to the window. He unrolled it and she gave him a cute smile.\n\n\"I'll see you after school...papi,\" and with that she rushed to the door.\n\nBen sat back in his truck and was wide eyed. She had just called him the same name Leta did and with the same cute tone! His mind swam in circles as he pondered the variables, then it hit him. He forgot to close his door last night! He chuckled softly as he saw her bound up the steps and into the school. Ben shook his head and drove away. On the drive home he pondered getting breakfast for Leta, but the rain canceled that idea. He wasn't about to sit in a drive-thru for breakfast and get soaked. Instead he would make her some breakfast at the house.\n\nPulling into his spot he took a breath and rushed into his apartment. While he got wet, he didn't get soaked. Ben chuckled as he shut the door and walked to the bedroom. He took off his wet shirt and looked in on Leta. She was still out cold on the bed. Her legs were out of the blankets as she had kicked them off and was sprawled comfortably on the bed. Ben had never seen someone sleep so soundly on his bed, but seeing her comfortable as she was, it felt right.\n\nSilently as a cat he got close to her and kissed her cheek softly. Leta felt it and smiled in her sleep and opened her eyes. She saw Ben topless and hovering over her. She was suffering a bit from a hangover from the night before, but she was happy to see him nonetheless.\n\n\"Comfy, sweetie?\" he asked softly.\n\n\"Yeah. I love your bed, papi,\" she purred and stretched out.\n\n\"So do I. It's the best bed I've ever had,\" Ben said and kissed her lips softly.\n\nLeta moaned happily into the kiss. Her arms went around his neck and she held him close as their tongues played for a bit. Ben groaned as he climbed into bed with her. Leta giggled as she felt his body flush against hers and the kiss got more intense. Her tongue and his dueled for supremacy and soon she was grinding her body against his. \n\nBen felt her soft legs open up and rub along his body and he shuddered as he felt the nylon clad legs and feet tease his back. Leta's grinding was also showing her wetness was reforming. Ben was ready to say fuck it all and go for broke when his happy moment was shattered by a loud pounding on the door.\n\n\"What in the name of unholy fuck...\" Ben cursed as he and Leta looked incredulously at the door.\n\n\"Tell them to go away, papi,\" Leta said and patted his arm as the pounding started up again.\n\nBen got out of bed and looked down at the lovely woman in his bed and grinned.\n\n\"Stay put, I'll be right back,\" he said smiling and walked out.\n\n\"Hurry it up, papi,\" Leta giggled and rolled to her stomach.\n\nLeta was very ready for Ben and hoped that maybe they could just spend the day together. If they did anything more she was just fine with that as well. She shuddered as she thought of the wild night they had and was eager to see if they could capture that magic again. She looked at her toes and saw the stockings still on her legs and sighed. She unrolled them and took them off so she could air them out. Leta tossed them to the chair next to her and laid back. She could definitely get used to spending more nights in his bed with him if he was interested. While the bed was indeed comfy, the teddy bear she had slept with was the icing on the cake.\n\nBen was smiling as he opened the door and suddenly the smile melted as Carol brushed right by him. Her makeup was running around her eyes and she threw her umbrella to the floor. Ben couldn't be sure, but he thought he smelled booze on her breath as she stomped in.\n\n\"What the hell is wrong with you!\" she said and her voice was on the verge of exploding.\n\n\"And to what do I owe this displeasure?\" Ben replied crossing his arms.\n\n\"Why is it I find out that Rochelle is talking about staying here? She is coming home with me after the courts give her back to me,\" she spat with a venom laced edge.\n\n\"Is that a fact?\" he retorted chuckling.\n\n\"You may think this is funny, Ben, but you're wrong. That is my child and you fucking took her from me!\" she exclaimed.\n\n\"I did nothing but get her away from that asshole that was trying to rape her,\" Ben retorted, his own voice getting cold.\n\n\"Brad wasn't trying to rape her. He was trying to talk to her, you prick! She slapped him and then ran away,\" Carol spat.\n\n\"I'm so sure you remember that night as I'm sure you were drunk and or stoned,\" Ben said coolly.\n\n\"I wasn't, you fuck! I had two drinks and that's it,\" she protested.\n\n\"Wow two drinks and your supposedly 'Pregnant',\" Ben said laughing.\n\nBen was laughing at her and suddenly he wasn't as she was in his face and slapped him. Ben's eyes narrowed as he looked at her and grinned.\n\n\"Thank you,\" Ben said smugly.\n\n\"You think anyone gives a fuck if I slap your sorry ass?\" Carol said smugly. \"Not at all, you fucking asshole! It's all because of you I wasted my fucking life. But now I get to get something back and I'm taking my daughter back, you prick.\"\n\nBen's eyes narrowed at that as his gaze was on her neck.\n\n\"Go ahead, Ben. Hit me, give me all I need to throw your useless ass in prison! I'll make sure Rochelle is well taken care of you fuck...\" she went on, then was cut off suddenly by an unfamiliar voice.\n\n\"What the fuck is your trip?\" Leta asked as she walked from the bedroom.\n\nLeta was very comfortable as she laid on the bed. Her eyes were closed in happiness from the mattress, then she heard the argument start up. She laid quietly for as long as she could stomach it and when she heard the slap, she got to her feet and began to walk out. When she saw Ben about to slug his ex, Leta decided that enough was enough.\n\nCarol's eyes got wide as she saw the little woman walk from his bedroom wearing nothing but one of his shirts. Her mind spun in circles as she was nearly floored by what she saw.\n\n\"Who the fuck is this little tramp?\" Carol asked in a cold hiss.\n\n\"And what the fuck do you care?\" Leta asked as she crossed her arms and cocked her hip.\n\n\"Ben...who in the fuck is this bitch and what the fuck is she doing in your apartment?!\" Carol screamed totally ignoring Leta.\n\n\"OK bitch. First off, who I am is none of your concern. Second off, what the fuck do you care?You gave him up,\" Leta replied giving her a cold glare.\n\n\"Listen bitch, I don't know who you are or what the fuck you think you're doing here, but you don't belong here!\" Carol said in a condescending tone.\n\nLeta laughed with utter disbelief at Carol's absurdity. She uncrossed her arms and walked up to Ben who was looking at Carol like he wanted to hit her still.\n\n\"Benjamin, sit down,\" she said in a firm tone, her accent coming through.\n\nBen looked at her and her impatient eyes bore into his own. For some reason he walked to his chair and sat down. His arms still crossed as he glared at Carol. Seeing Ben a bit safer Leta walked up a distance from Carol and put her hands on her hips and her temper started to rise.\n\n\"First off, you don't come into my man's house and start acting like you own it, bitch,\" Leta began as Carol got wide eyed.\n\n\"Second off, ho, you may be a piece of trash cougar that thinks she has real men, but you played yourself when you gave up the only real man you'll ever know. And last, you don't disrespect me, bitch, cause it won't end well for you,\" Leta said and her accent was out.\n\nLeta grew up in the harder edge of Paterson and for most of her life she was around the gangs and what not that lived there. She never was in one, but she did pick up the slang and accent of it. Her bossy tone was coming out and it left Carol stunned when she went on.\n\n\"Now, I don't care who you think you are, but to me you ain't nothin' but a broke down ho!\" she said and put the pop into her hip as she did.\n\nCarol was shaking as Leta gave her a \"Bring it\" smile.\n\n\"Listen here, you hood rat little bitch! Get the fuck out of here and don't you dare bring your ass back!\" Carol shouted and Leta laughed.\n\n\"Or what, bitch? You think you can take me?\" Leta taunted.\n\nCarol clenched and unclenched her hands as she was about to swing at her, then she stopped.\n\n\"Oh no. You aren't dragging me to your level, you piece of gutter trash,\" Carol said laughing.\n\nLeta's words sank into Carol's mind, but they didn't make her lose her composure. Carol was not about to let this little bitch drag her into a fight, but something in her desperately wanted to.\n\n\"Too late, bitch. You didn't go to my depth, you went lower than a useless old streetwalker could go,\" Leta said smiling smugly.\n\n\"Keep talking, bitch,\" Carol said as Leta was still smugly smiling at her.\n\n\"With pleasure,\" Leta purred. \"You see I know now why you're so mad seeing me with Ben,\" Leta began and Carol gave her a cold stare.\n\n\"You're jealous that a real man walked out on your useless ass and left you for a real woman. You wanted nothing more than to have a meal ticket and go fuck around while the only man in your life worked himself to the bone,\" Leta said getting to the heart of the matter.\n\n\"What real woman? I only see a little spic, ghetto whore in front of me,\" Carol spat.\n\nLeta's rapacious laughter bit into Carol's mind like a shark. It tore into her calmness and made her start to shake. It was a mocking tone that sent a feeling of rage into her eyes.\n\n\"See, there you go again. I never brought up the race card or the 'where I'm from' card with you. You're just like all the other broke down bitches that think they are entitled to anything they want. Unlike you bitch, I have a job, my own car, and my own place. Ben was being a gentleman and letting me sleep off a long happy night. What were you doing last night? Having three useless frat boys fuck you in the ass?\" Leta said laughing at her.\n\nCarol was seething at this little bitch and she took a step forwards. Leta saw the step and reacted. From her time on the block she also had to fight a lot of wanna be gang members girlfriends and she was no slouch in protecting herself. Carol was stunned when Leta was in her face and the malevolent fire in her eyes backed her up a step. Leta had an evil grin on her face as she stared Carol down and suddenly Carol, for whatever reason, made a hugely, stupid mistake.\n\nTo Ben's eyes it seemed like a blur of motion. Leta was standing firm and Carol was on her back three feet away. His mind quickly replayed what happened to be sure he wasn't seeing things and suddenly he was aware, it had indeed happened. Carol's hand had suddenly lashed out to hit her and Leta exploded into motion. The one-two combo hit Carol square in the jaw as she slugged her with full extension. Carol flew back and took out one of his end tables as she crashed to the floor. Leta was standing still with her hands still up in a boxer's stance as she looked down at the fallen woman.\n\nBen was about to get up and check on Carol when Leta stepped between them. It was like she materialized in front of her and before Carol could bring her hands up Leta grabbed her coat and yanked her to an inch from her snarling visage.\n\n\"Now that I've made my point clear, this is what's gonna happen. Number one: get the fuck outta here, ho. You are no longer welcome here. Two: leave Benjamin alone for good. You'll get your fucking alimony and be happy for that. And last but not least, don't ever let me see your broke down ass again. If I do I'll repeat this same lesson over and over again. Am I clear?\" she hissed.\n\nCarol muttered and bobbed her head as the scariest face she had ever seen was not but an inch from her and her jaw was killing her.\n\n\"And call the fucking cops! See if they help you when Ben here will prove that I defended myself from you, you broke down bitch!\" Leta said and tossed her to the floor.\n\nCarol hit the floor and clambered away from the little woman and scrambled for her umbrella. She ran out of the apartment and Ben was in utter shock. He watched, jaw open and eyes wide, as the car revved up then tore out of the parking lot. His head twitched as he looked at the scene then looked back to Leta. She was picking up the table that was knocked over and muttering under her breath in Spanish.\n\nAfter it was done she looked at Ben and walked right up to him with a purpose. He was wide eyed as she grabbed him and kissed him full on the lips. He leaned back into the chair as she straddled his lap and gave him what for. Ben's hands found her back and he closed his eyes as she made him shake into the kiss. Leta looked up from the kiss and her eyes bore into his.\n\n\"I'm sorry about that, papi. I didn't mean to give the bitch the satisfaction, but I wasn't about to let her do that to you anymore. From now on she has no claim over you, you're my man and that's final,\" she proclaimed.\n\nBen had never seen a woman so serious about what she wanted before, but for some reason he was fine with what she said.\n\nLeta got off his lap and walked back to his bedroom. As she did she took the shirt off and her fully nude body was now in his vision. As she got to the door she stopped and looked over her shoulder.\n\n\"Coming, papi?\" she asked and walked into the room swaying her hips seductively.",
        "Ben almost fell over getting out of his chair and rushed to his room. When he walked in he saw Leta on her back indicating with her index finger for him to come to her. Ben began to walk towards her and she shook her head and held up her hand to stop him.\n\n\"Aren't you a bit over dressed, papi?' she teased.\n\nHis shoes and pants were off in a flash and he walked to the bed. Leta giggled as he found her lips again and this time he felt her soft body against his. It felt electrifying. The smoothness of her skin was undeniable. The full firm breasts felt perfect as they mashed into his body. The way her nipples were hard and teasing his skin made his mind swim with hunger. Leta rolled him to his back and clambered on top of him. He felt her on his waist and the blazing heat of her dripping pussy made him groan softly as she ground on him teasingly.\n\n\"Are you my man, papi?\" she asked with such a teasing innocence it made his toes curl.\n\n\"Do you want me to be, honey?\" he asked softly.\n\n\"If I didn't Benjamin, then would I be here with you now after what I just did?\" she retorted.\n\n\"I guess it's kinda obvious then. Isn't it?\" he replied and she smiled.\n\nBen's erection was teasing her as she slid along it with her dripping slit. Ben was on the verge of ruining the moment when she stopped him.\n\n\"Now now, papi, patience,\" Leta said teasingly as she leaned forward and flicked her tongue along his nipple.\n\nBen groaned softly as she began to torture him. Her tongue was maddening as it rolled along his body and made him grab the sheets. The soft feathery kisses she trailed along his neck and chest made every breath he took come out as a slight gasp or shudder.\n\n\"Relax, baby,\" Leta purred into his neck, \"I'm gonna make you feel better than you ever have felt before,\" she teased as she licked his neck and looked into his lust filled eyes. With the most teasing innocence she whispered, \"I promise.\"\n\nThe way her accent made those two words come out almost made him blow a load. Her blazing heat was all over his midsection as she continued her quest to make him lose his mind. The teasing bites that followed the kisses made Ben almost throw her to her back. Sensing his inability to control himself starting to become a factor Leta saw her salvation on the chair next to her. She reached over and snatched the stockings and grabbed his arm and hoisted it over his head.\n\n\"If you can't control yourself, Benjamin, then I'll simply have to take matters into my own hands,\" Leta purred as she secured his left wrist above his head.\n\nThe second stocking found its way across his right wrist and he was secure to the bed frame. Leta smiled as she drug her tongue along his lips and probed his mouth. They shared a wildly passionate kiss. The frightening passion in it was made even more urgent when Leta felt his body shaking. She knew that he was probably not going to last very long in his current condition. The best way to make him calm down was to give him what he needed and Leta smiled devilishly as she traveled down his muscular body.\n\nBen felt her soft lips and tongue along his body and the way she teased his tattoos made his skin crawl. She licked and traced each one like they were a part of his body, Leta kissed them lovingly and Ben realized what she was doing. She was showing him that she was indeed his, and vice versa.\n\nLeta's little hands found something hard and dripping between his legs and she cooed as she came face to face with him again. She looked up at him and in a naughtily innocent voice asked him.\n\n\"Do you want me to make you feel good, papi?\"\n\n\"God yes,\" he breathed in agony.\n\n\"Well if my man wants me to make him feel good, then I guess I can do that,\" Leta said smiling.\n\nBen's eyes widened in shock as for the second time she took him in to her sweet mouth. The licks and sucks she made were so damn sweet it was killing him inside. He wanted desperately to hold out as long as he could, but he knew that he was kidding himself. He looked down to see that she was sucking him, but never once did her eyes leave his face. She was licking and sucking him so well his mind was about to black out. He felt the trembling in his legs starting up.\n\nTry as he might Ben was only human and as she sucked and licked Leta was also letting loose a string of profanities as she did. She would lick the head of him and as she did whisper how naughty she felt and how good he tasted to him in Spanish. His command of the language was slight at best, but some he understood. That he didn't understand it all was so damn hot, it led to his inevitable conclusion.\n\nBefore Leta could put him back in her mouth she felt the first rope splash out and hit her under the chin. She gasped as the hot sticky load splashed onto her. Her eyes closed as she clamped her mouth on him as the second spurt flew out. She caught it in her mouth, though some of it escaped. Ben groaned as he let lose all he had left. His eyes fluttered as Leta swallowed and stroked him hard.\n\nWhen he finally got it under control Ben opened his eyes to see Leta softly sucking him and looking up. She got a wicked grin as she sucked hard and let him out with a loud pop. Ben groaned as he felt the sensation.\n\n\"You taste so good, papi, I may have to do that some more,\" she purred teasingly as she sat up. \n\nShe saw Ben lazily looking up at her trough heavy lidded eyes which grew wider when she ran her index finger along her cheek, scooping up some of his cum and move it to her mouth and lick her finger clean, savoring his very essence.\n\n\"As much as you want baby,\" he replied, trying to get his head to stop spinning, especially after\n\nthe little after show Leta presented.\n\nLeta giggled softly and climbed off him. She found a towel and wiped off the mess and looked at him teasingly.\n\n\"Maybe you can return the favor, papi?\" she asked coyly.\n\n\"I'd love to, honey,\" he said smiling.\n\n\"Maybe if I let you go you'll behave yourself?\" she asked as she climbed up his body again.\n\n\"Not a chance,\" he said grinning.\n\nLeta laughed seductively as she reached up and undid the restraints. She was glad that the stockings didn't stretch too badly and as his hands came down she climbed on the bed. Ben sat up and scooted over. He tilted her chin and kissed her lips then pulled back suddenly.\n\n\"Rochelle may have heard us last night,\" he said softly.\n\nLeta looked down and her face began to flush a bit.\n\n\"How do you know?\" she asked.\n\n\"She called me something interesting this morning as I dropped her off from school,\" he said softly.\n\nAs he said it, he licked her neck and Leta moaned out a laugh.\n\n\"And what did she say?\" she asked as Ben continued teasing her.\n\n\"What is it you call me so much?' he asked and bit her collarbone.\n\n\"Mmmmm, I don't know papi,\" she said in a haze.\n\n\"Exactly,\" he said and nipped the skin above her breast.\n\nLeta let out a throaty laugh as she realized what Rochelle had called him. While she laughed Leta laid back as Ben continued licking and biting his way down her lovely body. Ben continued to lick and nibble on the smooth skin around Leta's diamond hard nipples. The giggles and sweet moans that came from her lips made Ben smile as he flicked his tongue along her nipple. Leta sighed and rolled her head to the side as Ben continued flicking his tongue on it and sucking it softly.\n\n\"Mmm papi....mas,\" Leta whispered as he sucked her nipple.\n\nBen's lips never left her nipple and soon she was writhing under him. Leta felt his rock hard body under her and soon she felt the warmth building up. Leta pulled him up by his head and kissed his lips deeply. Ben sighed into her loving kiss and as they did he suddenly found himself on his back. Leta was on top of him and her passions were not going to be ignored. The hungry almost feral kissing she was giving him was all it took for his erection to spring back to life.\n\nLeta felt the hard on poking her softly and she released their kiss and had a fun smile on her face. She reached behind her and found him standing firm. Her hand grabbed him and Ben moaned loudly.\n\n\"Let's see if you still remember how to do this,\" Leta purred and shuffled down his body.\n\nAs Ben's eyes opened up he saw the sight that made his eyes bug out. Leta had lined herself up and started to push backwards on him.\n\n\"I wanna see if you can make me noisy again, papi,\" she purred and continued sliding on him.\n\nThe blazing heat and eager shakes of Leta's pussy were a welcome relief to Ben. He felt each and every inch of her as she teasingly drove down on him. Ben's eyes rolled in the back of his head as she worked him into her. Ben grunted loudly after what felt like an eternity he finally met resistance by bottoming out in her. Leta felt the fullness in her body and her eyes were glued shut. She tensed up on him and held herself in check from moving as she needed a bit of time to adjust to him filling her so completely. Her breathing came in short desperate pants, visible by the rapid falling and rising of her beautiful perky breasts.\n\nBen felt her nails dig into his chest and sighed as she clenched and unclenched her hands. Ben's hands found a perch on her slim hips and she sighed and leaned her head back. Leta groaned softly as she felt the angle change inside of her and suddenly she opened her eyes and looked down. Ben's eyes were open and his shaky breath was the sign she was looking for.\n\n\"Show me that your my man, papi. Make me believe it!\" she hissed as she began to rock back and forth on him.\n\nBen felt the soft velvet of her snug hole as it clenched on him. Leta began with slow teasing strokes. Ben felt her hands travel up and down his chest as she began to rock. Her eyes were narrowed in a feral grimace as she rocked. Leta's normally cute face had changed so suddenly as she rode him. The feral lusty look in her eyes made his mind think of her not as a young woman, but as his woman. Ben's hands traveled up her body and to her breasts. She moaned as he gripped them and squeezed her nipples hard. Leta's head fell back and his left hand went up to her face. He cupped her cheek and she shocked him as she bit his hand.\n\nAs he groaned Leta let go and threw her head back and laughed seductively. She began to pick up the pace a bit and Ben really felt her get into it. Leta was in heaven as she began to rock faster on Ben. She felt every inch of herself filled with his huge cock and the feeling of his throbbing member in her was driving her nuts. As her pace increased she began to let herself go. She had her man right where she wanted him, and he was not getting away from her.\n\nThe Spanish profanities began to flow from her lips as she rocked on him and Ben's mind was slowly being overwhelmed by the sensations. The lithe young woman riding him like a wild mustang who was set free after ages of being held down. The dirty talk in Spanish was a very nice touch, but the thing that got him most was the sheer passion that she had as she bounced away on him. Ben's hands went right to her ass and squeezed hard. His large hands swallowed up her dark flesh, but he had bigger things on his mind.\n\nLeta's whimpering and gasping was getting louder as she began to flail away on him. Ben had never been with a woman so wild before, but he was fast becoming a fan of it. The way her eyes were clamped shut and the intense words that flew from her mouth made his balls begin to boil. He didn't want to finish so soon, but if she kept it up he wasn't going to be able to stop it. Before she could get to much more into it, Ben rolled them over.\n\nLeta felt the move and as she was on her back her legs were wide open. Ben found a way to raise her hips up so her shoulders were on the bed still and began to pump in and out. Leta let out a series of choking gasps as the new angle forced her to let him do all the work. She was now in such an angle she could barely scream, and how she wanted to. Ben began to slip in and out slowly and Leta was given a great sensation as he was slowly torturing her. Her eyes found his and in a hiss she let him know what she wanted.\n\n\"Fuck me, papi!\"\n\nBen set her down and she propped her legs on his hips. Once he was set he began to slip in and out of her much faster than before. Leta's eyes closed and she turned her head to the side as she felt him begin what she wanted to feel. Ben kept at his pace for what seemed like hours and Leta felt her own passion beginning to build up. She was moaning softly as he was going in at a deeper angle. Leta drug her feet up and down his hips as he found the right spot. Her eyes bulged as he savaged it thoroughly. Leta's cries and whimpers filled the room as did Ben's grunts. The slapping of his body against hers became the new tempo of their lusts.\n\nLeta felt the deep strokes and her eyes looked up into his and the feral intensity had returned with a vengeance.\n\n\"Papi, I said fuck me! Now fuck me!\" she screamed and her hand lashed out.\n\nBen felt the slap on his cheek and was stunned as she started to laugh playfully. Her eyes still had that narrow glare as she laughed. His eyes saw red and he began to slam into her. Leta's eyes bulged and she screamed in pleasure. In that moment Ben let go of the nice guy and began to give Leta what she wanted. His hard deep probes made her eyes bulge and her mouth scream out in pleasure. His whole life he had held back on his own happiness and now this little woman was there to give it back to him. Her hips angled up to allow him to drive as deep as he could in her and he did.\n\nLeta felt the driving strokes and was euphoric. Her screams were unintelligible as she wanted to egg him on with dirty talk, but the fury in Ben prevented that. Instead her every gasp and yelp spurred him on for more. Leta drove her nails into his back and drug them down and that spurred him on even more. Her eyes narrowed again as she let out a tirade in Spanish that sent him over the edge.\n\n\"Me jode Dios maldito le!\" Leta screamed and Ben felt her orgasm rip through her at the same\n\nmoment.\n\nLeta didn't have time to prepare for it and the orgasm ripped into her tiny body like a lightning strike. Every nerve in her body flared to life as she unleashed her pent up frustrations. Her whole body shook violently under Ben as he continued ramming into her with brutal strokes. Leta's eyes glazed over and she almost went into a catatonic state as she whimpered the same words over and over.\n\n\"Mas papi,\" she repeated several times in a near whisper.\n\nBen felt his own end building and it wasn't long after she stopped shaking and bucking that he felt his balls tighten up and his end was near. He looked dead into Leta's eyes and realized he had no condom on. He was about to pull out when Leta suddenly came to life and held him in place by squeezing her thighs on him as hard as she could. Ben could easily have gotten away, but the soft thighs on his hips coupled with the nails digging deeper into his back stopped him cold. With a loud roar Ben erupted.\n\nBen's seed fired off deep into Leta's abused canal. She felt the hot seed burning inside of her and a second orgasm washed over her. She bucked hard as the load burned its way into her and she was stunned. He had gushed last night and earlier, but this one was bigger than both! She felt him fill her up and then it leaked everywhere. Leta felt his seed and her own juices drizzle down her ass and pool on the bed. Her mind felt how naughty it was and it only spurred her on.\n\n\"\u00a1Eso es los papi. Me dan todo esto! \" she purred as he finally stopped shaking.\n\nBen's legs were about to give out and Leta sensed it. She relinquished her hold on him and let him fall to his side. Ben hit the side of the bed with a thud and his breathing was ragged. He had never come so hard in his life and felt light headed. He felt something on his back and it felt wet. His hand absently rubbed the spot and when it came back he saw blood on his fingers. Leta saw that and shrank down into the pillow.\n\n\"I'm so sorry, papi!\" she squeaked.\n\nBen's smile was purely lust filled. He crawled over to her and drove his tongue into her mouth. Leta moaned as his tongue thrashed along hers. She put her arms around his head and pulled him close. Their passionate kissing nearly reignited their passions again, but Leta was far too sore to continue. She looked at him with pain filled eyes and Ben relented.\n\nBen pulled her to his body and held her tight. They both were content, for now, and it didn't take long for both to doze off. Leta purred so sweetly in her sleep that it woke Ben up after a while. He looked at the beautiful woman in his bed and smiled groggily. As his head tilted up he saw the clock and his eyes got wide.\n\n\"Shit,\" he whispered.\n\nIt was time to get Rochelle and he needed to get going if he wanted to be at the school in time. Looking at a comfortable Leta he didn't want to wake her, but if he brought Rochelle home to a naked and asleep Leta, there would be a lot of questions. Against all his wishes he nudged Leta softly.\n\nLeta's eyes opened slowly as she felt the bumping. She looked up to see Ben talking to her, but her ears were still ringing from earlier. She shook her head slowly to get her bearings back and finally his words came into focus.\n\n\"Sorry to wake you up honey, but I need to get Rochelle. You want to stay or go?\" he asked politely.\n\n\"Will she be mad if I'm here, Benjamin?\" she asked softly.\n\n\"I don't know. She knows I'm seeing someone, but I don't know how she'll react to seeing you\n\nhere,\" he said honestly.\n\nBen was sure that Leta and Rochelle could get along, but the age thing was sure to be a touchy subject for his daughter. He was certain that she had friends Rochelle's age and vice versa, but for now he didn't want to push things. He was coming into a level of comfort with Leta and didn't want to ruin it, but his daughter might not be so understanding.\n\n\"Will it hurt your feelings if I take you home?\" Ben queried almost afraid to ask.\n\nLeta heard the tone of his voice and she was understanding.\n\n\"She won't like the age gap between us, will she?\" Leta asked softly.\n\n\"I don't know. I think she'll be happy for me, but then she'll find out how close in age the two of you are and it might weird her out. Plus I have the bitch in court soon and I don't want her to give her mom any sort of ammunition, not like you would be,\" Ben said apologetically.\n\n\"Why don't we let her decide. How long till you have to get her?\" she asked.\n\n\"About an hour or so,\" Ben said.\n\n\"OK than, take me home, I'll change, than we can go get her together,\" Leta offered.\n\nBen thought about it. He knew what she had to wear was nice for him to look at, but maybe not Rochelle's cup of tea right away. A strange feeling said the boots would be something Rochelle would love, but the rest of the outfit was more for his viewing pleasure. He nodded his head and Leta giggled.\n\n\"Good papi! Now let's get dressed,\" she purred.\n\nBen helped Leta to her feet and they staggered into the shower. They didn't have time for a full blown washing, so they washed the essentials. Leta actually enjoyed Ben behind her as she washed as his hands felt so good on her back. When it was time for her to reciprocate she had to jump up to get his shoulders. Ben chuckled at that and washed his upper back for her. They cut it short and dried off. Leta dried out her hair and shook it out into a wild poof. The way her thick hair stuck out was cute to Ben, but it clearly annoyed Leta. She looked around and found something that would help and tied one of Ben's bandana's around her head to hold it down.\n\nBen tossed her the same long shirt she wore earlier that day and she got an idea. She tied it off and put on her skirt and boots. Ben looked at her and she was wild looking. He almost didn't want her to change, but then again he had little choice. After he got dressed they rushed out to avoid being soaked and got into the truck.",
        "The drive to Leta's was actually fast and they were in and out in less than twenty minutes. The drive to Rochelle's school was another matter. They ended up having to go on side streets to avoid the mess that was the highways. As they drove Leta noticed Ben's eyes were full of apprehension of what was coming. Seeing them that way made her understand right away what was wrong.\n\n\"You OK, papi?\" she asked sweetly.\n\n\"Yes, and at the same time a huge no,\" Ben said honestly.\n\n\"Afraid of what she's gonna say,\" she said with a tone that was full of realization.\n\n\"Yes,\" was the only answer Ben could say that was truthful.\n\n\"Papi, why don't we just let this happen and see where it goes,\" Leta offered.\n\nBen looked at her and the look on her face showed that she wasn't afraid. The only thing in her eyes was a determination of what they had felt right and that everything else would work out just fine.\n\n\"I said your my man, papi, and I mean it. Even if she doesn't like me, she can accept that we are together,\" she said firmly.\n\nBen chuckled as she emphasized the point by squeezing his hand.\n\n\"It is what it is then,\" Ben said after a returning the squeeze.\n\n\"That's all I could ever want, Benjamin,\" she said purposely saying his name with that Spanish lilt he loved so much.\n\nBen turned his attention back to the road and they continued on to the school. When they arrived, Leta got into the back of the car and waited silently as they saw Rochelle run up with the umbrella.\n\nRochelle saw her dad's truck roll up into the crowded parking lot and ran to it, juggling with her backpack and the umbrella. She didn't get too wet as she ran and as she quickly got into the truck with Ben smiling at her.\n\n\"Hey baby, how was it?\" he asked.\n\n\"Good. I got a lot of homework to do cause they said school might be closed down for the next day or so if it floods,\" she explained.\n\n\"OK. We can deal with that. Hungry?\" he asked.\n\n\"Starved!\" she exclaimed.\n\n\"Well on that note why don't we all get some lunch then,\" Ben said and looked behind him.\n\n\"All?\" Rochelle asked confused and looked back.\n\nLeta pleasantly smiled as Rochelle looked at her and waved. Rochelle's eyes got big and she\n\nturned back.\n\n\"Umm...daddy. Uhhh...who is that?\" she asked in a very confused tone.\n\n\"I am Leta Dominguez and you must be Rochelle,\" Leta replied not trying to sound bossy or unpleasant.\n\n\"Hi,\" Rochelle said in shock.\n\n\"You remember when you guys asked me if I was seeing someone, that weekend when we were down the shore?\" Ben asked and Rochelle nodded nervously. \"Well, here she is,\" Ben said proudly.\n\nRochelle's eyes bugged out and she was flabbergasted. Susan had told her to give her any info on who her dad was dating, but when she saw the woman in the flesh her mind couldn't wrap itself around it. Here was a young woman, maybe a few years older than her and not white. While she was raised tolerant of other races, she couldn't picture her dad dating a Latina. As her mind swam Leta took the initiative.\n\n\"Why don't we go to that diner by your place Ben and we can all talk,\" Leta said trying to disarm any bomb before it could go off.\n\n\"Sounds good to me. You on board, honey?\" he asked Rochelle who absently nodded.\n\n\"Daddy...This is your girlfriend?!\" Rochelle exclaimed now totally at a loss.\n\n\"Yes,\" Leta and Ben said at the same time, smiling widely at each other.\n\nRochelle's head twitched hearing it said in unison. Her eyes scanned her father's face as he drove out of the parking lot and she could tell he was serious. She glanced into the mirror and saw Leta's face and could see a similar expression. Rochelle suddenly had a million questions pop up in her mind and decided to get the most pertinent out first.\n\n\"Umm...daddy, does mom know about this?\" she asked timidly.\n\n\"They have made acquaintance,\" he said chuckling.\n\nLeta smiled darkly at that, but held herself in check. Rochelle saw the look and her head went back and forth between the two trying to makes heads or tails of it.\n\n\"She met mom?!\" Rochelle asked and her voice was more than a bit loud.\n\n\"You could say that,\" Ben said and held his laugh in check.\n\n\"And she's still with you?\" Rochelle asked again.\n\n\"'She' said a few things to your mother and 'she' is not quite sure your mother will think twice barging into his home and acting like she owns it. She had her chance, now he's mine,\" Leta jumped in, giving her own two cents on the matter.\n\nRochelle looked at Ben and her face demanded an explanation. The pout she gave in her confused state was a familiar one she had used to get her way in her youth, but for some reason it held no power over Ben as he smiled at her and patted her hand. Rochelle took that gesture for what it meant and switched to another route of questioning.\n\n\"OK...um are you two like, you know, serious?\" she asked in a soft voice.\n\n\"Yes. I believe we are. Right, honey?\" he asked Leta.\n\n\"I'd like to think so,\" Leta replied smiling.\n\nRochelle's head went down as she tried to wrap her mind around the obvious, but something was not right in her mind about things. Lost in a myriad of thoughts, she struggled a bit with her next question.\n\n\"Daddy...umm...how long...how long have you been, you know, together?\" she asked after a lifetime of thinking.\n\n\"We've known each other about a month, there's been a few weeks of actual dating,\" he replied.\n\n\"Oh,\" was her one syllable reply.\n\n\"You OK, baby?\" Ben asked, seeing her confusion.\n\n\"Umm...yeah I'm fine, just didn't expect this is all,\" she answered honestly.\n\nBen nodded his head. Some parts of him wanted to just tell Rochelle everything, but he wanted her to be comfortable first. As they drove to the diner Rochelle asked about two dozen more questions that skirted the issue, but then it came down to the big one.\n\n\"So how old are you Leta?\" she asked softly, almost timidly.\n\n\"I'll be twenty two this year,\" she said in an upbeat manner.\n\n\"Wow!\" Rochelle said in amazement.\n\n\"What?\" Leta asked back confused by the tone in the answer.\n\n\"Umm...isn't my dad, well, you know...a bit old for you?\" she asked trying not to be insensitive.\n\n\"Nope. He's perfect for me,\" Leta purred sweetly.\n\nBen smiled as she said that. He truly appreciated the way that Leta answered all her questions in a polite tone. He hoped that they could maybe find a common thing between them to make things go a little bit smoother. As he drove he saw that Rochelle's eyes were still lost. Seeing a chance to maybe make things go smoother he offered his two cents.\n\n\"You alright honey, you look a bit lost,\" he asked.\n\n\"Umm..yeah I'm fine, daddy. I'm just not sure of this is all,\" she replied in truth.\n\n\"I can understand, honey. To tell you the truth I'm still shocked myself at how things are going between us,\" he said back softly.\n\nLeta heard that and looked into Ben's eyes through the rear view mirror. Ben saw the silent question in Leta's eyes and smiled as he went on, \"Shocked, but very happy once I allowed myself to be open minded. I think Leta can vouch that I had my concerns at first as well about the age gap, but she quickly got rid of all my arguments and here we are,\" he said with a genuine smile on his face.\n\nLeta reached up and patted his shoulder as they drove on. Rochelle took note of how she touched her dad's arm and the look was not hostile, but curious. She was still having a time trying to wrap her mind around her dad's new girlfriend, if she was that. She went quiet as she weighed her thoughts and the diner came into view. They got out of the truck and when she saw Leta her eyes got wide. Another thing became clear as she watched the Latina exit the car.\n\nThe first thing about Leta she noted was how tiny she was. Rochelle stood six feet tall and had a very nice figure, but Leta was the total opposite. Leta's tiny frame was easily a foot plus shorter than her dads, if not more, and her body was not at all what she expected. Leta had changed in the apartment from the skirt and tee to a pair of nice jeans and a black top. Leta kept the boots on as she really liked how they looked with the pants, plus Ben couldn't keep his eyes off them.\n\nHuddled together under the huge umbrella, they all made a dash for the diner. They all tried their best to avoid getting a wet drizzling shower. Once inside, they got a booth. Leta and Ben sitting on one side and Rochelle on the other. They got their waters and Rochelle sipped hers as she kept her head down. The sight of them sitting together like that was unsettling to her.\n\nBen sensed the uneasiness and reached across the table to take her hand. Rochelle found her father's hand a welcoming relief. As he squeezed her hand she looked up to face him.\n\n\"So how did you guys get together?\" she asked almost afraid to know.\n\nBen took a deep breath and looked to Leta. Leta decided to let him do the talking and nodded. With a sip of his water Ben recanted the details. He left out they already slept together, but he gave her the rundown of how they met and why they started dating. For Ben it was a simple reason, he met a great girl and wanted to see where it would go. Leta had another reason for them being together and decided to tell Rochelle in no uncertain terms why.\n\n\"I don't think I've met a guy as nice as Ben. From when we met till now he has done nothing but be a nice man, and I really like that about him,\" she said with a squeeze of his hand.\n\nRochelle had the question still in her eyes and Leta went on.\n\n\"You see before I met your dad I got blessed with one waste of time after another. From momma's boys to thieves. Hell, my last boyfriend took me for five hundred cash and all my jewelry while he used the cops to fleece me. I wasn't even looking for anyone when I met your dad. It just happened he came when my ex was being an asshole and told him off. From there, well, it just worked,\" Leta said smiling at Ben.\n\nBen leaned his head and put it on top of hers. The image was very cute and even Rochelle couldn't disagree. She looked to Leta and one last question came to mind.\n\n\"So why my dad? I'm sure there's a ton of guys your... uh, age out there you might like?\" she asked cautiously.\n\n\"There are, but they aren't Benjamin here. A cutie with a big heart,\" she teased and flicked his nose as she said it.\n\nBen laughed at that and Rochelle opened her mouth in shock. The casual flick and how relaxed both seemed in each others company was a definite eye opener to Rochelle. For years she had seen her dad almost miserable with the way things were going. He would always be grumpy when no one was looking, or when he thought no one was. It hurt his family when he was miserable, but now to see him so openly happy was something that made Rochelle think hard. He was already a bit more relaxed around his daughters once the divorce was settled and when her mom wasn't bothering him. But even then he never looked this happy. Rochelle decided she asked enough questions for now as the waiter walked up.\n\nThey ordered lunch and had a happy chat as they ate. Leta actually talked with Rochelle about school and her studies, she even offered to help her with her anatomy classes. Rochelle smiled at Leta's offer. As a result, the lunch became more upbeat as it went on. Ben got them desert and the girls actually began to open up and talk a bit more. Ben noted it was subtle, but friendly and was relieved. They drove back to the apartment and talked some more. Rochelle was stunned when Leta gave her advice on how to deal with her now soon to be ex-boyfriend. Ben was wide eyed as he listened to the advice involving teasing him by saying she was now into girls.\n\nThe girls actually began to chat about things that made Ben's mind fill up with so many hopeless images he excused himself to his office. He sat back and just shook his head as his new girlfriend was helping his daughter with her clothes and homework. All in all he was relieved that they had hit it off as well as he could have hoped. While he pondered his good fortunes he pulled out his papers and went over the bills.\n\nLeta and Rochelle sat in the living room and the conversation had shifted from boys to clothes to music. Rochelle had similar taste in music to Leta who also listened to Hip hop and Pop. The girls actually were split over a certain boy band that Leta couldn't stand and Rochelle loved.\n\n\"How can you say that?!\" Rochelle exclaimed.\n\n\"Because it's the truth mama, he's a three dollar bill!\" Leta said and started laughing.\n\n\"He isn't gay! There's no way!\" Rochelle squealed and threw a couch pillow at her.\n\nLeta caught the pillow and set it down. Her gaze set upon Rochelle and it was a friendly one that promised retribution should she do that again. Rochelle bounced on the couch and went on.\n\n\"He isn't gay, he's going out with what's her face! The chick that sings that one...oh what's it called,\" Rochelle said thinking.\n\n\"Haven't you ever heard the term, down low?\" Leta said seriously.\n\n\"No! He...wait what's that?\" Rochelle asked suddenly laughing.\n\n\"Bisexual, you now into both,\" Leta laughed and threw the pillow back.\n\nRochelle looked up in time to see the pillow hit her square in the face. She laughed as she was caught off guard and fell backwards. Leta laughed as she saw Rochelle fall over and to the floor. Rochelle was laughing on her back and rolled to her stomach. She looked up at Leta and was stunned to see her sitting so demurely and with a superior look on her face.\n\n\"Now meja, on to a better subject, you going to see that new movie coming out this weekend?\" Leta asked smiling eagerly.\n\n\"Who isn't?\" Rochelle asked as she got to her feet and sat back down with her legs under her.\n\nLeta smiled as they continued on their conversation. She was really trying to reach out to her and was surprised at how nice Rochelle was being. A tribute to Ben's nature she was being so civil. Leta really felt Rochelle opening up to her and was shocked when after about hours of talking they were leisurely watching TV with their feet up relaxing. Leta had taken her boots off and Rochelle was watching. Rochelle wanted a pair and had a mind to beg her daddy for a pair.\n\n\"So where did you get those?\" she asked eagerly.\n\n\"At the store I work at. I get a discount,\" Leta said smiling devilishly.\n\n\"Wait, you work at a woman's clothes store?\" Rochelle asked confused.\n\n\"Yes, I have two jobs,\" Leta explained.\n\n\"Oh, I thought nurses made good money,\" Rochelle asked.\n\n\"Yes, but rent is a bitch sometimes,\" Leta said laughing, \"Plus my car, gas, plus, it all adds up,\" Leta said as she cracked her toes.\n\n\"That sucks. Having to work two jobs just to get by,\" Rochelle replied with a sorrowed tone.\n\n\"Don't feel bad for me meja, I also like to buy clothes so it's a blessing sometimes,\" Leta said with a wink.\n\n\"Oh right, you get a discount on nice boots,\" Rochelle laughed out.\n\nThe both had a good laugh at that and Ben heard them. He peered around the corner and saw them on the couch watching TV and joking. He let out a breath and walked into the room to join them. Leta heard him coming and looked over her shoulder as he walked up.\n\n\"Anything good on?\" he asked.\n\n\"Nope, just Idol reruns,\" Leta said with a bored tone.\n\n\"Oh gawd someone shoot me,\" Ben laughed.\n\nLeta gave him a sly grin and turned up the volume. Rochelle giggled at that and looked away. While she was trying her best to be nice, she was reaching the limit of what she could handle. She did enjoy the banter between them and even the pillow incident, but her mind was fast beginning to reach its limits. As Leta looked away she looked to her father and her eyes were pleading him. Ben noticed the look and nodded his head.\n\nLeta got up after a minute to use the facility and as she walked away Rochelle looked to her father.\n\n\"Daddy, umm...she seems nice and all, but I don't know,\" she said softly.\n\n\"You don't like her, honey?\" he asked softly.\n\n\"I don't know. I mean...she is kinda young daddy,\" she said looking down.\n\n\"I thought so too baby, then I got to know her and well....\" he said leaning back into his chair.\n\n\"Daddy, are you sure this is...well...something you want to do?\" she asked and this time she was looking straight at her father.\n\nBen looked his daughter in the eyes and smiled warmly. His words would only say so much, but his body language was speaking volumes. The happiness she saw in them said enough. Rochelle bit her tongue and sat back as Leta came back into the room.\n\nWhen Leta got to the edge of the couch she saw Ben smiling and realized that he was obviously talking to his daughter, than seeing how Rochelle's head was down the conversation was an obvious one. She looked to Ben and tilted her head to the door. Ben saw the motion and nodded.\n\n\"Well Meja, I think you've had enough of me for one day. Maybe we can meet up some other time and go out?\" she offered.\n\nRochelle looked over to Leta and smiled pleasantly then looked away. Leta felt the apprehension in her eyes as she walked to the door. Ben got up and walked to the door to follow her.\n\n\"I'll take you home, honey. We'll be back in a bit sweetie,\" Ben said as he stopped behind Rochelle.\n\n\"OK, daddy,\" Rochelle said meekly.\n\nBen leaned forwards and kissed his daughter on the head making her smile. He gave her a good rub on the shoulders and followed Leta out the door. Rochelle looked up and watched her father walk Leta to the truck and help her in. She watched them and saw that there was a definite something between them. As she watched the truck pull away she looked at the TV and turned it off. She went to her room and turned on her laptop. Opening her email account she found her sisters chat options and began the round of gossip, and did she ever have some to dish out.\n\nBen and Leta braved the parkway on their way back to her apartment. She was quiet and lost in thought as they drove and Ben noticed it. He knew there was a tension in her from meeting his daughter and hoped it didn't turn her off from what they had. He reached over and stroked her shoulders in an effort of helping her relax.\n\nLeta felt the hand on her shoulder and turned to see Ben smiling at her. They were stopped by traffic and she was able to return the smile as she saw him on the verge of saying something, but his mind was second guessing.\n\n\"Just say it, papi,\" Leta said calmly.\n\n\"Say what? Your cute?\" he joked.\n\n\"I know that!\" Leta laughed and slapped his arm, \"No, what Rochelle had to say when I was in the bathroom.\"\n\n\"She said she was not sure of you yet and was trying to be nice. Sometimes it's better to make a good first impression and make someone feel comfortable as you make a decision of liking them or not,\" Ben explained.\n\nHe had taught his daughters that and it helped them in their lives. Rather than being shallow and self-centered, they tried to be helpful and forthcoming with people so not to appear flighty. Ben knew that given time Rochelle would probably be cool with her, but for now he wanted to keep them at a comfortable level.\n\n\"I see. So she was being nice, but gauging me then,\" Leta reasoned.\n\n\"Exactly. Plus she likes your boots,\" Ben said chuckling.\n\n\"So do I, that's why I bought them,\" Leta laughed and looked at her boots.\n\n\"I'll have to agree they are pretty bad ass,\" Ben said smiling as traffic broke and they made it to the exit.\n\n\"So you think the others will be alright with me and you?\" she asked.\n\n\"We'll see. I don't want to force you down their throats and make them like you. That's what their mom did with them after we got divorced,\" Ben said.\n\n\"I am not her...\" Leta began to say when she saw him raise his hand.\n\n\"I know that and so do they. And that will be your victory,\" Ben said and stroked her hair.\n\nLeta gave him an amused smile and they drove into her apartment complex. Leta stretched her arms upwards and yawned a bit while Ben parked the car into the empty spot in front of her building. Ben killed the engine and turned sideways, giving her a quizzical look.",
        "\"So why me? That's one I do want to know,\" Ben asked.\n\n\"Because you're you,\" Leta answered simply and opened the door. She looked back and asked, \"Coming?\"\n\n\"Sure,\" Ben said and got out of the truck.\n\nBen walked around the truck and to Leta's waiting arm. He put his arm over her shoulder and her arm went around his hip and they walked in. Going up the elevator Leta put her head on his side as they waited. Her beaming smile was one that could tell a blind man how she felt and it was radiant. Her bright smile proof again that she felt right at home, being hugged by the giant of a man. The dream she had what seemed like a lifetime ago was coming true and she was happy it was now a reality.\n\nThey walked to her apartment and Leta got the door. Going inside Ben saw the place was just like the last time. He saw the kitten statues off to the side and smirked at that. As they walked in he looked around and saw the couch and kitchen in the same neat manner. He heard Leta's boots click on the hardwood floor and into her bedroom. He tilted his head and peered in. Ben couldn't see everything so he crept closer and looked in. He felt like a peeping tom, but he got a radical idea. She said he was her man, he suddenly had an idea of proving it.\n\nWhen he looked again he saw Leta with her leg up and undoing the zipper on the boot. He watched her take it off and toss it to the side. She repeated the process with the other boot and was in her stockinged feet. He hadn't seen her dress and had no idea what she was wearing under her clothes and suddenly his eyes got wide as she undid the zipper on her pants and took them off. He saw her legs wrapped in the sexy black stockings. He blew out a short breath and watched further as she undid her top and threw it to the hamper. Her bra and panties really looked sexy on her body. As he watched some more she unrolled the stockings from her feet and tossed them to the side as well. His cock had already sprang to attention as he watched and then it began to throb as he watched her take off her bra.\n\nBen felt the moment take him and he was powerless to stop what he did next. Without a conscious thought he walked into the bedroom and right behind Leta. Leta squeaked when she felt his strong hands on her hips and shove her to the bed. She was face down and ass up as he stalked behind her and grabbed her hips firmly so she couldn't move. Lea looked up and Ben slapped her ass rather firmly making her mewl.\n\n\"So you said I'm your man, did you?' he asked in a firm voice.\n\nBewildered Leta answered meekly, \"Si, papi.\"\n\n\"Good,\" was all he said and sank to his knees.\n\nLeta felt his tongue slash along her crotch and she shuddered. His fingers ripped the panties to the side and freed her moist treasure. It took less than a heartbeat for his first finger to slip in and his tongue to find her folds. Leta sighed out loud and gripped the sheets as she felt Ben return the favor from the night before and the morning as well, with interest. She felt his tongue as it raked across her slit and his finger sliding in to the knuckle. After feeling his huge cock in her the finger was no problem to take. Leta's moans and whimpers began to fill the room as she felt the maddening sensations of his hungry mouth.\n\nBen growled softly as he ate and Leta couldn't help feeling her body begin to burn a bit. The last person who gave her oral was her, once, girlfriend Amanda and that seemed like a lifetime ago. Her sweet voice carried the tune of her pleasure and it was this kind of music in Ben's ears that made him increase the tempo. He grabbed her hips and flipped her to her back and pushed her legs up so he had an unobstructed angle to devour her sweet pussy. This quick move made her moan and grunt even louder. Her breathing was a bit difficult as her legs were up and near over her head as he held them in place. Leta tried to buck, but the angle made it hard to accomplish.\n\nAfter a few seconds of trying to move Leta, laid back and let her man do his thing. She moaned and whimpered louder and louder as his ministrations continued. Her eyes clamped shut and her nails found a perch in the mattress. A lusty scream echoed in the room as she felt her core begin to burn. Ben felt her trembling body begin to spasm a bit and his eyes blazed with an intensity she had never seen before. She called him her man and after this, she was going to call herself his woman.\n\n\"Papi!!\" she squealed loudly as her orgasm built up in her like a tsunami.\n\nBen heard it and growled like a beast. His next course of action was a purely to prolong her pleasure as he drove another finger into her hole and his mouth latched onto her swollen clit. Leta felt the sensation and her eyes widened as she was stretched out.\n\n\"Ai Mas! Por Favor mas papi!\" she screamed and felt the bucks begin.\n\nBen drove his fingers in and out of her and suckled her clit like a man possessed until her hips clenched and her hole spasmed on his fingers.\n\n\"AI!!\" Leta howled as she gushed like a fountain.\n\nHer tight hole spasmed so hard on his fingers, she almost snapped them. Her screams of pleasure filled the room and suddenly Leta felt the world spinning. Ben held her body as she wildly bucked on his fingers and suckled her fat clit like a newborn on its mother tit. Leta felt the waves slam into her and couldn't stop. Her eyes drifted off into a fitful bout of spasms. Her mouth was open, but the only sounds that came from it were unintelligible mumbles and rants in Spanish.\n\nBen released her little bud after a few long minutes of her spasming and let her legs down. He wasn't done with her yet, but she didn't need to know that. His cock was as hard as the beams he placed and eager for a second helping of her sweet pussy. He stood up slowly and unzipped his fly. He undid his pants and pulled his cock through his boxers. He picked her legs up and spread them wide. He saw the bed was just the right height and grinned as he slowly teased her with the head of his cock.\n\nLeta was drifting in and out of consciousness as she felt a new sensation on her slit. She opened her bleary eyes and suddenly felt the world go insane. Ben shoved his fat cock into her in one fast shove. Her pussy was already very slick and allowed him easy access. Leta's body sat up instinctively as she felt the intrusion and as soon as she was up she fell back and shook madly as another orgasm ripped through her. Ben felt it and chuckled as he let her ride it out with him firmly imbedded in her. Leta's eyes opened after the orgasm to see Ben lean over to her face and she felt so small suddenly.\n\n\"Now say it and we'll go on,\" he teased.\n\n\"Say what, papi?' she asked in a slur.\n\n\"Tell me who I am,\" he said firmly, stressing each single word.\n\n\"My man,\" she said happily as he pulled back and held it there.\n\n\"And who are you?\" he asked one last time.\n\n\"Yours, papi,\" she said meekly and bit her lip.\n\nThe sight of her doing that made his brain snap and Ben shoved back in, hard. Leta let out a choked gasp as he did and held on for dear life as he repeated the process several more times. Each and every slap of their hips made a squeak or whimper come from Leta's lips and Ben loved every second of it. All his life he never got to cut loose with a woman and now he could. Leta was frantically wiggling her hips to meet each thrust and he sensed she wanted not to make passionate love, she wanted a good hard fucking from her man. Seeing that he obliged and began to pick up the pace.\n\nLeta felt the pace increase and her own body came alive. She felt his thickness in her little womb and it made every nerve in her body come to life. She bucked on him as hard as she could and he slammed into her like a savage lunatic. She felt his cock ripping her open and she loved it. Her foul language began to kick in as she egged him on and that was all it took to make Ben suddenly smirk and do something she didn't expect.\n\nBen heard the mumbling of profanities and smiled darkly. He ripped out of her and flipped her to her stomach . She was half on and half off the bed and he hoisted her so her one leg was on the bed and the other was on the floor. He slipped back in and Leta screamed into her pillow as she felt the new angle and was floored by it. He began to rock in and out of her with a vicious tempo. Leta threw her head back and Ben caught her wild curls. He held it back and growled into her ear.\n\n\"Say it,\" he demanded.\n\n\"I'm yours papi!\" she screamed as he slammed into her again.\n\n\"Mean it!\" he ordered.\n\nRather than answer she turned her head and latched her lips onto his and kissed him hard. Ben growled into her lips as they devoured each others faces and his own tempo increased. He broke the lip lock and stood up fully. He gripped her hips hard and began to violently plunge in and out of her. Leta howled in pleasure and slammed back as hard as she could, to meet each thrust. They felt their passions build up. Ben kept up his hammer blows and Leta kept up the volume as they felt it coming to a close.\n\nLeta wailed as she climaxed hard. Tears streamed down her face as she came hard. Her molten stream nearly scalded Ben's cock as he jack hammered in and out of her as she came. Leta's spasms finally pushed him over the edge and he bellowed as he fired a massive load into her waiting pussy.\n\n\"Oh fuck Leta!\" he moaned as he wouldn't stop spasming in her.\n\nLeta felt each and every spurt in her body and mewled as he unloaded in her. Her eyes clenched shut as another orgasm washed over her and took his seed deeper into her. She wasn't on birth control, but didn't care. She was happy to have what ever happened happen. Her body shook for a long time as Ben held perfectly still, trying to collect his own breath. His shaking breathing was making Leta's smile come back to her face. She looked up at him through her tears and smiled so beautifully at him. It was a warm, genuine smile that made Ben fell his strength return.\n\n\"How does it feel to have your woman under you, papi?\" she asked sweetly.\n\n\"Indescribable, honey,\" he said softly.\n\nLeta giggled and gave him a pained look. Ben slowly pulled out and Leta gasped as he did, from being full to empty was a maddening feeling, but she was able to put her other foot down. Ben got his balance and smiled as he walked over to the clothes hamper. He found the club logo shirt he gave her and smiled as he walked back to her body. He helped her stand up and put it on her. Leta smiled as he did and eagerly accepted his lifting her in his arms.\n\nBen carried her to the bed and laid her on it. He tucked her in and Leta smiled thankfully at her.\n\n\"I'll call you tomorrow, honey,\" he said and kissed her lips softly.\n\n\"You better,\" she purred in response, already drifting off to dreamland.\n\nBen smiled at her and turned off the light. It was still early, but Leta passed out almost as soon as he left the room. Her dreams were filled with happy ones of Ben holding her and her bed got suddenly warmer. Ben saw her cuddle up and his own mind began to drift to a happy place, and she was in it. He left the apartment quietly and locked the doors behind him. Walking to the truck he felt way better than he had in a long time and it showed in his walk. The normally tough guys in the halls gave him a wide berth as he went to the elevator and down.\n\nHe got into his truck and drove home. Ben stopped off to get some food for Rochelle and him. As he sat in the line for the drive thru he felt his mind constantly shifting to the woman in his life now and for him it was all he needed to go home with a huge smile on his face. As he pulled up he realized he had been gone a while and he smelled like a brothel. He chuckled as he got his Axe and sprayed himself down. He wasn't ashamed of Leta and him being together, he just didn't want Rochelle to smell it on him. With a deep breath he walked into the apartment.\n\nBen set the food on the table and looked around. He saw Rochelle's room door was open and music was coming from it. He went to the door and peeked in. Rochelle was on her stomach typing away on her computer and he had a good guess who she was talking to. Ben shook his head and made a retreat to the bathroom. He decided for a quick shower to help him keep the evidence to a minimum. As he showered he thought about Leta and what they just did. Two times in a day they had been together, and he was still aching for another go. He kept himself in check and finished his shower. Wrapping a towel around himself he walked to his bedroom to change. As he walked out Ben heard Rochelle coming from her bedroom.\n\n\"Dinner's on the table honey. I need to change,\" Ben said and walked to his room.\n\nRochelle picked up the bag and peered in. She saw her favorites and smiled as she set them out. As she sat down she heard the door open and her father walk out. She saw him wearing jeans and a tank top. She wanted to comment, but something was different about his mood. Normally he was reserved, but now he seemed to be in a great mood. Rochelle picked up her food and began to eat it quietly.\n\nBen saw the look in her eyes and inhaled through his nose. He walked to the table sat down and got his food. As he ate his mind realized what she was doing. She wanted to protest about something and he decided to be proactive.\n\n\"SO you don't like her I take it,\" Ben said flatly.\n\n\"She's OK I guess, but daddy she isn't much older than me,\" Rochelle said plainly.\n\n\"I know that. Believe me I pondered that for a while. But every time I talk to her I forget that and see who she is,\" Ben replied.\n\n\"So she's your girlfriend now?\" Rochelle asked one last time to make sure he was serious.\n\nBen smiled and looked in his daughter's eyes.\n\n\"Yes,\" Ben said firmly and emphatically.\n\nThe tone in which he said it was all he needed to say to put an end to the issue of what Leta was to him. Rochelle inhaled deeply and asked another question.\n\n\"And how am I supposed to feel about this daddy?\" she asked plainly.\n\n\"I don't expect Leta to take your mom's place. I don't expect you to even like her. All I'm asking is that you give her a chance and try to be civil to each other, honey,\" Ben said as he reached across the table and took her hand.\n\nRochelle was shaking, thinking of the new woman in her father's life and felt angry at him for going out with a girl so young, but at the same time she was happy he was moving on. She looked up to him and nodded her head.\n\n\"And by doing that, you might find a new friend at the least,\" he said softly.\n\nRochelle chuckled and looked to her father with a strange light in her eyes.\n\n\"She does have nice boots,\" Rochelle said chuckling.\n\n\"I'll agree with you on that,\" Ben said laughing softly.\n\n\"Can I have a pair?\" Rochelle asked sweetly.\n\n\"When your eighteen,\" Ben laughed.\n\n\"Daddy!\" Rochelle pouted and Ben laughed hard.\n\n\"When your eighteen, honey, not a day sooner,\" Ben laughed thinking of the trouble with young boys\n\nRochelle pouted and ate her food, but it was an act. She was actually happy her father was moving forwards with his life. She wasn't sure what to make of Leta, but for him she was going to give it a try and see where things went. Like her father said, if it worked out they could be friends at the least. She ate her food and thought of the possibilities of an older girlfriend to go out with sometime. The thought of Leta and her going shopping was an appealing one, so she decided to use that for her quest of new boots.\n\nBen hoped that Rochelle was going to be OK with what was happening. If he knew anything about her than he was aware that his other daughters knew of Leta at this point in time. To make that fact more aware his phone began to vibrate and he wasn't surprised to see Susan calling. He smiled as he answered the phone and began the effort to show that Leta was his and that was all that mattered."
    ],
    "authorname": "creepyrj",
    "tags": [
        "older man",
        "younger women",
        "latina",
        "romance",
        "rough sex"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/iron-heart-ch-03"
}