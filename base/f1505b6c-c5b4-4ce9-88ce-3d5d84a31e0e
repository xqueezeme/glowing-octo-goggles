{
    "title": "Lost Empire Ch. 36",
    "pages": [
        "Hartwell looked at the micro-generator reading, the shield was starting to tax the generator. Damn it! He couldn't kill these bastards fast enough! Where had this ass gotten this many men that were as loyal as they were? Touching the other thin badge like apparatus, Hartwell smiled when it hummed and he appeared a mile away! Good he thought, give the generator a little time to recharge the power cell.\n\nTrianas Macley adjusted her settings as she quickly approached the Duke's planet. As much as she hated to help that bastard O'Toma, she was pretty miffed at the Duke for screwing up all her carefully laid plans. Suddenly her ears perked up at a transmission.\n\n\"You got a reading on him?\" Came a male voice.\n\n\"Reading? The man has decimated well over half the elite guard and part of the soldiers the Duke sent. We are in serious need of reinforcements!\" Came another almost desperate voice.\n\n\"You have to be kidding! The Duke's not going to let anyone leave here! Keep up the pressure! His equipment can't last forever!\" Replied the first voice.\n\n\"Nothing we have used is working, we need heavier weapons!\" Came the desperate man's voice.\n\n\"Buck up and get it done stop wasting my time coward!\" The first voice said then clicked off.\n\nInteresting Trianas thought someone is playing hell with the Duke's troops. Damn! That means there will be less for her to kill! Oh well, she could go after the other one. Thinking a moment she shook her head no, let that idiot Duke get his self out of it.\n\nTrianas changed course as she veered away and reversed course back to Earl Tauntoff's planet. Guess I can amuse myself there for a day or two she thought.\n\n_____________________________\n\nGreeson lifted his self off the mat, looking around he was surprised when he didn't see the Lieutenant. Then his eyes met those of Mara Callie.\n\nRising she walked over to the man. \"Sergeant I wanted to ask you, why aren't you an officer also? You are obviously as good as the Lieutenant.\"\n\nGreeson blushed a moment then what she'd said sunk in. \"No ma'am, I'm real good but I'm in no way as good as the Lieutenant! I hope to one day but now I am nowhere near the caliber that he is!\"\n\n\"Really?\" Mara said. \"From everything that I saw you are just as good, not better but just as good. I haven't seen anyone go as long as you two did except for masters. By the way I think your teacher was on his way to see the emperor.\"\n\nGreeson's eyes flew wide, was his teacher really trying to do what he thought he was? Mara and Greeson stood talking about home for a few minutes then started to move off. Dempsy was smiling wide when he saw the both of them talking as friendly as they were.\n\n\"Sergeant Greeson!\" Dempsy shouted causing the man to stand at attention. \"I was just informed by the Emperor that you have been promoted to Warrant officer!\" Dempsy quickly sidled up to Greeson whispering, \"You can thank me later, especially if I get busted back to enlisted after this!\"\n\nGreeson's eyes went wide then he nodded, he'd heard about the Lieutenant's aversion to being an officer. \"Yes sir,\" Greeson said as Dempsy pinned the warrant officer insignia to his collar.\n\n\"Now then,\" Dempsy continued. \"Take this woman to dinner! That IS an order!\" Both Mara and Greeson snapped to attention with a yes sir! Then they both turned and marched off hand in hand.\n\n'Bout damn time Dempsy thought as he watched them walk away. Sighing Dempsy thought he really ought to kick the commander's ass! First he was a second Lieutenant then that sneaky ass promotes him to Captain for the ground forces! Shaking his head he didn't know what he was going to do, he was the third grade of officer! This was insane! Driving his hand through a punching bag Dempsy ignored the several gasps that sounded behind him.\n\nCalming Dempsy knew he'd kill the others if he didn't regain his calm demeanor quickly.\n\nDerrick watched as Greeson and Mara walked away. Shaking his head he still needed to talk to Mara but it could wait a bit. Looking up he nodded, \"she will assume command soon. I hope that you have been briefing her on the situation? Good and the upgrades of the triple output particle beam weapons and the power amplifier and stabilizer?\" Derrick asked. Again Derrick nodded, \"excellent keep her advised, as I said she will join you soon.\"\n\nMara and Greeson had just sat to eat when Mara looked up. \"Really? Yes of course I'm excited! No, not as of yet, oh he did? Alright I'll see you soon then.\"\n\n\"I take it that was your ship?\" Greeson asked.\n\n\"Yes, I was just told that the Emperor put off me assuming command 'til tomorrow. I am worried though that one day will be enough. The Creagons will be at the galactic system boundary in two days.\" A worried Mara told Greeson.\n\n\"If you have been linked to your ship all this time, then you have an advantage the others don't, true?\" Greeson asked her. \"Besides I have seen your tactics. You are a force to be reckoned with, you have a great mind!\"\n\nMara could only stare at Greeson. \"Why do you say that? We've just met.\"\n\n\"Oh, I can tell, you always seem to be calculating, deciding. Like I said you have an advantage, you seem to be closer to your ship than anyone I have seen but the Emperor.\" Greeson told her.\n\n\"Yeah, I noticed that though I thought I was the only one that had.\" Mara replied.\n\nFinishing up Mara asked, \"When this is over, you still think we might get together?\" A small look of worry on her face. She wasn't sure why but Greeson was the first man she'd met in a long time she was comfortable with.\n\n\"I'll make you a deal ok?\" Greeson said to which Mara nodded. \"You and I survive both situations, then I most definitely would like to get together again.\" Greeson smiled a wide infectious smile that soon had spread to Mara's face.\n\n\"Alright you have a deal! You'd better remember cause I sure will!\" Mara said waggling a finger at Greeson.\n\nSmiling even bigger Greeson told her, \"Oh believe me I'll remember!\"\n\nBoth of them nodded then went their separate ways. Derrick nodded to Dempsy who's face held a huge smile. \"See I told you! I am never wrong in these situations! Now then about the rank thing, I...\"\n\n\"You bring that up again before any of this is done and I'll elevate you to a full bird Colonel!\" Derrick growled slightly.\n\n\"You wouldn't dare!\" Dempsy said turning a little green.\n\nDerrick turned and looked straight into Dempsy's eyes. \"Try me! You have more than enough experience and battles to merit it! As a matter of fact!\" Derrick said as he handed Dempsy a gold oak leaf insignia.\n\n\"WHAT!!?? NO, no, no, no, no! I am no damn Colonel!\" Dempsy suddenly shouted.\n\nDerrick smirked, \"as I said after all this over we can talk about you being busted back to enlisted. Then again as I said before you might actually like the pay raise!\"\n\nDempsy could only stare at Derrick dumbfounded as Derrick pinned the oak leafs onto his collar.\n\n\"You really hate me don't you?\" Dempsy spit out as Derrick started to laugh.\n\nSuddenly Derrick's face got serious, \"no, I need you more now them I did back then. I need you to keep this empire together as WE rebuild it. We are just starting we need everyone if this is going to work, ok?\"\n\nDempsy issued a sigh then nodded, \"I understand why, still doesn't mean I have to like it at all!\"\n\n\"You'll get used to it. Besides after what you did for Greeson I can't think of a better man for the job.\" Derrick told him.\n\n___________________________________\n\nAlexander and his men had landed on Earl Tauntoff's planet making all their preparations. Nodding he could see that they were more than ready for that ass O'Toma when he arrived. Smirking Alexander thought they ought to be ready for that bitch of his ex - wife also.\n\n\"I want the ship hidden before anyone comes out here!\" Smiling he watched as all his men scurried around like a bunch of ants. Yeah they ought to be ready, he was relishing going against the woman again. He wasn't the easy target he'd been when she'd left the sect. The fact that he was expecting her also gave him an advantage, no, she wouldn't surprise him.\n\nTrianas was about to go trans - warp when she picked up twenty distinct signals. What? Looking closer at the reading she saw that it was a group of the old sentry guards. Funny though she'd not seen that configuration of them before. Smiling she thought, target practice!\n\nLetting loose a few blasts she watched as the sentries were hit and continued on! Looking closer she could see that these were far stronger than she'd seen before, so that bastard was updating as well! Suddenly her ship was rocked by a titanic blast that hit where she had been.\n\nShit! Now that was unexpected she thought with a smile. They were obviously fully armed and battle ready. Oh well! The Duke's ass was toast after all! Smiling she reset her course and winked out into trans - warp.\n\nOn board Shelby an alarm was going off. \"Report Shelby!\" Derrick said as he pulled up the readings from the alarm.\n\n\"The new Sentinel Sentries that mother created were just fired on! They returned fire but the ship had a light screen. They reported that no damage was detected, then moments later a trans-warp signature was detected.\" Shelby told him.\n\n\"Damn!\" Derrick said. \"Again, we almost got her! I swear this woman is part escape artist! All ships keep an eye open for any trans-warp signatures! Trianas the assassin may try again to got onboard one of you. She is to be stopped at all costs!\"\n\nA hologram of Thomas appeared, \"that sadistic bitch is still alive! Let her bring it! I have a few issues with her!\" Thomas said with a growl.\n\n\"We all do Thomas, we'll get her. For now concentrate on the coming battle!\" Derrick told him.\n\n\"Yes sir, though if you want me to, Conner and I could go look for her. I'd gladly hunt that bitch!\" Thomas spit back.\n\n\"No, I need all of you. This is the largest force to attack the empire in a very long time. I want all of you ready, Captain Callie will join you in a few hours.\" Derrick told him\n\nThomas nodded his head, \"yes sir we'll be ready.\" With that Thomas clicked off leaving Derrick to ponder. Reaching over Derrick flipped a switch on the command chair's arm. \"Captain Callie!\" Derrick called.\n\nA moment later Mara Callie's voice responded, \"Yes Sire? Can I help you?\"\n\n\"I am afraid that I am going to have to move up the timetable for you assuming command. If you are willing I need you to go now.\" Derrick informed her.\n\n\"Yes sir, I am more than ready.\" Mara replied to Derrick.\n\n\"Good,\" Looking up, Derrick said, \"I want her on board in twenty minutes. Captain have all your things ready for transport!\"\n\n\"Yes sir I am preparing now I will be ready!\" Callie told him.\n\n\"Make us proud, both of you!\" Derrick said.\n\n____________________________________\n\nHartwell looked at the generator indicator, then the cell charge, good it was almost at full capacity! According to his readings the Duke's men were rapidly catching up to him.\n\nHartwell kept moving though he was afraid that they were trying to surround him. A tone let him know the generator was off and in a recycling mode, good that ought to help it later. He'd just readjusted his position when several particle weapons went off destroying the rock where'd he'd been.\n\nSmiling Hartwell knew that their scanners were having a real hard time detecting him with the micro-shield. Watching the Duke's men advance he fired off several shots taking out another five. Damn it! Just how many were left?\n\nA moment later he heard several of his pursuers as they started to shout. Looking around the corner he saw that almost all of the men were hi-tailing it out of there. What was going on? That's when Hartwell heard the screaming descending sound filling the air.\n\nLooking up he saw what appeared to be about fifteen or twenty trails of fire. Even as he watched they streaked across the sky plowing into the ground possibly half a kilometer away! His mouth hanging open Hartwell decided it might not be a good thing to hang around. Arising he also started off in a different direction than the streaks of fire and opposite that of the Duke's men.\n\nDerrick was preparing a briefing for the ships and the four Captains when Mary appeared. \"I am sorry to bother you Sire. It appears that two of the sentries were destroyed upon impact. They were apparently damaged far more than I had at first thought. The other eighteen survived but another three are immobile. The rest have detected Admiral Hartwell, they are advancing as we speak. Would you like them to take the Admiral into custody?\"\n\nDerrick's eyes went wide at Mary's words, thinking a moment he shook his head no. \"I will take care of him when he returns.\"\n\n\"Sire? Are you that certain that he will return? It has been my experience with humans that they often run.\" An opened mouth Mary asked.\n\n\"I am more than sure Mary, the Admiral may be many things but a coward he isn't. He has great honor and will do his duty and return. After I hear the reasons for what he did, then I will decide upon a course of action. For now help him to escape, then move on to capture the Duke.\"\n\nMary nodded as she conveyed the new orders to the remaining sentries. All fifteen stopped a moment then sent confirmation of the orders and proceeded forward.\n\nHartwell was moving as fast as he could away from the Duke's residence. Problem was what ever had just crash landed seemed also to be after him. A sudden beeping had him looking at a readout on the run. Damn it! What in the hell was going on up there.\n\n\"Report Permute one,\" Hartwell said into his communicator.\n\n\"Passenger that was IMT'ed to the berthing area has started to yell and beat on the walls. I am afraid that she has caused adjustments to be made. Her pounding is causing slight destabilization in orbital attitude.\" A voice answered him.\n\n\"Alright go to secondary systems, shut down primary 'til repairs can be affected.\" Hartwell answered.\n\n\"Compliance, all systems converting now. Orbital stabilization now proceeding. Now reading micro-shield shut down. Commencing IMT onboard.\" Came the voice.\n\nA moment later Hartwell was in the command center of the ship. In the rear he could hear his sister shouting and screaming. \"I know this is all a trick release me before the Duke has both of us whipped!\"\n\nHartwell's face twisted into rage as his hands clenched. Walking to the back, he reached for the release when she started in again.\n\n\"Let me out of here I will not play these sick and twisted games of his! Let me go or...\" Hartwell heard her shout.\n\nOpening the door she was swinging a piece of pipe at the door causing Hartwell to jump back. \"Damn it Lucie! You trying to kill the both of us?\" Hartwell shouted.\n\nThe young woman stopped in the midst of another swing blinking and staring at Hartwell. Then her eyes narrowed as she put the pipe between herself and him. \"I know this is all a trick! Few know my name, no one knows my whole name and I'd rather keep it that way. The last who did was my brother and he died years ago.\"\n\nHartwell smiled causing her to position the pipe in an even more defensive position. \"I don't think so Lucie. He is very much alive, that I know for a fact.\"\n\n\"You lie! He was reported killed in the last battle that his group was in! I saw the report, an official report. So please don't lie to me anymore. Put me back before the Duke punishes me again.\" Lucie shouted at him.\n\nHartwell growled and punched the wall. \"I swear I am going to kill that bastard if it is the last damn thing I do! That son of a bitch will never hurt anyone else again!\"\n\nLucie's face was suddenly showing shock, \"little Johnnie?\"\n\nHartwell's head snapped to look at his sister, the tears that were falling from her eyes. \"My god,\" she was whispering. \"My god! It is you! Johnathon!\" Lucie said as she launched herself into Hartwell's arms. Kissing his face she hugged him as tight as she could. \"We all thought you were dead!\"\n\n\"As you can see reports of my death have been highly exaggerated. You could say ... wait! You said we? I thought all of you were dead!\" Hartwell said.\n\n\"Much as you said, it was exaggeratedly wrong. Our brother William and Uncle Trent are alive and in hiding. So brother, is this yours?\" Lucie said indicating the ship.\n\nHartwell's face went from extreme elation dropping into a deep brooding. \"No, I am afraid I borrowed from a very important person. Do you remember my commander, Derrick O'Toma?\" Lucie nodded a look of worry on her face. \"He is now the most important person alive.\"\n\n\"How can that be? Is he now the supreme commander of the galaxy?\" Lucie asked. When Hartwell didn't answer Lucie's mouth hung open. \"Derrick O'Toma. Derrick O'Toma! Oh my god brother! You stole from the Emperor? Can't you just hide?\" Lucie asked.\n\n\"No Lucie I can't. He placed a lot of trust in me.\" Here Hartwell hung his head. \"I betrayed that trust, therefore I must face the consequences of my actions.\"\n\n\"NO! I just got you back damn it! I refuse to let him kill you! You did an extremely brave thing coming after me!\" Suddenly Lucie's face screwed up in determination. \"You let me talk to him! I'll set him straight in a heartbeat!\"\n\nHartwell was smiling he remembered just how fierce his sister could be. The commander didn't stand a chance, no he thought, this was his crime even if it was for his family. \"No, I can't allow it. I will take my punishment.\" Hartwell held up his hand as Lucie started to speak. \"No, please let me do this. I couldn't live with myself if I dishonored myself or our family. Now go rest I have to get back, it's going to take a few hours.\"\n\nLucie nodded then sat on the bed. Yawning she watched her brother leave, a sudden smile lit up her face. What her brother didn't know wouldn't hurt him, besides his commander owed her a favor and she intended to collect!\n\nDerrick was still formulating the best strategy that he could when several alarms went off. Looking over the readings he saw that Hartwell was back. Hmmm interesting there also seemed to be a second passenger on board a female!\n\nThirty minutes later Joseph Johnathon Hartwell and his sister Lucie Marie Hartwell walked into Derrick's room.\n\n\"I knew you'd be back, we both hold more honor than most these days. I want a full report, I have some of the details though half seem to be missing.\" Looking up from his desk Derrick waited.\n\n\"Yes Sire,\" bringing Lucie forward Johnathon introduced her. \"I'm not sure if you remember her Sire. This is my sister Lucie Marie Hartwell.\" Derrick's eyes went wide as he looked at the female then he nodded.\n\n\"She was the reason you went there, I take it?\" Derrick asked.\n\n\"Yes Sire, when Mary reported about the new slave I knew it was her, I didn't need confirmation. I apologize for taking the first of the converted sect ships. I await your judgment and punishment.\" Johnathon said as he bowed.\n\nGroaning Derrick nodded then said, \"Damn it Johnathon! You can't go off half cocked like this! I told you that you and yours are family to me! Lucie? What do you think I should do to him?\" When Johnathon started to speak Derrick pressed a button on the desk and watched as Johnathon went white faced as the shock hit him. \"I don't want to hear another word from you! It's up to her since she was the reason for all this.\"\n\nJohnathon stared at Derrick with anger in his eyes from the floor but was still unable to move or talk yet.\n\n\"Honestly sir,\" Lucie started, \"I'm not sure. Brother has always been a hot head when it comes to the family. He is very devoted to duty and responsibility. The worse thing I can think of is to make him take time off. That is after the rest of the family is back together, and that pig of a Duke is gone!\" Lucie spit out.\n\nDerrick looked at Johnathon still struggling to move and nodded his head a new found respect for the young woman. \"You are damn lucky you have a sister like her! I like the idea, maybe a little time off would help to clear your head! Now then...\" Derrick stopped as Lucie was looking around the room. \"Are you alright?\"",
        "\"I'm not sure sir,\" Lucie replied hesitantly, \"I keep hearing a voice.\"\n\nDerrick's eyes went wide as he cocked his head to the side and looked up at the ceiling. Damn he thought she can hear one of the ships but he can't? \"Can you understand what it is saying?\" Derrick asked.\n\nLucie's eyes went wide as she looked at Derrick. \"Sir? You don't think I am going crazy?\"\n\nDerrick smiled widely, it looked like they had just found their fifth Captain. Though the problem was that she wasn't military. Then he thought, did it really matter? So far very few had been able to hear the ships. \"No my dear I don't. Actually I can hear all the ships. \n\nShelby?\"\n\nShelby appeared a moment later in front of Lucie. \"Yes Derrick, how can I help?\"\n\n\"Please scan Lucie here and see if her readings match those of the other four Captains.\" Derrick told her.\n\n\"Yes Derrick,\" turning Shelby told Lucie, \"please don't be afraid I am only going to scan your mind so I can compare your readings to the others.\"\n\n\"As long as it doesn't hurt.\" Lucie replied.\n\nShelby smiled warm and friendly, \"No my dear it won't hurt.\"\n\n\"If I may ask?\" Lucie said. \"What exactly are you?\"\n\n\"I am the living Artificial Intelligence of this ship. What you see before you is a three dimensional representation of my personality.\" Shelby happily volunteered to the young woman.\n\n\"Uh, ok.\" Lucie said a little uncertain but still nodded her head as Shelby started the scan.\n\nA few moments later Shelby reported, \"Derrick, I am detecting almost the same readings as in the others. Oh my!\"\n\n\"What's wrong is she in danger? Is she a danger to us?\" Derrick asked a little worried now.\n\n\"Nothing like that Derrick. According to these readings she has a stronger mind for connecting to the ships than the others. I'd say that she is a little stronger than you Derrick. This is astounding!\" Shelby said as she finished.\n\nDerrick shook his head the way things were going lately it really didn't surprise him at all. Turning to Lucie he again asked, \"So can you understand what the voice is saying?\"\n\nLucie tilted her head to the side as she listened more intently. \"The only thing I hear that is clear is someone saying hello every few minutes. Other than that the rest is garbled.\"\n\nDerrick's eyes went wide, was she really that sensitive to the ships? Hell for that matter far more sensitive than he was? As he'd thought a little while ago nothing would surprise him now. If what he was thinking was true then Johnathon's sister might be far more important than anyone at first thought!\n\n\"Though it may piss you off Johnathon, I am going to need your sister to assist me with the ships.\" When Johnathon picked himself off the floor to a sitting position Derrick expected him to launch into a long tirade.\n\n\"Though she is my sister Sire, I do not deserve the right to tell her what to do. I feel that I have been a really crappy brother to her and my family. I came back to help restore mine and my family's honor.\" Here Johnathon hung his head. \"I feel that I failed at both of them. How can you expect me to aid you?\"\n\n\"Admiral Joseph Johnathon Hartwell! If I ever hear those words out of your mouth again? I'll do a hell of a lot more than incapacitate with shocks!\" Derrick started to chuckle when he saw Johnathon's eyes go wide then narrow as he stared at Derrick.\n\n\"Ha! As if! You couldn't beat me then and I highly doubt you could now! Besides isn't there a law that could get me executed for beating the shit out of the Emperor?\" Johnathon told Derrick.\n\n\"In certain cases it is allowed as long as death isn't an issue. Besides I think you've gotten soft!\" A stern faced told Johnathon.\n\n\"I think that is enough!\" Mary 2 and Lucie said as they stepped between the two of them.\n\nKimison looked over to Rayburn, \"You're sure we aren't overtaxing her system? As far as we've gotten I really don't want to start over again!\"\n\n\"According to all her readings she is at almost eighty percent. Preliminary projections show that she should be within a few months of present time.\" Rayburn replied.\n\nThey were both bent over different consoles when a tone sounded. The beautiful, blonde, green eyed, slender woman's eyes snapped open. Looking around with a strange look she closed her eyes shook her head and reopened them. Two men walked within her range of vision.\n\n\"Why am I onboard Tempro?\" She asked. \"Where is Derrick? Corporal Kimison I recognize you though the man next to you is unfamiliar. It appears that something is wrong with the cybernetic link I can't regain my access of my ship body!\"\n\nRayburn looked at Kimison he'd been afraid that this might happen. \"No ma'am, your memories have been eighty percent downloaded into a corporeal body. We are attempting to finish without killing you. This,\" Kimison said indicating Rayburn, \"is Sergeant Rayburn, a colleague of mine. We both served with the commander in the Republic wars.\"\n\n\"I see, when do you estimate completion of the memory download?\" The eager woman said.\n\n\"Now that you are more cognizant of what is going on, it won't take as long to finish.\" Rayburn told her with a wide smile.\n\n\"Good I am anxious to start helping Derrick.\" She said as she laid back. \"Please continue with all haste!\"\n\n\"Yes your Majesty!\" Both men stated as they began to move at a faster pace."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-36"
}