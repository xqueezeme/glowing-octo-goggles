{
    "title": "Click and Collect: Amie\u2019s Present",
    "pages": [
        "Mondays are always hard, and this one especially. No-one wants bookshelves or washing machines way after five o'clock on a Monday afternoon, we've all got better places to be. Except Amie.\n\nShe was milling around in aisle seven looking at big-box household appliances as I did the usual sweep through the store for customers. Milly was already packing up the till and closing the doors out the front of store.\n\n\"Hi, ma'am,\" I said, \"Just wanted to let you know we're closing now.\"\n\nThe woman jerked around to face me, obviously startled.\n\n\"Whoa,\" I said, \"I didn't mean to creep up on you.\"\n\n\"No, no,\" she replied, \"I was a thousand miles away. It's alright.\"\n\n\"I've never seen anyone so fascinated by dishwashers before,\" I said, sensing that the woman was on the verge of an enquiry. \"Anything I can help you with?\"\n\nThe woman looked back to the appliances, distractedly. She was maybe about thirty, short blonde hair in a bob, slim verging on thin but in an athletic way, maybe about a head and a half shorter than me. She wore a tight grey t-shirt and jeans, standing in ballet-flats. The curve of her breasts through the t-shirt showed the lines of her bra, cupping modest, pert breasts. When she turned back to me I was taken by her pale grey-blue eyes.\n\n\"This store does click and collect, right?\" she said. \"Can I do click and collect?\"\n\n\"Sure,\" I replied, \"Not a problem. What did you have in mind?\"\n\nThe woman went quiet, obviously nervous. She reached up with her left hand to tuck a strand of blonde hair behind her ear. I noticed the wedding ring.\n\nI tried to be reassuring. \"We have quite a range of appliances in this section,\" I began.\n\n\"Where would they be collected from?\" she blurted.\n\nI was caught off guard by the odd question. I said, \"Uh, we have a loading dock out the back. You could just drive down the ramp and collect from the warehouse area.\"\n\nThe woman indicated a dishwasher, and said, \"I guess the boxes for all these are out the back too?\"\n\nI nodded.\n\n\"And they're quite strong boxes?\"\n\nI nodded again, and continued, \"If you're worried about damage in transit, don't be. It's reinforced cardboard and the packing material will keep the contents very secure.\"\n\nThe woman blushed.\n\nA voice behind me called out. \"Hey, tills are done, do you need me for anything else?\"\n\nI turned to see Milly standing at the end of the aisle, jacket in hand, waiting expectantly. She had three kids at home to feed.\n\n\"All good,\" I called, \"Shoot off, I'll lock up.\"\n\nMilly waved and I turned back to the woman.\n\n\"So,\" I repeated, \"What did you have in mind?\"\n\n\"Could I see the boxes?\" she asked.\n\nI hesitated for a moment at the unexpected request. \"Of course,\" I said, \"Follow me. My name's Tom by the way.\" I tapped my name badge.\n\n\"Amie,\" she replied, then added, \"Thanks for taking the time, I know you're closing up.\"\n\nI led her through the doors at the back of the store into the warehouse area between pallets stacked up with flat pack wardrobes and outdoor furniture sets. There was a pile of flattened boxes against the far wall. We walked over to it.\n\n\"We flatten them for storage,\" I explained, lifting one box off the pile and folding it back into shape. \"See, it's really strong when it's taped back together.\"\n\nAmie ran her hands over the cardboard, and then looked at the rest of the pile.\n\n\"How about this one?\" she asked, pulling out a smaller box. \"What comes in this?\"\n\nPuzzled, I replied, \"That's a one-tary dishwasher. The kind you'd put in a studio apartment. Was that what you're looking for? The box is always bigger than the contents, so...\"\n\n\"No, this is perfect,\" she interjected, cutting me off. She folded it into shape and stared at it intently.\n\n\"Is this for yourself or is it a gift for someone else?\" I asked, suddenly feeling a little lost. This was not the usual sales conversation.\n\n\"It's for my husband,\" Amie responded, \"I want to surprise him for his birthday.\"\n\n\"I see,\" I replied, but I was more confused than ever. \"And what do you want to put in the box?\"\n\nAmie nibbled a fingernail and took a long time to answer.\n\n\"Me,\" she said.\n\nI tried to keep my face impassive, but I must have reacted slightly to her revelation. I found myself thinking: why would an attractive, petite woman want to be boxed up as a gift for her husband?\n\nShe was blushing furiously now and looked down at her feet.\n\n\"I'm, uh, I'm sorry,\" she stammered, \"I should go.\"\n\nShe put the box back onto the pile and turned to leave: the moment was slipping away. I cleared my throat. This was just like any other sale, I reasoned, and the customer was always right.\n\n\"When would you be looking to schedule collection?\" I asked.\n\n\"It doesn't matter,\" Amie replied, taking a few steps back towards the doors.\n\n\"We would be happy to accommodate your requirements,\" I continued and she stopped.\n\nI pressed on. \"If you can let me know when your husband's birthday is, we can plan accordingly.\"\n\nI watched her hands flutter against her sides nervously. I could see that she felt like a fool, blurting out her desires to a stranger. A business-like approach was the key here, I thought. She wants to buy a service, so we are back on familiar turf.\n\n\"Obviously if you're supplying the goods, there'd just be a nominal charge for packing and dispatching,\" I said.\n\nSlowly, she turned and approached me again. Her expression was unreadable, but I was caught by the look in her eyes. She was obviously doing something that she had thought about for a long time. I guessed that it had probably taken her most of the day to get up the courage to be in aisle seven, waiting for me.\n\n\"I tell you what,\" I said, \"Why don't we try the box for fit?\"\n\nI began to form the box into shape and placed it on the concrete floor in front of her. Amie's hands fluttered by her sides as she looked down at the cardboard, but she didn't move. We were in that part of the sales conversation where the buyer sometimes needs to be given the go-ahead that it's alright to have what they want.\n\n\"Let's see how it feels,\" I continued.\n\nAmie took a step towards the box. She shucked off her ballet flats and looked nervously at me. I smiled and took hold of the sides so it wouldn't fall over as she got in.\n\nAmie lifted one leg into the box. I had a view of her tight, firm bottom as she turned slightly to bring the other leg over the flaps. She grasped the edges and began to wriggle down into the cardboard until she was sitting inside.\n\n\"How does that feel?\" I asked.\n\n\"Good,\" Amie replied, \"There's definitely room.\"\n\nShe pulled her arms into the box and brought her head down to rest on her knees. I assessed her positioning critically.\n\n\"I think we can go a size smaller,\" I said, \"Would you like that? Get you nice and snug?\"\n\nAmie tilted her head back and looked at me. Her cheeks were flushed and I realised that she was aroused.\n\n\"Yes please,\" she said.\n\nI helped her out of the box and took her back over to the pile of cardboard. We sorted through the available choices until we came to the box for an office desk pedestal cabinet. I taped it up and had to lie it on its side to let Amie inch backwards into it. I watched in silence as her lovely, pert bottom wriggled into the cardboard. I felt myself stirring below the belt and tried to think of something else. It would be unprofessional for a customer who wanted to be turned into a package to see me standing over her with a hard-on.\n\nWhen she was inside, I tilted the box upright and once again Amie brought her forehead down to her knees. She fit perfectly. The box was narrower but also a little taller than the previous one, so there was a small gap at the top, which I was happy with since the next concern would be airflow. A part of me was amazed that I was able to still think in those terms when I was about to box a woman up as a gift, but that part was also concerned about avoiding having a rigid pole in my pants at her eye level.\n\n\"How's that?\" I asked.\n\n\"Better,\" Amie replied, her voice slightly muffled, \"I feel much more contained.\"\n\n\"I think I should close the flaps up,\" I said, \"You need to feel what it would be like to be in the box when it's taped up and you're waiting for pick up. You don't suffer from claustrophobia, do you?\"\n\n\"No, I'm good,\" she said.\n\nI closed up the flaps and placed the roll of packing tape on top to keep the flaps down.\n\n\"I won't tape it up, so you can just push up at any time,\" I said, \"But let me just go get the order sheet from the office. I need to write down the details. Will you be okay in there? It should just take a minute.\"\n\nThere was a pause, and then, \"Sure.\"\n\nI practically ran back to the office. Grabbing the order pad and a pen, I began to go through the steps required, the things we would need. As I walked back to the warehouse, I also began to think about what the customer would need. She was obviously getting off inside the box, something about being constrained and, I thought, something about the helplessness of being packaged up like a product. The service would need to take into account her desires, to play into her fantasies.\n\nI drew up a chair next to the box and sat down. I didn't open the box, on purpose.\n\n\"So,\" I began, \"Amie. First thing's first. Contact details for the collector.\"\n\nAmie's voice was muffled inside the box, but she answered my questions and I began to fill in the order form.\n\n\"Date of collection? When is your husband's birthday? Also, I'll need a phone number.\"\n\nAmie gave me the details, not seeming to question why she was still closed inside the box.\n\n\"Good,\" I said, \"Now, on to the details of the service. He will need to be told that he should come round directly to the loading dock at six o'clock. It's after hours but I think we'll need the buffer to make sure you're ready.\"\n\nI paused, contemplating the situation she had put herself in. How would it work, making sure she was safe in transit? I probably had some liability here. Maybe Amie would need to sign a waiver. There was so much to think about.\n\n\"Okay,\" I announced, \"Let's divide the rest up into two areas. First, the practical aspect of being packaged inside this box for an extended period. How long is the drive home?\"\n\n\"About thirty minutes,\" came the reply.\n\n\"Ah,\" I laughed, \"So we are not your nearest store. That makes sense. Next: how's the air in there? Can you breathe okay?\"\n\n\"It's getting a little stuffy.\"\n\nI paused for a moment. \"Have you ever worn a breath hood?\" I asked.\n\nSilence.\n\n\"It's a piece of equipment that goes over your head, sealing it completely. There's an opening in the front that you can screw a hose into. It's way more secure than a snorkel, which might come out of your mouth, and a lot more reliable than just pricking holes in the box and hoping that does the job.\"\n\nI began to imagine the pretty, petite blonde tightly packaged and hooded in the box. I was beginning to warm to the idea.\n\n\"Have you ever used any breath play equipment before?\" I asked, \"It's actually a very good way to stay safe in this scenario.\"\n\nAmie took a while to reply. Muffled by the cardboard, her voice seemed unsteady, but that could have been for a variety of reasons, least of all desire.\n\n\"No,\" she said, \"This is all very new to me. I've never done anything like this before.\"\n\nI took the tape off the top of the box and opened the flaps.\n\n\"Look at me,\" I said.\n\nAmie raised her head. There were little beads of sweat on her forehead and she licked her lips; her mouth was dry.\n\n\"If you trust me, I think I can help make this a very special birthday for your husband,\" I said.\n\nAmie nodded.\n\n\"I think you're a very special wife for wanting to do this for him.\"\n\nShe smiled uncertainly. I turned back to the order sheet.\n\n\"Next,\" I said. \"Do you have a sports watch? One that monitors heart rate, oxygen levels?\"\n\n\"No. Why?\" she asked.\n\n\"We'll need to put it on you so that your husband can monitor that you're safe in the box while he drives his birthday package home,\" I explained. \"You'll be packaged and quite helpless in the back. Once I pack you, you'll basically have no option but to wait until your husband unpacks you.\"\n\nAmie's face flushed deeper and I could see that I'd pressed a button deep within her subconscious.\n\n\"Which brings me on to the details of the packing. You look like you're quite warm in there, so have you thought about what you'll be wearing when your husband unboxes you?\" I asked.\n\nAmie blinked, obviously taken by surprise.\n\n\"For example, you could wear a bathing suit,\" I suggested, \"Or would you be in lingerie? Or maybe you'd want to be completely naked?\"\n\nMy pen hovered over the order sheet, waiting. We were at the sticky end of the conversation, the point where Amie fully realised what she was asking to have done to her.\n\n\"Lingerie,\" Amie said at last. She watched my pen move over the paper.\n\n\"Good choice,\" I replied. \"Light and yet practical. May I recommend the store on level two? They have quite the selection.\"\n\nAmie nodded, and I detected a subtle shift in her demeanour. I let her imagine herself in lacy underwear sealed inside the box, waiting for her husband to unpack her. I decided to push it a little further.\n\n\"I'd recommend you shy away from PVC or latex,\" I cautioned. Amie's eyes went wide.\n\n\"You would probably make him want to take you on the spot,\" I smiled, \"But normal lingerie lets your skin breathe better. I suspect you'll already be getting pretty warm in the box without sealing yourself up in latex too.\"\n\n\"I've...\" Amie began, \"I've never tried it.\"\n\n\"Ah,\" I continued, \"Well, for reference, there's a place a couple of blocks down towards town that has quite a wide range.\"\n\nI tapped my pen on my lips for a moment, thinking.\n\n\"Actually, I guess we could pack an outfit in there with you, then your husband could choose how to dress you,\" I said, \"Anyway, something to consider for later.\"\n\nI could tell that Amie was getting into this. It seemed almost normal to be talking to a pretty housewife tightly packed into a cardboard box about what fantasy lingerie she was going to be delivered in. I decided to press further; I could see how much she was enjoying it.\n\n\"To continue the theme,\" I said, \"Have you considered how you could occupy yourself in transit?\"\n\nAmie looked at me, puzzled. \"How do you mean?\"\n\n\"It might be fun to try a vibrator,\" I said, \"Just a little one, to keep you entertained. You'd have to pick something that would fit inside comfortably, since once you're packaged it'll stay in and switched on until your husband extracts it.\"\n\n\"I had never thought...,\" Amie began, but seemed unable to finish her sentence.\n\n\"Actually, there are some fun ones that are remote control,\" I continued. Amie squirmed in the box.\n\n\"Your husband could dial the sensations up and down as he drove you home,\" I said, \"Though I don't know quite what state you would be in after the drive, especially if you hit peak-hour traffic. It could be an hour.\"\n\nAmie was quiet, contemplating me. I could see my suggestions appealed to something deep within her. I stood up and put the order pad down on the chair and extended my hand to the side of the box.\n\n\"Okay, I think that's everything. Let's get you out of there,\" I said.\n\nI laid her down gently and helped her wriggle out. She knelt on the concrete, her hands in her lap.\n\n\"How do you feel?\" I asked, \"Was it too cramped?\"\n\nIn answer, Amie craned her neck and then arched her back.\n\n\"No, I'm good I think,\" she said.\n\n\"Something else that you may find exciting is a user manual,\" I said.\n\n\"Huh?\"\n\n\"Well,\" I explained, \"When you unbox a dishwasher, for example, there is always a manual in the top. So you know how to operate the appliance.\"\n\n\"So,\" she continued, \"I write how I want my husband to use me on a piece of paper?\"\n\n\"Yes,\" I replied, \"And then I could put it in the top when you're packaged up. It would be the first thing he sees. It might be fun.\"\n\n\"Um, yeah,\" Amie stammered, \"I'll think about it.\"\n\nI offered her my hand and pulled her to her feet. There was an unmistakeable look in her eyes. I grabbed the order pad and handed it and the pen to her.\n\n\"If you want to continue, please sign and date,\" I said.\n\nAmie scribbled on the paper, and I tore off the top sheet.\n\n\"Your copy,\" I said. \"I'll supply the hood as part of the service. Will you source the watch and the, um, whatever else you'd like to incorporate?\"\n\nAmie nodded.\n\n\"Great!\" I smiled, \"See you on Tuesday!\"\n\n---\n\nHayley was working store close with me the next week. She was a bubbly twenty-something with a great smile and a cascade of auburn hair that made for very good sales whenever she turned her charm on a customer. Even though she was ten years younger than me, we had hit it off immediately and had become very good friends.\n\nHowever, we had had an awkward encounter in the office a few days back when Hayley found my order pad on the desk. Cursing my stupidity, I fronted up to her. There was no point in denial or evasion; even though I was her boss, my goose would be cooked pretty quickly with head office. All she had to do was make a phone call.\n\nInstead, she just asked if she could watch. I must have gawped at her for a full minute before regaining my higher brain functions. I agreed, enthusiastically.\n\nThe plan was simple enough: Hayley would close up while I took the customer into the back. Once she had made sure the store was secure, she could join me in the warehouse area.\n\n\"You will have to be completely silent,\" I told her. \"And you'll have to wait until the hood's on. I don't want her to feel like there's someone else watching her.\"\n\n\"You got it boss,\" was all Hayley said, and she bounced out of the office.\n\n---\n\nTuesday was pretty slow and it was past five o'clock with no sign of Amie. I could tell Hayley was getting a little nervous, but as the minutes slipped by it was turning to disappointment.\n\n\"She's a no-show,\" Hayley said, as I tallied the takings in the office.\n\nI was disappointed too. I hadn't expected to be looking forward to putting a woman in a box quite so much; it was a revelation for me.\n\nJust then, a petite figure appeared at the doors.\n\n\"Okay,\" I said, \"We are go.\"\n\nI met Amie in the middle of the floor. She was dressed in a loose t-shirt and exercise pants that revealed shapely legs and showed off her pert bottom. She was also carrying a bag.\n\n\"Nice to see you again,\" I said and smiled in what I hoped was a reassuring manner. \"Please, come through to the back.\"\n\nI could tell Amie was nervous, so I tried to engage her in a little banter as we walked.\n\n\"How much have you told your husband?\" I asked.\n\n\"I just told him what you said,\" she replied, \"To pick up a box from the loading dock at six.\"\n\nI nodded, \"So, he's no idea what'll be in it?\"\n\nShe shook her head. I ventured a little further with my enquiries.\n\n\"And I assume you've never discussed this,\" I chose my words carefully, \"This side of you with him?\"\n\n\"No,\" she answered, \"This will be new for him.\"\n\nWe made our way into the back where I had already formed up the box.\n\n\"For him?\" I said. \"Not for you?\"\n\nAmie's cheeks flushed.\n\n\"When we got the dishwasher, the box was left behind. When he went to work, I got inside,\" she explained. \"I closed the flaps. It just felt good.\"\n\n\"Did you just sit there,\" I asked, \"Or did you go further?\"\n\nAmie's fingers traced along the edge of the cardboard, and she replied, \"I took off my clothes. I,\" she lowered her eyes, \"I pleasured myself.\"\n\nI took her hand gently and she met my gaze.\n\n\"Well, then we must make this as special as possible,\" I said, \"So your husband will want to do this with you in the future, too.\"\n\nAmie gave me a little smile, her eyes were shining and wide. I saw her burning need.\n\n\"You can use the bathroom to get changed,\" I said, \"We'll just pack what you're wearing into the bottom of the box. It'll give you something soft to sit on.\"",
        "She nodded.\n\n\"Oh, and I'll need your phone please. I need to install the watch app.\"\n\nAmie handed her phone to me, took her bag and made her way through the little door. I took a minute or two to compose myself. The thought of her in a dishwasher box, naked and alone at home, dipping her fingers into her pussy feverishly, enclosed in the dark, had set my mind racing. I needed to be calm and professional.\n\nWhen the bathroom door opened, I nearly lost all hope of control. A petite, suburban woman had entered the bathroom a few minutes ago; the person that emerged was entirely changed into a perfect, blonde, lingerie model. It had been difficult to assess her figure in her t-shirt, but now she stood before me in thigh-high sheer black stockings that showed off her shapely, toned legs, tiny sheer g-string that just about covered her slit and a bustier that simultaneously shaped and lifted her cleavage to frame her pert, modest breasts into high, perfect orbs. I thought that I could see a hard point in the material of each bra cup. She was obviously turned on.\n\nI cleared my throat. She handed me her folded-up clothing and her bag.\n\n\"I'm ready,\" she said.\n\nI made a show of putting her clothing in the bottom of the box and picking up the breath hood I'd put there, bending over to conceal the swelling mound in my trousers. I needed to hood her quickly; I wasn't sure how much longer I was going to be able to go on without revealing a full erection.\n\nI brought the hood up to her face, and she looked startled. It was getting very real for her now, suddenly; I was about to transform her into a helpless package.\n\n\"You can say no at any time,\" I told her, \"Even with the hood on I can still hear you. You'll get a full refund.\"\n\n\"No,\" she replied, \"I want to do this.\"\n\nI unfolded the back of the hood and held it up to her face. She nodded forward into the black latex.\n\n\"Okay,\" I said, \"Here we go.\"\n\nI slid the hood over the blonde bob; it fitted snugly against her skull. Taking the zipper, I drew it down the back of her head all the way down to her neck. There was an aperture in the front from which her breath hissed. Aside from that, there were no other openings in the slick black latex.\n\n\"All good?\" I enquired.\n\nThe hood bobbed up and down.\n\n\"Good,\" I said, \"Okay, just stand there for a minute while I get you ready.\"\n\nI went over to the doors that led to the store and pushed them open. Hayley was standing outside, waiting. I put a finger to my lips.\n\n\"Take off your shoes,\" I whispered to her. \"Barefoot.\"\n\nHayley slipped her shoes off and followed me into the back. I watched her face as she caught sight of the petite blonde, hooded and dressed in lingerie, waiting silently next to the cardboard box that would be her containment for the next hour.\n\nHayley looked at me and mouthed an obscenity. Then she pointed at my straining crotch. I shrugged. There was no point hiding it; Hayley was now in this as deep as I was, and I could tell from her face that it was also making her aroused. We were partners in crime.\n\nI turned back to the customer and opened the bag that she had given me.\n\n\"I see,\" I said, bringing out a little pouch. \"So, you took my advice.\"\n\nI placed the pouch in her hand. \"Put it in,\" I said.\n\nHayley gaped.\n\nAmie opened the pouch and removed a lozenge-shaped object in bright pink with a loop at one end. It fitted snugly into the palm of her hand. After a moment's hesitation she picked it up between thumb and index finger and pressed it against her crotch.\n\nHayley and I watched while the hooded figure in front of us teased her g-string to one side and began to rub the tip of the toy against her slit, moistening it with her juices. I could see that Amie's lips were already engorged; she was massively aroused by the contemplation of what was about to happen to her.\n\nAmie teased herself with the tip of the toy for a minute or so. My cock was now rigid and painfully constrained in my trousers. She slipped the toy into her pussy, pushing with her index finger until all that remained was a loop sticking out between her lips. She smoothed the sheer fabric of the g-string back over her engorged slit. I noticed the dark patch where her juices were beginning to stain the fabric.\n\nOn a whim, I took the control from the pouch and passed it to Hayley.\n\n\"We'll need to test it,\" I announced.\n\nHayley mouthed another obscenity, but I pointed at the remote and insisted. Hayley's thumb slid over the little button and hovered there for a moment. She pressed it.\n\nThe effect on Amie was immediate. She squirmed and attempted to double up, the flat of her palm pressing tightly against the front of her g-string.\n\n\"Oops,\" I said hurriedly, \"Maybe that's too high.\"\n\nI made a circular motion in the air to Hayley.\n\n\"Maybe we need to dial it down from cook, to simmer,\" I said.\n\nHayley fumbled with the controls and Amie was able to straighten up again. Her hand remained flat against her slit.\n\n\"Let's try this,\" I said, \"Let's dial it up and down until you find a level that you can live with, but that isn't going to have you climaxing in the box.\"\n\nThe hood bobbed up and down eagerly in agreement. I smiled wickedly.\n\n\"Of course, I can't guarantee what your husband will do once he has your remote control,\" I said.\n\n\"He might get stuck in traffic and decide to play with it. The trouble is, he won't be able to hear you in the box. If he's not careful and he pushes it too high you could find yourself stuck in an endless orgasm loop, packaged up and helpless to do anything but submit to the toy inside you.\"\n\nAmie shuddered. I decided to add a little more colour to the image.\n\n\"The only warning he'll have is the graph of your heart rate on his phone,\" I continued, \"Maybe he won't notice. Maybe he will but he won't care. Maybe his intention is to unpack a quivering mess when he gets home. Something that's only able to think about fulfilling his every desire.\"\n\nI made an up and down motion with my hand to Hayley. She didn't respond to me, but stared, transfixed at the hooded woman in black stockings and tight bustier in front of her. I made the motion again.\n\nHayley seemed to snap out of it and began to gently tease the controls up and down. We watched the figure react, beginning to grind the palm of her hand into her groin as Hayley increased the power.\n\n\"Too much,\" I said, and Hayley brought the level down again. Amie took her hand away from her crotch. I could see that the material of the g-string was sopping already.\n\n\"Okay, let's leave it at that level. Time to get you boxed up,\" I said, \"The birthday boy will be here soon to collect his present. Kneel please.\"\n\nThe figure obeyed, kneeling down on the concrete, bending over to lie flat on top of her thighs and gathering her arms around her. I laid the box down and edged her stockinged feet into the cardboard. Amie began to wriggle back into her confinement, the cheeks of her bottom jostling deliciously around the tiny black strip of fabric emerging from the cleft of her rear.\n\nI turned to look at Hayley, but her eyes were fixed on the figure slowly disappearing inch by inch into the tight confines of the cardboard box. I began to wonder if Hayley was imagining herself in the woman's place. I began to wonder what it would be like to box Hayley, and if she would like it.\n\nWhen Amie was completely inside, I tipped the box back upright, making sure the hooded figure was sitting comfortably. I took the hose and screwed it into the aperture in the front of the breath hood. I felt Amie's breath through my fingers; it was warm and intimate.\n\nTaking the roll of packing tape and the scissors, I cut a small hole in the side of the box and fed the end of the hose through before taping it securely in place.\n\n\"All good?\" I asked.\n\nThe hooded figure nodded.\n\n\"Okay,\" I said, \"So this is the point of no return. Given me your left wrist please.\"\n\nAmie wriggled a hand free and poked it out of the top. I fastened the watch around her wrist and then spent a few moments making sure it was synched up to her phone.\n\n\"Now, I'm going to put a little cardboard tray in the top for the manual and the remote,\" I said, \"Keep your hand there for me.\"\n\nI had constructed a tray that I now slid into place over the woman's head. I took her outstretched hand and folded all the fingers into a fist, except her ring finger. There was a hole in the cardboard tray; I slotted her finger through it and pushed the tray down into place.\n\n\"Wiggle your finger if you're okay,\" I said.\n\nOn the cardboard, the finger moved. It was the only remaining sign that Amie still existed. I watched her wedding ring flash in the light.\n\n\"Okay, good,\" I said, \"I think we're ready to go. Let me get the remote and manual in and we can seal you up.\"\n\nI took the vibrator remote from Hayley and taped it into place, then I took the user manual that Amie had written out of her bag. I cast my eyes over it as a placed it into the tray, covering the finger.\n\nThe document was quite short, with a paragraph of introduction and a short list of bullet points. In it, Amie told her husband how much she loved him, and that she wanted his birthday to be really special. She listed all the things that he could do to her: she promised to dress up in an outfit of his choosing, he could request oral sex, she would even allow herself to be tied to the bed. He could leave the hood on her if he wanted to. The last paragraph told him that she wanted him to see another side of her, and she hoped that he would like it and accept it.\n\nIt felt very private and genuine: a loving wife taking a scary and courageous step to submit herself completely to her husband for one night. I closed the top flaps quickly before Hayley could read it. The tape gun made a loud, rasping sound in the silence that had descended on the warehouse.\n\nI beckoned Hayley back through the doors, and was suddenly inspired. I gave her some instructions.\n\nI returned to the box, alone. It seemed fantastical that where a perfectly ordinary woman had been a few minutes ago, there was now nothing left but a plain brown cardboard box. The only sign that there was still a person here was the gentle flow of air through the hole that I'd made in the side of the box. Otherwise, there was no hum of the vibrator, no shuffling. The box was totally silent, the woman sealed completely inside.\n\nMy phone pinged. It was her husband. I waved a hand in the air, and Hayley came crashing noisily through the doors into the warehouse.\n\n\"Hey boss,\" she said, loudly, \"We all done here?\"\n\n\"Just about,\" I replied.\n\n\"Whatcha got here?\" Hayley asked, slapping the top of the box containing the packaged woman.\n\n\"Oh, this?\" I said, \"It's a click and collect pick up. Some guy is coming in right now to take it.\"\n\nHayley made a show of tilting the box. I imagined Amie, trapped and helpless inside, hooded and feeling the steady pulse of the vibrator buried deep within her, listening to our conversation.\n\n\"Heavy,\" she observed, \"What's inside?\"\n\n\"It's one of those new automated house helper things,\" I said.\n\n\"What, like a Roomba?\"\n\n\"Yeah, but it has a lot more functions.\"\n\n\"Can I see?\" Hayley asked, eyes glinting.\n\nI grinned back, \"You want to open it?\"\n\nMy hand was on the side of the box, a finger poised over the little hole. I could feel the air rushing faster past my fingertip. The banter was having an effect on the occupant, who by now was obviously trying very hard to pretend to be an inanimate household appliance so as not to give the game away.\n\nA horn beeped and we heard a car drive down the ramp into the loading dock.\n\n\"Ah, here he is,\" I said, \"Could you get me the push trolley?\"\n\nHayley grinned at me, and I thought I detected a light flush in her cheeks.\n\nThe car door opened and a man got out. He was dressed in a business shirt and trousers, and looked to have come directly from work. I waved him up the side ramp.\n\n\"Hi,\" he greeted me, \"Pick up for Amie?\"\n\n\"Right here,\" I said, patting the box. Hayley wheeled over the trolley and I tipped the package carefully onto the base.\n\n\"I'll bring it down to your car,\" I said.\n\nAmie's husband jogged ahead to open up the back.\n\n\"I might need a hand here,\" I said, \"It's heavy.\"\n\nWe hoisted the box up into his car.\n\n\"What's in here?\" he grunted.\n\n\"Your wife didn't tell you?\" I asked.\n\n\"No. Just to get here at six to pick up my birthday present.\"\n\nI looked at him for a moment. He clearly had no idea.\n\n\"Maybe just open the top and sneak a peek,\" I suggested, offering him my boxcutter.\n\nHe took the blade, puzzled, and made a quick incision along the tape. I watched as he folded back the flaps, seeing the remote control and the piece of paper. He read the text, then looked at me, then picked the piece of paper up. The ring finger was underneath. It wiggled.\n\nI took hold of the trolley and began to wheel it back up the ramp.\n\n\"Drive safe,\" I said. \"You know your way out, right?\""
    ],
    "authorname": "oneagainst",
    "tags": [
        "blonde",
        "control",
        "female submissive",
        "fetish",
        "husband",
        "milf",
        "petite",
        "stockings",
        "submissive",
        "packaged"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/click-and-collect-amie-s-present"
}