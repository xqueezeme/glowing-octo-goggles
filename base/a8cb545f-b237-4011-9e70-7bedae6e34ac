{
    "title": "Vodka Sting",
    "pages": [
        "A Special Thank You to blackrandi for the invitation to participate in this event, it's been a fun one to write.\n\nI need to say Special Thanks to Chasten, SlipperyJim, Bebpo03, and sbrooks103X for the beta and edit. I really can't thank them enough. Talk about short notice rescues. We're talking like the day before post time. This one decided to grow out of control. My estimated 12K words turned into almost 19K with no damn warning, which ate up a helluva lot more time than we expected. \n\nThis is in LW because it is a prequel to Tequila Shuffle, and it is the second in what The Missus and I think of as the drink series. I learned the hard way to keep connected stories in the same category; doing otherwise inflicts serious confusion on people who try to follow series. \n\nWe hope the story provides a bit of fun and distraction. And maybe, just maybe, you'll learn to love a clown. \n\n*****\n\nVodka Sting\n\nThe Come In\n\n\"Why you gotta do me like this, Bobby?\" \n\nBobby looked up at me from the other side of the folding table, trying to look innocent. It didn't really work with his spiked hair and the gold and diamond grill he always wore. \"What you mean, Missy Kelsea?\"\n\nI rolled my eyes and snorted. \"Cut the Charlie Chan shit, Bobby. Save it for the tourists.\" Bobby was born and raised in the Bronx, he just used the accent to get tourists to think they could pull one over on him. I held up the jeans I was looking at. \"These Dolces are wretched. The butt seam is so far off I'd have to walk sideways.\"\n\nHe shrugged and dropped the ridiculous fake Chinese accent. \"I dunno, Kelsea, the damn shipment just kind of sucks this month. Must be using six-year-olds to piece everything together over there or something.\"\n\n\"I can't use this stuff.\"\n\n\"Yeah, I know.\" He grimaced. \"I'm hoping for some really stupid tourists.\"\n\nI examined a missed seam along one leg of another pair. \"Stupid and blind.\"\n\n\"I thought you quit doing that stuff?\"\n\n\"I'm running out of options. Besides, this isn't like Three-card Monte. It doesn't hurt those big companies; they probably won't even notice.\" I was starting to get pretty good at justifying things to myself.\n\nI'd been pretty shaken up after two big guys had called me out after losing two hundred at three-card and started chasing me. A good pair of running shoes is pretty much standard for anyone dealing Three-card Monte on the street, but the only reason I'd gotten away was that they didn't realize a woman as small as me could bounce off a dumpster and clear a ten-foot fence. There are advantages to spending a few years as a circus clown; learning all the acrobatics really paid off that time. I'd sworn off my \"desperate life of crime\" and had felt pretty good about it. That had lasted a whole three months. That whole \"need to eat\" thing was a serious drag on my morals.\n\nHe grunted and put another stack of knock-off Gucci denim up onto the table. \"You're an adult. It's your call. I got some decent Versace here.\"\n\nI ignored the slightly disappointed sound in his voice. Pot and kettle and all that. \"I need to make some money on the resale. I gotta make the whole rent next month. Versace won't do that; the resale is too low.\"\n\n\"No luck finding a roommate?\"\n\n\"Two smokers, a dog owner, and a guy who ignored the 'women only' note in the ad in the hopes that I came with the apartment.\" The apartment building had a strictly enforced 'no smoking, no pets' policy. As far as the guy was concerned, I had an equally strict 'no rats policy.\n\n\"That sucks. But if you do decide to start trading sexual favors for a place to stay let me know, I can make room.\" He raised an eyebrow in a comical leer.\n\n\"Yeah, well you let me know what Anna says about that, okay?\"\n\n\"Spoilsport. She'd keep you and kick me out.\" He pulled another box open and looked in. \"Got some really good Chakra House jeans here. Crystal Bolt.\"\n\nI checked the resale shop websites on my phone. The resale value on the real thing was pretty damn good, between six hundred and a thousand a pair. \"That could work. Let me see them.\"\n\nOnce he handed me the stack, I searched for just the right pair, looking over each one. They didn't have to be perfect, but they had to be damn close. I found a pair of the rhinestone-laden jeans in size four. \"These look right.\"\n\nHe nodded. \"The real thing has Swarovski crystals; they did a good job with these. Be better if you could fit in a size two.\"\n\n\"That'll happen.\" I snorted. \"I'm not eating enough as is right now. That's why I can get my size six butt in size four right now.\"\n\nHe leaned back and studied me for a moment. \"You are kinda looking a little thin.\"\n\n\"Weather's been bad. I can't pull good tips in this crap.\"\n\n\"It's pretty good today.\" He glanced up at the sky. The last month had been nothing but a series of rainstorms.\n\n\"I know, I know. I'm heading over to Times Square this afternoon, Mom.\" For a moment my frustration showed through. \"Sorry, just a lot going on. Maybe there will be a good crowd this evening.\"\n\n\"I thought you mostly worked the Park and the Dumbo?\"\n\nI shrugged. \"Trying to get extra in somewhere, it's getting late but Times Square doesn't close. Not as many kids there, but maybe I can pull in some extra in with the magic act.\"\n\nHe nodded and reached under the table into his cooler and brought out a big take-out bag. \"Anna gave me this to give to you. Frozen orange chicken, wonton soup, and lo mein from the restaurant. She worries about you.\"\n\nMy stomach grumbled and we both looked at it. \"I think my stomach agrees. Tell her I said thanks.\"\n\nWe haggled the price of the rhinestone-covered jeans along with one pair of Guccis good enough for me to use on a switch sometime. We both knew what the price would be before we started, but some things just have to be done a certain way. \n\nAnna and Bobby might be friends and occasionally my saviors when it came to food, but it's still Chinatown when you're buying on the street. \n\nBy the time I got to my apartment, I'd figured I had just enough time to nuke a little lo mein in my second-hand microwave to quiet my stomach, and then get my paint on. \n\nThe microwave was sitting on the counter over a couple of empty boxes in the corner of the room, remnants of Carol. She'd managed to get on with a business over in New Jersey, and immediately fled with a flurry of apologies and \"best wishes.\" We'd never really been friends, but she'd kept her stuff picked up and paid her half of the rent on time. That's really about all anyone can ask. The microwave was older than I was, and I wasn't too sure it wasn't dosing me up with radiation every time I used it, but beggars can't be choosers.\n\nAfter eating some of the reheated lo mein. I pulled on my bodysuit, sat down at my scavenged-and-repaired-with-packaging-tape vanity, pulled out my makeup tray and turned on the mirror light. \n\nTime to put on Sparkle. \n\nFace clean and dry. Check.\n\nI rubbed the white paint, a mix of zinc oxide and olive oil, all over my face and forehead down to the collarbone and patted it to even it out, and then carefully removed it from just below the bottom lip and corners of the mouth. Blue over white to highlight the eyes in powder blue. Then the red on the corners of the mouth and the lower lip. Amateur clowns often make the mistake of making the mouth red all around, but that tends to freak little kids out, because all they see is a giant red kid-eating mouth. I used the bottom of a small medicine bottle to mark the cheek circles and then put the red on those -- it looks light pink over the white. Perfect. \n\nBaby powder in a sock patted gently over everything, then brushed with a soft man's shaving brush to set the makeup so it can last all day. Seating the little maraschino cherry-looking nose cap on with spirit glue, I double checked everything. The nose cap was my lucky charm, and I carried it with me all the time; it was a reminder of what I was, and what it meant.\n\nNext to last were the false eyelashes and little highlights in warmed up black grease pencil -- soft curling lines from the corner of the eye in a spray to the cheeks. Finally, little spirit glue dots to hold silver sequins at the ends of the tiny black lines. Small as they are, they catch the light and really change the appearance.\n\nI settled my light blue yak-hair wig on and eyed myself in the mirror critically for a moment. Sparkle was perfect. Exaggerated enough to work, but soft and cute enough to make kids curious and friendly. I'd had to tone it all down a bit from the circus makeup I'd used before. What works in the ring or from 100 feet away can be a little much for people up close. \n\nThe toned-down makeup also kept most of the \"clowns scare me\" stuff away. Some people really are afraid of clowns, but a lot more like to pretend they are because it's a popular meme these days. Thanks to John Wayne Gacy and Stephen King, being afraid of clowns is considered funny and normal. It's still hard for a grown man to pretend to be scared of a clown when her primary look is \"overly cute.\" \n\nI felt a little like I was selling out, but the tradeoff was that I could talk a lot more. A lot of circus work relies entirely on visuals since the tops are usually too noisy to really make out dialogue. With kids, the patter wasn't as important as knowing how to paint faces or having balloons, but it'd help with the later, more adult crowd in the Square. I changed my lines in Times Square too. There were women out there wearing nothing but spike heels, thongs and body paint. Circus clowns don't make lewd jokes, ever; but given the audience I was headed for, I could crank up all the way to Marx Brothers suggestiveness. I love the Marx Brothers. I didn't do \"silent clown\" most of the time, but Harpo was my model for a lot of the physical stuff.\n\nMy outfits were lined up on a freestanding rack. After the one time I'd had a mouse eat a hole in a six-hundred-dollar outfit, they never went into a closet again. My clown gear wasn't Halloween costume stuff, it was professional gear for a full-time circus clown. \n\nSighing, I realized I had more clown outfits than I had regular clothes. I couldn't pawn the four costumes or the three expensive wigs for anything like what they cost or what they were worth, and someday I was going to get to go back to a regular gig and I'd really need them. At least that's what I kept telling myself, although I was getting less convincing every day. I'd even caught myself considering just going in \"civilian\" clothes; just be a street magician. But that's not what I am. \n\nI am a clown, dammit. \n\nA damn good one.\n\nI pulled on some baggy polka dot shin-length bloomer pants, a blue skirt, a frilly checkered blouse and striped vest combo then started loading my pockets. My chickens, a set of five small rubber chickens I'd stiffened and weighted so I could juggle them, went into one thigh pocket, then some giant lollipops, my joy buzzer, a set of bulb horns and a few other gimmicks went into various other pockets. I quickly made up a half dozen miniature balloon animals just in case there were some kids at the Square. Being able to calm a kid who's having a bad day can earn a twenty-dollar tip. Even if it didn't earn me a tip, the balloons were cheap and it made me feel better.\n\nI perused my magic. Street magic is tough because there are no distractions, no elaborate stage works and the mark can see damn near everything. I pulled a couple of regular decks of cards because you can do nearly as much with them as you can with a Svengali deck, without the risk of an amateur magician calling you out for a cut or marked deck. Plastic safety scissors for the \"cut bills\" trick, some tissue paper just in case I got a chance to pull a real Slydini paper ball trick on the right mark, and a real silver dollar for the one coin routine. \n\nI have a whole collection of gaffed tricks, but I never really used them. It's just too easy to get caught out these days. YouTube has worked hard to remove the Magic from magic and turn it all into just tricks instead. Punchy taught me that misdirection and sleight of hand are the key to the best close-up magic. There are unspoken rules to magic. Gimmicks fail, kids never look away, and the real magic is in the presentation. \n\nI gave myself one last long look in the mirror and headed out for Times Square.\n\nIt was going to be a good day.\n\n*****\n\nI wasn't even on the square for five minutes before I was punching a mime in the mouth.\n\nThere's a longstanding popular belief that clowns and mimes don't like each other, but I've never seen it. All the ones I know always got along fine. \n\nThis mime was Boris, though, and he was a dick. A tip-stealing dick to be specific. Nobody liked Boris. He was a formally school-trained mime from Russia, or maybe Belarus; I'd heard both at different times, so I couldn't be sure. Somehow, someway, a Russian National School of Theater mime had ended up a street busker in New York. \n\nHe was convinced he was better than everyone else; he might actually have been. But that was probably his problem. He played complex tragedy when he'd have made more tips with the invisible box or walking against the wind set pieces. He also had a reputation as a thief.\n\nWhen the wind caught a five-dollar bill that had been dropped into my hat after a card trick, and it landed with the corner barely crossing the pavement line, he made a grab for it.\n\nI needed that money. I lunged over and punched him as hard as I could just as he was straightening up, snatching the bill right out of his hand as he staggered back.\n\n\"Stop. Right now.\" I looked over my shoulder and, closed my eyes in silent prayer.\n\nBrilliant move, Sparkle. I had punched him right in front of a pair of cops.\n\nThe bigger cop moved between us smoothly; he was roughly the size of a building, and clearly a dedicated weightlifter, so doing anything else to Boris wasn't an option. \n\nBoris was wiping the blood from his mouth and nose with one hand while he pointed at me and screamed a stream of what I assumed was Russian at both officers and me.\n\nI held my hands up and stepped back one long step while the shorter cop moved to keep an eye on me.\n\nBoris tried to push around the big cop and was promptly spun around and pushed up against a building, then cuffed.\n\nThat seemed to take the air out of him. I stayed as still as possible.\n\nA group of middle-aged women, more than a couple of drinks into the evening, were looking over the big cop, almost drooling. I overheard one of them, a woman in a red dress, make a loud and somewhat carnivorous comment about his butt. He'd obviously heard it too, but he ignored it; he was a pretty damn good-looking guy, so he'd probably heard a few drunk comments before. \n\n\"Look, you're not really being arrested here, just detained until we sort this out.\" The big cop said as he handed Boris off to his partner and turned to face me. He had that bored, bureaucratic tone. The tone that tells you that this may be a horrible moment for you, but it's the same-shit-different-day for him.\n\nI nodded. I'd been doing this long enough to know not to antagonize the police. I glanced at the crowd around us. It was a pity they were only stopping to see the scuffle. I wished I'd been able to draw a crowd like that myself.\n\nThen Genesius smiled on me. Or at least that's who I assumed it was. Punchy had told me that Saint Genesius was the patron saint of clowns. He's also the patron saint of lawyers, which I find kind of disturbing.\n\nIn the same bored tone as before, the big cop announced. \"I'm going to have to search you. Just to make sure you don't have any weapons. I won't cuff you if you cooperate.\"\n\nSending a silent prayer of thanks up, I slowly and deliberately turned my head to catch the eyes of the group of middle-aged women who'd been eying him so appreciatively.\n\n\"Um...\" I looked up at him, then very slowly reached up and made a gesture of gently poking his huge bicep with one finger. I looked back at the group of women, raised my eyebrows as high as I could and fanned myself dramatically with my hand while fluttering my eyelashes.\n\n\"Oh, Officer! IF you must, you MUST!\"\n\nThe woman in red laughed loudly, a brash braying sound that triggering a cascade of laughter through the crowd. She was perfect, there's always one person with a contagious laugh, the one who can cause everyone else to laugh.\n\nHe was so focused on the process that he totally missed the crowd's reaction. \"Just turn around and spread your legs a little more than shoulder-width.\"\n\n\"So, um, what's your name, Officer?\"\n\n\"Sorenson.\"\n\n\"No, your first name. We're getting pretty personal here!\"\n\n\"Bj\u00f6rn\"\n\nDear God: Thank you. I let my mouth drop open and waggled my eyebrows at the crowd. \"Of course it is! Oooooo...I SOOOOOO love this dream!\"\n\nI slowly turned and put my hands on one of the security bollards. Maybe \"turn\" isn't the right word; executing a ballet turn in huge red clown shoes is a perfect clown move -- combining exaggerated precision and grace with the absurd can be strikingly funny. \n\nI also made sure I was facing the crowd. My perfect straight man of a cop missed that. He just shook his head. \"Smartass.\"\n\nI popped my butt back at him and smirked widely at the crowd. \"He noticed!\" \n\nThe woman in red and her posse erupted in laughter, causing another blast of glee from the crowd. \n\nThe cop glanced at the crowd for a second. \"Do you have anything on you I should know about? Weapons, needles, sharp objects?\"\n\nI did my best to project mock wide-eyed naivety. \"Not that I know of Officer. But you should take your time and look really, REALLY carefully!\"\n\nThe crowd was laughing pretty much continuously at this point, so all it did was turn the volume up a bit. Still, it was at that point \"my\" police officer finally realized he was playing the straight man in this game, but there wasn't much he could do about it. He sighed. \"Let's get this done.\"\n\nIt was time to prime the pump. I made a sad face at the clutch of women and glanced down at my hat. \"Looks like I might be headed to the hoosegow, girls.\"\n\nA twenty fluttered from one of their hands into my hat. \"Bail money.\"\n\nHe ran his hands up my legs and I gave a loud breathless sigh. \"If you're doing this for the City, that's fine, but if you're doing it for me, go just a little bit slower.\"\n\nThat dropped the crowd into high gear.\n\nThe first thing he found were the rubber chickens. He looked them over, then held them up wordlessly. \n\nI shrugged. \"Those are my emotional support animals.\"\n\nCards, plastic safety scissors, juggling balls, tissue paper and my silver dollar were all discovered, to fluttering eyelashes and double-entendres that kept the crowd in a giving mood. When you're on, you're on. A rain of bills fell into the hat with each wisecrack or strange discovery.\n\nHe tried not to feed me any more straight lines than necessary, but he couldn't help himself when he found the clutch of giant lollipops. \"Why on earth do you need six of these?\"\n\nI looked over my shoulder at him for a second with a huge grin, then looked back at the press of people with a slow wink and a touch of one finger to the side of my face. \"My therapist says I have an Oral Fixation.\"\n\nEven he finally laughed at that one, though it was hard to hear over the crowd's reaction. He started to back off and I realized I had one more gag, but it would only work if he played along.\n\n\"You missed a pocket.\"\n\n\"Really?\"\n\n\"Yup.\"\n\nHe gave a quiet, resigned sigh. \"Where is it?\"\n\n\"Right hip.\" I wiggled exaggeratedly. As the people laughed, I whispered to him. \"Red handkerchief.\"\n\nIt is THE classic clown gag. Unless you were raised under a rock in Antarctica, there's no way you don't know what's going to happen when you pull on a clown's handkerchief.",
        "He played along, pulling the chain of silk handkerchiefs out steadily while I played it up, focused on the women who'd led the rain of money.\n\n\"Right there...there...oh yeah, right there...There...almost...\" \n\nHe stopped for a second as the handkerchiefs suddenly stopped coming. Because I'd pushed my hip against the bollard, pinning the end.\n\nI rolled my eyes dramatically and panted. \"Just a little harder!\"\n\nHe pulled and I let it go with the loudest squeal I could muster. His arm went straight up with the end of the chain of handkerchiefs, displaying the red lace thong at the end.\n\nWith a dramatic sigh, I crossed my eyes, stuck the tongue out of the corner of my mouth and melted down in a classic boneless comic faint, ending on my back with a huge grin, pretending to try to hold my beating heart into my chest in one hand with my other hand draped dramatically across my eyes. \"Does anyone have a cigarette?\"\n\nThe crowd exploded in laughter, louder than I heard since the circus closed. It was that breathtaking rush I'd always loved. I closed my eyes and just let it all wash over me until it faded and the cop nudged me. I let my eyes flutter open. \"Hello?\"\n\nHe looked down at me, with an amused look in his eyes. \"Okay, you've had your fun.\" He glanced over at the tip hat. \"And made a lot of money.\"\n\nI gave a helpless shrug and reached my hand up to let him pull me to my feet. \"Sorry, but there was no way I could pass that up.\"\n\nThe crowd was already thinning as people realized the show was pretty much over.\n\nHe smiled a little and shook his head. \"Helluva way to make a living.\"\n\n\"Me or you? I'm not the one searching clowns on a Friday night, you know.\" \n\n\"Both.\" He chuckled. A nice warm low chuckle.\n\nHis partner wandered over. \"Boris over there says he'll drop the assault charge if she forgets about his attempted misappropriation of funds.\"\n\nI didn't have to think about it long. There was a lot of money in the hat, it'd probably be enough to make rent. I couldn't use it for rent if I had to use it to make bail though. Or pay a fine. \"That works for me.\"\n\nBj\u00f6rn and his partner nodded to each other and the partner wandered back to where Boris was waiting for him. Bj\u00f6rn's partner was apparently a little more risk-averse than he was; Boris was still in cuffs. \n\n\"Rather not do the paperwork on this one. You'd both get fined and I'd spend all evening doing paperwork over a five-dollar bill and a bruised nose.\"\n\n\"Thanks.\" I picked up the tip hat and looked into it and saw more twenty-dollar bills than I'd seen in months. \n\nHe shook his head. \"Let's not make a habit of this.\"\n\n\"Really? I was thinking you and me could do a matinee on Sunday.\" I wiggled my eyebrows at him.\n\n\"I don't think Boris would cooperate.\"\n\nI shrugged. \"We could get a stand-in mime. Most people can't tell them apart anyway.\" I finished gathering up my take and rubber-banding it together in neat packs. I saw people looking up as a rumble of thunder managed to break over the sounds of people and cars. I could see them pick up the pace, so there was no point in trying to pull in another few dollars tonight.\n\n\"I appreciate it, but I don't think so. Stay out of trouble.\" He turned and walked over to where his partner was still talking to Boris. The woman in red had it right, that was not a bad view at all; the man definitely didn't skip leg day. \n\nHe'd neatly stacked my props, so it was no trouble to get them all pocketed up again. Except for the handkerchief line. That took some work to get packed correctly so I just balled it up and dropped it into one of my larger pockets.\n\nLater, at the apartment, I counted five hundred ninety-three dollars and thirty-seven cents. That was the best take I'd had in a single day, ever. Not crazy sell-the-house-and-move-to-Monaco money, but, damn, I should have seriously tried to get the big cop onboard instead of joking about it.\n\n*****\n\nI checked the counterfeit jeans one last time before I put them on. They looked good and I would be able to switch them out for the real thing as long as I was careful. It wasn't the highest risk scam. All I had to do was wear them into the ritzy boutique, swap them for a real pair and walk out. Then I'd wear the jeans for a little while, take them to a high-end resale shop and walk out with at least six hundred dollars. \n\nDesperation kept the little bit of guilt I had at bay. I knew I was rationalizing, but insurance would make up the loss, assuming the shop didn't just sell the knockoff anyway. Besides, the same little kid in Malaysia probably made both pair. \n\nIt was technically Grand Larceny with the jeans marked to well over two thousand dollars, but if I did get caught, any lawyer, even the public defender, could plead it down to Petty Larceny. For a first-time offense, anyway. \n\nIt was illegal, it was shoplifting, but I kept telling myself that it didn't hurt anyone directly and it kept me from doing riskier stuff like three-card or worse yet, buying into the nastier cons. I just wasn't ready to pull Pigeon Drops on little old ladies yet. \n\nAs for playing in the higher end stuff, the big cons? Well, that wasn't something I liked to do much for other reasons.\n\nThe big cons could get you killed, not just by the marks either. Confidence men usually avoid violence as a rule, but there's a price for everything. I'd played an extra in a couple, out of sheer desperation, but it was a terrible idea. Rumor had that in a couple of high-end cons, some of the extras, the low-level players like me, had disappeared, much to the inconvenience of law enforcement. Getting dumped in a landfill in a garbage bag wasn't on my bucket list.\n\nPunchy, our old Boss Clown, and his wife, Lulabelle, had spent years in that game before a nickel upstate for Punchy and a close call or two with some heavies had convinced them to find a new calling as clowns. They'd never regretted leaving the con game. He and Lulabelle had always loved children, but she couldn't have any of her own for some medical reason. So they found a place where they could have all the kids they'd ever want. I'd never seen anyone cry as hard as Lulabelle when the circus folded, and it had nothing to do with money. But they'd told stories. You do a lot of that to pass the time when you travel. And when the circus had crashed, he and Lulabelle had taught me what they could; what I needed to know to stay afloat. They'd never judged me and just wanted me to be okay, even if I knew they secretly worried about me and wished I could find better options.\n\nI'd scouted Silver weeks before, along with a dozen other very high-end shops. Those stores don't do security tags, it offends the ridiculously over-privileged customers. The sharp-eyed customer service team is always more focused on the incredibly expensive $50,000-and-up purses than the mere two thousand dollar blue jeans. \n\nSilver was no exception. A shop that doesn't even have a name above it, just a slash of silver through a black background. If you know, you know. That was pretty much Silver's marketing strategy. They didn't depend on tourists; they relied on the very rich. \n\nI checked my makeup. Not clown makeup this time. The best makeup I could get. Salesgirls can tell. Of course, I didn't have the money to buy the makeup either. I got mine from hotel housecleaning staff. People don't just take towels, they leave stuff behind all the time. Rich women buy tons of makeup, then leave tons of it behind. It doesn't always travel easily; airport security can be a pain about some of it. Besides, it doesn't mean anything to the multimillionaire's trophy wife to have her staff buy another thousand-dollar eyeshadow or concealer. You just have to know the right person in the housekeeping staff, and not be particularly squeamish.\n\nI had a makeup kit that would have cost twenty grand if I'd had to buy it retail. Perfume was a little different. I had plastic baggies with sample paper strips in them. Rub one on my skin and I had a trace of expensive perfume about me. Just enough that the salesgirls would pick up on it and automatically class me as \"rich but slumming.\"\n\nLulabelle had taught me all the angles on the \"switch and skip.\" She'd done variations of it for years. \n\nI put on my \"vintage\" t-shirt. It was a Chinatown \"Vote for Pedro\" knock-off, of course, but like the jeans it was good enough to pass, even if they realized it was a knock-off, they'd assume it was \"ironic.\" Whatever that meant to them. A tiny clutch purse that couldn't hide anything more than a bank card or two, a pair of very convincing Fendi sunglasses and knock-off web slide Gucci sandals were the final piece. None of it was good enough for a point-blank examination, but all of it was just good enough to pass the salesgirls for long enough to do what I needed.\n\nThe Silver was a perfect venue. The salesgirls wore clothing that cost more than I could bring in during a good month. Still, they were used to wealthy customers wearing whatever the hell they wanted, dropping platinum cards on the counter and walking out with house-mortgage-size purchases in little plastic bags. \n\nThey barely looked at me as I came in, the outfit nailing exactly the right \"I'm rich, but I'm pretending I don't care\" vibe. The tiny purse was the key. Rich people do shoplift for no reason I can figure out, but nothing was going to fit in that purse and they were far too busy to worry about me looking at merely ridiculously expensive jeans when they had women pawing through handbags that could finance the average house. Salesgirls at the Silver worked on commission.\n\nLooking as bored as I could manage, I tried on a couple of pairs of Secret Circus jeans, then casually narrowed my search to the Chakra House display. \n\nI sucked in my breath and damn near screamed in frustration. There were Chakra House Crystal Bolt blue jeans in size zero, two, and one token pair in size eight. None in either of the sizes I could use. \n\nI'd have to hunt down a completely different shop, there'd be too much risk in coming back any time soon. Salesgirls have memories. \n\nTwo of the salesgirls went to assist a customer, and I saw exactly what I was looking for on the counter near the sleek black pulpit that hid the crass necessity of a register. One pair of Crystal Bolt, size four. It was odd that they hadn't re-shelved it, but then the salesgirls couldn't be everywhere.\n\nThe switch was over in just a few unhurried minutes. I deliberately forced myself to take a little extra time so it wouldn't seem rushed if anyone paid attention. I'd transferred the tags so when I was done, I just walked over and put the knock offs on the display. \n\nOne of the junior sales girls drifted into my path, carrying a top-of-the-line plastic purse that probably ran a good twenty thousand.\n\n\"Excuse me?\"\n\nShe paused, trying to keep one eye on her potential commission across the shop, but not really willing to offend me, just in case. \"Yes...?\"\n\nI watched her try to choose between using \"Miss\" and \"Madame\" and decided to let her off the hook by cutting her off gently. \"I came in to see if you have the new '7 For All Mankind' jeans yet.\"\n\n\"I'm afraid they aren't due in until next Monday.\"\n\n\"Oh. I just knew I had the date wrong. Thank you.\"\n\nHaving established my reason for being in the shop, but not buying anything, I cautiously drifted out and down the street. \n\nCalm. I focused every bit of my mind on relaxing and staying totally calm. I even paused to look into a few windows.\n\nDamn the jeans felt amazing, smooth as melted butter on my legs. For a moment I almost thought of keeping them, but the resale price was a month's rent and maybe even a meal or two.\n\nStill though, I just knew they made my butt look great. Of course, half a chandelier's worth of Swarovski crystals would make almost anything look stunning. \n\nAnother couple of blocks and I relaxed. I was home free. Even if they caught me now, they couldn't prove I'd stolen anything, the jeans didn't have a serial number like some purses. All I had to do was wear them off and on for a few weeks to give them that \"broke in\" look and to give any incredibly unlikely police inquiries time to die off. As I headed back home, I saw more storm clouds brewing and decided that there was probably no point in trying to get out to earn some money and that maybe I could just sit back and read for a change. \n\nBesides, I'd promised Lulabelle and Punchy that I'd be at the street festival in their neighborhood tomorrow. Some kind of charity, I supposed. For me it was just a chance to take Sparkle out for a little bit of fun, just entertain some kids instead of trying to make money for a change. \n\n*****\n\nClown Alley\n\n\"Hey, Sparkle!\" \n\nI finished tying the balloon poodle and made it squeak down my arm to the toddler's hand. She giggled and gave it a small smooch before dancing away with it. \"Punchy! You have any balloons left I can use? I'm just about out. I've run through over a hundred.\"\n\nHe looked down the street. \"I'm down to a couple, but everything is folding down now.\"\n\nIt was obvious that he was right, most of the stands and tables were already down. I hopped up and sat on top of a stanchion. \"That's good, I'm about exhausted. I don't think I could do another handstand to save my life at this point.\"\n\nPunchy chuckled and checked that his nose was still on firmly. \"You getting by okay?\"\n\nI shrugged. \"Busking Times Square, the Park, and the Dumbo. I have to seriously hustle to make rent and eat, but I've had a decent run of luck.\"\n\nHe looked around seemingly lazily, but I knew him well enough to see his caution. \"You into anything?\"\n\n\"A little switch and skip. High-end blue jeans. Nothing serious.\"\n\n\"What'd I tell you about 'serious'?\"\n\n\"I know, I know...It's all serious to someone. Really though. They spend more on the air freshener every day than what I'm walking out with.\" \n\n\"You be careful, Kelsea. Rich people don't stay rich by being nice.\"\n\nI scowled. I hated it when Punchy called me Kelsea while we were in character. It wasn't right, and he damn well knew that. \"I know. I'm only doing it because my roommate moved out, and I had to make the whole rent.\"\n\n\"It's a slippery path. It really is. You know I started as a Ducky Boy. Lulabelle was a Ducky too. Got into a lot of gang fights. Duckys were like Clowns. You pick on one and it's 'Hey Rube' and they're all there, ya know? But it got ugly, we got older and we got out and tried to stay on the straight. Came up short on money a few times, started in the little cons.\" He sighed and dug a giant black hobo clown boot into the asphalt. \"Next thing you know, you're in the 'bigs'...and the stakes? Well, they go up with the rewards. Rikers sucks. Believe you me.\" He blew out a breath and shook his head. \"And me an' Lulabelle were lucky. Guys we knew got popped. One we knew conned some guy's Gramma. Only it was a Sicilian Gramma. They never even found his head. Or his arms and legs. Another? Did a big job on a 'protected' shop over in Irishtown...Vinegar Hill, back in the day.\" Punchy looked at me and shivered. \"They took him to a metal shop and they burned all his fingers off with a blow torch. Let him live, but, you know, just to send a message to everyone else.\"\n\nI felt queasy for a moment. \"That was then, this is now. Nobody does that kind of thing anymore, Punchy.\" I wasn't even sure I believed me.\n\n\"Don't you believe it, Sparkle. People don't change; they just hide things better now, that's all.\" He looked at the ground for a moment, a deep sadness coming off in waves. \"I think we did you wrong, teaching you the grift. Thought it was all history, like teaching someone to sword fight these days. Never thought you'd end up using it.\"\n\n\"I'm a big girl, Punchy. I'm playing it safe as I can. I'm barely doing anything right now.\" I twisted my mouth a bit. \"Winter coming in a couple of months, I'm a little worried about that.\"\n\n\"Follow the sun, Sparkle. Lulabelle an' me are leaving soon, headin' south. Maybe a month or two.\"\n\n\"Gibtown?\" \n\nHe smiled wistfully at the name, the nickname for Gibsonton, a whole town of circus troupers. \"We haven't exactly ironed out the details. But who knows? We know some people there from the old days. Could be Gibtown; could be the Keys.\" He snapped back to reality. \"Whattabout you, Sparkle, what's your plan?\"\n\n\"I don't know. I keep hoping for a miracle.\"\n\n\"You think about Vegas?\"\n\n\"It's not right for me...I'm not cut out for it...\"\n\nHe smiled. A real smile. Full of pride. I felt confused as hell for a moment.\n\n\"You're right. You're not cut out for Vegas. You know why?\" He didn't wait for an answer. \"You're the real thing, Sparkle. A real honest-to-God Clown. You don't give a damn about the money, you live on the laughter. I've seen you, you know. In the Dumbo. I watched you pass up a chance for a good hat to make a little kid smile.\"\n\nI tried hard to keep a straight face, but I knew he was right. \"So I'm a terrible businesswoman.\"\n\n\"But an amazing clown. All the way to the bone. It'll happen for you Sparkle. Just keep looking.\"\n\n\"Well, I'll be working Times Square again tomorrow, so it will have to come find me.\"\n\nHe nodded. \"I can get you on with that Agency in Vegas if it doesn't. Bones owes me a favor or two.\n\n*****\n\nI had a pretty good day, after a pretty good week. I was taking big enough hats that I was feeling more optimistic than I had for a while. It'd been worth the time to come out, even if it was threatening to rain again. \n\nAbout halfway through my set, I saw Bobby Chan hanging back at the edge of the crowd. He kept cautiously looking around, and I almost blew my routine trying to figure out what he was looking for but managed to hold it together. \n\nAs I wrapped up, picking up my stuff and counting my hat, which had a total of just over two hundred dollars, he drifted forward and looked at a store display while he talked to me in a low voice. \"What are you into, Kelsea?\"\n\n\"Nothing you don't know about. Why?\"\n\n\"The Ivans are looking for you. They came through Chinatown asking who knew you.\"\n\n\"I don't even know who that is.\"\n\n\"Big Ivan and Little Ivan. They're strong-arm guys, rumor says they're Russian Mafia. Are you holding out on them or something?\"\n\n\"Nobody takes a percentage on the Square, this isn't the 1950s.\" I stopped for a second. \"I don't even know any Russians, I...\" my voice trailed off as realization dawned. \"Crap. This is about Boris. I punched him a few days ago.\"\n\n\"The mime you punched was Boris? That kind of makes sense.\" He grinned.\n\n\"Seriously though, leg breakers over a bloody nose and a five-spot?\"\n\n\"Who knows? He might be related to one of them.\" Bobby shrugged, then froze. \"Shit, over by the corner.\"\n\nI looked. Two men, in black jeans and black dress shirts, were headed right for us. Both had pale skin and dark hair. They'd have been twins if one wasn't the size of a truck and the other shorter than I was.\n\n\"Bobby, go.\" There was no way a clown was going to avoid being noticed or fade into a crowd, even in Times Square, but Bobby could at least avoid being seen with me. I doubted they'd actually do anything more than threaten me anyway.\n\nBobby must have figured it the same way, he casually strode off without a second glance.\n\nI braced myself and watched them get closer. I didn't even try to take off, they had to know I was there. Somehow though, they almost seemed not to see me. \n\nThey were probably only ten feet away from me, scanning the crowd, still weirdly blind to me. My nerves were just about to explode when a huge shadow fell over me.\n\n\"How's the crowd today?\"\n\nI felt myself almost melt and run down into my big red shoes. I'm not sure how much was relief and how much was a natural female reaction to an absolutely prime physical specimen who smelled of...cedar? ",
        "I know I had the biggest possible smile on my face when I turned to him. \"Officer! You gonna handcuff me this time?\"\n\nSome of that was patter, but honestly...what red-blooded American girl wouldn't consider it? Damn that Fifty Shades thing.\n\n\"I would, but I have a feeling you'd just slip out of them anyway.\" He grinned down at me, and behind him, I could see the Ivans pass by, apparently oblivious to my presence. \n\n\"Probably, but it'd be fun while it lasted.\" \n\nHe chuckled. \"I'm sure it would.\"\n\nI could see the Ivans slowly sweeping the other side of the square. \"I can promise you wouldn't go runnin' round once you've been down with a clown.\"\n\nHe gave a deep rumbling laugh. I know my laughs and that was the laugh of a guy who has a sense of humor and enjoys life. \n\nMy breath caught. Every girl has a weakness. Thank God for greasepaint, or he'd have seen me flush red from head to toe. \n\n\"Irrepressible.\" He said it fondly, with a touch of something that I couldn't really get a grip on in words, but that my damn hormones percolated over. He hadn't said anything obvious, hadn't so much as eyed me; hell, I was literally in a clown suit. But something in his voice made me sure he'd love to see how much of me was blushing.\n\nI looked down at his left hand. No ring. \"So, I kinda owe you for letting me get away with murder the other day. Any chance I can buy you a hot dog?\"\n\nHe shook his head. \"Not on duty.\"\n\nI probably should have shrugged and let it go...but, in my defense, he smelled like a lumberjack. In a really good way. \"So, if you were off duty, when and where would I run into you?\"\n\nHe studied me for a moment. \"I might be at Elwood's Hot Dogs by the Botanical Gardens at one tomorrow.\"\n\nI studied him right back. \"You know, that's odd. The grounds are open tomorrow at the Gardens, so I might be there too. Weird, huh?\"\n\nHe chuckled again. I really liked that laugh. \n\n*****\n\nThe Walkaround\n\nBy the next morning, I was unsure about the whole \"hot-dog-at-the-botanical-garden\" plan. I mean, I didn't know the guy at all, and I was a bit nervous around cops on general principle. Still, I had made the invite, and I was likely to run into him again, so a hot dog in a public place was probably safe.\n\nI walked up to Elwood's right at one and saw him immediately. Not that it was difficult, since he was roughly a head taller than anyone in the crowd. The weird part was that he focused on me immediately. People don't do that. People don't notice Kelsea like they do Sparkle, and he'd only seen me as Sparkle. \n\nHe smiled and I blinked. \"Civvies today?\"\n\nI shook off my surprise and grinned up at him. \"I'm incognito. That's how we invade you know. One day, nothing; the next, you're up to your ears in clowns.\" I pulled the nosecap out of my pocket and held it up. \"Emergency clown gear.\"\n\nHe chuckled again. I kinda wished he'd stop doing that and kinda wished he'd never stop. It made my knees a little wobbly. \"The world could use more clowns.\"\n\nMy knees got a lot wobbly.\n\n\"So what do I call you, anyway? Your placard said 'Sparkle,' I suppose I could just go with that, it suits you anyway.\"\n\n\"My undercover name is Kelsea. And I'm buying, I invited you.\"\n\n\"Sort of.\"\n\n\"Sort of, but close enough.\"\n\nI bought a couple of drinks and foot-long hot dogs with the works for us and we just walked. That perfect no-pressure sort-of date.\n\n\"You know. You never asked for my ID.\"\n\n\"Yeah, Boris is undocumented and there was no reason to turn a five-minute thing into four hours of paperwork when he's just going to be released again anyway.\"\n\n\"So how'd ya know it was me?\" \n\nHe finished his bite of food. \"The way you move. It's toned down when you are in your civvies, but it's the same, in a way. You've got a kind of a bounce. Reminds me of...\" He pondered for a moment, then looked down at me and gave a half-grin. \"You kind of talk like Groucho, but you move like Harpo.\"\n\nDamn knees nearly gave out entirely.\n\nI couldn't help it, I went into a full Groucho walk, holding my hot dog like a cigar, and wiggled my eyebrows. \"On Safari this morning I shot an elephant in my pajamas; how he got in my pajamas, I'll never know.\"\n\nThat rumbling laugh hit me again. \"It's like Sparkle the Clown is the real you and Kelsea is the costume.\"\n\nI very nearly swerved right into him but managed to cover it up with a skip. The guy was seriously impacting my equilibrium. \n\nWe walked a big chunk of the garden, talking about nothing in particular. We sort of both let each other know we weren't looking for anything serious. Me, because I was looking to get back on with a circus; him because he was moving to San Diego in a month or so. Still, he really seemed to like my jokes, even the corny old ones. I learned he'd grown up in Michigan, specifically the \"U.P.\" which explained his distinctly not-New-York accent, though his accent had mellowed to a flat midwestern. It also explained that rough-cut lumberjack aura he had. \n\nI definitely enjoyed the envious stares from the women passing by. \n\nThe time flew a lot faster than I thought it would, and much faster than I wanted it to. I'd asked him out to stay close to a cop when the Ivans were in the Square, but it had turned out to be the best sort-of date I'd ever had. \n\nWe ended up at the Duck Pond and I felt reality come back into focus. Bj\u00f6rn caught it instantly. \"Everything alright?\"\n\n\"Just thinking. I know a guy who used to be a Ducky Boy.\" I stared into the water.\n\n\"Wow.\" Bj\u00f6rn nodded slowly looking down into the water as well. \"I've heard stories.\" He glanced around. \"They're supposed to be long gone now, but...\" He shrugged. \"They say there was never just one Ducky, if you picked a fight with one, you fought them all. It gave them real power. Schools would close just on the rumor that they were coming.\"\n\n\"That's what he said.\"\n\nBj\u00f6rn looked thoughtfully around. \"You have to kind of respect that, they knew they could depend on each other.\"\n\nWe wandered back to Easterbrook's, a little more quietly. \n\n\"Hey, any chance you'd be interested in going for a drink and a meal on Saturday? Maybe \n\neight thirty so it doesn't cut into your livelihood?\"\n\nThe smart move would have been to put him off -- it'd have been easy enough to do, he just wasn't the kind of guy to push real hard -- but... \"Sure, where at?\"\n\n\"You know MacKenna's near the precinct?\"\n\n\"The one with the bonfire sign?\"\n\n\"That's the one. Has good beer and a good crowd.\"\n\nI nodded like a stupid bobble-head doll. \"Sure.\"\n\nSure it was kind of pointless, but I'd had a great time with him and even if he was leaving soon, it might be fun.\n\n****\n\nThe next couple of days passed smoothly. I was working the Park and the Dumbo; good hats, not great, but pretty good. Lots of kids, which made every day easier for me. Punchy was right about me, I'd always had a soft spot for the kids. An okay hat with a few smiling kids was ten times better than a great hat with no kids in sight. \n\nSaturday was no exception; I even got to help a little girl find her lost mother, much to the frantic mother's relief. So I was in a pretty decent mood and not paying particular attention as I headed over to the bar Bj\u00f6rn had named. \n\nI hadn't see the Ivans, but one of the b-boy dancers I knew said he'd seen them a couple of days before. He hadn't talked to them, but he'd heard rumors they wanted to find me.\n\nDamn Boris. I should have punched him harder.\n\nAs soon as I walked into MacKenna's Tavern and looked over the crowd, all the pieces came together. A bar with an Irish name. A mostly clean-cut crowd with short hair. Not a man bun in sight. In New York City. Near a police precinct.\n\nIt couldn't have been clearer if they'd have posted a neon badge over the bar.\n\nI'm a reasonable person, but I was wearing the Chakra Crystal Bolt blue jeans. I was wearing stolen two thousand-dollar blue jeans walking into a cop bar?\n\nI didn't even have a chance to run, Bj\u00f6rn saw me immediately. \"Over here!\" He called me over to one of the rough cut oak tables where he was sitting with two other guys. He stood up and pulled the sturdy oak chair out to seat me.\n\nHe pointed to the guy across from me. \"This is Smitty and this guy...\" He gestured to the lanky guy across from him. \"...is Dave.\"\n\nI politely smiled, nervous inside as a thieving cat in a roomful of German Shepherd police dogs. \"I'm Kelsea.\"\n\nThey both looked me over in puzzlement. Bj\u00f6rn's expression was somewhere between \"I know something you don't know\" and complete delight. He pointed to the seat next to his. \"I ordered you the house special. Hope you like it.\" He waived at the bar.\n\nThe waitress strode over with a shield-sized platter, dropping huge corned beef sandwiches in front of Smitty and Dave, then carefully placing bowls and plates in front of Bj\u00f6rn and me. \n\nBj\u00f6rn gave a broad smile. \"I felt those muscles when I searched you. You don't have enough body fat to worry about a few carbs. Guinness stew and brown bread.\" The waitress put a pint in front of each of us. \"And a nut brown ale.\"\n\n\"Thank you, Mary.\" Bj\u00f6rn nodded to the waitress.\n\nI started to add my thanks, but stopped when I saw that her nametag said \"Jonna.\" She caught my confusion and smiled. \"It's been a tradition here for over a hundred years, all the waitresses only answer to Mary.\"\n\n\"I think I'm gonna like this place.\" I grinned over at Bj\u00f6rn. Two bites of stew, one of bread and a drink into my meal and I was sure I was in love. \n\nHe studied the dreamy look on my face. \"What do you think?\"\n\n\"I may never leave here.\" \n\nThat was obviously the right answer, as both Smitty and Dave gave me very approving looks.\n\nAfter I'd destroyed my food, much to Bj\u00f6rn's delight, the plates were cleared and we sat back with another round of ale. Smitty gave me an appraising look. \"Bj\u00f6rn's been entirely too smug and secretive about you, and you don't smell like a nine-to-five worker. So what's your hustle?\" \n\nDave shook his head. \"Smitty's a detective, everything's a mystery to him.\"\n\nI could see Bj\u00f6rn looking at me with anticipation. Then he sent me a wink. \n\nOkay, fine. Game on. \"I'm a busker, I work Times Square, the Dumbo, you know.\"\n\nSmitty shook his head. \"I've never seen you there. What's your gig?\"\n\n\"You're a detective, right? I'll give you three guesses.\" The waitress walked up and watched curiously.\n\n\"You move well, a lot of muscle on a small frame. Something physical.\"\n\nI just stared straight at him and quirked my eyebrows. \"That's not a real guess.\"\n\n\"A dancer.\"\n\n\"I do dance. I've had serious professional training and I can probably dance better than anyone you know. But...no. Not a dancer.\"\n\n\"Singer?\"\n\nI snorted. \"Only to drive off potential customers. And bears. Especially bears. Bears can eat you, you know.\" I said it wide-eyed.\n\nBj\u00f6rn grinned. He wasn't just enjoying this; he was specifically enjoying watching me do this. I felt a rush of warmth through my whole body. The waitress narrowed her eyes in thought.\n\nSmitty leaned back and looked at Bj\u00f6rn. \"Give me a hint.\"\n\n\"I'm not sure that's fair.\" Bj\u00f6rn shook his head.\n\nThe waitress held her hand up. \"House rules, if there's money involved, no help.\"\n\nI winked at her. \"There's no money on the table.\" I gave Smitty that wide predatory smile that I'd never give in makeup. \"Go ahead, Bj\u00f6rn, give him a hand. Tell him one object you found on me when you searched me.\"\n\nHe looked upward, thinking. \"A silver dollar, one of the old ones.\"\n\nBj\u00f6rn had given Smitty an obvious one, low and slow over the plate. And from the look of victory on his face, Smitty knew it.\n\nProblem was, Bj\u00f6rn was on my side, and Bj\u00f6rn had pitched him a changeup.\n\n\"A street magician. Nobody else would carry a silver dollar.\"\n\nI sat back with a defeated look. \"Good guess. I do magic. I'm really, really good at it.\"\n\nHe smirked.\n\n\"...But, sadly, no. I'm not a bunny-tugger.\" Under the table, I slipped my red clown nosecap out of my pocket and into my napkin.\n\n\"Okay, I give.\" \n\n\"Hold on.\" I used the napkin to pretend to wipe my mouth and seated my nosecap firmly on my nose behind it. I looked down at the table in front of me, putting my left elbow on the table, leaning my forehead to rest in my left palm. Which incidentally completely blocked his view of my nose. \"So, let me think if there's some kind of hint I could give you...\"\n\nBj\u00f6rn started chuckling. Smitty looked over at him. \"What?\"\n\nWith my arm up like that, anyone to the side could see the nose; Dave could see the nose, Bj\u00f6rn could see it, people at the next few tables could see it, and \"Mary\" could see it, but from Smitty's angle, it would be barely visible, if at all.\n\nThe waitress started snickering, Dave was outright laughing and Bj\u00f6rn's low chuckled rumbled into a full laugh. Damn, I loved that laugh. I almost ruined the gag by looking over at Bj\u00f6rn, but I just caught myself.\n\nI pointed to the table in front of Smitty. \"I don't know. Let's see...you know I can dance, right?\"\n\nI tapped the table, and he reflexively looked down. I looked up the instant he looked down, then dropped back before he looked up. The waitress was holding herself up with the table and tears were coming out of her eyes.\n\n\"And you know I can't sing.\"\n\nTap. Look. Drop.\n\nDave was gasping for breath. A couple at the next table who'd been watching and listening started laughing.\n\n\"I have a silver dollar.\"\n\nTap. Look. Drop.\n\nThe laughter spread across three or four more tables; apparently, cops pay attention when things get weird. Who knew?\n\n\"And I can do magic.\"\n\nTap. Look. Drop.\n\n\"She's really, really good at it!\" The waitress chimed in, grabbing a nearby chair to catch herself on.\n\nBy now, Smitty absolutely knew something was going on, but now he was looking around instead of at me. All the tables around us were slowly dissolving into snickers and giggles. I took the chance and shot sly winks at the nearest tables, pushing them into overdrive.\n\nI waited until he looked back at me. \"I'd think...it would be as clear...\" I paused for maximum effect, dropped my left arm to the table and raised my head up to looked him right in the eye. \"...as the nose on my face.\"\n\nHe blinked in disbelief. \"How the hell...\"\n\nLaughter built in a huge wave around us. The waitress pulled herself to her feet and pointed at the bartender. \"Charlie!\"\n\nHe straightened up very formally and called back. \"Aye, Mary?\"\n\nShe held a hand up over her head, pointing straight up at the wooden beam lined ceiling. \"I'm calling 'Mary's Grace.' One round on the House, and this one...\" She gently touched my shoulder. \"...eats and drinks for free tonight!\"\n\nThe tables around exploded in applause and chants of \"Mary's Grace!\"\n\nI had to catch myself on the table as it all rushed through me. It was staggering.\n\nCan't lose the audience or look ungrateful though. \n\nI stood up, stepped up onto the seat of my chair, paused and stepped up onto the back of the chair. It wasn't even a tough balance on the back of the heavily built chair. Dave started, but Bj\u00f6rn didn't reach out to catch or steady the chair. He simply assumed I knew what I was doing.\n\nAs gracefully as possible, I bowed to the audience three times, then slid back down into my chair to a very appreciative applause. Of course, winning everyone free beer is pretty much a guarantee of a warm applause, I suppose. But still...\n\nSmitty slowly shook his head. \"A clown. A real one. Some serious training to do that stuff. Circus?\"\n\nI nodded. \"Yeah, but I'm kind of stuck here for a while.\"\n\n\"Seriously, how the hell did you do the nose thing?\"\n\n\"Misdirection, mostly. Some sleight of hand. That was kind of a variation of the old Slydini paper ball trick. It works on the person it's aimed at, everybody else can see exactly what's going on.\"\n\nSmitty nodded respectfully. \"That's what makes it so funny, right?\"\n\nHe got it. \"It can come off as mean if you do it wrong or to the wrong person. You really have to gauge the audience, I could tell it would work here.\"\n\nDave was still chuckling. \"Cops have a rough sense of humor; that was perfect.\" \n\nBj\u00f6rn reached over and squeezed my hand. \"I did warn you guys. I told you that underestimating her would be a bad idea.\"\n\nHe started to pull his hand back, but I impulsively caught it and squeezed before letting go. The laughter and applause had me feeling like my heart was going to just explode like a firework but in a good way.\n\nWe stayed a bit late. I ate too much and drank a little more beer and Irish whisky than I should have, but it was a blast. \n\nI got to be me. I pulled off some magic effects, ran some gags and, with Mary's permission, I showed them a handstand on the back of one of the chairs.\n\nBj\u00f6rn never looked away, totally focused on me.\n\nOur little table ended up with 30 or more people crowded around; it might not have been the huge crowd of the circus, but it hit me far harder than a little whisky or beer could. The warmth of the applause and laughter reached all the way into my bones.\n\nBy the time we walked out, I was holding Bj\u00f6rn's hand, practically bouncing. I looked up at him. \"So, where do you live?\"\n\n\"About a block over that way.\" He pointed.\n\n\"Good. Because if I have to drag you back to my place, it'd take me a half-hour and that would be a waste of time.\"\n\nWe reached his building and it seemed like he might be having second thoughts. \"Look Kelsea, are you sure...\"\n\nHe never got to finish because I bounced up, had my legs wrapped around his waist and was kissing him before he could. \n\nEverybody has a \"thing.\" Something that makes them giddy and crazy, something that sends them soaring. And I'd had a full evening of it.\n\nI wasn't even trying to stop myself. I wasn't letting go at all; for a moment Bj\u00f6rn had to brace me against the entrance door while he fumbled his key card out and punched us in.\n\n*****\n\nI woke up snuggled up tight against him. I could hear heavy rain, and the dim light seemed to say this was no passing shower. I hoped he didn't have to be anywhere early because I was perfectly happy right here.\n\nI hadn't exactly asked for the polite tour, but from what I remembered and could see, his one-bedroom apartment was a lot nicer than the apartment I'd been sharing. Nothing huge, of course, but it was clean, neatly set up and everything in it seemed to speak of a guy \"between girlfriends\" rather than a habitual bachelor. \n\nOut through the bedroom door, I could see a small beer brewing project on a side table. \n\nI felt him stir, and I turned my head to catch him looking at me. \"You going to sneak out on me? Leave behind one giant red shoe?\"\n\n\"The Legend of Clownderella. After his wonderous visit to the Circus, Poor Prince Charming wanders the Kingdom, desperately trying to find his true love with that red shoe.\" I gave a tragic sigh. \"Tis said to be the sad fate of those that love a clown too deeply.\"\n\nHe chuckled. The man had such a great laugh. He glanced around. \"So do I pass inspection?\"\n\n\"We didn't trip over pizza boxes and empty beer bottles on the way in.\" I shot him a smile. \n\n\"I fought an all-out war with cockroaches the size of cars in my first place in the city. I don't ever want to do that again.\"\n\n\"Been there, done that.\"\n\nBj\u00f6rn slid a hand along my shoulders. \"For somebody so small, you're nothing but muscle.\"\n\n\"I have to stay in shape, it's easy to get hurt in a physical gag in the circus.\"\n\n\"So why did you become a clown? Is it a family thing?\"\n\nI snuggled in closer and thought about it for a moment. I had all the stock answers, all the clever jokes and I'd used them most of my life. But it was kind of dark and I was warm and safe and...I just didn't feel like using them. Not with him.\n\n\"I had a friend when I was growing up. Her name was Lisa, she lived down the street. We were the same age and we did everything together. We were the Terrible Twosome of Tenth Street. Until about fifth grade.\" I paused trying to convince myself to go on.",
        "\"Did she move away?\"\n\n\"She got cancer. And at first, it didn't make a difference, but over time...she sort of 'evaporated.' I don't know how to explain it. There was just less 'Lisa' every day. She got thinner and thinner. She got weaker and couldn't do anything. Her hair fell out, her eyes got dark and she stopped smiling or laughing at all.\" I choked a little. \"I tried. I did. But I was just a kid, and she wasn't any fun to be around, she was always just sitting in a chair or lying in bed, hardly ever talking. There was this smell, a medicine smell of some kind, and it seemed to cling to everything and soak into my clothes and hair. I hated that smell. I slowly stopped going over to her house after a while.\"\n\nBj\u00f6rn tightened his grip on me and didn't say anything. \n\n\"I hadn't been over there in weeks, maybe even a couple of months, and then I got a birthday party invitation. I didn't want to go, but my mom, she made me. I got Lisa a book. Something about horses, I think. It wasn't like she could do anything else.\" I sniffed, remembering how I'd sulked about having to go.\n\nHe waited patiently until I managed to start again. \n\n\"I was the only one there. She hadn't even wanted a party. Her mom made her invite me. There was no cake or ice cream, smells made her sick by then. We sort of sat and she thanked me for the book while her mom played some music. I remember her mom looked all worn out and kind of hollow. She was...empty. Then this birthday party clown showed up. He was really set up for little kids, not a couple of eleven-year-old girls. He wasn't a pro, just an old guy who made a little extra money doing it. His makeup was all wrong. No training and his tricks and gags were terrible...\" \n\nI felt tears sliding down my cheeks and dropping onto Bj\u00f6rn's arm. Wow, way to impress a guy.\n\n\"But...but it worked. He did a pratfall, a terrible amateur pratfall. But Lisa started to giggle, and then she was laughing, really laughing. Then we were both laughing and crying at the same time. I hadn't seen her laugh in so long, it hurt.\"\n\nHe ran fingers through my hair. \n\n\"I waited two days, got my mom's make up, bought a mop head at the drug store and dyed it blue with food coloring. I invented 'Sparkle.' I put on the makeup and wig and some crazy clothes and just walked into her house like I used to. I made up a whole stupid show about training stuffed animals, and I tried to juggle some eggs.\" I gave a weak snort. \"That made a mess, but it made her laugh. I did it every day I could. After school, on weekends, every chance, just to hear her laugh. It made me feel like...I don't know. Like a superhero.\"\n\n\"I bet she loved it.\" I could hear the heaviness in his voice; he already knew the ending.\n\n\"She did. I did it for about six months until she...it was terminal, there was no cure. But she smiled every day until the end. She passed away in her sleep, but I'd made her laugh that day.\"\n\nHe kissed the top of my head. \"You really are amazing.\"\n\n\"After that, well, nothing else seemed to feel right. Punchy, the Boss Clown from the circus, says that once you're a real clown, you can't really be anything else on the inside, and that's the way it was for me. I knew what I was. I drove my teachers crazy. Imagine being a teacher and your class clown sometimes comes into class in full whiteface clown makeup.\"\n\n\"Did you get in trouble a lot?\"\n\n\"I did until one of the football coaches asked if I could do some gags in the halftime shows. It was a hit, and football was a huge deal at the school, so after that, nobody gave me any trouble at all.\" They'd actually put Sparkle on the cheerleader squad. Not Kelsea, Sparkle.\" \n\n\"So then it was off to clown school?\" He stopped to ponder. \"Is there a clown school?\"\n\n\"There are a bunch of them. I have a degree in Performing Arts from the Circus Arts Academy.\"\n\nHe shifted, and stared down at me. \"Really?\"\n\n\"Pantomime, aerial arts, acrobatics, magic. Direction, scripting...\" I grinned up at him. \"Knife throwing.\"\n\nBj\u00f6rn chuckled. \"At least I know not to piss you off.\"\n\n\"You better believe it.\"\n\n\"How did you end up here?\"\n\n\"The circus went bankrupt, and a bunch of us were sort of stranded here. Some had money from last season, but a lot of us didn't. Not enough, anyway.\"\n\n\"That's rough.\"\n\n\"Most of them have secondary skills or side hustles to fall back on. Jojo and Boots are paramedics. Bitsy got hired on with a bakery; this might be good for her, she's always loved baking, and her cakes are amazing. Punchy and Lulabelle are teaching physical comedy at one of the theaters.\" \n\n\"And you?\" \n\n\"I'm a clown. I can't do any of that. Not really. I've learned a lot of neat skills and maybe some of them could be a job...but if I stop putting on the paint and making people laugh, I'd just wither away and die.\" I slumped a bit. \"I know that sounds stupid...\"\n\nHe shook his head. \"No, it doesn't. I never thought about it before, but clowns are artists, aren't they?\"\n\nA kind of warmth crept over me. He got it. I'd never really met anyone outside my world who did. \"Some of us, maybe most of us.\" I decided to change the subject. \"So why are you leaving?\"\n\nA sardonic snort answered me. \"You know those movies where the cop does the right thing, pisses off a bunch of politicians and ends up getting in trouble?\"\n\n\"Yeah.\" I looked up at him. \"What did you do?\"\n\n\"I arrested an eighteen-year-old for DUI. She already had a suspended license, so it snowballed. Then she resisted arrest, bit me and my partner, broke the side window on our cruiser when we took her in.\" He stretched, and I settled into him again. \"Turns out daddy is a party hack high up in City administration. She could have easily pled it down to next to nothing, but she denied everything.\"\n\nThat sounded familiar. \"Oh, I remember seeing that, Diana something-or-other, right? That whole 'prisoner of privilege' thing?\"\n\nHe chuckled. \"Oh yeah, Diana Desmond. She made herself a public target with some of her press statements about how being rich was harder than being poor.\"\n\n\"She should try being broke some time.\"\n\n\"Yeah, well, she put the prosecutor in an impossible position; he was caught between the party hacks and the public outrage. The body cam footage was 'accidentally leaked' either in an effort to pressure her to plead out so it would go away or maybe to get the judge to rule it as inadmissible, but it didn't work either way. And once it was out there, it couldn't miraculously disappear. Then her expensive grandstanding defense attorney put her on the stand.\"\n\n\"I saw her press interviews before the trial; I bet that didn't go well.\"\n\n\"You could say that. She was the most self-centered, unsympathetic person I've ever seen. I know they coached her on what to say and how to act, they always do. But she threw it all out the window and went on a rant that offended pretty much everyone in the room. Her lawyer couldn't get her to shut up. She was found guilty, ended up with two years, suspended, for assault on Peace Officers, but got 30 days in jail for the DUI.\"\n\n\"She didn't enjoy that, did she?\"\n\nHe shook his head. \"She was in jail for all of two weeks before she really pissed off a bunch of the other prisoners. Ended up doing the rest of her stay in the infirmary. Lost four teeth, got her nose broken along with some fractured ribs.\"\n\n\"Ouch.\"\n\n\"Somehow this was all my fault. So all my old evaluations start mysteriously losing points, my civil service exam for sergeant disappears in the system, I'm suddenly dismissed from investigation duties; finally, my union rep comes over and just tells me that I'm done. They want blood for her suffering. My partner saw the writing on the wall early and jumped to Miami, so I'm pretty much the only good target. The Union knows it isn't fair, but they don't need another war with the City administration. It was pretty obvious I was going to have to leave New York if I was going to have a career. I even lost my girlfriend; once the course was clear, she took a position with Coco Chanel in Paris.\"\n\nI winced. Secretly I wasn't too upset over the lost girlfriend. \"That really sucks.\"\n\n\"Yeah, but the Union did what they could. They helped me find the private security job I'm taking. It's out in San Diego.\"\n\n\"Lisa's mom moved to San Diego after she died. I've visited her a couple of times when I had the chance.\"\n\n\"How is she doing?\"\n\n\"She works for a cancer charity now; I don't remember which one. She seemed really happy the last time I saw her.\" That'd been almost two years ago, now that I thought about it. \"I should give her a call sometime.\" \n\n\"I bet she loves to hear from you.\"\n\n\"I think she does.\" I felt pretty guilty for not calling her a lot more. \n\nHe caught it, I could tell, but he didn't say anything. I decided to change the subject. \"So your ex-girlfriend is a fashion designer?\"\n\n\"Desiree is a model.\"\n\nWay to walk into a wall, Kelsea. I very much wanted to flee what light there was and crawl under the bed to hide. A model, really? \n\nBj\u00f6rn caught the change in my temperature immediately. \"We both knew we were never going to be a long-term thing.\" He shook his head. \"She acted like she was allergic to carbs, I don't think I ever saw her eat real food. Any woman I've got a future with has to be able to drink a beer or two.\"\n\nIt took us another two hours to get out of bed. \n\nWe'd burned off a lot of those carbs by then.\n\n*****\n\nThat should have been it; a simple one-night stand. I mean, I'm not the most experienced person in the world at that, but a one-night stand is one night.\n\nUntil it isn't.\n\nWe set up another \"not a real date\" on his next day off. And the next. And I ended up staying over at his place again. Honestly, it's not my fault; if we'd have stayed away from MacKenna's or maybe if he'd have stopped laughing at my jokes. Maybe... \n\n\"I just got told I have to burn four days' worth of comp time. Starting Wednesday.\" He ran his fingers down my bare back. I shivered.\n\n\"Forced vacation? That sounds rough.'\n\nHe shrugged. \"I was thinking Atlantic City. You interested in a little vacation? Just a fun trip.\" \n\nI was nearly a month ahead on rent money for a change. But still, the gambling Mecca of the Northeastern shore didn't really sound like my kind of place any more than Vegas did. \"I've never been there.\"\n\n\"It'll be fun. You'll love it.\"\n\n*****\n\nTacky. Unrefined. Utterly tasteless.\n\n\"This place is so perfect!\" I held on to Bj\u00f6rn's hand as tight as I could. I was sure if I didn't, I'd float off into the sky like a helium balloon.\n\nThe smell of popcorn and hotdogs and cotton candy kept drifting to me on the breeze. A unicyclist wearing just neon green speedos and a yellow cape raced past us.\n\nBj\u00f6rn kept looking down at me, trying to hold back a smile that refused to be contained. \n\nWe'd been walking the Boardwalk for miles, just soaking the atmosphere, stopping at every goofy little stand and weird shop. It was as close to being in a circus as I'd been since I'd gotten stranded.\n\nShouts and laughter drifted up from some kids playing along the beach, and I drank them in. We stopped to watch. \n\n\"So...you've kind of figured out the laughter thing, haven't you?\"\n\nHe nodded, smiling. \"A clown who craves laughter, that's not the hardest math in the world. For a while, I wondered if it was attention, but it isn't is it?\"\n\n\"A little bit; God knows I love the rush of applause and the attention. But I could live without that stuff.\" I watched a little girl in a blue swimsuit darting up the beach, chased by a low wave. Mostly I could hear her squealing in delight. \"I worry about it sometimes; it's like an addiction.\"\n\n\"If you're going to be addicted to something, I can't think of anything better.\" He looked down at me thoughtfully. \"I heard somewhere that comedians are some of the most unhappy, depressed people out there, but you're certainly not.\"\n\nI shook my head. \"No. Some of the clowns I know are that way, but not me. I think it all has to with Lisa and why I decided to be a clown.\" I hesitated for a moment. \"Or maybe 'decided' isn't the best word. Maybe 'learned I was a clown,' instead.\"\n\n\"You're lucky, you know. You found something you really, truly love to do. Something that pretty much only does good by definition. Hard to beat that.\"\n\nI gave him a smile but grumbled inside at my terrible timing. I finally meet a guy who not only understands me but accepts that I might be more than a little out of whack. And he's a cop, a cop who's about to literally move across the country.\n\nStill, we had a little time, and he was a great friend-with-benefits. So I decided to make the most of those benefits while I could.\n\nI just had no idea how little time I had.\n\n*****\n\n\"Stars and Stripes Forever\"\n\nStill skating on the four-day weekend, I was so energized that I worked the Dumbo and Times Square three days running. I was spending every minute of time I could with Bj\u00f6rn, before it all ended. I'd even dropped my best clothes, both sets, at his apartment; and he'd given me a copy of his apartment security card. Pretty trusting, but then he was a cop, and he knew a lot of cops, so he could afford to be trusting.\n\nOn the third day, just as I wrapped up at Times Square, I saw the Ivans again. Only this time they were definitely looking directly at me, and moving with a very clear sense of purpose. \n\nClown shoes look unwieldly and awkward. My first pair, when I was eleven, certainly had been. I'd painted my Dad's old Army boots red and stuffed them with extra socks.\n\nI'd barely been able to walk in them. \n\nBut now? Circus clowns are defined by action. Acrobatics, tumbling, aerial acts, jumping, vaulting. Professional clown shoes have to be perfect for all of those.\n\nTo vault, you have to be able to sprint.\n\nI glanced back once to watch the shock on their faces as I pulled away from them. They stopped running and stood glaring.\n\nIf they'd watched my show at all, I couldn't imagine why they'd be shocked. They had to have seen me do one-handed handstands and no-hands backflips. Why on earth would they imagine I wasn't in shape to run?\n\nI headed straight for my apartment, bolting up the stairs. The Ivans were well behind me; I needed to grab what I could and run. Just sweep my clothes off the shelves and the rack and...\n\nI stopped as the door swung open at the slightest touch of my hand. \n\nIt really shouldn't have done that, but the odd crumpling around the locks made it clear it'd been kicked in. I peered cautiously inside. The place wasn't big enough to hide in, so it was pretty easy to see that whoever had done it was long gone. But they'd left behind a wreck.\n\nThe apartment had been turned completely upside down. My clothes were scattered across the floor, the shelves swept clean, and the remnants of my gimmicked tricks were everywhere.\n\nI grabbed a few bags and started shoving stuff into them as fast as possible; my clown suits and wigs seemed to be mostly okay, although a bunch of other stuff was broken. I salvaged what I could. It definitely helped not to have much to start with.\n\nFour blocks away, I slowed to a walk, thinking. I needed to stop this. It was ridiculous. The Ivans were hunting me because of Boris; over a bloody nose and five dollars.\n\nI needed to have him call them off.\n\nI needed to have a talk with a mime.\n\nNobody liked Boris, but everybody knew him.\n\nHis name wasn't even really Boris; it was Ilyich. But Boris was easier to remember and nobody liked him enough to use his real name anyway.\n\nIt turned out that he only lived eight blocks from my apartment, in an even seedier, even more run down, and heavily cockroach-infested building.\n\nNo way I was going to take what little stuff I'd been able to rescue into that building, so I headed over to Bj\u00f6rn's to drop everything off and change into something a touch less conspicuous. By the time I got there, though, the sky had darkened enough to let me know that it'd be completely dark before I could get to Boris' place. It wasn't a place I was interested in going after dark.\n\nBesides Bj\u00f6rn was due off shift in less than a half an hour, and despite my anger at Boris, I was still on an adrenaline rush from getting away from the Ivans.\n\nI grinned. Hell, it would have happened sooner or later anyway.\n\n****\n\nI heard Bj\u00f6rn enter the apartment. There was a long pause, then he called out. \"Um, Kelsea?\"\n\n\"Not today.\" I called back from his bedroom.\n\nHe snorted, and in the dresser mirror I could just see him, still near his front door, as he bent down to pick up a pair of polka-dotted bloomers. \n\nHe took a few more steps along the marked path I'd left him; stepping over a striped vest, then a checkered blouse. \n\nLeaning around the corner of the bedroom doorway he raised one eyebrow. \"Well, this is interesting.\"\n\nI gave him the most serious look I could. \"Look, we both knew this was going to happen sooner or later.\" \n\nHe stepped in and began unbuttoning his shirt. \"Well, it really had to, didn't it, Sparkle?\" He looked me over as he slid his shirt off. \"Nothing but your makeup and wig...\" He stopped and started laughing as I threw the rest of the blankets off. \n\n\"And my big red shoes!\"\n\n*****\n\nThe next morning, more than a little pleased with myself and a lot pleased with Bj\u00f6rn, I lingered in his apartment for a bit after he left for work. He hadn't batted an eyelash when I told him my apartment had some maintenance issues and asked if I could stay a couple of nights.\n\nI decided I needed to get over to Boris' place and talk at him. Hell, I'd give him the five dollars. Well, if I had to, anyway. I started digging through my rescued clothes, pulling out everything. I even found a birthday card from Lisa's mom that had somehow found its way to me months ago. She had written \"Call Me!\" but I'd never seemed to have had my cell phone paid up enough to actually call her. That was my excuse anyway. The real reason was that I always felt like a fake when I talked to her. She thought I was a better person than I really was. \n\nDigging through the bags I discovered that I had somehow left all my jeans at my place, the only ones I had were my two best pair I'd left at Bj\u00f6rn's to start with. And one of those was destined for resale. Maybe sooner rather than later. I put those on. \n\nBoris' place was even less pleasant than I'd expected from the address. It was squalid rather than seedy; smelling of urine and rotting carpet, and maybe dead hookers. Boris could have done better flipping burgers. \n\nI pounded on his door. It took three times before a heavily accented voice called out from inside.\n\nHe was holding his head like he had an awful hangover when he answered the door to his dimly lit apartment. \n\n\"Boris. We need to talk.\"\n\nI shoved in past him and immediately wished I hadn't. I'd seen landfills with better hygiene. \n\n\"Who are you? And what is it that you want?\"\n\n\"I'm Kelsea, and....\"\n\n\"No, no, no, no! You leave now. I do not want anything to do with you.\" He backed away frantically and I realized he was only wearing a torn t-shirt and stained boxers.\n\n\"Look, Just call off the Ivans...\"\n\nHe dropped his hand from the side of his face and gave a sardonic bark of laughter. \"Me? Call off the Ivans? They're Russian Mafia. Killers. Are you...actually crazy?\" He shook his head. \"You must leave.\"\n\nHe stepped into a place where the torn curtains let a slash of light through and I saw he'd been badly beaten. His left eye was swollen shut, his lip split horribly, and his nose was clearly broken. \n\nI was lost. \"What happened? Who did this to you?\"\n\nHe gave a pained gasping laugh. \"The Ivans, they hear I know this woman named Kelsea. Only I do not. And they believe me. But they still do this.\" He pointed to the side of his face. \"Because this is what they do. Even when they believe me.\"",
        "It suddenly clicked in my brain. Boris had no idea who I was. He'd never seen me without my clown makeup. The Ivans knew I was a clown though; they'd seen the outfits in my apartment.\n\nHe pushed me weakly towards the door. \"You leave. The Ivans find out you came here, they decide I'm lying, they kill me.\" He paused and looked at me sadly. \"Pretty girl like you, they do much worse, then they kill you. This is what they do.\" \n\nI backed out fast, feeling sick to my stomach. I practically ran to Bjorn's place, pausing to catch my breath on the stairs leading up. I shivered and looked around then pulled my card out. I needed to get out of here. I reached for the door and caught my reflection. I was even paler than usual, stress written all over my face. Lines I'd never noticed before were etched on it. I blinked and reached out. Some of the lines were really etched and scored; carved into the door. Weird rows of scratches.\n\nI ran my fingertips along the scratched glass, suddenly feeling like I was about to fall into a bottomless pit.\n\nNot much scratches glass. \n\nBj\u00f6rn had braced me against that door with my legs around his waist, right there.\n\nSwarovski crystals don't scratch glass.\n\nShaking myself out of my shock, I slammed the card into the reader, then bolted up the stairs as fast as I could, slamming the door and latching it behind me.\n\nI stumbled out of the Crystal Bolt jeans as fast as I could, holding them up and staring at the back pockets.\n\nSeveral of the crystals were the size of my thumbnail. \n\nTwitching, I reached over and pulled an empty beer bottle off of Bj\u00f6rn's project table.\n\nMumbling a prayer, I dragged it across the pocket of the jeans. Just from the feel, I knew what was happening.\n\nThinly etched lines on the bottle told me everything I needed to know.\n\nSwarovski crystals don't scratch glass. \n\nDiamonds do.\n\n**** \n\nPanic filled my thoughts. Vegas. I needed to take Punchy's offer, head to Vegas and drop out of sight. Maybe just do magic shows. Not as a magician. I could do street magic, but I'd learned the big set-pieces as well. I could work set up for the big shows. Punchy could make that happen.\n\nI needed to disappear.\n\nI'd have to say goodbye to Bj\u00f6rn.\n\nTo Punchy, Lulabelle, all of the crew. \n\nBobby and Anna. I needed to warn them. They had already asked him about me.\n\nI tried to call Bobby, but he didn't answer. Two more times. Nothing.\n\nI needed something to ground me, to let me catch my breath. I remembered the card from Lisa's mom. I looked wryly at my phone. \n\nCalling Lisa's mom was always tough. I never knew quite want to say, and I felt like a hypocrite because she thought the world of me. \n\nShe'd asked me to come to Lisa's funeral in my clown gear. She'd even called my parents and convinced them. Mom had bought me a real blue wig just for the funeral. I'd felt the stares of her extended family the whole time, but when she'd delivered her eulogy, she talked about me and how much Lisa had depended on me to get through every day. After the funeral, dozens of family members came over to tell me how grateful they were.\n\nAnd all I could think of was how I'd deserted her until that birthday. \n\nI picked up the phone twice before I took a deep breath and dialed. It rang twice before it picked up.\n\n\"Laura Richmond.\"\n\n\"Hey, Mrs. Richmond, It's...\"\n\n\"Sparkle!\"\n\nI felt myself break into a smile. Lisa's mom had never called me anything but \"Sparkle\" after the first day I showed up in that goofy mop head wig.\n\n\"I'm so glad to hear from you, honey. I tried to call but your phone kept saying it was disconnected.\"\n\n\"I, um, lost my phone and had to get a new one.\" It'd actually been disconnected due to a few missed payments, and I'd had to switch to the pay-by-the-minute phone I had now, which I'd rarely had minutes on for the same reason.\n\n\"Are you still with the circus?\"\n\n\"No, I'm kind of between gigs right now. I have a lead on a job, though.\"\n\nIt got quiet on the other end. \"Oh. I was kind of hoping you'd be looking for an off-season job.\"\n\nI sat back. \"Why?\"\n\n\"Well, I know this might be too much, but we've been looking into emotional support therapies for some of our children, support dogs and...and....\" She paused, and I could hear a deep breath on the edge of tears. \"I can't forget how...\" Her voice cut off in a choke.\n\n\"You want me to help?\" I tried to ignore a tear that suddenly slipped out and ran down my cheek.\n\n\"It wouldn't be a huge amount of money, but it'd be enough to live on, and you...you could do so much for them.\" She said that last in a desperate rush, and I knew I'd have agreed even if the circus was still running, even if it didn't pay anything.\n\nI closed my eyes. \"When do you need me?\"\n\n\"We should have started this years ago. I told the board about you as part of the emotional therapies pitch. You're the reason I know how important it is.\" She took a deep breath. \"Not just for the children either. What you did for Lisa kept me afloat sometimes. It was getting so hard, and nobody seemed to be in it with us anymore. We were so alone.\" \n\nI thought about how empty and hollow she'd looked the day of the birthday party, and felt a fresh rush of guilt at abandoning them. \n\nShe continued, and I wasn't sure if she was even talking to me anymore. \"Then one little blue-haired clown showed up and kept showing up, over and over again, every day. Making her smile and laugh, even on the worst days. You have no idea how much that meant and still means to me.\"\n\nI choked on a sob, wanting to tell her I wasn't the angel she was picturing, but I couldn't make myself talk.\n\nShe took a second to get herself under control. \"At least think about it? Please?\"\n\n\"I don't have to. I'll get out there as soon as I can.\"\n\n*****\n\nI tried to call Bobby again, to warn him, but nobody answered his cell, so I finally called Anna's family's restaurant. I kept getting \"Anna's not here\" over and over until her mother finally came on the line.\n\n\"She's with Bobby; he's at the hospital. He's been hurt.\" I thought she sounded stressed, but it was hard to tell.\n\nI managed to convince them to tell me which hospital.\n\nIt didn't take a genius to realize that it probably wasn't a coincidence, and even though I hoped for a case of food poisoning or a traffic accident, I wasn't as surprised to see that Bobby had been beaten badly. Both eyes swollen shut, oxygen tubes, IVs. I was kind of prepared for it.\n\nI wasn't prepared for Anna. She hadn't been beaten, her eyes weren't swollen shut. It was the anger in her eyes that took me by surprise. \"You did this!\"\n\nI shook my head. \"No, I didn't...\"\n\nShe stuck a finger in my face, tears streaming out of her eyes. \"They told me! You stole from them!\"\n\n\"I swear, Anna, I didn't know.\"\n\n\"You didn't know!\" Her face twisted in rage. \"They said they'll kill him, then...\" She shuddered. \"I'm pregnant Kelsea. I couldn't let them do that to me. Our baby...\"\n\nShe suddenly slumped, crying hard. I reached out to her, but she pushed my hand away. \"I told them where to find you. I told them where your apartment was.\"\n\nI pulled back in shock and she looked up at me, hard-eyed. \"You brought this. On everyone. They told me that if I see you, I need to tell you. You call them, or they find everyone you know and do what they did to Bobby, only it will get worse each time.\"\n\nShe shoved a piece of paper at me and looked down, her voice dead, barely above a whisper. \"You have to call them, Kelsea.\" She looked over at Bobby's still form on the bed, and the sound of the machinery filled the room for a moment. \"He'll be okay this time. There's some bleeding on the brain, but they said...\" \n\nShe stopped and started crying softly. I reached out to her. I touched her shoulder, and for a moment, she let me. Then she pushed my hand away and turned silently toward Bobby.\n\nI headed out of the hospital, the piece of paper in my hand felt like it weighed a hundred pounds.\n\n*****\n\nI ended up sitting by the Duck Pond, trying to figure out what to do. I knew I had a way out.\n\nIt would be easy.\n\nI could escape. I could just disappear. \n\nBut the Ivans would just keep looking, just go on hurting anyone they thought I cared about because they couldn't find me. \n\nThey had all the time in the world. Sooner or later, they'd find the others, find my friends.\n\nIt would get worse and worse. \n\nI was no expert on diamonds, but the blue jeans had to be worth millions. They'd never give up.\n\nI fantasized about killing them, but even if I could figure out a way and even if I could make myself do it, the Ivans were just tools for the organization, Russian Mafia or whoever they really were. \n\nThey probably had whole teams of Ivans ready to come over to enforce their will. \n\nEvery way I looked at it, everybody was just better off if I just died.\n\nExcept me.\n\nA sullen kid glowered at the crowd from the other side of the duck pond, then faded away. Punchy probably looked a lot like that back when he was a kid, when he was one of the feared Ducky Boys. \n\nPunchy had warned me about getting in trouble, he'd warned me about not taking the risks seriously enough. Now I needed to warn him. And everyone else. \n\nI slowly got up and started walking to Punchy and Lulabelle's, bracing myself to lose my circus family. \n\nThree hours later, in a room full of people I'd always assumed would be my friends to the end of days, I finished my tale and sat back, miserable. All I'd done was shoplift a pair of jeans. But now Bobby was in the hospital, Anna hated me, and everyone around me was probably at risk.\n\nPunchy sighed and I braced myself for the bad news. He looked over at Lulabelle. \"Okay, that's a 'hey Rube' if I ever heard one.\" He looked around the room at the silent crowd of clowns. \"Where do we get a Geiger counter?\"\n\n*****\n\nI slipped into Bj\u00f6rn's apartment and sat at his rough wood table, running my fingers over it. It was so much like him. I pulled my note out of my pocket and looked it over again. \n\nIt's not easy to tell someone you're running away, especially if it's someone you don't want to run away from. \n\nI didn't have a choice, and I needed him to understand that. I needed him to understand that I was doing it to keep people from getting hurt. I needed him to know I wanted to see him again, but it would be up to him.\n\nI pulled what I hoped was something that would really mean something to him and used it to weigh the note down.\n\nAs I walked out, I glanced back, feeling like I was stepping off a cliff. \n\n*****\n\nCharivari\n\nMy stomach was wrenching as I staggered into the bistro. It was empty except for the Ivans, who watched me contemptuously from the table in the center of the room. \n\nI stepped closer, gasping out a hard breath as I felt my gut twist again. There was nobody else in the place at all. No witnesses. That told me what was going to happen. I could barely stand.\n\nThe Ivans had decided that I needed to be an example. I rubbed my eyes with the back of my hand.\n\nBlinking back tears, I held the shopping bag up. \"It's here. I'll just give it to you and...\"\n\nThe smaller Ivan smiled. Maybe the word \"sneer\" was a better choice. I realized he was enjoying this, that tormenting people who couldn't defend themselves was his idea of fun. He saw the cold sweat and clammy skin and enjoyed the idea that he could terrify someone this much and there was nothing they could do about it. \"I don't think so. We've been 'inconvenienced.' Too many people know and we need to make an example.\"\n\nBefore I could even think of what to say, the door slammed open behind me.\n\n\"Freeze!\" \n\nTwo guys in dark suits came through the door, fast and fluid, each one holding a large automatic. \n\nLeveled at me.\n\nI twisted to look at them and felt my legs just give out. I collapsed and curled into a ball, clutching my stomach.\n\nOne of the two half-crouched next to me. \"It's her.\"\n\nThe other looked from him to the Ivans, flashing credentials up. \"Homeland Security. Just stay right there.\" He pulled out a radio handset. \"Sir. It's definitely her; we've got her.\" He waved the other man back away from me. \"Get away from her.\"\n\n\"I think...\"\n\n\"You're not thinking.\" An older man, with an air of authority, came through the door, followed by two paramedics. And a woman in what looked like a bright yellow space suit.\n\n\"Back away from her.\" The older man gestured the woman forward. \"Check her.\"\n\nI felt warm fluid fill my mouth and coughed it out. The agent near me back away hurriedly looking down at the spray of blood on the tile. \"Shit.\"\n\nA sizzling sound filled the air as the woman stepped toward me with a yellow box in hand. The closer she got, the louder the machine crackled. She carefully scanned it over me, then the bag, each time the wave of sound crested loudly. \n\n\"This is it. Rads are through the roof.\" She pulled an odd yellow backpack off and dropped it next to me. The strangest thing about the backpack was the large obnoxious red radiation hazard symbol. She gingerly slid the shopping bag into the pack. \"Idiot.\"\n\nThe older man shook his head. \"She didn't know.\" \n\nWhile I retched again, the paramedics stepped over to me. The larger one glanced back at the woman in the spacesuit. \"Is this safe?\"\n\n\"The stuff is in the bag; everything on her is residual. I wouldn't give her a hug and kiss, but you should be okay.\"\n\nMy eyes were starting to tear up as he rolled me onto my back. \"Eyes are full of blood...\" He checked me over gingerly and began to count off statistics to his partner. \"Christ, this isn't good.\"\n\nThe woman in yellow leaned over us for a moment. \"She might have a couple of hours, but that's pretty optimistic.\"\n\n\"What a goddamn mess.\" The man in charge looked over at the Ivans. \"You know her?\"\n\n\"No. She just walked in and kind of...fell down.\" The smaller Ivan studied him for a second. \"Who are you?\"\n\n\"Senior Agent in Charge Brogan, Homeland Security. We've been chasing her for weeks. Sensor at one of the ports of entry picked up a radiation spike. A bad one. We've had vans out with detectors all over the city, trying to hunt her down.\"\n\n\"She's a terrorist?\" The Ivan looked at him in disbelief.\n\n\"Don't think so. Probably part of a smuggling ring. We've had a couple of these in the last year or so. You can use radiation to improve the quality of diamonds. Problem is if you do it wrong, you end up with radioactive diamonds. It's usually not that bad, but somebody out there really screwed up. Damn things are hot as hell. She didn't give you anything did she?\"\n\nBoth Ivans shook their heads like ugly puppets. The woman in yellow stepped over and scanned them. \"They're clean. Not even residual.\"\n\n\"She's...gray.\" The smaller Ivan was fascinated.\n\n\"Sweats, pallor, all side effects of it. Look, we need to keep this out of the news, it'd practically crash the diamond market. I need some kind of contact information in case my superiors want to talk to you...\"\n\nI coughed, a mist of blood coloring the paramedic's shirt. The Senior Agent wheeled on the smaller paramedic, the Ivans forgotten. \"Damn it. Get the goddamn stretcher.\"\n\nThe larger Ivan leaned cautiously for a better look. \"So she's...\"\n\nThe Senior Agent shook his head. \"She's pretty far gone.\"\n\n\"Coughing blood. That means the respiratory system is almost done. If we can get her to the hospital before the seizures start you can at least ask...\" The bigger paramedic tried to straighten me out, but my gut was rebelling and I could barely keep my breathing under control.\n\nI arched my back, writhing and kicking, teeth chattering.\n\n\"Fuck! She's flatlining. Get her on the damn...\"\n\n\"It's too damn late.\"\n\nThrough tear-blurred eyes, I could see the Ivans watch in transfixed horror as I was strapped onto the stretcher and wheeled out.\n\n***** \n\nThe Blow-Off\n\nI sat up as soon as the ambulance stopped and spat the blood capsule out. \"Did they buy it?\"\n\n\"Senior Agent\" Punchy chuckled as he peeled off his false nose. 'Every damn bit of it. Nobody's going to convince them you didn't die of radiation poisoning right in front of them.\"\n\nHe pushed a sandwich into my hands. \"Eat that. The effects are probably wearing off but this will help.\"\n\nA few cautious bites of the sandwich later, my stomach relaxed and the chills stopped completely. \"What the hell did you give me?\"\n\n\"Doxycycline. It's an antibiotic used for malaria. It's pretty safe, but the one thing you don't do is take it on an empty stomach. Cold sweats, stomach cramps, chills. Makes you look and feel like death warmed over. You can't fake feeling that bad.\"\n\n\"You're sure they bought it?\"\n\nHe snorted. \"They're Russians; paranoia is in their DNA. They'd rather believe a secret government conspiracy cover-up than anything else. If they ask around and can't find any record of what happened, well, that would just confirm what they want to believe.\" \n\nI pulled some wet wipes out and cleaned the raw onion juice off the back of my hand; I'd needed something to make my eyes red and watery.\n\nJojo walked around from the front, peeling off his 'bloody' shirt with its fake station patches and shaking his head. \"Get your butt out of the rig, Sparkle; we gotta get this thing cleaned and back to the station house before anyone starts to wonder why maintenance is taking so long with it.'\n\nLulabelle walked up, lugging the Geiger counter. \"Good things those idiots didn't know the difference between a biohazard suit and a radiation suit. You'll need this, Jojo.\"\n\nHe nodded. \"We'll get it back in the locker. Where are the test pads?\"\n\nI pulled the test pad out of my jacket and Lulabelle pulled the other out of the pocket of the diamond-studded jeans. Jojo gathered them all up and began getting everything into cases while I slid out of the ambulance. \n\nPunchy looked at the jeans. \"It will take a while to move these. Diamonds this size are a bit touchy if you want anything like a good price for them. I still have a contact in one of the merchant houses. He owes me a couple of favors. Probably reset it all in old settings and claim they're old family pieces.\"\n\n\"I trust you, Punchy. Just get half of whatever my share is to Bobby and Anna when you can.\"\n\n\"I will; it's time for an exit. Everybody is scattering.\"\n\n\"Sorry. I didn't mean to do this.\"\n\nHe gave a tight half-smile. \"Everybody needed the push, Sparkle. We were just getting stale here. Now everybody will have seed money to get started. Jojo and Boots are headed to Vegas. Lulabelle and me are headed to Florida to retire for good. You still headed to the West Coast?\"\n\n\"I have to, a woman I know said she talked about me to some people and they're interested in me. I might just be able to go back to being a real clown.\"\n\n\"You'll never be anything else, Sparkle. It isn't in the paint, you know.\"\n\nI smiled, even though I felt like crying. \"Yeah, I remember, it's in the heart.\"\n\nHe smiled, maybe a touch sadly. \"Make 'em laugh, kid.\"\n\n*****\n\nA little girl eyed me cautiously and I gave her my best friendly smile and scrunched my nose. It worked perfectly. She giggled. \n\nHer mom looked at me trying to decide what my angle was. \"Did you lose some kind of bet?\"\n\n\"Not yet. I think I'm going to win this one.\"\n\n\"I thought, you know, you had to dress up as a clown.\"\n\nI tilted my head. \"I'm not dressed up as a clown. I am one. I'm a full-time medical clown. I work at some of the hospitals in the children's wards.\"\n\n\"They have those?\"\n\n\"The pay is better than you think, and the perks to being a clown are amazing.\"\n\n\"Huh.\"\n\nWinking at the little girl, I popped a carnation into my hand. I looked at the mom. \"Do you mind?\"\n\nShe shrugged and nodded. She tried to look unsurprised but I could see she was just as amazed by the sudden appearance of the flower as her daughter.",
        "I swept down to kneel in front of the girl and handed her the flower. She giggled again. \"Where's your other shoe?\"\n\n\"I'm hoping it's on the plane.\"\n\n\"Why would it be on the plane?\"\n\n\"My boyfriend has it. Or he's supposed to.\"\n\nShe looked at the gate thoughtfully. \"I hope he remembers.\"\n\n\"Me too.\"\n\n\"Is he a clown too?\n\n\"No. But I like him a lot anyway.\"\n\n\"We're waiting for my mommy's boyfriend.\"\n\n\"He's not a clown, is he?\"\n\n\"Noooo, he's a banker.\" The little girl wrinkled her nose and her mother drew herself up a bit.\n\n\"That's a neat job, isn't it?\"\n\nShe gave me a little frown. \"I guess.\"\n\nI was interrupted by a sudden tide of people flowing out of the gate. A carefully coifed man in an expensive suit power walking just a bit ahead of the pack gave the woman a polite cursory kiss. \"Long flight. I'll grab my suitcase, and we'll just get out of here.\" He turned and headed for the baggage carousel without looking back.\n\nThe little girl squealed. \"I see your shoe!\"\n\nFollowing her gaze, I saw Bj\u00f6rn towering above the crowd, holding my other red clown shoe above his head. \n\nI looked at the little girl for a second, then booped her nose gently. \"Thank you. I don't know if I would have seen him without you!\"\n\nShe giggled. \n\nIt took me three bounding steps to reach him and jump up into his arms. He caught me easily and carried me in one arm. I kissed him and snuggled into his chest. \"Missed ya!\"\n\n\"I missed you too. Hold your foot up, Clownderella.\"\n\nI did and he slipped my shoe on. He nodded seriously. \"I had to make sure I had the right girl.\"\n\n\"Do you run into a lot of clowns with only one shoe?\"\n\n\"You'd be surprised.\" He paused. \"You know this is crazy, right? I can't believe you talked me into moving in together. We barely know each other.\"\n\n\"Crazy is kind of what I do; I am a clown.\" \n\nIf it didn't work out, we could always go our separate ways. But I had a feeling...\n\nBj\u00f6rn voiced it. \"I just have a strange feeling it's going to work just fine.\" \n\nThat earned another kiss. \n\n\"Bye!\" The little girl was right in front of us, holding her mom's hand while the banker walked by them looking down into his cell phone.\n\nThe mom's expression was complete shock; her mouth was even hanging open a bit. Bj\u00f6rn was apparently not what she'd been expecting.\n\nI waved to the little girl. \"Bye!\" Then I winked at her mom and pointed slowly at Bj\u00f6rn's chest. \"Told ya there were perks.\"\n\nPost Production Notes\n\nWhen we wrote Tequila Shuffle, we just really liked the way Kelsea came off. So when we decided to do a follow up to Shuffle, we decided to do her story. Clowns have really fallen on hard times lately. Stephen King, John Wayne Gacy, and the collapse of most of the traditional circuses have really hit the profession hard. I got in touch with a few former Ringling Brothers clowns, some magicians, and some street buskers to get a feel for how things are going in their world. Things are tough all over right now, but their world really hinges on interaction, and it's very bleak right now.\n\nMacKenna's Tavern is modeled on a real place, and some of you may recognize it. Please don't out it in comments if you do, I'd really like to be able to go back there.\n\nKelsea's Nose Trick in the Tavern is not one I've seen done. We chose not to out any effects/tricks that we know of out of courtesy. So The Missus and I worked this out using the principles of Slydini's paper ball trick. It is all about misdirection and timing. It works, but you have to be smooth as hell, and have a good natured audience and target.\n\nAgain, thanks to everyone for the really, really, insanely short-notice beta reads and edits; this would be unreadable without them. We are talking over 1100 edit changes. Seriously, it was like being in fourth grade all over again. Mrs. Wilson, wherever you are, I'm sorry. You were right, I should have paid more attention in class. The changes ranged from missing commas and semicolons to hunting and killing the plethora of \"reallys\" that infested the story. There were also several suggestions on wording and plot that helped a great deal. Thanks to qhml1 for the Clownderella quips. \n\nThe Missus was, as usual, amazing. She researched diamond smuggling and diamond treatments, high end boutique shops (painful, I'm sure), and helped work out the cons and gags that Kelsea uses. She worked out Kelsea's background and devised key points to the plot.\n\nWe are finally getting close to finishing the next Needles&Delaney story, \"Unstoppable Man\"; it keeps growing on us, but I think we are catching up. We're also close to finishing a Delaney/The Shack Story entitled \"The Milk Run\" that features the Camp Mayhem crew off the leash.\n\nFinally, in all seriousness, It's been over four years since our first story, and the readers here have never failed to amaze us with their unbelievable energy and support. Thank you; we really mean that. \n\nGlossary\n\nI've put this in two parts. The first part is the section headings in the story, the second part is random clown and magician terms within the story.\n\nThe Come In The period an hour before showtime when the public is entering the arena before the circus begins. Clowns are in place on the arena floor and in the seats\n\nClown Alley The backstage for clowns. The clowns' dressing and prop area where they have some privacy.\n\nThe Walkaround A clown feature in which they stroll the hippodrome track performing very brief visual gags that can be easily picked up, moved and performed again for another section of the audience.\n\n\"Stars and Stripes Forever\" Circus bands played this as a signal that an emergency has come up; it signals the clowns to come running out from the Alley to take action immediately.\n\nCharivari A raucous acrobatic clown routine, typically done by a large group of clowns, consisting of a series of fast-paced acrobatic maneuvers and comedy jumps off of a mini trampoline, over a vaulting horse and into a mat\n\nThe Blow-Off The visual \"punchline\" of a clown gag or joke.\n\n*****\n\nBoss Clown The clown responsible for coordinating both the clowns and the various gags in a show.\n\nBunny Tugger A somewhat derogatory term used by some in the magician community for magicians who don't keep their act updated. Kelsea uses it wrong here, but, as she points out, she's a clown, not a magician. \n\nGagA single self-contained comedy piece. \n\nGimmicked/Gaffed Something that has been secretly rigged to work in a way other than intended. Marked cards, unfair carnival games, etc.\n\nHey Rube! A rallying call, or a cry for help, used by clowns and carnies in a fight with outsiders. It is also sometimes used to refer to a fight.\n\nMisdirection Often mistakenly referred to as distraction, which is exactly the opposite meaning. Misdirection is deliberately focusing the audience's attention on the wrong thing.\n\n*****\n\nGuinness Stew\n\nComing from a rural background, The Missus has a firm belief that every man should be able to use a rifle, swing an axe, run a chainsaw, and have a good stew recipe for cold and miserable days. This is the one I taught our sons.\n\nThis is an eight hour slow cooker version, because I never have spare time to stand over a pot for hours. All the measures are in whatever it is they call that system that we Americans use; if you use the metric system, you will have to convert it to millipedes and quadrupeds or whatever. Because we apparently only use the metric system to measure bullets.\n\n2.5-3 pounds stew beef Any tough, cheap roast will do. Chop into 1 inch chunks. You can use mutton if you feel particularly Irish today. Easier to get beef here.\n\nSix strips thick-cut Bacon Don't go cheap here, get some good stuff, but not too lean, you need the fat on it.\n\n1 large Yellow Onion, maybe two if you feel that way Peeled and chopped into chunks. You can add a leek here if you want and are feeling fancy. Cleaned and chopped.\n\n3 large Carrots Peeled and chopped into half inch pieces.\n\n2 to 3 ParsnipsWhich I suspect are turnips pretending to be carrots, peeled and chunked the same way. If you can't find them, add a couple more carrots.\n\nThree to five Potatoes Depending on size. Washed and chopped into one inch chunks. Don't bother peeling them.\n\nTwo Stalks Celery Chopped into quarter inch thick pieces.\n\nFour Cloves Garlic Peeled, smashed, and chopped really small, because somehow 'minced' doesn't sound right with this stew.\n\n1 bottle Guinness Extra Stout \n\nThree cups Beef Broth\n\n1 Tablespoon Tomato Paste\n\nSalt, Pepper and Thyme\n\nA bay leaf If you have one handy.\n\n3 Tablespoons flour If you want to thicken the stew\n\nFry the bacon until crisp, crumble into slow cooker. \n\nSalt and pepper the beef (or mutton), then brown it in the bacon grease. Brown thoroughly but don't burn the damn stuff. Put beef into slow cooker. \n\nPut onion and garlic into bacon grease, cook just until it starts to soften and the smell really kicks out. Put into slow cooker. \n\nPour some beef broth into pan and scrape the browned bits left behind by the bacon and beef off the bottom, pour it all into the slow cooker.\n\nPut the carrots, parsnips, leeks and potatoes into slow cooker. \n\nPour in beer. Then add the rest of the beef broth. Stir in tomato paste and thyme. Toss bay leaf on top. I'm not sure what that actually does, but add it anyway, if you have one.\n\nClose slow cooker, turn on low.\n\nAll slow cookers are different, but plan on at least eight hours on low, or until the beef just starts to fall apart. If you want to use the flour, take some fair amount of juice out of the slow cooker, maybe a half cup or more, let it cool completely, whisk the flour into that, then slowly add the mixture back to slow cooker and stir in thoroughly when you think you have about three hours left. Do not add dry flour directly into the hot slow cooker.\n\nGo make bread. If you don't know how, get one of those frozen lumps of bread dough and follow the directions on the package, it will work. You'll want hot fresh plain bread with this, nothing fancy. \n\nServe in big bowls with hot, sliced, buttered bread and a pint of your favorite. Ale seems to go best with it, but you do you.\n\nTalk loud and rest your feet on the dog, who should be sleeping under the table. If you don't have a dog, look outside, there's probably one waiting by your door. Let him in. Occasionally sneak him a bit of beef when nobody is looking. \n\nLaugh and talk shit, but keep it fun and don't take anything seriously."
    ],
    "authorname": "Todd172",
    "tags": [
        "clown",
        "conmen",
        "hanging by a thread",
        "kelsea",
        "mystery",
        "nyc",
        "romance",
        "shuffle",
        "smuggling",
        "thriller"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/vodka-sting"
}