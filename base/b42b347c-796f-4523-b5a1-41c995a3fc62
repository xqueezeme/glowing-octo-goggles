{
    "title": "High Voltage Mittens",
    "pages": [
        "Nina: Sam, should we do a recap at the start of the second full-length story? \n\nSamantha: Yes, little rabbit. \n\nNina: Ooh. Keep calling me little rabbit. \n\nSamantha: No. \n\nNina: Aw, come on. \n\nNina: Be my predator? \n\nSamantha: Do the recap, and maybe. \n\nNina: Okay. \n\nNina: Dear reader! \n\nNina: We published  AAAAAAGES ago, and then we immediately started writing this sequel. It's been pretty much complete for over a year now, but we realized before publishing it that we'd left out a bunch of stuff that happened in between Mittens and High Voltage Mittens, so we wrote two in-betweener short stories, called Schr\u00f6dinger's Mittens and Cyber Mittens. \n\nNina: And then we wibbled back and forth on writing a third in-betweener, while you all gnashed your teeth and waited patiently for the full-length sequel we'd promised. \n\nNina: Which we've now delivered, and which you'll be reading as soon as I'm done with the recap! \n\nSamantha: I notice you're not doing a recap so much as talking about our publishing decisions, little rabbit. \n\nSamantha: Get to the point. \n\nSamantha: Immediately. \n\nNina: SORRY SORRY SORRY \n\nSamantha: Dear reader. \n\nNina: No I can do it \n\nSamantha: ...If you must. \n\nSamantha: Should we first explain about this chatlog, before people think that the whole thing's just a copy-paste of someone's cybersex session? \n\nNina: ...probably better ought to, sure \n\nSamantha: \"Mittens\" is the story of how Nina and I got together, years and years ago. Nina is writing, and I am editing, and you are reading. At the end of the first \"Mittens,\" and at the beginning and end of subsequent books, Nina and I paste in a chatlog where we talk about the book and show you where we are in life right now. As is something of a tradition these days, Nina is gagged and naked, and playing the part of my desk. My laptop is resting on her bare back, and she has her elbows on the carpet and her fingers on the keyboard of her own laptop. \n\nSamantha: Her ass is exposed and vulnerable, and right now I'm stroking her left buttock with the bristles of a nasty little hairbrush. \n\nSamantha: So that she knows to stop joking around and do this properly. \n\nNina: Can I do the Previously on Mittens bit now \n\nSamantha: ...go ahead. But do it correctly. The hairbrush is waiting for you, Nina. \n\nNina: I'll be good. \n\nNina: Dear Reader! \n\nNina: In part one of \"Mittens,\" Samantha and I got together and had awesome sex. \n\nSamantha: NINA. \n\nNina: What? \n\nNina: Ow \n\nSamantha: It was eighty-odd pages! It was fifteen thousand words before I even got your panties down! There was a bit more to it than \"We had awesome sex!\" \n\nSamantha: (dear reader: Nina is also forbidden from vocalising, which is why she just typed \"Ow\" when I spanked her bare ass with this hairbrush. Like this!) \n\nNina: OW! \n\nSamantha: That's two. Now do it properly, or the handle's going in. \n\nSamantha: And do _you_ see any lube around here? \n\nSamantha: Because _I_ don't. \n\nNina: Okay. \n\nNina: /takes a DEEP BREATH \n\nNina: We opened on Samantha wondering about a tipsy conversation we'd had the night before, in which I'd drunkenly clued her in on my kinks. She wonders about humiliation, and for some reason she gets hung up on _boxing gloves_ of all things. We go to another scene, of me using the Special Toy, which is a vibrator that was once broken, and Samantha has not only fixed but improved. We get into a little light technical discussion on vibrator modification while I reminisce, and we see that I now view this toy as a thing that Samantha has given part of herself to. Which I then put inside me. I ponder Samantha's obliviousness. Samantha researches boxing gloves, has a revelation about them, sends me an email because she wants to know more about erotic humiliation, and when I get it she's online - but she is masturbating at her desk at the time. I interrupt her and we get into a conversation in which we both reveal that we were merrily wanking away while thinking of each other. I arrange to come over in an hour, Sam eats a lot of toast and panics until I show up, then we kiss and hug and squeeze and fondle and she takes me upstairs. \n\nNina: Samantha teases me for a long time, indulging my authority kink. She is my predator, and I am her little rabbit, trembling and terrified. I slowly realize how strong she is, and it makes everything that much hotter, knowing that it's true - that she really IS stronger and faster and cleverer than me, and that I couldn't escape if I wanted to. \n\nNina: At one point she threatens to pee in my face, and that's when the reader learns about my watersports kink. Unfortunately a lifetime of hiding that particular secret has made me proficient enough that when I beg Samantha not to do it, I do it well enough that she believes me. And she does not pee on me. \n\nNina: Sad face. :( \n\nSamantha: Don't be sad. I'll pee on you right now if you want. \n\nNina: We have an intro to write. \n\nSamantha: Okay. Later. \n\nNina: THEN we have sex, and it's super-hot, and it goes on for AGES. \n\nNina: Anyway, it all ends up with us falling asleep in each others' arms. \n\nSamantha: Satisfactory, I suppose. \n\nNina: Our story continues below! \n\nNina: If you'd like a copy of the first \"Mittens\" to read on your phone or your porn-filled e-reader, Mittens by Phoenix Baker (our nome de filthybook) is available at all good online bookstores. \n\nSamantha: \"Good\" online bookstores? \n\nNina: All naughty online bookstores. \n\nNina: All online bookstores that need a _really good spanking._ \n\nNina: Happy reading! \n\nSamantha: And now, High Voltage Mittens. Thanks for reading, and if you like it, don't forget to rate it and tell your friends! \n\nNina: Or Sam will find you and set the coil-o-tron on you. \n\nSamantha: Yes. \n\nSamantha: I will. \n\nSamantha: She's not joking. \n\nSamantha: Happy reading, my little rabbits.\n\n*** \n\nSamantha looked down at Nina. Nina looked up at Samantha. \n\nSamantha regarded Nina critically, then gave in. \n\nLook at those puppy dog eyes. How can I resist? \n\nSamantha bowed her head to whisper in Nina's ear; \"Yes, you may look at her.\" \n\nNina grinned, and turned her eyes to the painting. \n\nThis was a wonderful idea, thought Samantha with a smile, taking in the Renoir herself. Also a strange one. Probably fairly mild by Nina's standards... \n\nShe glanced at Nina, whose eyes were on the painting; her expression was serene, appreciative. \n\n...still, taking it slow. Easing me into it. She pushed her glasses further up her nose. Easing Nina into it, too. She knows I operate strangely, and she appreciates it, but... \n\nShe strolled on, past the Renoir and towards the exit, her arms folded in standard I-am-walking-through-an-art-gallery repose. She didn't look behind her - she didn't have to. Nina tore her eyes away from the painting and followed. \n\nBut this is all very new to both of us. \n\nI hope I don't try her patience. \n\nA curator - elderly, with a uniform, walkie-talkie, and polite smile - held the door open for Samantha. \n\nShe returned his smile, with a nod and a \"Thank you.\" \n\nShe heard Nina's quiet, polite \"Thanks,\" behind her. She reached back, for the hand that Nina would offer. \n\nThey walked on a few steps in silence, along a beautiful but largely empty corridor, as the door closed slowly behind them, hissing gently on its air brake. Samantha slowed, applied gentle downward pressure on Nina's hand, and Nina was by her side, close and attentive. \n\n\"Speaking to another without my prior permission,\" murmured Samantha as the two proceeded along the corridor at sauntering speed. \"What is the punishment?\" \n\nNina swallowed. \"Three smacks across the buttocks, medium strength, through underwear.\" \n\nSamantha nodded. \"That would be the case, except for...?\" \n\n\"Uh...\" \n\n\"Saying 'uh,' 'um,' or any other such stalling nonsense.\" Samantha smiled as they walked. \"What is the punishment?\" \n\nNina remained silent. Samantha counted the seconds. After five, Samantha looked left and right, then stopped dead. Nina stopped with her. Samantha leaned into Nina until she was confident that Nina could feel her breath. \n\n\"Answer me, Nina, or you'll really wish you had.\" \n\nNina looked up into Samantha's eyes, visibly frightened, still silent. \n\nSamantha counted the seconds. Finally, Nina spoke. \n\n\"Ten seconds' silence immediately,\" said Nina in a breathy exhale, \"regardless of any instruction to the contrary. Cumulative and exponential physical punishment at your discretion for each subsequent infraction, to be recorded and administered at your leisure.\" \n\nSamantha smiled, and carried on walking. \"To go back to my original question, why is the punishment different for talking to the curator, this time?\" \n\n\"Politeness modifier,\" answered Nina. \"Halved punishment, rounded upwards, making it two smacks across my buttocks, medium strength, through my underwear.\" \n\n\"Yes. When incurring a punishment through politeness, or common decency, a modifier applies,\" said Samantha, quietly. \"It's only fair that the punishment be reduced. However, this is further complicated, because...?\" \n\nNina looked down. \"Penalty for forgetting an aspect of a rule, in this case the politeness modifier itself.\" \n\nSamantha grinned. \"What is the punishment?\" \n\nNina swallowed. \"An increase in intensity to the original punishment. Two hard smacks across my buttocks, with or without underwear at your discretion.\" \n\n\"Without, I think. Let's look in the gift shop before we go.\" \n\nNina smiled. \"Yes!\" \n\n*** \n\nThe penalties are really racking up, thought Samantha, idly browsing the expensive knick-knacks on display. It's fun to try to figure out how many she's putting on there deliberately, and how many are genuine mistakes. Also, I'm going to have to come up with more varied and inventive punishments for Nina - spanking is fun, but we need some variety. I'm sure I can think of more, but I'll have to run them by her first, before putting them into the schedule. \n\nEarly days, yet. \n\nShe watched Nina flick through the postcards. \n\nShe's so pretty. \n\nSamantha let her eyes drift across Nina's deep red hair, her pale shoulders, her insubstantial white blouse, her curves - she took a guilty peek at her behind, clad in tight blue jeans. \n\nHard to believe it's been so little time. \n\nShe approached Nina, from behind. \"Find anything good?\" \n\nNina nodded. \"I love the curves on this one. I love the colors.\" Samantha watched Nina's eyes scan over the postcard - enjoying the way her pupils widened when she saw something beautiful. \n\nShe'd been enjoying that all day, and falling a little deeper in love with Nina at every painting they passed. \n\nAnd her pupils widen like that when they settle on me, too. When her body responds to me, unconsciously, the same way it responds to a famous work of art - that's some kind of flattery, right there. \n\nAnd doesn't the room seem a watt or two brighter when I look at her? Are my pupils doing the same thing? \n\nI think they might be. \n\n\"I love the contrast,\" continued Nina, her eyes on the postcard. \"Look how it flows.\" \n\nSamantha looked at the postcard. She felt laughter bubble up inside her - she quenched it, and set her hands gently on Nina's shoulders, carefully watching her reflection in the postcard rack's acrylic. \n\nShe didn't want to miss her reaction. \n\n\"That would be 'Nude in an Armchair,' Nina.\" Samantha smiled, narrow-eyed, evil. \"By Pablo Picasso.\" \n\nNina looked up, the color draining from her face. \n\nSamantha leaned forward and whispered in her ear. \"Looking at a depiction of a nude woman without my permission. The most important rule of our visit here today. We went over that one in detail. And you were doing so well, little Nina. What is the punishment?\" \n\nNina took a deep breath, looking around to see if the shopkeeper was out of earshot. \"Ten full-strength strikes across my buttocks... with the hairbrush.\" She swallowed. \"Is there a Picasso modifier?\" \n\nSamantha squeezed Nina's shoulders, tightly. \"It seems like there should be, doesn't it?\" She kissed the tip of Nina's ear. \"No, there's no modifier.\" She felt Nina shudder. \"No leniency for you, Nina. No mercy. I know you didn't know you were looking at a nude, and that just makes this more delicious. Your poor little bottom is going to glow with the force of my brutality, little rabbit. That's what you get, when you play games with a predator.\" \n\n \n\nNina's voice, already barely a whisper, became so quiet it was almost inaudible - \"Thank you, mistress.\" \n\n\"You're welcome, Nina. We should probably buy two of those postcards. I know I'll want a souvenir.\" \n\n*** \n\n\"Enjoy sitting down, Nina,\" said Samantha, in a happy, sing-song voice, \"because after I get through with you, it'll be out of the question.\" \n\nNina squirmed and wriggled in her seat. \"Please have mercy on me, mistress!\" \n\nSamantha grinned. \"You'll cause an accident, distracting me like that.\" She changed up to fifth gear, and turned on the radio. \"Shall we try to find some spanking music?\" \n\nSpanking music was not forthcoming. Instead, a sombre voice delivered a news bulletin. \n\nGradually the smiles - and the color - left Samantha and Nina's faces, as the report sunk in. \n\nAfter a few minutes, Samantha had to pull over, take off her glasses, wipe her eyes. She felt Nina's arms around her. \n\nThe two women hugged as tightly as the gearstick would allow. \n\n*** \n\nSamantha's house. \n\nProbably not for the spanking I was so looking forward to. \n\nNina felt a lump in her throat. Not that I'm much in the mood anymore. \n\nNina watched Samantha sit down heavily on the couch. Her keys clattered on the coffee table. She sighed. \n\nWill she send me away? \n\n\"Will you sit with me?\" asked Samantha. She couldn't quite meet Nina's eye. \n\nNina nodded. \"Yes,\" she said, quietly, and sat down carefully next to Samantha. \"But...\" \n\n\"Hmm?\" \n\n\"No TV, huh? Or radio.\" Nina watched Samantha's face. \"Not for a little while.\" \n\nSamantha nodded. \"I wasn't planning on it.\" \n\nThe two sat, their thoughts dark and private and alone. Slowly, over the course of several minutes, they gravitated together. \n\nSoon, they sat huddled on the sofa, their arms around each other, staring down the world outside. \n\nFinally, Samantha spoke. \n\n\"It's not that it happened, love.\" \n\n\"I know, Sam.\" \n\n\"It's that it happened again. It's that it keeps happening.\" \n\nNina sighed, closed her eyes, hugged Samantha tight. \"I know.\" \n\nShe felt a hand on her head - protective, somehow. \n\nAs though it could stop a bullet, thought Nina, bitterly. They say he reloaded three times before the police shot him down. \n\nAll those children. A decade of love and life went into each one. It only took one lunatic and one gun to destroy all of that, in less than an hour. \n\nWe're all so fragile. Everything is so fragile. Love and laughter and friendship and all those forces that I thought were so strong - not a single one of those forces can stop a bullet. None of them will survive if some idiot shoots them because his mom finally evicted him from the basement. \n\nShe felt cold, even in Samantha's arms. \n\nIt wasn't even anyone special. It never is. It's never some powerful supervillian, or some evil genius... it's always just some loser with the sort of petty little problems that only ever affect one person. Some pathetic fuckup who never did anything more extraordinary than walk into a gun shop. Any idiot can do that. \n\nHe didn't earn that power. He just bought it. He probably put it on a credit card. \n\n\"How do you cope, Sam?\" she whispered. \"Your classes give you any, like, Zen way of handling this? What do you do, when something like this happens?\" \n\nSamantha stroked Nina's hair. \"Oh, love... I've got it down to a fine art. We've all had too much practice at this.\" \n\nNina snuggled close. \n\nSamantha sighed. \"It usually goes down like this. First, I'm angry, and I look at short-term solutions to the problem. Things we can do that would stop it from ever happening again.\" She looked down at Nina. \"And, because I'm angry, these solutions are all silly and destructive - either things that outright won't work, or things that'll work but will mess things up even worse in the short term.\" \n\n\"And then what?\" Nina's voice was muffled by Samantha's sweater. \n\nSamantha's fingers stroked gently around Nina's ear. \"And then I think about my dad. His job was to take a bomb, disarm it, dismantle it, and make it so that it could never hurt anyone, ever again. He taught me how to use a soldering iron and a multimeter when I was six years old, love. He was always so calm.\" \n\nNina looked up, into Samantha's eyes. They were wet at the edges. \n\n\"He taught me the difference between destroying something, and dismantling it. And why that difference is important - they both end up the same, but it's the mindset you're operating with that makes the difference. You destroy something in anger, but you dismantle something with care, and serenity, and respect for the thing you're dismantling. You have to, or either it breaks or - in his old line of work - it blows up and kills you.\" \n\nNina squeezed Samantha. \"I understand, but I'm not sure I get how it applies to... well, this.\" \n\nSamantha kissed Nina on the top of the head. \"Let me up. I want to show you something.\" \n\nNina, reluctantly, wriggled to the side so that Samantha could rise from the couch and approach the cupboard under the stairs. Nina followed her. She watched Samantha take a deep breath, her fingers on the handle. \n\nSamantha turned to her. \"I've never shown these to anyone.\" \n\nNina pecked her, gently, on the lips. \"I'll be honored if you decide to, Sam, but don't feel as though you must.\" \n\nSamantha nodded, and opened the door. She reached into the shadows and pulled out a shoebox. \n\n\"I knew it,\" said Nina, trying to lighten the mood. \"Secret shoe fetish.\" \n\nSamantha smiled - a fragile affair that reminded Nina of a leaf poking through soil. \"If only it were that simple. Come on.\" She went into the kitchen, sat down with the box on her kitchen table. \n\nNina breathed the air. Of all the places in the world, this felt the most like Samantha. Her kitchen table was piled with junk; electronics, mostly. Here and there bits of motor, plastic casing, servos, manuals, schematics, miscellaneous incomprehensible detritus. Other kitchens smelled like baking cookies or bubbling coffee - this one did too, but with a faint metallic undertone of solder flux, and overheating batteries, and the chemicals that Samantha used to etch her circuit boards. \n\nNina took a seat. She felt very much at home here, and very much in love - sitting here was almost like being inside Samantha, in a way no less intimate than the way she'd been inside her last night. And this morning. \n\nSamantha sat down, and took the lid off the shoebox. Inside was a chaos of shapes and colors, but one thing jumped out immediately. \n\n\"Jesus, Sam -\" Nina's eyes widened. \"Is that a gun?\" \n\nSamantha closed her fingers around the handle of the item in question. \"It used to be,\" she said, very quietly. She pulled the item out of the box; a silvery jewelery chain hooked on it briefly before letting go. \"But it isn't, any more. Here.\" \n\n \n",
        "She offered the pistol to Nina. \n\nNina hesitated, then took it. It was cold, and heavy. She felt a dreadful sensation of power in its weight - power unwanted and unearned. She kept the muzzle pointed towards the floor, her finger well away from the trigger. \n\n\"Is it loaded?\" \n\n\"Assume it is, and then look carefully, love.\" \n\nNina examined the machine. \"I don't normally hang around with guns, Sam. What am I looking for?\" \n\n\"See the little knobbly bit on the side? It's a lever. Rotate it downwards.\" \n\nNina did as instructed. Something heavy fell out of the handle, and clattered on the table. Nina looked down. \n\nThen she looked up, into Samantha's wet eyes. \"That's a battery, isn't it?\" \n\nSamantha nodded. \"Nina, never do this with a real gun, but look in the muzzle.\" \n\nFor the briefest moment, Nina hesitated. Then, trusting Samantha, she did as she was told. \n\nSomething was shining, down there in the cold metal darkness. \n\n\"Something glass, or clear plastic,\" murmured Nina. \"It's a lens, I think.\" \n\nOh God, thought Nina. It's a laser. She's made a no-shit, honest-to-goodness laser death ray. \n\nSamantha spoke quietly. \"It's a light gun, love. The battery's there because I decided I wanted a wireless one.\" \n\nWhat? \n\nNina looked up at Samantha. \"You mean... like... for computer games?\" \n\nSamantha nodded. \"You remember I was a sucker for House of the Dead, back in the day. I made this after the Columbine massacre. Although I will admit, my tastes went more towards Point Blank and cutesy gun games after that. I put it in the box after I got that new TV. Light guns only work on CRT's, you see, unless you want to mess around with infrared.\" \n\nNina put the gun down on the table. \"You made a videogame controller, Sam... out of a real handgun.\" \n\nSamantha nodded. \"Yes,\" she said, barely audible. \n\nShe's struggling, thought Nina. She's showing me a part of herself that's gone through her usual eccentricity and into... into something dark. \n\nNina stared at Samantha. She wants me to reassure her that I don't think she's crazy. \n\nCan I do that? While I'm thinking of her blowing away videogame zombies with a controller made out of a real pistol? \n\nNina swallowed. \"What else is in that shoebox, Sam?\" \n\nSamantha reached into the box, and took out a little green circuit board. It was star-shaped. When she pressed a button, colorful lights flashed in sequence at each point. \"It's a Christmas ornament,\" she said. She handed it to Nina. \n\nNina took it, pressed the little button, watched the pretty lights. \n\n\"The chip in the middle sends voltage to the LED's in sequence,\" said Samantha. \"It was originally part of the detonation circuit from a roadside bomb.\" \n\nNina felt something inside her lurch and turn over; something begging for release. A cough, or a sneeze, or a violent scream, or a full-body jerk. She settled on a shiver. \n\n\"It handled the timing of pulses sent to the...\" Samantha trailed off. Nina saw, clear as day, Samantha realizing that she was about to get into a lengthy technical explanation that Nina would find tedious, and stopping herself. \"Well, it doesn't really matter what it used to do. My old man pocketed the chip, back in the eighties. He picked up a lot of stuff, here and there. Souvenirs, you know.\" She dipped her hand into the box. \n\nThis gets better and better, thought Nina, her heart sinking, a terrible sick feeling in her gut. Ten years I've known her - and I knew she was a bit odd, but... \n\n\"This pendant,\" said Samantha, bringing out the chain that had tangled in the gun - \"I made this from a nasty little knife that I took from a mugger a few years ago.\" It was heart-shaped, and sparkled in the afternoon sun. \"See the little channel, here?\" She pointed to a vertical indentation running down the left side of the heart shape. \"They call that a fuller. In swords, it's there to reduce the weight. In little knives like this where weight doesn't make much difference, it's there to save metal and reduce costs to the manufacturer. The sort of people who buy these knives believe that the groove is there to let the blood out faster. Can you believe that?\" \n\nAnd now, just as I open my heart to her... \n\nAnd she never told me about that! \n\n\"When were you mugged?\" \n\nSamantha looked down. \"It was the same night you and Steve split up.\" \n\nNina stared. \"Why didn't you tell me?\" \n\nSamantha shrugged. \"You and Steve had just split up. You were hurting.\" She looked at the pendant. \"Didn't think it was all that important, given the situation.\" She turned the heart over and over in her hands. \"I mean, nobody really got hurt or anything. I took the knife and hurt his fingers and hit him a couple of times and he ran off. I was just going to throw the knife away, but when I got home I was coming down from the adrenaline, and I felt depressed. So I put it in the box, and then a few weeks later I took it out of the box, and turned it into this.\" \n\nOh, God... she's so strange. \n\nAnd this fascination with weapons... \n\nSamantha set the heart down on the table, and looked at Nina. \"When I despair of the world, I build things. It's not much, really - it doesn't really do any good in the grand scheme of things. I don't think I can do much good, on my own. I'm just one woman. But it feels like...\" she looked into the box, shrugged. \"It feels like something, you know? I have to do something, even if it accomplishes nothing big. It feels like putting my finger on the scales, a little bit. Taking a...\" she hesitated, looked towards the ceiling - \"a bit of *control,* over this one thing, when I know I really don't have any control over the world outside. Normally it's just some silly little electronics project, or a blog post, or something. It's only when I get really down that it's not enough to just make something, and I get the urge to turn weapons into toys.\" \n\nSuddenly, Nina understood. \n\nTurning weapons into toys. \n\nHer fingers closed unconsciously around the ornament. \n\nIt's not a fascination with weapons. It's a fascination with changing them into things that aren't weapons anymore. Things that are the opposite of weapons. \n\n\"I'm doing a bad job of explaining my little box of crazy, aren't I?\" asked Samantha, smiling nervously. \"I've never, like...\" she pushed her glasses further up her nose. \"I've never put it into words, like this.\" \n\n\"I don't think you're crazy,\" said Nina, quietly. \n\nSamantha looked into Nina's eyes. \"Really?\" \n\n\"Actually, no, I'm lying through my teeth. You're nuts, Sam.\" She smiled. \"But you're the good kind of nuts. The kind of nuts that wants to take all the awful things in the world and make them good.\" She set the ornament down, stood up, leaned over the table so they were close. \"I love you, Sam.\" \n\nTheir lips touched. Nina watched Samantha close her eyes before closing her own. They breathed together, lips sliding gently, tenderly against one another, warm in a cold world. Nina felt Samantha's glasses bump against her nose, and Samantha's hand run gently through her hair. \n\nSamantha drew back. The kiss ended, as sooner or later all kisses must. \"I love you too, Nina.\" \n\nNina smiled. \"Thank you for showing me this.\" \n\nSamantha said nothing, but looked relieved. \n\n\"I think I understand,\" said Nina, stroking Samantha's cheek, \"that it's not enough to just destroy a thing, sometimes.\" \n\nSamantha nodded. \"Better to change its nature. Corrupt it into something joyful.\" She kissed Nina, tenderly, a brief touch of the lips. \"Perverts gotta pervert the things that need perverting.\" \n\nNina smiled. She looked down, into the box. \n\nHer eyes widened. Another familiar shape. \n\n\"Oho!\" she said, grinning. \"Tell me about that one.\" \n\nSamantha laughed - a beautiful sound, so close to Nina's ears. \"That one... well, that one's special.\" She took the item in question from the box. \n\n\"A big purple dildo,\" sang Nina, \"With a black box on the bottom, and a big scary-looking button. What's the story with this one - did its batteries come from a tazer?\" \n\nSamantha smiled. \"I made this just after I fixed your vibrator. It's the only one that I made when I wasn't in despair. Also, it doesn't run on batteries.\" She ran a finger along its length. \"It contains an experimental projectile weapon.\" \n\nNina stared. \"What.\" \n\nSamantha nodded. \"It's called a coilgun. It works by accelerating a ferrous projectile through several separate coils of wire, using optical sensors to turn the coils on and off with precise timing. In this case, the projectile is captive, so it's more like a beefed-up, super-powered solenoid.\" Nina felt Samantha's fingers on the back of her hand. \"The army's investigating their feasibility as weapons right now. They want to make a silent, high-powered, low-recoil rifle. They want to use this technology to kill people.\" Samantha turned to Nina, and smiled. \"So of course I couldn't let them do that without at least tweaking their noses a little bit. I want to use the same technology to make people come.\" She kissed Nina on the nose, her eyes narrowed. \"Make people come hard.\" \n\nNina stared at the toy. \"So... it doesn't just vibrate, then?\" \n\nSamantha smiled, looking down at the toy. \"No, it's better than that. It stops the projectile against a reinforced bracket, transferring the momentum to the whole toy.\" \n\nSuddenly, her eyes locked onto Nina's. In a low, firm voice and with an evil smile, she said \"Now listen carefully, little rabbit.\" \n\nNina shivered. Immediately, she felt her nipples hardening. \n\nI am your little rabbit, Sam. I am your little rabbit, cowering and terrified and obedient, and you are my predator. \n\n\"Anything, mistress,\" breathed Nina, her stomach turning over. \n\nSamantha pointed to a big black box on the kitchen table, festooned with meters and knobs. \"Plug in that power supply.\" \n\nNina traced the cord through the piles, and looked around her for an outlet. \n\n\"Behind you, silly girl,\" purred Samantha. \n\nNina found the outlet, plugged in the cord. A high-pitched whine came from the power supply, and its meters lit up. \n\n\"Turn the left-hand knob slowly, Nina, clockwise, until the meter reads twenty-four volts.\" \n\nNina did as she was told; the whine changed, and the needle moved. \n\n\"Now, see...\" said Samantha, doing something complicated to the toy. The black box at the base detached - a thick, coiled black wire hung between the jolly purple shaft of the toy and its... \n\nControl unit? Power supply? No, this is the power supply. That must be the control unit, then? \n\n\"Take this end, Nina.\" Samantha passed the toy to Nina, holding onto the black box. Nina took the toy - its texture was pretty standard, a soft-hard squishiness, but it was bizarrely heavy. Samantha took a black wire with a power jack on the end, and plugged it into the black box. \n\n\"Now,\" said Samantha, \"Hold on tight.\" \n\nNina gripped the toy, feeling a rolling in her belly, trepidation in her spine. \n\nWhat's going to happen? \n\nSamantha, smiling, did something to a knob or a slider or something that Nina couldn't see - the box she was holding onto began to whine, its pitch increasing until it was inaudible. Nina watched Samantha, her eyes obscured by the reflection of the lighted meters on her glasses. \n\nShe really does look like a mad scientist sometimes. \n\nSamantha pressed the big scary-looking button. \n\nThere was a loud BANG from Nina's hand. The toy jumped upwards, jerking her arm. Her hand felt tingly. \n\n\"Jesus Christ!\" exclaimed Nina, her rabbithood forgotten. \n\n\"No,\" said Samantha, cackling - \"science!\" \n\n\"Fucking hell, Sam, you put this in your vagina?\" \n\nSamantha laughed. \"It's a unique sensation, I'll tell you that!\" She pointed to a slider switch, on the control box. \"It's a three-coil gun - that was with coils one and two. With all three operating in series, it's kinda hard to hold on to.\" \n\nNina stared at the toy in equal parts horror and fascination. \n\n\"Is it safe?\" She swallowed. \"...mistress?\" \n\nSamantha came closer, pointed to the tip of the toy in Nina's hand. \"The material is a little translucent. If you look closely, you can see how much steel there is at the point the projectile impacts. I've reinforced it to tolerances far beyond any voltage you'd ever want to use. If you're worried about the projectile breaking through the toy, don't. The coils will burn out first, if we take it that far - and the inner sleeves are nylon, which will expand with heat, and stop the projectile if we overdrive them too much.\" She grinned. \"I speak from experience.\" \n\nNina shivered. \"Will it hurt, mistress?\" \n\n\"I've designed this machine so that it's very stable and predictable, Nina. It does precisely what I tell it to, no more, no less. It will only hurt you if I want it to.\" Samantha kissed Nina gently on the forehead. \"Go into my bedroom, and bring a condom and the lubricant from the drawer in my bedside table.\" \n\nNina's eyes widened. She looked at the toy in her hand, the thick wire leading to Samantha's control box. \n\nThat wire is thick because it carries lots of amps, thought Nina. I've picked up enough about this stuff to know that, just from watching Sam. \n\nIt's the amps that are dangerous. \n\n\"Yes, mistress,\" said Nina, and put the toy down on the table. \n\nShe shivered as she headed through the corridor to the foot of the stairs. Are we really doing this? Am I really going to let Sam put an experiment in my most sensitive, vulnerable place? \n\nShe mounted the staircase, feeling cold, excited, fearful. \n\nThe Special Toy... \n\nNo, this is different. This isn't the Special Toy that I love as a part of Sam. The Special Toy is just one of my old rabbits with a bit of extra oomph; this coil thingy is insane! She said herself that it was based on an experimental weapon! \n\nShe opened the door to Samantha's bedroom, smelling the incense and fresh laundry; and a very faint undercurrent of recently-expressed love. The smell calmed her, somewhat. \n\nI trust her. More importantly, if the machine came from her hands, then I trust it, too. She wouldn't do this if there were any danger. \n\nShe opened the bedside table, retrieved a condom and a mostly-full bottle of lube, headed back downstairs. \n\nHer calm lasted until she entered the kitchen and saw the cable, dangling from Samantha's hand. \n\nThat thick, black cable. \n\nThick for lots and lots of amps. \n\nNina felt the fear return, creeping up her lower back. \n\nSamantha gave her a hard stare, holding the toy and its frightening circuitry. \"Are you scared, Nina?\" \n\nNina nodded. \"Yes, mistress,\" she whispered. \n\nSamantha smiled. \"Open the condom, and put the packet in the trash there.\" \n\nNina did so, her fingers shaking. \n\n\"Now pick up the toy, and dress it up in the condom.\" \n\nNina rolled the condom slowly down the length of the heavy toy. For its massive weight, it wasn't even particularly big; perhaps, even, a little shorter than Nina's favorite toys. A happy little clitoral-stimulation rabbit stood, ears erect, at the base. That would at least stop the toy from jumping all the way inside and hitting Nina's cervix. \n\nBut it's not the size that matters, thought Nina. It's how it moves. \n\nIt's how many amps that big wire can push into it. \n\n\"You're shaking,\" said Samantha, quietly. \"Is it because it's occurring to you that I have a large supply of batteries of all shapes and sizes and chemistries, and yet this toy doesn't use any of them?\" \n\nNina stared at Samantha. \n\n\"Did it cross your mind,\" said Samantha, idly leaning on the table, \"that there would be a reason for that?\" \n\nActually, it didn't. Oh God. Nina shook her head. \n\n\"Look at the size of that power supply,\" said Samantha. \"That's what we call a bench supply, Nina. Batteries can't supply the power that this toy needs, as fast as it needs it, so it has to be plugged into the wall. And then,\" she said with a grin, \"plugged into you. Doesn't that make you just a little bit nervous?\" \n\n\"Yes, mistress,\" whimpered Nina. And it was true. Very, very true. \n\n\"We're ready, little rabbit.\" \n\nWhat do you mean, we're ready? We're doing this now? Right now? \n\nSamantha gently took the toy from Nina with her right hand, the control box in her left. She smiled down at Nina. \n\n\"Take off your jeans and underwear,\" she said slowly, \"and bend over, with your hands on the table, and your legs apart.\" \n\nNina's breath caught as she found herself unbuttoning her jeans. \n\nWait, what am I doing?! \n\nShe hooked her thumbs into her panties and pushed them down with her jeans, feeling the wettened crotch stick underneath her for a moment. \n\nBecause she told me to?! \n\nShe glanced downwards, shocked at the glistening dampness she saw in her gusset. She looked at Samantha as she stepped out of her jeans. Samantha was spreading lube over the device, grinning, watching Nina. \n\nHer thighs and hindquarters felt cold and bare. She didn't wait for Samantha's command; she leaned over the table, exposing herself. \n\nThe table smelt of voltage and solder and electrical heat. Her face was directly in front of the big black power supply, humming softly to itself - she wasn't sure whether she could feel a faint vibration through the table, or if she was just imagining that she could. She looked at the meter marked with a \"V\" - it glowed with a warm incandescent light, the needle pointing at 24. \n\nShe felt Samantha's hand on her rear. A squeeze - light and casual - just enough to let her know who she belonged to. \n\nNina felt the toy push between the wet lips of her labia and slide with shocking ease into her body. \n\nI'm THAT wet? For THIS?! \n\nThe rabbit didn't touch Nina's clitoris - instead, it pushed firmly between her buttocks. \n\nOh God... \n\nSamantha's hand, holding the control box, appeared in front of her. \"Eyes forward, Nina,\" said Samantha from above. Nina watched as she set the controller down on the table, delicately pushed a slider switch with a click and an escalating high-pitched whine, and ran her finger around the button, stroking it, teasing it. \n\nAt the same time, she felt a stroking, teasing motion around her clitoris; a wet finger slid through her folds on either side, not yet touching the nubbin itself, merely saying hello. \n\nExpertly dividing my attention between feeling pleasure and seeing fear. \n\nWhat am I doing?! \n\nThe finger stroked delicately over Nina's clitoris - a hot, sparking pulse. She cried out. \n\nThe index finger of Samantha's other hand, circling the button, came to rest in its center. \"You know,\" said Samantha, quietly, \"this button doesn't actually energize the coilgun. It sends a signal to a tiny little transistor in line with a much bigger transistor attached to a great big huge heatsink, that provides a path for the current through the coils. It's this way because the current is so high -\" \n\nNina cried out again, in terror and pleasure... \n\n\"...so high, little rabbit, that switching it with the button directly would make a spark big enough to weld -\" she tapped lightly on the button, not yet triggering it - \"the contacts -\" another little tap - \"closed.\" \n\n\"Oh, God!\" moaned Nina, ripples of pleasure running up her spine, waves of fear running down, colliding in the center, tearing her in two. She felt sweat bead on her skin, cold and shivery. ",
        "\"My goodness, Nina, you whine nearly as much as those huge transformers. The ones that are energized right now. Ready and waiting, Nina, for me to unleash their power into your poor little cunny.\" Her finger ran around the edges of the button, slowed towards its center. \"We're about to move a lot of electrons in a very short time, Nina. On the order of milliseconds. If you're particularly observant, you'll be able to smell the ozone.\" \n\n\"I'm scared!\" cried Nina, white and trembling, the hum of the power supply loud in her ears. \"Oh Jesus!\" \n\nSamantha laughed. \"He won't help you now. You belong to me. Here it comes.\" \n\nAdrenaline and endorphins mixing ice and fire together, Nina watched the tip of Samantha's finger whiten and flex against the button, and was shocked to feel herself tipped into orgasm - she had exactly one second to consider how she felt about that, before the button's internal switch made contact. \n\nTime seemed to slow down - she heard a tiny click from the button, watched the lamps behind the meters dim, saw the \"A\" meter jump - then, like a rubber band, time snapped back and everything happened very quickly indeed, and that was when the coils energized and the projectile accelerated and the toy moved backwards inside Nina with a tiny recoil and tickled her labia - and then the slug hit the bracket and the toy burst forward with a muffled thump that knocked Nina's teeth together, the shockwave belting through Nina's cervix and into her abdomen, splitting her in two, burying itself inside her in a way no mortal ever had, leaving her quivering, screaming, shaking on the table, her orgasm gushing through her. \n\nIt was like a bolt of lightning, thought Nina, panting unashamedly on the table, the rabbit hugging her perinium, prodding snugly between her buttocks. And also a little bit like being punched in the cunt... but in a good way. \n\nI didn't think that was possible. \n\n\"Did you just come?\" asked Samantha, her tone light and amused. \"From one jolt? More from the anticipation, I'll bet.\" \n\nNina chuckled, panting and broken, knees giving out, clutching at the table to keep herself upright. \"Yeah...\" \n\n\"Come again, then.\" Samantha pressed the button. \n\nNina's world exploded. She cried out, a high, breathless \"Ah!\" The toy jolted inside her, a brutal, uncaring machine. Shock traveled through Nina's thighs and abdomen, pleasure following a split-second later. \n\nThen, it happened again. Nina noted with horror that Samantha was holding down the button, and the jolts were pounding into her one after the other. \n\n\"So we've got a three-stage toggle switch, a button, and a potentiometer,\" said Sam, raising her voice over the cries and yelps of pleasure and shock bursting forth involuntarily from Nina's lips. \"You know what the button does. The toggle switch turns on up to three coils - right now there's just the lower coil active. That determines how hard it pounds your poor little pussy. The potentiometer, here, influences how fast it brutalizes you - right now it's firing at two hertz, or twice a second. It goes up to eight as standard, but there's an overdrive that puts it into what I like to call \"Woodpecker mode.\" That's for when you absolutely have to be brutally fucked as hard and as fast as possible, and you don't care about the lifespan of the coils or power transistors. I only ever used it on rather cold days, to give it a better chance of not overheating. Are you paying attention, Nina?\" \n\n\"AA-AA-AH!\" \n\n\"Good. Want some clit stimulation to go with that?\" Nina felt Samantha's hand underneath her, fingers pressing on either side of her clitoris, pulling and jerking upwards... \n\n\"OH-SHIT-FUCK-JE-SUS-FUCK!\" opined Nina in single syllables forced out between jolts, her insides tingling and glowing, her diaphragm jumping upwards with each thump, another orgasm thundering towards her. \n\n\"Yes, precisely,\" purred Samantha. \"Call me 'mistress,' Nina.\" \n\n\"Th-tha-thank-you-mis-tress!\" \n\n\"Does make it hard to talk, doesn't it?\" asked Samantha. \"I like that. You're my dirty little fuckslave, aren't you, Nina?\" \n\n\"Y-yes-mis-tress!\" \n\n\"What are you?\" \n\n\"I'm-y-y-your-dir-\" Waves of hot, pulsing orgasm struck Nina, crashing through her, shattering her into pieces. Language became one of those things that happens to other people. \"AA-AA-AA-AA-AAH!\" \n\n\"Dir-ah-ah? You're my dir-ah-ah? Tell me, Nina. You're my dirty, filthy, naughty little bitch. You're mine, to do with as I please. And what I please, now, is for you to keep coming.\" \n\nNina's eyes crossed - in her view, the voltmeter switched places with the ammeter and they become one, pulsing in time with the jolts. \n\n\"That's the wonderful thing about this toy, Nina. When you're with some brute of a man who's thrusting his dick into you over and over and over, and you start to come, half the time he'll change the pace, speed up or something - like a fool, because how does he think he got you to orgasm in the first place?\" \n\nNina, of course, continued her agonized, ecstatic screaming, her throat becoming raw. She had just enough presence of mind to consider the length of her orgasm worrying, then frightening - being this out of control of her body wasn't new to her, she'd learned it recently, at Sam's hands. But for this long? \n\n\"But this is just an uncaring machine - it keeps up the same rate,\" said Samantha. \"Very predictable, very stable. I can sit here and hold down this button and twiddle your little clit all day long, Nina. You might never stop coming.\" \n\nShe lifted her finger from the switch, and everything abruptly stopped. Nina's hips bucked against the toy out of habit, her orgasm diminishing, the waves slowing down. \n\n\"Or, I could not,\" said Samantha, yawning. \"That's a problem with this toy. It's either fucking you or not fucking you. You don't get to come down nice and gentle, slowly fading out like with a nice variable-speed vibrator.\" Nina, sweating, panting, saw through blurry eyes Samantha's fingers press against the rocker switch. A click, a whine. \n\nNo... \n\n\"Well, you sort of can,\" said Samantha, turning the knob a few degrees. \"But to do that you have to increase the power or the frequency, first. It's not a smooth drop from energized to nothing, is what I'm saying.\" \n\nNo! \n\nNina watched with terrified eyes as Samantha's finger circled the button, trying to summon enough breath to beg her to stop, as Samantha continued. \"Another problem is that using all three coils is only time and a half as strong as using two, but two coils - which is what we're set to now, Nina - are twice as strong as one.\" \n\nTwice as strong! \n\n\"Nina, look at me.\" \n\nNina looked up. Samantha looked down. \n\n\"Are you frightened?\" \n\nNina swallowed. \"Yes.\" The truth. \n\nSamantha smiled, and slowly ran her hand down to the crotch of her jeans. \"Do you realize how much that excites me?\" She gripped herself between her legs, rubbing slowly back and forth. \n\nIt does. She's not acting, she's not playing around. She's starting to become truly aroused at seeing me shaking and terrified. \n\nNina looked at Samantha in mixed horror and excitement. \n\nShe's a genius, and I've arranged things so that she gets off on scaring me. \n\nWhat have I done? What sort of force am I unleashing? \n\nThe safeword bubbled up in her mind; Nina knew that she would not say it. \n\nNot with two coils. Not with two-thirds the power that Sam sometimes uses. \n\nI can take it. \n\nSamantha pressed the button, and there was a bang from inside Nina's vagina. The shockwave belted through her body, reaching her throat. The difference in force between one coil and two literally took Nina's breath away - she felt the shockwave corrugate the air inside her lungs. She felt the force of the blow bounce off her tailbone and reverberate around her pussy. Before she had time to yell, another jolt pounded into her, shaking her, rattling her teeth. \n\nNot just twice as strong, twice as fast too! \n\nShe was a piston in some unspeakable engine, hurled back and forth by violent explosions she was powerless to resist. She gripped the table; the piles of detritus shook with each thump, screws and resistors rolling off and skittering on the kitchen floor. The ammeter jumped rhythmically in front of her, its needle reaching almost the center of its travel, its lamp dimming with each explosion. Her hot, abused cunt was overwhelmed in sensation - numb and tingling but still insistently telling the rest of her that it was time to fall over and die for a little while. \n\nBut Samantha wouldn't let her. Samantha had her finger on the button, openly groping herself through her jeans as she watched Nina writhe in the torment she had created, her eyes widened and unashamedly excited. \n\nAnother orgasm came riding up on her - no, I don't want that, I can't take it, I'll die! - and Nina was overcome by it, run down by it, abused by it. \n\n\"I love watching you lose control like that,\" moaned Samantha. \"You're a dirty bitch, aren't you, Nina?\" \n\nNina, screaming in the middle of her orgasm, felt an abrupt and overwhelming urge to urinate. \n\nNo! That's not possible! I just went, before we left the museum! \n\nShe screwed her eyes shut, her screams growing louder, and realized with shame and horror that she wasn't even nearly going to be able to hold it in. \n\nShe gave up and let go - and as she did so, her orgasm intensified, more than she ever thought it could. A point of brilliant white light stabbed through somewhere between her vagina and clitoris, filled her, spun, pulsed, and exploded outwards, leaving her suffused with a radiant glow that rebounded from every muscle in her body, her shame running in hot trickles down her thighs. \n\nHer knees shaking, she slipped in her own puddle. \n\nSamantha, of course, caught her before she could hurt herself. \n\n*** \n\n\"I don't think this is pee, Nina.\" Samantha held Nina close, stroking her. \"It doesn't smell like it. And it's clear. Well, clearish.\" \n\nThey lay in the puddle, on the kitchen floor, Nina on top of Samantha, staring up at the ceiling, still weak and trembling and fighting for breath. \n\nNina sighed. \"I was beginning to think that, yes,\" she panted. \"That's only happened to me once before.\" \n\nSamantha grinned. \"I think you squirted.\" \n\n\"It's certainly less embarrassing,\" said Nina. \"I wouldn't want to think of you saving me from falling into a puddle of my own piss by throwing yourself into it.\" \n\nSamantha squeezed Nina tightly. \"I don't mind. I'd swim in your piss, if it'd mean stopping you from being hurt.\" \n\nNina contemplated the image. There was silence for a moment. \n\n\"That was...\" Samantha began. \"That was a very strange thing I just said, Nina.\" \n\nNina chuckled. \"Yup.\" \n\n\"I made you squirt.\" Nina could hear the smile in Samantha's voice. \n\nShe smiled herself. \"You did.\" \n\n\"I've never been able to do that, myself,\" said Samantha. \"I've tried, y'know. Last time I tried it with a guy... didn't go so well.\" \n\n\"What happened?\" \n\nNina felt Samantha shrug. \"He was fingering me, I was on the brink, we'd been trying to figure out the whole squirting thing, it looked like it was about to happen... so of course I farted.\" \n\nNina chuckled. \n\n\"Not just a little girly toot, either,\" said Samantha. \"I mean a big, long, rippling honker, the sort that makes your eyes water. The cat got up and left the room.\" \n\nNina's chuckle became genuine laughter, and she felt Samantha's chest jiggling behind her too. \n\nHer lungs ached beautifully. Laughter, so soon after orgasmic screaming, felt strangely like a mini-orgasm in her chest. It warmed her heart. \n\n\"Was that with Todd?\" \n\nNina felt Samantha nod. \"Heh. Yeah - and you saw how well that turned out!\" \n\nNina guffawed. \"If there was ever a guy that deserved it...\" \n\n\"I know! Hah!\" \n\nThe two laughed together in the puddle under the kitchen table. \n\n\"Come on,\" chuckled Samantha, \"we just spent the morning in a fancy art gallery, we can't be laughing at farts now, it's not proper...\" \n\n\"All right,\" said Nina in between giggles, \"Let's get you out of those wet clothes.\" \n\n\"Agreed. I should probably shower, too.\" \n\nNina turned her head, awkwardly, to look at Samantha. \"I put that gunk on you. Can I help you wash it off?\" \n\n\"I played my part in putting it there too, love,\" said Samantha, stroking Nina's hair. \"But that sounds nice.\" \n\n*** \n\nSamantha slid down her underwear, her eyes on naked Nina, grinning. \n\nSince when, thought Samantha, do I enjoy showing off my body like this? \n\nOh, that's right. Since that little striptease in the bedroom, our first afternoon. Samantha watched Nina struggle to understand her shower controls. \n\nNina turned towards Samantha, her brow furrowed. \"You've changed this again.\" \n\nSamantha nodded, getting into the shower behind Nina. \"Figure it out, little rabbit. I want to see how intuitive I've made it.\" \n\nAlso, I'm truly beginning to enjoy watching you struggle. \n\nSamantha meditated briefly on this new aspect of herself, as Nina clumsily activated and deactivated the backup pump and thermocouples. That's a new sensation. Is it worrying? \n\nOnly in the respect that I entered into this with the single goal of loving Nina and making her happy - I assumed that I'd be sexually satisfied because she's my best friend and wouldn't leave me in any other state, but I anticipated I'd get more pleasure from observing her reactions than from performing the acts themselves. \n\n\"Sam, I hate to break it to you, but this is not intuitive at all.\" \n\nSamantha peeked over Nina's shoulder. \"You're in the debugging menu, now. Back out of that, and start again.\" \n\nI guess I'm a little selfish. But I'm also learning that it's okay to be selfish, and immodest, and such... it's all right to indulge in minor vices around Nina. I help her indulge hers, after all. \n\n\"Is this Linux?\" Samantha saw Nina's frown reflected in the touchscreen. \"This is fucking Linux, isn't it? You made a shower that runs on Linux. Why, Sam?\" \n\nBecause it means I get to watch you naked and struggling - something I've come to enjoy as of late. \"Well,\" said Samantha, \"you know how when you get into the shower, it runs cold at first and then you have to mix scalding hot and icy cold water together until it's an acceptable temperature that you determine by testing it with your skin, and the cold water gets colder as it runs and the hot water gets hotter too and you have to constantly adjust it, and if someone flushes the toilet you get scalded, and it's just a huge mess, and we're all carrying tiny little supercomputers around in our purses and there are robots on Mars and cars that drive themselves and we still haven't sorted out something as basic as a shower?\" She took a deep breath. \"Yeah. That.\" \n\n\"Yes, Sam, I know,\" muttered Nina. \"You've told me before about how much bathrooms suck. In detail.\" She turned to Samantha. \"Look, I just want a knob, okay?\" \n\nSamantha stared at Nina, biting back laughter. \n\nNina held up a finger. \"Don't say it...\" \n\n\"You -\" Samantha snorted. \"You won't find one of those 'round these parts!\" \n\nNina sighed. \"Yes, yes, very funny. Is this temperature readout in Kelvin?\" \n\n\"You can change it to Celsius if you make a new profile...\" \n\nNina buried her face in her hands and sighed. \"Sam, I'm up for nearly anything, but if you try to get me to use Linux, I'm saying the safeword. Gotta draw the line somewhere.\" \n\nSamantha patted her on the shoulder. \"It's probably confused because there are two of us in the shower.\" \n\nNina turned around and peeked at Samantha between her fingers. \"Is it watching us?\" \n\n\"It's using sonar to guess at which user is inside, based on height and shape and stuff. Then it can set up the pressure and temperature that it knows you like.\" \n\nNina smiled. \"You didn't think to program in a sexy, two-ladies shower mode? Oh, Sam.\" \n\nSamantha blushed. \"Didn't occur to me at the time.\" She glanced at the display. \"Interesting problem, though. It'll have to alter temperature on the fly as one or the other gets under the head, especially if they're such different heights as you and I - water cools down fast when it's falling through mmph...\" \n\nWithout warning, Nina was kissing her. She closed her arms around Nina, and kissed her back. Two warm, naked bodies pressed closely together. She felt Nina's soft, wet tongue push urgently into her mouth, and she greeted it with a friendly suck, closing her eyes. \n\nThis, thought Samantha, running her fingers up and into Nina's hair, is the absolute best way for someone to let you know that you're rambling. \n\nAfter some time, Nina drew back. She raised a finger, and touched it gently to Samantha's nose. \"We are two attractive naked women in a shower,\" she said, slowly. \"And we're talking about Linux, Sam. Less tech-talk, more soapy cuddles.\" \n\nSamantha grinned. \"Yes, ma'am.\" She reached over Nina's shoulder and touched the screen. Water fell, at an immediately perfect temperature. \n\n\"Smartass,\" said Nina, and squeezed Samantha's butt. \n\n\"You know it,\" murmured Samantha, running her own hands down Nina's back, now wet and slippery. She found the soft curves of her behind, squeezed. Nina sighed happily. \n\nSamantha grinned. \"Wash your gunk off me, little rabbit.\" She stepped past Nina, facing the touchscreen, her back to Nina. \n\nShe felt Nina's hands leave her for a moment - when they returned, the shower smelt of jasmine, and Nina's hands felt slippery on her shoulders. Samantha smiled and leaned forward, the palms of her hands against the tile. \n\n\"That's nice,\" purred Samantha. \n\nI just purred that, thought Samantha. But I was right to. She's stroking me like a cat. \n\nNina's hands were gentle, sliding from her neck to her upper arms and back again. Samantha closed her eyes, concentrated on the sensations. \n\nI'm being bathed. This is what that feels like. Different than when anyone else did it; gentler. Kinder. More considerate and careful. \n\nSamantha sighed happily as Nina's hands proceeded down her back, lingering at her shoulderblades, stroking down her sides, swirling up and down her spine. \n\nWhy did our species stop engaging in social bathing? pondered Samantha. Lover or friend, erotic or platonic, this is delightful. Like a massage. Everyone should have someone wash their back, sometime. \n\nNina's hands slid smoothly across Samantha's buttocks. \n\n\"Oh...\" breathed Samantha. I see. We don't bathe socially anymore because we'd never get anything else done. \n\n\"I enjoy washing you, mistress.\" Samantha could hear the smile in Nina's voice. \"Shall I get you squeaky-clean?\" \n\nSamantha felt Nina's hands move shallowly between her buttocks - slow, gentle, soapy. \"Yes, Nina,\" breathed Samantha. \n\nThis is... \n\nSamantha struggled to put her thoughts into words as Nina's gentle fingers lathered her. This is wonderful. Sexual and yet not, at the same time. Tranquil. Intimate. \n\nShe felt Nina's breath on the right side of her neck - she moved her head, exposing herself to Nina. Nina responded with a slow, shallow kiss on Samantha's neck, and slid her hand deeper between Samantha's buttocks. \n\n\"That's nice,\" murmured Samantha, her eyes closed. She felt Nina's finger slide gently under the curve of her left buttock, over her perineum. It stroked softly and slowly over the delicate, secret spot between Samantha's buttocks, and continued upwards, to her tailbone. ",
        "Samantha felt a warm glow in her belly, and wasn't sure exactly why. \n\nNina just touched my anus, thought Samantha, with a little less surprise than she would have anticipated. And it wasn't a huge deal. She just moved over it, paying it no more or less attention than the rest of my body, and carried on. If we were in the bedroom, that would have been done with nervousness, with excitement, with some ceremony. Here, it's so casual, so slow, so relaxed. An intimate spot - but just a spot. To be lathered, rinsed, and moved on from. \n\nShe's never touched me there, before. \n\nSamantha frowned. \n\nI've touched her there plenty of times. I like being touched, there. Should I be communicating better with Nina? \n\nBut we've had such good communication about everything else. Just... this one little blind spot, about that one little part of me. \n\nSamantha's frown melted away. And the first time she does touch that spot, this is how she does it. Tenderly, relaxingly, not even sexually. She didn't even ask permission first - she didn't have to, and it would've made me nervous if she had. \n\nSamantha felt Nina stroke down her thighs, first the left and then the right, then her calves. \n\n\"May I have your foot, mistress?\" asked Nina, quietly. \n\nSamantha obliged, moving her arms outwards so that they touched the tile to her left and right, steadying herself on one foot. Nina applied a little more pressure - just enough so that Samantha wasn't tickled as Nina stroked over her soles, and then began to work in between her toes, from the inside out. \n\nIt's a very deep and respectful sort of love, that can wash between my buttocks and not linger for titilation. \n\nShe wants to express intimacy. A different kind of intimacy than we've expressed so far. A more everyday kind. The sort that we might be expressing without even thinking about it, a decade from now. \n\nShe touched me in a perfect way. \n\nGod, I love her. \n\nNina's voice came up from the shower floor. \"And the other one, please, mistress?\" \n\nSamantha complied, feeling Nina's fingers slide between her toes. \n\nI don't know if she was expecting a sexual response, thought Samantha - but... she's kinda getting one. \n\nWhich was not entirely true. What Samantha felt was a rising glow about her center of gravity, the sensation of comfort and intimacy and a love that's not yet tethered to anything - a warm, blooming adoration that simply existed inside her, without needing any particular place to live, any physical expression attached to the lips or the heart or the genitals or the hugging-parts of the arms. A love that simply was. \n\nSam had only felt that sensation once before - when Nina, whose love was at the time safely pigeonholed as \"Platonic,\" told her about her humiliation kink - a moment of trust and deep, abiding friendship, sparking a warmth that didn't need to go anywhere or be acted upon. Samantha was a little drunk then, and had attributed the sensation to red wine. \n\nIn the shower, the closest feeling that Sam understood was arousal, so that's how the love was interpreted, observed, and changed, and its significance, its rarity, went unnoticed. \n\n\"Wash between my legs, love,\" said Samantha, a grin curling the corners of her mouth. \"Watching you squirm got me all damp and messy.\" \n\n\"Yes, mistress,\" said Nina. \n\nSome part of Samantha, some quiet subroutine in her remarkable mind, noticed that she'd missed something, perhaps something that could have been important - but, lacking emotional context, had no idea what it could have been. That night, she would dream about looking among piles of surface-mount parts for a particular transistor, with no clue what it actually looked like. \n\nIt didn't really matter. Samantha would get the hang of it, with practice. \n\nSamantha felt Nina's hands slide up her calves, then the inside of her thighs. Nina's gentle, soapy fingers found their way to her pudenda, and began to massage slowly where Samantha's crotch met her thigh. Her palm flattened and touched her cleft, and Samantha felt Nina's fingertips begin to work a lather in her pubic hair. After a few moments Nina drew back, running over Samantha's outer labia, being careful not to get soap inside Samantha - then her hands spread across Samantha's behind, from the gluteal fold up to Samantha's lower back, and stroked downwards, and between her cheeks. \n\nSamantha felt a delicate, playful touch on that secret spot again. Lingering a little, this time. \n\nSamantha sighed happily. \n\n\"Do you like that, mistress?\" asked Nina, soft, breathy. \n\n\"Perhaps,\" said Samantha. \"You know, love... we haven't really...\" Oh God, words. \"I mean... we haven't really explored around there, much.\" She hesitated, feeling Nina's hands slow down, become tentative. \"I'd...\" Samantha swallowed. \"I'd like to, if you would.\" \n\nSamantha heard a shuddery sigh. \"Yes, mistress.\" \n\nSamantha grinned, and leaned further forward, pressing her cheek against the screen. \"Wash me well, little rabbit.\" Samantha felt Nina's finger press gently against her anus. Not quite penetrating - the finger moved, massaging and teasing, soft, gentle. \n\n\"Should I go inside a little, mistress?\" \n\nSamantha took her time in answering. \"Press just a little harder, little rabbit, and we'll see - ah!\" she gasped as Nina's finger pressed deeply between her buttocks, pressure on her sensitive spot. \n\nNina's finger moved, wriggling and probing. From smooth, slow, gentle strokes to this insistent point of pressure - the difference in sensation was remarkable. \n\n\"Is that okay, mistress?\" \n\nSamantha closed her eyes, resting her forehead on the cool tile. \"Yes...\" she breathed. \n\nAnd who is in charge now? Who is the one moaning under whose tender ministrations? \n\nIs Nina still enjoying this? Do I need to assert control? \n\nBut it feels so good to give it up for a moment... \n\n\"Does it feel good, mistress?\" asked Nina, her tone light and breathy. \n\n\"It does,\" managed Samantha, gently moving her hips backwards, pushing against the firm, probing point of Nina's fingertip. \n\n\"Would you like me to touch your genitals some more, mistress?\" \n\n\"Yes...\" murmured Samantha, feeling the fingers of Nina's other hand run slowly underneath her. \"Yes, that would be nice...\" \n\nA finger curled wetly in between Samantha's labia, its tip barely brushing against her clitoris. It moved downwards, stroking between Samantha's lips, a little rough, a little dry-feeling in the thin wetness of the shower. It dipped shallowly into Samantha's vagina, emerged slippery, and spread slick, warm fluid with messy, carefree joy around Samantha's labia and clitoral hood. \n\n\"That's better,\" said Nina, smiling. \"All slippery, now.\" \n\n\"Funny how the water can make you feel dry,\" breathed Samantha, feeling Nina's fingertip pressing hard against her asshole, the fingers of Nina's other hand moving with wet, velvety smoothness between her labia, stroking over her clitoris. \"Oh... That's wonderful, Nina, keep going...\" \n\n\"If you would like, mistress,\" said Nina, quietly, \"I could wetten my finger with your fluids, and push it into your behind.\" \n\nSamantha felt a warm thrill run through her belly. \"Do I feel wet enough for that, little rabbit?\" \n\n\"You feel very wet, mistress.\" \n\nSamantha shivered. I could. I could ask her to put her finger in my butt, and she'd do it. She'd watch as she was doing it. Watch her finger disappear up my ass. \n\nWould she enjoy that? Would it tip the balance of power too much? Am I giving up control? Does she want me to? \n\nCould I spin this so that I was still very much her predator? \n\nAnd is this the time to do it, in these roles? Should we talk about it first? \n\n\"Well... I know you want to worship my ass, and I know we haven't done much of that yet...\" breathed Samantha, tapping the display, the water stopping. \"And I'll only get this opportunity to torture you like this once. So...\" Blushing, she reached behind herself with her right hand, gripped her right buttock, and shifted it slightly to the side. \n\nShe heard a quiet gasp. \n\n\"Let's take our time,\" whispered Samantha. \"Can you see my star?\" \n\nShe looked back over her shoulder, at Nina. Nina was gazing forward, at Samantha's most private spot - she swallowed, visibly. \"I can see, Mistress.\" \n\n\"Touch me,\" breathed Samantha. \"Not to wash me - just to touch me, right there.\" She watched Nina tenderly extend a finger, felt it stroke gently over the sensitive spot between her buttocks. Samantha grinned, feeling happiness bubble up inside her tummy - the happiness and excitement that comes from making oneself vulnerable to someone trusted. \"I love you, Nina.\" \n\nNina looked up into Samantha's eyes, as her finger stroked gently back and forth between her buttocks. \"I love you too, Sam.\" \n\n\"Put both your hands on my bottom, hon,\" said Samantha, looking forward, resting her forehead on the glass. \n\nSamantha felt Nina's hands do as they were instructed. \"Now squeeze, little rabbit.\" \n\nPressure. Not enough. \n\n\"Harder, Nina.\" Samantha pushed her hips backwards, forcing her buttocks into Nina's palms. \"No, harder than that.\" She growled. \"Nina, squeeze my ass as hard as you possibly can. I'm not made of glass.\" \n\n\"That's as hard as I can squeeze, mistress!\" \n\nSamantha looked over her shoulder. \"It is an unsatisfactory thing, Nina,\" she growled, \"when my ass can squeeze your hand harder than your hand can squeeze my ass.\" She faced forward. \"Smack me.\" \n\n\"Mistress?\" \n\n\"If you can't squeeze, then you'll smack. When I tell you to do something, Nina, you do it without question. Now spank me.\" \n\nA loud, wet smack, a sting across Samantha's left buttock. \n\n\"Harder.\" \n\nAnother loud, ringing slap, reverberating harshly against the hard tile. Samantha felt the shockwave jiggle her right buttock. \n\nSamantha gripped Nina's hair. \"Now I want you to push your tongue into my cunt, Nina, while I lay out what we're going to do. I won't have you talking back to me.\" \n\nSamantha pulled Nina's head towards her buttocks, felt Nina's tongue slide over her pussy. \"Now, what we're going to do is this. On my desk are a pair of hand exercisers; they're coiled springs, with handles. You're going to take them home with you and build up your strength until you can close them ten times in a row, and then we're going to have you squeeze my ass some more. Meanwhile, we're going to use one of your secret spanking paddles, to increase your leverage.\" She moved her hips, grinding back against Nina's face, feeling Nina's tongue slither through her folds and inside her. \"I'm doing this, little rabbit, because it's important you understand our discrepancies in strength. When I tell you to spank me, you have to use every ounce of your power. Whereas when I decide to hurt you, I must be as measured and precise as a rottweiler holding an egg in its mouth.\" \n\nSamantha looked back over her shoulder. She saw her hand gripping Nina's hair, Nina's frightened eyes peeking out over the curves of her buttocks. A warm thrill ran through Samantha. \n\nMy God. I'm not doing this just to turn her on. This is honestly exciting in its own right. \n\nI really am her predator. \n\n\"But you'll learn,\" growled Samantha. \"Oh yes, you'll learn.\" \n\nShe pulled her butt away from Nina's face. She saw Nina take a deep, relieved breath. She turned around, keeping her hand on top of Nina's head, her fingers tight in Nina's hair. \n\nSamantha squatted down in front of kneeling Nina, and looked into her eyes. \"What do we say?\" \n\nNina was shaking. \"Th-thank you, mistress.\" \n\nSamantha yanked Nina's head back, exposing her throat. Nina cried out - a tiny whimper that made Samantha's abdomen tingle. Samantha leaned in close, breathed through her teeth onto Nina's throat, licked from her collarbone to her chin. \n\n\"Look at you,\" whispered Samantha. \"All wet and shaking. Should I be lenient on such a pitiful creature, or should I be cruel to you?\" \n\nNina swallowed. \"Whatever you will, mistress.\" \n\n\"Do you know, Nina,\" murmured Samantha, stroking a hand down Nina's breast, \"I've been thinking about your predicament a lot. Thinking of new and cruel ways to torture you.\" She felt Nina's erect nipple between her thumb and forefinger - squeezed, gently. \"How would you feel, were I to attach some little crocodile clips to your nipples, and send a few volts through them?\" \n\nNina shuddered. \"Out-of-character for a moment, Sam...\" \n\nSamantha immediately let go of Nina's hair and sat down, legs crossed, making herself level with Nina. \"Yes, love?\" \n\nNina looked into Samantha's eyes. \"I trust you, and I trust your electrical skills. And I've wanted to try that, and it sounds wonderful.\" She put her arm around Samantha's shoulders. \"But we really need to do a negotiation questionnaire, and talk about this more than we have been.\" \n\nSamantha nodded. \"Understood. But what's a negotiation questionnaire?\" \n\n\"It's like a form,\" said Nina. \"A contract, almost.\" \n\nA contract? Huh. Paperwork seems like the opposite of sexy, to me. \n\n\"It's not, like, formal or anything,\" continued Nina. \"It's not for legal reasons. It's just that it asks you questions that you might not have considered, and you go 'Oh yes, we should have thought about that,' and it helps make sure there are no nasty surprises.\" She pecked Samantha on the lips, and smiled. \"Well, not unwelcome nasty surprises, anyway.\" \n\nSamantha frowned. \"What sort of questions?\" \n\n\"Questions like 'Where's the nearest hospital and emergency room,' for starters.\" \n\nOf course! thought Samantha. Helpful questions. Questions that make you think of things that are important, and that you might have overlooked. Stuff you need to know. \n\n\"I see,\" said Samantha. \"That does sound useful. Tell me, though - am I going too fast?\" \n\nNina smiled. \"Sam, I've often fantasized about lying naked and restrained on your kitchen table, and having you do unspeakably cruel mad-science-type things to me.\" \n\nSamantha grinned. \n\n\"But,\" continued Nina, \"here's the thing with you. I think of something, and it turns out that you've already not only thought about it, but taken it further.\" She looked carefully at Samantha. \"I bet that even now, you're doing the math to figure out how many volts, how many amps, what sort of electrodes, what thickness of wire. And I only just mentioned that I'd like to be shocked one day.\" \n\nSamantha nodded. \"Guilty.\" \n\nAlthough, she thought, that was all background. Foreground right now is that I kinda have to pee. \n\nNina chuckled. \"Sam, what makes this all so wonderfully frightening is that I know that to some extent that Scary-Sam is real. Or she could be real, if you ever let her be. You really are faster and stronger and smarter than me.\" \n\nSamantha looked down. I don't like to hear that. I've never liked to hear that. I don't want to be above you, Nina, I want to be next to you. Close to you. \n\n\"I'm not too sure about that,\" murmured Samantha. \n\n\"It's true, Sam,\" said Nina. \"And when I worship you, that's only half-acting. I think that what'll happen is that you'll have all sorts of ideas for humiliation play, and with some of them, Sam,\" she looked carefully at Samantha, \"they'll be ideas that nobody has tried before.\" \n\nSamantha frowned. Surely not? I'm a pretty vanilla girl. People are kinky. Nina is teaching me. New ideas are rare. New ideas from someone introduced to the BDSM world only recently? Really? \n\n\"And with those ideas,\" continued Nina, \"we'll be in uncharted territory. There'll be no-one to tell us 'Hey, when we did this, we tried X, and it went badly wrong so we tried Y instead.' You know what I mean?\" \n\nSamantha bit her lip. \"I do, but I think you're overestimating me.\" \n\nSamantha felt Nina's hand in her hair. Nina grinned. \"Sam, nowhere on that negotiation form does it ask the question, 'Will an experimental weapon be placed into anyone's vagina?'\" \n\nSamantha reluctantly grinned back. \"Was that too much? You seemed to be enjoying it, at the time.\" \n\n\"I did. I was honestly terrified, and you saw how hard I came.\" \n\nSuch a strange sentence. \n\nSamantha shook her head. \"This is all still so new to me.\" \n\n\"Did you enjoy it, Sam?\" \n\nSamantha blushed. \"Yes,\" she said, quietly. \"But I feel guilty. A little.\" \n\nNina kissed Samantha, tenderly, on the lips. \"That's okay. It's quite common. Don't feel guilty, Sam, I like being scared.\" \n\nSamantha nodded, looking down. \"Logically, I understand it. But my hindbrain is still going 'Why were you torturing that poor girl,' and it doesn't listen when I say that I know that you enjoy it.\" She hesitated. \"Because to my hindbrain, that makes no sense.\" \n\nNina nodded. \"I know, love. If it helps, remember how hard you want me to squeeze your butt.\" \n\nSamantha smiled. \"I'll try.\" She stood up. Nina suddenly looked so small, staring up at her like a kitten in the rain. \n\nSamantha reached down a hand. \"Is Samantha helping you up, or is your predator continuing her games?\" \n\nNina reached up a hand - she hesitated. She narrowed her eyes. She grinned. She placed her hand on her knee. \"Nothing new until we've sat down and talked,\" she said, \"but for now... since I'm all wet and pitiful, down here...\" \n\n\"As you will,\" said Samantha. \"But listen carefully, little rabbit.\" \n\n\"Yes, mistress,\" said Nina, her tone low and breathy. \n\nSamantha stepped forward, pushing Nina backwards with her crotch. She felt Nina's nose bump against her pubic hair, and then Nina's mouth opened underneath her as Nina's eyes closed. Samantha stroked Nina's hair. \n\n\"Put your tongue in my cunt, Nina,\" said Samantha, quietly. \n\nThere's something about that word. Such an ugly, sharp little word, one you could use as an insult. Now, using it to turn her on. \n\nEffectively, from that little sigh just now. \n\nWeapons into toys. \n\nSamantha felt Nina's tongue slide upwards, burying itself in her vagina, warm and soft and wet and moving. \n\n\"Mmm. Remember what we were saying about realism, little rabbit?\" \n\n\"Mmm-hmm?\" \n\nSamantha stroked Nina's hair. \"How it's more frightening if it's true?\" \n\n\"Mph,\" said Nina. Samantha felt her warm breath on her clitoris as Nina's tongue swirled around the entrance to her vagina. \n\n\"This time,\" said Samantha, her voice low and breathy, her smile broadening as she watched Nina's reaction, \"I really do have to pee.\" \n\nThe effect was instantaneous. Nina's eyes opened wide, and she exhaled a shuddering \"Mmmph!\" into Samantha's crotch. Her hands urgently gripped Samantha's ass, squeezing hard. \n\nThis is rapidly becoming my favorite threat, thought Samantha. Look at how terrified she is! \n\n\"I know that scares you,\" whispered Samantha as Nina's tongue slid through her folds with renewed enthusiasm. \"And no chance of getting my lair wet, now. We're in the shower, after all. No drawback to me, to just stand here and let go right into your mouth.\" \n\nNina moaned, loud, into Samantha's pussy, her grip tightening on Samantha's butt, her tongue probing. \n\nSamantha's pleasure began to mount, along with the pressure in her bladder. Look how bad she wants to get me off! Look at her, shaking and wet and frightened out of her mind! \n\nAnd knowing it's true is sinfully delightful for me, too... \n",
        "Playing with that risk... \n\n\"Make me come,\" growled Samantha, \"quick, before it gets too hard to hold it in.\" Samantha tightened her grip on Nina's hair, and thrust her crotch into Nina's mouth. \"You have a time limit, Nina, if you don't want to get scented.\" \n\nSamantha watched Nina's eyes roll back, listened to her muffled cries. Samantha cast her eye further down - Nina's thighs were squeezing together. \n\nShe came without me touching her, last time I threatened her like this. \n\nSamantha smiled, feeling Nina's tongue slide over her clitoris - a sparking tingle, somehow intensified by her building urge to urinate. It must really terrify her. \n\nSamantha closed her eyes, felt soft, quiet moans pass her lips, focused on the sensations - felt the soft, warm, slippery, alive thing moving around in her labia, the hard teeth pressing gently around the perimeter of her pubic area. She felt Nina straighten, her nose push into Samantha's pubic hair, and her tongue flatten over Samantha's clitoris, the tip tickling her urethra. \n\n\"Careful,\" moaned Samantha - \"lick me there and you'll...\" \n\nWith something approaching shock, Samantha felt Nina's nose press harder against her bladder, the tip of Nina's tongue fluttering over her urethral opening as the flattened warmth tickled her clitoris. \n\n\"Nina!\" gasped Samantha, pressure swelling to unbearable levels. She clenched - but at the same time, felt her orgasm building with her urgency. \"Nina, you're - AH! - yau're playing with fire! Do you want me to piss in your mouth?!\" \n\nIn response, Nina gripped Samantha's bottom tightly, pulled Samantha's hips towards herself, squeaked - and began to shake. \n\nIs she coming?! \n\nNina's muffled cries vibrated against Samantha's clitoris - Samantha felt herself bloom into orgasm, the shower brightening, the urgency pressing inside her, begging for release. \n\n\"Ah!\" cried Samantha, torn between her orgasm and her desperation - waves crashed through her, pulsing and glowing, as Nina shook and cried out below her. \n\nUrgent desperation became painful alarm, mingling with her orgasm in unexpected and unwelcome ways. \n\nOh God oh God oh God... \n\nSamantha screwed her eyes shut, riding out the diminishing waves of her orgasm. \n\nThis isn't supposed to happen! It was supposed to be a threat, not a prediction! \n\nSamantha clenched down, painfully, drawing back from Nina. No! Not here! Not in front of Nina! \n\n\"Really gotta go, now, Nina,\" said Samantha through gritted teeth, opening her eyes. \n\nNina was still kneeling. She looked a little hazy - like someone who'd just had an enjoyable orgasm. \"Go, then,\" she breathed, happily. \n\nSamantha opened the shower door, took a step - then the pressure reached a sharp point. She stopped, her legs crossed, her thighs squeezing together. \n\n\"You okay, Sam?\" asked Nina. \n\nSamantha felt a squeak leave her lips. Mortified, she managed to speak. \"Gotta go so bad it - ah - it gets worse when I walk,\" she stuttered. \"Fuck!\" \n\n\"Well, the toilet is about three steps away,\" said Nina, quietly. \"You're in the shower now. The only way this ends in tragedy is if you try, fail, and pee on the floor.\" \n\n\"Fuck,\" moaned Samantha. \"Fucking fuck!\" \n\nI fucked up! I played with too much risk, and it almost ended up with me soaking Nina! She's seen how close it came, and now she'll realize how much of an amateur I am! \n\nThis was a stupid, dangerous thing to do, Sam! \n\n\"Sam, it's okay,\" said Nina. \"Go in the shower, I don't mind.\" \n\nWhat, and splash your feet?! \n\n\"I'll mind,\" said Samantha, shocked to hear the desperation in her own voice. She took a deep breath. \"Fuck! What do I do? Nina, what do I do?!\" \n\nSamantha stared at Nina, paralyzed, hoping for an answer. Nina opened her mouth - closed it again. She looked desperate about something, too. \n\nSamantha watched Nina look at her, look at the floor, look back up at her. Finally, she spoke. \"Sam, I don't mind if you pee on me.\" \n\nThe two women stared at each other for several seconds. \n\n\"Say what?\" said Samantha. \n\nNina blushed, looked towards the floor. \"It's embarrassing. It's not exactly a mainstream kink...\" \n\nSamantha stared, her desperation momentarily forgotten. \"So when I threatened to pee on you...?\" \n\nNina grinned weakly. Samantha saw that she was trembling. This is hard for her, Sam. She's made herself vulnerable to you. Don't fuck this up. \n\nAlso, don't wet yourself in front of your new lover. \n\nHold on just a few seconds. \n\n\"Yeah,\" said Nina, quietly. \"That wasn't terror.\" \n\nHoly shit, what do I say?! What do I do?! \n\nPain. Sudden, stabbing pain, and horror, as a droplet of warmth trickled down Samantha's thigh. \n\n\"Nina, I love you and we'll talk about this,\" squeaked Samantha, red-faced, \"but for now, please look away for a moment.\" \n\nNina nodded, and covered her eyes. \n\n*** \n\nNina sat with her hands over her eyes. She heard the shower activate, felt the water on her skin. \n\nAfter a few moments, she heard Samantha's voice. \"You can look, now.\" \n\nNina opened her eyes, and got to her feet. Samantha looked shamefaced - Nina wrapped her arms around her. \n\n\"It's okay,\" she said. \"I love you, Sam.\" \n\nSamantha's voice was uneven as she lightly put her arms around Nina. \"I handled that badly.\" \n\n\"Shh.\" Nina stroked Samantha's back, as the water fell on them. \"It's fine.\" \n\n\"I couldn't think straight, love, it was so urgent...\" \n\n\"Sam,\" said Nina, a little more firmly. \"I love you. Peeing in the shower won't change that.\" \n\nSamantha laughed, her chest heaving in Nina's embrace. Then, she sniffled. \"Should I have just gone in your mouth?\" \n\nNina hesitated. \"I don't know, Sam. I wanted you to, in that moment.\" She drew back a little, looked up into Samantha's eyes. \"But this is definitely something that needs talked about first. I wouldn't want you to do that and then feel bad or weird about it, Sam.\" \n\nShe leaned into Samantha again, tightening their embrace. \"And I'm to blame for tipping you over the edge. I knew what I was doing, pressing my nose in like that. I was so caught up in the moment that I wasn't thinking straight. I should have remembered that you didn't actually intend to go through with it.\" \n\nShe felt herself squeezed as Samantha's embrace tightened, and a quiet, sighing voice. \"I need to soap up my legs again,\" said Samantha, \"but then let's put our clothes on and just talk for a while. Like you said we should. Let's do that now.\" \n\nAnd not a moment too soon, thought Nina. If there's one thing I'm learning about Sam, it's that things move quicker than you thought they would, and precautions should be taken. \n\nShe probably wants a minute alone to think. Also she might be embarrassed about what just happened. \n\n\"Should I put a pot of coffee on,\" said Nina, \"and meet you downstairs?\" \n\n\"Yeah,\" said Samantha, quietly. \"That'd be nice.\" \n\n*** \n\nSamantha entered the kitchen to the scent of freshly-brewed coffee. Nina sat at the table, two cups laid out ready. Samantha's coffee was already there, made the way she liked it. \n\nI just wet myself in front of her, thought Samantha, and felt the blush rise. \n\nShe sat down. Nina's hand curled around hers. \n\n\"I love you, Sam,\" said Nina. \n\nSamantha smiled. \"I love you too, Nina.\" \n\n\"And I don't care if you never indulge my watersports kink, Sam. I'm not going to get bored and wander off just because of that one little thing.\" \n\nSamantha looked into Nina's eyes and saw no dishonesty there, conscious or not. \n\nSamantha looked into her coffee. Saw her hands wrapped around the cup. Saw her reflection, brown hair and brown eyes in brown coffee. She pushed her glasses further up her nose, and looked at Nina. \n\n\"I want to,\" she said, and took a sip of her coffee. \"I want to make you happy, love. But...\" she looked down. \"It might take me a while. I mean... it's an unusual kink, like you said...\" \n\n\"And if you're not into it, you're not into it,\" said Nina, touching Samantha's hand. \"Love, it's not like I can't get off without it. I have no shortage of other kinks, as I'm sure you know.\" She smiled. \n\nSamantha looked at Nina. \n\nHow to explain to her? \n\n\"Nina,\" said Samantha, \"I know it was hard for you to tell me that you like...\" she trailed off, gestured around meaninglessly. \"...pee. I love you, and I'm flattered that you trust me so much, and I feel very close to you right now.\" She looked down. \"But I don't understand this. And I don't understand how I feel about it.\" \n\nNina looked pained. \"Are you...\" she hesitated, her voice dropping to a whisper, her eyes looking around, not meeting Samantha's. \"...disgusted?\" \n\n\"Oh, no!\" said Samantha, holding up hands in a warding-off gesture. \"No, no no no. Love, I don't think you can disgust me.\" \n\nNina was silent for a moment. She glanced at the table, then looked back up to Samantha. \"Then how do you feel about it?\" \n\n\"I feel like I want to make you come in every way I know how,\" breathed Samantha. \"Finding out new ways is delightful. But for this one...\" She shook her head. \"I think I need to read the manual, first.\" She took a sip. \"Tell me about it.\" \n\nNina sat back in her chair. \"I'm an open book to you, Sam. What would you like to know?\" \n\nSamantha sat and thought for a moment. What's the best question to ask about this? \n\n\"You've fantasized about me in this context, right?\" \n\nNina blushed. \"Yes.\" \n\n\"Tell me about that fantasy. What happens, how it feels, the things that we do.\" \n\nNina looked down. \"Uh...\" \n\nShow her. Show her you trust her. \n\nShow her she doesn't have to be embarrassed. \n\n\"Nina, I once fantasized about being sodomized by Bugs Bunny with a carrot,\" blurted Samantha. \n\nThe two women stared at each other across the table. \n\nWhat the fuck did I just say. \n\n\"Um...\" said Nina. \n\n\"Okay,\" said Samantha, blushing. \"I was a teenager, still figuring things out, kinda mixed-up, watched a lot of cartoons, you know what it's like.\" \n\nSamantha could tell, from the look on Nina's face, that no, she did not know what it was like to fantasize about anal sex with a cartoon rabbit. \n\nI thought everyone went through that phase. \n\n\"That same year,\" continued Samantha, not sure exactly why, \"I put a Sharpie up myself and masturbated to Robin Hood on VHS.\" \n\nSamantha, why are you saying these words. Why are these things coming out of your mouth. \n\n\"There's no shame in that,\" said Nina, carefully. \"Kevin Costner was pretty cute, to a teenage...\" \n\n\"The cartoon version,\" interrupted Samantha. \"With the foxes.\" \n\nOh, Sam. You could have let that one go. Why? Why did you correct her? It was almost a normal thing to say. \n\nSamantha watched Nina's lips press together, the corners of her mouth turning up. \"I know you promised never to laugh at me,\" said Samantha, \"but this is pretty ridiculous, and you should probably let it out before you explode.\" \n\nNina fought for control, her chest heaving, holding in the laughter. After a few seconds, she calmed down, exhaled, placed her hand palm-down on the table, met Sam's eye, the flicker of a smile on her lips. \"No, I can do this and not laugh. We're grown-ups.\" \n\nSamantha leaned over the table. \"In my fantasy, I was Maid Marian. I had a big, bushy fox tail, and Robin brushed it for me.\" Nina burst into laughter. \"Every night, we'd dance and frolic in the moonlight, and then we'd kiss for hours, and then I'd rock that Loxley fox's socks.\" Samantha watched Nina guffaw, saw drips of coffee roll down the sides of her mug. \"And Little John was jealous of Robin, and all the villagers were jealous of my beauty, and there was some contrived plot, and there were battles, and I fought alongside Robin and I was a better fighter than him, Nina. I saved his ass, not the other way around. This was an elaborate fantasy. And also sometimes I put my fingers up his butt.\" \n\nSamantha leaned back, and sipped her coffee, waiting for Nina to calm down. \n\nShe waited for what seemed to be a long time. \n\nI've never told anyone that before, she mused. And if I ever thought I'd tell anyone, never did I imagine I'd want them to laugh. \n\nFinally, Nina was coherent enough to look at Samantha with nothing more than sparkling eyes and a wide, toothy grin. \"Puberty is a hell of a drug,\" she said. \n\n\"Do you get why I'm telling you this?\" asked Samantha. \n\nNina nodded. \"Yes.\" \n\n\"Can you tell me anything about this kink of yours that's more embarrassing than that?\" \n\nNina smiled into her coffee cup. She thought for a moment. \"I got off to Robin Hood too. But with me, it was 'Men in Tights.'\" \n\nSamantha nodded. \"Cary Elwes. I loved the Princess Bride. I had such dreams about Westley.\" She raised the cup to her lips, sipped. \n\n\"And I wanted to be fucked by Optimus Prime.\" \n\nCoffee splashed behind Samantha's glasses. When she calmed down, Nina was offering her a napkin. Samantha took it gratefully, giggling, and mopped the liquid from her eyebrows. \n\n\"Sometimes,\" said Samantha, between giggles, \"I have orgasms on rollercoasters.\" \n\n\"Only sometimes?\" chuckled Nina. \n\n\"Okay, I think we've just figured out what we're doing this weekend,\" said Samantha, running the napkin around her glasses. \n\n\"Go ride some rollercoasters and then watch cartoons?\" \n\nSamantha sighed happily. \"Yeah.\" She put her glasses back on. \"And maybe I'll indulge all your naughtiest fantasies.\" \n\nNina nodded. \"But first you've got to know what they are. Right.\" \n\nShe looked down, thought for a moment. \n\n\"I have several. Several ones involving you and pee.\" \n\nSamantha shifted in her chair, her elbows on the table. \"What's your favorite one?\" \n\nNina smiled, not meeting Sam's eye. \"Hard to say. Um... okay, here's one.\" She looked at the floor. \"I'm right there.\" She pointed. \"Right on the kitchen floor. You're wearing that orange sweater, and your pants and underwear are off to the side. Your thighs are around my cheeks.\" She wriggled a little. \"Your pussy is right in front of me. It takes a while, because you're shy, even though this is something that you're making me do, and you really have to... go...\" she trailed off. \n\n\"Then what happens?\" asked Samantha. \n\n\"Then you relax,\" said Nina, quietly. \"And you do this, like, relieved sigh...\" She blushed. \"And... and then it happens.\" \n\nSamantha sipped her coffee, watched Nina. \"On your face? Or in your mouth, or...?\" \n\nNina smiled a little, looking down. \"Over my lips. My mouth is closed. Just a few drops at first, and they trickle over my lips and down my cheeks.\" \n\n\"Just your lips?\" asked Samantha, leaning forward. \n\n\"I get impatient,\" said Nina, blushing bright red, \"and I tickle you. And a jet hits me right between the eyes.\" She closed her eyes. \"And then you finally let go, and you... you know.\" She swallowed. \"You piss all over my face.\" \n\nSamantha felt her own blush rising. \"It felt good to say those words, just then, didn't it?\" \n\nNina didn't meet her eye. \"Um.\" She wriggled. \"Yes.\" \n\nSamantha smiled. Language. Language is hot. \"Nina?\" \n\nNina looked up. \n\n\"How does it feel,\" said Samantha, blush intensifying, grin broadening, \"when I piss all over your face?\" \n\nNina swallowed, turning her head to the side a little. \"You're moaning,\" she said, her words coming faster now, more decisively, \"because it feels so good to let go after so long. I rub my face against you. I open my mouth and taste it. It's hot. It puddles around my head, and soaks my shoulders. My hair's wet.\" She opened her eyes, met Samantha's briefly, looked away, shifted in her seat. \"You call me a dirty bitch, and you make me go take a shower. Sometimes you come with me and wash my hair for me, sometimes you come with me and grab my hair and tell me to open my mouth, and...\" She hesitated. \"Then you push your crotch into my mouth, forcefully, and you... do it straight onto my tongue. Sometimes you make me swallow.\" She shrugged, and fidgeted a little. \"Depends on whether I've come by that point or not.\" \n\nSamantha ran her finger around the rim of her coffee cup. \"Is it being powerless, or being peed on, that turns you on?\" \n\n\"Both,\" said Nina. \n\n\"Is it...\" Samantha cast around for the right words. \"Is it being marked as mine? Being scented?\" \n\nNina looked down. \"That's part of it.\" \n\n\"Have you done this before?\" \n\nNina nodded. \"With guys. Not with a woman before. It's different. At least, I imagine it'll be different.\" \n\nSamantha put her elbow on the table, rested her chin in her hand. \"How so?\" \n\nNina looked around herself, squirming. \"I don't know. I lack the experience. But from forums and such, I get the impression that it tastes different, for a start. Stronger, and more acidic.\" \n\nSamantha nodded. \"It does sound like taste would be a big factor. Smell, too. What does it taste like?\" \n\nNina showed the ghost of a smile. \"Nobody does this for the taste, Sam, it doesn't taste good. It's bitter. And smell-wise, well, it smells like piss.\" \n\n\"If I drank lots of water...?\" \n\nNina nodded. \"That's the way to do it. Just keep drinking all day until what comes out is basically just warm water.\" \n\nSamantha nodded. \"Noted. Flush the system, gotcha. What d'you think will be different, when we do it?\" \n\nNina looked up, and grinned. \"When we do it?\" \n\nSamantha grinned back. \"I'll totes pee in your mouth someday soon, Nina. I love you. I just want to understand, so I can do it right.\" \n\nNina squirmed happily in her seat. \"I love you too.\" \n\n\"So back to my question. Girls - different, right?\" \n\n\"Well... With guys, there's...\" Nina shrugged. \"There's a sort of... silly, exuberant nature about it. Even if it takes some persuasion to get a guy to pee on you, it's not like they need encouragement to pee on everything else. Got a campfire that needs put out? No problem. Snow that hasn't got anyone's name in it yet? Well, let's take care of that. It's as though peeing on things is in their nature. And so, when they pee on a person, it's either silly or degrading, but seldom what you'd call... intimate, I suppose.\" She looked up at Samantha. \"I imagine it'd feel different, with a woman. More... secret, maybe.\" \n\nSamantha regarded the deeply blushing Nina, and struggled to understand. \n\n\"I read this article once by a guy who had a foot fetish,\" continued Nina. \"I never understood the appeal, until I read that article. I still don't get off on feet, but intellectually I understand why other people do. He talked at length about how when a woman is barefoot, it's usually because she's in a place that she loves. Her own home, or the home of a trusted friend. Somewhere she feels very comfortable. He said,\" said Nina, looking at the ceiling and struggling for words, \"that it was the associations with what being barefoot means, more than the feet themselves, that turned him on.\" She looked up, briefly, at Samantha. \"It's the relief. It's knowing that when you really have to go, and then you're finally able to, the relief can...\" she cast around for words. \"Can... sort of... share a circuit with arousal.\" \n\nSamantha sat back, taking it in. \n\nIt doesn't make sense. No matter how she explains it, it doesn't make sense. Pee is... well, pee. \n\nBut does it really matter? If she loves it, and I'm okay with doing it, then do I have to understand it? ",
        "\"I don't know if I've ever tried to rationalize it,\" said Nina. \"Or even put it into words.\" \n\nSamantha sipped her coffee. \"It doesn't necessarily have to make sense, Nina.\" \n\nNina looked up, shocked. She stared at Samantha for a second. \"I never thought I'd hear you say that about anything, Sam.\" \n\nSamantha grinned into her mug. \"It's sex,\" she said, quietly. \"Sex is ludicrous. Human sex, especially so. Perhaps trying to make sense of it all is missing the point. Tell me another fantasy.\" \n\nNina smiled. \"Uh...\" \n\n\"I haven't got anything more embarrassing than Robin Hood to tell you, I'm afraid.\" \n\nNina chuckled. \"That's okay. I think it could only be more embarrassing if we were talking about something that happened yesterday, not over a decade ago.\" She looked carefully at Samantha for a moment. \"You don't, uh...\" \n\n\"Still have the hots for cartoon characters? No.\" She smiled. \"That was just a weird phase.\" \n\n\"Because I would be totally supportive, you understand,\" said Nina, \"were that the case.\" \n\nSamantha grinned. \"Are you relieved that you don't have to be?\" \n\nNina sighed. \"Only because those costumes are so damn expensive. Sam, if you're secretly a furry, I'm absolutely cool with it, so long as you can afford the paraphernalia yourself.\" \n\n\"I'm not,\" murmured Samantha, blushing. \n\n\"I'll dress up as Robin Hood one day, if you like,\" said Nina. \n\n\"I'm not -\" Samantha sighed. \"Shit, you know what, I don't even know! It's been over a decade since I saw that movie!\" \n\nNina grinned. \"So you might be just assuming it doesn't turn you on anymore. If you've got more buttons that I don't know about, I'm all about pressing them.\" \n\nSamantha chuckled, blushing to the ears. \"Okay, we can watch the movie together later on, see if it gets me all flustered in a nostalgic sort of way. Show me this negotiation thingy, first.\" \n\n\"Okay,\" said Nina. \"I've got one in my purse.\" \n\nSamantha watched as Nina got up and walked into the hall. \n\n\"And here's me thinking we'd have to call it up on my computer,\" said Samantha. \n\n\"Always be prepared,\" called Nina, and Samantha heard the sound of a zipper and some rustling. \"And anyway, I'm not going near your computer. Your shower's bad enough. Here it is.\" \n\nNina reappeared, holding a sheaf of papers. \n\nI was expecting just one sheet! Samantha set down her cup, and picked up a pencil from the detritus on the kitchen table. This might take a while. \n\n\"Now, this is only very general and broad,\" said Nina, sitting down. \"If you've got specific ideas, we should examine them in detail.\" \n\nSamantha patted the power supply. \"I want to tie you to that chair, hook this thing up with crocodile clips to your nipples, and torture your watersports fantasies out of you.\" \n\nSamantha saw Nina hesitate. Saw her almost drop the papers and take off her shirt. Was both disappointed and relieved when she did not. \n\n\"You have your copy,\" said Nina, passing Samantha a few sheets of paper, \"and I have mine. We fill them out, and then we swap forms and giggle like schoolgirls. You'll probably have some questions as you go through the -\" \n\n\"Here, where it talks about you resisting me,\" said Samantha. \"Would you like to try that?\" \n\nNina frowned. \"Forgot how fast you read. I'm willing, yeah, but that'd be complicated a little bit in our case, Sam. You'd basically have to let me win.\" \n\nSamantha grinned, her eyes scanning the pages. \"For the sake of weaving an exciting story, I can take some falls every now and then. Goodness, this is interesting. It talks as though we're... I dunno, doing theater or something!\" \n\nNina smiled back. \"Well, there are parallels.\" \n\n\"I haven't played pretend in too long,\" murmured Samantha. \"I loved drama class in school. Drama class with real sex is even better.\" She pointed to a section on the checklist. \"I don't think I want to involve other people right now.\" She looked at Nina. \"Is that okay?\" \n\n\"That's fine, Sam.\" \n\nHer eye caught another entry on the list. \"I doubt I'll ever want to poop on you, Nina. Will that be a problem?\" \n\n\"Sam,\" sighed Nina, \"First of all, no, that won't be a problem, because ew. Secondly, slow down a little, huh? Third, it's cool that people's tastes change. Answer the questions honestly for how you feel today, and if you feel different in the future,\" she waved the sheet around, \"this is just paper. We can do the form again if you change your mind about something.\" \n\n\"There's a costume section!\" squealed Samantha. \"Corsets, garters, ooh - biker gear!\" \n\nNina closed her eyes and pressed a finger to the bridge of her nose, as Samantha's pencil ticked rapidly down the list of potential clothing ideas. \n\n\"All done,\" said Samantha happily. \n\nNina looked down at her form. \"Part one,\" she said. \"Medical considerations.\" \n\nSamantha felt a blush rising. \"Oops.\" \n\nNina looked up, briefly, from the form. \"I get that you're excited. I really do.\" Her eyes dropped again. \"Part one. Medical considerations.\" \n\n\"I'll, uh...\" Samantha stood up, holding her mug. \"I'll just, um...\" she pointed to the empty mug. \"Just go and, uh... Would you like...?\" \n\n\"Maybe we should switch to decaf,\" said Nina with a tiny smile, not looking up from the form. \n\n*** \n\n\"You ever heard of a violet wand, Sam?\" asked Nina, looking over Samantha's questionnaire. \n\nA violet wand? Sounds like something a Disney princess would wield. \"No,\" said Samantha, as casually as she could. Watching Nina's eyes as they scanned her form, Samantha took a roll of insulating electrical tape from the detritus on the table, and placed it in her lap. \n\n\"You should look into it,\" murmured Nina. \"I think it'd be right up your alley.\" She nodded towards the questionnaire that Samantha held. \"Anything you want to talk about, on there?\" \n\n\"You've given me no surprises,\" said Samantha. \"At least, no important ones. So, later. Tell me about this wand thing.\" \n\nNina grinned. \"It's a high-voltage torture toy. Strikes arcs, but isn't dangerous.\" \n\nOoh. That is right up my alley... \"High voltage and high frequency, then. You want me to use one on you?\" \n\nNina grinned and looked away. \n\nOh, she does. She really, really does. \n\n\"You get them from the Internet?\" \n\nNina nodded. \n\nSamantha leaned forward, and showed Nina her best evil grin. \"Let's go and order one right now.\" \n\n\"They're kind of expensive...\" \n\nSamantha kissed Nina on the nose. \"Don't care. Gonna shock ya.\" She kissed Nina, watching her eyes close. She moved forwards, quietly, and took Nina's right hand in both of hers. Leaning back and breaking the kiss, Samantha patted Nina's hand. She smiled at Nina. \n\nNina smiled back. Then she heard the sound, felt her hand pressed to the arm of the chair - and by the time she looked down, her wrist was bound in shining black electrical tape. \n\n\"Sam? What're you...\" \n\nSamantha already had her other hand. Within a second, it was bound as securely as the first. \n\nSamantha looked Nina over. Legs free. If there's a serious problem and I can't untie her, she can still stand up and run for help, or get free by breaking the chair. Rubber-soled sneakers, wooden chair. Good. \n\nNina looked up at Samantha. \"What are you going to do to me?\" she whispered. \n\nSamantha felt a shiver. Yeah, that's definitely beginning to turn me on. She sat down, and found her low-wattage soldering iron in the table mess. \"Well, little rabbit,\" she purred quietly, plugging in the iron, \"you have information that I want to know. So, I'm going to torture it out of you, by passing electrical current through your nipples.\" \n\n\"You monster,\" said Nina, eyes narrowed. \"Do what you will to me, I'll never talk!\" \n\nSamantha stood up, taking the sponge from the iron's stand. \"We'll see about that,\" she said, walking to the sink, wetting the sponge, drawing the curtains. \"I've no doubt you've been shocked before.\" She sat back down. \"I've been shocked much more than you have, I guarantee. I've built up something of an affinity with electricity, Nina.\" She showed Nina the fingertips of her right hand. \"See those little white dots?\" \n\nNina looked closely. \"Yes.\" \n\n\"Scars from electrical burns. Picking up a big power supply that held some residual charge in its decoupling capacitors. There are others too, but this is less about me, and more about you. For you, electricity is a playful thing - something you use to tickle your private parts, or make naughty pictures appear on your laptop.\" She leaned in close to Nina. \"For me, it's my life.\" She kept her face an inch from Nina's, and spoke slowly. \"Are you starting to get the picture, little rabbit?\" \n\nSamantha was satisfied to see sweat begin to bead on Nina's forehead. Nina glanced at the soldering iron, and swallowed. \"Yes,\" she said, in a small voice. \n\nSamantha smiled. \"Good.\" She sat down, and began to open drawers in her parts box. \"So, little Nina,\" she said, \"because I love to watch you blush - tell me another of your depraved little fantasies.\" \n\nNina stuttered. \"M-mistress?\" \n\nSamantha, plucking capacitors from a drawer, smiled at Nina. \"Did you think I was just going to hook up some wires to this power supply and stick them straight on your nipples? Where's the creativity in that? Where's the finesse? No, Nina, I'm building a little circuit on this breadboard. It's quite simple, so it'll only take a few minutes. Here's the deal.\" She picked up her soldering iron. \"I'm going to shock you, whether you tell me what I want to know or not. And it's going to be painful. But,\" she grinned, incisors peeking out - \"if you get me horny enough to make me want to masturbate, then I'm just going to go ahead and masturbate, right here in front of you. And if this hand is too busy to hold a soldering iron, it's too busy to complete the circuit. Every minute I spend distracted from this little project is a minute I won't be shocking you.\" \n\nShe watched Nina's face as the implications sank in. \n\nSamantha picked up her spool of solder, and touched it to the tip of her iron. No reaction. \"Not hot enough, yet.\" Samantha stood up. \"Let's get you ready, then.\" She gripped the base of Nina's T-shirt, and tugged upwards. Nina's breasts, soft and pale and freckled, shook gently with Samantha's rough motion. Her nipples were erect, her areolae wrinkled. \n\n\"Where's your bra, little rabbit?\" \n\n\"I was going to put it on before I went home,\" said Nina. \n\n\"Before you were delayed,\" murmured Samantha. \"Do you know what would make your nipples more conductive?\" \n\n\"No, mistress.\" \n\nSamantha knelt down and sucked Nina's right nipple into her mouth. Nina gasped. Samantha slid her wet tongue in one slow circle around Nina's nipple, then opened her mouth, breaking the seal. She watched a droplet of her saliva slide slowly down the underswell of Nina's breast. The very tip of her nipple glistened. \n\n\"That,\" said Samantha. \"Now, let's see, here...\" She went to her toolbox, brought out a pair of calipers. She opened the jaws, and turned to Nina - \n\nNina was white-faced, terrified. Samantha looked at what she had in her hand. \n\nA pair of pointed, shining metal jaws. Of course. Nina has never seen these before. They must look terrifying - like some sort of cutting tool. \n\nSamantha smiled. \n\nHow delightful. \n\nSamantha leaned towards Nina, bringing the cold metal to her wet areola. Nina shivered, sweat running freely now. \n\n\"Seven millimeters,\" said Samantha, taking the calipers away and sitting down. She heard Nina exhale, and felt a wet tingle in her crotch. \"Start talking, Nina. Distract me, and you can postpone your torture.\" She touched the solder to the iron. \n\nThe solder melted, flowing over the tip like mercury. \n\n*** \n\nNina watched the tiny wisp of smoke rise from Samantha's soldering iron. With eerie speed and robotic precision, Samantha began assembling components on the breadboard in front of her. \n\nNina, her breasts exposed, her right nipple cold and wet, found her mind a blank. She smelled solder; found herself thinking of the Special Toy. \n\nThat's not what Samantha wants to know about, she thought. She wants to know about watersports. \n\nThink, Nina, think. \n\nGod she's so fast. What's she doing with that copper rod? Is she making a loop? A loop that's seven millimeters across, by any chance? \n\nThink! You never had any problems thinking about Sam peeing on you before! \n\n\"I think about you taking me somewhere,\" began Nina. She felt her blush rising. \n\nThis one? Really? The most embarrassing one? \n\nShe watched Samantha place another component. Gotta say something. May as well humiliate myself... She took a breath. \n\n\"You take me out on a date. I'm...\" she looked down. \"I'm wearing a collar, and nothing else. You have me on a leash.\" \n\nSeriously, this is the one we're telling Sam? The nastiest, most depraved fantasy? The one I'd never tell anyone? \n\nOut of the corner of her eye, she saw Samantha's hands stop moving. \"Go on.\" \n\n\"You're taking me to the park,\" continued Nina. \"You... you sit on a bench, and you make me sit down in the cold dirt next to you. You pat me on the head and tell me what a good girl I am.\" \n\n\"To the park, Nina? With you naked on a leash? Wouldn't that get us arrested in short order?\" \n\n\"It's a fantasy, Mistress.\" She glanced at Samantha. \"Just something I think about to get off.\" \n\nSamantha nodded. \"All right. Carry on.\" \n\nNina felt her blush burn her ears, felt her nipples stand on end. \n\n\"I say...\" Nina stammered, bright red. \"I say, 'Mistress, may I go to the toilet,' and you say no.\" She stared at the floor. \n\n\"Look at me, Nina,\" said Samantha. \n\nNina did as she was told. \n\n\"Are people watching?\" \n\nNina nodded, swallowing. \"Yes. Sometimes they come up and pat me on the head too, and...\" she found her mouth dry. \"And they compliment you on what a cute little well-trained pet I am.\" \n\nSamantha smiled. She placed the iron in its stand, leaned back in her chair, spread her legs wide, and cupped herself. \"And what happens, after I say no?\" \n\nNina fought to retain eye contact. It was difficult. \"I sit there and I hold it in. After a little while I'm desperate.\" \n\nSamantha reached a hand up to her breast, and squeezed. \"Does being desperate turn you on, Nina?\" \n\n\"Yes,\" whispered Nina. \n\n\"So it's not just being pissed on,\" said Samantha, openly rubbing her crotch. \"Having me control you, to such an extent - that turns you on?\" \n\n\"Yes.\" \n\n\"Continue,\" said Samantha, slipping a hand down her jeans. \n\n\"I ask you again.\" \n\n\"How do you ask me?\" said Samantha - and Nina saw that she was blushing too. \"What are the words you use?\" \n\nNina felt her heartbeat. Saw, out of the corner of her eye, her breasts trembling a little with every thump. \"I say, 'Please Mistress, may I have permission to speak?'\" \n\n\"Permission granted,\" said Samantha, a little breathily. \n\n\"'Mistress,'\" said Nina, watching Samantha's hand move back and forth inside her jeans, \"'I'm desperate. Please may I go to the bathroom? I'll wet myself if I don't go soon.' Sometimes I say 'I'll humiliate myself if I don't go soon.'\" \n\nSamantha moaned, softly. \"Ohh... That's your job, little rabbit,\" she said. \"To be humiliated for my amusement. So no, you may not use the toilet. What happens then, Nina? Do you humiliate yourself, like the low, base animal that you are, or does something else happen between now and then?\" \n\nNina felt her ears and cheeks escalate to emergency-flare redness. \"It's embarrassing, Mistress.\" \n\nSamantha smiled. \"Your embarrassment is more of a turn on to me than this silly story. Urine doesn't do anything for me. Your humiliation is what's making me - mmm - what's making me wet. Continue with the most - oh - the most humiliating fantasy you have, Nina.\" \n\nNina swallowed. \"You pull up on my leash, and take me to the ladies' room. I think you're finally letting me pee, somewhere dignified instead of in a bush or on the ground. And then you take me into a cubicle, and unbutton your pants.\" \n\n\"Like this?\" \n\nNina watched as Samantha pulled down her jeans and underwear, and sat back in her chair, legs spread, glistening labia peeking through dark pubic hair. \"Yes, mistress.\" \n\nSamantha slowly, languorously ran a finger between her labia. They parted, with a tiny, wet noise. \"And then what, Nina?\" \n\nNina forced herself to slow down her breathing. \"And then you have me sit down underneath you, on the cold, filthy floor.\" \n\n\"Mmm.\" Samantha spread her labia wide, exposing champagne pink insides. \"And then what happens, Nina?\" \n\n\"Then you put your pussy over my face, mistress.\" She knows I'm looking. \"And you take hold of me by my hair, and you're not at all gentle about it.\" \n\n\"Look at my eyes.\" Nina did as she was told. \"Do I say anything?\" \n\n\"You say, 'Spill one drop, and I'll slap you so hard you won't see straight.'\" \n\nSamantha grinned. \"You fantasize about me slapping you?\" \n\nNina shivered. \"Yes.\" \n\nSamantha stood up. She took her iron, and quickly touched it to the board two or three times - tiny contacts, tiny wisps of smoke - and replaced it in its stand. \"Interesting,\" she said, taking a small battery and clipping it into the new device. She turned to Nina. \"I see you're powerless to resist me. I could slap you right now, Nina.\" \n\nA cold chill went down Nina's spine, at the same moment a warm thrill came from her belly. They collided with an interesting sensation. \n\n\"You could, Mistress. I'm all tied up.\" \n\nSamantha took a slow, measured step towards Nina, then another, smiling down at her. She stood with her naked crotch in front of Nina's eyes, and began to stroke wet fingers across her genitals. \n\n\"I could, couldn't I?\" said Samantha, her voice breathy and excited. \"I could just slap your face, right now, and there'd be nothing you could do about it.\" \n\nNina felt a wetness inside her underwear, saw the blush rising in Samantha's cheeks. \"Yes,\" she breathed. \"I'm scared, Mistress. I'm helpless.\" \n\nSamantha crouched down in front of Nina, and touched a wet, fragrant finger to Nina's lips. \"Continue with your story. Look me in the eye at all times.\" \n\nNina shivered, and did as she was told. \"You tell me to open my mouth, Mistress.\" \n\n\"Uh-huh.\" Samantha's hand disappeared down out of Nina's view, and she heard something wet. \n\n\"And then you, sort of, crouch a little bit...\" \n\n\"Yes?\" said Samantha. Her hand appeared, index and middle fingers wet. \n\n\"So that your pussy is pressing into my mouth,\" breathed Nina, panties damp, nipples erect, blushing, sweating, breathing hard. \n\n\"And then?\" Samantha opened her fingers - slick wetness webbed briefly between them. She pressed them against Nina's lips, wiped them across her mouth. Samantha's scent rose, dark and strong. \n\nNina squeezed her thigh muscles. \n\n\"And... then you make me wait, because...\" breathed Nina, ragged, blushing harder than she had ever blushed before. \n\n\"Because waiting is the best part?\" asked Samantha with a little smile. \"It is, isn't it?\" \n\n\"Yes,\" breathed Nina. \"Yes, Mistress.\" \n\n\"And after a few moments...\" prompted Samantha. \n\n\"After a few moments, I taste it,\" said Nina. \"Hot and bitter, flowing over my tongue. I swallow. I keep swallowing.\" \n\nSamantha smiled. \"Swallowing what, Nina?\" \n\nNina looked away, humiliated and unbelievably aroused - then caught herself, and looked into Samantha's eyes. \"Swallowing your urine, Mistress.\" She took a shallow, shuddering breath. \"I lie in bed at night masturbating, and thinking about drinking your piss. I've...\" She swallowed. \"I've been doing this for some time, Mistress.\" ",
        "Nina saw Samantha's pupils widen. \"That's just filthy, Nina.\" \n\n\"Yes, Mistress.\" \n\n\"Filthy and disgusting and strange. You're a low, depraved pervert, aren't you, Nina?\" \n\nNina did not look away. \"I am a low, depraved pervert, Mistress.\" \n\n\"And do you manage to swallow all of it, little rabbit? Every drop?\" \n\nOh God. Is she... \n\nShe's going to... \n\nShould I make her... \n\nSamantha spoke, low and breathy, her eyes locked onto Nina's. \n\n\"I'll slap you, Nina, right now, if you dare to tell me that you spill any. I'm warning you. So - do you swallow every drop?\" \n\n\"No, Mistress,\" said Nina, a tingle rushing from her clitoris. \n\nSamantha cocked an eyebrow. \"So then what happens?\" \n\nSay it. Make her do it. \n\n\"I can't swallow fast enough, Mistress, and some of it runs down my chin and over my breasts. And then you -\" \n\nImpact. A harsh, ringing slap across the face. \n\nNina did not see Samantha's arm move. She sat, panting with shivering breath, her face angled to the right, her cheek burning, incoherent. \n\nSomeone took her face in gentle fingers, and moved her field of vision so that she could see a face. It was Samantha's. Samantha smiled, and said a word. \n\n\"Uh?\" said Nina. \n\n\"Carry on,\" said Samantha. \n\n\"Whuh...\" said Nina, blinking. \n\nSamantha leaned forward and kissed her gently on the forehead. \"Continue with the story that you were telling me, Nina.\" \n\nNina blinked some more, and focus, coherency returned. She was dripping with sweat, and her cunt was glowing, and something was tugging at her right nipple. \n\n\"Uh... yes,\" she said, weakly. \"You make me lick you clean, and then you help me up, and you help me to wash the pee off myself.\" \n\n\"Mmm-hmm,\" said Samantha, looking down. \n\n\"And then we go back out into the park, and...\" Nina looked down, at what Samantha was doing. A ring of copper encircled her nipple, at the areola. It was soldered to a red wire, which led to a prototype circuit board containing many mysterious components, of which Nina could identify only a battery holder, containing a single AA battery. A black wire came from the device to a copper rod that Samantha held. \n\n\"Um,\" said Nina. \n\nSamantha's eyes widened in a happy grin. \"Saying 'uh,' 'um,' or any other such stalling nonsense. What is the punishment?\" \n\nTen seconds' silence immediately, regardless of instructions to the contrary, thought Nina. \n\nThat's when the first arc hit her. \n\n*** \n\nSamantha touched the probe to the very tip of Nina's swollen, erect nipple, and watched her reaction. \n\nFirst, the jolt hit, as the circuit made a frightening snapping sound. The chair clattered as Nina jumped. Then, her eyes widened. She curled her lips back from her teeth, and just caught herself from crying out. \n\nSamantha smiled. Delightful! This is tremendously effective! \n\nAt eight seconds, Samantha said \"Did you like that?\" \n\nNina gasped - probably realizing just then that she'd been holding her breath. \n\nLook at that reaction! From such little power! Making the power supply as unnecessarily loud and frightening as I possibly could - that was very clever. You are a very clever Sam! You can make Nina think she's being horribly tortured while barely even hurting her at all! \n\n\"And this is battery-powered!\" cried Samantha. \"I bet you're wondering how it can bite so hard with just a double-A battery, huh?\" She leaned in close to Nina, felt her shuddering breath, saw the conductive fear-sweat pouring off her - \"Well, you know what else uses double-A batteries? Stunguns, that's what! You'd be amazed what you can do with the right step-up circuitry!\" \n\nShe struck another arc. Nina, now unconstrained by the ten-second-silence rule, cried out in a high, pained yelp. \n\nSamantha stood, showed Nina her crotch. \"Look at what your whimpering is doing to me, Nina.\" She slipped the index finger of her left hand between her labia and then moved it downwards, extending a string of pale juices. \"Your pain causes this.\" \n\nIs that true? \n\nIs it her pain, or knowing that she's turned on by pain? \n\nAm I a sadist? Is it okay for me to be a sadist? \n\n\"You're helpless,\" she said, quietly, crouching down in front of Nina. \n\n\"I'm helpless,\" breathed Nina, shuddering. \n\n\"I can do whatever I want to you,\" said Samantha, watching Nina's reaction. \"I can make you do whatever I want you to.\" \n\nNina shivered and twitched in her seat. \"Wh-what would you have me do?\" \n\nSamantha opened her mouth. \n\nOh. \n\nSamantha closed her mouth. \n\nShit. Hadn't thought that far ahead. \n\n\"Let me think,\" said Samantha. She touched her index finger to her chin, and with her other hand, zapped Nina's nipple. \n\n\"AAH!\" \n\n\"Hush,\" said Samantha. \"I'm thinking.\" She touched the probe to Nina's nipple again, heard the crackle, watched Nina jump in her chair. She smiled. \"I'm not doing this to punish you, I'm just doing it because I like doing it. You'll know when I'm punishing you.\" \n\nAnother zap - another jolt, Nina's breasts shaking, her eyes wet, her nipples erect, her teeth biting her lower lip. \n\n\"Suggestions?\" asked Samantha. \n\n\"I - ah! - I could f-finish the-the fantasy, m-mistress...\" \n\nSamantha grinned. Yeah. That's what we were doing. Before I got distracted. \"Okay.\" Zap, whimper. \"I'll stop shocking you until you've finished.\" \n\nShe leaned down close, into Nina's face, feeling the warmth of her trembling lips. \"Yeah,\" said Samantha, quietly. \"It's not fair. It's not supposed to be. I'm going to shock you, Nina. The only difference is whether I do it in a minute,\" she raised the probe so that Nina could see, \"or whether I do it right now.\" \n\n\"We go back out into the park,\" said Nina. \n\nSamantha grinned. \"On your leash?\" \n\nNina nodded. \"On my leash.\" \n\n\"And what happens, in the park?\" Samantha stroked her labia with her left hand, almost absently. She felt a blush rise. \n\nThis really is sordid and filthy. And it's turning her on. \n\n\"We get ready to leave. I still have to pee...\" Nina's voice, already quiet, dropped to a whisper. \n\nIt's turning me on, too. \n\n\"You were having these filthy thoughts about me, before we ever even kissed?\" \n\n\"Yes,\" whispered Nina. \n\nSamantha leaned close. \"You love being such a pervert, don't you?\" \n\nNina nodded, not meeting Samantha's eye. \n\n\"And you'll tell me anything,\" said Samantha, moving the rod close to Nina's nipple, watching her flinch out of reflex, \"just to delay the punishment that you know is coming eventually anyway. Just to not be in pain in this very moment. I have complete power over you, don't I, Nina?\" \n\nNina nodded, whimpering, eyes closed. \n\nSamantha watched Nina carefully, hesitating. \"Do I make you wet yourself?\" \n\nNina nodded, once more, biting her lower lip. \n\n\"Or...\" said Samantha, her fingers squelching in the folds of her labia, stroking gently over her clitoris - \"do you do it on purpose?\" \n\n\"Sometimes,\" whispered Nina, shivering. \n\n\"So we're walking along, leaving the park, I'm holding your leash like you're a dog...\" \n\n\"And I can't keep up,\" said Nina, \"because I'm squeezing my legs together.\" \n\n\"Do I pull on your leash?\" \n\nNina whimpered, her ears burning, her cheeks scarlet. \"Yes.\" \n\n\"Is that what makes it so that you can't hold on anymore?\" \n\nNina nodded. \"That's...\" she took a deep breath. \"That's when I feel it trickle down my legs.\" \n\nSamantha smiled. \"And everyone is watching. Strangers. Maybe they're pointing at you.\" \n\nNina caught Samantha's eye, briefly, then looked away. \"It's so humiliating.\" \n\n\"And when you're masturbating to this image,\" said Samantha, slowly, her face creeping closer towards Nina's, \"that humiliation is what makes you come, correct? Look at me.\" \n\nNina did as she was told. She was sweating, blushing, trembling. \"That's what makes me come, mistress.\" \n\nSamantha touched her forehead to Nina's, passed the probe from her right hand to her left, and with her right hand, gently unbuttoned Nina's jeans. \n\n\"Do you know,\" said Samantha, slowly, quietly, \"what I would do?\" Her hand flattened against Nina's tummy, and her fingers crept into the burning wet heat below the waistband. \n\nNina shifted, her bottom rising. \"M-mistress?\" \n\n\"What I'd do, little rabbit...\" Samantha's fingers found the line of Nina's panties, slid below them and into her pubic hair - \"if you were to embarrass me in public, like that?\" \n\n\"Ah...\" Nina arched her back, pressing down with her feet, begging Samantha with her crotch. \n\n\"I'd take off your leash,\" said Samantha, pushing her fingers between the soft, twitching line of Nina's cunt and the sopping wet heat of her panties - \"and I'd beat you with it.\" \n\nShe pressed her mouth to Nina's, struck arcs against her nipple, and slid her fingers between her oil-slick, burning hot labia. Nina screamed into Samantha's mouth, the chair legs clattering, Nina's whole body convulsing in crashing, explosive waves. Samantha's fingers wettened, Nina's underwear squelching against the back of Samantha's hand. \n\nSamantha struck arcs in time with Nina's cries, until the waves subsided, Nina shuddering and sighing in the chair. \n\nMy God, she's beautiful when she's coming. \n\nSamantha drew back, a warm pulsing between her legs, and looked at Nina with a smile. \"Am I getting the hang of this?\" \n\nNina laughed. Sweat ran between her breasts. \"Yeah...\" she breathed, dreamlike. \"Yeah, I'd say so. That was...\" She blinked, shook her head, smiling. \"Wow. I love you, Sam.\" \n\nSamantha touched Nina's breast, a gentle stroke with the very tips of her fingers. \"I love you too.\" She plucked the grounding conductor from Nina's swollen, red nipple, and carefully disconnected the battery from the probe before touching the copper pieces together. One last quiet snap as the capacitors discharged, and the machine was safe. \n\nShe pointed to Nina's nipple. \"You okay, here?\" \n\n\"It's a bit tingly,\" said Nina. \"Can you cut me free?\" \n\nSamantha nodded. She searched for a moment in the electronic junkyard of her kitchen table, and produced a hobby knife. She knelt down in front of Nina. \n\n\"Hold still,\" said Samantha, touching the blade to the tape, the knife over the wood of the chair so that any mistakes would damage the chair rather than Nina. \n\nShe peeled the cut ends of the insulation tape away from the armrests. Nina stretched her arm, rotated it at the shoulder, while Samantha cut the other side. \n\nNina looked thoughtfully at the tape stuck to her wrists. \n\nAh. That's going to sting a bit, to take off - wait, what's she... \n\nNina curled the slack tape around each wrist, so that they formed shining black bracelets. She grinned down at Samantha. \n\n\"I'm yours,\" she said, simply and quietly. Then she leaned forwards and kissed Samantha, tenderly, loving lips pressing against Samantha's, a gentle tongue sliding into Samantha's mouth. \n\n\"Mmmph,\" said Samantha, closing her eyes, feeling herself pushed backwards. She set her hands palm-down down on the floor behind her - then she felt Nina's hands around her shoulders, and on the back of her head. \n\nTaking her weight. \n\nYes... \n\nSamantha tentatively raised one palm from the floor, then the other, as Nina's knees touched down on either side of Samantha's thighs. She relaxed her abdomen, let herself become heavy in Nina's arms. Nina lowered her, gently, slowly. \n\nThe kiss came to a happy ending, and Samantha opened her eyes. \n\nNina looked down at Samantha, eyes sparkling, a soft-edged smile on her lips. \"I love you more than I've ever loved anyone,\" she said, quietly, almost thoughtfully. \n\nSamantha felt a warm rush from her abdomen - down to her toes, up to her cheeks. She reached up with her right hand, stroked Nina's cheek. \n\n\"I love you more than the sun,\" said Samantha. \n\nA month ago, Samantha would have stammered, said that that wasn't what she'd meant to say - well, it was, in that if the world ended and the sun went dark then Sam would be okay as long as Nina was with her, in that she loved Nina and needed Nina and wanted to be with Nina forever, but she didn't realize how silly it would sound condensed down to those exact words, you understand, don't you, I mean I know it was a daft thing to say but that's what I actually meant. Nina would have assured Samantha that yes, she understood, now that Samantha had explained it at least, and no, it wasn't silly, well, actually, yes, it kinda was, but it was the sort of endearing silliness that Nina loved, the sort of wonderful happy accidental moments of clumsy beauty that were inherent in Sam and that were a big part of why I love you so much, and please, Sam, never stop being silly with me. \n\nBut that was a month ago. \n\nNow, the whole conversation happened in a grin and a slight raise of Nina's right eyebrow, and a smiling semi-shrug from Samantha. No words necessary. \n\nWords just take up time you could use for kissing, thought Samantha, closing her eyes again as Nina's lips touched hers. She rested her head against Nina's palm, trusting, comfortable, until she felt Nina tugging at her T-shirt. She wriggled, parting their lips for the smallest possible amount of time until Nina dropped the empty garment to the floor and came back to Samantha, gripping her left breast, reuniting their mouths. \n\nThe kiss said Yours. It said Thank you. It said Always. It said My turn. \n\nThat, thought Samantha, is a complicated kiss. \n\nThe kiss turned to her jaw, to her neck, to her earlobe - and yet it somehow didn't feel like it was breaking up into a series of smaller kisses. \n\nMore like one long kiss, thought Samantha, running her fingers through Nina's hair, but now it has a wavelength. A frequency. Her lips are leaving my body and returning, but it's still the same kiss. \n\nThe same communication. \n\nSamantha felt Nina's kiss descend over her collarbone, across her heart, while Nina's fingers stroked to a sudden point over her nipples. \n\nHer back arched, and she let out a quiet \"Ah!\" \n\nThe same wonderful signal. \n\nNina tugged gently and briefly on Samantha's nipples as her kiss descended over Samantha's abdomen. She did something complicated with her hands - stroking them over Samantha's breasts and tummy, crossing over each other at least once, a firm, grateful, loving touch. \n\nA \"Let me take care of you now\" touch... \n\nSamantha opened her eyes to watch Nina kiss her just beneath her navel - the source of those warm throbs running through her - and descend into her pubic hair. \n\n...already? \n\n...well, I guess - \"Oh!\" Why not! \n\nHot breath between her legs. A gentle caress of lips on her mons. Lower - a playful stroke of a soft, pliant tongue over her tingling clitoris. \n\nSamantha closed her eyes, laid back and sighed, content, Nina's tongue slithering downwards to her vagina. \n\nSamantha's eyes shot open. The tongue didn't stop. It slid wetly between her buttocks, touching with infinite gentleness the secret place back there. \n\n\"Ah!\" said Samantha, watching Nina pull back, give her a shy smile, and stroke a finger between Samantha's slick labia. \n\n\"Mistress?\" said Nina, quiet, coy. \n\nShe wants to... \n\nSamantha swallowed. She glanced towards the table. \n\nThere's lube on the kitchen table, right next to her head. I'm naked. She's clothed. She's going to penetrate my butt. \n\nAnd I'm going to let her. \n\nAnd I'm going to enjoy it. \n\nSamantha nodded, blushing. \n\nSomething of a turnaround. \n\n\"Thank you, mistress,\" said Nina, and her tongue slid against Samantha's anus. \n\nSamantha writhed in sudden, new pleasure - she arched a little, lifting her bottom from the floor. She watched Nina's hand rise up towards the table, her mouth staying exactly where it was, and her fingers wrapped around the bottle. \n\nShe didn't look to see where the bottle was, but she didn't knock anything over getting it, realized Samantha with a start. She must have noted its position. She planned this. \n\nNina raised her face - leaving cooling saliva on Samantha's bottom - and diverted her attention to the bottle. Samantha watched Nina uncap it, saw cold lube flow slowly over soft skin. Nina's eyes were on her fingers - watching the lube move, encouraging it with her other hand, a thin, glistening coating. Warming it. \n\nSamantha grew quite aware of how her thighs were spread widely apart, her wet labia visible and inviting. She felt her anus clenching involuntarily. \n\nRelax, Sam. Relax and let Nina's fingers just... slide in. \n\nNina's eyes caught Samantha's, and their edges crinkled up in a grin. Slowly, she reached downwards, underneath Samantha - Samantha felt Nina's fingers slide wetly between her buttocks, over the sensitive spot in her behind. She twitched, gasped quietly, kept her eyes on Nina's. \n\n\"Do you want this?\" asked Nina, softly, the tip of her index finger snug between Samantha's cheeks, moving in tiny little come-here motions, tickling Samantha's most private place. \n\nSamantha shuddered, little shivering thrills running over her tailbone and up her spine. \n\nShould I...? \n\n\"Yes,\" breathed Samantha. \"Yes, touch me there.\" \n\nWith that, Samantha shifted her weight onto her triceps, raised her bottom from the floor, and turned over. She looked back over her shoulder - Nina wasn't looking her in the eye. \n\nShe's watching my butt, thought Samantha. Watching the way it moves as I tense and relax, shift my weight around. Samantha parted her thighs a little, perhaps tensing her buttocks just a little more than the motion warranted. She saw Nina's pupils widen as she exposed herself. \n\nSamantha faced forward and laid with her forearms on the floor, her chest and shoulders raised a little. Her nipples rested lightly on the linoleum - it was cold, and Samantha found herself quite glad she'd mopped the previous afternoon. \n\nAlthough we did knock all that stuff off the table earlier... \n\nSamantha felt Nina's wettened, slippery finger run cold down her back. She jumped, shivered, giggled. Heard Nina giggle behind her. \n\n\"Cold,\" breathed Samantha, feeling the finger bump over each vertebra, between shoulder blades, over her center, lower, to the top of her buttocks. \n\nSamantha exhaled slowly, smiled, felt Nina's fingertip move smoothly between her butt-cheeks, over her tailbone, lower and lower and pause, making tiny circles at her anus. \n\nKinda ticklish. Wet and ticklish. \n\nSamantha felt herself jumping and tensing, forced herself to relax. Nina can see that, she realized with a blush - she can see my anus clenching and relaxing. \n\nIs that appealing for her? \n\nAnd why the hell aren't there any sexy words for the anus? \n\nA quiet, shy voice called from behind her. \"Shall I go inside, Mistress?\" \n\nSamantha nodded. \"Be gentle,\" she breathed. \n\n\"Slow and gentle, Mistress,\" said Nina, as Samantha felt the pressure on her asshole slowly increase, \"just as you asked.\" Samantha let herself relax, felt the point of Nina's finger push with greater force. \"Keep telling me what feels good. If you need to stop, tell me.\" \n\n\"I will,\" said Samantha. \"Slow, but keep going.\" \n\nHow did it happen, that I put a coilgun inside Nina before I let her touch my butthole? Samantha felt wet, slippery pressure build behind her. This feels amazing. We should've done this sooner. ",
        "Samantha forced herself to relax; that same second, she felt the pressure give way, felt herself give in, felt Nina's fingertip slide up her bottom. \n\nSamantha closed her eyes, lowered her forehead to rest on cool linoleum, and breathed a low, deep, relieved \"Uhh.\" \n\n\"Okay, Sam?\" asked Nina. \n\n\"Yes,\" whispered Samantha, into the floor. \"That was a happy sigh.\" \n\nWas it? Not just happy, though - sudden relaxation and penetration and a release of tension... \n\nSamantha grinned. Nina's finger is in my butt. \n\n\"Deeper, or stop a moment?\" asked Nina. \n\nSamantha turned to look at her, letting her grin show. Saw Nina's sparkling eyes, her wet, kissable lips. \"Push it in, hon.\" \n\nNina grinned back, looking Samantha in the eye, and pushed. \n\nSamantha felt a slow, intense, inward sliding sensation, Nina's finger hard inside her. She moaned, trying to cast her eyes downwards to what Nina was doing - she saw only Nina's hand, between soft, twin mounds. \n\n\"That's the second knuckle, Sam.\" Nina looked down, between Samantha's buttocks - looked back up, into Samantha's eyes. \"Are you enjoying this?\" \n\nSamantha giggled. Of course I'm enjoying it. \"God, yes.\" She sighed, happily, facing forward. \"How come we didn't do this sooner?\" \n\nNina's voice came hesitant and soft; \"I don't know, Sam. You've touched me there plenty of times. I guess I was just... waiting for the signal, I suppose.\" \n\nWith that, Samantha felt Nina push, and her finger slither deeper. \"Ah!\" \n\n\"Okay?\" asked Nina. \n\nSamantha nodded, her eyes closing. \"Yes...\" \n\n\"How about this?\" asked Nina, pushing a little more - Samantha felt Nina's hand, her knuckles, press between her buttocks. \n\n\"Oh God!\" cried Samantha. Nina's third knuckle was pressing against her - her finger all the way inside. The pressure felt astonishingly good. \n\n\"Astonishingly?\" Am I astonished? I actually am... \n\nI wasn't expecting this to feel so... good. To have someone else do it. \n\nNina continued to push and release, in tiny rhythmic motions. Samantha continued to let little soft moans escape her, only slightly under her control. \n\nI knew it'd feel good physically - I knew it'd be pleasurable. I knew it'd be intimate. But I was expecting it to feel... \n\nSamantha's hands found themselves cupping her breasts, her nipples between her index and middle fingers. There were two warm spots on the linoleum where they had laid, soft and heavy. \n\n...intense. Taboo. Transgressive. And it doesn't. It feels caring, and considerate, and... loving. Nina is being so careful, so gentle, so respectful... \n\nShe grinned. \n\n...of my butthole. \n\n\"I love you so much,\" breathed Samantha. \n\nShe heard the grin in Nina's voice as she replied. \"I love you too, Sam.\" With that, Samantha felt Nina begin to draw her finger back. \n\nThat feels... so strange. And so intimate. \n\n\"Oh...\" breathed Samantha. \"Yes... Yes, slowly, like that.\" She felt the tiny ridged lump of Nina's knuckle drag for just a moment, felt the resistance build and release, smooth and wet. \"Oh, Nina... You have sexy knuckles.\" \n\nNina giggled. \"All the better to prod your butt with, my love.\" \n\nSamantha felt Nina's first knuckle slide wetly out of her behind. She clenched, involuntarily - Nina's fingertip slid out, rested on her star, pressed, slipped inside her as she relaxed. \n\nSamantha rested her forehead against the linoleum, breathed, exhaled happily. It feels so intense. And so careful. Nina knows she's playing with high voltage, and she's being so loving and respectful of it... Her fingertips remembered that they were brushing against her nipples and she rubbed them some more, three points of intense sensation. \n\nShe felt the knuckles of Nina's finger push, one after the other, deep inside her - felt Nina's hand press into her buttocks. \"Still okay, Sam?\" \n\n\"God, yes,\" breathed Samantha. \"Keep pushing, that feels good. You can speed up a little if you want.\" \n\n\"I do,\" said Nina, and Samantha felt Nina's left hand grip her left buttock, squeezing tightly, her right hand pressing deeply between her cheeks, pushing in short, intense peaks of pressure. Suddenly but smoothly, the finger slithered backwards, and forwards again, the strokes lengthening. Samantha felt her body become liquid, relaxed - she felt herself melting into a grinning puddle that consisted of two nipples and a bottom. \n\nWhen Samantha felt Nina's left hand leave her buttock and her fingertip slide between the slick valley of her labia and over her clitoris, Samantha snapped back into human form and jumped a little. \"Ah!\" \n\n\"Okay, Sam?\" \n\n\"Don't stop!\" \n\n\"All right, then!\" \n\n\"Holy fuck!\" Sparks ran tingling through Samantha's body, flying from her clitoris, pinging through her nerves. She felt as though arcs were running between her legs like a Jacob's Ladder. She twisted gently on her nipples - three points of focused sensation becoming four. \n\nThe index finger of Nina's right hand began to slither backwards out of Samantha's behind, the index finger of her left hand gently stroking and teasing the point of Samantha's clitoris. Samantha, moaning, felt Nina's finger leave her - unconsciously she clenched, tightening around the very tip of Nina's finger, and then relaxed and let Nina push into her again, a long, smooth, swift motion that ended with Nina's knuckles batting against the underside of her buttocks. \n\n\"Oh God!\" cried Samantha, her nose and forehead pressing into the floor. She bucked her hips against Nina's penetration, raising her tummy from the linoleum, pushing her butt back against Nina's finger. \n\nThe finger on Samantha's clitoris disappeared, and was replaced with damp, panting breath and soft, fluttering wetness. Samantha felt Nina's hair tickling her buttocks, and raised her hips further, weight bearing onto her knees. \n\nI'm really exposing myself to her... \n\nHer finger is sliding in and out of my ass, so close to her eyes that she probably can't even focus. Her tongue is slithering through my labia. Her nose is... \n\nSamantha felt hot breath blowing on the sensitive place between her labia and anus. \n\nHer nose is right in my ass! \n\nIt's okay, it's okay, I just showered... \n\n\"Is that good, Sam?\" came a sound and a feeling, hot breath broken up into delightful little waves across Samantha's vulva with each syllable. \n\n\"Yes,\" breathed Samantha, and let out a little moan. \n\n\"Sam?\" whispered Nina, her finger slithering back and forth in Samantha's anus. \n\n\"Mmm?\" \n\n\"Would you mind if I licked you some more?\" Her finger slid out of Samantha and stroked gently around her star - \"...here?\" \n\nUm... \n\n\"Please,\" murmured Samantha. \"Yes, lick me there...\" \n\nShe heard the grin in Nina's words. \"Thank you, mistress.\" Then she felt Nina's tongue slide up her labia, over the opening of her vagina, and slither in one smooth stroke between her buttocks, over the sensitive private spot, Nina's cheeks pressing into Samantha's behind. The long, wet lick continued further - sliding up to the base of her spine, leaving a cool trail behind. \n\n\"Jesus,\" breathed Samantha, and squeezed her breasts, her nipples poking between her fingers. \n\n\"Okay, Sam?\" \n\n\"Yes...\" \n\nSamantha felt Nina's left index finger slip between her labia - a moment later, it slid effortlessly into her vagina, buried to the third knuckle. \n\n\"Oh, sweet holy fuck...\" murmured Samantha, as Nina's tongue slid downwards, lingered between her buttocks, pushed gently against her anus. \n\n\"Mmm,\" breathed Nina. Her tongue vibrated wetly against Samantha, her finger slithering back and forth, deep and warm and rigid inside. \n\n\"I love you,\" whispered Samantha, into the floor. \"God, that - ah! - that feels amazing. Your tongue is so... ooh... so... so complicated.\" \n\nShe heard Nina giggle behind her, felt the twitches of her tongue. It can be hard or soft, pointed or flat, and it changes every second... \n\nAnd now, pointed. And now, hard. And now, pushing firmly against the very center of Samantha's star, pushing hard... \n\nSamantha clenched. \n\nDoes... does she want to... \n\n\"Relax,\" said Nina, and delicately kissed Samantha's anus. \"It's okay.\" \n\n\"Are you trying to - mmm\" Samantha felt Nina's finger slow down a little. Considerate of her. \"Are you trying to... put your tongue in, back there?\" \n\n\"Is that okay?\" \n\nSamantha pondered the question. \n\nYes, it is. \n\nWell, that wasn't much pondering. \n\n\"...yes. Please. Um. And thank you-ooh-OH!\" Samantha felt a hot, squirming wetness push inside her behind, as Nina's finger curled in a come-here motion against Samantha's g-spot, another set of fingers stroking at her clitoris. \n\n\"Jesus!\" cried Samantha, feeling her orgasm swell, sparks at her clit, warm thrills running through her spine, cheeks aflame. \"Fuck me!\" she squealed, wondered for a second if she intended to say that, then said it again. \n\nNina's tongue slipped out of Samantha, slid up between her cheeks, morphed into a quick kiss on her tailbone, and then strong, painful teeth gripped her left buttock. The sudden spike in sensation drove her over the edge and her orgasm rushed upwards to a crescendo, Samantha's cries becoming a high-pitched squeak, electricity crackling through her every nerve, the room brightening as her pupils dilated, her throat turning raw. \n\nHer squeak trailing off into a wordless, breathy exclamation, her cheek pushed into the floor, her hindquarters twitching. \n\nNina can see that. She can see my pussy and my butthole twitching, clenching and releasing. She can feel it. \n\nAnd I'm fine with that. \n\nAs long as it's her. \n\nShe heard a giggle behind her. \"We'll have to do that again, sometime.\" \n\nSamantha chuckled - a breathy, sweating kind of chuckle. She flopped down onto her stomach, and rolled over. \"Yes. Wow.\" She blinked Nina into focus, saw that she was looking at her chest. Saw her raise her finger, point at her right breast. \n\n\"Sam, you've... got something stuck to your boob, there.\" \n\nShe looked down. \n\n\"Ah.\" She grinned. \"Yeah, that must've fallen off earlier. You were shaking the table a lot.\" \n\nNina cocked an eyebrow. \"I was shaking the table a lot? You're the one who did that to me.\" \n\nSamantha giggled, plucking the component - a 10K resistor - from her sweating breast. \"And I'll do it again. Put it all the way to three coils, next time.\" She held the resistor out towards Nina. \"And you won't be able to -\" \n\nNina held up a hand. \"Stop. No resistance puns.\" \n\nSamantha pouted. \"Aw.\" \n\nNina leaned down, snuggled into Samantha's arms, and kissed her on the cheek with a happy sigh. \"That was already a pretty shocking experience.\" \n\n\"I plan to revisit it with quite some frequency.\" \n\nNina wrinkled up her nose. \"Can we stop with the puns? This kinda hertz.\" \n\nSamantha kissed Nina on the top of her head, and sighed happily. \"They are sort of revolting, aren't they.\" \n\n\"Sam?\" asked Nina. \n\n\"Hmm?\" \n\n\"A little while ago, I don't think I'd have even known that that was a resistor.\" \n\nSamantha grinned. \"A little while ago, I wouldn't have considered electrical torture sexy.\" She squeezed tighter. \"I think I'm the one getting the education, here.\" \n\nNina gave Samantha a tiny little lick underneath her jaw, and smiled. \n\nOutside, AC transformers hummed on wooden poles. Phone lines carried little voltages, each spike in the waveform a miniscule whisper, a syllable of a secret or the beginning of a sigh. As Nina touched Samantha's conductive, sweat-dampened skin, their potentials matched. Their electromagnetic fields mingled, crosstalking and interfering with each other in ways that, although not consciously detectable by either Samantha or Nina, were not at all unwelcome. \n\nSamantha and Nina stayed exactly where they were. \n\n*** \n\nSomething was wrong. \n\nNina opened her eyes. Samantha's side of the bed was cold. \n\nWhere's my Sam? \n\nNina sat up, looked towards the ensuite. No light under the door. \n\nShe heard a quiet whirring sound, coming from downstairs. \n\nWhat on earth is that? \n\n*** \n\n\"Sam?\" Nina pushed the study door open. \"It's three in the morning.\" \n\nSamantha looked up from her computer. She wore a fuzzy red dressing gown that had seen better days. \"Oh.\" She pushed her glasses up her nose. \"A naked Nina has appeared.\" She grinned. \n\n\"Whatcha doing?\" asked Nina, rubbing her eyes and padding into the room. \n\n\"Watching you walk nude across my study,\" purred Samantha. Something glinted in her lap. \n\n\"What's that,\" asked Nina, pointing - \"on your hand?\" \n\nSamantha looked down. She brought her hand up to her face, and made a show of examining the rings, the little copper conductors on her fingers. \"How'd that get there?\" she asked, quietly. \n\nNina followed the wires from Samantha's hand to her desk - the wires fed into a little breadboard with a lot of small chips attached to silver brackets with fins on them. \n\nHeatsinks? pondered Nina. \n\nFrom that board, a wire went into something plugged into a power strip, and other wires went to another, smaller breadboard, with a big black chip and some other little oddments, and that board plugged into Samantha's computer. Whatever it was, it was complicated. \n\n\"Are you making a violet wand, Sam?\" \n\nSamantha began to answer, then stopped. \"Not... exactly, hon.\" \n\n\"What, then?\" \n\nSamantha blushed. \"It does work. I was just testing it. But...\" she hesitated. \"Y'know, I know how other people care about how things look, they don't want components just flopping around in the open, I was going to put it in a pretty little box or something...\" \n\nNina smiled. \"Sam, I'm kinda used to seeing your bare components by now.\" \n\nSamantha nodded, a tiny smile forming. \"Well... all right. I've a little more testing to do, but I can show you now, if you like. Turn the light off, will you?\" \n\nNina did so, then sat down on the floor next to Samantha's chair. \"Let's see it.\" \n\nSamantha held out her left hand, the hand with the rings and conductors. \"I haven't had much time to practice,\" she said, quietly. \"Forgive me if I'm a bit rusty.\" \n\nShe held her thumb and forefinger in a broken circle, and pressed a button on the board. A dozen or so little green LEDs glowed on the board briefly, then they went out. One came back on and electricity arced, bright and clear, in the gap between Samantha's thumb and forefinger. One arc followed another, each existing for only an eyeblink, each punctuated by a loud SNAP. \n\nThe frequency increased. The snaps came faster and faster until they blended into each other and the arc stood steady and smooth, like fire or plasma, casting blue light and white sound into the room. \n\nStill the frequency rose. Suddenly it wasn't a series of sounds but one constant note, rising, finding a plateau, a chord. It sounded like a tiny electric guitar. \n\nAnd Samantha sang. \n\nIt took a second for Nina to realize what was happening, why Samantha's voice was so light and measured, and then she recognized the tune. \n\n\"When the rain is blowing in your face,\" sang Samantha quietly, and the pattern of lights on the board changed and, to Nina's astonishment, the sound of the arc changed into a new note - \"and the whole world is on your case...\" \n\nHow is she doing that?! \n\nAnd when did I tell her that that was my favorite song? \n\n\"I would energize your favorite place,\" sang Samantha, glancing at Nina and smiling, the blue-white glow of the arc reflected in her glasses. \n\nOh. Ten years ago. I remember. \n\nThe arc twitched as the pattern of LEDs changed, altering its frequency, playing new notes. A musical violet wand. \n\n\"To make you feel my love.\" \n\nThe song continued, against the arc's accompaniment. Nina sat in awe. \n\nLast time I heard Samantha sing, I thought she was amazing. And then the following morning I forgot, or I put it down to what we were drinking, or to the atmosphere in that karaoke bar, but I somehow forgot that she can actually carry a tune. \n\nShe's divine. \n\nNina let Samantha's words roll over her, taking in the lyrics that spoke of Samantha's love for her. The words were changed, here and there - little innuendos, touches of how Samantha knew Nina's pleasure in pain, a feeling of a non-traditional love but love nonetheless, pure and true and eternal. The fingerprints that Samantha left in the original lyrics were small, respecting the reasons it was Nina's favorite song, but they continued in a way that was delightful and playful and loving and intimate. \n\nSamantha's words took something dear to Nina and made it something for just the two of them. \n\nAfter the final \"To make you feel my love,\" Samantha sat sheepishly for a moment. \n\n\"It, uh... I know the original faded out, but you can't really do that with an electrical arc,\" said Samantha, as the tune continued. \"It's either arcing or not, I haven't figured out a volume control yet. So it just repeats.\" \n\nNina was surprised to feel a tear run down her cheek. \"You turned it into a program that continues forever.\" \n\n\"I didn't mean to,\" said Samantha. \"This is why I was still testing it.\" \n\n\"No,\" said Nina, quietly. \"It's perfect.\" \n\nThe two sat and listened to the arc as it continued the song without Samantha. \n\nSamantha chose the end of the verse to end the program. \n\n\"I love you, Sam,\" said Nina, wiping her cheeks in the sudden quiet. \"More than Dylan.\" \n\n\"I love you too, Nina.\" \n\n\"Come to bed, so I can hug you forever.\" \n\nSamantha nodded. \"Let me just shut this down and discharge the caps. Don't want Higgs sniffing around it and getting zapped. Go on, I'll follow you up.\" \n\nNina did as she was instructed, suspecting that something secret might be going on, and content to let it be a surprise. \n\n*** \n\nAfter Samantha heard Nina's footsteps on the stairs, she stood up, pulling the warm mitten out from underneath her. \n\nShe must have heard the sewing machine running, thought Samantha. But I think I got away with it. \n\nShe pulled the conductors and wires from her hand, opened a drawer, and found the mitten's twin. She put them on. \n\nThey glowed a cool white in the monitor's reflected glow. Pretty things, delicate, harmless. \n\nNo thumbs. \n\nSoon. \n\nSamantha placed the mittens carefully into a drawer, and turned off her monitor. \n\n*** \n\nSamantha: Just for the two of us, huh. Nice save. \n\nNina: You didn't change the words enough for me to publish them, love. \n\nSamantha: \"but they continued in a way that was delightful and playful and loving and intimate and FUCKING INFRINGING.\" \n\nNina: I have to work within the confines of fair use here, Sam! \n\nSamantha: I think our readers are less concerned with whether Bob Dylan's gonna send us a cease-and-desist, and more concerned with the mittens. \n\nNina: Yes, the mittens! \n\nSamantha: YES. THE MITTENS. \n\nNina: MMMMIIIITTTTEEEENNNNSSS! \n\nSamantha: Nina, do you realize that at the end of the first Mittens, we'd written twenty-five-odd-thousand words and not gotten to the actual mittens? In a story called \"Mittens?\" \n\nNina: I remember \n\nSamantha: See, I don't think you do. BECAUSE YOU'VE DONE IT AGAIN. \n\nNina: ow \n\nSamantha: Clearly the marks I left on you last time didn't last long enough! \n\nNina: But next time, for sure! \n\nSamantha: Do you promise? \n\nNina: Yes. I even have a title worked out. \"Soaking Wet Mittens!\" \n\nSamantha: Ah. So there's actual watersports, and actual mittens, next time, and not just talking about them? ",
        "Samantha: Or are we going to have to write Mittens IV: The Mittening? \n\nNina: Nah. After \"Soaking Wet Mittens\" comes \"Strap On Mittens,\" and after that it'll just be little bits here and there, like with those episode-length ones we did. \n\nSamantha: \"Little Bits of Mittens?\" \n\nSamantha: How about \"Delayed Gratification Mittens,\" huh? \n\nSamantha: How about that? \n\nSamantha: How about \"Yikes where are the fucking mittens already sheesh Mittens?\" \n\nNina: This is why I decide the titles. \n\nSamantha: Anyway. \n\nSamantha: Next time, on \"Mittens...\" \n\nNina: Desperation! \n\nSamantha: Public humiliation! \n\nNina: Chopsticks! \n\nSamantha: Watersports! \n\nNina: Moving! \n\nSamantha: And we go out to dinner! \n\nNina: AND \n\nNina: THERE'S \n\nNina: MITTENS! \n\nSamantha: It's really pretty fantastic. Super hot. Very sexy. \n\nNina: Until next time! \n\nSamantha: Don't worry. I'll keep her warm for you. \n\n*** \n\nNina: Okay so here's a little addendum. We posted this on Amazon first, and right now, as I'm uploading it to Literotica, we have... \n\nSamantha: DRUM ROLL PLEASE \n\nNina: drdrdrdrdrdrdrdrdrdrdrdr \n\nSamantha: Twenty three thousand, six hundred and twenty nine words written on Soaking Wet Mittens! \n\nSamantha: And it looks like it's gonna be a long one, 'cause that's already longer than the first Mittens and we're not even halfway done with the story. \n\nNina: And the reason we're telling you this is that we've been really busy lately and I haven't written anything on it for a week - and at the point in the story at which I left off, I'd been hopping around from foot to foot, desperate to pee, while Sam watches, for an hour and a half. \n\nSamantha: So right now, the written-Nina has been holding it in for over a week. \n\nNina: The real Nina kinda has to go at the moment too Sam, can we wrap this up \n\nSamantha: We just thought you'd get a kick out of knowing that. \n\nSamantha: And yes, every time we don't write for a few days, we talk about how written-Sam and written-Nina are just kinda frozen in time, teeth extended towards a biteable bumcheek, waiting for us to get back to the computer so that said bumcheek can be nommed upon. \n\nNina: It's true. All week I've been whining \"But written-me reeeeeally needs to go! \n\nNina: And now real-me really does need to go. We'll see you soon, dear readers! \n\nSamantha: Real soon."
    ],
    "authorname": "FeatherWatt",
    "tags": [
        "lesbian",
        "best friends",
        "watersports",
        "electricity",
        "bdsm",
        "pee",
        "authority kink",
        "mad science",
        "anilingus",
        "squirting"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/high-voltage-mittens-1"
}