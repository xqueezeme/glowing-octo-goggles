{
    "title": "Three Square Meals Ch. 109",
    "pages": [
        "The white battlecruiser crept through space like a stalking Siberian tiger, moving ever closer to the herd of unsuspecting ochre-hued prey. The giant blue star at the heart of the Pi Sagittarii system cast its cool light over the closing ship, making it seem like night was falling on that wintry scene, the huge insectoid ships huddling together for warmth in the frozen dusk. Sections of the Invictus' armoured hull slid back, revealing a formidable array of heavy weaponry, but the broad barrels currently lay inert, as if trying not to scare away their jittery quarry. At the same time, broad doors at both the prow and amidships began to peel open, allowing the deadly vessels inside to launch into space.\n\nJohn stood beside Faye in the Raptor's cockpit, watching through the crystal-clear canopy as the gunship glided clear of the battlecruiser's hull. His view of the Kirrix fleet was both impressive and daunting, the disturbingly alien spacecraft looming over his tiny 40-metre-long vessel. Each drone carrier looked eerily similar to a termite queen, albeit a monstrous mechanical reproduction of one, the bulbous segmented hull covered in yellowish-brown armour plating. \n\nThe Raptor was running on low power to keep the sensor profile at a bare minimum, which meant that most of the computer panels and consoles in the cockpit were currently dark. Even though it was impossible for the Kirrix to hear him, John couldn't help lowering his voice, speaking to his petite pilot in a hushed whisper. \"Looks like Calara was right... I just see drone carriers out there.\"\n\n\"They're in protective high-orbit above the hive ships,\" Faye replied quietly, matching his volume. \"We're picking up a mass of sensor contacts on Carolus III directly below this position.\"\n\nJohn did a quick count of the enormous Kirrix capital ships. \"I make it 32 carriers... they must have sent a huge number of hive ships.\"\n\n\"As soon as we initiate the active scan of the closest drone carrier, I'll power up the Invictus' sensor array and get you an accurate count,\" she offered helpfully. \n\nHe nodded in acknowledgement. \"Okay, take us down, Faye.\"\n\nShe banked the gunship hard to port and the nose dipped towards the planet below, the view from the cockpit a beautiful vista of clear blues and verdant greens. \n\n\"It looks so serene,\" Faye marvelled, big luminous eyes drinking in the spectacular sight.\n\nJohn knew that appearances could be very deceiving. He could well imagine the horrors being inflicted on the civilian population of Carolus III, but he couldn't bring himself to ruin the moment for Faye. Very soon he'd be immersed in that nightmare and he found himself desperate to cling to the false sense of tranquillity for just a few moments longer.\n\n***\n\nCalara sat motionless in the Combat Bridge, watching as the Invictus coasted into position at the outer limit of scanning range. Faye engaged their retro-thrusters and they flickered in short bursts to bring them to a halt.\n\n\"Initiating active scan!\" the purple sprite called out in warning, darting an anxious glance at the Latina. \"Shall I power up all our systems?\"\n\n\"Not yet,\" Calara replied, eyes fixed on the holographic representation of Carolus III and the swarm of sensor contacts lurking nearby. \"It might still take them a minute to locate us...\"\n\nThe seconds ticked by as the Invictus' sensors penetrated the Kirrix drone carrier's hull, detecting spikes in energy signatures and picking up teeming numbers of organic life. Faye stood by quietly, analysing every bit of data that returned, looking for very specific readings in that dense volume of information. \n\n\"No Terran life so far...\" she murmured, brow furrowing with concentration.\n\nSuddenly the engines at the rear of the drone carrier roared with an orange flame and the ochre capital ship began to pivot in their direction.\n\n\"Shields up!\" Calara ordered, her hand moving in a blur over her Tactical Console as she brought all the guns online. \n\nFaye blinked and the battlecruiser's shields surged into existence, appearing as a bright green oval around the ship on the damage control display. The Combat Bridge seemed to blaze into life as she activated all the ship's systems, consoles lighting up around them. \"Ten more seconds to complete the scan!\"\n\nCalara gripped the two weapon controls, the smooth ergonomic contours designed to be a perfect fit for her hands. Lining up the targeting reticle on the nose of the ugly alien ship, she squeezed the trigger on the right, activating the Nova Lances. Vast amounts of energy were poured into the potent weapons, but with the new Zero-Point Regulators easing the power drain, there wasn't so much as a flicker in the brightly illuminated Bridge. A seething nimbus of incandescent light gathered on the prow, gradually building in intensity as the seconds ticked by.\n\nThe battlecruiser was a stationary target and when the Kirrix opened fire with a salvo from their forward Neutron Beam battery, they hit with all ten weapons. The fire converged at a single point, sickly green columns of energy lashing the Invictus' shields. However, instead of rippling waves of light appearing in that shimmering dome, there was merely a slight undulation, the beam weapons robbed of much of their strength.\n\nGlancing at the shield status display, Calara couldn't help smiling with relief when she saw they had only dropped to 98%. The Brimorian Shield Generators made a dramatic difference in muting the effectiveness of enemy firepower and the newly installed shield matrix had almost doubled their previous shield capacity.\n\n\"It's clear!\" Faye called out as the scan completed, her expression brightening with relief. \"No Terrans aboard!\"\n\nCalara squeezed the trigger on her weapons control for a second time, unleashing the roiling orb of crackling energy that throbbed at the front of the ship. A brilliant beam of light struck the nose of the drone carrier, causing its shields to buckle in a blinding flash, completely overwhelming them with phenomenal firepower. The column then melted through armour and superstructure with impunity, taking only seconds to bore a 100m-wide tunnel through the length of the insectoid capital ship. When the Nova lance beam flickered out a few moments later, the alien vessel had been turned into a hollow tube, the interior glowing an angry orange from the heat of the blast.\n\nShe looked wide-eyed at the holographic targeting grid, studying the firing arcs of her weapons which had been redrawn since the upgrade. The cones for the Nova Lances still stretched out to triple the effective range of a standard Terran Beam Laser, but the new Tachyon Lances weren't far behind at double the length, despite the weapons only being a third of the size. The rest of the Kirrix fleet had begun to respond to their presence and Calara watched as the nearest drone carriers turned to engage, their attack vector bringing them into the overlapping fire arcs of the Tachyon Lances.\n\n\"Nothing like a live fire test on a battlefield,\" she said with a wry smile, before glancing at Faye. \"Can you show me cam footage of the forward starboard Tachyon Lance on the topdeck please?\"\n\n\"Here you go,\" Faye replied, walking down from the Command Podium to join the Latina. She projected the video on a holo-screen in front of the Tactical Console, showing the graceful barrel of the brand-new weapon as it swung to face the enemy ship.\n\nCalara lined up her shot, then pressed a button on the grip with her index finger, watching in fascination as light pulsed along the fluted length of the Tachyon Lance. A shimmering blue globe rapidly expanded in front of the muzzle, then blazed out in a dazzling sapphire spear of light. It was like watching the gathering of power for a Nova Lance, but the transition from the build-up of energy into the firing action was one fluid motion, with only a second delay before the beam was unleashed. It was elegant and beautiful to behold, driving home the fact that this was weapon technology created by a true master of the destructive arts, not the crude imitation she'd grown accustomed to. \n\nThe tightly focused beam slammed into the closest drone carrier's shields, causing enormous waves to undulate around the ship until the azure lance winked out a second later. Calara added another beam, then a third, pouring more deadly energy into the shuddering defensive field until the fifth Tachyon Lance melted away the last of its strength.\n\n\"Double the firepower and twice the range of a Photon Laser,\" Calara marvelled, darting a jubilant grin at Faye. \"Just imagine what the Nova Lances would be like if we upgraded them with that tech!\"\n\nThe purple sprite nodded, luminous eyes wide. \"Do you think Dana could actually make something like that?\"\n\n\"I'll have to discuss it with her, but knowing our illustrious Chief Engineer, she's probably had some ideas already,\" the Latina said thoughtfully, as she lined up the broad muzzles of the Singularity Drivers with the now shieldless drone carrier.\n\nCalara hit the thumb button on her left weapon control and launched a stream of hyper-accelerated slugs at the frantically turning capital ship. The rounds screamed across space, leaving faint blue trails of tachyon particles in their wake as they smashed into the port side of the vulnerable Kirrix vessel. It shuddered as though punched in the gut, a huge detonation erupting midway down its length. Shards of lacerated ochre armour were hurled out in a broad arc, the flames from the explosion and clouds of debris barely having a chance to disperse before the next Singularity Driver slug pulverised the weakened superstructure.\n\nThe rain of shells continued to slam into the stricken capital ship, battering it repeatedly and turning the initial blast crater into a yawning crevasse. Lights flickered out as a power regulator was blown to pieces, the drone carrier juddering in its death throes. Calara's fifth shot finished off the Kirrix behemoth, the thunderous impact rupturing its power core. Uncontrolled shafts of energy exploded outwards, piercing the hull in a dozen places, before a secondary detonation completely obliterated the ship in a huge blast wave.\n\nCalara wasn't paying any more attention though, as her eyes were now locked on the weapon loadout display. The five Tachyon Lances she had fired were all rapidly cooling, flux heat-exchangers chilling the glowing barrels and dissipating the excess heat. The red bars shrank as the temperature dropped, until the weapons in the display flashed green, signifying that they could be fired again. \n\n\"And a ten second cooldown,\" she noted with delight, her smile widening. \"I could kiss Dana!\"\n\n***\n\nSakura watched the weapon test in fascination and she hailed the Invictus as the second ship was methodically annihilated. \"Hey, leave some for me,\" she said cheerfully, as Calara's holographic face appeared before her.\n\nThe Latina laughed and glanced at the System Map. \"Don't worry, I left you a couple.\"\n\nThe rest of the Kirrix fleet had turned their way, thirty vengeful drone carriers disgorging a furious swarm of tiny drone ships. They quickly formed into attack wings, then peeled away and raced towards the stationary battlecruiser.\n\n\"I think I'll stay inside your defence grid,\" the Asian girl said warily, eyeing the hundreds of strike craft pouring out of the carriers. \"I don't fancy being chased around by hordes of angry fighters.\"\n\n\"Don't worry, I'll keep you safe!\" Faye exclaimed, appearing as a separate hologram. \"I've got most of my avatars manning the Invictus' Pulse Cannons!\"\n\nSakura gave her a grateful smile. \"Thanks, Faye.\" \n\nShe closed her eyes, focusing her will inward as she reached for the glacial cold that resided deep within her soul. The delicious chill took her breath away, sending a shiver down her spine as she tapped into her psychic gift. It was getting easier to channel her powers and Sakura's eyes glowed with a fierce light as she encased the four barrels of the Valkyrie's shoulder-mounted Tachyon Lances with ice, motes of frost swirling around the weapons.\n\n\"Take the ones on our port flank,\" Calara said, studying the map. \"But let me know when you need fire support.\"\n\nSakura narrowed her eyes as she aimed the targeting reticle at one of the pivoting drone carriers, the zoom function automatically activating as her target was at extreme range. She clenched her trigger fingers and opened fire with her quad guns, four dazzling shafts of light arcing out to hit the Kirrix vessel in the flank. Instead of the beams petering out after a second of sustained fire, those sapphire columns kept a continuous stream of devastating energy focused on the enemy ship, the eldritch cold keeping the barrels from overheating. \n\nIt took another second to completely strip the shields, then the blue spears of light struck the ochre hull and pierced straight through, spitting the capital ship like a stuck pig. Sakura tilted her hands back and the Valkyrie's sensitive controls responded, lifting the Tachyon Lance barrels and neatly slicing the Kirrix ship into two chunks. Lights on the front half guttered out and died, leaving it a darkened tomb, the only illumination coming from that glowing line of incision. The bank of engines were still on full thrust and the rear section smashed the front aside, barrelling wildly out of control. Sakura glanced at the Valkyrie's weapon loadout display and saw that the Tachyon Lances were ready to fire again, less than three seconds after eviscerating the drone carrier. \n\n\"I think I've got it under control,\" she said with a grin, twisting her torso so the mech turned to face the next closing capital ship. \n\n***\n\nThe Raptor descended through Carolus III's upper atmosphere, hurtling by wispy cirrus clouds as it raced towards the city below. \n\nFaye darted a worried glance at John as she brought up a holographic map of the planet's surface, an urban area known as Reitberg centred on the projection. Reitberg had a well-developed city centre surrounded by suburbs, but it was the Kirrix invasion force that drew John's attention. Ringing the populated areas were sixteen hive ships, the ugliness of the sinister alien vessels reflecting their vile purpose. However, the really disturbing sight was the massive ochre-coloured dreadnought which cast an ominous shadow over the Terran city below.\n\n\"What the hell is that thing?\" John asked pensively, eyes narrowing as he stared at the enormous Kirrix capital ship.\n\n\"I've no idea, John. We only just picked it up with our active sensors,\" Faye replied, activating another holo display displaying the unique insectoid ship. \"Calara's never seen anything like it either!\"\n\nHe pulled off his Paragon helmet and peered closer at the three-dimensional depiction of the colossal Kirrix vessel. It was nearly two kilometres in length, with rounded segments running the length of its distinctly alien design. There were long vanes sticking out from the forward section that looked vaguely like antenna and four strange iridescent panels swept out from the central hull reminding John of diaphanous wings. \n\n\"That must be what all the drone carriers in orbit are here to protect,\" he said, studying the unsettling Kirrix dreadnought. \"We need to take it down, but we can't have it crashing on the city...\"\n\n*Sakura's volunteering to engage it,* Alyssa interrupted.\n\n*Give her the go ahead,* he replied, before turning to look at Faye. \"Sakura's going to take it out, but I want you to do an active scan while she's on the way... we need to know if there are Terrans aboard that dreadnought. Proceed with the combat drops around the perimeter and fire at will on any hive ships that we haven't engaged yet.\"\n\n\"Aye aye, Admiral!\" she replied, giving him a sharp salute. \n\nHe smiled at her affectionately. \"Carry on, Watch Commander.\"\n\nShe grinned at him and waved goodbye, then John strode through the cockpit door and stepped into the crimson glow of the grav-tube. Descending to the lower deck, he turned right down the short corridor which led into the rear cargo compartment. The girls were all waiting for him there, five of them fully geared in their Paragon armour, and Jade in her soft cotton dress.\n\n\"You all heard about the dreadnought?\" he asked, as he walked over to join them.\n\nAs the girls nodded, Alyssa gave him a wry smile. \"From your lips to their ears...\"\n\n\"To our minds, surely?\" Rachel corrected her with a frown. \"You are keeping us informed by telepathy after all...\"\n\nDana nudged her girlfriend with her elbow. \"I think she was trying to be poetic, babes.\"\n\n\"Ah, I see,\" the brunette said, the twitch of her lips into a playful smile revealing that she'd been teasing their matriarch all along.\n\nAlyssa rolled her eyes. \"Yeah, they all know.\"\n\nJohn hit the button to lower the rear landing ramp. \"Watch for incoming fire from the dreadnought. We're probably too small to be tracked or targeted, but I don't want to take any chances. Faye's going to drop us around the perimeter, so we'll basically have three hive ships per team. Keep those vessels on the ground, rescue the colonists, kill all the Kirrix in sight. Any questions?\"\n\nThey shook their heads, resolute expressions on their beautiful faces. He beckoned them closer for a group hug and they gathered together, touching gauntleted hands to his shoulders. With his active connection to the girls, he felt closer to them than ever, and he closed his eyes to relish that moment of peace before the coming storm. \n\n\"Any problems, call for backup immediately,\" he said firmly, turning to look at each of them in turn.\n\nFaye appeared in a purple flash, her wings fluttering nervously. \"We're approaching the first drop point... ten seconds!\"\n\nThe rear ramp had swung fully open, so John made eye-contact with the twins and gave them a short nod. They peeled away, moving with confident strides to the gaping doorway. Faye levelled out the Raptor, bringing them in fast and low over the surface of Carolus III, fields and homesteads flashing by as they approached the outskirts of Reitberg. Spotting their Kirrix foe scuttling around the first hive ship like ants defending their colony, the Maliri sisters leapt out and were gone in a blink of an eye, plunging towards the enemy invaders.\n\nDana and Rachel moved into position next, checking each other's Reaper Cannons to make sure they were securely fastened to their Paragon suits.\n\n\"Ten seconds!\" Faye called out again, watching her friends with a worried frown.\n\nDana turned to look at John. \"Thank you for this. I promise I won't make you regret it.\"\n\n\"If Rachel pulls you out, no arguments,\" he sternly reminded her.\n\n\"Don't worry, I'll be okay.\" The redhead grinned at her lover. \"We're going to be too busy saving people from bad guys to get freaked out.\"\n\nRachel shared a smile with Dana, then her grey eyes flicked to John, the brief look confirming that she knew his main priority. The pair turned and ran from the ramp, Dana's whoop of exhilaration cutting off as she dropped out of sight, the Raptor racing onwards. \n\nAlyssa strolled over to the ramp next, looking calm and fearless. *I haven't forgotten... I'll keep you in the loop for everything. You'll be making all the command decisions.* \n\nJohn felt his heart in his mouth as he saw the blonde standing there. She was about to make a solo combat drop into Kirrix occupied territory, outnumbered thousands to one. The sheer insanity of the situation he found himself in almost took his breath away. *Be careful!* he said urgently. \n\n*I'm a Progenitor,* she said with a lopsided smile. *Total annihilation of our enemies is just another day on the job.*\n\nShe blew him a kiss, her eyes darting to Jade for an instant before she turned and ran, taking a swan dive off the lowered ramp. John rushed to the doorway, watching her white-armoured figure swooping down, already looking tiny and helpless compared to the mass of teeming ochre forces on the ground. He saw the thrusters on her back flare a golden yellow as she activated flight mode, Alyssa executing a graceful controlled dive towards the Kirrix hive ship below. ",
        "Faye banked the Raptor sharply around, heading for the fourth drop location in the alien encirclement of the city. A forest of sickly green beams flashed up towards the Raptor, the invaders desperately trying to shoot down the gunship as it roared overhead. The crackling columns of energy sailed hopelessly wide, the neutron beam batteries never designed to track something moving so fast. \n\n\"Next drop point in ten seconds!\" Faye warned them.\n\nJohn spotted more green out of the corner of his eye, but this was a far more pleasing shade, reminding him of a tranquil forest steeped in shadows. Jade stood beside him and gently traced his jawline with her dark-green fingers, her shining eyes drinking in every detail of his troubled face. She leaned in and kissed him passionately, silencing the plea for caution on his lips. When the Nymph pulled back, she slipped the dress from her shoulders and threw it back into the Raptor. Despite her standing there gloriously nude, he could only stare into her enchanting emerald eyes as she gazed at him intently. \n\n\"You just have to believe...\" she urged him, her body starting to shimmer in a verdant haze.\n\nJade backed away, keeping her eyes locked with John as she let herself fall from the Raptor. He watched as she plummeted towards the ground, her form growing larger by the second. Suddenly the blurry outline snapped into sharp focus as a creature from myth and legend dominated the skies above Carolus III. The Jade dragon tucked her wings in tight, her sleek aerodynamic form diving towards the insectoid army below. \n\n\"Please be careful, John,\" Faye begged him as she stepped up to his side, her elfin face fraught with worry. \"I don't know what I'd do if something happened to you.\" Her cupid bow lips twisted into a strained smile. \"Other than subjugate humanity of course...\"\n\nHe couldn't help laughing and gave her a look filled with gratitude for lifting his mood. \"I love you, Faye. Help take care of the girls for me.\"\n\n\"I will,\" she promised, her expression turning joyful. \"And I love you too!\"\n\nJohn glanced down at the city flashing by below. \"I guess this is my stop.\" \n\nHe inhaled deeply and launched himself from the Raptor, closing his eyes as he focused himself for the fight to come. When he opened them again, his view of the city was suddenly filled with ochre hued enemies scurrying across the ground, the Kirrix herding their terrified victims into the hive ship. John's eyes flared with a blazing blue fire... it was time to do what a Progenitor does best. \n\n***\n\n\"Full reverse, Faye!\" Calara requested, glancing at the mass of sensor contacts closing on her position. \n\nHer eyes flicked to the left on the Tactical Map, watching the Valkyrie racing towards Carolus III's upper atmosphere to intercept the Kirrix dreadnought. Scores of drone fighters shifted course, peeling away from the main swarm to pursue the mech instead. As much as Calara wanted to help Sakura, she had more than enough on her own plate to deal with; the Invictus now stood alone against the remaining twenty-seven massive capital ships. \n\nFaye cast a wary eye at the approaching Kirrix armada. \"Maybe I should just turn around? We'll get away much faster!\"\n\n\"No, not yet,\" the Latina replied, twisting the controls to aim at the next set of targets.\n\nCalara's slender fingers danced over the weapons controls, reminding her of the hours she spent practicing the piano when she was a child. Instead of clear musical notes, her complex sonata produced a stream of ferocious blue beams that systematically stripped the leading drone carriers of their shields. The Singularity Drivers fired continuously to take advantage of that vulnerability, the only lulls in the carnage when the Invictus swung its bow about to point at the next capital ship marked for destruction.\n\nSuddenly Faye hissed, \"Calara! We've got company!\"\n\nThe Latina's eyes darted over the Tactical Map in alarm. \"Where?!\"\n\n\"Behind us,\" the purple sprite whispered, staring up the ramp towards the armoury that overlooked the Combat Bridge.\n\nCalara glanced at Faye then twisted in the Tactical chair to see what she was looking at. The flash of light green hair drew her attention to the armoury window, where she locked eyes with Helene's baby-blues, the beautiful teal-skinned girl staring back at her in fright. \n\nThe Latina darted a worried glance at Faye. \"What do we do? John doesn't want Helene exposed to combat!\"\n\n\"You take care of the Kirrix, let me handle this,\" Faye replied, patting her reassuringly on the arm, before bounding up the ramp towards the aquatic girl.\n\nHelene looked anxious as she rose from her hiding spot crouched behind the window. \"I'm sorry, Faye, I just wanted to see what was happening. With John and the girls in danger, I can't stop worrying about them...\"\n\nFaye hesitated, knowing all too well the feelings that the teal-hued girl was describing. \"I do sympathise, it's horrible being left to worry when your friends are in danger... but John doesn't want you involved with the fighting.\"\n\n\"But I won't be fighting!\" Helene pleaded in a rush. \"I could just watch them on the little screens there... then I'll know they're okay.\"\n\nTurning to look back down across the Combat Bridge, Faye saw the bank of holo-images that showed the helmet camera footage being broadcast from John and the girls. \"I don't think that's a very good idea...\"\n\n\"Please, Faye,\" Helene begged her. \"I promise I won't be any trouble and I won't get in the way.\"\n\nThe elfin girl nibbled nervously at her lip. \"Okay... but only for a few minutes. I don't want you watching when they board the hive ships. Alright?\"\n\n\"Oh, thank you so much!\" the aquatic girl gushed, hugging Faye tight.\n\nCalara had heard most of the exchange and she glanced back at Faye with a raised eyebrow. Faye gave her a helpless shrug, then took Helene's hand and escorted her down to the Security Station.\n\nThe Latina watched with concern as their guest sat in Sakura's seat in front of the bank of holo-screens. *Alyssa... Helene's here on the Combat Bridge, she's watching all of you fight. Is John alright with this?*\n\nThere was a long pause, then the blonde replied, *He said to let her stay. I think he's trying to change her mind about fighting alongside us, but don't let her see the infested colonists, okay?*\n\nCalara watched Faye hovering protectively beside the aquatic girl. *Don't worry, Faye's looking after her.*\n\n***\n\nTashana had already tapped into her inner flame by the time she landed on the Kirrix vessel and tiny fire sprites were playing chase around her curled fingers. From her vantage point atop the hive ship, she had a clear view of the scene of Terran misery below, where Kirrix troops herded the terrified civilians towards the bowels of the monstrous ochre craft. Those prisoners all knew that the hideous alien spacecraft was to be their grave. \n\nShe glanced at her twin as Irillith landed beside her. \"Rill, can you cripple the hive ship? I want to free those people.\"\n\n\"Your will be done, Revered Leader,\" Irillith said with mock deference, her violet eyes starting to glow with a bright inner light.\n\nThere was a crackle of ozone in the air as Irillith held her arms apart, writhing electricity arcing down from her shoulders to dance across her fingertips. She channelled her will, pouring more of her psychic might into that gathering of elemental forces, until seething coils of lightning whirled chaotically around her. Dropping to one knee, she touched her hands to the armour plating, the discharge of such colossal amounts of energy marked by a deafening peal of thunder. A jagged stroke of lightning scorched system after system throughout the Kirrix vessel, culminating in several violent explosions as power regulators overloaded. The hive ship shook violently with those detonations, then went dark and still as the tremors subsided, smoke belching from gun ports across the blackened hull.\n\nTashana faced the Kirrix troops who had stopped what they were doing to stare up at the smoking hive ship in astonishment. Flame sprites leapt from her open palms, growing larger as they capered in circles around their creator, holding hands and giggling together. The Maliri pyromancer made a pushing motion with both hands and the dozen fiery elementals sprinted across the upper gundeck before leaping fearlessly from the edge. \n\nThe Kirrix saw the flaming figures plunging towards them and raised their neutron rifles, sending a hail of green bolts towards the orange sylph-like females. The few shots that managed to hit zipped harmlessly through the burning sprites, mundane weapons incapable of disrupting those eldritch spirits. The fiery girls landed in graceful rolls, then bounced to their feet and used the momentum to flip into cartwheels. They rolled through the crowded plaza below, their path running along either side of each line of Terran prisoners. \n\nThe civilians cried out in terror, huddling to the ground to escape the flames, but the elementals never so much as touched the mass of humanity. Unfortunately for the Kirrix, they weren't so lucky, the blistering heat incinerating the insectoid soldiers where they stood. Each acrobatic flame sprite left an infernal wall of fire in their wake, the flames roaring with an insatiable hunger and scorching all in their path. Hundreds of Kirrix troops staggered around, their armour wreathed in flames as they were cooked to a crisp. Amongst that nightmarish field of fire, Kirrix Juggernauts skittered away from the flames, long black legs desperately scrabbling backwards to keep themselves from being roasted alive.\n\n\"They look a little hot under the collar,\" Irillith said with a smirk, standing beside her sister as she swung the long barrel of her Reaper Cannon towards the plaza.\n\nTashana drew her pair of Reaper pistols and aimed at the black carapace of a retreating Juggernaut. \"They've had a busy day. I think they need to rest... in pieces.\"\n\nIrillith laughed and glanced at her twin. \"Wasn't that from 'Kirrix Wars IV: Call the Exterminators'?\" \n\n\"It seemed appropriate...\" Tashana replied with a grin.\n\nThe Maliri sisters opened fire, bright blue streams of laser bolts streaking out to hit the huge Kirrix monsters. The bolts blasted through that thick black plating, the Juggernauts letting out shrill screams as they were struck dozens of times, their thick chitinous armour pockmarked with glowing holes. \n\nIrillith's eyes narrowed as she held down the trigger on her Reaper Cannon, aiming her shots at a Juggernaut's thrashing head. It bucked and thrashed under the onslaught, a bolt hitting it in the eye and leaving a melted ruin in its place, while more of the salvo burnt sizzling furrows through its brain. The hulking monster feebly tried to raise its claws in a final act of defiance, but it stumbled and crashed to the ground, twitching violently in its death throes.\n\nTashana swept her stream of laser bolts around the second thrashing Juggernaut, blowing apart its four legs in a vicious azure hail. Brutally dismembered, it toppled over on its side, flailing claws desperately trying to drag its quadriplegic form away from the sizzling wall of fire that crept inexorably towards it. The Maliri pyrokinetic moved on to the next target, leaving the crippled monster to feed her flames.\n\nThe twins made short work of the surviving Juggernauts and soon every last Kirrix was reduced to an immolated corpse, their smouldering exoskeletons popping as they cooled. The flames burned themselves out at Tashana's command and the civilians gaped at the charred hellscape surrounding them. The once terrifying alien horde had been incinerated to a bug, with palls of greasy black smoke spiralling skyward from their funeral pyre. The Terran prisoners looked around in wonder for their saviours, but the pair of Lionesses had already moved onward to the next hive ship, soaring high on pillars of golden flames.\n\n***\n\nThe second Paragon suited fire-team landed at the same time on the curved back of a hive ship, with Rachel immediately reaching for her Reaper Cannon. They were on the edge of a broad marketplace, fruit and vegetables scattered haphazardly around toppled stalls, evidence of the terror instilled in the citizens of Reitberg when the Kirrix had invaded. She darted a pensive glance at the long lines of prisoners being herded towards them like cattle and could see their broken spirit in the way they shuffled forward, all hope lost as they surrendered to the inevitable. \n\n\"How can they treat people like that?\" she wondered in an appalled whisper.\n\n\"They're just an evil bunch of fuckers...\" Dana muttered under her breath, the coronas around her pupils blazing with a fierce golden light as she focused her will. \"Just the worst scum in the galaxy... we're doing a good thing putting these shitheads down.\" \n\nThe brunette looked at her girlfriend with concern. She could hear the flicker of uncertainty in the redhead's voice, almost as if she were trying to convince herself that her actions were fully justified. \n\nRachel stopped closer to Dana, placing a comforting hand on her shoulder. \"Absolutely. They're the vilest of depraved monsters,\" she agreed, her voice gentle and reassuring. \"And those poor people are innocents... they're good, kind-hearted souls who never deserved to suffer like this. Can you save them?\"\n\n\"Those fucking bugs are gonna pay!\" Dana snarled through clenched teeth, eyes narrowing with barely suppressed fury.\n\nHer gauntleted fists were surrounded with a pulsating golden light, which seemed to shine with an ever-greater intensity as the seconds rolled by. She raised one clawed hand towards the ranks of Kirrix troops, long arcing lines forming on the ground around the prisoners, the golden curves appearing like the gradients on a topographical map. The lines were closest together by the civilians, then spaced out as they reached their insectoid guards. \n\nA disconcerted chittering filled the air as the Kirrix troops began to waver, stumbling backwards as the metal in their weapons and armour was repulsed by powerful magnetic fields. The Juggernauts were unaffected, their shiny black carapaces made from incredibly tough chitin; they could only look on with confusion, unable to comprehend what was happening to the smaller drones. Dana intensified the strength of the magnetic fields she'd created in the marketplace, then crouched down with her second hand outstretched, the nimbus of power around her gauntlets growing ever brighter. She touched the beige surface and rippling waves surged out over the armoured hull, buckling and twisting armoured plates in their wake.\n\nRachel waved her arms in the air to keep her balance on the vibrating ship, the tortured groan of metal filling the air. \"Woah! What's happening?!\" she called out in alarm.\n\nThe quaking intensified and the groan from the stern of the ship became a shrill shriek, engine exhausts contorting under the pressure from the massive forces at work. They collapsed inwards as though a giant had crumpled them with a contemptuous twist of its colossal hand.\n\n\"Nearly there...\" Dana murmured, ramping up the strength of the magnetic waves she was pouring through the hive ship's hull. She could feel the metal in that reinforced armour and the way it was responding to her psychic manipulation. \"Just got to keep the field contained a little longer...\"\n\nThe brunette stumbled as the armour plating she was standing on twisted violently. Giving up trying to stay upright on the quaking hull, Rachel activated flight mode so that she could hover a foot above the trembling surface. She glanced off to her left and her breath caught as she saw the flanks of the hive ship bulging ominously, the grating squeal of snapping beams bringing the cacophony to a deafening crescendo. \n\nA section of the hull exploded outwards, armour plates disintegrating in a storm of metal flechettes. Those razor-sharp chunks careened off the magnetic barriers protecting the civilians, bouncing back and forth between each group and lacerating the aliens caught in the middle. A jagged shard two-metres across whipped through the Kirrix ranks, sawing a drone's legs off and sending the severed limbs flying. More segments of the ship erupted, unleashing a metal storm on the cowering Kirrix troops and tearing them to pieces. \n\nThe terrified colonists huddled together, watching wide-eyed as their tormentors were sliced to ribbons. The exploding outer shell of the hive ship cleared away the Kirrix drones with the efficiency of a shotgun blast, leaving a sticky pool of viscous green blood slopping over the carpet of severed limbs. Even the Juggernauts staggered under the onslaught, dozens of metal chunks embedded in their thorax and abdomen. \n\n\"And you didn't hit a single colonist...\" Rachel marvelled, staring out over the charnel house surrounding the hive ship. \n\nThe prisoners were still crouched down on the ground for safety, but now that the terrifying metal hail had abated, they were starting to realise that it had only targeted their captors. Lifting their heads up to look around, the civilians could only gape in astonishment at the denuded hive ship and the eviscerated remnants of the Kirrix forces. Rachel lowered the barrel of her Reaper Cannon to aim at one of those tottering Juggernauts, lighting up the mangled beast with laser fire.\n\nDana surveyed her handiwork with satisfaction as she joined her girlfriend in mopping up the crawling survivors. \"Why can't all our fights be like this?\" she asked, blasting fist-sized holes through the screeching Juggernaut. \"They're evil bad guys, so it's our job to kill them... and it feels great!\"\n\nThe brunette nodded, watching as the huge black insect she was shooting at was chopped in half by her stream of blue laser bolts. \"You're right... it's nice not having to deal with any moral ambiguity,\" she agreed, looking for her next target. \n\nRachel darted a quick glance at Dana and studied her carefully, but the redhead appeared to be calm and composed as she gunned down another Juggernaut. Relaxing, the brunette picked out another target of her own, this one impaled to the ground by a long spear of twisted metal. As she zoomed in on it with the Reaper Cannon's targeting scope, the sun glinted off its shiny onyx carapace, catching her eye. That sent her mind spinning and she couldn't help thinking what it would be like to be aiming at another black-armoured foe... but one not nearly so hideously alien. Could they be so dispassionate firing on altogether more familiar opponents? Ones that were in fact only a distant cousin to humanity?\n\n*Let's not dwell on that for now,* Alyssa said quietly. *And please keep those thoughts to yourself for the moment, okay?*\n\n*Don't worry, I understand what's at stake,* Rachel replied, her expression sombre as she joined Dana in shooting glowing holes through the last of the Juggernauts. *We need to prepare for the battle to come... we can't rush him into it.*\n\nAlyssa let out an anxious sigh. *I know.*\n\n***\n\nHelene's eyes darted from screen to screen, unable to believe what she was seeing. She paused to stare at the footage from Alyssa's helmet camera, watching in awe as the blonde unleashed her wrath on the horde of alien invaders.\n\nThe blonde's gauntleted hands were held out before her, eldritch vortexes hurtling around her splayed fingers. Alyssa looked down into the packed courtyard below, then clicked her fingers and pointed towards the massed squads of yellowish-brown insectoids who were jostling Terrans towards their ship. All about them a glowing phalanx of weapons formed in the air, the telekinetic blades glinting ominously in the sunlight. They began to spin, whirling like buzzsaws as they carved a gory path through the Kirrix, hacking the shocked aliens apart in an orgy of bloody retribution. ",
        "Alyssa glanced at her Reaper Cannon next, ghostly translucent hands holding the white gun as it floated in the air. The long-barrelled weapon opened fire, the muzzle alight with staccato blue flashes, tilting back and forth as it unloaded a stream of laser bolts into the savagery below. Paying no more attention to her psychic creations, Alyssa stalked towards the rear of the hive ship, hands reaching out to tear and destroy. With a savage upward jerk, she ripped the massive engine housing from the stern in a shower of sparks and mangled metal. \n\nThe 40-ton propulsion system hung in the air for a moment as Alyssa looked to her right, her clear-crystal faceplate darting back and forth until she found a suitable target. There was a flash of movement from the left as the hive ship's engine was launched skyward, then it smashed into the ground, crushing a Juggernaut to death and spraying green blood in a broad arc. The battered engine ploughed a deep furrow in the ground, demolishing a score of helpless Kirrix drones until it finally came to rest. The camera bobbed as Alyssa nodded with satisfaction, then she turned to rip away a second engine, needing more ammo for her telekinetic trebuchet.\n\nThe remaining two engines quickly followed the first, splattering a couple more Juggernauts. Alyssa stepped gracefully off the side of the hive ship, floating down to ground level with her Reaper Cannon taking care of the final black-carapaced survivor. Alyssa paid it no attention, her focus on the psychic energy swirling around her hands, the blonde still tapping into her formidable reserves of power. Crouching down, she thumped the ground with a fist, sending a pulse of light outwards that seemed to disappear through the hull of the hive ship.\n\nAlyssa backed up a couple of paces, staring at the hull as if looking for something. She seemed to find it, because she turned abruptly, jogging towards a section of the hive ship's underbelly to her left. Raising her clenched fists again, she cut loose with a dazzling beam of incandescent light that was so bright, it hurt Helene's eyes to look at it. The aquatic girl blinked as she saw spots before her eyes and as soon as they had faded, she quickly looked back to see what was happening next. \n\nThe Reaper Cannon was still blazing away, but now it was firing into a huge rift that Alyssa had blasted through the side of that yellowish-brown hull. The cannon finally stopped firing for the first time since the fight started, bright blue flashes no longer reflecting off the clear facemask. Helene wondered what was happening for a moment, then Alyssa's fell legion of telekinetic blades stormed through the breach in the hull, shrill Kirrix death shrieks starting only a few seconds later. \n\nAlyssa turned back to survey the courtyard, her eyes flicking from one pile of butchered Kirrix corpses to the next. The only living creatures left were the terrified civilians, who had watched what seemed to be magic weapons pop out of the air then hack apart their Kirrix captors. They clearly recognised Alyssa as a Lioness, but the psychic energy whirling around her made them pause, not knowing what to make of this supernatural sorceress. It was quite clear to them that Alyssa was the creator and owner of those wicked telekinetic blades, and the crowd hesitated, torn between their desire to thank her or flee for their lives.\n\nThat suited Alyssa just fine and she activated flight mode, lifting off the ground. \"You guys are free to go, but if you have friends or family inside this ship, they'll be out in a couple of minutes.\"\n\nThe civilians just gaped at her in astonishment, returning her cheerful wave with bewildered ones of their own.\n\n*And that's how it's done...* Alyssa said to Helene, knowing she had an audience.\n\nHelene could scarcely believe what she was seeing. The girls had all been so gentle and caring with her, but seeing them in action like this, she couldn't help but be shocked by the unrestrained violence they were visiting on their enemies. Darting a furtive glance at Calara, she watched as the kind-hearted Latina used the Invictus' incredible firepower to rain down death and destruction on the approaching Kirrix vessels.\n\nCalara began by coring through one huge insectoid ship with a Nova Lance blast, while simultaneously blowing a second to pieces with Singularity Driver slugs. The Invictus was performing a slow roll as it reversed, so the drone carriers attacking from the flanks were intercepted by an unrelenting barrage of Tachyon Lance salvos. Two more capital ships were ripped apart, one efficiently carved into glowing chunks, the second blown to pieces in a colossal explosion as the Power Core went critical.\n\nHelene suddenly realised she was being watched and turned to see Faye studying her with those big luminous eyes.\n\n\"Everything alright?\" the elfin girl asked quietly.\n\n\"How many aliens live on each of those spaceships?\" Helene whispered, her gaze drifting back to the Tactical holograph, almost dreading to know the answer.\n\nFaye flicked a glance to an ochre-hued drone carrier as it shuddered and broke apart, Singularity Driver rounds battering it into submission. \"At least ten-thousand per vessel,\" she replied, a flicker of regret crossing her elfin face.\n\nHelene's mouth dropped open in shock, the sheer numbers of dead were almost more than she could imagine. She suddenly realised that every time one of those strange ships exploded, she was watching the extermination of what would be the equivalent of several villages of her people.\n\n\"Maybe this was a bad idea,\" Faye said with concern, seeing the growing horror in Helene's eyes.\n\nThe aquatic girl shook her head, turning to look back at the bank of holo-screens. \"No, I need to see John and the girls in battle. I owe it to them to watch what they have to do to protect everyone...\"\n\n***\n\nJohn dropped from the sky, the light blazing in his eyes burning brighter than the thruster on the back of his Lion armour. The runes on his sword matched that dazzling sapphire light, shrouding the blade in an aura of eldritch power. Hurtling to the ground like a meteor, he landed amidst the ranks of Kirrix, the blastwave from that impact sending scores of insectoid soldiers cartwheeling through the air. \n\nHundreds of compound eyes swung around to stare at the smoke-filled crater, weapons raised to deal with this threat from the heavens. Before they could open fire, John charged out of the billowing clouds, his two-handed sword whistling around in a curving slash. Runes flared all the brighter and a glowing wave of force erupted outwards, hurtling across the open plaza and sweeping all before it. Whole squads of Kirrix were smashed dozens of metres into the air, their six limbs flailing wildly until they hit the ground in a series of sickening crunches. \n\nOne of the Juggernauts stabbed down with its dual claws, impaling the ground to stop it being smacked away like a bowling pin. John lunged forward in a blur, his blade arcing down in an overhead chop that sliced the hulking creature in half from temple to abdomen. Its unearthly features registered its shock as it slowly split apart, green ichor running in a stream down its sundered onyx torso.\n\nMoving in short bursts, John zig-zagged his way through the horde, leaving a trail of utter devastation behind him. He blasted the Kirrix from his path with broad telekinetic waves of force, insectoid troops hurled high into the air, only for them to rain down in broken twitching heaps. John bore down on the next group, but he hesitated as he was about to launch another wild blastwave of raw power. He concentrated hard on tightly narrowing the projection of his will and when he next whirled the blade around, the corresponding telekinetic wave appeared as a razor-edged arc. Slicing through everything in its path, it neatly disembowelled every Kirrix in a ten-metre-wide channel, until it crashed into a building on the far side of the plaza in an explosion of rubble.\n\n*I always knew you could do it, Master!* Jade congratulated him, no mistaking the elation in her voice. \n\n*You were right, I just had to believe it would work,* he marvelled, scything down another swathe of Kirrix.\n\n*John, I'm not giving you any power...* Edraele murmured, shocked at the destruction he was unleashing completely unaided.\n\n*The runes on the blade... they act as a focus,* John explained, charging towards the next group and hacking them down with another arc of force. *They amplify the psychic energy I'm channelling into the blade!*\n\nHe paused and looked around him, realising that there was nothing else left standing in the entire courtyard. The Terran prisoners huddled fearfully on the floor, staring in shocked silence at their saviour as he surveyed the broken piles of Kirrix troops. \n\n\"You're free now,\" he said to the prisoners, the amplifiers in his suit broadcasting his calm instructions so that they could be heard by everyone there. \"Get to safety and wait for the Terran Federation relief force, they'll be here within the hour.\"\n\nThe civilians slowly straightened, looking around them in astonishment at the mangled insectoid wreckage. The lines of parents and children quickly merged, families clinging to each other as they were reunited, sobbing with a mix of joy and relief.\n\nOne of the men stepped forward, his expression twisted with anguish. \"My brother and his wife... they were captured yesterday.\" He pointed a shaking finger at the hive ship, its engines starting to glow as the Kirrix prepared to evacuate. \"They were taken... in there!\"\n\nJohn turned to look at the retreating Kirrix vessel. \"Don't worry, they're not going anywhere. We'll free everyone once we've grounded all the hive ships.\" \n\nHe activated his Paragon suit's flight mode and anti-gravity generators lifted him off the ground. The thruster on his back blazed a golden yellow and launched him up towards the rear atop the Kirrix hive ship. \n\nAs John sailed aloft, the runes on his sword starting to pulse as he channelled his will. *Edraele, start feeding me power...*\n\n*Yes, my Lord,* she said softly, responding with an undercurrent of excitement to his authoritative tone.\n\nCrackling arcs of electricity began to appear around his Crystal-Alyssium blade, starting with tiny sparks that danced erratically along its length. They quickly ramped up into a seething torrent, the caged bolt of lightning lashing furiously in its impatience to break from the confines of the sword. John touched down at the stern and plunged his blade into the ochre hull, unleashing that deadly stroke of lightning into the Kirrix vessel. The ship was rocked by explosions, the engines dying out in a pathetic whine as they were robbed of power.\n\nFaye's holographic face popped into existence on his HUD. \"John! I've just finished scanning that dreadnought!\"\n\nHe turned and looked out over the city at the vast Kirrix capital ship that loomed above the centre. It was firing a blistering forest of green beams seemingly randomly into the sky, but his HUD picked up the Raptor amongst that chaos, zooming in on the gunship as it banked and swayed to avoid the energy blasts. A bright blue line blazed out from the tiny white craft and John squinted as he followed that incandescent beam down to a landed hive ship. The beam swept through the landed vessel like a Tachyon-powered guillotine, Faye neatly cutting away the rear third and grounding it permanently.\n\n\"Any prisoners aboard?\" he asked, his gaze flicking back to the ochre dreadnought, which was frantically firing a hail of neutron bolts at the Raptor from its defence grid.\n\n\"Thousands of them!\" she urgently replied, her anguished expression matching his own.\n\n***\n\nJade felt the wind rushing past her face, her emerald eyes narrowing to slits as she whistled through the air. As much as she loved her Nymph form, the ability to fly was so exhilarating, a precious gift that she'd never be able to repay John for. Jade would happily spend hours savouring the heady thrills that aerial acrobatics could offer, but right now she had an important job to do.\n\nFlexing the powerful muscles in her shoulders, Jade's massive wings snapped open. The leathery surfaces pulled taut and acted like an air brake as they arrested her fall, Jade clenching her jaws at the savage jerk when her wings were fully extended. Her huge lower body swung down, fore and rear claws bared as she pulled out of her headlong dive, swooping towards the invaders. She landed on the back of the Kirrix vessel, armoured plates crumpling under the full weight of her massive draconic form. \n\nThe booming crash was followed by the grating squeal of metal as her extended claws dug into the armour plating protecting the hive ship's engines. Muscles bulged under her scaly hide and Jade wrenched the upper engine off its mount, lifting it high above her head before hurling it down on the two engines below. One of them was smashed clear, while the other bent at an odd angle, noxious smelling liquid pouring from the ruptured fuel lines.\n\nThe dreadful noise drew everyone's attention, Kirrix and Terran alike looking up at the massive dragon in shock. Jade inhaled deeply, then let out a throaty roar, the defiant challenge reverberating endlessly across the grassy field below. Her audience froze in place for a moment, then the fear kicked in... and the Terran civilians fled screaming from the trampled park, ignoring the insectoid captors in their desperation to escape from a far more terrifying monster. \n\nThe Kirrix let their prisoners go, their attention now on the enormous jade dragon snarling at them atop the hive ship. They opened fire with their neutron rifles, hundreds of green bolts hitting her verdant hide, but they weren't powerful enough to damage those resilient scales. Jade's emerald eyes watched men, women, and children running for their lives, the petrified civilians wailing in fear as they fled. Her huge jaws lifted into a toothy grin of satisfaction as the park was quickly cleared of Terrans, leaving only the Kirrix behind to face her.\n\nLeaping off the hive ship, she landed with surprising agility, gouging long furrows in the ground as she skidded to a halt. The Kirrix drones kept up their hail of neutron bolts, while several overseers fired heavy weapons at their draconic foe, rockets corkscrewing through the air before exploding against her chest. Those detonations actually hurt and the Nymph flinched at each blast, trying not to let them ruin her concentration. Gathering her will, she could feel her vast reserves of psychic power bubbling under the surface, almost begging to be unleashed.\n\nOpening her huge maw, energy crackled around her fangs, building into a pulsating nimbus of light. She let loose a searing beam of pure destructive force, the terrible blast vaporising everything it touched as she swept it across the park. Nothing was spared from that blistering shaft of eldritch power, with trees, drones, overseers, and juggernauts obliterated as she continued to feed more energy into her breath weapon. When her long scaly neck had finished its methodical sweep, the Kirrix had been completely scoured from the park. \n\nJade's wings snapped open again and began to beat in the air, lifting her off the ground as she turned to seek the next hive ship. Her reptilian eyes caught movement high in the sky above her as a white humanoid figure dropped through the scudding clouds, followed by a deluge of green neutron bolts from the squadrons of drone fighters in hot pursuit.\n\n*Sakura's under heavy attack!* she called out in warning to John. *Do you want me to assist?*\n\n*Alyssa's checking with her, stand by,* he replied, his tone firm and in control.\n\n***\n\nSakura grimaced as she saw the mass of Kirrix drone ships in hot pursuit, the ochre fighters finally able to catch up to her when she slowed the Valkyrie's descent for atmospheric entry. A storm of green energy bolts zipped around her and she used the retro-thrusters in the mech's limbs to perform evasive manoeuvres. Unfortunately, she was being chased by nearly a hundred enemy fighters and there was no way she could dodge that much incoming fire. Despite her best efforts the mech was taking dozens of hits, green bolts pouring into the Valkyrie's shields.\n\n*Are you alright?!* Alyssa asked in alarm. *Jade said you've got drones all over you!*\n\n*I'm being chased by several squadrons!* Sakura replied, frantically jinking the Valkyrie. *Just a second!*\n\nThe Asian girl glanced at the shield display, bracing herself for the worst. Her eyes widened in astonishment when she saw that the shields were still a healthy bright green, the digital reading for the field strength showing as 100%. \n\n*I think my damage display might be broken!* Sakura exclaimed, squinting at the shield status. *I'm not losing any shield strength from all these hits! I had Brimorian shields against the Kintark, but their fighters were still able to wear me down!*\n\nThere was a momentary pause, then Alyssa burst into laughter, the melodic sound filled with equal parts amusement and relief. *Dana says it's because you've got a shield matrix installed now as well. The damage reduction effect is even stronger, plus those Heavy Neutron Guns don't hit as hard as the Kintark Heavy Plasma Guns. They can't even hurt you!*\n\nSakura grinned and stopped dodging, twisting her torso so that the Valkyrie was now facing its tormentors as it fell backwards towards the planet. The shoulder mounted Pulse Cannons had been firing non-stop, steadily picking off drone fighters in a stream of blue laser bolts, but there were still scores more on her tail. She disengaged link-fire on the Tachyon Lances, changing the setting so that the weapons would fire in sequence instead. \n\nGlancing at the first drone craft, the optical targeting system nudged the barrels to aim at her designated target, the reticle predicting the fighter's movements. Sakura pulled her trigger finger, then strafed the brilliant azure beam across the ochre ship, instantly disintegrating it. Keeping the trigger down, she swept the continuous stream of beams across the Kirrix drone, each Tachyon Lance firing for a full second before winking out to cool down, the next in the sequence firing in its stead. \n\nIt took Sakura a little over twenty seconds to sweep the sky clear of her pursuers, picking them off one after another. It actually reminded her of playing Dot to Dot as a child, but this time her crayons had a really nasty bite to them. Sakura twisted her torso again, angling the Valkyrie towards the rapidly approaching bulk of the Kirrix dreadnought. \n\n*All done! Tell Jade not to worry, I'm safe,* the Asian girl replied, tilting her mech so that she was on a collision course with the rear of the monstrous alien mothership. *Did Dana have any suggestions on how to take this thing out?*\n\n*Keep blasting engines and retro-thrusters until it starts falling out of the sky, but not too much, or you'll risk killing the prisoners if the impact is too severe...* Alyssa replied, sounding tense. Her voice softened as she added, *She makes it sound easy, right?*\n\nThe dreadnought finally seemed to have picked up the incoming mech as a threat, because it began firing over fifty neutron beams at her from its upper gun batteries. Most of the shots sailed harmlessly wide, but in that bewildering lattice of green energy beams several of them managed to hit home. The Valkyrie's shields reacted violently to the impact, broad waves sending ripples across the entire surface of the dome. Likewise, the shield strength display dropped through an alarming array of colours until the cheerful bright green was replaced by a murky-looking yellow\n\nSakura snorted as she executed a hard burn with her retro-thrusters, the Valkyrie landing on the topdeck of the Kirrix Behemoth with a booming clang. *Yeah, piece of cake...*",
        "***\n\nCalara watched as the first wave of Kirrix drone fighters hit the leading edge of the Pulse Cannon firing arcs. Faye opened up with the Invictus' defence grid, sending an unending sheet of blue laser to intercept them. The alien strike craft were rapidly blown to pieces, leaving a sea of glowing debris behind the battlecruiser as it continued to reverse course. \n\nThe Kirrix drones were desperately trying to dodge that azure onslaught, rolling and jinking to try to throw off Faye's aim. However, as her Singularity Drivers executed another drone carrier, she noticed that several squadrons of fighters stopped their erratic manoeuvres, flying in an unerring straight line before being annihilated by Pulse Cannon fire.\n\n*Looks like the drone carriers are directly controlling the fighters,* Calara informed Alyssa, lining up her Nova Lances on the next Kirrix capital ship. *Drone wings stop dodging when I take out their mothership.*\n\n*It's probably a Hive Lord or Broodmother controlling the pilots,* the blonde replied after a brief pause. *Rachel thinks it's probably some kind of psychic backlash when you blow away whatever's directly commanding them... a bit like what we saw aboard the hive ships.*\n\nThere were a dozen drone carriers remaining and Calara kept a close eye on them as they suddenly halted in their pursuit, retro-thrusters burning bright to turn the enormous vessels. \n\nShe glanced at the purple sprite piloting the Invictus. \"It looks like they're running, Faye. Full power to the engines, let's finish them off.\"\n\nFaye nodded, shutting down the battlecruiser's retro-thrusters and ramping up the six Trankaran engines on the rear. The Invictus leapt forward, chasing after the fleeing Kirrix capital ships as they began to thread their way back through the vast sea of wreckage left behind in that trail of devastation. Hundreds of exploding drones added to that mass of shattered insectoid vessels, forming a sprawling hazard for spacecraft attempting to fly through those broken remains. The drone carriers shuddered as they collided with broken chunks of mangled ships, gouging deep furrows in their hull and buckling armour plates.\n\n\"Are you sure it's a good idea flying through that?\" Faye asked, watching the impacts with concern. \"Should I try and follow the paths those drone carriers are making through the debris?\"\n\nCalara kept her eyes on the Tactical Map and shook her head. \"Keep going as you are for a moment, I want to test something...\"\n\nFollowing the Latina's request, Faye maintained the Invictus' pursuit course, flying directly into what little was left of the Kirrix drones. She flinched as the bow plunged into the leading edge of that debris, but the melted wreckage didn't crash into their sparkling white plating, instead it was battered out the way, leaving the Invictus untouched. Faye pulled up footage from the hull cameras and watched in fascination as the ship's shields prevented anything from making contact with their hull.\n\n\"Solid-Phase shields,\" the Latina murmured as the debris was harmlessly pushed aside. She glanced at the shield status display, and saw a slight drop in the field strength with the repeated impacts. \"As long as the shields are up, nothing can get through.\"\n\nFaye smiled with relief, then glanced at their teal-skinned guest who was staring in shock at the Paragon suit camera footage. Placing her small purple hand on Helene's shoulder, Faye gave her a gentle squeeze and asked quietly, \"Are you sure you're okay?\"\n\n\"I didn't know it would be like this...\" Helene replied in a hushed voice, her eyes sweeping over the carnage on the bank of holo-screens. \n\nThe Lion and the Lionesses were crushing all their enemies before them. Every time they grounded a hive ship, they slaughtered the Kirrix indiscriminately, stopping any more Terran prisoners from being loaded. A brilliant flare of orange caught Helene's attention and she watched as Tashana immolated another squad of Kirrix soldiers. They flailed around, trying in vain to douse the terrible flames until they finally succumbed to the inevitable, their charred corpses piling up on the ground. The aquatic girl quickly turned away, no longer able to watch any more. \n\nFaye knelt at her side, looking up into Helene's troubled blue eyes. \"Do you see now, why John wants to spare you from becoming like the others? He needs you, Helene... they all do.\"\n\n\"They need me?!\" she asked incredulously. \"They're like gods from the ancient myths... how could they possibly need me for anything?!\"\n\n\"Because they're not gods, they're just people... and they're doing whatever they can to help those in trouble.\" Faye lifted Helene's chin then gently caressed her cheek. \"But now you've seen them fight... seen the kind of things they have to do to protect everyone. The fighting takes its toll, but you can be there to help them hold onto themselves.\"\n\n\"I'd do anything for them, but I don't know what I can do to help,\" the teal-skinned girl said, looking helplessly at her diminutive friend.\n\nFaye gave her a sympathetic smile. \"Talk to John. He'll know how... he always does.\" She glanced at the disturbing images, then blinked and deactivated them. \"I think you've seen more than enough. Let me take you to the Lagoon... the Nymphs will be wondering where you are.\" \n\nHelene nodded and gave her a brave smile as she tried to forget about the unsettling things she'd seen. \"Okay...\" She clasped Faye's hand. \"And thank you... for helping me understand.\"\n\n***\n\nJohn nodded to the crowd of grateful civilians, giving them a reassuring smile. \"Go on now, get to safety. We'll finish off the last of the Kirrix, then the Federation Navy will be here to provide aid.\"\n\nThey thanked him profusely, then turned and hurried away from the corpse-strewn streets. After marooning his third hive ship, John had massacred the Kirrix troops who'd been trying to hurry their prisoners inside, saving that group of Terrans from the horrors of infestation. \n\nHe glanced up at the dreadnought that still hovered above Reitberg's city centre. It was listing severely now, oily smoke billowing from scores of locations all over its pockmarked hull as it teetered over to starboard. *Alyssa, can you give me a status update on the girls?*\n\n*Sure, handsome,* she replied agreeably. *Faye took out several hive ships in the Raptor, including a couple allocated to Jade and the twins. That meant they finished early, so they've started boarding actions.*\n\n*Jade, how are you boarding those ships?* John asked in confusion. *Aren't you much too big to fit inside?* \n\n*Oh, I'm not bothering to go in, Master,* Jade replied cheerfully. *I just tore the side off each ship and bit the Hive Lord in half. Then I did the same a bit further along to the Broodmother... after that the Kirrix troops just wandered about in confusion. I've still been killing them, but they haven't made any effort to come after the prisoners. The Terrans freed themselves and are gathering outside.*\n\n*I've been clearing the hive ships as I went,* Alyssa replied with affected nonchalance. *So, I'm just kinda bored at the moment, waiting for you guys to catch up.*\n\n*How the hell did you manage that?!* John asked, looking back at the scenes of desolation around him. *I've been tearing through the Kirrix as fast as I could... and you don't even have super speed!*\n\n*Don't feel bad, you've done really well,* Alyssa replied in a playfully condescending tone. *Like I said before, I don't need speed to get the job done... I've got plenty of tricks of my own.*\n\nJohn glanced at the hive ship behind him, thinking about the various psychic powers his fellow Progenitor had at her disposal. Her ability to tag friend or foe would make it easy to isolate the Terran prisoners from their Kirrix oppressors, then she had a whole host of talents to end the threat posed by the alien marauders.\n\nHe let out a frustrated sigh and grumbled, *That's cheating.*\n\n*All's fair in love and war,* she purred, a teasing lilt to her voice.\n\nJohn stared at the hull, his eyes narrowing as he found himself wishing there was some way he could see what was going on inside. His eyes suddenly began to ache, a disconcerting pressure building behind them. John gasped as his pupils flared, the muddy beige hull shimmering eerily in front of him. \n\n*Hey! Don't hurt yourself!* Alyssa warned him in alarm, sensing his sudden distress.\n\n*John, what's happening? Are you alright?!* Edraele asked urgently.\n\nToo stunned by what he was seeing, John didn't answer. The hull seemed to bleed away, turning transparent and allowing him to see straight through it. He couldn't help gaping in wonder as he backed away, slowly turned his head from left to right as his psychically enhanced vision allowed him to easily search the decks. Although the creatures inside the ship appeared hazy and indistinct, it was still easy to tell the Terrans apart from the six-limbed Kirrix forces, with the prisoners sealed inside rows of cages. The layout to this hive ship was identical to the one he'd stormed with Alyssa six months earlier, but now he knew with certainty where all the Terran civilians were being held. \n\n*Edraele... I'd like a bit more power please,* he said with a feral grin.\n\nShe could sense his elation and responded accordingly, throwing her connection to him wide open and pouring energy across to flood his body. *I've got plenty more, just let me know how much you need!* \n\nThe runes on John's blade pulsed in time with his heartbeat, growing brighter as he pumped eldritch power into the sword. He drew the weapon back, letting his will build to a terrifying peak... and exploded into action. The blade whistled as it cut through the air, followed by a deafening boom as he released the wave of force. It slammed into the hive ship, carving out a deep chasm that ran above the entire length of the infestation chamber... the location of all Terrans aboard the ship. Stepping forward he raised the sword above his head then chopped down, unleashing a second blast wave that hacked the grounded vessel in half from topdeck to keel. \n\nNow that the prisoners had been safely separated from the rest of the ship, John charged at the rearmost section, letting out a primal roar as he channelled his will through the blade in a savage uppercut. The hull caved in, a huge furrow smashed in the flank of the vessel, the titanic forces unleashed tipping the entire ship over. It actually lifted off the ground, clearing dozens of metres before crashing on its side and skidding until it came to a halt. \n\n*Holy fuck...* Alyssa murmured in awe.\n\n*Oh, Master... that was magnificent!* Jade gushed, sounding absolutely thrilled.\n\nEdraele was stunned as she asked in a hushed whisper, *Did I just hear you right? You knocked over a 900-metre ship?!*\n\n*No! He didn't just knock it over...* Alyssa crowed. *He sent it flying!*\n\nJohn panted as he lowered his blade, staring wide-eyed at the Kirrix vessel he'd just smashed through strength of will alone. *I just... I don't even know how I did that!*\n\n*You've been holding yourself back for months,* Jade insisted. *We've all felt it... the power growing within you as you got stronger.*\n\n*And you bitch-slapped your guide,* Alyssa reminded him. *You've unlocked more abilities and the strength to use them.*\n\n*They're right, John,* Edraele said softly. *You've been building towards this moment for quite some time.*\n\nJohn caught movement with his peripheral vision and turned to see Alyssa landing beside him. Her cerulean eyes smouldered with excitement as she tugged off her Paragon helmet and bounded towards him. \"Is it wrong that I found that fucking hot?\"\n\nHe drove his sword point-first into the ground, then removed his Lion helmet and pulled her into his arms. They gazed into each other's eyes, then kissed passionately, the battered hulk ignored behind them.\n\n***\n\nThe Invictus glided into the wake of a fleeing drone carrier, taking advantage of the path the much larger Kirrix vessel had already ploughed through the sea of debris. In a burst of blue light, the forward mounted Tachyon Lances cut through the carrier's shields, then sliced the capital ship in half, the beams dissecting it across its breadth. A grim smile of satisfaction appeared on Calara's face as she counted only six remaining Kirrix ships left.\n\nSuddenly, the Tactical Map seemed to come alive with a flood of red-circled contacts, all surrounding the Invictus as it sailed through the wreckage. Faye shot the Latina a look of panic. \"Kirrix dropships all around us!\"\n\n\"Assuming manual fire control with the defence grid!\" Calara gasped, clutching the weapon controls and concentrating Pulse Cannon on the boarding craft at point-blank range.\n\n\"They must have drifted clear of that drone carrier on low-power and hid in all the debris!\" Faye exclaimed, wringing her hands with worry.\n\nThe dropships began to explode as unerringly accurate laser bolts tracked them down, but there were over a dozen lurking amongst the wrecks, to close to stop them all. The Kirrix ships charged towards the battlecruiser, engines blazing at full burn as they rushed to land on the hull. Calara felt a sinking feeling in her chest as she blazed away with the Pulse Cannons, realising she couldn't stop the Kirrix in time and dreading the thought of repelling multiple boarding actions.\n\nThe lead ochre dropship suddenly slammed into the Invictus' shields, breaking apart and spewing flailing Kirrix marines into space. One after the other the boarding craft were smashed to pieces and battered out of the way as they attempted to close, the shields as unyielding as a sheet of deca-shaped Crystal Alyssium. The Invictus raced out of the ambush, with the attackers swept clear.\n\n\"The solid shields!\" Faye exclaimed, beaming at the Latina. \"I hadn't thought about them stopping dropships!\"\n\nCalara blinked in surprise then gave her purple companion a sheepish smile. \"I should have expected it... but it's hard to forget years of ingrained training.\"\n\nFaye gave her a reassuring pat on the arm. \"Don't worry, I hate it when we get boarded too.\" She returned her smile and added, \"Just remind me to turn off the shields when John and the girls come back in the Raptor!\" \n\n***\n\nSakura jogged along in her anti-gravity field, the Valkyrie mirroring her actions as the mech ran across the hull of the Kirrix dreadnought. She reached the edge of the topdeck and leapt clear, pivoting so that she could face the ship as she descended. After wrecking most of the engines and clearing scores of retro-thrusters from the flanks, now she needed to destroy those on the underbelly to finally bring this beast down to the surface of Carolus III.\n\nA green flash left her temporarily blinded and she squeezed her eyes shut against the glare. \"What the hell was that?!\" she cursed aloud, rubbing her face. \n\n\"The Valkyrie was shot at point-blank range by what appears to be a neutron beam,\" Dana's helpful automated voice replied. \"Your shields are down to 17% strength and you'll be... totally fucked... if you let yourself get shot like that again.\"\n\nSakura bent at the waist, hands held out directly behind her as she activated her retro-thrusters, and the Valkyrie surging forward to hit the hull with a clang. She drove her sword into the hull, then blearily opened her eyes again and was relieved to get her vision back as the dazzling imprint on her retinas faded. \n\nAiming her Tachyon Lances at the Neutron Beam barrel that jutted out of the hull beside her, she opened fire, twisting so that she could scythe that blast through the rest of the weapon battery. She'd been caught out once before, taking a neutron beam blast at point blank range as she ran over the topdeck. Her shields might be in a poor state, but the mech hadn't been damaged yet and there was no way she was going to return to the Invictus with the Valkyrie shredded... again.\n\nDescending more cautiously now, she stuck close to the hull until she reached the underbelly. Sakura navigated the mech's control interface and began another active scan, the Valkyrie's sensors sweeping over the dreadnought. While she lacked the sophisticated sensor array installed on the Invictus, Sakura wasn't trying to ferret out all the dreadnought's inner secrets... she was simply searching for the location of all the retro-thrusters. They began to appear in her targeting overlay, highlighted and circled in red which made them stick out like a sore thumb against the ochre background.\n\nFaye popped into existence, her friendly purple face set in a mask of concentration. \"I've been performing calculations to estimate the total thrust needed to keep a vessel of this size aloft. I predict that destroying thirty-six retro-thrusters will be the tipping point where they are forced to land.\"\n\n\"Thirty-six... no problem,\" Sakura said, with a grateful smile. She lined up a shot on the closest of the marked components and blasted it with a Tachyon Lance beam, then cycled to the next and obliterated that as well, before promptly destroying yet another.\n\n\"Wait!\" Faye squawked in a panic, frantically waving her hands. \"Not all in the same place, or one end will sink like a stone!\"\n\nSakura frowned at her companion, trying to relax again after the sprite's strangled cry of alarm. \"You could have warned me first!\"\n\nFaye blushed and shifted in embarrassment. \"Sorry about that, I was a bit distracted.\"\n\n\"That's not like you,\" the Asian girl replied, rotating the mech and aiming at a pair of retro-thrusters on the opposite side of the keel. \"What was so distracting?\"\n\n\"We just had a bit of a false alarm with some dropships...\" the purple sprite replied, looking abashed. Her expression turned to one of awe as she continued, \"And you won't believe what John's been up to!\"\n\n***\n\nJohn and Alyssa watched as the huge dreadnought began to drop, the ungainly tilt to the hull making it drift towards the eastern side of the city. \n\n\"Very nice,\" John said with admiration, his eyes darting towards the sparsely developed outskirts dominated by open fields. \"I assume that was intentional?\"\n\nAlyssa winked at him. \"A joint effort by Sakura and Faye.\"\n\nHe smiled back, then pulled on his Paragon helmet and glanced at the HUD chronometer. \"Twenty-five minutes until the fleet drop in. How're we looking in space?\"\n\n\"Calara wasted everything,\" Alyssa said with a blas\u00e9 shrug. \"The Tachyon Lances are incredibly powerful... but they're Thrall tech, so we knew they'd be badass. She knocked out the entire Kirrix fleet before they could even close to beam range.\"\n\nJohn nodded thoughtfully, turning to look at the mangled remnants of the hive ship behind him. \"Maybe it's time...\"\n\nAlyssa placed a gauntleted hand on his chest. \"You know we'll back you all the way. The Maliri will understand if you want to take a little detour...\"\n\nHe patted her hand, while watching the dreadnought as it sank ever closer to the ground. \"Let's focus on getting this mess sorted out first. I want to check out that command ship, free the prisoners, and see what else is lurking in there...\"\n\n\"You're thinking some kind of boss creature?\" Alyssa asked, eyebrows lifting speculatively.\n\n\"Yeah, maybe,\" he replied, staring at the eerie design of the alien dreadnought. \"Rachel had a theory that there was some kind of higher intelligence controlling the Kirrix. That's the biggest ship we've seen of theirs so far.\"\n\n\"She wants to come with us,\" the blonde informed him with the hint of a smile. \"Rachel's very enthusiastic about taking a look.\"\n\n\"Have her and Dana meet us at the crash site,\" John said, nodding his approval. \"Jade, the twins, and Sakura can free everyone from the hive ships while we board the dreadnought.\" He glanced skyward and added, \"Can you ask Calara to bring the Invictus down for close fire support?\"",
        "\"She's already on her way,\" Alyssa immediately replied. \"She'll work with Faye in the Raptor to take care of any Kirrix troops that attempt to leave the hive ships. They'll destroy them afterwards when all the prisoners are free.\"\n\n\"Perfect,\" he said with an appreciative nod, watching as the dreadnought finally hit the ground. It ploughed a huge furrow through the fields and sent a shower of dirt fifty-metres into the air. \"That looked like a relatively gentle landing; hopefully the prisoners will be okay.\"\n\n\"A bumpy landing is probably the least of their worries right now,\" Alyssa said with a bleak frown.\n\nJohn paused and looked into her eyes. \"Are we making a mistake taking Dana in there with us?\"\n\n\"I think it's sensible to keep her out of hive ships and we can keep an eye on her if she comes with us,\" she replied, her head tilted to one side as she listened to her friend's thoughts. \"Rachel said that Dana seems to be coping well with the fighting... she thinks this is actually helping her.\"\n\n\"Okay, let's take a look inside that dreadnought,\" John said, pulling his sword from the ground and sheathing it in the magnetic harness across his back.\n\nAlyssa tugged on her Paragon helmet and followed after him as he launched into the air, increasing her thrust so that she could fly at his side. They shared a smile as they soared over the cityscape below, enjoying the simple pleasure of flying in that momentary lull in the fighting.\n\n*You take me on the most romantic dates!* Alyssa trilled, pretending to swoon. \n\nJohn groaned and rolled his eyes at her. *I made a terrible mistake planning such an elaborate date for Faye, didn't I?*\n\n*You did set the bar pretty high,* she replied, her full lips twitching into a smile. *Maybe I should have played a bit harder to get? Then you would've had to spend some time wooing me...*\n\nHe laughed and reached out for her hand. *There aren't many romantic venues in deep space on the Outer Rim, my options were a bit limited.* \n\n*Excuses, excuses,* she teased him. *I seem to remember a very horny Mr. Blake desperate to pack my tiny tummy full of a ridiculous amount of cum...*\n\nJohn gave her a look filled with regret. *I know you're only joking, but I am sorry about the way we started together. I wasn't exactly a good Samaritan making that deal with you.*\n\nShe fixed him with her piercing cerulean eyes. *If circumstances were different and you'd been a gentleman on that flight back from Karron, would we have ever got together? Think about it and be honest with yourself, John.*\n\nHe paused and gave it some real thought. At the time, he'd been keeping his raging libido under control with a combination of meditation and abstinence, desperate to avoid any... complications... that would arise from his unique alien heritage. If he and Alyssa had never made the bargain they did on that fateful journey from Karron to Olympus, he had no doubt that they would have parted company. It was only after feeding her his cum that they'd developed an intimate psychic connection, gifting her with the telepathy that had allowed her to break through his self-imposed desire for solitude... and unlocking his Progenitor destiny.\n\n*You're right,* he admitted quietly. *If I hadn't accidentally made you my Matriarch, I probably would have left you at Port Heracles, or maybe Olympus if you'd asked to stay a bit longer. We definitely wouldn't have stayed together if we hadn't connected the way we did.* \n\n*Exactly. I don't regret the way we met for a second... especially as the last six months have been the happiest of my entire life,* she said, her voice carrying a profound sense of contentment. \n\nHe nodded, forcing himself to re-evaluate the guilt he felt about their initial meeting. *I've been happy too... for the first time that I can really remember.*\n\nAlyssa's gauntleted fingers intertwined with his as they glided towards the wrecked dreadnought. *And if that's not enough, just think about how many people we've saved by getting together. Billions of lives... all because we made a deal where I gave you some head.* She grinned impishly at him. *They were humanitarian blowjobs, John. You were serving the greater good and being a selfless philanthropist loading me up like that...*\n\nJohn laughed and shook his head. *Alright, that's laying it on a bit thick... but I do get your point.*\n\n*No more regrets?* she asked, raising an eyebrow.\n\n*You're right... no more regrets,* he agreed, really meaning it.\n\nNearing the crashed Kirrix vessel, John could see the huge trench it had gouged through the dirt when it careened into the ground. The hull had cracked in several places and greasy black smoke was pouring from the wounds inflicted by the Valkyrie, but the dreadnought's superstructure seemed to be largely intact. They landed on the hull above a broad hangar door that had badly buckled in the crash, the couple looking curiously at the immense ship as they deactivated flight mode.\n\n\"This looks like as good an entry point as any,\" John mused as he studied the battered doorway. \"Wherever we board, we'll need to clear the Kirrix defenders before we can evacuate the civilians anyway.\"\n\n\"Want me to pulse the ship?\" Alyssa asked, quirking an eyebrow. \"Or are you going to show off your fancy new X-Ray ability?\"\n\n\"Why not both?\" he countered with a smile. \"You'll be able to give us a precise idea of where all the Terran prisoners are located. Then I can have a look for any serious threats.\"\n\nBefore the blonde could reply, Dana and Rachel touched down beside them, the two girls looking equally excited, albeit for very different reasons.\n\n\"Alyssa said you were playing baseball with a hive ship!\" Dana blurted out, her sky-blue eyes filled with wonder.\n\nJohn darted an affectionate glance at the blonde. \"She was teasing me and I got a bit competitive... I took out my frustrations on the Kirrix.\"\n\nThe redhead laughed and shoved Alyssa's shoulder. \"Holy shit! I know you can wind him up, but that's got to be a personal best!\"\n\nAlyssa tipped an imaginary hat in her direction. \"Teasing John is my speciality...\" \n\nThe Karron teenagers giggled together, and John couldn't help smiling at seeing them so relaxed and happy.\n\nRachel tried not to sound too impatient as she asked, \"Perhaps we should wait to discuss John's newfound psychic prowess in the post-mission debriefing?\"\n\nDana frowned and nudged her girlfriend with an elbow. \"Hey! What's got your panties in a wad?\" \n\nThe brunette gave John a contrite look. \"I'm sorry, I don't mean to undermine your impressive accomplishments. I am really proud of you for making such a significant breakthrough like that.\"\n\n\"But?\" he asked with a knowing smile.\n\nRachel glanced at the ochre hull beneath their feet, her grey eyes lighting up with excitement. \"If your prediction is correct and there's some form of higher caste subspecies inside this dreadnought, we might finally get some definitive answers about the Kirrix!\"\n\nHe patted her on the shoulder and nodded. \"You're right. Let's take care of business first; we can discuss new psychic powers after the battle.\" Turning to look at Alyssa, he continued, \"Whenever you're ready, honey.\"\n\nShe nodded and closed her eyes, falling into a meditative trance as she gathered her will. Her arms were soon wrapped in swirling ethereal vapours that hurtled around her limbs as they gathered in strength. When she crouched down, her gauntlets were swathed in a blazing nimbus of light, the throbbing energy only waiting for her to set it loose. Alyssa pressed her clenched fists to the ochre armour plating and pulses streamed out in concentric circles, sweeping away over the dreadnought's hull. It was easy to identify the Terran minds she made fleeting contact with... as well as the profoundly alien subconscious of the Kirrix invaders.\n\n\"The colonists are all clustered in the same location... over there,\" she announced, pointing towards the middle of the huge capital ship. \"Hundreds of them, if not thousands... many of them severely traumatised...\"\n\nDana gave John an anxious frown. \"It sounds like there's a bunch of hive lords in there... they must have infested a load of civilians.\"\n\n\"It sounds like it,\" he agreed, his expression turning grim. \"Sparks... maybe it would be best if Faye comes and picks you up? It's going to be horrible seeing all those people like that... I don't want you getting upset.\"\n\nDana slowly shook her head. \"I'm alright, honestly. Fighting the Kintark was hard because I knew they weren't all bad, but they basically forced me to wipe out millions of them. This is really different... the Kirrix are total assholes and those poor people are fucked without our help.\"\n\nJohn wasn't entirely convinced and his eyes flicked to Rachel for guidance.\n\nThe brunette put her arm around the redhead's waist and gave her a hug. \"I wouldn't risk exposing Dana to any stressful situation if I had concerns about her mental health. The two of us discussed it earlier and she's right; the circumstances here are very different. I think it'll be cathartic for her to come with us to rescue the colonists.\"\n\n\"See, Doctor Voss isn't worried that I'm about to turn into a nutcase,\" Dana joked, returning her girlfriend's hug.\n\n\"Alright, you're in,\" John reluctantly agreed, looking her in the eye. \"But if it starts getting too much, you tell me, okay? I'll be glad of your help, but we can clear the ship on our own if we have to... giving you PTSD is the absolute last thing I want.\"\n\nShe walked over to him, touched by his concern. \"Look, I know you're worried about me... but you don't have to be.\" Dana reached up to touch her gauntlet to his clear faceplate. \"I'm not going to fall apart on you.\"\n\n\"You better not,\" he replied, playfully swatting her on the rump. \n\n\"Hey!\" Dana grinned at him, then reached for her floating Reaper Cannon, gripping it tight with both hands. \"Shall we go fuck up some bugs?\"\n\n\"One second, just let me check out what we're dealing with,\" John replied, holding up his hand. \n\nHe turned to look in the direction Alyssa had pointed, while steadying his breathing and centring his mind. Now that he knew what he was doing, it was easy to enhance his sight, letting him peer through the dreadnought's outer hull and study the interior of the vast ship. It was teeming with Kirrix inside the vessel, with legions of slender drones and substantial numbers of massive juggernauts waiting to defend against intruders. \n\n\"Lots of Kirrix troops inside... the place is crawling with them,\" he murmured for his audience's benefit.\n\nJohn tried to look past them, searching for the Terran colonists that he knew were being held in that direction. It didn't take long to find them, the civilians slumped in despair, looking like their spirits were completely broken. As his enhanced sight penetrated the depths of the dreadnought, he got a brief flash of something huge, his eyes widening as he saw a glimpse of its hulking form. It whipped around to snarl at him in fury before abruptly vanishing from view.\n\n\"What the hell?!\" he blurted out, blinking in surprise.\n\n\"What's wrong?\" Rachel asked in alarm. \n\n\"There IS something inside... something big!\" he exclaimed, looking at the girls in turn. \"It realised I was watching... and I think it blocked me somehow!\"\n\nThe brunette nodded thoughtfully. \"It's just as I postulated... a higher-tier creature with more potent psychic abilities!\"\n\nDana brandished her Reaper Cannon. \"So we cut down everything that gets in our way, but take the big bastard prisoner?\"\n\nAlyssa cracked her knuckles and grinned at the redhead. \"Just don't kill it... then I'll see what I can find out.\"\n\nDrawing his sword, John nodded to the girls. \"Alright, let's do this.\"\n\nHe strode across the hull, activating flight mode as he stepped off the lip above the hangar. Grabbing the edge of the battered door, he braced his boots on the frame and yanked it backwards, ripping it clear from the mechanism with a tortured shriek of metal. The huge reinforced door toppled over, bouncing off the hull as it crashed down to the ground. \n\nInside the dimly lit dreadnought, squads of Kirrix troops were pouring into the hangar, rushing to repel boarders with neutron rifles at the ready. John leapt inside, whipping his sword around in a looping curve, his psychic acceleration making him move in a blur. The arc of force blasted across the room, mowing down everything unfortunate enough to stand in its way. Dozens of Kirrix troops exploded in a shower of chitinous limbs, the blast wave continuing onwards to smash into the hexagonal plated wall opposite, shattering the softly glowing tiles in a cascade of sparks.\n\nBefore the Kirrix could react, a trio of Reaper Cannons opened up, the fan of blue laser bolts melting huge holes in the insectoid forces. The suppressing fire was relentless, gunning down everything in sight and quickly slaughtering the defenders. Even though nothing was left standing in the hangar, John could still hear the quiet but unmistakable sound of thousands of insectoid feet scuttling through the ship towards them.\n\nAlyssa raised her psychically charged hands and started summoning telekinetic weapons, the axes and swords racing off towards the doors on the left and right of the hangar. \"They'll clear the flanks,\" she explained, striding over to stand beside John.\n\n\"I'll take point,\" John said, gesturing towards the massive set of doors opposite with the tip of his sword. Glancing over his shoulder at Dana and Rachel, he added, \"Ladies, watch our rear. As we get deeper inside, it'll be easier for them to circle around us.\"\n\nAlyssa flexed her fingers, her smile turning wicked. \"And I'll keep the three of you out of trouble.\"\n\nThe runes on John's sword flickered as if possessing an otherworldly intelligence of their own, growing brighter as he fed more power into the blade. Walking up to the huge doorway, he didn't pause to check the gloom for defenders, knowing they were lurking there in the dark. With a languid two-handed sweep, he set loose another blast wave down the corridor, shrill screams dying out just as quickly as they pierced the oppressive silence.\n\nActivating his enhanced sight, he glanced to his flanks, seeing Alyssa's blades shining brightly in his psychically sensitive vision. They fell on the Kirrix attempting to attack from each side, carving the troops into bloody chunks as they tried to parry with their rifles. Focusing forward, he stalked down the corridor, stepping over twitching dismembered limbs as he scanned the passageway ahead for threats. It was disorientating trying to walk with X-Ray vision enabled, so John dismissed it, having seen what he needed to. The Kirrix were massing in their squads, getting ready to rush them at the various intersections that led to the central ramps, which connected this level with the bowels of the ship.\n\n\"Get ready for an ambush,\" John warned the girls as they approached a cross-junction. He stepped forward and lashed out with a force arc to the right, slicing a stunned juggernaut in half and decapitating the Kirrix troops gathered around it.\n\nFollowing his telepathic orders, Alyssa strode to the left, facing the second force of Kirrix lying in wait. The shadowy tunnel was suddenly blindingly bright, a sizzling beam melting its way through the juggernaut leading the group. Its severed head bounced off the smoking remains of its abdomen and landed upside down on the floor, mandibles locked open in a silent scream of agony. \n\n\"We've got movement from behind!\" Dana called out, the high-pitched pulses from her Reaper Cannon filled the corridor.\n\n\"I see them!\" Rachel responded, her weapon entering the deadly chorus. She joined the redhead in deterring their Kirrix pursuers by shooting glowing holes straight through their thoraxes.\n\n\"This is a terrible defensive position,\" John said as he turned and hurled a blastwave down the central corridor, shattering another approaching squad in an explosion of broken limbs. \"Let's hold here for a few minutes; it'll encourage the Kirrix to keep attacking and we can thin their numbers.\"\n\nAlyssa smirked and shook her head in amusement. \"Remember back in the early days? All that creeping around pirate ships, trying not to draw too much attention... The old you would've had a fit at what we're doing now.\"\n\n\"To be fair, the old me couldn't wipe out squads of Kirrix with a backhanded swipe of my sword,\" John replied, turning to give her a crooked smile.\n\nShe laughed and nodded her agreement, her blue eyes sparkling with the thrill of battle. \n\nThe intelligence guiding the Kirrix forces seemed to pay no mind to the sickening slaughter in the tunnels, sending squad after squad into that slaughterhouse. Soon pools of green blood were spreading towards John and the girls, the sheer numbers of Kirrix dead adding their life essence to that disgusting tide.\n\n\"Are they trying to wear us out?\" Rachel asked in confusion, pivoting as she swept the corridor behind them with bursts of blue laser bolts. \"I've only taken a couple of hits and my shields are already regenerated up to full again.\"\n\n\"And we've got infinite ammo,\" Dana agreed, her Reaper Cannon cutting down scores of troopers. \"We can keep this up all day...\"\n\n\"Yeah, but they don't know that,\" John reminded them, sword held at the ready for the first sign of another Kirrix charge. \n\nAlyssa suddenly turned and grabbed John by the arm. \"Calara's offering close fire support. Want her to assist?\"\n\nHe looked at the blonde in confusion. \"But we're inside the dreadnought... I appreciate the thought, but I don't see how she can help?\"\n\nShe paused, listening intently to the Latina's telepathic explanation. Shaking her head, Alyssa replied, \"They scanned the dreadnought and know where we are. She's wants to saw the ship in half!\"\n\nJohn stared at her in shock. \"You've got to be kidding me...\"\n\nAlyssa gave him a helpless shrug. \"She reckons it's perfectly safe.\"\n\nHe gave her a hard look, mulling the idea over in his head. It came down to a question of trust and he trusted Calara implicitly. \"Alright, call it in.\"\n\nThe blonde nodded. \"Okay, brace yourselves...\"\n\nJohn hesitated, then beckoned them away from the open junction. \"Come here, girls!\"\n\nThey hurried over, crouching on the ground around him. John sank the tip of his sword into the deck, then placed both hands on the hilt, closing his eyes in concentration. A shimmering sphere of blue hexagons burst forth, encompassing the four of them in its protective embrace. John squatted down beside the trio of girls, then nodded to Alyssa that he was ready.\n\nShe raised an eyebrow and glanced up at the dome. \"You think that's going to stop a Tachyon Lance beam?\"\n\nHe laughed at her gallows humour. \"Okay, I suppose that was a bit optimistic.\"\n\nAlyssa smiled and brushed her fingers across his faceplate. \"It's the first time I've seen you extend a shield like that. You're full of surprises today.\"\n\nAs John opened his mouth to reply, a deafening roar swept through the corridor, followed by a blistering wave of heat. The ship shook violently, enough that they had to grab hold of each other to avoid being knocked over. For several seconds the floor vibrated like a drill, setting their teeth on edge... then just as suddenly as it started, everything stopped. Silence reigned as the corridor went still, the passage behind them at the junction now noticeably brighter.\n\n\"She's done,\" Alyssa informed them, looking as relieved as John felt.\n\nHe rose to his feet, dismissing the hex barrier as he pulled his blade from the floor. There was no sign of another Kirrix assault yet, so John headed back to the cross-junction to investigate the source of the new light. He looked to his left, then stood in open-mouthed astonishment as he gazed down the corridor.\n\n\"Holy fuck...\" Dana murmured at his side, her voice no more than a shocked whisper.",
        "Thirty-metres down the corridor, their section of the Kirrix ship now ended in a gaping chasm, the edges still glowing cherry-red with the heat from Calara's orbital strike. There was a searing flash as the front of the dreadnought was hit by another Tachyon Lance barrage, the Invictus carving great rifts through the charred hulk. The ravaged superstructure seemed to collapse inward on itself, thousands of tons of armour plating crashing down to flatten any survivors in the bow.\n\n\"Well, I guess we don't have to worry about Kirrix ambushes from that side anymore,\" Alyssa said with a broad grin.\n\nJohn roused himself from his daze and smiled at the blonde. \"Please pass on my regards to Captain Fernandez.\"\n\n\"Calara says 'you're welcome',\" the blonde replied, glancing at her phalanx of telekinetic blades as they floated back into the dreadnought from the now demolished starboard side. \"She also wants to know if you'd like her to shave more off the ship?\"\n\nTurning and heading back to the crossroads, John shook his head. \"We better not take any more chances. I know what a good shot she is, but we don't want to risk rupturing a fuel line or triggering any kind of Power Core meltdown. If there was an accident, we might be able to get clear in time, but the prisoners would have no chance.\"\n\nRachel looked shaken as she said, \"As impressive as that was, it's the closest I ever want to come to another orbital bombardment.\"\n\nDana's nervous laugh sounded strained as she quickly nodded her agreement. \"Yeah, tell me about it! Designing the new Tachyon Lances was awesome, but I never planned on being inside a ship they were firing on!\"\n\nJohn led the way towards the ramps which he knew lay fifty metres ahead. \"We'll rush down to the level the prisoners are on, then take up another defensive position. I'd rather not fight on the ramps, our fields of fire will be far too limited.\"\n\nAlyssa nodded, hands upraised as she strode along behind him. \"If you want to make sure it's clear, I'll watch over the girls.\"\n\nHe sprinted down the corridor, weaving around the piles of mangled chitinous limbs that lay like a grotesque carpet across the floor. The walls pulsed with an eerie inner glow, hexagonal tiles casting that throbbing light across the charnel house in the passageway. Eventually he reached the end and it opened out into a larger room, with broad ramps allowing access to the upper and lower levels.\n\nRounding the corner, he almost ran right into a hulking juggernaut at the forefront of a squad of Kirrix. It gnashed its mandibles at him and took a swing with its bony long-bladed claws, but moving with accelerated speed, he was easily able to duck back from the backhanded swipe. His answering slash with his sword had a telekinetic blastwave accompanying it, which neatly hacked the massive black-armoured beast in half. The arc of force carved through the squad of Kirrix drones, sticky green blood spraying wildly as they were disembowelled by that razor-sharp psychic projection. \n\nTheir upper nerve ganglia still intact, the insectoid troopers flopped around on the floor, reaching for their dropped neutron rifles to fire at the intruder. John stared at them incredulously for a moment, then pointed the tip of his sword down the ramp, a tongue of blue fire curling along its length. Eldritch flames billowed out with a roar, incinerating the mortally wounded Kirrix forces, their death cries ringing shrilly in his ears. \n\nPicking his way through the burning corpses, John descended several more levels, finding the next set of ramps clear of defenders. There was another large room here, so John stepped away from the descending ramp to search for any sign of troops waiting in ambush. He could hear the insectoid soldiers scuttling towards his position, the noise sounding more hurried and frantic than before. \n\n*I've cleared a path. Head down and we'll make a stand here,* he said to Alyssa as he glanced around at the several entry points. \n\n*We've reached the ramp room,* she replied a moment later. *We're just getting past your bug barbecue...* \n\nJohn didn't respond as he was now listening carefully, his sharp ears having picked up a disturbing noise. He grimaced as he heard the faint but harrowing sound of sobbing coming from the broad doorway across the room. Tightening the grip on his sword, he braced himself for the horrors he knew were still to come.\n\n***\n\nTony paused in the rubble strewn tunnel and wiped the perspiration from his forehead, as he swept the tight beam of his torch over the tumbled rocks piled up to the ceiling. This was the third cave-in they'd encountered in their retreat from the Mortimer mine, the first two only partially blocking the corridor and allowing them to continue onward. The miners had triggered one of those collapses when they blew up the tunnel, but the aftershocks from the Mortimer mine explosion had brought more of the ceiling down, inadvertently clearing a narrow gap. Tony couldn't believe their luck as they crawled through the narrow crevice between the fallen rock, but this time the cave-in looked extensive... \n\nHe couldn't help shivering with a cold sweat, his skin feeling clammy. Although he wasn't experiencing sharp pains from his head-wound any more, the physical exertion from this bleak hike was starting to take its toll. At least he hoped that was all it was, but at the back of his mind, Tony worried that he might be fighting off some kind of infection. Despite desperately wanting to sleep for a week, he was determined to stay strong, knowing that it was up to him to get the three of them to safety. \n\nHe glanced back at his two companions, who were stumbling along in the gloom behind him. Kelli's hobbling had grown more pronounced as they'd covered the last couple of miles, her sprained ankle obviously more painful than she was willing to admit. Meanwhile Perl was walking along in a subdued silence, either being incredibly stoic about the loss of her arm, or too shocked and numb to react.\n\nKelli realised he'd stopped and looked at him with concern. \"What's the matter?\" she asked, her voice sounding unnaturally loud in the oppressive darkness of the tunnel.\n\n\"Another cave-in,\" Tony replied, turning to shine his torch at the rocks ahead of them. \"Looks like a big one...\"\n\n\"Are we trapped?!\" she asked quietly this time, fear making her voice quaver.\n\nHe swept the torch beam over the rock piles that appeared to completely block the tunnel, squinting through the dusty gloom for any sign of a way through. The light failed to fully illuminate the leftmost corner and he paused to study the darker area underneath the sagging ceiling. \"Dunno... looks like there might be a way around it.\" Glancing back at Perl, he reached out to steady her as she swayed in place. \"Easy there, babe. Maybe you two oughta sit down for a minute, I'll check it out.\"\n\nThe blonde didn't resist as he helped her to sit, Perl staring at him with glazed eyes. Kelli gingerly sat down next to her friend, then let out a sigh of relief as she took the weight off her ankle. Pulling a bottle of water from her pack, Kelli took a deep drink then held it up for Perl, who looked at it askew before drinking noisily.\n\n\"Yeah, we'll chill here,\" the brunette said, giving Tony a grateful nod as she pulled another flashlight out of her pack. \"My ankle's hurting like a motherfucker and Perl needs some rest.\"\n\nTony gave her a gentle pat on the arm, then slipped off his own heavy backpack and placed it behind Perl for her to lean against. Rolling his aching shoulders to ease the stiffness, he moved carefully towards the cave-in around the rocks littering the floor, the wavering light from his torch still not revealing a great deal on the left. Drawing closer, he finally realised why the beam of light wasn't reflecting off any rocky walls. When the roidquake brought the ceiling down, it had also shaken open an entrance to what looked like some kind of cave.\n\nThanking his lucky stars, Tony clambered over the rocks, trying to get a better look at the chamber beyond. He paused when he got closer, finding that the corner of some kind of big metallic object had broken through the ceiling, its weight probably contributing to the tunnel's collapse. The strange tan colouring was unlike anything he'd seen before, and Tony ran a hand over its pockmarked surface, feeling tiny indentations under his fingertips. \n\nWhatever it was, he was sure it was old... maybe even dating back to the very first colonists who'd started the excavation of Karron. He figured it must be part of some kind of derelict mining equipment, long forgotten and abandoned by those pioneers. With a shrug, Tony ducked under it, being careful not to disturb whatever it was; the last thing he wanted to do was trigger another cave-in.\n\nShining his torchlight into the opening, Tony peered through the dust and saw that the quake had created a fissure through this part of the asteroid. The rent had opened up several new tunnel entrances, the exposed passages bored through Karron by miners following rich veins of metal. He couldn't help grinning when he lowered the beam from his torch, following the sloping pile of rocks that would let them clamber down to the lowest tunnel. The faint glint of rail-tracks in the rough-hewn floor was a very good sign, making it highly likely that the tunnel ran back to what passed for civilisation in this godforsaken place. \n\nIf the tunnel led back to the starport and they could avoid the Kirrix invaders, they might be able to loot the medical centre for supplies. He snorted, realising how precarious his plan was. Still, it could have been worse... if there'd been no way around the cave-in, they would have been trapped in the tunnel and faced with an unpleasant death by dehydration. At least now they had a chance of surviving...\n\nWhen he swung his light back towards the girls, Kelli blinked owlishly against the glare, her expression fraught with worry. \"There's a way through!\" Tony called out to her, unable to contain his relief as he picked his way over the rocks back to their makeshift campsite. \"I think we might actually be able to get outta here!\" \n\n***\n\nTashana glanced at her sister, who was hugging the outer hull on the opposite side of the open doorway. The hive ship had lost all power when Irillith had fried the electrical grid, so the loading doors were jammed open, the Kirrix unable to keep the attackers from gaining entry.\n\nShe held her Reaper pistols at the ready. *On three...* \n\nTashana couldn't see the expression on her twin's face, as Irillith's crystal faceplate was currently opaque, the Maliri being careful to conceal their identity. However, there was no mistaking her sister's firm nod, Irillith balancing her long-barrelled Reaper Cannon on her hip as she prepared herself for the gunfight to come. \n\n*One...*\n\n*Two...* \n\n*Three...* \n\n*Go!*\n\nThey pivoted around, swinging their weapons into the breach and opening fire, only to be met by a hail of neutron bolts in return. Unlike the last two boarding actions, the Kirrix were ready and waiting this time, meeting the twins' assault with a well-organised wall of guns. Tashana grimaced as rippling blue circles pulsed out across the surface of her Paragon suit's shield, the status indicator in her HUD darkening through several shades as the energy field absorbed at least a dozen hits. \n\nWatching the two targeting reticles in her suit's HUD, the Maliri pistoleer tapped the thumb buttons to fire the underslung barrels. 10mm caseless rounds pounded into the tightly-packed defenders, leaving a glowing orange trail as a pair of flame sprites rode those bullets into her targets. As each shot made contact there were fiery explosions, dousing the Kirrix ranks in billowing flames. The twin blasts knocked the insectoid soldiers sprawling, the floor left strewn with thrashing ochre-hued figures trying to put out the fires.\n\nTashana sent short bursts of blue laser bolts into the passage as she picked off the fallen survivors. Remembering Rachel's briefing on the Kirrix drones, she aimed for headshots, the burning aliens collapsing in a twitching heap every time she blasted a glowing hole through their chitinous skulls. By contrast, Irillith held her finger down on the trigger, strafing her Reaper Cannon fire back and forth over the prone soldiers.\n\nSeeing no further movement except the flickering fire that shrouded the corpses, Tashana stepped through the doorway into the hive ship. *How are your shields doing?* she asked her sister as she picked her way through the incinerated remains.\n\n*The shield status just turned a delightful shade of vermilion...* Irillith replied dryly, moving to flank her on the right. *One of the drawbacks of carrying a big gun... everyone falsely assumes you're the greatest threat.*\n\nTashana smiled at the admiration in her twin's voice, then glanced at the shield status in her own HUD. *Well I'm sporting a jaunty shade of apricot, so let me take point until you've had a chance to regenerate.*\n\n*Your will be done, glorious leader,* Irillith said sarcastically, pausing to let her sister get several metres ahead of her.\n\n*It's admirable that you're finally acknowledging the natural hierarchy between us,* Tashana teased her playfully, watching for danger as she advanced down the corridor. She passed a couple of pitch-black doorways and glanced each way with thermal imaging activated, but saw no sign of Kirrix troops. *I could get used to this well-deserved deference.* \n\nIrillith laughed at her sister's light-hearted banter. *You little brat! Just wait till we get home...*\n\nTashana was about to reply, when her sharp ears picked up the sounds of skittering claws rushing towards them from in front and behind. Dropping into a crouch, she aimed her Reaper pistols at the two archways ahead. *Cover our backs!*\n\nHer twin had already reacted to the ambush, smoothly pivoting and bringing the barrel of her Reaper Cannon around to face the rear. When the Kirrix soldiers came pouring out of open doors on both sides of the darkened corridor, Irillith swept the long weapon from side to side, shooting bursts of brilliant laser fire that cored through the charging Kirrix. To the front, the ochre-armoured troops were met by an unwavering stream of azure laser bolts across the face of both entryways, the insectoids taking grievous wounds as they tried to rush into the corridor. \n\n*Fuck!* Irillith hissed as a pair of juggernauts stomped into the passageway behind them. She levelled her Reaper Cannon at the one on the left and blasted glowing holes through the black-carapaced monster, but the juggernaut opened its mandibles and roared in defiance as it barrelled towards her. *Shan, help!*\n\nTashana spun on the spot, fire sprites leaping from her flame-sheathed gauntlets into each Reaper pistols' magazines. Her eyes narrowed as she saw the huge Kirrix beasts charging towards them, each drawing back their wicked blade arms to impale her sister. Tapping the trigger for the underslung quantum barrels, 10mm slugs punched through the armoured chest of each raging behemoth, the black chitin cratering with the impact. A split-second later the sprites detonated inside their targets, ripping apart the creatures in a pair of thunderous fireballs. \n\nA blastwave of heat poured over both Lionesses, knocking them both to the ground with the force of the eruption. Irillith's shields flickered and died, overcome by the ferocity of the blast, her armour singed by the flames. Tashana vaulted up into a crouch, spinning around to bring her Reaper pistols to bear against the Kirrix troopers still pouring from the doorways deeper inside the hive ship. She was hit by a storm of neutron bolts from their raised rifles, her shield status flashing a red warning and winking out with the strain.\n\nTashana's eyes darted left and right as she aimed at the troops, trying to ignore their returning fire as she concentrated on picking them off with one fatal shot at a time. *Rill, are you okay?!*\n\nHer sister sounded disgusted as she replied dourly, *I'm fine...*\n\nToo busy gunning down the Kirrix soldiers to check on her twin, Tashana's precise laser fire cored through the attacking drones, brutally decapitating them one after the other with her pinpoint shooting. Much to her relief, Irillith's Reaper Cannon began to sing its deadly tune a few moments later, firing back at the squad behind her. It took them a couple of minutes to wipe out the last of the ambushers, managing to avoid any more entanglements with berserk juggernauts.\n\nThe muzzles of Tashana's Reaper pistols were glowing in a shimmering heat-haze when she finally finished shooting, white-hot from the continuous fire. After a glance to make sure all her targets were dead, Tashana jumped to her feet and whirled around to check on her sister, concerned that Irillith was annoyed at getting caught in the fiery blast. When she turned to face her twin, Tashana took one look and burst into laughter, suddenly understanding Irillith's earlier disgust. \n\n*Yes, very amusing,* Irillith grumbled, peeling off the lurid-green string of juggernaut intestines that had splattered over her like a gruesome bandoleer. Her armour was left liberally doused in sticky green blood, ruining the once pristine finish. *At least all this will wash off; John's not going to be impressed with the state of your armour...*\n\nTashana glanced down at her Paragon suit and winced guiltily at the mosaic of impact craters covering the white plating. *Oh crap...*\n\n*You look like you just fought your way out of the Khalgron tunnels,* Irillith said, patting her sister on the shoulder. She sounded amused as she added, *Hopefully, you should only get a brief lecture on being more careful.*\n\nWith a forlorn sigh Tashana turned and led the way deeper inside, following the path the terrified prisoners would have taken when herded into the hive ship. The walls along the corridor had been shot to pieces, penetrating fire from her powerful Reaper Pistols having blasted hundreds of holes through each side. One wall had partially collapsed, hexagonal tiles scattered all over the floor. \n\n*Do you think that's safe?* the Maliri gunslinger asked, eyeing the sagging ceiling with trepidation.\n\n*No idea,* Irillith replied with a frown. *I'm no structural engineer. If you're worried about it, we can blast another way out of the ship and avoid it.*\n\nTashana nimbly stepped around the piles of debris. *Let's free the prisoners first, then we can make a decision.*\n\nThey approached a big set of reinforced double doors at the end of the corridor, which they knew would lead into the impregnation chamber. \n\n*Power's out, we'll have to cut our way through,* Irillith said, aiming at the door. \n\nHer sister joined her in shooting holes through the door, melting a glowing channel through the metal near the frame. It didn't take long to follow the arch up to the central dividing line between the two doors, and the one on the right toppled over with a booming crash.\n\n*I'll take out the hivelord, you clear out any other troops!* Tashana ordered, rushing up to the sundered doorway and peeking inside. \n\nThis was the first hive ship they had immobilised and the Kirrix had set up a glowing emergency light in the middle of the chamber. The light came from a globe set up on a tripod and it pulsed with an eerie radiance, the fluctuating illumination allowed Tashana a glimpse of the impregnation platform. Three unconscious prisoners had been restrained there, all recent victims of the hivelord, their abdomens bloated with Kirrix eggs.\n\n*No sign of that bastard, he must have fled when we boarded,* she told her sister, sweeping her angry gaze around the room for threats. \n\nIrillith seethed with anger as she strode across the room to her right, heading towards another set of doors. *I'll clear out the nesting room. The hivelord might be with the broodmother protecting their grubs.* "
    ],
    "authorname": "Tefler",
    "tags": [
        "kirrix",
        "psychic",
        "shapeshifting",
        "pyrokinesis",
        "telekinesis",
        "cryokinesis",
        "over 9000"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-109"
}