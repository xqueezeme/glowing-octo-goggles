{
    "title": "Teacher's Aide",
    "pages": [
        "*Author's note: I work around a lot of retired Navy and Marine Corps F-18 pilots, and this story is based on something a retired colonel recently told me. He has a retired Marine friend who lives on Fleming Island in Florida who took a job as a teacher's aide several years ago. He didn't end up marrying her, but she did have serious mobility issues caused by complications during childbirth, and she deeply appreciated the many things he did for her.\n\n*****\n\n\"Chelsea? I think the best thing to do is ask the county to hire an aide. I know how independent you are, but when I watch you walk, I actually hurt for you,\" the elementary school principal said.\n\n\"No, you're right. I hate to admit it, but it's true. Just walking from my car to my classroom takes me five times as long as it used to. And going up that flight of stairs is...awful.\"\n\n\"I'm so sorry. I wasn't sure you were coming back until the day yesterday, and by then everyone's rooms were set.\"\n\n\"I understand. I'm not complaining, Diane. It's just the way life is for me now,\" the younger teacher explained.\n\n\"I also know you don't want sympathy, but when I think about what happened, I...I have to tell you, Chelsea, I still cry.\"\n\nChelsea Tanner was 28 and the mother of a two-year old boy named Bryce. Her son was the only good thing to come out of the events surrounding his birth, after which his mother nearly died. \n\nAfter some 30 hours in labor, her attending physician told Chelsea it was necessary to perform a C-section. After a brief moment with her husband they agreed to the procedure. During it, the doctor somehow nicked her uterine artery without noticing it until after she was sewn up. \n\nThe doctor left the OR and minutes later her blood pressure began dropping. By the time the doctor was called back and had scrubbed in, her pressure was so low the hospital's lawyers had been summoned. The doctor opened her back up, repaired the small tear, then re-closed the wound, angry at himself for having missed something so serious. \n\nOn advice from those attorneys and the hospital administrator, the doctor wasn't allowed to speak to the family. Instead the lead attorney delivered a carefully-worded explanation to the family outlining what had happened without admitting culpability. They tersely informed her husband and her parents that Chelsea was unlikely to survive, and if she did, there would almost certainly be complications. They wouldn't tell them what those complications might be, but everyone knew this was serious. Extremely serious.\n\nAfter 48 very intense hours of waiting, hoping, and praying, Chelsea pulled through, but there was indeed damage. To everyone's relief, there was, at least from the initial tests they'd run, no damage to the brain, and she was able to speak normally although there were concerns with her short-term memory. \n\nIt was another three days before she was strong enough to try and walk, and that's when the most serious problem made itself known. \n\nChelsea's ability to walk had been severely impaired. At first, she could barely take five steps with the aid of two nurses and a walker. \n\nMore tests were run, and Chelsea was provided physical therapy at no expense, most likely in the hopes she might not sue the hospital for that, too, and with time, she saw slow, gradual improvements. \n\nThe truth was she'd never given any thought to a lawsuit. Her primary concern was for Bryce, who was, by all accounts, perfectly healthy. Beyond that her focus was on learning to walk again with the ultimate goal of getting back to the thing she loved most\u2014teaching.\n\nAll she'd ever wanted to be was a teacher, so when she enrolled in Florida State University, the only decision for her was whether to major in elementary or secondary education. That too, had been an easy decision as she truly loved young children, and her hope upon graduation was to be able to teach sixth graders. \n\nMost of her peers wanted to teach anywhere from Kindergarten through third grade with most dreading being assigned to a classroom with older children. But not Chelsea. For her, that age was ideal as the students were old enough to begin to understand things like sarcasm but still young enough to be sweet and polite.\n\nNow, almost two years later, neither she nor her doctors fully understand why she'd lost so much mobility, but she had finally gotten enough strength back in her legs that she could walk short distances with great effort. She felt strong enough to return to the classroom, and although her principal was very concerned about her ability to teach, she was determined to do everything she could to give her the opportunity. Her two main concerns were the issues Chelsea told her she had with short-term memory and mobility. \n\nWalking was an essential part of the job as elementary school children had to be accompanied by a teacher, an aide, or other staff member everywhere they went on campus. At no time could they be allowed to go anywhere by themselves. Yes, a student could be sent to the nurse's office or to another room, but at least one other student had to go with them. But when they moved as a class, they could never, ever do so without a staff member accompanying them. So while Chelsea could indeed walk, she simply couldn't go back and forth to the cafeteria and then to PE or music or the library, let alone up and own the stairs, day in and day out.\n\nWalking was not only painful, Chelsea had no endurance. Never a runner or fitness nut, she'd never had issues walking any distance or doing anything most people could do. But that was no longer the case, and even short walks, like from her car to her room, wore her out. And that's where the need for an aide came in.\n\nOver the roughly two years since giving birth, Chelsea had also lost a serious amount of weight. She wasn't a big woman to begin with, but she'd always joked about a small amount of what she called 'tummy flab' even before getting pregnant. She'd hovered around 130 pounds all of her adult life, and for a woman who was 5' 6\" she was very much 'height/weight proportionate'.\n\nNow, however, she struggled to maintain 110 pounds, and found eating to be almost as big a chore as the physical therapy she still attended two days a week. The only redeeming feature she had left that hadn't been decimated by the trauma was her face. While the rest of her body was rail thin, Chelsea still had a normal-looking face which was what people saw first, and the thing by which they decided whether or not someone that thin was possibly anorexic. \n\nNo one had ever thought Chelsea was beautiful beyond a kind of generic sense of the meaning in which a woman like her could be 'beautiful' for reasons other than having a gorgeous-looking face. She was by no means un-attractive, she just wasn't someone who turned a lot of heads when she walked into a room. But her positive outlook and cheerful disposition made her someone most people who met her wanted to have as a friend.\n\nShe now often joked about how she'd always secretly dreamed of being a size 2. Now that she was, the reason she'd gotten there made her long to be a size 10 again.\n\n\"So what do you think? Today is the first day back for teachers and that gives us four more to find someone. I've already talked with the Superintendent and she's willing to hire an aide, but we need to let her know because that money has to be taken from somewhere else.\"\n\n\"I'd like to say give me a couple of days to think about it, but just walking from my room to the cafeteria for the welcome-back meeting left me exhausted. I still have to get back up to my classroom, and just the thought of it is overwhelming. There's no way I could walk a class anywhere let alone to all the places they need to go each day.\"\n\n\"Okay. Then I'll call the county again and let them know we need someone,\" the principal said. \"In the meantime, is there anything at all I can do to help?\"\n\nStill upbeat, at least most of the time, Chelsea said, \"Do you have a spare set of legs?\"\n\nDiane Pokorney, her principal, tried to smile as she said, \"No. Sorry. Fresh out, I'm afraid.\"\n\n\"Then I guess I better get going.\"\n\nChelsea stood up, steadied herself with the 'Hurry-cane' that now accompanied her everywhere she went, then slowly turned herself around.\n\nShe smiled and thanked her principal then began the long, slow walk back to her building and the dreaded flight of stairs.\n\n*****\n\n\"So you gonna be subbing again this year, Dad?\" \n\n\"No. No way. I've had enough of that. But it's funny you asked me that right now because I literally just hung up with the county office not thirty minutes ago asking what else I could do.\"\n\n\"What do you mean? You've got a masters degree. Can't you pretty much do anything?\"\n\nHis father chuckled then said, \"No. I'd have to take one of the certification exams if I wanted to teach. And I'd have to be a teacher for some minimum number of years to be an administrator and take a bunch of other classes. I spent nearly 20 years of my life in formal classrooms so I'm pretty much done with that.\"\n\n\"I guess I knew that. I just wasn't really thinking about it,\" his son replied. \"So...what can you do? Other than subbing?\"\n\n\"The woman I spoke with at the county office said she'd put my name in the 'support pool' which evidently is a term they use for people who um...support other people. And the 'other people' would be teachers.\"\n\n\"Oh. So...you'd be an aide then?\"\n\n\"Pretty much. There are other 'support' jobs like custodians and secretaries, but I can't exactly see myself answering phones all day or pushing a broom.\"\n\nHis son laughed then said, \"Yeah. That'd be a sight. I can just see you swabbing decks.\"\n\n\"Hold on there, junior,\" his dad said. \"I'm not too proud to do that, it just doesn't hold any interest for me.\"\n\n\"No, I get it. You always worked around the house doing any nasty job that had to be done, and as a retired colonel you sure as hell don't need the money.\"\n\n\"Yeah, it's just mind-numbingly boring sitting around here by myself, you know? I don't have any interest in being a government contractor for any amount of money, and I'm not the Home Depot type.\"\n\nHis son laughed again then said, \"You'd make a helluva Walmart greeter, Dad.\"\n\n'Dad' was 6' 2\" and just under 200 pounds of what was still pretty much still rock-hard muscle. At 53, retired Marine Corps colonel Pete Harke (pronounced HAR-kee) was what most people thought of when someone said 'Marine'. \n\nHe was considered a very good-looking guy for someone his age and had the typical, very masculine-looking square jaw and a nicely-tapered body that was in superb condition. He still wore his hair fairly close-cropped, although the temples were now graying and the gray area seemed to grow a little more every week. It was supposedly 'distinguished' on a man his age, but it just made him feel...old.\n\nHe and his late wife, Gayle, had retired to northeastern Florida five years ago after Pete completed his 26th year on active duty. He had no chance, and no interest, of becoming a general officer, and there was nothing new left for him to do, so he'd hung up his spurs and let his wife, who'd faithfully followed him around the country and the world, decide where to live in retirement.\n\nShe'd narrowed it down to Charlotte, North Carolina, and Jacksonville, Florida, and as the time arrived to make a final decision, Gayle hadn't said a word. So, in his typically direct manner, Pete told her he'd decided where they should go.\n\n\"Oh, okay. Me, too,\" she replied.\n\n\"Seriously? Great! I uh, I think we're gonna love Charlotte,\" he told her assuming it was a done deal.\n\n\"Charlotte? We're not moving to Charlotte. We're going to Florida,\" Gayle informed him and that was that.\n\nHe'd initially hated the idea because it was so warm and humid there for so many months, but after living there for a year or so, he loved having Naval Air Station Jacksonville just 15 minutes north on Highway 17 from their very upscale home on Fleming Island. He was over there every day using the fitness center or the pool, and once a week or so buying groceries at the commissary.\n\nWhile Gayle was still alive, he was thoroughly content to be a 'house husband' even thought their only child was in college, and let Gayle pursue her interests while he took care of everything she'd done so well and so willingly the entire time they'd been married.\n\nTheir son, Trevor, was himself now a Marine Corps officer, and getting close to finishing the next phase of flight school. He'd gotten 'fixed wing' after his initial training, and would be finding out which jet he'd be flying in a few more days. Or at least that's what Trevor hoped, knowing full well that fixed-wing included C-130s and MV-22 Ospreys, both propeller-driven aircraft. \n\nHis dad loved to kid around by telling him he'd get C-130s, the Marine Corps's four-engine refueler and cargo plane, but Trevor didn't think that was funny in the least.\n\nPete laughed at the Walmart comment then said, \"Yeah. I might not be too good at that, either.\"\n\nTrevor chuckled then did his 'Dad' imitation which normally came out as a growl.\n\n\"Welcome to Walmart. Here's your fuckin' cart. Have a wonderful day. Now\u2014move!\"\n\nPete laughed even though he rarely swore and raised his voice even less often. He learned early on officers didn't yell, as there was no need to. And it was a whole lot better for everyone involved to simply say, \"Could you take of such-and-such for me?\" knowing it would be done immediately no matter how he requested it be accomplished. \n\n\"Anyway, this aide thing will give me the chance to see if I like bein' around other people's kids all day. If I do, who knows? Maybe I'll take one of the teacher certification exams and give that a whirl.\"\n\nThey shifted gears and discussed Trevor's hopes and dreams of flying either the F-22 or the F-35 for a few minutes then talked about some other family stuff before they got ready to wrap up their weekly phone call.\n\n\"Call me as soon as you get your platform,\" Pete told his son.\n\n\"Will do, Dad. And let me know if you get hired and what you'll be doing.\"\n\n\"Wilco,\" his dad told him before hanging up.\n\nHe set the phone down, and when it rang just seconds later, he was sure Trevor had forgotten to tell him something.\n\nHe was glad he checked caller ID before answering it with something like, \"What the f***, Lieutenant?\"\n\nIt said 'Clay County Schools' so Pete slid the button to 'Accept Call' and quietly said hello.\n\n\"Mr. Hark?\" the woman on the other end said, mispronouncing his name.\n\nRather than correct her, he politely said, \"Yes.\"\n\n\"Yes. Hi. Um...we spoke just an hour or so ago, and well, I have a support position that opened up a few minutes ago. You called to ask what else was available, and well, this literally just became available.\"\n\n\"Oh. Okay. Wow. That was fast,\" he said looking down at his watch. \n\nShe gave him the name of the school and the principal and told him to give her a call to set up an interview.\n\n\"An interview. As in...today?\"\n\nThe woman laughed politely then said, \"That depends. You should call today, but the interview won't not be until she's ready to see you.\"\n\n\"Wow. There goes my golf game,\" Pete said even though he didn't play golf.\n\nThe woman asked if he had any other questions, and when he said he didn't, she again encouraged her to call the school as soon as possible.\n\nHe'd tried substitute teaching the second half of the last school year, but in spite of his rather intimidating physical appearance, school-aged kids weren't impressed. Anytime there was a substitute, nearly every class did its best to push the sub to his or her limits, and he'd gotten his fill in short order and stop accepting calls to fill in.\n\nEven so, he was almost willing to sub again to avoid spending any more time alone than he had to. Since Gayle's passing a little over a year and a half ago, his entire life seemed empty and almost meaningless. \n\nNow, with no one to live for, and nothing to really do, this 'aide thing' might not be such a bad deal.\n\nHe sat down, looked at the number she'd given him, then decided, \"What the hell. Why not?\"\n\nThe school secretary patched him into the principal she told him was named Mrs. Pokorney. She, in turn, told Pete how happy she was he'd called her before explaining the situation.\n\n\"I have a young teacher who has serious mobility issues. I'm not at liberty to say any more, but I'm pretty sure she'll have no problem telling you why once you get to know her. Anyway, you'd basically be her legs, although you'll also be in the class with her nearly all the time. Since she teaches reading, you might be asked to read to the children or help them in small groups. Would this be something you'd consider doing?\"\n\nHe didn't need any time to think about and said, \"Yes. That sounds perfect, actually.\"\n\n\"Wonderful. Then let's get you in here for an interview so she and I can meet you.\"\n\nThe principal checked her calendar then proposed the following morning at 9am.\n\n\"That works. I'll be there at nine,\" Pete told her.\n\n\"Oh. I see here on your file you have a masters degree. Am I reading that correctly?\" the principal asked.\n\n\"Yes, ma'am,\" he said quietly. \"That is true.\"\n\n\"Interesting. I don't think I've ever had anyone work for me or even known of anyone with an advanced degree working as an aide. But as long as you're happy doing so, I'll be looking forward to having you on our team.\"\n\nPete thanked her for the call then went to make sure he had a suit pressed and ready to wear, even though knew he did. In fact, he had two of them, but not checking wasn't in his DNA so he went straight to the closet and selected not only the suit but the shirt, tie, shoes, and belt he'd be wearing with it.\n\nWith that settled he took a look around and wondered, \"What now?\"\n\nHe had a daily routine that helped him pass the time, and if this aide thing worked out, it would kill seven hours a day, five days a week. He'd be working six of those hours with a half hour for lunch plus commute time. \n\nFinancially, the pay was laughable. It was so low it made him shake his head. But if it kept him busy that would be great. If he actually got to know the kids and enjoyed being around them, that would be a huge bonus.\n\nAnd yet, without Gayle, it all seemed like...well, the saying 'vanity of vanities' came to mind. It was all nothing but marking time. He wasn't really living, he was really just existing. So far, no matter what he'd tried, Pete couldn't find anything to give his life purpose again. So for now, at least, he rigidly clung to his regimented lifestyle and would give this a whirl and keep his fingers crossed. And with the passage of some more time, maybe one day he'd even want to meet someone else.\n\nHe looked at his watch, heaved a sigh, then with no other decisions on the horizon, asked himself again, \"What now?\"\n\nPete was up at 5am without the aid of an alarm. He hit the head, Marine speak for going to the bathroom, then sat down with a cup of coffee in the dead silence of his home. Once 'the urge' hit he'd take care of business then head outside while it was still 'only' 75 degrees and ungodly humid in early August, and go for a run before it got really hot. \n\nHe'd never been fast, but Pete Harke could run forever. He plodded along at about an 8:30-a-mile pace then turned around after he hit the three-mile mark and headed home. \n\nOut of habit, he was mentally timing everything so he'd be ready to leave the house at 8:40 for the ten-minute drive to Fleming Island Elementary School leaving him time to find a parking spot and still be a couple of minutes early.\n\nOnce he was dressed, Pete tried to remember the last time he'd been in a suit, and a sick feeling washed over him when he realized it had been for Gayle's funeral. Otherwise, it had been at least five years prior to that. At any rate, he took a quick look at himself, and once he was satisfied that was the best he could do, he grabbed his wallet and keys and headed to the garage.",
        "Gayle's nearly-new car was still parked where it had been since the last time she'd driven it. He started it up occasionally to make sure it still ran, but it hadn't been driven in a very long time. \n\nPete drove a fully-loaded 2017 Jeep Cherokee Limited in what was called 'Light Brownstone Pearl Coat' which seemed like a lot of words to describe a color he couldn't pin down. Gayle would have known. In an instant. \n\nAll he knew was he loved the vehicle, and he'd bought on a whim one day hoping to distract himself from the ever-present grief, and it had done the trick. For maybe three days. And then it became old hat. He had less than 5,000 miles on it some 15 months later, and nearly all of that came from driving up to the Naval Air Station to work out.\n\nHe did his best to clear his head as he wondered what his first-ever job interview would be like. He nearly laughed out loud when he briefly wondered if he should have done some preparation.\n\n\"It pays $15,000 a year before taxes,\" he told himself. \"It can't be all that difficult.\"\n\nHe found a spot out near a tennis court that looked like it rarely got any use, parked the Jeep, then headed toward the office. There were no kids in school yet, so parent pick-up was empty except for one vehicle from the county.\n\nAs he reached for the door, an attractive, younger woman saw him and opened it for him.\n\n\"Good morning!\" she said very pleasantly as she eyed him up and down.\n\n\"Oh, hi. Good morning,\" Pete replied.\n\n\"Please tell me there's something I can help you with,\" the 20-something teacher said with a very bright smile on her pretty face.\n\nBefore he could reply, an older woman, whose voice he recognized said, \"There's nothing you can help him with Ms. Winters.\"\n\nThe older woman smiled at him then said, \"But I believe I can.\"\n\nThe younger woman rolled her eyes then let him go by her.\n\n\"You must be Mr. Hark,\" she said, still botching the name.\n\n\"Um...yes,\" he told her. \n\n\"I'm Diane Pokorney. It's a pleasure to meet you. Please come with me.\"\n\nAs they passed by several other women and one younger man, Pete knew they were whispering\u2014and staring\u2014at him. He also knew why but didn't care. He just followed the principal outside then under a covered walkway and finally up a flight of stairs that required him to reverse direction once.\n\n\"Ms. Tanner's room is 216. So two doors to our left.\"\n\nIt was open so the principal said, \"Knock, knock!\" then walked in.\n\n\"Diane! Hi. Good morning,\" the younger teacher said.\n\nJust as Pete stepped into the room Chelsea was saying, \"Did our 9 o'clock...\"\n\nShe stopped talking when she saw him and sat there in stone-cold silence.\n\n\"Chelsea Tanner? Pete Hark. Pete? Chelsea Tanner.\"\n\nHe smiled as he walked straight over to her then extended his hand as she continued to stare.\n\n\"Chelsea?\" Diane said wondering if she was experiencing some sort of 'brain freeze'.\n\n\"Oh. Yes. Good morning. Pete...right?\"\n\n\"Yes. Pete. Harke,\" he said making sure Diane could hear the 'e'.\n\n\"Oh, okay. So the 'e' isn't silent,\" Chelsea said, now smiling herself as she looked back at the paper on her desk with his personal information on it.\n\n\"No. The 'e' demands its day in court,\" he told her with a smile.\n\nBoth she and the principal laughed before Diane asked him to have a seat.\n\nDiane went over the kinds of things he could expect to do, again emphasizing how he'd mostly be taking the kids everywhere they needed to go.\n\n\"Would you mind reading to the kids?\" Chelsea asked. \"Even my voice gets tired easily now.\"\n\n\"Sure. Anything. I'm not one to look at a job description. If I accept it, I'll do anything I'm asked.\"\n\n\"I'm just curious, Mister...Harke,\" Diane said, clearly pronouncing the 'e'. \"Why you're doing this isn't my business. We're very glad to have you. Trust me on that. But I really am curious.\"\n\nPete took a minute or so to quickly explain his former career, the passing of his wife, their son's impending graduation from flight school, and his brief-but-unsatisfying fling with substitute teaching.\n\nBoth women told them how sorry they were for his loss then told him they understood his very justifiable pride in his son's accomplishments. \n\n\"We have several Navy wives on staff here and one retired Navy man who teaches fifth-grade math. I'll introduce you on our way out,\" Diane told him.\n\nThey chatted for maybe five minutes before Diane asked Chelsea if she had any more questions for Mr. Harke, and she said, \"No. I think I'm good.\"\n\n\"All right. Well, she and I will discuss this later on, and I'll call you with our decision,\" Diane told him as she stood up indicating the interview was over.\n\nPete knew it wouldn't be grueling, but he almost laughed at being told that was it.\n\nThey dropped by the retired 'Navy guy's room and Pete shook hands with him after being introduced. He was probably around 40 which made sense if he enlisted at 18 and retired with 20 or even 22 years.\n\nThe other man didn't even say 'hello'. All he heard was 'Marine'. The first thing out of his mouth was, \"What'd you retire as?\"\n\nTaken aback, but not letting it show, Pete calmly asked, \"In terms of rank?\"\n\n\"Yeah. Lemme guess. You were a...gunny. Am I right?\"\n\nWhen Pete hesitated, the other man said, \"No? Okay. So...you were a master sergeant, huh? That's not bad. I was up for senior chief myself but turned it down.\"\n\n\"Oh, I never made master sergeant,\" Pete replied calmly.\n\n\"Okay. So you were a gunnery sergeant. Hey, I retired as an E-7, too.\"\n\n\"Right,\" Pete said with a smile. \n\n\"Listen, maybe we can sit down and swap sea stories one of these times,\" he said before asking without so much as a pause, \"so what subject are you teaching?\"\n\nDiane jumped in and told him, \"No, Pete's going to be working as an aide. To Chelsea. He'll walk the kids around campus for her.\"\n\nThe other man's demeanor changed immediately now that he felt he was talking to a mere 'subordinate.'\n\n\"Oh, okay. Well, it takes a lot of time going to night school to get a degree. It's not easy, and that's not for everyone. Trust me, I know from personal experience.\"\n\nHe gave a dismissive look at Pete then said, \"You're getting up there, but you're not too old to do that yourself, you know.\"\n\nDiane was smiling but didn't say a word.\n\n\"I'll uh, I'll give that some thought,\" Pete said as politely as he could.\n\nHe told the retired Navy chief it was good to meet him but only got, \"Yeah. Uh-huh,\" in return as the other man, who's name was Mike, refused to even look at him let alone shake his hand.\n\nDiane was surprised by the cold shoulder treatment and told Pete so once they were well out of earshot. \n\n\"I honestly thought you'd really get along. You know, with both of you being ex-military.\"\n\nPete had only just met this...Mike guy...but it appeared he might have a bit of a chip on his shoulder. It was unfair to decide so early, but Pete had met many hundreds of Marines and quite a few sailors over the years and was pretty sure he was right. Even so, it didn't matter as far as he was concerned. They were both retired and there was no rank. And yet Mike seemed to want to laud it over him that he was a teacher while Pete was but a lowly aide. \n\n\"C'est la vie,\" Pete said to himself.\n\nTo Diane he said, \"He's probably just busy getting things ready for when the kids get here.\"\n\n\"Right. Yes. That makes a lot of sense,\" he replied.\n\nThey stopped just outside the office to say goodbye to one another when Diane noticed a half dozen female teachers standing there looking and pointing.\n\n\"I'd say you've created quite a stir, Mr. Harke.\"\n\nHe glanced inside and got a range of reactions from smiles to a wave to eyes that quickly looked away to an air kiss.\n\n\"Oh. Um...sorry?\" he said with a smile and a shrug of the shoulders as he turned back toward her.\n\nDiane laughed then said, \"Listen, I'm not supposed to tell you this, but I know Chelsea really likes you.\"\n\nWhen Pete smiled Diane immediately thought about her young teachers and said, \"No. Not...not like that.\"\n\nPete chuckled and said, \"I wasn't thinking that. All of these girls... Sorry. Most of these younger teachers are almost young enough to be my daughters. Chelsea included.\"\n\n\"I'm not supposed to say this either, and I haven't even said the first thing I was going to tell you yet, but you are a very um...distinguished-looking man, Mr. Harke.\"\n\nHe laughed again then asked, \"Is that code for...old guy?\"\n\nDiane laughed, too, then assured him it wasn't before getting back to the first 'taboo' topic.\n\n\"I'm going hire you. Just please don't tell the county I said that until after the offer is formalized. It's a big no-no to directly tell anyone you do or don't plan to hire them.\"\n\n\"No worries,\" he told her. \"And thank you. I really need to spend as little time around the house as possible.\"\n\n\"I can't imagine,\" Diane said supportively. \"My husband and I divorced four years ago, and it was for the best, so I have no regrets. But losing someone you love? I really can't imagine, and I am truly sorry for your loss.\"\n\n\"Thank you. That's very kind, Mrs. Pokorney,\" he told her.\n\n\"Diane. Please. I'm not big on the whole 'principal' thing. I taught for 16 years before becoming an administrator, and my main goal is to help teachers help kids learn. So...Diane is just fine.\"\n\n\"Well, thank you, Diane. And I'd prefer Pete, but you're the boss,\" he replied. \n\n\"Then Pete it is,\" she told him. \"So the county office will be calling you. They have some pre-employment training everyone has to sit through, and that's where you'll fill out all the paperwork, etc. Once that's done, you'll be all set to start helping out.\"\n\n\"Sounds good, Diane. I'll take of care of everything I can on my end as soon as possible.\"\n\nShe smiled, extended her hand, then wished him well. Pete did the same and headed home. Or rather...back to the house. The big, empty house where he lived alone.\n\nIt was a little after one o'clock when his phone rang, and once again, the caller was someone named 'Clay County Schools' so he answered it with a cheerful 'hello'.\n\nThe mandatory training Diane mentioned was being held the following day at 8am at the county office, and Pete told her he'd be there with his social security card, DD-214, and the other paperwork she told him he'd need.\n\nThe training was four hours in length and covered standard topics like sexual harassment and every employee's legal requirement to immediately call a 1-800 number in the event they so much as suspected a child was being abused. \n\nPete knew that sort of thing happened all too often, but most of what got reported was teacher-student misconduct with students in high school or occasionally junior high. But this was referring to the kinds of things that happened mostly at home where someone on whom the child was dependent was destroying their child's trust in adults, and in many cases, causing emotional scars that would never heal. Just the thought sickened him, and he hoped he'd never have to deal with it.\n\nHe'd had more than his share of unpleasantries having spent two tours in Iraq and two more in Afghanistan. In addition, there were the kinds of disciplinary infractions officers and Staff NCOs regularly dealt with from Marines bouncing checks to being drunk and disorderly to the kind of 'hanky panky' that took place with married Marines's spouses far too often.\n\nBut they were adults, and these were children. The school had a pre-K program so children as young as three attended. Pete could only shake his head at the thought of any adult doing anything to any child, let alone one that young.\n\nOther than that, it was standard fare, and although he wasn't required to go into work until the following day, he drove to the campus and stopped by the office to let Diane know he was available.\n\n\"Oh. Um, just so you know. If you stay, you won't get paid for today,\" she reminded him.\n\nPete tried not to laugh, then very quietly said, just in case other aides he didn't know were nearby and might take offense, \"I won't really be getting paid tomorrow, either.\"\n\nDiane 'got it' and tried not to laugh, but between his very pleasant sense of humor and his...even more-pleasant good looks, she found herself laughing anyway.\n\nHe told her he was going to head upstairs, and as he went to leave, there was another small gaggle of younger, female teachers standing there waiting to talk to him.\n\n\"So,\" one of them said with a smile. \"We understand you're a part of our little family now.\"\n\nShe was probably in her early 30's, very cute, and there was no wedding ring on her hand. Pete intentionally raised his left hand up to his chin, left it there then sort of rubbed it before answering to make sure she saw his. \n\n\"Yeah. I guess I am.\"\n\n\"Well, if you need any help with anything\u2014anything at all\u2014I'm in room 137 just out the door and five doors down on your left, okay?\"\n\n\"Oh. Sure. Thank you very much,\" he said as he went to step around here.\n\n\"And my name's Wendi,\" she let him know.\n\n\"Wendi. Got it. I'm Pete.\"\n\n\"Uh-huh. I know,\" she said in a way that caused one of the other women to groan with embarrassment.\n\nShe looked at the other woman then smiled before saying, \"We all know.\"\n\nThe other teachers were much less forward and politely introduced themselves letting him know what grade they taught and where their rooms were. The difference was there was no implication about his feeling free to drop by at all, let alone\u2014anytime. Several of them mentioned their husbands and their children, and two expressed their condolences for his having lost his wife.\n\nHe took the time to politely chat with each one of them as he filed away who they were and where their rooms were before finally getting out of the office. \n\nAs he headed for the building where Chelsea worked, Wendi also left the office and ran up beside him.\n\n\"Hi, again,\" she said with a smile. \"I uh, I thought I'd show you where the teacher's lounge is and where your box is located. Someone already put your name on it, so may I give you a quick tour?\"\n\n\"Of course,\" he told her even though Diane had already pointed out where the lounge was located.\n\nPete opened the door for her, and Wendi smile brightly and said, \"Handsome and a gentleman. I'm impressed.\"\n\nHe smiled but didn't reply as she pointed out the obvious like the snack and beverage machines.\n\n\"And...this is where our boxes are. See? Yours is right here. Pete Harke,\" she said making sure to pronounce the 'e'.\n\n\"And this is my...box,\" Wendi told him while sort of loosely pointing toward some boxes on the wall across from them then slowly-but-deliberately turning her index finger to a place where Pete wasn't about to look. \n\nThey were the only people in the room, but Pete didn't give that a second thought until she spoke again.\n\nWendi looked right at him then said, \"I like older men, Pete. Especially handsome, older men. So if you wanted to say...check out my box...you could do that anytime.\"\n\nHe wasn't sure when the last time was he'd heard the term 'box' used for that part of the female anatomy, but he was definitely familiar with the usage. He was also used to being flirted with although that rarely happened anymore because he'd become a kind of recluse who rarely left home except to run, swim, or go to the gym.\n\n\"Ah, I see,\" Pete told her as he saw her looking up at him and smiling in the way he remembered Gayle looking at him whenever she wanted to 'go to Funky town', their code word for making love.\n\n\"So if you need help\u2014of any kind\u2014you just let me know, okay?\" she told him as she ran a finger from the top button on his shirt to just above his naval.\n\n\"So much for sexual harassment training,\" he said to himself after telling Wendi he knew where to find her.\n\nHe excused himself then bounded up the stairs and nearly ran into Mike who was coming down.\n\n\"Whoa! Easy there, Jarhead. You uh, you might wanna try looking up once in a while,\" Mike told him as though he was talking to a young sailor.\n\n\"I'll make a note of that,\" Pete told him.\n\n\"You headin' to Chelsea's room?\" Mike asked him.\n\n\"I am.\"\n\n\"Damn shame. The whole thing. They not only nearly killed her, but her jerk of a husband left, too.\"\n\n\"What?\" Pete asked not sure he'd heard correctly.\n\n\"Yeah. The guy evidently bailed a couple of months after their kid was born. I never really asked her about it, but the word is he couldn't deal with a wife who couldn't, you know...\"\n\nMike took a look over his shoulders then started thrusting his hips.\n\nHe was standing on the step above Pete so they were at eye level when Mike leaned in a little closer then said, \"Can't say I blame him, you know? I mean, can you imagining being that age and never bein' able to get some?\"\n\nHaving spent his adult life around military types, and most of them men, nothing surprised him anymore, but some things still disgusted him.\n\nHe didn't dignify the comment with a reply. Pete just said he should probably get going.\n\n\"Yeah. Right. You uh, you gotta big job there...Gunny,\" he said rather snidely as he slapped Pete on the shoulder with some papers he was carrying and folded in half to hit him with.\n\nFor the second time in several minutes, Pete shook his head as he got to the top of the stairs and saw the door to Chelsea's room was closed.\n\nHe knocked quietly and heard a pleasant, \"Come in!\"\n\nHe opened the door and smiled as Chelsea realized who it was.\n\n\"Pete! Hi. I didn't expect you until tomorrow,\" she told him.\n\n\"I uh, I thought there might be something I could take care of for you today so I swung by after we finished with the training at the county office.\"\n\n\"Oh, right. That's some quality stuff, huh?\" she said with a pleasant smile.\n\nPete laughed and told her the best part was being done with it.\n\nChelsea laughed, too, then said, \"I do have a few little things, but unless you can get my room switched to the bottom floor, that'll be it until tomorrow.\"\n\nShe said it in a way that made it clear she thought it wasn't possible then started to tell him what the little things were.\n\n\"I'll knock all of those out for you, but can you give me a few minutes to take care of something?\"\n\n\"Oh. Sure. Of course. You're not even supposed to be here today, remember?\" she said with the same happy smile on her face.\n\nHe headed back to the office and saw Diane talking to a man about his age and his height he hadn't seen before, so he waited until they finished.\n\n\"Oh, Pete! Hey. I want to introduce you,\" Diane said when she saw him standing there.\n\nThe other man turned to face him, and Pete saw a name tag on his shirt that said 'Doug'.\n\n\"Doug is our head custodian, and he's also retired Navy. I was just telling him about you, and then you walked in.\"\n\nThe two men shook hands and unlike Mike, Pete could tell he and Doug were going to hit it off.\n\n\"Nice to meet you,\" Doug said. \n\n\"You, too,\" Pete told him before saying, \"I have a question for Diane that I think may involve you. Can you stay for just another minute?\"\n\n\"You bet,\" Doug told him.\n\nPete explained the problem and offered a solution to it before Diane said, \"I'd love to move her, but the custodians are swamped this time of year. And making matters worse, one of them is out due to a family emergency.\"\n\n\"I can take care of it by myself,\" Pete told her. \"I just didn't know if I might need keys or something only Doug would have.\"\n\n\"That's a lotta work, buddy,\" Doug told him.\n\n\"I've got nothing better to do,\" Pete told him jokingly even though it was the gospel truth.\n\n\"I'll take photos of both teachers' rooms then recreate them exactly as I move everything around. If that's okay.\"\n\n\"I like this guy!\" Doug told Diane.\n\n\"Yes. I think he's going to fit in quite nicely around here. I'll go over with you and let Ms. Bonaro know you have my approval. She won't be happy, but...oh, well.\"",
        "\"And let me know if I can help with anything,\" Doug told him before they shook hands again.\n\nPete turned to leave when Doug said, \"Oh. Have you met Mike yet?\"\n\nPete started laughing, and as soon as he did, Doug roared.\n\n\"I take it you have!\" \n\n\"Oh, yeah. Let's just say we've 'run into each other' a couple of times already.\"\n\n\"Okay. So you don't need me to give you a 'heads up' then.\"\n\n\"No. I pretty much broke the code during our first encounter.\"\n\nDoug laughed again then said a little more quietly, \"I call him Mr. One-Upper.\"\n\nPete gave him a puzzled look so Doug explained.\n\n\"Oh, you haven't seen that part of him yet, huh? Well, you have something to look forward to then. Let's just say...if you've climbed Mount Everest, Mike's pole-vaulted over it. With one hand.\"\n\nPete laughed again then told him about the 'you must be a gunny' encounter.\n\n\"That's Mike. He's got this need to be the Big Dog at all times. Which is funny because he's...\"\n\nDoug made sure no one else could hear as he said, \"A short shit.\"\n\nDoug was at least six-feet tall, too, and Mike was probably about 5' 8\" and maybe a buck fifty\u2014soaking wet.\n\n\"He was testing the waters with you,\" Doug added.\n\nHe leaned closer again then said, \"That's the kind of 'dick dance' he does with everyone about everything. No matter what you've done, he's done it better, smarter, or faster.\"\n\n\"Well, forewarned is fair warned, right?\" Pete replied.\n\nDoug laughed again then said he needed to get going.\n\n\"Right. Unlike me you actually work for a living, don't you?\" Pete said.\n\nDoug stopped, smiled, then said, \"Diane told me you were an officer. But because I like you, I'm not gonna you sh...grief...about me working for a living.\"\n\nPete laughed, too, then said, \"Okay, fine. But I could say the same thing after you made chief.\"\n\nDoug roared again, pointed at Pete, then said, \"Oh, yeah. We're gonna get along quite well.\"\n\nPete told him he agreed then said, \"As far as who we used to be, the key words are 'used to'. Now we're just...\"\n\nIt was his turn to lean in as he said, \"Joe Shit the rag man.\"\n\nDoug roared a third time then shook hands one more time.\n\n\"You're all right, Pete.\"\n\n\"For a Jarhead, right?\"\n\n\"Hey, I can tell good people when I meet 'em,\" Doug said as he waved before leaving the building.\n\nDiane was in Chelsea's room by the time he got back there himself, and he wondered what he'd done wrong when he saw her crying.\n\n\"Oh, here he is now,\" Diane said who had a hand on Chelsea's shoulder. \n\nShe turned to Pete and said, \"I think someone is very grateful.\"\n\n\"Oh. I'm...I'm glad,\" Pete said, visibly relieved those were tears of joy.\n\n\"These stairs are a real challenge, and I should have insisted on moving her. I'm just glad you took the initiative. I came up here to let Chelsea know and to apologize for not pressing the issue myself.\"\n\nNo one said a word so Diane excused herself and again told them to call if she could help.\n\n\"Are you okay?\" Pete asked once they were alone.\n\n\"Yes. Sorry. I...I get emotional very easily now, and when I heard I was moving downstairs and it was because of you, I just...\"\n\nThere were some tissues just out of her reach so he grabbed the box and set them next to her.\n\n\"Thank you,\" she said before grabbing one. \"It's been a real challenge for me trying to adjust to my new life. Such as it is.\"\n\n\"I can only imagine,\" he told her sympathetically.\n\n\"Well, you, too. I just feel so sorry for you,\" Chelsea said as she dried her eyes. \n\nAlmost immediately, the smile was back as Pete explained what he planned to do.\n\n\"What's most important to me is making sure you have everything you need to continue your planning. So if at any time you need something you just let me know, okay?\"\n\nChelsea smiled then said, \"I have no idea why you, of all people, are here doing a job...excuse me for saying this, Pete, but...so far beneath you.\"\n\nHe didn't say anything knowing she had something else to say.\n\nShe looked right at him then said, \"As Diane said, I'm just very grateful you are.\"\n\nPete was able to finish moving both teachers but it took a lot longer than he'd anticipated because Ms. Bonaro was a no-kidding pack rat. \n\nLong after the last teacher left campus, Doug stopped by and offered to stay late and help him. Pete thanked him but refused the offer, but he did need a favor in order to stay once the last custodian went home. \n\nSpecifically, that meant Doug trusting someone he barely knew with the key to the main gate, which Pete made sure to lock on his way out. He also showed up at 6am when Doug started work the following morning and handed him the key when he drove up.\n\n\"Thanks, shipmate,\" the retired Marine said to the retired sailor.\n\n\"Anytime, Marine,\" Doug told him. \"You goin' home and coming back?\"\n\n\"No, I'll just stay here and find something to do until Chelsea gets in.\"\n\n\"Why am I not surprised?\" Doug said with a laugh as he unlocked the gate.\n\n\"But I will need you to let me into the room.\"\n\n\"You don't have your own key yet? Follow me.\"\n\nDoug opened the office then opened the assistant principal's door and finally opened a box that had all of the school's keys in it that hadn't yet been handed out.\n\nDoug held out the single, gold key and said, \"There you go.\"\n\nAs he walked to his new classroom, Pete thought back on all of various assignments he'd had over the years to include command of a Marine regiment with just over 2,000 Marines at his beck and call. Now here he was feeling good about getting his own key to a room that wasn't even his so he could walk kids he hadn't yet met around a campus he still wasn't familiar with.\n\n\"Oh, how the mighty have fallen,\" he said quietly with a chuckle as he unlocked the door and turned on the lights.\n\nChelsea needed to be there by 8 o'clock so at 7:45 Pete went out to the parking lot and waited for her to arrive. When he saw her pull in he smiled and waved at her then walked over to her car. Once she turned it off, he opened her door and told her 'good morning'.\n\nHis presence was met with a warm, genuine smile, and a, \"Good morning to you, too, Pete!\"\n\nHe watched her slowly and painfully lift and turn her legs to get out of the car and noticed she winced several times. Once her feet were on the ground, she pulled out her cane and opened it up.\n\n\"Here. Let me help,\" he said as he moved closer to let her use an arm for support.\n\nShe put her left hand on top of it but still struggled to stand up. Pete slid his hand under her armpit and lifted her. His first thought was she was light as a feather, and his second was how horrible he felt for her having endured so much avoidable pain at such a young age.\n\n\"Thank you,\" she said, still smiling once she was standing up.\n\nChelsea took two steps, and once she was clear of the door, Pete said, \"I got it,\" and shut it for her.\n\nShe took one slow painful step before he caught up then said, \"Would you be embarrassed to let an old man lend you an arm?\"\n\n\"No. Not at all,\" she told him. \n\nShe put her free arm in his and rested her hand on top of his forearm then said, \"Especially if the old-er man is such a gentleman.\"\n\nPete smiled then said, \"You forgot 'dashingly handsome'.\"\n\nChelsea laughed a genuine laugh, looked up at him and said, \"I was thinking...roguishly handsome...but, okay!\"\n\nBy the time they got to their classroom, Chelsea was out of breath.\n\n\"So how did you ever get up those stairs?\" he asked as he opened the room door for her.\n\n\"Well, I'd stand there for a couple of minutes catching my breath then go up one step, catch my breath again, then go one more.\"\n\nThere really wasn't anything for Pete to say, but Chelsea did thank him again for moving her downstairs.\n\n\"Well, that was Diane. I couldn't have made it happen without her,\" he tried saying.\n\n\"Yes, but had you not pushed her, she wouldn't have done it. I love Diane, but she hates conflict. Any and all conflict. She'll placate a parent to avoid suspending a child then placate the teacher when asked why the kid is still in school.\"\n\n\"Oh, wow. Yeah, that wouldn't have worked well in my former life.\"\n\nChelsea laughed again as he helped her get to her desk. She thanked him one more time then said, \"You were in the Marines, right?\"\n\nPete didn't tell her that Marines never said 'in the Marines'. They said, \"I was a Marine, I was in the Marine Corps, or 'in the Corps' but never 'in the Marines'.\"\n\n\"Yes. Yes, I was.\"\n\n\"Did you enjoy it?\"\n\n\"I did. Not every single day, of course, but yes, I really did enjoy it.\"\n\n\"That's wonderful. I really admire those who serve in the military and as first responders. I've also enjoyed teaching since my first day in the classroom. Everything was always about the kids and getting the best lesson plan possible so they'd not only learn but have fun doing it.\"\n\n\"Has that changed?\" Pete asked rather gingerly.\n\nShe thought for a moment then said, \"I don't know. I still love being here, and I'm excited about the kids coming in on Monday. It's just so much more difficult, you know? If not for my mom watching Bryce, this might be too hard to do now.\"\n\nShe smiled again then added, \"I would also say that without your help this would be impossible to do.\"\n\nShe saw the way Pete was looking at her so she asked him if there was something he wanted to say.\n\n\"No. It's none of my business,\" he said with a smile.\n\n\"No. I want you to be ask me. We're going to be stuck in this little room five days a week until the end of May, so we need to be able to talk to each other, don't you think?\"\n\nPete smiled again then told her, \"Good point.\"\n\n\"So...ask me,\" she repeated, smiling back at him.\n\n\"Okay. I was wondering if your husband is still involved in your life. More specifically, I guess, I'm talking about with regard to your son.\"\n\nHer smiled disappeared and Chelsea looked away causing Pete to feel like he'd crossed a line in spite of what she'd just said.\n\n\"Hey. That's okay. You probably have things for me to do anyway, right?\"\n\n\"I do, but I want to answer your question,\" she told him as she looked back up at him.\n\nPete waited for her to collect herself then Chelsea tried to answer him.\n\n\"He uh, he felt...overwhelmed by everything. He wasn't wild about having a child so soon after getting married, but sometimes things happen, you know? I wasn't ready, either, but once I found out I was pregnant, my attitude changed completely, and I wanted this baby more than anything. Then on top of that, there was the problem that caused all of this, and on top of that there were medical bills on top of medical bills. So about four months after Bryce was born, Dennis, my husband, told me he needed some space.\"\n\n\"Space. Okay,\" Pete said trying not to let sarcasm creep in.\n\n\"I was in physical therapy five days a week, he'd already missed a ton of work, and I wasn't getting paid beyond the unemployment money that ran out after a year. Anyway, he moved out and I was absolutely devastated. My mom and dad were furious, but I convinced them not to confront him, and they convinced me to move back in with them. A few months later, Dennis's need for 'space' turned into being served papers notifying me he was filing for divorce, and I had no interest in contesting it. So now I'm 28 years old, have a two-year son, can barely walk, and owe close to...well, a ton in medical bills.\"\n\n\"May I ask another personal question?\" Pete said.\n\n\"Sure.\"\n\n\"Are you by any chance suing the doctor or the hospital?\"\n\n\"I do have an attorney, yes. She agreed to take me on on a contingency basis. So far, she's filed the suit against both the doctor and the hospital, but we're nowhere near a trial date or a settlement. She keeps gathering information while the hospital keeps trying to put up roadblocks, and the doctor isn't allowed to talk to us. So while that's a long answer to a short question, it's the best I have.\"\n\n\"I'm sure you're already tired of getting sympathy from everyone, so I'll quit saying how sorry I am,\" Pete began.\n\n\"Thank you. I really am 'up to here' with all the 'I'm so sorry comments' even though I'm sure they're sincere.\"\n\n\"I understand. I went through something similar with Gayle's passing.\"\n\n\"I guess that's better than being told 'sucks to be you', right?\" Chelsea said surprising Pete and causing him to laugh.\n\nShe laughed, too, and for the first time, he saw her not as someone who was quasi-disabled but as a caring person with the same needs as everyone else along with a warm smile and a very pleasant sense of humor. \n\nWhen she smiled, he couldn't help but think she was actually kind of...pretty...in a way he couldn't quite explain. Pretty was such a broad, generic term that it could mean almost anything, but he really did think the word applied in her case. Then again, he was here working for her so how she looked was irrelevant.\n\n\"So could you take care of that for me, please?\" he heard Chelsea say.\n\nHe was obviously somewhere else, lost in his thoughts, when she asked him to do something.\n\n\"My apologies...boss,\" he said with a smile. \"What was that?\"\n\n\"Boss. That's funny,\" she told him. \"I was saying we need copies of every story in the little cubbies in the back of the room.\"\n\nPete remembered moving the lattice work of boxes downstairs and now knew exactly what she meant.\n\n\"Okay. How many of each?\"\n\n\"Well, we have five classes a day times...let's say 25 kids...plus maybe five extras? Each?\"\n\nLike many women, Chelsea tended to 'give orders' in the form of questions. Pete knew she was telling him to make 150 copies of each story. That wasn't the hard part. What was the fact that there were roughly 50 stories and, if they were just one page in length, still that added up to, well, a lot of copies.\n\n\"Do we have that much paper?\" he asked.\n\n\"Um, no. But it's never been an issue. You just go to the copy room and print them. When the reams of paper get low, we tell Diane and she orders more.\"\n\n\"Isn't there some way to do that many copies that doesn't involve one person taking up a machine for what will be a very long time?\"\n\n\"No, not really. And the last day before kids arrive is usually pretty crazy in the copy room so you could be waiting for a while. But I don't see another alternative. Do you?\" she asked.\n\n\"Well...I do have an idea,\" he told her as he got up and went to the back of the room.\n\nHe grabbed the cleanest copy he could find of each story, some of which were several pages long which now upped the total by hundreds of extra copies.\n\n\"Do you need me to do anything else before I get started on these?\" he asked once he had what he needed.\n\n\"Um...no. Not now anyway. But when you get back, we need to make up name cards for each student. I set them out in alphabetical order on the first day, and that makes getting them seated easier, and it also helps me remember their names. Once I memorize a name, I take the card away. In the past, that would be 2-3 days max for all five classes. This year, I'm very concerned because my short-term memory is still nowhere near what it used to be.\"\n\n\"Got it. Let me get working on these, and...oh. Do we have enough 3 x 5 cards or whatever you're thinking about using?\" he asked.\n\n\"Dang it!\" he heard her say. \"You see? That's exactly what I'm talking about. I meant to have my mom pick those up yesterday and completely forgot about it. Even talking it about it just now I had no idea I didn't have them here in the classroom until you asked.\"\n\n\"No worries. I'll take care of it,\" he told her with a smile.\n\n\"The school doesn't provide those, I'm afraid. So I'll have to pick them up tonight. It's no big deal,\" she said, also with a smile.\n\nPete looked at his watch then told her he'd be back in less than half an hour.\n\n\"Um, unless you're a magician, you're going to need a lot longer than that.\"\n\nPete laughed then said, \"I'm not a magician, but I am going to work a little magic.\"\n\nHe started to walk away and saw Chelsea watching him.\n\n\"Okay. If you say so,\" she told him.\n\n\"Oh, I do say so,\" he said back with an even bigger smile.\n\n\"Uh-huh. You'll learn,\" she said sweetly. \n\nTen minutes later, Pete was at an Office Max located just two blocks from the school and in less than five minutes, he had the order completed and paid for along with several packs of 3 x 5 cards.\n\n\"You can come back and pick these up anytime after noon today,\" the young woman who helped him told her.\n\n\"All right. Thank you very much. I'll see you then,\" Pete said.\n\nWhen he walked back into the classroom, Chelsea looked at the wall clock then at his hands which were empty except for a bag from the store she'd often used herself.\n\nHe set the bag down then asked if she had the class rosters so he could start on the name tags. Which weren't tags but folded 3 x 5 cards.\n\n\"Did you take all those copies off campus?\" she asked as she handed him the rosters.\n\n\"I did,\" he told her.\n\n\"Um, do you have any idea how much that's going to cost?\"\n\nPete laughed as he answered her.\n\n\"I not only have an idea, I have the exact amount right here.\"\n\nHe pulled that receipt, which was in the bag with the cards and flashed it as he sat down to get started on the next task.\n\n\"Pete? I can't afford to pay for copies anymore. I used to do that myself all the time. But now...\"\n\n\"You're not paying for anything,\" he told her with a smile as he opened the first pack of index cards.\n\n\"Wait. Did you somehow get Diane to agree to pay for those?\" she asked, the disbelief in her voice audible.\n\n\"No. I didn't ask her,\" he replied as he got out the list for their 1st-period class.\n\n\"Then she's not going to pay for them. And I can't pay for them,\" Chelsea, the disbelief turning to worry.\n\n\"No. It's already taken care of,\" he told her as he began carefully folding cards in half.\n\n\"Wait. How is it taken care of?\" she asked.\n\nHe looked up at her, smiled, then said, \"You see, I have this thing called a credit card. It's pretty amazing. You just hand it to someone and they give you stuff or tell you it's taken care of.\"\n\n\"Hah, hah,\" Chelsea said flatly. \"Pete. You can't be spending that kind of money on stuff for my classroom!\"\n\n\"Oh, I thought it was...our classroom,\" he said pretending to be hurt.\n\n\"Stop!\" she said once she knew he was teasing. \"Yes, it is ours, but you can't be spending that much money. I know you have a pension or something, but I also know people in the military don't make very much money. I've heard many times it's less than what teachers make, and we make...well, not a lot.\"\n\nAs someone considered a 4th-year teacher with a bachelor's degree, Chelsea made just over $42,000 a year. Dennis paid child support, and she no longer had a mortgage payment, but between her car, food, gas, insurance, clothing, and the endless medical bills, she was in a sea of red ink.\n\nHis last year on active duty, Pete's base pay alone was just shy of $8,600 a month. In addition he got a housing allowance of $2,500 a month or base housing at no cost plus additional money for food. He and Gayle had socked a way a ton over the years, and when she died, Pete collected an additional $100,000 from a policy they'd paid on for since he was a first lieutenant. \n\nHe owned his home and Jeep outright and had more money than he'd ever be able to spend, especially considering how he never went anywhere or did anything. So a couple of hundred dollars was chump change.\n\n\"I get by,\" he told her quietly. \"Financially speaking. So don't give it another thought, okay?\"\n\n\"I can't help but think about it, Pete. That's my responsibility, and I can't pay for it.\"\n\n\"Then I'll think of some other way you can pay me back. Deal?\"\n\nWhen he smiled at her, Chelsea's cheeks turned slightly red and she looked away immediately.\n\n\"Did...did I give you all five class rosters?\" she asked as she quickly shuffled through the stack of papers on her rather messy desk.",
        "\"You did,\" Pete said quietly as he went back to folding, hoping he hadn't somehow unintentionally embarrassed her.\n\nLess than 30 minutes later, he had five very neat stacks of cards with each child's name on them.\n\n\"Okay. What's next?\" he asked cheerfully.\n\n\"You finished those already?\" she asked with more disbelief.\n\n\"It was just writing names on cards,\" he said with a smile as he held up an example.\n\n\"And your handwriting is neat!\"\n\nChelsea faux glared at him then tried not to smile when she said, \"You know I hate you, right?\"\n\nPete chuckled then told her, \"You better not talk like that. People might get the idea we're married or something.\"\n\nChelsea's eyes opened wide in disbelief (again) before she started laughing.\n\n\"Pete! That was...terrible!\"\n\nShe stopped laughing, tilted her head, then said, \"Terrible but funny. Very funny, actually.\"\n\n\"What can I say? I'm a regular comedian,\" he told her before asking what she was working on so he could help with it.\n\nAs it got closer to noon he asked what she was doing for lunch.\n\nHe saw a puzzled look on her face then heard her swear for the first time.\n\nHer earlier 'dang it' got replaced with something stronger when she remembered her lunch was sitting on the kitchen counter at her mom and dad's.\n\n\"Dammit! I forgot my lunch!\" she said.\n\nWithin seconds he saw her eyes filling with tears again.\n\n\"I set it out on the kitchen counter and left without it. I can't call my mom because she's at the doctor's office with Bryce. And even worse, I can't afford to be buying lunch anymore, either.\"\n\nThis time, Chelsea grabbed a tissue herself then apologized again for getting so emotional.\n\n\"You don't need to apologize,\" Pete told her rather quietly. \"You're under as much stress as a lot of soldiers and Marines wounded in combat. This is as much PTSD-related as anything they're going through.\"\n\nThinking he was helping, he was shocked and saddened when, after looking right at him as he said that, she started crying.\n\n\"I'm sorry. I was only trying to be helpful,\" he said as he stood up and moved toward her. \"I'm obviously not very good at it.\"\n\nChelsea was shaking her head and trying to get control.\n\n\"No. That's not true at all,\" she said as she tried taking a couple of slow, deep breaths.\n\n\"Then...what is it?\" he asked hoping to try and make things right.\n\n\"It's...nothing,\" she told him, her breathing still ragged.\n\n\"Is it me? Am I the cause of this?\"\n\nThis was all so new to him that Pete wasn't sure what to say or do.\n\n\"No,\" she told him. \"Well, yes, but...\"\n\n\"Wait. I'm the reason you're crying?\" he asked quietly.\n\nHe was standing beside her desk and knelt down so that he'd be able to talk to her at eye level, but she wasn't looking at him.\n\n\"No. You...you didn't make me cry, Pete. Your words did.\"\n\n\"Chelsea. I...I am so sorry.\"\n\nShe shook her head then finally turned toward him a little then told him, \"You've done nothing but make me feel like...like you care about me since the first time we met, and no one, except my mom and dad...\"\n\nShe couldn't finish talking, and started crying again.\n\nPete reached over and gently put a hand on her back.\n\n\"You okay?\" he asked very quietly.\n\nShe was nodding her head then fell apart.\n\nOut of nowhere she turned and put her arms around him as she cried and sobbed. The angle was awkward and uncomfortable, but he willed himself to tough it out for as long as she needed. The 'jag' lasted maybe two minutes before she was able to pull herself together enough to talk.\n\n\"I don't know how I'm even going to be able to look at you again,\" she said as she grabbed more tissues. \"You have to think I'm a total basket case.\"\n\nPete shifted his weight then said, \"No. No, I don't.\"\n\nShe kind of turned toward him and cut her eyes his way then looked down again as he spoke.\n\n\"I think you're a very brave young woman who's pushing back against a whole lot of adversity. You have nothing to ashamed of, Chelsea. In fact, you have everything to be proud of. You have a son, you're back here teaching, and well, you're one of the kindest, sweetest...\"\n\nHe realized that was crossing one of those lines he'd been reminded of in the mandatory training.\n\n\"Sorry. I don't think that was the best choice of words.\"\n\nShe glanced over at him and tried to smile so he said, \"I meant that word, and I think it's true, but it probably wasn't appropriate.\"\n\n\"I...I liked hearing it,\" she said. \"It was very...sweet.\"\n\nPete was feeling better just as she said, \"Sorry,\" then blew her nose so loudly it made him laugh.\n\nHe was about to apologize for laughing when Chelsea laughed, too. \n\n\"I'm a freakin' mess!\" she said as she tried to take some more deep breaths.\n\n\"Hey. How about you and I go get something to eat?\" he suggested.\n\n\"No. Pete, you already spent a fortune on copies.\"\n\n\"Nah, I got a senior discount,\" he told her with a straight face as he stood up.\n\nShe looked up at him then saw him smiling, and that made her laugh then say, \"I feel terrible for looking.\"\n\n\"What?\" he asked.\n\n\"Well, I know you're not old enough for a senior discount, but you said it so seriously, I...I had to look.\"\n\nPete crossed his arms, cocked his head, then started tapping his foot.\n\n\"Chelsea, Chelsea, Chelsea,\" he said as he shook his head. \"I think you just called me 'old'.\"\n\nShe started to apologize when he said, \"And I resemble that remark.\"\n\nOnce she realized he wasn't offended, she threw the wad of Kleenex at him then shrieked.\n\n\"Oh, my gosh! I am so sorry!\"\n\nHe managed to turn sideways so it missed him, but it hit the floor with a wet plop.\n\n\"So that's what a snot bomb looks like,\" Pete deadpanned as they looked at the gooey mess.\n\n\"I'll pick that up!\" Chelsea said as she reached for her cane.\n\n\"No. You'll do no such thing,\" Pete told her as he grabbed another tissue to use to grab it. \"But you will have lunch with me.\"\n\nShe went to protest, but Pete held up a hand and said, \"Uh-uh. No arguing, young lady!\"\n\nHer face was a puffy mess, her eyes were bloodshot, and yet when she looked up at him and said, \"Okay,\" Pete felt something he hadn't felt in a very long time. He dismissed the feeling immediately, but it hit him very hard and very unexpectedly.\n\n\"Did you want to go now?\" she asked just as sweetly as she'd said 'okay'.\n\n\"I could eat. You?\"\n\nShe nodded, smiled, then said, \"I'm starving.\"\n\n\"Okay. Then let's do this.\"\n\nHe helped her stand up, and when he did, she was using his arm to steady herself until she was standing up directly in front of him.\n\nShe looked up into his eyes, smiled again, then said, \"Thank you, Pete. For everything.\"\n\nThat 'feeling' hit him again just as he said, \"My pleasure.\"\n\nShe grabbed her cane and continued using his arm as they left the room. Pete locked it for them then Chelsea asked if they could stop by the restroom so she could try and clean up.\n\n\"You know, to try and fix the disaster I call my face,\" she said with a laugh.\n\nWhen Pete answered her, she had a feeling of her own; one she hadn't experienced in a very long time, either.\n\n\"Your face isn't a disaster, Chelsea.\"\n\nShe looked over at him as they walked, and as he looked back at her he said, \"It's actually very pretty.\"\n\nShe looked away immediately, but this time there were no tears, and as far as he could tell there was no hint of having offended her. What he couldn't know was that those few words made her feel better than she'd felt since before the life-changing events that took place when she gave birth to her son.\n\nShe held his arm a little tighter as they continued walking but didn't say another word. They stopped at the teacher's lounge where the only restroom for staff on campus was located, and Pete opened the door for her.\n\n\"Sorry. You're on your own from here,\" he said with a smile.\n\n\"I think I can handle it,\" she told him as she smiled back.\n\nWhen they got to his Jeep Cherokee, Chelsea saw how much higher the floorboard was than in her car and said, \"Oh, my. There's no way I can get there.\"\n\nPete opened her door, told her to hold on tight then took her cane and set it inside. He then gently picked her up by lifting her legs as she held onto his neck, then just as gently set her inside.\n\n\"You okay?\" he asked as he set her down.\n\nShe was just inches from his face and looked away again as she said, \"I...I'm fine. Thank you.\"\n\n\"Can you get your seat belt?\" he asked, not knowing whether or not she could.\n\nChelsea looked at him, laughed, then said, \"What? Do I look like I'm...helpless or something?\"\n\nStill not sure if she was kidding, he waited until he knew then laughed, too.\n\n\"No. Not at all. You don't look helpless at all,\" he said in a way that again caused her to feel whatever she was feeling.\n\nHe turned the Jeep on, and the AC came to life.\n\n\"Oh, that feels so good!\" she said.\n\n\"Yeah, August in Florida can be pretty brutal, huh?\" he said as he backed out.\n\n\"I grew up here all my life, and never noticed until after, you know...\"\n\nThat caused Chelsea to ask Pete where he was from, and the answer took all the way to the restaurant to finish as he told her then hit each of his duty stations, as well.\n\n\"I'm envious,\" Chelsea said. \"The furthest I've been from Fleming Island is Charleston, South Carolina. My grandparents live there, so I used to go up each summer and spend a week or two with them.\"\n\nPete came around and helped her out the same way, but this time Chelsea didn't look away when he picked her up. She just smiled sweetly and thanked him as he gently set her on the ground before handing her her cane.\n\nThey sat down and ordered and made small talk as they ate, and about twenty minutes into their meal, Pete's phone rang.\n\n\"It's Trevor,\" he told her.\n\n\"Oh, by all means. Take it,\" she said knowing he was waiting for this call.\n\n\"Trev! What's the word?\" his dad said.\n\n\"Dad. You're not gonna believe it!\"\n\n\"Yes, I will. Lay it me, Lieutenant. What'd you get? F-22s?\"\n\n\"Um...no.\"\n\n\"F-35s?\" his dad said, his enthusiasm waning.\n\n\"Try again.\"\n\n\"I give up, Trevor. Tell me.\"\n\n\"Ospreys. Friggin' MV-22 Ospreys. Can you believe that shit?\"\n\nChelsea saw how serious Pete's face looked and could tell by the tone of voice he seemed upset.\n\n\"Is everything okay?\" she asked.\n\nHe covered the phone as though he was using an old style mouthpiece and said, \"Yes. Just a little setback.\"\n\n\"Dad? Who was that?\" his son asked.\n\n\"Oh, that's my new boss. Chelsea. Or Ms. Tanner to me,\" he said while winking at her.\n\n\"Ahh! Your teacher. The one you're aiding and abetting, right?\"\n\nHe hadn't told Trevor the details, so he couldn't chastise his son for asking, \"So...is she hot?\"\n\nChelsea evidently heard his comment, and Pete saw little circles of red in the apples of her cheeks again as she looked down at her plate.\n\nHe waited until she looked back up at him then told his son, \"She's...amazing.\"\n\nWhen Chelsea smiled, that feeling hit both her and him again before he let his son vent about not getting any of his three top choices.\n\n\"Well, you're still flying for the Marine Corps,\" his dad said.\n\n\"I know. And I'm already a lot less pissed off than I was when I found out a couple of hours ago. I guess Ospreys aren't all that bad.\"\n\nPete chuckled as Trevor said, \"Well, I'll let you get back to your lunch. I didn't mean to disturb you. I just needed to let my old man know what I got.\"\n\n\"Trevor? I'm proud of you,\" his dad told him sincerely. \"And you know Mom would be, too, right?\"\n\n\"Yeah. I do,\" his son said. \"Thanks, Dad. I can't tell you what it means knowing I can call anytime about anything, and my dad will 'get it'.\"\n\n\"Well, I can't tell you what it means to have a son wearing the same uniform I wore for all those years who can share his experiences with me.\"\n\n\"All right. Well, I'll uh, I'll let go,\" Trevor said.\n\n\"Okay, buddy. Talk to you soon, okay?\"\n\n\"Sure thing, Dad. And...I love you.\"\n\n\"I love you too, son,\" he said.\n\nHe saw Chelsea smiling at him and said, \"What? Why are you looking at me like that?\"\n\n\"You're this really big, strong...masculine...guy, but you're quite possibly the most gentle man I've ever met,\" she told him with a smile.\n\nHe looked around then said, \"Don't say that too loudly, okay? I've got a reputation to protect.\"\n\nChelsea laughed a genuine laugh and said, \"I can tell you love your son, too. He's very luck to have you.\"\n\n\"I'm the lucky one,\" he told her. \"After Gayle died, he was all I had. He was away at college, but we were on the phone every day. Without Trevor...\"\n\nHis voiced trailed off, and Chelsea could feel the emotion just as he forced a smile then said, \"You ready for dessert?\"\n\n\"Dessert? I'm stuffed! I haven't eaten this much in months!\" \n\nHe looked down at the piddly little amount she'd eaten then said, \"Yeah. You really know how to pack it away, don't you?\"\n\n\"Okay, now you're just being mean!\" she said with another very sweet smile. \"But since you told your son I was amazing, I think I'll let you slide this one time.\"\n\n\"I would have said 'beautiful' but I didn't want you to get the wrong impression,\" Pete said.\n\nIt was obvious by his tone of voice he was being honest, and yet Chelsea was having a hard time believing it because she didn't believe it about herself. \n\n\"That's me. Stick girl. Beautiful...stick girl,\" she said trying to sound playful.\n\n\"There's nothing wrong with sticks,\" Pete said playfully. \"I actually like sticks.\"\n\nNot quite sure how to take that, Chelsea decided to change the subject.\n\n\"I might be able to eat something sweet. Is that still okay?\"\n\nPete got very serious then said as he made of show of looking at her plate again, \"Gee. I don't know. I mean, now that I think about it, if you were to order something like cake or pie, that could put me in the poorhouse.\"\n\n\"We could share something,\" she suggested so sweetly it touched him deeply.\n\n\"Hmmm. I think I like the sound of that,\" Pete said before asking her what looked good.\n\n\"Uh-huh. Of course you do,\" Chelsea replied. \"Because you know that means I'll have one tiny, little bite, and the rest will be yours.\"\n\nThe way she smiled at him 'did it' again, and to his surprise, Pete heard himself saying, \"You really are beautiful, Chelsea.\"\n\nNot sure what to say to take back what he'd just said, Pete sat there in silence as he watched Chelsea blink a couple of times then quickly look down at the menu.\n\n\"I um...I was thinking about the pecan pie. Does that sound okay?\" she asked without looking at him.\n\n\"Sure. Yeah. That sounds great,\" Pete told her before signaling their server. \"A la mode?\"\n\nThere was a fairly long period of silence as they waited, and Pete was still trying to think of some way to explain what he'd meant even as he realized he'd meant what he'd said. After that, he had no intention of apologizing even if it came up. \n\nAfter their pie came, he set it between them and watched Chelsea pick up a fork then take a tiny little bite.\n\nShe said it was delicious, and after that, they returned to making small talk as though Pete hadn't said what he'd said, and that was just fine by him.\n\n\"Do you mind if we stop and pick up the copies on the way back?\" he asked once they were back in the Jeep.\n\n\"No. That only makes sense,\" she told him.\n\nChelsea had used that store enough times to know Pete had paid extra\u2014a lot extra\u2014to get them done that fast. And although she wasn't impressed by money or things, after seeing his 'car', and thinking about it for a while, she realized he wasn't likely living anywhere near the poverty line\u2014or anywhere close to it.\n\nAnd each time she thought about the way he'd looked at her when he told her she was beautiful, she couldn't help but wonder if maybe, for some crazy, ridiculous reason that made no sense to her, he might actually have meant that. She was too shy to ask, and a part of her wanted to not find out because it believed he'd tell her he was just being polite.\n\nRegardless, she was now seeing him in a very different light, and also wondered if perhaps there was some other, deeper reason he was being so kind and doing so many nice things for her.\n\nShe took a quick look in the mirror on her visor then thought, \"No. That's not possible.\"\n\nShe thought about him and realized yet again, that in spite of his age, he was still a very handsome man, while she, in spite of her relative youth, was maybe a little above average, and that was when she was healthy making her even more sure there was no 'deeper reason'.\n\nHe was only inside for a couple of minutes, but he left the engine running for her, and Chelsea could see him as he dealt with the girl behind the counter. He was smiling and it was obvious he was playfully joking around with her, so perhaps that's just how he was. With everyone. And for some reason, that thought made her sad. Very sad. \n\nAs she watched him walk back out carrying two huge boxes filled with copies, she told herself, \"Get a grip. He's almost your dad's age, for crying out loud, and he's...freaking gorgeous. That means he's not interested in you. Got it?\"\n\nBy the time he put the boxes away and got back in, Chelsea had convinced herself there wasn't anything going on, and that it was much better that there wasn't. After all, he was working for her as her aide, and again, he was way, way too old for her. \n\nSo why then did she look over at him one more time just to see how handsome his face was as he got ready to back out and return to campus?\n\nOther than thanking Pete for lunch, neither of them said another word about anything personal the rest of the day. When Chelsea got ready to leave school, Pete told her he'd walk her out to her car.\n\n\"Pete? I appreciate you offering to help, but I can walk to and from my car each day,\" she told him as politely as she could.\n\n\"I have no doubt,\" he replied. \"But I know how difficult and painful it is for you to walk, so I'd really feel better if you'd me provide a little bit of assistance.\"\n\nHe saw the way she was looking at him again and wondered if she was about to tear up again.\n\n\"Please?\" he asked with a smile.\n\n\"Once the kids show up, I have to be here from 7:30 until 4:00 every school day, but you only work from 8-2:30. Two o'clock if you eat lunch in the room which is considered not taking a lunch break. I can't ask you to be here extra hours without pay. You do understand, right?\"\n\nChelsea was getting ready to get up again, so Pete moved over to her desk and helped her stand.\n\n\"Yes, I'm aware of all that,\" he told her as she stood directly in front of him again.\n\nShe'd been looking into his eyes then looked down so Pete gently put his hands on her tiny arms near the place where bicep muscles should be then said very kindly, \"I'm not doing this for the money, Chelsea.\"\n\nAnother second or two passed before she looked up at him. \n\nShe didn't cry, but her eyes were glassy as she said, \"I meant what I said about you quite possibly being the kindest man I've ever known.\"\n\nAs her eyes locked with his, he smiled and told her, \"Thank you. And I meant it, too, when I said I thought you were beautiful.\"\n\nShe looked away again, but Pete ever-so gently squeezed her tiny arms.\n\n\"It's true,\" he told her again.\n\nShe looked back up then said, \"Pete. I have a mirror. I know what I look like. I've never been...beautiful. I don't consider myself ugly or unattractive, but I'm not beautiful.\"\n\n\"Then you don't understand the things that make a woman beautiful or attractive to a man,\" he told her, still speaking very quietly.\n\nAs she continued looking into his eyes, she could tell he was being truthful, and for the first time since she was too little to assess beauty, in spite of her many known and perceived faults, she felt beautiful. And as she stood there with his hands on her arms, she realized her heart was beating fast, and regardless about him working for her, all she wanted was to be able to put her arms around him and hold him.",
        "She didn't care in the least he was a lot older than her. All she cared about was the way he made her feel, and even her ex-husband had never made her feel that way. Her body was trembling and responding to the gentle touch on her arms to the point where she now needed to move away before she did something she'd regret; something that, in the current environment, might cause her to lose the job she loved.\n\n\"I...I really need to get home. Bryce hasn't been feeling well, and Mom, you know, she needs...\"\n\n\"Okay,\" Pete said. \"But you will let me walk you out, right?\" he asked as he finally took his hands away.\n\n\"Yes. Sure. That...that would be very nice.\"\n\nAs he helped her into her very warm car, there was a rather awkward silence as neither of them knew what to say. Chelsea turned the ignition and started the car to cool it down then finally said, \"Thank you again for everything, Pete.\"\n\n\"My pleasure,\" he told her sincerely.\n\n\"Well...have a nice weekend,\" she said with a smile that was different than any other he'd seen. A smile that seemed distant if not cold.\n\n\"You, too. And I gotta meet this young man of yours one day,\" he told her.\n\n\"Right. Yeah, we'll do that sometime.\"\n\n\"All right. So...I'll uh...I'll see you Monday then.\"\n\n\"Yes. Monday. Kiddos. Lots of energy and excitement,\" she said. \"Well, actually the first day they tend to be rather subdued, but that won't last.\"\n\n\"I'm looking forward to it,\" Pete told her.\n\n\"Me, too,\" she said, that plastic smile still there. Chelsea put the car into reverse, and Pete stepped back as she slowly backed up.\n\nHe waved and with that, she was gone. Only then did Pete realize he had sweat running down the small of his back. It had to be around 95 degrees, and just being out in it for the ten minutes or so it had taken to get her to the parking lot and say goodbye was enough to cause him to sweat through his shirt.\n\nBut that was the last thing on his mind as he watched her drive away. And yet the first thing on his mind scared him more than anything he could remember since learning Gayle's cancer was inoperable. It scared him because what was on his mind was so ridiculously crazy that it was embarrassing for a man his age with his life experience to even be thinking. And yet here he was very much thinking it.\n\nA phone call to Trevor on Sunday morning broke up the monotony as did an hourlong swim on Saturday and a healthy workout just before the phone call.\n\nWhen Monday morning rolled around, Pete was still struggling with these feelings and trying to decide how to best deal with them. By the time he got to school at 7:15 he had no better answer than he did when he left there on Friday.\n\nHe was sitting alone in the room waiting to go help Chelsea walk in when he heard a knock on the day just before it opened.\n\n\"Hey there, Devil Dog,\" a tall, very bald man said as he stepped inside.\n\n\"Oh, hey Doug. What's up?\"\n\n\"Just stoppin' by to see if there's anything you or your young teacher needs before the kids start rollin' in.\"\n\nHe saw Pete put his hands over his face and kind of rub it being pulling them apart.\n\n\"Nah. We're good,\" Pete told him.\n\nDoug knew that wasn't true and pulled up a chair.\n\n\"What's goin' on?\" he asked. \n\n\"Nothin',\" Pete told him.\n\n\"Uh-huh. Sure. Either you two had a...disagreement or...\"\n\nDoug smiled then said, \"You know I'm married to a teacher, right?\"\n\nPete furrowed his brow and said, \"No. I had no idea.\"\n\n\"Yeah. Shannon. Room 224 upstairs. She uses her maiden name, but yeah, she's my wife.\"\n\n\"I had no idea,\" Pete said. \n\n\"And she's twelve years younger than me.\"\n\nPete shook his head in disbelief then said, \"Seriously?\"\n\n\"Yep. Serious as a heart attack. I uh, I met her here on campus and we kind of started talking after I helped her with a big problem she was having in her room. We realized right away we liked each other, but it took me a while to convince myself I should ask her out.\"\n\n\"But you obviously did.\"\n\n\"Oh, yeah. I most definitely did. I asked her to the Navy Ball two years ago as our first date.\"\n\n\"That's a helluva first date,\" Pete replied.\n\n\"I asked her to marry me six months later,\" Doug told him. \"I had no idea she didn't care about the age difference, and looking back, that's the main reason I didn't ask her before that.\"\n\n\"So what's this got to do with me?\" Pete asked even though he knew.\n\n\"Oh, come on. Please! I can see it just lookin' at you. You've got a thing for her.\"\n\nPete started to object as Doug started to stand up.\n\n\"Save it, Shipmate. Save it for someone who'll believe your BS. I won't tell anyone, in case you're wondering. But if you like her, you owe it to yourself to say something. I mean, it's not like this is a job you can't live without? Right...Colonel?\" Doug said with a laugh.\n\n\"I barely know the girl,\" Pete said as he stood up, too.\n\n\"So? What difference does that make? That's why you tell her. So you can get to know her.\"\n\n\"Well, I mean. I...I don't really know,\" Pete said, his voice trailing off.\n\n\"You're clearly aware of the physical challenges she has, and if that hasn't scared you off, then maybe you should go for it. And for what it's worth, she's a little on the thin side, but she is pretty cute. Not that I'm looking, mind you. It's just a fact.\"\n\n\"Yeah. She's a little thin, all right. And I have to agree she is...cute. And she's very young.\"\n\n\"Mind if I ask your age?\" \n\n\"I'm 53,\" Doug told her.\n\n\"Damn! You are old!\" Doug kidded.\n\n\"I'm 46 and Shannon is 34, and while that's not as big a gap as between the two of you, I can tell you that after you're married you don't really even notice it.\"\n\nDoug opened the door just as the first children went running by.\n\n\"Hey! Slow down, okay?\" Doug told them as Pete stepped outside.\n\n\"It's none of my business, but if you're attracted to her, and if she's into...you know...the grandfather type...\"\n\nDoug started laughing before Pete could reply.\n\n\"I've got a hundred things to do today so I gotta run, but don't let working together\u2014or age\u2014be reasons for not saying something.\"\n\nPete sighed, thanked his younger friend for the advice, then headed toward the parking lot where busses were already lining up.\n\nWhen Chelsea pulled in Pete felt his pulse quicken. When he opened her door and saw her in a dress for the first time and noticed she was wearing makeup\u2014something else he hadn't yet seen\u2014it began beating even faster.\n\n\"Wow. Don't you like nice,\" he told her as he helped her stand up.\n\nThe scent of a very nice perfume wafted up as she thanked him.\n\n\"I wanted to look my best today. You know, for the kids.\"\n\n\"Then you pulled that off in a big way. You look...amazing,\" Pete told her as he tried not to stare.\n\nIt was just a simple sheath dress, although it did have bell sleeves making it look rather elegant. A quick look from behind as he closed her door revealed that she really didn't have a figure to speak of as everything was either straight or flat, and yet he couldn't get the word 'beautiful' out of his mind as they walked inside together.\n\nPete had the names of their first-period class on the tables in alphabetical order, and Chelsea noticed immediately and thanked him for it.\n\nShe, too, had spent the weekend trying to convince herself she wasn't feeling the things she was feeling for this much-older man she'd just met, and yet she'd chosen her nicest dress to wear knowing full well it had nothing to do with the kids.\n\nIn fact, she almost never wore a dress to school. The only exceptions were events held in the evening like open house when she'd meet new parents or to 6th-grade graduation at the end of the year. But never during the school year and especially not the first day of class.\n\nMaking matters worse, she hadn't worn makeup since the first week of her first year when she was concerned about making an impression on the principal until she realized her appearance had nothing to do with it. Ever since, the most she'd ever worn was some mascara.\n\nAnd yet here she was looking like she was going to the prom and feeling extremely self-conscious about. Or she had until she realized it had at least caught Pete's attention. \n\nThe 'good news' was kids began lining up outside her room within minutes after her arrival. That gave her something work-related to talk about with Pete who found himself enjoying the sounds of 10-year olds chattering happily outside.\n\n\"So I was thinking that today I'd stand at the door and welcome the kids, but I'm not sure I can do that for five classes so would you maybe...\"\n\n\"Of course. In fact, I'll have them file by your desk so you can say 'hello' then show them where they'll be sitting.\"\n\nChelsea smiled warmly then said, \"I don't know what I'd do without you,\" just as the bell rang.\n\n\"It's show time!\" Pete said as he went to the door.\n\nChelsea strained to watch as she listened to him as he interacted with the kids for the first time.\n\n\"Good morning!\" she heard Pete say. \"I'm Mr. Harke, and I'm your teacher's big helper.\"\n\nShe saw him do a kind of 'Hulk' pose as he said 'big' and when the children laughed, she knew this was going to work out.\n\nPete lined each class up alphabetically then had them come in and say hello to Ms. Tanner before showing them their seats.\n\nThat first week whizzed by in a flurry of activity as Chelsea went over the rules for her classroom, what they'd be doing each day, how much homework they could expect, some basic tests to find each student's reading level, and finally a brief explanation of why Mr. Harke, 'with an 'e',' was in the room.\n\nPete hadn't said a single complimentary thing the rest of the week, so by Friday, Chelsea had given up on the makeup, and once the kids were all gone for the day, Pete casually mentioned it.\n\n\"Oh. I...I didn't think you even noticed,\" she told him as the feeling of discouragement slowly gave way to hope.\n\n\"Of course I noticed,\" he told her with a smile. \"I mean, you look great without it, but you were...um...wow! And the jeans and tee shirts are fantastic, but that dress you wore Monday was...\"\n\nChelsea was smiling, and Pete assumed she thought he was on the verge of being reminded their relationship was strictly business when Chelsea surprised him.\n\n\"If I'd known you cared, I would have kept wearing it and worn something nicer,\" she said. She was looking at him when she began then looked away before she finished.\n\nPete moved closer then said, \"Either way, you look...beautiful.\"\n\nShe thanked him then after a moment of silence said, \"You mentioned wanting to, you know, maybe meet Bryce one of these days. So I was wondering if, well, would you possibly want to do that this weekend?\"\n\nChelsea looked back up as she said it, and saw Pete smiling.\n\n\"I would. I'd like that a lot,\" he told her.\n\n\"Really? Okay, well, I was thinking maybe you could have dinner with us on Sunday or...Saturday or...\"\n\n\"Just tell me when,\" Pete said.\n\n\"Sunday around 6pm?\" she asked, a sweet smile on her face.\n\n\"Okay. That sounds nice.\"\n\nShe gave him the address and again, neither of them spoke until he helped her into her car.\n\n\"I can't thank you enough for all you do to help me out, Pete,\" she told him as she got ready to leave.\n\n\"Well, I can't tell you how much this job...and being around you...has meant to me,\" he told her.\n\nChelsea smiled then said, \"I guess I'll you Sunday then.\"\n\n\"I'll be there,\" he told her.\n\nAs she drove away, he was just as sweaty as he'd been the week before, but this time he was aware of an old familiar stirring he hadn't experienced since Gayle was healthy and able to make love. He shook his head and realized Doug was right. He had to tell her how he felt, but he had no idea when or where to do it.\n\nBy the time he arrived at her parents' home on Sunday, the realization her mom and dad would be his age really hit him. He'd known that all along, but now that he was about to meet them, it made him feel pretty foolish for even thinking there could be something between him and their daughter.\n\nBut by the time he left, he considered them both good friends, and he couldn't put Bryce down. The little boy brought back so many pleasant memories of Trevor when he was that age, and the attention he gave the boy wasn't lost on his mother who wore another very pretty dress and full makeup\u2014something else she'd never done for Sunday dinner (or any dinner for that matter.)\n\nAs he got ready to leave, her father, Nick, asked if he could have a moment of his time.\n\n\"Sure,\" Pete told him as they went out to the garage.\n\n\"My daughter has been through hell the last couple of years, Pete. Literally. You've no doubt seen much worse, but seeing my baby suffer like that, well, it's pretty tough to take. And when that self-centered SOB of a husband of hers walked out on them, I tell you, I could have...\"\n\nHe stopped talking then switched gears.\n\n\"Look, I know how old you are. But I also know my daughter. I've never seen her like this before. Ever.\"\n\nHer father paused then said, \"And her mom and I know why.\"\n\nPete ran his hand along the back of his head and waited for the other shoe to drop.\n\n\"She talks about you constantly, Pete. Literally. It's all the time. Pete this and Pete that and he's so kind and...\"\n\n\"I think very highly of her, too,\" Pete said.\n\n\"That's pretty obvious, too. Look. What I'm saying is, this thing that happened to her changed how we feel about almost everything. We're so thankful to just still have her alive, and that little boy of hers, that nothing else matters except her happiness.\"\n\nPete didn't say anything so her dad said, \"You make her happy, Pete. You may not have those kinds of feelings for Chelsea, but I promise you she has them for you. So if you don't, I'm asking you, man to man, to please let her down gently, okay? I don't give a rip about the age difference, and my wife doesn't, either. But if you maybe do have those kinds of feelings, I guess what I'm saying is I...we...both support you, you know, getting better acquainted with our daughter and grandson.\"\n\n\"That wasn't the talk I was expecting,\" Pete said with a smile. \"But it's the talk I wanted to hear because as unlikely as it seems, I do have those kind of feelings for her. In fact, she's the only woman I've met since my wife passed away that's even interested me.\"\n\n\"Then maybe you should tell her,\" her dad said with a smile, echoing Doug's sentiments. \n\nChelsea popped her head into the garage then said, \"Oh. Sorry. I was wondering where you two went. I...I didn't mean to interrupt.\"\n\n\"We're done, honey,\" her dad said to his daughter as he slapped the much-larger man on the shoulder. \"We'll be right back inside.\"\n\nPete could tell Chelsea now assumed her father had just had 'the talk' with Pete and was probably worried sick about him telling this man his age he better not ever see him back in this house again and to stay away from his little girl.\n\nSo when she slowly walked Pete out to his Jeep a few minutes later, she was beyond surprised when he shared the gist of the conversation with her.\n\n\"Oh. My dad said...that?\" she asked as she stood just inches in front of Pete.\n\n\"He did,\" he told her. \n\n\"Well, he...he gets these ideas, you know, and sometimes he...um...he can get carried away. I wouldn't put too much stock in what he says. You know. When he gets like that.\"\n\nPete smiled then for the first time gently brushed her hair back causing Chelsea to break eye contact.\n\n\"Does that mean he's wrong?\" he asked as he moved a little closer. \"That you don't have any of 'those' feelings for me?\"\n\n\"I...well...I think...\"\n\n\"Because I definitely have them for you,\" he said as he softly placed his index finger under her chin.\n\nAs she looked up at him, Pete said, \"You are so beautiful to me, Chelsea.\"\n\nHer eyes were moving so fast between his it almost looked comical. Her next comment almost made him laugh.\n\n\"Sometimes...my...dad...isn't...totally wrong,\" she said, one word at a time.\n\n\"Like...this time?\" Pete asked as he moved even closer.\n\n\"Yes. This could be one of those times,\" Chelsea said barely above a whisper.\n\n\"So does that mean you wouldn't be too upset if I maybe...kissed you goodbye?\" he asked with a smile.\n\n\"I don't think I'd be too upset,\" she replied as she slowly raised her tiny arms and put them around his neck.\n\n\"Let's find out, okay?\" Pete said as he leaned in to kiss her for the first time.\n\nChelsea smiled as she accepted his kiss which lasted for several seconds.\n\n\"So? Are you upset?\" Pete asked.\n\n\"I...I don't think so,\" she told him. \"Could you maybe kiss me one more time just to be sure?\"\n\nChelsea melted into his arms as this second kiss was even longer and better than the first.\n\n\"Hmmm. That's interesting. Turns out I'm not upset at all,\" she told him with a bright, happy smile. \n\n\"So could we maybe do this again sometime?\" he asked.\n\n\"The kissing part or the spending time together part?\" she asked.\n\n\"Yes,\" he told her causing her laugh as happily as he'd ever heard.\n\n\"Pete?\" she said. \"Will you, I mean, is this...something you really want? I mean, are you sure you know what you're getting into? I kind of come with a lot of baggage.\"\n\n\"Baggage. Hmmm. You mean like a wonderful son or you being the kind, caring, amazing woman you are? Which kind of 'baggage' are you referring to?\" he said with a smile.\n\n\"So you won't be embarrassed to be 'seen' with me at school?\" she asked as though that was a real concern.\n\n\"Wait. You're worried that's what I might think?\" he asked. \"Because that was my concern. That a beautiful, younger woman would be embarrassed to be seen with a guy my...\"\n\n\"A guy who's thoughtful and caring and unfailingly kind to me? A guy who's so handsome it makes my heart hurt? A guy I can't stop thinking about all day and all night? That kind of guy?\" she told him.\n\n\"Wait. You think about me at night?\" Pete said, his eyebrows raised and a slight smirk on his face.\n\n\"Maybe,\" Chelsea told him rather coyly. \"Is...that okay?\"\n\nPete pretended to think about it then told her, \"Um...I suppose I could live with that.\"\n\nChelsea got serious then said, \"Pete? If you're not ready to...what? Go public with this, we can wait.\"\n\n\"If that's what you want, we can hold off.\"\n\nHe took her face in his hands and asked, \"Do you? Want that?\"\n\n\"No. I don't. I don't want to wait even one more day. I know it's all happening really fast, but when you go through what I've been through you can't help but see every day as a blessing you live with the knowledge it might be your last.\"\n\n\"I guess I've had the opposite experience.\"\n\n\"How so?\" Chelsea asked.\n\n\"After Gayle died, Trevor was all I had. But he has his own life to live, and I honestly thought I might never be happy again. I've never been a bouncy, 'hooray for today' kind of guy. But I was always mostly happy.\"\n\n\"So rather than living each day as though it might be your last, were you maybe hoping each might, you know, actually be your last?\" she asked, trying to understand.\n\n\"I was never suicidal, but yes, there were many days where it would have been just fine had I laid down and never woke up,\" he told her quietly and truthfully. \n\nThen he smiled and said, \"Until I met you.\"\n\n\"Gee, lucky you,\" she said as she tried to smile. \n\nShe looked into his eyes then said very directly, \"I'm broken, Pete. And I may never be whole again.\"\n\n\"But you've made me whole, Chelsea. Just knowing you and spending time with you. It's...well, it's changed my life. I want to live again now more than anything, and that's because of you.\"\n\n\"So that's where our divergent lives intersect,\" she said. \"We've been on such similar-yet-different paths, but we found the place where our worlds overlapped.\"\n\n\"Like a Venn Diagram,\" he told her. \"You and I are the areas where the two circles have a common area.\"",
        "\"Okay. You should know I don't like math. I never have and probably never will.\"\n\nShe smiled at him then said, \"But I love the analogy.\"\n\n\"And I love...that...you and I found each other.\"\n\nChelsea still had her arms around him, and she pulled him close, or more aptly, she pulled herself closer to him. When he wrapped his arms around her she felt small and tiny but no longer felt insignificant. \n\nFor the first time she could ever remember, even early on with her former husband, she felt loved. If this wasn't love, Chelsea wanted whatever it was to continue every day of the rest of her life. She knew that realistically that probably wouldn't be the case, but for now the thought of it made her happier than she'd ever been. \n\n\"I'm glad you came over, and I'm glad you and my dad talked,\" she told him when she pulled back a little.\n\n\"Same here,\" Pete told her. \"If you're up to it, I'd love to have you and Bryce come to my house next weekend. Or earlier if you're not too tired.\"\n\n\"I'd like that,\" she said sweetly before kissing him again.\n\nThey agreed they would be completely professional in the classroom, no matter how difficult that might prove, but they also agreed they wouldn't hide their relationship from anyone. So the following morning they asked if Diane had a minute, and when she invited them in, she told them she was happy for them and agreed with their plan.\n\n\"Well, that was easy,\" Pete said as they left her office.\n\nSeveral teaches were standing around, and no one thought it was unusual that Chelsea had her arm in Pete's. But when they got outside and held hands, Pete was pretty sure there were some 'oohs' and 'aahs', and a lot of gossip. And although he didn't look, he was right.\n\nDoug happened to be walking by and when he saw them holding hands he just smiled and said, \"Nice!\"\n\n\"What did he mean by that?\" Chelsea asked.\n\n\"I'll tell you once we get to the room,\" Pete promised.\n\nAfter he explained their recent conversation, Chelsea said, \"I owe him big time.\"\n\n\"Yeah. Me, too,\" he said before kissing her while it was just them.\n\n\"I'm not sure that'll hold me until the end of the day,\" Chelsea told him.\n\nWhen Pete did a Groucho Marx thing like he was holding a cigar and said, \"Then I guess I'll have to hold you all day,\" she laughed so hard she had to sit still and catch her breath.\n\n\"It wasn't that funny,\" he told her.\n\n\"Oh, yes it was. Because...you were...awful!\"\n\n\"Hey! Wait a minute here,\" he said. He went to lean down to kiss her when the door opened.\n\n\"Can we come now?\" two young girls asked.\n\n\"Oh. Um, sure. Come on in. Mr. Harke was just um, helping me with...\"\n\nShe gave up trying to explain and just smiled. Pete smiled back then took his place at the desk in the back of the room.\n\nAs September became October, every adult on campus knew about the budding romance between the much-older teacher's aide and the young teacher who could barely walk. Even the kids picked up on the little signs until one day they told each of their classes in very simple terms that they 'liked' each other. There were no additional questions, and with that, all of their worries were laid to rest.\n\nEven Trevor accepted his dad's decision without hesitation, knowing his father had been a miserable wreck since his mother's passing. The age difference was huge, her 'disability' was obvious, and it had the potential to mean becoming a dad again in his 50s. But because Trevor only wanted his dad to be happy, he told him he was just fine with it.\n\n\"But if you end up marrying her, there's no way I'm calling her 'mom'.\"\n\nHis dad laughed then asked if he'd like to 'meet' her. Chelsea was sitting next to him during their video chat, and when they saw each other for the first time, both of them smiled happily.\n\nThey talked for a couple of minutes, and Trevor promised to get home soon and meet her. He was only across the state in Pensacola, but he hadn't been home in quite a while, and when his dad took the phone back, he found out why.\n\n\"I've...I've kinda been seeing someone myself, Dad,\" he said before explaining who she was and how they met.\n\nPete told his son he was happy for him, too, and asked him to bring her home as soon as he felt comfortable doing so. He promised he would just before the call ended.\n\nAnd it just so happened that shortly after that call, Pete made love to Chelsea for the first time. He expected difficulties, but other than some shortness of breath and an inability to hold her legs up, both of them were thrilled to learn everything still worked as advertised\u2014on both of them.\n\nIt was around that same time that Pete began reaching out to anyone he'd ever known that could possibly help to see if there was some form of therapy or surgery or some new treatment that could help the young teacher he was falling in love with. \n\nOne of his closest friends from his past was a Navy doctor who had a good friend who practiced at Johns Hopkins. He promised Pete he'd ask around and get back to him.\n\nIn the meantime, Pete mentioned the Marine Corps birthday that was coming up, and Chelsea wanted to know all about it. He explained the significance, then also explained another tradition known as the Marine Corps Ball.\n\n\"That sounds wonderful. I love pageantry, and you know how much I respect our military,\" she told him.\n\n\"Then would you go with me?\" he asked knowing she would.\n\n\"Yes, but I don't have a gown, Pete,\" she said knowing he would insist on buying her one. \n\nShe still felt uneasy letting him spend money on her, but each time she brought it up Pete reminded her that she was the only thing in life that made him happy, and it gave him real joy to be able to do so. So she always ended up reluctantly letting him, and she also knew this would be no exception.\n\nAs the big day rolled around, Chelsea was wearing a gorgeous dress with matching shoes and a clutch, but her biggest surprise was seeing the man she loved in his evening dress uniform. It was black with scarlet and gold trim with a white shirt and red cummerbund, and Pete looked so handsome it nearly made her swoon.\n\nBut an even bigger surprise came when someone opened his front door an hour before they were supposed to leave for the ball.\n\nChelsea was startled when the front door opened, but Pete just smiled and said, \"Hmmm. Must be someone I know pretty well.\"\n\nMoments later, a younger version of Pete Harke walked in wearing a different, but equally-dashing uniform. On his arm was a beautiful young woman also wearing a formal gown; a woman Trevor introduced as Angela. There were hugs all around followed by talk about the upcoming event, which was also Angela's first.\n\n\"I'm hoping it won't be her last,\" Trevor said when Angela mentioned that.\n\n\"Same here regarding my date,\" Pete said, causing Chelsea to smile happily.\n\nBoth women spoke at the same time and said, \"I wouldn't mind that.\"\n\nLoud laughter followed by 'JINX!' ringing out which caused even more laughter.\n\nThe ladies sat and talked while Pete and Trevor moved into the kitchen so they could talk, as well.\n\n\"So...what do you think?\" Pete asked his son.\n\n\"She's great, Dad. I'm glad you warned my about how thin she is or I might have been worried. But you're right. She really is pretty in that understated kind of way.\"\n\n\"Thanks. And Angela's beautiful, by the way. And she seems very intelligent and considerate.\"\n\n\"Yeah, she's pretty amazing, and we've really gotten close. Who knows? This might just get serious.\"\n\n\"Speaking of serious, I want to run something by you,\" Pete said.\n\n\"Is this the reason you twisted my arm so hard to come home for the Ball?\" Trevor asked. Pensacola had one that was much larger than the one in the Jacksonville area.\n\n\"Uh-huh. Because I want you be okay with what I'm thinking. Or rather...planning.\"\n\n\"Dad? Are you gonna...\"\n\nThere was a small pocket on the inside of Pete's uniform jacket. As he reached into it he said, \"I had a talk with Chelsea's dad a while back. Two of them, actually.\"\n\nTrevor just stared when he saw the huge diamond ring between his dad's thumb and index finger.\n\n\"Holy shit that's big!\" Trevor said as he looked at the ring.\n\n\"I love her, Trev. I know we've only known each other a little over three months, but...I just know.\"\n\n\"Yeah. Okay. Sure.\"\n\n\"No, really. Are you okay with this?\"\n\n\"Dad. All I want is for you to be your old self again.\"\n\nTrevor laughed then said, \"That was an age joke, Colonel.\"\n\nWhen his father laughed, too, it reminded him of how things used to be, and any small doubt Trevor may have had disappeared.\n\n\"Go for it, Dad. Ask her.\"\n\n\"Ask who what?\" Angela said just after Pete slipped the ring back inside the jacket.\n\n\"Oh, I was just wondering if we're taking two cars,\" Trevor said as though that's what they'd been discussing.\n\n\"The Jeep's more than big enough for all of us,\" Pete said.\n\n\"Is that okay with you, Angie?\" Trevor asked.\n\n\"Sure. The extra leg room will be nice,\" she told him. \"I was just checking to see when we'll be leaving. I hope I didn't interrupt anything important.\"\n\n\"We can leave now,\" Pete suggested without responding to her concern about having interrupted. \"I know the G.O. at the Ball, and I'd like to say hello.\"\n\nTrevor saw the confused look on Angela's face and explained.\n\n\"G.O. stands for General Officer. Not every ball held everywhere can have a general officer in attendance, but if you request it early enough, well, sometimes it happens. Even with just a few Marines in attendance.\"\n\n\"Don't forget we've got all the local reservists, too, Trev,\" his father said.\n\n\"Never mind. This could be a pretty big event then,\" he said with a wink to his father indicating the bigger meaning.\n\nThe three of them walked back into the living room where Chelsea was waiting.\n\n\"You ready, beautiful?\" Pete asked as he helped her up. \"You really do look amazing.\"\n\n\"Thank you, but I still can't get over how great you and Trevor look,\" she told him. \"And Angela is the beautiful one.\"\n\n\"No argument there,\" Trevor said as he took his date's hand.\n\nBoth Chelsea and Angela were in awe at the pageantry Pete took for granted but yet appreciated more with each passing year. Trevor had been to one ball, but still got chills when the Marine's Hymn was played as well as during the moment of silence for fallen comrades. He had no fallen comrades while his father had too many, but that wasn't the point. It was taking the time to honor them and their ultimate sacrifice for the country they loved.\n\nThe last event of the evening before the ball itself began was the playing of Anchors Away and the Marine's Hymn again. But rather than concluding the evening, the narrator said there was one event left causing every Marine in the room to start looking around to see what could possibly be happening to break protocol.\n\nThat's when the guest of honor, the two-star Marine general who'd known Pete for nearly 30 years said, \"Ladies and gentleman, we've reached the end of our formal program, but I'd like to take a moment and ask an old friend of mine to come up here and say a few words. So if you'll bear with me...\"\n\nHe smiled then called out, \"Colonel Harke. Front and center!\"\n\nPete sprang up, marched to a point three feet in front of the general and stopped. Marines never salute indoors unless 'under arms' and Pete was not so he stood at attention and reported to the senior officer.\n\n\"Sir, Colonel Harke reporting as ordered.\"\n\n\"Pete, the floor is yours,\" the general said with a handshake and a smile as he handed the microphone to his old friend.\n\nPete turned around then looked over at Chelsea and smiled.\n\n\"I promise to make this short,\" he began. \"I've been retired for several years now and when I left active duty, my wife, Gayle, and I, moved here to the Jacksonville area with plans to spend the rest of our lives here together. But Fate or something else had other plans, and Gayle passed away after a short battle with cancer. I've never been a quitter\u2014at anything\u2014but I have to admit I often felt like quitting after losing her.\"\n\nPete began walking toward the table where Chelsea, Trevor, and Angela were sitting as he spoke.\n\n\"I loved my wife more than I can put in words, and when I lost her, I wasn't sure I could go on. I was really just marking time until...well, I had no idea what the 'until' might be. And then I decided to try something completely different. I took a job working as, of all things, a teacher's aide.\"\n\nHe stood right next to Chelsea, smiled at her, then continued.\n\n\"The principal told me I'd essentially be the legs for a young teacher who nearly died herself during childbirth. I had no idea who she was and didn't know anything else about her. But my life changed the day I met her.\"\n\n\"What's...what's going on?\" Chelsea asked quietly as she leaned toward Trevor.\n\n\"I think my dad has something to ask you,\" he replied quietly without taking his eyes off of his father.\n\nChelsea's tiny body began trembling as the man she loved continued talking.\n\n\"In a nutshell, this teacher\u2014this beautiful, young teacher\u2014changed my life. She gave me a reason for living again. And to my complete surprise, I soon found myself falling in love with her.\"\n\nHe looked down at her again, and saw tears in her eyes as he set the microphone down.\n\nHis voice boomed loudly enough for all to hear as he said, \"And now I can't imagine living without her in my life. So...\"\n\nHe reached into his pocket again as he got down on one knee in front of her and held up the ring.\n\nIn a loud, clear voice that everyone heard, Pete said, \"Chelsea? I never thought I'd ever love again. I didn't really know if I'd ever even be happy again. But because of you, I am as happy as I've ever been, and I can honestly say that am I deeply in love with you. So will you make me even happier and marry me?\"\n\nAngela had her arm around Chelsea who was opening crying as she listened the man who'd also made her life worth living again say those very words to her.\n\nThere was absolute silence in the large room until a weepy Chelsea Tanner found her voice and said, \"Yes. Of course I will marry you!\"\n\nThe room erupted in loud, \"OORAHS!\" from the Marines in attendance followed by other loud calls of 'CONGRATULATIONS!' and other such things as Pete placed the ring on her finger then helped her stand up without her cane.\n\nThe general pointed to the band which began playing a slow, romantic song Pete had requested. He took Chelsea's hand and said, \"May I have this dance, honey?\"\n\nChelsea couldn't speak but she nodded and let Pete support her weight as they danced alone together for a minute or so with a large spotlight on them before the floor was opened up to everyone else.\n\nAs Chelsea clung to his neck, and while he mostly carried her, she whispered in his ear.\n\n\"In my wildest dreams, I could never have imagined anything more romantic.\"\n\nShe pulled back a bit, smiled at her new fianc\u00e9 then said, \"Nor could I ever have imagined being so in love with anyone.\"\n\nPete pulled her close as they finished their first dance together which marked the beginning of the rest of their lives.\n\nChelsea moved in with Pete during the Thanksgiving holiday two weeks later, and just after their first Christmas together, his Navy doctor friend called with some promising news. There was a new treatment available if Chelsea would be willing to join a trial at John's Hopkins in Baltimore. There would be no cost for the trial, but she would have to again take a leave of absence, and it would cost a lot of money for Pete to live there with her.\n\nHe dismissed her concerns as quickly as she raised them, and the first week of January they were living in an upscale apartment in Maryland where Chelsea completed the trial and to their great delight saw a 30% increase in her mobility and a huge reduction in the pain caused by walking.\n\nThe improvement was substantial, and more than enough to allow her to walk down the aisle that summer with just a small amount of help from her father who gave her away knowing this time it was for life. She never regained full use of her legs, but she able to walk nearly pain free making the time spent in the trial more than worth it.\n\nChelsea returned to teaching the following year but Pete didn't go back. Just four months later, she quit for good when days before their second Christmas together she learned she was pregnant again. Just two days after their first anniversary, Chelsea gave birth to a beautiful baby girl without any complications.\n\nAlthough Pete initially resisted, Chelsea insisted they name their daughter, Gayle.\n\n\"I never knew her, sweetheart, but she was the love of your life, and I want you to know I know you'll always love her. And just because I didn't have the chance to meet her, that doesn't mean I don't love her, too.\"\n\nSo Pete and Chelsea Harke, with an 'e', brought Bryce's baby sister, Gayle Ann Harke, home with them, where both parents devoted their lives to each other and their two children.\n\nTrevor married Angela six months after his father remarried, and after getting orders to an east coast duty station, the two of them made the trip home to Florida twice a year to spend time with their parents in Jacksonville and Pensacola.\n\nLastly, Chelsea eventually settled her lawsuit for a substantial sum of money. A large portion of it went to pay her medical bills, another chunk fully funded both kids' future college educations at today's rates, and what was left went into a joint account where it sat until they needed it to travel or upgrade their home.\n\nServing as a teacher's aide may have been below the dignity of a retired Marine colonel, but the decision to do so was by far the best decision Pete Harke ever made."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/teachers-aide"
}