{
    "title": "The Slavemaker",
    "pages": [
        "Author's Note: I normally split these into parts, but this time I thought I'd try leaving it a whole story. Let me know if you prefer the parts better :). It's a Master/slave romance story and M/f. I hope you enjoy and have fun, like always!\n\nDeirdre\n\nThe start of this story, like the start of many stories, doesn't begin in a happy place, but it is a happy story, so I'll try to rip the band-aid off as easy as I can. Bear with me! It's worth it.\n\nOnce upon a time, there was a little princess and she was loved by everyone. Her family wasn't large, but they adored her and it was a little weird when she did things like try on Christmas charms that were meant for the family dog's collar or when she locked herself in a closet, even though she was a little claustrophobic, and imagined she was a mermaid trapped in a giant clam and had to be rescued.\n\nWhen the little princess grew up, her fantasies kept evolving until she dreamed of the prettiest cages and she tried on the dog collar charms to pretend like she was a pet. She started to keep these things secret because she knew that early in life it was cute, but later it wasn't so much. She dreamed of being trapped still and being rescued, but the little princess didn't like the knights in shining armor so much anymore. How could a knight whose armor glistened so brightly ever hope to do anything like kill the sea monster who held a little princess captive? It didn't make any sense, was pure ludicrous really. So she imagined she was rescued and the knight was handsome, but his armor had blood on it. When he kissed the princess awake she was scared at first, but he fixed her with a pretty dog collar and pet her head and told her that he would take care of her.\n\nThat's what she dreamed of anyway. As you can see, the little princess was a little naive and she was eager to play and she wanted to love. She wanted to be called a good girl all the time and she wanted to do anything to make her wicked prince happy. And then the princess met someone. At first, he looked like the prince of her dreams and he acted dominating and he made her happy. He liked substances sometimes, but he always gave off the appearance that he had control. The princess thought she'd found someone who would pet her always and give her a pretty collar.\n\nBut it wasn't. It was a spiky collar. After a while, nothing seemed to ever make him happy and she got sadder and sadder. It took her too long to realize that he didn't have any control and violence without control is just violence. It isn't games. It's a head fuck, a bad thing. By the time she understood that the two of them should have never played together, the damage was done.\n\n\u2014\u2014\u2014\u2014\n\nOkay, sorry for that! That's really all of it, though, for the most part, I promise. He was a Dom, but I think he was a very confused one. He hurt me and at first I wanted to hate him for it, but I think he was hurting too, at the time. I think I couldn't make him happy, in the end, because nothing ever could have. I don't know what happened to him and I hope he grew, hope he did find something that fulfilled him in life. As for me, well. I did find my own ways to get over the sorrow. It left scars and I won't lie. Those scars are bad sometimes, really bad. I can't date anymore. It always goes south and it's never what I want anyway, but that's okay! I play at a place called Sulfur's fetish club and I'm a goddess in the place, which sounds really conceited, it's true, but I only fit so well with the place because of my past, to be honest. I was just ready made for it.\n\nPeople love me there, now that I'm healed a little. See, I met the owner, Asher Lavrov, before the place opened and he helped me heal a lot. He had picked up another friend of mine named Matt, who became a best friend and, yes, a kinky fuckbuddy too. They taught me how to fulfill my needs with light playing so I could have a form of therapy. After what happened, I had a lifestyle mindset where I craved, but I could satisfy myself with one night play stands at Sulfur's. I never wanted anything more and Doms never had to take very long to give me aftercare. Needless to say, I was intricately involved with the goings on in the place. My picture was behind their bar and I was on their payroll. What was even better, my day job was as a sex toy store owner and, with the circle I ran with, my life became a dream. Sulfur's branched out and Ash had need for more help.\n\nAnd that's where the real story starts, the happy story. Ash asked me to go check on one of the other branches of Sulfur's that had opened and everyone in the circle knew me by then. I was the submissive kitten of our world. Ash had trained some of these Doms on me and it had all been kinky fun games, so a night getting paid to go check up on another branch? It was a carefree night. I grabbed a submissive friend of mine, Lily Lofton, and took her along to go play and make sure their paperwork was up to date.\n\n\u2014\u2014\u2014\u2014\n\n\"It's so weird being in these other branches.\" Lily glanced at the entryway where a spanking bench and sawhorse sat against the wall, kinky decorations for enticement. \"It's like Sulfur's, but without Ash. Like if you could see four different versions of Sulfur's from different multiverses, you know?\"\n\nI laughed. \"Lily, I love you. Come on.\" But I did kind of see what she meant. The decoration in the place just felt like it had the touch of a Dom, but one that wasn't Ash. Instead of the neat bar and play area setup of the original Sulfur's, this place had pictures hanging all around it, arousing pictures. The ceiling was higher and it was a single floor setup, where the Sulfur's I was used to had two floors. Two birdcages hung from the ceiling on either side of the bar, these iron monstrosities, and both of them had submissives dancing in them. One was a male that made me shiver because even my submissive radar thought he was a D type. He just had that X factor, that force of will, except he wore a collar, which seemed a pretty clear sign to the opposite. The female across from him looked like a fucking movie star and she danced with the grace of a ballerina and the sensual taunt of a stripper.\n\n\"Woah. Digging those birdcages, though.\"\n\nLily giggled beside of me. \"So, Ash must give some decent freedom to the people he has running these places, right? This is definitely not his style. This place is softer somehow... but still with hot fucking.\" She tilted her head, studying a scene with a dominatrix and male submissive not far from us. The Domme had him locked in a cock cage while she fucked his ass with a dildo, trying to milk him. I shuddered, horny from the sight. The scenes in this place weren't at all like Ash's Sulfur's. They all had raised daises so that they were clearly and obviously on display, where the scenes from Sulfur's Alpha weren't so obviously displayed. Against two of the walls, opposite each other, were separate stages.\n\n\"It depends. I think a few of the others he keeps on some pretty tight leashes. You know how Ash is. If he trusts you, then he gives you a lot in return until you betray it. I think the guy he has running this one was a friend of his, but I don't remember where from.\"\n\n\"Oh.\" Lily drew out the word, voice going breathy. \"A guy? Definitely a Dom, too.\" She giggled. \"Maybe we can play with him like we used to play with Ash before he got engaged.\"\n\n\"I shouldn't have brought you. You're a bad influence.\" Lily snickered again at my side, but I was grinning. \"Well, I mean, Jesus. It seems like a wasted trip so far. The door guard here looks mean as fuck and no one is going to try to get past him. Hell, even the bartender looks fucking terrifying.\"\n\nLily's voice turned even more breathy beside me. \"Oh. Oh, I didn't even look at the bartender.\"\n\nI laughed. \"Come on. Let's start by talking to him since you so obviously want to. We can ask about some of the people and any incidents.\"\n\nLily was already spellbound, so much that I had to pull her along beside me. The bartender, you see, was somewhere in his 40s, if I had to guess, and he was terrifying to look at, something that would probably make Ash happy to hear about. He was pretty big on people never playing under the influence, so if people came to Sulfur's and drank, then they didn't get to play. The big, burly guy behind the bar was a perfect build to discourage people from trying to cheat. What was more? He had a high and tight military haircut, a grisly scar along his cheek from God only knew what, and he had tattoos running the length of his arms beneath his short sleeved, collared \"Security\" shirt. He looked a lot like a really hot stereotype, to be honest.\n\nBefore I sat at the bar, I settled Lily into one of the high sitting stools, laughing as I did. \"Sit up straight, Lily. You know how Ash taught you.\"\n\nShe stared at me as if a little dazed - I pat her head because Lily loves to be degraded in front of her interests - and then glanced at the bartender, who finished pouring a drink and came down to where we sat. When he smiled, it seemed like a gesture that was intended to be soothing, but even that was terrifying. It made the scar on his face twist. \"How can I help you? Fair warning, if you get anything-\"\n\n\"Then you can't play,\" I finished with a wink. \"Ash sent us to check out if you guys needed anything on your end of the city.\"\n\nThe man's eyes lit up. \"Oh, awesome. Christopher is playing in some of the dungeons for the rest of the night, but if you want to stay and help us all close, we can answer anything you like.\" His grin widened. \"And, unless I miss my guess, you must be Deirdre King. Which makes you-\" He turned to Lily, who cowered against my shoulder so that I grinned. I'd known Lily for a long time and she was such a maso. Cowering was her way of flirting. \"Lily Lofton.\"\n\nOh man. Lily was hard up on this one. She bowed her head, glancing up at him fearfully. \"Yes, sir.\" She made her voice even more submissive than she made it for Ash, too. \"I think you might have us at a disadvantage, though.\"\n\nI grinned, stroking Lily's shoulder. And then I wanted to laugh again when the bartender tilted his head. He watched Lily nervously trail her fingertips along her throat, as if she was tracing a collar that wasn't there. And he spoke in the perfect language of a Dom, tracing his belt in response. Lily watched the motion and shivered in excitement so that he grinned. \"My name is Jackson.\"\n\nShe didn't repeat the name. \"Yes, sir,\" she said instead and I rolled my eyes.\n\nI stayed to the side for a while, talking with them while they flirted together. I stroked Lily and encouraged her because it seemed to make Jackson all the more interested in her. And more to the point, talking with him told me a lot of information about the structure of this place.\n\nIt was strict as fuck. I watched Jackson serve someone else a drink, watched him give the hand stamp and bracelet that marked the man as unable to play for the rest of the night. I asked about the members, asked about open door nights. Jackson spoke of the regulations with a firm look in his eyes, as if they were second nature and ingrained, which pleased me. That was how it should be and how Ash would want it. While we talked, scenes finished up around us and someone got the dancers from their cages. People talked with Lily's new friend, who was obviously well liked despite his appearance. After some time, I left Lily alone to play, making sure she was okay, and wandered on my own.\n\nI went through the back dungeons, glancing into the doors curiously, grinning with some of what I saw. One room I opened was pure fantasy themed. There were blue wall sconces casting this mystical light across a red dungeon bed. A standing chain structure stood in front of it. I had to appreciate the setups for what they were.\n\nIt was definitely still Sulfur's and definitely not Asher Lavrov's. Lily was right that this was softer in tone, in some ways. For instance, Ash had dungeon setups that were pure dungeon. His medieval setup looked like a torture chamber, which was thrilling and really cool, but it also had a harsh note to it.\n\nThis seemed... terrifying, actually. It was somehow more gentle, but not. It was quite obviously made to be more enticing, more romantic. That hanging structure in the middle of the floor seemed like it was made to display a submissive for viewing pleasure while someone fucked on the bed. What was more was the strictures of the place added a note of mysticism, rather than detracting from it. It was the same way some Masters could be into high protocol and others weren't. On the one hand, higher protocol could seem stuffy. But if it was done correctly?\n\nOh, it seemed so beyond sexy, like a fantasy. These setups were like that, made to play out dreams like being a slave sold into exotic places, one to be trained for pleasure. I was getting painfully aroused just looking through some of it and I was supposed to be finding the guy in charge of this place to make sure it was in good care. Although, at that point I was so impressed that after I saw some of his paperwork, I felt like I could just ask this man if he needed anything, then tell Ash that he had great tastes in friends. Everything was so clean, so neatly done.\n\nI looked in the next room, laughing softly to myself when I had to take a breath because I was getting too worked up. Jesus, Lily was supposed to be the bad one. I was the wildcat that didn't get close to anyone and kept my cool no matter what.\n\nI wasn't ready for what was in the next door. Oh, the door was opened, wide open even, but I froze when I stepped through the way, suddenly becoming a voyeur.\n\nIt was a room with a shallow pool. Fake flowers were artfully decorated around it like another fantasy scene, something straight out of a book I would masturbate to a hundred times over. It was gorgeous and sexy, sinfully so, but it also wasn't empty. The two dancers from the cages still had their collars and their sexy attire on. The male wore black leather pants and had matching black leather arm bands, both of which matched his collar, which glittered with a shining butterfly ornament. As for the female, hers was a far more revealing outfit. Strings circled her tits with a sheer mesh that emphasized her nipples and her hair was pinned up with glittering ornaments that matched the guy's.\n\nBut that wasn't all of it. I'll try to explain this next part as best I can. You see, when you play in fetish and kink for a long enough time, you start to pick up this sense for people. It's kind of like how Lily knew how to flirt with the bartender and sometimes some people aren't easy to read. Other times, they're obvious.\n\nThese two, for instance, were obviously slaves. Not submissives. Submissives, like what I was now thanks to my past, tended to play with a different mindset and with different, lighter rules. Most of those played in set time frames, although slaves could also be for set time frames, but there was a key mentality difference between being owned property like a slave and being a bowing submissive. I was that last one all the time now, as it was safer for me. But these two were slave types. It was in the way they curved their bodies to be visually pleasing because every motion they made was in a conscious effort to draw the eye and to give pleasure. Every action was with that sense of hot, total surrender. And at the moment they were serving a slight, dark haired man, who was obviously their Master.\n\nI couldn't look away from it. The two of them moaned and writhed at his feet and together, they licked up and down his cock, their tongues meeting in a kiss around him. And he? Oh, he had an appearance every bit as stern and desirable as his Sulfur's because this was most definitely the man who set this place up. His entire demeanor screamed it. I watched as he trailed a whip up the man's shoulders to make him moan. And God, the way their Master stood. His feet was at shoulder width apart and he was as controlled as Ash was with every motion, but where Ash played with easy and coolly dark delight, this man was just hard.\n\nI took a breath when he tapped the whip on the female's shoulder and she knew what he wanted. She nuzzled the whip as if she craved more of it under his hand, but he didn't give it. He didn't serve as a top in the way Ash did. When Lily got excited under the whip, Ash had always encouraged it and given more of it. This man... Jesus. He merely looked at the female and she backed away from his cock, so that the male sucked on his own, bobbing his head, and even those motions were graceful. Their Master stroked a hand up the female's head with his pleasure and she moaned, curving for his touch, but she followed where it guided her, too, as she kissed the male's neck while he worked over his Master. She stroked a hand down to cup her slave friend between the legs through the leather he wore and he shuddered with the action, then worked to serve even more. They moved with such fucking grace that it felt like a dream just to get to watch them. I wanted to kiss the female, to see how she tasted. I wanted to stroke my hand over the male's leather pants to feel how hard he was, to feel how much pleasure he so obviously got in servicing his Master. And those leather armbands around his upper arms? God, they were arousing too. All of it was. It felt like being the kind of spellbound Lily had been.\n\nWhat was more, their Master didn't even speak. He made it clear that he didn't even need to. The girl arched under his every touch as if it was ecstasy to be granted it. The guy gently cupped his balls and rolled them to give his Master more pleasure while he sucked. While I watched, the male lifted a hand to the girl's lips, without ever pausing his attentions, and she sucked his fingers, then poured lubricant on them. It was hotter than ever loving hell, the fact that they readied each other for what they knew would please their Master most.\n\nAnd they did it in such a way that they wouldn't have to stop the pleasure they were already giving him. Because the next thing the guy did when his fingers were slicked? He cupped his Master's balls and then stroked his fingers back to his asshole. I went hot when he gently, so gently, pressed inside of him.\n\nHis Master fucked himself back on those fingers and he didn't make a sound, but it obviously gave him pleasure. He lifted his head, his teeth gritted, and the muted light glittered along his strong jawline. Jesus, but the sight of his pleasure was intense and not just because his slaves moaned eagerly at the sight. It was the way he still stood with such security, the way he pressed the thumb of one hand to the girl's lips and she whimpered in joy as if it was the greatest reward. She sucked as if she was starved for him, greedily and without any reservation at all. It was kind of empowering in this weird way because the guy was like that too. No matter how servile either of them were, they did their acts with no bars held.\n\nTheir Master made a soft click with his tongue and then almost lazily flicked his whip over the guy's back. In answer, he deep throated the cock in his mouth, sucking hard and adoringly, given the command to work him to orgasm. My lips parted and I heard myself whimper and it was just a little too loud.\n\nThe two of them didn't react at all, didn't so much as break from their moaning service. Only the man over them reacted and that was to snap his gaze to mine, his eyes hard and stern as the rest of him.\n\nHis lips parted and he came with a soft hiss, so that my face turned flush with shocked desire. He held the head of his male slave, eyes still on mine and still glazed with his fire. Wild heat shot through my being, need so fierce it hurt.\n\nI barely noticed how his slave pulled away when he was finished, his lips parted to display the cum he held on his tongue. The only reason why I did notice was to watch the Master's approving smile and nod. He watched with that same prideful gaze as the guy withdrew and went to the female, who whined eagerly. I couldn't stop another low sound when he fed her his fingers first, the same ones that he'd used to fingerfuck their master's asshole. She made these obscene little noises, cleaning him off, and then he drew her for a kiss, sharing some of the cum that he still held in his mouth.",
        "I snapped and scampered like a rat to the bathroom, where I masturbated in a fucking frenzy because I couldn't even think straight enough to remember what I was supposed to be doing here. What was worse, I thrust my fingers in and out of myself until they were coated, then sucked them with soft little whines, imagining they were him and I was the one worshiping with such abject servility at his knees.\n\nI had always played with this self creed. I didn't give myself fully to another. I played only with people who were looking to satisfy a need, like me. And I didn't lose control or get too close to anyone ever.\n\nAfter I came down from my masturbation frenzy, I was snarling because anger was the only thing that could save me. I needed to think angry thoughts. I needed to think about how I wanted to stab him in his stupid, sexy, stern fucking face for making me remember those old fantasies that just wouldn't die and leave me alone. I had to take a breath and force myself to go back out into his perfect, magical Sulfur's and face him and his perfect, beautiful slaves.\n\nBut going back out to him didn't help. He turned his gaze on me again and I couldn't even remember the anger. I had been hell bent on clinging to it to protect me during the conversation with him, but it fled so fucking fast at his first attention. His eyes pierced even when he gave me a gentle gaze to try to soothe me and all I could remember were all those fantasies of being a slave princess, of the Dread Pirate Roberts reprimanding me harshly, only to hold me just as gently.\n\n\"Hello, Deirdre,\" he said softly. \"Welcome to my branch of Sulfur's.\"\n\n\u2014\u2014\u2014\u2014\n\nChristopher\n\nDeirdre King. She was the submissive goddess in the world of Sulfur's and its surrounding fetish club. The first time I ever saw her, she had slapped a Dom twice her size because he'd dared to hurt Lily's feeling the wrong way. I had never forgotten it. I had asked Ash question after question about her and what she must be like, even then.\n\n\"Hello,\" she replied. I had to smile at her voice because it was everything you'd expect from a submissive of her caliber. It was polite and sweet, but with that tone that suggested she could definitely be firm when she needed to. She was a Dom's wet dream because she didn't want a relationship. All she wanted was to submit for a night at a time, as a form of therapy. \"And you must be Christopher. Where do you know Ash from?\"\n\nI laughed. \"We met in college actually, back when I was still adjusting from growing up a military brat. I had all these light anger issues at the time and Ash was always the calm and collected one. Eventually, after enough rants where he patiently nodded along, I just decided the anger wasn't worth it and here we are down this path instead.\"\n\nShe laughed along, but there was something hard glittering in her eyes, something that made me curious from the start. There was something about Deirdre. I had seen her play in Sulfur's Alpha, of course I had, but she was usually with lighter Dominants. She had this cat gear that Ash would get her to wear when he really wanted to make a Dom's night. He used her to train them on how to top when they expressed interest, too, because there was no risk of her getting overly involved or attached. Deirdre was the submissive playgirl. Of course, I hadn't ever played with her because I had been more along the line of being a Master than a Dominant and I didn't think she would like playing with me.\n\nNow that I was standing closer to her, talking to her? There was something about her, something I didn't understand. A bad habit of being a Dom? We like understanding things. I started to watch her more closely.\n\n\"Well, that sounds like a formula that adds up entirely correctly. Military brat tempered out ending up a lifestyle Master? No, yeah, I can see it.\"\n\nI had to grin. \"Guilty. And Ash told me you're the more controlled of the submissives in his ring. I suppose now I know why.\"\n\nI nodded to where Lily had gotten to with my bartender because I didn't think Deirdre had noticed her and I had to laugh at the look on her face because it confirmed that she definitely hadn't noticed.\n\nThe other submissive was tucked on my bartender's lap in a chair at the bar. They weren't bothering to hide their foray together, either. Jackson had his tongue halfway down her throat and he was all over her. Deirdre ran a hand through her hair. \"Jesus Christ, Lily, you maso slut.\"\n\nMy grin widened. \"I think that, by societal standards, I'm supposed to be disapproving of a person coming to inspect the goings on here and ending up like that, but I've never been good with that kind of thing. I tend to think submissives should always be encouraged to be as free as they please in a safe atmosphere. It's sometimes rare for them to find those.\"\n\nDeirdre looked to me and swallowed, her eyes flicking to my side, something that made me aroused to see. That was where I had placed my two slaves to display them after our fun together. It was a reward for them having done so well and behaved so well and they both loved being displayed. At the moment, Todd was stroking Gracie all over, caressing her while he kissed her. When he stroked a palm between her legs, Gracie spread wide for anyone to see her for viewing pleasure. Deirdre looked back to me. \"I can see that.\" And her voice was a little squeaky, so that I had to laugh.\n\n\"Come on,\" I said gently. \"Have a drink with me? It looks like you're going to be here for a little while with your friend.\"\n\nA spark of something lit her eyes, as if she wanted to turn me down, but when she opened her mouth, she answered, \"Okay. That sounds good.\"\n\nWhat was it about Deirdre? I watched her where she walked beside me and we went to the other side of the bar to leave Jackson alone with Lily. \"Choose what you want to drink and I'll get the glasses.\"\n\nShe hesitated and got down a bottle of Jack with some of the Coke from the cooler. And it was the moment that let me know what it was about her. It was the moment that showed me what I had never noticed, even though I had seen the submissive goddess play all the time. I had seen her bow, had seen her having laughing fun and hot orgasms. And Deirdre was this sexy sub kitten too, the kind that belonged in movies. She had this natural blonde hair with these curls and these crystal blue eyes. And her body? Oh, man, it would turn anyone on. She was curvy and fit and Ash claimed the only reason why she was so obsessive with fitness was due to how vain she could be, but the result was gorgeous, stunning.\n\nBut I wasn't interested in people who wouldn't like my kind of play and I had never thought Deirdre would like it. And then she made me realize.\n\nYou see, she poured my drink and that was all it took. I watched her place the ice cubes, my heart thundering, then watched her pour the whiskey. Her head was bowed and her arm was graceful with the action of serving. She moved slightly slower, as if she wanted to savor every part of the feeling, too.\n\nAs if she was unconsciously making effort to be more visually pleasing while she served me.\n\nIt seemed a surreal moment when she lifted her eyes to mine, when her head was still slightly bowed to show me perfect respect. She froze with whatever she saw in my gaze because I knew and I thought she knew I knew.\n\nDeirdre wasn't a submissive, not at heart. Deirdre was a slave. And suddenly, it felt like a door being opened. I wanted her something fierce. Hell, I had orgasmed as soon as I'd seen her watching me train my slaves in the doorway, but with the knowledge of the possibility? It made it so much worse. I wondered if she'd been a slave to someone already and then thought that couldn't be it. No Master in their right mind would have Deirdre in their collar and let her go. They'd do anything in their power to keep her, unless they were fucking blind, batshit insane, or dumb as a brick.\n\n\"Thank you, little Aurora.\" I said it teasingly, but Deirdre's eyes turned dark with some form of strangely tortured delight at the word. \"Pour your own, won't you? And I'll show you more of the place.\"\n\n\u2014\u2014\u2014\u2014\n\nDeirdre\n\nMy heart was going crazy and my mind wasn't helping. All the blood seemed to be gone from it and all I could think of was every fantasy I'd ever had of my prince. Oh, this was bad. It was so bad. I had stayed safe from any feelings in any relationship for so long and I absolutely stayed away from any and every lifestyle Master than wasn't Asher Lavrov.\n\nSo why was I obediently grabbing my Jack and Coke at Christopher's nod? Why was I taking his hand and glancing at his slaves in their cage with so much jealousy that it stung? Why was I opening my mouth to ask him questions, when I should have been running in the opposite direction? \"May I ask how many slaves you take and how you choose them?\"\n\nHis smile was so soothing and inviting, like his Sulfur's setup. \"Of course you can. I'm sure the submissive kitten can ask anything she likes. I've had... a lot, to be honest.\" Of course he had. God, it was so much worse that way. He was so obviously a playboy and so downright stern in his features that any submissive feeling brave enough would beg to try his slavery. \"But they choose me first. They all come to me with something in mind that they want to better about themselves or something that they want to open themselves up to with the experience. Gracie's a pretty good idea for it, actually. She's a model and she saw the way one of my slaves from before walked.\" He grinned at me. So inviting. So enticing. I needed to get out of here. Instead, I was listening to every word. \"She wanted me to train her to do it and, since you're a lifestyle submissive, I think you can guess a little of how I answered.\"\n\nI swallowed, feeling tortured. \"That you had to train her to a mindset of serving others and the rest followed.\"\n\n\"Very good.\" He smiled down at me with the warmth and approval of a Master and it made me feel giddy and happy to please him.\n\nGod, Deirdre, get it together. Finish asking the questions Ash would want you to, then go home and bang your head against something until you wake the fuck up. Yes! Yes, that's exactly what I needed to do. Wait, what would Ash want me to ask again? I couldn't think. I was trapped in a whirlwind of desire from being near the personification of every fantasy I'd ever had, along with terror from how much pain those fantasies had caused me in the past. I couldn't be with Masters. I had to play because my needs were a torment, but I couldn't be with Masters. \"Hey, there.\"\n\nI swallowed, looking up at Christopher. \"Y-yeah?\" It felt like the wrong way to address him. I didn't want to think about what the right way would be because it involved honorifics that I couldn't let myself say.\n\n\"You okay, Aurora?\"\n\nI never wanted him to stop calling me that. Sleeping Beauty waiting for my prince to kiss me awake while he fixed me with a beautiful collar around my throat. \"Yeah, I'm okay. Sorry about this. First Lily and now me.\"\n\n\"It's alright. Here. I just wanted to show you this room. I didn't think you got to explore anymore after catching me in the act.\" He said it with such easy charm that it made me smile, even in my distracted state. There wasn't a single hint of a blush on his face that I had watched him cum in his slave's mouth, had watched that slave share it with a second one as if it was the greatest treat they could have dreamed of. I froze when I walked into the door he held open for me.\n\n\"This is the most beautiful dungeon I've ever seen.\"\n\nHe laughed behind me, while I drank it in. It looked like a dream. It was circular, for a start, and the wall was stone and rough. The floor was hard but it had a big, fluffy rug covering it. It looked like a tower dungeon, except it was twisted so there were things like suspension hooks, ropes, harnesses and a sex swing. Christopher sat easily on a stool by a deliberately uncomfortable stone table. \"I'm glad you like it.\" Heat flooded me. He looked like a prince who belonged there, looked like someone who was only missing a princess laid on the table to serve him and his pleasure. \"Deirdre, while I have you here, can I ask you something personal?\"\n\nNo. Tell him no. Tell him to fuck off. Or don't say anything if you can't control it. Just leave instead. Run and leave. Be a coward. Do anything at all, except say- \"Of course. You can ask me anything.\" Inside, I was whimpering.\n\n\"You used to play with Ash. The only other regular you played with was Matt, but Ash said he became busy with his own drama at the moment. I know that you and Lily both use playing as a form of personal therapy and I know that you both have your needs. Would you like someone to play with regularly, Deirdre? Lily can come along anytime she likes and I think Jackson would be better suited for her, but if she comforts you or doesn't get along well with him, I know masochists, too. It's okay.\"\n\n\"I-\" I swallowed, cutting off, fighting with myself. The truth was his offer was kind beyond belief. He was a safe Master, one like Ash, and someone who could definitely satisfy every submissive need I had. I was pretty sure I could ask Ash anything I liked about his friend and would get nothing but positive truths. I was pretty sure Ash would confirm the fact that he had a great deal of experience with slaves and submissives, was also sure he'd confirm that Christopher had had a lot of slaves come to him. I went to Sulfur's and played because my desires felt like a curse. After a few weeks, I would start to fray and a nice domination session would pull me back, make me think clearly. Playing was like a reset on stress for me. It gave me a mental vacation where I could lose myself to someone else's will and earn the satisfaction of being praised for it. This was someone who could satisfy those needs when I had them. \"H-how do you mean?\"\n\nThat wasn't the answer I should be giving, goddamnit. Some strong lifestyle submissive I was. I felt like I was going to lose my mind. Christopher stood back up. \"Sorry. I should have clarified that. Just as playtime scenes as you needed.\"\n\n\"What if I didn't want to take my clothes off or anything?\"\n\nHe smiled and he was standing so close and my body suddenly felt too hot. \"You'd never have to.\"\n\nIt was everything I could ever want in one offer, coming from the prince of my dreams, who had stern, unforgiving features even while his smile soothed. \"I- Um-\" He took my drink from me and sat it down.\n\n\"You're overthinking, Aurora.\" Oh, God, I loved that name. I felt desperate and needy. \"You're so scared,\" he said thoughtfully, as if trying to figure me out and piecing parts together. \"But not of me.\" He was closer and I whimpered because I knew what he was going to do, how he was going to make me think more clearly. It had been weeks since I'd played with anyone and I couldn't remember why Masters were bad, could only remember that I had a need to please someone else for a time and I hadn't satisfied it.\n\nHe lifted my chin, his shoulder length dark hair tickling my face when he leaned forward over me.\n\nUm, no, no. What are you doing? Look, 'all adored sub princess', are you going to listen to any kind of reason at all?\n\nI imagined that stern face and those chocolate eyes looking down at me like he'd looked at his slaves. I imagined he was looking through cage bars, the kind of safe, happy cage I had always fantasized about and my logic shut up. His lips pressed to mine.\n\nIt was like a switch being flipped. Every fantasy I had suppressed in favor of light playing came alive like a nova. I arched in his arms, whimpering against his kiss in a begging noise and he wrapped his other hand around the small of my back, just like the perfect prince. His hand on my cheek caressed back to thread in my hair, cradling me so that I arched up against him, lifting every part of me to better display myself for pleasure. I remembered these mindsets like they were yesterday and they came back alive so easily.\n\nHe pulled away and I opened my eyes, craving more of his kiss, and if I was thinking straight, I would have lifted to it in submissive form, begging for more against him. But I wasn't thinking straight and I waited instead, staring up at him to invite him to take what he willed at his leisure.\n\nHis eyes lit up with approval. \"God, look at you. Of course you were so perfect for the Doms you bowed to.\"\n\nI couldn't ask what he meant and it didn't matter anyway. It let me know that he had guessed a few things about me, for sure, but then his lips were back on mine and I whined, silently begging him for mercy. I turned into pure reaction. When his hand pressed my back, I lifted in a sinuous dance of pleasure. When his tongue brushed gently against my lips, I opened up, unable to think of denying him anything. I felt like I could burn when he took advantage and his kiss turned messy and hotter than hot, hotter than blue fire. There were these sounds like soft animal cries and it took me a minute to even realize I was the one making them. He caressed the back of my head, cupping his hand so gently and I felt caged in every good version of the word.\n\nCaged. I remembered my fantasy of wanting a happy, fluffy cage, remembered how it had hurt me so goddamn badly that I couldn't even date anymore.\n\nI swear I don't remember doing what I did. I only remember being suddenly terrified beyond thinking and then I remember my palm stinging and I was looking at Christopher, who was giving me the most curious gaze of shock with a red spot on his cheek. Because I'd slapped him. One of Ash's friends. A lifestyle Master. A really kind person. And I, the most happy and easy going lifestyle submissive, had slapped him. He opened his mouth, but I didn't wait to hear what he said.\n\nI just finally listened to the voice in my head and left his bar. He didn't follow.\n\n\u2014\u2014\u2014\u2014\n\nChristopher\n\nHuh. That wasn't what I intended.\n\nI sat at the rack table in my Tower Dungeon and questioned a few things about myself. I couldn't say I'd ever been slapped before. I would smile over it, except... Except the look on Deirdre's face when and after she did it was pure terror and horror.\n\nI revised my thoughts from earlier. At first, I had thought that no Master in their right mind could have owned Deirdre King and let her go, but now I had a different working theory. I thought that maybe she had, actually, been someone's slave.\n\nAnd now I thought that someone had severely hurt her. I had seen slaves before, ones who had been taken advantage of, or had taken advantage of, in the wrong ways for them. In some cases, the slave just wasn't compatible or built for what their Master wanted and it had done some damage to both sides. There were other relationships where the Master's or slave's feelings had been toxic. Master and slave relationships required a lot of trust and either side of it could abuse that trust, sometimes without intending to, and it left damage. Very rarely had I ever found the damage intentional, actually.\n\nBut Deirdre's fear seemed like the kind of thing from some kind of damage, even if I didn't know exactly what. It made me want to help her all the more. God, she had been playing as a submissive for years. Had she been staying away from relationships and deeper styles of play because of those wounds all that time? Sure, that kind of thing would fulfill whatever submissive needs she had, but it had to suck, too. It sounded downright awful, actually.\n\nI called the one person who knew Deirdre better than anyone, the one person who always knew what to do. Ash Lavrov.\n\nI started the conversation by covering for her because I didn't want him upset with such a good friend. \"She was a perfect little avatar of your inspection until I sidetracked her,\" I said teasingly.",
        "To which he growled. \"Goddammit. What did you do?\"\n\nAnd then I told him. I told him what I guessed and that I wanted to play with her. I told him about how she'd poured the drink and how it had been instantly obvious.\n\nHe let me talk myself out, let me obsess over how she was like something from a fairytale and when I was done, he was quiet about his answer. \"She was hurt, Chris. I won't tell you what happened because it's her business and not mine, but Deirdre came a long way. She stays away from harder players because she doesn't think she can keep her heart out of it when she knows she has that nature. Be careful with her.\" Those words made me interested. They seemed to imply there was more to be careful with. \"And don't do anything. Just wait.\"\n\nUgh. Gross. That would be his answer, the Star Wars clich\u00e9 of waiting for them to come to you. It was the one thing I sometimes sucked at, even if it was the best course of action. \"Okay.\"\n\nAnd then I remembered that I had another resource of information in my bar at the moment and had to grin because the other one was sitting in the arms of my bartender. I didn't have to be totally stagnant if I was stuck waiting. Lily, as it turned out, was every bit as playful and uninhibited as Ash had led me to believe. She asked me questions about the bar, watched my slaves with me while sighing over how gorgeous they were the same way other people would sigh over romances. By the time I asked her the questions I was dying to know, she was all too forthcoming.\n\nBut I would wish I hadn't asked. The answers she gave me made me see red. What kind of terrible Master let jealousy choose his punishments? What kind terrorized his little slave so bad that she cringed at every turn in the nonsexual ways and what kind locked her in a windowless room for a week without a bathroom to keep her from going on a vacation with Lily? At first I wondered why Lily would talk so easily about her friend's past, but then I realized that Lily had suffered from it too. She was a fiery little redhead when that sweetness turned to anger and she told Jackson and I a lot once we got her started on the topic. She told us a horror story involving a drug habit that was out of control and violence that was unpredictable.\n\nI had to force myself to follow Ash's advice, but I did it. And I was in a far different mood when the little submissive princess came back to me, like Ash had promised she would.\n\n\u2014\u2014\u2014\u2014\n\nDeirdre\n\nIt had already been a while since I'd played before Christopher's kiss, but when a week went by where I didn't so much as visit Sulfur's, I started to feel like I was going crazy. It was Ash who finally messaged me.\n\nThrow in the towel and go see him, kitten. If I have to intervene when you self destruct, you won't like it.\n\nBloody damn Master. He knew me too well. Ugh. I hated the fact that I totally deserved the warning too. He had seen my self destructing a few times and he knew it wasn't pretty. I had woken up a few times with Ash at my side, after throwing up all night from deliberately drinking painful amounts, going on and on about being cursed, like a dramatic emo kid. God, it was embarrassing. And the implicit threat in his text? Shudder. If Ash said I wouldn't like it, then it meant I really, really would not like it. I did not want to spend nights at his desk writing goddamn lines while he told me, for the upteenth time, that if I acted like a child, he would treat me like one.\n\nI will not be stubborn until I self destruct. I will not be stubborn until I self destruct.\n\nI messaged him back when I was standing outside of Sulfur's Beta, taking a picture of it so he'd know I was there. I hated how good it felt when he messaged me back to say, Good kitten. Go on. He's an old friend and you'll like him.\n\nI had to stop myself from being a bitch to him because bitchiness was a side effect of denying myself submissive play for a while. I really wanted to snark back at him that I damn well knew I'd like him and I didn't want to fucking like his perfect, stern face and his perfect, beautiful slaves in their glamorous, wonderful cage. \n\nOh, God. That was the most jealous thought I'd ever had. I really was in trouble.\n\nI walked in the door and gave my card to the door guard, since this one didn't know me as well. I went past when he nodded me through, stepping into the wonderland of Christopher's Sulfur's, with its raised daisies and the birdcages. Just that step through the door made me want to bow so badly it hurt. I wanted to see him and see him right then. My sex went drenched and ready and it only got worse when I remembered him standing over his wonderful slaves. I couldn't even think of the jealousy anymore when I was in that place. All I could think of was how badly I wanted to be one of those slaves, adorned with ornaments and pretty collars and displayed in a beautiful cage. I looked around for him, couldn't think of anything but him. Was he playing again? Would he be in one of the back rooms?\n\nNone of the above. He was at the bar with Jackson and he was watching me, his eyes inviting and gentle again. I got wetter, needier, thinking of his kiss and it didn't help that he had a long stranded flogger in the back pocket of his jeans, so that it moved when he shifted. I could see him playing with that flogger so easily it hurt. God, I had made fun of Lily for being hard up on his bartender, but I felt like a she wolf in the freaking spring, burning with sex fever just because I'd dared wait to long to satisfy myself.\n\nWhen I went to him, he smiled in approval, as if he knew what kind of bravery it took me to come back and my heart fell even harder. He was a dream and every time I stood with him made my mind go crazed with my fantasies. \"I'm sorry,\" I finally whispered. \"I-\"\n\nHe grabbed my hand and it took me a moment before I even realized what he was doing.\n\nBut he was just hugging me, holding me in a feeling of safety that I didn't realize I needed so badly. Because that was another thing of playing the right kind of games. There was definitely a feeling of security and protection involved. For me, it sometimes felt like a bubble of safety around a scene when it was happening.\n\nHe was so much the Master that the sphere of safety felt like something he carried with him. I cuddled against his chest and I couldn't keep from smiling when he felt warm and sturdy. He was still so freaking nice and perfect when he pulled away, too. \"No, I'm sorry. That was awful forward, to be perfectly fair. It's about time someone gave me a lesson of humility.\"\n\nUgh. How was he so secure about literally everything? He never even blushed. Even I got exhibitionist jitters every now and again! \"Yes, obviously it was because you deserved it for trying to make me 'an offer I can't refuse'.\"\n\nHe laughed when I said the last in a dramatically Italian voice and I was glad he found it charming because I was only capable of acting that much of an idiot when I wasn't thinking straight. It had been a month since I'd played. \"How have you been?\"\n\nYou ever see a drunk or drugged person and how they're sometimes all over the place and they don't seem to have any clearly identifiable emotions? That's how I felt in his presence at the moment. I couldn't think. He was so stern even when he was so gentle and soothing. He didn't have a directly scary image at all, unlike his bartender or door guard, but in a different way he was scarier. It was that same factor that made him so secure, that made him stand straight, that made him kiss me that first time. It was the same way he had read me like a book and gave me that intense gaze as soon as I fixed him his whiskey one time. I had served him once.\n\nAnd he knew about me after that. I didn't know how, but I knew that was when he'd read me so easily. \"Fine. I've been fine,\" I finally managed.\n\nHe was already gently leading me away from everyone, gently leading me back down the hallways, as if he was reading me again. \"I'm glad. I was worried about you after that.\"\n\n\"I'm sorry.\" It came out sad and sincere because it really did make me feel bad. I had another image of his male slave fingering his ass to please him and felt like my pussy was throbbing between my legs. Jesus, this hurt. \"I didn't mean to make you worry. And I really am sorry for- for-\"\n\n\"Slapping me,\" he said, grinning while I flushed. He opened the door to a back room and I realized it was his office when he guided me inside. \"You should definitely own that. No one else has ever done it.\"\n\nWhen he shut the door, I couldn't think anymore. \"I'm sorry for this. Please don't think I'm a crazy person, please.\"\n\nHe was smiling that charming smile again. \"Ash already warned me.\"\n\n\"He did?\" My voice was squeaky and my thoughts were racing and I couldn't piece them in any kind of coherent string. \"Warned you? What did he warn you about? Do I need a warning? For what?\"\n\nHis smile turned to another easy grin. \"For this.\"\n\nThis time when he grasped me for a kiss, he was all masculine Master. His grin turned evil and his hand was in my hair again, but this time it was deliciously fierce in its hold. I growled into his mouth and opened mine in invitation, throwing caution to the winds. I wanted him and he wanted me.\n\nWhen he released me from his kiss, I couldn't stop the cry. \"Oh, please! Please, I need it!\"\n\nHe shushed me with the perfect amount of condescension to make me go hot with helpless humiliation, his fingers touching my lips with a little bit of violence in it. \"He also told me to not be such a gentleman this time and to tell you, 'Bad kitten. You waited too long.'\" I whined, arching, and he shushed me again. That same kindness turned so fierce when he wanted it to. He was so controlled, such a Master. \"Easy. I've got you.\"\n\nI couldn't remember why he shouldn't have me, why that was a problem. \"Please! Please...\" I struggled against him until he caught one of my wrists and then grabbed the other. He backed me against his office door and held them pinned up above my head, watching my eyes.\n\nI felt hazy with sheer, sinful lust. I stared up at him, arched in a slutty little way, my lips parted for more, and I went still with surrender under his gaze, waiting for him. He smiled in approval. \"Good girl.\"\n\nHe held my wrists in one hand and finally lowered the other. Where he stroked it between my legs, over my jeans.\n\nI squealed and I didn't remember doing it, but my leg lifted to wrap around his to try to pull him closer. He was a kind enough Master to grant me that, to press me against the wall with his body so I could wrap my legs around his waist and I did. I wrapped tight and lowered my face to his neck with a whimper when he thrust against me. It was only later that I would realize he had been kind and kept our clothes on so I wouldn't do something I would regret. Even when he wasn't behaving like a gentleman, he was being a perfect one.\n\nFor the moment, he just worked me against the wall so that it gave me the sensation of being fucked and I thrashed in desire, rubbing my face in his neck until I finally lifted and begged, \"Please! Harder, please! More...\"\n\n\"Such a greedy little girl.\" I cried out with the words, then sobbed when he curled a hand around my throat. He didn't even choke, didn't even have to. With him, just that gentle threat was enough. \"Was he right, then? Were you a bad little Aurora? Did you stay away for too long?\"\n\n\"Yes! Yes, I was bad. Please! Uh-mmm!\" I cut the last off in a desperate sound, hoping he'd be nice to me, even though I had been bad and I knew I'd been bad.\n\nI knew it because I would have said and agreed to everything he wanted, mindlessly, so long as he'd give me one more minute of his hand around my throat or a hard pull of my hair while he gave me that stern gaze and lectured me. Or if he'd make me crawl with a hand in my hair, make me kneel and look up at him and beg. I'd do anything for one more touch. It was like I was a drug addict and he was the most pure and exquisite form of heroin from my wildest dreams. \"Bad girl.\" He didn't have access to my ass, so he did me one better and released my throat to slap my tits, giving his punishment to them instead. \"You know better. I can't take care of these dark, filthy little needs you have if you don't come to me and tell me.\" His eyes ate me alive, held me captive with sheer will. Had I ever thought him a perfect gentleman? How had I forgotten that the first image I had of him was of two slaves at his knees, where one lubricated the other to finger his asshole while sucking his dick? He was intensity and control and I climbed him for more, more, more. \"Bad, bad girl.\" My breasts stung with his abuses, delicious pricks of sensation from his light slapping.\n\n\"I'm sorry, sir. I'm sorry, I am. Oh!\" I yelped when he abruptly pulled away from me, keeping control of me with the hand around my wrists and he forced me to the floor until he was standing over and slightly behind me.\n\n\"Sorry doesn't really help me, but maybe learning to beg a little better will help you. Let's make sure you know how together, Deirdre, so you don't have an excuse for next time. Show me how you ask for a spanking.\"\n\nOh, Jesus Christ. So he could do it? I whimpered just at the thought. I was drenched in my jeans and he hadn't even taken a single thread of my clothes. What was more, the position he had me in was with him bending over me, one hand at my chin and holding my head back. When I turned my head, I could feel his cock, how thick he was, how fucking hard he was, how goddamn horny he was to have me at his knees. I gave him what he wanted, craning my neck to look at him, and my voice was so breathy with desire that it was pathetic. \"Please spank me, sir.\"\n\nHe smiled down at me. \"Good girl. How pretty. Of course, if you were a slave, it would be different.\"\n\nOh, no. Please, no. He could make me do anything at the moment, anything, and this was the type of thing that I shouldn't ask more about because every word would be enticement to make me burn worse. \"S-sir?\"\n\nHe crouched behind me, still stroking my jaw and his other hand stroked down between my legs, so that I shrieked. He squeezed roughly, but it was the perfect amount of sensation over my denim and his presence was already making me wild. I was so wet, so fucking ready. He made a low noise of encouragement in my ear, permission. \"It'd be much different, little Aurora. You wouldn't say those words at all. You'd trust your Master to take care of you, no matter what kind of needs you had, and you'd never ask.\"\n\n\"Please! Oh, please, I need it!\"\n\n\"I know you do. It's okay. Let go, little Aurora. I've got you and I know what you need.\" His voice was low in my ear and his breath felt hot, but all of me felt too hot. His hand between my legs slapped and squeezed and I spread wider for more, whimpering. He'd been caressing my jaw, but his hand moved to, ever so gently, close around my throat.\n\nWhen his teeth locked at my neck, it was the last touch I could crave. I let go and it made my world go white with desire and pleasure.\n\n\u2014\u2014\u2014\u2014\n\nWhat made the whole thing worse was that he didn't even do anything afterwards. He didn't take for himself and he had never even needed to take my clothes off. He could have taken so much advantage of me, could have made me do whatever he wanted me to. I think I would have crawled into his cage to sleep if he made the slightest suggestion that it would give him pleasure. He never did, never even made a suggestion of his pleasure, as if he knew. He just sat on the floor and held me until I came back down again.\n\nHe was back to being the gentleman version of Christopher, I realized. I curled against his chest and he hummed against my hair. It took me a minute, but he was even waiting for me to speak first. \"Thank you,\" I finally whispered.\n\nHe laughed, pulling back to sit on the floor and smile at me. \"My pleasure,\" he answered with a wink. I flushed in reply because he hadn't gotten any of that at all actually and I was trying to not think about the ways he was going to slake his lust later. His voice turned wicked. \"And what was that thought?\"\n\n\"Thinking about your pleasure,\" I answered honestly.\n\n\"Now that is a fun thing to think about, if I'm allowed to be a little full of myself for a moment.\"\n\n\"I feel like you're allowed to do much more than that, sir.\"\n\nHis grin was so infectious, so easy going. \"Oh, I don't know. I've heard I'm on a tight leash and have to be inspected by this little wildcat, who once slapped someone so hard Ash almost had to make you leave for the night.\"\n\nIt worked. I laughed in his arms. \"You were there for that?\" But of course he was. Why wouldn't he be? \"I don't even remember what the man said to Lily, but I remember being so angry that he had managed to actually hurt her feelings. That was one of her boyfriends for a while, too, and he had to know what wounds he was hitting. Lily once flirted with a piercer after he punched the needle through because she squeaked in pain and he apologized. So she grinned up at him and said, 'I didn't realize how cute you were before'. The thought of whatever would hurt her just... I couldn't deal.\"\n\nChristopher choked in delighted amusement. \"Please tell me that kid hasn't tried to date a vanilla person. I feel like she'd break him after what Jackson told me.\"\n\n\"She did. He was a devout Pentecostal.\" Christopher opened his mouth, then closed it, and I laughed. \"Yeah, none of us knew what to make of that, either. He thought she was cute and innocent and sweet.\"\n\nWe bantered back and forth, over Lily, over masochists in general, over slaves and submissives.\n\nAfter I left him - and we went back out to his bar where I think I convinced Jackson that I wasn't actually a neurotic psychopath - it sank in how easy it was, how charming he was. I had known someone that seemed easy and charming before. I had suffered for lack of insight, torturous ups and downs in lack of control and never choosing the right thing. He had loved to tell me I was the shittiest submissive in the world because I'd tell him I didn't know how to please when nothing seemed to please him. And it hurt. So bad.\n\nAll I had lived for and wanted was to be called a good girl and to curl up in a happy cage like a fairy tale princess caught by her prince. It didn't matter that Christopher Love was so nice, that he gave me what I needed. I self destructed anyway and no one can self destruct quite like a submissive with the rug torn from under her feet. It's one of those things we're pretty good at sometimes, especially when we really want some goddamn structure and everything feels like chaos. It's kind of an ironic curse of both working well with control and being unable or unwilling to give ourselves that control when we want someone else to do it.\n\n\u2014\u2014\u2014\u2014\n\nChristopher\n\nI think the only reason why it took Ash two weeks to call me was because the man had a lot on his mind. He didn't tell me all of it, but I knew one of his play Doms, named Matt, had picked up a rather interesting girl in Sulfur's on an open door night and Ash was heavily involved in whatever was going on with it. He didn't tell me much, except to say she was worse than Deirdre had ever been, but she took to Matt and Matt both adored her and was trying to help her without knowing what he was doing. Anyway, needless to say, Ash had his hands full.\n\nBut he was still bound to call when he didn't see Deirdre for a while. \"Hey. I was just checking up on your new little playmate.\"\n\nPlaymate. I tilted my head. Ash didn't sound very concerned. He sounded more playful actually, like he thought Deirdre was with me. \"My new playmate? I saw her the once, but I guess it ended on a high note, sure. She said she's busy helping you at the other bar, though.\"",
        "He was silent for a moment and when he spoke, it was simple. \"She lied.\"\n\nI was grinning, but he sounded angry. \"Yup. Hey, don't worry about it. I'll get her. You've got enough to deal with and it's okay, honest.\"\n\n\"I can't just...\"\n\n\"Let it go? Yeah, I got it, control freak. You'll get updates. I'll call you in a while.\"\n\nHe let me go, but he didn't want to and I had to appreciate that. When he'd first had me try out the new branch for him, he'd tried to micromanage every fucking thing. Ash was the kind of boss you hated. He was cold and emotionless, like an android that wouldn't stop asking you about every little detail, from the height of the bar cooler to the placement of a sink. He was infuriating and I'd had to swallow down many a military brat comment where I wanted my own goddamn control and could work everything better if he'd shut up and let me just do it.\n\nI was kind of proud of him for managing to hang up the phone after one of his surefire, stable lifestyle submissives lied to both of us, like a teenager trying to sneak out of the house with a friend. And we might live in a big city, but I had some valuable resources to find her and one of them was flirting with my bartender.\n\n\"Hi, Lily.\" I sat down next to her, drawing her name out, and she seemed to hear something in my voice because she shifted in her chair. Jackson smirked at me. \"Let's talk about Deirdre.\"\n\n\"Um.\" She shifted her eyes nervously between us. \"Okay. We... we can do that.\"\n\n\"Why so nervous?\" I flashed my teeth and she cowered. Oh, I liked Lily Lofton. \"I hadn't seen her in a while and she promised to see me every now and again. I wanted to make sure she's okay, even though I know she's busy helping Ash.\" I said the last in a hard voice.\n\nLily shuddered. \"Yes. Yes, she has been busy helping... helping Ash. She's just been tired, you know, with the sex toy store and whatnot.\"\n\n\"Uh huh. It's really nice of her to help him so much right now.\"\n\nHer voice got squeakier. \"It is! It is really nice. She's good like that.\" Yeah, she knew.\n\nIt took me thirty minutes to break her, which shocked me actually. The way she acted at first, I thought it wouldn't be so long. I kissed her head when she finally confessed Deirdre's wild spree to me, when she gave me a list of bar names she might be at, starting with the most likely. I left her with Jackson, who winked and pet her and whispered that she was helping Deirdre and it was okay.\n\n\u2014\u2014\u2014\u2014\n\nDeirdre\n\nI downed another shot of Jack Daniels at a hang out bar that was seedy as hell. It was nothing like the calm control and clarity of Sulfur's, but it worked for my purposes at the moment. God, what was wrong with me? I felt humiliated, embarrassed, like a bitch. What was more, I hadn't bowed to anyone since the light play with Christopher and my world wasn't exactly stable at the moment. It wasn't just having met him. There were other things with work, standard problems everyone deals with, and I was usually pretty good at handling them so long as I could satisfy that one cursed need. It was just part of me, my outlet and that special mindset that balanced my world.\n\nWhat was worse? I didn't even have a good excuse for doing this, for acting the way I was, and for not going back to Christopher. I was just being a fucking coward, but all I could think of was how awful it had been the last time I had gotten too close to my fantasies. I moaned, placing my face in my hands before I downed another shot and, by then, I absolutely had the intention of making myself sick. Because I deserved to be sick and to go through the pain the next morning. God, really? Some reliable friend I was to people like Ash who thought so highly of me. What was wrong with me, that I needed to play those games or I lost myself in self punishment? I didn't know, but it was torture sometimes and the worst part was playing sometimes wasn't even satisfying. All it did was make me get close to that girl who dreamed of being locked in a tower by her knight. Lately, I dreamed I was Rapunzel and maybe I struggled my cage at first, but the knight in his shining armor held me safe and secure and he cherished me. He always caught me when I tried to leave my tower and he always punished me to make me feel safe all over again.\n\n\"Hey there, Hawthorne Heights. Chin up.\" Despite the teasing words, his voice was so gentle. Christopher Love. God, he even had the name of a knight, at least to me.\n\nI didn't obey him. I lowered my head to the bar table and moaned. I didn't even bother to ask how he found me or what he was doing, either. I couldn't get away with lying to someone like Ash for a long amount of time. \"Why am I like this? Why can't I just turn it off and be like normal people?\" I went to take another drink, but he stopped me with a light hand over the shot glass.\n\n\"Hey, there, Aurora. I know it isn't much consolation right now, by the looks of things, but I think you're pretty damned wonderful the way you are. I'm really glad you're not whatever you mean by 'normal'.\" I finally looked up at his stupid, perfect face and gave him a pathetic gaze, so that he smiled.\n\nI rubbed my hair, which was a mess. I was defeated as hell and he looked as put together as the night I first saw him, when he was getting his cock sucked by two slaves he didn't even have to speak to in order to command. \"I hate you. How are you so fucking perfect and gorgeous?\"\n\nHe grinned and paid off my tab while I was too drunk to even realize he was doing it, while I only realized it after the fact and then wanted to slap him for being the perfect goddamn prince. \"There's a lot of people who'd disagree with you on that. Every slave I've ever had enjoys the fantasy play of my control for set time limits, but has always confessed, after they're done, that they wouldn't want it 24/7, for instance.\" He was even guiding me out the door with his hand at the small of my back and with such ease that I barely even noticed that, either. I barely even thought about the fact that I shouldn't want to go anywhere with this man.\n\n\"I hate you.\"\n\nHe made a low sound and I realized he was finally frustrated. \"Would you tell me why, then?\"\n\nI snorted and my petty shit came up, thanks to the alcohol. My emotions were all over the goddamn place and I couldn't think in the presence of this man. \"It doesn't fucking matter. Just go back to one of your perfect, gorgeous slaves and leave. Me. A-\"\n\nHe cut me off in the one way I couldn't fight against. It was the same way he already knew would shut me up and make me still. With a kiss.\n\nI moaned into his mouth, lost to his force of will because that seemed a thing alive. He was put together and commanding and he had all those perfect qualities of the master I had always dreamed of, every last bloody one. He was nurturing, hard, stern, controlling. I whined up against him, lifting when he cupped the back of my head, so turned on and so fucking needy again. He growled back against me and my whine rose to a cry of submission. If I tasted like Jack, he didn't seem to care in the slightest. His lips turned all the harder with my surrender, almost cruel, but that made me more excited, so that he chuckled wickedly, and then I realized why when he stilled my body.\n\nWhere I had been writhing in a sinuous dance against him, right in a goddamn alleyway. He finally broke away and kept his hand in my hair to hold my face up to his, so that I was forced to meet his eyes. \"Jealousy does not suit you, little Aurora. It doesn't have a place for me and it for damn certain doesn't belong in our favorite fetish bar.\" I whimpered, not sober and so horny by how controlled his voice was where I was so weak and vulnerable against him. That voice lecturing me made me feel even hotter than some of the sex I'd had.\n\n\"Yes, sir.\"\n\nIt slipped from my lips as if it just belonged there, as if it was whole and right that I should look in his eyes and say it. And he reacted to it, standing taller, his hand tightening in my hair to better hold me under his control. Under his care. Under his calming will. \"Good girl. Such a sweet girl you can be. You'll find I can be very kind to good girls, Deirdre.\"\n\nJesus, I didn't doubt that. I remembered the girl sucking his thumb when he fucked it between her lips even while his male slave worshiped his cock. I turned my head so that his hand was cupping my face, then nuzzled, and then I was just drunk enough to take that same finger and taste it myself. He made a low sound when I sucked it between my lips, carefully covering my teeth. I worked smoothly, nursing him with my own worship, because gods knew I could do that. I couldn't bow the ways I loved most with my forms of submission, but I could play with toys in my bed, pretending like I was serving, imagining I was an exotic princess captured by a conqueror's knight and given as a reward... And it was so easy to serve him like that when I was just inebriated enough to let go.\n\nHis breath was hot against my forehead where he exhaled with horny fervor. \"Just say the word, Deirdre, and I'm all yours, if that's what you want. I'll give up my play slaves and let my pets go, but I want something in return for that. I want a relationship where you actually come and see me.\"\n\nHe didn't say it, but he didn't have to say it, that a relationship with him would work to the end goal of my being his slave. I thought of his pets, eagerly performing on display in their cage, thought of them dancing in their other cages, of how every single perfect motion had been to serve the eyes of anyone who watched them. Then, I thought of myself in one of those cages with no one to share the spotlight with and no one to take some of the attention with me. I thought of myself being made to dance for him. It should have terrified me. It should have made me want to leave his touch because I had felt the way that kind of training and trust could be turned around into a betrayal.\n\nThe Pleasure Garden was the name of the room he'd been in when I'd first seen him, something he'd told me when we last talked together. And for some reason, I couldn't think of the fear as well as I had been able to before. The liquor numbed out my caution and left heat and arousal. \"Tell me what you want, Deirdre.\"\n\nI want your collar and I want to be the only one who wears it, but I'm really, really scared of you. \"I want you to take me home and fuck me until I can think straight again.\"\n\nEh. Close enough. He grinned down at me. \"Yes, Mistress.\"\n\nI shivered at how wrong the words sounded from his mouth and took his hand and I was too drunk to realize that he hadn't asked where I lived. Because he was taking me home. Just not to my home.\n\n\u2014\u2014\u2014\u2014\n\nChristopher\n\nI had visions of having her in my bondage bed, of riding her into the padded leather and feeling chains under my hands even if I couldn't use them with a drunk girl. Just the roughness with Deirdre's firecracker heat under me would have been enough.\n\nShe didn't allow me to do that. I opened my door to let her in, intrigued by the out of control emotions in her eyes, wondering at them. Such jealousy, from Deirdre? That was no light thing, but I meant my offer even if she wasn't sober enough to quite consider what it meant coming from me. She could have all my attention, if she asked me for it, my monogamy even if that word kind of made me want to choke. I stayed calm, keeping my voice soft, because I wanted her to be calm. \"Here. Let me show you some of the house, l-\"\n\nAnd she shut me up with her kiss, not that I was complaining for the moment. Oh, don't get me wrong. If I could ever get her to wear my collar, I would have stopped it, even if her kisses were delicious, violent things. It sometimes sucked that you had to forego pleasures that would be fun, in favor of punishment when those pleasures were disrespectful or manipulative.\n\nI didn't have to worry about that at the moment. Deirdre bit me, so hard I grunted with a little surprise, and she shoved me back against the wall. \"Jesus Christ, everything about you is, like, the perfect D type, did you know that? Everything. You're so bad for me and I can't just make it stop. It's infuriating.\"\n\nI smiled soothingly. \"Master type, more than a Dom, actually, but listen. I know why you're so scared and I can help you, little Aurora-\"\n\nShe shut me up again and I growled into her violent kiss, loving it. She tasted like whiskey and lust. \"Stop. Calling. Me. That.\"\n\nAh, my little firecracker did have her princess fantasies. Poor Deirdre, to have been so wounded in her past. I wanted to train her with so much unconditional love that she quit being scared of the things she loved so much. I wanted to show her how wild it could be when her fantasies were made real, so much that she never wished to be vanilla again. I wanted to smooth her hair from its tousled state and teach her that not all trust was betrayed. For the moment, I just kissed her back, taking her drunk violence and returning it in the small ways I was permitted. She could take all of her pain out on me, if she needed. I could handle it. I grappled with her in my entryway, stroking my hands up to cup her tits in a fierce caress that made her gasp into my mouth. I slapped one through her t-shirt and then grinned when she moaned in greed.\n\nDeirdre had a little bit of masochism. She raised to my violent strokes, arching her back when I milked her through her shirt. \"That's it, good girl. Offer up to me when I want you.\"\n\nAnd my voice was dark, yes, but she reacted to that too, her head falling back with this sexy cry that made me kiss her again, made me drink in those whimpers of hers. She pulled away for a second and finally seemed to come back to herself, growling like the little wildcat I had fantasized about taming. I started having dreams after I realized what she was, where I reconciled how fierce she could be with the slave I had seen. And oh, she lived up to and beyond those wicked fantasies of mine. She ripped my shirt and that was the first time I'd ever had that done to me, but it made me thrilled. What was more, she tore through the tatters to bare my torso and she seemed to like what she saw an awful lot. She traced the Roissy tattoo on my chest before she kissed me again, her tongue lashing mine while I moaned eagerly. And then I pulled away, gritting my teeth against the pain when she clawed those vicious nails of hers up my back, so hard and slow that it was torturous and I felt that tiny, itching wetness that comes from the smallest wells of blood.\n\nWhen I focused on her, she was smiling as if in a kind of satisfaction and it made me laugh. \"Pleased with yourself for leaving your marks like I'm your dog? Is your jealousy satisfied now, Deirdre?\"\n\nShe didn't even hesitate. Her face was unapologetic when she answer. \"Yes.\"\n\nAnd that was about the moment that I realized I didn't care how and I didn't care what it cost. I wanted Deirdre, more than I'd ever wanted anything in my life. I wanted to take those sharp claws she could have and file them down with a relentless grindstone of slavery protocol. I loved Deirdre, beautiful wildcat that she was, and I wanted to tame her at the end of my whip and leash, until she performed for me. Those claws of hers were exquisite and her teeth could be fierce, too, but I wanted to love her in the safety of a cage so hard and much that she never needed teeth nor claws ever again.\n\nAlright, so my plans of being a gentleman went out the fucking window but what the hell. It wasn't like I was ever good at being that anyway. I met Deirdre violence for violence instead, taking the chance she'd given me to just... let go, at least a little.\n\nI decided it was pretty fun, too, especially when I managed to cup her between her legs so that she jolted in my arms. \"Look at you.\" My voice even sounded more animal, more possessive. \"Look at how greedy this little pussy is. Does it need to be fed a cock, baby?\" She moaned as if she was in pain from how horny she was and I laughed at her all the harder.\n\nShe went crazy in my arms, like the most beautiful angel, even more amazing than any fucking fantasy I had ever had of her after that first night when I saw her slap someone.\n\n--------\n\nDeirdre\n\nMy memory wasn't as hazy as I would have expected when it came to that night. I had managed to drink a fair bit before he found me, but apparently my two weeks of abuse to my body had built a decent tolerance. I remembered all of it. The way we never even made it to his room, for instance. We tussled and switched positions in his living room floor, like two dogs in heat. Well, partially in the floor, where he let me ride him with a look of fierce possession in his eyes, smacking my ass until he got frustrated and growled, \"Turn around and bend over so I can spank you better while you fuck me.\" And I obeyed, grabbing his knees and clawing my nails into his flesh when he made good his threat and spanked me so my ass sizzled with heat. And then that switched when he finally snarled and pushed me up and forward, so he could pull out from under me and fuck me from behind, on his knees while I was shoved forward. As soon as he thrust inside of me, I cried out and bowed low to the ground, face down and ass up for more, for deeper. \"Give me your wrists,\" he snapped behind me.\n\nHis voice was so much like a whip crack that I whined out my answer of, \"Yes, sir,\" and obeyed without even managing to feel a spark of anger. He held my wrists in one hand because they were so small compared to his grip, and grabbed my hair with the other, like he was holding a twisted version of reins. I choked on bliss with how helpless it made me feel, how it felt right to be bowed low and offered up for him to use because he most definitely used me like that. He thrust inside of me in a furious pace, until I was sobbing out in need and then frenzy and then rising torment. And then I finally arched and I couldn't even make a sound with the orgasm it gave me to be his plaything in his floor. He moaned behind me and I realized I'd taken him over with me, so that he was humping me, banging out his own orgasm like an animal. And thank God he had thought of condoms because I sure as shit didn't.\n\nHe wasn't even done after that. He growled and lifted me when I was still stunned with the force of pleasure, laying me on one of his chairs while I shook, but he seemed intent. He got on his knees, tugging the condom off when his cock was softening, and I didn't see what he did with it and didn't care because he lapped at me, eating my pussy and Jesus fuck, Christopher Love was an animal. He sucked between my legs, making these low growling sounds so that I shook in arousal all over again with how much fire he had, with how filthy he was. He thrust his tongue inside of me and sucked so that I grabbed his head with one hand and bit my wrist with the other. His growls only rose in volume when I pulled his hair, until he finally looked up at me and I moaned, entranced with delicious fear by how much he looked like a monster. His eyes held this ferocity that made me shake. \"Harder,\" he snapped.\n\nI squealed when he thrust his tongue back inside me and grabbed his hair with both hands, pulling so that he snarled in pleasure and sucked again, obscenely. I thrust my hips, holding his head and pulling him forward in a fucking motion, riding him until those waves of pleasure crashed inside me and I was writhing, drenching his chair and his face. \"Christopher!\" He growled at the way I said his name, then sucked hard again so that I arched, my world melting into tortured heaven.\n\nI made to lift up when he nibbled and it felt so sensitive, but then he looked at me and pinned me back with just his gaze, as stern as it was. \"No. You lay just how I've put you until I've had my fill, you bad little girl.\"\n\nAnd then went back to eating, as if he'd never have his fill. It seemed an age until he pulled me out of his chair and by then I had no fight left. I whimpered and went where he shoved me, tugging him with me when I fell against his wall. He laughed at that and made me turn around, then spanked me, holding me with one hand at the small of my back while he slapped with the other, hard spanks. I keened in ecstasy for every one, turning my head to watch him.",
        "He was staring down at my ass, watching the way my flesh rippled with every strike, his lips parted as if it was the most arousing thing he'd ever seen in his life. It made me whimper and his gaze flashed to mine at the sound, his lips curving up in a heated smile at whatever he saw on my face. He showed me mercy, turning me around and getting another condom. Once he had it on, he lifted me against the wall and rubbed against my core, teasing my entrance so that I finally broke. \"Please! Please, I'm so empty...\"\n\nHe made another of those low sounds and thrust inside of me, stuffing me full, so full, and he held me as best he could. And he was so warm with this glow of sex, like a god of lust and control all in one. He pant a little, but not as if he was about to be tired anytime soon, more as if he was frenzied with how hard he was rocking inside of me. I whimpered, my legs tight around his waist, and his head was back slightly until I grabbed him by his hair again and made him be closer, until I pressed my lips to his with a low whimper of submission and need and begging.\n\nHe moaned as if the sound wounded him and when he pulled away, his voice was a soft whisper. \"Oh, Jesus, Deirdre...\"\n\nI choked when I came and said his name a third time and, that time, I was fucked all out of confused anger and fight. All that was left was submission and I was close, so close to breaking and telling him I was dying for his collar and I was scared for how badly he might be able to hurt me. So it came out another plea and a whine. \"Christopher, please! Sir, please...\"\n\nHe moaned and bit my shoulder and I'd never forget it, never. I lifted my head for him to have easier access, surrendering to him with a happy sob while he drilled me against the wall. Then, he made this low snarl of a sound and pulled away from the wall, taking me back to the floor, and my legs shook when they fell open. This time, he crawled over me and I expected violence with the territorial gaze he gave me, but when he stroked a hand under my ass and lifted me up so he could fill me, his touch was gentle. He lowered his face to mine and kissed me with this loving hum. What was worse was how his other hand was a caress around my throat, the softest, sweetest control. No bondage besides his touch, no pain besides the way my muscles burned from our spree, and no cruelty at all.\n\nAnd that was what broke me. I closed my eyes and let my head fall back in surrender, spread my legs for him to use me easier, arched my hips to help him go deeper. I didn't say anything, but I think he knew. His eyes when he finished with a moan said he knew. They were peaceful, the Master version I had first seen him have. \"Pretty Aurora,\" he said softly.\n\n\"Yes, sir.\" He smiled in satisfaction, his eyes lit up with his pleasure and the sight made me glow, made me tingle with joy from my head to my toes.\n\nHe kissed my nose and I felt numb when he lifted me to his chest, when he carried me to his bed. Like Ash, he apparently slept where he dungeon fucked. I didn't look at it too closely besides to notice when he put my clothes on my side of the bed. He covered me up and stroked my hair gently.\n\nI waited until he passed out while petting me so gently, waited until he pulled away in his sleep, until he was on his back and his shoulder length hair was splayed messily across the pillow.\n\nAnd I got dressed and left. It wasn't my ghosting him, nothing like that. It wasn't any act of cruelty at all, in fact, or even an act of cowardice.\n\nI just knew that I was done for and lost and I needed a minute to collect myself before I fell to him, needed a minute to pray to whatever higher power existed that the fall didn't have a terribly painful ground waiting for me at the bottom this time.\n\n--------\n\nChristopher\n\nI didn't need Ash to tell me to wait after that time. I wasn't blind to what had happened and how well we had fit together on a general scale. That hadn't been any kind of protocol play at all, which was my thing. That had been pure chaos, something I hadn't been as good at before, and yet, with Deirdre? Holy hell. The fire was just there. When I woke up and she was gone, it didn't feel like the kind of thing that went with her crazy terror, didn't feel like the weird form of running. This felt like something that was going to lead to something. I wasn't angry either, wasn't much of anything. It gave me time to think about possibilities and how I would handle them.\n\nAlways before, I kept slaves. I carefully chose them and just as carefully released them from my service, making absolutely sure that they left my fantasy enslavement whole. Whether or not they kept the lessons I had taught them was their choice to make. If they left my hands and decided they had hated how much control I had demanded, then they never had to exercise it again and that was always the last lesson I tried to leave them with, that their life was their choice but they had to take responsibility for themselves. I demanded that they owned up to their actions in my slavery because it was valuable in life. But I made sure to end on the note that life was what they made of it and I kept up things like small coffee dates, made sure they came back to my branch Sulfur's so I could see them and play with them again.\n\nGoodbyes were never sad things with me. My slaves always came to me with a goal in mind, a lesson they wanted from me. They didn't love me in the relationship sense, though they certainly loved me in a friendship sense. Like I had told Deirdre, every last one to date had come back to me with a laugh and said they did not want what I wanted for a long period of time. A month of two was great for them and they gave me a few hours of service on certain nights of the week. It was finite, though, and then they left and they all had the grace to say that 24/7? Hell no.\n\nI thought of those things often during the nights when I was trying to figure out what might happen with Deirdre. Because I always knew what happened with every slave I'd had, but the person I fantasized about trying to get in a real relationship with was the one person who left me reeling and wondering. Maybe it was a sign that I should try dating her instead. She was obviously so freaking scared after what had happened to her, so why not throw in the towel and try to find a different walk of life?\n\nBut I knew the answer. It was because she would keep getting scared every time we played together, no matter how damned light I tried to be with her and you didn't enter a relationship with someone like Deirdre King without the good sense that it would for damn sure be a kinky ass relationship. You also didn't enter that relationship with any kind of fear in the play because it never led to anything good.\n\nThe worst thought was how much I would give up to have Deirdre, if I thought those kinds of things wouldn't be problems. I'd never dated before, not really. I'd gone into kink as a teenager. I'd been drawn to it from the beginning, even when I was discovering masturbation. Even then, my desires had been integrated with fantasies of control and light sadism. It started with things like those videos of girls sleeping, even if you know they're usually fake. There was something about the helplessness, the thought of needing to protect someone when they couldn't protect themselves, but of also taking advantage of their trust. Those thoughts refined themselves and I started to experiment, went deeper into the control aspect. I started looking up hard conditioning and deep training. The thoughts of mastery and rules just happened and I had met, through college and shared interests, people like Ash and all their slaves and submissives.\n\nAnd now I was given free reign of my own branch of Sulfur's and it was well known that I was a master, but I would lighten myself for Deirdre. I would even try to date for her. I couldn't claim I thought it would turn out very well. In fact, when I imagined something like dinner and a movie, it seemed like it would go spectacularly terrible, a humiliating failure. But I would try anyway.\n\nIt was good to have the time to think, to brainstorm, to fantasize of ways to help Deirdre. Even if I still couldn't decide how our relationship might go forward after all the thoughts and quiet, late night mental avenues, it made me feel steadier with knowledge of possibilities and how I might proceed with those possibilities. It gave me a foundation, which was something I needed, and it gave me self control, which was even more necessary.\n\nIt was actually Deirdre who decided how it would go. I didn't know it, but in the time she'd left me, she'd done some thinking of her own. I was sitting at the bar with Jackson and Lily, watching around me to make sure everything was safe and the entire place a good show. It was, too, so much that it fueled my own sexuality and made me feel wicked. I loved the thought of being the king of this place some nights, when it was really good.\n\nAnd then I saw her. She walked into Sulfur's Beta, looking like a dream like always, and that time, I was the one who went to her.\n\nShe didn't say anything for a moment when I drew her to the side and when she did, her voice sounded soft, almost unsure even. \"I'm sorry I left like that. I didn't mean it like the other times and just needed a minute to think, but I'm sorry anyway.\"\n\n\"It's okay. I know how you meant it, baby. Listen, I meant what I told you. That night, when I said I wouldn't play with anyone else if you'd like to try it? That's okay. And we could start with playing like we did that one night together, when you needed it, and hang out or whatever the rest of the time. I like you is what I'm saying, Deirdre.\"\n\nShe made a soft sound, a broken little laugh that made me flinch a little. \"I appreciate the thought and offer. It sounds like the best thing I could ever hope for from someone like you.\" She hesitated while she fidgeted in sheer nerves, toying with her long shirt sleeves. \"But.\" She took a breath while I waited, dying a little because a lot of this was definitely up to her and then I had to react. It made me feel out of control, but I counted heartbeats and dealt with it. \"It would feel wrong to limit you that way when I know what you could be.\" She laughed breathlessly. \"When you're the perfect Master and it feels like the kind of relationship you were made for. I know that sounds weird, but it feels like it'd just be a sin, like cutting off an artist's hand or something, I don't know.\" She frowned a little, with worry. \n\nAnd then she made her call and it was the thing I hadn't dared hope for. \"I wished to ask to be your slave. For the purpose of teaching me to not be so afraid of that level of trust after what happened to me. You're right that I was hurt and I've been staying to light submission ever since.\"\n\nI'll be damned if she hadn't spoken with Ash first. She must have because it was the perfect request for someone like me. It had a stated purpose and left it up to me to decide to accept a new slave for instruction to that purpose. I went still, running a hand through my hair. I wanted her, so bad it hurt me. \"Are you sure that's what you want to ask for, Deirdre? I really meant what I offered.\"\n\nShe gave me a shy, pleading grin. \"I'm sure. It doesn't just feel like the kind of relationship you were made for. It feels like it's the relationship I was made for and have been too scared to face anymore. I would just ask for your patience, please, sir.\"\n\nJesus bloody hell. God, it was sweet. She said it with such subservience. It was both insightful and left me in the domain she knew I was most comfortable in. \"I really want that, Deirdre, but I only ever want it when my slaves come to me willingly,\" I said quietly. \"So just to make really sure, you realize what you're asking for, right? Absolute power exchange for whatever time period we set together. You saw me with Todd and Gracie. I'm not Ash.\"\n\n\"Yes, sir,\" she answered. Her eyes lifted up to the cages where my two pets danced for me even then. She smiled at me. \"I know. Teach me through my jealousies as you wish and choose. I... I don't have demands and...\" She took a deep breath and then gave me what she knew I wouldn't be able to turn away from. For a second, I wondered if Ash had influence on the next part, but then she looked up at me and I realized that the only thing Ash had told her was how to offer me her slavery. He had given her the syntax, but the next was all her. \"No demands and I have no limits. My master can decide those since the training I asked for might require those limits to be pressed for trust. I give up my safewords unless they serve the purpose of protecting my master and his state of mind as he sees fit.\"\n\nI made a sound of pain because it took real effort to not state my acceptance of Deirdre King's absolute slavery after that incredibly arousing offer of total control in favor of my instruction. And the way she looked at me, with such resolve and sincerity and trust? Jesus fucking Christ. \"I-\" I cut myself off because I wasn't sure the words out of my mouth would be what I needed them to be. Every part of my being wanted to say, I accept your offer and rule her right then and there. Instead, I was proud when I managed to say, \"I am very interested, little Aurora. Come on. I'm afraid you might have to wait for me in my office to have the conversation, though.\"\n\n\"Yes, sir. I'm sorry for-\"\n\n\"No.\" My tone was stern, but I was scared she didn't get me. Instead of any anger or frustration, she met my gaze and waited for my instruction. And God, I wanted to fuck her beautiful mouth for it right then. I could still feel her, still taste her where I had so thoroughly tongue fucked her and those memories weren't helping me. \"The word 'I' is something you should learn to avoid from here on out if you want to serve me that way. Try again and say 'please accept an apology' followed by whatever was wrong and then end with 'and punish me as you see fit'.\"\n\nHer intake of breath made me want to whimper like a wounded puppy. Because fuck me, but Deirdre was flushed with arousal just from those words. \"Yes, Master. Thank you. Please accept an apology for any inconvenience this has caused you and punish me as you see fit for instruction.\"\n\nI drew her close in the hallway where we'd been walking and she moaned at the feel of it because I was hard as hell and getting worse with every word from her. I rewarded her submission with a kiss filled with approval and it made her whine. \"Very pretty, beautiful girl. Apology accepted and no inconvenience for me at all.\"\n\nHer eyes were closed in both resignation and bliss, but I admired her as well. This poor slave at heart and what had been done to her. I stroked her hair and I didn't feel completely worthy of the massive amount of trust she was giving me. \"Thank you, Master. How does it please you for a slave to express gladness?\"\n\nI grinned, so happy I thought my heart could burst. God, she was so perfect without even trying. I had been right.\n\nI had been right! Deirdre had been dying for this, had craved it. She was beyond made for this level and it was an intense level that most just weren't for or into. Even Lily said it sounded stuffy and irritating when she heard some of the interactions with my slaves. \"I will teach and train you to other ways to express happiness for your Master's pleasure. For now, give me a kiss, Deirdre. Show me how pleased you are with how eagerly you can kiss.\"\n\nHer eyes lit up with wicked fire and I suddenly had a burst of clarity where I realized something. Deirdre's wildfire moments from before would find another outlet in slavery, an outlet that might well undo even me. Because she cupped my face in one gentle and eager hand, while she cradled the back of my neck with the other, and that time she closed the distance between us, her lips pressing to mine.\n\nHer kiss when she was determined for respect made me moan against her mouth because that side of her that had clawed me and left bleeding scratches down my back, ones that my slaves had kissed with fear and soothing adoration? It was refueled into serving so perfectly that it made me hot. She stroked the back of my neck with gentle will to give me pleasure and she licked tenderly at my lips to ask permission. And when I opened up for her?\n\nJesus, no one could kiss like Deirdre asking for slavery. She moaned into my mouth and fucked her tongue between my teeth as if begging for approval, with these hungry little whimpers of desirous flame. I clasped the back of her head with a moan and pulled away only to coo horny encouragement. \"That's it, Deirdre, good girl. Show Master how much of a greedy little slave I own, how much of my horny wanton slut you can be. I'll want this from every display from you. I don't care where it is when you're serving me. If we're surrounded by people in a display out in the main bar and I command you to suck my cock, you do it without hesitating and you make sure everyone hears how horny it makes you. You display yourself like the most sexual creature alive, Deirdre, understood?\"\n\n\"Yes, Master.\" It was breathy, aroused, so that I smiled with my own pleasure.\n\n\"Good little slave girl. Show me again, baby.\"\n\nShe showed me. Jesus, she met my lips with this fire of need, her entire being vibrating with it. I have always been the most impressed and delighted with uninhibited and eager slaves, but Deirdre topped every last one. She moaned against my lips and writhed her body in a sinuous dance of pure desire against mine. Ash had called her vain, but when she turned that vanity around for someone else's pleasure, she really knew how to use it. It was only when I hit the wall that I realized she had pressed me against it and was grinding against me, but it wasn't in any attempt to control or manipulate me. It was with pure eager hunger, the kind a slave would display to earn my approval. When I pulled away to moan my frenzy, she waited for me to go back to her and her lips welcomed me back to her. I had had sex that wasn't as hot as Deirdre's slave kiss. I held her tight to try and fix the moment in memory.\n\nI pulled away from her only to save both of us because if I didn't I would have commanded her to her knees right there in the hallway, would have growled at her to kneel and suck me off until I filled her mouth with cum like the good slave slut she was now. But I didn't. I would like to claim my reason was for a logical thing like how I hadn't given her my sexual health papers.\n\nIt wasn't. It was because I hadn't trained her in how important it was to hold my cum on her tongue, how to worship the flavor like an eager and grateful slave. I would have had to punish her if she'd taken and swallowed it. Bad slaves wasted cum like that. Good slaves savored it and whimpered with their horny gratitude, their eyes alive and filled with joy at being granted a fluid from their master's body. I thought about her offer of no limits and no safewords, her soft voice saying that I should decide her limits, and imagined her lips closed around a mouthful of another fluid from my body, my piss. I imagined her whimpering with the flavor of it on her tongue while I stroked the whip over her shoulders to command her to show me more eagerness. She'd learn well under the whip until I never so much as had to speak, until she reacted to its tail across her shoulder and purred with need around a mouthful of urine.\n\nAnd then that led to the thought of Deirdre King as my slave princess, on a lovely leash at my side, the epitome of desire and lust. It turned out, for all my intentions, I wasn't going to make it past that kiss before I broke. \"I accept your slavery,\" I whispered against her mouth. \"But we still have things to talk about like time frames and other things, beautiful girl.\"",
        "Her voice was subdued where she snuggled against me, happy even. \"Yes, Master, anything. But you already know my schedule from Ash and can set whatever time frames you think best, as well.\"\n\nCrazy, impulsive Deirdre. She was really giving over everything to me and I found it more interesting than anything that she only seemed to be softer and sweeter with everything she gave me. \"Reckless little slave girl.\" She sighed with lust and something that seemed a lot like relief when I stroked her hair, while I wondered if I'd ever want anyone else with her in my possession. \n\nAs much as I'd have loved to keep showing off my new slave in the hallway where anyone could see, I needed her in private for the moment, damn it, because I was losing myself in her. I finally managed to get both of us in my office and locked the door. \n\nAnd then I absolutely took a little selfish advantage and lost myself in her. Some of it was for me, but a lot of it was because Deirdre really looked like she could use it at the moment. \"Let me teach you a little bit before I have to take care of the bar. For instance, when you make problems for Master, little slave girl, you fix them.\" I said it teasingly so that she grinned with happy mischief. \"Stroke me,\" I said softly, undoing my black pants to free myself for her to please. \"Get on your knees while you do it, Deirdre.\"\n\nShe obeyed and her eyes were still just as eager as they had been before. She looked up at me, thrusting her tits out, her hand soft on my cock, and I groaned. There was nothing like seeing Deirdre King on her knees. She fisted me and I fucked myself against her, getting close, so... close... I had to stop when I didn't want it to end too fast, had to tease her and I both with stroking her hair while she watched my cock as if worshiping it, as if waiting eagerly for what she knew I wanted. God, I had to remind myself that I couldn't make this last forever and get on with it, working myself in her hand again until my blood started to roar.\n\nAt the last minute, she tugged her T-shirt off and I realized why when I groaned with orgasm and she thrust her tits out farther. Because she didn't want to waste my cum by letting it fall on the floor. She moaned with pleasure when it hit her flesh, her wide eyes looking up at me with reverence.\n\nJesus fucking hell. \"Good girl. Such a good girl you are, little Aurora. I have to watch the bar for a little while, now that you've effectively distracted me.\" I gave her another teasing smile and stroked her hair again, fixing my leather back while she watched and grinned back, biting her lip. I touched her nose. \"While I'm busy, I want you to lay on the floor and massage all that cum into your tits. And every time you stroke your nipples, say, 'Thank you, Master.'\"\n\nHer eyes came alive with lust and she lay back on the floor obediently. \"Yes, Master. Master?\" I paused at the door, wondering how my little dove was going to taunt me this time. She was already stroking her chest, rubbing the cum there into her flesh like lotion and the sight made me feel this feral possession. \"You look really good in leather.\"\n\nI laughed, running my hand through my hair. \"Always a need to please a slave,\" I answered.\n\nShe moaned behind me and I heard a soft, \"Thank you, Master,\" when she stroked her tits.\n\nAnd apparently I was now a Master with a will to start down the path to monogamy. I had to make myself focus on Sulfur's for the first time in my fucking life because I had a wildcat in my office and all I wanted to do was start training it. It was like I was an obedience trainer for dogs and I had been given a wolf mix. It was the ultimate test. How adaptable was I? How good was I, really?\n\nDeirdre came to me as a well adjusted submissive and she had healed a lot. I had seen a lot of her at the other Sulfur's and she played safely to meet her needs. She didn't need my help, it was true, but if her erratic actions and jealousy were anything to go off of, she seemed interested in me and willing to accept my help for more than just having me. I found it interesting that she asked for a goal that was conscious of the fact that she did not indulge in her true desires out of fear.\n\nMy thought string made me smile because it was a good line. I was already planning, already considering how to approach it, already thinking of how to keep that consciousness in Deirdre. I didn't want to do damage in trying to help. Even if I failed in what she wished, then I wanted her to leave the experience with more knowledge. Tricky, that, when using slavery and conditioning.\n\nIt was strange how the knowledge of how careful I would have to be with her made me more careful in every other aspect of my life as well. It was as if, by some proxy, the nature spread into my mindset.\n\n--------\n\nDeirdre\n\nOnce I decided to give in to that fantasy of the girl in her happy cage, it got easier. The violence I felt when I thought of how Christopher Love was the perfect Master from my dreams was turned to a kind of acceptance. But it didn't feel like giving up, exactly. It felt more like understanding the fact that my life was good.\n\nBut maybe it could be better. People were flawed, it was true, and they could cause pain, most often without even realizing it. But sometimes good things, amazing things, came with the bad and sometimes they even far outweighed the bad.\n\nLike Christopher's having other slaves in his possession. That had been a thought I had struggled with a lot over my few days after our wild night. Jealousy was hot in me and I didn't know why, but then when I imagined myself at his knees, watching him fuck the mouth of another slave... I had to admit that I hadn't just felt jealousy. I had burned alive in other fires, too. I had denied my slavery fantasies for so long that I wasn't even aware of some of their natures anymore, but the way that had made me feel made me consider the fact that I was jealous, yes, but maybe there was a lot more to it than that. I had masturbated so freaking hard to the thought of making my Master ready when he needed to fuck, of being like Gracie on her knees before him, lubricating Todd so he could better serve.\n\nI milked my nipples, whimpering, \"Thank you, Master,\" while I realized something else. Things like my jealousies could be overcome with fantasies if those fantasies were done correctly. It seemed like, if any Master could do those correctly for me, then Christopher Love was the most likely to make me burn with fire so hot that even the green jealousy flame wouldn't be felt anymore. I writhed on his floor like a sex kitten, thinking of other things, stroking his cum into my skin to wear it like a good slave. I stroked my nipples again and sighed the words, \"Thank you, Master.\" I wanted to say those words more because they came with pleasure when I stroked myself, so I did, rewarding myself for knowing better than to let his cum fall on the floor.\n\nI also considered another thing he'd said, that we had to trade health information, and had to smile because I appreciated him for that. He had eaten me out in a frenzy already and I knew he had my sexual health information. Anyone with a Sulfur's card logged it regularly, along with a signed agreement that the information would never be abused by either party. So he knew my health.\n\nHe just wanted to let me know his for my own comfort. \"Thank you, Master.\" I had to smile when I said it. It felt nice to finally stop with the angry personal struggle and to just let it happen. Slavery. Terrifying word for a lot of submissives. It wasn't what they were into, which was understandable. I had always been a little jealous of their resolve, actually. My resolve was shit and my fantasies ran to things like being locked in a cage, decorated with a sexy collar, pierced for my master's pleasure, having my hair styled as he found most visually pleasing. I let those fantasies back into me, let them have sway again. It felt like maybe I was unlocking floodgates I'd kept chained and welded shut for far too long because it was a relief, so much a relief. That girl craving a fluffy display cage wasn't gone from me and never would be.\n\nMaybe Christopher could make her believe again. If not, then I would suffer some heartache, but I wouldn't be at a loss.\n\nI opened my eyes when the door opened and looked up at him, my perfect Master. He was smiling his approval, so I tugged my nipples again and breathed, \"Thank you, Master.\"\n\nHe chuckled. \"You're welcome.\" He moved one of his chairs to sit beside me, bending forward with an elbow on his knee to reach down and stroke his fingertips up my arms. And then his eyes flashed with desire and he pressed two fingers to my lips. \"If you want to do this together, I would love to. More than anything, Deirdre. But we start with talking and we'll start with rules right now because I have a lot of rules, little Aurora. For this night, I want you to speak freely and by that I mean you may use words like 'I'. Don't get used to it and it would probably be better for you in the long term to make a conscious effort to use them as little as you can. You'll learn the times when I will directly ask you to speak about yourself and, in those times, I don't want you to worry about it. Clarity is important for some of what I'll ask with you as my slave.\"\n\n\"Yes, Master.\" He stroked my lips and smiled when I gave him a look that was slightly worried. For a moment, I almost said 'I'm scared' out loud, but I stopped it.\n\nHe didn't miss a thing and my faith in him grew a little more. \"I know it's daunting at first, Deirdre. I am strict and harsh, it's true, but you'll find me fair.\"\n\nI smiled up at him, feeling a little better and horny all over again. \"Yes, Master. Thank you for the reassurance.\"\n\n\"You're welcome. Let's start with a few basics.\" He tapped his fingers against my lips. \"You should think of your mouth and your asshole the same way you think of your pussy because both of those are going to be fucked like one. I've had to train slaves by having them refer to their mouth as a cunt. What's more, you open up for whatever I press to any of those holes. My fingers, my cock, a toy. If I press anal beads to your lips, you open up and suck as if you were fucking it. Think of how you'd react if I filled your greedy little pussy with two fingers right now.\" Jesus mother of fuck. I could imagine alright because every filthy, profane word out of his mouth made me burn in need. \"Let's try it with your mouth.\" And I suddenly understood the gist when he pressed two fingers to my lips again. And this time I opened, thinking of how I'd writhe and moan and arch for more of him if he'd fingered me.\n\nI lifted on the floor, whining greedily, obediently fucking those fingers between my lips as if he were using my sex. I moaned as if in ecstasy, like he wanted. \"Jesus, Deirdre.\" His words were a husky purr of approval and he shifted off the chair, spreading his legs to sit up on his knees and straddle me instead. I stared up at him, burning, but his eyes were lit with his own possessive fire. \"Yes, that's it exactly, you good little slave girl. Take it like you'd take a fucking and moan as loud as you would if your little pussy was taking cock for relief.\" He thrust his fingers down into my face while I sucked, so that it was nearly impossible to think of the act as anything less than what he described. I arched, writhing beneath him, moaning loudly. And I stroked a hand up his leather clad thigh, as if I couldn't resist the need to touch him anymore because I couldn't. I did it like one would grasp their partner to pull them closer, as if too hot to think of anything besides \"more\". And when he pulled away, I whimpered as if in loss, \"Oh, please, harder!\"\n\n\"Good girl. What kind of hole is this Deirdre?\"\n\nI opened my eyes back, blushing for once and ignoring it for lust. \"Another pussy, Master.\"\n\nHis eyes were dark with pleasure and it hurt how happy that made me. \"Good girl. And what am I doing to it?\"\n\n\"Fucking it, Master.\"\n\n\"That's it.\" He pierced my lips again and he gave me what I'd asked for, harder. He added a third finger so that I cried out at being filled and he worked me with a fierce pace so that I pant around him as if close to orgasm. Jesus, I thought I might have been close to actual orgasm from how hot this made me. I whimpered when he pulled away, shaking, staring up at him. He cupped my face. \"Remember how you loved it when I ate you out, Deirdre?\"\n\n\"Yes, Master.\"\n\nHe smiled wickedly and bent over me, pressing his lips to mine.\n\nI grabbed his shoulders as if starved for him and whimpered as if in pain because... I was. He thrust his tongue between my lips and I clasped him closer, remembering how I grabbed his hair when that same tongue fucked me. I lay back when he pulled away, as if waiting, submissive with sexual greed. \"Good girl.\" His voice was a coo of pure delight. \"I couldn't ask for more perfection than that. Obedient, eager slaves get rewards.\" He moved again to kneel beside me instead of over me and I whimpered at the loss of him. \"Let's make sure we drive the idea home, though. What hole is this, Deirdre?\" He stroked my lips and I parted them automatically.\n\n\"Another pussy, Master.\"\n\n\"Good girl.\" Once again, he thrust his fingers into me and I squealed, lifting.\n\nAnd then I arched with a shout because he cupped me between my legs over my jeans. \"Oh, please!\" It was a mockery of the words around his fingers, but it made his eyes light with heat anyway.\n\nHe chuckled over me with approval when I sucked harder, lifting my face to meet his motion even while I spread my legs wide and writhed for that as well. \"That's what we like to hear and see. You learned that lesson so well that you've made me curious. Why don't you show me how the pussy in your face feels when you cum?\"\n\nOne slap. That's all he gave me between my legs and all I needed and I went off like a firework, shouting around his fingers, so that he growled and stuffed another in me. I sucked all four he gave me, lapping at them in my gratitude for his pleasure and how intense it burned me, sucking him with hunger. Pleasure came from taking him in the hole in my face, so it wasn't even an act. He gradually stilled his hand and pulled away, so that I whimpered in greedy loss, staring up at him with wide eyes. My lips were swollen and I left them parted, as if in invitation for more of his wonderful abuse.\n\nHe smiled at the sight and kissed my forehead, leaning down and stroking my hair. When he pulled away, he cradled my face. \"Thank you for your trust in asking me for this, Deirdre. I don't take it lightly and I will ask for more trust from you. Sometimes it will feel painful, especially with your past, but I will always try to make it worth it for you.\"\n\nI made to tell him many things that involved those words he disapproved of. Things like \"I trust you\" or \"I'll try my best anyway\" and those things were good things to say. But there was something better. \"Thank you for your promise, Master.\"\n\nAnd it sounded more perfect than any of the others. Christopher stroked me, lifting me up, and then he cradled me in his lap in a chair to the side. His voice was gentle when he spoke and he started to ask me soft, methodical questions. He asked about my schedule, asked about any true terrors I had, commanding me to speak freely about myself. I answered questions about myself as he asked them, but otherwise didn't speak more than I had to.\n\nExcept to ask one question. It occurred to me that he wasn't asking much about my past. \"Master?\" He inclined his head to indicate I should continue and I kept my voice as respectful as possible, using careful wording. \"Will you teach me why matters of the past aren't so important?\"\n\nHe gave me a look full of pride and my heart felt like it would burst. \"That was beautiful. And yes. It's because they don't matter. I'll learn whatever effects it's had in the same way I'd learn any slave and I'll act accordingly. For now, dwelling on it feels counterproductive to getting past the fear it's given you. I'd rather hear about your fantasies instead. Tell me ones you had before your previous slave relationship. Speak as free as you can for this one.\"\n\nHe laughed at how I grinned eagerly and I told him. It felt like a confessional of some kind when I told him about all those hidden desires, including the cage, while he watched me with his piercing, hazel eyes. After a while, I softly asked, \"Will you tell me some of your fantasies?\"\n\nAt first he blinked in something like shock, but then he started to talk and it was his turn where he described the rooms he'd made in his brand of Sulfur's, where he spoke of having a horny slave who was greedy for his cum and piss and cock, one who reacted to a throat or ass fucking with the exact same lust she had for her pussy. We spoke well into the night, even after his bar closed, and every second felt like a dream come true.\n\nHe finally said in a soft voice, that if I wanted to take my offer back of no limits, no restraint, and no time constraints, then I had better say so now. His gaze held me still with its intensity when he finished with, \"Because, Deirdre, I really want you and I'm going to be a very selfish and demanding Master with your time and body if you give yourself to me so totally.\"\n\nI stroked his hair back, loving with the same amount of flame as I had been so jealous and scared with before. \"Master should decide his slave's limits and times.\"\n\nHe growled his pleasure and kissed me, violently. \"Very well.\" And then he set it.\n\nTuesday, Wednesday, and Thursday nights I was his property from 7 to 10 at night. Come Friday, I was his at 7 again and I did not leave his possession until Sunday at noon.\n\n\"This is mine,\" he whispered over me, stroking between my legs. \"And these.\" He toyed with my nipples. \"Mine.\"\n\nMy answer wasn't actually necessary because he very clearly said those words for how much the thought aroused him, but I answered anyway, for how much the thought aroused me. \"Yours, Master.\" His eyes lit up with desire. I partially expected him to use me that night. He didn't.\n\nHe showed me his up to date sexual health exams and I gave him mine as well, though he already knew it. And then he started with more rules.\n\nLike he'd warned, he had a lot of motherfreaking rules.\n\n--------\n\nMy orgasms were his in their entirety, for a start. Though my body would leave his possession outside of the agreed hours, there were some rules that followed outside of those times. That was one. During certain times, starting with a few days from when we started, I was to go to someone he knew to be waxed. \"My slaves are all hairless from the neck down, male or female, Deirdre.\" And God, the way he said that? I whimpered eagerly and there wasn't even jealousy in a single one of my thoughts. There was just hot arousal.\n\nHe definitely noticed, his eyes sparking with his amusement. He gave me hair care products or lotions, commanding me in uses and how often. \"Slaves are for pleasure,\" he said softly. \"Is that clear, little Aurora?\" He stroked a hand between my legs so that I cried out, arching in his arms. \"We want every inch of you smooth and soft. Whenever anyone so much as strokes my slave's hair or body, they'll beg me permission for another touch.\"\n\nIt made me tremble where he held me, made me whimper. It was true I was rough around the edges and true that I was mean when I had to be, but the slave in me didn't want to ever have to be. The slave in me was vain enough to crave the things he described, to want to be desired and adored and fawned over.\n\nWhat was more, he had me entwined in his arms while he described these things, so that I was in a sinuous dance with him, grinding his body with need while he chuckled as if cool and unaffected.",
        "Every morning I was to wish my Master good morning in a message before I even got out of my bed and I was to kneel, to stroke my hands up my tits and whisper, \"Thank you, Master.\" I had to send him a picture when I got dressed and he had rules for clothing too. It had to make me appear like his sensual, graceful little slave even when he didn't have command of me. It was supposed to be fitted to me, so that my curves were shown off. He got the idea across with that one when he gently cupped my tits. \"My new slave is pretty, Deirdre. Show it off for Master.\" I lifted again to his touch, whimpering, understanding. He didn't want me revealing and certainly didn't want me cold in the weather, but he wanted his slave... well, slavey. I spread my legs in a dance to his touch down my thighs while he continued to speak. More rules. I was to wear at least one piece of jewelry, anything I liked. A necklace, a bracelet, anything at all that made me feel my Master's control. I messaged him every night and I slept naked always. If I wore my hair up, it was to be pleasing in style, and I was to wear a pink, red, white, or black ribbon somewhere on my body every day.\n\nSo. Many. Rules. I started to look at him fearfully and he stroked me. \"You will learn.\"\n\n\"Yes, Master.\"\n\nAnd the old me before I had resolved myself to his will? That me would have used his stuffy high protocol to be angry at him, would have forced myself to think he was obnoxious as an excuse, but I had resolved myself to his ownership and will. Maybe this part is hard to understand, but for someone like me who had craved for absolute control and denied myself for so goddamn long?\n\nI loved it. Every last rule he gave me, I loved them. It felt like layers and layers of his control and pleasure to keep with me every day. I left his hands that night worked up and horny with the command to start getting used to my everyday rules now through my last weekend of freedom. Because come Tuesday, the hours of his real ownership started and I was his.\n\n--------\n\nChristopher\n\nI felt energized when she left. Deirdre King, the girl who had brought Doms nearly to tears when she snarled at them for crossing their lines with other submissives. The girl who had first walked through the doors of Sulfur's when it was still being born. One of Asher Lavrov's kittens before he became involved, a sex toy store owner, and a massive defender of the kink world to the point of fury. Todd and Gracie had long since been let off most of their own hours of my control, before I even started to talk to Deirdre, but Gracie giggled where Todd held her.\n\n\"Master is in love.\" She sang it in that sensual voice that I had trained her to.\n\nI stroked her hair and kissed Todd's forehead. \"Those who live in glass houses should not be quick to throw stones, dear girl.\"\n\nTodd laughed along with her, nuzzling her hair where she sat in his lap. Even I had been shocked at how well the two of them had fit together. They were my two pets slowly being given less and less time in my slavery and they had started to cuddle into each other's arms more and more. At first I had been concerned that this was a coping mechanism of some kind. Had I gone too deep or too far? Had I held them too long? Did I let them up too quickly?\n\nBut then it was Jackson who saw them on one of their dates together and when I asked, they had told me about how early they had started dating. So I had spoken to each of them separately instead and made them agree to stay around Sulfur's and to let me know when they had problems with each other. Gracie had been playful in her response. \"Yes, dad, I'll keep you up to date.\" Her hand had been a featherlight stroke over my cock while I laughed. She lowered her voice and whispered in conspiracy. \"He leaves the cap off the toothpaste.\"\n\nHer point had been artfully given to me. They were adults and I had taught them that their lives were their own when they left me. \"How was both of your weeks? Speak freely.\"\n\nThey took turns talking, respectful to each other and to me while Gracie nestled in Todd's arms. They told me how they felt about their personal progress in what they both had asked from me. They told me about their day to day lives, told me about their dates together. It was sweet, heart wrenchingly so, how they spoke around each other so easily and gracefully. And there were these small gestures, like how they would brush arms and glance at each other, both of them hairless for pleasure. After they left me for the night, I knew our time together was drawing to a close and it was Jackson who spoke beside me.\n\n\"Can you imagine how their sex must be now that they've been trained under you as bloody pleasure slaves together?\"\n\nI laughed. \"Imagine the third guy they brought into their bed to play with.\"\n\nJackson stared at me in horror. \"What, like someone vanilla they fuck together?\" I grinned and nodded. \"Christopher, my mentor and friend, my awesome and uptight boss that I sometimes want to strangle, you can't just create a monster like that and throw it into the wild. It's like that 90s Pok\u00e9mon movie when that lab made a clone of mew.\" I gave him a flat stare, raising my eyebrow. \"It almost destroyed the world with a storm, Christopher! It made more clones with creepy, evil stripes down their backs.\"\n\n\"Pretty sure neither Todd nor Gracie would have any idea what you're referencing. Also, at least his Charizard obeyed him and his Meowth was pretty cool.\"\n\nJackson choked, then cackled so that I smiled, in rare spirits. Deirdre was in my blood and my thoughts. I could still taste her kiss, still feel her tongue. My phone ringing made me smile. I answered, already having a feeling I could guess who it was. \"Hello, Ash.\"\n\nHis voice was subdued when he answered. \"Hey, Chris.\" He was quiet for a minute and then asked it outright. \"Are you sure about this?\"\n\n\"Yes.\" I didn't even hesitate. If I had, I didn't feel like I deserved Deirdre.\n\nHe sighed. \"Of all the things going on in my life right now, I want you to know that my engagement and your intentions are the two I'm most sure of. But she's agreed to eat with me twice a week to talk. It won't interfere with your time, but I thought I should tell you.\"\n\n\"Good. I don't want her isolated, despite the extent of my demands and I'd rather have your attention anyway. Did she tell you what she asked for as her end goal of my training?\"\n\nHe laughed. \"No.\"\n\n\"Help getting over fear of what she wants from whatever happened in her past.\"\n\nHis laugh turned exasperated. \"Far be it for Deirdre to give you a test that's easy now that she's decided you're her crush.\"\n\nIt made me grin. I was being tested? Oh, now that was interesting and fun. Like a lioness forcing her breeding interest to prove himself as king. Now I had all the more incentive to turn Deirdre into my perfect ideal of a pleasure slave. I would show her a subjugated dream, a wonderland of ecstasy and service. \"Ash, can you tell me one thing? What should I expect with her cage?\"\n\n\"Lot of emotional shit that'll piss you off with righteous anger.\"\n\n\"All I needed.\"\n\nJackson left the bar after he had it cleaned to immaculate beauty and I was left by myself in Sulfur's Beta. I went to work on the monstrous iron cage I had once displayed Todd and Gracie with, unscrewing some of the bolted parts and going back to my storage for the other variation of the cage. It was one that I hadn't ever had occasion to favor, but now I did. I bolted the new attachments and painted the bars during the day.\n\nSee, for a hint, the old cage had been bolted against the wall. My new cage? First off, it wasn't just for displaying my slave. It had a hole cut into the iron in one side where I could add toy attachments for her ass and pussy or I could feed her cock through the side.\n\nAnd it didn't bolt to the side. It bolted to industrial hooks and reinforced cords that fed up to the ceiling. I bolted the other cage in my office where I could keep her safe and train her to viewing pleasure under a more privately safe domain. I decorated that cage for her, too, in the manner of the dream she'd described to me. Little Aurora. My sleeping beauty would have a cuddly cage that fit a fairy tale. I gave it cozy fleece blankets and bought stuffed teddy bears for it, along with a silky body pillow with pink ribbons and hearts. All the cute things. And I'd wake her up with my most pleased voice when she became a brave slave and slept in it for my private display pleasure.\n\nHer text woke me when I lay in the floor of my office and I smiled, feeling like I had the start of something wonderful. Good morning to you, too, beautiful. Let's have a little test. How do you get out of bed?\n\nAnd she messaged back perfectly, giving me sweet little unsure answers. She thanked me when I corrected her and I was smiling with every message, feeling horny as all hell with the effects of so much power and control adrenaline. I ended up getting her new lingerie outfits from a favorite store, wondering what I was going to dress her in first, eager and excited for Tuesday when she'd be all mine in person and I could really get started.\n\nSounds like a dream, doesn't it? Yeah, by the end of Tuesday night, I was pulling on every last rope of patience, willpower, and control techniques I could think of. I wondered what brief brand of stupidity had made me think it would start easy when I knew she had terrors and absolute fears.\n\n--------\n\nDeirdre\n\nHave you ever been really good at a craft? Like maybe it's music or maybe it's writing. Maybe it's painting or crocheting or whatever. And you're really good at it, you know? It's your jam, your groove. The crochet needle just feels like relaxation when you use it, the words just come to you, or the music just plays and it sounds alive. I had been a lifestyle submissive for a long time. I was sometimes a bitch when I wasn't bowing, but when I bowed, I craved to please and Lily and I could give a Dom a sweet ass night. We were the princesses of our circle and everyone loved us for being well adjusted and easy going.\n\nOkay, well, have you ever had one day where the craft just doesn't. Fucking. Work? You wake up and you can't hear the music or you can't see the picture you want to draw. You sketch and sketch, but no matter how hard you try, it doesn't feel right in your hand and you can't make the chaos come together for the picture in your head. You finish a crochet doll and it's all fucked up and out of proportion, even if you followed the pattern absolutely perfectly.\n\nWhen I walked to the door of his brand of Sulfur's, I ended up late on that first fucking night because I stood at the door and I was scared. It sank in how reckless I was being, how I was trusting this man, and then I started going down the thoughts of what all I knew about him and how stupid I had been in my past. I thought of my ex and how I had known everything about him when I called him Master and how he had been so possessive in the violently wrong ways. I got lost thinking about my cage dream and had to make myself walk through the door, jumping when I realized I'd been out there for 15 bloody minutes.\n\nChristopher was less than amused and I felt like shit when he started with the strap for punishment, mostly because he wasn't angry. He was just quietly disappointed and I knew he'd been so excited.\n\nAnd God, where was my energy? Where was my excitement? Where was the happy and eager resolve that I had started this with? Why did my stomach knot with fear when he fucked my ass while I was chained to a bench after my punishment strapping? He made a low noise of disapproval when I trembled under him and then he got a vibrator.\n\nThank God Christopher was as much of a sexual god as he was. Otherwise, that first night would have been unbearable. He held the vibrator to my clit, his voice low. \"This is how we start every night together, Deirdre. With my cock in your ass while you can't cum and if you don't give me the desire you showed me last Thursday, then I'll find ways to get it from you. Normally, we'd be doing this over my desk, but when you're late, you take punishment and take these here as further reminder.\"\n\nEdging. He was masterful about it, like he was with everything. He worked me up and up until I was bucking, whimpering, and then he stopped so that I was needy and frustrated, as bad as his word. But if you've had those days where a craft just isn't bloody working for you, then you know that it doesn't get better the more or harder you try. It just gets worse. You keep getting more and more frustrated until you can't get anything right, even the basics.\n\nIt was supposed to be the start of his slave training, supposed to be where he started breaking me to his rules and routines, but he had so many rules and I couldn't remember a damn one of them because all I could remember was how scared I was. He used the whip for discipline and light correction and the cane for harsh correction and punishment. After an hour and a half that felt like torturous eternity, I was coated in cane stripes. I couldn't crawl right and then fucked up the apology and then growled at him with frustrated misery until he gave me a cold stare and edged me again.\n\nAnd then I fucked up something that I hadn't fucked up in years. I had played with Asher Lavrov for God's fucking sake and it was the standard rule of most every Dom or Master than you didn't cum until they gave permission. I took it for granted anytime I submitted, always, unless it was expressly stated otherwise. I loved that rule.\n\nHe had me laid out on the floor and was teasing me to make me be present with him again and I don't know what it was. I don't even know how I did it because I was far from the mental space I needed for orgasm. All I know is he rolled the vibrator across my clit and my eyes snapped open with horror when I felt it start and somehow couldn't get fucking control to save my life. \"No!\" I shouted it, but it was done and I yelped with a really dissatisfying release.\n\nChristopher stared at me while I wanted to hide and cry. I was waxed silky smooth and wearing this dream of a slave outfit and I didn't deserve how soft he'd already made me. I felt awkward instead of pretty, like a dirty dog wearing a collar of diamonds. I broke, sobbing in misery, and I didn't even bother trying to apologize. It wouldn't come out right anyway.\n\nHe sighed above me. \"Come on, Deirdre. Let's go to my office.\"\n\nBut he wasn't angry again and that made it even worse. He was just thoughtful, as if considering where to pick up to fix me when I was this broken and awful. God, how did he have so much resolve and perseverance? I didn't deserve that either.\n\nI crawled and my form was a mess. It wasn't even to be pleasing anymore. It was just sad and I followed the leash while crying and cringing against his ankle. \"Deirdre,\" he said softly. I hiccupped, scared to open my mouth because I couldn't follow his rules at all. \"Stop crying. Answer freely. When was the last time you even did that and when was the last time you were this, no offense, godawful?\"\n\nNone taken. I rubbed my eyes, my pretty glittery makeup a mess, and managed to answer. \"Years for the first. Not since him for the second.\"\n\nHe didn't ask who I meant. He just made a low sound in his throat, a sigh, and then opened the door and picked me up to set me in his own chair. I flinched with the motion from all the punishment I'd earned, not that I didn't deserve it, but sat still while he cleaned my face. And after a moment I just closed my eyes and curled to his touch, grateful to it and for him. \"Okay, Deirdre. Jesus, you're so scared, but that's okay. Let's try again.\" I whimpered, instantly wary of how I was going to mess this next try up, and he laughed. \"Don't worry. You can do this one. Don't speak anymore until I tell you to, Deirdre, and then I'm going to tell you exactly what to say and how to say it.\"\n\nI had to give a weak little laugh at that because I realized what his look from before had been. It was a re-evaluation when he realized I wasn't going to be able to even start with what I knew. God, I felt like the worst kind of failure, but he was right. It might take him a week of running me through paces like a dog, but I'd break for him. I bowed my head and nodded obediently, finally opening my eyes to look at him and I wasn't crying anymore, wasn't blinded with frustrated and angry tears. Christopher winked and touched my nose. \"Never thought I'd say it, Deirdre, but you're the first person I've had to treat quite so... delicately.\"\n\nBy \"delicately\", he meant like a weak minded dog that couldn't figure out how to roll over. I gave him a weak, humiliated smile and he grinned. \"I don't mean it in a bad way. It's just a lesson in my own form of humility that one of the most well known people in submission around our area has had the most problems with me and was the one I read entirely wrong. It's... kind of grounding, actually.\"\n\nI laughed and it felt nice that he was determined to end on a decent note even when I'd fucked up his whole night like an idiot. I accepted the fact that we were probably going to be spending weeks together doing the basic things I'd known so perfectly yesterday and took a mental step back to the beginning while Christopher backed away to start again.\n\nBut that's when I saw it. It was in the corner of his office, by the door where I hadn't seen it when I cried in such frustration. He had taken the cage from the dungeon and put it back here instead, except now he had painted the bars a sparkling pink and filled it with fluffy pastel blankets and pillows that matched my cute pink nightie. The sight made me whimper with longing and I didn't even realize it, but I wasn't slouching in such abject fear anymore. Christopher looked back to follow my gaze, a slow smile forming on his face.\n\n\"Or maybe I'm just not using the right incentives.\" I shot my gaze to his, not daring to say anything. \"You like this? I've got other bears for it.\"\n\nI imagined that silky pillow where I could hold it, now that I was waxed and my skin felt like a silky dream to touch. Christopher's body care products had been the real kind of thing, too. I touched my arm and for the first time all night I felt soft again, like a pretty little slave to be displayed and a pleasure to touch when my master gave permission. My hair was tousled now, it was true, but it was still full and shiny and soft. Christopher grinned, stroking his thumb across his bottom lip thoughtfully. \"Well. I thought the cage was the last thing we'd be able to do together and you haven't done very well tonight. But... I do love pretty, displayed slaves and pets.\" I stared up at him and for the first time all night I was dying to talk. He laughed. \"You can speak. Maybe if you're good about the words, I'll let you see how it feels, little Aurora.\"\n\n\"Please teach me how to ask permission, Master.\"\n\nHe burst into laughter. \"How pretty. And the answer to that is easy. You don't ask permission as my slave. You do as you're told.\"\n\nI reconsidered, then grinned slyly. \"You have a very pretty cage, Master.\"\n\nHis amusement deepened by the second and I felt myself come back to life with his pleasure. When I wasn't thinking about it, it was easier. \"It is awful pretty, isn't it?\"\n\n\"Yes, Master. And it looks very soft, like other soft things that might, just might, fit it. You know, just random other possessions you might have... around.\" I clicked my tongue, as if thoughtful of those other possessions.\n\nAnd Christopher was beside himself with playful humor. \"Oh, I see. Other possessions.\" He backed up and opened the cage door and I shivered.\n\nAnother first of the night? I was so fucking wet and didn't need his help to be that way. I was hornier than ever at the thought of curling up like a good girl in that cage. Christopher crouched. \"Why don't you show me what you mean?\"",
        "I fell to my knees off his chair and crawled and this time it was something perfect. I knew how to crawl. I had crawled often and Christopher had already told me his type of fantasies. I knew how to infuse my crawling with those. I knew how to bow low and be gorgeous with the motion. For the first time all goddamn night, my baby pink nightie felt helpful, like it caressed my soft skin, like it was what I belonged in. Nighties weren't what made slaves pleasing and I knew those things too. It might have been a while since I'd been a slave and it might not even have counted because of the circumstances, but I knew some things.\n\nNo, slaves were for pleasure to begin with and cute little lacy lingerie was what they were often dressed in to accentuate the fact. I met Christopher's eyes and kissed his hand where he held the cage bars, so that he smiled and stroked my messy hair back. \"Thank you, Master.\"\n\nI crawled into the cage, staring at the pretty, sparkling bars. And it was the perfect size. I could stretch out if I needed to, but would fit better all snuggled up and it was close spaced enough to make me feel the security of being held tight. I turned when I heard the door of it close and watched Christopher padlock it, while he smiled down at me, watching me. I stroked the fluffy blankets, like a cat kneading its claws, and then it sank in that this was my fantasy, the one I'd always had.\n\nMy cozy, princess cage. I was dressed like the most beautiful, prized possession, a pleasure slave with a Master who was staring down at me with desire. I was waxed silky smooth, having used luxury lotion of his every day, and my hair was glossy with health. I was hydrated thanks to Christopher's diet rules and I smelled sweet with his body sprays, like berries and sex, thanks to the amount of arousal I had from looking out of the bars.\n\nOnce upon a time, I had been known for being the most well adjusted submissive around Sulfur's because I played and I left at the door. I could go deep into scenes and once they were over, I didn't even generally need aftercare anymore. Especially if Lily was around. Doms loved us together. They're wasn't any stress because Lily and I could play for as long as they liked and they didn't have to take more than ten minutes afterwards to make sure we were okay.\n\nBut then, when it sank in that I had been given my fantasy and it was with someone willing to go farther and deeper, to take me to the depths I had always wanted, I did something not very well adjusted at all. I hugged his teddy bear and burst into tears. Christopher laughed above me, though, a warm sound of affection.\n\nBecause for the first time all night, my tears weren't of frustration or misery. They were just happy.\n\n\"Look at me, Deirdre.\" I obeyed, looking up through the bars at my Master, loving that he was standing over me and smiling down with such approval. I went to sit up straighter for his pleasure and realized I was already up straight and my shoulders were back and my tits were displayed as prettily as my cage bars displayed me. \"When you submit to anyone, is it because you're scared of them? Or is it for fulfillment?\"\n\n\"Fulfillment, Master.\"\n\n\"Good girl. The wrong kind of fear isn't a reason to ever do anything in these games. Not just for you, but for your Dom or Master. Control is meant to be for arousal and because it satisfies you and your needs. That goes for giving up control or taking it. Fear that gives more arousal is one thing. It's exciting and fun, but fear that isn't arousing?\" He shook his head. \"I'm probably not explaining it very well, but these are concepts I know you get and feel. I know that because of how often I saw you submit so well for that fulfillment, even when you were squeaking in fright at a cane threat. I know that because you might have squeaked and cowered, but you orgasmed so fucking hard that it made everyone who saw it hot on it.\n\n\"I also know that you're good at this, Deirdre. You have more than this to give me. I've already seen it from you, the kind of arousal you're capable of kissing me with. Let go, little Aurora. Let me have things like those fears and let me show you how much of a dream it is to give them up. You have better than this to give me, better than what happened tonight. Let's try again tomorrow night. If it doesn't work, then I'll go back to every basic, small thing. I'll go to the most exacting games, like 'repeat after me' and we'll do it that way. I have the means for either.\n\n\"But I know you can do this. You have so much in you. Show it to me, baby. Give me better and more.\"\n\nI nodded up at him, feeling angry at myself in a good way. It was the kind of angry that came from knowing you'd fucked up, but knowing you could fix it too. And one way or another, I would goddamn well fix it. Christopher kissed me goodnight and touched my nose and I didn't contradict his words because good slaves didn't disagree with their Master.\n\nBut I wouldn't give him more or better. One way or another, I'd give him the best. I'd give him everything I had. I was still terrified and I still safely tucked things like my phone in a locker and padlocked it so he couldn't have it. And after the night he'd talked with me, when he'd picked up my phone to give it to me, I'd had a moment where I snatched it fearfully from his hand. He hadn't said anything about it, but I know he noted the action and defense.\n\nThose kinds of terrors were reasons why I couldn't even date anymore, because I knew how it looked when I behaved that way. And even if I never cheated, I couldn't stop those behaviors. They were so deeply ingrained with terror of being locked in a terrible, dark room where I didn't have a real bathroom for days. So I was still scared, even if it wasn't rational.\n\nBut people will go through terrors to reach something if they want it badly enough. I had felt a taste of my wildest dreams with getting to snuggle in his perfect cage. Under his commands, I had nuzzled the big pillow and crawled to kiss him through the cage bars, whining like I was supposed to up at him, as if he were kissing my pussy, so that his eyes sparked with fire again. I wanted that dream, so badly it hurt. I wanted it to its full.\n\nI'd suffer all the fear in the world for more of it, so I gave in like he wanted and the dream descended over everything.\n\nIt was one hell of a dream.\n\n--------\n\nThe next day I followed his day commands perfectly, writing them on my bathroom mirror in eyeliner to help me remember all of them. But I had done those things even before I fucked up so bad, so the night was the real test.\n\nI grit my teeth against the fear and ripped off the band-aid, instead of letting myself dwell on it at his doorstep. The action made me early since I was determined to not be late again. He laughed when he saw me from the bar and circled a hand around my waist. \"Good girl. Better already and such a pretty ribbon you chose for your hair.\"\n\nI grinned shyly. I had halfway done it up with a pink ribbon, so that my glossy locks still fell around my shoulders because he seemed to like that. And I had put on more glitter in my makeup with shimmery body spray because he seemed to like those things better as well. \"Now, let's try this since you've given me a little faith back. Your clothes are in the locker I gave you. Why don't you dress yourself this time and come back to my office for our greeting together?\"\n\nI shivered and this time I went horny on his words. \"Yes, Master. Thank you for your faith.\"\n\n\"You earned it.\" He thrust his thumb between my lips and I whined, sucking. No, fucking it. His laughter was so pleased that it made me feel light as a feather. I felt graceful in my outfit, chosen per his rules of being visually desirable. Christopher stroked me. \"Go on, little Aurora.\"\n\nI went obediently after he pulled his thumb away and left him, smiling back at him when he watched me with desire in his expression. And when I was away from him? It felt like a loss.\n\nHis nightie that night was even prettier. Black and silver and shimmery. I dressed eagerly that time and hurried back to him, missing his presence and realizing that he made me think easier. The fear was easier to throw to the wolves when I remembered his face through the bars of that cage and I realized that he had chosen his office for our \"greeting\", as he called it, on purpose, too.\n\nSo I could see the comfort of my pretty cage when he railed my asshole. \"I missed my little slave,\" he cooed in his growling possession, while I held onto his desk and my hole pulsed around his cock. Another pussy for him to fuck, like my mouth was another one. \"That's it, good girl. We start every day with this kind of surrender. And why's that, baby? Why do we start with an assfucking where you can't cum?\"\n\n\"For slave training to serve Master's pleasure.\"\n\n\"That's right. It's not about your getting to cum. It's about letting Master stroke these tits, letting me fuck this tight hole while you bow like a good pleasure slave and take it.\" I spread my legs farther apart and sobbed in frenzy, then cried out the sounds I would make if he had been fucking my cunt with such ferocity. Good pleasure slaves acted like any hole was as good as their pussy, even if it hurt.\n\nNo, good pleasure slaves thought any hole being fucked really was as good as the others. My pussy was as pleasurable as my asshole or my mouth... I squealed in need and writhed and he growled with delight. Then he hissed when he came, pumping into my ass and filling me with his cum. \"Oh, thank you for your cum and training, Master.\"\n\nHe licked up my neck in response, then inhaled the scent of my hair with pleasure. \"That was fucking beautiful. Now, good slaves hate the thought of wasted cum. If I finish in your asshole, you will always be given a butt plug to help keep you filled. What do you say for my kindness?\" He slapped my ass while he pressed the plug to me and I pant with desire.\n\n\"Thank you, Master.\" I lifted to help him, while he stroked my ass, admiring my curves and stuffing the plug home so that I squealed.\n\n\"Good girl. You have your own cream all over your thighs. Let me help you with that.\"\n\nI spread my legs and then moaned wildly when he licked up what all had started to pour from me. He pressed the plug deeper so that I arched and keened, and then he laughed and lapped up more of my mess. When he stood up, he turned me around and kissed me a brutal kiss, so that I could taste it on his tongue. His chuckle was wicked when I squealed into his mouth - another of his pussies to fuck and he was licking it, I reminded myself again - and when he pulled back, he was lustful with the very sight and scent of me. \"Good girl. I think that warrants a reward. Let's have a change of scenery while I show you how to dance.\" My look must have turned nervous because he winked to comfort me. \"Oh, I think you'll like how easy it is for you. Riled slaves always find it easier to tease dance when they're cock starving.\" I moaned when he turned me in his arms again and brushed my ass with his hand so that I arched in a sinuous motion for pleasure. \"That's the spirit we like.\"\n\nBy change of scenery, he meant the Pleasure Garden room where I had first seen him, and he had the whip with him. He set the cane out of the way against the wall, winking at me again when he did so that I grinned bashfully, and then he started the music and guided me to the center of the shallow pool. His hand circled the play collar that was part of my pleasure slave outfit every night and I cried out, a shocked sound at how aroused it made me. He pressed a hand to my thigh so that I arched in his arms, both trying to feel more of his hand at my throat and trying to rub my ass against his cock. \"My slave dancers learn this first. Your dancing is for sex.\" I squealed when he thrust two fingers between my lips, my asshole pulsing around the plug in my ass, my body writhing against his. \"There we are. All you have to do is let go and I'll show you the rest. Stripper without the stripping, baby.\"\n\nI had never known a pleasure in something like dancing. Like anyone else, I liked music but I didn't place so much value in it. But when Christopher held me close and everything was sex and being an object to own for pleasure? The music made the fear shut up, let me stop thinking so much, let me give up my control to him. He made soft growls of his approval in my ear, sexual noises that made my head fall back against his shoulder while I moaned. He stroked a hand down my thigh to feel how silky my skin was and I followed the motion so naturally, lowering myself and bending forward. He tugged my nipples so that I squealed and arched myself, then pulled away to stroke the whip handle between my legs so that I bent forward with a cry, so that I stroked my palms down my legs and felt that silky pleasure. \"That's it. No thinking about it. Just show me how much of a cock hungry little slut I have for my pleasure slave while the music plays for you.\"\n\nI let go so that the rest of the night dissolved into bliss and ecstasy while my master purred his pleasure and approval. The water splashed around me while Scorpions' No One Like You made it impossible for me to keep thinking of my fear.\n\nHe let me cum, but he riled me up so fast afterwards that I woke up the next morning in pain, whining in frenzy. I got out of bed and dressed per his rules, every one to perfection so I could please him. My sex drive was more alive than ever and it was so easy to choose clothing to serve the purposes of his slavery. My brand of submissive sex was in everything from my shirt to my hair to the choker I wore as my jewelry, trying to feel something close to his collar.\n\nHis eyes lit up when I got there early again because I wanted to be back in his arms. He laughed, made me get dressed, and then made me wait, bent over his office desk, for my assfucking. \"I gave a timeframe promise, lovely slave girl.\" He purred it in my ear while he railed me again, while I practiced crying out my pleasure, mentally repeating how it felt as good as a pussy fucking or a mouth fucking. \"But you can bend over for my viewing pleasure before we begin if you like.\" I did like. I loved. It was heady and filthy to bend over that desk, with my legs spread wide, and wait for him.\n\n\"Thank you, Master.\"\n\n\"You're welcome. And since you're being so pleasing now, I'll give you a treat. How would you like to take my cum in this cunt in your face?\"\n\nI writhed on his fucking when he thrust two fingers in my mouth. \"Oh, please! Please, yes!\"\n\nHe growled in horny pleasure, banging into me. \"Alright. You'll have to clean my cock of your asshole, but you can have it so long as you promise to be a good, cum loving little slave girl for me. You'll be a grateful little slave girl who won't spill a drop and you won't swallow until I command you to, understood?\"\n\nJesus. \"Yes, Master.\" I said it breathlessly, so aroused by his words that it was pain again. And it only got better when he turned me around and shoved me to my knees, his eyes so desirous at the sight of me that it made me all the more heated. He thrust into my face where I opened up with such eagerness and I squealed around him, repeating the mental words again. My mouth fucking felt as good as my pussy and my assfucking. I cupped my tits and arched, taking him deep with a cry of need. Cock starving, he had said the night before. I felt like I was cock starving.\n\nI lifted with a muffled moan of grateful delight when he finished on my tongue. He hissed between his teeth and held me by my hair in a control hold. His eyes were bright when he pulled back and he crooked his finger through the O-ring in my play collar. \"Show me.\" I opened my mouth and he gave a feral growl of satisfaction at the sight. \"Good girl. You like the taste of all that cum?\" I nodded hungrily, careful to not be too fierce with my motions and lose any, holding onto his leather pants and begging him with my eyes. He grinned wickedly and stroked a hand over my forehead. \"Why don't you hold it in your mouth while you dance for me a little, then? Let's see if it makes you as horny as having it in your ass did yesterday.\"\n\nI closed my mouth to hold it eagerly, having to work to avoid orgasm from how dirty and sexual he made me feel. He started the music again and I lost myself and it was easier the second time to do that. It was a joy to let the world and my terrors go and just...\n\nBe desired. I had to work to avoid losing his cum when I wanted to open my mouth and beg my Master with every time he caressed the whip handle over my pussy.\n\nIt wasn't Scorpions again, but things like AC/DC's Shook Me All Night Long turned out to work just as well.\n\nHe let me orgasm on a dildo when I finally swallowed his cum, so that I squealed with a shout as soon as I did, hot and fueled by sex, greedy and amped for more as soon as it was over. He laughed and his eyes sparked. \"Let's practice sounds. You sound eager enough when I use your asshole, but it's not nearly what you just did on that dildo and when you take a throatfucking? You don't writhe enough. Let's work on that.\"\n\nHe used a spreader bar and wrist cuffs to tether my hands at the small of my back and that time he had me over a padded bench so my collar had a chain connected to it, making sure I couldn't pull back too far. He started with my asshole, using a thick, painful dildo so that I whimpered softly before I could think enough to squeal in appropriate desire. Then he pulled that away.\n\nAnd I shrieked with the thick one that pierced my pussy, thrusting up inside me so the world was bliss. He laughed above me. \"See how different? I think we can do better. Let's practice.\"\n\nI took it, my mind going dead from pleasure. He took turns between the two toys until I was a writhing, squealing mess on either of them, until my asshole felt gaped and my pussy felt bruised. \"That sounds much closer together.\"\n\nI squealed my reply. \"Thank you for your training, Master.\"\n\n\"You're welcome. Such good manners. Let's try something else.\"\n\nI shrieked when he filled me with both of them, sobbing in frenzy and writhing in ecstasy. He held the one in my pussy still while he fucked the one in my ass in a furious pace. \"See how hot you are writhing like this from double penetration? And yet if we switch to this pussy in your face instead of your asshole...\" I whimpered when he thrust the dildo in my cunt deep. \"Be a good girl and hold that cock for me while I demonstrate.\" I had to squeeze myself tight around it, whimpering when he lifted me by hair. \"Open up.\" And he was as brutal with the second toy as he had been when he fucked my asshole with it, pumping in my face so that I shook all over, knowing what evil places this was headed. He tsked over me. \"See? You don't writhe nearly enough. Let's practice again and here. I'll even be a kind master and use a machine for your cunt, so you don't have to be distracted or worried with holding that toy in such a slutty hole. I know how hard it can be when you're so messy.\" I moaned when he did set it on a machine and then didn't start it, choosing to let it hold still inside of me instead.\n\n\"Thank you, Mas-\" He cut me off with the dildo in my mouth. I writhed on the toy filling me, then writhed harder under his command. He wasn't satisfied until I was sluttier than ever around the toy fucking my face.\n\n\"Good girl. Now, let's try it with that other cock in your asshole.\"\n\nI felt like I could burn alive. I worked to please him because every second was turning into torture. I could feel myself turning more feral with every stroke of the toy down my throat. I fell still when he was finally satisfied, whimpering as if I was wounded, hungry in a way that felt like it'd never be sated again.\n\nHe rewarded me. With his own cock in my gaped asshole, so that I shrieked again. \"You want to cum for me, little Aurora, all over my dick this time?\""
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "mdom",
        "male dom",
        "master",
        "dominant",
        "submissive",
        "femsub",
        "fsub",
        "slave"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-slavemaker"
}