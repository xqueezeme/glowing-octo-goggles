{
    "title": "Trucker's Curse",
    "pages": [
        "Author's note:\n\nI wrote this for an anthology. I'm pleased to be able to share it here. It's a stand-alone story but there is potential for new chapters in the near future. Needless to say all characters are fictional adults. Comments are always welcome and votes appreciated. Thank you for reading.\n\n*****\n\nJim sat alone at a far corner table, sipping black coffee and checking the weather on his phone. \n\nThe truck stop was nearly deserted in the pre-dawn hours; a gray-haired old-timer manned the coffee shop counter and the occasional disheveled and bleary-eyed trucker would shamble in to grab a coffee and a greasy breakfast, but other than that it was empty.\n\nJim drained the cup and considered going back for a second but dismissed the idea. He had a pickup in Leamington and then a twelve-hundred kilometer run up the Trans-Canada to Hearst, and he didn't want to stop at every washroom along the way. \n\nThe clock above the coffee counter showed seven-fifteen. Almost light enough to do the morning inspection of his rig. He pushed the chair back and stood, pulled on his heavy jacket to ward off the mid-autumn chill, grabbed the empty paper cup and shuffled towards the exit.\n\nAnd that's when he saw a woman step into the truck stop and pause just inside the entrance. Mid-thirties, maybe. Good-looking in the kind of way that doesn't draw attention to itself - brown hair tied back in a ponytail, light ski jacket unzipped over a loose-fitting white sweater, faded blue jeans, sneakers. She wasn't a trucker; there weren't many women in the business and in any case she didn't look the type. She looked to be a traveler, though, judging by the well-worn backpack slung over her left shoulder.\n\nShe scanned the room and her eyes met his. He thought he saw a flicker of interest - of recognition - in her expression, but he dismissed it as wishful thinking. In the next life, hopefully. Certainly there were no women for him in the present one.\n\nHe paused and waited for her to move away from the entrance. It was better that he not get too close to her. No point inviting calamity, especially so early in the morning. After a moment she wandered over to the coffee counter and he slipped out of the building while she ordered.\n\nIt was damp, blustery and cold outside. Winter was coming. Canadian winter. Six months of poor driving conditions, unpredictable weather, slow traffic and long, icy nights. He wrapped his jacket tighter around his wiry frame and muttered curses under his breath. Forty-five years old and still hauling his ass from one end of the country to the other? It was no life. He wondered again why he even bothered.\n\nHe got to his rig, unlocked it, pulled himself up into the cab and hit the 'test mode' switch on the console, then dropped back down to the pavement and started a slow circle check of the vehicle. Lights. Flashers. Tires. Fluids. Belts and hoses. Finally he returned to the relative warmth of the cab and checked the dials on the console. Gas, charge rate, oil, coolant, water. Every day for the past twenty-seven years, the same routine. He could have done it in his sleep.\n\nHe stepped behind the seat to his bunk and checked that everything was secured, garbage removed, cupboards closed, bed made, desk retracted and the swivel arms that held his television and laptop were folded out of the way.\n\nReady to go.\n\nJim had settled into his seat when he heard a knock on the driver door. A quick check of the mirror revealed it to be the woman from the coffee stop. He froze. What reason would she have to come looking for him? Had he left something behind? He checked. Wallet...keys...phone, all accounted for. He sat, trying to figure what to do, but the coffee hadn't soaked into him yet and his thoughts were fuzzy. He couldn't open the door, that was for sure. He didn't mix well with women. Or to be more accurate, he mixed TOO well with women. Better for both of them if he kept the door closed.\n\nFinally he lowered the window, just enough to speak through it.\n\n\"Good morning,\" he said, his tone gruff.\n\n\"I'm Lisa. Could I get a lift?\" Bold. Direct, but she had a sweet enough voice - very easy on the ears.\n\nIt seemed odd, her being a hitchhiker. She'd have had to hitch her way to the truck stop...but at seven-fifteen in the morning? Who was picking up hitchhikers in the dark? What woman would thumb a ride at night? Jim cursed his luck - he really should have had that second cup of coffee to make the thinking a bit easier.\n\n\"Not possible. My boss doesn't allow it. Sorry.\" It was a convenient enough excuse.\n\n\"Aw, come on. He won't know, and I can be very good company,\" she said, winking on the word 'very'. \n\nIt had been a few years since he'd had an offer like that; more than a few, actually. He felt the first stirring of temptation, the awakening of urges he'd spent his life damping down. \n\n\"Still no. Sorry about that.\" He raised the window, then did his seat beat. When he checked the mirror again, she was gone. \n\nOr so he thought, until the passenger door opened and the woman climbed awkwardly into the cab.\n\nThis was bad - very bad. A woman should not be so close to him. He swiveled the seat to face her.\n\n\"Now, look, miss. I thought I was pretty clear...\" he trailed off.\n\nShe held a gun. The barrel was pointed at his face. \n\n\"Drive,\" she said, her voice hard. Mean. Her eyes peered into his and didn't flinch.\n\n\"Okay...you want the truck? All yours. I'll just step out,\" he said. It was insured, after all. No reason to die - not over such a silly thing anyway.\n\n\"Drive, or I'll kill you right here.\"\n\n\"There are cameras all over the place...inside the coffee stop, too. They'd find you quick,\" he countered. Why was he arguing? Was he trying to get shot? Had his death wish become so pronounced?\n\n\"Drive.\" She pointed the gun lower, at his abdomen. The idea of a bullet tearing through his guts was somehow more daunting than the thought of being shot in the face. A bullet in the stomach was a slow, painful way to die.\n\nHe turned back to the wheel and put the truck in gear, then navigated to the on-ramp and accelerated onto the highway. He was almost up to speed when he heard a snicking sound and felt cold metal around his right wrist. Startled, he tried to pull back but found his wrist handcuffed to the wheel. He drove in silence for a few minutes before he dared to speak up.\n\n\"This won't work if I need to reach the gear stick.\" The truck had an automatic transmission, but he hoped she wouldn't know that.\n\n\"Just drive.\"\n\n\"Where are we going?\"\n\n\"Just fucking drive!\" \n\nAnother few minutes passed in silence as he debated using The Curse. He hadn't used it in thirty years and didn't want to start it up again now. It wasn't right, that sort of power. It brought nothing but trouble. It ruined lives, his most of all. Definitely a last resort. He glanced at her sidelong and tried again.\n\n\"Whatever problems you've got, this isn't the right fix. If you tell me what you need, maybe...\"\n\n\"Jesus, you don't stop, do you?\" she said with an eye-roll and a humorless smile.\n\nHe sighed. Time for The Curse.\n\n\"Undo the handcuffs,\" he said in a soft but firm voice.\n\n\"Shut up and drive.\"\n\nHer response set him back. Well...it had been a long time since he'd used his power. Easy to see how it could be a little rusty. He cleared his throat and tried again, a little louder.\n\n\"Undo the handcuffs.\"\n\n\"It won't work,\" she said flatly.\n\n\"What?\"\n\n\"I won't obey you. Your powers of control won't work.\"\n\n\"You know about The Curse?\" he asked in an awestruck tone. Dozens of questions bubbled to the surface all at once and he couldn't decide in what order to ask them.\n\nShe barked out a derisive laugh. \"Is that what you call it?\"\n\n\"Are you able to do it too? Magic, I mean?\" Despite the gun in her hand, Jim felt only a desperate curiosity. This might be the chance to get answers to questions that had haunted him his whole miserable life. The threat of being shot seemed insignificant by comparison.\n\nHe could feel her gaze on him and he glanced sideways to find her wearing an expression that seemed both puzzled and irritated.\n\n\"It's not magic. Just drive the fucking truck, okay?\"\n\n\"No...wait...this is amazing! I didn't know there was a way to block the magic. You have to tell me how!\"\n\n\"It's not magic!\" There was more exasperation than anger in her voice, but plenty of both.\n\n\"Then what is it?\"\n\n\"Shut up and...\"\n\n\"No!\" he shouted. \"I've lived with this goddamn thing for as long as I can remember. It's ruined me. Now tell me what it is!\"\n\nThere was silence in the cab. He wanted to glare at her but the road vied for his attention. \n\nShe let out a loud, exaggerated sigh.\n\n\"Fine. I guess there's no harm in it. It's not magic. It's biological, probably part of your body chemistry. Our best guess is that your body produces a chemical that acts on the brain somehow.\"\n\n\"Why does it only work on women?\" \n\n\"I don't know. Something to do with hormones, maybe. It's mostly a theory.\"\n\n\"How are you blocking it?\"\n\n\"Lanzapine...an anti-psychotic drug. Acts on the brain to counter your chemicals.\"\n\n\"If I took some, would it block my power?\" He didn't try to conceal the eagerness in his voice.\n\n\"No. There's only one way to shut your power down.\"\n\n\"What?\"\n\n\"Death.\"\n\n\"Oh,\" he said. So close, yet so far. \"How long does it last - Lanzapine?\"\n\nShe was silent for a moment, and her tone was muted when she responded.\n\n\"Long enough. Take the next exit.\"\n\n\"Why? What's-\" suddenly he jumped onto the brakes, causing the rig to jerk forward with the sudden deceleration and slamming Lisa against the dash. A curve in the road had straightened to reveal a long line of red brake lights that stretched down the road into the distance. Blue and red flashing lights far off ahead meant the delay would be a lengthy one. All part of life on the road.\n\n\"Fuck! Are you trying to get shot?\" Lisa said, reclaiming her seat.\n\n\"Accident,\" he said with a nod out the windshield.\n\nShe glanced out at the traffic jam, then her gaze flickered to the illuminated clock on the console.\n\n\"Fuck,\" she repeated.\n\n***\n\nHe was forced to play Top 40 on the satellite radio. Well, not forced, exactly, but when a visibly irritated woman with a gun wanted to hear today's hits, that's what got played.\n\nFor an early-morning accident on a remote stretch of the 401, it was a doozy. All lanes blocked. Eight fire trucks, four ambulances, and more cop cars than he could count. Jim briefly considered trying to get the attention of the police, but decided to play it cool for the time being. He didn't want a bullet in the abdomen, for one thing, but more than that, he needed Lisa. She had the information he'd been looking for all his adult life.\n\nHe tried several times to kick-start the conversation but the delay made her even more unfriendly and reticent than before. The only concession he could wring from her was to get her to open a bottle of water and pass it to him. As the hours crawled by, the two of them sat quietly and sipped water as the flavours of the month shrieked and wailed on the radio. \n\nLisa passed the time pecking at the touch screen of her phone. The gun rested in her lap, but with his right wrist cuffed to the wheel, Jim couldn't have made a grab for it even if he'd wanted to.\n\nFinally the accident was cleared away and traffic slowly returned to normal. He took the next exit as she indicated and soon found himself driving down an isolated, rural country road. The sun was bright and halfway to its zenith in the sky when she finally spoke.\n\n\"Here. Pull to the side,\" she said, her voice quiet.\n\nHe signaled and eased the rig onto the soft shoulder. All around were farmers' fields - not a house to be seen. Lisa pulled the gear into 'park'. \n\nJim got a very bad feeling. He cast about for something to say, but nothing came to him - the situation was surreal, like a dream, and it was hard to think clearly. He cursed himself for skipping that second cup of coffee.\n\n\"I'm sorry,\" she said in the same soft tone. \"You seem different than the others. Maybe you are different. But I can't take that chance. Close your eyes - it'll be painless.\"\n\nShe was going to kill him! Should he beg? Plead for his life? Face it stoically? \n\nHe closed his eyes. He'd thought of ending it himself so many times over the years, despairing of ever being free of The Curse. Ironic that his death should come so soon after new hope presented itself. \n\nHe felt the cool metal of the gun against his right temple. \n\n\"Just like this? In broad daylight? They'll catch you. You can't escape on foot,\" he said. \n\n\"Not your problem.\" Her voice was calm. Serious.\n\n\"Stop. Don't do this,\" he said in a voice that was little more than a whisper. A final, feeble attempt to sway her.\n\nThe minutes ticked by in perfect silence. He could hear his breathing and hers, and his heart pulsing in his chest. His hands still clutched the wheel, white-knuckled.\n\n\"Impossible!\"\n\nA stunned whisper from her caused him to open his eyes.\n\nShe sat in the passenger seat, facing him. She looked frozen in place, her body rigid and unmoving. Both arms were extended, her right hand holding the gun, index finger curled around the trigger, her left hand cupped under her right to support it. The look in her wide brown eyes slowly changed from disbelief to horror.\n\nJim quickly ducked his head away from the barrel of the gun, but she didn't flinch, holding her position. It took him only a moment to understand.\n\nThe Curse.\n\nHe'd told her to stop, so she'd stopped. As comprehension dawned in his eyes, the dread in Lisa's deepened. He breathed a relieved sigh.\n\n\"Don't shoot. Put the safety on, lower the gun, and put it away,\" he said in a steady voice. She did exactly as he directed, stowing the gun in a side pocket of her backpack.\n\n\"Good. Now sit back in your seat and remain still.\"\n\nShe complied.\n\nHe took several minutes to compose himself. For all the times he'd lamented the Curse, it had sure come in handy just this once. He went to put the rig in gear, only to be stopped by the handcuffs.\n\n\"Oh - undo the handcuffs then return to your seated position,\" he said. She did so.\n\n\"Tell me if you arranged for someone to pick you up after I was dead.\"\n\n\"I was supposed to meet someone here.\"\n\n\"Looks like they're late.\"\n\n\"We're the ones who are late. My ride went to grab some breakfast. He'll be here in a few minutes.\"\n\n\"Well I'm not sticking around,\" he said, putting the rig in gear and winding his way back to the highway. He radioed ahead to confirm his load was still in Leamington despite the lengthy delay. It was still there, waiting for him. The day was beginning to look like it would be an interesting one for a change.\n\n***\n\nTwo hours later he was loaded up and dragging his freight along the 401 toward Toronto. Lisa had remained in her seat, still and silent. Jim hadn't said much, either - preoccupied by the events of the morning and the feelings brought to the surface by his use of The Curse after so many years. The long-dormant yet familiar internal struggle between what he could do and what he ought to do. The ability to force women to do his bidding was a terrible kind of power - the kind a man could lose himself in.\n\nBut with sun beaming down through a flawless blue sky, the familiar road under him and Steppenwolf blaring over the radio, he began to loosen up.\n\n\"So why do you want to kill me?\" He asked, figuring it was as good a place as any to start the conversation.\n\nShe sat silently, staring into the distance.\n\nHe smiled ruefully - he hadn't used The Curse in so long he'd forgotten some of the nuances. He corrected himself.\n\n\"Tell me why you want to kill me.\" Direct commands worked, questions didn't.\n\n\"To stop you from using your power to prey on women,\" she replied in a voice steeped in bitterness.\n\n\"But I don't prey on women. Never have.\"\n\nShe didn't respond, just stared resolutely forward.\n\nHe sighed, resigned to the necessity of dragging a conversation out of her sentence by sentence. It wasn't a very nice thing to do, but seeing as she'd tried to kill him he felt entitled to get his questions answered at the very least.\n\n\"Tell me why you think I would prey on women.\"\n\n\"You're a man. You have the power to compel women to do anything - everything - you want. Doesn't take a fucking genius to imagine how that's going to play out.\"\n\n\"That's unfair.\" He didn't expect a response to his non-command but she surprised him.\n\n\"Unfair? I've tracked down eight men like you. Eight men with your power. All of them - every single one - enslaved and exploited women. One was a pimp. Two of them owned strip clubs where the 'talent' worked for free. One bastard was marrying rich women, taking their assets, then divorcing them.\" There was no hiding the outrage in her voice.\n\n\"But just because...\"\n\n\"One guy worked in Hollywood as an agent who took one-hundred percent commission from his stable of actresses. One guy would fuck a different married woman every night, bareback. Why? Just because he could. Shall I tell you about the sick fucker who left a bunch of pregnant teenagers in his wake?\"\n\n\"That's not me! I've never done anything like that!\"\n\n\"Just because you haven't, doesn't mean you won't. And the stakes are too high to risk leaving it to chance. Power corrupts,\" she said, then lapsed into a fuming silence. \n\nJim could feel her anger and understood it, even if it was unfairly directed at him.\n\n\"So you've killed eight people?\" \n\n\"With a smile,\" she said, her voice a knife edge.\n\n\"I was going to be number nine?\"\n\n\"You will be number nine. Whatever you do to me, there are others to finish the job.\"\n\nJim was quiet for a while after that as he considered what he'd learned and tried to determine the best way forward. He was torn; affronted to be lumped in with the human dregs that Lisa had described but at the same time conceding that her better-dead-than-sorry approach had a clean, cold logic to it. And how else to deal with those men? Criminal prosecution? The women involved would be too enthralled to press charges or testify. And if death was the only way to disable The Curse...well, that didn't leave a whole lot of options.\n\nThe silence stretched for an hour before growing too oppressive for Jim's liking.\n\n\"Tell me how you learned about The Curse,\" he said.\n\n\"I fell victim to a man named Luther, who had the same power as you.\" \n\n\"What do you mean 'fell victim'? What happened?\"\n\nThere was no response and he was about to re-phrase it as a command when she spoke.\n\n\"Please don't make me tell you that.\" It was a whisper...a plea.\n\nHe nodded and abandoned the question but wasn't ready for another lengthy silence.\n\n\"How did you find me, anyway? How did you know I was Cursed?\"\n\n\"Like I would tell you,\" she snapped defiantly.\n\nHe chuckled, amused by her tenacious resistance. \"Answer every question I ask, fully and truthfully.\"\n\n\"Fuck! Fine. You were part of a clinical vaccine trial when you were a baby. An error was made and you were given the wrong formulation. Spoiled or tainted or something, who knows? All the boys who received the bad juice grew up to be 'Cursed' as you would say.\"\n\n\"How on earth did you figure that out?\"\n\n\"Twelve years of tireless, obsessive detective work. I rooted out two other Cursed men, then started looking for any common thread that tied them to Luther. Finding the stuff about the vaccine was a fluke - we stumbled on it by accident.\"\n\n\"So how many others have The Curse?\"\n\n\"After you're gone? Thirteen.\"\n\nHe drove in silence as he digested her answers.\n\n\"Tell me why the Lanzapine didn't work for you this morning. I thought it was supposed to protect you.\"\n\n\"I'm still trying to figure that out,\" she said. \"The dose I took is usually good for six hours but today it lasted less than three. Maybe the confined space in here meant a higher concentration of your biochemicals. Or maybe the fact that you obviously haven't showered in a couple of days produced a stronger chemical dose.\"",
        "\"That obvious, is it?\" he asked sheepishly. \"I...uh...usually shower every other day, but the showers at the truck stop weren't working, and besides it's not like I was expecting...\"\n\n\"Don't explain. Your smell is just another reason not to like you,\" she said with a scowl.\n\nShe sat motionless and continued to stare out the windshield at the road ahead. She hadn't budged since he'd used The Curse. Then it struck him that she couldn't move - he'd directed her to sit still. That would get uncomfortable after a while.\n\n\"Don't do anything that would harm me directly or indirectly. Don't take any more Lanzapine. Don't attempt to leave the rig and don't call anyone. Do you understand?\"\n\n\"Yes.\"\n\n\"Good. Move as you please, within those limits.\"\n\nShe turned her head to look at him, stretched her arms and legs, then spun her chair around to face the living space inside the cab. She rose and began idly poking through cupboards and compartments. It felt like an intrusion but he didn't feel he could tell her to stop after saying she could move around. After seemingly taking a complete inventory of his possessions, she returned to the passenger seat.\n\n\"Your family?\" She held out a faded Polaroid. He didn't need to see it; he owned only one picture.\n\n\"Yeah.\"\n\n\"Do they know about you? About your power?\"\n\n\"I left when I was fifteen. Ran away.\"\n\n\"Why?\"\n\n\"To protect them.\" \n\nThere was a brief silence.\n\n\"From the arousal, you mean.\"\n\nHe didn't answer. \n\n\"Your mother, two sisters...I guess I always assumed immediate family would be immune,\" she said. He thought she might be goading him but there was no sign of it in her tone. She sounded inquisitive. Even...sympathetic?\n\n\"Nope. Not immune.\"\n\nShe stared at him a long time without speaking. He deliberately kept his eyes on the road, feeling a little teary. How could emotions linger so close to the surface? It had been thirty years for Christ's sake.\n\n\"I get it now. Why you call it The Curse,\" she said softly.\n\n\"I...was kind of hoping you'd know how to shut it off,\" he said, trying to keep the disappointment out of his voice.\n\n\"I only know the one way.\"\n\n\"Ah.\"\n\nAnother long pause.\n\n\"So...you ran away from home to become a truck driver?\" she said.\n\n\"Well, I was only fifteen. Couldn't even get a license at that age. But I knew I had to keep away from women so I thumbed my way to Belleville and worked on a farm for a couple of years, then moved to Oshawa and got paid under the table at an auto-parts factory. Not a woman in sight. As soon as I could I got my license and started over-the-road trucking. Kept me away from women. Out of trouble. And it paid well enough.\"\n\n\"Hold on...no women at all? For thirty years?\" She sounded incredulous.\n\n\"No men, either.\"\n\nShe laughed at the quip, a sound so unexpected that he turned to see if he could catch a glimpse. She saw him looking and her smile faded, but the scowl didn't return.\n\n\"No fucking way. Zero women? In thirty years? With the kind of power you have? That's a lie...it has to be,\" she said.\n\n\"No lie,\" he said, feeling self-conscious. \"And you don't need to keep talking about it. There have got to be guys who have never done it.\"\n\n\"Never done it?\"\n\nJim felt his face flush and he thought better of answering. Instead he hit the 'AM' radio button on the console and tried to tune in the Toronto traffic. Still plenty of time to abandon the 401 if Toronto was gridlocked.\n\nHe could feel her eyes boring into the side of his face, but he focused on the road with an intensity that would have awed his old driving instructor. \n\nAnother hour passed quietly and they were on the fringe of the Greater Toronto Area. \n\nLisa grew progressively more restless; she twitched, changed positions, stretched and prowled around the enclosed cabin endlessly. It became so distracting that Jim finally asked her if she wouldn't mind staying in her seat. She managed to keep still for a few minutes, then turned to face him.\n\n\"Let me be your first.\"\n\n\"What?\"\n\n\"Just...pull off the road,\" she said.\n\n\"What...you mean here? Are you out of your...\" he began, then stopped when he glanced at her face. Her expression was one of urgent, naked need. Desire so strong it bordered on panic. A desperate compulsion masquerading as heavy arousal. The Curse, again.\n\n\"No! Look, just...take some deep breaths. Get a grip,\" he said.\n\nShe began deep breathing in response to his command. \n\n\"Jim...I'm on fire here. I have to have you in me. Please!\" she breathed. \n\nHer words sparked his long-torpid libido. He felt himself growing uncomfortably hard in his jeans. \n\n\"There's no place to pull off. Besides...no, just no. Not when you're like this. It's wrong. I don't want to force you to...\"\n\n\"Please Jim?\"\n\nHe tried to think of a solution that would relieve her suffering while satisfying his conscience.\n\n\"Hand me your Lanzapine, then sit down and handcuff your wrists behind the seat. Make sure the cuffs are secure and that you can't get your hands free,\" he said.\n\nShe rummaged through her backpack until she found the small pharmaceutical blister pack and handed it to him, then set about cuffing herself as ordered. Jim popped a tiny white pill out of its foil cell and noted that only two pills remained.\n\n\"Swallow this,\" he said, holding the pill up to her mouth. She complied, plucking the pill off his palm with her lips then licking his hand with a wanton moan. \n\nJim turned his attention back to the road as Lisa fidgeted and squirmed in her seat, squeezing her thighs together and uttering quiet groans and pleas. By the time he'd navigated the rig into Toronto and then veered north onto the 400, she was quiet and still once again. He was glad for the silence; her lusty cries had brought on a painfully-constricted erection that was now mercifully receding.\n\n***\n\nHalf an hour passed in silence as the rig charged north, headed out of the big city.\n\n\"It's a terrible feeling, having no control of yourself - not even being able to control your own body,\" Lisa said quietly as she stared out the passenger-side window.\n\n\"I know how you feel, believe me. At least the Lanzapine did the trick.\"\n\n\"Yes, but it's just a stop-gap, and a hazardous one. The normal dosage for that pill is one per day. Taking one every few hours isn't smart.\"\n\nJim thought for a few moments.\n\n\"There's a new truck stop near Huntsville. I'll pull off there and we can go our separate ways.\"\n\n\"Jim...we're not done. There's only one way this can end.\" She sounded regretful.\n\n\"Why? I'm not like those other men.\"\n\n\"I know. Those men would have taken what I was offering in a heartbeat. They'd have reveled in their power, in my helplessness and humiliation. You didn't, and thank you. You seem like a good man. I really mean that.\"\n\n\"But?\"\n\n\"But I still have to do what needs doing. I've experienced first-hand what can happen when that power goes unchecked.\"\n\n\"Luther?\" he said.\n\nLisa was silent for a long time, still staring out the passenger window. When she finally spoke, it was in such a quiet voice that Jim had to strain to hear it over the engine of the rig.\n\n\"Fifteen years ago my older sister Kim and I were shopping at the mall. I had just turned eighteen. He walked up to us, cocky as can be. Threw one arm over my shoulders, slid the other one around Kim's waist, and just like that, he had us. \n\nHe took us to his estate in the country. Well, it wasn't his estate - it belonged to one of his girls. There were six of us there - all of us youthful and pretty. All of us slavishly obedient and half-mad with hunger for his worthless dick. \n\nHe kept us naked. Every day he assigned the jobs. There were six women but just four jobs, and if you didn't get picked you spent the day in the cellar sleeping on a cold stone floor, hugging another naked woman just to stay warm and suffering the agony of going without his cock. So every day we all begged desperately for a job. Literally begged. On our knees. He really enjoyed watching that, and told us so.\n\nThe 'kitchen bitch' did all the cooking and dishes. The 'house bitch' did all the housework. The 'bathroom bitch'...had to...was forced to...\" she trailed off with a shudder, then took a long moment to compose herself. \n\n\"The best job was the 'bedroom bitch'. Not hard to guess what her job was.\" She paused for a mirthless chuckle.\n\n\"But I loved being the bedroom bitch, Jim. On those rare days I got chosen it was joy unlike anything you can believe. Like winning the lottery and falling in love and...I can't do it justice with words. Lying under Luther as he jabbed his skinny six inches into me was the closest I've ever come to heaven. He would command me to orgasm and I'd go off like a stick of dynamite. Over and over again. Ecstasy and release like you can't imagine. I never felt that good before or since. Even now, I dream of it when I'm asleep - that's how good it was. Every time. More than anything else about my three years there, those moments of rapture haunt me.\"\n\nShe lapsed into silence again. Jim tried to think of something consoling to say but couldn't find words to match the intensity of her trauma. Small wonder that she'd come to hate those with power like his own.\n\n\"Want to know how I got free?\" \n\n\"Only...only if you want to tell me. If it's too painful...\"\n\n\"He sold me. Dressed me in a flimsy smock, drove me to a parking lot in Mississauga. Another man met him there. Luther turned to me and said \"do everything this man says, forever\". So I got into the other man's car and that was that. It took a week for Luther's biochemicals to flush out of my system. A week for me to regain control of my faculties and sneak away from my new owner.\"\n\n\"Thank God it was just a week!\"\n\nLisa turned her head to face him. Her cheeks were wet and her wide brown eyes reflected the horror of her experience.\n\n\"You have no idea how long a week can be. As incredible as the joy had been, the withdrawal was equally terrible. The physical pain was awful - the crushing migraine, the muscle cramps - but the emotional pain was worse. Being apart from Luther made me hate life. It left a hole inside me that I couldn't bear. The loss of him consumed me. All I could do was lie in a fetal position and dream of him and pray for death.\"\n\nJim didn't say anything, just shook his head.\n\n\"My new owner dry-fucked me a few times, probably tried to get his moneys' worth. I barely noticed. Nothing mattered but the absence of Luther. I don't even remember the other guy's name.\"\n\nJim turned back to the road and noticed his hands were clenched around the steering wheel like he was trying to choke it to death. He took a deep breath and relaxed his grip. \n\n\"And your sister?\" \n\nShe shrugged helplessly. \"No idea. Never found her. Still looking.\"\n\n\"I'm sorry, Lisa. I can't express how sorry,\" Jim said.\n\nThey covered another stretch of road in silence.\n\n\"I've never told that story to anyone,\" she said. \"Easier just to bury it.\"\n\n\"So why tell me?\"\n\n\"You're a good man. You deserve to know why you have to die.\"\n\n***\n\nJim brought Taco Bell back to the rig. He was starving, and he imagined Lisa was too. He was right, in more ways than one.\n\n\"The drug is wearing off,\" she said as he unlocked her wrists and re-locked them in front of her so she could eat. He'd locked her gun in the glove compartment before he'd gone into the truck stop. It never hurt to be cautious.\n\n\"So we've only got a few hours before the arousal kicks in?\" \n\n\"It's kicking in now.\"\n\n\"It's too soon! This morning there were a few hours between the Lanzapine wearing off and the arousal starting. We went all the way from Leamington to Toronto...\" \n\n\"The arousal results from the biochemical building to a high dose in my body. Mind control occurs at small doses, but the arousal needs a higher dose. Now that the higher dose has built up, the mind control and the arousal happen together,\" she said.\n\n\"This drug isn't lasting long at all. Just three hours since your last pill. And you only have two pills left.\"\n\n\"Fuck! I don't want to take three pills in half a day - it's way too much. That stuff isn't candy,\" she said.\n\n\"Maybe get out and walk around? The fresh air...\"\n\n\"Your biochemical is already in my bloodstream. Fresh air won't matter,\" she said in a resigned voice.\n\n\"We could go our separate ways. You said the stuff flushes out in a week.\"\n\n\"No! No, please...that would be the worst option. The withdrawal would be hell.\"\n\nLisa swore and spun the chair around to the living space, then stood and faced away from him. In one motion she pushed her jeans and panties down to her ankles, then dropped to her knees and bent over his bunk, still wearing her white sweater and the handcuffs.\n\nHe couldn't tear his eyes off the pale, fleshy cheeks and the swollen lips that peeked at him between her widespread thighs. He was hard almost instantly. Hunger swept over him, rapidly eroding his self-control.\n\n\"I need you inside me,\" she breathed. She dropped her head to rest between her forearms on the comforter.\n\n\"Lisa...not this way. It's wrong. I'd be no better than...\"\n\n\"This is the option that hurts me the least. Please just...do this for me,\" she said, then arched her back and widened her stance. Her lips opened; pink flesh beckoned him.\n\n\"Do this for you?\"\n\n\"Jim...I'm not only horny. This isn't just arousal. Not like an itch that I can just ignore. It's fire and...starvation. Like drowning and needing that next breath so badly. That's what this is. I need your dick like I need air. More than air. Please!\"\n\n\"There must be some other option.\"\n\n\"Are you going to make me beg? I will, you know. I'll do anything you ask, Jim. Please?\"\n\nHe took a deep breath, hoping to clear his head, but he inhaled her scent instead. He knew what it was; at some deep, primal level, he knew. Knew what it meant. He tried to think. Tried to look away from her naked and eagerly presented sex. Tried to come up with options. To think of some reason - any reason - not to do what his throbbing cock was demanding. What she was demanding.\n\nHe hadn't intended to drop his own jeans and underwear, but suddenly he found they were pooled around his ankles, on top of his shoes. His cock stood fully engorged, twitching, already dangerously close to an explosive release. His heart hammered as he sunk to his knees behind her. \n\nShe sighed when he rested his palms gently on the pale buttocks in front of him. Her flesh was smooth, soft. She moaned and pushed herself back into him. Her sounds...her scent. The warmth of her body. The pleasures of a woman. How had he denied himself this bliss for thirty years?\n\n\"Please...put it in...\" she whined.\n\nAs if in a trance he slid his right hand lower, between her widespread thighs. He touched her sex; hot and wet, framed by coarse pubic hair. He let his fingertips glide back and forth through the slippery folds, amazed by how soft and frictionless her bare pussy felt. Her scent was strong, he inhaled it greedily.\n\n\"Oh yessss,\" she hissed, inching her knees further apart, pushing back against his fingers. He found her entrance and slowly slid the tip of his index finger inside, still shallow, exploring the tight confines of her channel. Lisa jerked her hips back, plunging his whole finger into her, then moaned plaintively.\n\n\"You're tight,\" he whispered.\n\n\"Cock...Jim...your cock...\" She sounded desperate, almost panicky with need.\n\nCould he do this? Even as he formed the question he was shuffling forward on his knees, pressing in close behind her, fully engorged cock straining towards her welcoming pussy. He gave a slight push, almost involuntary...\n\nAnd then he was inside, slipping past her soaked, yielding entrance and deep into her. Hot, clinging, tight. She responded with a delighted gasp. He gave a low groan and his hands instinctively slid down to grip her hips. \n\nHe wanted to keep still and savor the sensations, to get a handle on them. Some part of him was still fighting for control, for sanity. But Lisa had other ideas and began rocking back and forth urgently. Ecstasy. A delicious, slippery massage up and down the length of his cock. It was too much, too fast. An unbearable tightness gripped his balls and the base of his shaft, then exploded outward in fast, orgasmic pulses as he thrust forward and buried himself deeply. For several long moments the pleasure was all-consuming and there was nothing else.\n\nSlowly, the lust drained away from him and the world came rushing back. He was in his rig. In front of him, under him, Lisa was draped over the bed, limp and panting, a dopey, contented smile on her face. \n\nRealization hit him like a kick in the gut. His self-control had failed. For thirty years he'd been strong, done the right thing and steadfastly resisted The Curse. But that strength hadn't been enough and he'd imposed himself on a woman who was helpless to resist. Used her without her proper consent. \n\nLisa had been right about him all along. The thought made him want to throw up.\n\nInstead, he pulled out, stood and yanked up his pants. He tried to think of something to say that would excuse his lapse but nothing came to him. Without a word he lowered himself into his seat, hit the ignition and steered the rig back out onto Highway 11. \n\n***\n\n\"We're not sure why sex temporarily counteracts the arousal,\" Lisa said to break the uncomfortable silence. \"Again, something to do with hormones, perhaps. There's a lot about your condition that we just don't understand.\"\n\nShe'd cleaned up the best she could using the baby wipes and paper towels he kept in the rig and had taken her seat again. The handcuffs hadn't made it especially easy. He'd greeted her with more than half an hour of grim reticence that verged on childishness. \n\n\"We?\"\n\n\"My team,\" she said.\n\n\"You created a team of assassins?\"\n\n\"I'm the only one who pulls the trigger,\" she said. \"The others do logistics, research, drop-offs and pick-ups. That sort of thing.\"\n\n\"Ah.\" He mentally brushed away the questions that surfaced. Not important. Not to him, anyway. Not for long.\n\nHe signaled and guided the rig off the highway and onto a rural road, ignoring Lisa's questions, and from there onto a pitted and uneven logging road.\n\n\"Where are you taking me?\" she asked, and the nervousness in her voice was apparent.\n\nIn response he stopped the rig, threw it into 'park' and turned off the ignition.\n\n\"You were right,\" he said, reaching past her to unlock the glove compartment. \"Power corrupts.\" He caught her wrist and unlocked the cuffs.\n\n\"What do you...\"\n\n\"I'm ready,\" he said. \"Take the gun out and let's get this done.\" He closed his eyes and took a deep breath. \n\nHe heard the glove compartment open, the scrape of the gun being removed, then a long pause.\n\n\"I asked you to do it, Jim. Needed you to do it. There were no better options,\" she said, a gentle protest.\n\n\"It played out as you predicted, and if we don't end it here, it will happen again. If you don't kill me, I'll become like Luther. This is the best way to protect you.\"\n\nAnother long pause.\n\n\"You're the furthest thing from Luther,\" she said firmly. \"You couldn't sink that low on your worst day.\"\n\n\"You said yourself, this needs to happen. Why wait? This is as good a place as any.\"\n\n\"I'm sorry, Jim. You're a good man.\"\n\n\"In the end, I'm no better than the others you've killed,\" he said bitterly.\n\nThe silence stretched to a minute, then two.\n\nFinally he opened his eyes and glanced to his right.\n\nLisa sat in her seat, staring at the gun in her lap. She raised her eyes to his and he could read the uncertainty there, the conflict.\n\n\"But you are better than the others. You gave up your family. You denied yourself for thirty years rather than take what your power offered you. And now...you're ready to die to protect me...even after I tried to kill you, and will try again.\"",
        "\"My strength isn't enough. The Curse is just too strong,\" he said with a helpless shrug.\n\n\"That's the worst part! You were doing fine until I interfered. If I'd just stayed away...\"\n\n\"I'd have been dead in a year anyway. I was getting tired of going through the motions. I've been making plans to do it myself, just never seemed to get around to it.\"\n\n\"You're kidding!\"\n\nHe gave a dry chuckle. \"Nope. Seems everyone with The Curse either wants to be dead or deserves to be.\"\n\nShe stared at him for a long time, her expression pensive. He returned her gaze for a minute, then glanced around the interior of the cab.\n\n\"You know, we should probably do this outside. No point messing up a pretty good truck,\" he said.\n\n\"I can't kill you now,\" she said quietly.\n\n\"We've been through it. You've got a job to do, and I've got no particular reason to live.\"\n\n\"No, I mean I can't kill you now...this afternoon. I'd need to call for a pickup, and it's...what...five hours from where we first met? I wouldn't risk discovery for that long. Plus, I've inhaled a high dose of your biochemical. The arousal will return shortly, and I can't take any Lanzapine for at least another thirty-six hours. I've overdosed as it is. Which means the next day or so will be a living hell for me unless your cock is around to counteract the effects of the arousal.\"\n\n\"But when I'm dead, how will you cope with the withdrawal?\"\n\n\"I'm hoping that multiple low doses of Lanzapine - maybe a quarter pill every six hours - will keep the craving manageable.\"\n\n\"Hoping?\"\n\n\"This is only the second time I've had to deal with withdrawal. It's mostly guesswork.\"\n\n\"Huh,\" he said. \"Well...I guess I'd better get us back on the road then. As long as I'm alive, I have an appointment to keep in Hearst.\"\n\n***\n\n\"I thought you slept in your truck,\" Lisa said as Jim guided the rig to a stop in front of a Holiday Inn on the outskirts of North Bay.\n\n\"I do. But if this is going to be my last night on earth, I'm going to spend it in a real bed, and eating real food.\"\n\n\"Want company?\"\n\n\"Only if it's you.\"\n\n\"There's no one else here.\" She grabbed her jacket and backpack as Jim rooted through his cupboards to get a change of clothes and a toiletry bag.\n\nHe managed to book them into a queen suite, then headed for the bathroom as soon as they checked into the room. It was the most he'd ever paid for a shower, and he planned to get full value. Half an hour later he'd dressed and flipped on the TV while Lisa took her turn cleaning up.\n\nShe emerged from the bathroom naked and he froze, enthralled by the sight of her. She walked very slowly towards his bed, eyes never leaving his. Lisa's hair was wet and fell in loose waves to her collarbone. Her mouth was turned up at the corners in a seductive smile. Full breasts swayed subtly with each step, dark nipples enticing his gaze. Her stomach was flat, her hips flared, her legs strong and shapely. They framed a sex devoid of hair, brazenly displayed to his appreciative eyes.\n\n\"I hope you don't mind that I used your razor,\" she said in a silky voice.\n\nIt took a moment for him to find his voice. \"Lisa, you know how I feel about this. About taking advantage of you while you're helpless.\"\n\n\"I'm not. Not yet, anyway. I'm clear-headed and very much in control of myself.\" She continued to approach at a languid pace.\n\n\"Then why?\"\n\n\"This is your last night on earth. I promise it will be your best one, too. I owe you that much.\" She reached the side of the bed and slowly rested her hands on her hips.\n\nShe was the most breathtaking sight he'd ever set eyes on.\n\n\"I think it's my best night already,\" he whispered.\n\nLisa smiled warmly and pointed to his groin. \"Pants. Off. Now.\"\n\nHe didn't need to be told twice and quickly divested himself of his clothes as she walked around to the foot of the bed. Her ass was full and shapely and he could still recall the soft warmth of it under his hands. His cock was hard again and ached for her touch.\n\n\"What do you want me to do?\" he asked as she knelt on the bed between his ankles.\n\n\"I want you to enjoy every moment of this.\" \n\nShe took his right ankle in her hands and slowly raised the sole of his foot to her mouth, then pressed soft, hot kisses to the inner arch and the pad of his big toe. Her tongue came out and licked the toe as she looked into his eyes; the other four toes got the same treatment. She ended with another slow kiss on his arch then gently set his ankle back on the mattress. His left foot got the same sensual treatment.\n\nShe stroked her fingertips from his ankles up to his groin, then slowly back down. Deliberate, unhurried caresses, her eyes locked on his the whole time. An approving groan escaped him. His cock started to throb.\n\nPart of him wanted to ask where she learned to please a man this way, but he figured he wouldn't like the answer so he pushed the thought away and enjoyed the sensations. It didn't matter anyway - not anymore.\n\nOn all fours now, Lisa placed her palms on either side of his hips and slowly swept her damp hair over his belly, his cock. She lowered her shoulders so she could maintain eye contact as she ran her hot tongue from the base of his shaft up to the head, and then back down again.\n\nJim gasped. \"Uh...my control may not be so good,\" he said, then sucked in a breath as she began to gently kiss her way from base to tip.\n\nShe dipped her head and slid his cock between her lips, slowly took most of his length into her welcoming mouth, then pulled back and met his gaze again. \"Focus on your pleasure, don't worry about control. If you come too soon then I guess I'll just start all over again.\" She gave him a wicked smile.\n\nShe gave his cock another long, unhurried lick, then engulfed it in her mouth. He felt her tongue sliding along the underside of his shaft, then swishing over the head and finally the tip. She seemed content to take her time, as though she genuinely enjoyed the feel and taste of him. Most erotic of all were the moments when her lust-filled brown eyes locked with his as her tongue laved his painfully erect penis.\n\n\"You look...just...\" he began, but couldn't find the words to complete the thought. Instead he groaned and fought for control.\n\n\"You have a beautiful dick. And the thought that you saved it all for me makes me adore it even more.\"\n\n\"It's fond of you, too. We both are,\" he said.\n\nShe paused mid-lick and gave him a surprised look which faded to a sad smile. She began to say something, then changed her mind and returned her attention to his rampant erection. \n\nShe pulled back after another few minutes of expert oral attention, perhaps sensing how close he was to coming. On her hands and knees again, Lisa trailed her hair over his skin, then crept higher and kissed his belly as she fanned her fingers out over the dark hair on his chest. Her lips set off almost-ticklish spasms where they pressed against the flesh just above his hips. Her hands were warm, her palms stroking over his rib cage at a leisurely pace. \n\nHe reached down and stroked her hair as she kissed him, loving the cool, soft dampness of it between his fingers.\n\nWhen she moved higher and began kissing and running her tongue over his nipples, he found her breasts with his hands, delighting in the impossibly soft skin, the warmth and the supple weight as he stroked and squeezed them. Her nipples were hard points; he trapped them with his fingers and pinched and twisted ever so slightly, unsure of how much pressure to use but unwilling to relinquish his hold on them.\n\n\"Harder,\" she whispered.\n\n\"I didn't want to...I mean, I was worried that-\"\n\n\"Harder,\" she insisted, then pushed herself up with her hands, lifting her breasts up off his chest, presenting them to his view and to his touch. She was a vision of graceful, feminine softness. \n\nHe obliged, rolling them firmly between his fingertips. She closed her eyes and sighed her appreciation, then gazed down at him with eyes half-lidded with lust.\n\n\"More. Make me feel you,\" she said. His fingers became rougher still, drawing a moan from low down in her chest. She lowered herself again and trailed kisses over his chest, then up to his neck.\n\nFinally her face was above his, her brown eyes peering down at him, framed by a curtain of shampoo-scented brown hair. Her knees were on either side of his hips. She reached behind her and guided his rigid cock between the lips of her pussy and into her tight, slippery channel. She rocked her hips back slowly, gently impaling herself on his full length, then pausing to hear his low, lusty groan. \n\nHis hands gripped the sides of her hips, holding her still, thrilling to the sensation of being completely inside her. He looked down, saw his cock disappearing into her smooth slit. Felt the tightness, the wet heat of her all around him.\n\nShe dipped her head and kissed him then, deep and lingering, then moved her lips to his left ear. \"I'm soaked, Jim. Dripping...and The Curse has nothing to do with it,\" she whispered, then rocked forward and back again, shifting him inside her wet sex. They both gasped and panted as she increased the pace, taking him deep with every stroke. She leaned in for another kiss, probed his mouth with her tongue, then raised up again. Her pretty eyes, pupils dilated with pleasure, never left his own. She held him in her warm gaze.\n\n\"Can't go much longer,\" he said gritting his teeth and gradually losing his battle for control.\n\n\"Don't hold back. Come inside me. But let me see your eyes when it happens, please?\"\n\nHe nodded, and a few thrusts later he came with a strained grunt, spasming, releasing deep into her sex, losing himself in her hungry brown eyes.\n\nShe lowered herself to lay on top of him, his spent cock still inside her. He reached around and stroked his palms over her back. They lay together until he began to soften and slide out. Without a word, she slid down his body and took him in her mouth again, her tongue gentle, removing the remnants of their passion.\n\n\"Lisa...just...wow,\" he said, still trying to recover his breath.\n\nHer only response was to slide up to kiss his lips again.\n\n\"I wish I'd been able to do something for you. I didn't really...\" he said, but she cut him off with another kiss.\n\n\"You didn't demand or direct. Didn't try to control me. You just left me alone to do whatever I wanted. That's the first time a man has been that generous.\" She paused. \"Everything about you is the opposite of what I expected.\"\n\nThey lay in silence for a few more minutes until Jim was struck by a thought. \n\n\"Should we be concerned about you getting pregnant? We didn't use any kind of protection...\"\n\nHer expression darkened. \"Luther had me sterilized. He didn't want his toys getting pregnant,\" she said\n\n\"That's inhuman!\"\n\n\"Humanity wasn't his strongest suit.\"\n\n\"I'm serious. That bastard had a few pieces missing. Curse or no Curse, some people are just broken.\"\n\n\"I made sure he was more than just broken.\" \n\n\"He was number one on your hit list?\" Jim asked.\n\n\"The first, and most deserving,\" she said. \"He died real slow.\"\n\n\"Fine by me.\"\n\nHe continued to stroke her. He liked touching her skin - warm and smooth and intimate.\n\n\"Thank you, though. For caring about getting me pregnant. It was sweet,\" she murmured.\n\n\"Well...I'm too old to start thinking about children,\" he said wryly.\n\n\"Not too old to start thinking about room service, I hope.\"\n\n***\n\n\"Jim?\"\n\nHe woke with a start, unsure of where he was or - more alarmingly - who he was in bed with. It took a moment for everything to come flooding back. He glanced at the illuminated bedside clock. Three-twenty in the morning. It was officially the final day of his life.\n\n\"Lisa? What's wrong?\" The room was dark; he could barely make out her silhouette.\n\n\"I waited as long as I could, but...now? Please?\" \n\nThe Curse. He could tell by the way her voice quivered. Her hand was under the sheets, stroking him urgently, bringing his cock fully erect.\n\n\"Lisa, this isn't...\" \n\nShe pressed her other hand gently over his mouth. \"Shh. I know. I'm sorry. I put you in a bad position. If there was another way, I know you'd take it - that's the kind of man you are. But this...I'm in hell right now. Burning. Hurting. Losing my mind. Please? Please?\" Her voice was a desperate whisper.\n\nHearing her beg for his cock fueled his arousal, and that thought filled him with revulsion. He pictured Lisa on her knees in front of Luther, begging for a daily job. She said he'd loved that. Said that he'd reveled in her debasement, her humiliation. The idea that he had anything in common with Luther was unbearable.\n\n\"Never beg me for anything again,\" he said in a hard voice. \"Say whatever you want but never, ever use that tone again!\"\n\nShe breathed an exasperated sigh as his command took hold. \"Jim, give me your cock. I need you to counteract the arousal.\"\n\nThe slight chill in the room as he kicked off the sheets was quickly forgotten when she straddled him. She'd left it too long; the Curse demanded an urgent fuck instead of leisurely lovemaking. Sex in the dark was passionate and frenzied. Stroking, gasping, groping. Sloppy, hungry kisses. Her scent. Wet heat enveloping his cock. Moans and breathy grunts. Finding her stiff nipples with his fingers, pinching firmly and enjoying her appreciative purr. \n\nHe lifted his hips as she rocked back and forth on top of him, meeting her thrust for thrust. He felt his climax approaching and didn't try to hold it back. A moment later he groaned and released inside her, and they lay together panting and sweating. She continued to embrace him as their breathing calmed.\n\n\"Thank you,\" she whispered. \"I know it bothers you to do it when I'm in that condition, but it doesn't bother me. I need you to know that.\"\n\n\"I just don't like that you have no choice in it. Feels wrong.\"\n\n\"It feels great on this end.\"\n\nHe chuckled. \"This end, too. Forty-five years of nothing, then three times in less than a day!\"\n\n\"You can bet on at least one more. There's a ways to go before we get to Hearst.\"\n\n\"Then you'd better let me get some sleep. All this activity can wear a man out!\"\n\n**\n\nThey delayed their departure from North Bay long enough for Jim to do some banking while Lisa got a new Lanzapine prescription filled. She was waiting for him in the rig when he returned, and by ten they were back on Highway 11 heading north. \n\nLisa slept for the first hour. \n\nJim kept glancing over at her as she dozed. She didn't look much like a murderous assassin, asleep in the passenger seat, her head rocking gently with the motion of the rig. In a crazy way he felt gratified that she was comfortable enough with him to fall asleep in his presence. He liked that she trusted him to that extent.\n\nIt was The Curse that finally woke her.\n\n\"Mmm, it's time, Jim. Is there someplace you can pull off?\" \n\n\"Urgent?\"\n\n\"Not yet, but I'm definitely feeling you. Soon?\"\n\nIn response he signaled and eased the rig onto the soft shoulder, hit the hazard lights and then went outside to set up reflective triangles. When he returned to the cabin Lisa was facing him nude and cross-legged on his bunk, a most welcome sight. His eyes flicked from her wide brown eyes to her inviting half-smile, down to her naked breasts and then lower to her slim stomach and sleek legs that crossed in front of her bare pussy, hiding it from view. He felt his cock swell and stiffen, slightly sore from the delightful exertions of the past twenty-four hours.\n\n\"You look incredible,\" he said, pulling his shirt up over his head.\n\nHer smile broadened. \"No need for flattery. I'm a sure thing, remember?\" She seemed relaxed and playful, a far cry from the previous morning.\n\n\"I'm not kidding. You're really beautiful, and sexy as hell.\" He went to work on his belt and button fly.\n\n\"For a guy who shunned women for thirty years, you certainly know the right things to say,\" she said, sounding genuinely pleased by the compliment.\n\nNaked, he stepped toward her, his desire obvious. \"Tell me how to...\" he started, then stopped. No commands, he reminded himself. \"I want to know how to please you. How to make it feel good for you. So far I've been all take and no give, and that isn't right.\"\n\n\"It did feel good, Jim, every time. The feel of you inside me is incredible.\"\n\n\"For me too, but I want to give you the same kind of pleasure that you give me. I want to know what to do.\"\n\nShe regarded him silently for a moment, then scooted forward to sit on the edge of the bunk, her thighs spread and feet on the floor. She held out her hands palms up and when he grasped them she gently pulled him down so he was kneeling between her widespread knees. She lay back and propped herself up on her elbows, looking down the length of her body into his eyes.\n\n\"Taste me,\" she said in a quiet voice.\n\nHe looked down at her smooth mound and puffy slit. The scent of her arousal was sweet and he breathed it in deeply as he put his hands on her thighs and lowered his mouth to her sex.\n\nNot knowing where to begin, he pressed a hot kiss onto the rounded swell above her slit and a satisfied sigh escaped her lips. Encouraged, he extended his tongue and licked slowly over the soft skin, then dipped his head lower and ran his tongue along her labia. \n\n\"Fuck, that feels fantastic,\" she breathed. \"Keep going.\"\n\nHe used his thumbs to spread her lips, exposing her wet, pink flesh. He couldn't wait to sample it and dove in with his lips and tongue, lapping indiscriminately. \n\nShe sat up, gently cupped his face in her palms and guided his mouth higher, almost to the top of her slit, then held him there. He took the hint and focused his ministrations on the hard nub of pink flesh he could feel with his tongue. She sucked in breath, then let it out in a gasp.\n\n\"Right there...not too hard. Go easy at first,\" she whispered.\n\n\"Mmm. You're my new favorite flavor.\" He eased off her swollen clit, tickling and teasing instead of lapping at it.\n\nHe continued to savor the scent and taste of her arousal and to enjoy her mews and moans. Her breathing quickened until she was panting. Her pelvis began to lift, greeting his tongue, seeking greater contact.\n\n\"Faster...don't stop.\" Her hands gripped his hair urgently, pulling him into her sex. He obliged, swirling his tongue more rapidly over her clit, loving her groans, the writhing of her hips. \n\nThen the air was forced from her lungs in a half-moan, half-scream. The muscles in her abdomen began to spasm. Her thighs quivered and her whole body began to vibrate as an orgasm shook her. Finally she pushed him away and lay back on the bunk, breathing heavily. Jim stretched out beside her.\n\n\"You're...a quick study,\" she said between breaths.\n\nHe chuckled. \"A motivated learner, that's all.\"\n\n\"I hope you're not done. You still need to fuck the Curse out of me. Your mouth was heavenly but didn't take the edge off.\"\n\n\"You seem tired. Why not lie there and let me drive?\" He sat up and re-positioned himself at the foot of the bunk.\n\nShe smiled up at him, then spread her legs. \"All yours.\"\n\nAware that it would be their last time together, he was slow and deliberate. He settled between her knees and carefully slid his cock into her. She was soaked and dripping with his saliva and her delicious juices. Their coupling was unhurried and intimate and after he climaxed deep inside her they remained entwined for a long while, not speaking but savoring the closeness, the gentle touches and affectionate caresses.\n\nToo soon it was time to continue the journey. Their inevitable destination awaited them.\n\n**\n\n\"Somehow I figured it would take longer to unload,\" she said.\n\n\"Those guys knew their stuff,\" he said with a shrug.\n\nThey sat at a picnic table outside a rustic coffee shop on the shore of Carey Lake, just outside Hearst, sharing sandwiches and coffee. There was more chill in the air than was comfortable, but the fading evening sun and brilliant colors from the autumn leaves more than compensated.",
        "Conversation was strained, with both of them careful to dance around any mention of what would happen next. They chatted about the weather, the scenery, how great the coffee was...then lapsed into a dreadful silence that neither of them could find a way to escape.\n\n\"This...is hard,\" Lisa said, meeting his eyes for a moment and then looking away, over the water.\n\n\"No regrets. Meeting you is the best thing that ever happened to me.\"\n\n\"That's awful! And...beautiful. Thank you.\" He could see she was trying not to cry. \n\n\"It's true. I wouldn't trade the last 24 hours for another 20 years of my old life. Thank you, Lisa.\" \n\nWith nothing left to say and only tears in their future, Jim decided it was time.\n\n\"Follow me to the rig,\" he commanded in a quiet but firm tone, then got up and led the way, certain that she would follow. The Curse allowed her no other option.\n\nOnce in the cabin, he directed her to sit on the bunk and remain still and silent. He put her backpack next to her on the bunk, then removed the gun from the glove compartment and slid it into the side pocket of his coat. The expression on her face went from confusion to alarm, but she remained still. He saw the look on her face and chuckled.\n\n\"Just a small change of plans,\" he said, then opened a cupboard and pulled out an envelope. \"I've been saving for almost thirty years, with nothing much to spend the money on. So consider this bank draft to be my donation to the 'kill every Luther you can find' fund.\" He slid the envelope into her backpack. \"There's probably not a lot of money in what you do, after all.\"\n\nHe knelt in front of her and caught her eyes.\n\n\"Murder is messy, Lisa. Police, forensics, lengthy investigations. You've managed to get away with it so far, but someday it's going to catch up to you. But suicide? Nice and clean. No questions, no fuss. A rubber stamp in the coroner's office and that's that.\"\n\nHe rose to his feet and took a step back.\n\n\"Look at me.\"\n\nShe tilted her chin up. Her eyes were brimming, but she could utter no sound, and Jim was grateful for that. His own emotions were strong, and close to the surface, a heartfelt goodbye would only make him weepy as well.\n\n\"When I snap my fingers, you will take your backpack and you will go into the coffee shop. You'll smile pleasantly, order some dessert, take a seat inside and eat it. You'll order a refill of coffee. You will sit and drink your coffee until six-thirty, then you'll call for a cab to take you back into town. When you do leave, you will knock over the rack of postcards just inside the door, then apologize and help them clean it up. Everyone will remember you were there. An excellent alibi. Nod your head if you understand.\"\n\nShe nodded miserably.\n\nHe smiled, then bent and kissed her forehead.\n\n\"Goodbye.\" He snapped his fingers and stood aside while she climbed down out of the truck. He sat in the driver's seat and watched her walk into the coffee shop without looking back, then he fired up the engine and slowly pulled the rig onto the road.\n\n**\n\nHe didn't know much about guns. Didn't know the brands or the model names. Didn't know how to care for one or even how to load one. But he knew what everyone else knew - take the safety off, point the barrel, pull the trigger. For his purposes, it would be enough.\n\nHe checked his setup. The truck was on the side of the road, hazards on, reflective triangles laid out behind. The ignition was off, keys on the passenger seat. The interior lights were on to brighten the cab; dusk was creeping in and whoever discovered the scene afterward would need to be able to see what was going on. The windows were open; no point leaving an ungodly smell behind. Classic rock anthems played on the satellite radio - not too loud, but enough to provide some company in his final moments.\n\nHis suicide note was on the passenger seat, under the keys. Simple and to the point - he'd written it many times over the years in his head and knew just the tone he wanted to convey. Not bitter. Not melodramatic. Not angry at the hand that fate had dealt him. It was concise, no-nonsense and unambiguous - he was leaving this world because there was no good reason to stay.\n\nA shame to mess up the interior of a pretty good truck, for sure, but he'd spent twenty-two hours a day inside a truck for the last twenty-seven years or so. It seemed fitting to end his life there.\n\nHe sat on his bunk and set the gun down beside him, then held up the Polaroid of his family and really looked at it for the first time in years. He'd been a happy kid in a happy family. The Curse had come in his fourteenth year and made a mess of everything, but up until that point the memories were good - Christmas mornings in front of a decorated tree, prowling the neighborhood on Halloween, sandcastles on the beach. Good times. Leaving it all behind at fifteen had been hard - really hard. Staying would have been worse. Worse for him. Worse for his mother and two sisters. \n\nHaving heard Lisa describe the type of men she'd killed, Jim knew how things might have turned out - what he might have grown into - had he taken the easy road and stayed. Oftentimes, the hard decision was the right one. \n\nThe thought of Lisa buoyed him. In a different life, she'd have been the right woman at the right time. She had a tough job. He was glad he could lighten the load for her this way.\n\nHe flipped the safety off and hefted the gun. It was heavy. Solid. Serious business. He raised the barrel to his right temple and took his time finding the best angle. He paused and took a slow, deep breath.\n\nJim squeezed the trigger.\n\n**\n\nLisa sipped her coffee and checked the time on her phone again. Ten after six. He'd been gone for forty minutes. That was plenty of time, and she figured he'd either done it or had changed his mind and was fleeing south in his rig.\n\nShe hoped he'd gone through with it and pulled the trigger. \n\nIt would be heartbreaking to have to track him down again and put a bullet into him, but if she needed to, she would. No matter how soul-crushing it would be to knowingly kill a good man, the alternative was worse. To allow other women to suffer the way she had in Luther's power would be a greater injustice than the murder of just one man. \n\nDeath was quick. What she had endured from that sick bastard would be with her always.\n\nShe checked her phone. Six-twelve. Fuck!\n\nShe thought maybe time would speed up if she re-inventoried her backpack. A change of clothes. Wet wipes. Plastic bags. Baseball cap. Sixty-four dollars in cash. Thirty-six new doses of Lanzapine. And Jim's envelope - a bank draft for almost five hundred thousand dollars. \n\nShe stared at the figure, still not fully believing in the kind of man she'd spent the last two days with. Gentle. Earnest. Noble. The best man she'd ever known, by a wide margin. A man like that could be trusted to do the right thing. \n\nShe desperately hoped he'd pulled the trigger.\n\nShe stuffed everything back into her pack. Six-eighteen. Almost time to go. She took another sip. Then she heard it.\n\nThe roar of the engine. The rig. Loud and lumbering, rolling to a halt outside the coffee shop in the twilight.\n\nShe began to quiver. Wanted to get up and run to the door, but the damn Curse kept her seated. She could only await him.\n\nThe vehicle door slammed. Heavy footfalls approached on the gravel parking lot. She could make him out through the window. Already she recognized his outline and his gait. \n\nHe opened the door, stepped inside and nodded politely to the young man behind the counter. Jim walked over to stand in front of her table. She took another sip of coffee. Her muscles tensed.\n\n\"It's empty!\" he said, his tone outraged.\n\nLisa reached into her coat pocket and her hand closed over the bullets she'd removed from the clip that morning while he was in the bank. She felt she could trust him. She'd gambled that he was the kind of man who would rather die than betray his moral code. The kind of man she could trust with her heart, with her mission. But the stakes were so high and she needed to know for certain. Would he allow her to pull the trigger, when the time came?\n\nHe'd pulled it himself. Even better.\n\nShe smiled up at him, glad for his company. He grumbled, threw himself into the chair opposite her and signaled the counter for a cup of coffee. The future held promise. She and Jim had a lot to discuss."
    ],
    "authorname": "North200",
    "tags": [
        "semi-consensual",
        "romantic",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/truckers-curse"
}