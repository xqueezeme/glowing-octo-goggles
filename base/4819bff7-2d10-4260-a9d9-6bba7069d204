{
    "title": "How To Write Lesbian Sex Scenes",
    "pages": [
        "As the title implies this little article is intended for guys who wish to write lesbian themed sex scenes that appeal to women. While I claim no more expertise at it than other writers, I have been asked by a few people to look at their submissions in the category and one of these prevailed upon me to write this little piece. Thanks Rumple. \n\nThe first thing that strikes me when I read most submissions by male authors in the category or as a scene in a different category is the lack of emotive response the scene produces. \n\nThe next thing I notice is a hurried feel to the work, as if the author is in a race to get to some goal. \n\nThe final major thing is a lack of preparation. \n\nSo here are a few suggestions for guys who wish to include lesbian scenes in their works, but feel daunted by the prospect. Keep in mind, the suggestions here are based around broad generalizations. If you wish to include a lesbian scene in a work where it isn't the central theme, such as a BDSM or N/C story, then your overall theme may very well supercede the suggestions.\n\nLACK OF EMOTIVE RESPONSE: Women do read erotica for the simple expedient of getting off, but tend to look for something a little deeper. There is an emotional component to the sex act for women, which seems to be much stronger than most men experience. If you wish to write a good lesbian scene you need to tap into that emotion. Does this mean you need to write a novel or give a complete psychoanalysis of each character to get the response you want? No. What it does mean is you need more than \"I loved licking her pussy\" in the way of emotion. \n\nWhat is your protagonist feeling emotionally? Why? What is it about this particular woman that makes her attractive and desirable above others? You don't have to delve into romance novels or use flowery language, but you do need to convey a depth of feeling from your characters that goes beyond simple physical attraction. They don't necessarily have to be in love.\n\nMany emotions can drive people into one another's arms. Friendship, sympathy, fear, even dislike can be the motivators. The point is you need to get those motivators across to the reader. \n\nThe most vividly rendered and technically correct description of one woman giving another head, without letting your reader know the why and the feelings behind it will pale in comparison to a relatively clumsy and technically flawed description of the same act where the reader can feel the emotion. \n\nIt may cost you a few brevity points, but taking the space to let your readers know what your characters are feeling, beyond the physical sensations, will go a long way to making it a good scene. Building an emotional connection between your character and the reader is one of the most fundamental things you can do to improve upon your work. With a female audience it is even more critical. Most of the F/F erotica I have read by men is emotionally gelded. It may work well for a male audience, but it often leaves women cold.\n\nYOU CAN'T HURRY LOVE: Fitting hand in glove with the lack of emotional depth most male writers display is the rushed feeling of the piece. That's also a hallmark of many masculine attempts at writing lesbian erotica. In regular heterosexual (and I assume gay male) erotica there is a definite goal involved. You, as author, are moving the story to get tab A into slot B. In regular erotica this is desirable, as the lion's share of pleasure for the male character will come from penetration by or manipulation of one particular organ. Foreplay is only necessary to get this organ at attention, so to speak. \n\nIn the case of lesbian erotica such concentration on one organ or aspect of love-making is disastrous. The pacing of such scenes will leave most female readers feeling cheated more often than not. Jumping straight from disrobing to the breasts or pussy will cause many of them to simply back click and find a better story. \n\nAlmost every part of a woman's body can become erogenous with proper stimulation. When writing lesbian themed scenes be aware of this. A shoulder, the elegant line of her neck, her ankles, knees, even the inside of her elbows can be stimulated and produce delicious sensation. I am not saying avoid the breasts or pussy, but I am saying that the scene isn't a race. First one to the clitoris is not the winner in most lesbian erotica. In fact, quite the opposite is true.\n\nPace your sex scene with an eye to exploration, titillation and slowly driving someone wild with desire. If that means taking a paragraph to describe the kiss rather than a sentence, then you're on the right track. Descriptive prose can do much to raise the tension in your reader, but if you concentrate exclusively on \"the erogenous zones\" you will be missing a lot of what sex between women is usually about. The first orgasm isn't the best with most women so there is no rush to get to it. It is a precursor, an appetizer if you will. \n\nSticking with the food metaphor, if you are sitting down to a seven course meal you don't gorge yourself on the soup. You taste it, perhaps eat enough to take the very edge off your hunger. Lesbian sex scenes should be the same. Each segment taking a little more off the edge until you reach the dessert, where both partners are sated for the evening. \n\nLACK OF PREPARATION: The third thing I mentioned was lack of preparation. This is perhaps the worst failing I see in male authored lesbian erotica. Tests and polls show that most women are, at the very least, bi-curious. That does not give you carte blanche to throw your two characters into a sixty-nine. Suzy soccer-mom and her best friend Betty are not going to be sitting in the kitchen one morning, decide they are bored and have a go at each other. It doesn't work that way in reality and if you write it that way, it's going to go over like a lead balloon with most female readers. Obviously, if both partners are experienced it becomes less of a concern, but that expedient has its own pitfalls.\n\nIn reality, there are extremely strong societal norms that must be taken into account. It takes more than just some time alone with your best girl friend. There is a significant amount of thought, consideration and usually a considerable amount of fantasizing and wondering that have gone on before the right time, right place and right woman come together to make trying it the first time a reality. Even then, there is generally coaxing, hesitancy and false starts along the way.\n\nUnless you are writing a screenplay for a porn flick there is no \"obligatory lesbian scene\". You, as author have to set up what's happening and why. You can remove this problem by having both partners experienced, but in doing so you are putting a lot more faith in your ability to provide excitement via description. Also with experienced partners you must keep in mind each will have developed her own techniques and you had better know how one woman pleases another or you characters will come off as phony.  \n\nThere is a trade-off in degree of experience for your characters. While the combinations are limitless, there is a tendency among male authors to have at least one character with limited experience and thus allow themselves more leeway for writing something they haven't experienced personally.\n\nAssuming then, that you are working with at least one relatively inexperienced character we come back to motivation. This facet of writing a believable and enjoyable lesbian erotic scene is actually better handled before the first piece of clothing hits the floor. Far too often, to attain the somewhat forbidden nature of the act, authors present one of the participants as totally na\u00efve. Poor Suzy soccer \u2013mom, totally na\u00efve and innocent is seduced by her wicked lesbian neighbor. Alcohol or drugs are often used to provide a plausible explanation for her actions. They aren't.\n\nA far better approach is to make Suzy, just a little less na\u00efve. A subtle hint dropped earlier in the story, about that roommate in college or about her attraction to a certain type of woman, plants the seed in the reader's mind. Thus, when your characters do get physical it requires far less suspension of disbelief from the reader, since she has already been prepared to accept that he character may have an interest. You may still capture the hesitancy, strangeness or surreal quality, mental anxiety or whatever you are going for on an emotional level, while making the interaction more believable on the whole. \n\nIN OTHER WORDS: When you are writing a lesbian scene be sure to reach for an emotive response. Pace the scene with more emphasis on the arousal level than on reaching the climax. Make sure you have explained how these two people, came to be together in this time and place, and what motivation drove them to it. \n\nJust a few other general notes:\n\nPRONOUN PROBLEMS: Be careful with pronouns. When writing two female characters you will find the pronouns she and her are difficult to use. Remember the reader cannot see into your head. \n\nWhen you say her tit, it may be blatantly obvious to you that you mean Suzy's tit, but to a reader it could be either Suzy's or Betty's. Be prepared to use given names more or to use descriptive modifiers such as the blonde's tit or the brunette's tit to denote which character you are talking about.\n\nSTRAP-ON STRATEGIES: If one of your partners is using a strap-on or similar sex toy keep in mind the action is not necessarily natural. While a man, once inside, can let his natural instinct take over, a woman has to actually think about what she is doing, at least at first. \n\nWhile on the subject of strapons it is true that many butch women enjoy having their cocks sucked. If you intend to include this in your scene don't forget the fact that such stimulation is primarily visual. The only real sensation comes from her partner pressing the base of the toy against her clitoral hood. \n\nWriting lesbian sex scenes that women can enjoy is not beyond the ability of most male writers. Just because you have never experienced some of the things you are describing does not mean you cannot do it in an enjoyable way. The key is not in your descriptive prose nor in the fact you don't know what it feels like to have someone's finger in your pussy. The key factor is your mindset. \n\nWhen writing erotica for men, you are most often shooting for a very visceral response. For most women, that visceral response is inextricably tied to an emotional response. If you concentrate on establishing the emotional connection, between reader and character, you will find the actual explicit descriptive work is not as important. Thus not knowing exactly what a woman feels when she orgasms becomes less important to the work's overall enjoyability than making sure the reader knows the emotions she is experiencing.\n\nHappy writing. "
    ],
    "authorname": "Colleen Thomas",
    "tags": [
        "female readers",
        "emotional connection",
        "lesbian scene",
        "women enjoy",
        "sex scenes",
        "lesbian sex",
        "time place",
        "breasts pussy",
        "reader",
        "character"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-write-lesbian-sex-scenes"
}