{
    "title": "Just Say No",
    "pages": [
        "Author's Note:\n\nThis story could fit equally well either here in the mind control category or in the BDSM category. As more mind control stories contain elements of BDSM than the reverse I've chosen to put it here. Anyone who isn't comfortable with a large helping of sadomasochism with their mind control should probably hit the back button now.\n\nAdditionally, please be aware this story takes place in present-day New York and has no relation to my other work. Don't look for possible connections. They aren't there. This is a complete story in and of itself and is not part of a larger work. \n\nFinally, in case it isn't perfectly clear, all characters in sexual situations are eighteen and older.\n\n*****\n\n<p align=\"center\">&mdash; 1 &mdash;</p>\n\nI barely noticed when it started.\n\nIn fact, I would have forgotten immediately if it had been anyone other than Cassie. Her apartment was in the same building as mine, on the same floor. We didn't speak much, but it's hard to ignore anyone that beautiful. Especially when she lives down the hall.\n\nThat day, the elevator was packed and I was standing directly in front of her when it chimed. I was distracted, reading a work email on my phone. Or rather, trying to. I hate that thing, but unfortunately it's standard issue for everyone at my firm. This time I was, once again, wrestling with how to tap the screen in just the right way to make it do what I wanted.\n\nI hadn't realized we had arrived at my floor until I heard her voice from behind me.\n\n\"May I?\" She gestured at the open elevator in front of me.\n\nFeeling rather sheepish for being in the way, I stepped out into the hallway, allowing her to exit.\n\nInstead of walking off immediately, she gave me a brief, expectant look. There was an awkward moment as we stood staring at each other in the hallway.\n\nCassie appeared annoyed. I assumed she wanted an apology for my hesitation, so I offered one: \"Sorry, I was distracted.\"\n\nShe opened her mouth as if to say something further, then quickly changed her mind, turned around and walked off purposefully.\n\nI really had a way with the ladies, didn't I?\n\nI went back to my one bedroom bachelor pad, ordered some Chinese food, and settled in with a good book for the rest of the evening. This is what I did most evenings, which probably explained why I was still single.\n\nI've been informed by women that I never relax, and that this is a problem. Evidently I'm \"too focused on whatever is in front of me to be open to all the world has to offer,\" whatever that means.\n\nIn fact, I find a nice, quiet conversation over dinner to be quite relaxing. However, I do not appreciate the atmosphere of a crowded night-club with gaudy decor and music so loud I worry about the long-term effect on my eardrums. I've heard there are women out there who share my aversion to such places, but unfortunately I kept running into the other sort.\n\nAs a result, I wasn't seeing anyone, and I wasn't actively looking.\n\nThree days after the incident on the elevator, at about nine in the evening, there was a knock on my door.\n\nI could see Cassie through the peephole, shifting her weight from one foot to the other. She seemed agitated, nervous. Her dark, straight, chin-length hair was somewhat frazzled. A few strands hung down in front of her face.\n\nWhat really caught my attention, however, was the short dress she was wearing. Cassie's curves were substantial and therefore noticeable regardless of her attire. Nevertheless, her assets weren't merely noticeable in that dress. They were arresting. In spite of the high neckline, it was obvious she wasn't wearing a bra. Her nipples were erect and clearly visible beneath the thin, light gray material.\n\nI opened the door quickly and glanced down the hallway in both directions to confirm there was no one with her. This was odd and I can be a bit wary when confronted with unusual situations. I wanted to rule out the possibility this was some sort of ambush.\n\nThe hallway was empty, except for my neighbor. Cassie was definitely alone.\n\nShe gestured towards the interior of my apartment. \"May I?\"\n\nI opened the door further and waved my arm in a sweeping motion to indicate that she should come in.\n\nShe didn't move. Instead, she sighed briefly, raised an eyebrow and repeated herself. \"So, may I?\"\n\nThis was the second, no the third time Cassie used those exact words. That's what she'd asked on the elevator too. This was strange, and getting stranger.\n\n\"What is this? Let me guess,\" I said sarcastically. \"You're a vampire, and need a more explicit invitation?\"\n\nCassie rolled her eyes. She took one step forward across the threshold, then took another step back. Maybe she hadn't caught the sarcasm. \"Vampires aren't real. So, now. May I?\"\n\n\"Enter, then,\" I said. \"Make yourself at home. If you're not a vampire here to suck my blood, what do you want?\"\n\nCassie threw up her hands in frustration as she stormed in to my home. \"Gahh! Why do you have to make this so hard?\"\n\n\"What?\" I was thoroughly confused.\n\n\"Enter? Who says enter, like a goddamn robot? Enter and I'm sorry? What am I supposed to do with that?\"\n\n\"I'm not sure I even understand,\" I trailed off, bewildered. I had no idea how to handle a gorgeous woman I hardly knew hurling incomprehensible criticism at me.\n\n\"You had plenty of options: Fine, sure, go ahead, or, even a good old fashioned yes! That's it. Simple. Just say yes, then I'll stop bothering you. I promise. So, when I ask: May I? You say. . .?\"\n\nShe looked at me hopefully.\n\n\"Are you on drugs?\" I asked. \"If this is some sort of OD situation, I can take you to the hospital.\"\n\n\"Aargh!\" She groaned. \"No, I'm not on drugs.\"\n\n\"You're acting like you're on drugs.\"\n\nCassie put her hands on her hips. \"Do you want me to walk a straight line, or touch my nose or something?\"\n\n\"I know the police do that when they think you're drunk,\" I said. \"Does that test for other drugs too?\"\n\n\"How should I know? I don't do drugs, and I'm not a cop.\"\n\n\"Right.\" If she hadn't been giving me a truly amazing view of her body, I probably would have kicked her out at that point.\n\nAs it was, I let my eyes wander, and waited for Cassie to start making sense. Her impressively large chest bounced in fascinating ways as she plopped herself down on my couch. Sitting down, her short dress crept up, showing off even more skin on those long, gorgeous legs.\n\nAfter a pause and a few more long sighs, she started talking. \"Look, you've heard of hypnosis, right?\"\n\n\"Hypnosis.\" I was, dubious. That sounded like bullshit. \"Really?\"\n\nA sudden thought occurred to me. Maybe there was no ambush outside my door, but&mdash; \"Wait, is this some setup for a reality TV show or something? Are you recording me?\"\n\n\"What? No, I'm not recording you. We could do this the easy way, but no, you want an explanation. So, fine, you get an explanation.\"\n\nI was still suspicious. \"Where's your phone? Show me you don't have a recording app running on your phone.\"\n\nI wouldn't have the first clue how to check whether there was an app on my phone for that, let alone hers. Still, if she was recording something, calling her on it would probably make her think twice.\n\n\"Dayyyumm.\" She drew the word out. \"Paranoid much? What are you, a lawyer?\"\n\nI stared back, saying nothing. She probably intended that question to be rhetorical.\n\n\"Oh my god. I should have known. Of course you're a lawyer. What else?\" She let out an exasperated sigh, then continued.\n\n\"If you must know, my phone is sitting on top of my night stand in my bedroom. Right now, I have a video on Redtube loaded up to just the right spot so it will be all ready when I get back. I didn't want to jostle it while I ran over here to get what I need, which was supposed to take all of thirty seconds. Yes, Redtube. I watch porn. Is that TMI? Too bad, you shouldn't have asked. Actually, you know what?\"\n\nThe mental image of Cassie enjoying herself, watching videos online, was eliciting a powerful response in my pants. However, given the irritation I heard in her voice, I had the impression she wouldn't be staying long. That was probably just as well, given that I didn't really want to let her see my substantial erection.\n\n\"Let me guess, you're leaving?\" I asked, as I walked behind a table to keep my lower half out of view. \"Feel free to show yourself out.\"\n\n\"Um. No?\" The way she said it seemed to carry the unspoken subtext: don't be ridiculous. \"I was going to say, if you're really that worried that I'm bugged, you should come over here and pat me down. I won't bite. Promise.\"\n\nShe stood up and raised her hands over her head. Her arms pulled her breasts up with them, the fabric of her dress hugging them tightly. Her nipples were even more prominent than before, and I was pretty sure I could now see her aureoles though the thin material as well.\n\nI stood there stunned, like a deer in headlights. This was escalating quickly, and I didn't even know what \"this\" was. My best theory was that she'd lost a bet, or was here on a dare. That would explain why she was trying to feed me some ridiculous story involving hypnosis.\n\nWhen I didn't immediately move, she reached down with one arm and used it to cradle her breasts, squeezing them together, emphasizing them. \"Oh, get out from behind there. Fair's, fair. You already got an eyeful of the twins. No need to be ashamed of that bulge.\"\n\nWell, she'd noticed. I stepped out from behind the table, and approached her slowly, unsure of what I wanted to do next.\n\nOn the one hand, she was acting really weird. On the other hand, there was clearly an opportunity here. I wasn't sure what was going on, but the subject of my frequent late-night fantasies was now standing before me wearing a dress that could have been made out of tissue paper. I was reluctant to forcibly eject her from my apartment.\n\nI had another thought. \"Stay right there,\" I told her.\n\n\"First it's show yourself out, now it's stay right there? Make up your mind.\" In spite of her words, she didn't move towards the door. Instead, Cassie merely raised her lowered arm back above her head, and spread her legs a bit further apart. She was clearly trying to communicate that her earlier invitation was still on the table.\n\nWhat I wanted was in my briefcase, which I'd left in my bedroom. Cassie was still standing there half a minute later, when I returned.\n\n\"If you're going to talk nonsense, I think I do, in fact, want to record this. Only I'll keep the tape, to make sure it doesn't end up on the internet.\" I placed my cassette tape recorder on the bookshelf next to where she stood and hit the record button. \n\n\"Seriously?\" She still hadn't moved. \"Has anyone ever told you that you need to relax?\"\n\nThe metaphor my most recent ex preferred involved a stick, my ass, and the futility of extracting the former from the latter. It would be fair to say that Cassie's observation did not come as a new and shocking revelation.\n\nI tried not to let my annoyance show. \"I get a little nervous when things seem too good to be true.\"\n\nShe didn't move, but she smiled. It was dazzling. \"Too good to be true? Flattery will get you everywhere, handsome.\"\n\n\"Will it?\"\n\n\"Absolutely. If you're not going to come over here and search me, why don't I just take my dress off and you can see for yourself that I don't have my phone with me. And since you're recording this, I'll ask you whether that might make you uncomfortable. Would you mind if I slip out of this dress?\" Cassie reached for the back of her dress, ready to unzip it. \"Do I have your permission?\"\n\nThe gleam in her eyes suggested she was genuinely excited at the idea of stripping for me. I was also pretty sure her behavior had nothing to do with her phone.\n\nNeedless to say, this was highly unusual. Beautiful women had a tendency not to barge into my apartment and volunteer to get naked. No, not volunteer, but ask permission. Yes, I'd heard of affirmative consent, but this was ridiculous.\n\nThat's when it clicked: asking permission. That's what she'd been doing. The way she phrased it was important. Each time, she implied she was asking permission to walk off the elevator, to walk into my apartment and now to take off her clothes, but it was open ended. She hadn't asked \"May I come in?\" or \"Do I have permission to take off my clothes?\" Instead, it was \"May I?\" and \"Do I have your permission?\"\n\nShe wasn't really asking permission for any of those things. She was asking permission for. . . what? Well, something else.\n\nIt was obvious now that I considered what she'd been saying. Cassie had more or less explained when she first walked in, and I hadn't picked up on it. In retrospect, that probably had something to do with all the blood rushing to my crotch rather than my brain.\n\n\"Well?\" Cassie demanded, impatient. \"May I?\"\n\nThere it was again, the same open-ended question. That was probably the essence of the bet or dare that brought her here. She needed a clear, affirmative answer. Cassie was trying to distract me with her see-through dress and the strip tease, trying to put me in an agreeable mood.\n\nWhy me though? That, at least, was obvious enough. I was the guy with a stick up his butt.\n\nWhen people describe me, they rarely refer to my height (average), my eyes (brown), or my hair (also brown). Even my name is average. Instead, they say I'm \"intense.\" You want Bob? Oh yeah, he's the guy with the intense look over there, you can't miss him. Whoever put Cassie up to this, probably assumed that getting my permission would be a challenge.\n\nIf I answered her with an unqualified 'yes', she wouldn't take anything off. She would almost certainly leave immediately.\n\nI chose my words carefully. \"Take off your dress if you want. Beautiful, naked women are always welcome in my home. But, if you want permission for something else, you're going to have to be more specific.\"\n\nI saw the calculation flash through those stunning gray-green eyes. I was onto her and she knew it. I had her in a corner, though. She couldn't refuse without an awkward explanation and she needed something from me.\n\nShe must have reached the same conclusion. With a slow, deliberate motion, she unzipped her dress, shrugged off the straps and let it fall around her ankles. Not only wasn't she wearing a bra, she wasn't wearing any panties either. Cassie's small, neatly trimmed landing strip and delicate lower lips were now on full display.\n\nI got an even better view of her ass when she bent over to pick up her dress from the floor. She turned around as she did so, putting on a show for me.\n\nCassie stood again and tossed the thin piece of clothing in my direction. \"Go on, search it.\"\n\nIf she still wanted to maintain that pretense, I wasn't going to argue. I took the garment and checked for lumps that could be a phone or recording device. To my complete lack of surprise, I found none. The only thing I did find was a set of keys in a side pocket.\n\nI now had her dress and I had her keys, both things she would need in order to return to her apartment. I watched her as she stood calmly in my living room, entirely nude, entirely at my mercy. She said nothing, waiting. I really could do anything I wanted at this point, couldn't I?\n\nI slipped the keys back into the dress pocket, and tossed it back to Cassie. \"Nope, nothing here. You can put it back on.\"\n\nShe frowned. It was obvious she hadn't expected that.\n\nCassie clearly wanted to get this thing over with tonight, to seduce me if necessary. Then, I could look back on tonight as that one weird time when my hot neighbor got frisky for some bizarre reason. It would feel like most of my romantic entanglements: a brief bout of pleasure at the ineffable and unpredictable whim of someone else.\n\nNo, thanks.\n\nOn the other hand, the situation had me very curious. I wanted a real explanation. My best chance of that was to draw this out and fully think things through.\n\nI removed my glasses briefly and pinched the bridge of my nose before replacing them. \"I just realized, it's getting late,\" I told her.\n\n\"Last I checked it's before nine thirty.\"\n\n\"I have to be work at seven tomorrow, which means I have to get up at five.\"\n\n\"You've got to be kidding me.\" Cassie was still naked, and hadn't moved to pick up her dress from where it had fallen beside her.\n\n\"I really don't have time for whatever this is tonight. You want to explain? Fine. Tomorrow evening, six-thirty sharp. Knock on my door. We'll walk down to La Campagna on the corner, and you can start making some sense. You like Italian?\"\n\nUncertainty rippled across her features. \"Yes.\" Her voice was quieter than before.\n\n\"Good. Tomorrow, then.\"\n\nCassie wordlessly began to put her dress back on. For the most part, she kept her eyes downcast but I caught her glance my way a few times. She seemed to be trying to work out what I was thinking.\n\nAs she walked towards the door to leave, I called after her. \"Oh, and two more things.\"\n\nShe turned back, wary but attentive.\n\n\"One. If you want my help, don't lie to me. I'll listen to what you have to say, but it better be the truth. You were trying to feed me some bullshit about hypnosis earlier. You might want to rethink that.\"\n\n\"But&mdash;\" She started to protest, before I cut her off.\n\n\"Save it for tomorrow. And, two. Try not to dress like a slut this time, huh?\"\n\nI heard her sharp intake of breath. She answered so quietly it was barely audible. \"Yes.\"\n\nThen she left.\n\nI wasn't entirely sure why I chose to say that. It was a split-second decision. What was I thinking, throwing out an insult?\n\nMulling it over that night, as I headed to bed I decided it was because I wanted to send a message: I wouldn't be bullied or bribed into doing whatever she wanted with an offer of sex. I probably could have been more tactful, but the insult would discourage that. She was the one who knocked on my door wearing a skimpy dress and no underwear. She involved me in her silly dare or whatever it was, not the other way around. I could say whatever I wanted.\n\nBesides, La Campagna wasn't the sort of place you went in jeans and a t-shirt. I could keep my suit on after work, but it wasn't a bad idea to make sure my date would also be dressed appropriately. \n\nIf she even bothered to show up, that is. Women tended to react badly to being called sluts.\n\n<p align=\"center\">&mdash; 2 &mdash;</p>\n\nThe following day, I was mildly surprised when there was a knock on my door at precisely six thirty.\n\nShe wore an ivory shirt with a dark gray jacket and matching skirt that ended well below her knees. Her outfit would have fit right in at my very conservative firm. Yet, on her, it was just as stunning as the skimpy dress she wore the night before.\n\n\"You're looking lovely this evening,\" I told her.\n\nShe gave me a shy smile. \"Thank you.\"\n\nWe walked to the restaurant in an awkward silence. I assumed she was gathering her thoughts, deciding on the best way to tell her story. I could have peppered her with questions, but thought better of it. There was no reason not to let her explain in her own time. I could be patient.\n\nCassie finally broke her silence after we were seated at the restaurant. \"Get out your phone,\" she said.\n\nI was a bit taken aback. \"I don't have it with me. It's for work, and I wanted to give you my full attention.\" I gave her a smirk. \"I'd return the favor from last night and let you search me, but I don't think this is an appropriate place for that.\"\n\n\"Oh. Here then,\" She reached into her purse, pulled out a phone and slid it across the table. \"Take mine.\"\n\nI tentatively took the black rectangular thing. It wasn't an iPhone, like I had from work. Probably the other kind of phone. I knew there were two. At least two. Anyway, it was the kind I'd never used before.",
        "\"Google 'Jared Lamar' and 'hypnotism,'\" she told me. \"Go on, the phone's not locked. I want you to see I'm not making this up.\"\n\nMy heart rate went up instantly. I know what to click on my laptop to bring up Google. I knew it was possible to do that on a phone, but I'd never bothered to learn how. My phone was for making calls and, if I was feeling adventurous, checking email.\n\nI slid the Cassie's phone back across the table. \"You do it. It will be faster. I'll probably either spell it wrong or find the wrong Jared Lamar, anyway.\"\n\nShe shrugged and took the phone back. The way her fingers moved I could tell she was one of the technologically gifted.\n\nWhen she turned the phone back to me, it showed an advertisement for \"Jared Lamar, Stage Hypnotist Extraordinaire.\" There was a picture, and show times listed for a casino in Las Vegas.\n\n\"Okay.\" I didn't know what she was getting at, but I waited for her to continue.\n\nShe took her phone back, jabbed at it some more, then flipped it around again. This time it was a picture of her and Jared, arms wrapped around each other.\n\n\"He's my ex,\" She said. \"Are you with me so far, or do you still think I'm bullshitting you?\"\n\n\"Well,\" I hesitated thinking about it. \"I'll believe you dated this guy at one point, and I'll believe he's doing these shows. That doesn't mean I think hypnosis is real. No one is getting controlled, it's just social pressure. If you tell someone they're hypnotized and they're up on stage, it's more awkward if they don't jump around and flap like a chicken, or whatever. No one wants to be the kid in the Emperor's New Clothes that points out the whole show is a sham. Besides, this says he's in Vegas. That's a long way from Manhattan. How long ago was this?\"\n\n\"We broke up six months ago,\" Cassie said. \"That's when he moved to Vegas. I offered to move with him, but he made it pretty clear that when he said he wanted a fresh start he didn't just mean a different city.\"\n\n\"He dumped you?\" I asked, surprised. \"So he's not just a charlatan, he's an idiot.\"\n\n\"He's not a charlatan,\" She shrugged. \"At least, he tries not to be.\"\n\n\"Tries?\" That word didn't seem to fit the context.\n\n\"Before you start quoting Yoda at me, think about it. Imagine you're a stage hypnotist. How can you tell for sure if any of your subjects are faking it? You see them for one night, and then they're gone.\"\n\nShe had a point. \"Fine,\" I acknowledged. \"You were dating a guy who believes he can hypnotize people. So what?\"\n\n\"He doesn't just believe&mdash;\" she stopped mid-sentence, frustrated. \"You know how there are music geeks who are obsessed with music and stereo equipment? And computer geeks are obsessed with computers and code? You might call Jared a hypnosis geek. He does everything he can to get it right. It's not just a way to make money to him.\"\n\nI crossed my arms across my chest. \"My firm recently had a case where the head of an old, wealthy family started believing he was the Greek god Hermes. His children hired us to help get him committed. That guy was really into being Hermes, swift-footed messenger of the gods. He still needed a wheelchair to get around.\"\n\n\"And what if you'd seen him leap out of the chair and run a ten second mile? I know Jared's for real, because he I let him practice on me.\"\n\nWe were interrupted by the appearance of our waiter. Cassie ordered the chicken Parmesan and a glass of white wine, while I selected the veal and opted to skip any alcohol. I wanted to keep my wits about me.\n\nAfter the waiter left, I continued. \"Let's say I believe you. How does that explain last night?\"\n\n\"I&mdash;\" She hesitated, looking down at the table. \"I have a bad habit. I asked Jared to help. You can't be hypnotized to to do something that you genuinely don't want to do, but curing a habit? That's real. That works. Only I wasn't ready to give it up altogether. Instead, Jared hypnotized me so I had to ask his permission first.\"\n\nI had an idea where this was going, but I still needed her to clear up a few details. \"If you need his permission, what did you want with me?\"\n\n\"When Jared left, he put me under again, and changed it,\" she said. \"It wasn't a bad breakup, he said he wanted to let me down gently, so he did what I asked. I still need permission, but not necessarily his. Just someone. Anyone. It doesn't have to be the same person each time. But, if I ask someone, I can't ask anyone else until that person says yes. I don't think he intended that, but that's how it worked out, how my mind is working. So now I'm stuck.\"\n\nShe was earnest. At the very least, it seemed like she believed it. Further, if she believed it, then it was by definition the truth, wasn't it? The whole crazy claim hinged on what what was going on inside her head.\n\nI think part of the reason I was starting to believe her about the hypnosis was because bad news is easier to believe than good news. My mindset went from she's spinning a crazy but entertaining story, to oh shit, she's just like Ms. Henderson.\n\n\"That day on the elevator, you were asking my permission.\" I surmised. \"You were trying to make me think you were asking to leave the elevator, when really it was this. Right?\"\n\nIt was obvious to me what habit she was referring to. I probably should have just said the word out loud. I hesitated, because even the thought of Cassie, this beautiful woman before me, smoking turned my stomach.\n\nCassie had blithely dismissed doing drugs the previous night, and she'd just ordered a glass of wine herself. That narrowed the possibilities. Further, she'd mentioned she had porn queued up before visiting me. Smokers liked to practice their filthy habit after getting off, didn't they? Not that Ms. Henderson ever got off in my presence, thank goodness. The thought of that was stomach turning all by itself, even without the cancer sticks.\n\nCassie nodded. \"Right. I've found this workaround. I don't have to explain why I need permission. You were there on the elevator, and it seemed like an opportunity. You believe me?\"\n\n\"I believe that you have a filthy, disgusting habit. But you already know that, don't you? That's why you asked for this.\"\n\nHer mouth dropped open, and her eyes went wide as she spluttered in surprise. \"I don't&mdash; You&mdash;\" She stared at me in silence for for a moment, then dropped her eyes, breaking eye contact and then finally answering in a much softer voice: \"Yes.\"\n\n\"Believe it or not I was listening last night, and I'm not stupid,\" I told her.\n\n\"You realize it's not the porn, right? I'm not addicted to porn. It's what comes after.\"\n\nI hadn't even considered that possibility. Could women even get addicted to porn? Either way, she was confirming my deduction. \"I know. Calms your nerves, does it? Takes the edge off? Helps you relax? I've heard it all before. You expect me to approve of that?\"\n\nShe kept her eyes down, staring at the table in front of her. Again, her response was barely a whisper: \"No.\"\n\nWhen I was seven years old, over two decades ago, I had a babysitter. She was an acquaintance of my parents, her name was Anita Henderson, and she was the most revolting human being it has ever been my misfortune to meet.\n\nMrs. Henderson smoked, not so much like a chimney, but rather like a forest fire. Possibly an active volcano. Her home was perpetually enveloped in a toxic, nauseating miasma of tar and nicotine. Everything in there was covered in countless layers of yellowish brown residue, and that very definitely included her own hair, teeth and fingernails.\n\nThat wasn't the worst part, though. The worst part was what happened when she needed to run an errand. She would force me to ride along with her to the bank or the post office or wherever she needed to go. As she drove, she puffed away on her vile Marlboro Reds with the windows up. Ms. Henderson would crank up the windows, crank up Billy Joel on the radio, and trap me in what can only be described as an earthly embodiment of Hell. \n\nTo this day, the thought of being around someone smoking makes me physically ill. I even start to throw up in my mouth a little bit every time I hear a song by Billy Joel.\n\nI wanted to communicate to Cassie just how inappropriate her habit really was. In my experience, smokers could be willfully oblivious.\n\n\"Tell me something,\" I said. \"Do you hide it from your coworkers? Do they know about your little problem?\"\n\nHer demeanor changed in an instant. She was defensive, angry. \"My clients don't know shit about me, and I like it that way.\"\n\nThis time it was my mouth that fell open. I was surprised at the instant shift in her behavior more than what she said.\n\nCassie must have assumed I'd jumped to the wrong conclusion. \"Get your mind out of the gutter!\" she snapped. \"I'm a freelance developer and I work remotely. Android apps, mostly, though I'm branching out into iOS.\"\n\nI raised my hands in a placating gesture. \"Hey, I don't care, really. I was just asking whether your habit is something you're proud of. You asked your ex for help for a reason, right?\"\n\nShe seemed to deflate all at once. \"Sorry, sorry. It's a reflex. You want to know why I work remotely? I did an internship my last summer in college, and that's the first and last time I've ever worked full time for a big company. Maybe you've heard stories about how women don't get taken seriously in the tech industry? Trust me, they're all true. I've found freelancing is the best way to get away &mdash; physically, away &mdash; from that bullshit. Even then, it's still there, waiting under the surface to bite me in the ass. Let's just say I can be a bit sensitive on the subject.\"\n\n\"Well, let me say, for the record, that I'm sure you're good at your job. Two of the three partners at my firm are women, and they're scary smart. I'm all for gender equality in the workplace.\" I hesitated. \"It's just&mdash;\"\n\nI saw her eyebrows go up, and her facial expression shift as if to warn me to rethink finishing that sentence.\n\nI kept going anyway. I already thought of her as a smoker, which drastically reduced my interest in any sort of relationship. I really didn't feel the need to hold back. \"I don't have a Facebook page. I don't tweet, and I don't use Snap-gram or Insta-whatever. Call me old fashioned, but I like to use my phone to talk to people with my voice. I'm sure you're really good at what you do, but are you really happy working with all that stuff? It all seems like such a waste of time and energy. And yes, I'd tell Mark Zuckerberg the exact same thing, to his face.\"\n\n\"Hmm.\" Cassie's anger had dissipated, but she wasn't ready to drop the subject. \"An equal opportunity Luddite then?\"\n\nIt was my turn to be defensive. \"Hey, I'm not a Luddite. I'm all for curing cancer or going to Mars. I just don't think we need any more apps and ridiculous internet media companies with equally ridiculous names.\"\n\n\"You have a problem with what I do? That's funny,\" she said. \"You're the lawyer. Quick, what do you call twenty-five attorneys buried up to their chins in cement?\"\n\n\"I've heard that one. Not enough cement?\"\n\n\"Not nearly enough cement. There are a hundred times that many lawyers in New York alone. Pot, meet kettle.\"\n\nShe was glaring at me, but I had the impression she was enjoying the verbal sparring.\n\nI offered her an opening, though I let a bit more sarcasm creep into my voice than I really intended. \"Why don't you tell me more about what you do? How are you working to better humanity?\" \n\nCassie ignored, or at least pretended to ignore, the barb. She eagerly started explaining what she was working on, which is what I expected. Most people like talking about themselves.\n\nNeedless to say, I wasn't impressed. The app for a local food delivery service and the game she was working on seemed just as lame as every other useless thing that came out of Silicon Valley in the last two decades.\n\nHer job seemed a safer topic than her addiction, though. I could nod and pretend to follow her talk about tech, but there was no way I could hide my passionate hatred of tobacco. I didn't want to inadvertently cause a scene at a restaurant as nice as La Campagna.\n\nCassie was still talking about her work when our food arrived. She continued throughout dinner as I politely listened and tried to work out how best to explain why I was never going to agree to give her the permission she wanted. At least the veal was exceptional.\n\nAs Cassie finished the last of her chicken, she gulped down the last of her wine, practically chugging it. \"I think we may have gotten off topic. We were here to talk about my problem, weren't we?\"\n\nHere it was then. \"I thought we already had.\"\n\n\"I still need your permission.\"\n\nI sighed. \"You're asking the wrong guy. Go ask someone else.\"\n\n\"I already explained,\" she said, \"I can't. I asked you, so now I need an answer from you.\"\n\n\"And you already have my answer. I said no.\"\n\n\"That isn't&mdash;\" Cassie didn't bother finishing the sentence.\n\n\"It isn't the answer you were looking for? Too bad. Not my problem.\"\n\nShe paused, apprehensive, before replying. \"What do you want?\"\n\nI was saved from answering immediately, as the waiter came by with the check, which I paid.\n\nThe problem was circular: I would never be interested in someone who smoked. If I said yes, that's exactly what she would be. Yet, she had obviously intended to quit. She was smart, drop-dead gorgeous and the whole tech thing wasn't really a deal breaker. If I said no, she might be worth seeing again, but the chances she would still be interested under those circumstances were slim. If I said yes, she would become what I hate, and there would be no point in spending time with her.\n\nGiven that I couldn't have it both ways, I decided that turning her down made the most sense. If nothing else, it would be a tiny blow to the tobacco companies. One less customer. That, and this had a slimy sex-for-drugs vibe to it, which didn't sit well with me. \"What I want is to make sure someone as smart and beautiful as you doesn't fall prey to this. I don't want something from you, I want this for you. You understand?\"\n\nAs soon as I said it, I realized how condescending that sounded. Luckily, Cassie didn't seem offended. She blushed a little, and her voice once again retreated to a whisper. \"I&mdash; Yes. I understand.\"\n\nWe walked back to our apartment building in silence, much as we had on the way to the restaurant. She had her eyes cast down toward the pavement the whole way.\n\nWhen we reached my place, I wished Cassie a good evening and moved to close the door.\n\n\"Wait.\" Her hand pushed the door open again.\n\nI knew what she wanted and had half expected this. \"I'm not going to change my mind.\"\n\n\"Listen, it's not a game.\"\n\nI crossed my arms cross my chest. \"Of course it isn't a game.\"\n\n\"Seriously?\"\n\n\"Seriously.\"\n\n\"It's been over six weeks,\" she told me. \"There was this nice, old guy, Barry, that was always at the coffee shop where I take my laptop to work. Whenever I sat down next to him, I would ask, 'May I?' and then he would say 'Of course.' It was so easy. But he stopped showing up. Now it's been six weeks, do you understand? That's why I took a chance on you. Six weeks! I'm going crazy!\"\n\nI nodded, even though I didn't sympathize with her plight one bit. \"The first six weeks of the rest of your life. Did Barry know what he was agreeing to?\"\n\n\"That's beside the point.\"\n\n\"No, it isn't,\" I told her. \"That's exactly the point. You want permission to debase yourself. I don't approve, and while I don't know Barry, I'd be willing to wager he wouldn't approve either. He only thought you were asking permission to sit down, am I right?\"\n\n\"Yes, alright, but you seemed to enjoy my visit last night, didn't you? At least, before you decided to take a nap.\"\n\nHadn't we been over this? \"I'm not going to give my permission just because you show a little skin.\"\n\n\"How about a lot of skin?\"\n\n\"Remember what you said before?\" I asked her. \"You told me about how you work remotely because you can't stand the sleazy guys in the tech industry. Listen to yourself. You're willing to throw yourself at me just to get your fix? Where's that self-righteous indignation I heard earlier?\"\n\n\"Don't.\" Her voice was harsh, but the intensity faded as she went on. \"Just don't. It's different. There's work, and then there's personal. This is personal. And besides, what I said was that guys wouldn't take me seriously, didn't respect my work. It sucks when you do everything right and your boss still treats you like you're incompetent because you don't have a dick. I didn't say anything about sleaze. Maybe I like sleaze. Did you ever think of that?\"\n\n\"Actually, that fits. You want my permission to be filthy, after all.\"\n\nI expected Cassie to flinch at that language, but she didn't. Instead, she took two steps closer to where I stood. She was now fully in my apartment instead of the hallway, and she closed the door behind her. \"Oh? And what are you going to do about it?\"\n\n\"Do?\" The question seemed out of place in the conversation. \"Nothing. I'm going to keep saying no until you figure out that I mean it.\"\n\n\"So you just plan on repeating that, over and over for the next hour and a half, or what? It's only eight, and your bed-time isn't until nine-thirty, is it?\"\n\n\"Sounds like you're a slow learner, so I'll slow this down for you: Nooooo.\" I drew out the word. \"I think that brings us back to where we started, doesn't it?\"\n\n\"Convince me, then,\" she said.\n\n\"What?\"\n\n\"Convince me that you mean it. I think, deep down, you want to give me what I want. Most guys would. You're just playing hard to get.\"\n\n\"I'm not most guys. What is it going to take to convince you?\" I asked.\n\n\"You tell me. Be creative. We have an hour and a half before you turn into a pumpkin.\"\n\nSo that was how it was. Cassie was so desperate for her fix, she would put out anyway. No strings attached. She was gambling that I would feel be feeling magnanimous afterwards, which was a terrible bet.\n\nI spoke slowly, deliberately. \"You need to understand, really understand: if you stay, I'm still not going to say yes.\"\n\n\"Nope, not getting it.\" Her voice was playful. \"You're going to have to be more persuasive than that.\" She was the one who had insisted her situation wasn't a game, and now she seemed to be treating it like one.\n\nIn that case, I could play that game. As soon as she decided to leave, I won. So long as I gave her the opportunity to leave and she refused, I could do whatever I wanted. I had her consent. She was literally asking for it. My house, my rules. \n\nI had no intention of holding back. I intended to take the opportunity to indulge my own darker fantasies, of which I had many. There were things I would never admit turned me on, let alone try, in a real, equal relationship. In real life, I thought of women as friends and equals, but my fantasies ventured into much less socially acceptable territory. These unconventional circumstances provided a unique opportunity to explore them.\n\nIn a way, I was doing her a favor. She needed to quit smoking. Not only was she asking for this, she deserved it. She was a smoker who needed to learn her lesson. Reaching for a cigarette meant getting fucked, and not in a fun way. She was also a tech geek &mdash; a little payback for the hours of frustration I'd had over the years was only appropriate.\n\nAlright, I was rationalizing this decision to myself. But, really, why not? As far as I could tell, there was no downside.\n\n\"You have two options,\" I informed her. \"Your first option is to leave, right now. Just say, 'hey Bob I get it. I'll behave.' But, if you insist on sticking around, there's option two. I really don't think you'll like option two, but it's your choice. If you want to stay, then strip. Right now.\" ",
        "It was a command, not a request. She would leave, or she would obey.\n\nCassie obeyed.\n\nI watched, enthralled, as her jacket and shirt came off. Those were followed by the skirt and then, one by one, her socks. Next, she unclasped her bra and threw that in a pile with her other clothes, giving me a wonderful view of those firm, cantaloupe-sized breasts for the second time in two days. Finally she let her panties drop, leaving her entirely nude.\n\nShe didn't say anything, but her body language conveyed her unspoken question perfectly. Now what?\n\nI stepped closer, mere inches away from her naked body, inside her comfort zone. Then, very slowly, very lightly I ran a finger down the side of her body. I let my hand trail down from her shoulder to the curve of her hip and then back up as I spoke.\n\n\"As I've been trying to explain, this isn't about me. This is about you. I didn't ask you to remove your clothes for my benefit. I did it because I want to make you uncomfortable. I want you to associate this pathetic attempt to indulge your nasty, dirty habit with nasty, dirty behavior. Maybe then you'll learn some self-control. Any time you feel you've learned your lesson, you are, of course, free to walk out the door.\"\n\nI paused and withdrew my hand. She didn't move and she didn't say a word. I could only conclude she was really desperate for a smoke, which was all the more reason to keep going. \n\nI walked over to the table on the far side of the room that doubled as my desk. \"Come here,\" I instructed her, and again she obeyed without question.\n\n\"Bend over and grab the edge of the table.\"\n\nCassie complied, and I couldn't help but admire the view of her perfect, round ass. That ass wouldn't be quite so perfectly smooth and unblemished by the time I was done.\n\nI addressed her again using her full name, which I only knew from the label on her mailbox downstairs. \"Cassandra Dalton, you have repeatedly tried to trick me, as well as others, into condoning your repulsive, unladylike habit. This is unacceptable. You need do be punished. Do you understand?\"\n\n\"Yes.\"\n\nAgain, I waited a few moments. When she continued not to run screaming out the door, I went on. \"You will be spanked. If you find that humiliating, consider it part of your punishment. I think twenty-five strokes should be sufficient.\"\n\nI ran my fingers over her right butt cheek very lightly, as I had with her side earlier. I wanted her to feel the contrast between that touch and what followed. I pulled my arm back and then brought it down as hard and as fast as I could. My hand connected with Cassie's bottom with a delightful smacking sound.\n\nShe let out a short, brief cry. Her ass rippled and slowly turned red where I had struck. The way her body was bent in front of the table, her breasts hung down from her chest. Cassie's 'twins,' as she had referred to them the previous evening, swung freely as her body reacted to the pain.\n\nI let half a minute pass before breaking the silence. \"Three things. First, As I'm sure you can imagine, it's going to be important to keep track of how many strokes you've received. Therefore, you're going to count them out loud as I deliver them. You may cry out, but afterwards I expect to hear a number. Do you understand?\"\n\n\"Yes.\"\n\n\"Good. That brings me to point number two: You will address me with respect. I am teaching you a lesson. I am the teacher, you are the pupil. You will therefore address me as 'sir.' Do you understand?\"\n\n\"Yes, sir.\"\n\n\"Excellent. Finally, given that I am taking time out of my evening to see to your education, it is only appropriate that you express the appropriate appreciation. After every stroke, you will not only count, but thank me for delivering it. Do you understand?\"\n\n\"Yes, sir.\"\n\n\"Now, we will resume. I haven't heard any numbers yet, so the next number I want to hear is one.\"\n\n\"Wait, but you already&mdash;\" Cassie started to protest before I cut her off.\n\n\"That was a warm up,\" I said icily. \"And you just earned yourself an additional five. The next number I want to hear is one. You may stop counting when you get to thirty. Do you understand?\"\n\n\"Yes, sir.\"\n\n\"Then let's begin.\" My hand was already moving before I had finished the sentence.\n\nSmack. \"Akh!\" Again, she let out a sharp burst of noise. \"One. Thank you, sir.\" \n\nSmack. \"Ooh! Two. Thank you, sir.\" \n\nSmack. \"Guh! Three. Thank you, sir.\" \n\nSmack. \"Ugh! Four. Thank you, sir.\" \n\nSmack. \"Gah! Five. Thank you, sir.\" \n\nI was thoroughly enjoying myself, though my hand had started to hurt. While the skin on my hand wasn't as sensitive as her ass, six powerful blows left it rather raw. I hadn't anticipated that, but having started there was no question that I needed to finish.\n\nInstead of continuing immediately, I let my fingers once again delicately brush Cassie's ass. This time I reached down further, underneath her, and caressed her intimate folds.\n\nTo my shock, she was wet. Very wet.\n\nI hadn't considered the possibility that she would genuinely enjoy the spanking. This was my dominant fantasy, and I had been assuming I was taking advantage of her situation. \n\nFeeling her pussy that wet, I realized my error. She'd been antagonizing me, hoping for this. Just a minute ago I'd justified my decision to proceed because she'd literally asked for it. Evidently that was even more true than I realized.\n\n\"You like this, don't you slut?\" I asked, holding up my fingers, still sticky with her juices. \"Your body doesn't lie.\"\n\n\"Oh god, yes, sir,\" she moaned, confirming my suspicion.\n\n\"I want to hear it,\" I told her. \"I want you to tell me what you want.\"\n\n\"You know what I want,\" she said. \"May I, sir?\"\n\nCassie obviously didn't want to give a straight answer, didn't want to come out and say she wanted the spanking itself almost as much as a cigarette. She wanted me to continue what I was doing.\n\n\"No.\" Smack. I timed it so the stroke landed at the exact moment I finished speaking.\n\n\"Erk! Six. Thank you, sir.\"\n\nAs I continued to deliver the punishment I promised, I tuned out Cassie's increasingly loud squeals, her counting and the throbbing pain in my hand.\n\nI was reminded again just how surreal this situation was.\n\nHere was this amazingly beautiful woman, a perfect ten, who showed up on my doorstep with this crazy story about hypnosis. Women like her usually didn't give me the time of day. Then, when I refused to give her what she wanted, she goaded me into spanking her, and she seemed to be enjoying it.\n\nWas the hypnosis a ruse? It was so weird, so hard to believe. Why would anyone use that as an excuse? And besides, if she was spouting bullshit, then why did she pick me? Calling it strange was an understatement.\n\nProbably best not to look a gift horse in the mouth, though.\n\nSmack. \"AAAGGGH! Oh, ah! Th-Thir-Thirty. Thank you, sir.\"\n\nOn second thought, now that I was finished spanking her ass, Cassie's mouth might be well worth examining. She wanted to keep pretending this was about her habit, after all.\n\n\"I can assure you that you're going to be feeling the effects of your lesson throughout the day tomorrow. Every time you sit down for the next few days, in fact. So, I need to ask you: Have you learned your lesson? Or do you require further instruction?\"\n\n\"Not&mdash;\" Cassie was panting, breathing in and out heavily. \"Not quite getting it, sir\"\n\n\"Very well. That pretty mouth of yours really seems to be getting you into trouble, so I think it deserves some special attention. I want to get across what a filthy girl you've been, so it seems only fair you get a real taste of what that means. And when I say taste, I don't mean that in a broader sense, I mean your tongue. On your knees.\"\n\nShe quickly straightened, then got down on her knees and opened her mouth. She had picked up on what I had in mind.\n\n\"Before we begin this next part of your lesson, let me add that should you have a burst of inspiration, you may stop. As your mouth will be full, feel free to communicate this by shaking your head from side to side slowly but emphatically, or merely pulling away and standing up.\" That head shake was the gesture I'd seen used as a safe word in porn where the girl was gagged.\n\n\"However, I continued. \"I must warn you that if you continue to prove such a dull and dimwitted student, at the end of this lesson I am going to hold your head in position until I am done. Specifically, you're going to kiss my pubic bone until I am absolutely convinced you have swallowed every drop. Clear?\"\n\n\"Yah sah.\" Cassie let her mouth remain open when she responded.\n\n\"Speak clearly. I didn't tell you to open wide, yet.\"\n\n\"Yes sir.\"\n\n\"Now,\" I said, unzipping my pants. \"Open wide.\"\n\nDelivering her spanking had left me quite aroused, and fully erect. I was surprised at the ease with which Cassie managed to take my entire length down her throat, and the eagerness she displayed as she began slurping at it.\n\nThose of my exes who had been willing to give head had approached the task as if they were sucking on a shit Popsicle. Until that moment I'd never experienced a blow-job from someone who seemed as excited by the experience as I was.\n\nCassie's tongue brushed the underside of my shaft, stimulating the sensitive skin. Her head bobbed up and down faster and faster. Every so often she would pull back briefly, swirling her tongue against the very tip before gulping down my entire length again.\n\nThe difference between the feeble attempts of my exes and Cassie's work was the difference between beef jerky and filet mignon. She was fantastic.\n\nI could feel my orgasm building. The way she alternated her deep strokes with those delicate flicks of her tongue guaranteed I wouldn't last long.\n\n\"Take a deep breath,\" I warned her. She pulled back to swirl the head of my cock again, and breathed in heavily through her nose.\n\nFulfilling my earlier promise, I grabbed her by the hair and firmly forced her all the way down onto my shaft. I held her there, her upper lip and nose pressed hard against my pubic bone, her lower lip putting pressure on my balls. I felt myself erupt within her.\n\nI looked straight into her eyes as I came, watching her reaction. Her eyes were wide and I could see her react as my fluid spurted down her throat. She tensed and squirmed, but I could tell it was reflexive, her body's natural reaction not a genuine attempt to break my hold. Cassie was doing her best to follow my instructions, still willingly submitting to me.\n\n\"Swallow.\" I instructed her.\n\nI could see her face contort, and felt her lips and tongue move around me as she tried to swallow with her mouth still wrapped around my cock. Her full mouth made swallowing more difficult, but I watched and waited with amusement as she gurgled and gulped, forcing down everything I'd given her.\n\nAfter about twenty seconds of this, her reflexive squirming became more intense. I could tell she was struggling for air. With my member blocking off her airway, she was quickly running out of oxygen.\n\nI certainly didn't want her to pass out, but I did want to push her limits. This whole evening she seemed to be daring me to go further. So, I pushed her further. Smoking clogged lungs and airways. She needed to learn the value of fresh air.\n\nI decided that fifteen seconds would be appropriate. Not too long, but enough to push her limits, to teach her that lesson she seemed so insistent on receiving.\n\nI counted slowly to fifteen in my head. One, one-thousand. Two, one-thousand. Three, one-thousand...\n\nWhile she wasn't trying to shake her head or pull away I could feel her trembling and gasping, ineffectually trying to breathe. She was starting to panic as she became more and more desperate for air and I showed no sign of relenting.\n\nI think Cassie might have been about to give in and pull away, when I reached my count of fifteen, and eased her head back. I popped out of her mouth trailing a single, thin, sticky strand of semen which fell down over her lips and chin.\n\nShe gasped, loudly sucking in a much needed breath. I gave her half a minute to catch her breath, and then reached over to her. I ran my finger upwards, collecting the remaining rivulet of cum that had dribbled down her face.\n\nI held up my finger to her mouth \"I told you before: you're not done until every drop has gone down. Finish it.\"\n\nCassie warily eyed my finger for a few seconds. I thought for a moment that I'd finally hit her limit and now she would finally leave. She didn't, though. Cassie slowly wrapped her lips around my finger and sucked it clean.\n\nShe finished and looked back up at me, straight into my eyes. \"Thank you, sir.\"\n\n\"Good girl.\" On impulse, I kissed her lightly on the forehead.\n\nCassie smiled one of her amazing smiles. \"Thank you, sir,\" she repeated. \"Since I've been good, may I now? Please, sir?\"\n\n\"No.\" I frowned as I took a moment to collect my thoughts. She was clearly anxious, but said nothing as I considered.\n\nI'd enjoyed what we just did, and I strongly suspected that she did too. Nevertheless, even though I was nominally calling the shots, I didn't feel like I was entirely in control of the situation. She'd pushed me to be dominant, so I'd let the beast loose. Who, then, had really been in the driver's seat?\n\nMore importantly, I still didn't fully understand her motivations. I had no intention of telling her smoking was acceptable, but this was the first time I'd ever shared my dominant fantasies with anyone. If this was something she enjoyed, I wanted to do it again.\n\nIt came down to whether or not to break character. The dominant persona I'd adopted wasn't really me, or at least, it was only a small part of me. It was a lot of fun being in control like that, but real life wasn't a sex fantasy.\n\nThe healthy, responsible thing would have been to stop and talk about what we just did, how it made her feel, what she wanted, and what was really going on between us. In the more extreme porn I enjoyed, there were often interviews of the participants, debriefing them on what they'd been through and how they felt about it after it was over. That's what I really wanted to do, but&mdash;\n\nBut. The evening felt like a dream, a dream that I might easily wake from at any moment. This thing between Cassie and I felt like a soap bubble, likely to burst if I reached up to grasp it too tightly. Forcing Cassie to talk in real, honest terms seemed bound to bring ugly, boring reality crashing down like an avalanche on top of this beautiful, fragile fantasy.\n\nI think part of the reason people kept telling me I needed to relax is because I sometimes pursue topics past the point where whoever I'm talking with feels comfortable. I notice things, and I don't always let things go when I should. I can be too explicit, too direct. As a lawyer, that can be a useful skill. Off the clock, it's less so. I wasn't willing to risk screwing things up this time, as I had so often before.\n\nI needed to be careful. I had repeatedly reminded her that she could leave because I wanted to make it clear that she was participating in this by choice, that she was giving her consent. However, the repeated dismissals were also part of the role I was playing, the arrogant dom who was doing her a favor by seeing to her discipline. This was the role that excited her, and I couldn't very well turn around and talk realistically without breaking character.\n\nEvery time I'd given her a chance to run, she'd turned me down and pushed back. I was taking a chance that would continue, but I was taking a chance either way.\n\n\"I had hoped that you might learn your lesson here, tonight,\" I told her. \"Perhaps I was too optimistic. However, I want you to take some time and think about what I'm trying to teach you. All day tomorrow, I'm sure you'll get a reminder every time you sit down. If, by tomorrow evening, you still refuse to give up your misguided belief that I will ever approve of your unacceptable behavior, you may present yourself at my door again at six thirty for further instruction.\"\n\n\"Tomorrow?\" I caught a hint of alarm in her voice.\n\n\"That's right, I'll still be here tomorrow. Now, get dressed and run along.\"\n\nShe didn't move. \"Seriously? I did mention it's been over a month, didn't I? I'm not kidding about that. Six fucking weeks! Please?\"\n\n\"Language, young lady. I think you mean, 'please, sir' don't you?\" I asked, arching an eyebrow. \n\nI was suddenly very glad I'd continued in my dominant role. If she she was still this serious about getting my permission to smoke and wanted to press the issue, it was easier to turn her down this way. Assuming, of course, that this wasn't merely her way of insisting on further \"instruction.\" I couldn't quite tell. However, the shift in her voice to a more assertive tone and the concern apparent on her face suggested her insistence might be real.\n\n\"Yes, sir. Please, sir, may I, sir?\" There was more than a hint of desperation there.\n\n\"No. Absolutely not. While I want you to take tomorrow to let this lesson sink in, I can tell it will take more time to communicate the core concepts properly. Tomorrow evening. Six thirty.\"\n\nThe aggressive way she was looking at me, made me think she was about to argue, to yell at me, even. She didn't, though. After a few tense moments Cassie lowered her defiant gaze, and spoke again in that quiet voice of hers. \"Yes, sir.\"\n\nShe got up and started to put her clothes back on. When she finished, and turned to leave, I softened my own voice somewhat, and called out to her. \"And Cassie?\"\n\n\"Sir?\"\n\n\"Tomorrow, or any other time, really, if you just want to talk, that's fine too. I'll be ordering in Chinese, so we can eat and talk here, where no one will overhear.\" My intention was to give her an opening to make the first move. If she wanted to talk, we would talk, but I wouldn't push her.\n\nShe nodded, \"Yes, sir.\"\n\nThen she walked out the door, leaving me to go to bed deeply satisfied, but at the same time even more confused than the previous night.\n\n<p align=\"center\">&mdash; 3 &mdash;</p>\n\nThat following morning I woke up, and couldn't help but wonder if it had all been a dream. But no, there was the receipt for La Campagna sitting on an end table, and over there was where I'd pushed some books aside on the dining table so that Cassie could better grip it. It hadn't imagined it, which meant there was a very good chance she would reappear again that evening.\n\nReappear. I couldn't help but compare it to some bizarre scenario out of a fantasy novel: And lo, it came to pass that on the third night the beautiful maiden did reappear unto him once more. Except that this was real life, and Cassie was no maiden, at least not in the strictest sense of the word.\n\nShe did show up though, right on time. When I opened the door she gestured to the interior of my apartment just as she had the first night. She had a gleam in her eye. \"May I?\"\n\nWith a strong sense of d&#233;j&#224; vu, I paraphrased my original response: \"Enter,\" then followed it up. \"I have food. You like Yu Hsiang eggplant?\n\nAs it happened, she did. The problem was that she didn't seem to want to talk. At least, she didn't want to talk about anything that mattered. \n\nI asked about her day, hoping that she would bring up her feelings about the previous evening, an opening into the conversation I wanted to have. Instead, she talked about her frustrations with a particular client that she had to deal with all day.\n\n\"So, I have the game mechanics working, and that's the hard part. But then he goes off on the color scheme. First, it's make it red. Sure, simple. Then, it's make it darker. Fine, but then he says it's too dark. I tell him to give me a hex code, and he flips, telling me that it's my job to figure it out! What the hell?\"",
        "I didn't quite follow all of her technical jargon, but I got the idea. \"Hey,\" I told her, \" I know a little bit about that. You wouldn't believe how often I have to explain that I don't make the law. Some people think just because I'm explaining the problem, I'm responsible. Then I'll tell them that if they don't like it they should write their Congressmen. That usually doesn't go over so well.\"\n\nCassie laughed. It was a beautiful sound. \"Yes! That's it, exactly. That's what I have to deal with. It's like, some people just can't deal with reality.\"\n\nI resisted the urge to ask: So, maybe you could explain the reality here, between us? I can deal, I promise. I just want to understand, because I'm confused.\n\nInstead, I merely nodded. \"It's a problem.\"\n\nAfter dinner she stood up, and put one hand on the table. It was the same table I made her grab the previous night. She was standing up straight, but she'd put her hand in the exact same spot it had been when I was spanking her. \"So, tonight, I've decided that you are going to give me what I want.\"\n\nIn spite of where she'd put her hand, she wasn't acting at all submissive, quite the reverse. She was haughty, arrogant, demanding. I suspected that she was intentionally pushing me to bring out my dominant attitude, but I couldn't be sure.\n\nThat was the million-dollar question, though, wasn't it? How much of Cassie's behavior could be attributed to her desire to be dominated, and how much of it was because she was genuinely desperate for a smoke? Smokers got really desperate for their habit, sure, but this desperate after a full six weeks? Didn't the cravings get better after a time? \n\nEven then, it was possible I was asking the wrong question. Maybe there was something else she wasn't telling me.\n\nI stood up as well and folded my arms across my chest. \"Would you mind explaining how you came to this conclusion?\"\n\n\"You got a boner just staring at my tits. It's okay, don't deny it. It's cute, really. You want me, and you can have me. All of me. All you have to do is just say yes.\"\n\n\"And if I say no? I said no last night, and you're still here.\"\n\n\"Oh really?\" she said. \"That's not what I remember. I think you might have been trying to say something on the subject, but you weren't being very clear. Either way, you're going to say yes tonight.\"\n\nYup, she was pushing me. She seemed insistent on receiving further \"instruction.\" It seemed a bit soon after the previous evening and I suspected her ass would still show some bruising, but if that's what she wanted, that's what she would get.\n\nI picked up a thin metal ruler that I had placed at the edge of my table, on top of a pile of books. I flicked it through the air a few times, experimentally. The ruler made a high-pitched noise as it sliced through the air.\n\n\"In that case, it is once again time for your lesson. I don't suppose you've had an epiphany in the last ten seconds? All you need to do is tell me that you won't give in to this temptation again. Last chance, before we start. So what will it be?\"\n\n\"I&mdash; I don't understand, sir.\"\n\n\"Right. You remember the drill from last night.\" I gestured at the table. \"Strip, then assume the position.\"\n\nI couldn't tell if her cries were a bit louder that evening because I used the ruler instead of my hand or because she was still sensitive from the previous evening. Probably both.\n\nIt was more or less a repeat of the night before. If anything, I was able to enjoy it a bit more this time because the ruler spared my hand such rough treatment. It wasn't particularly merciful to Cassie, of course, but that was the point.\n\nThis time, after I came down her throat, I held her head in place for a full forty-five seconds. She clearly wanted me to push her limits, and I had no problem with that.\n\nWhen she'd finished gasping for air, and finally caught her breath, she looked me straight in the eye. \"Well, sir? Were we going to cover something new tonight, or is that it?\"\n\n\"That depends on how well you've learned the old material,\" I told her. \"Tell me, what have you learned?\"\n\n\"Well, you have a surprisingly strong wrist, and a very good aim. Also, judging by how much of your cum I just swallowed, I think you've been a little backed up, lately. Having a dry spell? I can help with that. Anytime you want, just say the word.\"\n\nAgain, she had dropped the 'sir' and was pushing back. I had no doubt that the word she had in mind, was 'yes.'\n\n\"The word I'm thinking of right now doesn't start with 'Y,'\" I told her. \"Quite the opposite. Have you figured out what it is? I think we could count that as progress.\"\n\n\"Hmm. Maybe it starts with 'O' for orgasm. Is that it?\"\n\nI sighed. \"It seems you haven't progressed, after all.\"\n\nCassie clenched her fists. \"Why do you have to be so mean? Do you have any idea what you're doing to me?\"\n\n\"Yes,\" I said. \"I'm keeping you healthy and presentable. Part of what I'm trying to get across to you is that you should want the same thing. You understood that when you asked your ex for help, I think. It's like the old saying: catch a fish for a girl, and she'll eat for a night. Teach her to fish and she'll eat for a lifetime.\"\n\nShe snorted. \"Yeah. Build a girl a fire and she's warm for a day, but set her on fire, and she's warm for the rest of her life.\"\n\nMy mouth fell open in astonishment. I momentarily lost the train of the argument because she'd just quoted one of my favorite authors. \"You've read Terry Pratchett?\"\n\nI don't watch much television or play video games. Instead, I prefer books.\n\nShe tried to conceal it, but it was obvious from the subtle shift in her facial expression that she hadn't expected me to recognize what she was referring to. \"Of course.\"\n\n\"I'm just surprised, given what you do,\" I said. \"Pratchett openly mocked technology. If we're quoting Jingo, you remember the Dis-organiser? That's pretty much what I think of smartphones.\"\n\n\"Oh, and what about in Thud?\" she countered. \"And if we're going back to this, I'd point out that Mr. Slant isn't exactly a sympathetic portrayal of the legal profession. He's a freakin' zombie!\"\n\nJust when I thought things couldn't get more surreal, I was once more proved wrong. Cassie was still naked, and even now I could see a wet sheen on her chin where my fluids had been a few moments before. We'd gone from kinky sex to literary criticism in just under a minute.\n\nI wasn't quite prepared to pursue the topic at that moment.\n\n\"You do make a point,\" I acknowledged. \"Why don't we discuss it further tomorrow?\"\n\nIt was her turn to sigh. \"Six thirty, again?\"\n\nAnd so the pattern was established.\n\nThe following evening, instead of her job, we talked about books. It turned out that Cassie and I shared an interest.\n\nPratchett wrote fantasy, but that really isn't my preferred genre. I generally enjoy more realistic work, but Pratchett's pointed satire of the real world is dead on. Cassie insisted I try a grittier fantasy by Joe Abercrombie which she claimed was also a perceptive, if less humorous, commentary on the state of the world.\n\nIn turn, I recommended Carl Hiaason, a satirist whose work is set in present day Florida. His work isn't quite fantasy, but is nonetheless highly improbable.\n\nHowever, just like the previous two nights, the discussion never got around to clearing up why Cassie was sitting at my table in the first place. The moment dinner was finished, she once again started insisting that I give her the permission that she wanted. This, in turn, inevitably led to the same place as before.\n\nGiven that her ass had taken quite a bit of punishment two nights in a row, I moved on to her breasts. First, I placed a metal clip with a strong spring on each of her nipples. She squeaked as I placed each one, just as loudly as when I struck her ass.\n\nNext, I retrieved two small bags full of gravel that I had prepared to serve as weights. I tied one to each of the clips, and delighted in her reaction as the weights dramatically increased the pressure.\n\nThen I ordered her to do fifty jumping jacks, counting each one. If she stopped, I had my ruler out and ready to correct her disobedience. I informed her that every time she slowed down, I would use the ruler as I had before, to add a few more welts to her already tender bottom.\n\nI made her count, but didn't require her to thank me this time. She was, in a sense, delivering the punishment to herself through my instruction. Besides, the repeated \"thank you, sirs\" would have broken the rhythm of her jumping jacks.\n\nThe makeshift weights swung back and forth with her movement. They pulled cruelly on her breasts to Cassie's obvious distress. She cried out as she counted, but she didn't stop. I didn't even have to use the ruler once.\n\nNaturally, this was followed by yet another delectable blow-job, but the follow-up conversation was more limited than before.\n\n\"I don't suppose third time's the charm?\" she asked.\n\nI didn't even respond. Instead I stood, silent with my arms crossed, as she got dressed.\n\n\"So, same time tomorrow?\"\n\n\"I look forward to it.\"\n\nEvery night for the next week was the same. Every night, Cassie would come to my apartment, we would eat and talk about our day, about books, about anything other than us. Then, she would demand permission and I would refuse, necessitating another round of \"instruction.\"\n\nI made a trip to a local store that specialized in products that could be of some use in preparing her \"lessons.\" During my nightly sessions with Cassie, a riding crop, a flogger, hot wax, ice cubes, and an enema kit all made an appearance. I always gave her a chance to \"learn her lesson,\" to say no, but she never took that option.\n\nI watched her squeal and shake as I subjected her to every form of sexual punishment I had ever fantasized about delivering. I was careful never to do anything that would risk permanent harm or put her in any real danger, but everything short of that was fair game.\n\nNevertheless, every time I brushed my fingers against her sex, she was just as wet as the first time I'd touched her there. On some level, she loved it. She also kept coming back for more.\n\nThere was no middle ground, though. We were either sitting over dinner, talking as equals, or adopting the roles of master and slave. I face fucked her, I ass fucked her, but there was no vanilla sex and not even a hint of romance. That wouldn't have been a problem if I fully understood the situation between us. I didn't understand it, though, and there was no straightforward way to broach the subject.\n\nIn spite of my increasing frustration with the lack of communication, this bizarre arrangement slowly became routine. Through repetition it became expected rather than surprising. My schedule consisted of getting up, going to work, coming home, having dinner with Cassie, tormenting Cassie's beautiful body with depraved, sexual punishment, and then going to bed.\n\nIt lasted until I needed to work late one Thursday night.\n\n<p align=\"center\">&mdash; 4 &mdash;</p>\n\nI was working on a case with another attorney, Denise Malone. We had to finalize an enormous amount of paperwork by the close of business the following day, which meant I wouldn't be going home on time.\n\nEven if I'd wanted to prioritize my situation &mdash; could I really call it a relationship? &mdash; with Cassie over work, what would I have said? Why do I have to be home by six thirty? That's when my pain slut stops by every night. You know, my pain slut. What, is that unusual? Don't you have one?\n\nYeah, I wasn't having that conversation.\n\nInstead, I called Cassie and let her know that something had come up at work. I explained that I had to work late, and that we would have to reschedule her \"lesson\" for the following night. She didn't seem particularly upset, so I assumed everything was fine.\n\nBy nine that evening Denise and I were almost done, but we were still in the office and I was fading fast. She suggested we grab our laptops and head down to a local coffee shop for a caffeine boost. There was no reason we couldn't finish up there.\n\nThe coffee helped, and by ten thirty we were approaching a good stopping point. That's when Cassie walked into the shop.\n\nThe entrance bell chimed as she walked in, alone. I looked up and we saw each other, immediately locking eyes. I realized what she was seeing, just as she took it in. Here I was, supposedly working late, having coffee with an attractive blonde woman. Denise and I had just finished putting our laptops away, so it wasn't obvious that we had been working.\n\nI watched Cassie's face fall as she drew the inevitable, entirely wrong conclusion. Then, in the span of a few heartbeats, she spun around, and ran out of the shop.\n\nIt happened so fast, I don't think Denise even noticed. I was already getting ready to leave, so it wasn't difficult to quickly excuse myself and go after Cassie.\n\nShe wasn't walking, though. Cassie was flat-out running back towards our building, and she had a head start. I wouldn't say I'm out of shape, but it was at least half a mile, and Cassie wasn't slowing down. I had no idea whether she realized I was following her, but when I tried calling out, she kept going. I couldn't tell whether she was ignoring me, or whether the noise from the street was too loud.\n\nI was huffing and puffing by the time I reached the lobby. When I glanced at my watch, I was surprised to discover that we'd covered the distance in just over three minutes. Unfortunately, I was just in time to see the elevator doors close in front of Cassie as she went up without me.\n\nThere was only one elevator in the building, and it was notoriously slow. It was probably a toss-up whether waiting would be faster than the stairs, but I felt the need to do something, to go after her now. I went for the stairs.\n\nThose six floors of stairs were as difficult as the entire run from the coffee shop, but I pushed myself to keep going at full speed. For my efforts, I once again just managed to catch a glimpse of Cassie as she entered her apartment and slammed the door behind her.\n\nIn my exhausted state, I had an idle, disconnect thought of reversed roles, of how this would be the first time I was knocking on her door instead of the other way around. I ran to her door and knocked loudly.\n\n\"Cassie, it's me, Bob,\" I spoke to the closed door. I had to pause to take another deep breath, as I was still panting. \"Can we talk? Denise is just a coworker. There's nothing there.\"\n\nIt occurred to me I could give her permission to smoke, just this once. Yell it out, through the door, even. The reason I didn't do that was that the whole permission thing was part of our sexual game, and I didn't want to go back there right now. We really needed to finally have that long-overdue talk about whatever the hell it was that we were to each other.\n\nCassie opened the door a crack. Her face was flushed, and tears were running down her cheeks. She didn't say anything, instead giving me a look as if daring me to say anything further in my defense.\n\n\"Look, for once can we be honest, say what we really mean and just talk?\" I asked. \"No games, no&mdash;\" I paused. \"No other stuff. Just talk?\"\n\nIn the brief silence that followed she must have finally noticed my heavy breathing and my own flushed appearance. \"Did you run all the way here?\"\n\n\"Yeah.\"\n\nShe seemed miserable and resigned as she opened the door further to let me in, but cracked a small, rueful smile when she spoke. \"Enter, then.\"\n\nI couldn't decide whether I should take her attempt at dry humor in this situation as a good sign.\n\nAs I entered and looked around, I realized that this was the first time I'd been in her apartment. A long desk took up one entire side of the room, stretching from one wall to the other. It was filled with monitors and computer equipment. There was a small couch in the center of the room and a coffee table, but no dining table &mdash; she probably ate at her desk.\n\nFloor to ceiling book shelves covered almost all of the remaining wall space. Her collection put mine to shame.\n\nI had always thought of paper books as being the opposite of technology. The old, traditional way of communicating versus the crass, impersonal machines, but Cassie's decor seemed to blend the two together.\n\nI sat down on the sofa to gather my thoughts. She sat down next to me.\n\n\"You wanted to talk,\" Cassie said. \"So talk.\"\n\n\"What are we? You and me?\" I asked. \"I mean really, I'm asking. You tell me.\"\n\n\"Human?\"\n\n\"No, seriously,\" I said. \"I mean us. What are we?\"\n\n\"No, really,\" she replied. \"I'm pretty sure we're human. We're not perfect. I'm&mdash; I'm what I am. I thought you were different, but you're not, are you?\"\n\nCassie's voice was rising, getting angrier, and she continued before I had a chance to respond. \"I'm fine on the side, right? But what you want is someone like her. Someone normal.\"\n\n\"No, It's not like that,\" I insisted. \"I told you, we were working late. We needed coffee, and you caught us just as we were calling it quits for the night. If you'd come in two minutes sooner, you would have seen we had our laptops open.\"\n\nShe didn't look mollified. \"What, and your office doesn't have a coffee machine?\"\n\n\"We'd been at the office for over twelve hours. A change of scenery seemed like a good idea. Besides, the coffee from our machine is kind of gross.\"\n\n\"When I walked in, you looked like a deer in headlights, but her? I saw the look on her face. That sure as fuck didn't look platonic. You honestly want to tell me there's nothing there?\"\n\nI nodded. \"Yes! I'm honestly telling you there's nothing there.\"\n\nCassie thought about that for a moment. There was less anger in her voice, when she continued. \"Let me guess, she was the one who suggested coffee?\"\n\n\"She was, but so what?\"\n\n\"So, this seems like a setup for another lawyer joke. How long does it take a male attorney to realize that a female attorney is hitting on him? Well, I don't know how long it usually takes, but for heaven's sake don't tell him. We wouldn't want to encourage those things to breed.\"\n\nShe paused for dramatic effect. \"Oops, too late.\"\n\nI was not amused, but I had to admire her quick wit. \"Very funny.\"\n\nShe looked like she was going to start crying again. \"No, it's not funny. So what'll it be? Your hot blonde normie or the freak next door? I know how this goes, just have the decency to say it to my face. At least Jared had that going for him.\"\n\nIt was entirely possible that I was being oblivious to signals Denise had been sending me. I tend to hyper-focus on whatever I'm working on, especially in the office. I hadn't noticed anything, but Cassie could easily have picked up on something I hadn't. That didn't change the situation, though.\n\n\"Not only is there nothing between Denise and I, there's never going to be anything there. Yes, we're coworkers, maybe even friends, but that's it. I promise.\"\n\n\"But that's not the point, is it?\" Much to my confusion, Cassie seemed more distraught than ever. \"You're not listening. You don't go for coworkers, so what? If you want normal, there's lots of that out there.\"\n\n\"Normal? You want to know who's actually normal?\" I asked, rhetorically. \"No one. Every day, I see the legal disputes families have with each other. That crazy guy I told you about a while back who thinks he's a Greek god is just the tip of the iceberg. Everyone is nuts in one way or another, trust me. Some of them&mdash;\" I hesitated. \"Some of us just hide it better than others.\"\n\n\"A normal relationship, I mean.\"\n\n\"The firm I work for specializes in estate planning and family law. Trust me,\" I told her, \"there's no such thing as a normal relationship.\"\n\n\"Why do you think Jared dumped me? This is why. You wonder why I'm single? It's not like I can't get a date. Lots of shit-heads out there, lots of normals, and that's about it. I thought you were different, I really did. But, well, here we are, aren't we?\"",
        "\"Can you tell me what happened with Jared?\" I asked. \"You don't have to tell me if you don't want, but I'm just trying to understand.\"\n\nShe shrugged. \"You know what I like. Jared was cool at first, but he just wasn't into it. He tried, but it was always so obviously half-hearted. Like, if I even flinched he'd stop what he was doing, and act all concerned. Eventually, I called him on his bullshit, and evidently that was too much for him. He dumped me because he didn't want that, he wanted normal.\"\n\n\"Maybe you're wondering why I stuck with him, if he wasn't what I wanted,\" Cassie suggested. \"I'll tell you why. It's because he respected me, and he was even willing to try. Oh, sure there were the shit-heads too. Dale was only too happy to whip me silly, but as soon as he figured out that outside the bedroom I'm smart, capable, and earned three times as much as he did, it was sayonara, sister!\"\n\nShe stabbed a finger at my chest. \"You, though. It was like you could read my mind. I didn't even have to spell it out, you went there all on your own. You were perfect, but then&mdash; then you left it at that. Like, every time, we would do a scene and it would be great, but that was it. Then I saw you tonight, and I get it now. I'm such an idiot. I'm just a side thing for you. You think you can just play with me, walk on the wild side while you go out searching for the right normie? You still want little-miss-perfect-white-picket-fence-and-two-kids-in-the-burbs normal? Well, fuck you!\"\n\nMy mouth was hanging open.\n\nAll this time, she had wanted me to do more, was expecting me to do more. Why hadn't I done more? Because it kept coming back to her demanding permission to smoke, that's why. That was part of our dominance game. How was I supposed to know she wanted to be romantic, when she kept bringing that up?\n\n\"You've got it backwards,\" I told her. \"Every time, before you left you asked for permission. It was like you wanted to make sure everything kept going just like it was. I didn't think you wanted more.\"\n\n\"Of course I want more, that's why I was asking! But you couldn't have the common decency to say yes, huh? You kept it going, kept me going, and going and going. Just once, couldn't you say yes?\"\n\nShe was equating my ability to genuinely care for her with my willingness to let her light up a cigarette. Did she really think that I wasn't interested, just because I wouldn't approve of her addiction? It was so frustrating, so completely and utterly wrong. How could she think that?\n\n\"No, I couldn't.\" I saw Cassie's face fall and her hands clench as I said the words, so I finished quickly. \"But the reason I can't is because I want to be with you. I'll tell you no, but that doesn't mean that I want someone else. There is no one else. I want you. Only you. Okay?\" \n\nCassie loudly sucked in a deep breath, then let it out. \"Really? Like this? This is really how you want me?\"\n\nLooking at her then, I saw something in her eyes that wasn't anger or frustration. It looked a lot like hope, mixed with nervousness and more than a little bit of lust.\n\nIn answer to her question, I did something I hadn't done before. I'd spanked her ass, tormented her nipples and forced my cock down her throat, but that moment was the first time I kissed her on the lips.\n\nCassie responded immediately, returning the kiss with forceful passion, wrapping her arms around me as she did so.\n\nWhen we finally came up for air, she still held me tightly. \"To answer your question,\" I said, \"this is exactly how I want you. I want you just the way you are.\" I winked at her. \"I can even get over your irrational love of technology. It's part of you, and I absolutely want you. I know&mdash;\"\n\nI didn't get a chance to finish the sentence, because she kissed me again, just as fiercely as I'd kissed her a moment before.\n\nI don't think I'd realized until that moment in the coffee shop, when I thought I might have lost her, just how much Cassie had come to mean to me. Not only was she willing to explore some of my more extreme sexual proclivities, I enjoyed talking with her as I'd done every night for the past week. I'd been enjoying our dinners together as much as what we did afterwards.\n\nSomewhere in the midst of everything I'd lost sight of what I wanted not just in a sexual partner, but in a relationship. I'd somehow missed that we were much better matched than any of the other girls I'd dated, that she was exactly what I'd been looking for, and I almost let her get away.\n\nCassie withdrew from the kiss first this time. Wordlessly, she took my hand and led me into her bedroom.\n\nTwo bookshelves lined the walls along with a dresser. A rich, crimson bedspread and matching sheets covered Cassie's large, four-poster bed. Beside the bed, there was a nightstand with an alarm clock on top. Finally, at the foot of the bed there stood an ornately carved wooden chest, stained the same dark shade as the wooden bed frame.\n\nIn stark contrast to all the monitors and computer equipment along the wall of Cassie's living room, the digital display of the alarm clock was the only screen I could see in her bedroom. I liked that.\n\nI expected Cassie to get on the bed, but instead she walked over to the chest, opened it, and then stood aside to give me a better view.\n\nInside the chest were row upon row of neatly arranged sex toys. I counted six vibrators, a set of glass butt-plugs that ranged from medium-sized to comically enormous, gags, nipple clamps, paddles, whips, several pairs of leather restraints, metal handcuffs and coils of rope. Everything was meticulously well-organized.\n\nI glanced at the contents of the chest, then back at Cassie. I stepped towards her, putting my hands on her shoulders.\n\n\"Not tonight,\" I said. \"It occurs to me that you've had your mouth on me every night this week and I haven't once returned the favor. That hardly seems fair. Why don't you slip out of those clothes, and let me take it from there?\"\n\nCassie's eyes lit up. \"Yes sir.\" She was so eager, that she practically ripped her sweater off. This was followed by her jeans, her underwear and finally her socks before she climbed into bed. She spread her legs wide in an obvious invitation.\n\nI was still wearing the suit I had worn to work. It was somewhat disheveled from my frantic chase earlier, but I opted to leave it on for the moment. I didn't need to take it off for what I intended to do next.\n\nI sat down on the edge of the bed. \"Soon. Sit up for a moment, first.\"\n\nWhen she did, I told her to face away from me. Then I placed my hands on her back, and began to give her a massage.\n\n\"You're tense,\" I said, as I began working the kinks out of her back. \"You need to relax.\"\n\nI moved down her back, slowly rubbing the tension out of her muscles. \"I've enjoyed our time together this week, but I want tonight to be different. This time, we're going to focus on pleasure, not pain.\"\n\nCassie let out a low, appreciative moan.\n\nAfter spending a few minutes on her back I moved my hands to her sides, lightly running them up and down her body. I kissed the back of her neck as my touch ventured further around towards her front, and I began to gently trace the shape of her magnificent breasts.\n\nAs much as I enjoyed touching her chest, I didn't linger too long. Instead, I let my fingers continue their journey down over her stomach, towards her legs. I moved down slowly, taking the time to circle her belly button a few times before descending further.\n\nAs I reached the top of her landing strip she let out a little gasp in anticipation of where I would go next. Except, instead of going straight for her center I veered off to the side, moving my hands over her hips and legs. Then, as I moved back up her body I brushed her sensitive inner thighs but again avoided going where she was expecting.\n\nCassie squirmed each time I narrowly avoided the spot where she most wanted the stimulation \"Oh god, you're such a tease!\"\n\nI smiled as I turned my attention back to her breasts. My fingers moved in a circular motion, spiraling gently in and around her nipples. \"Shhh. Just enjoy.\"\n\nThen, I leaned over and kissed her left breast. As I positioned myself to get a better angle I put one hand on her shoulder and guided her back down into a reclining position.\n\nI continued to plant small kisses on her breasts, but then began to work my way downward. I trailed kisses over the underside of her breasts, the top of her belly, all around her belly button, and then further down.\n\nThis time I kept going straight down. When the tip of my tongue touched her clit, Cassie cried out significantly louder than before.\n\nAs I suspected, she was wet and ready. I could smell her musky scent and it only encouraged me. I dove in, aggressively running my tongue between her legs.\n\n\"Oh my fucking...!\" Cassie shrieked, then trailed off. \"Oh fuck, oh fuck, oh fuck, oh fuck.\"\n\nI was enjoying the effect I was having on her. Then she ruined it.\n\n\"Oh fuck. Fuck, shit, fuck, fuck, fuck. Please? Please, may I?\"\n\nShe'd slipped it in so naturally. Given the context, I initially thought she was asking for me to keep going, to make her come. I almost responded by saying 'of course', only narrowly stopping myself. The exact words and the ambiguous nature of the question only registered at the last instant.\n\nI stopped, and then put a finger to her lips, shushing her. \"None of that. Not tonight.\"\n\nIt was possible Cassie meant the question as I had initially interpreted it, but then again, she was smart. I couldn't let it slide, but I wanted that evening to be special.\n\n\"Be quiet, and wait here a moment.\" I stood up, walked to the chest at the foot of the bed and retrieved a ball gag.\n\n\"Every time you find a way of asking for permission I'm going to have to tell you no,\" I explained. \"Then, when I try to get that across to you, we end up right back where we started. I don't want tonight to end that way.\"\n\n\"You're clever,\" I told her. \"You pick just the right time to ask. That's why you're going to wear this gag. Make as much noise as you want, it's fine, because it won't be a question. If you really need me to stop, just pull out the gag and we'll be done for tonight. But then we'll be done for tonight. Understand?\"\n\n\"Yes, sir.\" Cassie responded in her extra-quiet, almost-a-whisper voice. I'd noticed that she got quiet whenever I was reprimanding her or explaining a particularly devious punishment I was about to inflict upon on her.\n\nAs I pressed the gag into her mouth and fastened it behind her head, I went on. \" Tonight is all about you. Just lay back, and enjoy. Experience it. No games. As I told you earlier, I want you exactly as you are right now. But if I said yes, that would be a change, wouldn't it? You understand?\"\n\nWith the gag, she couldn't respond with words. Instead, she nodded.\n\n\"Good girl.\"\n\nThen I refocused my attention between her legs with renewed vigor. As I began, I glanced at the digital alarm clock beside Cassie's bed which read eleven twenty-one P.M.\n\nEven though it was late, the coffee had given me a boost. I decided that I wouldn't stop until eleven fifty-one, a full half hour. She'd spent some quality time on me every night for over a week. Now it was her turn.\n\nCassie was moaning into her gag as I started, and her volume only increased from there. Within five minutes her whole body was shaking and bucking. She was shrieking into her gag. I probably shouldn't have been surprised that she was a screamer even without the whips and nipple clamps.\n\nCassie's thrashing became more intense as the minutes passed, and I had to hold her thighs apart with my hands as I continued. In spite of her intense reaction to what I was doing, she hadn't taken off the gag, so I kept going.\n\nI couldn't tell whether she had already come and her thrashing was in response to increased sensitivity after her first orgasm, or whether she was still building. I was well aware that forcing a woman to have multiple orgasms could sometimes be painful for her, but then Cassie seemed to like pain.\n\nI was determined to focus only on her pleasure that evening. However, if I still managed to push her boundaries by overloading her with pleasure, I was comfortable with that. Given that she hadn't touched the gag, I suspected Cassie was too.\n\nMy tongue was aching, and my arms were getting sore from holding her in place by the time the half hour was up. Cassie was covered in sweat, and though her thrashing and screaming had diminished I suspected that was because she was becoming worn out, not because my ministrations were any less overwhelming for her.\n\nI sat up and brushed her hair out of her face. \"I think it's finally time to fuck you. There's a condom in my pants pocket, no need to worry. I know we've done pretty much everything else, but it's still a big step. Nod your head if this is what you want.\"\n\nCassie nodded, as I knew she would.\n\nI got up and got undressed, putting on the condom after removing my pants.\n\n\"You're beautiful,\" I told her, as I positioned myself on top. Then I entered her, and Cassie resumed moaning into her gag. \"In fact, you're the most beautiful woman I've ever been with.\"\n\nAs I moved, she grabbed my ass and pulled me into her, her hips bucking eagerly in time with my thrusts. As far as I could tell, she wanted this as much as I did.\n\nI sped up, pounding her as hard as I could. We were in the standard missionary position, but the way she was responding, her intensity and excitement made the experience extraordinary.\n\nI couldn't last long. There could be no greater feeling than being inside Cassie as her body spasmed and clutched around me. I reached the edge quickly and then tumbled over.\n\nI came, hard. It felt like I was pumping out pints of cum, even though I knew that in reality it was probably more like teaspoons.\n\nWhen it was over I felt drained, both literally and figuratively. I pulled away and took off the condom, depositing it in the small trash basket I'd noticed in the niche under Cassie's night stand. Finally, I removed Cassie's gag, setting it beside her alarm clock.\n\nCassie didn't say anything, but instead wrapped her arms around me, crushing her body into mine. She was sweaty and breathing heavily, and so was I.\n\nWe lay there that way, holding each other in silence. I felt her body twitch every so often. After a few minutes, Cassie whispered in my ear: \"You beautiful, sadistic bastard. I still haven't decided whether I should hate you, but I am pretty sure I love you.\"\n\n\"I&mdash;\"\n\nI hadn't expected her to drop the L-bomb, at least not tonight. Yet, how did I feel? I'd run after her like that for a reason. When I told her I wanted her and only her, I'd meant it.\n\n\"I think I love you too.\"\n\nCassie didn't say anything, but she held me even tighter than before. As we drifted off to sleep, she was holding me as if she were lost at sea, and I was her life-preserver.\n\nI woke up at fifteen minutes past five the next morning. For a moment, I was startled to find myself in an unfamiliar bed, in unfamiliar surroundings. Then I felt Cassie next to me and the events of the previous night came flooding back.\n\nI didn't have a change of clothes with me and I needed to get ready for work, but Cassie was still asleep. I decided to take a shower there, and then wrap a towel around myself afterwards to do the thirty foot dash back to my own apartment. The hallway usually wasn't that busy, it would probably be empty, and I really hoped Cassie would wake up so I could say goodbye before I left.\n\nI took my time in the shower. I was already running late, but I'd worked late enough with Denise the previous night that I could get away with going into work a bit later than usual. I took an extra-long shower, allowing myself the time to wake up slowly and process what had happened the previous evening.\n\nWhen I emerged, Cassie was up and waiting for me. She wore a thin, loose-fitting purple bathrobe that managed to conceal her nipples and little else. She'd left it open in front, and I had a good view of her crotch and plenty of cleavage. Even first thing in the morning, she was radiantly beautiful.\n\nShe held a mug in each hand and offered one to me. \"Coffee, sir?\"\n\n\"Thank you, but no need for the 'sir' just now,\" I told her, gratefully taking a mug. \"Not that I wouldn't love to do more of that later, but I do need to get ready for work.\"\n\nShe looked disappointed. \"You have to leave?\"\n\n\"Well, I don't have a change of clothes here, and I think I might get some funny looks if I go to work naked.\"\n\n\"Hmm,\" she mused. \"Funny. I doubt that's the right word for how Denise would be looking at you. But then, I suppose we can't let her get the wrong idea.\"\n\n\"Right.\" I didn't particularly want to start an argument. I bent down, collected my clothes from the floor, and pulled out my keys. \"If the hall's clear, I'm going to go get dressed. Six thirty again tonight, as usual?\"\n\nShe smiled again, then shivered. \"I can't wait.\"\n\nI kissed her goodbye, and turned to go. I had my keys out and ready in my right hand, my coffee in my left, and my clothes tucked under my right arm.\n\nWhen Cassie saw my difficulty carrying all three things at once, she called out to me. \"Why don't you leave your coffee here and come back when you're done changing. I'll make you breakfast.\"\n\nBreakfast with Cassie sounded wonderful and given how late I already was, I decided I might as well push my luck and take another half hour or so. Denise and I had already finished almost everything that needed to be submitted that day, anyway. It wouldn't be too hard to get out my laptop and send a quick email to my boss when I went home to change.\n\n\"That would be great,\" I said to Cassie's obvious delight. \"I'll be right back.\"\n\nThe hallway was empty, and I managed to sprint back to my place without being spotted wearing only the towel. Fifteen minutes later, I was sitting on a stool, enjoying an English muffin, and a few strips of bacon at a spot Cassie had cleared on her desk. She sat next to me, still wearing her purple bathrobe, which was still suggestively unbuttoned in the front\n\n\"This is delicious, thank you. Though, maybe next time we should eat at my place,\" I suggested. \"My dining table might help.\"\n\n\"It might,\" she said. \"When I was with Jared I spent most of my evenings out or at his place. Since we broke up, I haven't had many visitors. This is my office as much as home, and it's probably more suited to working than entertaining.\"\n\n\"Out here, maybe. Your bedroom, though&mdash; You seem to have that all ready.\"\n\n\"You like my collection?\"\n\n\"Very impressive,\" I agreed.\n\nThere was a lull in the conversation, as we both focused on our food and coffee. Finally I broke the silence, by bringing up the idea that had been rolling around in my head all morning.\n\n\"I have a question for you. I don't know if this is the best time to bring it up, but here it is. Like I said last night, you're smart&mdash; which is a good thing!\" I quickly added the clarification, remembering how emphatic Cassie was that her partner respect her intelligence.\n\n\"But, because you're smart, \" I went on, \"I have this suspicion that sooner or later you're going to trick me into saying yes. I was wondering: how hard would it be to get a hold of Jared, or maybe find another hypnotist, and just get rid of your habit altogether? Wouldn't that be for the best?\"\n\nWhen I looked over at Cassie, she was clearly terrified by my suggestion. She was trembling. Given her previous behavior, I already knew that smoking must have once been an important part of her life. Looking at her now, it hit me all over again just how much of her identity must have been wrapped up in it for her to react this way.",
        "She didn't say anything, so I asked her a direct question. \"Tell me this isn't what you were thinking about when you first asked Jared to help. You thought about, didn't you? You just weren't ready then. Let me give you a push.\"\n\n\"Yes, sir. I thought about it, sir.\" Cassie was using her whisper-quiet voice.\n\n\"And?\" I prompted. I hadn't intended for her to slip back into her submissive role, but if this made it easier for her to quit, it was alright with me.\n\n\"Jared won't do it, sir. He won't even talk to me. We aren't exactly on speaking terms.\"\n\n\"The breakup was that bad?\" I asked. \"You said he hypnotized you so you didn't specifically need his permission at the end. If he was really that angry, why did he do that?\"\n\n\"Sir&mdash; Sir, I may have lied to you, sir.\"\n\n\"It's okay. Tell me.\" I felt like there was a piece of the puzzle missing. Maybe this was it. I was more curious than angry.\n\n\"So, when he hypnotized me, it wasn't just once. It took multiple sessions. Afterwards he gave me some recordings. He had me listen to them periodically to reinforce his conditioning. Unlike what he could do in the stage shows, Jared said hearing it over and over was necessary to make the programming stick. It took time. When we broke up, he handed me another set of recordings to reverse it.\"\n\n\"That makes sense,\" I said. \"But how did you lie to me?\"\n\n\"Jared, he&mdash; what he recorded didn't make me this way. He said we were done, wanted to take out his suggestions altogether. He said he didn't want to be responsible for me. I had his recordings and editing the audio with Audacity wasn't exactly rocket science. I took his voice, and I cut and pasted from both the original recordings and the second set he gave me when he left. I changed the audio, listened to it, re-programmed myself to be this way. To need permission from whoever I ask. I must have done it right, too, because it worked. I even deleted all the old files, so I couldn't change my mind.\"\n\nI offered her a reassuring smile. \"It's okay, I'm not mad that you lied about it being Jared's idea. In fact, I'm proud of you. Even though you didn't quit cold-turkey, you didn't go back to how you were. That took guts.\"\n\n\"Thank you, sir.\"\n\n\"Is there any particular reason Jared won't talk to you?\" I asked. \"He cared enough to make the original recordings. That doesn't sound as if he hates your guts.\"\n\n\"I might have called him, sir. I didn't use the recordings at first, and I called to get his permission. He got really angry, and then he changed his phone number. I don't have his new one.\"\n\n\"Ah, I see.\" My next move was pretty clear. \"In that case, I may need to call off our dinner this evening.\"\n\nCassie's startled, horrified gaze made me realize how that came across.\n\n\"No, no, you misunderstand,\" I said, reaching out to touch her arm. \"I still love you. I'm just thinking that I may need to take a trip to Las Vegas this weekend, and it may be best if I fly out tonight. If I remember correctly from the website you showed me, Jared has shows every Saturday night. Even if he won't talk to you, he might talk to me. Especially if I'm there in person.\"\n\nCassie stared down at her food. \"Yes, sir. Just&mdash; I know Jared. I don't think he'll agree. Please don't get upset if he won't help. But, if he does, and this is what you want, sir? If you're sure, then I'll do it. For you.\"\n\nShe looked up at me. \"Last night you said, and just now&mdash; Did you mean it? You love me?\"\n\n\"I love you.\"\n\nHer entire face lit up. \"I love you too.\"\n\n<p align=\"center\">&mdash; 5 &mdash;</p>\n\nThirty six hours later, I was in Las Vegas, taking my seat for Jared's performance. My plan was to catch up to him afterwards.\n\nI couldn't help but notice that half the audience was drunk off their asses. Given that I was in Vegas, that probably shouldn't have surprised me, but I had to wonder how well hypnosis worked on drunks.\n\nI never got to find out. Immediately after Jared came on stage, he introduced himself, explained that hypnosis couldn't be used to force anyone to do anything they didn't want to do, and that it was perfectly safe. Next, he instructed everyone interested in coming on stage to raise their hands and then told everyone who had had more than two drinks to lower them again. He even went so far as to reject a few people, and choose replacements when he noticed how much they were weaving back and forth as they made their way forward.\n\nNaturally, I wasn't interested in being hypnotized myself, but I watched the show with some interest. Jared was a tall, blond man, and he had one of those smooth voices that radiated confidence. His body language and demeanor conveyed that he was in absolute control at all times.\n\nThe initial \"induction\" part of the performance was rather boring. The lights went down, and the volunteers on stage were repeatedly told to relax, to listen to Jared's voice. He droned on and on, for over ten minutes. I didn't quite see how this could put anyone in a trance, though the people on stage appeared to respond to his words. Most of them were, at the very least, pretending to fall asleep. Finally, he sent two people who hadn't gone under back to their seats.\n\nWhat followed was about what I expected from a stage hypnotist. Jared led them through several different scenarios. For example, he told one man he was the smartest man in the world and had the answer to every question. Then Jared asked the man to explain Einstein's theory of general relativity. The audience watched as, with utter confidence, he spouted bullshit for almost a minute.\n\nAnother volunteer, a woman, was made to forget that there was a number between seven and nine. Then Jared started asking her how many legs could be found on a spider and how many sides were on a stop sign.\n\nLater, all of his volunteers were made to believe the entire audience was naked. Jared took them aside, behind a curtain before waking them from their trance. Then, one by one, he instructed each of them to recite the pledge of allegiance in front of all of us, the suggestion hitting each of them as they stepped forward.\n\nI had to admit, it was amusing. I wasn't quite convinced that the volunteers weren't either faking it or planted in the audience by Jared, but it was still funny.\n\nJared ended the show with his own personal pitch, advertising his availability for corporate gatherings and fund-raisers. It was the opening I'd been hoping for. He said that anyone who was interested should come up and talk with him afterwards. While I didn't want to hire him to put on a performance, I did have job for him.\n\nAs the audience trickled out of the theater, I approached the stage. \"Jared? I may have a job for you.\"\n\nHe looked up. \"I'm booked through the next two weeks. When did you have in mind?\"\n\n\"Not a performance,\" I clarified. \"It's about Cassie Dalton.\"\n\nHis suave, confident demeanor was gone in an instant. \"Oh, fuck. Please tell me she isn't here in Vegas.\"\n\n\"No, its just me.\"\n\nJared relaxed a bit, but he was still obviously on edge. \"Then, let me guess. She deleted the recordings again?\"\n\n\"Sort of, but that's not&mdash; wait, what do you mean, again?\"\n\nHe looked at me for a few seconds. \"Damn, that would be Cassie. Alright, here's the deal. You're going to buy me a drink, a strong one. Possibly multiple strong ones, since this is about her. In return, I'll explain, and maybe save you some trouble. She's hot but she's crazy, and if you stick around her too long you'll go crazy too.\"\n\nThe theater was in a casino, so naturally we didn't have to go very far to find a bar. Jared got the attention of the bartender: \"Johny Walker Black, neat. And make it a double.\"\n\n\"Same,\" I said handing over my credit card. \"Put us both on my tab.\"\n\nJared turned to me. \"You're sleeping with her then?\"\n\n\"Maybe, so what?\"\n\n\"Mmm.\" Jared didn't seem bothered by this revelation, but there was something on his mind. \"She show you what's in the box by her bed?\"\n\n\"Again, so what?\" I was getting impatient with this line of questioning, and his insinuation there was anything wrong with what Cassie and I enjoyed together.\n\n\"If you've seen the box, you know what I mean. Has she gotten you to use any of it yet?\"\n\n\"The only thing I've taken out of her toy box is a gag. After that, she wasn't in a position to ask about anything else.\" It was technically true, though I had no intention of bringing up everything I came up with on my own.\n\nJared burst out laughing. \"Damn, I should have thought of that.\" He raised his glass of whisky which had just arrived. \"Here's to you, for finally shutting her up. Cheers!\"\n\nI wasn't sure how to respond. I sipped my whisky while he gulped down at least a third of his drink.\n\n\"You realize that trick won't work, forever, though, right?\" He asked. \"She doesn't give up. She'll just start to bug you before you start, and then she'll bitch about it afterwards unless you do what she wants. Like, really, seriously hurt her. I'm telling you, get out now.\"\n\n\"I appreciate the warning, but I think I can handle her,\" I said. Cassie had warned me that they broke up because he wasn't really into what she enjoyed. Still, I was a bit irritated that he was inadvertently criticizing my sexual proclivities, too. \n\n\"I thought I could handle her too,\" Jared said, \"and I get what you're thinking. She's smoking hot. Still not worth it. It's not just that she's submissive. No. She's a walking, talking contradiction. All her fantasies are around being owned, but you say one word to suggest she's not a strong, independent career woman and she'll go all feminist rage-beast. Then, she'll probably insist you punish her for it. I cant even... Any chance you've heard the phrase 'topping from the bottom?'\"\n\n\"No,\" I admitted.\n\n\"I hadn't either. Cassie insisted I read up on BDSM, so I did. That's what it's called when a sub, like Cassie is telling her dom what to do. 'Topping from the bottom.' Demanding the dom does what she wants, how she wants it, even though he's supposedly the one in charge. I pointed out what she was doing and she thew a fit, said that I was weak for not dealing with her crap, that if I were a real man I'd be able to handle her. What the hell do you even say to that?\"\n\nWhen Cassie talked back to me I had no trouble putting her in her place. In fact, I enjoyed doing it &mdash; probably more than I should have. Then again, she was enjoying it too. Maybe Cassie and I really were right for each other, mirror images that fit together perfectly.\n\n\"Well, if she's giving you crap, isn't that what the gag is for?\" I asked.\n\n\"Point,\" he acknowledged. \"But she won't let it go at that, trust me. You have to think ahead.\"\n\n\"I can't help but think it's ironic,\" I said. \"You mess with people's heads for a living. You control people. But then, you're totally freaked out by someone who wants to be controlled.\"\n\n\"Do I like control? Sure. It's fun to get people to do things they might not normally do. But, with Cassie, I always got the feeling she was messing with my head as much as I was messing with hers.\"\n\n\"Speaking of which, you were going to explain what you meant when you said Cassie deleted the recordings again?\" I asked Jared. \"She told me they were gone, not that she'd deleted them more than once.\"\n\n\"You're here in person, so she must have mentioned that I changed my number. Did she tell you why?\"\n\n\"She said you were angry. There's more?\"\n\nJared rolled his eyes at me. \"You could say that. The day after we broke up she called me, told me she'd deleted the files, then asked permission. She was obviously trying to get back together. I told her we were over, and sent her another copy. Next day, she does it again, and then again the day after that, and again, and again, and again, and so on. Get the picture?\"\n\n\"I could definitely see Cassie doing that,\" I admitted.\n\n\"After about a week, I changed my number, I changed my email address, I deleted my Facebook and took this gig in Vegas. She hadn't started physically stalking me, but I got the impression it was only a matter of time. I didn't hear from her after that, so I'd hoped she'd moved on. I can't say I'm surprised you're here, though, and I have to say I'd rather deal with you than her.\"\n\nHe held up his glass of whisky. \"More alcohol, less screaming and crying this way. How about if I give you the files, and from now on you deal with her and leave me out of it?\"\n\n\"I promise, if you help, we'll both leave you alone,\" I told him. \"Except, those recordings aren't what I want.\"\n\n\"So, what do you want?\"\n\n\"I'll get to that,\" I said, \"but first, there's something that's been bothering me that I think you could help clear up.\"\n\n\"Well?\"\n\n\"Both you and Cassie talk about these hypnosis recordings like they're this big deal, as if programming a person is like programming a computer. Now you've got me thinking this is for real because of how you and she are acting, but I really can't tell if I'm being delusional. I've seen your show, and no disrespect or anything, but is this hypnosis thing for real?\"\n\n\"It's fine, that's what everyone wants to know,\" Jared assured me. \"It's for real, though you're probably thinking about it wrong. You need to understand, you really can't make anyone do anything they genuinely don't want to do. For example, it's not like I could hypnotize Cassie to cut out the crazy &mdash; that's fundamentally who she is, it's what she wants. Also, when you're hypnotized, you're aware of it. You remember it. But, don't take my word for it. You ever hear of Richard Feynman?\"\n\n\"No, who is he?\"\n\n\"Was, he died back in the eighties.\" Jared said. \"Big name physicist, worked on the atom bomb, won the Nobel prize. His hobby was cracking safes. Brilliant guy. His big thing was that he never took anyone else's word for anything, he always wanted to test things out for himself to see if they were true. Anyway, he talks about a couple times he was hypnotized in his autobiography. The way he puts it is that the whole time you're hypnotized you're saying to yourself 'I could do something else, but I won't,' which in reality is just another way of saying that you can't. That's what hypnotism is.\"\n\nIt was obvious that Jared enjoyed talking about hypnosis. \"Oh, and by the way,\" he went on, \"you don't realize it, but you've probably been hypnotized before.\"\n\n\"I don't think so,\" I said. \"I'm pretty sure I would remember that.\"\n\n\"You would remember it,\" Jared agreed. \"You just don't realize it was a form of hypnosis. You're with Cassie, so I'm guessing you like books?\"\n\n\"Yes.\"\n\n\"Can you think of a time when you were reading a really good book, when you were completely immersed in what was happening? Afterwards you looked at the clock, and several hours had passed while you were reading and you didn't even realize it. That ever happen to you?\"\n\n\"Sure.\"\n\nJared smiled. \"Congratulations, you were in a trance, not a particularly deep trance, but still a trance. That's all it means to be hypnotized. You're focused on something else, and the real world fades away. The world is still there, you're still there, but your attention is elsewhere.\"\n\n\"Oh.\" I'd never thought about it that way before. \"But, with Cassie, with these recordings, we're talking about behavior afterwards, when she's not still hypnotized. How does that work?\"\n\n\"It's hard to describe, but when you're hypnotized you're suggestible. So long as it's something you're agreeable to, that you actually want, you'll go along with it. Afterwards, you'll remember being given the suggestion, but it just feels natural, instinctual to follow the instruction, and uncomfortable to disobey.\"\n\n\"Again, like Feynman said,\" Jared continued, \"you feel like you could do something else, but you don't, which is the same thing as if you can't. The more times you've been hypnotized and given the suggestion, the more of an instinct it becomes, the more uncomfortable it feels if you don't follow it, and the more you really can't resist.\"\n\nI shrugged. \"I guess I'll have to accept that. Cassie seems to think it worked on her, and I suppose that's what matters. Anyway, I talked it over with her, and I think she's finally ready to take the plunge and give up smoking altogether, permission or no permission. Instead of the tapes from before, can you make new ones for that?\"\n\nJared was staring me as if I'd grown a second head. When he spoke, he slowly enunciated every word. \"She told you she wants to quit smoking.\"\n\n\"That's right,\" I said, not sure what else he was expecting. \"She said she wants to quit.\"\n\n\"To quit smoking,\" Jared repeated.\n\n\"Yes.\"\n\n\"Mother. . .\" Jared didn't finish the expletive he had started, instead trailing off. \"That's a new one, even for Cassie. She used those exact words? She said that she wants to quit smoking?\"\n\n\"Well,\" I began, but it was my turn to pause as I tried to recall exactly what she'd said.\n\nJared went on before I finished trying to remember Cassie's exact phrasing. \"Let me clear this up for you. Cassie's father died of lung cancer. She's never smoked a cigarette in her life, thinks they're disgusting. A couple of times we passed someone smoking on the sidewalk and she made a face.\"\n\n\"What?\" It was my turn to stare at him, with the same bewildered expression he had worn a few moments before.\n\n\"The recordings we're talking about? They have nothing whatsoever to do with smoking. Cassie convinced me to hypnotize her so she wouldn't come, that is, to not have an orgasm without my permission. It was all part of her damn crazy fetish, and I'm telling you, I'm through with it!\"\n\nI blinked at him, stunned. Fragments of conversation from the previous week suddenly took on a different meaning.\n\nI'm not addicted to porn. It's what comes after.\n\nSix weeks! I'm going crazy!\n\nMaybe it starts with 'O' for orgasm. Is that it?\n\nOf course I want more, that's why I was asking!\n\nThis is really how you want me?\n\nIf you're sure, then I'll do it. For you.\n\nHoly shit.\n\nThat first night, that's probably why she had been trying to seduce me. Not only was she already horny and frustrated, if she'd gotten me into bed it would have been perfectly natural to beg me to come. I hadn't given her a chance, though.\n\nWhen she tried to explain over dinner she assumed that I'd figured it out from her comment about the porn, and then I told her no. That, especially when coupled with what I did to her later that night, fed right into her fantasies.\n\nAll that time, I had control of her orgasms and I didn't even realize it. She was repeatedly, genuinely begging to come, and I kept saying no. But that was also what turned her on, being submissive, being denied the orgasms she desperately wanted. Every time I said no, it must have turned her on even more. And she still couldn't come.\n\nShe sucked me off every night for the last week, got to watch me come while being denied that same privilege. Then, on Friday night, I'd spent half an hour eating her out. When I told her what I was about to do, she must have assumed I would give her permission. Then I told her no, silenced her, and she had to endure thirty minutes of teasing.\n\nNo wonder she'd been screaming so loudly into the gag.\n\nDamn. That was hot. For all intents and purposes I owned the most intimate part of her.\n\nI loved the idea of having her under my power this way. While I was a bit worried that leaving her like this would be taking advantage of her in the worst way, I had to remind myself: she did this to herself. Some part of her wanted this. I was only giving her what she wanted. \n\nNo, what she needed.\n\n\"I didn't know,\" I told Jared. \"Cassie wasn't clear. Now that I think of it, she didn't explicitly say it was about cigarettes. I jumped to the wrong conclusion.\"",
        "Jared smirked. \"I wouldn't worry about it. Messing with you like this? It's what she does. I take it she didn't mention the edging either?\"\n\n\"The what?\" I was pretty sure the misunderstanding was entirely my fault, but if Jared was content to assume that Cassie had intended the deception I had no reason to correct him.\n\n\"Edging. It's when she brings herself to the brink of an orgasm, then stops. She can't really go over, even if she tries, but she can get right to the edge. Basically, it keeps her horny and desperate all the time.\"\n\nWhen I didn't say anything he got a little defensive. \"Hey, she asked for it, demanded it, even. It sure wasn't my idea. When I hypnotized her I gave her the suggestion that any time she either goes to bed alone, or wakes up alone she has to edge herself twice. That is, she has to get worked up, stop, cool down and then do it all over again a second time, every morning and every evening she isn't sharing her bed with anyone.\"\n\nI remembered how sad Cassie looked every time I said goodnight. Every night, I'd been sending her home alone to tease herself silly after taunting her with what she was denied.\n\nAlso, on Friday morning I hadn't been in bed with her when she woke up. I was already in the shower. Did that count as alone? With the water running, I probably wouldn't have heard her. When she was standing there half-naked in her purple bathrobe, just how horny had she been?\n\n\"So, she did use the files I gave her, then?\" Jared asked, suddenly puzzled. \"Otherwise she wouldn't have sent you here to put her back the way she was. Or am I missing something?\"\n\nI proceeded to explain how Cassie had edited the audio.\n\nJared was soon nodding along as I spoke. \"That sounds like her. I'm a little surprised it worked, but the key to making a suggestion take is that the subject has to want it. Going to all that trouble, she must have really wanted it. I'm sure that helped. It begs the question, though.\"\n\n\"What question?\" I didn't follow what he meant.\n\n\"I told you, you can't hypnotize someone to do something they don't want to do. I wonder. Even if you got her to listen to the audio to remove the suggestion, would it work?\"\n\nI shrugged. \"You're the hypnotist. You tell me.\"\n\n\"The thing is,\" Jared said after a moment's consideration, \"I don't know how her mind works or what she really wants. I could never quite figure her out. She'd beg me for permission to come. Afterwards, after I gave her exactly what she said she wanted, she'd go off on me for making it too easy for her. What does she really want? Hell if I know.\"\n\nJust as I'd suspected, being denied was her fantasy. It was cruel and controlling, but Cassie craved that cruelty, sought to give up control. She pushed away anyone who couldn't do that for her. Inadvertently, I'd given her exactly what she wanted, and I was only too happy to keep on doing it.\n\n\"Hmm.\" It was my turn to consider. \"I'll tell you what. Why don't you give me the original files, but then make another set of recordings as well. Don't worry, I can pay you. Here's what I was thinking...\"\n\nI proceeded to explain what I had in mind. Jared was reluctant at first, but after he had a few more drinks in him and a substantial sum of cash changed hands I managed to wear him down.\n\nFor an exorbitant price, and a promise that neither Cassie or I would ever bother him again, Jared agreed to what I wanted. He was even willing to make me a few back-up copy on old-fashioned audio CDs along with the files on a thumb-drive that Cassie preferred.\n\nAdditionally, I made him promise never to tell Cassie about my initial misconception. He didn't seem to have a problem with that, merely commenting, \"No problem, just keep her away from me. After this, she's your problem.\"\n\nMy return flight was a red-eye the following evening, and Jared told me he would have what I wanted ready by three o'clock, before my flight. For what I was paying, he was willing to get the job done very quickly. That left me a lazy Sunday in Las Vegas with little I needed to do, and a lot to think about.\n\nWithin an hour of when I woke up my thoughts quickly gravitated towards a certain course of action. I wasn't particularly surprised to discover that Las Vegas had an even better selection of establishments that specialized in items of an adult nature than New York. I had no trouble finding one that carried the item I wanted to purchase.\n\nI definitely picked the right place. In addition to what I wanted, the shop I visited sold some custom accessories that they manufactured in-house. In particular a deluxe wooden storage chest caught my attention. It was much nicer and than the smaller black storage unit offered by the manufacturer and offered a few important extras as well. The deluxe model was a good match for Cassie's toy chest even though it was meant to store only one thing.\n\nI bought what I came for along with the deluxe storage system and paid another eye-watering sum to have it all shipped back to New York overnight. All together, though, it was still significantly less than what I'd paid Jared.\n\nIt didn't really matter. It was only money, my firm paid me well, and I hadn't taken a vacation in years. Besides, my recent purchases promised to provide better entertainment than a hundred vacations could ever possibly deliver.\n\nBefore boarding the airplane I called Cassie. I kept it brief, telling her that \"Jared was very helpful,\" without going into details. I did, however, mention that I was bringing presents home for her.\n\nI could here her trepidation over the phone. \"I look forward to it, sir.\"\n\n\"Wonderful,\" I replied. \"I'll see you tomorrow at six thirty. I love you.\"\n\n\"I love you too, sir.\"\n\nAfter that, I boarded the plane and slept like a baby all the way back to New York. Yes, I'm one of those people who can actually get a good night's sleep on an airplane. I've been told it's a rare talent.\n\n<p align=\"center\">&mdash; 6 &mdash;</p>\n\nLuckily, they shipped my new acquisition all in one piece, so no assembly was required. I had it unpacked by the time Cassie knocked on my door.\n\nShe was wearing a classy black cocktail dress that closely hugged her amazing figure. \"Good evening, sir. How was your trip?\"\n\nCassie didn't usually start calling me 'sir' until after dinner. She was clearly anxious to learn what 'presents' I'd brought back for her.\n\nI deflected the topic of conversation away from the elephant in the room, as we sat down for dinner. \"Well, I finally got a chance to finish the books you lent me. I have to say, I wasn't quite expecting things to take a turn like that in Last Argument of Kings.\"\n\n\"The author did give you plenty of hints,\" Cassie noted.\n\nI was pretty sure she didn't know that I'd misunderstood the nature of her habit before I left for Vegas, and I sure wasn't going to tell her. Nevertheless, I briefly wondered if we were really talking about books.\n\nIn addition to the Chinese food laid out on the table, I'd placed the compact disc that Jared had given me to one side, in clear view. I had also labeled it prominently, with a red sharpie: For Cassie. \n\nShe asked about it at the first opportunity. \"Is that what I think it is?\"\n\nI enjoyed keeping her in suspense. \"After dinner. Eat first.\"\n\nShe didn't raise the subject again, but throughout the meal Cassie's eyes kept darting back towards the CD. In fact, she was sufficiently fixated on it that she didn't comment on the new addition to my living room until we were almost finished with the food.\n\nCassie pointed. \"Is that new? It looks a little like the one in my bedroom.\"\n\n\"Yes, I was wondering when you would notice.\"\n\n\"What's inside?\"\n\n\"After dinner. No need to rush.\"\n\nCassie's expression as she pouted was remarkably cute. Her eyes were both expressive and remarkably beautiful. I decided to give her a hint as to what I had planned. \"What if I told you that later tonight, you might have a chance to get what you want?\"\n\nShe looked at me, surprised but obviously hopeful. \"Sir? But, I thought you didn't approve, sir. You said you weren't ever going to give me permission. You've changed your mind?\"\n\nI didn't directly answer the question. \"Last Friday, when I woke up before you, did that count as waking up alone?\"\n\n\"Yes, sir, it did. I used my hands. \"\n\nI'd guessed right. \"I didn't know about what you've been doing when you go home at night and in the morning until Jared filled me in,\" I admitted. \"You never mentioned that.\"\n\n\"I'm sorry, I should have told you, sir. Maybe I need another lesson, sir.\"\n\n\"You just might,\" I said. \"But first, I want you tell me how you felt that morning. If I'm going to be here for you, I want to know you, and that means I want to know what you're thinking. Now, be totally honest.\"\n\nShe glanced at the CD again. \"Is this about&mdash; Or do you mean when I first woke up?\"\n\n\"When you woke up.\"\n\n\"I woke up when I heard the shower. It startled me, since I never have anyone over. Then I remembered you. But, you weren't in bed, so I did what I always do when I wake up, and - Oh god, just thinking about you, about that night, made me so wet. You were out like a light but you had me so worked up it took hours to fall asleep! I was practically still dripping when I woke up and then I had to edge and &mdash; It didn't take long at all. Care to guess why?\"\n\n\"Tell me.\"\n\n\"Because, sir, I was thinking about what you do to me. Before you, I'd think about my lame exes, or characters from the books I read. But with you, it doesn't even compare, you're so perfect.\"\n\n\"I'm flattered,\" I said. \"I suppose that means I've been doing my job properly.\"\n\n\"Yes sir, anyway, sir, it didn't take long. Afterwards, after getting so close, it was even worse. All I could think was how I needed you right then, right there, to finally, finally, finally let me come! I needed it so bad, and I still do sir, I really do. It took effort not to just reach over and pull off your towel when you came out of the bathroom. I was holding two coffee cups remember? I thought it was best if my hands were already full.\"\n\nI did remember. I didn't say anything and Cassie went on.\n\n\"I was so happy you agreed to stay for breakfast, but then&mdash; I used to get off two, three, four times a day and giving that up was the worst thing I could imagine, but that's the whole point, isn't it? It's not that I want to go without, it's that I want someone, I want you, to tell me no. I want it because I hate it and you're making me do it anyway, and I love, love, love when you do that to me. Or, like you said, for me. And even though you're doing this, and even though you know how screwed up I am, you still say you want me. That's why I love you.\" \n\nThe last part all came out in a rush.\n\n\"You're not screwed up,\" I said, maybe a bit too forcefully. \"Stop saying that. You're just a sub. And yes, I do want you. I'm not only saying that, I mean it. Never forget it.\"\n\nCassie had finished her food some time ago. She reached across the table and picked up the CD. I think it was her way of telling me that she was ready to accept whatever I wanted from her.\n\nI gently took the CD from her hands and placed it back where it had been. \"I think you might have some idea what's on here, but not yet. First, let me show you the other present I have for you.\"\n\nI walked over to the chest that she had noticed earlier. \"It's a bit like a puzzle box. The top doesn't lift up like on yours, but instead the three panels on top slide out.\"\n\nFirst, I undid a clasp and folded down a two inch strip along the top edge. This allowed me to slide the three top pieces forward and out. The narrow panels on the left and right sides were smaller, with the larger panel in the center.\n\nThe under-sides of the two smaller panels were covered in thick padded leather. I flipped the panels over and slid them back into place. In this way, the left and right side of the top surface were converted from smooth, polished wood to leather cushions. \n\nNext, I reached down into the chest through the hole revealed by the removal of the central panel. I pulled out a set of six leather cuffs, and handed them to Cassie.\n\n\"Remove your clothes and buckle these around your legs. Three on each leg,\" I instructed her. \"The small one goes around your ankle, the next largest just below the knee, and the largest at the top, around your thigh.\"\n\nI paused what I was doing and watched as Cassie complied. I never got used to watching her strip for me. She wriggled the figure-hugging dress down her body, and my cock stiffened in my pants as she let her breasts sprung free from her bra.\n\nThere was a dark patch on the fabric of her panties, clearly visible before she pulled them off. I approached her and ran a finger very gently over her exposed pussy. \"You're already wet,\" I observed.\n\n\"It's been seven weeks, and we were talking about what you do to me. What did you expect?\" Cassie paused for a few seconds before adding, belatedly: \"Sir.\"\n\nI gave her a non-committal nod and walked back towards the puzzle-box chest, as she began to buckle on the leg cuffs.\n\nI reached down into the open chest again. \"I admit I've always been skeptical of how effective this whole hypnosis thing, so tonight we're going to do a little experiment.\"\n\nThis time I pulled out some rope, a pair of wrist restraints, and then, finally the iconic, black half-cylinder a little over a foot long on each side. It had a domed top, crowned with a narrow flesh-colored strip that sprouted a dildo in the center. Once everything was out, I slid the central top panel back into place and placed the large device on top of it, between the two cushions.\n\n\"You may recognize this as a Sybian, the world's most powerful vibrator,\" I told Cassie as she stared. \"My new piece of furniture, here, is designed not only to store the Sybian, but to restrain a beautiful girl such as yourself on top of it. This machine was designed to rip the orgasms out of a woman whether she wants them or not. You do not have my permission to come, but I'm genuinely curious how your body is going to react to a Sybian ride.\"\n\n\"I... I don't know sir.\"\n\n\"Me neither. Let's find out. \"\n\n\"Yes, sir.\" The apprehension was clearly audible in her voice.\n\nI checked the leg cuffs she'd buckled on, and rotated them slightly, so the D-rings were facing out and away from her body. The bondage gear looked amazing on her, as I knew it would.\n\nOver the previous week I hadn't used restraints, but merely ordered her to remain in position as I proceeded with my \"lessons.\" However, the restraints came with my the storage system, and it seemed a shame not to make use of them.\n\nI motioned towards the leather padding on either side of the vibrator. \"Now, step up here. Stand on the cushions first, and then lower yourself down.\"\n\nAs Cassie delicately lowered herself onto the dildo, it went in with a loud, wet noise.\n\nShhhhlorp.\n\nWith the dildo entirely inside her, she was kneeling on the soft leather, straddling the Sybian. I used the rope to tie the ankle cuff on each leg to the thigh cuff, preventing her from unbending her legs. There were two small D-rings on each of the two top side panels, under the outer edges of the cushions. Using more rope, I secured her knee cuffs to the front rings, and the ankle cuffs to those in the rear. Finally, I restrained her wrists behind her back.\n\n\"Now, try to get up,\" I told her.\n\nCassie rocked forward and backwards, but that was the only freedom of motion the bondage allowed. No matter how she wiggled, her clit was still firmly pressed against the Sybian, and the dildo remained where it was.\n\n\"I can't, sir,\" she said, confirming that I'd done it right.\n\n\"Good.\" I plugged the Sybian into the power outlet, but didn't turn it on. \"Tonight's lesson is going to be a little bit different than in the past. Tonight, I'm going to teach you what the limits of your conditioning really are. However, as before, we can end this experiment at any time if it gets to be too much for you. Just say 'I've learned my lesson,' and I'll turn it off, but in that case we'll be done for the evening. Understand?\"\n\n\"Yes sir.\"\n\n\"Then let's begin.\"\n\nThe machine roared to life as I flipped the two switches and twisted the control dials. I set the speed of both the dildo and the vibrator to an intermediate level &mdash; not too low, not too high &mdash; and sat back to watch the show.\n\nHer hands and feet started twitching almost immediately. Soon she was moaning and begging.\n\n\"Oh god, I need it, please, please, please, may I? Oh fuck Oh, oh, oh. Aaaah.. Fuck!\"\n\nShe rocked and squirmed as much as her bonds would allow, and as she moved her breasts jiggled along with her. I couldn't quite tell if she was trying to get more stimulation from the machine to finally come or whether she was trying to lessen the sensation because she knew she couldn't.\n\nAs the minutes ticked by her volume and her desperation steadily increased. The curved sides of the Sybian glistened where Cassie's fluids trickled down in a torrent. Her moans became shouts and then screams. She was no longer forming words, her vocabulary reduced to gibberish.\n\nShe hadn't said the magic words, though. She hadn't told me that she'd learned her lesson.\n\nI had to wonder if, in her present state, she could articulate or even remember the phrase which was effectively her safe-word. I considered whether I should simply stop now but decided against it. She hadn't said the words and she'd made it clear she wanted the hard-core treatment. Besides, I'd never heard of anyone getting seriously injured from merely riding a Sybian.\n\nSo, no, I wasn't done. She'd already been going for fifteen minutes, and I had no idea whether she'd come or not. Those could have been screams of agony or ecstasy. I decided to give her five more minutes, but to use that time to really push her limits.\n\nI twisted both dials on the Sybian controller to their maximum settings.\n\nCassie's reaction was immediate. Her whole body tensed and spasmed, and the pitch of her voice went up an octave to a constant, high-pitched shriek.\n\nIt was a good thing these apartments were sound-proof. It was a new high-rise building and part of the sales-pitch for the place was that everything was sound-proofed. In spite of the price, that feature had originally appealed to me because I valued a quiet, peaceful environment to read before bed. Now I was thankful I had the benefit of that luxury for a completely different reason.\n\nWhen I finally turned the Sybian off, exactly five minutes later, Cassie stopped shrieking. She went back to spouting gibberish, albeit more quietly than when the vibrator was running.\n\n\"Talk to me,\" I said gently. \"How do you feel?\"\n\n\"Uaaahhh...\"\n\nI got her a glass of water from the kitchen and raised it to her lips so that she could sip it. She drank eagerly, and that seemed to help.\n\n\"Better?\" I asked.\n\n\"Y-Y&mdash; Yes, sir.\"\n\nI was quite relieved that she was forming words again. \"So, did you have an orgasm?\"\n\n\"I? Did I&mdash; Honestly. I just don't know, sir.\"\n\n\"You don't know?\"\n\nI don't&mdash; It was too much. It hurt, it still hurts, but I don't remember an orgasm. I couldn't, but I was there, and it hurt, and it got so bad, so, so bad and then it got worse&mdash; and I just don't know, sir. I guess, I don't think so, but that was &mdash; I don't know what that was. I can't even describe it.\"\n\nInteresting. Evidently her conditioning was still working even when confronted with a Sybian.\n\nCassie was still panting. I offered her more water.\n\n\"In that case, \" I said slowly, \"you now have my permission to come. Tell me when you do.\"\n\nThen I turned the Sybian back on and dialed in a very low setting.\n\nAs I suspected, it didn't take her long, even at that slow speed. Cassie trembled as she approached the release she'd been denied for so long. \"Oh fuck, thank you, thank you, sir. Oh my god, that's what I need, yes! I'm coming! I'm holy&mdash; yes! Yes, yes, yes!\"",
        "I waited for the spasm to pass. \"You needed that?\"\n\n\"Yes, thank you sir! Yes. Okay, okay. Damn, okay, you can turn it off now. It's&mdash; I'm&mdash; sensitive. Please?\"\n\nI didn't react, but merely smiled as her pleas become more urgent. \"Ow-&mdash; Okay, okay, seriously, that's enough. Just please turn it off?\"\n\nI let my smile grow even wider. \"I could, yes. But since you haven't come in seven weeks, it would be such a shame to give you just the one orgasm. We need to get it out of your system. You still have my permission to come.\"\n\n\"Oh, fuck. Please? You can't&mdash;\"\n\n\"Oh, but I can,\" I told her. \"Riding the Sybian there, you remind of a piece of fruit. A lemon or an orange, maybe. An exceptionally beautiful orange sitting on top of a fruit juicer, getting all her juice squeezed out.\"\n\nTo emphasize my point, I ran a finger up the dome of the Sybian which was covered in her juices. I traced the slick surface up to the spot where her delicate skin was forced against the machine. Then I held my wet, dripping finger up to her lips.\n\nI didn't even have to ask. Cassie instinctively knew to lick the finger clean.\n\nI was done talking for the moment, so I turned both dials on the Sybian all the way back up to the maximum speed.\n\n\"Fuck! Too much!\" She yelled. Too much! Ohhhh..\"\n\nNotably, she still hadn't told me that she'd learned her lesson, so I didn't touch the controls. Within a minute her shrieks were as loud and high-pitched as they had been when she was denied. Possibly even louder. It was hard to tell at that volume.\n\nCounting her orgasms after the first two became challenging, as she began to roll straight from one to the next. I had to start constantly repeating, \"You have my permission to come,\" over and over to make sure she got the full effect.\n\nI kept forcing orgasm after orgasm out of her for a full fifteen minutes. The skin over her entire body glistened with a thick sheen of sweat and her eyes were wide as saucers when I finally turned off the machine.\n\n\"We're done with the Sybian for tonight,\" I told her. \"Really, I promise.\"\n\nI'm not sure if my words registered. She was having trouble forming words again. I gave her another drink of water and gave her some time to calm down. While I was waiting for her to come back down to Earth, I carefully untied the ropes, freeing first her hands and then her legs.\n\nShe was shaking as I took her hand and helped her first to stand and then step down from where she was perched. As I guided her over to my couch, she was still making guttural animal noises.\n\n\"Gu, muhm fuuuu...Oh. God. Dayumm. That- That was... Holy shit.\"\n\n\"She speaks!\" I kissed her on the forehead, and wrapped my arms around her as I sat down next to her on the couch. Cassie seemed to appreciate that.\n\nAfter wordlessly holding her for a few minutes, I walked over to the table and retrieved the CD. \"Why don't you catch your breath while I help you out of those leg cuffs, and tell you about what's on this,\" I said.\n\nEven through her exhaustion, I could see the anticipation mixed with dread in Cassie's body language.\n\n\"It's not quite what you think,\" I told her.\n\nI kneeled down in front of her, to unbuckle her ankle cuffs as I spoke. That position allowed me to not only remove the restraints, but also offered a beautiful view of her engorged, overstimulated pussy.\n\n\"The real problem,\" I explained, \"is that you've been a very naughty girl, tricking people into giving you what you want. So, we're going to fix that. This will give you three new hypnotic suggestions. The first is that in order to get what you want you will need to ask the question in a very specific way. \"\n\nMy hands moved over her bare legs, removing the restraints below her knees as I went on. \"In the future you will need to ask: 'May I please have your permission to experience a mind blowing orgasm?' Further, if all you get is a 'yes,' that won't be enough anymore. The response must include the phrase 'mind melting orgasm' or it doesn't count. \"\n\n\"It's not forever, then?\" Cassie perked up noticeably.\n\n\"No,\" I said, getting back up on the couch to work on removing the final pair of restraints around her thighs. \"Not forever. Note the difference though: you need to request a mind blowing orgasm but, the response needs to refer to a mind melting orgasm. That means it won't happen accidentally. No more tricks from you, young lady.\"\n\n\"Yes, I understand. Thank you sir.\" Cassie squirmed where she sat, but she was smiling.\n\n\"Second,\" I said, \"I expect to sleep beside you for the foreseeable future. While I will have time in the evenings to see to your instruction I am often in a rush to get out the door in the morning. Therefore, the second suggestion we're going to give you is to make sure you edge every morning whether I'm still in bed or not. Also we're going to up the number from two to three during the week, and five on the weekends.\"\n\n\"Five?\" Cassie squeaked, as she squirmed some more. I had to wait a moment for her to settle down, before I could take off the last thigh-cuff.\n\n\"Yes, five on Saturday and Sunday. You should have more time then, so I think it best to use that to further your instruction.\"\n\n\"Yes&mdash; Yes sir.\"\n\nWith her cuffs off, I got up and began to pack the restraints and the Sybian back into the chest.\n\n\"That brings me to the third new suggestion,\" I said as I unplugged the Sybian.\n\n\"From now on, after you ask someone the magic question, no matter what answer you get, for the following month that person will be the only one you may ask. After a month has passed and you haven't asked the question, you may ask anyone. This ensures that after I give you permission you can't sneak out and ask someone else. Additionally, it means that, unlike with our current arrangement, if I get hit by a bus tomorrow and haven't given you the required permission, you still have options.\"\n\n\"That&mdash; that's very generous, sir. But please don't get hit by a bus. I love you.\" She paused, apprehensive. \"You are planning an staying longer than a month, aren't you, sir?\"\n\n\"Oh, yes. Absolutely.\" With the storage and restraint system reduced once more to an innocuous wooden piece of furniture, I returned to sit beside Cassie on the couch.\n\nI kissed her on the forehead again to emphasize my point. \"If I have my way, you're going to be with me forever. I expect you're going to be begging for permission far more often than once a month, in which case nothing will change. That's up to you, though. The idea is that if anything does happen to me, you'll be alright.\"\n\n\"Thank you. That's perfect, sir.\"\n\nI took her hand and looked straight into Cassie's expressive green eyes. \"Jared never understood you, but I think I do. You're special. Of course you're going to share all the wonderful, amazing things you do and build with the world. I have issues with technology, sure, but I get it. You want to go out there in public and be the amazing person you are. To metaphorically get up on stage where everyone can see your talent and you can hear their applause. I want you to know I'll always respect that. But &mdash; but at the same time you have your little secret.\"\n\nAs I spoke I let my other hand, the one not holding hers, drift gently down her naked body. My fingers moved gently towards the sensitive, bright-red region between her legs, but I didn't touch it. I didn't want to cause her any pain just now, so instead I traced around her inflamed sex and over her inner thighs.\n\n\"Your secret is that as incredible as you are, there's a part of you that's not yours, that's owned, that needs to be owned. You share your talent with the world, but when you come home, behind closed doors, you need to surrender completely. Jared saw that as a contradiction, but it's not, is it? It's just another part of who you are. And maybe every now and then during the day, maybe even when you're up on that stage basking in the applause of the crowd, you'll feel how wet you are. No one else will be able to tell, but you'll know, because it's your secret and it makes you happy. Isn't that right?\"\n\nShe wrapped herself around me in one of her crushing hugs, and whispered in my ear \"Yes, yes, yes, that's it exactly. I love you sir, I love that you own me.\"\n\n\"Good. Have you worked out why I gave you permission to come tonight?\"\n\nCassie nodded vigorously \"Yes. You made me come over and over like that, you made me come so much that it hurt. I felt like I was on fire. It was, like, aversion therapy, wasn't it, sir? To teach me that getting what I want has consequences. I think I understood your lesson tonight, sir.\"\n\n\"You're only half right. That was why I used to the Sybian to make you come, yes. However, that isn't why I let you come in the first place. Think about it.\"\n\nShe took a moment to think, but when she spoke her tone was puzzled. \"Then I don't know, sir. Why?\"\n\n\"Right now, at this moment, I haven't given you the new suggestions yet, but I have given you permission to come. I wanted to give you the choice. The next time you ask for permission and I say no, you're all mine again. But, as of this moment, there's no reason for you to be with me unless that's what you truly want. Theoretically you could run out and find Barry again.\"\n\nCassie's eyes opened wide in surprise at my revelation. Several seconds passed before she decided on what she wanted say.\n\nWhen she did speak, it wasn't what I expected. \"Just so you know, I didn't pick you at random. On the elevator. I'd seen you around and you always seemed so focused, so intense about whatever you were doing. I saw you and I couldn't help but think: if he would only focus a fraction of his attention on me I would be a very lucky girl.\"\n\n\"So, now that you have my undivided attention, do you feel lucky?\"\n\nThis time, Cassie responded instantly. \"Oh, yes! May&mdash;\"\n\n\"Ah.\" I interrupted her. \"Before you ask any questions that may have lasting consequences, there's one more thing you should know. Jared told me that hypnotic suggestions as complex as these three will take a bit of time to sink in. Tell me, what's the longest you've ever denied yourself.\"\n\nCassie's voice dropped to the ultra-quiet whisper she used when she was nervous. \"Seven weeks, but I didn't do that myself. That was you, sir.\"\n\n\"And by the end there, you were a hot mess, weren't you?\"\n\n\"That would probably be an accurate description. Yes sir.\"\n\n\"What you need to understand,\" I said, \"is that in order to be sure the suggestions hold, you'll need to listen to the new recordings once a day for at least six months. Actually just to be sure, let's call it an even seven months. A bit over four times as long as what you just did.\"\n\nCassie opened her mouth to say something but I shushed her again.\n\n\"Let me finish. I want you to know that I'm not going to give you permission until that time is up. Once you ask, you're absolutely committed. Further, I should add that over the next seven months, I intend to test out every single item you have in that box by your bed. I also plan on watching you ride my new toy on a regular basis, except in the future I'm going to skip the part where you get to come. I expect you'll find the lesson plans I've drawn up for you to be quite challenging. Do you understand?\"\n\nCassie flashed me the biggest, sexiest smile I'd ever seen on her, or anyone else for that matter. Everything about her body language radiated pure joy. \"Yes, sir, I understand sir. In that case, may I please have your permission, sir?\"\n\n\"No, you may not.\" It was my turn to grin. \"Now, let's get you cleaned up, and we'll head to bed.\"\n\nCassie let out a long satisfied sigh and clutched me tightly once more. \"Yes, sir.\"\n\nWe showered together, which is one of those activities that sounds a lot more arousing than it actually is. Only one person can stand at the end of the bathtub towards the spray, which means the other person gets to stand at the far end of the tub waiting for a turn while covered in rapidly-cooling, soapy water.\n\nWhile I enjoyed watching the water flow over Cassie's naked body, it didn't change the fact that I was getting cold while I waited for her to finish washing her hair.\n\n\"Switch places with me,\" I instructed her. \"I need to rinse off.\"\n\nShe must have recovered from her earlier ordeal, because she had no problem asserting herself. \"Just a minute, I'm almost done with my hair.\"\n\nI gave her exposed ass a light smack. \"Now. \"\n\n\"Mmmm, careful.\" She didn't move. \"You might want to think twice before threatening a girl with a good time.\"\n\n\"How about another month without a good time? Move your ass or it's going to be eight months instead of seven.\"\n\nCassie reached for her bottle of shampoo, and pretended to read the label. \"Well I'm done rinsing, but this says I should repeat.\"\n\nShe squirted some shampoo into her hand and started working it slowly into her hair. \"I usually don't, but I want to look my best for you, sir.\"\n\n<p align=\"center\">The End</p>\n\nAs you might be able to guess from this story, I'm a bit of a bookworm. All books referenced are both real and highly recommended. Feynman has multiple autobiographies, but the one Jared quotes is Surely You're Joking Mr. Feynman. The book that Bob finished on his trip, The Last Argument of Kings, is the third book in Joe Abercrombie's First Law trilogy.\n\nFor those of you annoyed that I've been working on this instead of my other work, rest assured that I haven't forgotten about Morgan. I wrote this story for two reasons. \n\nFirst, I wanted to actually finish a story. Even after I finish part two of Complementing Morgan, that story won't be concluded. I expect there to be four parts. I wanted to take some time and create something that was complete in and of itself.\n\nSecond, I wanted to prove that I was alive and writing. I initially expected this story to be much shorter than it turned out to be. When I started I had the goal of making this 5-10k words, even though it eventually topped out at 28k. My initial goal was to write something relatively fast that I could post to prove I hadn't fallen off the planet. \n\nWhile this project turned out to be larger and more time-consuming than I originally anticipated, I'm very happy with the end result, and I hope you enjoyed it as well.\n\nAs always, all constructive feedback is much appreciated. "
    ],
    "authorname": "DystopianArtificer",
    "tags": [
        "hypnosis",
        "bdsm",
        "spanking",
        "blowjob",
        "books",
        "orgasm control",
        "denial",
        "orgasm denial",
        "female orgasm denial",
        "forced orgasm"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-say-no-2"
}