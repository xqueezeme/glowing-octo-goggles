{
    "title": "I Love You Because",
    "pages": [
        "Note from Jake Rivers\n\nThis is my sixth semi-annual \"invitational\". The initial one was based on the Statler Brother's song, \"Bed of Rose's\". The second used the Marty Robbins El Paso trilogy: \"El Paso\", \"El Paso City\", and \"Faleena\". The third had stories based on the various versions of \"Maggie May\" or \"Maggie Mae\". The fourth invitational was based on any Country & Western song and the fifth on songs by Merle Haggard.\n\nThe current invitational is based on any song written or performed by Willie Nelson.\n\nRegards, Jake\n\n****\n\nAuthor's Note\n\nI've chosen \"I Love You Because\" that Willie Nelson, among others, sang. Thanks for reading this fictional story, and know that I appreciate all your votes, comments and feedback.\n\n****\n\nTrying was useless, and Wade understood that. As a young boy, he'd tried to behave only to have his mama whip him so bad the bruises stayed for a month. By twelve, his attempts to stay away from trouble resulted in broken arms and ribs. Before he was nineteen, he had given up all efforts. \n\nIt wasn't long before his so-called friends talked him into a crime spree. For fifteen years, he'd been behind bars more than on the street. Each time he'd tried to turn his life around, something knocked him back down. With his latest boss stomping through the warehouse aisles now, Wade knew nothing had changed. \n\n\"Flynn, yer fired. I warned ya ta keep yer hands clean. Git yer stuff outta the locker room'n git ta the office fer yer pay. See if'n I hire me another con agin,\" the pudgy man yelled. \"Yer all worthless. They aughta' put all yer sissy asses in'a room an let ya fu\u2014\"\n\nWade didn't stick around to listen to the rest of the man's tirade. He'd heard the same thing before anyway. The bored redhead sitting in the dingy office figured out his hours, taking her time to write out a check, daring him to complain. Tossing it his direction, she picked up her nail file and turned her back to him.\n\nCheck in hand, he walked out. \n\n\"God damn this town! There has to be somewhere better than this!\"\n\nEyeing the almost empty gas gauge, Wade decided there was enough to make it to the run-down trailer park across town. He'd cash his paycheck and put some gas in the truck in the morning, then hunt for a new job. \n\nStale cigarette smoke, old beer, body odor and cooking grease mingled to leave a horrid stench. The rickety screen door sprang back on its rusted hinges as he went inside. A judge berated those in her courtroom on the old TV in the corner. Piles of clothes, clean and dirty, littered the worn carpet and hid the recliner. Torn cushions covered the sagging sofa. This was his reality; what he called home.\n\n\"Ain't time ta be home,\" a raspy voice shouted from the corner.\n\n\"Short shift today, Lou,\" Wade replied, kicking aside an empty pizza box on his way to his room.\n\nThere was no reply, nor did Wade expect one. The old man had already gone back to watching his television show. His mother's third husband, Lou had taken him in when there was nowhere else to go. She'd died in a car accident while Wade was in prison, and he had no siblings. It wasn't as if he didn't pay more than his share though, Wade thought as he closed out the noise and stench. \n\nDozing on the lumpy mattress, the unmistakable rumbling of a train woke him. He waited for the whistle, knowing it would be next. The tracks ran right next to the trailer park, a perfect view from his window. \n\nToday he wanted to pack a bag, run alongside the slow-moving train, and hop into one of the empty cars. Visions of the bums he saw as a kid made him smile. Where would he end up? Would anyone miss him? The desire to leave was so deep, he found himself starting to sit up.\n\n\"Ah hell, I can't leave Lou,\" he muttered, resigned to staying.\n\nThe clanking of the wheels was almost hypnotic, and Wade fell asleep before the caboose chugged past his window. A cool breeze floating across his face woke him during the night. His alarm clock showed ten after three, yet Wade swore he heard the television. \n\n\"Now he's falling asleep in front of the damn thing? What next?\" he whispered into the darkness.\n\nKnowing it wouldn't do any good to wake the old man to get him to move, Wade rolled over and ignored the sounds. It was close to ten before he made his way into the cluttered living room the next morning. \n\n\"Lou, you need to get up and have some breakfast. It's time for your pills.\"\n\nWade touched the old man's shoulder, recoiling in shock. His skin was gray, mottled, and cold. Feeling for a pulse, he found nothing. The sounds of a morning game show droned on in the background, reminding Wade how he'd heard the TV during the night. Now it was obvious why. After dialing 911, he sat on the filthy sofa and waited.\n\nHe watched as they lowered the wooden casket into the ground a few days later. The pastor nodded and mumbled his sympathies before escaping into a blue mini-van. Any other time, Wade would have chuckled at how the man went out of his way not to touch him. Today, he just didn't care. \n\nSlamming the door of the old pick-up, the words bubbled up in his chest. The last thing that had held him to this judgmental town was gone. Pulling out of the cemetery, Wade grinned for the first time in years. \n\nIt took less than a week to tie things up after his stepfather's death. The few items that weren't trash went under the topper of his old truck. Inside one of the storage containers, he'd hidden the lock-box that held the small amount of money he'd saved over the years. The total wasn't much, but it was a start. \n\nWade left the next morning, following the road to an unknown destination. He just knew that for the first time in years, he felt alive. \n\n****\n\n\"Mr. Flynn,\" the dark-haired woman standing in the doorway said.\n\nHolding his fingers up to get her attention, Wade stood. \n\n\"Follow me this way, please.\"\n\nThey stopped at a small office where she pointed to an empty seat, then slid behind the desk and sat down. \n\n\"My name is Suzanne Harwood. I'll be your new parole officer, Mr. Flynn.\"\n\nHearing those words coming from this woman somehow embarrassed Wade. The long list of misdemeanors and other offenses projected the image of a hardened criminal. He'd been on the wrong path for years, and deep inside he knew it. \n\nOnly half listening to her speech on the rules for reporting in, he tried to visualize a life without all the crap in his past being an issue. \n\n\"Do you have any questions, Mr. Flynn?\"\n\n\"Where's the local employment agency?\"\n\nHe watched as she scrawled something on his paperwork before replying. \"I've already set up an interview for you at one of the local factories. They're looking for second-shift help, a straight forty-hour week.\"\n\n\"Thanks, appreciate it,\" he replied.\n\n\"It's just something I do, Mr. Flynn. I'll expect a report within two days on how the interview went. Here's the form, you can drop it off up front once you've completed it. Is there anything else?\"\n\nShaking his head, Wade took the papers and stood. As with all his parole officers lately, he felt as if he left her office dirty when he walked out. He hated it and longed to know what it was to be clean.\n\n****\n\nHis back ached and his feet burned. It was his third day at his new job and Wade hated it. The building didn't have air conditioning, and all the machines put out an exorbitant amount of heat. Yanking the lever to keep the production belt moving along, he felt the pull on his muscles and winced. \n\nSweat poured off his face and ran down his neck, saturating his collar. Even though he'd guzzled a bottle of water during his last break, his mouth was still parched.\n\nGlaring at the over-weight shift manager as he tossed orders around from his glassed-in office, Wade wished he could just walk away. Already his past was out all over the factory, despite the promise of confidentiality on their employment forms.\n\n\"Boss wants ta see ya. I heard he's been missing his girl.\"\n\nThe voice came from his right, an unspoken challenge in it that Wade knew well. Reigning in his temper, he took off the heavy protective gloves and turned. \n\n\"Hope ya like em big.\"\n\nThree steps took him within inches of the sneering co-worker. Wade didn't say a word, but he didn't have to. His fierce glare wiped the look from the man's face. Waiting until the bully moved back, Wade smiled at him and went to see the manager, knowing the outcome even before he got there.\n\nThe quaint town of Boden wasn't any better than the one he'd left. But it was as far as his old truck had taken him before it gave out. \n\nKnocking on the rusty door, Wade shook his head at the piece of cardboard taped in the middle of it. The word manager printed in black marker was faded and stained from what he assumed was years of hanging there. \n\n\"Yep, bout time ya got yer ass up here, now git it inside.\"\n\nStepping inside the stuffy office, Wade felt his stomach lurch. Foul body odor and nauseating cigar smoke assaulted him and almost choked off his air. Years behind bars taught him how to project a blank look, and he called on that skill now. \n\n\"Yer not keepin' up, boy. All them machines down there need men runnin' em, not wimmen. Ya bin a wommen a time er two, eh girlie?\"\n\n\"Sir, I'm working hard, but I've had to learn how to run the equipment on my own,\" Wade replied.\n\n\"Whatcha sayin' girlie? We ain't done takin' time ta teach ya'?\"\n\n\"I understand everyone is busy.\"\n\n\"We don't gotta be busy. That's why we gots ya girlies fer,\" the boss said.\n\nWade just stood there, knowing that nothing he said would be satisfactory. He waited while the sloppy middle-aged man scrounged around in a drawer, an unlit cigar dangling between his lips. \n\n\"Take yer sissy ass and git. We don't need no girlies here. Git!\"\n\nKnowing better than to argue, Wade walked out, never stopping until he was at his front door. Exhausted from the heat and the two-mile trek, he stripped and stepped into the shower. The cool water helped revive him, as did washing off the filth from the factory. He slipped on a pair of boxers and flopped onto the bed for a nap, not waking until eight the next morning.\n\nAfter a light breakfast, he showered and then called Suzanne Harwood. She made room in her schedule to see him at two that afternoon, so the call was short. Grabbing a can of beer, he turned on the old television he'd taken from Lou's place and spent the time watching game shows. \n\n\"Mr. Flynn, come on back,\" Suzanne said, recognizing the quiet man waiting for her.\n\nOnce in her office, she sat down and pulled a file in front of her.\n\n\"Why don't you tell me what happened?\"\n\n\"There isn't much to say. The guy let me go,\" he replied, not looking at her as he spoke.\n\n\"Did you get paid for the time you were there, Mr. Flynn?\"\n\n\"No.\"\n\n\"I'll speak to them and see that it's mailed to you.\"\n\nWade nodded, but he knew from experience that after what happened yesterday, word would be all over town not to hire him. His past never went away, no matter how hard he tried to do right, and Wade was getting tired of it all.\n\n\"Those dumb asses at the factory will make sure nobody will talk to me, Mrs. Harwood. They'll spread all sorts of rumors until I won't even be able to buy a loaf of bread.\"\n\nSuzanne studied the man across from her, frustrated at the limitations the system placed on her. Her instincts told her that all he needed was a break. \n\n\"Mr. Flynn,\" she replied, her voice going softer, \"Wade, I'm willing to help you, but you have to talk to me.\"\n\n\"Can you find another job for me?\"\n\n\"I'll see what I can do for you, but it might take me a day or two.\" \n\n\"I can live with that.\"\n\n\"Let me do some checking and I'll call you with what I find.\"\n\n\"Thanks Mrs. Harwood,\" he replied.\n\nDeep in thought, Suzanne leaned back in her chair and chewed on the tip of her pencil. Yes, the man had a record. That much was obvious. But had anyone taken the time to look at the person inside and explore the real Wade Flynn? Still going over his file half an hour later, she doubted anyone had done more than the minimum their job required. She decided it was time for that to change.\n\nIt took a while to accomplish her goal. Just before five o'clock, Suzanne received the confirmation she'd hoped. After adding a few notes to the paper in front of her, she closed her office and went home.\n\nTelevision was on, but Wade wasn't watching it. His mind wandered to his meeting that afternoon with his parole officer. Compassion filled her brown eyes, and he'd struggled to keep a nonchalant attitude. It was new for him, finding someone that seemed interested in helping him. However, he wasn't betting anything much would come from it until he had some proof either. Pushing the off button on the remote, he went in to the bathroom to get ready for bed. \n\n****\n\nA brisk walk helped Wade burn energy again the next morning. The neighborhood was waking, with kids carrying lunch pails on their way to school, anxious parents waving, and the hint of cooking breakfast wafting through the air. It all looked so normal to him, yet he wondered when his life had ever been even close to anything like this. \n\nWhen he got back to his apartment, he showered and then sat out on the front steps. Too many years of being inside left him with a craving for fresh air. \n\n\"You must be the new guy.\"\n\nWade turned at the voice that broke into his thoughts, unaware anyone else was around. \n\n\"I heard someone new moved in next door again.\"\n\n\"Yes,\" Wade replied, not giving away any information.\n\n\"Don't you work? Oh, I bet you do one of them night shifts,\" the old man standing there said.\n\n\"No, I don't do a night shift.\"\n\nBefore he had a chance to say anything more, Wade's cell phone rang. Picking it up from the step next to him, he flipped it open and spoke into it.\n\n\"Wade? This is Suzanne Harwood. Could you stop by in about an hour? I have some information to go over with you.\"\n\n\"That's fine, I can be there. It's a short walk, so that's not a problem.\"\n\n\"What happened to your vehicle?\"\n\n\"The junk I had stopped running just as I came into town looking for a place to get lunch. It wasn't worth fixing,\" Wade explained.\n\n\"I'll see you in an hour, Wade,\" she said, then hung up.\n\nSnapping the phone shut, Wade turned to see the man still standing in the same place. \n\n\"You're walking all over town?\"\n\n\"Yeah, my truck gave out,\" Wade said. \"Excuse me; I have an appointment in town.\"\n\nWade went inside, unsure about the neighbor he'd just talked to. He seemed harmless enough, but others in his past had too, only to backstab him later. \n\nWhile rinsing off, Wade realized he was finally adjusting to enjoying a shower instead of rushing. Losing that luxury all too often in prison, he knew he'd never take it for granted again. Making a mental note to do some laundry soon, he pulled on a pair of jeans and the last clean dress shirt. With only two pair of shoes to choose from, he slid the best ones on and called it good. \n\nSuzanne couldn't pick just one thing about Wade Flynn that made him stand out from the other eight men in the waiting area. Ex-cons all had a similar look, she'd discovered over the years. Yet, he had something else. \n\n\"Wade, I'm ready for you.\"\n\nWhispers and chuckles followed Wade as he left the room. He had a good idea what the others were thinking. Suzanne Harwood was the only female parole officer at this location, and took a great deal of ribbing. He'd always respected women, but not all men did. \n\n\"Ignore them, Wade. In my position, you get used to it.\"\n\nConfused as to how she knew what he was thinking, he opened his mouth to speak.\n\n\"You clenched your fist,\" she said, pointing to his side. \"Now then, I made several calls yesterday after you left. What do you think about working on a construction site?\"\n\n\"That's good. I mean, how you noticed that.\" \n\n\"I see many things, probably more than you want me to, Wade.\"\n\n\"No, you just think you do. No one sees what I don't let them,\" Wade replied. \n\n\"You think so? Care to try me on that?\" \n\nTipping his head as he contemplated her questions, parts of his past ran through his mind. He pictured his ex-wife, her long brassy red hair and cheap perfume. She always either had a cigarette or a beer in her hand, Wade remembered. Comparing Suzanne Harwood's classy business suit with Lucy's revealing mini-skirts and tube tops was a joke. \n\n\"All right,\" he said, hoping he didn't regret his decision. \n\nSuzanne stood and stepped from behind her desk. Moving a stack of books from the chair next to Wade, she sat down and faced him.\n\n\"Your file gives me the basics of your record, Wade. It's the man here,\" she said, tapping his chest, \"that I see parts of.\"\n\nWade wanted to tell her it was all a joke. He needed to hear what she was going to say. \n\n\"All those years that your mother physically abused you, she never understood that you just wanted her to love you, to see the good in you. No matter how hard you tried to do the right thing, it backfired on you. Every attempt to turn your life around went wrong. Until this mask covered the real you from the world. Your pain is deep, Wade. It's been eating at you for years, until you don't even know what it's like not to carry it around with you.\"\n\n\"All good guesses, Mrs. Harwood, and they could fit any ex-con.\" \n\n\"You just want a break, don't you Wade? For someone to forget that you have a record, and let you start fresh. Almost like a new life,\" she said.\n\nHe looked into her brown eyes and saw the truth. Suzanne Harwood wasn't guessing. Some uncanny sixth sense gave her the ability to get inside him. \n\n\"I've done my time, Mrs. Harwood. Why can't people just let my past go, and give me time to prove I've changed? How do I ever get ahead if no one lets me try?\"\n\n\"Wade, this job I have lined up for you. I promise they don't care about your past. It's not an issue with them. They won't treat you as a lower-class citizen, nor will they be looking for reasons to fire you.\"\n\n\"How can you know that?\" he asked.\n\n\"There's a new subdivision going up just north of here. Right now, there are several homes in various stages of completion. First, I talked to Nelson Strassburg, the primary investor. After getting the okay from him, I called Cody Baxter, who's the head contractor for the project. I have firm commitments from both men they'll hire you.\"\n\n\"Construction isn't one of my skills, Mrs. Harwood.\"\n\nReaching over and pulling a paper from her desk, she handed it to Wade.\"I think these are.\"\n\nScanning the list took several minutes. \"Who would I report to each day?\"\n\n\"You'll get a worksheet with the basics on it once you start.\"\n\n\"How many others will be doing this? I mean, there must be someone watching me, right?\" he asked.\n\n\"You'll be on your own. It's up to you to figure out the best routine for getting it all done.\"\n\n\"How far away is it from my apartment? I'll have to see if there's a bus stop close by.\"\n\n\"Check the bottom of the list, Wade,\" Suzanne said, grinning.\n\nHe ran his finger over things like picking up scrap lumber, accumulating extra siding for recycling, hauling sod and numerous other tasks until he stopped at the last item. \n\n\"A truck?\" he asked. The thought was incredible to him as he just stared at the paper.\n\n\"Yes, it's a company vehicle.\"\n\n\"You hardly know me, Mrs. Harwood.\"\n\n\"I have faith in you. Don't prove me wrong. Cody said someone would contact you in the next day or so about getting the truck to you. Today is Thursday, and you don't have to start until Monday. Did you have any questions?\"\n\n\"Is this really part of your job? I mean, none of my other POs ever went this far,\" he said.\n\n\"I see the good in you, Wade. Maybe I did a bit more than my job requires, but is that so bad?\" she asked.\n\nWords didn't come out, as Wade tried to find the right thing to say. Nothing fit, so he just stood and reached out his hand. It was a gesture he hadn't made in his other appointments with his parole officer, though she had attempted it in the beginning. ",
        "\"I won't let you down.\" \n\n****\n\nWalking home, Wade saw nothing. He stepped around bicycles and toys and stopped at corners. If the old man living next to him hadn't spoken, he would have gone right past his apartment building.\n\n\"Sure is a nice day.\"\n\n\"Um, yes, yes, it is for sure.\" Wade nodded, and then turned up his sidewalk. \n\n\"You look like you had shocking news, boy.\"\n\nWade looked at the old man, and smiled. \"I got a job.\"\n\n\"I should have known it was something like that. When you starting?\"\n\n\"Monday, so I'll be hanging around here a few more days.\"\n\n\"Congratulations. A man always feels good about doing an honest day's work.\"\n\n\"Thanks. I agree on that one,\" Wade replied.\n\n\"Well, it's time for the news. I'd better get inside,\" the old man said.\n\n\"My name is Wade, by the way.\"\n\nGrinning at Wade, his neighbor picked up his rake before speaking. \"Call me Johnnie.\"\n\n\"Have a good night, Johnnie,\" Wade said as he opened the door to his apartment.\n\nLying in bed that night, with the euphoria of the day still with him, Wade realized he'd had a normal conversation earlier. Though it was short, he hadn't felt defensive with the elderly man this time. Offering his name was something new for him, too. It felt strange, yet it didn't seem wrong at all. Turning over, he pictured Suzanne Harwood and knew her faith in him was going to be a turning point in his life. \n\n****\n\nSaturday morning Nelson Strassburg dropped off a company vehicle. Even scratched and dinged, the five-year-old Chevy truck caught Wade's attention. \n\n\"Wade Flynn, thank you for this opportunity.\"\n\n\"Nelson Strassburg,\" he said, \"glad to have you with us. Either Cody or I will make sure you get the right employment forms for tax purposes this next week. We used Suzanne as your reference, so that's all good. Do you need directions to the site?\"\n\n\"They're on the paper from Suzanne, and I have an idea where it is. I thought I'd drive that way tomorrow, unless there's a problem with using the truck off-hours for it?\"\n\n\"Go right ahead, Wade. We'll discuss more of this Monday, but by all means, use it tomorrow. If you need to do any errands, take care of those while you're out too.\"\n\n\"Thank you, Mr. Strassburg.\"\n\n\"Make it Nelson, all right? Sorry I can't stay, but my wife planned a party for our daughter's birthday, and I'm on the way to pick up tables and chairs. See you Monday, Wade.\"\n\nThe two men shook hands, and Nelson got into the car waiting for him at the curb. Keys dangling from his finger, the excitement bubbled over and Wade let out a whoop that echoed through the trees.\n\n\"You okay out here?\"\n\n\"Johnnie, sorry if I disturbed you,\" Wade said when he saw his neighbor standing on the steps.\n\n\"It was time I woke up from my nap anyway. New wheels?\"\n\n\"This is a company truck, from my new job.\"\n\n\"So you're working for Baxter Builders?\" Johnnie asked, pointing to the lettering on the door.\n\nWade didn't really know who his true employer was, so he just nodded. \n\n\"That's a good company. They been around a long time,\" the old man said. \n\nWade only half listened as his neighbor talked about a subdivision built twenty years ago by Cody's father. A family business, the man passed it on to his son when he retired, according to Johnnie. \n\n\"Yep, a darn good company, boy.\" Johnnie smiled and went around to his workshop without another word. \n\nSitting behind the steering wheel, Wade touched all the buttons and knobs. He'd never had anything but old worn-out cars or trucks. Though this wasn't his, just being able to drive it each day was going to be a rare treat for him. After starting it up, he moved it into his assigned parking spot and pulled the keys out. The alarm beeped when he pushed the remote to lock the doors on his way inside his apartment. \n\nThe delivery of the company truck proved to Wade that the job was real, and not a dream. All along, he'd waited for someone to tell him it was a joke. It gave him the drive he'd lacked for so long. By dinnertime, he'd scrubbed his apartment, done his laundry, and made a grocery list. \n\nRelaxing after a shower, he heard his cell phone ringing from where he'd left it on the kitchen table. \n\n\"Wade?\"\n\n\"Yes, hello,\" he said, not recognizing the feminine voice.\n\n\"It's Suzanne Harwood. I just wanted to check with you this weekend and see how you're doing.\"\n\n\"Mrs. Harwood, I'm great.\"\n\n\"Why don't you make it Suzanne when we're not in the office, Wade? You're making me feel every bit of my age,\" she replied, chuckling.\n\nIf any of the inmates housed with Wade over the years saw the way he blushed at that moment, they'd have teased him forever, and he knew it. \n\n\"I didn't mean\u2014I was only\u2014if you're sure.\"\n\n\"Yes Wade, I'm positive. Did I mention that one of the houses going up out in that project is mine?\"\n\n\"Ah, no, I don't remember that you did.\"\n\n\"They've only started, but I'm really excited. However, that isn't why I called. Did you hear from Cody yet?\" she asked.\n\n\"Mr. Strassburg brought the truck a few hours ago.\"\n\n\"The big man himself, eh? He's one of the good guys, Wade. You'll like both of them.\"\n\n\"He was very kind and helpful. Suzanne, I don't know how to thank you for all of this.\"\n\nWade shook his head, overwhelmed by all this one woman was doing for him. He wanted to say more, but the right words still eluded him.\n\n\"You'll figure it out. If you need anything, just call me,\" she replied, her voice sincere.\n\nStill holding his phone long after they'd hung up, Wade wondered what his life would have been like if his mother had been more like Suzanne Harwood. Maybe he imagined it, but he swore there was a bond of sorts between them. She was more than just a parole officer. For the first time ever, he felt as if he had a friend. \n\n****\n\nThe new subdivision project was alive with activity. Wade drove right to it on Monday morning after finding the best route the day before. Only a few of the homes were close to finished, but from them he knew they weren't cheap places. Two and three stories high, three stall garages, pillars, walls of windows, and wrap-around porches made them all mansions to Wade. \n\nUnsure where he needed to be, he looked for the place with the most vehicles and pulled over.\n\n\"Wade, good morning,\" Nelson called out from atop the frame going up there.\n\n\"Hello, how are you?\"\n\n\"I'm ready to see this place take shape. Hey, there's Cody. I'll let him introduce you to the rest of the crew,\" Nelson said, turning back to the papers in his hands. \n\n\"Cody Baxter, it's nice to meet you Wade. Most of the time, you'll be answering to me, although Nelson is a hands-on investor, as you've already discovered.\"\n\nIt took several more minutes but soon Wade had met the men on Cody's construction crew. Each one welcomed him as if he were just another employee. Being accepted and included was new for him, and it put a true smile on his face for the entire day.\n\nHis duties weren't difficult to understand or learn, and by the end of the third day, he felt confident in his ability. \n\n\"Well, Wade, what do you think?\" Cody asked as they walked to their trucks.\n\n\"I've never had a job where people treated me as if I was normal. My past has always been an issue,\" Wade explained.\n\n\"Suzanne saw the good in you, Wade. I trust her judgment explicitly. From what you've done so far, she was right.\"\n\n\"I owe her so much.\"\n\n\"Ah, but that's what friends are for,\" Cody said, patting him on the shoulder. \"I'll see you in the morning. Good night, Wade.\"\n\n\"Night, Cody.\" \n\n****\n\nThursday evening, Wade sat on the front steps just taking in the fresh air. Just up the street, several children played tag on the grass, laughing and shouting. He assumed it was the father standing next to a grill on the porch, keeping an eye on both dinner and the kids. They looked like a normal family. At least what he imagined that to be. He envied the man, even guessing at the responsibilities his life must have.\n\n\"How's the job?\"\n\nWade turned to see Johnnie coming his way. \"It's great, Johnnie.\"\n\n\"Mind if I have a seat? I been in that darned workshop of mine all afternoon. You'd think when I retired I'd been smart enough to relax, but heck, I'm busy all the time.\"\n\n\"I've heard that happens,\" Wade said, moving over to make room for the old man.\n\n\"Nice family down the street. Three kids, momma's a teacher, daddy sells cars, but they always find time for others.\"\n\nUnsure what to say, Wade waited. He wondered if Johnnie saw him watching the family earlier.\n\n\"Not everyone has that kind of life, I know that. Sometimes, those hurting make a friend that helps turn their future brighter. You never know who is going to be there to lend a helping hand, Wade.\"\n\n\"I was never on the outside long enough to make a real friend,\" Wade replied, focusing on the ground.\n\n\"The world has some wonderful people in it, son. It's all a matter of opening your eyes to see who's right in front of you.\"\n\n\"I'm learning, Johnnie,\" Wade said, looking straight at the elderly man next to him.\n\nStanding, Johnnie smiled. \"Yes, you are. It's time for my TV shows now, so I'd better go inside.\"\n\n\"Have a good night, Johnnie. You take care.\" \n\nWade watched as the old man made his way across the lawns and into his house before he went into his own apartment. Friends looked out for each other, he thought with a smile. He really was learning what that meant after all these years.\n\n****\n\nSuzanne showed up at the construction site on Friday. \n\n\"Good morning Wade. I had some free time and wanted to check on my house,\" she said, waving to him as she walked across the cluttered lot.\n\n\"Morning, Suzanne. I'm not sure about any of that, but Cody's around here somewhere. Oh, by the way, I got my paycheck in the mail, from the factory. Thanks for taking care of that for me,\" Wade said when she'd stopped in front of him.\n\n\"You're welcome. They knew the law was on my side, and didn't want trouble. I'm sure there'd be discrepancies if there was an investigation into their books.\"\n\n\"Yeah, but still, they listened to you.\"\n\nShe gave him a little smirk and wink before getting serious. \"How are things going for you, Wade?\"\n\n\"I can't believe how fast the week went. The guys here are all great. But you knew that already, didn't you?\" he asked.\n\n\"The few I've met seem very nice, yes. Nelson and Cody both have excellent standards, and have this knack for finding the best employees. I think Cody picked up those traits from his father.\"\n\n\"I heard he took it over when his father retired. Having a family business to pass along to my son some day . . .\"\n\n\"Never give up hope, Wade. You're young enough that it can happen yet,\" she said, touching his arm when she saw the pain on his face.\n\n\"No, I'm already thirty-two. Even if I found someone now, I have nothing, not even a clean name.\"\n\n\"You're a good man, and that's what they'll see. Now then, what do you think about this shack I'm having them build?\"\n\nLinking her arm in his as she changed the subject, she walked toward what would soon be her new home. Not for the first time, Wade wondered what it would have been like to have Suzanne for a mother. \n\n****\n\nIt didn't take him long to fall into a routine. Weekends were for catching up on laundry, cleaning his apartment, and going to the grocery store. Evenings Wade often spent on the front steps, with Johnnie joining him many times. If he had to describe his life at that point, Wade would have said it was pleasant. \n\n\"You meet any women, son?\" \n\n\"Where would I do that, Johnnie?\"\n\n\"I heard on Oprah that lotsa people find mates when they go do their laundry,\" the old man said, grinning.\n\n\"Guess you haven't been to 'Lucy's Laundromat', have you?\"\n\n\"Well, I drove by it a few times, if that counts.\"\n\nHe laughed and shook his head at the sheepish look Johnnie gave him. \"Nope, it's not the same.\"\n\n\"What about the grocery store, then? You could bump your cart into some perty young girl to get her attention.\"\n\n\"First, I'd have to see one there. Maybe you should go with me and check out all the 'perty young girls' that shop there on Saturday,\" Wade said, grinning.\n\n\"Shoot, son, there's got to be some place you go to see women.\"\n\n\"I guess Boden has the wrong generation of ladies, Johnnie.\"\n\n\"Heh, we'll have to work on that. Time for my shows, have a good night son.\"\n\n\"See you, Johnnie.\"\n\nAs he did every other night now, Wade watched the old man go inside his house. He never would have figured that someone like Johnnie would become a friend. \n\n****\n\n\"We need to talk,\" Cody said, early one Monday afternoon.\n\n\"Sure thing, Cody,\" Wade replied.\n\nWade tossed the load of scrap siding into the bin and turned. The serious look on Cody's face startled him since his boss always seemed to be smiling.\n\n\"You know your record has never been an issue for Nelson or me,\" Cody said.\n\n\"Yes, I\u2014\"\n\n\"There's some tools missing.\"\n\n\"I might have a record, but I'm not a thief,\" Wade replied.\n\n\"I'm not saying you are, Wade. Until I have proof, everyone's a suspect.\" \n\nWade watched his boss walk away, a sick feeling in his stomach. He'd never heard such an accusatory tone in Cody's voice before. It made him jumpy for the rest of the day. \n\n****\n\n\"You okay?\" Johnnie asked, tapping on the truck window. \"I bet you been sitting there fifteen minutes, son.\"\n\nForcing himself to move, Wade jerked the keys out of the ignition and opened the door. Rubbing his temples, he tried to make the headache go away. \n\n\"Someone's stealing from Cody.\"\n\n\"And he figures you did it,\" Johnnie said, making the assumption on his own.\n\n\"He didn't blame me, but that doesn't mean I won't have to prove I didn't take anything.\"\n\n\"Why do you say that? They'd need evidence\u2014\"\n\n\"There was a drill tucked under my seat this afternoon, Johnnie. Someone singled me out to take the fall for the theft.\"\n\n\"I'm guessing you found it, not your boss.\"\n\n\"This guy, Jeremy, smirked when I locked the stupid thing up where it belonged. All week he's been extra cocky, but I just brushed it off. He's only twenty, and has this attitude that the world owes him everything,\" Wade replied.\n\n\"So you think it might be him. Why blame you and not someone else?\"\n\n\"That's simple. Comments he made today tell me he knows about my record.\"\n\nJohnnie nodded, seeing the logic in the implication. \n\n\"I knew it was too good to last. No matter how hard I try, there's always something that messes up,\" Wade said, stifling the urge to kick the tree he stood by.\n\n\"Then you just got to fix it, son.\"\n\n\"What, you think I should go to Cody and tattle? I don't have any solid proof; just the punk's actions that make my gut churn.\"\n\n\"Follow the same instincts that got you through all those years behind bars.\"\n\nThe connection made sense. Wade took a deep breath and looked at Johnnie. \"You're right. I don't have anything to hide, so I'll just do my job. Only I'll keep my eyes open and let the thief do something stupid.\"\n\nJohnnie clapped Wade on the shoulder. \"Always knew you was smart.\"\n\n\"Yeah, look who my friends are,\" Wade said.\n\n\"I'm off to fix some dinner. Relax, son; it'll be all right.\" \n\nWaiting until Johnnie disappeared through his front door, Wade marveled at the hidden intelligence in the man. It was almost impossible to fathom how different his life would have been if he'd had someone like Johnnie around when he was growing up. \n\nLightning streaked across the sky, breaking into Wade's thoughts. A cold sheet of rain burst from the clouds before he took a step. Drenched, he laughed as he sprinted toward his door. While the storm raged outside, Wade did just as Johnnie said; he relaxed.\n\n****\n\nHe leaned over the tailgate and grabbed a bottle of water from the cooler in the bed of his truck. Most days Wade joined the rest of the crew at break time, but there was a tension amongst them since Cody mentioned the theft. Several men talked in groups, only to stop when Wade approached. Each time he remained friendly, keeping Johnnie's words in mind. \n\nRecognizing Suzanne's car behind the row of company vehicles, he forced a smile, trying to hide his mood. Suzanne was fast becoming important to him, but he didn't expect her to help him through every problem he had either.\n\n\"What's wrong?\" she asked after stopping in front of him. \n\n\"Nothing, I'm fine,\" he said.\n\n\"You might as well just tell me now, Wade. Else we'll have to play a silly game where I work it out of you eventually anyway.\"\n\n\"Yeah,\" he replied with a resigned sigh. \"When's the last time you talked to Nelson or Cody?\"\n\n\"I'd say it's been a few days. Why, what's going on?\"\n\n\"Someone's been taking tools.\"\n\nSuzanne sat on the bumper and nodded. \"I'll assume you're a suspect.\"\n\n\"I have a record, what do you think?\"\n\nIt took her several minutes to answer. By then, Wade was beginning to wonder if she thought he was guilty.\n\n\"I'd say someone here will be in a heap of trouble when they're caught. Wade, I believe in you. I've seen the good in you from the beginning. Hang in there and the truth will come out,\" she said.\n\n\"That's easy for you to say.\"\n\n\"I know, but take a deep breath and don't worry. Come and check out this shack with me instead.\"\n\nThis time his laugh was closer to real. \"I can do that. Although I think you need to see a real shack, Suzanne.\"\n\nShe grinned as they walked across the dirt yards before stopping on her own driveway.\n\n\"Can you believe the progress, Wade? Another few weeks and Cody said it should be ready for me to move in. This is so exciting for me,\" she said.\n\n\"How are you moving in? Will you hire somebody?\" he asked.\n\n\"I'll get a local company to move the bigger things like furniture, and then haul the rest myself. It might take me several trips, but oh well.\"\n\n\"Why don't you let me help? I can ask Cody or Nelson if I can use the truck. That would make it a lot easier for you.\"\n\n\"Are you sure? My little car won't hold much, so that would be a big relief,\" she replied. \n\n\"Consider it done. Just let me know when. I'll talk to whichever one I see next.\"\n\nReaching out, Suzanne pulled Wade to her and hugged him. \"Thank you, my friend.\"\n\nHe longed to return the gesture, but he hadn't quite learned how yet. Suzanne stepped back and smiled.\n\n\"You're close, Wade. Soon you'll see that some people show up in your life for good things.\" \n\n****\n\nThe canvas tarp didn't belong in his truck, and Wade knew it. Grabbing his cooler from the seat, he contemplated how to handle the discovery. Each day he'd found a small item hidden somewhere, and knew it was only a matter of time before the real crook sent Cody or Nelson his way. \n\n\"Sure takin' a long time over there,\" Jeremy said.\n\n\"Must be findin' somethin' good, Jeremy,\" a second voice replied.\n\nCursing himself for not paying better attention to where the young man was earlier, Wade held still. His instincts told him the two were ready to make their case against him.\n\n\"Think we should call the boss over, Ralph?\" Jeremy asked.\n\n\"That tarp looks to be hidin' somethin' to me. I bet Cody won't like it.\"\n\n\"Yeah, you go get him, I'll watch the con here,\" Jeremy said.\n\nWith Ralph gone, Wade turned to face the young man trying to frame him. His cockiness faded when Wade took a step toward him.\n\n\"Did you ever think about what kind of cellmate you'll have, Jeremy? I can guarantee it won't be someone like Ralph that you can boss around,\" Wade said, the anger evident in his voice.\n\n\"Yeah, you'd know about that, since you been there. I'm not dumb you know. Do you think I put that stuff in your truck just for kicks? Hell, with your record, no one will question that you're stealin' it all,\" Jeremy replied, laughing.\n\n\"That's where you're wrong, Jeremy,\" Cody said, walking up behind the young man. \n\n\"Boss, I was just\u2014\" All the bravado in Jeremy crumpled when he realized who'd heard him.",
        "\"Save it, Jeremy. Officer, he's all yours,\" Nelson said, joining them.\n\nConfused, Wade tried to take in the scene around him. One police officer had already handcuffed Ralph, while another was doing the same to Jeremy. \n\n\"Wade, we suspected these two from the beginning. All we needed was a bit more proof. We're really sorry for letting you think we didn't believe you. Nelson and I both felt bad about that the entire time.\"\n\n\"We trusted Suzanne when we hired you, but your attitude has convinced us she was right. You've proven you're serious about turning your life around, Wade,\" Nelson said, picking up the explanation. \n\n\"You guys believed in me,\" Wade said, making it more a statement than a question as he shook Cody's hand.\n\n\"There was never a doubt,\" Nelson replied, as he clasped Wade's hand.\n\nCody held his hand out, waiting for Wade to accept his apology as well.\n\nIt took a while Cody and Nelson to finish all the police reports, but Wade went home as soon as they'd gotten his statement. \n\nThat evening, Wade told Johnnie about the events of the day. \n\n\"Yup, I knew it would be all right,\" Johnnie said.\n\n\"Thanks Johnnie. You helped me through a rough week.\"\n\n\"That's\u2014\"\n\n\"I know. That's what friends are for, right?\" Wade asked.\n\nThe two laughed before Johnnie waved. \"Good night, son. My shows are on.\"\n\n\"See you tomorrow Johnnie.\"\n\nWade grinned, the stress of the theft gone. When Suzanne showed up again, he could tell her it was resolved too. He fell asleep looking forward to work the next day. \n\n****\n\nA week later, Nelson waved as he jogged across the gravel driveway and grinned. \"I see you're checking on the progress again, Suzanne.\"\n\n\"I think she's anxious to move in. At least every other day she's here now,\" Wade said.\n\n\"If you lived in an old dilapidated place like mine, you would be too. Do you think the fire department would want to use it for practice when I'm out?\"\n\n\"Come on, you know it's not that bad. It's just small, and you want more space,\" Nelson replied.\n\n\"The colors are outdated, it needs new flooring in the bedroom, the carpet is shot, the yard is a mess, and the siding is green,\" she said, ticking each item off on her fingers.\n\n\"Those can all be fixed,\" Wade replied. \"Sounds like a bit of hard work would make it look just fine. Most of that one person can do alone.\"\n\n\"There you go, Suzanne. Why don't you let Wade rent your old house, and he can do some of the repairs it needs,\" Nelson said.\n\n\"I really didn't know what I was going to do with it, but I like that idea.\" \n\n\"You're not serious.\" Wade looked from one to the other, waiting for them to tell him it was a joke.\n\n\"The structure is safe, and it has good wiring. Think you can change out a kitchen counter and sink, Wade?\" Nelson asked.\n\n\"I can learn what I don't know, Nelson.\"\n\n\"What about your apartment? Do you have a lease?\" Suzanne asked.\n\n\"No, it's by the month,\" he responded.\n\n\"Nelson, how about the three of us go over to my place and let him have a look?\" \n\nShe grinned at the two men, knowing it wasn't quite quitting time but that Nelson wouldn't mind.\n\n\"Wade, you can ride with me. We'll stop back here and get your truck later,\" Nelson said, nodding.\n\nIt was far from dilapidated, Wade decided as they pulled into the driveway fifteen minutes later. Ignoring the odd shade of green on the siding, he pictured it in a pale gray to go with the charcoal shingles. Sliding out of the truck, he followed Nelson up the path to the front porch where Suzanne waited at the door.\n\nStepping over the threshold, Wade felt as though he was finally home. Not the dumpy trailers and or cheap apartments his mother dragged him to, but that one place you couldn't wait to be at the end of the day. Replacing the worn carpet and painting the walls would make a big difference, but none of that mattered. \n\n\"I can't believe you're leaving here,\" he said, turning as he spoke. \"This place is . . .\"\n\nSuzanne leaned against Nelson, grinning at something he was saying. \n\n\"Ah, am I missing something?\" he asked, confused.\n\n\"Nelson was telling me about a\u2014\"\n\n\"Are you two related? I know you're not involved.\" Walking up to them, he waited for an answer.\n\n\"You know I lost my husband a few years ago. He was Nelson's partner in the investment company, Wade,\" Suzanne said. \"We've known each other for close to twenty years now.\"\n\n\"She's a good friend to our entire family, Wade. Suzanne is like a sister to me, if that makes sense.\"\n\n\"Yes, it does, Nelson. I'm sorry for questioning you. I was just surprised.\"\n\n\"It's not a secret, and don't apologize,\" Suzanne said. \n\n\"That's why you chose his subdivision for your new house?\" Wade decided that made sense and smiled.\n\n\"Not really. I'm one of the investors for the entire project,\" she replied, chuckling when she saw his stunned look. \n\n\"She just prefers sitting in that stuffy little office of hers, Wade,\" Nelson said. \"I gave up asking her to quit that job long ago.\"\n\n\"I'm glad she didn't. Where would I be if she had?\"\n\n\"You'd have found a way, but having Suzanne on your side never hurts.\"\n\n\"All right, enough of me, lets get back to why we're here, okay boys?\" Suzanne asked, shaking her head.\n\nNelson took out his ever-present notepad, jotting down what he thought the house needed. Wade pointed out what he could do alone, and the two men sat at the table working out some numbers. Suzanne stayed back, thinking how much Wade had opened up since she'd met him. \n\n\"I picked up a few odd skills here and there that will come in handy if you're serious about this,\" Wade said, facing Suzanne a bit later.\n\n\"Over the years, I was happy here. I've just reached a point in my life where I'm ready for a change. This place needs work and the yard requires constant maintenance. I'll be sixty in a couple years, Wade, and it's too much for me,\" she replied. \n\nPicking up the paper in front of him, he gave her a soft smile. \"I can do this, and make it a place you'll be proud to visit.\"\n\nShe saw so much looking at the young man sitting in her kitchen. There was a determination in him to prove to the world that he wasn't destined to be a loser all his life. \n\n\"I know you will.\"\n\nRiding back to the construction site, the two men continued discussing improvements for the house. \n\n\"It just needs someone to give it new life, Wade.\"\n\n\"Sort of like me?\"\n\n\"Yes, a bit like that,\" Nelson said, smiling. \n\nWade again thought how different his life would have been with Suzanne for a mother. Not for the wealth, but for the obvious love she shared so openly with those she cared for. He looked at Nelson, a stranger to him just months ago, and knew he was more than just a boss. \n\n\"You know, I'm really seeing how this friend thing works,\" Wade said. \n\n****\n\n\"Johnnie, I'm moving.\"\n\nThe old man looked at Wade and smiled. \"Is there a road 'tween here and where you're going?\"\n\n\"Yeah, but it won't be the same, you know?\"\n\n\"Life never stays the same, son. We wouldn't want it to, either.\"\n\n\"No, I guess you're right. It's a great opportunity for me.\"\n\n\"Well then, tell me all about it,\" Johnnie said, joining Wade on the steps.\n\n\"My parole officer, Suzanne, is having a house built in that new subdivision I'm working in. Once she moves, I'll rent her old one. It needs work, Johnnie, but I think I can do it all.\"\n\n\"What's it need?\"\n\n\"Most of it's cosmetic, like carpeting, paint, yard work, and some light fixtures. The kitchen needs a new counter and sink for sure, and the vinyl floor is in rough shape.\"\n\n\"That's all simple stuff. I done all them things before.\"\n\n\"It's not too far from here, Johnnie. Maybe once I move, you'd like to come out and visit?\" Wade asked.\n\n\"Well now, I reckon you can count on that son.\"\n\n\"You know Johnnie, when I first came to Boden, I hated it here. You know the only reason I ended up here was my truck gave out and I couldn't afford to fix it. Working at the factory those first few days just added to my frustration.\"\n\n\"This town has some good people,\" Johnnie said.\n\n\"Suzanne never doubted me. She's my friend, Johnnie. Just one that I've made since I came here,\" Wade said, looking straight at Johnnie.\n\n\"Yep, she done you good then. You can't have too many friends. Time for my shows. Night, son.\"\n\n\"Good night, Johnnie. See you tomorrow.\"\n\n\"You can count on it.\"\n\nWade smiled as Johnnie made his way into his house. He was losing a neighbor when he moved, yes. Far more important though, he'd made a friend.\n\n****\n\nThe steady pop of the nail gun slowed then stopped. Cody took off his safety glasses and wiped the sweat from his forehead when he saw Wade approach. \n\n\"You heard, I guess, that I'm moving into Suzanne's old house?\" \n\n\"She mentioned it yesterday, yeah. You think you can handle all the work out there?\" Cody asked.\n\n\"I don't know, Cody. The painting and yard work, yes. Ripping the carpets out I can do, but if I find a problem under there, I don't know.\"\n\n\"If you need help, you know where I am. My time is limited, but I can offer ideas and tips on how to take care of things for you,\" Cody said.\n\n\"That would be great. Nelson helped me draw up some numbers to figure out what some of it should cost,\" Wade replied.\n\nLaughing, Cody shook his head. \"That sounds like the kind of thing he'd do.\"\n\n\"This will be the first time I've had a place I could call my own, you know that Cody? When I was growing up, we lived in dumpy trailers, or run-down apartments. Over the years, I've never had anything much better. Suzanne's place might need work, but I don't look at it from that way.\"\n\n\"Life isn't about showing off what you have. If you can go back out in the world and make something of yourself after you've been knocked down so many times, you're far richer than any millionaire on earth.\"\n\nWade studied his boss for a moment, letting his words settle, knowing they were for him.\n\n\"You know, Cody, you're a pretty good guy.\"\n\n\"It goes both ways, Wade,\" Cody said, placing his hand on Wade's shoulder. \n\n****\n\nWade stared at the paper in disbelief. He ran his thumb over the stamped seal proving it was official. Standing outside the courthouse, the words ran together as he struggled to believe them.\n\n\"How does it feel, to be free of it all?\"\n\nShe stood several feet away, smiling at him.\n\n\"You did this, didn't you Suzanne?\"\n\n\"So I know a few people. That doesn't mean they did anything illegal or crossed the line for me. You've earned this, Wade,\" she said, walking up to him.\n\n\"I thought with leaving town after Lou died and all the times I was fired, it would never happen. Yet, the proof is right here. I've been discharged from parole.\"\n\n\"They just didn't see you the same as I did then. I'm sorry no one else ever had faith in you,\" she replied.\n\n\"I still don't understand how you did, or what you saw.\"\n\n\"Behind your attitude of anger and the defensiveness, there was pain and sadness. That's all in your past now. The future is wide open for you,\" she replied.\n\n\"You've done so much for me.\"\n\nWithout thinking about it, Wade pulled the older woman close and hugged her tight. All the emotions he struggled to express went into that one simple gesture. \n\nWhen he finally released her and stepped back, Suzanne had tears in her eyes. \n\n\"You're welcome, Wade.\"\n\nNodding, he understood the true meaning of friends. \n\n****\n\nThe paper laid on the step next him. Wade needed the proof as reassurance he wasn't dreaming yet. So many things had happened to him in such a short time that he could hardly believe it all anymore. \n\n\"You look mighty serious there, son.\"\n\n\"I went to court today. The judge discharged me from parole, Johnnie.\"\n\n\"Well now, that sounds like good news, so you should be smiling.\"\n\n\"Some days, I feel as if I walked through a magical door and landed in front of the good fairy. Each time she waves that wand, something special happens to me,\" Wade said.\n\nJohnnie smiled and nodded at the analogy, but didn't say anything.\n\n\"I have this awesome job working for two great guys. Next week I'm moving into a place that I can fix up and call my own.\"\n\n\"Those are nice things to have, son,\" Johnnie said.\n\n\"The most important thing though is that I have real friends. It took me over thirty years to figure out how to be one, and I might not have it right still. But I'm trying really hard, Johnnie.\"\n\n\"People recognize a good soul even in someone that's been knocked down before. You just got to get back up and prove to yourself who you really are inside, son. That's what they see, the fighter, the spirit that doesn't give up, and the glimmer of hope inside.\"\n\n\"It'll feel weird, not seeing you every day Johnnie. You're a smart man, and I'm very glad I met you,\" Wade said.\n\n\"Well, you can always call me up to come help rip that carpet out.\"\n\n\"You know, I think I'll do that. We can even stop in time for you to get home to watch your shows.\"\n\n\"Now that's what I call taking care of a friend, son,\" Johnnie said, winking and grinning.\n\nWade smiled at Johnnie then turned serious. \"Can you love a friend? I don't mean like being in love with someone, but just love them?\"\n\nWhen Johnnie didn't answer, Wade thought maybe his question was too personal. Or that it just made the old man uncomfortable. \n\n\"It's okay if\u2014\"\n\n\"Son, there are a lot of different kinds of love in this world. Children, in most cases, have an unconditional love for their parents they don't even understand. Teenagers, and young adults, go through several stages of falling in love that's really more about sex, lust, and need. A couple that marries has a love that binds them together deep in their souls. Over the years, it turns into a comfortable respect,\" Johnnie said, looking right at Wade.\n\n\"Not all parents love their kids, and there isn't a special someone out there for everybody,\" Wade replied. \"But none of those you said are friends.\"\n\n\"Friends are part of life, son. They might not always be the same one, but most people have one. There's childhood, the teens, college, and as we grow older, the friends that we make as neighbors. Each one plays an important role in our life. Friends help us financially, physically, and psychologically, each one earning our love not just for what they do, but for who they are.\"\n\n\"Suzanne has become a special friend, and so are my bosses.\"\n\n\"You're a fortunate man to have them in your life. Don't abuse the relationships,\" Johnnie said. \"Finding true friends isn't easy and doesn't happen every day.\"\n\n\"It's odd though Johnnie. I always thought a person only had room for one friend in their life. That's wrong, though. I have one other really special friend too.\"\n\n\"That right?\" Johnnie asked.\n\n\"Yeah, he's a little older and a lot wiser than I am.\"\n\n\"Bet it's someone from 'Lucy's Laundromat'.\"\n\n\"Ah Johnnie, am I ever glad I landed in Boden. You've become a friend of mine and I enjoy spending time with you,\" Wade replied.\n\n\"Friends come in all shapes, sizes and ages. They can be in our lives a little or a lot. As for loving them, I think you know that answer on your own, son.\" \n\n\"Some days, I wonder how my life would have been with Suzanne as my mother. The things she's done for me now are so hard to comprehend at times though. I smile whenever I see her, Johnnie. I have a future because of the way she never doubted me. I know that I can always count on her to help me.\"\n\nJohnnie nodded and laid his arm across Wade's shoulder. \"I'm honored to be the one you shared all that with. She needs to hear it too, you know.\"\n\n\"Yeah, but the time has to be right. I can't just walk up to her and blurt it out.\"\n\n\"You'll know when it is 'cause you'll feel it,\" Johnnie said.\n\n\"You're right.\" Catching a glimpse of his watch, Wade gasped. \"Oh no, you've missed your shows.\"\n\n\"No problem, son. It's all part of being friends.\" \n\n\"Yeah, I'm learning,\" Wade said and smiled.\n\n\"Get some sleep. Tomorrow's another work day, and come this weekend, you'll need your energy to help your friend move.\"\n\n\"I will. Good night Johnnie and thank you.\"\n\n\"That's what friends are for.\"\n\nJohnnie made his way across the yards, a smile on his face that Wade couldn't see. Right from the beginning, he'd known the young man had the ability to do well. A little encouragement and help from friends was all he needed to set him back on the right path. \n\nGrinning as he closed his apartment door, Wade got ready for bed without paying attention and slid into bed. Thoughts of his future filled his head as he went to sleep.\n\n****\n\nThe house was empty. Suzanne heard the muted voices of the two men from outdoors as they secured the last items in Nelson's truck while she wandered through the rooms. \n\n\"Nelson is doing a final check around the house and yard. He'll be a few minutes.\"\n\nShe stood by the front picture window, staring off into space.\n\n\"Suzanne? Are you all right?\"\n\n\"My husband and I bought this place after we found out we couldn't have children. It was always our dream to live in a big house in town where there would be neighbors with kids too. One just didn't seem right to us without the other, so we sold our first home and came here,\" she said, not turning his way.\n\n\"It's beautiful here.\"\n\n\"Years of memories will always be with me, Wade. I'm ready to start again, to let this place go. It needs someone like you to give it life. You can restore the beauty to it, I know you can.\"\n\n\"The past several months you've given me a new life, Suzanne. I'd lost my faith in the world, but you didn't listen to what they said. No one ever went out of the way for me. Just being able to say I have a future is still overwhelming at times to me,\" he said, truth and respect in his voice. \n\n\"Ah, Wade, they didn't look inside. You're a good man, with a past that's behind you. Just like me, it was time to start over.\"\n\n\"I have this neighbor, at the apartments, who's been listening to me as I try to figure things out. Cody and Nelson both helped me at work and with many other things. Each one has taught me more since I've been here than I think I knew in thirty years before.\"\n\nSmiling, Suzanne nodded in understanding, proud of the young man standing before her.\n\n\"Suzanne, I hope you don't take this the wrong way . . .\"\n\n\"Whatever it is, Wade, we can talk it through,\" she said when he didn't go on.\n\n\"I just want you to know that I love you. For all the reasons I've said, for things I haven't, and for being a true friend. Most of all, I love you because you're you.\"\n\nNo words came out as Suzanne stepped closer and hugged him. His arms went around her, holding her tight as they shared the emotional moment. He felt the evidence of her tears through his shirt and knew it was all right.\n\nWhen she at last moved away, she gave him a little smile. \"My friend, I love you too.\"\n\n\"I won't let you down, Suzanne.\"\n\n\"There was never a doubt in my mind, Wade.\"\n\nLinking her arm through his, they walked outside. Nelson sat on the tailgate of his truck, singing along to the radio . . . \n\nI love you for the way you never doubted me<br>But most of all I love you cause you're you"
    ],
    "authorname": "_Lynn_",
    "tags": [
        "stranger",
        "older woman",
        "younger man",
        "co-worker",
        "friends"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/i-love-you-because"
}