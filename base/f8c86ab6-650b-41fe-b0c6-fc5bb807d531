{
    "title": "The Hacker Ch. 03",
    "pages": [
        "*Author's note - This story can be read by itself, but for maximum enjoyment please read the first two installments. Thanks for reading!\n\n*\n\nSteve and Cindy had been spending time at each other's apartments over the last two weeks. Their relationship had deepened and grown to the point where they truly felt like a part of each other. Cindy learned that the hacker skills Steve was so proud of weren't limited to sex. He could turn the most mundane food into a delightful luxuriance. That was proven the night he told her that they were having ramen noodle. She decided to watch what she figured would be a demonstration of bachelor water boiling. This was not the case. Steve boiled the noodles and then added thin strips of beef and ginger to a wok. The noodles were drained and dumped into the wok along with chili oil, some pea pods and a few other touches. The result was on par with anything she'd gotten in restaurant. When she questioned him about the recipe, he shrugged and told her that it was off the cuff and he really didn't know if it would be any good. \n\nShe was continually surprised by just how much of his ability was applied to his life in general and how little he acknowledged as remarkable. A coat hanger was adapted to a makeshift toaster when the artisan bread they bought wouldn't fit in the regular toaster. A piece of chewing gum and a bit of plastic wrap fixed the car during a Sunday drive. He even managed to fix her shoe with a drywall screw when she broke the heel one morning. \n\nShe managed to glean out of him that he studied mythology and ancient Europe. At times he seemed almost manic when an idea seized him. At one point she referred to him as a wizard -- he truly seemed to be conjuring when he worked. Computer code was substituted for spells of old. Alchemical potions were replaced by hardware and raw material from various sources. Incantations became the howl of tools and the final result, instead of gold, was pleasure. \n\nCindy was somewhat downcast that she wasn't a match to his skills, at least until he explained the double edged nature of being a modern age Tesla. People were actually threatened by his ability and as a result there was a societal isolation levied on him. His lack of friends was more to do with the inability to locate understanding individuals and less to do with a lack of peers. People generally were fearful, ignorant, intolerant louts when confronted with the unique talents that he possessed. \n\nAfter many years of trying to make friends on his own merits, he learned that he had to hide his talents if he wanted friends. For a time that was what he did but it soon became clear that he could not hold back his talents. Friends either didn't understand or could not tolerate the situations and simply fell out of his life. Lonely, isolated and confused as to why, he focused on his work and his hobbies. \n\nAll of this changed the day Cindy appeared. Not that he noticed the change at first. She had immediately noticed something special about him. She had spent almost a year working into his world, not totally realizing what waited behind the door she was trying to slip behind. Yes, she knew that there was a smoldering passion there, but nothing indicated the fire it would awake nor how easily it could be rekindled. \n\nTwo weeks of experimentation, improvisation and good old fashioned fucking -- what a time it had been. She had logged on to his computer and had just finished checking her e-mail when she noted that his wallpaper was a scene of a beautiful nude man and woman apparently chained together while a dirty muscular man smirked from a distance. It looked like an old painting, but somehow new as well.\n\n\"Where is this from?\" she asked.\n\n\"A friend of mine made it, he calls it captive betrayal\"\n\n\"I don't get it, it looks more like S&M\"\n\n\"Hephaestus, Aphrodite and Ares. Do you know the story?\"\n\n\"No, mythology was never my strong suit\"\n\n\"Hephaestus, the god of the forge and the ugliest of all the gods was married to Aphrodite the goddess of love and beauty. She wedded him because she knew she could trust him not to cheat on her. He loved her devotedly and his whole life became set to making her happy. In his forge he crafted her jewelery and trinkets so wondrous they actually enhanced her already perfect goddess beauty. Aphrodite was never really happy with her marriage. Hephaestus was totally devoted to her, but she lusted after Ares, the god of war and cheated with him repeatedly. Eventually Hephaestus found out and built a trap of unbreakable chains to bind the adulterous couple. When the trap was sprung, he dragged them still coupled together all the way to the hall of the gods on mount Olympus to humiliate them as they had done to him. He eventually let them go and divorced her. Heartbroken and defeated he returned to his forge and stayed there. He isolated himself from the other gods for all time.\"\n\n\"Wow, I had no idea there was anything like that in the old religions. I thought it was all suffering and punishment.\"\n\n\"Ha! The Greek gods pretty much fucked anything that moved. I'd say a good third of the stuff I've read involves one of them catching hell for some indiscretion.\"\n\n\"Interesting... what interested me even more was this is your choice for a desktop wallpaper. Kinda says a lot don't you think?\"\n\n\"Well, I wouldn't read too much into it. It's a beautiful picture, that's all.\"\n\n\"Bull. That's a somewhat subtle allegory and a thinly disguised message.\"\n\n\"No, it's just a picture.\"\n\n\"OK, so let's get this out of the way right now. Where do you work on your creations?\"\n\n\"Huh?\"\n\n\"You aren't building any toys in here. Adjustments and final touches, but the major construction is elsewhere.\"\n\n\"A friend of mine owns a metal shop a few blocks from here. I do some computer work for him and in return I get after hours access to the shop and tools. He's cool with it as long as I supply my own materials and clean up after myself.\"\n\n\"Interesting, so when do we leave?\"\n\n\"For where?\"\n\n\"For someone so smart you sure can be dumb sometimes. The workshop, silly.\"\n\n\"Why?\"\n\n\"Well, I'd like to see where you create these things\"\n\n\"OK, I guess. When did you want to go?\"\n\n\"I don't know, sometime soon.\" \n\nThe conversation wandered off into other areas and it had been about an hour when the phone rang. Steve was in the shower so Cindy answered.\n\n\"Hello\" \n\n\"Hi, is Steve there?\"\n\n\"Yes, but he's busy at the moment. Could I take a message?\"\n\n\"Sure, this is Don at the Forge. Tell him the stuff he's been expecting showed up today. I'll put it in his cage.\"\n\n\"Will do, anything else?\"\n\n\"Nope, that'll do\"\n\n\"I'll make sure he gets the message.\"\n\nJust as she hung up the phone, Steve emerged from the bathroom.\n\n\"Who was that?\"\n\n\"Don, he said the stuff was in. Does that mean anything to you?\"\n\n\"Hmm... I wonder if everything showed up.\"\n\n\"Everything what? I'm going to start thinking you're dealing drugs if you don't start explaining what this is about.\"\n\n\"I guess you'll get to see the workshop sooner than I planned, let me get dried off and we'll go for a drive\"\n\nSteve refused to answer any more questions about it. In about an hour they were standing in a huge machine shop.\n\n\"Well? What do you think? Is it everything you hoped for?\" His voice ricocheted around the sprawling space.\n\n\"This is huge! What do they make here?\"\n\n\"Custom parts for specialty equipment and antiques. Don has some amazing people working here.\"\n\n\"Interesting... so where is this stuff that he was talking about?\"\n\nSteve lead her to a chain link lock-up in a far corner. He opened the gate and motioned her inside. There were several unopened boxes with shipping labels and a pile of round and square tube neatly stacked in the corner. Her eyes swept around the rest of the enclosure and surveyed the area. There appeared to be several items either being repaired or dismantled. Planted in the middle of of the discord was her red mixer. She felt the heat charge up her face. 'You'd think nothing could embarrass me after the last couple of weeks!'\n\nSteve was back on to her thankfully, merrily tearing through the packages and sorting the contents into different piles. To Cindy it looked like a random assortment of mechanical parts, until he pulled out a sheet of bright red leather.\n\n\"What the hell is that for?\" She almost squealed from a mixture of shock and amusement.\n\n\"It's a surprise.\"\n\n\"I see, something else for you to spring on me.\" Her eyes glittering with a playful intent \"No way, Buster. I'm watching you this time.\"\n\n\"Huh?\"\n\n\"Did you suddenly get stupid on me? I want to watch you work.\"\n\n\"Why? I mean why would you? This is hours of work and it's not exactly interesting. This is loud, dirty and it may not even work.\"\n\n\"OK, so what? I'm not some little princess. Let's get started!\"\n\nHe realized that there wasn't much chance of talking her out of it. While the company was welcome he sort of felt that he was expected to perform. After about 30 minutes or so he started to relax and the lightning started flashing through his mind so intently that even Cindy claimed to be able to see it in his eyes. Sparks flew from saws and fire rained from welders. Curls of metal snaked up drill bits and a pile of metal parts slowly built up on a small cart. Cindy watched him work, it was almost magic to see him grab a piece of metal and glare at it for a moment before forcing it to be what he wanted by conjuring fire and smoke until it obeyed his will. His eyes had changed from the warm blue she loved to an icy hue that matched his mindset. \n\nThe intensity that he displayed was incredible, the building could be falling down around him and she doubted he would break his concentration long enough to notice. Finally he seemed to be done. He pushed the welding goggles up into his hair and by the light of the torch and fading glow of the red iron bar she saw it. The same dirty face framed in the same light -- Hephaestus made flesh.\n\nHe motioned for her to follow him. As she walked behind him, her mind started to burn as it started showing her pieces of conversations, images of him working, his creations, the speed increasing until the images came to her as quick flashes.\n\n\"I understand now,\" she said quietly. The feelings rushing through her came to what poets call a moment of clarity. She wrapped her arms around herself and lowered her head in silent reflection.\n\nSteve, meanwhile had changed into a pair of disposable coveralls and was now mixing paint. Silently he loaded the spray gun and dragged the trolley to the spray booth. Parts were methodically strung on overhead wire like the bones of some metal animal. Steve pulled on a respirator and closed the door to the spray booth. She watched him through the observation glass as he made dull black metal turn wet red as he waved his hand. Eventually he emerged, nearly exhausted from the physical and mental efforts of the evening. As he closed the door with one hand, he twisted a knob beside the light switch and the spray booth lit up with a red glow as a dozen heat lamps burst to life.\n\n\"I could really use a shower\" It was the first words he had spoken in almost 3 hours.\n\n\"OK, let's get you home and clean up.\"\n\nThe drive back to the apartment was conducted in silence. Cindy was looking out the window, but her eyes were completely unfocused as she grappled with the revelations from earlier.\n\nIn complete silence she took him by the hand and lead him to the bathroom. She started running the bath and slowly stripped him of his clothes. She stood behind him and placed her hands on his hips, using gentle pressure she guided him to get into the tub and sit down. The time passed as she washed the grime from him. They kissed and caressed each other throughout this ritual. She washed his hair, gently running her fingers across his scalp. She rinsed the soap from his head using a small urn she retrieved from the kitchen. She toweled him dry and even went so far as to get his housecoat. \n\n\"Go hang out on the couch, I'll be right there.\"\n\nSteve settled down on the couch and let his head fall back. Gazing at the ceiling and completely engrossed in cataloging the parts and progress of tonight's work he was only dimly aware of the warm ceramic touching his palm. Cindy had made tea and had slipped up behind him and was patiently holding the mug to his hand waiting for him to take it.\n\n\"I hope this waiting on me isn't out of obligation or something.\"\n\n\"Hardly, I like doing things to make people I like feel good.\"\n\n\"So what do your enemies get?\"\n\n\"Nothing short of begging for mercy and death\" she grinned playfully.\n\n\"Awesome, I'm more the 'let Karma catch up to them' type myself.\"\n\nCindy knew this moment would be a long time before it came around again. She drew a short breath, looked at the floor and quietly asked -\n\n\"Who was she Steve?\"\n\nThe words had the effect of halting time. Color drained away and the air became solid. Steve felt like he'd been pinned like a bug in a museum display. How did she find out? He racked his now scrambled thoughts -- how?\n\n\"Wh-What do you mean?\"\n\nCindy's eyes flashed up from the floor and locked to his gaze.\n\n\"Little first year psych for you. If you didn't know what I meant you would have asked me WHO I meant. You fixated on an event and asked me what I meant. You don't have to talk about it if you don't want to -- but I can see it still bothers you.\"\n\n\"No, it's old history. I really doesn't bother me any more but I guess it still shows.\" He drank a large measure from his mug and exhaled like a man weary from long toil. \"She was an ex-girlfriend who was less understanding about my imagination than you are. A bit of a prude and old school marm in a young body if you follow me. Sex with the lights on -- forget it. Zero interest in experimentation of any kind. This was before I had a workshop like the Forge to work in so my creativity was limited to sketch books and PC files. One day she was 'cleaning up' and found one of my notebooks.\"\n\nCindy went cold as Steve mechanically retold how this heartless woman scanned and emailed his drawings to his co-workers in revenge for what she later described as his cheating on her. \n\nAfter all, she screamed at him, he wouldn't be into this depraved shit if he was normal and she was enough for any man. He came home from work that day to find that she had ripped up every scrap of paper in his place to the size of a postage stamp and she'd thrown his computer down the garbage chute. His co-workers were somewhat restrained initially but whispered comments and laughter that died as soon as he entered the room meant that he'd have to change companies to get away from the damage she had done. \n\n\"Jesus... I mean wow... that's seriously disturbed. Please tell me you had her charged or something.\"\n\n\"I couldn't. That would mean getting it in public record and can you imagine the media picking up on that. The headlines would finish me professionally. Can't you see it -- 'Dildogate: Man sues after destruction of sex toy blueprints' Not the sort of thing you want pinned on your door at work.\"\n\n\"So she got away with it? Doesn't that make you angry?\"\n\n\"Used to. But, I've got a good job now. Better than the place I had to leave. I've learned to be more careful about where my plans get stored.\"\n\n\"I guess that explains the picture on your computer. I'm surprised you didn't engineer some godlike revenge on her.\"\n\n\"Nah. There was a time that I wanted to even the score. But in all honesty she has to live with herself and I can't think of a worse punishment to inflict on her than that.\"\n\n\"You know the stuff over at the Forge, anybody can look in that cage and see that you're working on a-\"\n\n\"Could be anything\" He cut her off \"I don't assemble anything there. I never want to have to deal with that situation again and to that effect I have learned to be careful to the point of paranoia.\"\n\n\"So where is everything?\"\n\n\"Everything what?\"\n\n\"All the other things you've been inventing? You've obviously been working on stuff before now.\"\n\n\"A lot of it is dismantled and used as parts for the next project. Most of my ideas aren't ever sex related. Those that are, I haven't had anybody to try them out on and without feedback it's kinda pointless. I can guess what works but the devil is in the details. To be honest, I enjoy the fine tuning as much as building the thing in the first place. There is also a question of limits. How many strokes per minute or how much vibration can a person take and where is the pleasure threshold? Experimentation and discovery are really what drive me.\"\n\nHe seemed to be relaxing again, having told Cindy about the past made his need for secrecy less paranoid. \n\n\"So, can you show me what didn't get recycled?\"\n\n\"I don't really keep prototypes around the house, anything that is here is either partially dismantled or non-functional.\"\n\n\"You're holding out on me! You've got something here but you don't know if you should bring it up! You are so busted.\" Cindy was grinning like a teenager who'd just got a juicy bit of gossip.\n\n\"It's not ready, I haven't tested or calibrated it. It could be dangerous at this point.\" Steve was almost stammering he was going so fast.\n\n\"I didn't say I wanted to use it silly, show me what it is.\" Cindy changed her tone to a softer and coaxing but kept the impish grin.\n\nSteve realized that he wasn't going to win and got up to retrieve the latest invention. While he was gone Cindy did her best to arrange herself to look as inviting as possible. She drew her knees up to her chest and tugged down her top a bit to show off a bit more cleavage. She rolled her knees to one side so if Steve was so inclined he would get a glimpse of her pussy under her skirt. She licked her lips and let her mind wander to the first night when her body was a total playground for his mind. She shivered recalling the things that he did and how she came without him laying a hand on her -- three times. She felt a twitch in her pussy as if it were insisting that more of that treatment was being demanded.\n\nSteve appeared carrying what looked like a steel briefcase and sat down beside her.\n\n\"Here you go. The 'business case'\"\n\n\"OK, I give up. What's the trick?\"\n\nSteve slid off the sofa and sat on the floor.\n\n\"Well, all you do is open it up like so, remove the shaft, toy and cord from the compartment here, plug it into the wall, screw in the shaft in this socket here, put the dildo on the other end of the shaft, pull out the control box and close the lid and you're ready to go!\" Steve had taken on a late night infomercial spokesman cadence and was now grinning as Cindy looked the device over like a nervous high school girl passing third base.\n\nThe red jelly dildo on the end of the hard silver shaft drooped slightly and looked almost comical. But connected to that was a tireless machine that would go until it was commanded to stop. Steve glanced back and realized that he was eye level with her crotch and her lips were contracting rhythmically. It was entrancing, it was almost a sucking motion, a beckoning and without thinking about it he turned towards Cindy and leaned in and let his tongue reach out for her.\n\nContact! He parted her and kept tunneling, not headed for her clit but driving up inside her as if to bury as far inside her as possible. Cindy almost jumped, she had been so engrossed with the latest machine she was taken completely off guard by his sudden bold move. His tongue suddenly squirming inside her was delightful and she automatically threw her calves over his shoulders, crossed her ankles and pulled him deeper inside her. The twisting thrusting dance became more energetic with this sudden encouragement and he responded by reaching up for her breasts with both hands. The move meant that her legs were forced a bit higher and as such he could now delve a little deeper with the kiss he was performing. ",
        "He slid his hands up her hips and deftly under her top, slipped her bra up over her breasts, danced his fingertips across her skin and found her erect nipples. Deftly he pulled them in unison down slightly and rolled them firmly between his thumbs and forefingers. She almost squealed with delight and haunched down a bit more to try and get more of him inside her. She grabbed the hair on either side of his head and pulled him harder into her melting pussy. The bridge of his nose was grinding into her clit and his tongue was now thrusting and squirming deep inside her and his fingers were still working her nipples. \n\nThe tingle and twitch told her that an orgasm was building, she slid down a bit more on the couch to let Steve get an even better angle when suddenly he stopped. He let go of her and slipped out from between her legs. She was confused and a little annoyed. \n\n\"Steve, what's going on? You almost had me there you know?\"\n\n\"Sorry, just be a minute\" He returned with a thin yoga mat and motioned for her to lie down. While she re-positioned herself Steve was moving the briefcase machine into position. The smooth jelly tip entered her slightly and then Steve snapped a switch before she could say anything. A humming noise filled her ears and the machine slowly started pushing itself into her slick, waiting snatch. It topped out at a comfortable point and started to retreat.\n\n\"Is that OK? Not too deep?\"\n\nThe machine had reversed and was drilling into her again\n\n\"No... it's awesome -- a bit more speed would be great though.\" \n\n\"Ladies choice.\" Steve turned a dial, the humming intensified and the thrusting accelerated. He kept one hand on the machine and lowered his head to her pussy, watching his creation piston into her. He closed his mouth over her swollen clit and started slowly sucking while the tip of his tongue slithered and darted around. \n\nHe could feel her excitement building, slowly he kept increasing the power, the machine was now almost 2 strokes a second and Cindy was gasping and moaning in time with her robotic lover's thrust. So involved with making Cindy happy that Steve was taken completely by surprise when Cindy's hot mouth enveloped him. He didn't remember her undoing his zipper and pulling his cock out of his jeans. He looked down to see that she had contorted herself around his leg to get him to her mouth. He repositioned so she could be more comfortable and resumed his delicate kiss of her clit. \n\nCindy was like a woman possessed, she frantically sucked and licked and bobbed. It was like one of her biggest fantasies come to life - a threesome. A cock in her pussy and one in her mouth, and to take it over the top her clit was getting a tongue bath at the same time. Faster and faster the machine pounded in and out as Steve clamped down on her nub and licked even more frantically. Cindy put her hands on his cock and started jacking him off. Her tongue swirled around his head while she continued sliding her mouth up and down his shaft. \n\nSteve's enjoyment of this was obvious as he started bucking his hips. She dropped a few fingers away from the shaft, held her head still and let him fuck her mouth. Steve was almost blind with raw passion, he had to fight to concentrate on what he was doing to Cindy because what she was doing to his cock was beyond belief. Most women in his experience give a blowjob out reciprocation, and then only half-heartedly. Enthusiasm like this was beyond hot, past sexy. \n\nHe actually was exerting effort to not cum on the spot. The thought ran through his mind that the machine, his machine, was fucking her pussy while he was in her mouth and licking her at the same time - a one man threeway. He lost control the same instant and called out. Cindy was ready for this and as Steve tried to pull away she dug her nails into his ass as a firm command to stay put. \n\nShe deep throated him and held him there allowing the cum to run straight down her throat. A girl friend in university had taught her the trick; it allowed her to swallow without having to taste anything and no guy every complained about the feeling. Steve was being wracked by wave after wave of sensation. Initially he was desperate to get out of her mouth because they have never discussed the 'who does what where' things. When she dug in her nails and pulled him deeper it was completely over the top.\n\nCindy felt the last few spasms of his cock and relaxed her grip letting him slide out of her mouth. Now she focused totally on her pleasure. Her hands dropped to her nipples and started savagely pulling and twisting to drive herself over the top. Steve recovered and feeling her urgency increased his speed and added a bit of pressure. The machine relentlessly stroking her, slick with sweat and Steve pressing her to the floor with his body... she felt the crest of the wave growing and then suddenly breaking. \n\nHer pussy clenched and released out of control. She arched her back and almost lifted Steve off the floor. Again and again the shockwaves tore through her body and mind. Her hands fell away and hit the floor palms down. She tried to arch her back but he held down and continued licking and sucking. Finally it started to ebb and she was about to call out for him to stop the machine when her voice froze. \n\nAnother orgasm tore through her mind and body. Steve felt her spasming and gasping under him. This time it was more powerful but faster to recede. She managed to force her voice to respond. Steve killed the power and rolled off her.They curled up on the floor and let the after glow fade. \n\nLater that evening they were wrapped in a blanket sitting on the couch and sharing a bottle of wine.\n\n\"Steve?\" Cindy murmured into his chest.\n\n\"Mmm?\"\n\n\"You're not getting off the hook - I still want my mixer hacked.\"\n\n\"Funny you mentioned that. I found out that the parts are delayed again.\" "
    ],
    "authorname": "Techomancer",
    "tags": [
        "machine",
        "oral",
        "dildo",
        "blowjob",
        "mythology",
        "swallow"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-hacker-ch-03"
}