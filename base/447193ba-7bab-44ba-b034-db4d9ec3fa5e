{
    "title": "Alexis, reprised",
    "pages": [
        "---\nAlexis and Robyn are the first two characters who've ever been entirely my own. I was unsure about writing more concerning them, but Alexis also needed to be heard.\n\nAs in the first installment, this is a long one.\n\nSpecial thanks to my editor LizHaze for her help and suggestions.\n---\n\nSunlight wakes me.\n\nI lie, eyes closed, watching the flashes of light and shadow on the inside of my eyelids; enjoying the peace, the quiet. It's still early, I think - dappling like this through the leaves of my birch tree means the sun is still low in the sky, which in turn implies that I don't have to wake up just yet. There's still time for me to be here, in my favourite place.\n\nWith her.\n\nI can feel her next to me - hear the soft sound of her breathing, smell the scent of her on the pillows and sheets. Were I to just roll over, I could feel all of her against me. But that would wake her. Not yet, not yet. This is my time, my perfect, quiet time. No cares, no fears, just her and me and our space, our sanctuary.\n\nShe's lying on her side as usual, facing away from me. It's adorable. Robyn always falls asleep holding me, and always wakes up curled into a ball on her side, with her back to me as if she's a cat in a sunbeam. I can see the light dusting of freckles on her neck, and the scar from her fall in the shower those brief few weeks ago. I still feel guilty about that; she'll always have it there, just behind her right ear - two jagged inches to continually remind me of my stupidity.\n\nShe's joked that it's my mark on her to show she's mine... but I still sometimes wake in cold sweats from nightmares in which her fall was far, far worse and I was bereft of the only person I had left.\n\nI lie and watch her gently breathing, content to let time pass as it will, without my interference.\n\nIt's been three glorious weeks since I got my Robyn. Three long, sensual, gorgeous weeks in which my life has had a near-permanent rosy glow. I find myself humming all the time; I have more energy, I feel alive again for the first time since I caught Andrew cheating on me. She's given herself to me utterly, and I've in turn surrendered everything of myself to her. I've never felt this close to any other person, ever, and having her to myself feels like the greatest gift I've ever been given.\n\nShe's a shade over twenty-one, my Robs. A hard-bodied hottie with a grizzled soul and the dogged desire to never see the best in herself. I'm chipping slowly away at that. I view her as a long-term project... my magnum opus, if you will. I've always looked after her, see. Ever since Mum and Dad... well, we're the only family we have, and we've guarded one another fiercely since then.\n\nA moment of bitter-sweetness. Honestly, Robyn's never needed much guarding. She's always been driven and has never given tuppence about anyone's feelings but mine. She's always been vocal (and physically demonstrative) about this. It's cost her friends.\n\nBut... there've been times when the knowledge that she loved me has been all that's kept me going.\n\nMy poor, cynical sister. Hard as diamond until something knocks her in the wrong place and she goes to pieces.\n\nMe? More like ice, I think. I melt, and run down into deep, dark caverns far, far away.\n\nRobyn is the only one who can find me and bring me back from them.\n\n--\n\nI've always liked boys. They're gorgeous creatures, truly... and there're few things as delicious as the feeling of a man deep in me. But sometime around the age of seventeen I realised that I liked girls too. Kind of embarrassing to work out that you're a degenerate when you're surrounded by other lycra-clad women at a dance class, but there you have it. Broken little Lexi the letcher, that's me.\n\nI guess knowing yourself is the first step towards healing or some such rubbish.\n\nI can't remember when it was I first realised that I wanted her. I guess I just gradually came to understand that I wasn't only interested in her as my younger sibling. I'd catch myself watching her when she wasn't looking; taking chances to spend more time doing the things I knew she enjoyed. I've felt supremely guilty at times, worried that I was taking hideous advantage of someone who depended so utterly on me.\n\nThen, I started to notice things about Robs as well. She'd spend time with me she didn't have free to spend. She was always watching, always there. Somewhere, sometime, I realised that she was my shadow-self; anticipating and knowing my needs sometimes even before I realised they were there. She'd become as much my guardian as I was hers. And I needed her, needed her as close to me as my skin, as close to me as my heart.\n\nBut I could never take that step. Never break that boundary. I was too scared of losing her.\n\nUntil then. Until now.\n\n--\n\nGod, her neck is exquisite. I don't really know how long I've been staring at it; at the line her muscles make as they run from vertebrae to clavicle. Yes, at the freckles too. And the slightly tattered lobes of her ears that she insisted on piercing herself. And at the slight auburn undertone that shines through her thick brown hair when stray sunlight strikes it. At the gentle curve of her spine, disappearing under the sheets. At the faint white scar where she had a mole removed from her right shoulder. At the pale line of hairs just visible along the nape of her neck...\n\nI have to restrain myself from reaching out and waking her. She deserves the rest, given how hard she's been working these past few days. I've tried to help where I could. I smirk to myself. She's had lots of frustration that needed working out. Baths. Backrubs. Lots of kissing. Lots of touching. I flush, amused at the way my body reacts to the memories.\n\nI can't restrain myself anymore, and I reach out to gently touch her back.\n\nShe makes a small noise, and uncurls. She rolls over onto her back, letting out a toussle-haired yawn. I grin a small, wicked grin and trail my fingers down over her exposed right breast, watching her nipple harden for me. I cup her breast, loving the heat of it and the shape it forms in my hand.\n\n\"Addict,\" Robyn mutters sleepily.\n\n\"You would be too if you had this view,\" I reply.\n\nShe turns her head and, smiling, waits for her good morning kiss - something she's demanded from me every morning since our first night together. I oblige, teasingly, enjoying the little happy sound she makes as I kiss her. Then I bury my face in her neck and briefly lose myself in her scent, before pulling back and meeting her pale blue eyes.\n\n\"Morning, sleepyhead,\" I tease.\n\n\"Lies. All lies.\" she responds, yawning again. \"I've been dozing, not sleeping. Been awake since forever.\"\n\n\"I believe you, millions wouldn't. You pretend to snore really well. We should record it and sell it. We'd make our fortune.\"\n\nRobs' laugh has always cheered me up; her mellow alto voice would make her a fantastic blues singer if she weren't so self-conscious. When she's sleepy it sounds like honey poured over smoke, and it makes me hot just listening to it. I've occasionally fantasised about taping her for my own personal enjoyment, but I know it would embarrass her too much. Pity.\n\n\"Plan for today?\" she asks me, voice going slightly breathy as she stretches the kinks out of her back.\n\n\"Mm,\" I return. \"Dunno. It's weekend. Apart from my dress-rehearsal tomorrow night, I have no plans.\"\n\n\"Oh, yeah,\" Robs says, quietly. \"I'd almost forgotten that. What time does it start?\"\n\n\"Six-ish. Wanna come?\"\n\n\"Won't I disturb you?\" she asks.\n\n\"Not if you're quiet and well-behaved.\"\n\n\"Have I ever been anything but?\"\n\n\"Last night. At least twice,\" I tease.\n\n\"Lexi!\" she protests, laughing. \"That doesn't count, and you know it.\"\n\nI snuggle into her, enjoying the last little bit of quiet time prior to the day. She rewards me by rolling over towards me and wrapping one of her strong arms around me, holding me close. I close my eyes in bliss.\n\n--\n\n\"You want anything in particular for breakfast, Lexi?\"\n\nI think. \"Nah, not fussed Robs. Anything's good. Muesli. Toast. You,\" I grin. \"Toast and you.\"\n\n\"Alexis!\" she groans, rolling her eyes at me. I'm gratified to see her flush in response to my teasing. Robs has always been such a serious girl; and after we lost Mum and Dad it sometimes seemed like she'd never smile again. But we both grew scabs over that wound, and slowly her brighter side emerged once more.\n\nBut it's only these past three weeks where it has really shone through - since she came out to me and, I guess, since we acted on our mutual attraction for each other. I guess she'd been holding an enormous amount of stress and fear inside, because since that evening she's a changed girl.\n\nOh, don't get me wrong, she's still a firecracker. Cross her and she'll bite your legs off. She distrusts people, thinks they'll let her down. God only knows how I've managed to avoid doing so, but somehow I've muddled through.\n\nI grab us some bowls while she retrieves the cereals and milk. I set a place for her alongside me at the table so that I, slut that I am, can amuse myself by brushing various bits of me against her while we're eating.\n\nI can't help it. She makes me playful. Having her makes me want to laugh, and dance, and sing. I want to touch her, to feel her, and being anywhere in public is a very real struggle not to be inappropriate with her.\n\nAnd so we sit, squashed up next to each other at our table that could seat the clientele of a medium-sized restaurant. The image amuses me, and I'm certain Robs is having similar thoughts judging by the small smile she's wearing as she tucks into breakfast. I sneak the odd look at her, and am glad to catch her doing the same. Neither of us have bothered to dress properly yet; she pulled on a tatty old tee-shirt and I've dragged on a rather threadbare nightie; the end result of course being that I have a lovely view of her bare hips while mine are coquettishly obscured by sheer fabric.\n\nShe drops her hand to my thigh at one point to squeeze it, and I press my right leg against her left, rewarding her with a smile. I love how tactile she is. I love that she wants to feel me, to let me know she's there. Robs prior to us would never have dreamed of hugging me by surprise. Robs after us thinks nothing of it. It's one of the many things that has changed between us. I love it.\n\nShe finishes her breakfast way before I have even made inroads into mine; she's always had a healthy appetite, but Robs being Robs she'll be off for a run now, as like as not. I envy her sometimes. I never caught the exercise bug; piano and, later, cello consumed my free time, bar the small amount I had free for dancing.\n\nI can lose myself for hours in music. It's always been my primary escape from the harsh, jagged edges of the world.\n\nShe's my other escape. Now, more so than ever, I can take strength from her loyalty and love.\n\nShe pushes her chair away slightly, and then turns so that she can watch me while she finishes her coffee. I feel a little self-conscious, but I shove it aside. I need to eat properly this weekend, the rehearsal is likely to be long and I'll need my 'A' game. But the longer it goes on the more difficult it is to ignore.\n\n\"Penny for your thoughts?\" I finally ask, after she's watched me for a while.\n\n\"They're not worth a penny,\" she replies, with a lazy smile.\n\n\"To me they are,\" I answer, waving a spoon at her. \"Spill it.\"\n\n\"Just amused is all.\"\n\n\"At what?\"\n\n\"At how in love with you I am.\"\n\nI flush slightly. \"Robs, you're going to make me mess on myself if you keep talking like that.\"\n\nShe laughs. \"Really?\"\n\n\"Pinkie-swear it,\" I say, quietly. I sip the peppermint tea she made for me, and smile at her over the rim of the teacup. She's slouched back, and I enjoy the way her breasts press against the fabric of her shirt. Her hair's mussed; she hasn't bothered to pull it into her usual ponytail yet so it falls in waves on either side of her face, framing and accentuating her cheek-bones.\n\nI wish she'd wear her hair down more often, but she hates having it in the way.\n\nShe shifts suddenly, then knocks back her coffee and stands. I get a tantalising glimpse of her inner thighs as she leans forward to plant a kiss on my head, then she's gone with a brisk \"See you in a bit.\"\n\nI sigh and quietly force down the remains of my own breakfast. I finish my tea while staring out at our small, straggly kitchen garden.\n\nIt's a mostly clear morning; with just a few fluffy cumulus clouds scattered like cushions on the sky. I think I'll spend at least some of it in the garden.\n\nAt that I stand, abandoning my cup on the counter for later. I stretch, enjoying the feeling as my back unkinks. It's time for me to start my day.\n\n--\n\nI drag my fingers through my dishevelled hair, then tie it back so it will stay out of my eyes. I pull the nightie off, and pause. On a whim, I walk over to my full length mirror, and stand there taking stock.\n\nI guess I'm attractive. Robyn is pretty adamant about her opinion on the matter. But I think that I pale in comparison to her. All I am is slender. She's got the hips and the musculature. I suppose I lucked out with my brown eyes; at least I'm not the stereotypical thin blue-eyed blonde. I purse my lips, and gently run my hands over my small breasts and their delicate nipples. At least Robyn is appreciative of them. Andrew wasn't.\n\nI still feel too hurt about his cheating to really summon the hate I should feel about that.\n\nI sigh, and turn away. I dig out a pair of panties from my underwear drawer and drag them on. A pair of long cream linen pants and a cotton vest follow. I glance outside and consider, then pull a thin navy polo neck jersey on as well.\n\nMy cello case stands in the corner, safely out of the way of anyone who visits us. I lift it by the handle set into its side, then hump the case and its precious contents downstairs to the lounge where I lay it down on the sofa.\n\nI open the French doors to the garden, pulling back the curtains to let the fresh air in, take a long breath of the cool morning breeze, and then drag a stool nearer to the doorway so that I can have some natural light while I play.\n\nI flip the clasps and open the case, gently folding the lid back against the backrest of the sofa. Out comes my practice bow, and I set it aside. I gently lift my cello free of her restraints, and then lift her from the case by the neck, resting her on the floor. Steadying her with my left hand, I quickly ease out her endpin to the stop that I've marked with a thin ring of black electrical tape.\n\nFinally, I pick up the bow again and make my way to my stool, careful not to bump my baby on anything along the way.\n\nI settle myself in the sunlight, and sit still for a short while with my cello cradled between my legs. Ever since I started to learn, this has been one of my favourite parts - the anticipation, the possibilities that exist before horsehair and rosin meet steel.\n\nI adjust the tension of my bow, then limber up with some arpeggios and some chromatic scales. My baby's out of tune; and I need to ease D slightly. Scales again. Better, but not perfect. Tighten G in a bit, tease the bow gently across all four strings, and smile, satisfied. Perfect fifths. A loud, strident, happy sound.\n\nTime for Bach's Cello Suite number one, then. A warm-up piece... playful but also full of emotion should the musician choose.\n\nI touch bow to strings, and start to play.\n\n--\n\nI once tried to explain to Robyn what music was like when one experiences it the way I do. It's as if I fade into the background and the music takes over. Crescendo, descendo are as natural to me as the tides. I always have an orchestra going in my mind; pieces I've read or heard or written, chasing themselves around like leaves in a whirlpool. It's at once awesome and aggravating - I can never truly be still.\n\nI have to let the music out, all of it, or it pecks away at me and makes it impossible to relax.\n\nThen there're the emotions. Sadness is in the minor key, happiness in the major. Sadness can also be major when one knows one will overcome it. Most of my life is major-key stuff, thank God. Or minor key that's modulated via some cunning to major. I'd have cut my wrists long ago if this weren't the case...\n\nI came close once, one very dark time shortly after Mum and Dad...\n\nAll that stopped me was the knowledge that she'd be the one to find me. I couldn't do that to her.\n\nSo I endured. And I overcame. Minor became major, as it always does eventually.\n\nI've never told Robyn that, obviously. I'm a drama queen at heart, but at least the dramatics are confined somewhere where only I can see them. And at least I have this outlet for it. And now that I have her... maybe I'm finally safe from the darkness. \n\nI hope so.\n\n--\n\nI always lose track of time while I'm playing. Bach has transitioned into Schubert, Schubert to Brahms, and from Brahms I've segued into Dvorak's concerto in B minor. I don't even remember doing it; I've been lost in my own dream-state.\n\nSomething moves in my peripheral vision and I lift my chin, turning slightly. Robyn's sitting on the end of the sofa nearest me, legs tucked under her, blanket wrapped around her shoulders. She must have snuck in while I was playing. She's always loved listening to me.\n\nHer eyes are closed, so she doesn't know I've seen her. The movement itself was just a fold of her blanket shifting in the breeze. I smile, and turn my head away again. She looks so peaceful, I can't bear to stop and disturb her. So Dvorak winds slowly on to his conclusion, and then, I transition into her song.\n\nShe doesn't know it's hers, or that I wrote it. It amuses me to hum it sometimes and watch the gears turn as she tries to place it. She never will. I'll put her out of her misery someday... but not today.\n\nIt's slow to start. Soft, gentle, like Robyn is with me. Minor which slowly becomes major, building gradually to a grand, rich harmony. It borrows somewhat from Elgar, I admit. Maybe someday I'll find a composer who can set it for an orchestra.\n\nBut for now... it's mine, and hers, and I alone know it.\n\nI turn to watch her as the final chord dies away. I see her sigh as the last echoes fade. Then she opens her eyes. I meet her gaze with a smile.\n\n\"My, what a sneaky little Robs you are.\"\n\nShe blushes. \"Sorry, Lexi. I couldn't bear to interrupt you.\"\n\n\"I know, Robs. I'm just teasing. I love having you as my audience.\"\n\n\"I love being your audience,\" she says, quietly.\n\n\"Good run?\" I ask, as I ease the tension out of my bow.\n\n\"It was ok. Didn't go as far or as hard as I should have, though.\"\n\n\"Sometimes you just need a break, you know?\"\n\n\"I know, Lexi.\"\n\nShe stretches; the blanket slips off her shoulders and I see she hasn't changed yet. I laugh.\n\n\"That desperate for culture, Robs?\"\n\nShe snorts, and waves her hands. \"You know me, Lexi. If it's comfortable and not too smelly it'll do for now.\"\n\nI wrinkle my nose at her and she shakes her head with a wry grin. \"Smelly clothes are hardly a hardship when the trade is to hear you play like that,\" she says quietly.\n\n\"So I guess you're saying I'm an ok cellist?\" I tease.\n\n\"You're better than Jacqueline du Pre,\" she answers, levelly.\n\n\"Oh Robs,\" I say, amused and flattered. \"I think you may be seeing me through adoring-younger-sister glasses. I'm good, but not that good.\"\n\n\"You are!\" she insists. \"God, Lexi, don't you understand? You... you take that instrument and you make it sound like... fuck, I don't know how to describe it. It's like it's your soul, in your hands, and you're telling and showing your story with no filters at all and every little hurt, every little ache, everything you've ever seen or done or felt is there, singing...\"\n\nI eye her speculatively. \"Robs, have you been drinking?\"\n\n\"What? No!\" she says, flustered.",
        "I laugh. I lie my cello and bow down gently, then stand and walk over to flop down next to her on the couch. She turns so that she can watch me.\n\n\"Flattery will get you everywhere, you know,\" I say.\n\n\"Is it flattery if it's true?\"\n\n\"Difficult question. I do, however, think you're being way to generous with your praise, Robs.\"\n\n\"Lexi. God's own truth. I've got all the pieces I've ever heard you play on my Mac. None of those cellists can touch you for the emotion you put into your music.\"\n\nSay what you like about Robyn, one thing she does have is a good ear for technical ability. I feel gratified that she thinks I'm that good, even if the truth is far from it. I can hold my own but I don't have the dedication to be great.\n\nShe reaches out and wraps her arm around me, and I let her pull me in against her. I love the feeling of her arms around me; Robs may be the younger of us but being like this with her always makes me feel like I'm sixteen. Her skin is slightly sticky from dried sweat, and her natural scent is strong... and suddenly, just like that, I want her.\n\nI lean my head on her shoulder.\n\n\"What time is it?\" I ask.\n\n\"Just gone eleven.\"\n\n\"I want to try to sort out our garden a bit today. I'm sure we could grow some tomatoes if we put them in pots in the sunny corner.\"\n\n\"I'm all dirty already, need me to be manual labour?\" she asks.\n\n\"If you would, that would be lovely. I'll reward you richly.\"\n\n\"I like the sound of that,\" she replies. \"Are we talking pat-on-the-back types of rewards? Or something more... generous?\"\n\nI raise my right hand and gently trail circles on her right thigh.\n\n\"More along the lines of half my kingdom type of reward,\" I murmur.\n\n\"Only half your kingdom?\" Robs answers with a smile.\n\nAll of it, all of me, always, is what I want to say. I guess my face changes because she stops smiling and raises a puzzled eyebrow.\n\n\"Lexi?\"\n\n\"Mm?\"\n\n\"Are you ok?\"\n\n\"It's... yes. Yes, I think I'm ok.\"\n\n\"Think, or know?\"\n\n\"Think.\"\n\nShe pulls slightly away from me, the better to meet my eyes. \"What's wrong?\"\n\n\"Just hoping I never... that I never lose you.\"\n\n\"Alexis Julia Blake,\" she says, as she pulls me hard against her. \"Quite apart from anything else, I'd die if I were ever apart from you. I need you like the air I breathe.\"\n\nAn ache builds in my chest. I try to answer, to say something, anything... but instead I find myself burying my face in her neck, desperately trying and failing to fight back the sobs, my eyes squeezed tightly closed.\n\n\"Lexi... what... Oh.\"\n\nI feel her shift, feel her arm under my legs, and the next thing I'm really aware of is that she's scooped me up onto her lap and has locked her arms around me so that she can just hold me there against her.\n\nSlowly the tremors ease. Robs, my angel, just strokes my hair and neck and back and lets me calm in my own time. She's always known how to read me. Always known what to do for me. And right now, this is what I need; her as close to me as my own skin.\n\nI never know what's going to trigger this. Rain follows sunshine so quickly in my world. Mum always called me her storm-child, and would manage my moods with distractions. After I lost her things got tough.\n\nI take a long, shuddering breath.\n\n\"Talk to me?\" she says, quietly.\n\nI swallow. The hurt has eased slightly, but I'm still on a knife edge.\n\n\"You never cry in front of me. What's going on?\" she urges me.\n\n\"Just... years worth of stuff slowly leaving. I think. I hadn't realised how much I was carrying around with me. It's... it's only now that I feel safe that it's coming out. Sorry.\"\n\n\"Never apologise to me for needing to vent, ok?\"\n\nI say nothing. I feel her sigh, and she tightens her arms. \"Tell you what,\" she says. \"You and I are going to do that bit of gardening work so that you can get some fresh air. Then I'm going to rub your back for you. Then I'm going to get you drunk. Then you're going to talk to me about it... I mean, really talk about it.\"\n\nShe gently lifts my chin. \"Lexi?\"\n\nI sniff, and scrub my face, then open my eyes. Robs is frowning. I don't like it when she frowns.\n\n\"Mm?\" I manage.\n\n\"This is the bit where you say 'That sounds lovely Robyn, I would love you to run your hands all over my body and get me drunk and seduce me.'\"\n\nI can't help myself. I choke, then laugh helplessly. Robs grins at me. \"Thought so. You minx.\" she says.\n\n\"Can't help what you do to me.\"\n\nRobs kisses me, once, then just holds me more.\n\n\"Better?\" she asks, after a while\n\nI make some sort of affirmative noise, and she helps me off her lap. Pity, I was enjoying both being on it and the brief interlude of not having to be an adult. Robyn stands and stretches, then offers me her hand. She pulls me up and into her embrace, giving me a crushing hug. When she releases me she gives me a playful slap on my bum. I snort, and scrub at my face again.\n\n\"I'm a mess, Robs,\" I say, quietly.\n\n\"No. You're just slightly bent, like I am,\" she answers. Then she flushes and I smirk at the inadvertent pun she made. I love her; love the way she says the most hilariously inappropriate things at times.\n\n\"Sun's out again,\" she says, and I know she's not talking about the weather. There's nothing I can say right now in reply, so I just give her a peck on the cheek and a quiet, heartfelt \"Thank you.\"\n\n--\n\nWatching Robs digging soil in her running pants and a sports bra does a lot to lift my spirits.\n\nIt's like my own soft-core porn movie, and I'm pretty sure this isn't lost on her because she spends more time bending over than I'm sure is strictly necessary. Soon she's covered in a light sheen of sweat again, and her hair is all over the place.\n\nShe's put together four mismatched pots of soil for me, and raised them on old bricks in the sunny part of the kitchen garden. I've been amusing myself weeding the rest of the herbs, and so all I need to do is scatter some tomato seed and rake the soil over with my fingers. Robs brings me a watering can and I dampen everything down.\n\nWhile I do that I have the opportunity to get some solid perving in. When I was at school we called lycra pants like the ones she's wearing 'Scandal pants' - so tight you could see the lips moving.\n\nAnd God, is Robyn only hot in them. I swear she's got no spare weight on her; just supremely-toned thighs and a bum to die for. I bless my lucky stars that she's not into guys, because if she was she'd have her pick of them. Instead, she's with me... and I know I got the better bargain there.\n\nShe reaches out absently to scratch my back, and I smile a small smile at her. She's been spending time outdoors in the good weather, and her freckles have darkened. They, coupled with the ponytail and her slim build, make her look even younger if that's possible. She adjusts her sports bra unconsciously, and I find myself thinking about her breasts.\n\nSuddenly, I realise I'm spilling water on myself. I squawk, and Robyn laughs at me.\n\n\"Caught you,\" she says, smugly.\n\nI give her a shamefaced look and hang my head. She laughs again, then steps in to wrap her arm around my waist and pull me against her. \"I should start charging you per hour.\"\n\n\"I'd pay, gladly,\" I answer. \"But I'd prefer to pay in kind...\"\n\nShe takes the watering can from me and sets it aside. \"Alexis Julia Blake, I do declare that you are a harlot.\"\n\n\"Confessed, convicted, confined.\" I sigh, offering my wrists. \"Shackle me and drag me off to my punishment. What is my punishment, anyway?\"\n\n\"Mm. Let me think about that and get back to you. Firstly, I need a shower, and then I seem to recall offering you a backrub.\"\n\n\"You did. Silly girl. Major tactical blunder, that.\"\n\n\"It's all part of my cunning plan to get you naked.\" she responds, deadpan.\n\n\"Oh, really?\" I say, with a salacious grin. \"Does that work with all the girls you try it on?\"\n\n\"All of the ones I want to see naked, yes,\" she returns.\n\nI blush. God only knows why, she's seen all of me already. She grins at my discomfort, enjoying the easy point she just scored. We tidy up the debris of our gardening, and Robs goes to shower while I throw together a Greek salad for lunch.\n\n--\n\nI set us places at our weather-ravaged plastic garden table and pour us both a glass of the half-finished bottle of chardonnay we opened last night. I sit down to wait, closing my eyes and enjoying the slight breeze and the sound of birdsong.\n\nRobs takes her time, but it's worth the wait. She's dressed herself in a short blue and white cotton sundress. I give her an appreciative wolf-whistle and she strikes a pose for me in the open French doors. I mime taking a photo and she blows me a paparazzi kiss. Then she saunters out to join me.\n\n\"Hey, sexy,\" I murmur as she sits down next to me.\n\n\"Hello, lover,\" she returns with a smile. \"Thanks for making lunch, Lexi. I'll do dinner, ok?\"\n\n\"Deal,\" I answer. \"Sorry, it's pretty basic.\"\n\n\"Looks good to me,\" she says as she dishes for us. I take a sip of my wine and watch her.\n\nNot for the first time, I find myself wishing I were a painter. I know that I will carry this picture of her sitting here in the dappled midday shade with me for the rest of my life. She's in her element; strands of stray hair wafting gently, unselfconsciously eating a slice of cheese, unfocussed for now on guarding her grim battlements against the world outside.\n\nMy Robyn. My lighter half. I hope I've done right by her.\n\n\"Eat, Alexis,\" she says quietly, and I comply. I polish off some olives and tomatoes, and enjoy my glass of wine. It's a cool Spring this year, but the day is warmer than others so I don't suffer too much. I eye Robyn, and wish yet again that my metabolism was a bit more active. I ruefully pluck at my jersey.\n\n\"What's bugging you?\" Robs asks, sipping her chardonnay.\n\n\"Nothing important. Just wishing I could show as much skin as you can without freezing.\"\n\nRobs rolls her eyes good-naturedly. \"Take it from me, Lexi. The way that jersey clings to you leaves nothing to my imagination.\"\n\n\"Really?\" I ask, intrigued.\n\n\"Ya, really,\" she mouths.\n\nI grin. \"I'll try to find more like it.\"\n\n\"The pants are nice too. You look good in linens. I should abduct you and drag you off on my pleasure yacht.\"\n\n\"You own a yacht? Why did you not inform me of this rather important fact?\" I ask, playing along.\n\n\"I was worried you'd take me for a pirate,\" she returns. \"Yarrrrrr.\"\n\nI laugh. \"After my booty?\"\n\n\"Oh god, Lexi. That's a terrible pun.\" Robyn leans back and shakes her head in despair.\n\n\"You set it up, it's your fault,\" I respond, and stick my tongue out.\n\n\"I suppose I did at that,\" she says, ruefully. \"I'll chalk that one up to the wine and the company.\"\n\n--\n\nWe sit, watching our garden. The occasional bird flits through our patch of sky, and one of our resident squirrels scampers along the back fence, pausing only long enough to ensure we're no threat. Robs reaches out and puts her hand on my knee, squeezing it gently.\n\n\"Are you going to talk, or do I need to soften you up first?\" she asks, seriously.\n\nI sigh.\n\n\"I wouldn't normally rummage around, Lexi, but you've got me worried enough that I'm prepared to.\"\n\nI shift slightly on my seat so I'm facing her. Her face is serious; her eyes fixed on me.\n\nI shrug. \"It's just been a long time since I've felt like I truly belonged, Robs. So very, very long.\"\n\n\"You've always belonged with me,\" she answers quietly.\n\n\"Yes... I know... but until you let me have you I thought... well, I thought I'd be alone. Romantically, I mean. Andrew hurt me too much.\"\n\nRobs growls something profane under her breath, and shakes her head. \"He'd better pray I never see him while I'm behind the wheel of the Peugeot,\" she mutters. \"I'll turn the fucker into a hood ornament.\"\n\nI smile, sadly. \"Don't, you'll get yourself locked up and I'll be a sad panda.\"\n\n\"I know, Lexi,\" she sighs. \"I just... I can't forgive him for what he's said about you and done to you.\"\n\n\"You should be happy. It means you have me,\" I say.\n\n\"I know, I know. But there's a principle at stake here,\" Robyn declaims. \"Men like that deserve to be run over, skinned, and turned into upholstery.\"\n\n\"They can't help it. Show them some fluff and they lose their minds.\"\n\nRobyn snorts. \"I know I'm probably being unfair. But... he hurt you, and that makes me mad. So I'm going to hate him with the rage of a million suns no matter what you say, so there.\" She takes a sip of wine. \"But yes. I'm glad you're single.\"\n\n\"Am I?\" I ask, playfully.\n\n\"Well, to the outside world, yes. To me... Lexi, if siblings could marry I'd ask you in a heartbeat. I've loved you my entire life. Ain't going nowhere, and definitely don't want anyone else ever.\"\n\nI manage a husky \"Thank you\" after a while. The words Robyn just said have stirred me in a way I can't describe; and it takes a physical effort not to climb into her lap again. I take a shuddering breath. \"You... you always know how to say the right things to me. To make me strong.\"\n\n\"Balls, Alexis,\" she says brusquely. \"You're the strongest, most steadfast person I know. You don't need me to make you like that.\"\n\n\"You're wrong,\" I say, quietly.\n\nRobs squints at me.\n\nI sigh, and reach a decision.\n\n\"Come inside. I can't talk about this out here.\"\n\n--\n\nRobs shoots me a puzzled look, but stands and helps me up. I lead her in through the doors and to the lounge, where I sit on the sofa and pull her down next to me.\n\n\"Lexi?\" she asks, after a while.\n\n\"Just thinking how best... ah, sod it.\" I respond. I turn to face her. \"I wasn't ever going to tell you this. But I figure you're stuck with me now... so you deserve to know.\"\n\nI take a deep breath. \"I used to think about hurting myself, Robs. A lot. Almost all the time really. And I still have bad days. Today was almost a bad day. Almost, but not quite.\"\n\n\"Hurting yourself... how?\" Robs asks, eyes narrowed.\n\n\"Hot baths and razor blades.\"\n\nRobs inhales and exhales, deliberately.\n\n\"Did you ever try?\" she asks, levelly.\n\n\"No. Almost did once. Chickened out. Knew you'd be the one to find me. Couldn't do that to you. Not after all we'd already been through with Mum and Dad...\"\n\n\"Why?\" she asks, quietly.\n\n\"Because,\" I whisper. I take a shuddering breath. \"Because it's dark outside. So very, very dark sometimes. And there are wolves out in the trees. And they're always trying to find their way in.\"\n\nShe takes my hand, gently. \"Are they there now?\"\n\n\"No,\" I say, shakily. \"My music keeps them away. And now I have you as well.\"\n\n\"Are you ever going to hurt yourself?\"\n\n\"No. Not now, not after us.\"\n\n\"Would you tell me if that changed?\"\n\nI struggle to meet her eyes. I can feel the burning tears. I feel ashamed of this weakness.\n\n\"Would you?\" she asks, again.\n\nI nod, unable to answer. She reaches out to gently stroke my cheek, and then pulls me forward so my head is pillowed on her chest. She holds me like that as I breathe, trying to fight back the urge to cry. I manage, somehow, and Robs lets go of my hand so she can gently rub my back for me.\n\n\"You know I'll never abandon you, don't you?\" she whispers. I nod.\n\n\"You know you can talk to me about everything, don't you?\"\n\nI nod again, sniffing, and reach out to squeeze her against me.\n\n\"Ok then. We're not going to mention this again. I'll go off and kill all of those fucking wolves and you can go back to being my super sexy has-it-all-together sister, ok?\" she says, following through with a kiss on the crown of my head. I make some sort of affirmative noise. Robs rubs my back a few more times.\n\n\"Move over, Lexi,\" she says. I comply, and she drags the pillows off the sofa, and then lies down against the backrest. She pats the space in front of her invitingly, and after a small hesitation I join her, pillowing my head on her outstretched right arm, feeling her strong midriff shifting against my back as she wraps her left arm around me and pulls me hard against her.\n\nI slowly unwind a bit, slowly relax.\n\n\"Why did you never tell me you were hurting so much?\"\n\n\"You had enough to deal with.\"\n\n\"I had more than enough free coping ability to help you, Alexis.\"\n\n\"I felt like it would be selfish. I'm the older sister. I'm supposed to be the adult. Not you.\"\n\n\"News flash, Lexi-love. I'm all grown up.\"\n\n\"I know, pumpkin. But... I didn't want to be a burden.\"\n\n\"You're never a burden to me, Lexi. Never will be. You're only ever going to be the single most important person in my life. So it's best you make peace with the fact that you're never going to be rid of me.\"\n\nI sigh, and press back against her.\n\nRobyn's hand moves slowly up, stroking my stomach gently. Then, she teasingly rubs a finger over my right nipple.\n\nI feel it stiffen, and I wriggle. \"Robs. I'm confessing my sins. Not my lusts.\"\n\n\"Sorry, Lexi. Can't help it. Holding you like this always makes me want you.\" Her finger drifts away, and I can't help but let out a deprived moan.\n\n\"I didn't say you should stop...\" I hint softly.\n\nHer finger pauses, and then resumes its orbit of my now-erect nipple. I swear I can feel her grinning into my back.\n\n\"Yeah, yeah,\" I say, quietly. \"I can't help that I'm addicted to you.\"\n\n\"Makes two of us.\"\n\n\"You're addicted to yourself too, huh?\" I ask, amused.\n\n\"Oh yeah, baby, I can't get enough of my loving,\" she drawls into my back. I laugh at that, and squirm round, rolling over to face her. I love watching her face while she's looking at me; she gets this deliciously intense look in her eyes. It turns me to goo.\n\nHer blue eyes have pale flecks of gold scattered like freckles around her iris. Her stare has always been frank - Robyn's emotions are usually very visible.\n\nRight now, though, I can't read what she's thinking.\n\n\"Aren't you ever scared about the future?\" I ask her, seriously.\n\n\"No. Never have been, never will be.\"\n\n\"Why not?\"\n\n\"Because I know I can handle the world. Ignore most things long enough and they go away. Plus, now I have you. And I know there's nothing that can happen to us that we can't handle together.\"\n\n\"Really?\"\n\n\"On my honour. Which, now that I come to say it, is kind of amusing given I lost my honour to you, you vile succubus.\"\n\nI snort. \"Succubi prey on men. I'm not sure what I am.\"\n\n\"I'm sure I can think of a term.\"\n\nWe lie there, just looking at each other for a while. I find myself remembering the gangly awkward girl that she was; always nestled in a corner with a book or reading the National Geographic magazines that Dad subscribed to. I sigh. That girl's mostly gone now. She had to leave her childhood behind far, far too soon.\n\nI reach out to stroke her cheek. \"Sometimes I regret that we both had to grow up so fast.\"\n\nRobs shakes her head, irritated, and reaches up to grab my hand.\n\n\"Lexi. I didn't have to, I chose to. You made the world safe for me. I could have stayed a little girl. Don't blame yourself for something that has nothing to do with you, alright? I chose. And I'm glad I did. I'm glad you and I were able to have an adult relationship before this... because it means I have the authority to spank your ass when you're being silly.\"\n\nI smile, wanly. Robs gives me a mock-glare, then squeezes my hand and releases it so that she can stroke my hair out of my eyes.\n\n\"Seriously. If you're feeling guilty about anything, it should be that you waited so long to open up to me.\"\n\n\"This is a bonafide case of the pot calling the kettle black, you know,\" I answer.\n\n\"I never claimed to be logical,\" Robs answers, and sticks her tongue out at me.\n\n\"Do that again,\" I dare her.\n\nShe sticks it out again, and wriggles it around. I laugh, and lean into her. The kiss is slow and gentle to start with. I close my eyes, the better to feel her against me. I know she's enjoying it because I feel her shift closer to me; feel her arms draw tight behind my shoulders. I open my lips slightly, letting her in. She teases the tip of her tongue gently along my upper lip, and I shiver.",
        "She becomes more insistent, and I yield to her. I can feel my heart starting to race and the now familiar ache deep in my belly. She shifts her leg against mine, and her left hand slips under the waistband of my pants; teasing gently downwards. I arch slightly against her, loving the feel of her stomach against mine. I stroke my right hand down her shoulder to the small of her back, where I dig my nails in. She breaks our kiss to hiss out a breath, and I take advantage of the break to wriggle myself open slightly for her fingers. Her fingertip slips slowly under my panties and between my shaven lips, and she lets out a small delighted sound when she discovers that I am wet for her.\n\nShe gently crooks her finger in and out around my clit; I tuck my face into her neck and surrender myself to her. Slowly, achingly slowly, Robyn teases me. She nibbles my earlobe and I moan. She massages my back and bum and I whine, demanding more. Her fingers are slick with me, ring and index finger sliding in and out with my clit acting as their guide. Her fingertips are brushing against my aching entrance now, and I can feel my thigh muscles spasming in time with the gentle inwards and outwards motion of her hand.\n\nSlowly, so goddamn slowly, I build. I can feel sweat slicking my skin and my nipples are aching as they brush against the fabric of my top with each laboured breath I draw. I feel myself peaking. I know she feels it too, because she pulls me firmly against herself and whispers a quiet \"Come for me, Lexi.\"\n\nShe drives her left thigh in between mine and pushes hard against my mons and lips, and that's all I need to tip me over the edge into a shaking climax. I cry out, muffled by her body, and spasm hard against her as she keeps toying with me through the waves and troughs of my orgasm.\n\nThen, like always, she holds me, cradles me, letting my body regain some form of equilibrium.\n\n\"Better?\" she whispers, after a while.\n\n\"So much. So, so much,\" I manage.\n\n\"Stay here and don't move. I'll be right back, ok?\"\n\n\"Hurry. I want more,\" I murmur, and am rewarded with her smoky, sultry laugh.\n\n--\n\nI roll onto my back, enjoying the languid feeling of satisfaction that always steals over my after Robyn's been with me. I'm still aching, wanting more of her, but the immediate craving has died back a bit. She's never perfunctory with me - she enjoys playing with me far too much for that. And to be fair, ditto. I'm addicted to her body. To the tight, firm muscles of her legs. To the chick-pack of her midriff. To the wiry, strong arms. To the perfect skin. To the smile, to the taste, to the smell. \n\nI touch myself, and let out a shivery moan. I am soaked; my poor underwear are as much good as tissue paper holding back the ocean when it comes to my physical reaction to her. I'd remove them if I had more energy, to be honest. But I'm enjoying the moment of calm too much to be able to motivate myself.\n\nI hear Robs' footsteps on the staircase, and I twist slightly so I can watch her as she walks back into the lounge, armed with blankets and bottles. She shoots me a distracted smile as she sets the bottles of oil to one side and spreads the blanket out on the carpeted floor.\n\n\"Right, Lexi. Sorry, love, but you're going to have to move if you want that backrub.\"\n\nI whine pathetically, and she laughs. I hold out my arms to her, without making any attempt to sit up. She steps closer and squats down, slipping one arm under my neck; letting me clasp my arms behind hers.\n\nThen she surprises me by sneaking another under my knees and standing. I squeal as she lifts me.\n\n\"Gods, Robs, you'll hurt yourself!\"\n\nShe says nothing, just smiles down at me.\n\n\"What?\" I say suspiciously, after a short while.\n\n\"Was wondering whether I could do this. Glad to see I can.\"\n\n\"Consider me impressed. Are you going to put me down now?\"\n\n\"In a bit,\" she says. Then she kisses me again, and I melt against her.\n\n\"God, woman, you drive me crazy,\" I whisper when she lets me breathe again.\n\n\"Tit for tat,\" she murmurs, slowly letting my legs down and steadying me as I regain my feet. She strikes a pose, gesturing imperiously at the blankets. \"Strip and lie down.\"\n\n\"Curtains are open, Robs,\" I demure.\n\n\"I'll sort that out. Strip and lie down - or no backrubs.\"\n\nI huff a playful sigh and start to comply as she closes the French doors and the privacy curtains - this leaves us with some of the daylight but prevents any passing ramblers from seeing into the house. I strip off my jersey, then my vest, and briefly pause to massage out some of the ache in my breasts. Robs organises the oils alongside the blankets, watching me with some amusement.\n\n\"Pants too, you bra-less wonder,\" she says, and, somewhat self-consciously, I comply. I'm gratified to see her eyes following my hands as I loosen the draw-strings and drop the pants in a puddle around my feet. I kick them free of me, and eye her uncertainly.\n\n\"Knickers too,\" she adds, huskily.\n\nFor some reason this makes me blush. She's seen everything, been everywhere... and yet this simple act still has the trappings of taboo that makes my heart race. I kick them free of me, then stand, trying not to feel shy about myself. But Robs alleviates that by stepping forward, touching me, pushing herself against me, kissing me so tenderly and yet with such obvious need that I can't help but ache for her again. The fabric of her sundress chafes slightly against my breasts and raises goosebumps across my back and flanks.\n\n\"I don't think I could ever get used to the sight of you naked,\" she says, quietly. \"It takes my breath away.\"\n\nI shiver again, this time not entirely just because of her proximity. \"Robs... sorry to break the mood, but it's really chilly in here.\"\n\n\"Ok, get under the covers. I'll do something about that,\" she responds.\n\n--\n\nI gratefully wrap myself up in one of the blankets and watch as she quickly sets a fire and gets it going. Robs loves fires so there's always wood and kindling by the fireplace, and she's got very good at starting and nurturing them. Soon, flames are flickering and the chill starts to leave the air. Robs sits back on her haunches, watching the flames. Then she shakes her head, dismissing whatever thoughts she was having, and turns to me.\n\n\"Lie down, you,\" she says. I rearrange myself, watching as she reaches for the bottles of oils that she brought down with her. I place a pillow near the hearth and then lie down on my stomach, arms by my sides and head turned towards the garden. I reach back to pull the blanket up over my shoulders. Then I lie there, quietly waiting for her.\n\nI can feel Robs moving as she puts the bottles where she can reach them. She adjusts the blankets to bare my back and shoulders. Then, I feel her weight on my lower back and bum as she kneels astride me, using me as a chair. I hear the sound of a bottle cap being flicked open, and feel her shifting slightly as she pours oil onto her hands. She sets the bottle down; I hear the brush of fabric as she leans forward, and then... bliss. Bliss as her hands move on my back, digging into the knots around my shoulder blades and neck, working slowly up and down either side of my spine. I moan, eyes closed.\n\nShe rubs oil over my back, pausing to dribble more along my spine. I feel her collect it with her fingers and so that she can start to work it into my shoulders. Her hands dig and bite, insistently finding my rebellious muscles and subduing them to her will.\n\nShe has such amazingly strong hands. I lose myself in the rhythm of their movement - and my mind, as always, finds and supplies the orchestral backing.\n\n\"You ok, Lexi?\" Robs asks, after a while. \"You're very quiet.\"\n\n\"Just listening,\" I murmur.\n\n\"To?\"\n\n\"Nimrod.\"\n\n\"Elgar, right?\" she asks, curious, running her hands down between my ribs and my arms.\n\n\"Yeah. It fits you perfectly.\"\n\nI suppose to an outsider this conversation wouldn't make much sense. But Robs knows that my world has a symphonic backing track, so she can kind of understand what I mean.\n\nSometimes, though, I really wish I could just show her.\n\nRobs shifts, pulling the blanket down. I twist to look at her, and notice that she's sweating slightly. \"Hard work, huh?\" I tease.\n\n\"Some of these knots in your back...\" she mutters, shaking her head. \"I swear you contort yourself at night to wind up this tangled. I bet you do it on purpose, you hussy. You love frustrating me.\"\n\nHer hands glide down my back to my lumbar region, and she spends some time just gently running her thumbs up and down alongside my spine, while I float happily on a sea of pleasure. I feel her shift backwards a bit further. Then I feel something different. Her inner thighs against my outer... and something else. I twist round again, and she gives me a grin.\n\n\"You're commando, aren't you?\" I ask, amused.\n\n\"Guilty as charged.\"\n\n\"Since when?\"\n\n\"Since I put my dress on.\"\n\n\"Tease,\" I say, slumping back forward. Her hands move further downwards, and she starts to gently run her hands over my bum. Then she pauses, and I feel her wriggling and twisting. Her sundress falls to the ground in my peripheral vision, and next thing I know she's leaning forward, nibbling the nape of my neck and trailing her breasts and hard nipples over my oil-slicked back.\n\nI can't help myself, I cry out. She digs her fingers into my shoulders and pulls herself down against me, grinding her stomach against me. I arch back against her, exhaling in a hiss.\n\nRobs lifts herself off me and lies down on my left hand side, but before I can move, she slips her hand into the cleft of my thighs from behind and gently, insistently, forces me to open them for her. I feel her fingertips reach my soaking entrance, pause, and then gently start to stroke me. I moan as my need for her takes me. She knows, knows what I want, and slowly, deliberately, torturously gives it to me. First one, then two fingers enter me and crook forward to press against the firm pad of my g-spot. I gasp out something obscene, and she leans in to kiss me, hard.\n\nThen her fingers start to move.\n\n--\n\nI'm unable to breathe at first. The sensation of her in me like this is so delicious, so overpowering when combined with the kiss and lingering after-effects of her backrub that my body just shuts down. I can feel my stomach and leg muscles twitching, and I break free of her to gasp for air. The first and second joints of her fingers spread and stretch my lips with each motion into and out of me. I can feel the way I'm distending as she sinks them deep into me. I can feel the slight friction of her fingertips as they slide along the front wall of my vagina.\n\nI guess I must be moaning pretty loudly by now, because the fragmentary glimpses I catch of her are dominated by a wide, amused grin. The faint, wet sound of her fingers driving into my vagina merges with the crackling of the flames and the faint sound of her panting.\n\nI plateau quickly and then linger there. Robs is a bitch. She knows I need to come. But she holds me just short of it, grinning that shit-headed grin at me, knowing how much I need release.\n\n\"Fucking... Shit... Robyn!\" I rage in helpless, almost delirious frustration. Faintly, I hear her laughing.\n\nI have to orgasm. I have to. Before I know what's what my hand is burrowed under my belly, pinned by my hip, but my fingers are on my clit and that's all that matters. I frig myself frantically. Her kisses send little sparks through me. I build. Her fingers stroke into me. I ache. God. She's so deep in me. I crest. I know it's going to be huge. I'll likely die. But I can't stop...\n\nAs I climax, my body spasms, and Robs drives her fingers hard into me. Part of me realises that I'm crying out. I don't care. I'm swept up on a tidal surge of release that fills my vision with black and white spots. It takes uncountable ages for the crashing waves of my orgasm to subside, and when they do they leave me like driftwood swept up onto a remote shore.\n\nAll I can feel is my pounding heart and her fingers in me. All I can hear is my whimpering gasps. My throat feels raw.\n\nSomehow I manage to open an eye. My hair seems to be everywhere. I feel Robyn's breath hot on my ear as she nibbles my earlobe. I cry out at the overload of sensations. She releases me, and, gently, brushes my hair out of my eyes.\n\n\"Lexi?\"\n\n\"Jesus Christ, Robyn,\" I moan.\n\n\"I take it Madame is pleased?\" she chuckles as she slowly eases her fingers out of me. I shudder as they slip free of my body.\n\n\"I can't move...\" I plead. \"My hand is numb. Help me. Roll me over, please, Robs, I'm begging you.\"\n\nShe gently helps me free my hand and roll onto my side. I am soaked with sweat, heart still pounding. I shift my leg slightly and the motion triggers an aftershock, which makes me curl, whimpering, into a ball. I lie there, panting for breath.\n\n\"You've wrecked me,\" I whisper. \"Holy shit. Robs... I don't know what you were doing but... I've never felt anything like that before.\"\n\nShe sneaks her arm under my head and strokes her fingertips gently up and down my back. Slowly my muscles ease and I'm able to uncurl. Robs pulls the blanket up over us, then pulls me hard against her. I feel utterly wrung out; certainly I couldn't walk right now if my life depended on it.\n\n\"You can't do that to me more than once a week,\" I say, seriously. \"You'll kill me.\"\n\n\"Spoilsport,\" she murmurs, as she plants a wet kiss on my forehead.\n\n\"Necrophile,\" I return. She laughs at that, then untucks herself from the blanket and rolls onto her back. \"Sorry, Lexi. Overheating.\"\n\n\"I'll say,\" I return, weakly. \"I'm going to need a big meal to replace the energy I just burned there.\"\n\nRobs grins at me. \"Was it really that good?\"\n\n\"Robyn Emily Blake. You made me forget my own name. Where the hell did you learn how to do that?\"\n\n\"Just trying something out, Lexi. I enjoy it when I do it to myself; just wondered whether you did too.\"\n\n\"I'll tell you one thing,\" I say levelly. \"If I could clone your fingers and sell them as a sex toy I'd make millions.\"\n\nShe grins wickedly, and stretches out. I watch the way the faint light from the fire highlights the shadows cast on her body by the light from the windows. She looks like she's got flames under her skin, just barely visible but trying to escape nonetheless.\n\nI reach out a shaky left arm and rest my wrist on her hip. She wriggles slightly closer to me.\n\n\"Would you forgive me if I said that I feel absolutely no guilt about wasting a sunny day?\" I ask her. She laughs.\n\n\"I rather thought you wouldn't,\" she replies. Then she pouts. \"You haven't noticed.\"\n\n\"Pardon?\"\n\n\"I've changed something about me.\"\n\nI try to sit up, but my muscles refuse to cooperate and I fall over onto my back. A fit of the giggles takes me, and she can't help but join in. I curl up against her, crying with laughter at how spazzed out my body is thanks to her. It takes me a while to regain control, but I manage to fight down the giggles and, shaking, wipe my eyes.\n\n\"Oh God, Robs. I'm broken.\"\n\n\"Nonsense,\" she cackles. \"You just go bonk every so often!\"\n\nThis sends both of us into more screams of laughter, to the point that I'm nearly retching. Robs is heaving next to me, tears streaking her cheeks and face flushed. I must be in a similar state.\n\nGod, I love her.\n\n--\n\nSlowly we calm down. I take several deep breaths, then entirely lose my train of thought as Robyn grabs my hand and places it on her bare mons.\n\n\"You... shaved!\" I breathe. Robs has never to my knowledge done this before. In the (admittedly, short) time I've known her she's always had a neatly-trimmed triangle of rich brown curls.\n\n\"Pour vous. While I showered the whim took me. You like?\" she asks, playfully.\n\n\"Let me see you!\" I demand.\n\nI somehow manage to sit up, and spend some quality time admiring her newly bare lips. I hesitantly reach out to feel her, and am rewarded with a slight hiss of indrawn breath as my fingertips touch her.\n\nShe's soaked. Glistening beads of moisture line her pale inner lips, merging and reforming as I gently tease my fingertip along her entrance. Her legs twitch, and I look up, meeting her questioning look with my own wide eyed amazement.\n\n\"You're beautiful,\" I say, without thinking.\n\n\"Make love to me, Alexis,\" she whispers, and closes her eyes.\n\nHow could I refuse her that?\n\nBut first, first, I need to taste her. So I do. Tongue-teasing, gently licking, taking in the scent of her, feeling her writhe and moan and beg. Take that, you. Robyn whimpers as my tongue flicks over and around her labia. I love the feel of her small, hard clit on my tongue; the barely-discernible texture of her inner lips, the hot musk taste of her vaginal fluids.\n\nI smile to myself, and slip a finger into her slick entrance, delighting in the feeling the way her stomach muscles tighten as she's penetrated. I crook my finger, and slowly trail the tip of my tongue around the base of her clit. Robyn grinds herself against me, eyes slitted, moaning. Small circles of goosebumps mark her almost-invisible areolas.\n\nI pause for a breath and slip a second finger into her, stretching her the way she loves. Then I slowly start to kiss up over her bare lips, over her mons, along her stomach.\n\nI love her stomach. And her abs.\n\nI break off, withdrawing my fingers slowly, and she moans in protest. But I need to shift - my arms lack the endurance she enjoys. So I lie down by her left side, and tease the soaked fingers of my right hand gently back into her. She gasps as I do, and I repay her by gently starting to kiss the underside of her delectable left breast.\n\n\"Lexi...\" she breathes. \"God... yes... that's nice. I love you in me.\"\n\nI can taste her sweat now. Small little droplets sheen her body. I lean onto her, allowing my breasts to press gently against her, enjoying the heat she gives off. Her nipples are rigid, and I gently tongue and suck them, occasionally nibbling as well. I can see her heart thumping in her chest now, and she's making small delighted noises with each gentle thrust of my fingers.\n\n\"Lexi... don't stop... oh god, don't you dare stop...\"\n\nShe wriggles slightly under me, and I press my right palm firmly against her mound. Then I shift my right thigh slowly over her left, pushing it hard against my hand. Robyn's eyes are slitted; her pupils dark. She raises her left hand to clasp the nape of my neck, and an almost puzzled expression grows on her face as her orgasm builds. I lean in, and bite gently on her neck, then kiss her jawline, listening to the quick little gasps of air she's drawing in.\n\nThen I kiss her, hard, demandingly. She arches against me, and I feel her vagina start to spasm on me as her orgasm arrives. She tears her mouth free of me and lets out a feral moan, hands curling to claws, pushing so hard against me that she lifts both of us physically off the floor. Then she slams back, chest heaving, eyes screwed shut, stomach and thigh muscles spasming together. I ride her hard through it, bearing down on her, feeling her rocking and listening to the almost pained whimpers that she lets out.\n\nThen I let her go, allowing her to slowly start to recover, enjoying her quivering and content for now with my half-on, half-off position. Quietly, I wait, listening to the sound of her breathing slow, watching the heaving of her chest diminish and the bright flush of her arousal fade. I'm amused that her nipples stay erect for me, and I tease them gently with the tip of my tongue.\n\nThe sounds she makes are quite depraved, and I can't help but laugh quietly.\n\nPresently, she opens her eyes, and manages to meet mine.\n\n\"Can you still understand English?\" I ask her, playfully.\n\n\"No. Not even close,\" she slurs. \"That made me devolve. Higher language has deserted me. I think I've turned into a manatee. I definitely can't walk.\"",
        "\"Payback's delicious, isn't it?\"\n\n\"God, you have no idea,\" she whimpers.\n\n\"Au contraire... if I give even half as good as I get from you, then I have a pretty good idea.\"\n\nShe turns her head and blesses me with a lopsided smile. I lever myself off her and curl up against her, my breasts pressed against hers and my head pillowed on her shoulder.\n\nI can feel her gently teasing the very tip of a finger up and down my spine, and I shift happily against her. I love the way the soft curve of her hip presses into my belly. I love the feel of her ribs against mine; the goosebumps she develops when I exhale. I love the perfect pale teardrops of her breasts in the combination of dying day and flickering fire.\n\nI love that I'm hers.\n\nGently, I lift my right thigh, and hook it and my leg over her left, pulling me in against her. I can hear the gentle lub-dub, lub-dub of her heart, close in speed to mine now.\n\n\"If only every day could be like this,\" she says, softly.\n\n\"We'd starve,\" I return, amused.\n\n\"Pretty sure I can live by sex alone,\" she answers. I snort.\n\n\"Not with the number of calories we burn while doing it.\"\n\n\"True,\" she smiles, planting a gentle kiss on my cheek.\n\nI close my eyes and lie there quietly for a while. It takes me a while to realise that Robs is singing under her breath. My own breath catches, and I try to keep as still as possible so as not to disturb her. It's such a rare event for her...\n\nIt's Dionne Warwick, I realise. I smile - Robs is praying a little prayer for me, and I can't help but join in on the refrain. She laughs, and stops singing, then squirms over to face me.\n\n\"I wish you'd do that more often,\" I say, sadly. \"You sound like an angel who took up chain smoking. Turns me to putty.\"\n\n\"One artist in the family is enough,\" she says, eyes twinkling. \"But if you're good maybe I'll sing more for you.\"\n\n\"I'd like that, Robs. I'd like that a lot,\" I say, softly. She strokes my cheek, then reaches over and pulls a blanket over us, adjusting me slightly so that she's comfortable.\n\nAs we lie there, listening to the fire and watching the daylight fade, I find myself hoping that I never lose the childlike happiness I feel when I'm around her. Robs as always notices and intervenes.\n\n\"Stop thinking so hard, Lexi-love,\" she whispers quietly.\n\nI watch the firelight flickering in her eyes, and slowly the world seems to shrink around us, till it's just her and me.\n\nIt's our little slice of heaven, and I hope it lasts forever.\n\n.:."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "sisters",
        "love",
        "romance",
        "insecurity"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alexis-reprised"
}