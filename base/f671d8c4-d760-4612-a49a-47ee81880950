{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 02",
    "pages": [
        "I wanted to take a moment to respond to some of the readers who have left comments or e-mailed me privately with their thoughts and opinions. First of all, thank you! I'm glad you see my writing as something worthy of the time and effort it takes to comment. Please know that while I do keep notes on the plot and character progression, after 2+ years and fifty-two chapters, I do sometimes forget things. My editor (aka Mrs. Badger) usually catches these, but the system is not foolproof. There was a comment in the last chapter that perhaps that was not Tim's first experience with anal sex; I recall mentioning in chapter 7 (I think!) that an ex-girlfriend had allowed him to touch her there once, but I don't recall ever writing it had gone further. If I did, my apologies\u2014I dislike plot inconsistencies in the stories I read, and constantly worry about them in mine. As to those who have requested I publish more often, I am truly flattered! Please understand I write when I have time (airports and hotel rooms when I'm traveling on business are a popular place for me to put thoughts to screen), so sometimes I don't have as much time as others. I really don't like to rush my stories to publication\u2014I want to make sure they are something I at least don't hate by the time I let them go, and will go through several re-writes in the process (this also tests my efforts at plot consistency\u2014I am always trying to remember what version of the story I ended up using?). All in all, I would rather deliver quality slowly than substandard quickly. \n\nNow, standard disclaimers.\n\nFor those who have stumbled across this story for the first time, please be aware that this chapter may or may not have much or anything to do with the selected category. Many of the earlier chapters do fit more neatly into the exhibitionist area; please be sure to go back and start from chapter 1 if that is where your tastes lie.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental.\n\n*****\n\nGwen tried to remain patient as they sat down to dinner that evening, waiting for Tim to volunteer something about how his day doing tear-out at the McCallum's lake house had gone. To her frustration, he kept the conversation centered around the activities of the other plumbers, quizzing her on whether paperwork was being turned in correctly and what needed restocking. She filled him in on what she had seen and heard around the shop, biding her time. \n\nFinally, she could wait no longer. \"And how did your day go?\"\n\n\"Good,\" Tim mumbled around a mouthful of chicken. She waited for him to finish chewing so he might go into detail, slightly irritated when he did not. \n\n\"Did everything go alright?\"\n\n\"Oh yeah, pretty typical. I had to undo some do-it-yourself work from the last owner that wasn't code, but nothing too bad.\"\n\n\"And the McCallums? Are they nice?\"\n\n\"Yeah, really nice. They both work out of the house\u2014she's an educational consultant\u2014so they were there all day, but they mostly stayed out of the way. Bob came in to talk boats and fishing, but he didn't seem like one of those guys who wants to know what I'm doin' and why I'm not doin' it like his buddy did. Yvette looked in a few times to check on the progress and ask if I needed a drink or anything. She also told me to tell you thank you for putting me on the job. I guess she asked for me? \"\n\n\"She said she asked for you because they, umm, like their privacy and since you saw them on the beach... so, did they wear any clothes today?\"\n\nTim smiled and forked a green bean. \"Well, uhh, yeah, shorts and shirts, both of 'em. Guess that's proper business attire when you work from home, right?\" He quickly decided full disclosure was best. \"I mean, Yvette wasn't wearing a bra, so I guess that's what she meant by privacy.\" He stopped there, waiting for a reaction. \n\n\"How could you tell?\"\n\n\"Her top was loose. No big deal. I mean, I've seen 'em before,\" he said with forced nonchalance, looking down at his plate.\n\nGwen has seen them too. Much larger than her own, not quite as big as Natalie's...\"Huh. Do you think she knew you could see them?\"\n\n\"Probably...I don't think she was trying to show 'em off, just being comfortable in her own house.\" Tim again waited for his wife's response. Gwen's need for modesty and propriety had relaxed quite a bit, but he still wasn't sure just how she would react to him being around half-naked women without a chaperone. \n\nGwen raised an eyebrow but said nothing. \"I'm, uhh, gonna put the boat in on Sunday and head over to Bob's\u2014we're gonna go fishing,\" he slowly continued. \n\n\"Oh.\" The Lady conjured an image of a naked Yvette going along for the ride and the Slut quickly countered, reminding her that Tim would behave himself if that unlikely possibility came to be. Besides, Tim had trusted her around plenty of naked women lately... \n\n\"As far as I know.\" The phone rang and Gwen rose to get it, her husband thankful for the interruption. \n\n\"Hello, Natalie, how are you?\" \n\n\"Hey Gwen, I'm good, how're you doing?\"\n\n\"I'm good, too. Are you at work?\"\n\n\"Yeah, taking a quick break. Hey, I just got a message from Liz\u2014she's going to be in the area tomorrow and we're going to have lunch together before I go to work, so I can't come over and ride.\" \n\nGwen kept her disappointment under control. \"Oh\u2014oh, that's alright, I understand...\" \n\n\"I was hoping you might want to join us.\" \n\n\"Thank you, that's very nice, but I'm sure you'd like to spend time with her...\" probably doing what we would be doing if you had come over here, the Slut grumbled. \n\n\"I want to spend time with both of you. C'mon, it's not like you two are strangers\u2014you're not afraid of her, are you?\"\n\n\"Of course I'm not afraid of her,\" Gwen huffed. Maybe a little intimidated, but not afraid. \"Are you sure she wouldn't mind?\"\n\n\"Positive.\" \n\nGwen weighed her options, wondering what besides lunch she might be committing herself to. \"If you're sure you don't mind me tagging along...where and what time?\" \n\n\"Noon. Bluefin's. You know where that is, right?\"\n\nTwelve o'clock and Natalie had to be at work at two. There would be no time for\u2014that-after. Maybe she and Liz would be taking care of \"that\" before lunch, working up an appetite without her. The Lady took this opportunity to mourn the death of Gwen's sanity and decency. \"I do. We installed their dishwashers. I'll see you at noon, then.\" \n\nTim was grateful his wife's attention seemed to be on something else after she hung up, and Yvette McCallum's clothing choices were not discussed further.\n\n***\n\nGwen was prompt as always, pushing through one of the restaurant's double doors at 11:58am. She scanned the large dining room until she spotted the tops of two heads, one blonde and one redhead, sitting side by side in a booth tucked away in a secluded back corner. Liz rose to greet her with a hug before letting her go and allowing Natalie to give her own welcome while a young waitress appeared to take the newcomer's drink order.\n\n\"I was just telling Liz how busy I've been since we came back from vacation and how glad I was that I had a chance to see you,\" Natalie said, a tight smile on her face. Gwen thought her expression a little strange; maybe nervous anticipation? But of what? Liz seemed not to notice, intently studying her phone. \n\n\"I was all set to\u2014\"her sister-in-law stopped mid-sentence, catching her breath. After a moment, she exhaled and continued. \"To ride today, but when Liz called I thought it would be nice for us all to get together.\"\n\nGwen could see a mysterious smirk on Liz's face as she continued to stare down at the phone. \"Well, thank you for inviting me\u2014it was very nice of you,\" she offered, her train of thought derailed as her sister-in-law again held her breath and shifted a bit in her seat. \"Natalie, is everything alright?\"\n\nLiz didn't bother to look up as she spoke first. \"Cho\u2014you remember Cho, right?\u2014sometimes sends me new products to try out before she offers them in her shop. The latest in wearable technology,\" she continued, turning the screen in her hands towards the woman across the table. Gwen looked up, her confusion obvious. It appeared to be some sort of music player control panel, what did that have to do with anything?\n\n\"Today Natalie is wearing a butterfly vibe,\" Liz explained quietly, the smirk still there. \"It's like a G-String with a little bullet vibrator attached. They've been around a long time, but they're always either too weak to do anything much more than annoy you, or too loud to use without the whole room knowing about it. This one is different, though; I tried it out and the strength definitely gets my stamp of approval. But I wanted somebody else's opinion. So, were you able to hear it?\" Gwen shook her head, eyes wide as they shifted between the phone, her sister-in-law, and the redhead. \n\n\"I can't either,\" Liz continued, \"and I'm sitting right next to it. It's got Bluetooth, so you run it from this app. The sliders control the intensity, and there's also a feature that makes it vibrate in time to the beat of the music.\" She smiled, turned the phone back to herself, and poked at it. \"You can even make it vibrate to your voice.\" Natalie tensed again, the new setting obviously working. The screen was turned back to Gwen. \"Here. Say something.\" \n\n\"I don't know what\u2014\"Natalie's eyes fluttered and Liz laughed and swiped at the phone. \"The louder the voice, the stronger the vibration. I'll bet this thing could knock your panties off at a party.\" \n\n\"She made me put it on out in the car,\" Natalie said, glancing darkly at the redhead, \"and has been tormenting me with it ever since. It's really good, but in the wrong hands, it could have you dropping your jeans to get it off of you. Might be embarrassing at the grocery store, you know?\" \n\n\"Or here,\" Liz added, her attention back on the screen.\n\nThe waitress reappeared with Gwen's drink. \"Are you ladies ready to order?\" \n\n\"I'll have the Caprese salad,\" Liz answered, briefly looking up before returning to her phone. There was tension in the air, both Natalie and Gwen anticipating the redhead's next move. \n\n\"I'll have one also,\" Gwen offered, and Natalie shot Liz a warning look before speaking.\n\n\"I'll have the chicKENNN Caesar salad,\" she squeaked as her friend touched the screen. \n\n\"Would you like the chicken grilled?\" the young woman asked, eying her customer suspiciously. \n\n\"Please,\" the blonde replied through gritted teeth. \n\n\"I'll be right back with your lunches.\" The waitress turned and headed for the kitchen, making a note to be careful about any more alcohol to that table. \n\n\"Stop that!\" Natalie hissed as she reached for the phone. \n\nLiz jerked it out of reach and laughed mischievously, Gwen not used to the lighthearted giggle coming from such a serious woman. \"Alright, alright, we'll do some more product testing later. Low setting, I promise. So, how was your trip?\" \n\nNatalie, cheeks flushed, refused to speak until the phone had been turned off and put down. She recounted their week in the Turks and Caicos with their friends Bill and Nancy Wieglin, and the rosy-cheeked blonde looked about after their meals had been delivered and she had finished describing the resort's beaches. \"Speaking of the beach, I saw a very interesting show there,\" she said softly, a sly smile crossing her face.\n\nGwen speared a tomato and paused. \"Oh? What kind of show?\" \n\n\"I watched a guy jerk off.\"\n\n\"What?\"\n\n\"Me and Nancy went to the beach\u2014the nude one\u2014one morning when the boys were off golfing. We had all been up late the night before and Nancy was pretty tired so she falls asleep as soon as she hits the towel. Well, this middle-aged Latino guy -nice body, cute butt-comes along and drops his stuff in front of us. I didn't recognize him at first without his uniform, but then I remember he's from one of the resort's restaurants\u2014he's a waiter there, so we nod at each other and he lies down on his side and he starts sightseeing, you know, checking out the women, but he keeps looking back up at me and Nancy. I didn't think much about it, guys look at the women down there whether you've got clothes on or not, and I lie back and get some sun. After a while I lift my head up to check out the guy, because, you know, cute butt and everything, and he's still on his side looking at us, but now he's playing with his dick!\"\n\nGwen's salad was forgotten. \"Oh my God Natalie, what did you do? Did he stop when you caught him?\"\n\nThe blonde's laugh caught in her throat and her eyes fluttered. \"Sorry, couldn't resist,\" Liz said with a smirk and removed her finger from the phone still lying on the table. \n\nNatalie again eyed her darkly, then continued. \"No, he just gave me this shit-eating grin and kept on doin' what he was doin', so I just smiled back and got out my sunscreen. I must have spent ten minutes making sure I got my boobs and the insides of my thighs really good, especially right around my crotch.\"\n\nGwen's eyes were wide. \"You encouraged him?\"\n\n\"I figured he was harmless and that there were enough people around if he wasn't, so why not at least let him look at the goodies as long as he didn't try to touch? So anyways, I checked on him again when I put my sunscreen away and he looked like he was really going to town while he was watching me, so I got comfy, opened my legs wider and watched him back. I think he liked knowin' I was watchin', cuz' pretty soon after that he shot a really healthy load all over the sand.\"\n\n\"Men can and will jack off anywhere and anytime,\" Liz said with a smile. \"Gotta admire that kind of dedication, bless their predictable little hearts.\"\n\nGwen was more than a little aroused by the unmistakable similarities to some of her favorite fantasies. \"Then what happened?\"\n\n\"He just laid there and checked out the scenery some more until he got soft, then he nodded like he was thanking me and got up and walked dOOOWN the beach. Dammit, you said the low setting!\" The redhead smiled and shrugged. \n\n\"Did you tell Nancy?\"\n\n\"Sure did. I told Adam, too. He made sure we ate at the guy's restaurant and had me point him out! He didn't have our table, but he must have remembered me because he winked.\" Natalie bit her lip and caught her breath. \"Give me that.\" She snatched the phone away from a bemused Liz, swiped at the screen, and leaned against the backrest, eyes closed. \n\nThe redhead turned her attention to the woman across from her. \"Looks like she's going to be busy for a little bit, so I guess I'll have to ask you instead\u2014would you like to model for Cho at her next home party?\"\n\n\"Home party? You mean like the storage container ones?\"\n\nLiz smiled. \"A little like that. She has one coming up in a couple of weeks that I'm going to be in, and Nat said she's gonna do it ,too\u2014\" she glanced at the grimacing woman next to her \"\u2014and we need one more model.\"\n\nGwen blushed and used her fork to push a basil leaf around the plate. \"I really don't think I'm model material, and I'm sure Cho wouldn't think so either.\"\n\n\"You're wrong both times,\" the redhead said calmly. \"I suggested you to her already and she'd said you'd be perfect to play the cute little MILF part. All of us think you have a hell of a body, Gwen. I'm pretty sure a lot of the women at this party will buy the stuff you'd be wearing thinking it'll make them look as good as you do in it. No chance in hell of that, but you would definitely help move some product.\"\n\n\"I...I couldn't.\" She looked over at Natalie, her head flopped back against the top of the seat cushion while her hand worked under the table like she was rearranging some underwear that had ridden up. \"Where happens at this party?\"\n\n\"Cho's got a longtime client, a very, very wealthy client, that invites some of her high-society friends\u2014the upper-crust of Atlanta's ruling class-over for the evening. All ages; some of them are looking for things to amuse themselves with when they're playing with their boy-or-girl-toys, and some are looking for things to help keep their sugar daddies interested in them. None of them would be caught dead in Cho's boutique\u2014imagine the scandal, buying sex toys with the unwashed masses!\u2014but Cho and her client make sure that what goes on in her mansion stays there, so they whip out the credit cards. To tell the truth, most of 'em could buy everything Cho brings to one of these things and never bat an eye, but I think the first ladies of Atlanta like the naughty thrill of seeing the product being modeled first-hand.\"\n\nThe Slut urged Gwen to say yes. \"I'd be wearing clothes, right?\" \n\nLiz smiled. \"If you want. Same kind of things you were trying on at her shop that day we were there. Does that count?\" \n\n\"Barely.\"\n\nNatalie twitched but her eyes remained squeezed shut. Liz glanced at her, then back to Gwen. \"So whattya say? Wanna swish that cute little ass for some of Atlanta's Southern Belle-battleaxes?\" \n\n\"I...I could never do anything like that without talking to my husband first. I'd have to ask him.\"\n\n\"Ask. It sounds like he's a pretty laid-back guy\u2014you're very lucky. My ex turned out to be a very uptight and controlling asshole, which is why he's my ex. Just let Natalie know as soon as he says yes. I'll tell Cho to expect you.\"\n\nGwen was about to gently remind her that Tim saying yes should not be assumed but was interrupted by Natalie's body stiffening as she carefully laid the phone down and gripped the edge of the table. Her mouth formed an 'O\" but she managed to stifle any sound and finally shivered and slumped forward as she wearily stabbed a finger at the phone. \n\nLiz smiled. \"I'll tell Cho you approve.\" \n\n***\n\nGwen's only thought after she left the restaurant was to get home and relieve the urges that lunch had awoken, her finger idly tracing lines over the fabric covering her labial lips as she drove. There was no doubt that she would be going directly to the bedroom, messages and paperwork be damned. \n\nHer plan changed as she pulled up the driveway. A truck was parked in front of the shop\u2014Tim's truck. Gwen tried not to hurry as her vehicle rolled to a stop and she hopped out in search of him. \n\n\"Hey, you're back!\" he called from her office upstairs as she went in through the side door. She hurried up to find him scribbling on a piece of paper on her desk. \"Playin' errand boy,\" he explained as he wrote. \"Cliff asked me to swing by and pick up a couple of relief valves to bring over to him.\" He didn't feel the need to add that he had happily gone out of his way in the hope that Gwen might have beaten him home and brought Natalie-and maybe Liz, too!\u2014along with her. \"Didya have fun?\"\n\n\"I did,\" she replied distractedly, slipping off her shoes. \"Does Cliff need those valves right away?\"\n\n\"I don't think so\u2014they've got plenty of other stuff to do, why?\"\n\nGwen hesitated, unsure how to politely demand to be serviced. \"I, uhh, was, uhh, I need you.\"\n\nTim's attention had been elsewhere, rechecking his note. \"Sure\u2014what do you need me to do?\"\n\n\"No, you. I need...you,\" she repeated softly, stepping close to him and looking up in the hopes he would understand.\n\nTim looked down, her intentions now very clear. \"Oh, uh, that. Now?\" He caught his poor choice of words and hurried to correct any false impressions that he might be unwilling to have her any time or any place. \"I mean, I smell pretty bad right now. But after I get home tonight and take a shower, I'm all yours!\"",
        "\"You smell like you've been working hard,\" she said as she unbuttoned her blouse. \"Hard work is very attractive.\"\n\nTim watched as she revealed her body to him. \"Here? What if somebody comes in?\"\n\n\"We'll hear them.\" She was naked now, and stepped past him sit on the edge of the couch, knees parted slightly to hint of more.\n\n\"Yeah, I guess we will.\" He hurried to catch up with her state of undress, and Gwen smiled as in his rush he nearly tripped himself trying to extricate his leg from his pants and underwear. \n\nShe was pleased to see his member already rising to the challenge, not yet hard but definitely showing interest. \"Let me help you get ready,\" she said, reaching for his hips and opening her legs wider to bring him between them. He shuffled forward and she bent slightly to meet his advance. Gwen kissed the top of his awakening staff, his drying sweat making it cool to her lips' touch, feeling the unique texture of the velvety skin covering its spongy head. He did smell, an almost-overwhelming aroma of sweat and male musk with hints of a mustiness from working in damp environments and the tangy burn of copper cut with an acetylene torch. It did not repulse her; it was the very familiar and unique scent of the man she had loved for so many years, and that made him even more desirable at the moment. She engulfed him as deeply as she could, his pubic hair tickling her nose while her tongue encouraged him to grow. She worked her husband, sliding her lips up and down and then withdrawing to use her tongue along the length, tasting the pungent salt of his sweat as she re-moistened the balls and that had only just dried from their recent exposure. \n\n\"Ready?\" She finally asked, giving him a single stroke as she pulled away. \n\n\"I think I can manage. You ready?\"\n\n\"Ready,\" she pronounced, lying back with her head on the armrest and a leg hooked over the top of the couch, opening herself wide, the invitation very clear. \n\n\"Damn, I love it when you do that.\" Tim groaned contentedly as he positioned and inserted himself to the hilt in one smooth stroke. Gwen's legs instinctively curled around his back to capture him, locking him in as she ground her clit into his pubic bone. His scent was more balanced now than when her nose had been buried in his crotch; the male musk was slightly less pungent, the sweat from his chest and under his arms more pronounced, and his hair held more of the mustiness and acrid burn she had detected before. The scent was both comforting and arousing; it was the instantly identifiable and unmistakable smell of the man who had loved her unconditionally and provided for her unfailingly all these long years, and now it had become the smell of the man who always fucked her so well and satiated her wild lust. She wanted that scent on her as a reminder after he had satisfied himself in her and left to go on with his day. \n\n\"What got you all hot and bothered?\" Tim murmured in her ear as he settled into an easy rhythm. \n\nGwen gasped out a confession as her hands and legs worked to position his body to excite every single nerve ending. \"Natalie tried out a vibrator at lunch, and she told us about a guy she saw on the beach, and they asked me to be a model at a show.\" \n\n\"Sounds like a hell of a lunch,\" he said with a chuckle. \"You know you're going to have to tell me about all of that, right?\" \n\n\"I will,\" she moaned, \"I\u2014\" Gwen cut her sentence short as she slammed her pelvis up into the body on top of her while her sensibly-short fingernails dug into the ass they were grasping. Tim accommodated her by pushing deeply while she shuddered through an intense orgasm. \n\n\"So, tell me about lunch,\" he grumbled softly after she had recovered. \n\n\"Are you close?\" \n\n\"Not too long now...\"\n\n\"I'll tell you tonight then, I promise. That way we can take our time and I can tell them correctly. But for now, when you're ready, I want you to take it out and finish on me, alright? I want to see it.\"\n\nTim raised himself up and smiled down at her as his thrusts picked up intensity. \"Glad to.\" He looked down between their bodies, watching his cock disappear into her then withdraw, wet with her juices. Her breasts wobbled in time to his forceful thrusts, and he mused that if Gwen's wobbled, Yvette's bigger pair would probably bounce and jump like crazy when she was being pounded. Gwen's were better, though, he quickly decided, because those were his to jiggle. And to mark...\n\nThe idea of her lying beneath him while he covered her tits with his come was more than enough to drive him over the edge, and he withdrew from her pussy with a grunt. Tim kneeled and straightened while his hand captured his cock as it sprung free, stroking hard for a few seconds before his fist pushed against the base. Gwen watched in fascination as he arched his back in an effort to get a little more distance while the first spurt erupted from his tip and landed with a wet splat below her breasts. He squeezed out six more pulses before announcing the last dribble with a shudder and a long groan. Tim grinned as he playfully wiped the head in her thatch, and she studied the trails of pearl-white sperm marking a trail down her stomach. \n\nHe surveyed the mess he had made as well, a little disappointed his best effort had fallen short of his intended target. Maybe next time he would hold out long enough to move a little further up her body. \"Let me get you some tissues.\" \n\n\"No, that's alright.\" More of him for me, Gwen thought, and her fingers scooped up dollops of the remains and brought them up to gently rub it into her breasts. \n\n\"Keep doing that and I'll give you some more.\" \n\nShe smiled and retrieved another strand farther down her stomach. \"You can add as much as you want later, after you get home. But you have to promise me that you'll be home in time. Otherwise, I might have to tell my stories to whoever's here.\"\n\n\"Don't do that,\" Tim said with a laugh as he stood. \"You'd probably scare the crap out of Andrew, and Mike would get the story wrong and tell everyone you were modeling a vibrator on the beach.\" \n\nGwen concentrated on rubbing the last of his orgasm into her skin. \"Then I guess it would be better for everybody if you weren't late.\"\n\n***\n\nTim was home in time that night and so was the only one to hear his wife's recounting of lunch. He was only mildly surprised by Natalie's daring both in the booth and the beach, and he found Gwen's attempts to downplay her excitement over the help her sister-in-law had given her voyeur interesting. \"You saw the same thing last fall, remember?\" he reminded Gwen as they lay naked in their bed. \n\n\"Yes, but I wasn't Bob's inspiration,\" she reminded her husband, but something about the way she said it made him wonder just a little bit what she would have done if she had been. Perhaps it was her request for permission to model that made more brazen displays even remotely possible, the idea that she was prepared for and even perhaps looking forward to showing more of herself to complete strangers. In the end, Liz was correct and he gladly gave his consent for her trip to Atlanta. Their lovemaking that night was unhurried and passionate, Tim imagining what it would be like to be in the audience as Gwen modeled. \n\nCricket arrived late Saturday afternoon, taking an early break from her studies after Gwen insisted she needed a decent home-cooked meal. The women opened a bottle of wine as they prepared dinner together, and another was opened before they all made their way up to the hot tub at dusk. Tim was careful to be more discrete when checking out the young woman in her tight one piece as they climbed the hillock, but the way the water had molded it to her skin made that most difficult after they had gotten out.\n\nThey gathered around the table after returning to the house, the water, food, beer and wine relaxing them enough to turn their thoughts towards bed. Gwen had not bothered to re-dress after shucking the cold, wet suit from her body, the slightly-inebriated slut convincing her to just throw on a robe since both her husband and Cricket had seen everything already, and Tim would probably just want her naked once they got back to the bedroom anyways. \n\nBoth her husband and Cricket had changed into shorts and a t-shirt, both fully intending to lose them later in the privacy of their rooms. Tim watched the young woman's breasts bounce a bit more than normal under the light fabric, and he was certain she had not bothered with a bra. He wondered if she had neglected panties as well...\n\n\"I'll take care of the horses tonight,\" Tim said with a smile as he rose from the table. Gwen and Cricket happily accepted his offer, insistent on finishing the bottle of wine they had opened; neither wanted it to go to waste. \n\n\"Tell Marvin night-night and I'll see him in the morning,\" Cricket told him, a contented smile on her face. \n\nHe gave the young woman a wry smile back. \"I'm sure he'll be disappointed that it's just me.\" \n\nCricket looked at her friend as the door closed. \"You're so lucky. He's a really, really good man.\"\n\n\"I am and he is.\"\n\nThe young woman looked back at the door one more time, then at Gwen. \"I'm glad I didn't\u2014I haven't-come between you two. It sounds like things are still good with you and him in there?\" She jerked her head towards the bedrooms and took another sip of wine. \n\n\"I'm not sure what you mean?\"\n\n\"He sounds like he...really enjoys himself in there...with you.\" \n\nGwen's eyes widened in shock. \"You can hear us?\"\n\n\"Sometimes when I stay over...when I come out to use the bathroom or get a drink of water...I hear Tim, mostly.\" she shrugged helplessly.\n\nGwen blushed furiously. \"Oh my God, Cricket, I'm sorry! And so embarrassed\u2014I didn't realize we were making that much noise!\"\n\nThe young woman chose not to confess that she had worked hard to hear what she had, standing outside their door, listening intently, risking discovery. \"Don't be sorry! You're not that loud\u2014I can't make out what you're saying, just that you two are talking back and forth and it sounds really, really sexy, whatever you're saying. He sounds like he takes really good care of you.\" It had not escaped her attention that he was particularly \"energetic\" after she and Gwen had been together, and that he enjoyed describing in detail how he would pleasure his wife while her young friend looked on. Cricket was only a little ashamed to have borrowed that fantasy as one of her own.\n\nGwen quickly took a swig of wine. \"Well, I'm so sorry and so embarrassed you heard anything at all!\" \n\n\"Don't be sorry,\" Cricket repeated. \"And don't be embarrassed. I see how you two are around each other, how you look at each other. You two are crazy stupid in love. It's really nice to hear that it's like that in bed for you, too. And it makes me feel a lot better to know that what we do together doesn't seem to have affected that, you know what I mean? Tim sounds so manly when he's going at it, like he's really enjoying being with you. That's the kind of guy I'd love to have some day\u2014someone masculine, someone who thinks I'm attractive and wants to make sure I'm taken care of. Daniel was always so quiet, and he didn't care if I was, you know, ready for him or not...good thing he was pretty small. And when I tried to get ready for him, you know, make things a little more slippery, he thought I was a slut for trying to enjoy myself. He'd just take off his pajamas, get on me, and the only thing I'd hear is him wheezing when he got close. Then he'd roll off, get dressed again and go to sleep. It made him so mad that I was on the pill and the only thing he wanted out of sex he couldn't have. I felt like he was only doing it because he couldn't resist his urges any more and I was the only hole available. I guess once he found his girlfriend, he didn't even need me for that anymore...I don't think he ever found me attractive.\" The young woman's eyes filled with tears at the thought.\n\nGwen rose, went to the sniffling woman's side and hugged her. \"You're beautiful both inside and out. Don't ever think otherwise. And some day, you'll meet a very lucky man and you two will make the same stupid faces at each other and the same embarrassing noises and you will be very, very happy.\"\n\n\"Fat chance of that. At least you don't seem disgusted by me when we do it, so thank you for that.\" \n\n\"Will you stop that! There's nothing to be disgusted about! You're a smart, beautiful, sexy young woman who I enjoy spending time with doing a variety of things.\" Gwen returned to her chair and leaned forward, her hand still on the young woman's arm. \"And I promise, Tim and I will keep it down from now on. We're grown-ups, we may not be able to stop making stupid faces at each other but we can control ourselves in the bedroom; we've got a lot of time to make noise when we're the only ones here.\" \n\n\"Please don't do that,\" Cricket hurriedly replied. \"I told you, I'm always worried about being in the way when I'm here, and if you have to change your ways in your own house, then I'm going to stop coming over.\" She hesitated, knowing the alcohol was making her bolder, perhaps too bold. \"Besides, like I said, I like hearing you. It...relaxes me.\" \n\n\"Relaxes you? How?\"\n\nCricket gulped the last of her wine, rose, and took her glass to the sink. \"I shouldn't be telling you this, but...I find excuses to go out in the hall after you've gone to bed, and if I hear you, I, umm, take care of myself after, if you know what I mean. The last few times I stayed over, I brought my toys with me. Pretty sick, huh?\"\n\nGwen did her best to hide her shock. \"Not at all. If it helps you...relax...then I'm all for it.\" She got up as well and joined the young woman at the sink. \"Did you bring them this time?\"\n\nCricket looked down at her glass and nodded. \"Uh-huh. Why?\"\n\n\"I was going to let you borrow mine if you hadn't.\" Gwen kissed her cheek. \"Go to bed. I'm going to wait for Tim.\" The young woman smiled, returned the kiss with one of her own on the older woman's lips, and headed down the hallway.\n\nGwen stood there, leaning against the sink, waiting for her husband, thinking. It was ten minutes before there was the sound of boots on the deck and Tim stomped in, looking up after he had kicked his shoes off on the mat. His wife looked back at him thoughtfully. \"What?\"\n\n\"Nothing,\" Gwen said with a hint of a smile. \"Just making stupid faces and that I love you.\"\n\n\"Your face is beautiful, just like the rest of you, and I love you too. Bed?\"\n\nShe reached over and switched off the kitchen light. \"Bed.\" Tim let her lead the way down the hall, a little surprised to see her walk most of the way nude after untying robe and letting it slide from her body as she left the kitchen. Well, Cricket's seen her naked anyways, he chuckled to himself as he stepped over the discarded garment and focused on his wife's swinging ass, never noticing as he passed that the young woman's bedroom door had been left open a couple of inches. Gwen had noticed though, and smiled to herself. Tim followed her into the bedroom, closing their own door behind him before getting down to bare skin and joining his wife on the bed. \n\nShe popped up as he lay down, and Tim watched the naked woman hurry across the room and reopen the door enough for a body to squeeze through. He scrambled to flip the blankets over himself while she rejoined him. \n\n\"Wha\u2014\"\n\n\"Cricket can hear us when we have sex,\" she explained matter-of-factly. Despite her revelation, Gwen made no effort to lower her voice or cover herself. \n\n\"Shit! It was me, wasn't it? Sorry! I'll keep it down, but I don't...?\" Tim gestured to the open door, his confusion complete and apparent. \n\n\"She says she likes hearing us,\" Gwen replied calmly, not going into the details, \"and that it makes her happy to hear how well you take care of me. We're all adults and she knows what married people do, so if you're alright with it, I'm sure she's alright with it. Are you alright with it?\" She emphasized her point by gently tugging at the blanket covering his midsection. \n\n\"It looks like you're okay with it?\"\n\n\"If you are...so, would you like to take care of me?\" He allowed the cover to be pulled back, revealing his fresh erection. \"She thinks you sound very masculine. I think so, too.\" Gwen bent and lightly kissed his shaft. \"Is this for me? It's beautiful.\"\n\n\"Uhh, thanks. Just for you.\" That was a fucking stupid thing to say! Of course it was for her! Who else would he offer it to? It had been fun to push the boundaries and talk it up when it had just been him and Gwen and an imagined audience; now their young guest might really be listening in, and a sort of performance anxiety began to make itself felt. Relax, you idiot, he told himself, just act naturally, at least as naturally as you can with a pair of lips on your cock. He could feel her tongue dragging up the length from his balls to the tip, through the first drop already beginning to form and groaned. \"I like how you do that,\" he finally offered as Gwen began to bob on his shaft. She hummed her thanks with a full mouth.\n\nGwen took it out and continued to gently stroke him. \"I love how big it gets for me,\" she said quietly pausing to admire it. \n\n\"Looking at you naked does the trick pretty well.\" And hearing you, he thought. She was much more vocal than normal, and he was absolutely sure that was intentional. He gently pushed her on to her back and began to kiss his way down her body. \"Need to spend some time with these breasts,\" he said, teasing a nipple. Breasts seemed like a safe thing to call them. Tits might sound nasty to Cricket, and boobs somehow sounded a little middle-schoolish. Gwen sighed in contentment, blissfully unaware of her husband's internal debate. His hand gently pushed its way between her legs to cup her mound, and she moaned in appreciation.\n\nHis kisses continued on down her flat stomach to the little patch of hair that marked the gateway to his destination. Tim felt he had to say something\u2014he couldn't let Gwen couldn't out-talk him during sex\u2014but hesitated, again searching for the right word and phrase. He cycled through the choices, discarding some as too cute, some too clinical, even considering the C word before deciding Cricket would probably find that particularly offensive. \"I want to lick your pussy,\" he finally declared. \n\n\"Yes, please!\" Gwen replied, spreading herself wider as his tongue began to push down into her cleft. She was already wet, very wet; and he relished that now-familiar mild taste of her juices. A hand reached between Tim's legs and fondled his dangling balls and shaft. \n\n\"Tim?\"\n\nHe stopped mid-lick. \"Hmm?\"\n\n\"Lie on your back. I want to ride you.\" \n\nHe rolled over and awaited her. \"Cowgirl up.\" \n\nShe was quickly astride his hips, reaching behind to lever his shaft into position before impaling herself with a sigh. \"Ahh, so nice.\" Gwen found the magic spot where her clit was pressed firmly against his pubic bone and began to gently rock her hips. \"So nice,\" she repeated as she fell forward, halting just above him on outstretched arms. \"You fit in me so nicely.\" \n\nTim's hands instinctively went to her dangling tits, palming them, playing with them, amusing himself by making the pert mounds wiggle. \"Oh yes, I like that...\" Gwen bit her lip and her contorted features told the man beneath her that she was very happy in this saddle, too. \n\nHis hands travelled her body as Gwen rode, her breasts free to shake from her exertion when his attention was elsewhere, a steady cadence of little squeaks and gasps escaping from her parted lips. To Tim, they sounded like screams of pleasure after all these years of silence. Her hips steadily ground into the hardness beneath her clit, her eyes screwed shut from the intense sensations.\n\n\"Oh-oh-oh-oh,\" she chanted as her orgasm drew near, working her sex against him. \"I'm\u2014I'm\u2014I'm\u2014\" Gwen did not finish the thought, collapsing forward on to her husband's chest as he hugged her to him. Tim thrust deeply into her three times for good measure before holding still and feeling her contractions pulse around his cock. \"Oh, that's nice,\" she breathed as her senses returned. \"So nice.\" She allowed herself to be held for some time, draped limply on him as he lazily pistoned in and out of her. ",
        "Gwen finally raised her head and looked down at the man beneath her. \"Your turn. What can I do to make you happy?\" \n\n\"You have been since we met. But right now, well...\"\n\n\"Anything my husband wants, he can have.\"\n\nTim smiled. \"On your hands and knees.\" She dislodged him from between her legs and was quickly on all fours facing the partially open door. \n\nTim smiled at her choice of view and moved behind to admire the one her ass and pussy presented. \"Shit, I could look at that all day. Can you put me in?\" Gwen supported herself on one outstretched arm while the other hand reached behind to find his straining cock and line it up. With a grunt, he returned it to her sex. \"Your pussy is so tight...\" He said it clearly, but not too loud...didn't want to make it sound like he was putting on a show...\n\n\"You can use it however you want...fuck my pussy.\" Gwen's use of that word triggered a powerful thrust from the man in her and skin slapped against skin. She could feel his sac swing forward and lightly tap her sex. \"Oh yes, like that.\" His tempo and force increased, the slaps becoming louder and Gwen gasped with each thrust, maybe just a little bit louder than necessary, Tim thought with a half-smile. \n\n\"I'm gonna come in you,\" he finally grumbled after deciding it was not too obscene for their guest to hear. \n\n\"Come in me,\" Gwen encouraged him, obviously agreeing. \"Come in my cunt.\" \n\nThe most forbidden of words set him off. \"I'm gonna fill up your tight little cunt, I'm gonna--aghh\u2014aghh-AGGH!\" With one last thrust he fulfilled his promise. Tim held her tightly to him until the last wave of release had passed, his breathing quickly returning to normal. He withdrew and looked down with satisfaction at the hint of what he had deposited in her as little droplets of it glistened around her opening. \n\nGwen held the pose for him, letting him look, then sank forward, lying facing down on the bed while Tim took the opportunity to lightly kiss her asscheeks. \"Too much wine tonight,\" she said, finally rolling to her side and off the bed. \"I should drink some water so I don't dehydrate. Would you like anything?\" \n\nTim shook his head no, a bemused smile on his face. She kissed him, opened the door wide and headed down the hallway. He kneeled there on the bed, watching the naked woman go, aware that if Cricket were to come out of her room now she would get an eyeful no matter which way she turned. \n\nGwen knew that too, feeling very exposed as she made her way down the hall, smiling again as she saw the young woman's door was open wider than it had been before with a soft buzzing coming from the other side She knew it from experience as the sound of a Magic Wand being pressed firmly into soft flesh. The Slut suggested it might be nice to go help her friend; the Lady reminded her that the husband she had just rutted with was only a few feet away. She continued on to the kitchen. \n\nShe stayed there longer than necessary, downing a couple of glasses of water, ignoring the Lady's pleas to return to safety while the Slut held out hope Cricket might come out to get a drink as well after she finished relaxing. Gwen grew chilly and finally returned to her husband, the guest room now quiet as she passed. She left the bedroom door half-open as she warmed herself under the covers, wrapped about Tim's nude form."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "public masturbation",
        "vibrator",
        "sister-in-law",
        "listening",
        "eavesdropping",
        "husband",
        "wife",
        "scent",
        "smell"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-02"
}