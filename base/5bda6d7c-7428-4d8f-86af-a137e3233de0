{
    "title": "An Irresistible Temptation Ch. 01",
    "pages": [
        "<p align=\"center\">An Irresistible Temptation Ch. 01</p>\n\nShe was following the same routine as yesterday. Although tall and slim, she had the most appealing curves. All this was obvious in spite of her wearing a sheer silk blue and white wrap that failed to obscure the lines of her tiny bikini. Of course the bikini was also in matching colors.\n\nHer only concealed feature was her face. It was hidden below a broad brimmed straw hat over her long chocolate brown hair. Assisting her disguise were large white rimmed sun glasses. Although most of her heart shaped face was covered, her pout and her rigidly raised head implied that her actions were just part of a perfunctory routine.\n\nAs she passed by the tropical ferns, my focus was on her ripe breasts that bounced little in spite of the inadequacy of the small triangular bikini top. She walked beyond the foliage enabling me to study her perfect figure from behind. Striding purposeful onto the sand, her hourglass hips swayed capturing my attention. I was then mesmerized by the small thong dividing those lovely firm cheeks. After she passed by, my thoughts drifted back to long suppressed schoolboy fantasies.\n\nIt was no surprise that she became the focus of my ambitious dreams that night:\n\nShe was due to pass my beachside bungalow. In preparation I was wearing my board shorts and a touch of after shave. With a towel over my shoulder and a bag containing a book, water and sunscreen, I was going to pretend that I was also wanting to sunbake on the beach.\n\nI stepped off my porch timing my actions to intercept her by the ferns. She was wearing the same bikini, wrap, hat and sunglasses. She had failed to notice me until I said: \"Good afternoon. Isn't this a glorious location and a perfect day?\"\n\nI seemed to have surprised her as she simply answered: \"Yes, it is lovely.\"\n\n\"I was going to the beach. May I accompany you?\"\n\n\"I am sorry, but I prefer to rest quietly and be on my own.\" With that she continued her path through the ferns and across the sand. While I was disappointed, I stood and watched her toned legs as she strode across the sand. I was convinced she knew I was watching and in order to tease me, her hips swiveled excessively from side-to-side.\n\nIn the morning I recalled my frustrating dream. I wondered what the secret was to get women to notice me. I had always had difficulty approaching women. Actually that wasn't quite right. It was only attractive women that made me stumble and lose self-confidence.\n\nI was reasonably outgoing with plenty of confidence at work and at sporting activities. I am sure one of the reasons I did well in the work environment and as a team captain was that I was confident speaking publically. My interests were diverse with numerous outdoor hobbies and activities, however when I met a beautiful woman in a social situation, I could not think of anything to say.\n\nI was always attuned to current affairs and news, but young women always seemed more focused about celebrities' romances, fashions trends, the latest soap on television or some craft activity. Most of these topics I regarded as mere fluff and of little importance. Perhaps I needed to modify my views and pay more attention to social media so that I could converse socially with women.\n\nHaving just completed three month of intensive work on a business project for my uncle George, I was now trying to relax. I had literally worked continuously, including weekends, with few enjoyable distractions. George was boss of the company so he had paid for the two weeks at this beachside bungalow. It was late spring so the days were pleasantly warm here on the Gulf coast of Florida.\n\nThe last few lazy days had been enjoyable as I did nothing except swim, read, eat and enjoy the occasional drink. I had recovered my energy, so with a renewed zest for life I was looking for something less mundane to distract me. It was just that my thoughts kept returning to what I now regarded as my bikini girl. No! That's wrong. While she appeared to be in her mid-twenties, she was not an immature girl. Her whole persona was that of a sophisticated lady.\n\nThat afternoon while sitting on my porch waiting for the 'Bikini Lady', Charlie, the resort handy boy visited me. Charlie was always happy and offering some special deal. He looked to be about thirteen, but I was convinced that his entrepreneurship would make him a successful businessman by the time he turned twenty-one. He normally wandered about the bungalows offering souvenirs and tourist information. I had made an arrangement for him to bring me two Magnum ice cream bars each afternoon. The freezer in the fridge was only large enough for an ice tray, hence the daily order.\n\nCharlie was just making his delivery when the 'Bikini Lady' walked past. I ignored Charlie as I was momentarily distracted as she paraded past us. I studied her statuesque figure, small waist, rounded hips and bottom that she wiggled as she disappeared across the sand.\n\nTurning back to Charlie, I realized he seemed to know everything going on, I wondered what intelligence he had on the lady. \"Charlie, do you know who she is?\"\n\n\"The lady is staying in Hut 14, Mister Chandler.\"\n\n\"You are making me feel old Charlie. You can call me Owen.\"\n\n\"Yes Mister Owen. I can find out more for you if you wish.\"\n\n\"It is just Owen and yes... I will make it worth your while to find out everything that you can, but she is not to know I am making enquiries.\"\n\n\"You have a deal, Owen.\" I paid generously for the ice creams and Charlie ran off to his next customer.\n\nI realized that most of the cool dudes had confidence and were far more brazen than I would normally be. Maybe my introduction to 'Bikini Lady' would be successful if I was bolder. That night I had another dream about her:\n\nI made the same preparation and watched from the porch. As predicted she appeared near the ferns.\n\nAs I approached her, I announced: \"What a delightful vision. A pretty lady should never be unaccompanied.\" She looked up with disdain. Continuing I said: \"You know life is too short to be alone so I think we should find a nice place on the sand so we can share our hopes and dreams.\"\n\nBikini Lady stopped briefly and in a tone of derision she emphatically stated: \"Leave me alone. Thank you!\"\n\nShe then continued her path through the ferns and across the sand. As she disappeared I was convinced that her symmetrical curves and rhythmic movements were sending a subliminal message just to tease me.\n\nThe next morning, once again I woke frustrated. Of course, I knew trying to be clever would fail. Maybe I should just be myself.\n\nThat afternoon Charlie returned with my Magnums and let me know her name was Ms. Monique Fontaine. \"What do you know about her Charlie?\"\n\n\"She is booked in for the reminder of the week in Hut 14. Her address is in Maryland but she arrived here by taxi, probably from the airport. That is all I could find out from the office... Owen.\"\n\n\"Like all the other guests you must have spoken to her often. Can't you tell me more?\"\n\n\"Not really. She has been going out each morning returning in the afternoon, then going to the beach. She has booked to go scuba diving the day after tomorrow... I think. Yes... on Thursday.\"\n\n\"Who did she book with?\"\n\n\"Oh that would have to be Hank's Scenic Diving. They are the local dive school.\"\n\nI paid Charlie for the ice cream bars with two $20 dollar bills to also cover my orders until the end of next week, plus his tip.\n\nMonique was going to be the catalyst to stop me being idle. Perhaps I could find the confidence to have a conversation with her. Even if I became embarrassed, she was a temptation I couldn't resist. As I had planned to do some diving all my scuba gear was in the trunk of my trusty Camry. Naturally, I decided that tomorrow I would investigate this diving opportunity and the local shops.\n\nNext morning, I quickly found the dive shop. A spotty faced blonde youth was operating the counter. His name plate read, 'Trevor'. I showed him my dive qualifications and logbook then asked: \"Do you have a dive tomorrow that I could join?\"\n\nTrevor confirmed: \"Yes Sir... we're fixin' to leave about 10 in the morning. Then in the morning we gonna dive on an old barge sunk in 55 feet of water... then an afternoon dive on some rock at 40 feet.\"\n\n\"I have all my own equipment, but I need my tank filled and a second tank for the afternoon dive. I would like to join the dive, if possible, please.\"\n\n\"I reckon that would be fine. I'll just work out the cost.\"\n\nI paid for the dive, the tank fill and hire and was informed that I had to be back at the store by 9.30 in the morning with my gear. With that all organized I started visiting other shops.\n\nI needed to get some food and drink to take on the boat. Also exploring shops was a leisurely way to fill in time. Each time I have dived, someone has forgotten to provide themselves with drink and food. I bought half a dozen bottles of flavored water and energy bars. Maybe I would be lucky and find that Monique needed a drink.\n\nI have always been interested in antiques so I decided to browse through two shops. The stores did not seem large but there were items slung from the roof and every wall as well as being stacked where ever possible. I probably wasted two hours as although there were a few items I liked, they were too big for my car and not cheap enough to warrant sending them home by freight.\n\nAfter a sandwich and Coke for lunch, I wandered into a pawn shop across the road. I am generally suspicious of second hand items, but I had time to kill. I was about to leave when I spotted an electric guitar hanging high on the wall. A friend of mine had always allowed me to practice on his instrument, but I had never owned one. I looked at it for a couple of minutes as I was certain it was a Fender American Performer Stratocaster. It had the classic contoured alder body and fast, comfortable maple neck. I had played one of these before, so I knew it would have excellent tone.\n\nThe bearded owner had obviously been watching me as behind me I heard: \"Would you like me to get it down for you?\"\n\nWithout hesitation I said: \"Yes please.\"\n\nWhen I studied it in detail I knew it was a recent model and it hardly looked scratched. I naturally held it to play and plucked a little tune. Of course I would need an amplifier to really feel it properly, but I knew this was what I had always wanted. In the past I had postponed such a purchase as there had always been higher priorities for my money.\n\nFor about five minutes, I looked it over carefully while thinking whether I could afford it. They were normally over $1,200 when new. Wondering if I could tempt myself, I eventually asked: \"How much is it?\"\n\n\"$800,\" was the owner's gruff reply. It was what I had expected. I remained silent and kept studying the volume and two tone controls. He then said: \"If you're able to pay cash I can sell it for $600.\"\n\nI guessed that a cash sale would be off the books, so I made it clear: \"I would need a receipt.\" I received a nod in response. \"Does it have a case?\"\n\n\"Yeah... that'll be another $100.\"\n\n\"Really! How are you intending to sell the case without the guitar?\"\n\n\"OK... $600 cash for the lot. Ya getting' a good deal.\"\n\n\"I will need to withdraw some money. Can you hold it until tomorrow?\"\n\n\"Tomorrow then.\"\n\nPleased with the deal, I set off looking for the nearest ATM. On the way I found an auto mechanic whose garage looked clean and professional. My car needed an oil change and I knew this should be completed before making the long drive home. I checked in and made arrangement for the work to be conducted while I was out diving. When I found the ATM, I withdrew $700 to also cover the oil change.\n\nBy now it was too late to go back to the pawn shop. Besides I always like to sleep on big purchases. I was now looking forward to my regular ice creams from Charlie, so I returned to the bungalow.\n\nI had just returned when Charlie turned up. Not only did he have the Magnums, but he had good news. \"Mum says you can have Hut 9 tomorrow afternoon as soon as we clean it after the people in there depart.\" I had requested a change of bungalows so that I had a clear view of the beach. This would also allow me to watch Ms. Monique Fontaine sunbaking.\n\nAfter thinking a while about timings, I informed Charlie: \"I am now booked to go diving tomorrow, so I will clear my belongings out of this hut before leaving in the morning. I guess after the diving I can pick up the new key from the office. Will that suit you mother?\"\n\n\"I think that will be fine. I will let her know.\" Charlie then wandered off and I wondered if Monique would pass by. It turned out I had already missed her.\n\nThat night in bed, I tried imagining diving alongside her as her buddy. This may be the perfect solution to my inability to talk to gorgeous women. We could be together under water but being unable to speak would delay any potential talking embarrassment until we had become friends.\n\nI woke early in the morning. After a full breakfast of cereal, boiled eggs, toast and coffee, I had a shave and shower before dressing. It took no time to pack my two bags. I loaded my car and then handed in the bungalow key to Charlie's mother at the office.\n\nWhen I drove up just after 8.30, I was relieved to find Hank's Scenic Diving shop already open. I went in and asked Trevor to watch my dive gear while I did some other chores.\n\nWith that arranged, I drove the car to the garage that was opening at 9 am. I had decided to only take $40, my dive log and registration card with me for the diving. I had hidden my wallet inside my shaving bag, which was inside the locked suitcase in the trunk. I was nervous that this may be risky, but when the garage opened a few minutes later I had no more second thoughts. I handed over the key and said I expected to return by about 4 pm.\n\nCutting through a lane way, it was a 200 yard walk to the dive shop so I was still early when I arrived back. Just to pass the time, I decided to offer my help to Trevor who seemed to be running everything on his own. \"I still need to have my tank filled. Can I help out in any way?\"\n\n\"Yeah... that'd be real good.\" Trevor replied as if I was his savior. \"Have you filled tanks before?\"\n\n\"Yes, several times. Just show me how the compressor works.\"\n\n\"Come out the back and lemme show ya.\"\n\nTrevor went through the sequence of starting the compressor. Two tanks could be filled at once and each tank was placed in a large tub of water which was designed to mitigate any explosion if a tank was faulty. Once I connected the filling hose to my tank, I stood a respectful distance away.\n\nI then enquired: \"Are all the tanks filled to 3,000 psi?\"\n\n\"Yeah... that will be real good.\"\n\nI also let him know: \"My tank has a higher rating, so I intend to fill it to 3,200 psi if that is alright?\"\n\n\"I reckon that will be alright.\"\n\nTrevor went back to the front of the shop while I filled my tank first. I then stated filling the other ten tanks in pairs. Nine of these tanks were the normal K valve, but one had a J valve. A friend of mine who loves underwater photography still uses this type of valve.\n\nThe J valve has a lever that holds the last 500 psi of air as a reserve. This was a safety mechanism before tank pressure gauges became common. I had thought they were now redundant, however my friend sometimes sits on the bottom for long periods of time without movement in order to get the perfect picture. He says he sometimes forgets to check his pressure gauge, so the safety reserve of air has been very useful.\n\nThe only difference in filling a J valve tank is to make sure the lever remains in the down position while filling. Before diving, the diver then positions the lever up if they wish to hold the reserve. The reserve is then opened by pulling a rod that's attached to the lever. Normally divers using a tank pressure gauge deactivate the reserve by leaving the lever in the down position.\n\nI was about half way through the task when a guy about my age came out the back to check on me. He had dark untidy hair and wore matching blue jeans and jacket. I determined from later conversations that his name was Calvin. He was the boss's son. Acting as though he smelt something foul, Calvin watched what I was doing and finally left without a word.\n\nCalvin and Trevor were talking when I sighted Monique entering the shop. She looked smart and shapely in her tight designer blue shorts and matching t-shirt. She still wore her signature sunglasses and hat.\n\nShe introduced herself to Trevor and was greeted by Calvin saying: \"Hey doll. You didn't need to get all gussied up just for me.\"\n\nMonique pretended to ignore Calvin and looking only at Trevor she explained: \"My dive booking also included the requirement for full equipment hire. Could you please help me with the selection?\"\n\nOnce again Calvin in a lecherous tone chimed in: \"Darlin', I'll help service your needs and go down with you.\"\n\nNo response was made, however Trevor wearing a guilty smile stepped out from behind the counter and said: \"Follow me.\"\n\nHe guided her towards the back of the shop to shelving where there was a selection of hire equipment stored. The shelving ran along a corridor up to where I was filling the tanks.\n\nTrevor left her to select what she needed and returned to the front counter where Calvin had remained.\n\nThey were immediately joking to themselves, but Calvin's comments remained deliberate loud: \"She's as pretty as a peach, but stuck up higher that a light-pole.\"\n\nTrevor made a quiet response before Calvin once again said: \"Yankees are like hemorrhoids: Pain in the butt when they come down and always a relief when they go back up.\"\n\nThey continued smirking and joking.\n\nMonique had removed her hat and glasses so it enabled my first real look at her perfect heart shaped face. I could tell she was strenuously ignoring the comments but obviously frustrated with the selection before her. I had just finished filling a couple of tanks, so before I connected the next, I turned off the compressor and wandered over.\n\nAs I approached I could feel the intensity of her look from her brown eyes and the air of intelligence. I had an immediate feeling she would not suffer fools gladly. Cautiously I said: \"My names Owen. Can I help you?\"\n\n\"Yes,\" and with a sigh of relief, she said: \"Would you please?\" With that her whole body relaxed; she smiled and her face was transformed to warmth and sensuality.\n\nShe had already selected some medium sized fins, so I suggested: \"Well let's start with the mask. Tie your hair in a ponytail to keep it out of your face. Now try these masks and breathe in to see which holds the best suction.\" I then demonstrated with a mask brand I knew was reliable.\n\nOnce she made her pick I asked: \"Are you going to include a snorkel?\"\n\n\"Yes... of course. We did quite a bit of snorkeling on my course.\" I then demonstrated how to attach the snorkel we selected.\n\nTrying to keep a friendly conversation going, I enquired: \"Where have you dived before?\"\n\n\"It was on some reefs in Jamaica last summer.\"\n\n\"Do you know what you need for a wet suit?\"\n\n\"I wore one of these suits without sleeves and legs last year.\"\n\nI pondered for a while and then suggested: \"The shorties may be good at the height of summer in shallow water, but it is still a little cool here. It will also be cooler at 55 feet. I suggest you try one of the full wet suits. They are harder to slip on, but it needs to be a tight fit while still feeling comfortable.\"\n\nI went back to filling tanks but kept an eye on Monique as she slipped out of her shorts and shirt to try on her first wetsuit. She was wearing a different bright red bikini which was more modest than the one I had previously seen. In spite of this, it still made my juices boil.",
        "By the time she had tried on several suits I had filled the last tank. As I joined her again she was modelling a sculptured mid blue, two piece wetsuit with black anti-abrasion reinforcement on the knees and shoulders.\n\nI said: \"That looks perfect. Now try on a BCD for size. Once you think you have a good fit bring it to me so I can check the connections and for possible abrasions.\"\n\nThe BCD or buoyancy compensator device is a jacket that keeps the diver at neutral buoyancy and also doubles as a life vest in emergencies on the surface. It has a backplate where the tank is attached and is connected to the regulator by an inflator hose and generally has straps for securing a second regulator plus pressure and depth gauges.\n\nMonique came up to me wearing a BCD over her wetsuit and asked: \"Will this do?\" Without even thinking what I was doing I connected and tightened the waist and then crotch straps. Realization hit me when I stood up and Monique was smiling broadly at my embarrassment.\n\nI mumbled: \"Sorry, I have always dived with guys before, so I didn't think.\" She continued smiling without comment, so as a distraction I asked: \"How much weight did you wear in Jamaica?\"\n\n\"It think it was 8 pounds.\"\n\n\"You wore a shortie. Was it an aluminum or steel tank?\"\n\n\"I am pretty sure it was steel.\"\n\n\"You will have to compensate for the increased buoyancy from this 5mm thick wet suit so I suggest you start with 14 pounds. It is better to be too heavy than too light, but we should still take some of these 2 pound weight to hold in the boat. I suggest you use these soft weights in the BCD pouches as they are more comfortable.\"\n\nI could see that she could only fit two in each side pouch. \"You probably won't fit all the weight in there, so with 8 pounds in the BCD you need to select a weight belt with 6 pounds. Now take off the BCD. I will look it over and inflate it. You can then check for leaks in this water tank.\"\n\nI connected a regulator to a dive tank and connected the low pressure inflator hose to fill the BCD until the over pressure relief valve automatically vented. I then placed the BCD in the water tank used for filling cylinders. \"Miss, come here. I want you to hold the BCD under water and look for escaping bubbles. Some air that has been trapped in the creases of the fabric will escape, so you will need to hold it under for about five minutes.\"\n\nMeanwhile I completed a check of the regulator I had used. \"You should include this regulator with your gear.\"\n\nOnce the leak test was complete I attached a tank to the BCD backplate to ensure the cam strap buckle was adjusted tightly enough. As I was feeling satisfied, I said: \"I think you are ready to go.\"\n\nMonique looked pleased as she said: \"Thank you. You have been a great help. I was worried when your coworker left me on my own.\"\n\n\"Oh... I don't work here. I am on holidays and also going on the dive today. I just arrived early and offered to help out by filling the tanks.\"\n\n\"Well that is very kind of you to help.\"\n\n\"Not really. I prefer filling my own tank so that I know everything is safe. I guess I am over cautious. I am only glad I could assist as I suspect that those two have more important matters to attend to. With that she gave me a conspiratorial smile.\n\n\"As we will be diving together, I should introduce myself. I am Monique.\"\n\n\"Pleased to meet you. I am Owen Chandler.\"\n\nI checked my watch and realized it was now after 10 am. \"I think we are starting late. How about you strip off that wet suit while I take your gear to the counter so they can check what you are taking.\"\n\nAt the counter Trevor was not interested in what we had selected, so I asked: \"What do you want us to do now?\"\n\n\"Poke your gear in the back of the red pickup and then just sit a spell over on them benches there till we are ready.\"\n\nOnce Monique joined me I placed my dive bag and tank in the pickup. The pickup had wooden brackets to hold dive tanks so I went back inside and brought out three more tanks to cover Monique and myself. She had put her gear into a canvass bag. As I picked it up I said: \"I hope you don't have anything in here that you need to keep dry.\"\n\n\"Actually I do have a folder that must stay dry.\"\n\n\"Well I suggest you leave it behind. You can pick it up again when we return.\"\n\n\"Oh... I would be reluctant to leave it here. Do you have a car that I could put it in?\"\n\n\"Yes. It is parked in the next street. It will only take five minutes, so hold them if they suddenly get enthusiastic to move.\" Once Monique handed me her zipped up green folder, I walked briskly back to the garage, collected my car key and secured the folder in the trunk under a bag. After returning the keys, I was soon back at the dive shop.\n\nJoining Monique on the bench, I was just ready to strike up a conversation when a middle aged man and younger woman came into the shop. The slightly overweight man had a few days growth of grey beard. He turned out to be Hank, the owner. He spoke to Monique: \"Howdy! How are you today?\"\n\n\"I'm fine thank you and we are ready to go,\" was her reply.\n\nAbruptly he exclaimed: \"Hold your horses. Who are we?\"\n\nAssuming this meant me, I introduced myself: \"I am Owen. I am a moderately experienced diver.\"\n\nIn a startled tone Hank emphatically stated: \"Today was just meant to be one client.\"\n\nA little bewildered I asked: \"Is that a problem.\"\n\nHank turned towards Trevor with a look that could melt steel. \"What do you know about this?\"\n\n\"I... I didn't know. He paid me yesterday. He has his own equipment and even filled all the tanks as Calvin arrived late this morning.\"\n\n\"It was Calvin that was meant to tell you. I should've remembered that boy's only got one oar in the water. Where is he anyway?\"\n\n\"He must be in the bathroom.\" Trevor meekly answered.\n\nLooking back to me, Hank said: \"Well it looks like you can come.\" Indicating the younger woman with him, he continued: \"This here is Connie. She is the dive master. Under water she is boss. In the boat, I am Captain and boss. Right?\"\n\nWith that emphatic statement, Monique and I simultaneously replied: \"Right.\"\n\nI turned towards Connie in expectation of some statement, but she just silently stared back at us. She was just over five foot in height, but if I had to describe her in one word, I would have said she was nuggety. What she lacked I height she made up for with muscles and sinews. Her black hair was pulled back viciously and her sun browned skin looked tough. Her whole manner said: \"Don't give me trouble.\"\n\nThe dive staff went inside and while there were heated discussions, I couldn't make out anything else. I was wondering why I would want to put my life in their hands when I shared a look with Monique. I think we were both wondering what had we got ourselves into. I was almost ready to suggest we postpone the dive when she smiled at me and said: \"I am grateful you are here with me.\"\n\nHow could I now suggest that I wanted to chicken out? Besides, this would be a great topic for future conversation.\n\nThe next development was a disgruntled Calvin, followed by Trevor, carrying out the remaining filled scuba tanks. They soon had them stowed plus two more dive bags. Monique and I were told to get into the back seat. I was slightly relieved that Trevor was driving and not a fuming Calvin who sat in the front passenger seat. None of us had any interest in striking up any conversation on the drive to the boat.\n\nI had previously dived from a variety of power boats. Some were rubber inflatables, ordinary speedboats or flat bottomed landing craft. The boat that Hank operated was perhaps the largest boat I had been on for diving purposes. I assumed it had been a fishing boat as it had a deep keel, wide beam and a large enclosed wheelhouse. The height of the gunnels would make it a little cumbersome for getting back onboard wearing equipment, but I was happy that it appeared as though it would handle reasonably rough weather.\n\nFew directions were given, but I followed Trevor and Calvin in first loading our dive equipment and then the tanks. Once again there were wooden brackets along the centerline to hold the tanks. Benches ran along the sides of the rear deck. As Trevor and Calvin stowed their gear to starboard, Monique joined me on the port side.\n\nI wanted to just chat with Monique while we waited for Hank and Connie to arrive, however I was initially unable to think of what to say. Remembering that I had no problems when discussing equipment, I started revising her on her hand signals for when under water. I think we both just assumed that we would be buddies for the dive.\n\nHank and Connie soon arrived. As Hank stepped into the wheelhouse he shouted: \"Calvin bow line; Trevor stern!\" It appeared that we were not going to be inconvenienced by any extraneous detail like a safety brief.\n\nThe engine was started; the bow line was cast off; the boat was slowly reversed against the stern fender with the stern spring line in place until the bow swung out. Then as the engine idled, Hank ordered Trevor to cast off the stern spring line. Slowly Hank maneuvered the boat forward away from the dock.\n\nBeyond the harbor the boat didn't make great speed, but the vibration from the engine was steady and calming. Monique then stood up and joined Hank in the wheelhouse. I was a little disappointed as it would have been a good opportunity to know more about her. I did look about along the coastline, but I also kept watching her.\n\nMonique seemed to be deep in conversation with Hank. I wondered what interest she had in him, but then it appeared she was flirting with him. I may have been mistaken but she was smiling broadly and laughing while flicking and touching her hair continually. This went on for over ten minutes. Once again I started wondering to myself, why weren't women attracted to me.\n\nWhen Monique returned to sit on the bench next to me she had lost that effervescence I had seen earlier. Feeling concerned, I asked: \"Is anything wrong?\"\n\n\"No... thank you for asking though. I just had some questions.\"\n\n\"Is it about the dive?\"\n\n\"No... I will tell you later, if that's OK.\"\n\nAs we would soon arrive at the first dive destination site, I reached for a drink to be fully hydrated before diving. It is a strange sensation to be totally immersed in water and be thirsty knowing you can't have a drink. I grabbed two bottles and held one in front of Monique. \"I like to quench my thirst before I go diving. Can I tempt you with a drink?\"\n\n\"Oh, thank you. This is exactly what I need,\" she said with an appreciative smile.\n\nConnie interrupted by telling us all to put on our wetsuits as we were almost there. I quickly pulled off my shirt and shorts and as my suit was ready I quickly slipped on the trousers and jacket partially zipping it closed. By then Monique had only tied back her hair and removed her shorts and top. She was still bent over pulling things out of her bag; her wetsuit being last. This gave me a great opportunity to guiltily sit back and study her bikini covered body.\n\nHer curves were just perfect. She had an hourglass figure with a narrow waist. Her bottom was nicely rounded without being large. Her breasts were easily a full handful and stuck out prominently. My brain was soon straying off to fantasy land before I was forced to shake myself back to the present.\n\nFinally the engine powered down and Hank was shouting orders for Calvin to drop the anchor. I looked around. I could still just see the shore. The sky was a deep blue, but there were some large clouds that could momentarily block the sun. Overall the conditions looked good for diving. The boat was just bobbing about in the water as the waves were small but choppy. My stomach told me the sooner I was under the water, the better.\n\nOnce it was quiet following the cutting of the engine, Connie called us together: \"This first dive is five miles from shore. It is an old barge sunk in 55 feet of water. I want you to follow the anchor chain down to the bottom and have a maximum bottom time of 50 minutes and then a 3 minute safety stop at 15 feet. Take a note of your bottom time so we can use the dive tables to work out how much break we need before the next dive. If you are using a dive computer, you will not exceed the 50 minutes bottom time. Most of you will probably be out of air after 40 minutes, so check you gauges and leave enough reserve for the safety stop. Any questions?\"\n\nI think even Calvin and Trevor were intimidated by Connie, so no one asked a question.\n\n\"You... Owen will buddy with Trevor and Calvin. Monique, you are with me.\" I nodded back but turned towards Monique. This pairing was a blow to my expectations, but I felt slightly better when she returned the same look of disappointment to me.\n\nContinuing Connie said: Monique get your gear and I will attach your tank properly. The rest of you should be able to do your own.\" Her tone made it clear we were dismissed to do our tasks.\n\nI quickly put my gear together, turned on the air valve and tested the regulator and went through my checklist. I had the feeling that my buddies would not do any checks. I moved my gear to the stern as I realized that Hank had lowered a platform to make it easier for us to access the water.\n\n\"Monique and I will descend first.\" When Connie spoke we all stopped and listened. \"On the wreck, we will start at the stern and then move to the bow. You boys start at the bow and move sternwards. That'll keep us out of each other's way. Remember to check the time at the surface when you head down. Any final questions?\"\n\nWe looked to each other and shook out heads.\n\nSarcastically Connie said: \"Calvin, you will turn on your air before you dive won't you.\" With that she did a giant stride into the water using her hands to hold her mask and tank in place.\n\nJust before Monique joined her, I noticed she had been given the J valve tank. The valve was still turned down, so this wouldn't present a problem.\n\nJust before the guys followed, I turned to them and said: \"Just so we don't get separated, how about we each take turns to lead for 10 minutes. Trevor first, then Calvin and I will go last.\" They just shrugged at me which I understood to be acceptance.\n\nI was last into the water. The girls had already descended. My regulator was fine and my buoyancy was ideal for a slow decent. I checked my watch, signaled I was \"OK\" and then pointed down to descend. I followed closely behind the other two, equalizing my ears as I descended.\n\nThe first thing that struck me was the clearness of the water with the sun shining. While the bottom was too far to see immediately, the reflection from the abundant fish as they turned rapidly created a continuous dazzle. The water was warm enough at the surface, but as we descended the temperature change came on like a gentle breeze.\n\nWe were soon at the anchor and ahead of us was a dark shape; obviously the wreck. At this depth visibility was about 15 to 20 feet due to algae blooms. I added a little air to my BCD so that I wouldn't stir up the bottom sediment with my fins and confirmed the depth on my gauge.\n\nI wanted to follow the guys to start with as they had said they had dived here before. I was relying on them to show me the highlights. We turned to the right, so I assumed this must be to the bow. The bottom had been mainly sand until we reached the wreck which was sitting on what appeared to be rocks as they were covered in soft and hard corals, anemones and sponges.\n\nYou don't have to be an artist to appreciate the scenery. Every dive is a new experience and I am continually surprised by a world filled with color and beauty. The wreck was acting as an artificial reef. As it was entirely covered with a garden of life, it was only possible to make out large structures like the bollards on the gunnels and cabin features.\n\nAs Trevor slowly led us aft, we swam through a cloud of dish sized moon jellies. There were also angelfish and some schools of blue tangs. There were hundreds of species of reef and larger pelagic fish I couldn't recognize.\n\nThroughout the dive it often became darker due to cloud covering, so I was not surprised that I had not seen Monique and Connie. My watch said we had been down for 28 minutes when I sighted Monique. As the sun came out her blue wetsuit almost glowed compared to the other subdued colors around her.\n\nOf course, I starred at her silhouette underwater for a moment. Monique and Connie were facing each other and then I realized from the rapid movement and bubbles that something was wrong. Instinctively I swam towards them. Connie appeared to be fighting off Monique. Connie was soon kicking her fins and feet against her.\n\nI was just approaching from behind Connie when she kicked hard and started a rapid ascent to the surface. Monique had seen me so we closed rapidly. She gave the signal for no air so I immediate passed over my regulator and held onto her. Monique put it in her mouth. The rush of bubbles indicated her need was desperate. I slipped my second regulator into my mouth and studied Monique's face to see if she was getting better. All this time, I held her so she didn't race to the surface.\n\nIt took over a minute for her to regain her self-control. In acknowledgement to my signal she finally returned to me an OK and nodded. I checked her pressure gauge. I was surprised that it indicated effectively empty. That was rapid air consumption even for a nervous novice. I then had a thought.\n\nAs I turned her around I could see that the J valve was now in the up position. I pulled it down and rechecked her gauge. It now read 600 psi. I showed her the pressure gauge and then held her own regulator and purged it to prove that she now had air. Once she was happy that her own regulator worked, I gave her the ascend signal and we slowly went up remaining below our bubbles.\n\nMonique made sure we remained together by holding my BCD harness in a death grip. When we reached 15 feet. I stopped and pressed the relief button to purge some air from the BCD. She had been watching and did the same. I showed her my watch to indicate we were waiting three minutes. At the end of that time, she looked much happier when I indicated that we would ascend to the surface.\n\nAs we popped back above the waves, I removed my regulator to ask if she was now OK. In between coughing, she said she was much better. I then looked to where the boat should be waiting.\n\nA deathly cold came over me. I couldn't see the boat. I looked around in every direction rapidly, then I did it again systematically. Monique then shouted: \"Where's the boat?\"\n\nI couldn't believe that it was not there. Vainly thinking it might be hidden by the choppy water, I even removed my mask and fully inflated my buoyancy vest so my head was another six inches out of the water. Still nothing.\n\nA little quieter but not calmer, Monique asked: \"What has happened to the boat.\"\n\nAll I could say was: \"I don't know.\"\n\n\"Could it be that we have come up in the wrong direction and that it is nearby? Should we swim about to see?\"\n\nI didn't answer at first. I needed to consider all the possibilities. Eventually I replied: \"The anchor was no more than 30 feet from the wreck so the boat must have been within 100 feet. Even with the waves, we should be able to see the high profile of the cabin for at least 500 yards.\" The scary realization hit me as I said: \"They must have left without us.\"\n\n\"Maybe they had to reposition and will soon come back,\" Monique declared with desperate hope.\n\nStill trying to think things through, it was a while before I replied: \"I can't see why they would have to move... and I can't understand why they would abandon us.\"\n\n\"How did you fix my air down there?\" she asked.\n\nI explained about how the J valve worked then said: \"It must have been turned during the dive.\"",
        "\"I had 800 psi when Connie checked just before I lost air. She then swam behind me.\" Realization then hit her. \"She must have turned it off!\"\n\n\"They were never very pleasant but why would she do that?\"\n\nThen Monique cried: \"Oh no! It must be me.\"\n\nUrgently I asked: \"What do you mean?\"\n\n\"I am a reporter and I was investigating them for fraud.\"\n\nOf course this distracted me for a moment as I wondered what she had done. Then I realized I had to focus on the here and now. With Monique holding me again and looking at me for solutions, we just bounced about on the surface, while I confirmed that we had just one option.\n\n\"We are five miles from the coast. We can snorkel that far as we have wetsuits and fins.\"\n\nMonique looked around then said: \"We can't even see the coast.\"\n\n\"I think I can sometimes see a tall building when the waves lift me. There is possibly a bit of a southerly current in this part of the Gulf, but if I follow my compass on a bearing of 70\u00b0, we should be right.\"\n\n\"Are you sure we can make that distance?\"\n\nMonique sounded doubtful, so I realizing my first task was to give her hope. This would require a little over confidence on my part. \"I have done half that distance before and then partied all night. Five miles is just like a long hike. We just need to relax as much as we can by doing slow long kicks. Every two minutes we should check our direction. Just relax your muscles whenever you can. You just stick besides me and we'll make it fine.\n\nIn a slightly resigned tone she replied: \"Whatever you say.\"\n\n\"First, let's replace our masks then we will drop our dive tanks.\" I then proceeded to give instructions.\n\n\"Fill your vest first and then turn around so I can release your regulator and the tank.\" I turned off the gas, grabbed her second stages to purge the air from the line, disconnected her low pressure inflator hose and removed the first stage of the regulator from the tank.\n\nOnce I removed the safety strap, I released the cam buckle and turned her around to see the tank. I flicked the J valve lever to show her before I then dropped the cylinder to the bottom of the ocean.\n\nAfter checking her submersible pressure gauges, I suggested: \"You don't have a compass with your gauges so you might as well drop your regulator as well.\"\n\nMonique was able to undo my regulator, however the buckles were too tight on my tank. Consequently, I dropped my weight belt and manually inflated my BCD to ensure it would float when I remove it to release the tank. I had previously tied my regulator to BCD to keep it streamlined as I needed to keep my compass.\n\nWith my tank gone and my BCD secured about me again, I told her: \"Now drop your weight belt and let some air out of your BCD. I think you should drop all the weights from your BCD pouches, but try some snorkeling to check how it feels first. You need to make sure your fins stay underwater.\"\n\nOnce we had dropped all our weights, I asked: \"Are you ready?\"\n\n\"Ready as I will ever be.\"\n\n\"I will start slowly until we have warmed up, but then we need to maintain a consistent pace. Try and distract yourself by counting the number of dresses in your wardrobe.\"\n\n\"Owen... I will do my best.\"\n\n\"By the way. Hold any pee you have for as long as you can. We want to avoid dehydration.\" Monique just looked at me in amazement and slowly nodded to show her understanding.\n\nI checked my compass and before placing the snorkel in my mouth, I said: \"Here we go.\"\n\nI put my head in the water and started to snorkel. I kicked slowly and looked to my right side and was pleased that Monique was close beside me.\n\nI had rowed at school and college. In the off season we always undertook long rows, often doing ten miles with only one or two breaks. I had learnt that repetition and boredom of the rowing stroke often allowed me to zone out delaying the onset of tiredness. I thought maybe I could do the same now.\n\nI checked Monique every minute or so and then the compass for about half an hour. Then I must have zoned out and suddenly worried that I hadn't looked at Monique. I abruptly stopped and raised my head and was greatly relieved when she stopped next to me.\n\n\"Are you OK?\" That was going to be my first words for several hours.\n\nShe removed the snorkel from her mouth and puffed out: \"Yes.\"\n\n\"I suddenly didn't see you. Am I going too fast?\"\n\n\"Actually initially I thought it was too slow, but I now think it is fine. I was just hanging back a little to make it easier to follow you.\"\n\n\"Well as soon as you think you are dropping back... shout and stop me. We will need to rest for short periods.\"\n\n\"Ready to go again?\"\n\nWith her nod, we replaced our snorkels and headed off on the bearing of 70\u00b0, slightly north of east.\n\nI knew that swimming five miles was like running half a marathon. I had run 10 miles without a break, so I was confident that half a marathon was possible if I could have breaks. Swimmers without fins could cover a mile in half an hour. I knew we were going slower and would also use time for our rests, but maybe we could get to the shore in five hours. It was about midday when we started so it would still be daylight when we finished.\n\nOn our next rest break Monique showed she was in reasonable spirits. \"I must be getting better as I didn't drink any of the ocean on the last leg. I didn't realize how hard snorkeling could be.\"\n\nI replied without expression: \"Yes, it can be a tankless task.\"\n\nShe looked at me and then her smile slowly broadened. \"Was that a joke? That was terrible. You will pay for that later.\"\n\nAs we continued, my thoughts wandered to many topics during the swim. Of course several times I wondered what Monique had done to get us into this situation. How bad could it have been to warrant this predicament? I kept asking myself, how could this beautiful angel have caused such a problem? However, I knew that explanations would be best left until we were safe.\n\nWe had gone more than an hour when on a break, Monique looked towards the shore and with dismay asked: \"Are we making any progress?\"\n\nWith all the optimism I could muster, I said: \"I can now see the building tower clearly, but it is more to the left than before. We may be moving in a current, but our progress is really good.\"\n\n\"I am really getting cold now. You are a bastard! If only you would let me pee, I could at least have a moment of warmth.\" That brought a smile to my face and it also confirmed her morale was still good.\n\nOn the next swim section I focused on trying to remember at least one corny joke for our next break. The best I could do when the time came was: \"Why do mermaids wear sea shells?\"\n\n\"I hope this is not going to be a naughty joke.\" Then she shrugged her shoulders.\n\n\"Because B shells are too small.\" After a moment, a half smile was ample reward.\n\nI can't describe the absolute boredom. I was tiring, getting chafed, and also getting cold. At our breaks we had run out of conversation, but I still tried to say something like: \"We are doing well.\" I knew we were about halfway when the coast was regularly visible each time a wave lifted us higher. I tried to make the most of it to keep Monique's and my own spirits high.\n\n\"Owen... Help!\" I raised my head and looked back at Monique. \"I have a cramp.\" I swam to her, grabbed the inflator for her buoyancy vest and blew in several large breaths.\n\n\"Lie back and try and relax. Which leg is it?\"\n\n\"The right. I have a knot in my calf but the pain shoots up the whole leg.\"\n\n\"Try flexing your foot upward. You have been pointing your toes for a long time, so do the reverse.\" As she lay back I grabbed hold of her right leg and started rubbing my hand up and down her calf to try and warm it up. Realizing this probably wouldn't work through her wet suit, I started rolling her muscles to the side between my thumb and fingers. I was concerned for her, but I still had enough energy to allow my thoughts to consider what it would be like without her wearing the neoprene skin.\n\n\"Ahhhh! That's the spot,\" she cried. I applied more pressure with my thumb for over a minutes to see if this would relieve her muscle contractions.\n\nWhen the cramp started, her face had been contorted with her eyes almost closed. After five minutes, her face was now more relaxed. Hoping that we could continue again, I asked: \"Is that better?\"\n\n\"Much better, but there is still a shadow of the pain. If we make it, will you give me a proper massage?\"\n\n\"I'll have you know, my services do not come cheaply. Pausing, I then said: \"We need to get going again. The shore is close, but I don't want to be here at sunset.\"\n\n\"Are you thinking there may be sharks?\"\n\n\"Don't worry, sharks don't attack women.\"\n\n\"What?\"\n\n\"They are man eaters.\"\n\n\"Not funny Owen.\"\n\nMonique deflated most of the air from her vest and then with her snorkel in her mouth, she put her head down and we started swimming again. This time I took the pace from her.\n\nWe had several more rest breaks where I massaged both her legs. We were too tired to speak now, but she certainly did not object.\n\nFinally it was the changed motion in the water from choppiness to waves that stirred the numbness from my brain. The sun was now close to setting as I looked behind me, but I also saw a wave. Removing the snorkel from my mouth I shouted: \"See if you can catch this wave.\"\n\nAs it approached I shouted \"Now\" to get Monique to react. She still had her head in the water and as she was too slow, the wave passed us by. I stayed beside her, looking about for the next wave. After several more rolled by us, we were finally lifted by a wave that took us to the shallows.\n\nWhen I felt myself kicking the sand, I pulled my knees up under me. Resting my arms forward in the sand I rolled onto my bottom as the water ebbed and flowed around me. I pulled the fins off my feet and unsteadily moved back to a crouch so I could stand up.\n\nMonique had gone past me. She had rolled onto her back and just lay passively as the waves flowed over her. Her mask was about her neck and some of her hair had come loose from her pony tail. She looked exhausted and barely raised her head as I approached. While this may not be the ideal look for the cover of a glamour magazine, she still looked beautiful. I pulled the fins from her feet, then I said: \"Give me your arm.\" Somehow I just pulled her up to me.\n\nMonique fell against my body, wrapped her arms about me and lay her head against my BCD harness. Holding her firmly I then felt the trembling of her body. She was crying softly. I just held her for several minutes hoping this was some comfort.\n\nShe seemed to have regained control, so when I heard a couple of sniffs, I said: Please don't cry on my gear as the salty tears will damage it.\n\nStill holding me she raised her head with a thin smile and said: \"Thank you.\" Her slightly puffy eyes showed her emotion and the sincerity in the statement. Strangely I couldn't have wished for a greater reward.\n\n\"What do we do now?\" she tiredly asked.\n\n\"We get a drink... then food as I am so ravenous... we go to a house and call the police.\"\n\n\"No... we can't!\"\n\n\"You'd better explain.\"\n\n\"The local sheriff is the brother of the Congressman I have been investigating. Hank is their cousin.\"\n\nWell that stopped me. If we couldn't go to the police, how would this be resolved? This means we were in even more danger. \"We still need water, food and rest. There is a house just over 100 yards down that way, or there are several houses about 300 yards to the right.\"\n\n\"Just go to the nearest, but we need a cover story.\"\n\n\"How about we just say we had a boating accident and had a long swim to shore. We just need a lift to town.\"\n\n\"Yes, but we are newly married... Ramiro and Julie Montague. Also let me do the talking initially, as I can put on the distressed little girl act.\"\n\n\"I wouldn't think that would need much acting.\"\n\nAs we walked to the house still carrying our fins, Monique held my hand. When I looked at her she said: \"We need to look authentic.\" I had actually thought it was more an instinctive reaction, so I gave her hand three squeezes. I was pleased when she squeezed me back. I just hoped that her reply had the same meaning as I had intended.\n\nThe house was a little run down timber bungalow. I wondered how it had survived through hurricanes. I knocked loudly on the door. When there was no immediate answer it occurred to me that a visitor at sunset may not be welcome. I knocked again and loudly shouted: \"Is anyone home, we need help!\" I could hear a shuffle inside and a woman, at least in her sixties, answered the door.\n\nMonique started: \"Hello, we are sorry to disturb you, but my husband and I have had a long swim to shore as our boat sunk. Could you please help us? We desperately need some water and have no other clothes or transport.\"\n\n\"You look pretty worn out you poor thing. You had better come in dear.\"\n\nThe woman who was called Betty, directed us to a table with wooden chairs. She brought us water and an extra jug. We then delivered our modified story and our names; Ramiro and Julie Montague. Betty informed us that she didn't have a car as she no longer needed one. There was the bus and her son visited every Wednesday and Sunday to take her shopping. She offered to call a taxi, but at this time of the evening there would be a wait and it was quite expensive.\n\nIt was then that Monique and I realized we wouldn't have money to pay for a cab anyway. We had both left some money in out dive bags and the rest of mine was in my car. Monique said she had left her wallet in the folder that I had also placed in my car. The car was probably still locked.\n\nIf we hadn't felt helpless before, we certainly did now. I think it was probably due to Monique's look of despair that finally Betty said we could stay the night in her son's room.\n\nAlthough Betty had remained guarded to start with, now her motherly instincts kicked in. \"I have a stew cooking. I normally make enough to make four meals, so I have enough to freeze and reheat later. I am sure there will be plenty for us. While it is cooking, have a shower and I will look for some clothes for you dear... and I am sure my son has clothes that will fit Ramiro.\"\n\nIn the end, Monique receive some panties, a nice feminine t-shirt and some baggy shorts that had been her sons. I had shorts and t-shirt, but I had to go commando. I would wear my swimming trunks once they were dry.\n\nAfter the shower, Monique had been able to comb her wet hair out. Her proud breasts were tenting her t-shirt so much I took every opportunity to watch their movement, making sure I was not being observed. I knew if I was really her husband, I would feel quite proud of her appearance after such a traumatic day.\n\nOver dinner with numerous glasses of water, we answered a few questions from Betty about our experience, but she then took over the conversation. I had the feeling that she was lonely as she was enjoying the opportunity to tell us about her family, her garden, her chooks and her previous work at the supermarket. I was glad she could keep the conversation going as we were far too tired to think of interesting things to say.\n\nAs Betty continued chatting, I was having my own thoughts. If we were to avoid attracting attention from the police, we needed Betty to avoid gossiping. Consequently I explained that we were embarrassed about our accident and asked if she could be discrete for at least the next week. Betty had no problem with that.\n\nMonique with her elbows on the table to support her head was finding it difficult to keep her eyes open. I thanked Betty for everything she had done but asked if we could be excused as we desperately needed sleep. I helped Monique up and guided her to the allocated bedroom. Neither of us made a comment about the double bed as we were too tired.\n\nI pulled off my shirt and hopped in the right side of the bed. When I had settled, Monique was in beside me wearing only her panties. I briefly viewed her magnificent chest before she pulled up the sheet. In that glimpse, I beheld large pink nipples mounted on firm breasts that tantalizingly wobbled. I was sure they were natural, but as they looked so perfect it made me uncertain. Under the sheet, she held my hand, but said nothing. I had wicked thoughts but the temptation did not last for long as I was soon asleep.\n\nI awoke in the morning with a warm body cuddling me. Monique, still asleep, had her arm around my body and two warm pillows were pressing into my back. My morning wood was pressing into my shorts. I remained still while I cleared my mind.\n\nLooking at my watch, I realized we had probably slept almost ten hours. I also noticed the distinctive smell of bacon. Oh, how I would have loved to explore this new intimacy with Monique, but I could just imagine Betty listening and waiting for us to appear.\n\nI rolled out of bed and then gently shook my bed partner. As Monique's clothes were on my shirt, I threw them to her. I had no other option than be a reluctant gentleman.\n\nAs I guessed, Betty was waiting expectantly. We sat down to eggs, bacon, hash browns, beans and lots of coffee. She was insistent that we have a second plate and it was not hard to be persuaded.\n\nGreatly refreshed we were eager to get back to our own bungalows so we could properly dress and normalize our lives. Betty provided us with a large calico bag for our diving equipment and even found a pair of old flip flops for Monique.\n\nBetty gave final directions: \"Walk north along the beach until Swanston Street. It is then only 200 yards to the main road where there is a bus stop. Now the bus to town will have 33 on the front. Here is some money to cover your fare.\"\n\nWe were full of appreciation. Monique gave Betty a long hug of thanks then said: Betty, what is your full name and mail address? I will write to you later, so could you please write it down?\" Equipped with this information, we said our final farewells.\n\nAs we walked to the bus, we considered our options without making a decision. How could we report the attempt on our lives? We decided to work that out after we had returned to the bungalows.\n\nI explained that all my gear was in the car. Monique was very keen on the return of her green folder, but wanted to first shower and dress. She would get her belongings together while I collected the car.\n\nWe didn't talk on the bus and weren't certain at which stop we should exit. It was soon obvious when the bus engine ceased running and all the passengers exited. We were about 500 yards from the bungalows and the garage was almost a mile further on. I decided to accompany Monique and leave the bag containing our dive gear at her Hut 14. Then I would collect my car.\n\nWe were about 200 yards away when we sighted two white vehicles; a pic-up and a sedan. They both had blue light bars on the roof and the word 'Sheriff' emblazoned in green on the side. They were parked in the visitors' carpark of the Bungalow complex. Trying not to look suspicious, I pulled Monique behind a tree and hugged her as if we were a real couple.\n\nShe immediately asked: \"What do you think?\"\n\nI didn't have an answer, until I spotted a 13 year old boy sitting outside a video game shop across the road. I replied: \"Just stay here leaning against the tree. Don't let Charlie see you, but pretend you are looking at the birds in the branches.\" I then walked towards the road and Charlie.\n\nFortunately before I had to cross the road, Charlie looked up. When he saw me, I waved for him to join me. He happily bounded across the road so we could talk. \"What is the Sherriff doing at the Bungalows?\"\n\n\"Oh they are collecting Ms. Fontaine's belongings. They said she drowned.\"\n\n\"Well... Charlie, you still have my ice cream money don't you?\"\n\n\"Ah yes... I am sorry Owen... I ate your ice creams yesterday because I couldn't find you.\"",
        "\"That's alright. I would have done the same. I won't need any more ice creams but I want you to keep the money. On one condition though.\"\n\n\"What's that?\"\n\n\"Don't tell anyone you have seen me. Can you do that? Do we have a deal?\"\n\n\"Sure... it's a deal.\"\n\n\"Thank you Charlie. Now run along.\"\n\nI watched as Charlie walked back down the street, in the opposite direction to our intended direction. When he was out of sight, I returned to Monique and said: \"We need to cross the road and take the side streets. I will tell you what Charlie said as we walk.\"\n\nHaving bypassed the bungalows, it was mid-morning before we reached the garage. I couldn't see my Camry, but the mechanic was under a car. When I called he came out and joined us, but his eyes were distracted by Monique. I couldn't blame him as she wasn't wearing a bra or her bikini top under her shirt.\n\nIn a jovial manner he greeted me: \"I told the wife we could take a holiday as I had an abandoned Camry to sell.\"\n\n\"I'm really sorry. Our activities didn't have us return as expected.\"\n\n\"That's alright. It's inside this other door as I locked it up last night for security.\"\n\nFeeling relieved I said: \"That's much appreciated.\"\n\nStill with a chuckle, he explained: \"It wasn't just for your benefit. I have had clients drive off without paying.\"\n\n\"Well what do I owe you?\"\n\n\"$85 will cover it. You didn't ask for a full inspection, but everything runs pretty well.\"\n\n\"I will need the key so I can pay you.\"\n\nThe mechanic retrieved my key so I could open the trunk. I delved inside my bag and found my wallet. I withdrew five $20 notes and as I had nothing smaller, I told him to keep the change due to the inconvenience. He made no objection.\n\nI quickly retrieved Monique's green folder plus some socks and running shoes. Once I had put on the footwear, I placed the calico bag in the trunk and we both got in. I drove slowly out of the shed and then proceeded carefully out of town on a road heading east.\n\nI looked over at Monique. Instead of being relaxed, she was squinting due to the sunlight. I had some large black rimmed polarized sunglasses in the glovebox. I told her to try them out while I put on my steel rimmed Maui Jim's.\n\n\"Do these suit me?\" Monique inquired.\n\n\"I think you could make Elton John's glasses look sexy. Besides they are large and will conceal half your face.\"\n\nWith a cheeky voice, Monique quipped: \"Oh... so you think I look sexy do you?\"\n\n\"You didn't listen. I suggested the glasses looked sexy.\" I did smile to let her know I was deliberately teasing.\n\nBy now I had plenty of opportunity to think about our next moves. I outlined my plan to Monique. \"We need to get out of the county and preferably the state as soon as possible. If we are out of Florida, the local sheriff won't have as much influence. The mechanic didn't say anything and from what Charlie told me they may still think we are dead. Once they realize that my car is not in town, or they talk to Betty or Charlie, they will realize we are alive. They will then be watching all the roads. I am heading east so we can take secondary roads. The police are likely to focus on the highways.\"\n\n\"Should we phone someone for help? Perhaps the police in... another state,\" Monique suggested.\n\n\"Until we are in their state, those police will do nothing as it is not in their jurisdiction. Also we can't use cell phones as they can be tracked. My phone is turned off and is in the trunk.\"\n\nAs we had some sort of plan, we settled quietly for a while. Then Nicole broke the silence. \"Owen... this is the first real opportunity for us to talk and I want to start by thanking you. Right from when we first met in the dive shop, you have known what to do. Most importantly you have been a tower of strength. I probably would have given up yesterday if not for you. I am indebted to you, but feel guilty that I also put your life in danger. In spite of the guilt, I know it was my salvation.\"\n\n\"Monique, I am sure you are worth saving, but please don't put me in this situation again if you can avoid it.\"\n\n\"Don't worry. I am having second thoughts about the wisdom of undertaking investigative journalism,\" she replied reflectively.\n\n\"Do you think it is about time you explained what you have been up to and why this happened?\"\n\n\"I have been trying to conduct a clandestine investigation. It all started from a whistle blower who calls herself Wendy. She came to my editor and first raised the allegation that Congressman Walt Affleck had illegally transferred $10.5 million of Federal grant funding through a local environmental group for his personal use. She provided some details, but refused to come forward officially until we provided corroborating evidence.\n\n\"Is that because she was worried about being hung out to dry if there is not a foolproof case?\" I enquired.\n\n\"Yes, something like that. Anyway, my boss sent me down here to see if I could verify any of her story. Actually I think I have been pretty successful; however I obviously wasn't as discreet as I thought I was being.\"\n\n\"What did you discover?\"\n\n\"Firstly, I was able to confirm that a check issued from the Florida Environment Coalition account of the Tampa Regional Bank for $10.5 million was used for the purchase of 115 acres of pristine Gulf coastline.\"\n\n\"What is wrong with that?\"\n\n\"The ownership entered into the land register was for the Siesta Trust and not the Florida Environment Coalition. Siesta Trust is the family trust for the Affleck family.\"\n\n\"How did you get this information?\"\n\n\"It is amazing what a little flirting will get you,\" she guiltily confessed.\n\n\"Sadly I have little experience.\"\n\n\"Wendy had identified the land, so when I went to see the register the young man was awfully willing to help me. I pretended that I represented a neighboring property that wanted to improve the fencing. Fortunately his boss called him out for a few minutes for an urgent task and I was able to use my phone to photograph the register and their copy of the bank check. It also included the address for the Siesta Trust, which is Congressman Affleck's home. The check had the account number for the Florida Environment Coalition but not its name.\"\n\n\"How did you know it was their check then?\"\n\n\"I simply went to a small branch of the Tampa Regional Bank and said I wanted to make a donation for their work. I asked if they could confirm I had the correct bank account details. The lady was very helpful to confirm the number, but it cost me $50 to complete the donation. I did ask her to write the details down so that next time I wouldn't make a mistake. She was very nice, so she wrote down the account name and number on a receipt below the bank's letterhead.\"\n\n\"Are you sure the Siesta Trust is not another charity?\"\n\n\"All members of Congress are required to publicly declare all their pecuniary interests. This Trust is listed on Affleck's declaration as his family trust.\"\n\n\"The next piece of information came about because Frank Meadows, my boss, provided me with letters of introduction from some northern property developers that he knows. The letters explained that I was their representative assessing architectural firms with experience of planning resorts and group housing projects. I visited Silverson Development Group and they were very hospitable. They took me to a couple of small developments. While I said they were very good, I was not convinced they could manage a project of the size we had envisaged. This prompted them to show me some detailed plans they had developed for an all-inclusive holiday resort.\"\n\n\"Did they say who had commissioned the plan?\"\n\n\"No they were being very cagey about details; however, I was able to sneak another series of photos that clearly distinguishes the relevant coastline. This is the same property.\"\n\n\"Where does Hank feature in all this?\"\n\n\"It is Hank Affleck, by the way. I was trying to pump him for information. He is apparently notorious for not wanting to talk, but I thought if I caught him in his own environment he may become chatty. The Silverson Development Group said that scuba diving was to be a major attraction for the resort. I was just assuming it would involve him. On the boat, I told him how marvelous this part of the coast was for diving and then asked whether he had any future expansion plans.\"\n\n\"Was he any help?\"\n\n\"He said nothing. In hindsight, I think he must have already known who I was and what I was trying to do. Why else would he have deserted us?\"\n\n\"So I assume all your evidence is in that green folder.\"\n\n\"I have the bank receipt and a flash drive; plus my wallet and letters of introduction.\"\n\n\"What did you leave in the Bungalow?\n\n\"Well everything. My clothing, computer and cell phone; however I didn't store relevant documents and photographs on them once they were put on the flash drive. I made sure to delete temporary files in my computer and photos from my cell phone. This included the recycle bin. I sent emails to my boss with copies of files, but that was through a web based account. I am pretty sure my name isn't even on any clothing.\"\n\n\"Somewhere you must have alerted them. Perhaps you should have used different names at each location.\"\n\n\"You're probably right. There goes my career as a spy. I had to use Monique Fontaine as it was on my letters of introduction. Oh... I haven't told you... that is not my real name.\"\n\nTurning to her with a quizzical look I said: \"Really?\"\n\nAt least I had the satisfaction that she looked embarrassed: \"My name is really Nicole Slater.\" I made no comment, so by way of explanation she continued: \"Frank had the name put on the letters and then suggested that I use it so that I wouldn't be traced back to the newspaper.\"\n\n\"Well it may work, but they will now know who I am and where I live.\"\n\n\"Of course!... Owen, I am so sorry.\"\n\nWe drove on in silence for several minutes, then she said: \"I liked being Monique. Nicole sounds so plain.\"\n\nAfter more silence, I realized she was a little depressed, so I commented: \"I like Nicole actually. It sounds feminine. It is sensible without being common. Just like you.\"\n\nNicole did not reply, but I could tell she kept watching me as I remained focused on the road.\n\nI had no map for the area, however when I found a significant road heading north, I made the turn.\n\nAs a break, I turned on the radio to find some news. I was still tuned to the local station 105.9 WFKT which soon had their midday news. Their first item was:\n\n\"The Coastguard this morning dispatched a cutter supported by a helicopter to join the local fleet that has been searching for a missing couple that failed to surface from a scuba dive yesterday. Locals are requested to keep an eye out for any equipment that may have been washed ashore between Cape....\"\n\n\"Do you think that is us?\" Monique exclaimed.\n\n\"It could be. Well if they still think we have drowned, it gives us a head start.\"\n\nWe soon arrived at a town that had a Walmart. Monique... No... Nicole asked: \"Could we stop and buy a few essentials. I have no underwear and I would love to be able to clean my teeth tonight.\"\n\nI pulled into the carpark and drove about. I could see Nicole wondering what I was doing. \"I am looking for another white Camry,\" I explained. \"I need some new license plates.\"\n\nI am sure that white Camrys are one of the most commonly seen cars on the road, except when you are looking for one. Unsuccessful with my search, I parked the car and asked: \"Do you have enough cash? Remember police can track credit cards.\" I handed Nicole $40 just in case she needed it. \"Keep your sunglasses on and wear this baseball cap. They will have cameras in the store. It's just a precaution in case they have released our photographs.\"\n\nWondering about what I could do while waiting, I enquired: How long will you need?\"\n\n\"No more than half an hour.\"\n\n\"Use a toilet in there and when you get back I will have some Taco Bell. What would you like?\"\n\n\"What is easiest to eat in the car? How about a grilled burrito with chips and a 7up.\"\n\nI nodded in response and handed her a shopping bag. As she walked to the store I thought she looked so gorgeous. I was sure she could make her oversized pants a new fashion statement.\n\nI drove through the Taco Bell drive-thru to buy the burritos well before her return. On time, a happy Nicole was carrying a full bag of gear. She said: \"Besides some underwear, I picked up a new shirt, nicer shorts and some toiletries.\"\n\nWe were soon heading north, but all roads seemed to be going to Orlando. Again we tuned into the hourly news of a new radio station. I was momentarily stunned when I heard:\n\n\"We have a new development in yesterday's loss of divers off the Gulf Coast. Police are asking for any information relating to an Owen Chandler thought to be driving a white Toyota Camry with Virginia license plate YGM3838. The public is requested not to approach the person of interest. Just report his location. In other news....\"\n\n\"Well!\" I pondered.\n\nNicole then asked: \"Why would they mention you and not myself?\"\n\n\"It could be because my belongings were not in the Bungalow and they couldn't find my car. It could be because the mechanic mentioned I was alive. Or, they could still believe we are both alive and they know my detention will also lead to finding you.\"\n\n\"We should get out of Florida. What else can we do?\"\n\nAfter more thought I explained: \"I was worried that something like this might happen. We need to borrow... or steal, some plates from another white Camry.\"\n\n\"Does it have to be a Camry?\"\n\n\"Police at all levels have an automatic license plate recognition capability. In real time, they can match plate numbers against a database that tells them the owner and car details. If we put on plates from a red car or a Ford, they will immediately pull us over as it would not be a correct match in the database. As soon as we drive up I95 there are several fixed cameras specifically designed for this task.\"\n\n\"So that is why you were looking for a white Camry at Walmart.\"\n\n\"I have an idea. We will have to risk it by driving on Interstate 4 into Orlando.\" With a chuckle to myself I playfully said: \"I have always wanted to return to the Epcot Center.\"\n\nFortunately all roads north gave directions to the I4. I knew that the Interstate would have signage to direct motorist to Epcot, but I hadn't expected it to be so easy. I sighted Epcot before we had to exit. The road looped us around and I soon found we were coming to a large parking toll plaza. It wasn't quite what I had expected, but I handed over my $25 for an all-day parking ticket.\n\nBeing late spring there were plenty of tourists and the huge carpark was three quarters full; however now being early afternoon there were few cars entering the car park. I was able to slowly drive down some of the rows in the middle. I was looking for a space created by an early departure. I had Nicole also looking for white Camrys. I couldn't believe my luck when we found a space with a white Camry three cars away.\n\nI parked and we sat for a moment just scanning in all directions. I had a few tools in the trunk, so I selected a screwdriver plus a small adjustable wrench and put them in a shopping bag. Nicole stood casually as if she was waiting for someone, but was acting as my lookout. I was relieved to find that the target vehicle's plates were attached by nylon nuts and bolts.\n\nThe car was registered in Florida, so I sat down and removed the rear license plate and also the front plate that was showed a patriotic symbol. All the time I was keeping my profile low. With both plates in the shopping bag, I returned to my car to make the change. Once completed, I secured my own plates in the trunk.\n\nWhen I looked back at the other Camry, I noticed how the absent plates appeared obvious. I realized there was a good chance the owner would notice. It wouldn't be too hard for the police to appreciate what had happened and change their search to the new number. If I could delay the owner from noticing the theft, it would give us a better head start. I then understood that I had to replace the plates with those from another vehicle.\n\nAnother white Camry would be perfect, but I didn't want the risk of being noticed searching about the carpark. I decided it would probably be good enough just to give him another set of Florida plates. My new target had to be far enough away from our location so its owner didn't see his plates on the other Camry. I went to a row closer to the entrance, however it was another ten cars further on before I found suitable plates without tamper proof screws. It was a blue Ford hatchback, also with Florida plates.\n\nWith the second theft and replacement complete, we were eager to depart the scene.\n\nWith the new license plates, I felt we could risk it by staying on the Interstate. We drove through Orlando but I needed fuel. I was feeling more confident, so when I sighted a convenient gas station, I pulled off the highway.\n\nIt was a large gas station with eight sets of pumps. After pulling into the furthest pump from the shop, I handed my wallet to Nicole and said: \"You will have to give them some cash to cover the purchase before they will turn on the pump. Put on your hat again. I have a floppy hat I can wear also. Try not to look directly at any cameras.\"\n\nI filled my tank and waited for Nicole. She promptly returned with two more sodas and a selection of candy. As I drove out to rejoin the Interstate, she said: \"Somehow it felt like we were Bonnie and Clyde doing a raid and then making our escape.\"\n\nMy response was: \"You have quite an imagination. I think you must be a romantic. Don't think I didn't notice the similarity between Ramiro and Julie Montague and Romeo and Juliet Montague. Perhaps you should be a fiction writer.\"\n\n\"Am I that obvious? Actually, you are right. I could think of nothing better that being a story writer, however I haven't been able to come up with anything exciting enough.\"\n\nFeeling I had the solution, I offered: \"I have an idea for a story. It's about a couple going scuba diving.\"\n\n\"The story has to have a happy ending and remember I am a romantic.\" I wondered if this statement had a subtle deeper meaning. When Nicole then placed her hand on my thigh, I don't think I had ever felt this happy. She left her hand resting there as we continued.\n\nNicole's little display of intimacy certainly played on my mind... and my body. A couple of times I needed to adjust my seating position due to my hard erection. Of course I also needed to pee, so I started desperately looking for a rest stop.\n\nJust after we joined I95, a warning sign indicate the proximity of a rest stop. I didn't hesitate to exit the highway. We both availed ourselves of the conveniences and were soon back on I95 heading north.\n\nWe hadn't been travelling long when I was alarmed by what I saw in the rear vision mirror: \"Don't turn around. We have a black sedan with a police light bar on the roof sitting behind us.\"\n\nI had of course been keeping under the speed limit in the left hand lane. Consequently most vehicles including semis were just overtaking us. I assumed the sedan must be a Florida Highway Patrol Vehicle as it just sat there less than 100 yards behind us.\n\nIt was a tense few minutes, but thankfully the car pulled out and overtook us. 'State Trooper' was clearly written in tan writing on the black sides of the sedan.\n\nMy relief was shared by Nicole who said: \"I am glad that is over. Your idea of changing plates has saved us again.\"\n\nBy the time we crossed the border into Georgia, it was getting dark. My tiredness was not helped by Nicole's attempt at concealing her yawns. We agreed to look for a hotel at Richmond Hill.\n\nI went for a mid-range comfortable hotel and wanting to avoid attention, I pulled into a carpark away from the entrance. Pulling out my wallet I said: \"I have enough cash for the room, but they may ask for more as security.\"",
        "\"Do you normally carry this much cash with you?\"\n\n\"Not normally, but I had withdrawn the money for an electric guitar I had planned to buy yesterday.\"\n\nNicole then suggested: \"As we cannot use credit cards, the hotel will want to see some valid identity. We can't use your name, but I have my driver's license and other ID. How about you become my husband, Owen Slater?\"\n\nResigned to a new name again, I remarked: \"Your first novel is beginning to sound like a phone book. There will be lots of names.\"\n\nI brought in my two bags to make it look as though we were a legitimately married couple, while Nicole completed the check in. She had also memorized the new vehicle license number. We were soon settled into a nice room, with just a Queen sized bed.\n\nWithout hesitation, Nicole said: \"I will use the bathroom first. See if you can catch anything on the TV news.\"\n\nListening to the TV in the background, I selected some fresh clothes, my razor and toothbrush. Nicole was reasonably quick for a girl. She opened the bathroom door and rushed out. She had a large white bath towel wrapped around her body and had used a smaller towel as a hair turban.\n\nSuddenly in charge, Nicole directed: \"Hop in Owen. I need to go out and have a proper meal tonight.\"\n\nI cleaned my teeth and shaved. The warm shower was a relief. Betty's lukewarm shower water had been unsatisfying after our cold swim.\n\nWith a towel around my waist I opened the door to see a statuesque Nicole waiting for me. She was wearing a red and white wrap mini dress that had a very enticing V neck. Her hair had been combed out, but the beauty in her happy face was stunning. Entranced by her appearance I walked up close to her. Although it was probably just hair shampoo, she also smelt divine.\n\nI wasn't quite speechless as I felt compelled to declare: \"From the moment I first sighted you I was struck by your beauty, however when you smile you look like an angel.\" For me this was quite unexpected speech, but its effectiveness was clear when Nicole hugged me tightly.\n\nJust as quickly she pushed me away and said: \"Get dressed. I will be in the bathroom for two minutes only.\"\n\nI quickly dressed into a pair of long trousers to somewhat match Nicole stylish appearance. As promised, Nicole reappeared after barely two minutes and cheekily pretended she was disappointed that I was dressed.\n\n\"You didn't tell me you had bought that dress.\"\n\n\"A girl has to have some secrets. I might even have another surprise later.\" This left me guessing. I was certainly felling positive with her provocative suggestion.\n\nOn our way out, the receptionist recommended the Pub and Grill for a good feed and relaxing atmosphere. We drove the car and found it just the other side of the Interstate.\n\nThe Pub had a Scottish theme with a huge selection of single malts, whisky and whiskey. I tried to tempt Nicole to try a Glengoyne single malt, but she settled for a Chardonnay. In the end I selected a Magner's Cider.\n\nWe chose a table near a corner and sat adjacently so we could look about. The menu had plenty of American and Scottish fare. Needing something hearty with meat and vegetable, we both chose a Steak and Guinness Stew.\n\nInitially we had remained quiet as we were looking at all the artifacts and other patrons playing darts. I had this urge to try my luck with Nicole. The more I thought about it, my old nervousness crept over me.\n\nI knew she was intelligent, courageous, sensible and easy going. I liked that she hadn't given up at any stage. I had little patience with gushing women, but with Nicole every conversation had a purpose. I felt I could trust her and be best friends. She was absolutely gorgeous... a real 10... way out of my league. How could I be certain that she felt anything more for me than appreciation?\n\nAs the silence extended, Nicole turned to me and said: \"It is nice to feel relaxed again. With you I feel safe. Thanks again Owen.\"\n\n\"It has been quite an adventure. I am glad it has been with you.\"\n\n\"Owen... you are quite extraordinary.\"\n\n\"What do you mean?\"\n\n\"You have been a real hero and a gentleman. I understand that some men find my appearance quite nice, but that often just attracts guys that have tickets on themselves or just want to prove something to their buddies. They are generally pushy and boring and rarely try to have more than a superficial relationship. You are unique. I don't know of many men who wouldn't have tried to take advantage of me last night. Strange as it may seem, although we are running from the police, I have really enjoyed being with you.\"\n\n\"Nicole... I don't know what to say.\" I wanted to say more, but what was appropriate? I wasn't confused about my feelings, so I thought what the heck, just say it. \"In the hotel room, I mentioned your beauty. I meant it, but I wasn't just talking about appearances. I don't have the words of a Casanova. I think you are smart, really brave and great fun to be with. But it is more. I feel as though I could trust you with all my deepest thoughts. I feel as though we have made a connection... and... I was wondering...\"\n\n\"Yes!\" exclaimed Nicole in a decisive manner.\n\n\"What do you mean, yes?\"\n\n\"Yes to anything you want. I want to be friends. I feel secure with you so I don't want us to part. In fact, I want to be more than friends... if you want.\"\n\nI leaned in and we joined with a slow burning kiss. Her lips were soft, moist and pillowy. Her tongue darted out and touched mine sending electricity down my spine. Her lips and breathing were full of passion, but awareness of our locations restrained me from progressing further. We broke and just stared happily at each other. Her eyes confirmed everything I could have ever wanted to hear.\n\nWe were still staring when a waitress brought us our meal. We leaned back while we were served, so I grabbed Nicole's hand to maintain the connection.\n\nOur meal was good, but it probably didn't get the appreciation it deserved. While eating, we enjoyed focusing on each other. I wasn't really conscious of much else, except the slow ache of anticipation.\n\nWe didn't waste any time once we finished our meals. I paid the check, grabbed Nicole's hand and escorted her to the car. We were soon back at our hotel room.\n\nAs soon as the door had closed we embraced and started kissing passionately. Her moist lips were welcoming and her open mouth invited me to explore. The urgency and desperation wasn't just with the kiss. We pressed our bodies as close as possible and my hands frantically touched and rubbed her from head to neck and then all parts of her back.\n\nHer dress was smooth polyester which did nothing to block her body heat which was conducted into me, increasing my excitement. As I ran my hands down her sides, over her hips, I felt like a sculptor molding the Venus De Milo. My hands were about to gather up the hem of her dress when Nicole pushed back from me.\n\n\"Hold on. I have a surprise I want to show you. Sit on the bed,\" she ordered.\n\nAs I couldn't take my eyes from her I shuffled back until I felt the bed against my legs. Almost before I had sat down, Nicole had undone the side tie and a clip of her dress and then let it fall to the floor. Dramatically exposed, her body was decorated by a sexy bra and panty set in scalloped white lace. The bra was so sheer that her nipples were teasingly obvious.\n\nNicole gracefully twirled her body around in a circle and seductively shook her hips. I desperately tried to take in the visual delight; her statuesque gently curved body; her firm barely contained proud breasts; her nicely rounded butt cheeks separated by a scanty thong.\n\nAll I could say was: \"You are so hot!\"\n\n\"Thank you. I thought you deserved a reward.\"\n\nI was happy to study her for a moment. She then walked towards me, stopping in between my spread legs. I automatically wrapped her in my arms and buried my face into her cleavage. At this point I felt no reservations. I was going to ensure this was a night to remember.\n\nThen I realized. \"I don't have any condoms!\"\n\n\"Do I need them? I am on the pill.\"\n\n\"I have always used condoms.\"\n\n\"So have I, so that means we are safe. Besides I want to give myself to you without any reservation.\"\n\nI felt another surge of adrenaline. I needed to make this special for my gorgeous friend.\n\nHer bra barely covered her nipples, so there was little difficulty in unwrapping one of them for my mouth as my fingers tweaked the other. I started with light licks which then become gently sucks. Of course fairness demanded that they be treated equally, so I swapped sides regularly.\n\nMy spare hand gently ran over the soft and smooth skin of her accessible bottom. The feel of frictionless delight continued down her legs.\n\nSomehow she knew my intent as her legs separated just enough to invite my fingers up between her thighs. Expecting the roughness of her lace thong, I was ecstatic to find her crutch was wet and slippery from her juices.\n\n\"Would you now like to properly unwrap your present?\" Nicole seductively teased.\n\n\"There is so little wrapping to undo, but it would be my pleasure.\" Not needing further encouragement, I felt for the fastenings of her bra. I was surprised at the strength I needed to pull the hooks from the eyes, but then the release of tension gave me great satisfaction.\n\nI took my time to cup her breasts which each hand and pull them to my mouth. With a nipple secured by suction, my fingers slid down her hips catching the narrow waistband of her thong. They dropped to her ankles allowing Nicole to step out of them.\n\nAs I looked to Nicole's face she raised an eyebrow as if questioning: \"What now?\"\n\nI held her as I stood and gave her a squeeze before quickly moving around the bed. I grabbed the quilt and as soon as I flicked it over the end of the bed, Nicole lay herself down. I hopped in beside her.\n\nWe embraced quickly and kissed while lying on our sides. While my left arm was under her holding her tightly; my right hand drifted everywhere it could reach. As she raised her top leg over my hip, her exposed crease between her thighs drew the attention of my fingers.\n\nI wouldn't have thought anything could have driven my passion higher, however feeling her wetness really drove my libido into overdrive. I started with two fingers, running them lightly over her outer folds without touching her clit. I then softly massaged the whole area, just teasing her raised ridges leading to her clit. Each touch seemed to be reciprocated by Nicole kissing me even deeper and harder.\n\nMy fingers slid down from her clit to the pool of juice at the entrance to her vagina. Tentatively I probed with just one finger through her tight ring of muscles into her glorious warm cavity. Carefully I drew my fingertip along her upper vaginal wall, alert for her reaction. When I found the spot, I continued the stimulation with a few variations.\n\nI alternated massaging her pussy inside and out, spreading her fluids widely. I could feel her body squirm as I slightly increased the tempo. Nicole broke from a kiss to catch some air and huskily breathed: \"It is my turn to reward you. Just lay back.\"\n\nNicole maneuvered to the foot of the bed, beside my hip, and held my penis with a delicate touch. For some time she just looked, then as she squeezed my erection she smiled towards me. With a ravenous look she said: \"You'll do nicely,\" before bending down and daintily tasting the top of my erection.\n\nI then received a full menu of stimulation. Long licks from the side and below were followed by sucks of just my knob. Her tongue running about the edge of my mushroom head sent flashes of pleasure though out my whole body.\n\nI tried to just lie back and relax. Her tongue and mouth were not like any previous experience. I was in heaven hoping this would last forever. While her caresses were slow, I naively thought maybe I could let this continue, but then she started swallowing more and more of my cock.\n\nMy cock was covered with Nicole's saliva, as she went deeper and the strokes became faster. While her wet lips applied pressure, her tongue swirled and flicked. Her hand that had been holding the base of my cock soon joined in for increased stimulation. As I suddenly thought I was going to blow, I sat up and begged: \"Stop!\" as I gently pushed her back.\n\n\"You can do more of that later, however please lay back so I can pleasure you,\" I begged.\n\nNicole lay back flat and with my guidance, she spread her bent legs with her knees out wide. I positioned myself so I could lie between her legs. As I suspected, she had virtually no public hair. Only a narrow landing strip. I was entranced by her pink inner lips. They were wet and had opened like a new blossom. I gently rubbed the inside of her thighs with the back of my fingers just to feel their softness.\n\nI wanted to make this as enjoyable for Nicole as possible, so I just lightly licked each delightful lip in turn. Her abundant nectar was hard to describe, but it was smooth like a light, syrupy musk. Giving up my intention to tease, I broadened my tongue contact to obtain more of her taste. Most licks were long and just ending above her clit.\n\nWhile I continued with my oral ministrations, I wrapped my arms about her hips and caressed her breasts with my hands. I placed her erect buds between my fingers so I could lightly squeeze them as I wobbled and played with her firm pillows. This feel could only come from natural breasts.\n\nAlthough her body and muscles felt so tight, I was surprised by how much of her lips I could suck gently into my mouth. Her pleasurable groans assured me that this was being well received. I varied this sucking, licking and tongue flicking. As she was now so wet I used my whole face to stimulate the area.\n\nNicole's moans were becoming louder as she slowly thrashed her head from side to side. She arched her back and let out a small cry of pleasure.\n\nFinally it was the tongue flicking across her clit that made her pant. When she started pressing her pelvis to get more contact, I knew I had her close. However, nothing prepared me for her climax. Her thighs closed around my face as she humped against me. I kept licking and sucking as firmly as I could until she pulled away.\n\nShe was still writhing as I kissed across her belly and breasts to her mouth. She broke to take another breath and then said: \"That was so... perfect. I need you in me now.\"\n\nThis was certainly my intent and all I needed to do was slowly press forward against her welcoming vagina. As I slowly plunged onwards the sensation of tightness and lubrication sent tingling sensations up my spine.\n\nOn the second thrust I bottomed out and held so our groins were united. As I was holding my body above her with my arms straight, I could watch her face. Every thrust was reflected back by a wave of pleasurable expressions. I deliberately kept it slow so I could study her features and extend our mutual gratification.\n\nOur bodies adopted a steady natural rhythm with Nicole pulling me with her finger nails along my back. It was experiencing pure bliss that I didn't want to end. Then Nicole reached her head up and starting licking both of my nipples in turn. It was if she had turned off my self-control switch. I felt like a rubber band being stretched. I knew the inevitable would occur if this continued. Desperately I cried: \"Please stop!\"\n\nShe lay back down again, so I dropped my body onto her and placed my face besides hers. This ensured our groins rubbed harder together and allowed me to drive in with more power. I also had the pleasure of her breasts pointing into my chest and her comforting warmth.\n\nNow Nicole seemed to be increasing the pace. This boosted activity soon had us both panting. As she was exhaling next to my ear, I was inhaling our mixed breath though her hair. I didn't care about hair in my mouth as the only thought was to keep going as long as I could.\n\nWith her legs now wrapped around my body, I felt as though we were one. My passion was so strong I was convinced that I loved her and that home was being inside her.\n\nI was now at my limit, so without any control I thrust as deep as I could. Every muscle in my body contracted as I shot my juice into her. Nicole screamed: \"Yes, Yes!\" in climax as we both kept thrusting and shuddering together.\n\nI stayed where I was until the last of the pulses from my cock subsided.\n\nWorried that I was now crushing her, I lifted my body and studied her. She looked back through half-lidded eyes and smiled as though she had just eaten the cat's cream. Leaning against her left leg, she released me and I slid to her side. We adopted our first position facing each other, side by side. As we kissed, Nicole's once again positioned her leg over my hip. Her pussy was close to me, so I pulled her hip down so I could feel our love juices flow onto my skin.\n\n\"Oh...that was fantastic,\" sighed Nicole.\n\nFeeling exhilarated, I replied: \"You are absolutely gorgeous. I have never felt anything like this before. I feel so alive and happy.\"\n\nSoon I again became mesmerized by her breasts, so I cuddled while I suckled and paid them suitable homage.\n\n\"Oh that is nice. You keep giving me reasons to want to be with you.\"\n\nI kept rubbing her skin down her back, over her hip and along her leg, while I shared my kisses with her lips and chest. At the same time, Nicole was lightly stroking my cock.\n\n\"Hey, you are stiff. Would you be ready to go again?\"\n\n\"Sure... would you like to ride me?\"\n\nNicole knelt and straddled over me. While holding my cock, she slowly lowered herself until I was fully sheathed. Sitting on me she leant forward and supported herself with her hands on my chest. She raised herself up slowly and then just dropped. She continued and adjusted herself, presumably so I would hit that sweet spot.\n\nHer eyes glazed over in concentration as she steadily increased the pace. Initially I had held onto her hips, but her swaying breasts attracted my attention. I squeezed them both while gently pinching her cherry sized nipples between my fingers.\n\nHer pace was now moderately fast and as she dropped onto me I met her with a thrust. Suddenly she adopted more of a jockey position and quickly drove her pussy up and down as if racing to the finish. She was perspiring and working hard until she groaned out her pleasure and finally dropped her body onto me.\n\nHer eyes were closed as she lay down and crushed her breasts into my chest. I wrapped her in my arms and pulled her firmly against me. He face was next to my ear which amplified her desperate inhalation of air. Although I hadn't cum this time, I had a great sense of intimacy and comfort.\n\nMy cock was still stiff inside her warm tight hole. Almost without thought, I pumped my cock inside her and was delighted when she squeezed me in return. Almost like passing Morse code, we continued sending messages with our pelvic muscles to each other.\n\nHowever it was still a surprise when Nicole whispered back: \"Was that an SOS?\"\n\nCheekily I said: \"Yes... Some Other Sex.\"\n\n\"I think I might be able to manage it. How do you want me?\"\n\n\"Well... how about doggy style?\"\n\n\"I like it.\" Nicole sat up and climbed off me. She then adopted the kneeling, arm supported position as I knelt behind her. I then noticed that the sheet below us was covered in large wet patches. I didn't care about the washing as I reveled in the fact we had produced so much juice.\n\nShe started feeling for my cock, but I didn't need guidance. Holding onto her hips I thrust deeply inside her. My knees were inside her spread legs, so I could feel along her thighs to her soft bottom pressed against my groin. I remained upright and pumped into her as I pulled back on her hips.\n\nNicole looked back at me and gave me a wanton smile. While I paced myself, I appreciated her womanly curves. Her breasts were tantalizingly swinging below her, so I leant forward and while holding myself with one hand on the bed, I caressed each firm cone in turn.",
        "Sensations in my groin warned me as the tension began to build. I needed a release so I drove into her body harder. Holding her hips again firmly, I arched back and thrust so fast that our skin slapped loudly. I just pumped faster and faster seeking the relief of my climax. I stretched back and held her against me. With my cock deep inside, I held her until the waves of pleasure gradually subsided.\n\nNow quite tired, I delicately withdrew. I retained hold of her soft body and pulled her down with me so that we lay together in the spoon position. We were both radiating heat and sweat, but never had I cuddled such a delightful body. I felt as if I could never let her go.\n\nI mumbled a few words of gratitude, but I was soon asleep.\n\nI had slept soundly and it was only the warmth of a mouth on my morning erection the finally woke me. I didn't bother opening my eyes as I feared it would wake me from a beautiful dream. Nicole was using all her oral talents at once. It was full intensity from the moment I was conscious.\n\nI remember gallantly mumbling words to the effect that I would be happy to enter her to share the pleasure, but this was ignored. As my excitement grew I reached out to hold her, placing my hand on her leg.\n\nMy whole body became rigid and I uncontrollably arched upwards, shooting my seed deep into her mouth. I could feel Nicole's mouth clamp about my cock and then several swallows. I was a little worried that I hadn't warned her, but I still basked with utter satisfaction.\n\nOf course Nicole lay back down beside me and made sure she gave me a sticky kiss with lots of tongue.\n\nAfter my composure returned, I said: \"I would have been happy to cum inside you if you had wanted it.\"\n\n\"That is alright. I hope we can do that tonight. I didn't really need your cum dripping out of me all day. I was wet most of yesterday and that was bad enough.\"\n\nAs we still had a considerable drive ahead of us, we soon rolled out of bed to get ready. This time there was no false modesty as we both used the bathroom at the same time. I did however, still sneak peaks at Nicole showering while I tried to focus on my shave.\n\nWe decided it was best to have a proper breakfast. It was while we were eating that we agreed on what we would do next.\n\nBefore returning to our room, we negotiated with the receptionist for use of the phone. This requirement meant I had to give her more cash as a deposit to cover the calls.\n\nWe determined that if Nicole had been identified, the police may be monitoring the newspaper's phone lines including her boss's cell phone. The solution was that she was going to phone a friend of hers who happened to live three doors away from Frank's home. It was Saturday morning, so we hoped they had not yet gone out.\n\nWhen the phone was answered she commenced with: \"Maggie, this is Nicole.\"\n\nOnce acknowledged, she continued: \"I can't explain in detail at the moment, but I urgently need your help.\" After listening she continued: \"I can't say where I am, however I need you to go to Frank Meadows' house and give him your cell phone. People may be listening to the newspaper's phone lines. Are you dressed?\" After a response she said: \"I will call on this number again in five minutes. Have you got that?... Fine... bye.\"\n\nFive minutes later Nicole phoned again. I was relieved when I heard that Frank answered. \"Frank, we need your help. Before I explain what happened, I have been able to verify the claim made by the whistle blower, Wendy. I can prove that $10.5 million from the Florida Environment Coalition account of the Tampa Regional Bank was used for the purchase of 115 acres now held in the name of Walt Affleck's family trust. I also have photos of Silverson Development Group's plans to turn that same land into a tourist resort.\"\n\nI couldn't hear what Frank said in reply, but Nicole soon continued: \"That is not the problem Frank. Affleck's cousin, Hank Affleck, runs a scuba dive operation. I thought I would talk to him during the dive, but he had an associate try to drown me and then they abandoned myself and a friend five miles from shore. A radio station news broadcast said that we failed to surface and in a later broadcast it said police were searching for my friend, Owen Chandler in relation to the loss of the divers.\"\n\nFrom what I could overhear it was obvious that Frank already knew that police were seeking us. Nicole continued \"I already know that Walt's brother is the Sherriff. After we swam to shore and recovered, the Sherriff had his police searching my accommodation. We decided it wouldn't be wise to hand ourselves into the Florida Police. Owen has a plan. I will put him on to explain.\"\n\n\"Hello Mister Meadows, I'm Owen Chandler.\"\n\nIn reply I heard: \"Call me Frank. How did you get mixed up in this?\"\n\n\"Frank... well I was also on the dive. A woman called Connie had turned off Nicole's air supply and then refused to share any of her own air. I noticed the trouble and went to assist. I gave her my regulator and by the time we carefully ascended, the other four people and the dive boat had disappeared.\"\n\n\"Nicole said that you had a plan.\"\n\n\"Yes, I have a good friend that works for the Fairfax County Police Department. He is Lieutenant Roger O'Brien and works from the West Springfield District Station. My plan is to hand ourselves into him this evening.\"\n\n\"Well I should be there also. I have more information now, as I know the true identity of this Wendy. Do you have the phone number for this Lieutenant Roger O'Brien?\"\n\n\"I will give you his cell number, but I would prefer it if you would give him an hour to call you first. We are being careful with what phones we use, so can you keep Maggie's cell until Roger calls. We are out of Florida now but I don't want to be intercepted on the way.\"\n\n\"When do you think you will be at the West Springfield Police Station?\"\n\n\"Somewhere between 6 and 7pm.\"\n\nI passed on Roger's phone number and ended the call. I immediately dialed Roger. I was so relieved that I had memorize his number.\n\n\"Hello, Roger O'Brien speaking.\"\n\n\"Roger, it is Owen Chandler.\"\n\n\"I was just reading a bulletin about you Owen. Florida Police are looking for you. What did you do?\"\n\n\"Nothing illegal Roger. I survived when some people tried to drown me on a scuba dive. I am with a Nicole Slater. I don't know what information you have, but she was using the name Monique Fontaine. She is an investigative journalist looking into fraud committed by Congressman Walt Affleck. I won't go over those details now, but we were on a scuba dive conducted by Hank Affleck of Hank's Scenic Diving. We were diving off the Gulf coast in Florida and were deliberately left behind to drown. The other problem is that the Congressman's brother is the County Sherriff. We believe they are all implicated, so we have little faith that we will be treated fairly in Florida.\"\n\nAs I paused in my story, Roger explained: \"After I read the bulletin I checked the license plate database. Your name is not listed; however your car make and number have been listed as stolen. In Virginia, most police have automated license plate scanners. So if you are still driving your car you will probably be detected. Perhaps I should pick you up?\"\n\n\"Well my plan is to hand ourselves into you Roger, but we are not near you at the moment. We left Florida, but I hope to arrive at your location in West Springfield between 6 and 7pm.\"\n\n\"Are you sure you just want me to wait for you?\"\n\n\"Yes. You can't help me until I am in your jurisdiction. I still have my cell phone. I will immediately call you if I am pulled over.\"\n\n\"OK Owen. You are lucky I owe you a favor... or two. I will plan for a long night.\"\n\n\"There is one thing you can do for me now. Please call Frank Meadows on 410-247-8873. He is an editor for Nicole's newspaper. I understand that he has more evidence in relation to the Congressman. He said he would met us and will be expecting your call.\"\n\n\"Fine... I will do that.\"\n\n\"I won't be turning on my cell phone unless police stop us, so you won't be able to call us back. I need to hang up now or we will never make it there tonight.\"\n\nWhen Nicole and I settled up with the hotel and returned to my car, the first thing I did was retrieve my cell phone. I gave her Roger's number.\n\nWe refueled at the local gas station and rejoined I95 North.\n\nIt would be another nine hours of driving with only stops for fuel and food. We started with the radio turned on to determine if we would be mentioned here in Georgia. We flicked between stations but we picked up nothing. It was after we had heard the latest pop song repeated several times that we turned the volume down so we could talk.\n\nNicole apologized again as she still felt bad that I had been compromised by her investigation. Obviously going home was not going to solve the problem. We discussed what may happen when we reach the West Springfield District Station. She was confident that Frank would be able to help with a solution. He was highly influential and had made many useful contacts over the years.\n\nEventually conversation drifted to our backgrounds and history. I wanted to know all about Nicole and strangely I wanted her to know everything important about me. Even though I knew it was early days I was thinking that maybe she was the one.\n\nWe took it in turns, starting with parents and siblings, then through schooling and employment to the present day. I listened as she explained how she started in journalism but really wanted to be an author. I explained about George's metal fabrication business and how I had been developing a number of policies with a focus on quality control and a formalized training programs. While I was now being employed increasingly in management, my background was as structural engineer specializing in steel design and construction.\n\nOf course I drove carefully but as often as I could, I relished looking at Nicole. She was wearing a bra today, but the seatbelt crossing perfectly between her breasts, just emphasized their symmetry.\n\nWe sighted several police cars. Each time Nicole held the cell phone ready to turn it on. Fortunately we were not troubled.\n\nHaving covered our outline histories, questions became more philosophical. There was some testing of each other's opinions. I was amazed at how open I had become. I had never revealed this much to another person, let alone an attractive woman. It was Nicole who then started probing my deepest private thoughts.\n\n\"What would you look for in marriage, Owen?\"\n\n\"I don't think I have ever spoken about this aloud before. Remember I can't claim to be romantic, so I will just give you points as they come to mind.\n\n\"It is probably better to hear your unprepared thoughts. I don't want to hear a politician's speech,\" Nicole explained.\n\n\"I want a partner for life. Someone to share our joy, our hopes, our successes, our family and our lives. It also means sharing disappointments, but I believe the sharing should lessen the hurt. This means we must trust each other implicitly with our secrets, thoughts and actions. I want someone that also holds similar values, such as integrity and wanting to do the right thing.\"\n\n\"So, does you partner have to like the same things as you?\"\n\n\"It would be nice for us to have some common interests, but we should also respect that we can enjoy different pursuits. It is probably best if we have similar ideas on how we wish to raise a family, but different opinions should provide stimulation in conversation, not conflict. My parents have said that a good marriage requires good communication and tolerance... lots of tolerance.\"\n\n\"You didn't mention anything about the importance of your partner's appearance.\"\n\n\"While her appearance may have contributed to initial attraction, it is not key in making a lasting marriage.\" My facetious side then took over. I knew I must be wearing a shit-eating grin when I said: \"It would definitely help if she was a nymphomaniac!\"\n\n\"Well as a future romantic novelist I don't know if my heroine is a nympho, but you are sounding just like my best fantasy.\"\n\n\"That doesn't sound like much of a fantasy. I cheekily added: A fantasy should be at least R rated.\"\n\n\"Well the hero is tall, dark and handsome. He is considerate and remains cool when danger threatens. Of course, he is also honest, trustworthy and reliable. So what would be your fantasy?\"\n\n\"Well Monique was my fantasy, but I think Fiona is more my future.\"\n\n\"So what happened in your fantasy with Monique?\"\n\n\"Now I recall my early fantasies with Monique, they seem pretty tame. It certainly wasn't nearly as lascivious as last night with Nicole.\"\n\nNicole leant over to me and held my right arm and said: \"That's good. I don't need any competition.\"\n\nBy the time I turned off I95. It was getting dark. This was ideal as I wanted to reattach my own license plates. I didn't want some overzealous policeman trying to charge me for stealing plates. As we were close to Washington DC, this area was quite built up with houses. I needed somewhere I would not be observed.\n\nI then noticed a sign for a community swimming pool and thought this may be suitable. I diverted off the route only half a mile and found the pool had a carpark surrounded by large trees. I doubted there would be cameras, so I pulled in and quickly did the swap. I then disposed of the Florida plates under sheets of plastic inside a rubbish dumpster. I was soon back on the route.\n\nWhen I drove up to the front of the police station, Roger was outside waiting for me. He directed me into a police car space and then Nicole and I followed him. He led us to a conference room where three other men, all wearing suits, were waiting.\n\nNicole was warmly greeted by a middle aged gentleman. I gathered he was Frank Meadows. As Nicole introduced me we shook hands. Then the other two were introduced. They were Senior Special Agent Munroe and Special Agent Lopez from the Public Corruption and Civil Rights Section of the FBI Criminal Investigative Division. It had appeared as though Frank had pulled in some favors during the day.\n\nFrank brought us up to date that the whistleblower, Wendy, had been identified as working on the Congressman's personal staff as an Office Manager. She had been convinced to come forward and had already made a statement to the FBI this afternoon.\n\nSenior Special Agent Munroe then took over. \"I will be taking formal statements from you both later, but I need an overview now. I have heard the allegations made by Wendy. What corroboration do you have?\"\n\nI let Nicole start with the details of her investigation. As she proceeded she presented the bank receipt and showed the digital copies she was able to display on a computer from her flash drive.\n\nI had heard it all before, however I was listening for anything she may have forgotten. I don't know whether it was due to her training as a journalist, but she impressed me with her concise and clear narrative. I couldn't think of anything she had left out.\n\n\"My responsibilities in the Bureau focus on official corruption; however you two have also stirred a bit of a hornets nest.\" Looking directly at me Monroe continued: \"According to Florida Police, you are wanted in relation to the drowning of a Monique Fontaine.\"\n\n\"That's me,\" interrupted Nicole. It's an alias that Frank established for me while I was investigating. Here see these letters of introduction.\"\n\n\"Well that explains the name, but what is this scuba diving incident? Why is this anything more than just an accident?\"\n\nI took the opportunity to explain. \"Firstly, just before we departed for the boat, Hank, the owner of Hank's Scenic Diving, didn't want to take me on the dive. Fiona told me he is also the cousin of the Congressman. Hank gave no reason for not wanting to take me, but as I had paid the previous day and had filled the air tanks for the dive, he reluctantly changed his mind. I believe he thought it would appear suspicious otherwise. In hindsight it is now obvious why he tried to separate us on the dive.\"\n\n\"How did they do that?\"\n\n\"We thought we would be diving buddies, but Connie the dive master directed Nicole to go with her while I was to go with Calvin who is Hank's son, and Trevor who also works for Hank. You could argue they may have had a legitimate reason for us not to be dive buddies, but we were also directed to dive on different parts of the wreck. I suspect the reason was they didn't want me to witness Nicole's planned drowning. I only noticed the incident due to Nicole's blue wetsuit and the sudden appearance of the sun.\"\n\n\"What did you see?\" Munroe enquired.\n\n\"Initially it appeared as though they were fighting. Nicole was reaching out; in hindsight I now know it was for a regulator, while Connie was kicking with her feet and fins trying to get away. I approached from behind Connie so I don't think she saw me, as she headed to the surface a little more rapidly than I would think was sensible. I provided Nicole my regulator so she had air. I was able to check her tank and found the J valve had been turned up, effectively cutting off her last reserve of air. I clearly remember that it was in the down position when she entered the water.\"\n\nNicole then explained what had happened at the last pressure gauge check conducted by Connie and that it was obviously then that the J valve had been changed.\n\nI continued: \"After Nicole took a minute to recover we came to the surface at a safe rate and waited three minutes at 15 feet. This is normal practice and had also been directed by Connie. When we surfaced there was no boat to be seen. We should have been within 20 yards of the boat. It was a quite a large boat with a wheel house that would have been easily seen for hundreds of yards.\"\n\nWe briefly covered the rest of the details of the swim, staying with Betty, seeing the Sherriff's vehicles outside the bungalows and hearing they were searching Nicole's room. I was glad they had little interest in how we found my car and drove to Virginia.\n\nNicole and I were then sent to different rooms where we gave formal statements. Fortunately they had a transcriber so typing, checking and signing was performed faster that if I had started writing my own statement.\n\nWhen we resumed in the conference room, Munroe outlined what would happen now. \"As this case now involves more than fraud, I will be involving other teams. As there is attempted murder, official and possibly police corruption, the FBI will need to probe more deeply. I will need to discuss this case with my bosses, but I would anticipate it will take up to a week to get several teams prepared. In order that no evidence is destroyed we need to undertake simultaneous raids on the offices and home of Congressman Walt Affleck, similarly his brother the Sherriff, and Hank and his team. We will then present search warrants on the land titles office, bank and developers to verify Nicole's evidence.\n\nNow in a quieter voice directed to Nicole and myself, Munroe said: \"We want you out of the way and safe during this period.\"\n\n\"Will we be safe after you have made arrests?\" Nicole enquired.\n\n\"Safe is a relative term. You will be safer, but the Congressman will certainly remain free and we have little that would justify detaining his brother at this stage. Even the other four could make bail.\"\n\nSounding a little disheartened, she asked: \"How do we keep safe?\"\n\nFrank now took the lead. \"I have already discussed with Senior Special Agent Munroe. We want you out of the limelight where only he knows where you are. I am happy to pay for flights and nice accommodation where you can write up your story, Nicole. I will acquire a new cell phone, laptop and email accounts, so I can keep you up to date with any developments.\"\n\nAt this stage I had no idea what I would do, so I felt like hugging Nicole when she said: \"What about Owen? He can't go home or resume his work. He has already saved my life and none of this is his fault.\"",
        "My confidence took a dip when I saw how uncertain Frank now looked. \"Well?\" Turning to Munroe he continued: \"What do you suggest?\"\n\n\"I don't normally have a budget for witness protection in corruption cases as they generally don't involve attempted murder. I will have to see what we can do, but the lawyers will need to decide on jurisdiction and whether the attempted murder is related to the corruption or a Florida crime. That will take time.\"\n\n\"Well I am not going anywhere without Owen, Nicole declared. \"He is the only reason I am alive and I won't feel safe if he is not with me. It should be cheaper if we hold up together rather than separately. We just need a second air fare.\"\n\nNicole turned to me as if seeking my endorsement. I smiled back and held her hand.\n\n\"OK... I will have the Bureau book and pay for the flights. We will also book the accommodation, which Frank has agreed to pay for.\" Monroe looked to Frank for confirmation.\n\n\"I know of a quiet place where I have always wanted to visit. Can I suggest that to you? Nicole hopefully offered.\n\n\"We will review the location and facility, but as long as it is not likely to attract attention and you maintain security of the identity we give you, there should be no problems. Remember you can't use your old cell phones, bank accounts or credit cards.\"\n\n\"I will tell you the place privately Senior Special... Agent Monroe,\" Nicole stumbled finally completing his full title.\"\n\n\"Pete will do.\"\n\n\"Thank you Pete,\" Nicole acknowledged.\n\nI was happy to disappear into hiding for a period, but then I wondered about George and my parents. \"Do my parents think I have committed a crime? What about Nicole's parents? Do they think she is dead?\"\n\nPete Monroe continued: \"Owen, you indicted that your name was broadcast on the radio in Florida. The news services up here did briefly mention a diving incident, but I don't think that your names were mentioned. By rights the Florida Police should pass on details to victims' next of kin through the local Police. That is if you are suspected of being deceased; however I don't know if they have properly identified you, Nicole. Did you use your true address when you checked into accommodation in Florida?\"\n\n\"No, everything about Monique Fontaine was fictional.\"\n\n\"Well it would only cause suspicion if the Bureau or local Police started visiting your parents Nicole,\" Monroe explained. \"I suggest that Frank make a visit and determine what they know. You will need to brief them to act as though she is really dead if some authority informs them.\"\n\n\"I can do that,\" Frank confirmed.\n\nMonroe continued: \"Roger, you know Owen's parents. Perhaps you can discreetly visit and warn them about how they should behave if they are contacted.\"\n\n\"Could George be told also,\" I asked. \"It doesn't have to be right away as I am meant to be on leave for another week, but if our isolation continues longer, he may have some work I could undertake remotely.\"\n\n\"Monday is my day off. I will wear plainclothes and see them then,\" Roger explained.\n\nMonroe then said: \"We will put you in a hotel in Fairfax for tonight and probably tomorrow as well. I want you to remain in your rooms and use room service. Special Agent Lopez or I will let you know timings for your flight. I will send someone to take you to Dulles airport and ensure you have no trouble getting on the aircraft with the new IDs we'll prepare for you.\n\n\"If we are to stay in our room, can I call Maggie to get me some clothing and some women's personal items?\" Nicole enquired.\n\n\"Who is Maggie?\" Monroe asked.\n\n\"She is a friend. I used her cell phone to contact Frank, so she knows I am alive. I will tell her to keep quiet.\"\n\nFrank then stated: \"She has her cell phone back, so if she gets some items, I will bring them to you tomorrow if Pete doesn't mind.\"\n\nMonroe then firmly stated: \"Maggie can't go to your home. That would suggest you are alive. She can give you some of her items or make purchases. Frank if you bring the items to this station by 4pm tomorrow, I will have them taken to Nicole at the hotel.\"\n\n\"I will also include a laptop and a new cell phone with contact details to be used,\" Frank added.\n\nFrank then passed Nicole a piece of paper and pointed out: \"Here is a written authority to use this company credit card. The company name on the card is Aquila Holdings which will mean nothing if they undertake a search. I will get you to sign this form to provide a sample signature for the bank. It should be ready for use some time Monday. The PIN is on this paper.\"\n\n\"Agent Monroe... what name do you want me to use on this bank form as you will want the same name for the bookings and IDs?\"\n\nMonroe's response was: \"What would you like to use?\"\n\n\"How about Camille Bellamy. That means you should be Errol Bellamy... Owen?\"\n\nRealizing that a romantic Nicole would get her way, I accepted the inevitable saying: \"As long as you are thinking I am like Errol Flynn.\"\n\nNicole laughed back at me as we shared a private communication of affection that no one else quite understood.\n\nJust before we left, Roger quietly cornered me and asked: \"How did you get here when every police officer was looking for your car?\"\n\nI gave him a smile and then seriously said: \"It is best I tell you another day over a beer. I wouldn't want you to feel compromised about information you don't really need to know.\"\n\nWith all the administrative aspects addressed and Nicole making her call to Maggie, we were soon delivered to a hotel in Fairfax by Special Agent Lopez. He escorted us to a room, but when he left I felt a relief that we were on our own again.\n\nWithout delay, I gave Nicole a warm hug and kiss. I continued holding her around the waist and I just enjoyed watching her happy face. With our eyes locked, I asked: \"I thought you did very well briefing the FBI. Are you happier now?\"\n\n\"Thank you and yes; it certainly is a bit of a relief. Frank has told me to enjoy myself, but he expects me to work.\"\n\n\"What location did you suggest to Pete Monroe?\"\n\n\"There is a nice resort in Monterey that a girlfriend stayed at on her honeymoon. It sounded superb, but who knows if we can get in at short notice. Pete said it would be alright to go to the beach and shops there, but we should be discreet whenever possible.\"\n\nAs it was now late, we were lucky that we could get sandwiches delivered to the room. After this we showered and prepared for bed.\n\nNicole slid under the sheet naked and then cuddled up to me. There was something about the intimacy that was different. I felt that she needed my arms about her for security. She noticeably relaxed once we were cocooned together.\n\nWith our faces together we swapped soft kisses. This meant more than the wild passion we experienced the previous night. I ran my hand gently over her back, down over her hip and thigh. I still wondered how her skin could be so smooth.\n\nIt was for several minutes that this sensual feeling continued, but even as I tried to relax, my penis poked into her belly. Nicole then started rubbing the hair on my chest. Each brush with her hand stimulated my nipples which were soon ultra-sensitive. I had been enjoying our loving caresses, but now my body was making demands I found hard to ignore.\n\nMy fingers probed between her thighs and the cheeks of her bottom. Her delicate fold of skin were moist and slippery. Her excitement was like a rallying call telling me to pleasure her. I started sliding down the bed to kiss her all over and then give her some oral, but she held me.\n\n\"Just make love and ride me slowly,\" was her simple request. Always surprised at my good fortune, I was of course eager to please. I lay between her opened legs and held my body on outstretch arms above her. I slowly probed forward as Nicole guided me into her slippery tight vagina. I rocked in and out slowly, increasing my depth over three strokes. Fully seated inside her exquisite tightness, we shared adoring looks.\n\nI rode slowly. While it was a delightful sensation for my penis, my brain was telling me I was in seventh heaven. I knew that Nicole was everything I ever wanted. Not only was she gorgeous, she was intelligent, sensible, shared my values and amazingly, she cared about me.\n\nAs Nicole's panted and looked up at me through partially closed eyes with a look of desperation, I felt she was also reflecting my own adoration. We had now built up the pace from mere pleasure to that of desperate need. My body tensed and just as I felt the inevitable explosion, Nicole shuddered and moaned beneath me. I was close behind her, but I knew I wanted to fill her with more than my seed. I needed to fill her with my love.\n\nOnce my last spasms had subsided, I carefully lowered my weakened body upon hers. With my face once again buried into her hair, I felt I was breathing in her essence. Feeling slightly recovered I pressed up my body while keeping my cock inside her to view her satisfied smile.\n\nI knew it was risky, but I couldn't contain my thoughts inside me any longer. I needed her to know how I felt: \"Nicole, this may seem inappropriately premature, but I have to tell you. I think I love you. You are everything I could hope for. I just wanted you to know as... I just needed to say it.\"\n\nHer face glowed with pleasure as she then pulled me down for a long sensuous kiss. As she broke our kiss her feelings were confirmed with: \"I love you too.\"\n\n---------------------------\n\nThe next installment of this story is continued in 'An Irresistible Temptation Ch. 02' located in Group Sex."
    ],
    "authorname": "Greg15",
    "tags": [
        "holiday",
        "scuba diving",
        "adventure",
        "brunette",
        "romance",
        "police",
        "doggy style",
        "oral",
        "blow job"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/an-irresistible-temptation-ch-01"
}