{
    "title": "Run Over",
    "pages": [
        "Run Over\n\nFargo, North Dakota. Mid-January\u20145pm.\n\n\"Hey Dad?\"\n\n\"Uh huh?\"\n\n\"I'm gonna go over to the clinic for a couple of hours.\"\n\n\"Isn't it closing soon?\"\n\n\"Yeah, but I can get more work done after Doctor Collins leaves, so this makes sense.\"\n\n\"You gonna be back for dinner?\"\n\n\"Probably not.\"\n\n\"Okay. I'll just throw something in the microwave and you can fend for yourself.\"\n\n\"Sounds good, Dad. I'll be back by eight at the latest.\"\n\nHis son grabbed his heavy coat, and as much as his dad tried not to say anything, it just sort of came out.\n\n\"Alex? I know you're devoted to becoming a vet, but shouldn't a healthy 25-year old guy be spending time with a young lady instead of cats and dogs?\"\n\nHis son didn't get upset anymore. The breakup had been nearly a year ago, and he knew it was high time to, as they say, get back in the ball game. But his dad was right. His sole focus at this point was graduating from veterinary college and coming back to Sandy Paws Animal Clinic as Dr. Collins's partner rather than her apprentice.\n\n\"Tell you what, Dad. When you start dating again, I'll go out with you and your girl. Deal?\"\n\nMichael McDonald's wife left him nearly six years ago right after Alex graduated from high school. He was now 58 years old and hadn't been on a single date, and because the experience left him so bitter, he didn't care if he never got close to another woman. And as long as Alex was still living at home with him, even if he was gone almost all the time between school and work, he just didn't see where he needed anyone else.\n\nHe stood there and looked at his son then started smiling before he said, \"Okay. You win.\"\n\nAlex laughed then walked over and gave his dad a hug and smiled.\n\n\"You know I'm right.\"\n\n\"Yeah, yeah. Go see your damn cats!\"\n\n\"I won't be too late, Dad. I promise.\"\n\n\"I've heard that before!\" his father called out as his son opened the door letting in a blast of frigid air.\n\n*****\n\nSame day\u20145pm. Fargo National Cemetery.\n\nHe shivered as the cold seeped into his bones in spite of the fur hat, coat, scarf and gloves. He'd stood there for a good ten minutes, but this was about all he could take.\n\n\"Leece? You stay as long as you like, but I gotta go warm up, okay?\"\n\nHis sister was staring at the headstone, and he wasn't sure she'd heard him. He was going to repeat himself when she finally looked at him.\n\n\"Sure. I'll be right there. I just need another minute or two. Is that okay?\"\n\n\"Of course it is,\" her brother replied as he tried to keep his teeth from chattering.\n\nIt was not only very cold, the sky was low and dark and looked ominous. More snow was coming soon, and while there was nothing he could do about that, he could get out of the cold.\n\nBy the time his sister got in the car with him, the heater was blowing warm air.\n\n\"Sorry. I didn't mean to stay that long,\" she said after closing the door.\n\nHer brother looked at her and wondered if she was even aware of how cold it was outside, but he knew how much she'd loved him, and on the third anniversary of his passing, there was no doubt she was deep in thought.\n\n\"It's fine. Really,\" he told her before gently reminding her to put her seatbelt on.\n\nNeither of them spoke on the ride home, but there wasn't really anything to be said. They'd said it all before many times before, and nothing was going to bring him back.\n\nLisa Blackman was 36 years old and had lost her husband, Joe, to pneumonia, of all things, when he was just 35. It was rare, but as they learned, it did happen. Her older brother, Ed Halstead, had just turned 41 and did his best to be there for his little sister who was finally coming out of the dark haze that had surrounded her since Joe's death.\n\nToday was an exception, and Ed realized that this would most likely always be a solemn day for Lisa as long as she lived. Even so, he hoped with all his heart that she'd find someone else and maybe even be as happy as she'd once been.\n\n\"Isn't it supposed to snow more today?\" she asked, finally breaking the silence.\n\n\"That's what they said on the weather this morning.\"\n\n\"It looks...terrible out there.\"\n\n\"You need to get home and get inside before the next wave hits,\" Ed told her.\n\n\"I will. I'll go straight home as soon as we get back to your place,\" Lisa promised.\n\nThe first heavy, fat flakes were falling just as they pulled up to her car in Ed's driveway.\n\n\"Thank you, big brother,\" Lisa said as they sat there, the car still idling.\n\n\"I'm always here for you, Leece. You know that.\"\n\n\"Yes I do, and you know how much that means to me.\"\n\n\"You better go. Just be careful, okay?\"\n\n\"Always,\" she promised.\n\nThey'd both been born and raised in Fargo, so winter was no big deal to them. Even so, it still presented challenges, and one of them was driving in snow, something Lisa hated to do. She did it on a routine basis, but the older she got the more she dreaded it.\n\nIt took nearly ten minutes for the windshield to clear enough to let her see out of the front window. By the time she could safely drive, the back window had defrosted and she was able to see well enough out of either side so she put the car in reverse and carefully backed out onto the road.\n\nDark, dirty snow was piled high on both sides of the road from the snowplows that kept the streets as clear as possible during the winter, and another small layer had already formed as she drove along at around 15mph in order to be able to stop if need be.\n\nShe made a right turn at the end of the street then drove four blocks before making a left at a light. Seven blocks later she made another right and breathed a sigh of relief now that she was less than a mile from home. Still being very cautious, Lisa upped her speed to nearly 25 in the 35mph zone and focused on staying in her lane as cars slowly passed her from the opposite direction. Everyone had their lights on, and that caused a glare she had to deal with on top of the icy road.\n\nHer phone buzzed indicating an incoming text. Were it a call, Bluetooth would have sent it to the car's audio system. But it didn't handle texts, so she took a quick look at her phone to see who it was from. It was a reminder from Ed, but she already knew about it, so after just a quick glance, she looked back at the road.\n\nIt took her brain a second to comprehend what it was seeing, and in just that short amount of time, she knew it was too late. Even so, she stepped on the brake and prayed she'd miss it without sliding into oncoming traffic. The top of the dog disappeared under her hood as she closed her eyes and said, \"No, no, no!\" just before the 'bump' followed by a howl of pain.\n\n\"Oh my God, oh my God, oh my God!\" she repeated as the car finally came to a stop.\n\nWithout even checking the rearview mirror, Lisa jumped out and ran to the animal that was laying in the road, whimpering and crying.\n\n\"I am SO sorry!\" she said as though the dog could understand her.\n\nShe saw the left rear leg and realized it was hurt. A man about her age who wasn't all that far behind her stopped and got out to help.\n\n\"What can I do?\" he asked as he walked up.\n\n\"I...I don't know. I didn't even see it. I was just driving along and then....\"\n\n\"It's not your fault,\" the man told her. \"But if we don't get her inside, she'll freeze to death.\"\n\nLisa's mind was racing, but she was still able to think.\n\n\"There's a vet's office just two blocks from here. Can you help me get him in the car?\"\n\n\"Sure,\" the man said. \"If she doesn't bite me.\"\n\nHe had some heavy-duty gloves on, and in spite of the snarl and the snapping, the man carefully scooped up the dog and said, \"Can you go open the door?\"\n\nLisa carefully made her way back to the car, opened the rear door, then stepped aside as the man lay the wounded animal in the backseat.\n\n\"Do you think it's broken?\" Lisa asked with genuine concern.\n\n\"I don't know, but doesn't look good.\"\n\n\"Okay, I'll take it from here. Thank you so much!\"\n\n\"You need me to follow you?\"\n\n\"Um...no thanks. I should be okay,\" Lisa told him.\n\nHe was a good-looking man, and she noticed the way he was looking at her. He was almost certainly a decent guy, but she just didn't want to deal with the possibility of him asking her out or trying to get her number.\n\nWhat she didn't know for sure but believed was true. The man found her very attractive, and were he to learn she was single, he would have most definitely done exactly what she was thinking.\n\n\"You sure? It's really nasty out here,\" he said.\n\nA car behind them honked, and Lisa knew she needed to get moving.\n\n\"Yes. I'm sure. But thank you again!\"\n\nShe got in, and before she could put it back in gear the whimpering behind her tore her apart.\n\n\"I'm so sorry, buddy!\" Lisa said as she made her way to the next stop sign so she could turn toward the vet's office.\n\nThe dog's crying made the three-minute drive seem like three hours as she pulled into the the clinic's small lot. She could see a light on inside so she unbuckled her seatbelt and told the dog she'd be right back. But when she got to the door, she saw the closed sign and looked at her watch. It was ten minutes after five, and 5 o'clock was when the clinic closed on Saturdays.\n\n\"No!\" she called out as she tried looking inside.\n\nOut of desperation, she started banging on the glass door and calling out for help. When no one came, she was at wits end and had no idea what to do. She banged several more times and yelled again then gave up.\n\nShe turned around and headed back to the car just as she heard a voice call, \"Can I help you?\"\n\nLisa spun around and saw the person who asked the question and said, \"Yes! Please help me!\"\n\nThe snow was falling faster and harder, and all Lisa could really tell was that the other person was a younger man with dark hair.\n\n\"What's going on?\" he asked as he followed her to the car.\n\n\"I...I hit a dog. I didn't even see him. He just...appeared. And I think I may have broken his leg.\"\n\nShe opened the door to let the man she assumed was a vet take a look.\n\n\"We need to get her inside!\" he said after just a couple of seconds.\n\n\"Okay,\" Lisa agreed without any idea how to do that.\n\n\"I'm going to grab a stretcher and some gloves. I'll be right back!\" he told her.\n\nLess than a minute later he returned and set the small animal stretcher down next to the car.\n\n\"Once I get her on it, I'll need you to help me carry her inside, okay?\"\n\n\"Yes. Sure,\" Lisa told him, very thankful for his willingness to help.\n\nLike the other man, he ignored the snarling and the heavy gloves protected his fingers when the frightened animal tried to tear into his hands. He lowered the dog, pulled a strap over its emaciated body, secured it, then asked Lisa to take the rear as he closed the car door.\n\n\"I'll open the clinic door when we get there,\" he told her as she helped him raise the stretcher.\n\nSomehow, he balanced the stretcher with one hand and one side of his body and pulled the door open and held it with his foot until Lisa was close enough to use hers to keep the door open until she was inside.\n\nThe warm air felt wonderful once they were in the foyer, but there was no time to bask in it.\n\n\"This way,\" the younger man said as he led her to an examination room.\n\n\"We'll set the stretcher down on the table then I'll lift her up. When I do, please set the stretcher on the floor, okay?\"\n\nThe dog howled and snarled and bit the gloved hand again, but several seconds later, she was laying on the stainless steel table.\n\n\"Okay. Good girl,\" the man said.\n\n\"It's a girl?\" Lisa asked, having not heard him or the first man who helped her.\n\nShe finally looked then felt a little silly and yet between the weather and the adrenaline it was an easy mistake.\n\n\"The vet left about ten minutes before you got here,\" the young man said.\n\n\"Wait. You're not a vet?\"\n\n\"No. I'm...in my final year of veterinary school at North Dakota State, but I'm not a vet.\"\n\nHe smiled at the woman and said, \"Yet.\"\n\n\"Oh,\" Lisa replied, not knowing what else to say. She was also surprised when she suddenly realized how attractive this almost-vet was, something else she hadn't yet noticed.\n\nHe had very thick, very dark hair that was still wet from the snow, and he looked to be about six feet tall or maybe even 6'1\". He also had very blue eyes and a nearly perfect smile and what appeared to be a rather muscular build. Not like a weightlifter but very...solid.\n\n\"I'm gonna call her, but in the meantime I'm going to need to get an x-ray to see if it's broken.\"\n\n\"What can I do?\" Lisa asked.\n\n\"Oh, no. You don't have to stay,\" the man told her. \"We'll take care of her and she can stay here over the weekend and we'll call you on Monday. Don't worry. Someone comes in three times a day to feed them and see how they're doing, and that someone is usually me.\"\n\n\"No. I want to stay. I'm responsible for this, and you were kind enough to open up and let us in, so just let me know what I can do, okay?\"\n\n\"For now, just keep an eye on her while I call Dr. Collins and set up the machine.\"\n\nHe disappeared for about two minutes then walked back in and said, \"She's turning around, but I'm going to need to splint this leg. I'll give her a sedative to relax her, and while that's taking effect, let's get her into the x-ray room. After that, I'll splint the leg unless the Doc Collins gets here first.\"\n\nLisa was impressed by the way he worked. He was calm and methodical and seemed very confident.\n\nAt one point he asked her for some help, and after she provided it, he said, \"I'm Alex.\"\n\n\"Oh. Hi, Alex. I'm Lisa.\"\n\n\"It's a pleasure to meet you, Lisa,\" he told her as he flashed another smile her way.\n\nWith the x-rays done and the dog in a dreamlike state, Alex got ready to put on a temporary splint, something he'd done many times in the years he'd worked there, first as an assistant and later as an intern.\n\n\"Okay. That'll hold her until the doctor gets back.\"\n\n\"You're really good at this,\" Lisa told him.\n\n\"Oh, thanks, but this is pretty simple. I just needed to make sure there was no internal bleeding. There wasn't, so all that needed to be done was splint the leg, and that's no big deal.\"\n\n\"Will she need a cast?\" Lisa wondered.\n\n\"I'd cast it, but that's not my call.\"\n\nHe smiled again then said, \"Yet,\" as he'd done before.\n\n\"How much longer do you have? You know, before you're a veterinarian?\"\n\n\"I graduate in June so about four and a half months.\"\n\n\"And you'll be working here?\"\n\n\"Yes. Doctor Collins has helped me get through vet school, so I'll be working here to help work off my debt. But this is a great clinic and she can use the help. In fact, I think she may be thinking about retiring in another year or two.\"\n\nBefore Lisa could answer, the lights from a car flashed through the clinic.\n\n\"That must be her,\" Alex said as he got up and headed toward the back door.\n\nDoctor Collins was in her late 60s but still extremely sharp and had a great sense of humor.\n\n\"Okay. Where's my sick girl?\" she asked as she pulled her heavy winter coat off.\n\nThe dog was laying in the middle of the room so it was rhetorical.\n\n\"Nice job on the splint, Alex,\" the older woman said after examining his work.\n\n\"I learned from the best,\" he told her with a smile.\n\n\"And who is this beautiful woman?\" the vet asked as she held her hand out.\n\n\"I'm Lisa. Blackman. I...I'm the one who...hit her.\"\n\n\"Pleased to meet you, Lisa, and with this weather, it's not surprising. The good news is she's going to be okay. The problem is, we need to find her owner or she may end up in a pound and well, that won't be good.\"\n\nLisa had no idea whether Fargo even had a no-kill shelter, and the dog didn't have a tag. Finding the owner might not even be possible, and there was no way she was going to let this animal be put down.\n\n\"If we can't, I'll keep her,\" Lisa replied.\n\n\"I need to cast that leg, so give me a little time here, and we'll have her ready to go. I'll give you some pain medication and antibiotics just in case, and you'll be on your way before the snow's too deep to drive.\"\n\nLisa had forgotten all about the snow, but it was really coming down now. If the city didn't plow the road by the clinic before she got ready to leave, she might not be able to get home.\n\n\"I have a 4-wheel drive pickup, so if push comes to shove, we'll get you two home, okay?\" Alex told her.\n\n\"I don't want to put you out like that,\" she told him.\n\n\"Judging by the way it's coming down out there, you may not have a choice,\" Dr. Collins said, chiming in.\n\nLisa walked over to the window Alex was looking out of and saw what looked like a thick blanket on the pavement.\n\n\"Either way, we'll get you home,\" he told her in a very quiet, rather deep voice she found very pleasant.\n\nHe'd walked up behind her, and Lisa had no idea he was that close. And yet he didn't startle her at all.\n\n\"Thank you. That's very kind of you,\" she said before turning around.\n\nWhen she did, Alex was directly in front of her.\n\n\"Oh. Hi there,\" Lisa said as she looked up at him.\n\nShe wasn't short by any means. At 5'9\", she was fairly tall for a woman. But as she looked up at the handsome face just inches from hers, she wondered if he might even be 6'3\". Regardless of his actual height, he was distractingly good looking, and Lisa was unable to maintain eye contact.\n\n\"Is there a restroom I could use?\" she asked as she stepped to the side.\n\n\"Sure. Let me show you.\"\n\nBy the time Dr. Collins came out to let Lisa know how the dog was doing, the snow had really piled up.\n\n\"Okay. She's all set.\"\n\nThe vet paused for effect then said, \"Literally and figuratively.\"\n\nAlex was used to her humor and laughed immediately, but it took Lisa a second or two to get it.\n\n\"Oh, right. Set. As in...the cast.\"\n\n\"She's still sedated, and Alex will get you the medications you need. She's also severely underweight. You may have noticed her ribs, and those shouldn't be visible. It's possible she may have run off from somewhere, but she's most likely a stray, so I gave her a rabies vaccination just in case.\"\n\n\"I did notice she was very thin, but I didn't even think about rabies,\" Lisa said as she recalled the dog biting Alex's glove.\n\n\"Are you okay?\" she asked him.\n\n\"Uh-huh. Those leather gloves are very thick and she didn't even come close to breaking the skin.\"\n\nDr. Collins looked at Lisa then said, \"So unless you have any other questions, I'm going to head home. Again.\"\n\n\"No. Not about the dog. But can you drive in this?\" Lisa asked, concerned for the other woman's safety.\n\n\"Can I drive it this. Ha! I have a four-wheel drive GMC Sierra 2500, and I've never gotten stuck no matter how bad it's gotten,\" the vet replied. \"And this young man also has a four-wheeler if you're snowed in.\"\n\n\"I'll make sure she gets home, Doctor Collins,\" Alex assured her.\n\n\"Okay. Then my work is done here!\"\n\n\"She's nice,\" Lisa said once the other woman was gone.\n\n\"She is. But she's also a pistol. She's not afraid to speak her mind, and when she does, it'll get your attention.\"\n\n\"Good thing I minded my manners then, huh?\" \n\nAlex laughed then told her that the vet he worked for reminded him of his mother.\n\nLisa was hesitant to ask but did so as tactfully as she could.\n\n\"Do you...live with with your mom?\"\n\nAlex stopped smiling but wasn't rude when he answered her.\n\n\"No. She bailed on my dad a few days after I graduated from high school, and I've only seen her twice since.\"\n\n\"I...I'm really sorry to hear that. That's awful.\"\n\n\"She swears she wasn't seeing anyone at the time, but my dad and I both think that's BS.\"\n\nHe smiled again then apologized for his 'French'.\n\nLisa smiled back and told him she'd heard worse and that made Alex laugh as he leaned her way a little and said, \"In fact, Doc Collins is the one I hear it from the most.\"",
        "\"So she really is a pistol,\" Lisa replied with a nervous little laugh of her own.\n\n\"That she is, but she's been like a mother to me, and I do dearly love her.\"\n\n\"I'm glad she's in your life.\"\n\n\"Me, too,\" Alex told her before saying they should go see if Lisa could get her car out of the parking lot.\n\nBut before they went out, Alex looked at the shoes she was wearing and told her that wasn't such a good idea. He took her keys and went out and tried, but after several attempts to rock the car back and forth and get traction, he gave up.\n\n\"No way,\" he told her when he came back in. \"I locked it up, but I'm gonna have to give you a lift.\"\n\n\"I've already put you out so much, Alex. I can just call my brother.\"\n\n\"Does he have a four-wheel drive?\"\n\n\"Oh. No. No, he doesn't.\"\n\n\"Then it's settled. I'll go warm mine up then we'll grab Sleeping Beauty and get you back home. Give me just a minute to go fire it up, okay?\"\n\n\"Sure. And, Alex? Thank you.\"\n\n\"My pleasure,\" he told her before grabbing his big coat and heading out the back where his truck was parked.\n\nLisa went back into the room where the dog was still out of it and saw her ribs.\n\n\"Poor thing,\" she said as she petted its back and promising the dog she'd take good care of her. She hadn't had one of her own, but growing up there was always a dog in the home, and while she wouldn't have gone out and found one, she was actually happy to be helping this one\u2014especially since she was responsible for the broken leg.\n\nShe heard the door close and Alex walked back in and told her he was ready.\n\n\"We'll get her in the rear cab then I'll come back and turn out the lights and set the alarm.\"\n\nLisa helped him carry the pooch outside where, for the first time all day, she noticed how cold it was as the cold bit into her.\n\nAs they drove down the same street the clinic was on, a plow was going the other way in the opposite lane.\n\n\"Do you need me to bring you back to get your car later on?\" Alex asked as the plow went by.\n\n\"Oh, my gosh. No. I'll definitely have my brother come help me. They'll have the street plowed, and we'll bring shovels to get out of the parking lot.\"\n\nAlex didn't argue with her, but he wasn't sure that was the best idea. But she was a grown woman, and as he glanced over at her, he realized she was a very attractive woman. Her hair was a mess from the snow, but even so, could tell she was a very pretty lady. The only thing he couldn't tell was how old she was. It was obvious she was older than him, but beyond that he wasn't sure.\n\n\"So were you on your way home when, you know....\" he asked as he nodded toward the back seat.\n\n\"Yes. I...today's the um...it's the third anniversary of my husband's passing,\" Lisa said, trying not to sound dramatic or emotional.\n\n\"Lisa, I'm so sorry. Had I known, I'd never have....\"\n\n\"It's okay, Alex. Really,\" she said before he could finish apologizing.\n\nShe saw him look her way two or three times in rapid succession and felt like he wanted to say something.\n\n\"I'm not sensitive about it if you wanted to say something.\"\n\n\"I did, but I'm not sure it's all that appropriate.\"\n\n\"I won't be offended. I promise,\" Lisa informed him.\n\n\"I was just going to say that, well, now I understand why you keep referring to your brother.\"\n\n\"Oh, okay. Yes, he's been a lifesaver to me since my husband passed away.\"\n\n\"I may cross some line with this, so please don't take it the wrong way, but I was really surprised because you're a very attractive woman, and well, I kind of assumed you were married.\"\n\nHe looked at her gloved hands, and Lisa remembered that she's never taken them off since they met.\n\n\"No. I still wear my ring, but sadly, I'm no longer married.\"\n\n\"I am sorry,\" Alex said again.\n\n\"Thank you. That's very kind, Alex.\"\n\nThey drove in silence except for the heavy snow tires biting into the sludge beneath when Lisa asked, \"How about you? You're not married, are you?\"\n\n\"Me? No. Definitely not,\" he replied with a chuckle.\n\n\"I also assumed,\" she confessed with a little laugh. \"And I did look and there wasn't a wedding ring, so....\"\n\nAlex laughed politely then looked over and asked her, \"Wait. Were you checking me out?\"\n\nHe was only being friendly and maybe a little playful, but Lisa felt her face warming up, something hadn't happened in so long she couldn't remember the last time she'd blushed. Fortunately, it was very dark in the cab of his truck, and Alex couldn't see the glow on her cheeks.\n\n\"No. Of course not,\" she replied a little too defensively.\n\n\"Okay,\" Alex said with a little laugh.\n\n\"Besides, I'm a tad bit older than you.\"\n\n\"Oh. So...because of that you wouldn't even look at a guy my age then?\" Alex teased.\n\n\"I...I didn't say that,\" Lisa replied, again with a defensive tone.\n\n\"Whew!\" she heard Alex say.\n\n\"Whew? What does that mean?\" \n\n\"I'm just grateful to know that you weren't rejecting me for my...looks. The age thing I can handle, but if you told me I was, you know, on the ugly side...well, that might hurt.\"\n\nHe laughed, and Lisa finally realized he was kidding about everything.\n\n\"Ugly. Listen to you! You're one of the most attractive men...younger men...I've ever met. So no, that's definitely not the case.\"\n\n\"Well, thank you, Lisa, because you're one of the most attractive women I've ever met.\"\n\nHe waited for a second then looked her way and said, \"Of any age.\"\n\nLisa made a 'spurting' noise then laughed.\n\n\"Ha! Yeah, right!\"\n\nAlex looked over, and when Lisa looked back, she could tell he wasn't kidding.\n\n\"I meant what I said, Lisa. You're...beautiful.\"\n\nHer tummy flipped then flopped forcing her to say a little too loudly, \"Oh, now I get it. You know it's safe to flirt with a woman my age because she won't take you seriously!\"\n\nAgain, Alex looked at her in that same way.\n\n\"I almost never flirt. But I am always honest,\" he told her, the teasing tone gone from his voice.\n\nThat look was too much to take, and Lisa turned away and looked out of her window.\n\n\"Sorry. I didn't mean to make you feel uncomfortable. If I offended you, please forgive me,\" Alex said with heartfelt concern.\n\n\"What? No. You...you didn't offend me, Alex. I just assumed you were, you know, being polite.\"\n\nShe forced herself to look his way again, and for the third time since she'd met him, a chill ran through her.\n\n\"I always try to be polite, but I never say anything I don't mean.\"\n\nLisa was 39 years old and felt like a teenager whose head was spinning and whose heart was pounding.\n\n\"Get a grip,\" she told herself before seeing the first hint of the street she lived on.\n\n\"We'll be turning right in about 50 yards,\" she warned.\n\nAlex slowed to around 5mph as he turned the corner then continued at around 15 down the street until she gave him another heads up as to which driveway to turn into.\n\n\"This is me. Up here on your right.\"\n\nAlex slowed until her house appeared.\n\n\"That one. There,\" she said as she pointed.\n\nAlex pulled as close to the side door as he could then stopped.\n\n\"I'll come around and help you get out,\" he told Lisa when he put it in park.\n\nShe still hadn't recovered from the first emotional salvo when he appeared at her door and held out his hand. She took it, and when she went to step down, he reached under her and scooped her up.\n\nBefore she could ask what he was doing he told her there was a good six inches of snow on the driveway and again reminded her about her shoes. The weren't open-toed or even pumps, but they weren't made for this much snow.\n\nHe set her on the only step after clearing it off with one foot.\n\n\"I'll grab our girl and be right back.\"\n\n\"Don't you need help?\" Lisa asked as she got her house key out.\n\n\"No. I'm good,\" he told her.\n\nThe dog probably weighted 35 pounds at most, and for a man Alex's size, that was nothing. Even with the stretcher it wasn't much of a lift. He easily picked her up, kicked the door shut then carried her through the open door Lisa was holding for him.\n\n\"Where do you want me to put her down?\" he asked.\n\n\"Um...back here. In the spare bedroom.\"\n\nIt was a three-bedroom home, and Lisa used the master but only furnished one of the other two. The third was kind of a storage room, so she found a soft blanket and laid it on the floor.\n\n\"Right here should be good.\"\n\nAlex laid her down then asked, \"Are you good on food and water?\"\n\nThe blank look on Lisa's face made him smile, but he didn't laugh.\n\n\"Water, yes. Food...I'm not sure.\"\n\n\"We passed a Hornbacher's a couple of blocks back. I can run over and pick up a few cans for you until you can get some yourself.\"\n\n\"Alex, I can't....\"\n\n\"I'll be right back,\" he told her, that amazing smile on his face again.\n\n\"Thank you!\" Lisa said as she hunched her shoulders and tilted her head indicating she was in his debt.\n\nAs soon as he walked out, Lisa found a large, deep, plastic bowl and filled it with water and set it next to the dog who still didn't have a name. There was an old, worn collar around her neck but no tag, so Lisa decided to give her a name. At least temporarily. But by the time Alex got back, she still hadn't thought of anything.\n\n\"Here you go. This will hold you for a couple of days,\" he told her as he set the bag on her kitchen counter.\n\nHe tried to refuse the money she wanted to give him, but Lisa wasn't having it.\n\n\"If you're still in college, you don't have a lot of money to throw around, so you will let me pay you!\" she told him as she forced the money into his hand.\n\nFor a brief moment, his hand was around hers, but once the $10 bill she put there was in his, he let hers go.\n\n\"Thank you,\" he told her as he looked into her eyes.\n\n\"No, don't be ridiculous. I need to be thanking you.\"\n\nHe didn't say anything for two or three seconds. Rather, he just stared into her eyes, and Lisa felt that same 'rush' yet again.\n\n\"It was my pleasure,\" he said very quietly and sincerely.\n\nLisa realized she was staring and did a little head shake as she looked away.\n\n\"Thank you so much for picking up the dog food.\"\n\n\"Again. My pleasure.\"\n\n\"I guess I just need to think of a name for her now. And try and find the owner.\"\n\n\"Honestly? I don't think she belongs to anyone. And as far as a name goes....\"\n\nThe smile on his face made Lisa smile.\n\n\"What? What are you thinking?\"\n\n\"Um, well, the uh, the first name that came to mind was...Twiggy.\"\n\nLisa's eyes opened wide in surprise, but she understood the reference to the ultra-thin model from the 1960s.\n\n\"Twiggy. That's...perfect!\" Lisa said after giving it a moment of thought.\n\n\"Poor thing's all skin and bones.\"\n\nLisa picked up the bag of canned food, smiled, then said, \"I'm gonna change that starting right now.\"\n\nAlex chuckled politely then said, \"I should get going, but it was truly a pleasure meeting you, Lisa.\"\n\n\"Yes. Same here...Alex,\" she told him, hoping she didn't have a goofy look on her face.\n\n\"Oh. Let me give you my number just in case you have a problem.\"\n\nLisa started to object, but Alex wasn't having it. She let him put his number in her phone then thanked him yet again.\n\nHe told her she was welcome then turned to leave. He stopped after taking one step then looked back over his shoulder and said with another one of those amazing smiles, \"You really are beautiful.\"\n\nStunned, Lisa just stood there as he left without saying another word. The warm glow from his comments lasted for another hour or so when she heard Twiggy making noises.\n\n\"Hey! How's my girl?\" Lisa said as she bent down.\n\nShe slowly extended her hand, the palm away from the dog, to let her sniff it. Twiggy was still groggy but sniffed and didn't try to bite her.\n\nLisa moved the water bowl closer, and it was obvious the dog wanted to drink. The only thing she could think of was to help lift her back end up and keep pressure off the rear leg. Once she was up, Twiggy drank until half the bowl was gone.\n\nLisa laid her back down then opened a can of food and put it in another bowl with the same results. She was clearly hungry but unable to stand up.\n\n\"Here. Let's try this,\" Lisa said as she made a face while scooping some of it out with a bare hand.\n\nShe put it under Twiggy's nose, and the starving pooch began licking then gulping.\n\n\"Good girl!\" Lisa said as she got some more and kept doing it until the entire can was nearly gone. With just a little bit left she remembered the pills. She put one of each in the last small handful which her new dog wolfed down in one bite.\n\nAfter washing her hands, Lisa sat next to her new friend and petted her for nearly an hour, and when she got up to leave, Twiggy started crying. Lisa felt awful, so she pulled the blanket, with the dog on it, along the hardware floor into her bedroom. As she got ready to lay down herself, the dog's eyes never left her as she moved around the room. \n\n\"Okay, Miss Twiggy. It's time to go night-night,\" Lisa told her as she petted her one more time. \n\nKnowing her human was very close, Twiggy didn't cry and fell asleep the moment Lisa turned off the light and stayed there until she woke up the next morning. And that's when Lisa realized she had to let the dog out to pee and panicked.\n\nLifting her up to drink was one thing. But taking her outside in what was now well over a foot of snow was quite another. She didn't have a leash and the dog was going to have to pee soon.\n\nIt was just after 8am, and Lisa didn't know what else to do when she dialed Alex's number.\n\n\"Did you miss me already?\" she heard him say when he answered the phone.\n\nHis sense of humor took her a second, but she laughed when she understood.\n\n\"I apologize for calling, but Twiggy needs to go outside, and I don't have a leash, and I'm not sure how to do this.\"\n\n\"It's a good thing I've been up since six studying then,\" Alex said, clearly being playful. \"I'll be there in less than 10 minutes.\"\n\nWithout giving her a chance to speak he hung up leaving Lisa looking at the phone and wondering what just happened.\n\nNine minutes later, Alex came to her door with a leash in hand.\n\n\"Good morning,\" he said cheerfully as he handed her the leash.\n\n\"Good morning, and again\u2014thank you.\"\n\n\"Where's our girl?\" he asked as he looked around.\n\n\"Oh. I moved her into the bedroom. She wouldn't stop crying otherwise.\"\n\n\"I can certainly understand why,\" Alex told her, that same smile there. But it was the deeper meaning behind what he'd just said that made her look away again before taking him to see the dog.\n\n\"There she is!\" he said as he walked into the bedroom.\n\nTwiggy's tail was wagging, and she was trying to sit up.\n\n\"Hold on, girl!\" Alex said as he went over to her.\n\nHe bent down, scooped her up, then asked Lisa to open the door for them so he could carry her outside.\n\nIt was even colder than the night before, and Lisa shivered inside as she watched Alex carry the thin, frail dog around through the snow trying to find just the right place. After three failures, Twiggy gingerly squatted down and did her thing. But Alex knew there was...another thing...still needing to be done. So he lifted her back up and carried her around until she was ready to finish taking care of all her business.\n\nLisa heard him saying, \"Good girl!\" as he picked her back up and brought her inside.\n\nHe also nuzzled the dog, and because Lisa knew the affection was genuine, the scene melted her heart.\n\n\"Okay. All better!\" Alex said after laying her back down.\n\n\"Alex? Thank you again,\" a very grateful Lisa told him.\n\n\"Oh, gosh. You don't need to thank me, Lisa.\"\n\n\"Um...yes, I do.\"\n\nThere was no smile this time and yet Alex's face seemed even more handsome when he spoke.\n\n\"You're the one who should be thanked, Lisa. Very few people would have even stopped at all, let alone in this kind of weather. But you did. And you went looking for help. So in my book, you're the hero here.\"\n\nLisa was struggling to understand why she felt the way she did whenever Alex looked at her or spoke to her, and yet here she was again feeling it. She finally looked at him, and just before she could say something, he unintentionally cut her off.\n\n\"Has she eaten yet?\"\n\n\"Oh. No. She ate last night, but I...she...no. Not yet.\"\n\n\"She's really underweight. You could feed her four or five small meals a day until those ribs stop showing.\"\n\nAgain, Lisa wanted to comment, but Alex kept going.\n\n\"I assume she's drinking plenty of water?\"\n\nLisa checked and the entire bowl was empty.\n\n\"Yes. In fact, I need to refill that. Then I'll get her food ready.\"\n\n\"Here. Let me get the water, and you can take care of the food,\" he said just as she moved to grab the bowl.\n\n\"Okay, but you don't have to do that,\" Lisa said in a very nice way.\n\nWhen Alex looked at her something gave him the impression she wanted him to leave.\n\n\"I'm sorry. When it comes to animals I can get carried away. You're probably trying to get breakfast for yourself and I can't take a hint. I'll uh, I'll go ahead and get out of your hair.\"\n\nRather than stay on point, all Lisa heard was 'hair'. She hadn't had a chance to brush hers out, and lord only knew what it looked like.\n\n\"My hair. Yeah, that'd scare anyone away!\"\n\n\"Listen to you! You're more attractive first thing in the morning than most women are before they go out,\" Alex told her, that smile back and doing the same thing it had before. At least her cheeks weren't glowing this time.\n\n\"I honestly wasn't trying to get you to leave, Alex. I really, truly appreciate your help.\"\n\nShe made herself look at him and as she spoke she tried to smile.\n\n\"And your company.\"\n\n\"So you haven't had breakfast yet?\" he asked.\n\n\"Me? No. I, well, as you can see, I haven't even had time to brush my hair yet.\"\n\nAlex smiled again then said, \"Tell you what. You go ahead and get ready and I'll feed Twiggy. By the time you're ready, she'll be done, and we can run over to IHOP.\"\n\nToo stunned to speak, Lisa stood there in her robe and...crazy hair...and just stared at him.\n\n\"I'll take that as a 'yes',\" the handsome, young vet-to-be said. \"I'll bring Twiggy out here and feed her while you do your thing, okay?\"\n\nBefore she could reply, Alex was carefully dragging Twiggy out the same she had by pulling the blanket she was laying on. Her tail was wagging again, and it was obvious Alex was having fun.\n\n\"All right, Twiggy-twig. Alex is gonna make you a delicious breakfast while Mommy gets ready to go have some pancakes and eggs. How does that sound?\"\n\nTwiggy barked, and when she did, Lisa smiled and that was enough to get her to move. Alex barely noticed her close the bedroom door, but Lisa could still hear him talking to the dog as she got to the bathroom door.\n\nShe was almost afraid to look at herself in the mirror, but something made her take a look. \n\n\"Oh, my...word!\" she said when she saw the frazzled mess while reaching for a brush.\n\nOnce her hair looked human again, Lisa took her robe off and started looking for something to wear. Knowing it was around 25 degrees outside, she grabbed a blue turtleneck she thought was pretty and carefully pulled it over her head then stepped into her favorite pair of jeans.\n\n\"Maybe a little mascara,\" she said out loud to herself.\n\nShe put some on then thought a touch of blush wouldn't hurt. She even grabbed a tube of lipstick but put it down with a shake of her head. But it only stayed there for a second or two when she told herself her lips would chap if she didn't protect them.\n\n\"And besides, it's not like it's got a lot of color to it,\" she told herself as she put the glossy cream on her soft, full lips.\n\nSome warm socks and her purse were the only other thing she needed from the bedroom as her coat, scarf, and gloves were all in the foyer.\n\nWhen she walked out, she'd almost forgotten why she'd gotten ready until Alex saw her.\n\n\"Wow! Now that was worth waiting for!\" he said as he smiled at her again. He was bent down petting Twiggy when he saw her.",
        "\"Pshaw!\" a flattered Lisa said as though that was nonsense.\n\n\"Twiggy ate half the can and lapped up a lot of water, so she should be fine for an hour or so.\"\n\nHe looked back at the very skinny dog and said, \"Didn't you, girl?\"\n\nOnce again, his warmth toward this poor creature warmed her heart as she watched the dog eating up the affection.\n\n\"You ready?\" Alex asked as he stood up.\n\n\"Um...yes. I think so.\"\n\n\"All right. Then let's go get some human food, shall we?\"\n\nIn the foyer, he held her coat for her as she lifted her hair.\n\n\"Thank you!\" she told him before reaching for her scarf and gloves.\n\nAlex then opened the door, smiled, and said, \"After you I come first.\"\n\nLisa needed a second to get that quip, too, but when it hit her she laughed. She tried to groan so she could tell him how bad that was, but there was that smile again and she couldn't help herself.\n\nHe opened her door, helped her up into the cab then went around fired the truck back up. In just the short time he'd been inside, the engine was nearly cold. But there was still a little residual heat and the cabin warmed up fairly quickly. \n\n\"Let me know if you're too cold or too warm,\" Alex said once the heat kicked in.\n\n\"I'm fine. Thank you, though,\" she told him when, for the first time, she thought about being seen with him in public.\n\nFor some reason, one of the first episodes of a show called \"Cougar Town\" which starred Courtney Cox as a divorced, 40-something woman. She and a girlfriend were at a sporting event and they were trying to decide if a woman their age sitting behind them was with her son or her boyfriend. Until she kissed him.\n\nSuddenly feeling very strange, she glanced over at Alex.\n\n\"Everything okay?\" he asked in his typical cheerful way.\n\n\"Yes. Everything's fine.\"\n\nAnd maybe it was. After all, it was just breakfast at IHOP. It certainly wasn't a date, and what difference did it make what anyone else thought? Or at least that's what Lisa told herself as she tried to pretend it really didn't matter.\n\nOnce they were seated, Alex asked if she knew what she wanted.\n\n\"And don't you dare try ordering Special K,\" he said as he playfully warned her while pointing at her.\n\nLisa wore a size 8 comfortably, and yet she was still self-conscious about her weight. She had no fat on her anywhere, but she felt like she was...thick...and thick in all the wrong places.\n\n\"You could use some pancakes,\" Alex told her just as playfully.\n\n\"No. Sorry, but those would go straight to my....\"\n\nNot sure if she should say it, she stopped.\n\n\"Don't even say your butt,\" Alex said quietly, finishing her sentence. \n\n\"Okay. Then I'll say hips.\"\n\nAlex laughed and told her she was funny.\n\n\"You haven't seen my hips!\" she replied, now feeling a little more relaxed.\n\nRelaxed enough to say even more quietly than Alex had, \"Or my butt!\"\n\nAlex's response not only surprised her it shocked her.\n\nHe leaned her way, smiled again, then said, \"Not for any lack of trying on my part, though!\"\n\nLisa's eyes got very wide while another one of those feelings she'd had at the clinic her so hard it scared her more than his comment surprised her. But before she could come back with a fake 'shame on you' reply, their server reappeared with their coffee.\n\n\"You guys decided yet?\" the young girl who looked to be maybe 19 asked.\n\n\"Pecan pancakes,\" Alex told her. \"For both of us.\"\n\n\"Coming right up!\" the girl said as she spun around before Lisa could say a word.\n\nAlex saw the way she was looking at him and said, \"You know you wanted them.\"\n\nA half dozen witty replies swirled around her brain before she realized they were all half...witted.\n\n\"If I can't get back into these jeans, I'm blaming you!\" Lisa told him with a little shake of her head.\n\nAlex sat there smiling, and just before she asked, \"What?\" he laughed then said, \"I can live with that.\"\n\nA smaller 'something' hit her this time, and when it did, Lisa had to seriously ask herself what was going on. \n\nShe found herself smiling as she said, \"You don't lack for self-confidence, do you?\"\n\nShe was trying to be playful herself, but when Alex got serious, she felt terrible.\n\n\"I'm sorry. I hate cocky people, and that wasn't what I was trying to do.\"\n\nShe could tell he wasn't 'hurt'. He was only being honest. The truth was she liked men who were confident. She despised those who were cocky, though, but it hadn't even crossed her mind that Alex was like that.\n\n\"I wasn't thinking that at all,\" Lisa said very sweetly. \"I...I actually think you're very nice.\"\n\nAlex winced and that made Lisa feel even worse.\n\n\"Did I just say something...else...that was offensive?\"\n\n\"Offensive? No. Not at all. I was just hoping I was doing better than...nice.\"\n\nLisa's heart rate sped up by ten beats a minute in less than a second.\n\n\"I...I don't understand,\" she told him as she tried to read his emotions.\n\n\"I think my dad might be right,\" Alex said, only confusing her even more. Alex saw the confusion and tried to clarify.\n\n\"He tells me I need to study less and date more. Now here I am with someone I really like, and I'm so out of practice she has no idea I'm flirting with her.\"\n\nLisa blinked several times then swallowed hard as she tried to speak.\n\n\"Flirting?\" she finally said.\n\n\"I was trying to,\" Alex admitted, another smile on his face.\n\nHis eyes were so blue Lisa couldn't stop staring at them even as he explained that he actually was flirting with her. They were the kind of eyes that one rarely saw on a man. They were...Brad Pitt eyes, and Lisa's wandering mind was telling her that he probably had that same kind of lean, hard body underneath all those clothes.\n\nBut before she could tell him he must be crazy, or blind, or...both...their waitress came back with their food.\n\n\"Two pecan stacks!\" she said as she set them down. \"If you need anything else just let me know, okay?\"\n\nLisa said, \"Thank you,\" but was still off in never-never land when she heard Alex's voice.\n\n\"Maple or one of these...fruity syrups?\"\n\n\"Oh. Um...maple. Please.\"\n\n\"Say when,\" he said as he began pouring over the three pancakes on her plate.\n\n\"When!\" she told him before he really got started.\n\nHe poured at least four times that much on his then sliced through all three pancakes and speared a huge bite. \n\n\"Bon appetite!\" he said before stuffing the food in his mouth.\n\nLisa loved the differences between men and woman, and one of them was the way they ate. She cut out the same amount but only picked up one piece of one cake with her fork. By the time she put it in her mouth, Alex was spearing three more large chunks, dipping them in syrup and stuffing them in his mouth.\n\n\"So good!\" he said after moving the food to one side of his mouth while reaching for the coffee cup in front of him.\n\n\"They are good!\" Lisa agreed as she put a second small piece on her fork.\n\nShe ate just over one of the three cakes by the time Alex took the last bite on his, and she smiled when she realized she was probably about as full as he was.\n\n\"Are you really not hungry or are you just trying to make a good impression on me?\" Alex teased when she pushed the plate away.\n\n\"Ha! I thought someone said he wasn't cocky?\" she teased back as she grabbed her cup.\n\n\"Oooh. That smarts and...touch\u00e9!\" he said with another little wince and a smile.\n\nFeeling pretty good about herself ended when Alex asked, \"So...are you? Trying to make a good impression on me?\"\n\nRattled, but only for a moment, Lisa smiled back and told him, \"I think your dad may be right. You do need to go out more.\"\n\nThis time, before Alex could come back with something, she said, \"With more girls your age.\"\n\nNow feeling downright smug, Lisa took a sip and tried not to smile.\n\nAlex noticed and said, \"But they're...boring.\"\n\n\"Boring? Women your age are boring?\"\n\nHe sat there and looked at her long enough that she felt rattled again.\n\n\"It's more than that,\" he finally said.\n\n\"I...I don't think I understand.\"\n\nAlex tilted his head a little as though he was examining her.\n\n\"I'm not sure I do, either,\" he quietly said. \"All I know is...well, there's something about you, Lisa. Something...something very...special.\"\n\nShe started to respond but stopped.\n\n\"What?\"\n\n\"No. It...it wouldn't be appropriate.\"\n\n\"No. Go ahead. Tell me,\" Alex insisted.\n\n\"Well, I was going to tease you about, you know, needing a mother figure in your life, but then I remembered what you told me, and I...I felt terrible.\"\n\n\"Oh, okay!\" Alex said with a chuckle.\n\n\"I really didn't mean that,\" Lisa said apologetically.\n\n\"I know you didn't. You're too nice to say anything like that.\"\n\nThe sincerity of his words hit her and hit her hard.\n\nFor the third time, their server saved Lisa.\n\n\"You guys have a great day, okay?\" she said as she tore off the check.\n\n\"Thank you very much!\" Lisa told her.\n\nThe girl looked at her then looked at Alex before saying, \"You guys are a really cute couple!\"\n\nAlex saw the look on Lisa's face and as she started to correct the younger woman, Alex said, \"Thank you! We think so, right, honey?\" as he shifted his gaze from the girl to the woman.\n\nAfter the waitress left, Lisa just sat there in silence trying to understand. Alex was most definitely flirting. He also wasn't cocky, so that made sorting through this even more complicated. She wasn't sure how long vet school was, but she thought it was three or four years after college. So Alex might be as old as 27, but even so, she was...39. And while he was gorgeous, she was still...39.\n\n\"You ready?\" she heard Alex ask, snapping her out of her latest trance-like state.\n\n\"Um...yes. I'm ready.\"\n\nThey were halfway back to her house when Lisa finally got up the nerve to ask.\n\n\"Alex? What's going on here?\"\n\n\"Going on?\"\n\n\"Yes. The flirting and...the flirting.\"\n\n\"Wow. I really am out of practice,\" he replied with a small laugh.\n\n\"No. I'm serious. I really don't understand.\"\n\n\"Ah, okay.\"\n\n\"Wait. What?\"\n\nAlex looked over at her then said, \"I'm starting to understand myself now.\"\n\n\"That makes one of us,\" Lisa told him, now so confused she couldn't think straight.\n\n\"You're letting me know you're not interested. In a very kind, polite sort of way.\"\n\n\"Huh?\"\n\n\"It's okay. I get it. Not everyone is going to like us back, right?\" he offered, only confusing her even more.\n\n\"Alex? I can't ever remember feeling so hopelessly lost in a conversation before.\"\n\nWhen he looked over he furrowed his brow indicating he couldn't make sense of what she was saying.\n\n\"Isn't it obvious?\"\n\n\"Um...no. Not at all,\" Lisa said.\n\n\"I like you, Lisa. That's why I've been flirting. It's what people do when they like someone. It lets them find out how the other person feels.\"\n\nHe took his eyes off the road long enough to turn her way again then say, \"But in this case you don't feel that way about me. I can't say that doesn't hurt a little, but if that's how you feel then that's how you feel.\"\n\nFinally it made sense.\n\n\"Oh, my goodness! You think I don't like you, huh?\"\n\n\"And the beautiful woman finally gets it!\" he said jokingly.\n\nWhen she laughed, Alex felt like she was adding insult to injury, because in spite of his playful words, he really was deeply disappointed.\n\n\"It's not really very funny,\" he said.\n\n\"Alex?\"\n\nHe gave her a quick look but didn't speak.\n\n\"It's not that,\" Lisa said.\n\n\"Then I don't understand.\"\n\nShe went to explain when he said, \"Oh. Gee. Duh! You like someone else. I'm not usually this thick, but maybe I am that out of practice.\"\n\n\"What? No. It isn't that, either,\" Lisa said, her voice now much more sympathetic.\n\n\"No?\"\n\n\"No. Not at all.\"\n\nAlex raised his eyebrows to let her know he was listening.\n\n\"There isn't anyone else, but it's more than that. I mean, you're...in college. Veterinary school but still college.\"\n\n\"I won't be come June,\" he reminded her, smiling for the first time since IHOP.\n\n\"And that's fantastic. I mean, becoming a veterinarian is...huge.\"\n\n\"But?\"\n\n\"But...we're...I'm...I'm older than you, Alex. A lot older.\"\n\n\"That's it? That's the only reason you don't...like me back?\"\n\n\"Well, no, but....\"\n\n\"Then what else is bothering you?\" he asked with gentle patience and kindness.\n\n\"Isn't that enough?\" Lisa asked him as nicely as she could.\n\n\"Is it?\" Alex asked back in an equally kind tone of voice.\n\nLisa sat there and looked at him as she again dealt with a rapid heartbeat and a ton of confusing emotions.\n\n\"I...I don't know,\" Lisa said so quietly Alex barely heard her.\n\n\"Then let's find out.\"\n\n\"What?\"\n\n\"Let's give this a chance.\"\n\n\"Alex. I...I don't know. I mean we barely even know one another.\"\n\n\"That might be because we just met, and that's something we can change,\" a smiling Alex told her.\n\nWhen she didn't respond, Alex made a suggestion.\n\n\"Lisa? How about this? For now, let's just work together to get Twiggy better and maybe along the way we'll see if there's something more to this.\"\n\nHe looked over at her, smiled, then asked, \"Is that too much to ask?\"\n\nIt was as if a pressure valve had been opened for Lisa. This was a way for her to give herself time to think without turning him down before she could really sort through these feelings.\n\n\"As friends, right?\" she asked, her own eyebrows now raised.\n\n\"For now,\" Alex told her, that amazing smile causing another flicker inside of her.\n\n\"I suppose that would be okay. I have no idea why you want to be more than friends, but if we can keep it at the friend level, then...okay.\"\n\nAs he got ready to turn into her driveway, he gave her another quick look then said, \"I'm not promising to keep it that way. I'm only promising to start out there.\"\n\nHe pulled in, stopped the truck, then said, \"Okay?\"\n\nThe things she was feeling were inexplicable for many reasons, and yet she couldn't name one of them. It made no sense to her whatsoever, and yet she was feeling them nonetheless.\n\n\"Okay,\" Lisa heard herself saying, her voice almost hollow as Alex jumped out and came around to help her out.\n\nHe walked her to the door and was going to say goodbye when they both heard Twiggy barking.\n\n\"Is she okay?\" Lisa asked as she fished the keys out of her purse.\n\nAlex was cupping his hands and trying to look through the glass pane on the side of the door.\n\n\"I don't know. I can't see her.\"\n\nLisa opened the door and Alex followed right behind her.\n\n\"Oh no!\" he heard Lisa say just as the smell hit them both.\n\nTwiggy was crying more than barking, and they assumed it was because she knew what she'd done.\n\n\"This and the old collar tell me she was probably once an indoor dog,\" Alex offered as Lisa held her nose and went to get paper towels and some white vinegar.\n\n\"Let me get it,\" Alex insisted once she had them both in her hands.\n\n\"You don't need to do this, Alex.\"\n\n\"One of us has to, and the other one should go sit with Twiggy and pet her.\"\n\n\"Aren't we reinforcing bad habits?\" Lisa asked.\n\n\"No. Dogs live in the moment. Literally. Just seconds after they make a mess they have no idea what they did. So if one were to, say...rub the dog's nose in it, it would have no idea why that's being done.\"\n\n\"That makes sense,\" Lisa told him as she realized she'd never thought of that before.\n\n\"But any dog understands love and affection, and Twiggy needs a lot of both.\"\n\nAlex thoroughly cleaned the mess while Lisa petted Twiggy and said, \"Oh, you're such a good girl!\"\n\nAfter disposing of the poo outside in Lisa's trashcan he walked back to where she was sitting with the dog and said, \"Twiggy could walk if you didn't have tile and hardwood. Are there any rugs we could use to make a path to the door for her?\"\n\n\"Oh. I uh, I never of thought of that,\" she replied, almost adding the word 'either'. But Alex had no idea she'd never heard about dogs 'living in the moment' so she just got up and went looking.\n\n\"Will these do?\" she asked when she came back with two long, rolled-up rugs.\n\n\"Yes. These are perfect!\"\n\nAlex unrolled them and between them they made an L-shaped path from the bedroom and then to the back door.\n\n\"Okay. Now let's stand her up and you get the leash, okay?\"\n\nLisa went to grab it while Alex raised the bony dog up on its feet.\n\n\"Good girl!\" he told her once she was up. He then moved her onto the rug so she could be sure her paws wouldn't slip and waited.\n\nTwiggy sniffed the rug then took one small step while holding her bad leg up.\n\n\"She's doing it!\" Lisa said as she rooted for the dog to keep going.\n\nShe bent down and attached the leash to the frayed collar and moved to her right side.\n\nTwiggy needed some help in the snow, so while Lisa did that, Alex grabbed a shovel and cleared a small area for her to use.\n\nBy the time they got back inside, Lisa was even more impressed with this caring, younger man than she was before.\n\n\"You're pretty remarkable, Alex,\" she told him.\n\n\"Thank you, but I just love animals. That's what drew me to want to be a vet in the first place.\"\n\n\"Then you're very fortunate. Far too many people see going to work as a drudgery, but you'll have a job you don't really see as work.\"\n\nAlex laughed then told her that was the plan.\n\n\"Dealing with the animals' humans will be the real problem for me.\"\n\n\"Something tells me that won't be much of a problem,\" Lisa replied with a warm smile.\n\n\"I hope so.\"\n\n\"You're a very nice-looking young man, Alex. That means almost every woman will be happy to be friendly towards you. And from I've seen, even other men tend to be nice to attractive men.\"\n\nBefore Alex could say anything, Lisa added, \"Even though they're not attracted to them.\"\n\nHe laughed again then said, \"So you think I'm attractive, huh?\"\n\nThe realization that the conversation had taken a sharp turn caused a RE-turn of the earlier feelings. A quick flutter hit her hard before she said anything.\n\n\"Maybe. A little,\" she told him even as she also realized she was now flirting with him. A little.\n\n\"I'll take it!\" he told her. \"Especially coming from such a beautiful woman.\"\n\n\"Beautiful. Sure. You uh, you saw me this morning in...all my beauty...so the cat's out of the bag on that!\"\n\n\"I saw you,\" he said, his voice quieter and more serious. \"And yes, you looked just as beautiful then as you do now. And right now you look amazing.\"\n\nNow feeling overwhelmed, Lisa reached down and unhooked the leash then said, \"I thought we were going to keep this friendly.\"\n\n\"Hold on. You're the one who told me you think I'm hot,\" he told her with a smile that was clearly playful.\n\n\"Hot? I did not use that word!\"\n\n\"But you do, right?\"\n\n\"I...you...what I said was that you're a...reasonably attractive guy.\"\n\nAlex made a sour face and shook his head.\n\nShe saw him smile before saying it, and even though it wasn't politically correct, it still made her laugh when he coughed and said, \"Indian giver,\" as part of the cough.\n\n\"I am not!\" Lisa replied almost like a teen girl would.\n\n\"Are to,\" Alex said in a deep voice as though he'd been hurt.\n\n\"Okay. Fine. You're....\"\n\nShe was looking at him but couldn't keep doing so as she said, \"Handsome.\"\n\nAlex laughed then jutted his jaw out to indicate smugness then said, \"That's more like it!\"\n\nShe tried as hard as she could not to laugh, but because he was so nice, and yes, so...handsome...she laughed.\n\n\"You're even more beautiful when you laugh,\" Alex told her, the serious look and tone of voice back.\n\n\"Um...I...we...don't you think we should give her something else to eat?\" Lisa asked as that flutter came back even harder than before.\n\n\"Not yet. I'd space it out every four hours. Only half that amount from now on. Once she starts putting on some weight you can cut back to three times a day and then two.\"\n\n\"Oh, okay.\"\n\n\"And you should schedule a follow-up with the clinic for two weeks down the road. That cast will need to come off, and we'll want to make sure everything looks good.\"",
        "\"Oh. Sure. I'll definitely do that.\"\n\n\"Great. And...I should probably get going,\" Alex said.\n\n\"What time is it?\" Lisa asked, even though she'd just looked at the clock to see when she needed to feed Twiggy again.\n\nAlex knew she knew but told her anyway. She thanked him then he asked her if everything was okay. There was so much caring and concern in his voice that it also hit her very hard.\n\n\"I'm...I think maybe I'm....\"\n\nShe looked up at him then tried to smile as she said, \"A little confused?\"\n\n\"Oh, good,\" Alex replied.\n\n\"What? How is that good?\" an even more confused Lisa asked.\n\nAlex smiled then told her it meant she was having a kind of internal struggle.\n\n\"Struggle? With what?\"\n\n\"With your feelings. About...me.\"\n\nHis voice was soft and quiet, and it sent chills up and down Lisa's back. It did that because he was right. She really was experiencing a kind of mental battle with herself, and admitting it didn't make it any easier.\n\n\"Am I right?\" Alex asked as he moved a little closer.\n\nLisa lowered her head and looked down at the rug running along beside her.\n\n\"I honestly don't understand what's going on. I was just trying to help this poor dog that I ran over, and now I'm....\"\n\nWhen Alex moved even closer, Lisa's heart began racing.\n\n\"Trying to convince yourself you can't possibly have feelings for me, too?\"\n\n\"Too?\" a weak, almost shaky voice asked.\n\n\"Yes. You know I have feelings for you, and I can't help but believe you have them for me. But because I'm a little younger than you, you're looking for reasons to tell yourself that's not possible.\"\n\nEven though that was exactly what was going on, Lisa still wasn't willing to give up.\n\n\"You have no idea what I'm thinking, Alex.\"\n\nIt wasn't her intent to put him in his place, but the way she said that made it sound that way.\n\n\"Okay,\" he said so quietly she barely heard him. \n\nHe was so close that were she to look up again, she would almost be able to feel his breath on her face.\n\n\"I'll give you some time to work through this, okay?\" he said in that same voice that gave her chills again.\n\nWhen she still didn't look up at him, he gently touched her hand then said again, \"Okay?\"\n\nLisa's hand felt like it had just been touched by a bare wire and couldn't even speak. She only nodded her head and waited for Alex to move.\n\n\"Will you call me or text me if Twiggy needs anything?\" he asked as he moved back a bit.\n\n\"Yes,\" Lisa said as she raised her head ever so slightly and briefly made eye contact.\n\n\"Okay. And you do that anytime. Day or night for any reason.\"\n\n\"Thank you, and thank you very much for breakfast. And for coming over this morning.\"\n\n\"I'm just glad I could help,\" Alex told her with a smile that she also saw during a second, very quick glance.\n\nHe went over and said goodbye to Miss Twiggy then got up to leave. When he did he saw Lisa staring at him.\n\n\"Did you want to say something?\"\n\n\"I...I was just wondering if...when you said, you know, all of those things, were you....\"\n\nShe glanced down then looked back at him and finished her question.\n\n\"Did you really mean them?\"\n\n\"Yes. Every word.\"\n\nLisa stopped looking again when he answered her, and not wanting to press his luck, Alex said he'd show himself out.\n\nWhen he got to the door Lisa said, \"Have a wonderful rest of your day, Alex.\"\n\nHe turned her way then smiled.\n\n\"I've already the best day I've had in a long time, so it's kind of hard to imagine the rest of it even being close, but I'll try.\"\n\nHe saw her trying, too. In her case she was trying to smile.\n\n\"Bye, Lisa,\" he said before letting himself out.\n\nOnce he was gone, she went back to Twiggy, sat down next to her and petted her.\n\n\"What have I gotten myself into, girl?\" she asked.\n\nTwiggy's tail was wapping the floor, and when she barked, Lisa laughed. Then she laughed some more and laughed until she couldn't laugh any more.\n\n\"Am I losing my mind, Twiggy?\" she then asked.\n\nThe dog slid closer and flopped her head on the woman's lap, and that also made her smile.\n\n\"I'm so sorry I hit you, but if I hadn't run you over, I wouldn't have met Alex,\" she said, wondering if it wasn't entirely for her own benefit.\n\nThe next morning Alex was up early but wasn't studying when his dad saw him.\n\n\"No books?\"\n\n\"Oh. Hey, Dad. No. I'm a little distracted.\"\n\nThe older man poured himself a cup of coffee then asked his son if he wanted to talk about it.\n\n\"It's a woman.\"\n\n\"Oh. Then maybe I'm not the right person,\" his father mumbled. \"I don't exactly trust them anymore.\"\n\n\"It's okay. I'll work this out.\"\n\nMike McDonald took a sip then sat down across from his son at the kitchen table.\n\n\"What's goin' on?\"\n\n\"Do you think it's possible I'm looking for...a new mom?\"\n\nHis dad eyed him for a couple of seconds then said, \"Alex? I have no idea what the hell you're talking about.\"\n\nAlex took a minute or so and gave his father the short version of events from the way this woman showed up at the clinic until he left her house the day before.\n\n\"Oh. Well, at least it makes sense now. The part about looking for a...surrogate mother.\"\n\nAlex didn't say anything, but his dad had plenty more to offer but need one other piece of information.\n\n\"Just how much older is she?\"\n\n\"I don't know for sure. But ten years? Maybe a little more.\"\n\n\"What about school and your career? You're just getting started. Do you really want to saddle yourself with all that additional responsibility?\"\n\n\"That's a good point, Dad, but there's something about this particular woman. She's...she's unlike any other woman I've ever met.\"\n\n\"You've met plenty of pretty girls, Alex. And you can meet as many more as you want to. So why settle on one that's got at least ten years on you?\"\n\n\"That's the thing. I can't answer that. All I know is she makes me feel...alive. She....\"\n\nHe looked at his dad then said, \"Don't laugh, okay?\"\n\nHis father raised an eyebrow and took another sip but didn't commit.\n\n\"She inspires me.\"\n\n\"Alex. You barely know her.\"\n\n\"Yeah. And yet I can't shake the feeling that....\"\n\nHis father had become jaded and cynical about women since his wife walked out on him and their son. He no longer believed in what he called 'nonsense' like the idea of soul mates, and he probably didn't even believe in love anymore. So Alex decided to end the conversation and do some studying.\n\nAs he got up to leave, his dad said, \"Listen. If this woman makes you happy, you owe it to yourself to find out.\"\n\nAlex didn't ask, \"Find out about what?\" \n\nHe knew this was the best his father could do where women were concerned, and that very short response was a very positive sign.\n\n\"Thanks, Dad.\"\n\n\"Anytime,\" the older McDonald replied as though he were the Oracle of Delphi. Of maybe of Fargo, North Dakota.\n\nBut after an hour of reading and rereading the material he had to know for the next week of class, Alex realized he was too distracted to study. It was now 9am on Sunday morning, and all he wanted to do was see Lisa again. \n\nHe held off texting her for another hour then gave in.\n\n\"Good morning! How's our girl doing?\" he wrote, a smile on his face as he thought about her.\n\nLisa had been out already and bought enough dog food to last at least another week. She was trying to stay busy to keep her mind off of a very attractive, younger man she'd woken up thinking about, so when her phone buzzed it startled her.\n\nShe, too, was smiling as she read the short text.\n\n\"Good! She made it to the door three more times yesterday and first thing this morning again. And thanks to the area you cleared, I didn't have to go out with her, so thank you for that.\"\n\n\"That's great! Did she come straight back inside?\"\n\n\"She did!\"\n\n\"That's a good sign. Sounds like Twiggy thinks she's found a home.\"\n\n\"Well, she has. Barring an owner that's looking for her, I'm definitely going to keep her.\"\n\n\"She's a very lucky girl to have...met you,\" Alex wrote.\n\nLisa sent some smiles back, and Alex debated for a few seconds then texted back, \"And I'm a very lucky guy to have met you, too.\"\n\nLisa's heart skipped a beat when she read it before deciding to take a risk.\n\n\"It's funny but I feel like the lucky one,\" she wrote.\n\nNow feeling more confident, Alex upped the ante.\n\n\"Are you saying you're at least considering something more than just friendship?\"\n\nThat text sent a 'warm chill' through her body. But had Alex not asked she wouldn't have volunteered what she'd been thinking all morning. Now that he had, she felt she needed to share her feelings.\n\n\"I'm still not 100% sure, but I have to admit that you're pretty much all I've been thinking about since we went out for breakfast yesterday.\"\n\n\"It's Sunday, and I hear that some people 'do brunch' on Sundays. Would you maybe like to do brunch with me?\"\n\nAnother wave of warmth washed over when she read his reply.\n\n\"To tell you the truth, I ate something about an hour ago, so I don't think I could do brunch. But I'm definitely going to want something for lunch in a couple more hours if that works for you.\"\n\nAlex was so happy with her response he did a fist pump and said, \"Yes!\" loud enough that his dad heard.\n\n\"Someone must be talking to his older girlfriend,\" the senior McDonald called out.\n\n\"We're going out for lunch,\" Alex called back as he told Lisa that sounded great and asked when he could pick her up.\n\n\"You don't need to spend more money. I'm happy to make something for us if you'd like to come by here again. Besides, I'm sure Twiggy would be as happy to see you as I'll be.\"\n\n\"So you're happy to see me, huh?\" a very happy Alex wrote.\n\n\"Maybe. A little,\" Lisa wrote back with some emojis that indicated she was teasing.\n\n\"I'll gladly take whatever I can get!\" Alex replied, saying something similar to what he'd said the day before.\n\nShe sent some smiles back and Alex told her he'd be there around noon.\n\n\"See you then!\" Lisa wrote. But before she sent it, she looked at the list of emojis, smiled, then clicked on a big red heart and sent it with the short reply.\n\n\"Yes!\" Alex called out again.\n\nThis time his dad walked toward the sound of the noise and said, \"You really like this woman, huh?\"\n\nAlex looked at his dad and said, \"Yeah. I really do.\"\n\n\"Well, don't let my shitty attitude ruin your chance to be happy, Alex. I can't help you with the age thing, but if you really like her, all I can do is wish you the best of luck.\"\n\nAgain, Alex thought about saying something like, \"Coming from you, that's high praise.\"\n\nBut instead he opted for, \"Thanks, Dad,\" before going upstairs to shower and get ready.\n\nThe sky was a bright blue, but the temperature was a balmy 22 degrees. Even so, Alex wore a nice button-down shirt under his coat rather than the sweater or sweatshirt the weather demanded. It wouldn't be cold inside Lisa's house, and he wanted to make the best possible impression, and this was the nicest shirt he had.\n\nLisa also started getting ready as soon as their texting ended. She showered, washed her hair, then got out and dried off before wrapping her wet hair in a towel. As she waited for it to get dry enough to use the hairdryer on, she sat down and started doing her makeup.\n\nShe did her best to ignore the faint little lines she could just make out around the corners of her eyes as she covered them with foundation and then eye liner and shadow. She then added a touch of blush but held off on the lipstick until she got dressed.\n\nWhen her hair was only just damp, she removed the towel then began blowdrying it. Once it was dry, she very carefully pulled a dark-gray sweater over her head making sure not to get any makeup on. Jeans were the obvious choice, but she chose a pair of black pants...just because. Lastly, she used her curling iron to turn the bottom ends of her hair in a bit then took a look in the mirror.\n\nShe looked fantastic but couldn't admit it. All she could see was a woman who was almost 40 years old staring back at her, and that woman was screaming, \"What in the world do you think you're doing?\"\n\n\"I have no idea,\" she said out loud to herself before putting on a pair of earrings and a very pretty necklace and finally a small dab of perfume.\n\nWhatever self doubts she was struggling with vanished when Alex pulled into her driveway. Twiggy heard him first when the tires crunched the icy snow outside. She sat up and barked, and when Lisa went to the door, Twiggy got up and hobbled her way alongside of her new owner.\n\nAlex saw them both as he walked toward the door. He smiled and Lisa saw it, and that made her smile as she opened it for him.\n\n\"Hi!\" she said, a huge smile glued to her face.\n\n\"Hi yourself!\" Alex said as he checked her out in a very flattering way. \"You look amazing!\"\n\n\"Thank you! And may I say you look quite nice yourself.\"\n\nTwiggy barked, and Alex bent over and petted her as the 'three-legged' dog stood there and lapped up the attention.\n\n\"She seems happy,\" Alex said as he looked up at Lisa.\n\nShe was smiling and told him that was going around. Alex stood up, smiled back, and said he agreed.\n\n\"So what's for lunch, Chef?\" he asked, the smile still there.\n\n\"Road hoagies.\"\n\n\"Mmm. Sounds delicious,\" Alex said, even though he'd never heard of such a thing. \"Um...what's in them?\"\n\nLisa laughed then told him how she made them. \n\n\"So the bread and mozzarella soaks up the olive vinaigrette which all goes quite nicely with the slices of turkey breast in the middle.\"\n\n\"Seriously?\" Alex said with a look of love in his eyes.\n\n\"Sound good?\"\n\n\"That sounds fantastic!\" he told her.\n\nAs she began getting things ready, Alex asked if he could help.\n\n\"Sure. That would be very nice.\"\n\nHe did his best to stay out of the way and only bring her what she asked for or needed, but at one point she told him she had to have something from a top shelf in one of the cabinets.\n\n\"There's a step ladder behind that door over there,\" she told him.\n\nAlex ignored her and walked over to where she was.\n\n\"How tall are you?\" she asked as he smiled at her.\n\n\"A shade over 6'2\".\"\n\n\"Oh. So you may not need the ladder,\" she replied rather quietly as he stood less than a foot away from her.\n\n\"I think I can reach it,\" he told her as their eyes met then locked. \"Can you show me again where it is?\"\n\nLisa couldn't hold his stare much longer anyway, so relieved, she turned around toward the cupboard and pointed.\n\nAlex was now directly behind her as he asked which of the things she needed.\n\n\"The green bowl. Right up there,\" Lisa told him as he moved even closer.\n\n\"I don't see it,\" Alex said as he looked up.\n\nLisa moved right up to the counter then pointed again.\n\nWhen she did, Alex followed her and now stood less than an inch away as he looked over her shoulder.\n\n\"Oh. I see it,\" he said just above a whisper as he slowly and softly ran his fingertips up then down her arms.\n\n\"Alex. What...what are you doing?\" Lisa whispered as her entire body trembled.\n\n\"I uh, I can't quite reach it now because there's an incredibly beautiful woman in my way.\"\n\nAs he spoke, he used his entire hands rather than just the fingers.\n\n\"I...I thought it was just you and me here,\" Lisa said as though she couldn't possibly be this 'beautiful woman' just as quietly even as goosebumps spread out all over her.\n\n\"It is. It's just me and this amazing, beautiful woman,\" Alex whispered as he lowered his head and placed face near hers.\n\n\"You're making it very difficult to finish lunch,\" she told him as his arms slowly wrapped around her waist.\n\nAlex heard the faintest little moan then nuzzled her neck.\n\n\"Sorry,\" he told her.\n\n\"I...I don't believe you are,\" Lisa replied, her voice shaky, as she put her hands on his.\n\n\"You could always move to the side,\" she heard him whisper as he kissed her neck.\n\n\"I...I could. But for some reason I'm not really all that hungry right this minute,\" she said, her voice growing even more unsteady as her breathing grew faster. \n\nAs his body pressed against hers, she felt him and gasped.\n\n\"Sorry,\" he whispered. \"You have that effect on me.\"\n\n\"I...I don't mind...at all,\" she said as she instinctively pressed against him.\n\n\"Come here,\" Alex said, again nearly whispering as he gently turned her around.\n\nLisa let him and when they were face to face she felt like her heart was ready to explode. Her eyes were darting back and forth between his as Alex gently brushed her hair back.\n\nHe didn't say anything, but when he began lowering his head, Lisa saw his eyes close, and when the did, hers closed with them. When their lips met for the first time, she slid her arms around his neck and kissed him back.\n\n\"I've wanted to do that since you walked into the clinic,\" he told her with another smile.\n\n\"I'm...I'm glad you...waited,\" she said, her heart beating wildly in her chest.\n\n\"Yeah, that wouldn't have gone over so well, would it?\" he said with an even bigger smile.\n\nHer trembling turned to something closer to fear as she said without looking at him, \"I...I should move so you can, you know, get the...the thing...I need from...up there.\"\n\nShe kind of pointed back over her shoulder and then moved to the side a little.\n\n\"Oh, right. It is lunchtime, isn't it?\" Alex said without taking his eyes off of her until she was out of the way. He then reached up and got it and handed it to her.\n\n\"Thank you,\" Lisa told him even as she looked at what he gave her rather than at him. \"I'll just...I'll go ahead and finish making, the um...the....\"\n\n\"The hoagies?\"\n\n\"Yes. Those. I'll make those now.\"\n\nThere wasn't any more physical contact let alone romance during lunch. They talked but the conversation seemed strained, and all of it was on Lisa's end.\n\n\"I moved too fast, didn't I?\" Alex asked near the end of the meal.\n\n\"I don't know,\" Lisa told him. \n\n\"I'm sorry if I did. I...I've never felt like this about anyone before, so I think maybe I was a little too...forward.\"\n\nLisa looked at him then told him, \"I wanted to kiss you, too, Alex.\"\n\n\"But?\"\n\n\"I'm not...I...I don't do...you know. The um, the one-night stand thing.\"\n\n\"What?\" Alex replied with a shake of the head.\n\n\"You know. Hooking up.\"\n\n\"I know what one-night stand means. I just can't believe that's what you thought I wanted.\"\n\nLisa looked out the window for a moment then looked back at Alex.\n\n\"That's just the thing, Alex. I don't know what it is you do want.\"\n\n\"I can promise you that's not what I want. I can also tell you that I really want to get to know you better, Lisa. And I promise I'll.....\"\n\n\"You haven't asked me how old I am yet.\"\n\nHe gave her another confused look which only confused her.\n\n\"When I told you I was thinking about you, too, what I was thinking about was...was why a guy your age would even consider, well, you know...dating or seeing...a woman my age.\"\n\nShe stared at him then asked, \"So...why would you, Alex?\"\n\n\"Did you miss the part where I told you how beautiful you are?\" he gently asked.\n\n\"No, but....\"\n\n\"Did you not hear me tell you that no one has ever made me feel the way you do?\"\n\n\"I did hear you, but you....\"\n\n\"Why is it so hard for you to believe that I am crazy attracted to you both physically and mentally?\"\n\nLisa looked at the half-eaten hoagie on her plated then said, \"You're a college graduate and soon you'll be a veterinarian. I...I have an associate's degree in general studies, so it's not like there's that much...mental going on.\"\n\nLisa was so caught up in her feelings and the renewed doubts that she wasn't aware of what she'd just said or how it sounded. But when Alex started smiling, she quickly pieced it together.\n\n\"I just said I'm...mental, didn't I?\" she asked, a smile forming on her lips, too.\n\n\"Not quite,\" Alex replied. \"But that's not what I meant. I was just trying to convey how much I like you, and that I like...everything about you, Lisa. I'm not the most...artful orator...but I am honest and sincere.\"",
        "He reached over for her hand, and after some hesitation, she gave it to him.\n\n\"And I really do like you, Lisa. Very much. So all I'm asking is for the opportunity to see if whatever it is we're feeling is...is real.\"\n\n\"So you don't want me to tell you how old I am?\" she asked in a way that made him want to laugh. Somehow, though, he held it in.\n\n\"It wouldn't change anything. No matter what you tell me.\"\n\n\"Then will you tell me how old you are?\" she asked as fear welled up inside her.\n\n\"Are you sure you want to know?\" Alex asked back, a smile on his face again.\n\n\"No. I'm not sure.\"\n\n\"Would it change anything?\"\n\n\"I'm...I'm not sure,\" Lisa said again as her body began trembling even worse than it had before as Alex squeezed her hand and scooted closer.\n\n\"Then let's not let that be an issue, okay?\"\n\nShe tried to say 'okay', but before she could get out more than the 'o' he kissed her again. There was utter silence in the house when the kiss ended, and Lisa was still shaking when they both heard Twiggy bark twice.\n\nIt scared Lisa, who was completely lost in a sea of emotion and thought, so badly that she yelped and pulled her hand away as she sat up in the chair.\n\nAlex couldn't help but laugh, and once Lisa realized what happened, she laughed, too.\n\n\"So how do we go about...finding out?\" she asked the younger man who was now her...boyfriend?\n\n\"I haven't done a lot of it the last three years, but I believe it's called dating.\"\n\n\"Dating. That sounds ominous,\" Lisa replied, a smile now on her pretty face.\n\n\"Yeah. Maybe we should use a different word.\"\n\n\"How about...exploring?\" Lisa suggested.\n\n\"Exploring. Hmmm. You know what? I kind of like that?\"\n\n\"Yeah?\" Lisa asked as she moved toward him.\n\n\"Uh-huh. I do.\"\n\n\"That's good,\" she said with a little laugh before kissing him for the first time.\n\nThis kiss lasted several seconds, and when it ended she smiled and said, \"I think I like it, too.\"\n\nAlex sat up then looked around and said, \"You know what I just realized?\"\n\n\"Uh-oh,\" Lisa said with a small amount of genuine concern thinking maybe he just realized she was a whole lot older than him.\n\n\"No. Just listen.\"\n\nHearing nothing, Lisa asked what it meant.\n\n\"It means Twiggy is a very good dog. She's laid there this whole time without barking or crying. And that means she's probably not in pain, either.\"\n\nLisa agreed with him then said, \"That reminds me. It's time to feed her again and give her her pain medication.\"\n\n\"I'll get the food ready if you want to grab the Tramadol.\"\n\n\"Sure! Thank you. And I have to say I was really surprised to learn that animals can take Tramadol. I thought it was only for people.\"\n\n\"No, it's a synthetic opioid that's safe and effective for dogs and other animals.\"\n\n\"Once again, you have made me feel...not so smart,\" Lisa said with a smile as she got up.\n\n\"Well, you're obviously very smart,\" Alex told her as she pointed to where she kept Twiggy's medication.\n\n\"Oh? How so?\"\n\nHe walked over to her, put his arms around her and said, \"You like me, so....\"\n\n\"That's...that's....\"\n\nLisa was going to say 'ridiculous', but it was wasn't. So she thought for a moment then said, \"That's...true.\"\n\n\"Yeah? So you do like me?\"\n\n\"I guess,\" Lisa teased even as she wondered how this could be happening.\n\n\"Good, because I really like you.\"\n\nShe wanted to come up with some witty response, but it had been so long since she felt like this that it didn't seem right to make light of the situation.\n\n\"That makes me very happy, Alex,\" she told him sincerely.\n\n\"Me, too,\" he said before kissing her again then going to get a pill out of the bottle and crush it up to mix in the canned food Lisa bought.\n\nTwiggy wolfed down the medicine-laced meal like it wasn't even there. Once she was done, Alex took her outside without the leash, and Twiggy was able to hobble around then squat down in spite of the cast and do her thing. \n\nWhen she finished she got up and started wagging her tail. Alex got down on his haunches and the dog came straight over and wanted to be petted and got plenty of it. Lisa was watching and smiling and for the first time in a very long time she felt like she had a family. It wasn't, of course, but the feeling was truly amazing.\n\n\"She is such a good girl,\" Alex said when he brought her back inside.\n\n\"I'm very lucky to have her,\" Lisa said as she petted the happy canine.\n\nOnce Twiggy settled back down, Lisa looked at Alex and said, \"I'm also very lucky to have you.\"\n\nAlex smiled, and before he could say he felt the same way, Lisa said, \"Not that I...have...you. I just meant that it's really nice to....\"\n\nAlex moved closer then put his hands on her shoulders.\n\n\"You have me. If you want me, that is.\"\n\nShe put her arms around his neck then smiled.\n\n\"I do. I'm not sure what changed or how it even happened, but...it did.\"\n\n\"I'm glad it did, because I' like to have you, too.\"\n\nImmediately aware of the other meaning he apologized and said, \"That wasn't what I meant. I was only trying to say that I....\"\n\nLisa put a finger on his lips then smiled again.\n\n\"I know what you meant,\" she said and wanted to tell him he could also 'have her' if he wanted, but she wasn't about to make the first move.\n\n\"You are so beautiful, Lisa,\" Alex told her. There was no smile on his face this time. There were just words. And yet those words were the sweetest she'd heard since....\n\nWhen he kissed her she melted into his arms. The kiss was long and slow and oh-so delicious as their tongues touched for the first time. \n\nWere he to make the first move or even hint about making love to her, Lisa would have drug him into her bedroom in an instant. But he didn't. He only looked at her and told her again how beautiful she was. And as much as she wanted him, for now at least, that was more than enough.\n\n\"I feel like I'm taking up all of your time,\" she said as they held one another after the kiss.\n\n\"I do need to study in the worst way, but I couldn't even concentrate this morning.\"\n\n\"Then you should go study,\" she told him without moving her head from where it lay in the crook of his neck.\n\n\"I really should. And now that I know you and I are....\"\n\nAlex raised his head and waited for Lisa to look up at him.\n\n\"What are we now?\" he asked.\n\n\"Explorers?\" Lisa replied with a little smile.\n\n\"That works.\"\n\n\"But if you were to call me...your girlfriend, I wouldn't mind that at all.\"\n\n\"That sounds pretty wonderful to me, and I can't think of anything I'd like more than to be your boyfriend.\"\n\nLisa didn't care that this sounded like something kids in high school might say. The only thing that mattered was how hearing and saying them made her feel.\n\n\"That sounds pretty wonderful to me,\" Lisa told him as she used his words.\n\n\"I really don't want to leave,\" Alex told her.\n\n\"And I don't want you to go. But you just have a few months left, and I can only imagine how much reading and studying you have to do. And as much as I'd like you to stay, I can't let my wants stand in the way of what you need to do.\"\n\nAlex smiled at her and said, \"You are the best girlfriend ever.\"\n\nLisa laughed a happy laugh then kissed her boyfriend and told him to go and study.\n\n\"I could bring my books back here and study.\"\n\n\"You could, but with the way I'm feeling, you might not get much studying done,\" she said, surprising herself with this sudden burst of boldness.\n\n\"So it isn't just me,\" Alex said in a way that made her tingle from head to toe.\n\n\"Oh, it isn't just you. Trust me.\"\n\n\"In that case, I really should go. Now.\"\n\n\"Can I have one more kiss?\" she asked, almost feeling 17 again.\n\n\"Yes but just one. Any more than that is way too dangerous.\"\n\nWere she selfish, Lisa would have seduced him right there, but that wasn't who she was. She really did like Alex and he was going to be a veterinarian by summer, and she not only wasn't going to stand in his way, she wanted to support him as much as she possibly could.\n\n\"I'm so glad you come over again,\" she told him after their final kiss.\n\n\"Oh. You have no idea how happy I am that I did.\"\n\n\"I think I might have some little inkling of how you feel,\" she told him, a smile on her face that made her look like a sweet little girl.\n\n\"Okay. That's it. I cannot look at you for one more second,\" Alex told her.\n\nLisa walked him to the door where they hugged and gave each other a quick peck before Alex left. As he walked away Lisa stood there watching and said to herself, \"What a difference a day makes.\"\n\nAs Alex studied Lisa spent the day basking in the glow of the way she was feeling. She was tempted to start questioning everything beginning with their difference in age, but the feelings were so powerful that she couldn't. But she did leave a small space in the back of her mind just in case something went wrong. It wasn't that she hoped it would or even thought it would. But any relationship this new was tenuous, and things could easily change regardless of the ages of the people involved. Theirs just made it all the more difficult.\n\nSo for now she was content to feel happy again and to be able to care for an animal that undoubtedly needed love as much or more than she did.\n\n\"We are two very lucky girls, aren't we, Twiggy?\" Lisa said as she sat down by her dog.\n\nMiss Twiggy seemed to smile as she again laid her head on Lisa's lap then began swishing her tail when the beautiful woman stayed there and petted her for a very long time.\n\nWhen Alex got home his dad gave him a funny look.\n\n\"What?\"\n\n\"Oh, nothin',\" his dad replied with a smile Alex hadn't seen in a long time.\n\n\"Go ahead. Say it.\"\n\n\"She's good for you.\"\n\nWhy Alex didn't get it immediately was hard to explain. But he got it now and smiled.\n\n\"Yeah. She's amazing.\"\n\nHis dad gave him another look, and Alex had to work hard to get his dad to say what he was thinking.\n\n\"If you uh, if you want to bring her over sometime, for you know, dinner or whatever, I promise I'll be on my best behavior and not say anything disparaging about the fairer sex.\"\n\nFor all his issues with women, Alex wouldn't trade his dad for anything.\n\n\"I may just take you up on that one of these days.\"\n\nHis dad nodded then said, \"Don't you have some studying to do?\"\n\n\"It's more than some, Dad, but until I saw Lisa I couldn't concentrate.\"\n\nHis father raised his eyebrows, and this time Alex knew what he was thinking.\n\n\"No. That definitely did not happen.\"\n\n\"Oh. Okay,\" his dad said with a shrug of his shoulders before he disappeared.\n\nAlex buried himself in his books until 8pm, taking only a short break to eat some pasta his dad made around 6 o'clock. He still had more to do, but now that he had almost all of it out of his way, he found it impossible to focus on things like 'the transmission rate and incubation period of rabies in canines' so he took a break.\n\nWithin seconds he had his phone in his hands and was texting her.\n\n\"Hope I'm not bothering you, but I can't read one more line about Caprine Arthritis Encephalitis Virus.\"\n\nLisa's heart skipped a beat when she saw his text then laughed when she read it.\n\n\"That sounds like a real page turner! Whatever that means.\"\n\n\"It's right up there with iodine treatment of hyperthyroid cats!\"\n\n\"Yes! Another perennial favorite!\" she wrote back.\n\n\"I had a really nice time today, Lisa.\"\n\n\"Me, too,\" she wrote with several hearts behind it.\n\n\"I can't tell you how happy I am that you've um...warmed up to me.\"\n\nLisa laughed again then replied.\n\n\"I'm still not sure how that happened myself, but I do know that I felt happy today, and that hasn't happened much in recent years. And in case you're too tired to connect the dots, you are the reason for that.\"\n\n\"That makes me even more happy!\"\n\nShe sent some smiles to him then Alex asked how their girl was doing.\n\n\"Great. I sat with her for nearly an hour after you left. She was so sweet! She just put her head on my lap and let me pet her.\"\n\nAlex smiled then wrote, \"That is sweet. And I think I'm a little jealous!\"\n\n\"Do you need someone to pet you?\" Lisa wrote then panicked when she realized what she'd said.\n\nAlex noticed that immediately but didn't mention it.\n\n\"I wouldn't mind sitting next to and maybe watching a movie.\"\n\n\"I have a Blu-ray DVD player.\"\n\n\"Is that an invitation?\"\n\n\"Yes, but I have to get up early to go to work, and I believe you're always up early, too.\"\n\n\"What if I promise to leave right after the movie's over?\"\n\n\"Hmmm. Let me think. I could sit here alone or sit next to this very handsome soon-to-be veterinarian. Wow. That's a tough call!\"\n\n\"I'll be right over, okay?\"\n\n\"I'll make some popcorn as soon as you get here,\" she told him.\n\nThey watched \"The Ugly Truth\" with Gerard Butler and Katherine Heigl as the munched on popcorn and laughed all through the movie as the sexy, uptight female producer eventually falls for the crude commentator.\n\nAs they watched Alex took Twiggy outside even though it was freezing cold. Back inside, Alex laid the dog on the couch with them, and there was some hand holding and a little bit of snuggling, but both of them seemed to know that if they started kissing the only way it would end was in bed, and neither of them was ready for that just yet. So they settled for less, believing that at this stage, less was really more with a very long kiss goodbye the extent of the physical side of things.\n\nWeekdays proved to be more difficult than either Lisa or Alex had imagined. Between her full-time job and Alex going to class, there was precious little time for them. But it was worse because needed several hours a day to study and a couple more to help out at the clinic.\n\nHe apologized several times during the first week, but Lisa assured him there was nothing to apologize for.\n\n\"You have to put in the time now to reach your goal,\" she told him. \"And I'll do everything I can to help you get there. So while nothing would make me happier than to spend more time with you, supporting someone means sacrifice, and that seems like a reasonable price to pay.\"\n\nShe'd smiled after saying that then said, \"And it just makes what time we have together that much more valuable.\"\n\nAlex knew he liked Lisa from the first time he saw her, but it was this kind of thing that made him wonder if he might possibly be falling in love with her. Maybe it was subliminal due to being around his father, but he didn't believe in soul mates or love at first sight, either. He believed in long courtships and long engagements, and yet, he'd never actually been in love before. So he had to wonder why he was already obsessed with wanting to be with this beautiful, older women every minute of the day.\n\nBut there was precious little time for such musings as the realities of school and final exams loomed in Alex's near term future. So he attended class, studied, helped out at the clinic, and saw Lisa as much as he could in what little spare time remained.\n\nHe was there when Twiggy got her cast off, and Dr. Collins let Lisa hang around in the back for a couple of hours knowing that her protege was getting serious with the beautiful, older woman who'd run over the dog.\n\nIt was about a month after that that they were finally able (and ready) to sit down with Alex's father for the first time. He not only kept his promise about behaving, but he'd taken the time to shave and wear something decent to meet his son's new girlfriend.\n\nWhen she stepped inside, he was taken aback because he'd been led to believe she was a lot older than Alex. But the woman he saw looked to be around 32 which was older, but not so much so that it concerned him.\n\nWhen he shook her hand and mentioned it in a polite way, Lisa thanked him for the compliment and soon felt completely at ease around him.\n\nThe issue of age was never raised directly, but after dinner, Mike asked Lisa if they had any plans for Alex's upcoming birthday.\n\n\"No. In fact, someone completely forgotten to mention that,\" she said as she looked at Alex.\n\n\"Sorry. It's no big deal to me, and I've so busy it just never occurred to me.\"\n\n\"I do understand. I'm at a point where I try and forget them altogether,\" Lisa said with a little laugh.\n\n\"Alex talks like he's my age, but for someone turning 26, I don't really understand. Seems like it ought to at least be worth mentioning,\" the elder McDonald quipped.\n\nMike was smiling until he saw Lisa's mouth open in disbelief.\n\n\"Did you say...26?\" she asked her eyes now open very wide.\n\n\"Well, let's see. If you take 2020 and subtract 1994 from it, I think that's right,\" Michael said, not sure what was goin on.\n\n\"We uh, we haven't told each other our age yet, Dad,\" Alex said in a way that didn't indicate it was any big deal.\n\n\"Oh. Well, even so, I don't see where six or seven years is that big a deal,\" his dad replied as though he was settling the issue for both of them.\n\n\"No. Six or seven years isn't a big deal at all,\" Lisa said, having done the math in her head.\n\n\"Hey. You okay?\" Alex asked the woman beside him.\n\n\"Um, yes. I'm...fine,\" she told him as the number 14 got bigger and brighter in her mind. \n\nShe would soon be 40, so it was really closer to 15. She'd somehow pushed it out of her mind this entire time, but the thought of her being a sophomore in high school when Alex was born shook her to her core.\n\n\"Anyone want some more wine?\" Mike asked, hoping to lighten the mood.\n\n\"Yes. Yes, please,\" Lisa said as he got up to go to the kitchen.\n\n\"Something's bothering you,\" Alex said the moment his dad was gone.\n\nIt took her a few seconds to say it, but she told him she had this image of her at 15 changing his diaper.\n\n\"Fifteen? So...wait. Are you telling me you're...40 years old?\" a shocked Alex asked.\n\n\"No. Not until June.\"\n\nLisa turned to look at him, and for the first time since their second meeting, she felt like he had to see her as...ancient. \n\n\"Is that supposed to bother me?\" he asked with a smile.\n\n\"I...I don't know,\" she replied very quietly. \"Does it?\"\n\nAlex took her hand and looked right at her and said, \"Let me make it perfectly clear. That doesn't bother me at all. Not in the least. Okay?\"\n\nWhen she didn't say anything, Alex was the one who got concerned.\n\n\"Is that image in your mind going to change how you feel about me?\" he asked in the gentlest way possible.\n\nShe just sat there staring at him, so Alex said, \"I can assure you I don't wear diapers anymore.\"\n\nIt was another couple of seconds, but it was suddenly very clear that it really didn't matter. Alex was a grown man. And a very attractive grown man, at that. He was also kind, loving, hardworking and very driven. And he'd made it clear that he liked her very much. And she also now knew he really didn't care how old she was.\n\nWhen Alex saw her tearing up, he thought she was on the verge of ending it with him.\n\n\"Please don't tell me it's....\" he began saying when she put her hand on his face and spoke.\n\n\"I...I love you, Alex,\" she said, barely able to believe she'd said those words. But she had. And she'd said them because they'd roiled up from deep inside her and came out, as it were, by themselves.\n\nHis eyes were darting rapidly between hers, and just as he was leaning in to kiss her, his dad said, \"Okay. Here we....\"\n\nHe stopped talking and Alex stopped leaning. Lisa pulled back and sat up then tried to dab her eyes with the cuff of her blouse as Michael said, \"I'm really sorry. I hope I didn't do anything to....\"\n\n\"No. It's okay,\" Lisa told him as she looked at him and smiled. \"In fact....\"\n\nShe looked at Alex then took his hand and said, \"I don't think things have ever been better.\"\n\nAlex didn't say anything. He just squeezed her hand and smiled at her, and from that moment on, Lisa knew she was in love with him. Their ages, the short time they'd known one another, and the limited time they had to spend together, didn't matter. ",
        "But it wasn't until Alex took her home that she felt secure in her feelings. He came inside to see Miss Twiggy, but as he was saying goodbye, Alex told her how he felt.\n\n\"I didn't have the opportunity to tell you how I feel about you tonight after you told me that you...love me. I wanted to say it back to you right then so much it hurt.\"\n\nLisa smiled and slid her arms around him and said, \"It's okay. You don't have to say it.\"\n\n\"Oh, yes I do,\" Alex told her. \"Because if I don't say it, I'm going to go out of my mind.\"\n\nHe looked into her eyes and said, \"Lisa, I love you. I love you so much, and have since....\"\n\nShe stopped his words again by kissing him, and after the short kiss ended, she asked if he could possibly stay a little longer.\n\n\"I think I could do that,\" he told her, knowing full well what she meant.\n\n\"But you have to promise me you won't make a face when you see me....\"\n\n\"Why would I make a face?\" \n\n\"Have you ever seen a 40-year old woman's body before?\"\n\n\"You're only 39,\" Alex teased.\n\nShe smiled then laughed before saying, \"You better not laugh when you look at me!\"\n\nLisa was so worried about that that she turned off the bedroom light before getting undressed. She was getting ready to slide into bed when Alex reached over and turned on the lamp on the nightstand.\n\n\"What are you doing?\" she shrieked, causing Twiggy to bark.\n\nLisa pulled the bedspread up to cover her, but Alex sat up then smiled at her.\n\n\"I love you, and you're beautiful,\" he told her as he reached for the bedspread.\n\nAll she could do was trust him, so she let go and prayed he wouldn't react.\n\n\"So?\" she asked as he looked at her.\n\n\"You're even more beautiful than I'd imagined.\"\n\n\"You're not just saying that?\" she asked, a look of concern in her eyes that was so deep that it moved Alex deeply.\n\nHe looked down at the bed just below his waist, and Lisa noticed a very large bulge.\n\n\"Oh. I...I guess it must be true,\" she said as he slowly pulled the bedspread back.\n\nAlex laughed when he saw her eyes get big once nothing but his body was left uncovered.\n\n\"You...that...that's...HUGE!\" she said as he then took her hand and pulled her in alongside him.\n\nHe chuckled softly then laid back and pulled her down with him. She laid her head in the crook of his neck then ran her hand over his bare chest then down his stomach until she found what she wanted.\n\n\"You better go very slow, because it's been well over three years, and I...I've never had anything that...that big inside of me before,\" she warned as she held him then gently stroked his length.\n\n\"I will. I promise.\"\n\nAlex kept his promise\u2014at first. But once she...adapted...to this man who was much bigger than anyone she'd ever been with...she begged him not to go quite so slowly as years of pent-up passion boiled over in her bed with the younger man she loved.\n\nShe came three times, and one of them was due to his sheer size alone, something she'd never experienced before.\n\n\"You are a very talented lover,\" she told him afterward as he held her.\n\n\"Um...you're the amazing one,\" Alex informed her.\n\n\"You're just saying that because you love me,\" a very happy and satisfied Lisa said.\n\n\"I do love you, but you're quite...talented...yourself.\"\n\n\"I'm just so out of practice.\"\n\n\"I didn't notice, but if that concerns you, we can change that, you know.\"\n\n\"Yeah?\" Lisa teased with a smile. \"Are you sure you're...up...for that?\"\n\nAlex lifted the covers, and when she peeked in, she gasped.\n\n\"Oh, my....\"\n\nShe looked at him then said, \"You are up for that. WAY up!\"\n\nWhen he rolled her over and got on top she laughed and pulled him close and told him how much she loved him as she reached for him then told him how much she loved...him.\n\n\"And trust me, that's a lot to love!\" she said as he took her as deeply as he could.\n\n******\n\nSpring came early to Fargo that year. And it was during Spring break that Alex McDonald moved out of his father's home. He was already spending most evenings and weekends with Lisa Blackman and the dog they loved. \n\nTwiggy had put on nearly seven pounds and looked like the happy dog she was. Her ribs could be felt but no longer seen and her coat looked shiny and smooth. She was every bit a member of the family and was allowed on anything but the bed. But that was fine with her because she was just a few feet away from the two people who loved her the most, and she loved them just as much.\n\nWhen Alex graduated from NDSU's veterinary college the first week of June, Lisa was there along with his father and her brother, Ed, who'd become very good friends with Alex. Doctor Collins was there, too, and when she saw Alex after receiving his diploma, he saw her cry for the first time. \n\n\"I am so proud of you!\" his mentor said before smiling and adding, \"partner!\"\n\nLisa bought a beautiful new dress for the occasion, and Michael took her and Alex to the nicest restaurant in town to celebrate. Ed was invited to join them, but he bowed out leaving the three of them to spend some time together after the big event.\n\nMike was slightly less cynical about women these days, because Lisa had made a huge impression on him. In fact, she'd had such a positive effect on him, that he'd signed up for a dating site that catered to people over 50 and had his first date in nearly a decade lined up for the following weekend.\n\nWhen they ordered dessert, Lisa told her handsome veterinarian boyfriend how proud she was of him\u2014again\u2014and he told her how much he loved her.\n\n\"In fact, I love you so much that I'd like to ask you something.\"\n\nLisa had been smiling, but when Mike fished something out of his jacket pocket, she stopped. When Alex took it and got down on one knee she gasped and Mike started smiling.\n\nEven the hardened man who'd had his heart broken couldn't help but believe in love again as his son told this gorgeous, older woman how much she meant to him before asking her to spend the rest of her life with him.\n\nWhen she said 'yes', he had to turn away and pretend there was something in his eye while reaching for the linen napkin in his lap then swiped it across his eyes so quickly that neither Lisa nor Alex noticed.\n\nWithout missing a beat, Mike got up and hugged his son's fianc\u00e9 then turned to his boy. Alex expected a handshake and stuck his out, but his father surprised him when he batted the hand away and embraced his son for the first time since he was maybe six years old.\n\n\"I'm really happy for you, Alex.\"\n\nLisa couldn't believe this was happening, and with all of the another commotion going on, she began tearing up herself. As if that wasn't enough, she noticed that the man she loved was also watery-eyed then heard his father tell him, \"I'm so proud of you, son.\" \n\nWhen that happened tears began falling down her face, and Lisa stood up then joined in and made it a group hug.\n\nAfter they sat back down, Alex turned to his dad and said, \"Well, it's your turn now, Dad.\"\n\nHe was expecting a sarcastic reply but instead he got something entirely unexpected.\n\nMichael McDonald looked at his future daughter-in-law and said, \"This beautiful lady has restored my faith in women.\"\n\nLisa still hadn't stopped crying, and it got worse when Mike said, \"And with any luck and a little time, maybe I'll be asking you to hold a ring for me one of these days.\"\n\n\"It'd be my honor, Dad,\" his son told him.\n\n\"I'd love to be a part of it, too, Mike,\" Lisa told him, her eyes a mess but her face still as beautiful as ever.\n\nMike smiled then said, \"You will be. I promise. Bu let's just hope I don't have to, um, run over a dog to find her!\"\n\nHe knew how much Twiggy meant to them both and that she was the reason they were together. He also knew how and why they'd met, and neither of them took the slightest offense at what he said.\n\n\"It's not the best way to meet your future wife, but it worked for us,\" Alex said as he took Lisa's hand.\n\nLisa managed to stop crying then said to Alex, \"The day Twiggy got run over was both the worst and the best day of my life, because had that not happened, I'd never have met the most amazing man I've ever known.\" \n\nShe then turned to Mike and said, \"Or his wonderful father.\"\n\nThis time both of them saw the older man tear up, but to this day he denies that he did. But he did find love again, and the day he proposed, Alex and Lisa McDonald were both there to share the experience with him. \n\nSo, too, was the little one-year granddaughter that had him and her father wrapped around her tiny little finger.\n\n \n"
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "love",
        "romance",
        "relationships",
        "attraction"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/run-over"
}