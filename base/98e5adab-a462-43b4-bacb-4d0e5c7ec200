{
    "title": "Women's Studies Ch. 07",
    "pages": [
        "\"Holy shit!\" Kennedy exclaimed, standing in the doorway with her mouth agape.\n\nAbigail and I were together in her bed. The sheets were still covering most of us, but by our bare shoulders and exposed legs, it was obvious that we weren't wearing much, if any clothing. Abigail and I had only woken a short while ago, and with our already being naked, one thing had easily led to another, and I was spooning her, slowly fucking her from behind.\n\n\"What are you doing here?\" I exclaimed, panicked; my body frozen in mid thrust. \"You weren't supposed to be back until tomorrow!\"\n\n\"That's what you have to say?\" Kennedy stared at me, still standing in the open doorway. \"Nothing about any of...this?\" she said, gesturing elaborately with her hands.\n\n\"When did this start?\" Kennedy asked. \"When did she find out you have a penis?\"\n\n\"You have a penis?\" Abigail asked, feigning shock before bursting out into giggles, causing a sensation like pure blissful torture as her pussy flexed around my cock.\n\nI didn't know what to do. I felt kind of awkward having Kennedy in the room while I had my dick in Abigail, but Abigail hadn't made any move to have me withdraw. In fact, she had begun to make minute gyrating motions with her ass into my crotch.\n\n\"Um, Kennedy, can we get a second?\" I asked.\n\n\"No! I need answers damn it!\" she said with mock outrage, sitting down on the edge of the bed.\n\n\"I found out a while ago, but I didn't say anything,\" Abigail said, making those wonderful motions on my cock.\n\n\"So, you guys had sex?\" Kennedy asked. \"Wait...\" she paused to take a closer look at us. \"Are you having sex right now?\" She smiled wickedly as reached for the edge of the sheet.\n\n\"Hey!\" Abigail exclaimed, holding her sheets tight against her.\n\nKennedy was laughing outright now as she drummed her feet on the floor. \"Fine! Fine! I'm going to go and grab us some breakfast while you two finish up,\" she said, giving my ass a smack. \"If you're not done by the time I get back, I'm just going to have to watch until you finish,\" she said, getting up to leave.\n\nBefore the door even shut, Abigail pulled herself off my cock and threw the sheets aside, baring me completely. She climbed on top of me with a feline grace causing her pale breasts to bounce seductively. Easily straddling me, she aimed my cock at her entrance and slid herself carefully down my swollen shaft.\n\n\"Oh God!\" she mewled, wincing at my intrusion. \"You feel so good.\"\n\n\"You feel incredible Abby,\" I sighed, reveling in her warm embrace.\n\n\"You know, I love it when you call me Abby,\" she said, smiling down at me with her dark brown hair wildly framing her beautiful face.\n\nAbigail braced her weight with both hands on my ribs, cupping the underside of my breasts as she slowly rolled her hips, pressing her clit against me as she fucked herself on my cock. Her beautiful lips parted as her breath quickened, and her breasts began to bounce in a hypnotic fashion as they were pinned between both of her arms.\n\nI gripped her hip bone with one hand, urging her on, while my other hand trailed over the soft skin of her stomach, up to tease her breasts.\n\nThe combination of wet friction from her pussy, and the beautiful vision of her naked body on top of me, was bringing my orgasm faster than I wanted.\n\n\"Slow down Abby,\" I panted. \"I'm so close!\" I moaned.\n\n\"Good,\" she gasped, ignoring my warning as she picked up her pace.\n\nMy quiet pants turned into loud, high pitched moans, as I fought my building climax. Abigail's movements began to take on a life of their own as her voice rose, making music with my own.\n\n\"I'm cumming, Abby!\" I cried \"I'm cumming!\"\n\nAs I spewed forth my seed, Abigail kept hammering herself onto my bursting cock. Her eyes were shut tight as she threw back her head. I had finished filling her with my cum, but Abigail pressed on, torturing my oversensitive cock. When I was about to scream that I could take no more, her body locked up atop of me as she let out a wail of ecstasy. I suffered through the painful bliss of her pussy milking me until, at last, Abigail fell forward beside me on the bed, letting me slip from what had become the torturous depths of her pussy.\n\n\"That was incredible!\" she sighed, squeezing her hand between her thighs as she felt for the mess I had made. \"But now I have to kick you out of my bed,\" she said giving me a smile and a nudge. \"Kennedy will be back soon, and I trust her when she says she will sit there and watch us until we're finished. So, get dressed.\"\n\n\"Ugh,\" I sighed as I pulled my sex-tired body up and out of her bed. \"She would too.\"\n\nNot knowing how much time we had before Kennedy's return, I quickly threw on a pair of pajama pants and one of my old Alex t-shirts that hugged my breasts deliciously. It felt weird wearing one of my old t-shirts like this. I loved the way my breasts looked in it, and I kind of felt like I was a girl wearing her boyfriend's t-shirt.\n\nAbigail was in the process of slipping on a pair of girly boxers, after cleaning up the mess I had made in her pussy, when Kennedy returned with breakfast burritos.\n\n\"Sausage, egg, and cheese,\" Kennedy said tossing a burrito to Abigail, and then me. \"I assume neither of you have a problem with sausage?\" Kennedy asked with a smile and a raised eyebrow as she sat on the edge of Abigail's bed to unwrap her own breakfast.\n\nI was sitting cross legged on my own bed as we ate, and I listened to Kennedy probe Abigail for details on how her first time was.\n\n\"So,\" Kennedy began. \"How was it? Was it as good as you thought it would be?\"\n\n\"Better,\" Abigail blushed. \"How come you never told me how great it feels?\"\n\n\"Because it isn't always great,\" Kennedy said, shrugging as she took a bite. \"Sometimes it sucks.\"\n\n\"Hey now!\" I cut in, feeling the need to defend myself.\n\n\"Not with you, Sweety. I mean in general,\" Kennedy clarified. \"You're an exception.\"\n\n\"Sex is a nuanced art form,\" Kennedy explained to Abigail. \"Some guys think all they have to do is stick it in and pound away, but there's so much more to it. You lucked out for your first time and found someone who knows what they're doing.\"\n\n\"She is pretty good, isn't she?\" Abigail said, giving me a smile. \"I see now how you could lock yourselves away for hours on end without coming up for air.\"\n\nIt was a little embarrassing to be in the middle of their girl talk, with me being the topic of discussion, but at the same time flattering. It was always nice to know that you had done a good job, though it became a bit much after a while. Kennedy insisted that Abigail give her a play by play, and the details were pretty graphic. By the end of her recital I was wishing I hadn't forgone wearing panties. My cock was rock solid and without my panties to contain it, I easily tented the loose fabric of my pajama bottoms.\n\n\"You okay over there, Lexi?\" Kennedy smiled, noticing my attempts to try and conceal my erection.\n\n\"Yeah, everything's fine,\" I replied, trying to act casual.\n\n\"You sure? All this sex talk isn't getting hard on you is it?\" she asked, emphasizing certain words. \"You look bored stiff,\" she finished with a smirk.\n\n\"All right. We get it,\" I said standing up, gesturing to the now very obvious tent in my pants. \"I have a boner.\"\n\nI was slightly annoyed at first, but as both girls began giggling uncontrollably, they sucked me in, and I began laughing as well. I sat back down and did my best to situate my erection, but the silky fabric continued to tease my cock playfully.\n\n\"So, isn't this a little weird?\" Abigail asked, once the laughter died down. \"We've all had sex with each other. What happens now?\"\n\n\"I can think of a few things,\" Kennedy smiled mischievously.\n\n\"Get your mind out of the gutter,\" Abigail chided her.\n\n\"Don't play Miss Innocent with me!\" Kennedy shot back, poking her playfully in her side. \"I've seen your naughty bits!\"\n\nAs interesting as this direction was going, I could see the nervousness in Abigail's demeanor, and I felt protective of her. It was hard to reconcile the innocent girl sitting there fidgeting in her PJ's with the woman who had been sexily riding my cock less than an hour ago, but at the same time I couldn't get the image of her cumming atop me out of my head. As arousing as the thought of a possible three way with these two beauties was, Abigail had only just had her first time, and I didn't want her to feel rushed into anything.\n\n\"What are you doing back today?\" I asked, trying to steer the conversation in a new direction. \"What happened to coming back tomorrow night?\"\n\n\"Oh, I got into a fight with my mom,\" Kennedy said, shrugging.\n\n\"What happened?\" Abigail asked. \"Is everything going to be all right?\"\n\n\"I was prying for information about my dad again,\" Kennedy began. \"She got a little angry that I was bringing it up again, and told me that she wasn't going to discuss it. I was pissed, but that's not what the fight was about. She went out for a little bit to pick some things up at the store and I decided to do a covert search of her bedroom to see if I could find anything.\"\n\n\"Did you?\" I asked. Kennedy's father was something of a guilty pleasure topic. The mystery of it had a way of pulling you in and making you want to know more.\n\n\"No. I found nothing,\" Kennedy sighed. \"Unless you count a few toys that my mother probably wished I never found. When she got home, she found me in her room and my covert search had somehow morphed into me ransacking the place. That's where the fight started, and I decided it would be best if I came back early. And between us, I'm kind of glad I did,\" she finished, smiling a little too innocently at Abigail and I.\n\nI could easily see Kennedy violating her mother's privacy for even the smallest clue as to who her father was. She could be distracted from her all-out assault on the truth, but only for short periods of time before her need to know forced its way out, putting her back into a breakneck charge towards trouble.\n\n\"What kinds of toys, exactly?\" Abigail asked into the silence, causing another round of laughter.\n\n\"Nothing I wanted to find in my mother's closet,\" Kennedy assured us, shaking her head.\n\n*** *** ***\n\nAfter we finished breakfast, we moved our little party out into the common room to enjoy the last day of solitude before everyone came back. Kennedy, still feeling frisky, changed her clothes and came back wearing a tiny black thong and a t-shirt that only covered half of her ass. Still going commando under my pants, it was the main cause for my prolonged erection.\n\nEven with all the sexual tension, it felt wonderful to hang out with my two best friends and not have to worry about keeping any secrets. It felt liberating. I still tried to cover my boner when I had one, but it was nice to not live in fear that someone might notice it, which they did quite frequently.\n\n\"Who's going down to pick up the pizza?\" Abigail asked.\n\n\"Not it,\" I quickly claimed, followed by Abigail.\n\n\"That's not fair,\" Kennedy said. \"I'm in my underwear.\"\n\n\"And I'm not wearing underwear,\" I said.\n\n\"You'll be fine,\" Kennedy scoffed with a laugh.\n\n\"Really?\" I said moving my arm away from its place covering my groin. My erection had died down, but there was an obvious bulge in my pants that couldn't be mistaken for anything but a cock. \"How about I pay for the pizza, and you can give the pizza guy something to tell his friends about?\" I offered with a smile.\n\n\"Oh, you're buying now?\" Kennedy asked.\n\n\"Yeah, I have a little extra money,\" I said, shrugging and giving Abigail a little smile.\n\n\"A little?\" Abigail laughed. \"After my dad took us to the casino, that girl is loaded!\"\n\n\"You guys went to the casino?\" Kennedy asked, surprised. \"And you got to meet Mr. Lockwood? When did all this happen? I should have stayed here with you guys,\" she said, looking a little disappointed.\n\n\"We'll tell you about it over the pizza. Now, are you going down to get it or not?\" I asked as I walked the short distance into my room to grab some of the money I had squirreled away.\n\n\"Fine, but you're going to owe me a little more than just pizza,\" she said, her eyes flicking to my bouncing crotch as I walked back out of my room.\n\nAbigail and I watched from the banister at the top of the stairs as Kennedy pranced down in her underwear to open the door. I was standing behind Abigail, using her body to hide the noticeable bulge in my pajama pants, letting my growth press gently into her bottom.\n\nKennedy opened the door and was met by a wide-eyed pizza boy. He stammered and stared as he took in the view of her barely-there underwear and her slightly transparent t-shirt stretched tightly around her wonderful breasts. From the look in his eyes, he was probably wishing that here and now would be the moment that his wildest pizza delivery dreams would come true in the shape of a beautiful red-haired Goddess.\n\nAbigail and I stifled our giggles as we watched Kennedy pay for the pizza. His eyes never left her body, and for all he knew we paid him a couple of folded singles. Carrying our pie, Kennedy twirled away sexily, letting her hair spin, and pranced away and up the stairs letting her nearly bare ass sway seductively as she went.\n\n\"I can't believe I just did that!\" Kennedy giggled as we stumbled back into the common room laughing.\n\n\"He was really looking too!\" Abigail said.\n\n\"I can't see how he could avoid it. Especially with the way she was working those hips,\" I threw in. \"It had me drooling a little.\"\n\nWe dove into the pizza as we watched Texas Chainsaw Massacre, and told a jealous Kennedy all about thanksgiving with Abigail's father. With Kennedy on one side, and Abigail on the other, we shamelessly finished off the pizza and snuggled together as the bloodbath ensued. It wasn't really my kind of film, but with the company I had, I couldn't complain.\n\n*** *** ***\n\nI woke up in a panic. Abigail's elbow was digging into my side and I felt like I was being suffocated by Kennedy's wild red hair. Neither of these things were what had caused my heart to hammer at an unbelievable pace though. There were people walking around us.\n\nWe had fallen asleep on the common room couch, and being Sunday, some of the girls had arrived back at the dorm already. We were a tangle of fleshy limbs and hair. Kennedy was laying partly atop of me with her hair in my face, and Abigail was lying on her back beneath me. Her legs were parted, giving me room to lie between them with my head pillowed on her breasts. I couldn't see what we looked like, but I expected a clumsy human sandwich with me in the center. The other girls were still sound asleep, and I could feel Kennedy's hand wrapped around my waist, gently resting over my morning erection.\n\nI could only hear two voices in the room so far, but it was two too many for me. There was no way I would be able to hide my erection in these pants. I had let my guard down with my friends and now I was paying the price.\n\n\"Looks like we missed a hell of a party,\" came the whispering voice of Holly, one of the dorm supervisors.\n\n\"At least they didn't trash the place,\" came another familiar voice. I was sure it was Danielle, one of the girls from the room next to Abigail and I.\n\n\"Yeah, but still, they look like one hot mess, don't they?\" Holly observed. I could hear a little bit of excitement in her voice.\n\nEvery second I stayed there, pressed between their bodies, I began to panic more. There were only two of them so far, but there was no telling when more would show up. Becoming more frantic, I began to subtly try and wake Abigail. After a few minutes of increasingly hard prodding she finally began to stir.\n\nWhen her eyes finally opened, she looked down to see the panicked look on my face. Her head shifted at the sound of the others in the room and she seemed to understand my plight.\n\n\"Kennedy!\" Abigail groaned, causing me to flinch at her loud voice. \"You guys are crushing me!\"\n\n\"Wha'?\" Kennedy said, stirring on my back. \"Wha' time's it?\"\n\nAs Kennedy shifted, her hand rubbed the length of my shaft, and she froze as well. After a moment, Kennedy slid her body up my back and quietly whispered \"Cold Charlie\" before gathering herself and climbing off of Abigail and I. She made a big production out of standing up and stretching, yawning loudly as her shirt rode up exposing her tiny black thong and her bare midriff, before smiling over at the other girls and joining them in the kitchen area.\n\n\"Hey guys,\" she said to our other dormmates. \"When did you get in?\"\n\n\"A few minutes ago,\" Danielle said awkwardly. \"Holly was here when I got in.\"\n\n\"I only just beat her here,\" Holly said.\n\nAs Kennedy flaunted herself and talked with the other girls, I slipped from atop Abigail and she stood next to me as we walked back to our room, blocking their view as best she could while I desperately tried to keep the bulge in my pants as unnoticeable as possible.\n\n\"That was close!\" Abigail sighed as she closed the door behind us. \"God, my heart is racing right now. Is it always like this for you?\"\n\n\"I usually don't let myself get into these situations,\" I said, crashing onto my bed to stare at the ceiling.\n\n\"I meant the worrying,\" she clarified.\n\n\"Yeah, pretty much,\" I sighed. \"Not getting caught is generally the thing foremost on my mind. Thanks for helping me out of there,\" I added.\n\n\"I'm glad I could help,\" Abigail said, lying down next to me on my bed. \"but, I think Kennedy did most of the heavy lifting.\"\n\n*** *** ***\n\nWanting to avoid the hustle and bustle of all the returning students with all of their luggage in tow, Kennedy, Abigail, and I shut ourselves away in our room. Not wanting to endure anymore close calls, I was fully dressed in a pair of stretchy jeans that show off every great curve of my legs and ass, and I had my cock firmly tucked out of sight. I had let my guard down too much over the last few days and I really needed to get back to my old habits of constant vigilance.\n\nAfter all that had happened over the last twenty-four hours or so, the sexual tension was thick in the enclosed space. We were all just lounging around, listening to music or reading magazines and such, but I couldn't help my eyes from wandering. I kept glancing over to Abigail on her bed painting her toenails. All of her focus was on the soft pink lacquer she was applying.\n\nThere was nothing sexual about Abigail's posture or actions, but I couldn't help being mesmerized by her sight. After seeing her at her most vulnerable, her naked body fused with my own, and hearing her cry out in ecstasy, I found her outward innocence even more alluring. It was like a secret that I could now see, just beneath the surface. I tried to occupy my mind with some reading that I had fallen behind on in my classes, but she kept pulling my eyes.\n\nKennedy was quiet as well. She lay on the floor between us reading a magazine, but her eyes kept shifting from Abigail then to me, and back, with a small smile and a trace of playful lust in her eyes. I knew what she wanted, but I had no idea what gears were spinning behind those beautiful gray eyes.\n\nAs afternoon faded and the premature evening of winter darkened the sky, there was a knock at our door from Skylar, Kennedy's roommate.\n\n\"I don't know if you guys have seen it or not, but there's a notice for a party tonight at the Library,\" Skylar said, leaning in through the crack in the door.\n\n\"Oh, thanks for letting us know,\" Abigail said, sitting up. \"Do you know what time?\"\n\n\"Doors open at nine, and there's supposed to be a few announcements a little after that,\" she replied.\n\n\"All right. We'll see you down there,\" Abigail said as Kennedy already began rising from her spot on the floor.\n\nIt seemed like everyone had gotten the news already and were rushing to get ready. With so many women, the whole hall was a scrambling mess of people moving around from here to there in various stages of undress. To top it off, the showers were a mad house.",
        "\"I don't think I can do this,\" I whispered to Kennedy and Abigail as they flanked me on either side, walking towards the showers. \"There'll be too many people! Maybe I'll be fine without a shower.\"\n\n\"It'll be fine!\" Kennedy tried soothing my nerves.\n\n\"What if there aren't any private stalls available?\" I asked.\n\n\"Don't worry, no one really uses them anymore,\" Abigail said. \"At the beginning of the year a lot of girls were shy, and preferred to use them, but now everyone generally uses the open showers.\"\n\nMy nerves were a little on edge. I had never used the showers when they were crowded. Even though I always used the private stalls, it seemed easier to use them when hardly anyone was there. One of the main reasons I felt awkward was because I didn't want to feel like I was perving on all the naked women. It started out because I was worried about being found out, and I didn't want the headline to read 'Man pretends to be girl so he can perv on women in the showers.'\n\nAs soon as we walked in, we were bombarded by a wall of wet female flesh undulating as they washed themselves, partially obscured by the steam wafting through the air. It took a couple of tries, but I did find and empty stall and quickly slipped inside. Before I could shut the door, Kennedy was slipping in behind me, and as another surprise, Abigail. I could see a couple faces watching the unusual scene from within the steam, but eager to shut out their eyes, I closed and locked the door.\n\n\"What are you guys doing?\" I asked.\n\n\"I don't know about you, but I'm showering,\" Abigail replied as she tugged her shirt over her head to reveal her pale round breasts.\n\n\"Call it moral support,\" Kennedy added as she too began stripping down.\n\nIt was incredibly arousing and frustrating watching them both get naked in front of me, but I was more worried about what everyone outside might think we were all doing in here together. The closed off shower was rather large, but with three people inside it felt a little crowded.\n\nStill filled with anxiety, I quickly joined them in a rush to get it over with. As much of a hurry as I was in, the girls didn't seem to mind at all. They took turns washing each other's backs. In the somewhat confined space, as we all tried our best to be under the spray, our bodies brushed against each other's soft skin.\n\nThe sight of them washing each other, and the feel of their skin on mine, was easily enough to turn me to granite, and before long I could feel them intentionally brushing against my cock and pressing it against their bodies.\n\n\"You guys are killing me! You know that, right?\"\n\nI only got back laughter as they both turned on me and began washing me together. The sound of their voices bounced loudly off the tiles filling my ears. Though their hands traveled all over my body, they seemed to pay special attention to my ass and cock, washing them several times.\n\nI became pudding in their hands as they manipulated my body, their soft soapy hands slowly coaxing me to climax between their bodies. My mind shut down, forgetting my worries and troubles. Every thought was directed toward their touch and my approaching release. It felt like heaven.\n\n\"All done!\" they both announced, pulling away bringing a pained groan from my lips.\n\n\"You guys are cruel!\" I said, cradling my needy cock in my hands.\n\nI knew what game they were playing, and my pride kept me from caving. I had an idea that this was Kennedy's doing, she loved watching me jerk off and also had a thing for making me beg for her. Not this time. Taking a deep breath, I let go of my cock, letting it point straight out swinging back and forth as I moved to turn off the water and dry off with my towel.\n\nBoth of them eyed me with suspicion when I didn't play into their little game. I was surprised to see a little pout cross Abigail's lips, but it was what they deserved for their teasing. Fighting back a little smile, I dressed in my pajamas I had worn to the shower and watched as the girls wrapped towels around themselves.\n\nMy hard cock pointed at an awkward angle as we walked down the busy hall to our room, and I was beginning to regret not finishing myself off in the shower like they had obviously wanted. Thankfully, the pain slowly faded upon reaching my room, and I was able to let my mind focus on getting ready.\n\nWe weren't in much of a hurry, and it was nice taking my time, slowly flipping through my clothing for something that would match my mood. After comparing several outfits, I decided to hell with how cold it was outside; I wanted to wear a dress tonight and found myself fingering something in black as I let my mind wander.\n\nA little while later I was applying my makeup, and I watched from my desk as Abigail slid on a pair of sexy white stockings, fastening them to a lacy white garter belt resting on her hips. It was nice to no longer feel guilty watching her like this. She had told me she enjoyed having my eyes on her when she was dressing, and I could hardly disappoint her now.\n\nThe way she looked in her lingerie turned me on. Not only did I want her, I wanted to be wearing those sexy things. I had leggings to keep my legs warm in the cold, but hers looked so much more sexual, and I wanted that feeling.\n\nPart of being a girl that I loved so much was the clothing. When I was just plain old Alex, my choices were pretty slim as far as attire; either pants or shorts, and a shirt. As a woman there was so much more to it, and not only could your clothing reflect how you were feeling, your clothing could affect how you felt, and I loved that. I loved putting on some lacy underwear and a dress and immediately feeling sexy and desired. Watching Abigail, I realized that I definitely needed to look into some stockings like that for myself.\n\nAs with being a girl, it took us a little while to finish getting ready, but when we were done, we were definitely a sight to behold. Abigail decided on a white halter style cocktail dress that ended just above her knees, to Kennedy's dismay. And Kennedy and I wore our little black dresses. Hers was tight and strapless, barely containing her lovely breasts, with the tattered skirt made out of strips of cloth that ended a few inches above her knees. I loved how those little strips split apart when she moved, showing off her legs and ass seductively. My own dress was strapless as well with a short-pleated tutu skirt that flared out over my ass making it pop.\n\nBetween us, Abigail looked classy and refined, and Kennedy and I looked like sex on a stick. It was nearly nine when we each took one of Abigail's arms and headed out and down the stairs of Evens Hall.\n\nAs we walked, I began wishing I had worn my leggings. The chill in the air was nothing compared to back home, but then again, I had never really been this exposed to the elements. The cold night air was wafting up between my skirt and around my ass, sending chills up my spine, and goosebumps down my legs, making me once again thankful that I waxed.\n\n\"Anyone else wish they were wearing pants right about now?\" Kennedy asked from Abigail's other side.\n\n\"Me,\" I said. \"Can we walk a little faster?\" I laughed.\n\n\"I'm fine,\" Abigail said, warm in her stockings.\n\n\"Yeah, well my vagina's freezing,\" Kennedy replied. \"Wouldn't mind a warm hand or two...\" she added with a frisky smile.\n\n\"Play your cards right...\" Abigail said, surprising me.\n\nThankfully, by the time we reached the Library, the doors had already opened, and people were streaming in. The heat from inside felt wonderful as it sank into my skin, and with all the bodies around us the temperature rose quickly.\n\n\"Welcome back!\" Deborah Dewer, the Student Union President said from atop the stage. \"We're on the home stretch for the first semester, and with the inevitable increase in our workloads a party is in order...because there won't be many more opportunities to celebrate. So, while tomorrow, and the next four weeks may be daunting, tonight we let loose! There has been debate whether this should be mentioned, but we have lost thirteen of our number already. Since the start of term, thirteen girls have dropped out due to pregnancy, so I stress again, for the love of God, play safe girls. There's no reason not to. Keeping that in mind...\" she said, smiling as she raised her hand. \"Party like there's no tomorrow!\"\n\nThe DJ behind her immediately began pumping out the sound and the mob of women began jumping and dancing to the thumping beat.\n\n\"To the bar!\" Kennedy shouted over the music like it was some battle cry charge.\n\nAbigail and I followed behind her, absolutely ready to get this night started. By the time we made it to the bar, the doors had been opened to the rest of the public and the usual throngs of local men had begun pouring in. Even though we could all meet men whenever we wanted, being cooped up with only women all day during classes, and in the dorms, men held a place as a rare commodity. And with this place being the designated watering hole for our school, for most men that came here, it was almost like shooting fish in a barrel.\n\n\"Tonight, the drinks are on me,\" I announced, pulling a wad of bills from my cleavage.\n\n\"How much money did you win at the casino?\" Kennedy asked.\n\n\"A lot,\" Abigail said, climbing onto a stool next to me.\n\n\"If Abigail said it's a lot, it must be,\" Kennedy laughed.\n\nIt took us a while to get our drinks. A downside to being at a bar filled with a ton of women was that you didn't get that special attention you usually received at places where there were more men. After a rum and coke, and a shot of tequila a piece, we were more than ready to get our dance on.\n\nWith liquor for lubricant and dressed to thrill, it didn't take much to get us going. Deep within the crowd on the dance floor, we quickly found our bodies pressed tightly together as we undulated in time with the rhythm of the music.\n\nThe close proximity was enthralling. Abigail's breasts were pressed against me, and her ass was grinding back into Kennedy. Her face was just inches from mine, and I could feel her warm breath on my lips. As we rocked our bodies to the music, Kennedy's hand reached around Abigail to rest on my bare thigh and slowly slid up under my skirt to rest on my bare ass.\n\nIn the middle of the dance floor amongst the press of bodies, the heat was overwhelming, and any exposed skin began to glisten with a sheen of sweat. With the humid air, Abigail's perfectly curled hair had begun to frizz, becoming wild and sexual, reminding me of how she had looked in the morning while we were having sex. With my head floating in alcohol, I felt no need to hold back, and I let my lips reach across the short expanse for hers.\n\nThe feel of her full pink lips against mine felt wonderful, and Abigail didn't hesitate to match my kiss with a passion of her own. Her lips were grasping, and her mouth opened in search of my tongue as she pulled me tighter against her body. Submitting to her building passion, Abigail began to steadily rock her crotch into my thigh as she let her pleasure take control.\n\nKennedy continued rubbing her hands over both of our bodies, reveling in our act and spurring us on. Abigail's lips pulled quickly from mine as she threw her head back gasping, letting a moan escape her lips. I watched as Kennedy's lips and tongue teased her neck sensually from behind. Abigail reached back, lost in our moment, to hold Kennedy's mouth to her pale neck.\n\nOur sex was in the air. I could smell it, thick and trapped between the bodies surrounding us. Abigail continued to ride my thigh and Kennedy's hands found her breast, squeezing them through the top of her dress.\n\nI didn't know how long we were joined like that, our bodies grinding, and our lips and tongues caressing each other's, or any bare flesh available. Eventually the heat and sweat between the masses became too much as Kennedy pulled her lips from mine, panting heavily.\n\n\"I need water,\" she gasped, with a smile on her face.\n\n\"Me too,\" Abigail said, squeezing Kennedy's ass and letting some of her fingers slip through the strips of her skirt.\n\nTaking us both by the hand, Kennedy led the way off the dance floor and back towards the bar.\n\n\"Oh look, it's the shower sluts! Why don't you get a room? Or a shower?\" Grace Arlington sneered.\n\n\"What?\" Abigail asked, still catching up after this sudden turn of events.\n\nI remembered this girl immediately. She was the one who had tried picking on Abigail the day before school started. Mocking her about how nice her dress was, of all things. She was a bit smaller, with a pudgy face, and she was flanked by her friends who were also staring down their noses at us.\n\n\"You heard me. And don't think because you dress fancy that we all can't see right through you,\" Grace said with a sadistic smile. \"Slut.\"\n\n\"You need to watch your fat mouth before I give your face a makeover,\" Kennedy said, stepping between her and Abigail, her fists balled angrily at her sides.\n\n\"Really, Skank?\" Grace asked, shoving Kennedy back and causing her to stumble into Abigail.\n\n\"What's your problem bitch?!\" I said stepping forward. I'd had enough of this shit.\n\n\"My problem is you and your friends are giving this school a bad reputation,\" she sneered. \"Everyone knows about you. The Lezbos of Evens Hall!\"\n\n\"If you touch my friends again...you'll be sorry,\" I said, ignoring her other words.\n\nI had been out of practice, but I was still able to easily block the slap she swung at me with my arm. Out of reflex my other hand, balled up into a fist, began swinging back at her. I barely caught myself, and a split second before I connected I opened my hand delivering a full armed smack, staggering her back into her friends.\n\nAs she steadied herself on her feet, she turned back to me, and for a second I thought she was going to charge. I didn't know if it was the look in my eyes, challenging her to just try it, or something else entirely, but she began to think better of it and quickly turned away, slipping back through the crowd and disappearing from sight. I felt relieved that I didn't have to fight her. I wasn't afraid of losing, I would have wrecked her without breaking a sweat, but as much of a woman as I felt like, I still felt bad about hitting one.\n\nWhen I turned around to check on Abigail and Kennedy, I realized why Grace might have decided not to fight. Skylar was standing there as well now, and that short girl looked menacing, even in her skimpy dress. The red nail polish tipping her fingers glowed in the blacklight, making them appear like claws covered in blood.\n\n\"Are you guys okay?\" Skylar asked. \"Abigail?\"\n\n\"Yeah. We're fine,\" Abigail said, trying to shake it off.\n\n\"What was that all about?\" Skylar asked curiously. \"I saw her come up to you guys from the bar and she didn't look happy.\"\n\n\"It was nothing,\" Abigail said blushing.\n\n\"She thinks we're sluts, and that it's her job to make sure we know it,\" Kennedy said. She was obviously still pissed that some bitch pushed her down, heels or no.\n\n\"What a bitch,\" Skylar said, her eyes searching the crowd unconsciously. \"Why should she care what you do?\" she asked, shaking her head. \"Well, if you guys are going to have a rumble count me in,\" she said, smiling to break the tension before she drifted away back towards the bar.\n\nAfter that, there was a lot less dancing and a lot more drinking. That girl had been such a buzz kill on our night. We didn't see her again, but the damage was done. Kennedy and I could handle someone calling us sluts, but Abigail was a little more soft-hearted. To make things worse for her, she no longer had her virginity to cling to. I didn't think she was upset about losing it with me, but she was starting to worry about how people saw her.\n\nAfter enough drinks, we began to cheer her back up, but we never got back to the careless passion we had experienced on the dance floor.\n\n*** *** ***\n\nIt was sometime Monday morning when I felt someone slipping into bed with me, stirring me from sleep. I was lying facing the wall, a habit I had developed to hide my morning erections. My first thought was Abigail, but the moment I smelled that sweet citrus scent, I knew exactly who it was.\n\n\"Morning Kennedy,\" I sighed in my cute morning voice as I felt her arm slip around me.\n\n\"How'd you know it was me?\" she asked playfully.\n\n\"You two smell differently,\" I said smiling. \"Where's Abigail?\"\n\n\"She left a bit ago, she has morning classes,\" Kennedy said in mock disgust that someone could do such a thing. \"Why? Would you prefer it was her here with you?\"\n\nHer fingers began playing with the hem of my shirt, slipping beneath to run along the soft skin of my stomach.\n\n\"I don't think I could ever choose between you,\" I said truthfully.\n\n\"I know the feeling,\" Kennedy sighed into my ear, letting her hand drift down. \"She is a Goddess, but then again so are you.\"\n\nKennedy's hand slipped underneath the waist of my pajamas and her fingers instantly found my erection. Her tongue reached out to pull my ear lobe into her warm mouth as she steadily began to stroke me. Kennedy's touch began to stir a fire that had been smoldering inside me since yesterday morning. Yesterday had felt like one giant tease from the moment I had woken up until I slid into bed at night. Feeling a driving need, I turned towards her, kissing her lips. Her body felt great against mine, and her warm hand on my shaft, magnificent.\n\n\"That's my girl,\" Kennedy panted against my lips. \"I've missed playing with you!\"\n\nBefore the holiday, she had been spending most of her time with Abigail. They had started something, and with Abigail being new to sexual relationships, Kennedy felt inclined to avoid complications. It seemed that now that I was sleeping with Abigail as well, those reservations had evaporated.\n\n\"I've missed this too!\" I purred back.\n\nI slid my hand down her tight little body, and greedily reached into the front of her cute pink boxers to find her dripping pussy unguarded by underwear. Our mutual masturbation didn't last long before Kennedy lost her patience. She quickly pulled away from me and stood, tearing off her shirt and boxers before climbing back onto the bed to relieve me of my pajamas as well. With my cock free and standing at attention for her, she straddled me and slid herself down my shaft.\n\n\"Oh fuck, I've missed this!\" Kennedy gasped as she bottomed out.\n\nKennedy held my breast through my black bra while she rode me, letting out little moans as the pleasure built in her body. I was always grateful that Kennedy let me keep my breasts covered. I loved the way I looked with them, and they were surprisingly realistic, but even so, I felt awkward that they weren't real.\n\nKennedy quickly worked herself up to a rapid pace before eventually sitting up straight as she rode me. The way she moved reminded me of a belly dancer. Her upper body hardly moved, but her hips were rapidly rolling and grinding as she fucked herself onto my cock. My hands gripped her thighs tightly as hers reached up, slipping her fingers through her tangled hair.\n\n\"I'm so close,\" she gasped as she began moving faster.\n\nAs hard as I was for her, I wasn't even close yet. Kennedy must have been really worked up to be coming this quickly. She gasped and shook as she hit her peak, and once those waves of pleasure passed, she slid off of me to lay beside me as she caught her breath.\n\n\"I really needed that,\" she gasped. \"I've been so horny since I saw you and Abigail together.\"\n\n\"I bet,\" I laughed back.\n\n\"So how fun was it to finally have sex with her?\" Kennedy asked shamelessly as her hand wrapped around my slick cock. \"I bet she was great. She has all those pent-up feelings, not to mention she's just been dying to finally have sex for so long.\"\n\n\"It was amazing,\" I said. \"I totally never expected her to make the first move. I never expected her to make any moves.\"",
        "\"If you could have seen the things I did to that girl...\" Kennedy trailed off. \"She may be all proper and innocent acting in public, but once I had her alone...she barely needed encouraging when I corrupted her.\"\n\nKennedy, now recovered, began inching her way down my bed as she licked and trailed kisses down my body.\n\n\"How about you?\" Kennedy asked. \"Will you let me corrupt you?\"\n\nI could feel her hot breath on my cock as she continued to slowly stoke the fire that was building within me.\n\n\"I'll need you to say it,\" she said, smiling up at me as she barely grazed my cock with her tongue.\n\n\"Yes,\" I whispered.\n\n\"Yes what?\" she asked.\n\n\"Corrupt me,\" I gasped, aching for her mouth on me.\n\nImmediately, I felt her mouth engulf the head of my cock, and her tongue began to swirl around sending bolts of pleasure throughout my body. Keeping my cock in her mouth, she repositioned herself between my legs and continued to slowly make love to me with her mouth.\n\nI let my fingers slip through her wild hair, fighting the urge to pull her down faster onto my straining shaft. She lifted one of my smooth legs onto her shoulder as she really settled in to worship my cock. Her slow pace was driving me wild, and her low moans were sending shivers down my spine. I could feel her saliva dripping down around my cock, and all of those sensations were slowly building up to what I could only assume would be a powerful release.\n\nKennedy began to gently play with my balls, but her fingers began to drift down to the small stretch of skin below. My hips shifted nervously as she rubbed there, causing a new, strange sensation to come over my body. The more her fingers moved, the more that sensation, and my nervousness grew.\n\nHer fingers, wet from her spit dripping down my cock, began to travel further down with each caress, until she was brushing the very edge of my ass causing me to jerk with surprise.\n\nI looked down to Kennedy only to find her eyes locked on mine as she began to lightly massage my tight hole. I instantly began to squirm under her, but stopped the instant I felt her teeth pressing tightly around my cock.\n\nShe was biting me rather hard. Not enough to cause real pain, but enough to be a serious warning. I watched her slowly retract her teeth as I stopped moving, and her finger continued its work as her mouth began to slowly tease my shaft once again.\n\nWith all the drool dripping down, she had my hole all nice and wet before she began putting pressure on it. It was subtle at first, but ever growing and persistent. I was fighting the urge to panic as a slight pain came over me and her finger finally eased itself into my ass. My breathing was ragged. After a few moments, the pain dissipated and her finger began to move inside of me, pressing further in and massaging me from the inside.\n\nAt first, I thought I imagined it, as pleasure coursed through my body, sharp and hot, but it happened again. And again. Kennedy's finger kept pressing on something deep inside of me, causing an incredible feeling to wash over me. As she continued, I could no longer control my body. My ass began to wiggle around, desperate for her to push deeper and continue this sensation. My hands rose above my head, pressing flat against the headboard as I fought to push my body down farther onto Kennedy's wonderful intrusion.\n\nI gasped as I felt a second finger press inside of me, but the pain it caused was nothing next to the pleasure coursing through me. Kennedy continued to slowly, teasingly suck on my cock, and at this point her incredible oral skills were overshadowed by what her fingers were doing to me.\n\nI felt a warm sensation slowly build inside of me and the stronger it became, the more I bucked onto Kennedy's skilled fingers. My whimpering moans began to grow louder until I finally cried out as the pleasure began to peak, wracking my body as I came into Kennedy's mouth.\n\nAnd then I passed out.\n\nWhen I woke, Kennedy was lying next to me, still naked and playing with my deflated cock. I could still feel the aftereffects of my orgasm rippling through my body like quiet waves on the shore.\n\n\"That must have been some orgasm!\" she smiled, seeing my eyes flutter open.\n\n\"What was that?\" I asked, feeling uncomfortable with what I had let her do to me...and what it had done to me. I had only ever had my ass played with once before, and it had been by my sister in a brief lesson about not playing with her ass without warning. That had felt nothing like what I had just experienced, and I felt...dirty.\n\n\"Amazing would be my guess,\" Kennedy laughed. \"Who knew you liked the butt stuff?\"\n\n\"That was...I don't...\" I began as I struggled for what to say. I felt weird about it. People weren't supposed to like putting things in their asses, but the feelings I had experienced were unlike anything I had ever known before. I felt conflicted, and the fact that I truly, thoroughly, enjoyed the experience made me feel wrong.\n\n\"If you're about to say that you didn't like it, then that orgasm must have given you memory loss,\" Kennedy smiled. \"It's okay to like it. I like it too,\" she confided, trying to ease my mind.\n\nI felt better hearing Kennedy admit it. I was afraid she would think I was weird because I liked it. It was irrational, I know. She was the one that wanted to play with my ass after all. I'm supposed to be a woman, we're expected to be irrational.\n\n\"So, say you liked it and we can move on,\" Kennedy said ribbing me. \"Go on...\"\n\n\"I liked it,\" I said nervously.\n\n\"Good girl,\" Kennedy said. \"You looked so hot wiggling your cute little ass onto my fingers.\"\n\n\"Kennedy!\" I said, still not entirely comfortable with what we just did.\n\n\"For a girl with a dick, you can be quite close minded, you know?\" she laughed.\n\n\"Girl with a dick?\" I asked in mock outrage. \"I'll give you girl with a dick,\" I said, aggressively pinning her naked body to the bed.\n\n\"God, I wish you would!\" she squealed.\n\n*** *** ***\n\nBy the time my afternoon classes arrived I was exhausted. Kennedy had been insatiable; we must have had sex for at least another couple of hours before she finally called it quits. I wasn't really complaining, but it took serious effort to focus on my classes with sore muscles and the near undeniable urge to lay my head down on my desk and pass out.\n\nThankfully she hadn't played with my ass again. Don't get me wrong, my body was begging for it. The memory of that warm shooting tingling sensation seemed to occupy the back of my mind. I had grown up believing that this sort of thing was wrong and gross, but after experiencing it for myself I was well and truly conflicted. It felt so dirty, but incredibly exhilarating at the same time.\n\nWe had been right to party last night. The course load that my classes were piling onto me was staggering. I had only attended two of my three classes so far today and I already had three papers to write and a hundred pages to read on top of that, and I was sure it would only get worse. My last class for the day was Psychology, with Kennedy, and from previous experience, this teacher loved handing out outrageous amounts of work.\n\n\"How do you look all fresh and chipper?\" I asked Kennedy bitterly as she met up with me in the quad. There was something off with this picture. I felt drained, like I could fall down and sleep for days, but she looked as fresh as daisies. She even had a glow about her...the little hellion.\n\n\"What can I say?\" she said mockingly. \"I feel fantastic!\"\n\n\"Next time you're doing all the work then,\" I threatened. \"I can hardly stay awake right now.\"\n\n\"Oh, poor you!\" She mocked, lowering her voice as we walked into the science wing. \"It must be such a burden, beautiful women taking advantage of you at all hours of the day? Don't you just wish they would all leave you alone so you could live your life in celibacy?\"\n\nShe was right, my life was a dream. Hell, it was my dream. This was what I had wanted when I thought about how great college would be in high school. Granted, in those visions I wasn't a woman, but the principle still stood.\n\n\"You're right,\" I said, letting a smile grace my lips. \"I'm just tired right now and being cranky.\"\n\n\"Miss Allen?\" A man said, placing his hand on my shoulder from behind, startling me.\n\nI turned quickly, not really accustomed to coming across men in the halls of Mayweather, only to find myself face to face with a security guard. He was tall and lean, and looked to be in his mid to late thirties, and he wasn't alone. There was another man in an identical uniform behind him.\n\n\"Yes?\" I asked confused.\n\n\"I'm going to need you to come with me,\" he said in an even, practiced tone.\n\n\"Is something wrong?\" I asked, feeling fear creep in. This couldn't be good. If it was something ordinary, a student aid would have been sent to get me. They know! I thought immediately. Why else send two security guards to get one tiny girl? I screwed up somehow. I had let myself relax over the last few days and it caught up to me. I must have missed something and now they knew the truth!\n\n\"We just need you to come with us to see the Assistant Dean,\" he said.\n\nMy fears were confirmed. You didn't get called to the Assistant Dean for just anything. He was the man that handed out the pink slips and coordinated with authorities when someone screwed up royally. Sounds had somehow become distorted, like I was listening from underwater, or from a great distance.\n\n\"Can I ask what this is about?\" Kennedy asked in a serious tone as she stepped up beside me. As she stared down the two men her shoulder moved to slightly angle herself in front of me. I didn't know if it was an unconscious act or not, but I couldn't let her get caught up in the middle of this. If they asked, none of them knew anything, Abigail or Kennedy. They didn't deserve to be caught up in this.\n\n\"It'll be okay,\" I said, placing my hand on Kennedy's arm. My voice sounded strange in my own ears. \"Can you take notes for me in class?\"\n\n\"Yeah...\" she said, her eyes worried and curious as they scanned my face. \"You sure?\"\n\n\"I'll be fine,\" I lied, with what I hoped was a warming smile.\n\nSeeing that I was ready to go with them, they split apart to let me past, and we walked back down the hall towards the open quad. Thinking as fast as I could, I pulled my phone from my purse and shot a quick text to Kennedy.\n\n~I THINK THEY KNOW ABOUT ME! TELL ABIGAIL THAT YOU BOTH KNOW NOTHING! YOU THOUGHT I WAS REALLY A GIRL. LOVE YOU GUYS. SORRY.~\n\nI quickly hit send and deleted the message from my phone before stuffing it back into my purse.\n\nOne of the most depressing thoughts that floated through my mind was that I was going to jail. I was sure to be spending a long time in there, and the whole time I would be forced to be Alex.\n\nI was fighting back the tears that wanted to well up in my eyes as they escorted me into the Administration Building and up to the second floor. When I entered the outer office of the Assistant Dean, I couldn't believe I was there already. The whole walk had felt like a blur.\n\nIn a reverse, the five minutes I spent sitting in the outer office waiting for the Assistant Dean felt like an eternity. I knew what was coming, and I was hoping it would be quick, like ripping off a Band-Aid...or a good death.\n\nThe security guards stood by the door idly, and I could only assume that they saw me as a flight risk. I couldn't see why; I didn't have it in me to run.\n\nThe door opened to the Assistant Deans office and there he stood, Assistant Dean Decker. I had never had the pleasure, but from what I saw, I believed every word that Kennedy had said about him. I got a creepy, scary vibe from him as he eyed me up and down before turning his back on me and calling me into his office.\n\n\"This way, Miss Allen.\"\n\nI dragged myself up from my seat and followed him inside to accept my fate; I was so going to miss being Lexi. Once inside, I sat down in the chair he indicated, and he stood by the window staring out over the quad for a moment before he spoke again.\n\n\"Do you know why you're here Miss Allen?\" he asked.\n\nI was about to answer before I realized, he was calling me Miss Allen. Miss? Did he know? I had been sure they knew. Why else would they put me through all this?\n\n\"I'm not sure, Sir,\" I said carefully, feeling hope rising for the first time in what felt like ages.\n\n\"One of your fellow students has leveled charges against you, that you have broken one of the most sacred bylaws in the Student Code of Conduct, and assaulted her,\" he said turning back to me. His face seemed perfectly calm, but his voice and eyes held a simmering anger. \"Last night at The Library, she claims you struck her, and she has witnesses and a bruise on her face. What do you have to say for yourself?\"\n\nThis might not have been them finding out I had a penis, but it still didn't look that great. Thankfully, the relief I had from not being found out had greatly settled my nerves and made this blow land so much easier.\n\n\"Is she the pudgy girl with the big mouth that likes to hit people?\" I asked, not really hiding my dislike for Grace Arlington. I almost winced at my cavalier attitude to assaulting another student.\n\n\"In my office, you will speak to me in a respectful tone young lady!\" he shouted.\n\n\"I'm sorry, Sir,\" I said after taking a few calming breaths. \"What I meant was, Grace was trying to humiliate my friends and I, and when Kennedy told her to stop, she pushed her down. After that, she tried to hit me, so I hit her back,\" I tried to explain. \"I didn't really mean to, she swung at me and I just...swung back.\"\n\n\"Here at Mayweather, we have a zero tolerance for violence. Before you try to argue that it didn't occur on campus, this school's code of conduct encompasses the students, not the location in which events take place,\" he said sitting down finally. \"I'm sorry, but her witnesses claim that you assaulted her unprovoked.\"\n\n\"What about my witnesses?\" I asked.\n\n\"Your friends?\" he asked. \"I don't know if the account of your friends could be impartial.\"\n\nThis man was infuriating.\n\n\"Who are her witnesses? Her friends?\" I asked carefully, trying to remain as respectful as I could while this gigantic ass-bag continued to raise my anger to levels of pissed off previously unreached by mere mortals. I didn't know if it was the rapid roller-coaster of emotions I had experienced over the last few minutes, or something else, but I was struggling to maintain any sort of calm.\n\nI loved Mayweather. Despite the little situation with my cock, I felt like I truly belonged. I had never really had that before, and I wasn't going to let it go without a fight.\n\n\"I'm just looking at the facts right now,\" he said. \"She's bruised, and not a mark on you. She came to me to report the assault, you did not. That tells me something.\"\n\n\"What, that she is a tattle tale, and she doesn't know how to fight?\" I asked in a borderline mocking tone. \"So, I get punished for being mature enough to let her actions go, and because I'm not a defenseless woman?\"\n\n\"Are you always this stubborn?\" he said, becoming angry again.\n\n\"I hear this place makes strong women,\" I replied calmly.\n\nHe watched me for a few moments, searching for something in my features as the wheels turned behind his eyes.\n\n\"I'm sorry, but like I said, zero tolerance, whether you were at fault or not. I'm not really seeing any other options here,\" he said in an uncharacteristically sympathetic tone.\n\n\"Zero tolerance?\" I asked. \"So that girl is going to be expelled as well?\"\n\n\"Well...no.\"\n\n\"Then where is this zero tolerance if it only really seems to apply to me?\" I asked. \"I'm automatically guilty? Is that where this is coming from? You've been toting this Code of Conduct pretty hard here, what does it say about slut shaming? Or about harassing students because of their sexual orientation? This school was founded to build women up. To bring forth the modern age woman. Does this modern age not include the right to the sexuality of our choosing? Is this modern woman supposed to be prejudiced against other women who fall outside of what a 1940's woman should be?\"\n\n\"We are getting far afield,\" he said trying to cut me off. \"This is strictly about the assault.\"\n\n\"I don't think we are,\" I said, losing my cool now. \"I think I want to draw sexual and physical harassment charges against Grace Arlington. You seem to be unable, or just unwilling to do your job, so maybe the authorities will be more inclined,\" I threatened pulling my phone from my purse.\n\nIt was a total bluff. The last thing I wanted was to bring cops into this who would want my information and ID when I filed a complaint. I didn't know why I said it, but I was tired of this jack-wad refusing to even look into what actually happened. I held my phone in my hand for a moment, watching him, waiting for him to stop me. When he didn't, I swiped my screen and began dialing.\n\n\"Just wait a second,\" he said, holding up his hands. \"I don't see how it will change anything, but I'll listen to what your witnesses have to say.\"\n\nHiding my satisfied smile, I put away my phone and gave him the names. Kennedy Monroe, Abigail Lockwood, and Skylar Lawson; he wrote them down on a sheet of paper before stepping outside to hand it off to one of the security guards outside. After a quick word with his secretary, he came back into his office and sat across from me, watching me over steepled fingers in silence.\n\nThe wait felt like forever as Mr. Decker eyed me. At first, he merely looked pensive, but after a short while he began to creep me out. Just before my skin began to crawl, there was a knock at the door and the security guard poked his head in.\n\n\"They're all here,\" he announced.\n\n\"Please wait outside Miss Allen,\" Mr. Decker informed me curtly.\n\n\"No talking until we sort this out,\" the security guard said as I passed through the door.\n\n\"You're first, Miss Monroe,\" Mr. Decker said, gesturing to Kennedy.\n\nKennedy was in his office for a while. Skylar, Abigail and I sat in the waiting area, and with the two security guards and the secretary, the room felt crowded. Skylar seemed completely unphased by all of this as she peered at her red nail polish, her foot bobbing and swaying in the air off her crossed legs. Abigail on the other hand couldn't stop fidgeting. Her eyes darted from the two security guards, to me, and then to the closed door of the Assistant Deans office.\n\nMy eyes seemed to get drawn back to Skylar for some reason. It was the strangest time to have this overwhelming feeling like I was missing something. Every time I shook it, it came back with a vengeance.\n\nWhen Kennedy finally emerged from his office, she looked relieved.\n\n\"Miss Lawson,\" Mr. Decker called from inside his office.\n\nWithout hesitation Skylar uncrossed her legs and walked inside, closing the door behind her. The moment she passed me, I knew what was tickling my mind. It was brilliant in a simple sort of way. I saw an answer unfold in my mind, but it wasn't the answer to right now's problems, so I forcefully put it aside until my current problem had been dealt with.\n\nSkylar's time was significantly shorter, and before I knew it Abigail was walking nervously into his office. Abigail was in there for a long time and I was beginning to worry. What could take so long about explaining what had happened? The incident itself had lasted no more than two minutes. Just when I was starting to think something had gone horribly wrong, Abigail emerged.\n\nHer face showed worry, but it was well hidden, and even though she had fixed it, I could see evidence of smeared mascara. She had been crying. I immediately jumped up and pulled her into a hug.\n\n\"These other girls can go now,\" Mr. Decker said from the doorway. \"I'll need a few moments before I speak with Miss Allen again,\" he said before closing his door.",
        "Kennedy and Abigail said their goodbyes, and Skylar gave me a friendly nod before they were shown out. After that I was alone. Well, not really alone, there was still one security guard and the secretary, but for all purposes I was alone. It was at least another ten nerve-wracking minutes before I was eventually asked back into his office.\n\n\"It seems like everyone here agrees with your version of events,\" Mr. Decker said, somewhat glumly as I sat down. \"Given this, I am feeling...I'm feeling inclined to let you go with a warning. Here at Mayweather, we don't condone any form of violence. If there are any more altercations, we will have to take action.\"\n\n\"So...so I can stay?\" I asked, trying to control my overwhelming happiness.\n\n\"Yes,\" he said, casting a strange glance toward the phone on his desk. \"You can stay.\"\n\nThe proper response would have probably been a thank you, but I had no feelings of thanks towards this man. He wasn't even disguising his disappointment. Lacking any words, we engaged in an awkward staring contest for a few moments before, finally, he dismissed me with a curt \"You can go.\"\n\n*** *** ***\n\nAs I walked back to Evens Hall, I couldn't stop thinking about Mr. Decker. I was glad to not be expelled, but there was something I felt like I was missing there. The way he acted seemed off to me. Why would he have been disappointed that he wasn't going to expel me? For that matter, why did he seem so eager to expel me in the first place? It was all a little strange. But the good news was that I didn't have to leave.\n\nThe common room was quiet when I arrived back in the dorm. It wasn't unusual for the amount of work all of us had been given. I spotted Skylar sitting on the sofa and she gave me a friendly smile on my way to my room.\n\nWhen I opened the door, I was momentarily disoriented. At first glance, I thought I had the wrong room. Nothing was as it should have been. I almost sputtered out a sorry and shut the door, but I recognized something, two somethings actually. Abigail and Kennedy.\n\nThey were both lying on what looked like a giant bed positioned in the center of the room. Our small desks had been moved to the opposing walls. Kennedy and Abigail were lying on top of some ruffled comforters and they were both naked, save for some sexy underwear. Abigail was in a white lace demi bra and thong, and Kennedy in a scarlet bra and revealing booty shorts with little black bows on both.\n\n\"What took you so long?!\" Kennedy said sitting up on her elbows.\n\n\"I hurried back as soon as he let me go,\" I said. \"He let me off with a warning.\"\n\n\"We know he let you off,\" Abigail said.\n\n\"What? How?\" I asked. \"And what did you do to our room?\"\n\n\"You like?\" Kennedy asked, gesturing at the expanse of bed below her. \"We pushed them together. Now we can all fit.\" Her smile was eager and smokey.\n\nWhere Kennedy seemed frisky, Abigail sat up and held her arms open to me. It was just what I needed. I crawled onto the bed and let her arms engulf me. It felt so great to be held after the emotional shit storm I had been through, but exhaustion was fighting me. I eventually pulled away and fell down onto my back between the two of them.\n\n\"Thank you so much for today,\" I told them. \"But I've had a hell of a day and I just want to sleep right now and try to forget about it.\"\n\n\"You owe me!\" Abigail said sitting up on one arm as she looked me in the eyes. \"I called my father for you,\" she said, stone serious. \"I love him, but I hate using his name for things. And...and I had to tell him why this all happened.\"\n\n\"What did you tell him?\" I asked carefully.\n\n\"The truth!\" she grumped, letting herself fall back onto the bed frustrated. \"That someone was being mean to me...because I was sleeping with girls,\" she got out. \"I told him that she pushed Kennedy and you stood up for us, and when she tried to hit you too, you hit back. And I had to tell him all this with that creep watching me.\"\n\n\"I'm sorry you had to call your dad,\" I said, pulling her into me, resting my head on her bosom as I tried to console her. \"It must have been hard for you to tell your dad those things.\"\n\n\"He took it pretty well,\" she mumbled into my chest.\n\nThere was silence for a while as I held onto Abigail, her barely covered body pressed against mine. The sweet scent of vanilla and lavender filled my senses. Kennedy was spooning behind me, softly stroking my arm and side. I felt completely safe and content between the two of them, and in my relaxed state I slowly began to drift to sleep.\n\n\"Not so fast!\" Abigail said firmly, shocking me back to the here and now. \"You still owe me.\"\n\nShe wiggled free, gently nudging me off my resting place, and sat up in the bed. I watched her eyes; they had a twinkle in them as she gazed down at me, and the smile that split her face...I almost thought it was Kennedy staring back from behind those pretty brown eyes.\n\nI shifted onto my back and noticed Kennedy staring down at me from the other side with that same look. If I didn't know better, I would have said they were both hungry.\n\n\"I came out to my father, the least you could do is thank me properly,\" Abigail said in a smokey voice as she lowered her lips to mine.\n\nSmall jolts of electricity cascaded from the contact of our lips spreading throughout the rest of my body. That small, incredibly sensual touch seemed to invigorate me. Any fatigue I had felt before evaporated as her soft lips clung to mine and her tongue searched into my mouth. My arms reached for hers, sliding along her milky skin as I wrapped her into my embrace.\n\nFeeling that same need as I, Abigail climbed up to sit across my waist, letting her barely covered body press against mine. It wasn't enough though. This frustrating fabric encasing my body felt like a bane. Loosening my arms from around her, I reached down my sides for the hem of my shirt. Grasping at the cloth, I began to shift my body in an attempt to remove it. Abigail's hands found mine, and together we tugged, pulling my top over my head, barely ceasing our kiss for the moment it took to clear my lips.\n\nMy arms were a tangled mess above my head, the fabric from my t-shirt twisted together with my arms inside. Abigail, taking full advantage, used one hand to pin them in place as she continued to kiss me and slide her soft skin against my own.\n\nI felt trapped, unable to touch her body. I was completely hers for the taking; it was thrilling. Just when I thought it couldn't get better, I felt more hands on my body, and I remembered Kennedy. Her palms were sliding up the thighs of my tight jeans, slowly working their way to my crotch. When she finally reached her prize, she attacked the button and zipper just below Abigail's gently rocking ass.\n\nKennedy was quick, and practiced, as she unfastened my pants, and began the slow work of tugging them down over my curvaceous ass and off my legs. I rocked my body side to side, in time with her tugs, helping as I could with Abigail holding my upper half captive. Once they reached my ankles, I kicked them to the floor.\n\nWithout my tight jeans, my panties were no match for my hardening cock. I could feel it bulging out the fabric between my thighs, desperate for freedom. Bulge as it did though, it still couldn't slip free.\n\nI felt incredibly powerless. I knew that these two women would never hurt me, but the loss of control was exhilarating...and torturous. As Abigail took her pleasure from my lips, Kennedy began trailing kisses up and down the insides of my spread thighs. My straining cock, held at its awkward angle, left ignored as I languished in painful pleasure.\n\nThe longer they both teased me, the more I began to squirm beneath them. I began to fight, desperate to free the only part of me that mattered at the moment, but with both of them atop me, they easily contained my struggles.\n\nAn anguished cry finally pierced my lips as I begged. I couldn't believe this was happening. The way they were both teaming up on me, and Abigail's behavior...Kennedy had definitely been rubbing off on her.\n\nLike a godsend, I felt Kennedy's fingers gently stroking my aching member through the thin material. Grateful moans escaped my mouth as I slowly began to rock my crotch against her touch. The moment she loosened my panties from my waist, relief flooded me. My cock instantly sprung forward and in the blink of an eye reached full rigidity.\n\nThe next sensation I felt was hot and wet. Kennedy's lips wrapped around the swollen tip of my cock as she gently sucked, letting her tongue dance on the sensitive part just below the tip. I relished in the teasing pleasure Kennedy gave to me. My hips slowly rocked, and she let me gently slide a few small inches in and out of her waiting mouth. After so much frustration and pain, this moment of pleasure felt overwhelming, but it was short lived.\n\n\"Your turn!\" I heard Kennedy call out, her voice accompanied by a fleshy smack as her wonderful lips departed from around my cock.\n\nAbigail let out a squeal into my lips before pulling away to look back at Kennedy playfully. From my vantage, I could just see Kennedy pulling a wet finger from her mouth and I could easily imagine were it had been a second ago.\n\nAbigail slowly crawled off of me and went to kneel next to Kennedy between my legs. With my hands now free, I untangled them from my shirt and discarded it as I watched Kennedy whisper into Abigail's ear. When she pulled away, they both shared a mischievous smile before Kennedy came to lay next to me, letting her head tilt to the side and rest against mine on the pillow.\n\n\"You're going to want to pay attention,\" Kennedy whispered quietly to me.\n\nThere between my open legs, staring wide eyed at my throbbing cock was Abigail. Beautiful pale skin, clad in her white lingerie, she was a beautiful contradiction of innocence and sex. Her hand reached for me tentatively.\n\nI gasped at the sight coupled with the feeling as her small hand wrapped around my shaft. A nervous smile snuck across her lips as she held me in her hand. Taking her time, she began to let her hand slide across my skin, exploring, and by the look in her eyes, playing. It was amazing to watch.\n\nAfter some time, she cast a furtive glance up to me, and then quickly to Kennedy. After watching Kennedy for a moment longer, she took a steady breath and began to lower her lips to my cock. Her dark brown hair fell like a curtain to the sides of her face, but from my place above, I saw every moment. Her pursed lips came in contact with my tip as she gave it a gentle lingering kiss, and as she pulled away, a small string of precum connected the tip of my cock to her luscious lips. Her eyes met mine with a bashful smile.\n\nWith my precum still on her lips, she began to trail more kisses across my sensitive flesh, all over my head, and up and down the sides of my shaft. Her soft puffy lips felt wonderful, and the warm breath she expelled sent shivers along my body. The longer she spent kissing, the more relaxed she became. Eventually her kisses became a soft dragging of her lips across my cock as she savored the act.\n\nShe worked her way back to the tip to place another kiss, but as her lips pressed against my swollen tip, they slowly parted. I held my breath as, little by little, she let the tip of my cock disappear into her mouth. Her tongue sliding across me felt incredible, but after a slow swirl around my cock, she pulled back, removing me from her mouth, but never letting her lips leave me.\n\nAbigail raised her eyes to my bewildered face, locking her gaze with mine, and then she sank back down. This time she went farther, taking me in until I hit the back of her throat, before easing back and then sliding down again. I watched in wonder as my cock disappeared into her beautiful mouth over and over. I couldn't believe how skilled she was for her first time as I felt her hot wet tongue dance across my sensitive skin.\n\n\"Oh my God, Abby!\" I gasped.\n\n\"I know right?\" Kennedy agreed next to me as her hands stroked my bare skin.\n\n\"You have no idea,\" I moaned. \"How is she doing that?\"\n\n\"Someone here,\" Abigail said, coming up for air, \"likes putting things in my mouth,\" giving me a naughty smile before she took my cock back into her mouth.\n\nAs Abigail continued to make love to my cock, Kennedy took my hand into hers and gently pulled it between her legs. I knew what she wanted. With her hand atop mine, we slipped beneath her panties. I immediately felt her wetness as I let my fingers travel along her gushing slit. I slowly began to stroke the length of her teasingly as we both got off on watching Abigail suck my cock. We stayed like that for a while; pleasuring each other until Abigail began to pick up her pace.\n\n\"Oh fuck!\" I called out as my fingers began to quicken over Kennedy's clit in reaction to my increased pleasure.\n\n\"Oh! Slow down, girl!\" Kennedy called out to Abigail. \"Lexi still has work to do.\"\n\nReluctantly, Abigail let my cock slide out of her mouth as she looked from Kennedy to me.\n\n\"You see, there's something Abigail wants from you,\" Kennedy said sitting up on the bed. \"She's a little too shy to ask though.\"\n\nKennedy scooted off the bed and began to casually slip off her bra and panties. After she was completely naked, she climbed back on the bed behind Abigail and unclasped her bra.\n\n\"Our little Abigail wants to be fucked, don't you Abigail?\" Kennedy asked, caressing Abigail's shoulders as she slipped off her bra straps, exposing those pale beautiful breasts with their dark pink nipples.\n\nAbigail was blushing nervously as she smiled coyly. Why was she so shy about asking me? We had had sex before; hell, my cock was just in her mouth.\n\n\"I wanna watch you fuck her,\" Kennedy said, looking me in the eyes. \"She told me all about how sweet and loving you were with her, but she wants you to take her. She wants to feel you slamming into her.\"\n\nI felt like a little girl in a candy shop. I almost couldn't believe my ears. Kennedy sat up, pulling me along with her until the three of us were all on our knees facing each other. As we all knelt together, Abigail shyly avoided my eyes, but her thumbs were fidgeting with the string waistband of her thong.\n\n\"Do you want this Abigail?\" I asked seeing her nervousness. Now that my cock wasn't in her mouth, some of my brain seemed to be working again.\n\n\"I want it,\" she said, almost too quiet to hear.\n\n\"Speak louder, love,\" Kennedy said smiling.\n\n\"I want you to fuck me,\" Abigail said, looking me in the eyes now.\n\nI leaned forward and kissed her. My hands met with hers at her hips, and together we worked her little white thong down over her ass. After some awkward shifting, her panties were decorating the floor and she was kneeling in front of me as bare as could be. I went to lie her on her back, but Kennedy had other ideas.\n\n\"Turn her around,\" Kennedy instructed, maneuvering Abigail and I until she was on all fours and I was positioned behind her.\n\nKennedy knelt right beside us as I maneuvered my cock towards Abigail's entrance. I could feel the heat from her even before we touched, radiating from her excited sex. When my tip brushed against her slit, it was bathed in the juices dripping from her. With Kennedy's hand on Abigail's back, and the other on my ass, she pulled us together. The moment I pierced her, Abigail gasped, and I felt her clamp down on my tip. At Kennedy's urging though, my cock slowly forged its way into the tight confines of her soaking pussy.\n\nJolts of pleasure coursed through my body as I slowly filled her up, and after one long, slow thrust, I was bottomed out completely with my hips pressing tight against her ass. I held still, savoring the feeling of her, and admiring the sight before me; her wonderful alabaster ass as it molded itself against me, her small waist, those little dimples on her lower back that seemed to be smiling at me, and the small dark beauty marks on her shoulder that contrasted sharply with her skin.\n\n\"Fuck me,\" Abigail whispered, looking back at me from over her shoulder.\n\nI began at a slow pace, taking long full strokes into her. With every thrust I increased my pace slightly. Kennedy watched from her up-close vantage right beside us as I fucked our friend, with one of her hands conspicuously between her thighs.\n\nIt didn't take long for the thick musky smell of sex to completely fill the air.\n\nSeeing that we were well on our way, Kennedy crawled in front of Abigail and without any ceremony she lay down in front of her, parting her legs and displaying her wet pussy. Abigail didn't say a word as she lowered her lips to Kennedy's wet sex and began taking slow loving licks all the way up her slit, parting Kennedy's pink candy colored lips.\n\nCaught up in watching Abigail expertly devouring Kennedy's pussy, I began to thrust harder. The moans of pleasure escaping from Kennedy's lips seemed to drive me on, causing me to slam into Abigail even harder until she cried out over Kennedy's dripping cunt.\n\nThinking I had gone too far, I began to slow down, but Abigail's hand shot back, grasping my hand on her ass. She gripped me tight and she rocked back forcefully to meet my next stroke. At her urging, I pressed on and began to fuck her harder. As my pace quickened, loud slaps of skin on skin began to fill the air of our room.\n\nThe flood of juices dripping from Abigail was astounding. Our thighs were slick, and my balls dripped with her cream. The smell of sex in the air was overpowering and intoxicating. Coupled with the rhythmic smack, smack, smack, of my thrusts, it was hypnotic. One thing that kept me grounded was Abigail's hand gripping mine. She never let go.\n\nKennedy's moans began to rise, and Abigail seemed to be attacking her pussy with even more vigor than before. I mustered all the power I had and began to really slam into Abigail. I was sure that this might be too much for her, but I could hear her squeals of delight, even muffled as they were by Kennedy holding her head firmly between her thighs.\n\nAbigail's hand squeezed mine for all it was worth, and I continued to plow into her with all my might. My balls began to churn, and my short high-pitched moans began to sing theirs. We were a chorus of pleasure racing towards the crescendo, all of us desperate to keep time with each other in what felt like the performance of our lives.\n\nI was not sure who came first, Kennedy, or I, but I do know that as soon as my cum ripped from my loins, blasting into Abigail's welcoming womb, it set her off like the Fourth of July. All of our voices echoed off the walls in our confined space filling our ears.\n\nSomeone must have heard. There was no way that the sound of our carnal release could have failed to make it through the walls. But in that moment, we didn't care. In truth, we probably would never care again. Abigail and I both collapsed forward onto Kennedy's trembling body; her head resting just below Kennedy's breasts, and I squarely on Abigail's soft back.\n\nAs we lay there riding the waves of our blissful conclusion, a single solitary thought was able to form where no other thought could. I was blessed to live this life.\n\n*** *** ***\n\nWaking up in between Kennedy and Abigail was one of the most amazing things I had experienced. The feel of their soft skin pressed against mine, in a sweet contrast to the chilly early morning air seeping in from the cracked window, gave me a relaxed and refreshed sensation. A girl could get used to these new sleeping arrangements. As tired as I was the night before, I felt invigorated now.\n\nAfter we had all wakened, I told them about the light bulb moment I'd had when we were in Mr. Decker's office. I thought I had figured a way to get past the keypad lock on his door for Kennedy. Kennedy was already planning a late-night assault on the building when Abigail offered a more simple solution. There were some things we would need, but it wasn't long before everything was ready.",
        "*** *** ***\n\nI hated what I was about to do, but after what my friends had been willing to do for me yesterday, I had to do something for at least one of them. Still, after being treated as I had been, this would leave a bitter taste in my mouth.\n\n\"Would it be possible for me to see Mr. Decker for a moment?\" I asked his secretary.\n\n\"That shouldn't be a problem dear,\" she, said looking up to me from her desk. \"Just a moment.\"\n\nAfter that, she pressed a button on an intercom on her desk and announced, \"Miss Allen is here to see you.\"\n\n\"Send her in,\" came his reply after a moment's silence.\n\nThere was a mechanical click at his door, which I assumed was the magnetic lock. Taking an even breath to calm my nerves and strengthen my resolve, I opened the door. Mr. Decker was sitting at his desk with several papers and folders spread out before him. His expression was curious as I slowly entered and stepped up to his desk.\n\n\"I realized that I never thanked you yesterday,\" I said, feeling bile rising in my stomach as I tried to keep an appreciative look on my face. \"You didn't have to make that exception for me, and I know it could have been a lot worse. So, thank you.\"\n\nHe looked taken aback by my sweet tone and apology coupled with thanks. He studied me for a moment before he finally spoke, leaning back in his chair. \"I appreciate you making the time to come here. It shows character. I was wrong about you yesterday, and today I can honestly say that I look forward to seeing you here for a long time.\"\n\n\"Thank you, Sir,\" I said, hating that I used that word for him.\n\n\"I'm sorry to cut this short Miss Allen, but I have a lot of work to do today,\" he said, gesturing to all the paperwork on his desk.\n\n\"Of course,\" I said, turning to go.\n\nI opened his door a couple feet to slip out and paused, turning back to him sharply. This was the moment I was truly waiting for. I hated playing out this false pretense, inflating the ego and self-importance of such a profound douche-nozzle, but it was the only thing any of us could think of that would get me into this room without arousing suspicion or committing a felony.\n\nI pressed my side against the open door and quickly dipped my hand into my purse. I easily found the open bottle of clear nail polish that had been carefully placed in a small plastic bag. Dipping my index finger inside, I came into contact with a cold wet substance. I carefully removed my hand from my purse, making sure I didn't smear any on the way out, and blindly found the keypad on the opposite side of the door. Feeling my heart race, I quickly coated the buttons with the clear polish, making sure every one of them had a thin coat.\n\n\"Oh, and Mr. Decker,\" I said, pretending like I had just remembered. \"Have a great day!\"\n\n\"You too, Miss Allen,\" he said, smiling his creepy smile.\n\nMy heart was hammering as I made my slow escape from his office and the Admin Building. The paint on my fingers was still wet, and my only hope was that the thin coat I had left on the buttons would dry before anyone had to use them.\n\nWhen I had seen Skylar in the Assistant Deans office, things started slowly moving into place in my mind before I could realize it. She had been wearing that same red nail polish at the Library, and it had glowed in the black light. I figured there must be a clear kind that would act the same, and my plan began to form. With the buttons now coated in a thin layer, every time he used his keypad he would slowly rub away the paint, eventually leaving the buttons he didn't use to glow underneath a black light, greatly narrowing the amount of combinations we would need to try in order to guess the correct one.\n\nThe file Kennedy needed in order to find out the identity of her father was in the Endowment Files, hidden away in the office of none other than Assistant Dean Decker. Before, we knew what we needed, but had no plan as to how we would get it, now...it was only a matter of time.\n\nOnce outside the Admin Building, I quickened my pace, eager to reach the girls and tell them it had been a success. "
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "cross-dressing",
        "school",
        "group",
        "lesbian",
        "transexual",
        "teen",
        "intrigue",
        "threesome"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-07"
}