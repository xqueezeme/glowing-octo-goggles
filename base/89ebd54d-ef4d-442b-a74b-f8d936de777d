{
    "title": "Group Project",
    "pages": [
        "Group Project Grant moves from loss to lust, thanks to several luscious coworkers\n\nChapter One\n\nThere was no reason to go home, so Grant decided to keep working. Katie's death was six months in the past. And for eight-months prior, Grant cared for her through the slow, hopeless death spiral of cancer.\n\nLooking up from his screen, he realized the office was empty. His co-workers all had families to see, and dinner to eat. Grant wasn't hungry. His appetite disappeared with Katie's diagnosis and never returned. The only upside was the loss of 25 pounds he didn't need. He was 51, and felt even older.\n\nA pang of loneliness hit him unexpectedly, and ferociously. He missed Katie. But at this moment, he longed for human contact. Someone to talk to. Someone to touch him. Reflexively, he took out his phone. He Googled \"dating apps for mature adults\". After reading reviews for a few, he picked one that seemed the least intimidating and downloaded it.\n\nGrant looked at a few pictures of singles in his area. Then decided to pay for six months of access, and make a profile. He was still working on it when the outer office door opened. Standing up in his cubicle, Grant watched a group of co-workers walk in. Leading the pack was Bethany, the newest member of the marketing team, fresh out of college. Carrying two pizza boxes, she was headed for the conference room. Of the group, he knew Bethany the least, but enjoyed her positivity and enthusiasm. She was still pumped over landing this job right after graduation.\n\nMichael and Teresa followed next. Teresa was the team leader. She was about Grant's age, and always wore high heels to compensate for her small stature, and a suit to cover her chunky form. Grant got along well with Teresa, though they didn't work directly together. Michael was her right hand man, and as far as Grant could tell, gay. Even if Michael was still in the closet, the closet was made of glass, and Michael was inside it wearing a feather boa, singing along with Barbra Streisand gay. Despite having little in common, he'd spent enough time with Michael to appreciate his wit and work ethic.\n\n\"After you,\" someone said from the hallway. Grant recognized Jennifer's voice. The tall brunette had joined the company several years ago, when her youngest child went into first grade. But it wasn't Jennifer who appeared through the doorway first, it was Claire. Apparently Jennifer was the door holder for the group. Like Jennifer, Claire was nearly 6 feet tall. It was probably the reason the two had connected right away.\n\nIf Grant were to guess, both women were in their mid-thirties. The similarities stopped there. Claire was blonde, fair, willowy, single, and on the quiet side. Jennifer's dark hair framed a sun tanned face, full lips and figure, with a bust as big as her personality. She also had two kids and a husband. And she was the one who noticed him peering over the cubicle.\n\n\"Hey Grant. I thought everyone was long gone.\"\n\nMost of the group stopped and turned back to look at him.\n\n\"I, uh...just wanted to finish up some stuff.\"\n\nTeresa smiled and said, \"Our team has a project to finish too. So I decided to get us some pizza. You're welcome to join us.\"\n\n\"No...but thanks,\" he felt embarrassed for some reason. \"Once I'm done, I'll head home.\" The group kept moving toward the conference room. Grant sat back down and stared at his monitor. He toggled between spreadsheets, wondering which one to pull up.\n\n\"It looks more like you're starting, not finishing.\"\n\nGrant jumped. Jennifer was standing behind him, looking at his phone. He'd left it face up on the desk with his unfinished dating profile open. He flushed.\n\n\"What?\"\n\nShe pointed at his phone. \"You're starting to look for a date. Good for you.\"\n\n\"Yeah, well I thought I'd give it a try,\" he said with a shrug.\n\n\"Lemme see,\" Jennifer said, grabbing the phone before he could protest.\n\nShe leaned over him as she scanned what he'd written. Her right breast hung an inch from his left cheek. Out of the corner of his eye, Grant stared at the straining buttons on her cream-colored, satiny blouse. He couldn't look away. An erection sprung up so hard and so fast it hurt. His sport jacket gave him some cover. Fortunately, he was wearing jeans instead of dress pants, so there was no obvious tenting either.\n\n\"Sorry, but your headline sucks.\"\n\n\"What's wrong with it? It's honest.\"\n\n\"Honesty is good. Long and boring is not.\"\n\nErection no longer a problem, Grant listened as she read his headline aloud.\n\n\"Good man, done grieving, ready to meet someone new and move on to a new leg of life's journey.\"\n\nJennifer shook her head, and made a face. \"You're dragging baggage into a relationship that hasn't even started. You need it to be positive and intriguing. Trust me, I'm in marketing.\"\n\n\"Fair enough,\" Grant replied. \"Work your magic.\" As he said this, he pushed himself up from his desk chair and felt his elbow brush against the fabric covering her breast. He flinched. Jennifer didn't seem to notice. She was focused on tapping words into his phone.\n\n\"Listen,\" she said. \"Ready to cross borders to escape boring.\"\n\n\"I don't know. Sounds like I'm on the run from the law.\"\n\n\"Try this then...Single? Sane? Salacious? I'm in.\"\n\n\"Too alliterative.\"\n\n\"Then you're going to hate this one,\" Jennifer said with a smile. \"Sexy, single, silver fox looking to share his den.\"\n\n\"I'm not ready for this,\" Grant murmured. \"And false advertising won't help.\"\n\n\"There's nothing false about that, other than you're only gray around the temples. You should post that one, along with a profile picture, and see what happens.\"\n\n\"You, um, would describe me as sexy?\"\n\n\"If I wasn't a married mother of two, with pizza waiting for me in the conference room...I'd do you right on this desk.\"\n\nIn defiance of his returning hard-on, Grant countered, \"I'm old enough to be your Grant-daddy.\"\n\n\"Boo,\" Jennifer replied as she shoved him playfully. \"I don't know whether that's an innuendo or just a terrible dad joke. But either way, I've got to leave.\"\n\nGrant followed her with his eyes as she headed down the hall. Her backside swayed hypnotically in the tight black skirt. His gaze drifted lower as her long legs came into view. The memory of Jennifer saying \"I'd do you right on this desk\" made his cock harder than it had been in a year. He shifted it with his hand to a more comfortable position, but touching himself only increased the longing for release. Reluctantly, he sat back down to find some work.\n\nAn hour later, he decided to revisit his dating profile headline. After numerous attempts, he finally admitted that he couldn't come up with anything better than Jennifer's suggestions. So he settled on the silver fox version, and a username of TakeMe4Grant. After answering all the profile questions as well as he could, he scrolled through his photos looking for a decent picture.\n\nThe best one he could find was from a two-year-old fishing trip. His buddy had snapped Grant holding a nearly 5-pound largemouth bass. Grant was grinning widely. He looked suntanned, manly, successful, and happy because Katie's diagnosis hadn't happened yet. Putting the pic in edit mode, he cropped the unsightly gear and clutter on the boat, centered on himself, and the prize fish. He was about to upload, when he heard the conference door open. Grant turned off his phone and went back to his monitor.\n\nA moment later, Jennifer and Claire peered over the top of his cubicle.\n\n\"I came to check on you,\" Jennifer said. \"And I brought reinforcements.\"\n\n\"Aren't you two supposed to be enjoying a working dinner?\" \"Turns out we already made our contribution,\" Claire answered. \"Teresa said we might as well head home while they put our ideas into motion.\"\n\n\"Well I'm not going home yet,\" Jennifer said defiantly. \"Since hubby expects to be handling the kids all by himself tonight, I say the three of us go for drinks. Are you in?\"\n\nGrant tried not to look surprised. He knew both of them as well as you can know people you see in the office every weekday. But the three of them had never done anything together.\n\n\"Come join us,\" Claire said. \"Jen mentioned you were working on your dating profile. It'd be fun to help you with that. Watching you get a date is far more exciting than anything else I'd be doing.\"\n\n\"We'll go Dutch Treat,\" Jennifer added. \"Although that sounds a little politically incorrect.\"\n\n\"Absolutely not,\" blurted Grant. \"I'm too old-fashioned to be in the company of two beautiful women and not pick up the check. Besides, I have nothing else to spend my money on.\"\n\nChapter Two\n\nThe 420 was a hipster bar across the street from the office. Grant looked around and judged himself to be the oldest person in the room. Even Claire and Jennifer looked a bit out of place. Their drinks arrived. Claire had a Fanciulli, whatever the hell that was. Jennifer's gin and tonic, seemed more in line with his whiskey sour.\n\n\"Cheers,\" he said, raising his glass.\n\nAs they all touched glasses, Jennifer yelled, \"Hey, Bethany!\"\n\nGrant looked back over his shoulder to the front door and saw that the newest member of the marketing team had just entered.\n\n\"Come on over,\" Jennifer said with a motion.\n\nBethany seemed to hesitate for a second, but then smiled, walked over, and sat down at their table opposite Grant, between the other two women.\n\n\"Michael and Teresa decided I didn't need to stay after all.\" She sounded disappointed.\n\n\"You are an eager beaver, aren't you,\" said Jennifer. \"Get away while you can, is my motto.\"\n\nGrant asked Bethany for her drink order, and studied her as she thought of a response. She was significantly shorter than the two other women, which put her at normal height. Her light brown hair was in a ponytail. Her face had a healthy glow, with little or no makeup. She was wearing tight fitting black pants and a blue colored top that almost matched her eyes. Even though she was probably 30 years younger, Grant couldn't help but note Bethany was as pretty as she was natural and refreshing. It struck him that he was sitting at a table with three lovely women, and he couldn't help but smile.\n\n\"You're just in time,\" Jennifer told her. \"We're going to help Grant with his dating profile.\"\n\n\"That's right,\" Claire exclaimed. \"I haven't even seen it yet. Pull it out Grant!\"\n\nThere was a half second of silence before Jennifer and Bethany burst out laughing. Claire's face immediately flushed, and Grant couldn't help but smile. He slowly slipped the phone out of his sport jacket.\n\n\"Here it is ladies,\" he said in a deep, husky voice. \"My p...rofile.\"\n\nHe winked at Claire, who was a little embarrassed, but not humiliated. She seemed as classy and confident as she was quiet. Claire folded her arms over her chest, crossed her legs, and stared back at him. He glanced at her ankle high black boot that zipped down the side. It had a heel. Claire had no qualms about towering over everyone. Grey pants covered her long legs, and the matching jacket covered her red blouse. Grants gaze quickly traveled upward to meet her eyes. It was his turn to blush.\n\n\"What is that?\" Bethany asked. She pointed at his phone. Grant's facial recognition had unlocked the screen and his fish picture was still in edit mode.\n\n\"That's going to be my profile pic,\" he said confidently.\n\n\"Not if you ever want to get a date,\" Bethany retorted.\n\n\"You need more help than I thought,\" agreed Jennifer.\n\n\"What's wrong with it. I think I look fine. I'm happy. Outdoorsy. Successful.\"\n\n\"If the reaction you're going for is ewww,\" added Claire, \"you've nailed it.\"\n\n\"I'm going to take a good pic of you right now,\" Bethany said while grabbing his phone. \"But first, I'm deleting this pussy-repellent.\"\n\nGrant was too baffled to object. And when Bethany ordered him to smile, Jennifer stuck out her tongue and slowly licked her lips.\n\n\"That's deer in the headlights,\" Claire scolded. \"Pretend like you're having a good time at a bar with three women. Which you definitely are!\"\n\nGrant tried again, and this time Jennifer put both hands under her boobs and jiggled them twice.\n\n\"More leer than smile,\" Bethany said, \"but better. What do you think girls?\"\n\nThey all leaned in as she placed the phone in the center of the table. It looked like a candid shot, since Grant wasn't looking at the camera. His black blazer and buttoned down blue striped shirt showed up well against the dark background of the bar. His smile had reached his eyes, which were also a little wide, given that he had been staring at Jennifer's tits.\n\n\"Looks good to me,\" said Claire.\n\n\"Me too,\" Jennifer added. \"Hurry up and post it, I want to see what kind of fish you catch with this bait.\"\n\nGrant finalized his profile, and started to order another round of drinks. Then remembering that he was the only one who hadn't eaten anything, he ordered three different appetizers to share instead. He was beginning to feel the first drink and delayed a second round until the food arrived.\n\nThey all were having a good time. Talk about Grant's dating led the women to open up about their own romantic lives. Claire's long-time boyfriend had moved out months ago, taking a job on the west coast. Texts and calls were becoming less frequent. He didn't seem ready to move back, and she didn't want to move there. Claire didn't appear all that bothered by it.\n\nBethany was still attached to her college boyfriend. He had moved on to grad school, hoping a Masters would guarantee a better job, and eventually allow him to pay off his loans. She sounded wistful when talking about him, but Grant couldn't even remember the guy's name when she finished.\n\nGrant's story and status was already known. Claire and Jennifer were even part of the group from work that attended Katie's funeral. So they turned to Jennifer for her romantic update. She held up both hands.\n\n\"I've got nothing to share. I'm married with two little kids, so Danny and I don't even have sex.\"\n\n\"Obviously you did at some point,\" Grant observed.\n\n\"Hilarious, bass boat boy. Yes, we did, and occasionally still do have sex. On birthdays, anniversaries, major holidays. But we both come home from work, take care of the kids, fix dinner, do housework, and collapse into unconsciousness. Once, I came home late and found Danny had fed the kids, bathed and put them to bed, loaded the dishwasher, and was asleep on the couch still holding the vacuum cleaner. I had an orgasm right there.\"\n\n\"Did he get anything out of it?\" Claire asked.\n\n\"I opened his zipper and tried to kiss it to life, but he was too tired to get hard. Then in the middle of the night, I woke up to him rubbing his cock on my ass. I almost told him to beat it, literally. But then I rolled on my back and said, 'pull my nightie down when you're done.' Just about the time he was finished, I started to get interested. Then it was over.\"\n\nBethany said, \"Married life sounds great. A few years of that and I'd be praying for an early death.\"\n\nHer face paled, and she turned to Grant.\n\n\"Sorry, that was stupid and insensitive. I was just being a smart ass.\" \"No worries,\" replied Grant. \"But hopefully you get in enough good times to outweigh the bad before death. Katie and I did.\"\n\nClaire patted his shoulder. Grant found it comforting, but it also stoked his longing for human touch and connection.\n\n\"We need to get you back up on the horse, bass boy,\" Jennifer smirked. \"I'm speaking metaphorically, of course. I think you can land something better looking than brood mare.\"\n\nThey checked the app. No responses. Grant felt relieved. But no sooner did he put the phone down, then a notification popped up. All three women demanded to see. They leaned over him as Grant opened the app and read aloud.\n\nZenDenMother41-Sun worshipper, meat eater, fun collector, risk taker. Dear TakeMe4Grant: I like your profile and your look. Sharing your den could be fun, but I already have one. Want to chat?\n\n\"Sounds interesting,\" Jennifer said, \"but let's see what she looks like.\"\n\nGrant touched the thumbnail and ZenDen filled the screen. She was posed in a beach chair, under an umbrella. A bit of the ocean was in view in the upper left corner. Her blonde hair almost matched the sand. She was wearing a dark blue one-piece bathing suit.\n\nClaire spoke first. \"Doesn't look shopped. Not bad. I'd guess she's about 40.\"\n\n\"Too young for you Grant daddy?\" quipped Jennifer. Seeing the looks on the other girls faces, she said, \"That's a joke from earlier.\" Turning to Grant, she added, \"Or do you prefer bass boat boy?\"\n\n\"Neither would be great.\"\n\n\"Message her NOW,\" Bethany insisted. \"I want to see you in action.\"\n\n\"What should I say?\"\n\n\"Lure her in with your words,\" Jennifer urged. \"Draw her like one of your French girls.\"\n\nGrant sighed and paused. Then started tapping. Dear ZenDenMother41: Your profile is intriguing. Your look is mesmerizing. If there was a \"like\" button I would push it repeatedly. Chatting would be fun. Here's my number if you'd like to call.\n\nHearing no objections, Grant sent the message.\n\n\"You did good, Grant,\" Jennifer said with approval. \"I'm surprised...and a little moist.\"\n\nGrant almost dropped the phone when it buzzed. He stabbed at the green button three times before managing to answer.\n\n\"Hello, this is Grant.\"\n\n\"This is your friendly neighborhood den mother.\" The voice was sultry, rich, and inviting. \"You can call me Issa.\"\n\n\"Ok, Issa. You can call me...\"\n\n\"Grant,\" she finished. \"I got that part. Is now a good time to talk?\"\n\nSurrounded by three women vigorously shaking their heads in approval, Grant said it was. Clearly they could hear what Issa was saying, even though she wasn't on speaker.\n\n\"Are you home alone?\" She asked. \"Don't answer that. I just realized that if you asked me that question it would sound really creepy.\"\n\nHe laughed. \"I'll answer anyway. It's no to both. I'm not home or alone. I'm at the 420 Bar with three...um, colleagues.\" He glanced up at them as if to verify their presence.\n\n\"Boys night out?\"\n\n\"Not really. They are female girls...I mean women.\" Grant was flustered.\n\n\"You sound popular.\"\n\n\"No, I sound like an idiot. We just decided to have a drink after work. And they were helping me get up and running on this dating site.\"\n\n\"I saw you were a newbie. They don't mind you talking to a fourth female girl?\"\n\n\"Absolutely not!\" yelled Jennifer, with a slight slur in speech. She was one round ahead of the rest. \"Why don't you come have drink with us? It's only 7:30.\"\n\n\"And there's safety in numbers,\" Bethany added.\n\nThere was dead silence for a moment, before Issa said, \"That ok with you Grant?\"\n\n\"Sure. Sounds good. Let me give you the address.\"\n\nIssa gave a throaty laugh. \"What is this, 1990? Besides, the 420 is like 5 minutes from me. I'll be there in 15.\"\n\nChapter Three\n\nThe four finished the appetizers and the second round of drinks while waiting for their guest.\n\nGrant was facing the door, and spotted Issa as she stepped into the room. She was wearing a dark blue dress that clung to her curvy form. He waved at her. She smiled and moved toward them. Issa was thicc. Grant stood, grabbed a chair from the empty next table next to them, and motioned her to it.\n\n\"I assume the guy surrounded by lovely women is Grant,\" said Issa.\n\n\"You look just like your picture,\" Grant responded. \"Minus the bathing suit, of course.\"\n\n\"Minus the bathing suit,\" mocked Jennifer. \"In your dreams, bass boy.\"\n\nIssa looked slightly confused, but laughed along with the other women.\n\n\"Don't mind Jennifer,\" Claire explained. \"Her mind's in the gutter, even more than usual. There was some sex talk before you arrived.\"\n\n\"Sounds fun,\" replied Issa. Turning to Grant she said, \"And you look just like your picture. You're even wearing the same clothes.\"\n\n\"I'm sure you could talk him out of them,\" Jennifer blurted.",
        "Grant signaled the server for more drinks. Issa ordered a martini.\n\n\"This is quite a bawdy group. My kind of people,\" Issa said with a smile.\n\nThe girls all introduced themselves. They regaled Issa with the saga of Grant's dating profile and pic. They also explained bass boat boy. When they were done, Issa asked, \"So what's the rest of your story, Grant?\"\n\nGrant was as brief as possible. Highlighting positives and avoiding negatives, he tried to quickly pivot the question back to Issa, but she resisted. Turning to the other women, she asked for more detail.\n\n\"Men like to summarize,\" said Issa. \"I need a little more of the facets, feelings, and specifics. Fill in the blanks girls.\"\n\nThey did, sharing observations about Grant that he didn't even realize about himself. Jennifer and Claire described his care for Katie, and grief over her loss. They ended with the dating profile escapades, which helped lighten the mood.\n\nIssa nodded throughout, smiling at Grant. Then it was her turn.\n\nShe was originally \"Marissa,\" but after the divorce, she took off the \"Ma.\" A son in college. A miniature schnauzer at home. Head of human resources at a small company. Her divorce was two years in the past, but a foregone conclusion for several years before that. Her ex was obsessed with two things. His business and his golf game. Issa had been third or fourth on the list for years, and kept slipping lower. They had sex, but not intimacy. He met a young woman on the links who was looking for a Sugar Daddy, and he eagerly complied. The divorce settlement left Issa with the house, a car, and a decent nest egg. She still needed to work, enjoyed what she did, but also took frequent vacations. She described a recent trip to Cabo, and how she'd lost her bikini top in the waves.\n\nGrant watched her hands as they illustrated each word. She touched his arm a couple times. He watched her eyes as they moved from person to person around the table. He dropped his gaze down her neck, to her breasts, then quickly back up to her face. When she looked away, he glanced down her left thigh to where her skirt ended. Then he ogled what he could see of her generous ass enveloped by the chair.\n\n\"And that's how I made a million dollars with OnlyFans.\"\n\nThe words hung in the air for a second. Just as Grant took them in, the women laughed hysterically.\n\n\"Oh, I um, I uh,\" he stuttered apologetically. \"I was just lost there for a second. But I was listening.\"\n\nHe had zoned out. Issa's non-sequitur had caught him. Grant looked around at the faces of the four women, wondering what to say. The second before, he had been fucking Issa in his mind. He'd imagined her bent over the table, skirt hiked up to her hips, panties pulled aside, as plowed her from behind. It was a scene of shocking clarity.\n\n\"I tell a fascinating life story,\" Issa said with a smile. \"Hope you're taking notes.\" At that moment, her phone started buzzing. Excusing herself, Issa stepped away from the table toward the front door to take the call.\n\n\"You like her,\" Claire stated.\n\n\"I think so too,\" agreed Bethany.\n\n\"I think you're just horny,\" said Jennifer. \"You did everything but drool over her. She's kinda bodacious, but you've gotta hold it together.\"\n\nGrant flushed and felt foolish. The combination of loneliness, medicated by the company of four women, a dating profile, and all the playful banter had pushed him over the edge. Issa returned.\n\n\"I'm sorry, but I've got to go.\"\n\nGrant stood up so fast he almost knocked over the chair.\n\n\"Please don't. I'll be better, I promise.\" Issa laughed. \"You're fine. That was my son. He's coming home for the weekend. I need to get things ready at home, and pick him up at the airport in the morning.\"\n\nBethany said, \"Smooth moves, Grant. It was nice to meet you Issa.\"\n\n\"I agree,\" added Claire. \"Hope we can do this again. Right Jennifer?\"\n\n\"Yes, indeed,\" her friend agreed, \"And please give our boy another chance, won't you?\n\n\"It's been fun,\" Issa said. \"Grant?\"\n\nHe was having another out of body experience. It was like being in a play, and forgetting you had lines.\n\n\"Absolutely. I'll, I'll call you...after this weekend.\"\n\n\"You do that,\" Issa said as she stretched up on her toes and kissed him on the cheek. \"Goodnight all.\"\n\nAnd she was gone.\n\n\"Time to call it a night,\" Jennifer said.\n\n\"Really, Jen? Can't you stay a little longer?\" Claire pleaded.\n\nBethany said, \"I'm not ready to go yet either.\"\n\n\"You're my ride, Claire. I've got a husband to rescue. Can't avoid home much longer.\"\n\n\"I'll take you home,\" Grant offered.\n\n\"Thanks, bass boy. I accept. Later girls. Don't have too much fun. My FOMO is for real.\"\n\nChapter Four\n\nThe two of them exited the bar and started back over toward the office garage, which was the lower level of their building. Grant offered his arm as they crossed the street. Jennifer accepted. It was part gentlemanly, and part because she was a bit wobbly. Given her height and low heels, she matched his 6'1\" frame. She leaned into him as they walked, and didn't seem to be in a hurry.\n\n\"Will your husband mind that you were out having a couple drinks?\"\n\n\"I don't think so. It doesn't happen very often.\"\n\n\"Will he mind that a guy drove you home?\"\n\n\"As far as he knows, Claire's my ride. I'm not inviting you in.\"\n\nHe smiled.\n\n\"Sorry that this has been a sexually frustrating evening for you, Grant.\"\n\n\"Well, I didn't wake up this morning expecting to have any orgasmic adventures.\"\n\n\"True. But it seemed promising with Issa. If her night hadn't ended early, you might have ended up in her bed. You were already in her in your mind weren't you.\"\n\n\"It was that obvious? I guess I was pre-primed all evening.\"\n\nThey reached the car. Grant opened the door, and started to help her in. She stopped.\n\n\"I noticed that earlier. At your desk, I observed a big bulge in your pants. Sorry my tits got in your way.\"\n\nShe leaned against him. \"I can feel it right now.\" Jennifer giggled, turned away, and sat in the car.\n\nGrant closed the door, then made his way to around to the driver's side. He paused, took a deep breath, then opened his door and slid behind the wheel.\n\n\"I feel sorry for you,\" she said. \"Blue balls can't be any fun, and yours must be painful.\"\n\nGrant shook his head. \"Thanks for your pity, but I'll survive. A little time on the treadmill, followed by a cold shower, and I'll be right as rain.\"\n\n\"What? You won't jerk off? Wouldn't a little masturbation ease your discomfort? Help you sleep?\"\n\n\"Hardly something I would mention in polite conversation. My self-pleasuring practices are things I normally keep to myself.\" \"You've been such a sweetheart tonight, buying drinks, driving me home. I think I should help.\"\n\nGrant's heart began thudding in his chest. He swallowed hard.\n\n\"What are you talking about? Help how?\"\n\n\"I don't mean fucking you. That's for the hubby. He's got a birthday in a couple months. He will be royally fucked at that time. I mean, I could...inspire you as you...relieve yourself.\"\n\nGrant's cock was instantly hard. He shifted uncomfortably in his seat.\n\n\"That sounds a little awkward.\"\n\n\"For you or for me?\"\n\n\"Both maybe?\"\n\n\"I'll be fine. I've seen a penis or two in my time. I don't think yours will be anything extraordinary. You're not like 18\" long are you?\"\n\nGrant snorted. \"I've never measured, but it's likely a foot shorter than that.\"\n\nJennifer reached over and placed her hand on the bulge in his pants. She lightly ran her fingers over the contours of the protrusion. He gasped involuntarily.\n\n\"I'll let you touch you. You do all your own work. I'll just tell you what to do. Some jerk-off instructions, if you will. And if you make a mess, no big deal, because it's your car.\"\n\n\"Your reasoning is impeccable, and honestly, if I didn't have blue balls before, I sure do now.\"\n\n\"So I'm going to take my hand off of your crotch, and you're going to unbuckle your pants. Right now.\"\n\nGrant felt like he was underwater. He looked furtively around, but saw no one else in the garage. He lifted his butt off the seat and slid his pants down to his knees. Although he was still wearing underwear, his cock sprang straight up, touching the steering wheel.\n\n\"My, oh my! You are happy to see me.\" With her index finger, Jennifer touched the cloth-covered head of his penis, then slowly circled the circumference. He groaned. She made another circle, even slower. Then another. Grant could see a wet spot, as his pre-cum soaked through the underwear.\n\n\"Now, take off those underpants,\" she ordered. \"Let's see what you've got to work with.\"\n\nHe obeyed. There was no hesitation or embarrassment. Free from the underwear, his cock was pulsing, the head almost purple. He spread his legs as far as he could. His left leg hit the car door. His right leg pushed against the gear shift and made contact with Jennifer's leg. He turned to her. She looked directly into his eyes and smiled.\n\n\"Don't touch yourself yet,\" she said softly. \"I want to look at it while I talk to you.\"\n\nGrant twisted in his seat. He could not remember ever being this sexually excited. Desperately, he grabbed the lever under the steering wheel, and pushed the wheel up as far as it would go. Then he reached for the seat controls and moved it backward and as low as possible.\n\n\"Comfy?\" she said in a way that sounded caring and slutty at the same time. \"Now I know you want me to lick your big hard cock, don't you?\"\n\nHe nodded, and made a groaning sound.\n\n\"But I'm not going to do that, am I.\" It wasn't a question. \"I'm not going to put my red lips over the head of your cock. I'm not going to stick your dick into my mouth. I'm not going to let you shoot sperm down my throat. And I'm not going to take off my panties, spread my legs, and show you my pussy. But even if I did, I'm definitely not going to let you push your cock into my wet, juicy cunt. That's off limits. Because I know that you would barely get that swollen penis head into the lips of my vagina before you would cum in my pussy.\"\n\nGrant let out a moan that sounded like pain. He was immobilized by lust.\n\n\"What I am going to do, is tell you when you can stroke your big, beautiful cock. I'll let you touch yourself. Smoothly, furiously, up and down, until you ejaculate all over this car. Are you ready Grant?\"\n\nHe nodded. He wanted to jerk off more than he'd ever wanted to before.\n\n\"Jennifer?\" It was almost a whimper. \"Will you...\"\n\n\"No touching. I'm off-limits.\"\n\n\"No. I mean...can I please see...your tits? Please...\"\n\nHe was begging, staring into her eyes, as his hand encircled his engorged member. She smiled, and began to unbutton her satiny, cream colored blouse. She watched his gaze drop to her chest, as she slowly uncovered it. When all the buttons were undone, she pulled the blouse out of her skirt. Her heavy breasts filled the white bra. The cleavage was deep and alluring.\n\nJennifer didn't unhook the bra. Instead, she took the straps off her shoulders, and carefully pushed the cups down, revealing her breasts all at once. A growl escaped Grant's lips. Her tits were beyond anything he could have imagined. Pendulous and full, they were framed underneath and on the sides by the white undergarment. Her areolas were the size of coffee cup saucers, and darker than her tanned skin. Her nipples were darker still, and standing at attention. \"They are beautiful...you're beautiful...I've never...Oh...my...G...\"\n\nWith barely a stroke, a stream of cum erupted from his cock, and landed on his thighs. The second spurt shot up over the steering wheel and splashed onto the dashboard. He continued pumping and releasing sperm all over himself. Finally, he lay back gasping and sweaty.\n\n\"That was quite a load, Mister.\" Jennifer giggled. \"You've been saving that up for a while. I'd lick it off the head of your cock, but I can't go home smelling like cum. Hubby might notice.\"\n\n\"Thank you.\" His voice was weak. \"That was so intense. I didn't even really jerk off. Your words and the sight of your gorgeous tits made me explode.\"\n\nJennifer put her hands under her breasts and jiggled.\n\n\"These were working boobs a few years back. Saggy, but still functional for adult play. Glad you like them.\"\n\n\"Like isn't a strong enough word,\" Grant replied as he regained his senses. \"I mean, I'm a breast man, so I like 'em all, regardless of size or shape or color. But what you have...\" His voice trailed off.\n\n\"What do I have, bass boy?\"\n\n\"You have tits so glorious, so sensual, so erotically captivating, that I could cum just by looking at them.\"\n\n\"Now I feel special. I haven't been tits out in front of another man in many years. And I'm a little worked up. Honestly, seeing your, uh, display, has me hot and bothered.\"\n\n\"I'd offer to return the favor, but I want to respect your boundaries.\"\n\n\"You're a good man. Hubby and I will come to some sort of arrangement, if you get me home in time.\"\n\nGrant didn't move a muscle until Jennifer finished covering up to the last button. He didn't want to miss anything. When she was done, he fumbled for the tissue box and used a wad to clean himself and his dashboard. He turned and tossed the tissues into the backseat. As he did, Jennifer pulled his face to hers and kissed him on the lips. The kiss lingered. Grant didn't resist and didn't respond. Her tongue pushed into his mouth. Her lips were slick, smooth, and pressed tightly against his. She moaned into his mouth and pulled away.\n\n\"Start your other engine,\" she demanded. \"That was your gift to me. So thanks.\"\n\nChapter Five\n\nGrant thought about Issa all weekend. He didn't know enough about her to be so fixated. It was just physical attraction and the desire for intimate connection. If he was honest, some of his imagination mingled into his experience with Jennifer. The high from the sexual release she had instigated lingered in his memory. When he replayed the scene in his mind and masturbated, he supplanted Jennifer with Issa and Issa with Jennifer.\n\nGrant exchanged texts with Issa on Monday, set up a phone call for Tuesday, and then arranged dinner for Wednesday. It was a steak place. She wore a dress with a very similar style to the one he'd seen the first time, but this was in red. They both avoided carbs, enjoyed Caesar salads, medium rare beef, sides of cheesy broccoli, and a couple glasses of red blend each. She regaled him with stories of interviews conducted with prospective employees. They were either hilarious, embarrassing, unbelievable, or all three. He shared his struggle to learn how to cook a decent meal, operate the washing machine, and buy clothes without guidance.\n\n\"So what's with you and younger women?\" she asked.\n\n\"They're just friends.\" Grant immediately envisioned Jennifer's incredible breasts, making his words feel like a lie. \"Mostly. I think I'm a project they've taken on. Trying to help me move forward. Besides, only Bethany is that much younger. Claire and Jennifer are your age.\"\n\n\"Not exactly, but thanks. I'm 46. Probably 10 years older than they are. Or maybe it's Amazons you find appealing.\"\n\n\"Claire and Jennifer are on the tall side. They tell me a lot of men seem intimidated by that. Not me. Any size will do. You're not short. Is 5'5\" about right?\"\n\n\"Good guess, and that's a number more likely to go down than up. Unlike age and weight.\"\n\n\"Well, you look incredible, whatever number you're on. Besides that, I find you fascinating.\"\n\n\"You're pretty fascinating yourself. This whole handsome, vulnerable, respectful vibe is working for you.\"\n\nAt his insistence, she let him pay for dinner. Her condition was that they go back to her place for a drink. He readily agreed. Within half an hour, he pulled into her driveway as the garage door closed behind her car. He waited for a moment until Issa made her way through the house and opened the front door.\n\n\"Welcome to Casa del Issa.\"\n\n\"It's a lovely house,\" he said stepping inside. \"You've decorated beautifully. I could use some tips on refreshing my decor.\"\n\n\"Happy to offer an opinion.\" She shut the front door and led the way through the living room, and pointed him toward the barstools in front of the counter that bordered the kitchen. \"What can I fix you to drink?\"\n\n\"How about anything that requires a shaker.\"\n\nShe seemed puzzled for a second, but then smiled. He watched her move toward the kitchen, and begin to gather bottles, glasses, and ingredients, placing them on the counter. From his perch, everything she did was in full view. When she bent down to get something from lower cabinets, he saw the curves of her ass in the tight dress. She filled the shaker with ice, added various liquors, bitters, simple syrup. He had no idea what she was making. She wrapped her hands around the stainless steel and began slowly shaking it up and down. All the while, she looked directly into his eyes. Hers were hazel. The gaze intense. He stared back. A moment later, the shaking stopped and Issa poured the drinks into tumblers.\n\n\"To new friendships,\" he said, taking the glass from her hand as she joined him on the other side of the counter.\n\n\"Yes, to everything new, and undiscovered,\" she added.\n\nThey each took a sip. Grant still couldn't identify the drink, and didn't care. He put his free arm around her waist, and pulled her close. He took in the feel of her body on his. He studied her eyes, her lips, as his tongue moved over his own lips, moistening them with the cocktail. He closed the small gap between them, and gently began a kiss. She pressed into him. The kiss became deeper. Their mouths opened wider, and their tongues met. Blindly, he put the tumbler back on the counter and wrapped both arms around her. He heard and then felt her replicate his movements. The intensity of the kiss expanded, as did his erection. Minutes passed.\n\nIssa pulled her lips away. \"TakeMe4Grant?\" she asked breathlessly. \"ZenDenMother41 invites you into her den. You can 'take me.'\"\n\nShe took his hand and led him into the bedroom. Her king sized bed was covered with crisp white linens and white comforter. She directed him to sit on its edge. Standing between his legs, she turned around. He sensed she wanted him to undress her. Grant put his hands on her hips, slowly caressing her, moving down to her ass. After a few seconds of massaging her cheeks, he moved up to the zipper. With a minimum of difficulty, he was able to unzip her dress, and peel it off her body. She stepped out of it, still wearing her black high heels, black panties, and bra.\n\nGrant tried not to rush things. Her back was still toward him. He put his hands on her waist and gently smothered her ass cheeks with kisses. He could tell she enjoyed it. His kisses moved toward the center, nuzzling the crack of her ass. He made a humming sound to give her a vibrating sensation. She made a mewing noise in return. After a few seconds, he kissed up the base of her spine. His lips reached as far as the clasp of her bra. Reaching around, he covered her tits with his hands, caressing each orb through the fabric of her undergarment. Rubbing in a circular motion, he could feel her nipples getting hard. His fingers traced around each protrusion simultaneously. Over and over he circled, ended each rotation on the tip of her nipples. Then he unhooked the bra. She shrugged out of it, and let it fall to the floor. His hands moved back to fondle her bare breasts. Breasts he had not yet seen.\n\nShe tried to turn around, but he stopped her. His hands moved down to her panties. Carefully sliding his fingers around the top, he pulled the panties down. His face was inches away, as the undergarment pulled away from the crack of her ass, and revealed a slight glimpse of her pussy.\n\n\"Bend over.\" It wasn't a demand, but his tone was firm.\n\nShe looked over her shoulder at him, and slowly bent at the waist. Keeping her legs straight, she slid her hands down her thighs until she touched her ankles. Her cunt was on full display. Grant returned to kissing her ass cheeks. Holding them apart, he could smell the muskiness of her sex. With his nose brushing against her anus, he stuck his tongue forward into her labia. He could feel the slickness of her pussy lips, as he barely pushed between them. He wiggled his tongue. She moaned loudly.",
        "Issa straightened up and whirled around. This time he didn't even try to stop her. She crushed his face into her tits. Then pulled his face up to her mouth and pressed him into a passionate kiss. They finally broke apart, breathing heavily. She pulled at his arms to get him off the bed. He was still wearing all his clothes, including a sport jacket. He shed that as she unbuckled his pants. She fumbled with the buckle, and he unbuttoned his shirt. All the while, he took in her voluptuous and naked body. The curves were full, her skin smooth and creamy. Her breasts were of medium size. The areolas were the size of quarters, and tan in color. Her nipples erect from his touches. He bent down and licked one, then the other. He tried to suck a tit into his mouth, but it interfered with her attempts to undo his pants.\n\nFinally, she had him unbuckled, unzipped, and pants at his ankles. He pulled out of his shoes, stepped out of the pants, and took off his socks. Issa got on her knees, eye level with the bulge in his underwear. They were light grey, except for the wet darkness where the pre-cum had soaked through. She kissed the bulge, softly, repeatedly. He could feel her hot breath through the cloth, and sighed. She put her fingers under the top of the elastic band above his penis, and pulled outward, before pulling down. His penis stood at full staff, quivering.\n\nShe kissed the tip. Then kissed all around the purplish helmet. Next, she ran her tongue down the shaft to his ball sack. She licked his testicles one at a time, then gently sucked each one into her mouth. When she was done, she cradled the balls in her hand, looked up into his eyes, then took his penis into her mouth. Though he was no better than average size, Issa took it slowly, pushing her lips down until she finally covered him completely. Her mouth lingered at the base of his penis for a moment. Then she slowly pulled up, and she released him with a pop.\n\nHe lifted her into a standing position. Then, wrapping his arms around her, he lifted her off her feet. During a long kiss, she wrapped her legs around his ass. Her wet pussy rubbed against his hardness. Grant couldn't take much more of that without erupting. He turned and delicately laid her on the bed. She let go, leaving her legs spread wide open. With her knees bent, her pussy was on full display. She looked at him lasciviously. With one hand she touched her sex. She traced the lips, then fingered her clit. With her other hand, she rubbed one nipple between her fingers. Grant was mesmerized by the view. He had never been with anyone willing to put on such a show. Issa was so comfortable with her body, so confident in her sexuality, he simply stared in appreciation. It was at that moment he realized he'd brought no protection. Even if he'd thought about it in advance, he doubted he would have carried a condom with him on the date. It would have feel presumptuous at best.\n\n\"I don't have anything,\" he said, pointing at his hard on.\n\nShe smiled. \"At this exact moment, I'm tempted to say I don't care. I would relish feeling you cum inside me. Everything so far has been delicious.\"\n\n\"For me too. I don't want to stop, but we should be careful.\"\n\n\"We aren't stopping sweetie. There will be orgasms. Here's the deal. At some point, you are going to penetrate me. But when you get ready to cum, pull out. It's a little risky, but it'll be worth it.\"\n\nBy way of agreement, Grant knelt between her open legs. He covered her entire pussy with his mouth. Sucking in, he could feel her pubic hair on his tongue. He heard her suck in her breath sharply.\n\n\"Oh baby, you are a sexy, silver fox. You know just what to do.\"\n\nHe released the suction, then ran his tongue up her slit. With the next lick, he started lower, and pushed in a little deeper. On the third pass, his tongue started at her anus, moved slowly between her labia, and lingered around the area of her clitoris. When he felt her clit with his tongue, he sucked it between his lips. After a few moments of attention, he shifted, brought two fingers to his mouth, and coated them with his saliva. Looking up between her legs and breasts, he met her eyes. She bit her lower lip as their gaze locked. Then he worked his two fingers into her dripping opening. Once inside her, he returned to licking her clit, letting his fingers curve up into her pussy. He stroked her slickness, and found what he thought was her G spot. Coordinating the stroking and licking, he felt her respond. She bucked her hips into his face, put a hand on his head. Her fingers locked into his hair and she pressed him forward.\n\nIssa came seconds later. She writhed and whimpered and moaned his name. Her body shook violently. Grant held on, head between her legs, but stopped his ministrations. Eventually, she put both hands on his head and pulled him up. Their lips mashed together, his face wet with their juices. When they stopped kissing, she opened her eyes. They glittered with satisfaction and lust.\n\n\"Mount me. I want you inside me.\"\n\nGrant positioned himself over her. Resting on his knees, he used one hand to rub his penis over her glistening pussy. Pushing the head into the opening, he leveraged himself forward, planting his hands on the bed. He teased by pulling back slightly, and then gently into her again. He repeated that movement, but each time, more of his cock entered her. After several strokes, he thrust all the way into her cunt suddenly, so that his balls slapped against her. Issa responded with a groan. He held the position for a second, and then pulled out almost completely, before plunging into her again. He began thrusting more rhythmically. He leaned down and suckled on one tit, while tweaking the nipple of her other tit with his fingers.\n\nHe was still able to look up and see her face. He watched her enjoyment. Between the sounds she was making, and how her body was responding, Grant knew she was close to orgasm. Increasing the pace of his efforts, he moved his mouth to hers, and thrust his tongue between her lips with the same force and timing as he was penetrating her. This threw Issa into a frenzy. He felt her hands move from his back to his ass. She pulled him deeply inside her.\n\n\"Say my name,\" she pleaded breathlessly. \"Say it.\"\n\n\"Issa,\" he replied with a thrust, \"Issa, my cock is deep inside you. Cum for me Issa.\"\n\nHer body shook vigorously. Grant stopped thrusting, and left his cock fully embedded. He felt her spasms of ecstasy, and it took his full restraint to keep from ejaculating.\n\nWhen her orgasm subsided, Issa opened her eyes.\n\n\"It is definitely your turn,\" she told him.\n\nGrant moved back off the bed, grabbed her legs, and pulled her to the edge. She lifted her legs into the air, and he cradled them in his arms, levering her upward. Issa reached for his cock with her hand, and guided him as he slid into her slick opening. Grant closed his eyes as he began thrusting. The sensation was overwhelming. He tried to delay the inevitable.\n\n\"Are you ready to cum, baby? I want to see you shoot all over my tits.\"\n\nHer words pushed him over the edge. He pulled out and grabbed himself, running his hand up and down his slippery shaft. Issa held her breasts together and locked eyes with him again. Her smile increased his fervor. With a moan, he orgasmed. His initial squirt of cum splattered on her belly. The several others that followed landed on her tits. When he was done, she rubbed the sperm around on her breasts.\n\n\"That was delicious,\" she said. \"And I think we need a cleanup on aisle 9.\"\n\nHe laughed. \"I might need a nap first. You sucked the life out of this old guy...in a good way.\"\n\nAs Issa showered, Grant got re-dressed. They sat on the couch. She wore a robe, with nothing underneath. Her hair still wet. The drinks were no longer cold, but Grant finished his anyway. Conversation came easily. He felt no pressure from Issa. She seemed like nothing had changed between them. After an hour, it felt natural to say goodbye. The robe was open when he hugged her. The warmth of her body pressed into him, and the kiss was long and lingering. He thought of her all the way home.\n\nChapter 6\n\nCommunication was sparse. Grant texted the next day. Issa responded, but not in a way that invited interaction. On Friday he messaged asking if she had time for dinner over the weekend. She didn't reply until Saturday, and said she was sorry, but she had plans. Grant struggled with what to say next. In the end he wrote, \"maybe another time\" and included a smiley emoji that he didn't really feel. It felt like he was chasing her. He didn't want to seem desperate or needy, and made an inner vow to back off. Maybe he would wait until she reached out to him.\n\nAt the end of the following week, Jennifer stopped by his cubicle as he got ready to leave.\n\n\"Hey Grant. How would you feel about hosting a little party at your place?\"\n\n\"Why? Are you kidding?\" He said quizzically. \"What kind of party?\"\n\n\"Well, next Thursday is Claire's birthday. Of course there will be cake in the conference room, but I want to do something more to cheer her up. I was thinking it would be nice to have a little party with some work friends.\"\n\n\"Why does she need cheering up? And why my place?\"\n\n\"That boyfriend of hers, the one who moved away for a better job? He dumped her. I mean, it's not like she thought it was going anywhere, but it still hurts. I once was depressed for a whole week when I got turned down for a job I didn't even want. Rejection sucks.\"\n\n\"I get that,\" he nodded. \"But where do I come in?\"\n\n\"You make her laugh, for one thing. I know we don't hang out a ton, but when we do, we always have fun. And I don't know where else to have the party. Claire shouldn't host her own party. Bethany lives in an apartment. Michael lives with his mother. I'm not asking my boss to do this. And even though my hubby's away on business all next week, I've still got the kids. Plus, my mother will be coming to stay at my place to help with the kids that week. It won't be more than 10 people, I promise. And we'll take care of the food.\"\n\nGrant felt a bit bewildered by the earnestness of Jennifer's plea. But since he had no other plans, and his house could certainly accommodate a party...\n\n\"You can bring Issa.\"\n\nHis heart thumped. He paused, remembering how little he'd told Jennifer, Claire, and Bethany about his last date with Issa. He wondered if it was wise to break the silence and invite her to the party. The hesitation was obvious.\n\n\"Are you not seeing her? Is she getting in the way of your wild single life?\" \"Kinda the opposite, I think. She doesn't seem as eager to see me as I am to see her.\"\n\n\"No accounting for taste,\" Jennifer said, shaking her head. \"I don't know what she's looking for, but you check a lot of boxes. You want to see her because she clipped your hedges. Didn't she.\"\n\nGrant felt his face get hot. There was no need to answer.\n\n\"A good fuck can turn a man into a puppy dog,\" Jennifer said with a smirk. \"She must have rocked your world.\" She looked around to see if they were still alone before adding, \"I'm surprised you didn't follow me around for a week, after our little episode.\"\n\n\"Don't think I didn't want to, or didn't think about our...episode,\" he said solemnly. \"Still do.\" He forced himself not to look at her chest. An image of the boobs that made him immediately hard came vividly to mind. He couldn't explain what it was about Jennifer's tits. Was it the size? The shape? The areolas? Or the person they were attached to? He had no answer. It was just reality.\n\nShe smiled, and her eyes flickered down to his crotch. \"I'm generous to the poor and needy. It's my weakness. Oh, and even though you didn't ask, now I recommend you don't invite Issa. I liked her, but if she has other irons in the fire, leave her to them.\"\n\nBefore he could respond, she continued. \"And, bass boy. I'll conclude with several other applicable clich\ufffds. There are more fish in the sea. You have other fish to fry. Give a man a fish, and you'll feed him for a day. Give the man a fuck, and he'll want to fuck you again.\"\n\nThey planned the party for the following Friday. Jennifer handled all the details. The guest list included Grant, Claire, Jennifer, Bethany, Teresa, Teresa's husband Brent, Michael, and two women, Susan and Nancy, who used to be in the department. Susan had taken a position in a different company, and Nancy had been promoted. Both were still friends with Claire.\n\nJennifer collected money from everyone in advance to cover food, beverages, cake, and a gift. Grant spent the week cleaning his house, getting rid of clutter, and rearranging furniture to accommodate the group. There was no word from Issa. Grant's eagerness to hear from her began to fade into self- protective indifference. He was looking forward to the party. The first one held at his house in years.\n\nChapter 7\n\nJennifer arrived first with the food. Grant helped her bring in the Chinese take-away. There seemed to be more than enough for at least a dozen people. Next was a box with bottles of wine and liquor. Grant added these to his collection at the bar. Jennifer carefully brought in the cake, decorated with Claire's name and a handful of candles.\n\nWithin a few minutes, all nine guests were accounted for. Containers of Chinese food were opened up on the table, each with a serving spoon, and it was treated like a buffet. Grant played bartender, and discouraged orders that were too complicated.\n\nThe person known least by the most people, was Brent, Teresa's husband. But he handled it well. Chatting up everyone. For a time, Brent and Grant were engaged in conversation that covered the NFL, college sports, and fishing. Meanwhile, the women, and Michael were having a lively interaction about everything else.\n\nOnce dinner was over, they wasted no time lighting the candles, and singing happy birthday. Claire seemed in good spirits. Everyone else appeared to be enjoying themselves, except Bethany. Grant couldn't help but sense she was a little down.\n\n\"Everything ok?\" He felt parental.\n\nBethany shrugged dismissively. \"Sure.\"\n\n\"Hey, if you don't want to talk, I'll understand,\" he said, putting his arm lightly around her shoulders. \"But even I can tell something's bothering you.\"\n\n\"I was expecting to see my guy this weekend. No offense to Claire, but I would have ditched this party for him.\" She shook her head. Her light brown ponytail brushed back and forth across Grant's arm. \"He was too busy. But I saw him tagged in some posts that show he was busy with things other than school.\"\n\nGrant patted her shoulder. \"Sorry honey, guys can be real idiots.\" He paused. \"If you mention this to Jennifer, she'll just tell you there's more fish in the sea. And there are.\"\n\n\"I know,\" she said wistfully. \"But I'd rather throw the losers back, instead of having it done to me.\"\n\n\"Fair,\" he said. \"Hey, how about helping me get started with some tequila shots?\"\n\nGrant started scrounging up shot glasses, while Bethany opened the tequila. Teresa announced that she and Brent had leave. They made their apologies. Grant and Claire saw them to the door and wished them a good evening. That was when the party got started. The remaining group of seven agreed to play \"Never Have I Ever\" as a drinking game. Everyone sat in a circle, each holding a shot glass.\n\n\"Anyone who's driving, can't lose more than twice,\" Grant warned. \"Unless you're planning to stay the night, that is. I can switch you over to fruit juice at any time.\"\n\n\"Sounds fair,\" agreed Jennifer. \"Birthday girl goes first.\"\n\n\"Wait,\" Michael interjected. \"Explain the rules again.\"\n\nBethany spoke up. \"We each take a turn, and name something we have never done. Anyone in the circle who has done that something, takes a drink. Ready Claire?\"\n\nClaire giggled. \"Let me think.\" Her brow furrowed with concentration. After a few seconds she yelled, \"I've got it.\"\n\n\"Don't worry,\" quipped Jennifer, \"an antibiotic will clear it right up.\"\n\nMost of them laughed. Claire scowled, but a smile peeked through.\n\n\"Shut up Jen,\" she said. \"Never have I ever...romantically kissed a girl.\"\n\nGrant threw down his shot and looked around. Michael was holding his drink with an undecided look. Jennifer's was untouched. Neither Nancy or Sue flinched. Bethany raised her glass ceremoniously, and gulped the tequila.\n\n\"To dorm life,\" she said after swallowing.\n\nAll eyes returned to Michael.\n\n\"What counts as romantic?\" he asked.\n\n\"You kissed a girl and you liked it,\" Jennifer answered.\n\nMichael reddened. \"I kissed a girl and I'm pretty sure SHE liked it.\"\n\n\"Bottoms up, stud muffin,\" commanded Jennifer. Michael looked relieved, and complied.\n\nGrant went next.\n\n\"Never have I ever ridden in a helicopter.\"\n\nJennifer downed her drink. No one else moved except Claire, who explained, \"We rode together.\"\n\nTaking his turn, Michael said, \"Never have I ever watched a zombie movie.\"\n\nEveryone else in the circle downed their drink. Sue was next.\n\n\"Never have I ever lied in a job interview.\"\n\nThere was second of silence.\n\n\"I'm glad Teresa left,\" Jennifer said before downing her drink.\n\nBethany and Michael quickly followed.\n\nIn a slightly too loud voice, Bethany said, \"Never have I ever knitted anything.\"\n\nNancy and Sue drank simultaneously. Michael and Claire followed closely behind. Grant sheepishly emptied his glass too.\n\n\"That's my limit,\" Nancy exclaimed.\n\n\"Mine too!\" said Sue. \"We need to head out anyway, right Nan?\"\n\n\"I don't remember how many I've had,\" said Michael rubbing his head. \"But I feel done, and I'm calling my Uber.\" He pulled out his phone, and fumbled with the passcode.\n\nJennifer shook her head. \"They're dropping like flies. We need to go another round and determine a winner.\"\n\n\"Settle down, Jen. First let me say goodbye to my party guests.\" Claire got out of the chair on her second attempt.\n\nNancy and Sue drove off together. Claire packed up a few dinner leftovers for Michael as he waited for his Uber to arrive. Once he was gone, Jennifer grabbed the tequila bottle and filled their glasses. She led them away from the circle of chairs to the comfort of the sectional couch.\n\n\"Whose turn is it?\"\n\nClaire was prepared. \"Never have I ever driven a stick shift.\"\n\nThe other three all had to imbibe.\n\nIt was his turn. Thinking hard, Grant finally said, \"Never have I ever colored my hair.\"\n\n\"Bastard,\" spat Jennifer, as the three women downed their drinks. A little liquid dribbled down the corner of Bethany's mouth. \"My turn,\" Jennifer said in a singsong tone, with a slight slur. \"Never, ever...have I never had a threesome.\"\n\nChapter 8\n\nOut of the group, Jennifer would have been the one most likely to engage in a threesome, in Grant's mind. So he was already wondering whose turn was next, when Bethany raised her glass, drained it, and said, \"To dorm life again!\"\n\nClaire sighed and tossed back her shot as well.\n\n\"Do tell ladies,\" Jennifer demanded. \"I want to live vicrasy...vicarialy...I mean, spill the beans.\"\n\n\"It was just a few times,\" started Bethany. \"I experimented with my bi-side in university. A girlfriend and I started masturbating together watching porn. Then we progressed to using sex toys on each other. It was fun. Then my friend got infatuated with a girl on the volleyball team. Her name was Courtney. She was gorgeous and completely gay. Long, muscular legs, a beautiful ass, kissable lips. My friend used me as a prop to get close to Courtney. Next thing I knew, the three of us were having sex. Still fun. But it turned out that as much as I like the orgasms and pussy licking, I'm not gay.\"\n\nGrant realized his mouth was hanging open, and closed it with a snap. Claire was wide-eyed.\n\n\"Then, after I'd been with my boyfriend a while, I told him about my past adventures. Big mistake. He became obsessed. Begged me to bring another girl into our bed. So I finally did. He liked watching me go down on her. He definitely enjoyed the idea of a double-blow job. But he had like performance anxiety. He was kinda limp. Couldn't even get hard enough to penetrate us. He never asked again.\"",
        "Jennifer said, \"I'm surprised. I never would have thought you'd done that much carpet munching.\"\n\n\"Kinda vulgar way to refer to something so...well satisfyingly beautiful,\" responded Bethany. \"Honestly, some of the best orgasms I've had were with women. They know just how and what to do. But I'm not gay. I crave men, dickheads though they be.\"\n\nJennifer turned to Claire. \"You surprise me too. Was it also 'satisfyingly beautiful'?\"\n\nClaire shook her head. \"No. It was only once, and I was outnumbered.\"\n\n\"Oh no,\" Grant exclaimed. \"Were you attacked?\"\n\n\"Nothing like that. My boyfriend at the time was a talker. When we were having sex, Ryan would say things that turned me inside out. He was so imaginative, a creative story-teller, with a sexy voice. He could make me wet with a few well-chosen words. He had this one theme where he'd say: 'Wouldn't you like someone sucking your nipples while I eat you out?' Or, 'How would it feel to have someone licking your clit while I'm fucking you from behind?' It was hot. Then he got more gender specific. 'How would you like to suck another cock while I'm fucking you?'\"\n\nClaire stopped, and took a deep breath. Grant realized he'd been holding his. Claire was sitting in the middle of the sectional. Jennifer was laying on the left wing of the sectional, while Bethany was perched on the right. Grant was in an easy chair facing Claire. He crossed his legs to hide a growing erection.\n\n\"Eventually Ryan came right out and asked me for a threesome with his buddy Jon. I knew Jon a little. Nice looking, and bit of a gym rat. I didn't say yes at first. But the more he talked about it, and the more I fantasized about it, the better it sounded. When I agreed, Ryan rented a cabin for the weekend. It was secluded, romantic, with a hot tub, a fireplace, and a loft with a king-sized bed. Jon was already there. He'd made dinner, chilled the wine, lit candles. I was so nervous I would have backed out at that point, but we're in the middle of nowhere.\"\n\nClaire stopped and poured herself another shot of tequila. She swallowed it, and poured another before continuing.\n\n\"Dinner was great. Jon knew his way around a kitchen. Two bottles of wine helped relax me. Next thing I knew Ryan was filling the hot tub and Jon was kissing me. It felt strange to make out with another guy, especially with my boyfriend right there. Ryan stood behind me, kissed my neck, and started taking my clothes off. That was Jon's signal to help. In seconds, I was standing naked between them. Jon stared at me while he peeled off his clothes. When he pulled down his shorts, I was shocked. I had never seen a cock that big, at least not in person.\"\n\n\"How big?\" interrupted Jennifer. \"Was it, 'That looks like a genoa salami' size or 'That freaky tent pole will never fit in my body' size?\"\n\n\"Somewhere in between, I guess. The physics did worry me. Anyway, we got into the hot tub. I sat between them. The steamy water soothed me. Each one started sucking the tit closest to him. Ryan moved my hand to his cock, and I started to stroke it. I looked over and saw Jon's tip sticking out of the water. I reached below the surface and tried to encircle his shaft. Jon looked up from my tit into my eyes and groaned. I tried to coordinate the strokes, but Jon was so much longer than Ryan it didn't work. I felt fingers in my vagina and in my asshole. All the attention was a sensory overload. It didn't take long before I was moaning and demanding that they fuck me.\"\n\n\"Sounds like one of my favorite dreams,\" sighed Jennifer. \"Only my guys are named Brad and George.\"\n\n\"I bet Pitt and Clooney are the last names,\" chimed Bethany. \"Keep going Claire. This is my favorite story ever.\"\n\nInwardly, Grant agreed with Bethany. But he thought it best to keep his mouth shut. He didn't want to do anything to disturb the atmosphere and break the spell.\n\n\"They stood up in the tub, while I took turns blowing them. I had a cock in each hand, and sucked on Ryan for a bit, and then Jon. Back and forth. I've never deep throated anybody, and I couldn't even half- throat Jon. Eventually, we got out, dried off, and went up to the loft. They nuzzled and kissed and licked me all over. I caressed and licked and sucked each of them in return. Any orgasms I experienced did nothing to satisfy the hunger. I had to be impaled. I begged for it. They put me on all fours. Ryan started fucking my mouth. I felt Jon get between my legs and slap his giant dick on my ass. He laid it on my back. It was heavy and pulsating and monstrous. I felt fear and lust at the same time.\"\n\nClaire stopped again and gulped her tequila. Grant could see Bethany rubbing herself through her pants. He caught Jennifer's eye, and realized she saw it too. Jennifer grinned at him and put a hand on her own breast, and found a fabric-covered nipple to tease.\n\n\"I heard him spit, and then I felt his cock pressed against my pussy lips. Between the spit and my own slickness, he got the head in. He eased back and forth, going deeper each time. When I thought he was all in me, I pulled my mouth off Ryan, looked back and saw I was wrong. He had a lot more to go, and I doubted it would fit. As he kept thrusting, I couldn't focus on Ryan anymore. I moaned and screamed and whined for him to fuck me. His cock was deeper inside of me than anything had ever been. That was when Ryan started talking.\n\n\"You like this, my little cum slut? Is this stud too big for you? How does it feel to be spit-roasted? You've got a dick in each end of you.\"\n\n\"Ryan pushed his cock back into my mouth. I was panting, and he obstructed my airway. It made me choke and then gag. This seemed to inspire Jon. He grabbed and pulled my hair with one hand, while gripping my ass tightly with the other. Ryan pulled back enough to let me breathe and said, 'Don't worry, he's going to fill you with hot sperm. And when he gets done fucking you, it'll be my turn. You- are-our-fuck-doll. And we will use you until you beg us to stop.'\"\n\n\"That was when Jon let out a yell and started pumping inside me. In spite of the filthy words, or because of them, I came too. My knees turned to jelly. The only thing holding me upright was the monster cock stuck in my twat. When I recovered my senses, and Jon finally pulled out, it was like releasing Excalibur from the stone. They quickly traded places and Jon put his penis head into my mouth. As I started to suck him, I felt Ryan rub his cock around my pussy lips in all the mingled juices. Then without warning, I felt him press into my anus. I had never had any anal penetration before, other than a finger. I tried to pull off of Jon, but his hand on the back of my head pushed me farther down his shaft. I wiggled my ass trying to get free, but that seemed to excite Ryan even more.\"\n\nJennifer chimed in again. \"I should have said, Never have I ever had anal sex.\"\n\nClaire's eyes had a faraway look. It was as if Jennifer hadn't even spoken.\n\n\"It hurt at first. Then he slid past my sphincter and inside me. He told me how tight I was. How good it felt. He called me his goddess. Within seconds, I felt him cum. It was a weird sensation. I pushed him out of me, pulled away from Jon, and flopped on my back. Fluids leaked from all my orifices. I felt used and glorious all at once. For the rest of the weekend, they treated me like a queen. We hiked and ate and laughed together. At night we were three lovers, a tangle of limbs. The sex was gentle. No anal. Each time after, I had the foresight to make Ryan fuck me first. Then I would suck him, while Jon destroyed my pussy. And that was my only threesome experience.\" Chapter 9\n\n\"Is it a good memory or a bad one?\" asked Bethany, her hand resting motionless on her crotch.\n\n\"As strange as it seems, it's all good,\" said Claire thoughtfully. \"This is the first time I've told anyone. And honestly...talking about it again...made me pretty...horny.\"\n\n\"Good for you, Golden girl,\" exclaimed Jennifer. \"I'm sure it's had a positive effect on bass boy too. And since we're swapping tales, I've got one to share.\"\n\nGrant looked at her in panic and shook his head vigorously no. Jennifer ignored him.\n\n\"What makes you think I'm going to tell our story?\" She smirked.\n\nClaire gasped and Bethany blurted, \"You two hooked up?\"\n\n\"No, no,\" Jennifer said with a dismissive wave of her hand. \"I just supervised a little tension relief for our frustrated Grantster. Our naked parts never touched. But I got to see his pee-pee. It's spectacular!\"\n\n\"No way, Jen,\" Claire turned to Grant. \"She's lying, right?\"\n\nHe felt sheepish. Like a 12-year-old caught snooping in his mother's panty drawer.\n\n\"Well, um, not exactly. I guess...what happened was...Jennifer sort of talked me out of my pants. She's very persuasive.\"\n\n\"Actually girls, I possess Grantster's kryptonite, right here,\" she said, pointing at her chest. \"One peek at Lavern and Shirley, and he erupted. Apparently, he's a breast man, and mine caused an immediate reaction.\"\n\nGrant felt Claire and Bethany staring at him. He couldn't tell whether it was with disapproval, disappointment, or disbelief.\n\n\"He was a perfect gentleman,\" Jennifer explained. \"It was all my idea. But he did jump on board quickly. And let me repeat, never did we touch each other's naked naughty bits.\"\n\n\"Sounds positively quaint,\" said Bethany. \"What's so special about your tits? Do you have more than two?\"\n\nGrant jumped in. \"I don't know what it was. Cause I adore every size, shape, and color. But something about hers were overtly sexual. Seeing them brought out this primal urge in me. Truthfully, I was really charged up that night already. So that might have been all it was.\"\n\nJennifer made a sound like harrumph sound, and started unbuttoning her blouse. \"What are you doing?\"\n\n\"Putting your fixation to the test, bass boy. I want to see how you react now.\"\n\nClaire seemed quietly fascinated, while Bethany giggled. Grant didn't know what to do. His eyes followed Jennifer as she stood up, finished unbuttoning, and slid off the blouse. She folded it neatly, and leaned down to put it on the coffee table. He stared at the dark shadows of her areola, peeking through her cream colored bra. When she straightened back up, her tits bounced.\n\n\"Just for comfort sake, I'm taking off my pants,\" she said as she unfastened them. \"The panties stay on, the bra will come off, and then we'll see what's what.\"\n\nWhat was to be seen, Grant wasn't sure. He was already erect. Just having Jennifer start undressing in front of him, let alone in the presence of two other women, was electrifying.\n\nJennifer kept her eyes on him as she removed her pants. Her shoes had been discarded earlier in the evening. She carefully folded the pants, placed them on top of her blouse, and straightened up again. Her eyes never left his. She stood silently in front of them, hands on hips. Grant took in the sight. Without heels, she was probably an inch or two less than six feet. Long, shapely legs, wide hips, some stretch marks on the belly which he found attractive. Her heavy breasts still covered by the bra. Her dark hair hung down, touching just below her shoulders. As he looked at her full lips, she smiled seductively, sucked her bottom lip between her teeth, and arched her eyebrows.\n\n\"That's far enough,\" Grant surprised himself by saying. \"You don't need to prove anything else. You are beautiful and alluring in your...underwear alone. Take off any more, and I wouldn't be able to control myself. Honest.\"\n\n\"That's sweet of you,\" she replied. \"But I've never been a quitter.\"\n\nShe reached behind, unclasped her bra, and slowly let it fall away from her to the floor. Her areolas were still saucer-sized. Her nipples weren't as erect as they were the night in Grant's car, but they were dark and pronounced enough for easy viewing.\n\nA low grunting sound escaped Grant's throat before he could stop it. He squirmed in his seat. He wanted to look away, but he could not. His hands moved up and down his thighs involuntarily with nervous energy.\n\n\"Do you think I could make you cum in your pants without anyone touching you?\"\n\nHis breathing was heavy and erratic. \"Probably.\"\n\n\"It wouldn't be as much fun, though, would it.\"\n\nHe shook his head. \"So why don't you show the girls, what you showed me that night?\"\n\nGrant tore his eyes from Jennifer's tits and looked helplessly at the other two women. Bethany seemed to find this amusing. Claire was more difficult to read. She looked curious. Her eyes flicked down toward his crotch.\n\n\"I wanna see,\" said Bethany grinning. \"By the way, Jen, nice jugs!\"\n\nGrant returned his gaze to her naked breasts. He couldn't stop himself. Still watching him, Jennifer reached up and began rolling her nipples between her fingers. She accompanied that with a libidinous look and a guttural moan that propelled him to act. Without another thought, he stood and stripped off his pants and underwear. His penis stood proudly and painfully erect.\n\n\"I would love to put that nice hard cock between my big soft tits,\" Jennifer said. \"But that wouldn't be fair to hubby, now, would it.\"\n\nGrant felt his head shake a slight no in reply. But at that moment, he didn't care what hubby did or didn't want. Grant wanted to bury himself in Jennifer.\n\n\"Come sit on the couch,\" she said, patting the spot next to Claire.\n\nHe obeyed, feeling only slight embarrassment as he lowered his naked ass onto the sectional. He glanced at Claire. He couldn't imagine what she was thinking. At that moment, Bethany stood up, crossed in front of them, and plopped down on the other side of Grant. She immediately put a hand on Grant's right thigh. His cock twitched.\n\n\"Now we're all cozy,\" Jennifer said, laying back down on the sectional wing to the right of Bethany. \"Last time, I made Grant-daddy do all the work. Maybe this time, others can help where I can't.\"\n\nBethany lifted her hand off his thigh and hovered it over his pulsating erection.\n\n\"You shouldn't,\" he whispered. \"You're...too...young.\"\n\nBethany laughed. \"I'm 23. And I bet I've had more sex in the last five years than you have.\" With that, she moved her hand to the head of his penis, and then slid it down his shaft.\n\nClaire looked at him, smiled, then reached out and tenderly cradled his balls in her hand. Grant leaned his head back in ecstasy. He wanted to make this last as long as possible. The women worked together, rubbing, teasing, stroking him. Bethany stopped suddenly. Wordlessly, she stood and undressed. In seconds her top and jeans were on the floor. Wearing only a white bra and light blue panties, she returned to his side. Grant stared at what he could see of her tight body. He couldn't comprehend being touched by someone almost 30 years younger. But she was.\n\nThat seemed to signal Claire. She leaned back and pulled her top over her head. The movement tousled her blonde hair, and made her look even sexier. Without stopping, Claire unhooked her bra, revealing small, pert breasts, and almost invisible nipples. Grant reached toward her, but stopped his hand. Claire looked at him, and pulled his head toward her chest. He furiously licked her nipples and suckled on her small tits. Soon her chest was slick with his saliva.\n\nSuddenly, he realized Bethany was not just touching but kissing his penis. He leaned back from Claire and shuddered with pleasure. Before he could take in the sensation, Claire bent forward and joined her. Bethany held him at the base, and moved him in and out of her mouth. Claire's face was next to her. After a few sucks, Bethany pointed Grant's cock at Claire. She eagerly took her turn. Grant put a hand on each of their backs and he watched the two heads going down on him.\n\nAfter a few moments, Grant felt the sensations become less regular. He realized that the girls were pausing between turns to kiss each other. After each kiss, their tongues flicked over the swollen helmet of his cock and touched each other. Grant looked over at Jennifer. She was focused on the display between his legs. One of her hands was kneading her tits, the other was massaging her cunt through sopped panties.\n\nBethany stood up again. This time she turned her back to Grant, bent over, and pulled down her panties. Grant could clearly see the glistening mound of her sex.\n\nWithout changing position, Bethany looked over her shoulder and said, \"Claire, take off your panties.\"\n\nThere was a moment of hesitation. Grant heard Jennifer's sharp intake of breath. Whether in surprise or passion, he had no idea. But Claire complied. She stood, tall and slender, and repeated Bethany's movements. With her back to the other three, she unzipped her skirt, and kicked it aside. Then slowly pulled down her panties, bending at the waist as she did. Golden pubic hair surrounded her vulva. The sight was mesmerizing. Grant reached out and ran his fingers over her moist labia. She wriggled her ass with appreciation.\n\nBethany straightened up, and walked over to Claire. When Claire stood, Grant could no longer reach her pussy, nor could he see Bethany. Claire was a good six inches taller, and completely blocked the younger woman from his view. But he could hear her speak.\n\n\"Claire, I want to do to you what no woman has ever done to you before. I want to get between your long, gorgeous legs, kiss my way up your thighs, lick your pussy lips, stick my tongue inside you, taste your cunt, and roll your clit between my lips. I want to make you cum so hard that you never forget it.\"\n\n\"Oh my God,\" he heard Jennifer mutter in awe.\n\n\"Will you let me do that Claire?\" Bethany asked.\n\nHe could see Claire nod in assent, as she edged backward, and resettled herself next to him.\n\n\"And Grant,\" Bethany continued, \"while I'm eating out Claire, I want you to fuck me from behind. Do you think you can handle that, Grant-daddy?\"\n\nBethany gestured to Jennifer, \"Come over here and help Claire spread her legs for me. They're so long, she'll need you to hold one. That way you'll have a great view too.\"\n\nNo one seemed to mind that the youngest person in the room was giving orders. Jennifer accepted her assignment, motioned Grant to his feet, and then took his place. She helped Claire scoot to the edge of the couch, picked up her right leg, and placed it over her own lap. Bethany pulled the arm chair close to the sectional, angled it sideways, and draped Claire's other leg over its back. The blonde amazon was now spread eagled in front of the group. She looked vulnerable and powerful all at once. Grant stared at her glorious nude body. Her tits still glistened from his attentions. The look in her eyes was wild and feverish. His eyes devoured her pussy. He longed to thrust his cock through the blonde pubic hair and into her beautiful opening.\n\nAgain, his view was obscured as Bethany got on her knees in the chair. Leveraging herself on the chair arm, she leaned toward Claire's gaping cunt. Bethany's tongue brushed close to it without touching. Her ass was sticking in the air, her own cunt, open and inviting. Grant moved directly behind her. Her dark pubic hair was closely trimmed. He bent forward and tongued her slit, and was rewarded with a moan. He put his face between the cheeks of her ass, and kissed her anus. It puckered open and shut repeatedly. He attentively kissed and licked every place he could reach.\n\nBethany followed her stated plan, and began softly kissing Claire's thighs. She worked her way from side to side, all the way to center. Bethany nuzzled the golden down that covered her. She kissed, and exhaled hot breath directly on the swollen pussy. Claire moaned, grabbed Bethany's head with both hands, and pulled her face into the wetness. Bethany responded by thrusting her tongue into the hole, then licking the slit from bottom to top, over and over.\n\nSensing the progress being made toward orgasm, Grant stood behind Bethany. He rubbed his rigid member up and down her sodden cunt, and then slid inside her. Rather than thrusting, he stood stock still. He could feel her vaginal walls contracting. Jennifer was fully in his sight line. Although Claire's right leg was resting over her, Jennifer's legs were spread wide open. Her breasts sprawled on her chest, nipples fully upright. Jennifer's panties were still on, but her hand had forced them aside. Her dark bush was plastered with sticky wetness. She had two fingers vigorously moving in and out of her vagina. Grant locked eyes with her again. He pulled out of Bethany's pussy and then back in.",
        "The next time he withdrew, he said aloud, \"I want to fuck you,\" and then slammed back into her. Grant did it to Bethany, but he said it to Jennifer. Bethany paused in her mouth-fucking efforts to Claire, and said, \"Fuck me daddy!\"\n\nHe could tell that his words had impacted Jennifer, as she more frantically rubbed her pussy. Suddenly, her hips bucked, and spasms shook her body. That spurred Grant to thrust more deeply and rapidly into Bethany. She in turn licked and fingered Claire with increased intensity.\n\n\"Oh my God,\" Claire gasped. \"You are tongue fucking me. You're fucking tonguing me. FUUUUCK!\" An orgasm consumed her. Her body writhed as she continued to hold Bethany's head between her legs. Grant couldn't look at any of it. He was determined to bring Bethany to climax before letting go himself. He reached under her belly and grabbed her left breast. He fondled and squeezed it. With his other hand he reached under to touch where their two bodies joined. It was drenched with their juices. He found her clitoris, and made circles around it with his finger. Then he methodically began rubbing, out of sync with his thrusts. Bethany was now fully concentrating on her own body. She whimpered and moaned, and then went rigid for a second before releasing into a shuddering orgasm. His thrusts slowed to allow her to regain control. But in seconds she was pressing herself backward, grinding into him.\n\n\"Are you going to cum in me daddy? I want you to empty your balls inside me. I want to feel your sperm shoot into my pussy.\"\n\nGrant was happy to oblige, but wanted savor the moment. He looked down at the beautiful ass in front of him, and watched his cock disappear and reappear from her pussy. Then Claire swung her legs together and levered herself off the couch. She moved behind him, brushed her nipples along his back, reached down and grabbed his balls as he fucked.\n\nShe squeezed them firmly and whispered into his ear, \"Fuck that pussy.\"\n\nGrant could take no more. He glanced at Jennifer. Her legs were still splayed open, her panties sopping wet, and those incredible, irresistible tits were what put him over the edge.\n\n\"I'm fucking cumming in your pussy nowwww,\" he yelled. And he did. Over and over, jets of sperm left his body and entered hers. He emptied himself into this beautiful, sexy young woman. Still breathing hard, he motionlessly held the position. Finally, he slowly pulled his semi-erect cock out of Bethany. Her pussy hole gapped open. A little sperm drizzled out. Claire leaned between them, licked off the white jizz, and kissed the hot wet flesh.\n\nA moment later, they all laid back on the sectional, side by side.\n\n\"Wow,\" Grant said with a gasp. \"That was mind-blowing.\"\n\n\"I'm guessing every wet dream you ever had just came true,\" smirked Jennifer.\n\nHe turned slightly to look her in the eye. \"Almost.\"\n\n21"
    ],
    "authorname": "LexicalFantasy",
    "tags": [
        "masturbation",
        "oral sex",
        "threesome",
        "oral",
        "threeway"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/group-project"
}