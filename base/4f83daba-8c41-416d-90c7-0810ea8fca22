{
    "title": "Promises Made and Promises Kept Pt. 05",
    "pages": [
        "It goes without saying you should read 'Promises Made and Promises Kept Pts. 03 and 04' first before reading this story. This story picks up right after 'Promises Made and Promises Kept Pt. 03.'\n\nNote: PM&amp;amp;PK needs to be told from both Points of View (PoV). To do that, I am alternating between Virginia and Judy in each part of PM&amp;amp;PK. Because of this, the five parts of this story will overlap each other, so you will see some scenes from both PoVs. Parts 1, 3, and 5 are written from Virginia's PoV, while parts 2 and 4 are written from Judy's PoV. For example, the first half (roughly) of this story (from Virginia's PoV) overlaps the last half (roughly) of 'PM&amp;amp;PK Pt. 04' (from Judy's PoV). Keep in mind that each woman will also have unique experiences that will not be seen from the other woman's PoV.\n\n\u00a9 2020 Candy_Kane54\n\n***\n\nJanuary 1995\n\nI looked down, gathering my thoughts. All of my feelings for Megan came flooding into my brain, and the emotions accompanying those memories overwhelmed me. Losing her had really hurt. I looked up, unable to keep my feelings off my face when I said, \"Megan was my teacher in the first class I took at UC-Irvine to get my Master's degree.\" When I saw Judy smile, I continued, \"When I first laid eyes on her, I was gobsmacked. We hit it off right away and started dating.\"\n\nI stopped when Judy's smile turned into a stunned look. I reached over and took her hand. I saw several emotions flick across her face, and suddenly I saw a look of anger come over her face.\n\n\"What's wrong, Judy?\" I asked. \"Oh, my god,\" I thought, \"What did I say?\" I felt like I'd been kicked in the stomach, and it must have reflected on my face.\n\nAlmost afraid to look, I saw Judy gather herself, literally shaking herself as the flash of anger was replaced by a look of concern. Judy squeezed my hand and said, \"I ... I'm sorry, Virginia. That took me completely by surprise.\" She paused, swallowing a couple of times, struggling to get herself back under control. Judy then said, \"I had crushed on Megan but didn't do anything about it because I was married. When you said you two hit it off right away, I was momentarily angry because I couldn't have done that. In no way was I angry with you.\"\n\nJudy squeezed my hand again and then pulled me in for a hug. \"I'm sorry, Virginia,\" she said, tears flowing down her cheeks.\n\nI hugged Judy back and said, \"I'm sorry, too, Judy.\"\n\nOnce Judy got herself under control, we broke our hug and sat back. We smiled at each other before Judy said, \"I couldn't help noticing you looked sad when you started talking about Megan.\"\n\nTouched by Judy's genuine concern, I squeezed her hand again before I said, \"At the time, I really thought Megan was the one I could love for the rest of my life. We were practically inseparable, and Matthew and Mark really liked her, and she really liked them too.\" I looked Judy in the eye, a feeling of sadness coming over me again as I said, \"Then she got an offer from MIT for a tenured teaching position.\"\n\nJudy squeezed my hand and said, \"Megan had called me and cried about having to end a relationship. I didn't realize it was you she had cried about. She told me she was totally in love with someone, but the opportunity to teach at MIT was her dream job.\"\n\nI teared up again, having not realized until now how close Judy and Megan had been. I said, \"Yes, it was, and I wasn't going to stand in her way.\" Judy pulled me in for another hug. I started sobbing, not only for myself but for Judy too. Megan was a wonderful woman, and we both were feeling her loss.\n\nJudy whispered in my ear, \"It's okay, Virginia,\" over and over until I got myself back under control. We separated once again. I smiled sheepishly and snarked, \"Wow, what a way to put a damper on a morning after a night of incredible sex.\"\n\nJudy smiled and said, \"Well, let's get some food in us, and maybe we can have a great morning of sex to get back in the proper mood?\"\n\nSmiling back and picturing Judy naked and writhing under my ministrations, I said, \"Sounds good to me.\"\n\nWe got up and finished putting breakfast together. We sat down and enjoyed breakfast, smiling at each other as our thoughts turned to what would be happening as soon as breakfast was over.\n\nAfter a morning of incredible sex, it was time to go. As much as I wished Judy and I could spend more time together, Judy had to go get her girls. As we walked out to my car, Judy asked, \"Would you like to have dinner at my parent's place with the girls and me? I'd really like for you to meet them, and for them to meet you. I know they'll just love you.\"\n\nMy heart thrilled at the thought of all of us getting together with Judy's parents. This was a big step for Judy since her parents were so important to her. I really wanted to meet them since they sounded so nice. I turned to Judy and said, \"Only if you'll return the favor and meet Grace and Kathy. They're not really my parents, but they're the next best thing to it.\"\n\n\"Deal,\" Judy said before our lips met in one last kiss before I left.\n\nAll the way home, I was smiling, not caring if anyone saw me grinning like a fool.\n\nWhen I got home, Matthew and Mark were waiting for me along with Grace and Kathy. When they saw the big smile on my face, they all smiled back at me. Grace pulled me in for a hug and whispered, \"I'm so happy for you, Virginia.\"\n\n\"Thanks, Grace,\" I whispered back. \"That means a lot to me.\"\n\nKathy gave me a quick hug before Matthew took me in his arms. He said, \"I'm happy for you, Mom. I'm glad you found someone to love. I approve, and I know Mom would approve,\" he finished, moisture gleaming in his eyes.\n\nI buried my face in Matthew's chest and teared up before saying, \"Thank you, Matthew. I know Bonnie approves, and I'm so glad you do, too.\"\n\nAfter a beat, we separated, and Mark took Matthew's place. Mark put his arms around me and said, \"I'm happy for you, too, Mom. You've been there for me, and I'm here for you now. Mom wanted you to find someone, and I'm glad you did. I love you,\" he finished.\n\n\"I love you, too,\" I said, hugging Mark hard. \"Thank you,\" I said as I teared up again.\n\nWith that, I went up to my room to change into something more comfortable. I had a lot to do before Monday.\n\n***\n\nI always look forward to Monday mornings, but this time was extra special. I had spent a few additional minutes this morning with my toilet, wanting to look good for Judy. Whenever I thought about Judy, my heart would clench, and my breath would catch in my throat. Of course, I had thought about Judy a lot since Saturday afternoon, so my weekend was pretty breathless. I drove into work, the traffic not denting my happiness. Once I parked and headed in through the lobby, Peggy greeted me with her usual perkiness, asking if I had had a good weekend. I smiled widely at her and said, \"Good morning, Peggy. I had a great weekend.\"\n\nI made it to my office, and I noticed Cathy was already there. She looked up, took in my mood, and smiled as she said, \"Good morning, Virginia. I'll bet you had a great weekend?\"\n\n\"Yes, I did, Cathy,\" I said as I breezed into my office. \"Are there any changes to my calendar today?\" I asked as I put down my bag and picked up my mug.\n\n\"No,\" Cathy replied. \"You're still on with Sally after the staff meeting.\"\n\n\"Thanks, Cathy,\" I said as I headed toward the break room. I fixed a cup of Earl Grey and headed back to my office to prepare for the staff meeting.\n\nFinally, it was time to head to the staff meeting. As I approached the conference room, I saw Judy coming from the other direction. I couldn't help but scan her from head to toe, and she looked so lovely. I just wanted to take her in my arms and ravage her. With difficulty, I managed to keep my hands to myself as we met at the door.\n\nJudy smiled a smile that just melted my insides and said, \"Good morning, Virginia. I hope you had a nice weekend?\"\n\nTrying hard not to loudly express my love for this woman, I quietly said, \"Why, yes, I did, Judy. I hope your weekend went well?\"\n\n\"Yes, it was a memorable weekend,\" Judy replied. After a beat, she added, \"Let's get seated. This is going to be an interesting meeting.\"\n\nAs it turned out, it was an interesting staff meeting. After we had gone in and found two seats together, I realized we were interacting much more smoothly together. The sexual tension that had almost always been around us, making it hard to interact easily, was gone. It felt so good being able to just relax and be at ease with each other now that we've established a sexual relationship. I don't know if the change was apparent to anybody else in the room. However, I think everybody else seemed more at ease also. I noticed Steve had looked at us several times and smiled before turning his attention back to the meeting.\n\nOnce the staff meeting was over, we walked out together, and before we parted, Judy asked, \"See you at lunch today?\"\n\n\"Yes,\" I answered, smiling. \"I'm looking forward to it.\"\n\n\"Me, too,\" Judy said, returning my smile. She turned and headed back to her office. I stood there a moment, watching Judy walk away, and I admired how her ass moved, remembering how it felt in my hands.\n\nI heaved a sigh and turned to head back to my office.\n\nOnce my meeting with Sally was over, I went back to my office. I dropped off my notebook before heading down to the cafeteria. I was looking forward to seeing Judy. When I entered the cafeteria, I looked around for her, and I saw her looking my way with a big smile on her face. I smiled back and headed over to the salad bar to make a nice salad. I put together a Caesar salad and, after paying for it, walked over to Judy's table.\n\n\"You look nice today,\" I said as I walked up to the table. My eyes roamed over Judy's body as I admired how lovely she looked.\n\nAs I was sitting down, Judy's eyes were running over my body. \"You look nice, too, Virginia,\" she said as her eyes met mine.\n\nOnce I was seated, Judy took a deep breath and said, \"My parents are expecting you and the boys over for dinner Friday night. I figured we'd want to do it before Matthew goes back to college. I hope that's okay?\"\n\nAfter a beat to catch my breath, I smiled and said, \"That's wonderful. I'm looking forward to meeting your parents. Are Amy and Emily going to be there too?\" I was thrilled Judy wasn't hesitant to take our relationship to the next level. I know how important her parents are to her, and if she feels comfortable enough to do this right away, I won't drag my feet.\n\n\"Yes,\" Judy said, smiling back at me. \"We'll be eating at 7 PM, and I'll let you know what the menu is when I find out.\"\n\n\"It's a date,\" I said, reaching across the table to take Judy's hand in mine. I watched her glance down at our intertwined fingers before she looked up with a smile and softly said, \"I love you, Virginia.\"\n\nMy heart thrilled upon hearing those words. Squeezing Judy's hand, I quietly answered, \"I love you, too, Judy.\"\n\nOur declarations made, we dug into our salads, talking about work and our kids. Judy mentioned that Amy and Emily wanted me to come to a swim meet of theirs as we finished up. I said I'd love to come, although I didn't know anything about swimming competitions.\n\nI saw Judy looking over behind me before she turned back to me, smiled, and said, \"Our PAs seem to be particularly interested in us.\"\n\nI had to smile at that and said, \"Yes, I've noticed every time you leave my office, Cathy always seems to have to make a call to Sue, and vice versa.\"\n\nJudy squeezed my hand before saying, \"Well, I trust Sue to keep this to herself.\"\n\n\"I'm sure Cathy will, too,\" I said, squeezing her hand back.\n\nAfter a beat, Judy let go of my hand and said, \"As much as I'd love to sit here with you all day, I've got work to do.\"\n\nAs we both got up, picking up our trays and purses, I said, \"Yes, I do, too. I'm really looking forward to Friday, Judy.\"\n\nJudy replied, \"I am too,\" as we parted and went our separate ways back to our offices.\n\n***\n\nI came into work today wanting to talk to Cathy and Sue. I was concerned their interest in the relationship developing between Judy and me might generate attention we weren't ready to face. While a homosexual relationship in the civilian world is not forbidden, it is still not widely accepted.\n\nI said, \"Good morning, Cathy,\" when I came up to her desk.\n\nCathy looked up, smiled, and said, \"Good morning, Virginia.\" When she saw the serious look on my face, she got a worried look on her face and asked, \"What's wrong, Virginia?\"\n\nI looked around to make sure no one could overhear us. In a quiet voice, I said, \"I've noticed you and Sue have taken a great deal of interest in my relationship with Judy.\" Seeing the worried look on Cathy's face, I quickly added, \"That's okay, Cathy. I'm not worried you and Sue know about it. I'm just concerned something might get out none of us want widely known.\"\n\n\"Sue and I are cautious not to say anything with anybody else,\" Cathy said, a relieved look on her face. \"The last thing we want is for you two to catch any grief.\"\n\n\"Good,\" I said, smiling at Cathy to let her know she was not in trouble. \"When the time is right, I'm planning a little surprise for Judy, and I'll need your help to pull it off. Would you mind helping me with that?\"\n\n\"No problem, Virginia,\" Cathy said. \"You can count on me.\"\n\n\"Thank you, Cathy,\" I said.\n\nI went into my office to put my bag down, turn on my computer, and grab my mug to go get some tea. I headed to the break room and saw Sue sitting at her desk. Since Judy wasn't in yet, I decided to take the initiative and talk to Sue.\n\nI walked up to Sue's desk, and she looked at me, smiled, and said, \"Good morning, Virginia.\"\n\nAs I did with Cathy, I looked around to make sure no one was near enough to overhear us before I said quietly, \"Good morning, Sue. I've noticed you and Cathy have taken a great interest in my relationship with Judy.\" Sue got a worried look on her face, and I reassured her, \"I'm not upset about it, and neither is Judy. I just want to make sure this doesn't get out before we're ready to let anybody know about it.\"\n\n\"Oh, sure, Virginia,\" Sue said, relieved. \"Cathy and I always make sure no one else can hear us talking. We don't want to get you two in trouble with anyone. We're just so happy for the two of you.\"\n\n\"Thanks, Sue,\" I said. \"I am planning a little surprise for Judy, and I may need your help to pull it off. Can I count on you to help me?\"\n\nJust then, I saw Judy coming down the hall, making a smile come over my face. Sue saw my reaction, looked toward Judy, and smiled before saying, \"You can count on me, Virginia.\"\n\nI saw the questioning look on Judy's face as she walked up to us, and I shook my head slightly, hoping to prevent her from asking about what Sue and I had been talking about.\n\nJudy caught my gesture, and she smiled and turned to her office and said, \"Please come in, Virginia.\"\n\nI followed Judy into her office, closing the door after me. After putting her bag down on her desk, Judy turned to me and pulled me in for a kiss. Our arms went around each other, and our lips met in a kiss that felt so wonderful, my heart threatened to explode. Her silky-soft lips molded to mine so perfectly, it was like we were sharing the same pair of lips. Before I passed out from lack of oxygen, I broke the kiss, breathing hard as I stared into her beautiful face.\n\nAfter a bit, while we both caught our breath, Judy got a curious look on her face. She asked, \"Okay, what was that out there?\"\n\n\"I was recruiting Sue to help me set up a surprise for you,\" I said, smiling at her.\n\n\"Oh?\" Judy asked. \"And just what are you scheming to do?\"\n\n\"If I told you, it wouldn't be a surprise,\" I said. \"Don't worry; it was just my passive-aggressive way of making sure Sue keeps our relationship a secret, by making her a part of the secret. I've done the same with Cathy.\"\n\n\"Okay,\" Judy replied, a relieved look coming on her face. \"Just know that eventually, I do want the whole world to know I love you,\" she said as she pulled me in for another kiss.\n\nI lost myself in the kiss, the feel of her lips on mine, so sweet and soft, made me hot and my nipples hard. Breaking the kiss to gasp in some air, I said, \"I've had to hide my sexuality for so long it's become second nature to me. Please don't think any hesitancy I display about showing my love for you in public is an indication I don't care for you. It'll take me a while to get used to being more open about it.\"\n\nJudy looked at me intently and said, \"I'll understand. On another note, I talked to mom last night, and she gave me the menu for dinner. She says you should bring a nice Riesling to go with dinner. We're having chicken cacciatore, cheese ravioletti with a pink sauce, Caesar salad, and her special cheesecake for dessert.\"\n\n\"That sounds delicious,\" I said. \"I'll make sure I get a Riesling. I'm really looking forward to this.\"\n\n\"Mom and dad are really looking forward to meeting you,\" Judy said.\n\n\"I'm looking forward to meeting them, too,\" I said, stepping back from Judy. \"Well, I better get back to my office.\"\n\nWith that, I opened the door and stepped out. I noted Sue was smiling, so I smiled back before heading into the break room to get my tea. Work was going to be fun today.\n\n***\n\nI was so nervous about dinner tonight with Judy's parents that Matthew and Mark picked up on it. They hugged me and told me how lovely I looked, trying to reassure me Judy's parents were going to just love me. I had decided to coordinate our outfits, so I was wearing a nice pair of high-waist slacks and a button-up shirt that flared out over my hips. I kept the top three buttons unbuttoned, so I could wear a pretty necklace. Matthew and Mark were similarly dressed in slacks and button-down shirts and ties. They looked so handsome, and I knew Amy and Emily were going to fuss over them.\n\nFinally, it was time to go. Grace and Kathy hugged me before we left, wishing for me to have a good time. I let Matthew drive, giving him the directions to Judy's parent's house. It didn't take long to get there, and Matthew parked in the driveway. I saw Judy's car in the driveway and knew she was already there. We got out, and we headed up to the door. After making one last check on our outfits, I rang the doorbell.\n\nThe door opened almost immediately, and I recognized Judy's dad standing there with Amy and Emily alongside him. I smiled and said, \"Good evening, Mr. Saginario. I'm Virginia, and this is Matthew,\" I said, pointing to Matthew. \"And this is Mark,\" I finished, pointing to Mark.\n\nMr. Saginario said, \"Please come in, Virginia. And please, call me Joe.\"\n\nI smiled again and said, \"Okay, Joe.\" He looked genuinely happy to see me, and some of my nervousness drained away as he stood aside to let me walk in. When I did, I put my hand out, and he took my hand and shook it. It was a firm handshake and not a wimpy one. He then shook hands with Matthew and Mark as they stepped in.\n\nI couldn't help but notice Amy and Emily were checking out Matthew and Mark. They were wearing sundresses and flats and looked lovely. I know Matthew and Mark were checking them out, too. I turned and saw Judy coming up, also wearing a sundress and flats. My heart clenched when she came up and pulled me into a hug, saying, \"Welcome, Virginia. Thank you for coming.\"\n\nThen, Judy took me completely by surprise and laid a kiss on me that left no doubt she was happy to see me. I recovered quickly and returned her kiss, letting her know I was delighted to see her too. We broke quickly, neither of us wanting to put on a floor show for everyone else. I was thrilled to see that, while everyone was surprised at the display of affection, nobody frowned or showed any disapproval.\n\nJudy then gave Matthew and Mark a quick hug, taking the bottle of wine from Matthew before Mrs. Saginario came up to give me a hug. She said, \"It's good to meet you, Virginia.\"",
        "I said, \"I'm so glad to meet you, Mrs. Saginario.\"\n\n\"Oh, please, call me Betty,\" she said.\n\n\"Okay, Betty,\" I said, smiling at her.\n\nBetty then turned and hugged each of my boys, saying she was glad to meet them. Once Betty stepped back, Amy and Emily each gave me a hug before introducing themselves to Matthew and Mark. They were all smiling shyly at each other, and I could tell they weren't sure how to react to each other.\n\nJudy came to their rescue and said, \"Girls, please show Matthew and Mark to the living room.\"\n\nAmy then said, \"Please come this way,\" as she and Emily turned to walk away. Matthew and Mark followed closely behind them.\n\nJoe said, \"I'll go keep the kids entertained,\" before heading into the living room himself.\n\nBetty, Judy, and I headed into the kitchen. Judy got the corkscrew out and opened the wine while Betty and I chatted. Once Judy had the wine opened, she joined us, remarking that the wine was one she hadn't tried before. Judy side-hugged me while I finished talking to Betty. Betty smiled when she saw the hug and said, \"Okay, let's get the food on the table.\"\n\nBetty pulled the dishes from the warmer, and she and I carried them into the dining room. Judy poured the wine while Betty and I got the rest of the food and laid it out on the table. Once Betty was happy with the layout, we went into the living room. I saw Amy and Emily showing off their trophies and medals to Matthew and Mark. Joe was sitting in a recliner watching them with a smile on his face. He looked over at us when Betty said, \"Dinner's ready.\"\n\nAs we entered the dining room, Betty explained the seating arrangements to everyone. Once we knew which side of the table we would sit at, Matthew seated me before taking his seat. Amy and Emily watched him, and I saw them smile, appreciating Matthew being such a gentleman. Once everyone was seated, we all looked at Joe as he said, \"Let us pray.\"\n\nWe all crossed ourselves and bowed our heads while Joe prayed over the meal. When he was done, we all crossed ourselves and said, \"Amen.\" We then spent the next few minutes loading up our plates, everyone exclaiming how good the food looked and smelled. Joe tried the wine and said he approved of it. Judy and I smiled at each other throughout the dinner. Our kids carried the conversation throughout dinner. Betty and Joe would occasionally ask me a question. I would take my time to make sure I answered correctly, asking Judy for her input from time to time. By the time dinner was done, I was pretty sure Joe approved of me, and Betty was gushing over Matthew and Mark.\n\nI have to say I really enjoyed the food. I overate, but it was delicious. Finally, Betty declared dinner was over, and we all got up. Amy announced that she, Emily, Matthew, and Mark would clean up the dinner table while shooing us adults into the living room. Judy and I sat on the couch while Joe sat in his recliner, and Betty sat in the armchair on the other side of the couch. Judy reached over and took my hand in hers, a huge smile on her face.\n\nWe talked for a few minutes while the clatter of dishes and voices of the kids came out from the kitchen and dining room. Betty and Joe both agreed Matthew and Mark were perfect gentlemen, making me glow with pride. Judy squeezed my hand, adding her approval making me smile even broader. I was peppered with questions about my life and several careers, which I was happy to share with them. When Betty asked me about my parents, I misted up as I thought about them. I said my mother, also named Virginia, was nearly forty years old when she had me. My father, Wayne, was almost forty-eight years old at the time, and neither of them was expecting this since they had tried for years to have children but had been unsuccessful.\n\nWhile I had been unexpected, they both loved me and doted on me. My earliest memories were of them taking me to the boardwalk and looking out over the ocean with each of them holding one of my hands. Unfortunately, my father died when I was fourteen years old. He was an engineer on the Central Railroad of New Jersey (CNJ) and was killed when a railroad track signal failed, and his train rear-ended a stopped train. My mother was devastated by that and never really recovered, withdrawing from life in general. She died seven years later while I was a junior in college.\n\nI had to stop as the memories of her funeral came roaring back into my conscious, tears threatening to fall. Judy squeezed my hand. Betty jumped up and came over and hugged me as she said, \"Oh, sweetie, that's so sad.\"\n\nI couldn't help but smile at the sincerity in her voice and said, \"Thanks, Betty. I really appreciate that.\"\n\nAs Betty went to sit back down, Joe said, \"Virginia, you've done an incredible job taking all of that in stride and not letting it get you down.\" He smiled at me, and I could see the approval for me in his eyes.\n\nI said, \"Thanks, Joe. That means a lot to me.\"\n\nAs I got my feelings back under control, Amy came into the living room to let us know the dining room was cleaned up. Matthew and Mark were going to sit around the dining room table with her and Emily and talk.\n\nJudy smiled at her and said, \"That's fine, sweetie.\"\n\nAmy left, and we went back to talking. We started talking about current events, discussing the O. J. Simpson trial, and whether or not there'll be more riots like there were after the Rodney King trial. I told them I was in Ohio at the time and, while I wasn't affected by it, some riots had occurred in Hawthorne, close to where Grace and Kathy had lived at the time. Judy added there hadn't been any riots in Manhattan Beach. However, it did cause Raytheon to shut down so people wouldn't have to drive into work through areas where riots were happening. We also talked about the Northridge earthquake that occurred just about a year ago.\n\n<s> </s>\n\nOnce the conversation started to taper off, Betty declared it was time for dessert. Judy said she would help and got up and headed out to the kitchen, leaving me with Joe. We looked at each other, and after a beat, Joe smiled at me and said, \"Virginia, I just want you to know I approve of you and the boys. I am so happy Judy has found you. I can't tell you how grateful I am you have made my girl so happy.\"\n\n\"Joe, that means a lot to me. I want you to know Judy makes me happy. I love her and would never do anything to hurt her,\" I said before I looked down, blinking away the tears threatening to fall out of my eyes. When I looked up, I said, \"When I lost Bonnie, I didn't think it was possible to find someone to take her place. I prayed a lot about it, and I believe God answered my prayers by putting Judy in my life.\"\n\nJoe looked at me with a fresh appreciation and gravely nodded when I talked about praying to God. He said, \"I prayed that Judy would find someone to take Jon's place. While I didn't expect it to be you, I certainly believe God is in control, and we just need to believe He has our backs. I certainly accept you as the answer to my prayers.\"\n\nWith that said, Joe then asked, \"So, Judy tells me you are the Configuration Manager at Raytheon?\" Grateful for the change of topics, I started talking about configuration management and how it is essential to developing software. Having been a software developer for IBM, Joe asked about the new concepts that have been developed since he retired.\n\nWhile Joe and I were deep into our conversation about configuration management, Judy and Betty came into the room, each of them holding a plate in each hand. We both looked up when Betty said, \"Time for cheesecake.\"\n\nBetty handed Joe a plate before she sat down. Judy sat down next to me and gave me a plate with a piece of cheesecake with strawberries on it.\n\n\"Where did you hide this?\" Joe asked as he forked a bite into his mouth, a pleased look on his face.\n\nI took a bite, and I had to admit it was delicious. I smiled and said, \"Betty, this is the best cheesecake I've ever had.\"\n\nJudy chimed in, agreeing with my assessment. Betty beamed with happiness at our praise. There was an absence of conversation while we all finished up the cheesecake. I noticed the conversations in the dining room had also stopped. Once we were finished, we talked a little longer about current events before I looked at the clock and decided it was time to head home. I said, \"Well, it's getting late, so Matthew, Mark, and I need to be getting along.\"\n\nWith that, we all got up and headed into the kitchen. We picked up the kids on the way, and we all ended up in the kitchen, where everybody started saying their goodbyes. I hugged Betty before hugging Joe. Then I hugged Amy and Emily, complimenting them on their outfits and thanking them for entertaining Matthew and Mark. Then I pulled Judy in for a hug and kissed her before saying, \"Thank you, Judy. We had a great time tonight.\"\n\nAmy and Emily hugged Matthew and Mark, deciding they were comfortable enough to do so with them after having spent some time getting to know them. Matthew and Mark shook hands with Joe, who thanked them for being perfect gentlemen. Betty made it easy for them and pulled them both in to hug, saying what handsome gentlemen they were. With that, we headed out the front door, Judy, Amy, and Emily coming with us while Betty and Joe stood in the doorway. We got in the car, Mark opening my door and handing me in before closing it and getting in himself. Judy, Amy, and Emily stood back and watched us back out of the driveway and head home.\n\nAll the way home, Matthew and Mark talked about how they enjoyed meeting Amy and Emily. They both went on about how impressed they were with their swimming exploits. When we got home, Grace and Kathy were in the living room watching TV. Matthew and Mark excitedly told them about dinner and how wonderful Judy's family was. I chimed in, saying how Joe and Betty were very nice, and I had enjoyed meeting them.\n\nMatthew, Mark, and I then went upstairs to change out of our outfits. When I came down, I pulled Grace into a hug and told her how happy I was. I assured her Joe and Betty would just love her and Kathy. We both teared up a bit before we broke. We then sat down and watched TV until the local news came on. I excused myself and went upstairs to get ready for bed.\n\n***\n\nI heard the phone ringing, but before I could get to it, I heard Matthew say, \"I got it!\" I heard him answer the phone, and a moment later, he yelled, \"Mom, it's for you!\"\n\nI went into the living room and picked up the receiver, and said, \"Hello?\"\n\n\"Hello Virginia,\" I heard from a voice that melted my insides into goo, a throaty chuckle accompanying it.\n\n\"Hello, Judy. It's good to hear your voice. What's up?\" I asked as I tried to compose myself.\n\n\"The girls wanted me to ask you if you'd like to attend their swim meet this coming Tuesday?\" Judy asked.\n\n\"Oh?\" I said, thrilled that Amy and Emily wanted me to see them swim. I shined Judy on with a smile as I continued, \"You didn't just call to profess your undying love for me?\"\n\n\"Well, although that's a given, I will say it as often as I can. I love you,\" Judy said in a manner leaving no doubt in my mind she meant it with every fiber of her being.\n\n\"I love you, too,\" I answered, my heart thrilling from her declaration. \"And, yes, I'd love to go see Amy and Emily swim on Tuesday.\"\n\n\"Great!\" Judy said. \"They'll just be thrilled to death. They both think the world of you. I do, too.\" That last statement made my breath catch as I realized Amy and Emily had given me their stamp of approval.\n\n\"Well, Matthew and Mark won't stop talking about you, Amy, and Emily, either,\" I said.\n\n\"My girls were all 'Matthew this,' and 'Mark that,' last night and this morning,\" Judy said, a sultry chuckle accompanying her statement.\n\n\"Well, Matthew is heading back to college tomorrow,\" I said, momentarily thinking about how I'll miss him.\n\n\"Oh, well, tell him I'll miss him,\" Judy said.\n\n\"I will,\" I said. \"Tell Amy and Emily I'm looking forward to seeing them swim on Tuesday.\"\n\n\"Okay,\" Judy said. \"I'll see you Monday. I love you, Virginia.\"\n\n\"Yes, I'll see you Monday,\" I said, loving the sound of Judy's declaration of love. \"I love you, too, Judy.\"\n\n***\n\nI left the office early to go home and get ready to attend Amy and Emily's swim meet. I was so excited to go. I've never been to a swim meet, but I have watched them on TV. When I got home, I got undressed and went into my closet to pull out a pair of jeans and a polo shirt. Judy had told me the school had a heated pool so it could get a little muggy inside, so don't wear anything too heavy. I also donned a pair of low-rise sneakers since Judy warned me it could get slippery around the pool area. Once I was dressed, I said goodbye to Grace and Kathy and headed out to drive over to Judy's place. Since parking was limited, we would go together in Judy's car.\n\nWhen I arrived at Judy's place, I parked in the driveway, got out, and went up to the door. When I rang the bell, Judy opened the door to let me in. When the door closed, our arms went around each other, and our lips met in a passionate kiss. I moaned at the feel of her silky-soft lips against mine. Judy moaned in reply. Our bodies molded together as our kiss deepened, our tongues ravaging each other's mouths. Judy's hands drifted down and cupped my ass, lifting me up. I wrapped my legs around her hips while my arms went around her neck. All this happened as we continued our kiss. Finally, we broke our kiss to gasp in some air. I enjoyed our position since I didn't need to crane my neck to look Judy in the eye when we kissed.\n\nOur eyes locked, and I could see the beginning of tears in her eyes as Judy said, \"Hello, Virginia.\"\n\nI smiled and said, \"Hello, Judy. Are you glad to see me?\"\n\nJudy smiled back at me, melting my heart as she said, \"Maybe, just a little bit. Are you ready to go?\"\n\nI snarked, \"Do you think they'll mind us being like this?\"\n\nJudy pretended to ponder my question a moment before she said, \"Probably.\" I felt briefly disappointed as she set me down.\n\nWe left, and we held hands during the whole drive to the school. I couldn't help but steal glances at Judy from time to time, enjoying the slight frown of concentration on her face as she drove. From time to time, Judy would look over and catch me watching her and smile before turning her attention back to the road. \"What are you looking at?\" she asked.\n\n\"A vision of beauty,\" I said with as much sincerity as possible. I loved seeing the blush that came up from Judy's throat when I said that.\n\nWithin minutes, we made it to the school, and Judy parked in the parking lot. We got out, and Judy led us to the pool venue. Judy went up to the counter to get the tickets Amy and Emily had reserved for us and pay for them. We walked out to the pool, and I was assaulted by the damp air smelling of chlorine. The concrete floor had a rough texture for traction, but I could see moisture was collecting on it. I was glad Judy had warned me about the conditions in the pool. We found a couple of seats and sat down, first making sure the seats weren't wet. I looked around and noticed there weren't a lot of spectators.\n\nI was busy looking around and taking in the atmosphere. I noticed Amy was already in the water warming up, along with several other swimmers. I then spotted Emily coming out of the locker rooms. Emily looked up and saw us and waved at us, a big smile on her face. She must have called to Amy because Amy looked up and waved to us from the pool. We waved back to both of them. I had a lot of questions about what I was seeing, and while I was putting them together in my mind, our hands joined as we waited for the events to start. I started asking my questions, and Judy enthusiastically answered them. She told me about taking Amy and Emily to the swimming pool since they turned eight years old.\n\nI wondered which swimmer was swimming for which team since I didn't see any uniforms or names. All of the girls were wearing similar swimsuits, but none of them were exactly the same. Judy told me you had to watch the lane assignments to determine which lanes your team members were using for each event. Judy also explained that the lanes were numbered 1 -- 8, with Lane 1 closest to us and Lane 8 furthest away.\n\nJust then, the lane assignments for the first event, the 50-yard butterfly, were posted. Amy and Emily were in the event and would be swimming side-by-side in lanes 4 and 5. Judy was excited and explained that Amy and Emily don't usually swim in the same events other than the relay events. Judy theorized that Amy wanted Emily to push her to start out the season with a bang. She told me Amy held the school and pool record for this event, and she probably wanted to see if she could beat it.\n\nWe leaned forward in excitement as the girls lined up, ready to go. When the gun went off, everybody went in cleanly. I was amazed to see that Amy and Emily both went more than half the length of the pool before surfacing and starting their strokes. They were already way ahead of everybody else, and they were nearly a third of the pool ahead of the next closest swimmer when they took the turn. They came splashing down to the finish line stroke-for-stroke. When Amy touched with Emily following just nine-tenths of a second later, the next closest swimmer still had more than half the pool to go. I watched Amy and Emily hug each other as it was announced Amy had just broken the school record she had set last year by over two seconds.\n\nWe were so excited. Judy turned to me and pulled me in for a hug. I was so thrilled Judy wasn't shy about expressing her feelings for me in public. Of course, this was new to me because I had always had to hide my sexuality, and I admit I liked it. Our hug lasted a little longer than what may have been deemed socially appropriate, but I didn't care. Amy and Emily got out of the pool once the race was over. They waved to us before toweling off and sitting on the bench with their teammates, who all came over and hugged them.\n\nI was amazed at how good Amy and Emily were. They won every event they entered, sometimes by large margins. It was obvious they were out of everybody else's league. I lost track of how many records were broken by them before the match ended. Judy and I hugged a lot because each victory gave us an excuse to express our feelings for each other without being too obvious about it.\n\nThe last event, the 4x50 yard medley relay, demonstrated just how much they outclassed everybody else. Amy was going to swim the third leg, and Emily was going to swim the final leg. The event started, and Mira Costa was third when it was Amy's turn. By the time she had surfaced to start stroking, Amy was already in the lead and just kept increasing her lead until she touched, leading by half the length of the pool. Emily hit the water and continued increasing the lead. When she touched, the second-place swimmer had just done their turn. Amy and her other two relay members came over and hugged Emily while she waited in the water for the other two swimmers to finish. When they announced another school and pool record had been set, the rest of the team came over to congratulate them as Emily got out of the pool.\n\nJudy and I hugged again. We broke as several of the other parents from Mira Costa came over to congratulate Judy on Amy and Emily's performances. I was so happy for her. When the results for the match were announced, and everyone was done hugging each other, Amy and Emily came over and hugged us. I told them how impressed I was by their performances and how I had really enjoyed coming to watch them. The coach then called the team together, so Amy and Emily had to leave us. Judy and I left to go back to her place. We held hands as we walked out to the car, sharing smiles whenever we looked at each other.\n\nWhen we reached Judy's place, she invited me in. I followed her into the house, and as soon as she got the alarm turned off and the door shut, Judy turned to me, took me in her arms, and kissed me, making me hot and wet. Since Amy and Emily would be home shortly, we didn't do more than just kiss before going into the kitchen to get some wine. While we sipped our wine, Judy started preparing a meal for Amy and Emily, who would be home soon. I offered to help, and soon we were working together like a well-oiled machine. I really enjoyed working in the kitchen with Judy. We grabbed ass every time we walked past each other and leaned in for a quick kiss every now and then. When we heard Amy's car pull into the driveway, we had a delicious meal fixed for them.",
        "Amy and Emily were happy to see me when they came in. They took turns giving me a hug, and I hugged them back, again saying how much I enjoyed watching them swim. We all then sat down at the table. Judy said grace, and we all tucked in to eat. I couldn't believe how fast they ate, reminding me of Matthew and Mark when they came home after a grueling soccer match. They were done before Judy and I were done eating. Judy sent them off to their rooms to do their homework after another round of hugs. Judy and I cleaned up before she walked me out to my car. Since it was dark, I pulled her in for a passionate kiss before leaving to go home.\n\nWhen I got home, Mark was just coming downstairs from his room. His questioning look made me smile, so I told him about the swim meet and what I had witnessed. He intently listened as I described how Amy and Emily had totally outclassed everybody else who participated in the events. When I was done, he looked at me and hesitantly said, \"I'd like to go to a meet with you, if you don't mind.\"\n\nI pulled Mark in for a hug and said, \"Of course, Mark. I'm sure Amy and Emily would be happy to see you.\"\n\nI had to smile as I saw Mark blush at my remark. I was sure he was interested in Amy, despite his denials. I could have teased him about it, but I didn't. I was sure Amy was just as interested in him.\n\nFebruary 1995\n\nWe celebrated Grace's and Kathy's birthdays today. I had always thought how weird it was that they had both been born on the same day, in the same hospital, and had the same surnames. They both joked about having been switched at birth and that Kathy was really Grace and vice versa. Now that they were both 65, Kathy retired because of her bum leg and started collecting her Social Security. Grace began to collect her Social Security but was still planning to work part-time. Mark and I took them out for dinner at Marie Callender's, and we all had a great time. Matthew called that night to wish them both a Happy Birthday.\n\n***\n\nSince our dinner with Judy's parents, I've been planning dinner so Judy, Amy, and Emily can meet Grace and Kathy. Kathy was a little hesitant, but Grace and I double-teamed her and eventually convinced her that I did want her to meet my love and her two daughters. I hugged her and said, \"Kathy, Judy is just going to love you. And I'm sure Amy and Emily will just adore you.\"\n\nWith that settled, Grace and I planned the menu. We decided to go with meatloaf, scalloped potatoes, and green bean casserole. I've always loved Grace's meatloaf, and I wanted to do something different for dinner since Judy usually had Italian-based dinners.\n\nThe following morning, I met up with Judy in the break room and told her about the dinner plans. Judy was enthusiastic about it and said Amy and Emily were looking forward to meeting Grace and Kathy. We were going to get together Friday night. Amy and Emily had a swim meet Thursday night, and I was invited to attend. I told her Mark had asked if he could attend, and Judy smiled and said, \"Of course, Mark can come. Amy and Emily would just love to see him there.\"\n\nI smiled and said, \"It's a date, then.\"\n\nThankfully, the rest of the week was busy, so I didn't have time to dwell on our developing relationship. We've had a couple of more dates, and the sex was incredible each time. Judy's parents have accepted me, and I started to think about taking the next step and making our relationship official.\n\nThursday evening came, and Mark and I were excited about going to the swim meet. I got home and changed into jeans, a polo shirt, and low-rise sneakers. Mark also wore jeans and a polo shirt, along with sneakers. We went straight to the school and met up with Judy at the front desk. We got our tickets and went into the pool and found some good seats. I noticed there were more spectators this time. Judy proudly said there were a lot of scouts from local colleges scouting Amy because of her swimming exploits. This perked up Mark, and he was looking around with interest.\n\nWe spotted Amy and Emily, and they both waved and grinned at us. When they spotted Mark, they both came over to meet him. Mark was trying not to ogle them since they were wearing one-piece suits that fit them like a second skin, making it obvious they were both very female. Knowing how uncomfortable Mark was, they both made sure to pull him in for a hug, making his face even redder. They then hurried back over to their bench to prepare for the meet, giggling as they went.\n\nMark sat down, trying hard not to watch them hurrying away. I patted him on the thigh and reassured him they were just teasing him. Soon, the meet started, and like every other meet I attended, Amy and Emily won every event they participated in. Mark was enthusiastic about how well the two were doing, talking animatedly with Judy about what was going on. I just sat there listening, loving how smoothly Judy and Mark interacted with each other.\n\nWhen the meet ended, it was another victory for Mira Costa HS. Amy and Emily came over afterward and hugged all of us before going back to be with the team. Judy pointed out the several scouts talking to the coach before he called the team together for their meeting. We left the venue, and Judy thanked us both for coming, kissing me, and hugging Mark before we separated and headed home. All the way home, Mark excitedly talked about what he had seen. I could tell he was smitten by Amy since he hardly mentioned Emily at all. I just smiled at him, happy about his excitement. Amy was a really nice girl, and I couldn't think of a better girl for Mark to be interested in.\n\nI met Judy in the break room the following morning and told her how much Mark had enjoyed attending the swim meet last night. Judy said Amy and Emily were more excited about Mark being there than their victories in the pool. We both stood there smiling at each other, wanting to hug and kiss each other but resisting the temptation.\n\n\"You haven't forgotten about dinner tonight, I hope?\" I asked.\n\n\"No,\" Judy replied with a smile. \"The girls are really looking forward to it.\"\n\nI reached over and touched Judy's arm before saying, \"I hope you're looking forward to it?\"\n\nJudy smiled and said, \"You know I am.\" Before I could give in to the urge to take her in my arms, Tim came into the break room to get some coffee. Judy and I separated and headed back to our offices. The rest of the day was busy, but I could get off work early enough to get home due to some fortuitous rescheduling of meetings (and I was starting to catch on that Cathy was the instigator on some of them) and get ready for dinner.\n\nWhen I got home, I found Grace and Kathy in the kitchen, working on dinner. I could tell Kathy was nervous about meeting Judy, Amy, and Emily tonight. I hugged her and said, \"Kathy, there's no need to be nervous. Judy will just love you, and I know Amy and Emily will just adore you.\"\n\n\"Thanks, Virginia,\" Kathy said, returning my hug. \"I know how important this is for you, and I worry that I'll screw it up.\"\n\n\"Nonsense,\" Grace retorted, stopping what she was doing and coming over to hug both of us. \"From what I've heard, they'll accept you as you are.\"\n\nAs Grace and Kathy prolonged their hug, I excused myself, saying, \"I'll head up and get changed,\" and ran upstairs to my room. I performed my toilet, finishing up by donning a nice pair of slacks and a nice button-up blouse. As I came downstairs, I heard two cars pull up and knew Mark and Matthew had arrived. I met them at the door and hugged both of them, greeting Matthew with a slightly longer hug, glad he was able to get away from school to make it tonight.\n\nOnce the greetings were out of the way, and Mark had helped Matthew with his things, I went back out into the kitchen to see how the food preparation was proceeding. Grace told me everything was set and to make sure to pull out the meatloaf when the timer went off. She then left to go get ready, Kathy having already left to do the same. When Matthew and Mark came down, I pressed them into service to set up the dinner table. Since we didn't have a huge dinner table, we planned for the adults to sit at the dinner table, and Matthew, Amy, Mark, and Emily would sit at the breakfast bar.\n\nFinally, everything was ready. I heard a car pull up, and Matthew and Mark rushed out to greet Judy, Amy, and Emily. I waited at the door with Grace and Kathy. Matthew handed out Judy while Mark handed out Amy and Emily. Judy handed a bottle of wine to Matthew before coming up to the door to greet me. Judy was decked out in slacks and a nice cardigan sweater top. Amy and Emily were similarly attired, in complementary colors. After a quick kiss, I introduced Judy to Grace and Kathy. Judy hugged them in turn and said how beautiful Grace was. Judy could tell that Kathy was nervous, so she made extra sure to greet her, telling her how happy she was to meet her.\n\nWhen Amy and Emily came up to the door, I hugged them before introducing them to Grace and Kathy. They greeted Grace and Kathy effusively, leaving no doubt they were happy to meet them. I could tell Grace was totally smitten by them, and even Kathy was loosening up and getting more relaxed. I smiled at Kathy, knowing that she had been so nervous about meeting them. She smiled back at me, and I knew she would be okay.\n\nGrace and I went into the kitchen while everyone else went into the living room. While Grace and I finished laying out the food, we could hear the roar of conversation coming from the living room. Grace side-hugged me and said, \"I really like Judy, and the girls are just adorable.\"\n\n\"Thanks, Grace,\" I said, trying not to tear up. \"That means a lot to me.\"\n\nWhen everything was ready, we went into the living room to announce that dinner was ready. Everyone jumped up, and we trooped out to the dining room. I explained the seating arrangements, and Matthew and Mark seated Grace and Kathy before seating Judy and me. Once everyone was seated, I said grace over the food. Then we all dug in and enjoyed our meal.\n\nJudy took charge of the conversation, taking turns asking Grace and Kathy about themselves. Kathy, usually reticent about talking about herself, opened up to Judy. Grace was smiling, happy with how Judy and Kathy were getting along. I just smiled and pitched in when needed but mostly just followed the conversations. Judy would look over to me from time to time and smile, and I knew she loved her interactions with Grace and Kathy.\n\nI kept an eye on what was happening out at the breakfast bar. The kids were having animated conversations, and hearing the laughter coming from there thrilled my heart. Knowing how well they were getting along made me happy.\n\nFinally, dinner was finished. The kids volunteered to clean up while we adults retired to the living room. The conversation ended up on the latest Space Shuttle mission. I remarked how incredible it was that enemies we all grew up with were cooperating in space missions. Judy and I discussed how easing tensions could result in fewer defense contracts for Raytheon, which could affect our employment.\n\nWhen the kids were done in the kitchen and came out to join us, the discussion turned to sports. Amy and Emily regaled Grace and Kathy with their sports accomplishments. Even Mark got involved, having become interested in swimming since attending a swim meet. Judy and I exchanged knowing smiles as we knew Mark and Amy were always talking about the other. Eventually, the conversations wound down, and it was time for Judy, Amy, and Emily to leave.\n\nAfter a round of hugs, I walked out with Judy and kissed her before she got in her car. I watched them drive off before going back inside. Once the door was closed, Matthew and Mark excused themselves to go to their rooms while Grace, Kathy, and I went out into the kitchen to finish cleaning up. Grace and Kathy both told me how much they liked Judy and the girls. Grace pulled me in for a hug and said, \"I totally approve of Judy.\"\n\nI teared up when she said that, knowing she was approving Judy, not only for me but also for Matthew and Mark. In effect, she was giving her stamp of approval for Judy to replace Bonnie. The enormity of what she had just said made her start tearing up, too. I reassured her, saying, \"Grace, Judy may be taking Bonnie's place in my life, but I am never going to forget Bonnie. She promised to wait for me, and I'm going to hold her to it.\"\n\n***\n\nI attended several more swim meets, taking Mark with me when he was available. I noticed more people were showing up for the meets. Judy always showed me newspaper articles about Amy and Emily and what they were doing in the pool. They were still winning every event they entered except when they competed against each other. Only then did Emily lose, but she was always right on top of Amy every time, pushing Amy to even more records. Amy had actually set a couple of state high school records. Knowing that Emily would be around for two more years caused several parents to want their girls to attend Mira Costa and be on the swim team.\n\nMark really enjoyed rooting Amy on whenever she was competing. Of course, getting hugs from her every time he attended a swim meet had a lot to do with that, I'm sure. Judy and I had discussed how we would react if they decided to start dating each other, and we agreed that if it happens, we won't discourage it. We wouldn't let it affect our relationship.\n\nDespite our best efforts to keep our relationship secret, people at work were catching on that something was going on between us. I would catch my co-workers looking at us whenever Judy and I were together in the cafeteria or in meetings. Cathy and Sue did their best to deflect any questions about us whenever anybody came up to them to ask about our close relationship. We both worked our asses off to ensure it didn't affect our work, and Steve was the direct benefactor of that hard work, so he didn't say anything about it.\n\nMarch 1995\n\nI had signed the two petitions for Adoption for Matthew and Mark, and the lawyer had submitted them back in January. We got a court date of March 6, 1995, for the judge to sign off on the adoptions. I was very excited but also very nervous all day Sunday. I could hardly sit still, pacing back and forth to the point Grace threatened to have Kathy tie me up and throw me in the closet to keep me still.\n\nFinally, Monday morning came. After a night of restless sleep, I made sure I looked nice for court today. We showed up at Family Court early to make sure we weren't late. Our lawyer, Chet Walker, showed up. While we waited to be called into the judge's chambers, he assured us the procedure would go smoothly. He told us that Judge Stevenson was a fair judge. She had approved several petitions of Adoption he had brought before her.\n\nI was attached to Grace like a limpet mine, afraid to let go. She kept reassuring me everything was going to be okay. As much as I wanted to believe it, I was still worried something would happen to prevent the adoptions from taking place.\n\nFinally, we were called in to see the judge. Chet followed us into the room, and we all sat down. When I saw the judge, I immediately relaxed. She had a friendly face, and when she smiled at me, I knew everything was going to be okay.\n\nJudge Stevenson said, \"I'm not one for a lot of formality in cases like this, so as long as everyone is polite, we'll keep it informal.\" Turning to Chet, she said, \"Mr. Walker, I assume all of the parties are present?\"\n\n\"Yes, your Honor,\" Chet said, smiling. Pointing to each of us in turn, he introduced us to the judge. \"This is Grace Steiner, the guardian of the petitioners, these are the petitioners, Matthew and Mark Taylor, and this is Virginia Hanratty, whom the petitioners want to adopt as their mother.\"\n\n\"Thank you, Mr. Walker,\" said Judge Stevenson. Turning to Grace, the judge asked, \"Do you approve of the petitioners wanting Ms. Hanratty to be their mother?\"\n\n\"Yes, your Honor,\" Grace said, turning and smiling at me. \"Virginia has been their de facto mother for nearly ten years now, and I couldn't be happier with their choice.\"\n\nJudge Stevenson smiled at that before turning to Matthew and asked, \"Do you, Matthew Taylor, of your own free will, wish to adopt Virginia Hanratty as your mother?\"\n\n\"Yes, your Honor,\" Matthew said before he looked at me with a big smile on his face.\n\nJudge Stevenson then turned to Mark and asked, \"Do you, Mark Taylor, of your own free will, wish to adopt Virginia Hanratty as your mother?\"\n\n\"Yes, your Honor,\" Mark said, before he, too, looked at me with as big a smile as Matthew had.\n\nThen Judge Stevenson turned to me. She asked, \"Do you, Virginia Hanratty, of your own free will, accept the wishes of Matthew and Mark to become their mother in the eyes of the law?\"\n\nWith tears in my eyes, I answered, \"Yes, I do, your Honor.\"\n\nJudge Stevenson smiled at me. She said, \"Having ascertained that all parties have entered into these agreements of their own free will, I find for the petitioners and grant their adoptions. Additionally, I note that both petitioners have requested to have their surnames legally changed to Hanratty, and I have signed off on those requests. Now it's up to you to get all of your legal documents updated as soon as possible.\"\n\nWith that, Judge Stevenson closed the folder and handed it to Chet. She said, \"I trust you know what needs to be done with these documents?\"\n\n\"Yes, your Honor,\" Chet said as he tucked the folder into his briefcase.\n\n\"In that case, this hearing is concluded,\" Judge Stevenson said. \"Congratulations, everyone.\"\n\n\"Thank you, your Honor,\" I said, trying not to burst into tears of happiness. \"I can't begin to tell you how happy I am right now.\"\n\nWith that, we all got up and left. Chet said his goodbyes and went off to get the documents filed with the clerk. He told us he would get copies of the orders to us as soon as possible. We all shook his hand, thanking him for everything before we left to go home. We stopped at Marie Callender's to celebrate. The pie never tasted so good as it did today as I just smiled as I sat there, so happy I can now call Matthew and Mark my sons without having to qualify it anymore.\n\nThat night, I called Judy to tell her the news. I was so happy I started crying as I talked to her. I also talked to Amy and Emily, who congratulated me and said how happy they were for me. Judy and I exchanged \"I love yous\" before I hung up. I was really looking forward to seeing her at work tomorrow.\n\nAs I drove in to work, I barely paid attention to the traffic. Once I was parked, I walked through the lobby, and Peggy greeted me. I greeted her back and then ran up the stairs, anxious to see Judy. When I passed Cathy's desk to enter my office, she looked up at me and returned my huge smile with one of her own.\n\n\"Good morning, Cathy,\" I said on my way into my office.\n\n\"Good morning, Virginia,\" Cathy said as she got up and followed me into my office. \"How did it go yesterday?\" she asked as I put down my bag and picked up my mug.\n\n\"Oh, it went okay,\" I said, trying not to explode from the happiness I had inside me. Before Cathy started to get a worried look on her face, I pulled her in for a big hug and said, \"Oh, Cathy, it was so wonderful!\"\n\nI think Cathy was startled by my passionate hug, but she accepted it in the spirit intended. She returned it and said, \"That's great, Virginia. I'm so happy for you.\"\n\n\"Thanks, Cathy,\" I said, stepping back. \"I'm going to go get some tea. Want to come with me?\"\n\n\"No, I'm good, Virginia,\" Cathy said with a smile before she turned to head back to her desk.\n\nI headed to the break room, a big smile on my face. Just as I got in the break room, Judy also came in. When I turned to her, I couldn't restrain my happiness anymore, and I pulled her in for a hug. \"Oh, Judy, I'm so happy,\" I said.",
        "Judy hugged me back before saying, \"I brought a cheesecake mom made to celebrate.\"\n\nWhen I heard that, I teared up and started sobbing in happiness. \"I so want to spend the rest of my life with this woman,\" I thought to myself. I broke our hug and looked up into Judy's face, and I could see she was tearing up too. I pulled her back into a hug and whispered, \"I love you, Judy.\"\n\n\"I love you, too, Virginia,\" Judy whispered back, tightening her arms around me.\n\nWe broke our hug, and I dashed my tears away, getting myself back in control of my emotions. Judy did the same before I said, \"Let's invite Cathy and Sue and have some cheesecake.\"\n\nBefore we could act on that, Cathy and Sue walked into the break room, big smiles on their faces. Judy went and pulled the cheesecake out of the refrigerator. At the same time, Cathy and Sue dug out some paper plates and plastic cutlery. Soon we all had a piece of cheesecake, and everyone agreed it was delicious.\n\n<s> </s>\n\nSeveral other people came into the break room while we were eating cheesecake, and I offered them some. When asked what we were celebrating, I explained that I am now legally the mother of my two sons. Everyone congratulated me and enjoyed the cheesecake. We had such a good time we nearly forgot our meetings. Luckily, Sue and Cathy shooed us off, promising to clean up and make excuses for us if we were late. I made it in time, but I'll be honest, I didn't really pay much attention to what happened in that meeting, or the rest of the day, for that matter.\n\n<s> </s>\n\nThat night, I decided I was ready to take the next step in my relationship with Judy. Once Mark went off to do homework, and Grace and Kathy were out for the evening, I called Betty. When she answered the phone, I asked, \"Betty, are you and Joe busy tonight?\"\n\n\"No, Virginia,\" Betty replied. \"We're just going to watch some TV tonight. Why do you ask?\"\n\n\"I'd like to talk to both of you about my relationship with Judy,\" I explained. \"Can I come over now and talk to you for a few minutes?\"\n\nI heard Betty quietly gasp before she said, \"Of course, Virginia. Come on over. We'll be glad to see you.\"\n\nI told Mark I was going out and then drove over to see Joe and Betty. When I got there, they came to the door and waited for me to come in. I was nervous, but I would ask them for permission to make Judy my life partner.\n\nWhen I came in, and once the greetings were over, we went into the living room and sat down, Betty and me on the couch, and Joe, in his easy chair. I turned to Joe and said, \"Joe, I love Judy very much, and I want to spend the rest of my life with her. May I have your permission to ask Judy to be my life partner?\"\n\nJoe and Betty looked at each other, a solemn look on their faces. Just as I thought I was going to be disappointed, they both suddenly smiled, and Joe looked at me and said, \"Of course you can, Virginia. You have made my daughter happier than I've seen her since Jon's death. I know you are a good and decent person, and you love the girls as much as you love your boys. I couldn't be happier with you being Judy's life partner.\"\n\nI turned to Betty as she said, \"Yes, Virginia, I approve whole-heartedly. I know my daughter loves you and that you love my daughter. The girls just adore you, and I couldn't be happier to consider you and the boys to be part of our family.\"\n\nBetty leaned over and hugged me, the tears in her eyes matching the tears in my eyes. When we broke the hug, Joe said, \"We'd also like to congratulate you on being legally recognized as your boy's mother.\"\n\nThat resulted in another tearful hug with Betty. When we broke, Joe stood up, and I did too. He pulled me in for a hug, and I teared up again as I hugged him back.\n\nOnce the hugs were done, we sat down again. I turned to Betty and asked, \"Do you, by any chance, know what Judy's ring size is? I'm going to go ring shopping soon. I'd also like to take Amy and Emily with me when I do, so I'd need you to arrange for them to be available without Judy suspecting anything?\"\n\n\"I'm not sure, but I'll find out for you,\" Betty said, accepting her role in the conspiracy to surprise Judy. \"I think I can arrange for the girls to go with you. Let me figure out when I can make that happen.\"\n\n\"Thanks, Betty,\" I said, hugging her again. \"Well, I better get going.\" With that, we all got up, and I left to go home. All the way home, I smiled as I planned how I'd ask Judy to be mine.\n\n<s> </s>\n\n***\n\n<s> </s>\n\nOver the next few weeks, I spent as much time with Judy as I could. We went to several swim meets, watching Amy and Emily continue their rampages in the pool. Mark attended a couple of matches which made the girls happy. I think they enjoyed showing off for him and getting the opportunity to hug him. Judy and I really enjoyed how they interacted, especially the growing attraction between Amy and Mark.\n\nBetty kept her promise and found out Judy's ring size for me. She also arranged for me to have some free time with Amy and Emily while keeping Judy busy. When I picked up Amy and Emily, they were excited to see me. When I explained what I wanted to do, they squealed in happiness and practically squeezed the breath out of me when they hugged me. I swore them to secrecy, and we went off to Pasha Fine Jewelry on Manhattan Beach Blvd.\n\nWhen we got there, Amy and Emily eagerly helped me look through the rings on display. While Amy and Emily looked, I struck up a conversation with the lady behind the counter. She introduced herself to me as Darya, and I talked to her about what I wanted to purchase. It turned out Darya was the daughter of the owner and a fine jeweler in her own right. She showed us a few items she thought I might like while Amy and Emily checked them out with me. While the rings were nice, they weren't exactly what I had in mind.\n\n\"Let me get some of my rings from the back,\" Darya said before disappearing behind the curtain. While she was gone, Amy and Emily exclaimed how pretty all of the rings and jewelry on display were, and I agreed with them. We continued looking around until Darya came back out with a tray with some rings on it.\n\nMy eyes immediately latched onto a set of rings in the middle of the tray. Darya noticed my interest and smiled at me. She let me pick one up to look at it closely. The ring was platinum with several small diamonds on each side of the central diamond that must have been a carat or more in a princess cut. I showed it to Amy and Emily, and they both cooed over it, exclaiming how beautiful it was. Darya told me that the two central diamonds were very close to being identical, both having been cut from the same stone.\n\nI asked Amy, \"What do you think?\"\n\n\"I love it, Virginia,\" Amy replied.\n\nI then asked Emily, \"How about you?\"\n\n\"It's beautiful, Virginia,\" she replied.\n\nI turned to Darya and said, \"Sounds like you've made a sale. Can I get them inscribed and sized?\"\n\n\"Of course,\" Darya replied with a smile. She handed me a pad and pen and asked me to write down the sizes and what I wanted on each one. \"I'll personally do the sizing and engraving at no charge,\" she said, having noted I had never asked about the price.\n\nOnce I had written down the sizes and what I wanted to have inscribed on each ring, Darya went over it to ensure she understood what I wanted to have engraved. When we were done, she told me they'd be ready by next week. Darya then gave me the price for the rings, and I pulled my checkbook out of my purse and wrote her a check for the amount.\n\nWhen they heard the amount, Amy and Emily's eyes grew big, but they didn't say anything about it. We left after exchanging \"Goodbyes\" with Darya. Once out on the street, I noticed we were only a block from Jack's, so I asked Amy and Emily if they were ready for lunch. They enthusiastically approved of lunch at Jack's, exclaiming how much they loved their salads.\n\nAs we walked over to the restaurant, I thought about the fact that I first came here for lunch nearly ten years ago. If I had never asked for recommendations for lunch that first day at LAAFB, I never would have met Bonnie. I thought about Candy Kane and how my life might have taken an entirely different track if I had hooked up with her. I would never have met Judy and her two beautiful daughters. I misted up a bit as I threw up a prayer to God, thanking Him for guiding me to this point. Amy and Emily sensed my mood, and they both side-hugged me before we stepped inside Jack's.\n\nWe had a delightful lunch as we planned out how I would pop the question to Judy. I swore both of them to secrecy, and they were both excited about being in on the surprise. Once we were done with lunch, we headed back so Judy wouldn't get too suspicious about what we had been doing.\n\nTrue to her word, Darya had the rings ready the following week. When I saw them and read the inscriptions on them, I teared up. I thanked her for her beautiful work. Darya insisted I try my ring on to make sure it fits properly. I slid the ring on with no problem and looked at it on my finger, tearing up again. It looked so beautiful on my finger, and I knew Judy's ring would look just as lovely on her finger. I couldn't wait to put that ring on Judy's finger. Darya wrapped up the rings for me, and I hugged her and thanked her again for doing such an excellent job.\n\nApril 1995\n\nBetty helped me with planning the big day. I had suggested I would like to have dinner with her parents to Judy and have Grace and Kathy attend so Betty and Joe can get to know them. Judy thought it was a great idea. When she approached Betty with the idea, Betty enthusiastically embraced it and started planning it with Judy.\n\nI told Matthew and Mark what I was planning to do, and they were enthusiastic and approved of the plan. I made sure that when the date for dinner was set, Matthew would be able to attend. I told him I would tell Judy I wasn't sure if he could come. That way, it would be a surprise when he did show up. Hopefully, this would allay any suspicions she might have if she had picked up on something said or done. When Judy did ask if Matthew would be able to attend, I told her I couldn't guarantee it, but I would ask him to try to come.\n\nI even huddled with Cathy and Sue. I told them I was planning a surprise for Judy. They could help reschedule anything that could come up at the last moment preventing either of us from leaving on time that evening. I know they were excited, and I hoped they didn't make Judy suspicious. As far as I could tell, she didn't pick up on anything.\n\nThe night before the big day, I called Alex. As happy as I was about Judy, I felt I needed to tell Alex what I planned to do tomorrow night, and I really hoped she wouldn't cry when I did.\n\nAfter three rings, Alex answered the phone, \"Hello?\"\n\n\"Alex,\" I said, \"This is Virginia.\"\n\nI could hear her smile through the phone when Alex replied, \"Virginia! It's good to hear from you. What's the occasion?\"\n\n\"I have some news I wanted to share with you,\" I said.\n\nMy nervousness must have registered with Alex, and I could hear her breath catch before she cautiously asked, \"Good news, I hope?\"\n\nI sighed before I said, \"Good news for me, maybe not so good news for you.\"\n\n\"I see,\" Alex said softly, and I could hear the sadness in her voice.\n\nI took a big breath before I said, \"I'm going to ask Judy to wear my ring tomorrow night. I love her, and I want to spend the rest of my life with her.\"\n\nThere was a silence that went on so long I started to ask if everything was okay before I heard a little sob. Alex then said, \"That's great, Virginia. I'm happy for you.\"\n\nThe tragedy I heard in her voice made me tear up before I said, \"I'm sorry, Alex. I know we always hoped the day would come when we could be together, but I guess we were never meant to be.\"\n\nI heard Alex heave a sigh before she said, \"I guess. I still love you, Virginia. That will never change, no matter what.\"\n\n\"I still love you, too, Alex,\" I said.\n\nOur pledges made, there was another pause before Alex said, \"I'm glad it's Judy you're going to be with. She's a real sweet person, and I wish you all the happiness you can find with each other.\"\n\n\"Thank you, Alex. That means a lot to Judy and to me,\" I said.\n\n\"Tell Judy I wish her happiness, will you?\" Alex asked.\n\n\"I will, Alex,\" I promised. \"Thank you. Well, I'd better let you go. I have a lot to do tonight. Goodbye, Alex.\"\n\n\"Goodbye, Virginia,\" Alex said before I heard a click as the call was disconnected.\n\nI put the receiver down and sat there for a minute, thinking about Alex, hoping she would be okay. As much as I loved her, I was going to spend the rest of my life with Judy. Then, I was going to spend forever with Bonnie. I really hoped Alex finds someone to love. She deserved it. With a sigh, I got up to go prepare for the big day tomorrow.\n\nFinally, Friday came, and all of the planning came to fruition. Grace would drive Kathy, Mark, and me to dinner, and Matthew would meet us there. As I got ready to leave work to head home, Cathy smiled at me and said, \"Good luck tonight, Virginia.\"\n\n\"Thanks, Cathy,\" I said. \"I'll tell you how it went Monday.\"\n\nI got home and met Grace, Kathy, and Mark there. They were excited and just about ready to go. I hurried up to my room, performed my toilet, and dressed up a bit in a lovely flounce dress that came down to just above my knees. I put on some heels and hurried downstairs. We took off in Grace's car and made it to Betty and Joe's place. We got there just in time to see Judy pull in just before us. We all got out as Judy waited for us. Everyone got a hug from Judy before we took each other in our arms and kissed. The world went away as our lips met, and I kissed this woman like I was afraid Judy would disappear once the kiss ended. Judy responded to my enthusiasm and kissed me with vigor as our tongues ravaged each other's mouths.\n\nWe finally broke the kiss due to a lack of oxygen. We stood there arm-in-arm, panting and alone in the driveway, as everyone else had gone ahead and gone inside. Once we got our breathing under control, we separated and walked inside, arm-in-arm, with big smiles on our faces. Judy was so happy I hoped she wouldn't pick up on my nervousness.\n\nEveryone but Betty was in the living room. After a round of greetings, Judy and I headed out into the kitchen to help Betty with dinner. Joe was busy entertaining everyone in the living room. When we made it to the kitchen, Betty pulled me in for a hug before hugging Judy. Once the hugs and greetings were finished, Betty directed us to start setting the table. Before telling Judy to arrange a place setting for Matthew, I heard the doorbell ring. Judy looked up, wonderingly, as we heard Amy and Emily answer the door. I smiled and said, \"Oh, good, that must be Matthew,\" before heading out to greet him.\n\nJudy followed me into the foyer, and when she hugged Matthew in greeting, he said, \"I'm glad I could make it tonight, Judy. It's good to see you again.\"\n\n\"It's good to see you, too, Matthew. I wasn't expecting you, but I'm glad you're here,\" Judy said as she let go of him.\n\n\"How could I miss out on your mother's cooking?\" Matthew said.\n\nI leaned in and hugged Matthew, whispering to him, \"You got here just in time.\" Out loud, I said, \"It's good to see you, Matthew. Thanks for being able to come tonight.\"\n\nWith that, we went back out to the kitchen to finish preparing for dinner. We recruited Matthew and Mark to pull out the chairs stashed in the garage and put the leaves in the dinner table. Judy and I then finished putting out the china before going back into the kitchen to help Betty. The food was soon coming out of the oven to be put onto the table. The delicious smells permeated throughout the house.\n\nFinally, everything was ready, and Betty went to call everyone to dinner. Everybody trooped into the dining room and found their seats. Once everyone was seated, Joe led the prayer over dinner. He crossed himself before he prayed, \"Thank You, God, for the food we are about to eat, for those who are here to share these blessings. Bless those who are here and those who are in our hearts, and all those who are not as fortunate on this day. Amen.\" Everyone crossed themselves and said, \"Amen,\" except for Grace and Kathy, who just said, \"Amen.\"\n\nI teared up a bit while thinking about Bonnie and what was going to happen after dinner. I could see some unshed tears in Judy's eyes after she looked questioning at her father. I held my breath, hoping Judy wouldn't twig to what was going to happen. Betty said, \"Let's eat!\" and that was enough to distract Judy. She smiled at me across the table; whatever had been bothering her forgotten for the moment.\n\nA dull roar of sounds arose as everyone started plating their food. Soon, everybody's plate was full, and several conversations started up around the table. Amy and Emily were chatting with Matthew and Mark, and Grace and Kathy were chatting with Joe and Betty. Judy and I just sat there, taking it all in, smiling at each other, our eyes doing all of the talking. Everything was going to plan so far. I was nervous but hoped I was hiding it from Judy. I ate my food, but I really wasn't paying much attention to it, as delicious as it was. I made sure to compliment Betty on the food, as did everyone else.\n\nI could see Betty and Grace got on right off the bat. They chatted like they'd been long-lost friends who finally met and needed to catch up after all of these years. I think Betty was a little intimidated by Kathy. Still, she eventually warmed up to her, especially after Kathy started talking recipes with her. Joe chatted easily with them, and I could see that he approved of them. He smiled at me and nodded. I heaved a sigh of relief. The last hurdle was passed, and everything was going to be okay.\n\nEventually, everyone was done eating. There was still a lot of food on the table, but everyone was stuffed. Betty finally declared dinner was over and for everyone to head into the living room. Judy and I offered to stay and help, but Betty shooed me off to the living room with a wink and just had Judy stay to help her clean up.\n\nWe huddled in the living room as we waited for Betty to send Judy in. I made sure I had the ring box handy as I sat on the couch. Everyone was chatting, trying to pretend nothing was about to happen. Looking toward the entrance, I finally saw Judy come in. We smiled at each other as Judy came over to sit on the couch with me. When she did, everyone stopped talking and looked at us expectantly.\n\nJudy looked questioningly around at everyone and asked, \"What?\"\n\nThat was my cue. I stood up, clutching the ring box behind my back as I turned to face Judy. She looked at me as I got down on one knee, bringing the ring box out from behind my back. I was so nervous I nearly dropped the ring box when I opened it. I saw the realization come over her face as she leaned forward with a big smile. It was now or never. \"I love you, Judy,\" I started. \"For the longest time, I thought that I would never find someone to take Bonnie's place, someone I could love and would love me in return. There was a time or two that I thought I had found someone, but it didn't work out. Now, I am positive that I have found that person. It is you, Judy. You have made me so happy, and I selfishly want to be this happy for the rest of my life.\"\n\nI pulled Judy's ring out before setting the box down. Then I took Judy's left hand in my right hand, looked Judy in the eye, my heart pounding so loud I thought everyone could hear it, and asked, \"Judy, will you make me the happiest woman in the world and wear my ring?\"\n\nJudy looked me in the eye and said, \"Oh, my god, yes! I'll wear your ring!\"\n\nMy heart nearly exploded with love when I heard those words. I teared up as I put the ring on Judy's finger. Once it was on, I looked up, saw the tears in her eyes, and leaned in to kiss her. I barely heard the clapping and congratulations coming from the rest of the families as our lips lingered together. Finally, we broke, and Judy leaned back while I stood up.",
        "I sat down and handed the ring box to Judy while everyone looked on. Judy leaned in and whispered, \"You caught me totally by surprise. What am I supposed to say?\"\n\nI whispered back, \"Anything you want. Say it from the heart. You know what to say, my love.\"\n\nJudy thought for a second, then stood up, turned toward me, and went down on one knee. She took my ring out of the ring box, took my left hand in her left hand, looked me in the eye, and said, \"I love you, Virginia. When Jon died, I was so lonely I didn't know what to do with myself.\" Judy glanced over to Amy and Emily before she continued, \"My girls were my rock, and I pulled myself out of despair for them. But that wasn't enough. Then I met you, and that was when I realized what I needed. I needed you, Virginia. You complete me, and I don't want to ever be incomplete again. Will you wear my ring and make us both complete?\"\n\nWe locked eyes, and as I thought about what Judy had just said, I realized that Judy did make me complete, so I said, \"Yes, Judy, I'll wear your ring and make us both complete.\"\n\nAgain, I teared up as Judy slid my ring onto my finger. I could see the tears in her eyes as we leaned in and kissed again. My heart was singing, and I felt so happy. Our lips lingered, but eventually, they parted, and the world came rushing back in. I could hear everyone buzzing with excitement as my eyes locked with Judy's eyes. At this moment, I felt as one with her, and I didn't want it to end.\n\nI leaned back as Judy stood up. She turned and sat down beside me, and we held hands as we basked in the love radiating from our families. Judy leaned in and whispered, \"I can't believe you planned all of this, and I never even suspected it.\" I just innocently smiled until she whispered, \"I'll exact my revenge tonight, my love,\" before pulling away. I gulped, trying not to let on that my nipples and pussy had just pulsed at the thought of what lay ahead for me tonight.\n\nWith that, everyone stood up and came over to congratulate us. Everyone took turns hugging us and exclaiming how happy they were for us. It was several minutes before Betty declared it was time for dessert. We all trooped out to the kitchen, and Betty and Grace served cheesecake to everyone.\n\nOnce everyone had eaten their cheesecake, it was time for Judy and me to leave. Since Amy and Emily had driven themselves here, they would stay with Betty and Joe for the night. I had Mark retrieve my overnight bag from Grace's car. Once I had it in hand, Judy and I left to go back to her place for the night.\n\nWhen we got to Judy's place, we went inside, and I ran my bag upstairs while Judy went into the kitchen to pour us some wine. When I came back down the stairs, Judy met me at the bottom of the stairs and handed me a glass of wine. We tapped our glasses before taking a sip of wine. Without having to say a word, we clenched, careful not to spill the wine, and I tilted my head up so my lips could meet hers as she tilted her head down.\n\nWhen our lips met, it felt like a small explosion went off in my pussy as my nipples tightened so hard they ached. I was kissing the woman I had just pledged to spend the rest of my life with. I moaned as my mouth opened fully, letting Judy's tongue push in. Judy's silky-soft lips felt so lovely on my lips as our tongues battled for supremacy. We both moaned as one, and our arms instinctively tightened around each other as we lost ourselves in the kiss. All that existed was the kiss as my heart sang with the love I had for this woman.\n\nInevitably, the kiss ended. We broke and gasped to get air in our lungs before we passed out. We separated, and as soon as I stopped panting, I took another sip of my wine. Judy did the same as our eyes locked, her eyes so dilated they were black with desire. I'm sure my eyes were just as black with the passion I had for this woman.\n\n\"Let's take this upstairs,\" I husked as I turned and headed up the stairs.\n\nJudy followed without a word. I felt her hand caressing my ass as I climbed the stairs. I waggled my ass even more in response, making Judy's breath hitch. We made it safely up the stairs, and we entered the bedroom. I turned, took Judy's glass from her hand, stepped over to the nightstand, and set them down.\n\nWhen I turned back, our arms went around each other, and our lips met again in another passionate kiss. I adjusted my stance so our thighs met each other's pussy. I ground myself against Judy's thigh as our kiss continued on. Judy ground against my thigh also, and I could feel the heat of her pussy against my skin. Our kiss continued as my hands started sliding up and down Judy's back. When my hands ended up on her ass, I clenched it and pressed her even harder into my thigh. Judy's hands ended on my ass, and she pulled me into her, so the increased friction made me even wetter and hotter.\n\nWe broke our kiss, both of us gasping like a fish out of water. I stepped back as our arms went to our sides. I reached down, grabbed the hem of my dress, and pulled it up and over my head. I tossed it aside, standing there in my black demi-cup bra and bikini panties. The translucent material didn't prevent my hard nipples from being displayed for Judy's enjoyment. Her eyes latched onto my nipples as she reached down and swiftly pulled her dress off, tossing it over on top of mine. I gasped as I saw Judy in her white lace balconette bra and lacy hipster panties. I couldn't help but notice the dark spot on her panties, showing how wet she had become.\n\nWe simultaneously reached back and unhooked our bras, shrugging the straps off our shoulders and letting them slide down our arms and onto the floor. As one, our hands went to each other's breasts as I clenched Judy's breasts in my hands, her hard nipples digging into my palms. Judy's hands clenched my breasts, and my stiff, aching nipples dug into the palms of her hands. My hands slid down to cup her breasts as I leaned in and sucked her right nipple into my mouth. I grabbed her left nipple with my thumb and index finger of my right hand and started pinching and rolling it as I sucked, licked, and nipped her right nipple.\n\nJudy's hands flew to the back of my head as she pressed my head into her breast. Judy arched her back, trying to shove her breast into my mouth. \"Oh, God, Virginia!\" she moaned as I opened my mouth wide and sucked as much of her breast into my mouth as possible. I sucked on her breast for a minute before pushing back and releasing her breast from my mouth. I started kissing my way down over her core as my hand flew to the waistband of her panties. As I worked them over her hips, I plundered her divot with my tongue, eliciting moans and giggles from Judy. By the time her panties were puddle at her feet, I had worked my lips down to her mound, lightly licking and suckling her clit.\n\nJudy lifted her right foot out of her panties and widened her stance to give me more access to her pussy. I grabbed her ass and buried my face in her pussy. The aroma of her arousal made my heart flutter as my tongue plunged into her hole, gathering up her juices. \"God, I love the taste of her juices,\" I thought as I locked eyes with Judy. As I continued pistoning my tongue in and out of her hole, Judy started rolling her hips. Her hands went to the back of my head, her fingers entangled in my hair. My nose tapped her clit each time she thrust her hips, making her gasp out, \"Oh, god!\" each time. Judy's eyes were completely black as they urged me on, demanding I satisfy her.\n\nI could feel her thighs start spasming as Judy broke our gaze and threw her head back, her lips forming an 'O' as she surrendered to her building orgasm. I sucked her clit into my mouth and started flicking it with my tongue as she screamed, \"Oh, God, Virginia!\" as her knees buckled and she started sinking down to the floor. I guided her as best as I could until her ass hit the floor, her shoulder blades against the side of the bed. Judy's hips kept thrusting erratically as her orgasm continued pulsing through her body. She was gasping so hard, I thought she would pass out from lack of oxygen as she uttered, \"Oh, God!\" with each breath.\n\nI clambered onto her lap and wrapped my arms around her as I rained kisses on her shoulders, neck, and face while she got her breathing under control. Finally, her breathing started returning to normal, and her arms went around me and pulled me in for a kiss. After we broke the kiss, her eyes opened and locked with mine as she said, \"God, Virginia. Your tongue is so fantastic. Every time I start to think you couldn't possibly surpass what you've already done, you find a way to prove me wrong.\"\n\n\"You inspire me,\" I returned, my heart clenching with the love I had for this woman. \"I love how your body responds to the things I do to you.\" I stared into her eyes, trying to make sure she saw the sincerity in my voice. I wanted to spend the rest of my life pleasing this woman. I wanted her to know I did it unconditionally ... that I loved her unconditionally.\n\n\"What you did tonight was incredible,\" Judy said, a serious look coming over her face. \"I had no idea you were going to ask me to wear your ring. If I had known you could be this sneaky and devious, I might not have fallen totally in love with you.\"\n\n\"Thank God I was sneaky and devious enough to hide my sneakiness and deviousness from you. At least for long enough for you to fall completely in love with me,\" I said, pulling Judy in for another kiss. When our lips met, another explosion went off in my gut as the world went away while I kissed this wonderful woman.\n\nAfter an eternity of bliss, the world came back, and we broke our kiss, our foreheads together as we both panted to get our breath back. I took Judy's left hand in both of mine and brought it up so I could look at the ring on her finger. I kissed her fingers one-by-one before I brought my gaze up to meet Judy's gaze. \"Please forgive me for being so sneaky and devious?\" I asked.\n\n\"Of course, I forgive you,\" Judy said with a smile. She took my left hand in both of her hands and brought my hand up to her lips. She kissed each of my fingers before meeting my gaze again. \"I love your taste in jewelry,\" Judy said, another smile creasing her face. \"I have something for you, too,\" she said. \"I was planning to give it to you on your birthday next month, but I think I'll gift it to you now.\"\n\n\"Oh?\" I replied, curious about what Judy had bought for me. \"What is it?\" I asked.\n\n\"You'll see,\" Judy said mysteriously. I reluctantly climbed off of her lap and let her up. Once she was up, she pulled me in for a kiss before saying, \"Get on the bed and close your eyes.\"\n\nAs I climbed up on the bed, Judy gave my ass a light slap. I waggled my ass at her, and she lightly slapped my ass again. \"Tease,\" she said as I sat cross-legged and closed my eyes.\n\nI hear her pad over to her closet and open the door. I heard some rustling before the closet door closed, and Judy padded back over to the bed. I felt the bed move as she climbed on it. Judy said, \"You can open your eyes now, my love.\"\n\nI opened my eyes and saw Judy sitting next to me on the bed with a package in her hand. It was wrapped and had a bow on it, and she handed it to me. She smiled tentatively before saying, \"I hope you like it.\"\n\n\"Of course I'll like it,\" I said. I tore the wrapping paper off it and found a plain white box about a foot long and 4 inches wide. I opened it, and my eyes nearly popped out of my head when I saw a life-sized dildo and a harness-like contraption. I looked up to Judy questioningly as I pulled the strap-on out of the box.\n\nJudy nervously said, \"Virginia, I love how you use your mouth, tongue, and fingers to send me over the edge into great orgasms. But, I spent seventeen years loving Jon and having his hard cock in my pussy, and I miss that feeling of being stretched and filled by a hard cock.\" She stopped and looked at me apprehensively, worried I'd be insulted by her request.\n\nI pulled her in for a kiss before I said, \"Judy, you can never insult me by wanting to try different ways to enjoy each other's bodies. I've never used one of these before, but I would love to learn how to use it to please you. Just bear with me until I get used to it.\" I grinned at her before finishing, \"I certainly won't be as good as Jon was without any practice.\"\n\nJudy teared up and pulled me in for a hug and a kiss. I cupped her face with my hands and ran my thumbs along her cheekbones as I pressed back into the kiss. Judy's hands cupped my face and ran her thumbs on my cheekbones. My heart thrilled from the tenderness Judy displayed as the kiss continued. Finally, we broke, and Judy said, \"Thank you, Virginia. What did I ever do to deserve someone like you?\"\n\nHearing that, I flashed back to when I asked Bonnie that very same question. I teared up as I remembered that conversation ...\n\n\"Hey, sweetie,\" Bonnie said, \"a penny for your thoughts?\"\n\nI reached over and placed my hand on her cheek and, putting my thoughts into words, asked, \"What did I ever do to deserve you?\"\n\n\"I don't know. Whatever it was you did, if you even did anything, it occurred before meeting me,\" Bonnie replied, getting a thoughtful look on her face. \"I could ask you the same question, but the same answer would again apply.\"\n\nJudy twigged to my sudden change in mood and asked, \"Are you okay, Virginia?\"\n\nI shook off my melancholy, smiled, and said, \"Yes, Judy. I'm okay. I was just thinking about the time I asked Bonnie that very same question. She said, 'Whatever it was you did, if you even did anything, it occurred before meeting me.' I think the same answer applies here.\"\n\n\"Well, I'm glad whatever it was, it brought you to me,\" Judy said. \"Now, let's figure out how this thing goes on,\" she finished as she picked up the harness and pulled me up and off the bed.\n\nJudy held the straps while I stepped into the harness. She helped me pull it up around my hips. We spent a couple of minutes adjusting and fastening the straps, ensuring the base of the dildo was positioned correctly over my clit. I noticed the little bumps on the bottom of the dildo were intended to stimulate my clit. Once we got it tightened up, I thrust my hips a few times, trying to get used to the straps around my hips and thighs, making sure they would stay in place. I wouldn't know for sure until I was actually moving in and out of Judy's pussy, but at the moment, it felt right.\n\n\"Where do you keep your lubrication?\" I asked as I took a few steps, watching the dildo bob up and down and side to side with each step. Having seen cocks only in porn films and pictures, I wasn't really sure how realistic it was.\n\nJudy turned me to face her, got down on her knees while grabbing the base of my fake cock in her left hand, and said, \"Leave that to me.\" Judy proceeded to engulf the head of the dildo in her mouth. Her hand slid up and down the length of the fake cock, stroking it like a real cock. I felt the base of the dildo pressing on and pulling off my clit, sending a shock through my body, making my pussy wet and hot.\n\nWatching Judy work on my fake cock made me wish I could feel the warmth of her mouth with it. Her saliva worked its way down the dildo, making it glisten. Finally, Judy was satisfied with the lubrication, pulled her mouth off my fake cock, and stood up. She took my hands in hers and pulled me toward the bed. She sat on the edge of the bed and lay back, propping herself up on her elbows and spreading her legs wide. I stepped up between her legs, took the fake cock in my left hand, positioned the head at the entrance to Judy's pussy.\n\nJudy's eyes were locked on the dildo as I pressed in lightly, being careful not to press too hard. \"Am I doing this correctly?\" I asked.\n\n\"You can press harder,\" Judy said as her eyes moved up and locked with mine. \"I'll let you know if it's too hard.\"\n\n\"Okay,\" I said, keeping my eyes on Judy's eyes as I increased the pressure, feeling the base of the dildo press firmer on my clit. I could see Judy pursing her lips as I slid into her pussy. I watched her face and the look of pleasure coming on it as I continued pressing in. Eventually, I had my fake cock all the way in, and I looked down to see Judy's lips touching the base of the dildo. I marveled that the entire thing was in her pussy. I looked back up at Judy and asked, \"How does that feel?\"\n\nI saw unshed tears in her eyes as Judy said, \"Oh, God, Virginia, it feels so good.\"\n\n\"Good,\" I said. I grabbed Judy's hips and started pulling back out. Once my fake cock was out except for the bulbous head, I started pressing in again, pressing a little harder, so I soon was buried in Judy's pussy once again.\n\n\"You can go a little faster,\" Judy urged as I started pulling back. I started speeding up my thrusts, moving in and out, loving the feel of my fake cock as it alternately pressed and released my clit. Soon, I was smoothly moving in and out, enjoying how Judy was enjoying it. She was gasping and moaning, her eyes closed as she started thrusting her hips in time with my strokes to help the fake cock slide in and out faster and faster.\n\nJudy started panting, \"Faster, harder,\" as I tried to obey her commands. The straps were beginning to chaff me as my hips began burning from my thrusts. \"I'm going to have to adjust the strap better,\" I thought to myself as sweat beading on my skin aggravated the chaffing. I started panting due to my efforts. Eventually, my hips were slapping her ass each time I buried the fake cock in her pussy. The stimulation to my clit brought me to the edge, but I sternly steeled myself to keep going because I wanted Judy to come hard on my fake cock.\n\nI could feel Judy's thighs spasming as I brought her to the edge of her orgasm. Her mouth transformed from a rictus to making an 'O' shape as she suddenly pulled in a big gasp of air, held it, and screamed, \"Oh, God,\" as her orgasm overwhelmed her. Watching her come undone sent me over the edge, and I started spasming as I slammed my fake cock into Judy's pussy one last time before I gave in to my orgasm. My knees began buckling as my hands went down onto the bed to hold me up. I was gasping, \"Oh, God,\" over and over. Every time Judy spasmed and bucked her hips, it made the base of my fake cock hit my clit, sending me into another frenzy of shudders.\n\nWith one last effort, I pulled the dildo out of Judy's pussy and crawled up on the bed to lie next to her. Eventually, we both got our breathing under control. I started working the straps off of me and soon had the harness off. I rubbed the spots where the chaffing left red marks on my skin. I turned on my side and put my right arm over Judy's core. Judy's head turned to me, her bright eyes locking with mine as she said, \"Oh, my God, Virginia. That was incredible. Are you sure you've never done that before?\"\n\n\"Pretty sure,\" I said, smiling at her. \"That was quite the experience. I'm glad you enjoyed it.\"\n\n\"Oh, I did,\" Judy said, a lazy smile breaking over her face as she leaned in and kissed me. When our lips met, the world went away again as I enjoyed the feel of her lips on mine.\n\n\"This is never going to get old,\" I thought to myself as I fell under the spell of her lips.\n\nWhen we broke, Judy reached across me to retrieve the strap-on as she asked, \"Would you like to take a ride on it?\"\n\n\"Judy, I've had tongues and fingers and the occasional vibrator in my pussy, but I've never had a cock in it. In that sense, I'm still a virgin,\" I said. \"I don't think I'm ready for that yet, but I really did enjoy watching you enjoy it.\" I looked intently at Judy, hoping I hadn't disappointed her.\n\nJudy smiled at me and said, \"No problem, Virginia. We'll have plenty of time learning each other's favorite ways to make love. Maybe someday I'll be able to talk you into it.\"\n\n\"Maybe,\" I said, leaning in and kissing her hard.",
        "***\n\nIn the morning, I woke up the best way possible: spooned up against Judy, her arm over my ribs loosely cupping my breast. I listened to her breathing, feeling loved and secure. I wriggled my ass into her groin, loving the contact. I heard Judy's breathing speed up, and her hand tightened on my breast. I smiled, knowing I would soon enjoy having breakfast with the woman I planned to spend the rest of my life with.\n\n***\n\nI really looked forward to Monday morning. I took a few extra minutes on my toilet before going down to get breakfast. Grace was already up and making breakfast for Kathy and Mark, so she just grabbed another plate and had me sit down and join them. I quickly ate because I wanted to get to work early. I couldn't help but look down at the ring on my left hand and think about what it meant.\n\nWhen I got into work, I exchanged greetings with Peggy before nearly running up the stairs in my eagerness to get to my office. When I reached it, Cathy was already at her desk. When she saw me coming up to her desk, a big smile came over her face. When I held up my left hand, and she saw the ring on my finger, she practically gasped and said, \"Oh my god, Virginia. It's beautiful!\"\n\nCathy grabbed my hand to look at it closer before she let my hand go and said, \"Congratulations, Virginia!\"\n\n\"Thanks, Cathy,\" I said as I headed into my office. \"Are there any changes to my calendar this morning?\"\n\n\"No,\" Cathy said. \"Your morning is still open.\"\n\n\"Great,\" I thought to myself. I turned on my computer and grabbed my tea mug before heading down to the break room. I wanted to have some time to adjust to the fact I'm now in a committed relationship. When I walked up to Judy's office, I saw Sue was at her desk, and I stopped to see her. Sue smiled when she saw me, and when I held up my left hand, she saw the ring and smiled even more as she said, \"Congratulations, Virginia! It's a beautiful ring!\"\n\n\"Thanks, Sue,\" I said and turned just as Judy was walking up, a big smile on her face. I resisted the urge to pull Judy in for a kiss as Judy held out her left hand to Sue. Again, Sue smiled and said, \"Congratulations, Judy. I'm so happy for you!\"\n\nWe went into Judy's office, and I closed the door after me. Judy put her bag down as I set my tea mug down. She turned to me as I stepped up and wrapped my arms around her, my head tilted up so our lips could meet. The feel of her lips on mine and her body on mine sent a thrill through me. It was as though this was the first time we had ever kissed. \"This will never get old,\" I thought to myself before I lost myself in the sensations of kissing this remarkable woman.\n\nEventually, we broke our kiss and stepped back, both of us breathing heavily to get air in our lungs. Judy turned and quickly turned her computer on. We grabbed our mugs and headed over to the break room. When we got there, Cathy and Sue were already there with big smiles on their faces.\n\nThey both came up to us, and we exchanged hugs as they both congratulated us. When we broke apart, Sue grabbed both of our left hands and held them side by side so that she and Cathy could see both rings. They \"oohed\" and \"ahhed\" over them while we both stood there smiling. Finally, Sue let go, and we got our mugs filled before we went back to work.\n\nWhen it was time for the staff meeting, I headed to the conference room and met Judy outside the door. We walked in together and sat down next to each other. We both nodded to the other attendees and said, \"Good morning,\" to those who greeted us. I'm sure several of them picked up that something had happened between us, but nobody said anything. When Steve walked in and started the meeting, everything went smoothly. While the leads were giving their reports, I noticed that Steve looked at us with a smile. I'm sure he had seen the matching rings on our fingers, and he gave me a slight nod when I smiled back at him.\n\nAfter the meeting, Steve called Judy and me over to him. He smiled at us and congratulated us. We both thanked Steve and assured him it would not affect our working relationship, and he just smiled and said he had no doubt of that. Steve was happy for both of us. We both thanked him before we turned to leave. We headed back to our offices, looking forward to lunch.\n\nMay 1995\n\nBy now, Steve was comfortable with our relationship and how we've kept it on the down-low and not making a big deal out of it. He has seen that our relationship hasn't affected our work or our interactions with other groups we interfaced with. I was willing to keep it quiet because I had hidden my relationship with Bonnie while in the Air Force, but I know it chafed Judy. She was proud of our relationship and didn't like keeping it quiet. However, she understood the politics involved in our work with DoD programs. We would be working with people who had to profess disapproval of our lifestyle, whether they actually did or not. We have made our relationship known to our co-workers, one person at a time, and so far, no one we worked with on a day-to-day basis has had an issue with it.\n\nMira Costa's swim team won their conference and again qualified for the state finals in Sacramento this year. Judy invited me to come with them to Sacramento and attend the meet. I was looking forward to going. The meet would last for three days, so we planned to spend the week up there. Judy and I put in our vacation requests. I made sure Sally was going to be available to stand in for me while I was gone.\n\nAmy and Emily had qualified for every individual event. They also qualified for the free and medley relays for the school. Amy had also qualified for the individual medley events. Despite having three days for the event, Amy and Emily couldn't participate in every event, so they had to plan which ones they would enter with the best chances to win. Since Amy was the current state record holder for the butterfly, and Emily was the current state record holder for the 100-yard freestyle, they took all of those events. They also planned to participate in the medley relay events. Also, Amy was going to compete in the 4x50 yard individual medley event.\n\nOn Sunday, we flew up to Sacramento. We settled into our rooms at the Comfort Inn and Suites just off Lincoln Highway near California State University - Sacramento. Judy and I would share a room, and Amy and Emily would share a room. The first thing we did was scout out the swimming venue at the nearby University. Once we had checked everything out, we went back to the hotel to get ready for dinner. Other swim team members and their parents had arrived while we were gone, so we spent some time catching up with them.\n\nSeveral other families joined us at the nearby El Pollo Loco, a Mexican restaurant chain in all of California's major cities. I had eaten there before and enjoyed their food. Judy and I had a great time talking to the other parents while the girls sat around talking and giggling like girls always do. Finally, we broke up and headed back to the hotel. The swimming wouldn't start until Tuesday, so Judy and I planned what we wanted to do tomorrow while the girls practiced at the pool with the rest of their team.\n\nAfter checking in with the girls one last time, we retired to our room. I made sure the \"Do Not Disturb\" sign was on the door before I locked up. I had plans for Judy and me for the night, and I didn't want to be disturbed. We performed our toilet before going to bed. I had packed my strap-on, and I was going to pleasure Judy into submission with it. I was still learning to use it, despite preferring to use my fingers, tongue, and lips because Judy loved it. I've gotten used to the straps after figuring out how to tighten them up without chaffing myself.\n\nMaking love with Judy has really expanded my horizons. She was much more willing than I was to try something new. I still haven't worked up the nerve to let Judy use the strap-on on me, but I know I will eventually. Judy's enthusiasm in bed was infectious, and I was really looking forward to trying new things with her.\n\nJust then, Judy came out of the bathroom. When she saw me lying there with the strap-on in place, her face lit up, and I knew then we were going to have a great night of sex.\n\nWe had planned to sleep in the following day, but a loud knock on the door disabused that. I yelled out, \"Just a minute,\" while I threw on a robe. I cracked the door and saw Amy and Emily standing there. \"What's up,\" I asked, blinking my eyes from the bright sunshine.\n\n\"Virginia,\" Amy said, \"We're going down to the breakfast room. I just wanted to let you know.\"\n\n\"Okay,\" I said. \"Your mom and I will be down in a little bit.\"\n\n\"Okay,\" Amy said before she and Emily headed off.\n\nI shut the door and groaned as I headed into the bathroom to start my toilet. Judy joined me, and we had a fun time in the shower together. We dressed and headed down to the breakfast room. When we got there, we found Amy and Emily at a table having an animated conversation with the other girls as they enjoyed their breakfast.\n\nWe got our food and took our own table, not wanting to break up the synergy Amy, Emily, and the other girls enjoyed. Looking over to them, I remarked, \"I'm glad they're having so much fun.\"\n\nJudy looked over at them, a smile on her face as she said, \"Yes, I am, too.\" Looking back at me, Judy then said, \"Everything is just going so well, and I'm almost afraid a shoe is going to drop and mess everything up.\"\n\nI took Judy's hand in mine and said, \"I know that feeling, but I'm going to trust that God led us to this point for a reason. It's up to us to make it work.\"\n\n\"Yes,\" Judy said, smiling at me. \"Whatever it takes, my love.\"\n\n\"Whatever it takes,\" I echoed, smiling back at Judy.\n\nAfter breakfast, we had to take Amy and Emily over to the venue for practice. Judy and I planned to head to the Arden Mall to do some shopping. This was a big mall so we would have a lot of places to shop.\n\nAmy and Emily would be at the pool until about 4 PM, so we planned to leave the mall at 3 PM. Judy and I enjoyed browsing the shops, especially clothing stores. We spent a lot of time trying on outfits that took our fancy, modeling them for each other.\n\nAfter lunch in the food court, Judy and I decided to spend some time in Victoria's Secret. We had a blast finding lingerie to model for each other. Watching Judy try on some of the more risqu\u00e9 outfits made me hot and tingly. We ended up buying several different pieces; bras, panties, garter belts, and thigh highs. I will admit a couple of the pieces were purchased out of guilt since we had christened them with our juices from being turned on from the show we gave each other. The girl ringing us up just smiled as she bagged up our purchases.\n\nAfter stashing our packages in the back, we headed back to the swimming pool to pick up Amy and Emily. After a short wait, they came out and jumped in the car. They looked tired, so we headed back to the hotel. When we got there, Amy and Emily went to their room to change and rest. Judy and I grabbed our packages out of the car and rushed back to our room. The sexual tension built up during our shopping needed relief, so we spent some time scratching that itch.\n\nWhen it was time for dinner, we got together to figure out where to go for dinner. We ended up going to a Korean BBQ place recommended by several of the other parents. We went there and enjoyed it very much. When we finished, we headed back to the hotel. Amy and Emily were both competing tomorrow and needed their rest.\n\nWe all got up early Tuesday morning since the swimming events were starting in the morning. Due to the number of teams competing, there would be several trials for each event to narrow the field down to eight swimmers for the final. Amy was swimming in the 50-yard and 200-yard butterfly events today, while Emily was swimming in the 50-yard and 200-yard freestyle events. Tomorrow, Amy would swim in the 100-yard butterfly and the 4 x 50-yard individual medley events, while Emily would swim in the 100-yard and 400-yard freestyle events. On Thursday, both would be swimming in the 4 x 50-yard and 4 x 100-yard medley relay events.\n\nIn the morning trials, Amy won both of her events and made the finals. Emily also won both of her races and made the finals. Several of the other Mira Costa swimmers made their finals also, so we would have plenty of events to cheer for in the afternoon. Due to the number of participants and spectators, we didn't get a chance to talk to Amy and Emily between events.\n\nAfter lunch, we eagerly awaited the first event for Amy. It was the final for the 50-yard butterfly. Amy had had the best time in the morning trials and got Lane 4. We waited for the start with bated breath. When the gun went off, it was a clean start, and Amy immediately took the lead, making the turn first. She came storming down to the finish and touched first by several seconds. When they announced a new state high school record was set, cheers erupted from the Mira Costa parents.\n\nNot to be outdone, Emily won her 50-yard freestyle event, just missing the state high school record by 0.6 seconds. Since she would have two more years of competing, Emily would own that record before graduating from Mira Costa. Mira Costa also took second in the 50-yard breaststroke but failed to medal in the 50-yard backstroke.\n\nLater in the afternoon, Amy won the 200-yard butterfly, setting another state high school record. Emily also won the 200-yard freestyle, again just missing the state record by less than one second. Mira Costa was ahead in points once all of the day's events were done, mainly thanks to Amy and Emily's wins. Mira Costa also managed a third-place finish in the 200-yard breaststroke. They were later awarded a third-place finish in the 200-yard backstroke when the third-place finisher was disqualified for improperly making the last turn in the race.\n\nAfter the events for the day were all finished, Amy and Emily came out to join us. Amy was ecstatic, but Emily was bummed that she missed setting the state records. However, her natural bubbly personality soon re-emerged. By the time we were finished with dinner, Emily was laughing and having fun with the rest of us. We retired soon after dinner because tomorrow would be the most challenging day for both of them.\n\nWednesday dawned, and we got up early and had Amy and Emily at the venue at 8 AM. Again, the trials would occur in the morning and the finals in the afternoon. Both Amy and Emily qualified for the finals by winning their trials. Several other girls from their team also qualified for the finals in their events.\n\nAfter lunch, we watched Amy and Emily both easily win their 100-yard events. Amy set another state record, and Emily again just missed her state record. I saw the look of determination on her face as Emily prepared for her last event of the day, the 400-yard freestyle. When I talked to Judy about it, she agreed that Emily was frustrated but wouldn't let it get her down. \"She's very good at channeling that frustration into productive activity,\" Judy said. \"I think she's going to make a good try at the record in the 400.\"\n\nAmy was getting set for her final in the 4 x 50-yard individual medley. In this event, Amy would be swimming all four strokes, the butterfly, the backstroke, the breaststroke, and the freestyle, in that order. Since Amy was the state record holder in the butterfly, it was expected that she'd get out to a big lead. Then Amy would have to hold on through the next two strokes before the freestyle. Only Emily had beaten Amy in the freestyle times this year, so she had a good shot at the victory if she was still close to the lead.\n\nI was thrilled at the look of concentration Amy had when she came up to her stating block. Emily had huddled with her and had helped her get her warrior face on. When the gun went off, it was a clean start, and Amy shot into the lead, going nearly the entire length of the pool before surfacing and stroking. Amy made the turn and stormed back down the lane, earning a 10-yard lead before switching to the backstroke. By the time Amy finished with the backstroke, she still held the lead by 5 yards. Doing the breaststroke, Amy kept her lead by a yard before starting the freestyle lap. From there on, she slowly pulled away and finished 10 yards ahead at the finish. When the times were announced, we saw that Amy had broken her state record for the 50-yard butterfly and just missed the state record for the 4 x 50-yard individual medley.\n\nJudy and I jumped up and hugged each other when the results were announced, and Emily ran up and nearly pulled Amy out of the pool in excitement. They hugged and then turned and waved to us before heading back to their teammates.\n\nFinally, Emily's event, the 400-yard freestyle, was called. As she approached the starter block, the look of determination on her face was a sight to behold. As the swimmers crouched there waiting for the gun to go off, I found myself holding my breath. I took Judy's hand in mine and started squeezing it. The gun went off, and it was a clean start. Emily hit the water, and when she came up to start stroking, she was already in the lead. Emily steadily pulled away from the rest of the field. As they called the intermediate times, Emily was on track to beat the state record. By the time Emily had made her last turn, she was two seconds ahead of the state record. At the touch, Emily had beaten the state record by over three seconds and was over half the length of the pool from her nearest competitor. Emily nearly leaped out of the water when she saw her time, and Amy ran over to reach down and hug her. I let go of Judy's hand, and we jumped up and embraced again, so happy for Emily.\n\nAfter two days of competition, Mira Costa was still leading in the standings. If they win the two medley races tomorrow, they will win the state championship. When Amy and Emily joined us, they were both so happy. We all congratulated both of them, and hugs were made all around.\n\nWe had dinner and turned in early again. After the events tomorrow, we'd be able to spend time together Friday before we head back home on Saturday. Judy and I turned in, still exhilarated from cheering on Amy and Emily. We pleasured each other to several orgasms before we could get to sleep.\n\nIn the morning, we all met in the breakfast room. Amy and Emily ate enough for four people getting ready for the races today. Today's team events would determine which team would win the championship. Once everyone was ready, we headed over to the swimming pool.\n\nThe team events wouldn't take more than half a day, so we should be done in time for lunch. The first event was the 4x50-yard medley relay. There were two trials where the top three from each one would qualify for the final plus the following two fastest teams. Mira Costa barely won their race, but Amy and Emily didn't go all out, just fast enough to qualify. When it was time for the final, Mira Costa was in Lane 6. Right from the start, in the backstroke, Mira Costa took the lead. After the breaststroke, they were still ahead by two yards. Amy increased the lead to half the pool, and Emily finished the race off by almost the pool's length. When it was announced that they had set a new state record, we all jumped up and hugged each other. All of the girls from the team ran up and hugged the four girls.\n\nThe 4x100 yard medley relay was pretty much a repeat of the 4x50 yard medley relay. Mira Costa won handily and set another state record in doing so. Having talked it over last night, Amy and Emily decided to compete in the 4x200 yard medley relay, even though they hadn't originally signed up for it. Amy wanted to finish her career on a high note, and Emily felt strong enough to do it. They didn't compete in the trials, but Mira Costa did just make the final. When it was announced that they would compete in the final, a buzz went up through the crowd since they hadn't been expected to compete.",
        "Unlike the previous two events, Mira Costa fell behind and was fourth when Amy hit the water. By the time she finished her leg and Emily hit the water, she had just taken the lead. Emily poured it on and finished well ahead of the second-place finisher. They didn't get the state record, but they did guarantee Mira Costa would win the championship, no matter what happened in the final event.\n\nFinally, the events were all done, and the trophies were awarded. Mira Costa won, and everyone supporting them was happy. When Amy and Emily finally came out to join us, they were tired but happy. Hugs were exchanged all around before we took off and got lunch at El Pollo Loco.\n\nFriday, we spent doing touristy things around the Sacramento area. We went to the Crocker Art Museum, the Sacramento Zoo and spent some time in Old Sacramento. Also, we visited the Pony Express Statue, the Tower Bridge, and the Wells Fargo Museum. We had lunch at Fanny Ann's Saloon, and the burgers were delicious. After a long day of fun, we packed it in to get ready for our flight in the morning.\n\nWhen we got back home and settled in, Judy and I made plans to celebrate my 42nd birthday coming up next week. Betty wanted to fix dinner for all of us, so I agreed, as long as she promised to make her cheesecake. She did, and we all enjoyed it. I was so happy to be surrounded by family. That night, Judy made sure to make me happy. Of course, I made sure I pleased her, too, before we fell into an exhausted but satisfied sleep.\n\n***\n\nWe had some logistics to take care of before we could combine our households. There was no way we'd be able to find a five-bedroom house near enough to Raytheon to commute to work quickly. If I sold my place, where would Grace and Kathy live? For now, Judy and I would spend most of our time together at her house since Mark had Grace and Kathy to take care of him when I wasn't there. Of course, we spent time together at my place when Amy and Emily stayed with their grandparents. Once Mark was off to college, we'd be able to move into Judy's home, and I could sell my condo.\n\nJune 1995\n\nNow that Matthew had come back home from college, it was time to plan and execute our trip to Dayton. Judy and I had discussed this, and we were both looking forward to meeting up with Alex while we were there. While we were planning when to go, we decided to call Alex and check with her to make sure she would be available while we were there.\n\nI dialed Alex's home number and put the phone on speaker. After three rings, she answered, \"Hello?\"\n\n\"Alex, this is Virginia and Judy. I have you on speaker,\" I said.\n\nAfter a short pause, Alex said, \"Hello Virginia. Hello Judy.\"\n\n\"Hello, Alex,\" Judy said. \"It's good to hear your voice again.\"\n\n\"It's good to hear from you again, Judy. So, what's the occasion?\" Alex asked.\n\n\"We're planning to visit Dayton, and we wanted to see if you would be available to meet us while we were there,\" I said, smiling at Judy.\n\n\"I'd love to see you two,\" Alex answered. \"When do you plan to be here?\"\n\n\"How's next week work for you,\" Judy said, looking at me with a smile on her face.\n\n\"Other than Monday, I'm here all week,\" Alex answered.\n\n\"That's great,\" I said. \"We're thinking we'll be there on Wednesday evening and leaving Saturday morning.\"\n\n\"That works for me,\" Alex replied. \"When do you want to get together?\"\n\n\"How about we do dinner Wednesday evening?\" Judy asked. \"We're bringing the kids with us, so it'll be a crowd.\"\n\n\"That sounds great. I've always wanted to meet your girls and Virginia's boys,\" Alex enthused.\n\n\"Okay,\" I said. \"We'll call you when we get in. Then we can meet up for dinner.\"\n\n\"Call me at home,\" Alex said. \"I'll be taking the day off.\"\n\n\"We will,\" I said. Locking eyes with Judy, I then said, \"Goodbye, Alex. I still love you.\"\n\nI heard a sharp intake of breath before I heard Alex say, \"Goodbye, Virginia. I still love you, too.\"\n\nJudy smiled at me, accepting my declaration of love for Alex before she said, \"Goodbye, Alex. See you next week.\"\n\n\"Goodbye, Judy,\" Alex returned.\n\nWe then hung up. I looked at Judy and said, \"Alex will always have a special place in my heart. I hope you don't mind?\"\n\n\"No, I don't mind,\" Judy responded. \"She holds a special place in my heart, too. Thanks to her, I found out I could love a woman ... that I could love you.\"\n\nWe leaned in and kissed, the world going away for a while as our lips pressed together. We broke the kiss, breathing heavily, and started planning our trip for next week. I called the airport and got our tickets on TWA, and we would fly through St. Louis to Dayton. I also reserved rooms at the Red Roof Inn on Miller Lane, just a few minutes from Dayton Memorial Cemetery. I got three rooms, one for Judy and me, one for Amy and Emily, and one for Matthew and Mark.\n\nWednesday broke, and we were all packed and ready to leave for Dayton. Grace drove me, Matthew, and Mark to LAX, where we would meet up with Judy, Amy, and Emily. They were taken to the airport by Joe. We got there just minutes apart, so I got to give Joe a hug before he helped with the luggage.\n\nWe made our way to the counter and got our tickets and luggage checked. We went to the gate to wait for our plane. I was nervous, not about the flight, but about getting together with Alex tonight. I took Judy's hand in mine and squeezed it, trying to release some tension, and Judy squeezed back, letting me know she was there for me. Matthew and Mark acted stoic about the trip. On the other hand, Amy and Emily were excited. They were practically jumping up and down in excitement about the trip.\n\nFinally, our flight was called for boarding. After I made sure everyone had their tickets ready, we lined up to get on board. We quickly boarded the aircraft and found our places. I had managed to get all of our seats together on the right side of the plane. I sat with Judy while Amy sat with Emily in front of us, and Matthew sat with Mark behind us.\n\nAmy and Emily were excited about the trip, not having flown before. Matthew and Mark had flown from Dayton to LAX, so they have done it previously. Judy has gone on business trips, so she was used to flying. Of course, I'd flown on business in the Air Force over a hundred times, not just on commercial flights, so I was pretty jaded about flying. I enjoyed observing Amy and Emily as they experienced a takeoff for the first time. They really enjoyed it, so I didn't have to worry about that.\n\nI held Judy's hand during takeoff. While she had flown before, she still didn't like takeoffs. She squeezed my hand tight when the plane tilted up before breaking contact with the ground. After that, she was okay, turning and smiling at me once we were up in the air. Amy and Emily were so excited looking out the window as we flew out over the ocean before turning around to head east.\n\nThe flight lasted for three hours before we landed at Lambert-St. Louis International Airport in St. Louis. Luckily, we didn't have to change planes before leaving to go to Dayton. We did get off the plane to stretch our legs and get some lunch in the concourse, and we had to hurry and finish our lunch when they started boarding our flight. We made it back safely to our seats, and I again held Judy's hand during the takeoff.\n\nOne hour later, we started our descent into James M. Cox Dayton International Airport. Once we deplaned, we went to get our luggage before heading to Avis to get our rental. I rented a 1995 Ford Aerostar van so we could all ride together. We loaded up the van and headed to our hotel. Once there, we checked in and unpacked our luggage.\n\nOnce we were all unpacked, Judy and I sat down and called Alex. When Alex answered the phone, I could tell she was excited to be able to see us. We made plans to meet at Olive Garden at 7 PM. We all exchanged goodbyes before hanging up. Judy and I hugged each other before we went to get ready for dinner. Once we rounded up everybody, I drove us south on Miller Lane to the Olive Garden, a half-mile down the road. We piled out of the van, and we went inside. I got us a table for seven and sat down with Judy to wait for Alex.\n\nAlex walked in while we were still waiting for our table to be ready. She looked so lovely in jeans and a polo top. Her long hair was in a French braid like mine was. Her face lit up when she saw us, and Judy and I stood up and headed toward her. I got to Alex first and pulled her into a hug when she hesitated slightly. I laid my right cheek against her chest and whispered, \"I love you, Alex. Thanks for coming.\"\n\nAlex tightened her arms around me and whispered back, \"I love you too, Virginia.\"\n\nAfter a beat, I stepped back. Judy then stepped in and hugged Alex tight. \"It's so good to see you again, Alex,\" she said.\n\nAlex hugged Judy back and said, \"It's good to see you too, Judy.\"\n\nWe then introduced our children to Alex. Alex hugged Amy and Emily and shook hands with Matthew and Mark. Just then, the hostess called my name, and we trooped to our table. Alex sat at one end with Judy and me next to her. Amy and Emily sat beside Judy while Matthew and Mark sat next to me. While waiting to order, Alex struck up conversations with our children, wanting to know what they were up to. Judy and I just sat there enjoying shared looks as Alex gushed over Amy and Emily's swimming exploits and Matthew and Mark's soccer exploits.\n\nOnce our food arrived, Amy and Emily talked with Matthew and Mark while Judy and I chatted with Alex. We talked about Alex's career and our careers with Raytheon. The conversation came around to the topic of things we all had in common. Judy and I both reassured Alex that we were okay with having shared sexual experiences with each other. Then I mentioned Megan McNeil and how Judy and I both knew her. Alex's eyes grew wide at that, and she asked, \"You both knew Megan?\"\n\n\"Yes,\" I replied. \"Judy and I both knew Megan before she went off to MIT for a tenured teaching position.\"\n\n\"Oh?\" Alex said, her face lighting up. \"I knew Megan before she went on sabbatical to teach. I was working in the Medium Launch Vehicles SPO at LAAFB.\"\n\nWhen Alex said that, I saw a look of wonderment come over Judy's face. She turned to Alex and said, \"So, you were the Major that Megan cried over when she left to go teach. Megan was totally in love with you, but she said she had to pursue her dream of teaching.\"\n\nAlex teared up and asked Judy, \"Megan really said that to you?\"\n\n\"Yes,\" Judy replied, reaching out and taking Alex's hand. \"Megan and I were very close friends. If I hadn't been married, I think we would have had a relationship.\" Looking over at me, she continued, \"I can't believe we've all loved the same women. First, it was you, Alex, and now, Megan. What a small world.\"\n\nI reached over and took Alex's free hand in mine, and at the same time, reached across to take Judy's free hand in mine. I teared up, thinking about Megan and how she had first cared for Judy, then loved Alex, and then loved me. I chimed in with, \"Yes, it is a small world.\"\n\n\"Megan and I never did more than kiss the one time, but I really loved her,\" Alex said. I squeezed her hand in sympathy.\n\nBefore things could get too serious, Amy noticed the quiet from our end of the table. She decided to break the silence and asked, \"Alex, what are your plans for your next assignment?\"\n\nWith the tension broken, Alex, Judy, and I let go of each other's hands and sat back. Alex replied, \"I plan to work an assignment to become commander of one of the Air Force's Software Development Centers. Hopefully, it will be in a couple of more years if an opening comes up.\"\n\n\"That sounds wonderful,\" Amy said. Judy and I both nodded in agreement.\n\nSwitching back to lighter topics, we quickly finished dinner. Alex insisted on covering the bill, so we all thanked her for her generosity. As we left the restaurant, I turned to Alex and pulled her in for a hug. I then tilted my head up, put my right hand behind her head, and pulled her in for a kiss. Alex stiffened at first, but when she saw Judy nod, she responded to my kiss, pressing in and deepening the kiss. Before it got too intense, we broke, and I said, \"I still love you, Alex.\"\n\n\"I still love you, Virginia,\" Alex said.\n\nI turned away, and Judy took my place. She took Alex in her arms and pulled her in for a kiss. Alex returned the kiss as I looked on, happy for Alex. When they broke their kiss, Judy said, \"Take care, Alex. Goodbye.\"\n\nAlex replied, \"You, too, Judy. Goodbye.\"\n\nI took Judy's hand, and we stood there, watching Alex walk away. I turned to Judy and said, \"We're both lucky to have known Alex.\"\n\n\"Yes, we are,\" Judy replied as we turned and headed to our van, hand-in-hand.\n\n***\n\nThursday morning was beautiful. It promised to be a sunny day, which I really appreciated. As we all got ready to go over to Bob Evans for breakfast, I thought about what we would do today. I started tearing up at the thought of saying goodbye to Bonnie again. Judy sensed my mood and came over and hugged me before saying, \"I love you, Virginia.\"\n\n\"Oh, I love you, Judy,\" I said, laying my right cheek on her chest as I returned her hug.\n\nOnce I gathered myself, I pulled back and said, \"Today is a day of celebration. No more tears.\"\n\n\"Yes, it is,\" said Judy as we turned and headed out to gather everyone up and walk across the parking lot to Bob Evan. We had an enjoyable breakfast. Amy and Emily were decked out in lovely sundresses and low-rise sneakers, as was Judy and I. Matthew and Mark were in slacks and button-down shirts. Everyone was discussing the plans we had for later today and tomorrow. I looked forward to showing some of the sights in the Dayton area to Judy, Amy, and Emily.\n\nAs I sat there, I thought that Matthew and Mark hadn't been back to the cemetery since the funeral. They were a little subdued, but Amy and Emily did their best to cheer them up. Judy and I exchanged looks as we enjoyed how the four of them got along so well.\n\nFinally, we finished breakfast. We went back to the hotel and got ready to go. Suddenly, it came to me what I would be doing today, and I teared up again. Judy, sensing my change in mood, came up behind me and wrapped her arms around me, kissed the top of my head, and said, \"I love you, Virginia.\"\n\nI replied, \"I love you, too, Judy.\" I turned around and wrapped my arms around Judy and said, \"Oh, Judy, are you really okay with this? That, as much as I love you, I can't love you with my whole heart because part of my heart still belongs to Bonnie?\"\n\n\"Yes, Virginia, it's okay,\" Judy said, tightening her arms around me. \"As much as I love you, part of my heart still belongs to Jon. That doesn't mean we can't love each other as much as we can. Bonnie is still here, in Matthew and Mark. Jon is still here, in Amy and Emily. We just need to learn to live and love with that.\"\n\n\"Yes,\" I answered before stepping back. Dashing the tears out of my eyes, I smiled at Judy and said, \"Let's go.\"\n\nWe all went out and got in the van I had rented. Matthew and Mark handed us into the front seats before they helped Amy and Emily into the back. Once everyone was in and buckled up, we headed out. Five minutes later, we came to the entrance to Dayton Memorial Park. As we wended our way through the cemetery to Bonnie's grave, we noticed all of the flags placed on many of the graves for Memorial Day. There were many military people buried here because of the nearby Wright-Patterson AFB and the VA hospital.\n\nFinally, we made it to Bonnie's gravesite. We got out and walked over to stand by her gravestone. Matthew went first and knelt down in front of the marker, crossing himself before spending a minute silently talking to his mother. When he finished, he crossed himself before standing up and stepping back. Mark took his place and repeated the same process. When Mark stepped away, Amy and Emily both stepped up, held hands, and knelt together before crossing themselves. When they were done, they crossed themselves, stood up, and stepped back.\n\nNow, it was our turn. With Matthew, Mark, Amy, and Emily gathered behind us, Judy and I knelt before Bonnie's gravestone. After crossing ourselves, I took Judy's right hand in my left hand. As one, we reached out and touched her carved name as I said, \"Bonnie, I kept my promise. I found someone to love and to hold and who loves and holds me. This is Judy. We love each other very much.\" I teared up as I felt a sense of relief fall over me. At that moment, I knew Bonnie had accepted the fact I had kept my promise. I turned my head to Judy just as she turned her head toward me. We were both teary-eyed as we held our gaze. I then heard a whistling of wings and a mourning dove landed on Bonnie's gravestone. We both turned our heads and watched the dove as it sat there, seemingly looking back and forth between us. Finally, its curiosity apparently satisfied, it cooed before flying up and away, the wind again whistling through its feathers.\n\nWe stood up, and I teared up as I turned to Judy and said, \"Bonnie approves of us.\" We wrapped our arms around each other. As I stood there in Judy's arms, softly sobbing with happiness, I thought to myself, \"I've kept my promise, Bonnie. Now, you need to keep your promise to me.\"\n\nWith that, Judy and I broke our hug, turned, and faced the rest of our lives together.\n\nEpilogue\n\nIt was a beautiful sunny day. I looked over and saw Judy standing there in a lovely sundress and flats. She was looking off into the distance at something. I just took the opportunity to look at her and marvel at how beautiful she looks, even as we will celebrate her 65th birthday later today. Her hair still fell to her shoulders and curled naturally. There was some gray in it, but it was still full and swirled when she would unconsciously move her head to toss it back. There were some wrinkles around Judy's eyes and mouth, but her face was still beautiful, and when she smiled, it went to her eyes, making them shine like beacons.\n\nWe married in 2008 when California legalized same-sex marriage. We were almost the first ones in line to get our marriage license the day it became legal. I wanted the whole world to know I loved this woman. When we exchanged vows and rings, I was so happy. When we looked at each other, both of our smiles were so big I thought our faces would split.\n\nWe're both retired now from Raytheon. We had both had stellar careers there, but with Raytheon's decision to move away from defense contracting, we both felt it was time to move on. We had both invested wisely and are worth millions. With the way California cities were deteriorating into anarchy and becoming third-world hellholes, we thought about picking up and moving out of the state. Fortunately, Manhattan Beach was still an oasis of stability, so we haven't had to make the hard decision yet.\n\nJust then, Judy turned and caught me looking at her. She smiled at me, and I thrilled, as I always do when she does. \"What are you looking at?\" she asked.\n\n\"A vision of beauty,\" I replied, smiling, as I always do when she asks me that. \"God, I can't believe how lucky I am to have her love,\" I thought to myself.\n\nBefore celebrating Judy's birthday, we're making our monthly pilgrimage to Pacific Crest Cemetery in Redondo Beach. It took some doing, but I had finally managed to get Bonnie moved out here from Dayton into a new grave so she could be with us. We managed to procure the next two spots next to Judy's gravesite so I could be buried between Bonnie and Judy. Judy, in turn, could be buried between Jon and me. We don't plan to find anyone else to love after this, so the arrangement works out all around.\n\nWithout having to say anything, we both kneeled in front of our respective former love's gravestones. I reached out and touched Bonnie's engraved name and raised a prayer to Him to look over her. I thought about Bonnie and how much I loved her. Even after all this time, I still missed her. \"I'm coming home to you someday,\" I thought. As much as I loved Judy, I was going to spend forever with Bonnie. She had promised to wait for me, and I was going to hold her to that promise.",
        "I looked over to my left at Judy, and I saw her talking to Jon. Her hand was on his gravestone, as mine was on Bonnie's marker. I knew that, as much as she loved me, she wanted to be with Jon afterward. I turned back to look at Bonnie's gravestone, not looking at the headstone next to hers on the right. As long as I don't acknowledge its existence, I won't cry. I talked to Bonnie, telling her what's been going on in my life since the last time I had been here.\n\nI stayed there until Judy came up behind me. She knew why I wouldn't look, so she took my elbow and stood me up. Taking me in her arms, she said, \"You know you have to look, my love. It's not going to disappear.\"\n\nWe turned as one and stopped in front of the gravestone. Judy let go of me and stepped back, allowing me to kneel before the marker with the name Matthew Hanratty on it. I teared up and started sobbing as I reached out and touched the cold granite that stood as a testament to a beautiful man's life ending much too soon. The American flag with the Bronze Star medallion on the pole next to the gravestone gave testimony to Matthew's service to his country. My fingers trailed over the dates, August 1976 -- July 2002, as the memory of how proud he had been in being commissioned in the US Army went through my head. He had just pinned on his Captain bars a week before his convoy was ambushed in Afghanistan. His HMMWV took the mortar shell center mass, and only a few parts of the vehicle, and the people in it, were found afterward.\n\nI read the verse carved into his gravestone, from the song 'Hallelujah' by Leonard Cohen:\n\nI did my best, it wasn't much\n\nI couldn't feel, so I tried to touch\n\nI've told the truth, I didn't come to fool you\n\nAnd even though it all went wrong\n\nI'll stand before the Lord of Song\n\nWith nothing on my tongue but Hallelujah\n\nAs I wept, my mind went to that day when I came as close as possible to knowing how Grace had felt when Bonnie had died. I was just coming out of the kitchen when the doorbell rang. Since I was expecting company, I went to the door and threw it open. When I saw the two uniformed officers standing there, the one by the door asking, \"Mrs. Hanratty?\" as the one directly facing me slowly raised his right hand to salute me, my world crashed down around me. I sank to my knees, screaming, \"Noooo ...,\" as I realized what had happened. Thank God Judy was there because I had totally lost it.\n\nAs bad as that had been, telling Grace that Matthew was dead nearly killed me. The look on her face when I told her broke my already damaged heart. She was never the same after that, and I believe she died inside that day. If it hadn't been for Kathy and Mark, I think she would have just lain down and died.\n\nI said goodbye to Matthew, promising to see him one day, as Judy came up and said, \"It's time to move on, dear.\"\n\nI stood up and took Judy's hand in mine as we walked over to two adjacent gravestones. As they had lived their lives together, they had died together. They had been together for 70 of their 88 years on earth. Grace had been born two hours before Kathy, and she had died two hours before Kathy. Kathy had been in so much pain that last year, but she had refused to let go. Grace was nearly blind from macular degeneration. Kathy was going to be there for Grace, no matter what. In my heart of hearts, I believe Grace willed herself dead so Kathy would be able to let go and escape the horrible pain she was suffering. When the nurse found them that morning, Grace was in Kathy's bed, spooned up against her, and they had died holding hands.\n\nWe walked over to a new gravestone that had just been installed last fall. Judy's father, Joe, was buried there now. He had died of a heart attack. I had loved him as I had my own father, and losing him was nearly as hard for me as it was for Judy. Betty is living with us now. We've put her up in the mother-in-law suite in our home we bought when we had down-sized after all of the kids had moved out.\n\nFinally, our visit was done, and we were free to go. As we got in our car to leave the cemetery, I thought about Alex. Alex had finally found her love, and they would soon be celebrating their twenty-second anniversary together. When same-sex marriage was made legal in Massachusetts in 2004, they got married. They have been getting together with us for a week in Gatlinburg every year since they got together in 1998. We always rent the same chalet up in the mountains just outside Gatlinburg. It had survived the great fire in 2016, the fire coming within a half-mile of the chalet before the winds shifted and blew it away. We will be meeting them again this year despite the pandemic.\n\nAs we pulled into the driveway, we spied the cars that were already there. Judy and I looked at each other, big smiles on our faces. The rest of our family was already here to help Judy celebrate her birthday.\n\nAfter Matthew's death, Mark and Amy were thrown together in grief and fell in love and married. They have gifted us with three beautiful grandchildren. Mark had seen his dream of becoming a lawyer come true. Amy had ended up also going into law while swimming her way through college. They are both partners in their law firm now.\n\nEmily was here, too. She had actually tried out for the 2000 Olympic woman's swim team. Emily went on to get her MBA and is now a CPA in a major firm in San Francisco. She is happily married to Shari, a beautiful woman and a CPA like Emily. The two of them are planning to open their own CPA business soon.\n\nJudy and I got out of our car, held hands, and walked into the house, anxious to be with our family.\n\n***\n\nTo quote Winston Churchill: \"Now this is not the end. It is not even the beginning of the end. But it is, perhaps, the end of the beginning.\" There is one more chapter in Virginia's story to read since one more promise needs to be kept. This is explored in the story 'What Dreams May Come,' which can be found in the 'Non-Erotic' category. You should go and read it now.\n\nI still have to write 'No More Perfect Kisses' and 'Lady of the Lamp' before the arc is completed. Also, Alex's story, 'Like Butter on a Summer Day' is complete. This story picks up from the end of 'Tomorrow is Promised Pt. 02.' As I've said before, there's plenty of tales I can still write in the \"Virginiaverse\" (and I will). Still, I intend to branch out and see if I can write one or two stories outside the \"Virginiaverse.\"\n\nI do want to hear from you. As a writer, I love getting comments about the stories I write (even critical ones). I'm also open to suggestions for other tales in the \"Virginiaverse\" as plenty can be written about the parts of the main characters' lives not covered yet. There are minor characters mentioned that can have their lives explored if there is any interest in them. For instance, Maonaigh had expressed an interest in a follow-up to 'The Gift,' which is now published. It is titled 'A Chance Encounter.'"
    ],
    "authorname": "Candy_Kane54",
    "tags": [
        "cunnilingus",
        "lesbian romance",
        "masturbation",
        "romance",
        "strap-on"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/promises-made-and-promises-kept-pt-05"
}