{
    "title": "The Gulf Coast Move Ch. 05",
    "pages": [
        "This is the fifth and final chapter of a series. While the author hopes that this story can stand on its own, this story will make a lot more sense if you have read the previous four chapters of \"The Gulf Coast Move.\" This story draws on some real experiences but is a work of fiction. Any resemblance to any real person or entity is coincidental and unintentional. As a work of fiction, this story and this series should not be taken as depicting the actual tolerance of public nudity or public sexual conduct in Florida or any other jurisdiction. Additionally, readers should remember that they are reading this story on a website devoted to erotica. The sexual conduct depicted here is not necessarily representative of how most nudists/naturists behave. I apologize because this final chapter ran a bit long. Thank you for reading this.\n\n*****\n\nThe last night of Ellen's and Kent's visit was special. When Samantha and I saw the two of them by our pool, nude in the moonlight and fondling each other, we decided to join them. Ellen and Kent seemed to welcome our presence. The four of us ended up in the pool. Ellen was backed against the side of the pool while Kent fucked her. Samantha and I were right next to them having our nightly session of lovemaking. It was about as close as we would get to a foursome while still honoring Samantha's wish that she and I only have sex with each other. I wished that Ellen and Kent had loosened up earlier in their visit and was sorry that they left the next day.\n\nA couple of days after Ellen and Kent left, Ian called from Tampa. Ian opened the call by saying, \"Harry, do you remember when you and Carol first moved in and we told you that I had met Kristen at a clothing optional resort?\" \n\n\"Yeah, I remember that,\" I replied.\n\n\"And you remember that she worked there at the time and I'd been hired to deal with a security issue?\" Ian went on.\n\n\"Yes,\" I said.\n\n\"Well,\" Ian continued, \"the same resort has called. They want me to do a thorough security review. They mentioned that their IT systems were older so I thought I could use you to review those. I've tentatively told them I can be there next week. They're willing to comp two rooms Wednesday night through Saturday night. If you're available, I thought we could take the girls and go up there Wednesday evening. You and I can start first thing Thursday morning. The girls can hang out by the pool or whatever. We should be free to join them by Friday afternoon and the four of us can spend the weekend up there.\"\n\nWe'd mutually agreed to early termination of my non-compete with the company to which Carol and I had sold our business, so I asked Ian what he intended to pay me, and his answer seemed reasonable. I also asked Samantha if she wanted to go. I wasn't too interested in going with Ian and Kristen but leaving Samantha behind. Fortunately, Samantha was more than happy to go.\n\nThe highlight of that weekend was Saturday night in the resort's nightclub. We had gone there for a little while on Friday night and it had been slow. \"Tomorrow night will be a whole lot different unless this place has really changed,\" Kristen promised. It was.\n\nSamantha and I were not overly enthused about a second night at the night club, but Kristen insisted, and there weren't many other options. Not wanting to dress, we had dinner at the resort's restaurant. The food was only ok but in which we could dine nude. After dinner, the four of us took a nude walk around the resort. Kristen was adamant that we had to wait to go to the night club. \n\nWe went into the night club about 9:30 that night. It was about two-thirds full. \"It will get a lot busier,\" Kristen predicted. The four of us were completely nude except for shoes. We were about the only people who were. Most people there were partially dressed in a way that accentuated their exposure. What caught my attention was a blonde with a great body who was wearing only long white gloves, white patent leather boots that stopped just above her knees, and a string of pearls tied around her waist. It was a sexy look.\n\nThe night club did fill quickly. Before long, it was impossible to get to the bar without squeezing through a crowd of people. That can be entertaining when you are nude and everyone else is partially nude.\n\nThe four of us drank for a while before Samantha insisted on dragging me onto the dance floor. We were able to create a small space to dance in, but we were both rubbing our bare asses against whoever was dancing behind us. What little space we had collapsed when the music changed to a slow song and more people came onto the floor. Samantha and I were just embracing and shuffling our feet. We were both sweaty when we came off the floor.\n\nI slid through people to the bar and got us more drinks. By the time I re-joined Samantha, guys were coming up and asking her to dance with them. Kristen was getting similar attention. Samantha politely declined all requests until a young, very well-built guy asked her. He was naked except for what looked like a pair of compression shorts that had been cut so that his dick and balls hung out in front. Samantha looked at me and followed the young man onto the dance floor when I nodded my head.\n\nStanding amidst the tables sipping my drink, I alternated between watching Samantha dance and stealing glances at Ms. white gloves and white boots. I'm sure that I wasn't the only guy doing that. I was pretty sure that she caught me looking too.\n\nSamantha danced three songs with the young man. As the third song ended, he leaned in and whispered something in Samantha's ear. She laughed but shook her head negatively. The young man looked a little crestfallen as Samantha came off the dance floor and, very ostentatiously, hugged me and gave me a kiss. \"What did he say to you?\" I asked Samantha.\n\n\"He asked me to go to a jacuzzi with him and fuck,\" she replied.\n\nBefore I said anything in response, we were interrupted by Ms. white gloves and white boots. She asked Samantha, \"May I borrow him?\"\n\nSamantha looked at the woman and at me. She smiled and said \"Sure.\" As the woman took my hand and led me to the dance floor, Samantha whispered in my ear, \"Meet you at the jacuzzi?\"\n\nI am not a good dancer. The woman, who introduced herself as Jill, didn't seem to mind. As we danced the first, upbeat, number, Jill asked, \"Is that your wife?\"\n\n\"Not officially,\" I replied, \"but we live together.\"\n\n\"She's a very beautiful woman.\" Jill said. I agreed.\n\nWe danced two upbeat songs together. I started off the floor when a slow song started but Jill grabbed my hand. \"Hey!\" she said. She wrapped her arms tightly around me and started to lead. Her bare tits were pressed against my chest. I glanced over at Samantha, who was smiling thank God, and tentatively but my arms around Jill's upper back. Jill reached behind herself and pulled my left hand down onto her bare ass. Jill was rubbing her triangle and bare thighs against my dick. I glanced at Samantha again. She was still smiling. I thought, \"what the fuck? Go with it,\" and held Jill much tighter.\n\nRubbing against Jill got me semi-hard. When the song finished, she took a step back, looked down at my dick, and said, \"Did I do that? Naughty me.\" Jill gave me a kiss on the lips. \"That was fun,\" Jill said, \"but I need to give you back to the beauty you came with.\" Jill led me back over to Samantha. Nodding her head down towards my dick, Jill told Samantha, \"I got him ready for you.\"\n\nSamantha laughed. \"That's fine,\" she said, \"so long as I finish him.\"\n\nAfter dancing with Jill, I thought that it would be wise to focus my attention exclusively on Samantha. We sipped our drinks for a time, saying nothing, and looking in each other's eyes. I reaffirmed in my mind that I was living with the greatest woman alive.\n\nA few minutes later, Kristen appeared again. \"It's stifling in here,\" she said. \"Want to go outside?\" Samantha nodded and we followed Kristen, sliding between people, to where Ian stood by the door. It was immediately much quieter when we went outside.\n\nThe night club was in a building near the main pool. We walked among the empty lounge chairs until Samantha pointed at the outdoor shower. \"There are still towels out,\" she said, \"I could really use a shower.\" The four of us showered as people walked past going to or from the night club.\n\nAfter our shower, we walked towards the small \"lake\" (really a pond) that was beyond the pools and Jacuzzis. There were a few people in some of the Jacuzzis and, from the sounds, I inferred that the prohibition on overt sexual activity in the public areas was not enforced at night. The lake had a small beach. There were no lights. Kristen and Ian walked off one direction along the beach while Samantha and I went the other. We were alone, walking along the beach naked and holding hands. I could hear some sort of birds in the woods on the opposite side of the lake.\n\nWhen we'd nearly reached the end of the beach, Samantha stopped and faced me. \"You know I love you very much,\" she said.\n\n\"I love you,\" I replied. We kissed. Samantha stroked my dick and I played with her clit.\n\nSuddenly, Samantha said, \"right here,\" jumped up a bit, and wrapped her legs around me. I cupped my hands under her ass as she slid down my body until I was inside of her. I stood in the sand holding Samantha, helping her ride up and down on my dick as we resumed our kiss. It took a great deal of effort, but most good things do.\n\nSamantha and I were so engrossed with each other that we were not aware that a third couple was walking along the until they were right beside us and the woman said, \"nice!\" Samantha came a few seconds later and then I shot inside her. It wasn't the best orgasm ever, but I was proud that we'd pulled off sex standing up. Because I was suddenly slightly dizzy, I slowly bent down until I could sit back in the sand. I was still holding Samantha and was still inside of her. As I sat down, Samantha gently pushed me back so that I was lying in the sand on my back with her on top of me. Out of the corner of an eye, I saw the other couple standing a few feet away. The man had a hand on his partner's breast. She had his dick in her hand.\n\nI'm not sure what Kristen and Ian did by the lake but they both had sand on themselves when we saw them again. The four of us took a second shower outside by the pool.\n\nExcept for my occasional project with Ian, our life was essentially a perpetual vacation. I was fine with that, but I sensed that Samantha wanted something more to do. Consequently, I was pleased when Samantha's friend Ellen called with an opportunity. As Samantha explained it to me, Ellen had another friend who worked for a huge media company. The company had created a subsidiary to operate online \"channels\" showing content focused on particular lifestyles. One, \"Nude Frontiers,\" was focused on non-sexual nudism/naturism. The company was looking for people to supply content.\n\nSamantha had a long phone call with someone at Nude Frontiers. She e-mailed them her resume and a video report she'd done for the Milwaukee TV station where she used to work. That led to a second call inviting her to submit an audition video on something to do with nudism. \"Oh,\" Samantha added, \"I'm supposed to appear nude in the video.\"\n\nSamantha had a very good video camera that was surprisingly light and compact. With it was a wireless microphone that had a reliable range of about 15 feet from the camera. We talked to Gulf Coast Naturists, who agreed to let Samantha video their next outing. \"I'll be doing interviews in the video,\" Samantha told me. \"You'll have to shoot the video.\" Of course, I'd do whatever was necessary to help Samantha. I was fine with the technology, but it took some practice for me to get the \"artistic\" aspects of shooting the video such as properly framing the shot and being conscious of light and shadow. Fortunately, Samantha had a program, and the skill, to edit the video after I took it.\n\nWith extensive help from the Gulf Coast Naturists, we made what I thought was a great audition video and sent it to Nude Frontiers. Samantha was getting a bit anxious when a couple of weeks had passed without any word from them. Finally, Samantha got another call. I stayed in another room. It was a long call and I had a sense that some negotiating was going on. Samantha came into my room when she finished the call.\n\n\"Here's the deal,\" Samantha told me. \"They like our work. They want us to supply videos, approximately 25 minutes in length, on nudist/naturist activities in North America. If they assign us to something, they'll handle getting the permissions to tape. If they approve a project we propose, we do whatever is needed to record without repercussions. They'd like two videos a month, but that's flexible both ways. They'll pay all our expenses, travel, lodging, etc., but they won't pay a fee for the work. They think that the benefit to us is going to nudist activities at their expense. I told them we'd do it.\" \n\nOur first assignment was to cover a \"Bare Buns\" race/fun run at a resort a bit north of Tampa. Nude Frontiers had already secured permission from the organizer for us to take video. Nonetheless, Samantha and I drove up there the day before the race. We met with the woman who handled the resort's media relations. After explaining who we were and what we were going to do, the woman said, \"Ok, so you'll be nude,\" pointing at Samantha, \"and you'll be clothed,\" pointing at me.\n\n\"No,\" Samantha replied, \"we'll both be nude.\"\n\n\"That's much better,\" the woman replied smiling.\n\nSamantha intended to run the race. She insisted that I could not take good video if I was also running. I think Samantha's real concern was whether I could finish a 10K run. Anyway, the media relations woman showed us the course. That let us identify good spots for me to record video and allowed me to find the shortcuts between those spots. I had spots at the start, at about 3K and 7K, and at the finish. I was confident that I could move from one spot to the other ahead of even the fastest runners.\n\nWe were at the resort early on race day so that Samantha could find runners to interview and, hopefully, one to feature. She found Lynn Martin, a 25-year-old from Jacksonville. Lynn was a serious runner and had run cross country in college. Samantha interviewed Lynn before the race. Lynn was clothed. Samantha and I were nude. The highlight of the pre-race interview was Lynn explaining how she had come to run the race.\n\n\"I run maybe 25 races like this a year and one or two marathons,\" Lynn explained. \"I'm not a nudist and I've never run naked before. My boyfriend saw an ad for this race online and dared me to run. I thought, 'what the hell, it will be a new experience.'\" Later in the interview, Lynn said, \"Yeah, I'm pretty nervous. Everyone here is very nice, but the idea of taking off all of my clothes and running away from them is pretty scary.\"\n\nLynn was kind enough to let us video her undressing for the race. I recorded her and Samantha starting the race and then sprinted to my spot at the 3K point. I may not have run in the race that day, but I did a lot of running. Samantha was still running with Lynn at the 3K point, but Lynn had pulled away from everyone by 7K. I got some good video from behind the finish line of Lynn coming in and breaking the tape, nude but for her shoes, with her ponytail flapping behind her. A couple of minutes later, I got video from behind as Samantha finished the race.\n\nWe interviewed Lynn again after the race. Both she and Samantha were nude this time. Among other things, Lynn's post-race comments included, \"Yeah, I'll definitely do more nude runs. This was great! Now, I've got to get my boyfriend to take his clothes off. Look! He's still dressed!\"\n\nThere was a post-race party and cookout at the resort. However, Samantha and I left soon after the race so that Samantha could edit the three hours of video I had shot and send it to Nude Frontiers. She e-mailed the edited video off around midnight that night. I was pleasantly surprised that the video was up on the Nude Frontiers website the following afternoon. Except for the insertion of some ads, it was exactly as Samantha had sent it. I took that as a good sign.\n\nA couple of weeks later, we were boarding a cruise ship in San Juan to cover a nude Caribbean cruise. I don't recall exactly how many hours of video I shot, but it was a lot and Samantha must have interviewed at least 50 or 60 people, including cruise ship staff. My favorite part, which made it into the hour-long version posted on the website, was shot during a stop in St. Maarten. Four couples had agreed to let us follow them. We followed them clothed as they shopped in Phillipsburg. We all took a cab to a place on the French side of the island called Orient Bay, which had a well-known nude beach. I was told that there had been a pretty nice clothing optional resort right on the beach that had been largely destroyed by a storm a couple of years earlier.\n\nThe video that I liked was of the four couples and Samantha getting out of the cab clothed. They walked to the beach and looked around. Then, all nine of them stripped down on the beach. (I had stripped before I started recording that segment).\n\nOnce we were home, Samantha edited our material down to an hour and submitted it. Nude Frontiers posted the entire video.\n\nA couple of days after Samantha sent in the cruise video, we got a call at home from Lynn Martin. Samantha put Lynn on speaker so that I could listen in. \"Yesterday I watched the video you posted of the race in Lutz,\" Lynn said. \"I had to do a bit of searching online to get your phone number. I had to talk to you.\"\n\nAlthough Lynn had agreed that we could video her, the part that made it into the final version showing her approaching the finish was full frontal. I was concerned that Lynn was going to complain about that and ask that the video be taken down. I was a little anxious until Lynn continued.\n\n\"That video is fantastic,\" Lynn declared. \"My parents even like it. I sent a link to my college coach and my old teammates. Is there any way that I can get a copy?\"\n\n\"I really don't know,\" Samantha said. \"We don't own it. I'll find out for you.\"\n\n\"Thank you. Thank you also for doing the video and getting me involved with it,\" Lynn said. Samantha was able to persuade Nude Frontiers to send Lynn a copy of the video. Without telling Nude Frontiers, we sent Lynn an unedited copy of all the video we had shot that day.\n\nOver the next several months, Samantha and I did pieces on Wreck Beach, Black's Beach, nude canoeing, even a nude square dance group. Then we were assigned to do a piece on a club near Las Vegas. Nude Frontiers had already gotten the club's permission for us to record there on a specific day. Samantha's boss at Nude Frontiers warned us that this piece might have more sexual content than what we had been doing and the company might decide to post it on a different, subscription site.\n\nThe club was only a short drive from the airport. The outside was not that impressive. Inside the lobby was a reception desk in front of a solid wall with one door. The door had a sign taped on it warning people that we would be taking video that day. The receptionist told us that the membership fee, waived for us, was $ 200 per person per year, payable upfront. Membership was only open to couples and this facility was strictly heterosexual. There was a sister club a few blocks away catering to gays and lesbians. Membership bought you use of the facilities. Services, such as massage, were extra. Full nudity was required throughout the club and you were required to sit on a towel at all times except in the jacuzzi. Offensive comments and non-consensual touching of others would result in immediate expulsion and cancellation of membership with no refund.",
        "The interior door in the lobby led into a locker room. Inside the locker room were more signs warning members that a crew would be in the club making a video for public release that day. With those signs, I expected that Samantha and I were going to be the only people there apart from the staff.\n\nSamantha and I took off our clothes and went through a door on the opposite end of the locker room from the lobby. We entered a very large well-lit room. Directly in front of us was an inground swimming pool. Along both sides were lounge chairs. My fear that no one would be there was dispelled. There were several nude people in the pool or in the chairs and a large group at the bar on the far wall. Along the wall just to our left as we had entered this room was a tiled area with several showerheads. \n\nThere were hallways to our left and right. Samantha said, \"Let's look around before we start recording.\" I followed as she went down the hall to our left. There appeared to be saunas and steam rooms on both sides of the hall. At the end of the hall was a dimly lit room with a smaller pool that had a waterfall pouring into it. A young-looking couple sat nude under the waterfall holding hands.\n\nRetracing our steps, we explored down the other hall. It led a short way to a large room with several Jacuzzis of varying sizes. A couple of them were in use. This room was only about half as deep as the main room we'd come into first. There was a wall with a door on the side of the room towards the rear of the building. Walking up to the door, we saw a sign bolted to the door which read \"SEXUAL CONDUCT PERMITTED PAST THIS POINT.\" Naturally, we opened the door.\n\nThe room we stepped into was also dimly lit. Once our eyes adjusted, we saw four more jacuzzi tubs, several lounge chairs with cushions covered with sheets, and, in one corner of the room something on the floor that looked to me like a wrestling mat. Samantha looked at me and lifted one eyebrow before saying, \"Ok. Let's get to work.\"\n\nI followed Samantha back to the main room and to the bar. Samantha has a real gift for getting complete strangers to talk to her, and it worked again that day. With all the bar patrons' acquiescence, I turned on the camera. Samantha took the microphone and began interviewing people. After almost an hour at the bar (with no drinks for us), we started a video tour of the facility. The club reminded me a lot of a place we had gone to in suburban Chicago the day after Samantha's and Gwen's college graduation. The young couple was still in the waterfall pool. Samantha got an interview with them and with two couples sharing a jacuzzi.\n\nWhen we had thoroughly covered everywhere else, Samantha said, \"We have to include the sex room.\"\n\n\"I'm not sure anyone is going to be willing to go on video in there,\" I said.\n\nSamantha smiled and said, \"Get the tripod.\" I went back to our locker to get the camera's tripod and then followed Samantha into the sex room. After I had shot pictures all around the room, Samantha had me set the camera on its tripod focused on one jacuzzi. She pulled me in front of it and embraced me. We kissed and fondled each other until I was hard, and she was wet. Then Samantha let go of me and got into the jacuzzi. The camera recorded a couple of seconds of me with my hard on as I got in behind her. In the tub, Samantha straddled me and lowered herself down into my lap as she guided my dick into her.\n\nYou could only see our heads and shoulders on the video, but there was no doubt what we were doing; especially when Samantha and then I came. Samantha left our tub session in the edited video which she submitted to Nude Frontiers. I was a little surprised when they posted it, albeit with a warning at the beginning of the video. \n\nThe Las Vegas video had been up for a few days when Samantha's boss at Nude Frontiers, Leona Halsted, called. Leona asked to speak to both of us. Samantha put her on speaker. \"The Las Vegas video has more viewings than everything else we have up combined and a lot more than we projected,\" Leona said. \"Sam, your ability to get people whom you've just met to open up to you is unparalleled. But everyone here agrees that the two of you in the jacuzzi is the highlight. We'd like to see more of you both in future videos. Be as explicit as you like. If we can't put it on Nude Frontiers, we can put it on the subscription site. If we use video of the two of you fucking, we'll pay you for it.\"\n\nSamantha was looking at me with a huge grin. Her response to Leona was more tempered. \"We'll think about it,\" Samantha told Leona. \"Maybe if the situation is right.\" Samantha and Leona talked business for a few more minutes before ending the call. Once the call was over, Samantha came over to me. She took my dick in her hand. \"Apparently,\" she said with a smile, \"our viewers like to see this hard. I know it excites me.\"\n\nWe did several more trips and submitted several more videos over the next few months. None of them showed us making love. None of the situations were right.\n\nGwen and Jason visited for Christmas. We had a very nice family Christmas dinner at our house with Gwen, Jason, Kristen, Ian, Samantha, and me. It was very traditional except for the fact that we were all nude. Kristen and Ian also brought a couple of non-traditional gifts. Kristen had gotten cock rings for Ian, Jason, and me, which she insisted on putting on each of us. Ian had gotten jeweled butt plugs for Kristen, Gwen, and Samantha, which he inserted in each woman. \n\nWe were having drinks after dinner when Gwen and Jason finally made official what we'd all been expecting for some time. Smiling from ear to ear, Gwen announced that \"Jason has something to tell everyone.\"\n\nIn his typical low-key, matter of fact manner, Jason said, \"Gwen and I are getting married.\"\n\nWhile we were not surprised, we were pleased. Kristen, Ian, Samantha, and I gave the couple a short round of applause. Samantha asked, \"Have you decided on a date?\"\n\n\"We need to work that out,\" Gwen replied. \"We want to get married outside and we want to do it in the nude. So, we'll have to wait until the weather gets warmer. We also need to find a place where we have the wedding and someone who will officiate.\"\n\nKristen said, \"Maybe we can get the island Gulf Coast Naturists use for the wedding, if that appeals to you. Do you want to be nude for the reception as well?\"\n\n\"We'd like to be nude for the entire event,\" Jason replied. Gwen nodded her agreement.\n\n\"We could have the reception at our two houses,\" Samantha offered. \"Since Harry and Ian put in that walkway, people can go from our pool to yours without having to dress.\"\n\n\"Dad,\" Gwen said. \"I do want you to give me away. Sam, I'd like you to be my maid of honor. Can you both do that?\"\n\nSamantha and I both said, \"Of course.\"\n\n\"Well,\" Gwen said, \"we'd like both of you to be nude for the ceremony too. Is that a problem?\"\n\nI looked at Samantha. She smiled and said, \"Of course not. It will be fun.\" \n\nSamantha's last words to me that night, after we'd made love, were, \"It's good that Gwen and Jason are finally getting married.\" I wondered whether there was an implied message there. In fact, I was awake much of the night thinking about marriage. There was no doubt in my mind that I loved Samantha and wanted to live out my life with her. But there was a big age difference. Would Samantha want to be tied to a guy as much older than her as I was? Our relationship was working very well as it was. Should I try to fix something that wasn't broken?\n\nGwen's and Jason's wedding did not go exactly as Kristen had suggested. The owner of the Gulf Coast Naturists' island was more than happy to let us use the island. The problem was that the island was only accessible by boat and we couldn't find enough boats to carry all the expected wedding guests. None of the banquet halls in the area would allow nude use of their facilities. We finally decided that, while it would be a tight fit, the wedding would happen on the Woods' back patio and the reception would be spread over the Woods' property and ours. Kirsten, Ian, and I agreed to pay a contractor to build a temporary deck over the Woods' pool where the wedding would occur and that would be a small dancefloor for the reception.\n\nGwen and Jason came up with a list of about 60 people to invite. Guests were invited to the wedding followed by a reception/pool party. The invitation informed guests that \"the bride, groom, and wedding party will be nude throughout the day. Clothing is optional for other guests except nudity is required in the pool.\" Gwen explained that they thought they should tell people in advance that there would be nudity. I thought that would cut down dramatically on the number of guests who attended.\n\nOnce again, I was wrong. So many RSVP's came in that we had to make a deal with a resort further up the island to park guests' cars in their lot. I was also surprised that Gwen and Jason had invited so many of their co-workers.\n\nGwen and Jason decided to hold the wedding at noon on a June Saturday. We spent most of that morning in the Woods' house getting ready. Jason had Ian serve as his best man. Samantha would be Gwen's maid of honor. At noon, we gathered at the door out to the Woods' patio. The combo we'd hired for the reception was playing wedding music and the woman minister from a local progressive church was waiting on the temporary deck. Ian opened the door and walked out nude, followed by his nude son. Looking out, I saw a few nude people: the Woodmans, Marty and Lisa. However, almost all the guests were clothed.\n\nSamantha looked exquisite, as she always does with nothing on. After Jason had reached the minister, Samantha turned and gave Gwen a peck on the cheek. Then, holding a small bouquet, Samantha walked out the door, down a few steps, and up onto the deck. Gwen also looked wonderful wearing only a gauzy something over her hair. We gave each other a quick nude hug. She took my arm and together we walked out and onto the deck. We stopped a few feet short of where Ian, Jason, and Samantha were standing. Gwen let go of my arm, gave me a quick peck on the lips, and walked forward to stand beside Jason. I turned and walked off the deck. I took a chair beside Kristen, who was also nude.\n\nI wish that I was technically skilled enough to imbed in this story a copy of the picture of Ian, Jason, Gwen, and Samantha standing nude on the platform in front of the clothed minister. It was a beautiful sight. The wedding ceremony itself was quick and straight-forward. Once Jason and Gwen were pronounced man and wife, Samantha and Ian stepped off the deck. Gwen and Jason turned to face their guests, took each other's hands, and received a round of applause. I can't remember Gwen ever looking more beautiful. I choked slightly because she looked so much like Carol at that moment.\n\nI followed the minister back into the Woods house, handed her a check for her services, and thanked her. \"I'm glad that I did it,\" she said, smiling. \"This was a new experience for me.\" Samantha came in, took my hand, and led me to our patio. We were hosting the pool party portion of the reception. We needed to make sure that the caterer and bartenders were ready.\n\nI had been skeptical that splitting the reception between our two patios would work, but it seemed to. People moved easily between the two backyards. Despite it being a hot day, no one was getting into the pool. Finally, Marty and Lisa jumped in. A short while later, I watched a couple about Gwen's age strip off and jump in the pool. The other guests who had started clothed stayed clothed.\n\nVirtually all my and Samantha's experience going nude had been around other nude people. Being nude in a group of people who were almost all clothed was a new experience for us. At first, the people whom we didn't know stayed away from us. However, as the day went on more strangers came up and talked to us. I don't know if they became comfortable seeing us nude or if it was the alcohol. Of course, when they talked to us, they also looked. Understandably, every man who talked to Samantha ran his eyes from head to toe. Late in the afternoon, I went up and teased her, saying \"Well, they can't undress you with their eyes, but the guys sure are taking a good look.\"\n\nSamantha smiled. \"You've been getting a pretty thorough visual inspection from most of the women here,\" she said. After a moment, Samantha said, \"You know, this is really fun.\"\n\n\"What is?\" I asked.\n\n\"Being naked with a bunch of clothed people,\" she replied. \"I feel like I've got a special privilege, and it's exciting having them look at me. Don't tell me that you're not enjoying having every woman here look at your dick.\"\n\nSamantha had a point. Being nude, we were centers of attention and it was gratifying to know that people were looking at my nude body and hers. \"Are we exhibitionists?\" I asked.\n\nSamantha hugged me. \"If we are, let's enjoy it,\" she said.\n\nWe were still hugging when a young woman with the photographer came up. \"Uh, Mr. and Mrs. Stone? We'd like to get a picture of the wedding party out on the beach.\"\n\nGoing nude on the beach was a risk, but we thought the occasion justified it. Samantha took my hand and we followed the young woman. As we walked, Samantha said, \"Mrs. Stone. I like that.\"\n\nThe guests started leaving shortly after sunset, which had been the plan. With a lot fewer people to entertain, Samantha and I finally had real drinks and dove into our pool. We swam a bit to cool off and were standing together in waist deep water when I heard Gwen's voice.\n\n\"Sam, Dad, could you come over here? There's someone I want you to meet.\"\n\nI turned and saw Gwen standing naked on the pool deck with the couple who had undressed hours earlier. Samantha and I got out of the pool and went over to them.\n\n\"Sam, Dad, I'd like you to meet Penny and Evan,\" Gwen said. To the couple, Gwen said, \"This is my Dad and his, um, well I guess I'll call Sam Dad's girlfriend.\"\n\nSamantha chuckled and said, \"'Girlfriend' is fine, for now.\"\n\nI said to the couple, \"You two were the only ones to skinny dip besides us confirmed nudists. I applaud you.\" \n\nPenny, who was very cute, said, \"We've never done anything like this before. We were really nervous taking our clothes off with all the people around.\"\n\n\"But,\" Evan interjected, \"we didn't know when we'll ever get the chance again, so we had to go for it.\"\n\n\"Besides,\" Penny said, \"Gwen was brave enough to go naked in front of our boss. I thought that I should too.\"\n\n\"Penny is the engineer I work with most of the time,\" Gwen explained. \"We both report to Robert.\"\n\n\"Was Robert here?\" Samantha asked.\n\n\"Yes,\" Gwen replied.\n\n\"With his wife,\" Penny added.\n\n\"Hey,\" Gwen said, \"now he knows what both of us look like naked. That's kind of cool!\"\n\n\"How has the experience been for you?\" Samantha asked Penny and Evan.\n\n\"Great,\" Evan replied.\n\n\"After I got over my nervousness, it has been so much better than I expected,\" Penny said. \"Not having clothes on is a lot more comfortable and, well, uh, it is kind of sexy to be naked around a lot of people with clothes on. I really don't want to get dressed, but we've got to drive back to the East Coast tonight.\" \n\n\"I think we've agreed that we have to find more opportunities to go naked,\" Evan said.\n\n\"You're welcome to go nude at our place anytime,\" Gwen told them.\n\n\"And, if you're on the Gulf Coast, you're always welcome here,\" Samantha added. \"There won't be anyone with clothes on though. We are always nude at home.\" Evan, who had been studying Samantha closely, gave me a slight grin.\n\nThe caterers had cleaned up and were gone by 9:00 p.m. Fortunately, they had left the unused booze which I'd paid for. Despite Kristen's insistence that Gwen and Jason should consummate the marriage in front of witnesses, they had already gone to Jason's old room. They were driving back to the East Coast in the morning to pack. They were flying out of Miami to Paris for their honeymoon on Monday. Among other things, they were staying several days at Cap d'Agde. I was a little envious.\n\nKristen, Ian, Samantha, and I were all in our pool (their pool was covered until Monday) with drinks close at hand. \"I think we pulled it off quite nicely,\" Ian said.\n\n\"It would have been better if more of the guests had gone nude,\" I opined.\n\n\"No,\" Kristen said, \"that was the best part for me: being naked while almost everyone else was dressed.\"\n\n\"I agree with Kristen,\" Samantha said.\n\n\"You girls just enjoy people looking at your bare tits, ass, and cunts,\" Ian teased.\n\n\"Like you don't get a kick from people looking at your bare dick,\" Kristen shot back.\n\n\"And, what's wrong with that?\" Ian retorted.\n\nAs if she'd just had some great revelation, Samantha said, \"You know, to be completely honest, I really do enjoy people looking at my bare body. I thought that I just enjoyed the comfort of being nude, but I really enjoy being seen nude. I didn't realize that until today. Are you ok with that Harry?\"\n\n\"Of course,\" I replied, \"as long as I get to be there nude with you.\"\n\n\"Always,\" Samantha replied. They way she said it and the look on her face made me feel very good. I moved a little closer to her.\n\nKristen had moved from leaning against the side of the pool to standing in the water in front of Ian. There was a silence during which I figured out that Kristen and Ian were fondling each other below the water. Ian broke the silence by saying, \"Well, I think that going nude in front of other people is a good start. But to really have fun, you need to fuck in front of other people.\" He lifted Kristen up. She wrapped her legs around him and slid down his body until Ian was firmly inside of her. With her arms on Ian's shoulders, Kristen began riding up and down his dick.\n\n\"I think we can go them one better,\" Samantha said. She took my hand and led me out of the pool. She went to one of the lounge chairs with a cushion and lay down on her back, spreading her legs. I got on top of her, slid into her, and began pumping her. Samantha was especially sensitive and energetic that night, and it had been a while since we'd made love outdoors. Those factors combined to make us both come sooner than normal. However, my orgasm was powerful and, judging by her convulsions, so was Samantha's.\n\nAfter we both came, I stayed in Samantha while we kissed. The thought in my mind was that I really and completely loved Samantha and wanted to spend every minute of the rest of my life with her.\n\nWhen I finally rolled off Samantha, I heard someone start clapping. I looked towards the walk leading to the Woods' patio and saw Gwen and Jason standing there naked. Gwen was clapping. \"Aren't you glad that our parents are so perverted?\" she asked Jason. \n\nFrom the pool, Kristen said, \"Well, you two wouldn't fuck for us. What did you expect?\"\n\nI hadn't expected to hear from Gwen or Jason while they were on their honeymoon. However, Gwen called from Cap d'Agde. \"How are you Dear?\" I asked.\n\n\"I'm standing on the balcony of our room,\" Gwen said. \"There's a small street below me with people in it. I'm naked and I'm standing at the railing with my legs spread apart. How do you think I am?\"\n\n\"Perfectly happy,\" I said.\n\n\"Perceptive,\" Gwen replied. \"Hey, the biggest reason I called,\" she went on, \"is to ask whether you've asked Sam to get married yet.\"\n\n\"What?\" I replied. \"No, of course not.\"\n\n\"Why not?\" Gwen asked.\n\n\"For one, I don't want to take the risk that she says no,\" I replied.\n\n\"Dad!\" Gwen replied sharply. \"Are you an idiot or what? Sam wants nothing more in the world than to marry you. At the wedding, she made a point of telling me how much she liked it when people called her 'Mrs. Stone.' Yeah, it'll be a bit weird having my best friend as my stepmother, but not that much weirder than her living with you; and I'm great with that.\"",
        "\"Is she going to leave me if I don't marry her?\" I asked.\n\n\"No, you selfish pig,\" Gwen replied, \"but,\" Gwen giggled, \"you need to make an honest woman out of her.\"\n\nWe had not done anything for Nude Frontiers in a while due to the wedding. Samantha was getting pressure from Leona to submit new material. Among the people Samantha called for leads was her friend Ellen in D.C. That call paid off. After being introduced to social nudity while visiting us, Ellen and her boyfriend Kent had made nudist friends in D.C. According to Samantha, one of Ellen's new friends was organizing a group of women for a nude raft trip on a wild river in West Virginia. They had found an outfitter that would let them raft nude on one specific weekend and would provide female guides. Ellen offered to call her friend to see if we could do a video of their trip. I was on the call when Ellen called back.\n\n\"My friend's name is Danielle Christensen. She's been a source for me in a government agency I can't name, but she's also an avid nudist. I talked to Danielle. She's generally ok with the idea, but the hang up is that they intended to do a women-only trip, leaving husbands and boyfriends at home. Danielle's not sure whether her group will agree to let Harry go along.\"\n\n\"But I need Harry,\" Samantha replied. \"I guess this won't work.\"\n\n\"Hold on,\" Ellen said. \"Danielle told me that the trip is a week from Saturday. The women are driving from D.C. on Friday and staying at some rustic lodge, I guess, in the mountains. She said they expect to be at the lodge by 6:00 p.m. a week from Friday. Danielle's willing to let you meet her group at that lodge on Friday to answer their questions. Then they'll decide whether you and Harry can go along. So, the downside is that you may make a trip to middle of nowhere West Virginia and get nothing out of it. It isn't a great deal, but it's the best I could get for you.\"\n\nFriday a week later, Samantha and I were on an early flight from Florida to Atlanta where we sat a couple of hours to get a flight to Pittsburgh where we sat again to catch a puddle-jumper to Charleston, W.Va. where we rented a car for a drive along the Kanawha River. The lodge was a ramshackle affair right on the river about 50 miles out of Charleston. We got there about 7:00 p.m. It had already been a long day.\n\nThe old man at the desk was expecting us and directed us into the rather small bar/lounge/dining room off the \"lobby.\" A group of twelve women were sitting in the room chatting. At first glance, the group seemed to include a wide range of ages and sizes. A tall, athletic-looking woman with dirty-blonde hair stood and greeted us. \"Hi, I'm Danielle Christensen,\" she said. You must be Samantha Collins and Harry Stone. We're ready to hear why we should let you video us with no clothes on.\"\n\nSamantha went to the center of the room and made her pitch. She explained the intent behind the video and told the women everything we knew about the Nude Frontiers website. Despite its overall shabby appearance, the lodge apparently had Wi-Fi because one of the women got Nude Frontiers up on her I-phone. The phone was passed around the room. Samantha also talked about her journalistic credentials, mentioning that a few of her stories were still archived on the website of the Milwaukee TV station where she used to work. Another woman with a notebook computer accessed those and the women watched a couple of Samantha's stories. Samantha also explained my role and promised that I'd be respectful.\n\nAn older, somewhat heavy-set woman said, \"This was supposed to be a girls-only trip. Is he going to get naked tomorrow?\"\n\n\"Yes,\" Samantha replied, \"Harry and I both always work in the nude.\"\n\nA short, young-looking woman with short black hair above a cute face asked, \"Mr. Stone, would you take your clothes off for us now as a show of good faith?\"\n\nSamantha looked at me. I was sitting in a corner, trying to leave the focus on Samantha. I leaned over and removed my shoes and socks. Then I stood facing the women and pulled my polo shirt over my head. I dropped that in my chair and unbuckled my belt. I undid the button on my jeans and pulled the zipper down. I pushed my jeans and my boxers to the floor, picked them up, and dropped them in the chair. I stood nude, with my arms at my side, facing the room of women.\n\nAfter I had stood there for probably about three minutes, Danielle said, \"Ok. I think you've answered our questions. Mr. Stone, you can get dressed. If the two of you will step out and give us a few minutes to talk among ourselves, I'll let you know if you can come along.\"\n\nSamantha had one last item to sweeten the deal. As I got dressed, Samantha told the room that, \"If you allow us to do the video, Nude Frontiers has authorized me to say that it will pay for lodging for all of you tonight and tomorrow night and will cover all of the outfitter's charges for the rafts and guides.\" \n\nSamantha and I went back to the lobby and killed time looking at brochures about tourist attractions in West Virginia. About twenty minutes later, Danielle came out smiling. \"The offer to pick up most of our costs sealed the deal. I hope that was sincere.\"\n\n\"It was,\" Samantha said, \"I have a corporate credit card with a very high limit with me.\"\n\n\"Great!\" Danielle said. \"You can both come along. We're meeting in the lobby at 7:00 a.m. You'll have to follow our mini-van in your car to get to the outfitter.\"\n\nEarly the next morning, we were at the rafting outfitter. Despite it being summer, it was cool, by my standards at least, in the mountains. We got into a couple of vans, each pulling a trailer with a large raft on it. It took about 40 minutes to get to the point where we'd put into the river.\n\nWhen the rafts were ready to go into the river, Danielle announced, \"Ok. It's time to go. Make sure that you have food, water, and sunscreen, and your life jacket, in your raft.\" Everyone went to their raft to check that their gear was aboard. When they had all gathered around Danielle again, she said, \"Ok, now it's time to get naked. Remember, clothes go in the bags. The outfitter will carry our clothes to the pick-up point in their vans so none of us will have any clothes available on the river.\" That brought a cheer from the group.\n\nAs Samantha and I stripped off, I glanced at the two young women who would guide the rafts. They were, of course, staying dressed. They both had bemused looks as they watched thirteen women and one man strip naked. After I had bagged my clothes and handed the bag to someone from the outfitter, I heard a female voice call out, \"I see a penis!\"\n\n\"Yes, but it belongs to me,\" Samantha replied good-naturedly.\n\n\"Crap, just the luck,\" I heard another woman say.\n\nIt was comfortably warm by the time we got on the river. The guides didn't complain when women started stowing their life jackets under the tubes built into the rafts for seating, so everyone was visibly naked in short order. I recorded as Samantha narrated and did quick interviews of the women in our raft. Within an hour, it was sunny and hot. The current was gently carrying the rafts along so many of the women got into the river to swim and stay cool. Since we were using a waterproof camera intended for scuba divers, I got into the water as well.\n\nAfter about three hours, the guides took us ashore at a point where the riverbank had a small beach. This was our lunch stop. After I had hauled our raft ashore, I turned and almost bumped into a blonde who looked to be in her forties. She looked me up and down and said, \"You're not cold.\" I had no idea what she meant and, I guess, it showed on my face. She pointed at my dick and said, \"no shrinkage.\" \n\nSamantha did more interviews during the lunch stop. Some of the women crossed their legs or turned sideways to the camera as I recorded their interviews. A few, like Danielle, stood facing the camera. Samantha also interviewed the guides. We had one of them on tape saying, \"It'd sure be nice if we could strip off too, but the company won't let us.\"\n\nWe hadn't yet seen anyone else on the river and I asked one of the guides about that. \"I'm not sure why,\" the young lady said, \"but this is the third summer I've worked this river and this weekend has always been dead. I guess that's why the company was willing to let you guys go nude, to get the business.\"\n\nAfter everyone had eaten and few had made discreet trips into the surrounding woods, we got back on the water. The second part of the trip was shorter than the first leg, but it did include some mild rapids that gave us some decent video. As we neared the take-out point, we passed a few men fishing from the banks. Some didn't seem to notice that two rafts full of naked women were going past. A few called out, but we couldn't hear what they said. That was probably for the best.\n\nAt the take-out point, we dressed, and I helped the guides get the rafts back onto the trailers. We rode about an hour back to the outfitter's shop where they gave each of us a beer and time to buy tee shirts and caps.\n\nIt was after 6:00 p.m. when we got back to the lodge. Danielle's group were the only guests at the lodge that weekend. The man I took to be the owner and a woman I took to be his wife served a simple dinner and then manned the bar. There was nothing else around, so there wasn't much else to do on a Saturday night except drink in the lodge bar. The women didn't seem to mind.\n\nAbout an hour and a half into the night's drinking, Danielle and the short young woman with the short black hair, whose name was Carrie, came up to Samantha and me. Danielle quietly said, \"Come with us and bring the camera.\" I picked up the camera and Samantha's wireless microphone and we followed Danielle and Carrie out of the bar and out of the lodge. \n\nOnce at the door, Danielle turned began walking along the front of the lodge building. \"The owner seems to like me,\" she said. \"Would you believe that he told me there is a sauna in back of this place? I thought we should check it out.\"\n\nWe turned two corners and there was a small freestanding building with a showerhead on the outside in the small space between the lodge building and the riverbank. There were a few chairs facing the river just beyond the small building and someone had placed a small stack of seemingly fresh towels on a table between the chairs. Danielle laughed. \"I guess Edgar hopes we'll use the sauna. Want to bet he's got a closed-circuit camera in there?\"\n\nCarrie was pulling her baggy tee shirt off over her head. \"Who cares?\" she said. \"A sauna sounds good.\" Danielle found some controls by the doorway that turned on a light inside and, we assumed, started heating the sauna up.\n\nDanielle said, \"I guess we're getting naked again\" and pulled her shirt off over her head. Samantha was wearing an older sundress which she pulled over her head. I pulled off my polo shit and undid my shorts. The four of us piled our clothes in the chairs, grabbed towels to sit on, and filed naked into the sauna. I made sure that my clothes hid out camera and microphone.\n\nThe sauna had obviously already been heating because it was already hot inside. I sat down next to Samantha and Danielle and Carrie sat next to each other across from us. We were immediately sweating, and the heat put a damper on conversation. That did give me a better opportunity to look at Danielle and Carrie.\n\nAs I mentioned, Danielle was tall, probably a bit over six feet, with dark blonde hair to her shoulders. She had what I'd call a \"girl-next-door\" face with a few freckles high on her cheeks. She had heavy breasts, a flat stomach, and long nicely shaped legs. Carrie was, at least, a foot shorter than Danielle. She had very short black hair but a very light complexion and a cute face. Though she hid it with baggy clothes, she had a very nice, proportional figure featuring pert breasts and upturned nipples. I also noticed that Danielle and Carrie were holding hands.\n\nWe all had enough at about the same time. Samantha and I followed Danielle and Carrie out of the sauna. We let the two women wash under the outdoor shower first. It was obvious that they liked and were familiar with each other's bodies. Samantha and I showered second and, I hope, the same was obvious of us.\n\nAfter we had toweled off, Danielle said, \"It's a nice night. Do you want to sit naked by the river for a while?' We agreed and the four of us put towels in the chairs and sat down. Carrie asked, \"Samantha, Harry, do you two just work together or is there more?\"\n\nSamantha laughed. \"It's a long story,\" she said. \"The short version is that Harry's wife died of cancer about three years ago. I had known Harry before that and came to help him after Carol passed away. We fell in love and have been together over two years now.\"\n\n\"I was in a bad way after Carol died,\" I added. \"Samantha was, literally, a lifesaver.\"\n\n\"Were you always nudists?\" Danielle asked.\n\n\"I've always been curious about it,\" Samantha said.\n\nI interrupted Samantha and said, \"My wife and I were converted to living nude by our neighbors after we had retired and moved to Florida. Samantha came down to visit us in Florida and we converted her.\"\n\n\"And I've loved every minute of it,\" Samantha added.\n\n\"That's cool,\" Danielle said. \"Hey, do you want to do an interview for your video. Find out how and why Carrie and I go naked?\"\n\nI got the camera and gave Samantha the microphone. The three women sat next to each other as I stood facing them at the very edge of the land above the river and recorded. Samantha asked many questions, which Danielle and Carrie seemed to answer candidly. All three women had their thighs together as the interview began but, as it went on, first Danielle and then Samantha and Carrie relaxed and let their legs spread apart. After a few minutes, all three women had their vulvas fully exposed to the camera.\n\nOut of the blue, Carrie gestured towards my dick and said, \"You and Harry fuck? That must feel nice.\"\n\n\"It does,\" Samantha replied.\n\n\"Understand,\" Danielle said, \"Carrie and I are very much into guys. We're just also very much into each other.\"\n\nGesturing at my dick again, Carrie asked Samantha, \"May I touch him?\"\n\nSamantha laughed and said \"Sure.\" She gestured for me to move closer to Carrie and said, \"Harry?\"\n\nI put the camera, still recording, on a table facing the women and stepped in front of Carrie. She reached out and ran her index finger along my shaft and then around the head of my dick where I'd been circumcised as a newborn. Frankly, it felt nice.\n\nLooking at Samantha, Danielle asked, \"May I?\"\n\nSamantha laughed again and said, \"Harry, would you please let Danielle touch your dick.\" I took a step to get in front of Danielle. She reached out and wrapped her hand around my dick. After holding me a moment, she said, \"Nice girth. What is he like hard?\"\n\nSamantha laughed a third time and said, \"If you get him hard, you'll find out.\"\n\nCarrie said, \"May I?\" Samantha and Danielle both nodded. I stepped back in front of Carrie. She cupped my balls in her left hand, using her index finger to stroke just behind my ball sac. She ran two fingers of her right hand along the underside of my shaft and around the circumference of my head. I was getting somewhat hard. Carrie said, \"Let's speed this up.\" She leaned her head to my dick. She didn't take me in her mouth, but she did extend her tongue and licked around my dickhead. I quickly got hard. Carrie leaned back and said, \"Nice.\"\n\n\"You two are monogamous, aren't you?\" Danielle asked. Samantha and I both nodded. \"Damn, that's too bad,\" Danielle said. \"Ok Ms. Collins, he's yours.\" Samantha stood up. I sat down in her chair and she sat on my lap.\n\n\"What did you think Harry?\" Samantha asked.\n\n\"Carrie and Danielle both have a nice touch, but I'm still loyal to the greatest woman I know,\" I replied.\n\n\"Right answer Harry,\" Samantha said.\n\n\"I could use another drink, but I don't want to get dressed to get it,\" Danielle said.\n\n\"I'll go,\" Carrie said. She popped out of her chair and pulled on her tee shirt, which was baggy but barely covered her ass. \"What do you guys want?\" she asked Samantha and me. Carrie was quickly back with the drinks. She shucked her shirt and the four of sat naked, drinking and talking, for a while longer.\n\nSuddenly, Samantha said, \"Harry, you left the camera on all this time.\" I'd done that on purpose. The camera could record many hours in its memory.\n\nDanielle laughed and said, \"You will edit out us playing with Harry's dick before you post the video?\"\n\nSamantha coyly said, \"I'll think about it\" and then laughed. After a second, she said, \"But, hey, we've got a great opportunity to get the closing scene. Everyone stand up.\"\n\nWe did and Samantha rearranged a chair and table so that the camera was aimed directly at the chair. \"Harry, sit in the chair,\" Samantha said. I did. \"Danielle, I want you to sit on one of Harry's thighs. Carrie you sit on the other. Harry, spread your legs a bit. Girls, turn so that you're mostly facing the camera.\"\n\nWe did as Samantha directed. Samantha took the microphone, sat on the ground in front of me and slid back until my dick was in her red hair. \"Someone lift Harry's dick up so that its visible on top of my head,\" Samantha said. Danielle lifted me up but kept her hand on my dick. Carrie reached out and put a hand on me also. Samantha turned on the microphone and said, \"This is Samantha Collins and Harry Stone for Nude Frontiers naked with friends somewhere in West Virginia.\"\n\nSamantha turned off the microphone and we all laughed. \"That will be a great ending,\" Samantha said. \"This is online, not broadcast, we can do that sort of thing.\"\n\nTo Carrie, Danielle said, \"I guess we'd better get dressed and go in. The other girls probably think we're having a foursome.\" To us, Danielle said, \"It was really good to meet you two. I hope that we get together again.\"\n\n\"If you're ever on the Florida Gulf Coast, either of you, you're welcome at our house,\" Samantha said. \"Just don't bring any clothes.\"\n\nMost of the other women were gone by the time we'd gotten dressed and back in the bar. Edgar, the guy who I assumed owned the lodge, gave us a leer which made me think that maybe he did have cameras of his own placed around the property. He sure hadn't put a lot of money into his building.\n\nThe four of us went upstairs. Danielle and Carrie went into a room down the hall. Samantha and I went into our room and undressed. \"This was a fairly good day,\" I said just to say something.\n\nSamantha came over, hugged me, took my dick in her hand, and said, \"It's about to get better for both of us.\"\n\nDanielle, Carrie, and their friends left the next morning to drive back to D.C. Samantha and I drove to Charleston airport. Charleston wasn't that far by air from where I used to live, where Samantha had been born and raised, and where her parents still lived. We waited in the airport several hours for our much-delayed commuter flight to our old hometown.\n\nGwen and Jason had returned from Europe while we were in West Virginia. As I was pacing in the airport, my cell phone pinged that I'd gotten a text. That annoyed me because I really dislike text messages. When I took my phone out, I saw that the text was from Gwen, which annoyed me more because she knows I hate texts. I opened the message. It read, \"Home. Have you asked her yet?\"\n\nCheryl and Peter, Samantha's parents, met us at the airport. They were fully aware of my relationship with their daughter and, for reasons I didn't fully understand, approved. It was a late Sunday afternoon so the took us out for an early dinner before going to their house where Samantha and I were going to stay a couple of days.\n\nCheryl and Peter had been introduced to social nudity at our house while Carol was still alive, albeit after Samantha's introduction. I think that part of the reason Cheryl and Peter embraced social nudity was that Samantha had been so enthusiastic. As was common among people our ages, the two of them had been too busy to workout regularly and it had shown the first time they went nude with Carol and me. However, going nude regularly had incentivized them to improve their fitness and they had both looked great when Carol and I went nude with them a second time a few months later.",
        "We all stripped off when we got to Cheryl's and Peter's house. The two of them still looked great. It wasn't difficult to see from where Samantha had inherited her extraordinary beauty. It was summer and still reasonably early in the evening. Peter got us all drinks and we went to the Collins' outside pool to talk and skinny-dip.\n\nLike a fool, I had brought my cell phone out to the pool. It pinged with another text. I opened it to see Gwen's message: \"You need to ask her.\" \n\nSamantha had heard this ping and was curious because I rarely get texts. \"What was that?\" she asked.\n\n\"Just Gwen telling me they got home ok,\" I replied perhaps too hastily. I don't think that satisfied Samantha. She knew that Gwen knew that I hate texts.\n\nWe swam and drank. Samantha and I caught Cheryl and Peter up on what had been going on with us. Cheryl and Peter told us what had been happening with them. It was just a relaxed evening.\n\nI had gotten out of the pool and lay on my back on a lounge chair. I watched Samantha get out of the pool and watched the water run off her perfect bare body. She was beautiful, very smart, funny, we shared many of the same interests, we got along very well, and I loved her passionately. I couldn't understand why a woman as perfect as Samantha would want to spend her life with me, but maybe Gwen had a point. Maybe I should ask Samantha to make our relationship permanent.\n\nSamantha walked over to my chair and, unself-consciously, lay face down on top of me in full view of her parents. It was a natural thing for Samantha to do when we were at home. I wrapped my arms around her. I could feel her heartbeat and her breathing as she lay on top of me. Finally, I said softly in her ear, \"Samantha Collins, will you marry me?\"\n\nSamantha sat up. \"What did you say?\" she asked loudly. \n\nI could see Cheryl and Peter looking at us. I couldn't, and didn't want to, back down now. In an equally loud voice, I said, \"I asked, Samantha Collins, if you will marry me?\"\n\nSamantha looked in my eyes for a moment. \"You really mean that?\" she asked.\n\n\"Absolutely,\" I said.\n\n\"Of course, I'll marry you!\" Samantha said and flopped back down on top of me.\n\nI heard Cheryl ask Peter, \"Were we naked when you proposed?\"\n\nSoftly, Samantha said, \"Carol will always be a part of you, and I loved her too. I can't replace Carol. I can only be me.\"\n\n\"All I want is you,\" I said. Samantha kissed me for a long time. \n\nA little later, Samantha got up, took my phone, and looked at my messages. She laughed and started typing. When she finished, she showed me her reply to Gwen's message: \"He asked. Deal done. Sam.\"\n\n\"Send it,\" I said.\n\nPeter had gone inside and came back out with four glasses of champagne. \"Gather round,\" he said. We got up and walked over to him as did Cheryl. I stood naked with my naked fianc\u00e9 and my naked soon-to-be in-laws. Peter handed round the glasses. \"A toast,\" he said, \"to Harry Stone finally getting good sense and to my daughter finally getting what she's wanted for many years.\" We drank to that.\n\nMuch later, Samantha and I were lying in bed in her parents' guest room. We'd just finished our nightly lovemaking. Samantha said, \"Once we get married, I'd like to go off of birth control.\"\n\n\"I'm fine with that,\" I said. I meant it too."
    ],
    "authorname": "HStoner",
    "tags": [
        "public nudity",
        "exhibitionism",
        "voyeur",
        "voyeurism",
        "public sex",
        "public"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-gulf-coast-move-ch-05"
}