{
    "title": "USB - Unwanted Sexual Behavior Ch. 04",
    "pages": [
        "Chapter Four - Remember, I'll be Watching\n\n\"I won't lie to you Taylor; it's going to be dangerous,\" David Campbell said.\n\n\"We strongly suspect that Veronique Pascal and Bradley Freeman are involved in a conspiracy to conduct money laundering contrary to the Money Laundering Control Act of 1986 but we can't tie them specifically to Alexi Kamerov or his people trafficking operation.\"\n\n\"We have some evidence but not enough to make a case. The best evidence would be to get them to admit to it in person and then we introduce our corroborative evidence to support the allegations. That's where you come in,\" David explained.\n\n\"How do I come in? What can I do?\" Taylor was confused.\n\n\"I'll send you the data on the unreported income being generated by PostPay and the code that will provide you access to the illegal income streams. You're a whiz-kid programmer so it would be believable that you discovered the scam yourself. You confront Veronique with the evidence and tell her you know where the money is coming from and that you want a cut.\"\n\n\"Then it's over to you to do whatever it takes to get Veronique or Bradley Freeman to admit that the proceeds come from Alexi and his people trafficking enterprise. You will, for all intents and purposes, become a confidential informant,\" David said to a sceptical looking Taylor.\n\n\"How do I do that?\" Taylor furrowed her brow.\n\n\"That's up to you. The alternative is to get swept up in the web when we take them all down,\" David said coolly.\n\n\"You mean the guys dressed in body armour carrying high powered weapons breaking down my door I presume,\" Taylor sighed.\n\nDavid nodded sagely. He saw the fear on Taylor's face followed by resignation and couldn't help but feel sorry for her.\n\n\"Look, you won't be out there on your own. I'll be keeping watch,\" David patted Taylor's hand but she immediately withdrew it.\n\n\"How keeping watch? Where exactly will you be?\" Taylor said tersely.\n\n\"It's best that you don't know. We don't want you constantly looking out for us or behaving unnaturally because you think we're watching. I want you to behave as normal as you can,\" David replied.\n\n'Normal! I'm a man trapped in the body of woman, an experience that was until today not entirely unpleasant. I finally have my dream come true and my startup is a raging success, I'm rich, I have friends and now this!' Taylor thought to herself.\n\n\"So what's it going to be Taylor?\" David looked at his watch to indicate that time was critical.\n\nTaylor sighed and nodded her head.\n\n\"Ok give me your phone. We'll track you my GPS and cell-tower triangulation but there may times when you have no coverage so we will put a small transmitter in your phone. It doesn't have much of a range but we can use it to pinpoint your location and find you if the other two methods are no longer available,\" David explained.\n\n\"One of your methods of keeping watch?\" Taylor managed a feeble smile.\n\nThe briefing went on a while longer and then David took Taylor back down to the garage. He handed Taylor her phone just before she climbed into the rear of the town car.\n\n\"Good luck. Remember, I'll be watching,\" David patted her shoulder but it seemed to her that he wanted to do more, maybe hug her.\n\nShe noticed that he looked at her legs when she climbed into the car. No matter what the situation men were incorrigible around a pretty woman.\n\nThe ride back to Taylor's apartment was a lot shorter because the driver was able to drive there directly, there being no need to shake a tail. The car pulled up right outside the entrance to the Millennium on LaSalle and the driver, who hadn't said a word during the whole trip, turned in his seat.\n\n\"David Campbell is one of the good guys but don't fuck him over because he might look like a he just left prep school but he can be a ruthless prick,\" he said and then got out of the limo to get the door for her.\n\nHe did not stare at her legs.\n\nTaylor made it up to her apartment before she began to shake. She fell onto the couch and sobbed uncontrollably until she was cried out. She felt exhausted and she made her way to the bedroom, disrobed and ran the bath. She poured herself a stiff drink and went back to the bathroom and stood before the mirror and examined her body. She had been a woman for long enough now that it no longer surprised her to see herself that way, but her body still fascinated her. \n\nHaving said all that, Taylor was looking forward to becoming her male self again in the near future. As she lowered herself into the bubbles she wondered if her forthcoming gender change might be her salvation. If she could play out the time she had remaining as the female Taylor until it was time use the USB to transform back into her male self she could save herself from prosecution and incarceration.\n\nFemale Taylor will have disappeared, taken by the Bratva perhaps, never to be seen again. Her cousin would come forward as her rightful successor. If she could get the FBI to hold off until then, the male Taylor could sell PostPay to Bradley Freeman who she knew wanted control of it. Male Taylor could not be indicted for money laundering because he had no knowledge of it. He would walk away with a healthy profit and work on another venture.\n\nAll of sudden there was light at the end of the tunnel.\n\nTaylor luxuriated in the bath longer than she should have. She had been away from work for most of the day and she had a stream of texts from Veronique and an accumulation of email to deal with. But the bath was sumptuously warm and inviting and now that she'd had a drink to take the edge off and possibly has a solution to her conundrum, not all seemed lost.\n\nShe put down her drink and allowed her hand to snake down her body to the cleft between her legs whilst the other hand stroked her breasts. Her nipples engorged as did her clitoris as she massaged it with the pad of her middle finger. She didn't have a lot of time so she pressed harder and faster until her clitoris began to tingle and then she pushed two fingers into her vagina and tweaked her nipples.\n\nThe orgasm blossomed like a rose, each delectable peal of delight was like a petal opening until the rose was in full bloom and intense rings of pleasure wracked her body. Taylor sighed and stretched out her toes and writhed a little in the warm foamy broth, letting the last tinges of her climax dissipate.\n\n\"Ok. Enough procrastination, get back to work,\" Taylor said and lifted her body from the foam.\n\nTaylor drained the bath and stepped into the rainfall shower to wash away the remaining lather. She put on a bathrobe and fired up one of her PCs and went to work. She answered those emails that required a response and the same with her texts. She found four missed calls from Veronique Pascal and a few 'WTF?' texts so she gave her a call.\n\n\"Where the fuck have you been all day?\" Veronique said without any preamble.\n\n\"I told you that an old friend was passing through and it was my only chance to catch up. I haven't seen him for years?\" Taylor stuck to the pretext.\n\n\"You blew off Nordstrom for an old friend? What are you in fucking high school? I'm pissed and so is Bradley. The Nordstrom execs wanted to see the whiz-kid who developed the app not the monkeys pulling the levers,\" Veronique did indeed sound pissed.\n\n\"I'm sorry Veronique. What can I do?\" Taylor was keen to make amends, she needed to get back on Veronique's good side.\n\n\"I'm going to tell you exactly what to do darling. You are going to put on that low-cut red satin sheath with the ass-to-ankle split in the side that I made you buy at Talia, put on the matching red Louboutin's, do your hair and makeup and get your fine ass down to Alinea. We have dinner reservations for nine,\" Veronique said.\n\n\"So a late dinner where I schlep my tits and ass around the execs from Nordstrom and all is forgiven?\" Taylor tried to make light of it.\n\n\"Maybe by them; as for me I'm not so sure. We'll see what happens,\" Veronique broke the connection.\n\nWhile she was speaking with Veronique an email arrived from an unknown source but Taylor knew that it was generated by FBI Agent David Campbell. She downloaded and unpacked the attachment. It directed Taylor to the source code on the PostPay servers at FreeCom that the Bratva, and by association, Bradley Freeman and Veronique Pascal were using to launder money.\n\nAs much as she would have liked to explore the programs and sub-routines cunningly buried in PostPay's operating system there was no time. Instead she spent half an hour in front of the mirror perfecting her hair and makeup and then slipped into a pair of her favourite flesh-toned Jonathan Aston 12 denier seamed holdup stockings and a pair of red, seamless, microfiber, hipster panties so as not to show any visible pantyline under the satin sheath. She shimmied into the evening gown; there was enough support in the bodice of the dress that she could go without a bra.\n\nTaylor accessorised with a matching silver and emerald necklace and earrings to complement the dress and shoes. She used her app to order a car from her service while she fussed around ensuring she that looked perfect and then threw the essentials into a Jimmy Choo silver clutch and slipped her feet into her red four-inch Louboutin pumps just as the car arrived.\n\nTaylor decided not to wear a coat over the dress for fear of spoiling the nap of the sleek fabric. Braving the bitter cold for the quick trip from the foyer of her building to the rear doors of the limo was worth it because when she alighted from the car at Alinea restaurant heads were turned and compliments were made. \n\nVeronique's car pulled up behind Taylor's and she too turned heads getting out of her town car wearing a teal charmeuse evening gown and white Jimmy Choo's. The gown was perfectly complemented by her blood-red lipstick and severe jet-black shoulder-length bob.\n\nThe two women air-kissed at the entrance to the restaurant while the concierge held the door open for them and more heads turned as they made their way to the bar escorted by Bradley Freeman who had arrived in Veronique's car.\n\n\"When I see you dressed like this Taylor I can almost forgive you for being AWOL today,\" his fingers brushed Taylor's buttocks as he put his hand in the small of her back to guide her to the bar and Taylor doubted that the ass-grab was accidental.\n\nShe spent the evening schmoozing up to the Nordstrom executives, two men and one woman, ensuring that she displayed plenty of legs and tits. All three of the executives seemed interested, which made Taylor think the female exec was either lesbian or bi. The late dinner wrapped up around midnight and the Nordstrom people excused themselves. They needed to get some rest; tomorrow was a workday.\n\nBradley insisted that Taylor and Veronique accompany him to his apartment for a nightcap despite their protests. They bundled into the back of a town car where Bradley took the opportunity to not so subtly grope them both. They had all drunk plenty during the evening and their inhibitions were down. Bradley settled the women on a long couch in the subtly lit lounge room and poured them all drinks that they really didn't need.\n\nBradley was happy to sit in an armchair and watch Veronique and Taylor get it on. They stripped to their lingerie and spent a while kissing and fondling each other then they took turns going down on each other and then they moved to the bedroom and ended up scissoring on the big bed.\n\nBradley became impatient and a little rapey and the girls submitted to his desires and he fucked them both a little and Veronique let him come in her ass. Then the girls got back to scissoring and then they fell asleep in a tangled heap.\n\nThe next day at her office in FreeCom Taylor closed the door and asked the receptionist to screen her calls while she examined in detail the source code that had been installed on the PostPay servers. The malware was simple but cunning. It generated fictitious PostPay accounts which then made purchases for significant amounts of money just below the $10,000 limit which would require a currency transaction report. Deposits were made through PostPay into the accounts of the sham vendors which were then routed overseas into numbered bank accounts.\n\nAn algorithm determined when a fictitious account was nearing overuse and likely to draw suspicion and the account was closed and another pseudo customer account immediately generated. According to Taylor's calculations the Bratva could conceivably launder over half a billion dollars a year through PostPay. The program was designed so that the illegal transactions did not pay any fees or interest to PostPay so that it passed seamlessly through the system but did not artificially bloat PostPay's profits which would have drawn the attention of the Treasury Department.\n\n\"Fuck!\" Taylor was shocked at the audacity of the scheme.\n\nThe malware had obviously been programmed into PostPay by one or more of Bradley Freeman's whiz-kid coders, not that it mattered. What mattered to Taylor was linking the bogus accounts to Alexi Kamerov and the income streams to human trafficking.\n\nTaylor walked down the corridor to Veronique Pascal's office and entered unannounced. She closed the door behind her and leaned back against it.\n\n\"A dramatic entrance Taylor; what can I do for you?\" Veronique asked.\n\n\"I know about the secret code embedded in PostPay,\" Taylor said frankly.\n\nVeronique raised an eyebrow and indicated a leather sofa in the corner of the office. Taylor strode over and sat down and Veronique came around from behind her desk and sat opposite her.\n\n\"What are you talking about?\" Veronique remained stoic.\n\n\"I'm no criminal investigator but I can only guess that PostPay is being used to launder money. Bradley is obviously in on it because the programming code has his whiz-kids signatures all over it. Code writers are almost like authors, you can tell who wrote the book even if you can't see the cover,\" Taylor replied.\n\n\"I don't know what you are talking about,\" Veronique studied her fingernails.\n\n\"Look Veronica, Bradley is smart. He's a very competent businessman and entrepreneur, I'm sure he's behind the scheme but someone is providing the cash. Someone is pushing huge sums of money through PostPay and I can only think that that person is you... or someone you represent,\" Taylor appeared confident but inside she was petrified.\n\n\"Really Taylor... and where am I getting all this money you claim I am laundering?\" Veronique stopped looking at her nails and her eyes drilled into Taylor's.\n\nVeronique looked downright dangerous as her eyes narrowed and a scowl formed on her blood-red lips.\n\n\"You told me about how you started life as Katcha Kovalenko before you went to Paris and morphed into Veronique Pascal. About how you legitimised some of Alexi Kamerov's business interests before you escaped the clutches of the Bratva,\" Taylor took a deep breath and continued.\n\n\"I'm hypothesising that you never really broke your ties with Bratva and that you are still working for Alexi, helping him launder his money,\" Taylor returned Veronique's glare.\n\n\"You hypothesise a lot Taylor. Was it not Bradley who financed your startup when no one else was interested? Was it not I who did most of the leg work finding the multinationals to join our venture? Was it not Bradley and I who marketed your app?\" Veronique snipped.\n\n\"Wasn't it I who transformed you from a poor Kmart frump to a sophisticated Prada chic? You owe me so much and yet you accuse me of using PostPay to launder Bratva money!\" Veronique hissed, all vestiges of camaraderie gone.\n\n\"PostPay was by baby Veronica! I created it! I nurtured it!\" Taylor retorted.\n\n\"Don't be a petulant brat Taylor. You handed PostPay to Bradley and I to do what you couldn't... to market it. To make it pay,\" Veronique countered.\n\n\"To make it pay Taylor! Let's be truthful here... it's all about the money! It was always about the money! It will always be about the money!\" Veronique slapped the table to emphasise each point.\n\n\"In that case I want my share!\" Taylor snapped back.\n\nA wicked smile crossed Veronique's face and she came over and sat next to Taylor. She was uncomfortably close.\n\n\"And there we have it. Now you are behaving like an adult,\" Veronique patted Taylor's knee.\n\n\"There is plenty of money to go around Taylor. Money is not a problem. What is a problem is that you need to know what we are doing. You realise that as soon as you take one cent of that money you become part of the conspiracy? There is no turning back,\" Veronique squeezed Taylor's knee.\n\nTaylor just nodded.\n\n\"You also need to realise who you are getting into bed with. I told you what happened to me; what I had to do to get myself out of that apartment block in Munich. I told you about the degradation I put myself through willingly so that I wouldn't end up like Olga hanging from the ceiling with her panties full of shit but I never told you what happened to Yana. I don't really know myself but when Peter and Gunther took her away, you can bet they made her regret that she ever stole from Alexi Kamerov before they killed her,\" Veronique said sagely.\n\n\"Everyone knowingly associated with this enterprise is a possible source of compromise. Can you imagine what happens to someone who Alexi suspects may be jeopardising his operation?\"\n\nTaylor nodded.\n\nVeronique turned Taylor's face to hers and looked her squarely in the eyes.\n\n\"I don't think you do Taylor. I don't think you do,\" Veronique said gravely.\n\n\"Do you still want the money? You might as well take it now that you have become a potential liability. At least if you are on the take, you become part of the conspiracy; you are as guilty as any of us,\" Veronique's smile contained no warmth.\n\n\"Yes. I want a share of the money,\" Taylor's sighed.\n\n\"Ok, good girl. It will only take a little time to set up an offshore account for you. For obvious reasons the money can't be deposited into any of your existing accounts. Also you will need to be careful how you spend the money. You are already a wealthy woman so it won't raise any alarm bells if you spend some of the money but you need to think about what you are going to do with the rest of it; it will accumulate quite quickly,\" Taylor smiled and squeezed Taylor's knee again.\n\n\"I can help you to invest the money wisely offshore, but let's not get ahead of ourselves. Just behave normally. Don't break your routines or make any changes to your current lifestyle.\"\n\n\"I'll contact you soon with the details Taylor, ok?\" Veronique said reassuringly.\n\n\"Ok,\" Taylor returned Veronique's smile.\n\nVeronique leaned in and kissed Taylor on the lips.\n\n\"Let's go to dinner tonight. You can come around to my place after,\" Veronique slipped her hand under Taylor's skirt.\n\nShe rubbed Taylor's sex through her panties while she kissed her again, this time more passionately. Taylor returned Veronique's kiss and felt herself becoming wet. Veronique gave Taylor's cunt one last rub and then withdrew her hand. She eased out of their embrace.\n\n\"See you tonight Taylor,\" Veronique smiled at Taylor and stood up.\n\nThe meeting was over.\n\nTaylor went back to her office and started to tremble. She had done what was asked of her, but she was more scared than ever. \n\nThat afternoon Taylor went home early. She recognised the black sedan parked out front of her apartment building but did her best to ignore it. As she entered the foyer David Campbell slipped in behind her and entered the same elevator. He stood behind her and Taylor glanced nervously up at the security camera mounted in the top corner of the car.\n\n\"Act naturally Taylor just in case the doorman is watching the screens. The FBI techs will remove the recorded video tonight so there will be no record of our meeting,\" David whispered even though he knew that audio was not being recorded.",
        "David reached out to rub Taylor's back reassuringly out of view of the camera. Taylor did feel comforted and also felt safe in David's presence. David's hand slipped down to her buttocks as the car shuddered to a stop.\n\n\"Sorry. That was an accident,\" David whispered.\n\nHe was standing so close to her that she could feel his breath on her neck. He could smell her perfume and combined with the sight of the curve of her buttocks and her long legs sheathed in sheer hosiery caused him to become aroused.\n\n\"An accident you say,\" Taylor stared directly ahead but she was smiling.\n\nWhen the elevator restarted its assent she fell back against him, pushing her ass into his groin. Her smile widened when she felt his erection through her skirt.\n\n\"That was an accident too,\" Taylor grinned.\n\nDavid blushed. He was not used to being in the presence of such an audacious young woman.\n\nTaylor unlocked her apartment and ushered David in ahead of her.\n\nThere was something about David Campbell that made Taylor feel safe. He effused confidence and courage and there was also something about him that felt a little dangerous. She offered him a seat at the breakfast bar while she made coffee.\n\n\"How's things?\" David asked, taking off his jacket.\n\nTaylor noted the Glock 17 clipped to his belt. \n\n\"How's things? You ask that like we are two friends meeting for coffee not an FBI agent meeting a CI who he has blackmailed into working for him,\" Taylor couldn't keep the bitterness out of her voice.\n\nDavid got up off the stool and walked around the breakfast bar and stood beside Taylor, helping her with the coffee cups.\n\n\"I'm trying to help you Taylor. I'm trying to keep you out of jail,\" David said.\n\n\"But I didn't do anything wrong,\" Taylor replied.\n\n\"Look. I know that but that's not how it looks to the US Attorney's office. Your company is being used to launder money and you are making money from the proceeds of organised crime,\" David took the proffered cup of coffee and sipped.\n\n\"But that's just it; I'm not... or I wasn't,\" Taylor sipped her coffee.\n\nThey were standing close and each was aware of the effect that they had on each other although neither of them spoke of it.\n\n\"What do you mean by 'I wasn't'?\" David asked expectantly.\n\n\"I confronted Veronique. I told her that I knew about the money laundering and that I suspected that she was at the root of it and was still working for the Bratva. She confirmed that she's still working for Alexi Kamerov and that David Freeman is also in it up to his neck,\" Taylor put down her coffee and looked at David defiantly.\n\n\"You got that much already? Wow!\" David put down his cup and placed a hand on Taylor's upper arm.\n\n\"You know how dangerous for you this is going to get now?\" David put his other hand on her other arm and squeezed gently.\n\n\"Veronique warned me about how dangerous it is but I told her I wanted a share of the proceeds and that placated her somewhat. She's setting up an offshore account for me.\"\n\n\"I've done what you wanted of me David,\" Taylor searched his eyes.\n\n\"Now comes the hard part. I need you to get Veronique to confirm that the money is coming from their human trafficking organisation. I really want to get Alexi tied to that,\" David looked deeply into Taylor's emerald green eyes.\n\n\"I promise I'll keep you safe Taylor; you have my word,\" David squeezed her upper arms again.\n\nThey gazed into each other's eyes. The only noise was the sound of their breathing, the rest of the world faded from their periphery. David leaned in and Taylor opened her lips expectantly. They kissed softly, their lips pressed together, their bodies separated by inches. David stroked Taylor's face gently; he wanted to pull her against him and wrap his arms around her but he restrained himself.\n\nTaylor put her hands on David's hips and let him kiss her. She fully expected that he would embrace her and kiss her more passionately; maybe put his hands on her in places that he shouldn't. And she wanted him to.\n\nShe was disappointed when David broke the kiss and took a step back.\n\n\"I'm sorry. That was unprofessional,\" David shook his head and looked down at his feet.\n\nTaylor lifted David's chin and made him look at her.\n\n\"It was wonderful David and I liked it. I would have pushed you away if I didn't,\" Taylor sighed.\n\n\"It was wrong. You're a cooperating witness and I'm your handler, there is no room for a personal relationship,\" David whispered.\n\n\"Who says so?\" Taylor smiled at him and his heart melted.\n\n\"The FBI code of conduct says so,\" David shook his head again.\n\n\"I don't know... maybe when the case is over Taylor, you know if... if... if you want to?\" David stammered.\n\nTaylor almost felt sorry for him.\n\n\"Maybe I want to... let's see what happens,\" Taylor handed David his coffee and she took hers and moved to the breakfast bar.\n\nDavid took his seat across from her and Taylor briefed him in detail.\n\nLater that evening Taylor received a text from Veronique asking her to join her for dinner at Alinea restaurant again and she replied that she'd be delighted.\n\nTaylor did not dress as extravagantly as she had the previous evening but she still looked ravishing in her simple black cocktail dress. Veronique was sitting in a booth dressed in an elegant off the shoulder red ruched dress with matching heels. She was drinking a dry martini and Taylor slid into the booth opposite. Veronique leaned over the table and kissed Taylor on the lips and said good evening.\n\n\"You left early today Taylor,\" Veronique said but it sounded more like a question.\n\n\"I'd finished what I needed to do in the office so I worked on some code at home where it's quiet and comfortable,\" Taylor countered.\n\n\"Fair enough; no need to explain your comings and goings to me,\" Veronique quipped.\n\nA waitress arrived with another martini for Veronique and a gin and tonic for Taylor.\n\n\"I pre-ordered your drink, I hope you don't mind,\" Veronique smiled mischievously.\n\n\"Not at all darling, cheers,\" Taylor raised her glass and Veronique chinked hers to it.\n\n\"Ah! My two beautiful ladies together; bring me one of those please,\" a brute of a man wearing a black Amani suit said to the waitress and slid into the booth beside Taylor, effectively wedging her against the wall.\n\nHe had long black hair with a leonine head but was very handsome despite the scar that ran down the left side of his face from forehead to chin said. His accent was distinctly Russian.\n\n\"Pleased to meet you Taylor, I'm Alexi Kamerov,\" the man kissed Taylor on the cheek as though they were old acquaintances.\n\nTaylor felt a chill run through her despite the heating in the restaurant.\n\n\"I forgot to mention that we were having company for dinner,\" Veronique shrugged her shoulders as if it was nothing.\n\n\"You are as captivating as Veronique described you; not a classic beauty but fascinating and alluring in your own special way, like a rose amongst daisies,\" Alexi brazenly studied Taylor like she was a chattel he was contemplating purchasing.\n\nTaylor finally gained her composure.\n\n\"I'm please to meet you too Alexi, Veronique has told me so much about you,\" Taylor countered.\n\n\"Yes. Perhaps a little too much I think,\" Alexi's demeanour changed and he sounded surly.\n\nVeronique blushed and looked away.\n\n\"But she also tells me that you found out about the little program I had embedded in PostPay. You are a very good programmer, of that there is no doubt. Smart, intelligent, inquisitive... what do you westerners say about the cat and curiosity? Never mind. We Russians have our own proverbs. May favourite is 'if you're scared of wolves don't go in the woods',\" Alexi's drink arrived and he grinned wickedly and raised his glass.\n\n\"Nastrovje!\" Alexi cried and raised his glass.\n\nVeronique and Taylor raised their glasses and repeated the toast.\n\nTaylor's mind was racing. She had stood up to Veronique this morning despite her fear and she figured that if she showed Alexi any fear it would not bode well.\n\n\"You are right about the cat but the full proverb is 'curiosity killed the cat, satisfaction bought it back' and I'm very satisfied Alexi. I'm very satisfied indeed with the arrangement I made with Veronique this morning.\"\n\n\"Nastrovje!\" Taylor raised her glass and downed the contents.\n\n\"Nastrovje!\" Alexi roared and downed his own drink and Veronique followed suit.\n\n\"Ha! I like a woman who has fire in her belly. Bring vodka! Bring us a bottle of Stolichnaya!\" Alexi slammed the table and a startled waitress hurried away to meet Alexi's demands.\n\n\"I like you Taylor, even though you have a silly name,\" Alexi chuckled.\n\nHe squeezed her thigh under the table but Taylor was too scared to move his hand; instead she patted it and smiled at him.\n\n\"I like you too Alexi, you are a handsome man and you have a good sense of humour,\" Taylor grinned.\n\nVeronique smiled too, glad that the tension had been diffused.\n\n\"When I told Alexi about our agreement he insisted on meeting you, I'm glad we are all getting along,\" Veronique said.\n\nThe vodka arrived along with three ice-cold glasses and Alexi filled them while Veronique and Taylor studied the menu. They were going to have to eat something if they were going to keep drinking at this pace.\n\nThey ate well and Alexi put the vodka aside and ordered a good bottle of wine to go with their dinner. Alexi kept the women amused with stories about when he worked for the Russian Police and admitted that he was dismissed when the department was downsized and those with links to organised crime lost their jobs. He freely admitted to being involved in smuggling but was not specific as to what exactly he was smuggling, he certainly did not admit to people smuggling or prostitution despite Taylor's attempts to guide the conversation that way.\n\n\"So Veronique, is the invitation to continue the party at your place still open?\" Alexi asked after he had taken care of the tab and left a very generous tip.\n\n\"Of course Alexi; anything you want,\" Veronique replied but her response sounded cagey.\n\nNumbed by alcohol and beguiled by Alexi's friendly demeanour, Taylor did not detect the hesitancy in Veronique's voice.\n\nThey came out of Alinea to find a town car idling at the curb. Alexi opened the rear passenger door and indicated for Taylor get in and she thanked him for being so courteous but as she climbed into car she saw that there was a large muscular bald-headed man sitting in the back seat and her intuition, even clouded by the fog of alcohol, warned her not to get in the car.\n\nIt was too late.\n\nThe muscular man in the back seat seized her arm and pulled her into the car assisted by Alexi who pushed her from behind. Alexi and Veronique shouted at each other in Russian and then Alexi climbed into the car and it sped off. Taylor was squeezed between the bald man and Alexi, effectively squashed between them.\n\n\"What the fuck Alexi?\" Taylor tried to struggle free and sit in the seat opposite but the men restrained her.\n\n\"Shut the fuck up you American bitch,\" the bald man elbowed Taylor in the midriff, effectively winding her.\n\nAs she fought to breathe the two men conversed in Russian, ignoring her discomfort.\n\n\"You privileged American princess. We fund your startup and make you a rich woman and still you want more. All you had to do was shut the fuck up when you found out about us washing our money through your shitty little company but you couldn't help but be greedy,\" Alexi shook Taylor by the shoulder.\n\n\"Where are you taking me?\" Taylor pleaded when she was able to breathe.\n\n\"Don't ask questions. The days of you asking questions are long over; now you just do as you are told,\" Alexi growled.\n\n\"Are you going to kill me?\" Taylor whispered.\n\n\"Kill you? Why would I do that? Katcha Kovalenko told you what happened to her and how I make my money. We don't just bring in girls from the east; we ship them the other way too. Pretty young blonde American girls like you bring in good money from the Arabs,\" Alexi gave her a wicked smile.\n\nThere was no doubt that Taylor was terrified but she was also acutely aware that Alexi had admitted to her that he was involved in people trafficking and prostitution. Provided that David lived up to his promise to keep watch over her she should soon be rescued; she just had to keep her cool.\n\nThe limo made a sudden turn into an underground parking garage so fast that she was thrown against the bald man. The car accelerated down several levels and came to a screeching halt next to a white Ford Transit. The door to the van slid open and at the same time the bald man opened the door to the limo and dragged Taylor out of the town car and pushed her roughly into the rear of the Transit. She was handled so roughly that her dress was torn and she lost a high heel and dropped her purse.\n\n\"Get in there you fucking American whore!\" baldy gnarled as he pushed Taylor further inside the transit.\n\nBaldy and Alexi jumped into the van behind her and the van took off, bumping and swerving its way through the galleries, careering out of an exit and accelerating down the street. The driver of the limo picked up Taylor's purse and tossed it into the town car and drove away, leaving by a different exit.\n\nThe limo left the parking garage and drove two blocks before it was effectively boxed in by two unmarked police cars that skidded to a halt, one in front and one behind. David Campbell, wearing body armour, tapped his Glock against the driver's window whilst two agents also wearing body armour and carrying MP5 submachine guns covered the doors on the other side.\n\nThe driver lowered the heavily tinted window and smiled at David.\n\n\"Da?\" the driver smiled insolently at David.\n\n\"Get out!\" David grunted as the other two agents opened the near-side doors of the vehicle.\n\nThe driver got out and put his hands on his head and leaned against the limo facing away from David. He knew the drill.\n\n\"It's empty!\" one of the other agents yelled.\n\nDavid kept his gun on the driver and leaned into the limo. It was indeed empty.\n\n\"Where is the girl?\" David thrust his pistol into the driver's flank.\n\n\"Russkiy bez angliyskogo,\" the Russian turned his head and grinned at David.\n\n\"I know you speak English you Russian fuck!\" David spun the man around and drove his gun into his midriff.\n\n\"Nyet... only one word... lawyer,\" the Russian's grin widened.\n\nDavid began to batter the butt of his weapon against the driver's head but the Russian covered his face with his hands long enough for the other two agents to haul David off him.\n\n\"Lawyer,\" the Russian smirked through bloody teeth.\n\n\"Fuck!\" David hissed.\n\nHe looked back inside the car and snatched up Taylor's Jimmy Choo silver clutch. He opened it and his heart fell when he saw her Galaxy S20 tucked inside it.\n\nDavid had lost Taylor Averille.\n\nHe raced back to one of the FBI cars and put out a BOLO for Taylor Averille but without knowing the type of vehicle she was being transported in it was a useless gesture and he knew it.\n\n\"Where are you taking me?\" Taylor asked.\n\nThe back of the Transit van had a single bench seat set against the rear cabin and baldy and Alexi sat on the bench facing Taylor who was huddled on a mattress bestrewn with rumpled dirty bedding.\n\n\"I told you that you don't get to ask any more questions. Sergei, you want to try her,\" Alexi turned to the bald man.\n\n\"Are you sure you don't want to go first Alexi?\" Sergei asked.\n\n\"I'll wait until I can put her on a proper bed; I want to take my time with her so please be my guest and sample our new wares,\" Alexi spoke to Sergei but he glared at Taylor.\n\nHe wanted her to know what was coming.\n\nTaylor suspected this would happen. Veronique had told her about how she was treated while she being transported from Uzhhorod to Munich and she expected to fare no better. She set her resolve. She hoped that David and his FBI counterparts were following the van and she prayed that they pulled it over soon. Her fear was that they were just tailing the van and keeping it under surveillance and would wait until it got to its destination before they pounced.\n\n\"I know what you want and I won't fight you so you don't have to beat me,\" Taylor sat up and glared at the men.\n\n\"We won't beat you; you are far too valuable a chattel to be damaged but we have ways of controlling you that are far from pleasant that won't leave any marks on you,\" Alexi stated matter-of-factly.\n\n\"Take off your dress... or don't and I'll rip it off you,\" Sergei grunted as he started to undress himself.\n\nTaylor kicked off her one remaining high heel and pulled her dress over her head. She was left dressed in her Jonathan Aston 12 denier seamed holdup stockings, a pair of black seamless microfiber hipster panties and matching bra.\n\nSergei was naked, his huge body was a slab of muscle and sinew adorned with so many tattoos that barely any of his pale flesh was visible. He was barrel-chested and hairless all over, including his groin from which protruded a large erection. He came over and sat beside Taylor.\n\n\"I'm goin to use my mouth on you and have you use your mouth on me. If you bite I'm going to hurt you. I warn you that I can inflict excruciating pain on you without leaving any marks. Do you understand?\" Sergei said.\n\nTaylor nodded. She recalled how Veronique had told her that she been compliant, almost willing, when she was taken into the clearing near Trnava and Taylor summoned up all that remained of her courage. All she had to do was survive long enough to be rescued. In a few days she would use the magic USB and transform back to her male self and she hoped that she would be able to put all this behind her.\n\nSergei scooted close to Taylor and put his arms around her and lowered his face to hers. She didn't fight when he kissed her. She was surprised that his breath was fresh and he smelled of cologne and deodorant, his muscled torso pressing against her felt quite exhilarating. In other circumstances she might have welcomed his advances.\n\nHe slipped his tongue into her yielding mouth and she tentatively used the tip of her tongue on his and put her arms on his massive shoulders.\n\n\"Good,\" Sergei grunted.\n\nHe ripped off her bra and used his paws on her breasts, tweaking her nipples which became engorged to his touch. His tortuous treatment of her breasts actually felt exciting and when he lowered his head to them and used his lips and teeth on them she shuddered. She was surprised that being treated so harshly could excite her but so far all of the lovemaking she had experienced had been tender. This was first time that she had been treated so crudely.\n\nIf fact Taylor had to admit that she was a little disappointed when Sergei stopped molesting her breasts with his lips and teeth and moved his mouth back to hers. Her nipples were throbbing, radiating a burning but pleasurable sensation and to her surprise and disgust she felt herself becoming wet between the legs.\n\nTaylor willingly accepted his kisses and reciprocated, rubbing her tender breasts on his hard chest to keep them stimulated. Sergei eased her away a little so that he could use his hands on them again, squeezing the soft creamy globes and tweaking her tender nipples causing Taylor to gasp.\n\nShe kissed him harder and when he guided her hand to his groin she voluntarily cupped his scrotum, gently stroking and squeezing the wrinkled sac. Then she took his turgid penis in her hand and began to stroke it.\n\n\"She likes it Sergei... or she knows what's good for her,\" Alexi chuckled.\n\nAlexi was intently watching Sergei molest Taylor and was a little surprised by her response and also a little jealous that he had let Sergei go first. But you never knew how the girls they trafficked were going to react once they realised their predicament. Some made the most of it. Some fought wildly. Some just lay there unresponsive. Not that it mattered; he had customers for all types of girls. Those that were useless to him he disposed of.",
        "Taylor felt Sergei's cock begin to throb between her fingers as she gently stroked him, deliberately teasing him. She felt the first pearl of pre-ejaculate ooze from his glans and she used the slippery fluid to lubricate his shaft. Rather than feeling repulsed, she actually felt empowered. This brute of a man was practically begging her to let him fuck her.\n\nWhen Sergei softly grazed the front of her silky panties with his fingertips she shuddered again. He teased her, lightly skimming his fingers across her pubis. He could feel that her panties were damp and he smiled when she panted into his mouth. He moved his hand out of her crotch and stoked the tops of her silken-sheathed thighs which while delightful was not as intense as the feeling of him stroking her panty-clad cunt.\n\nTaylor let go of his phallus and returned to stroking and squeezing his sac. It was retaliation. If he wasn't going to stimulate her cunt she wasn't going to stimulate his penis.\n\nSergei smiled put his hand back on her mound; he pressed the slinky material into her vulva and rubbed it on her clitoris causing Taylor to squeal. He kissed her harder when she put her hand back on his cock and stroked him with long firm slow strokes. They kissed passionately and masturbated each other until they both sensed that they were ready.\n\nTaylor willingly lay down and opened her legs and when Sergei began to move on top of her she opened her arms and sighed when his hard body pressed against hers. Her nipples were on fire, radiating pleasure through her torso as Sergei's chest pressed on her. He rubbed his cock in the valley between her legs, relishing the feel of her cuntal lips pressing on his cock, shrouded in the gossamer fabric of her panties.\n\nTaylor lifted her legs and locked her feet behind Sergei's back and rose to meet his thrusts. Despite her abject surrender to her carnal desires she felt disgusted with herself. She felt like a slattern giving herself to this brute, even though she knew it was her only means of self-preservation.\n\nWhen Sergei slipped his steely member inside the gusset of her panties and impaled her with the throbbing tool she forgot all about her self-loathing and surrendered to her lust.\n\nTaylor moaned like a slattern and clung to Sergei as he thrust his cock in and out of her dripping cunt. His cock was bigger that Bradley's and filled her still-virginal sheath, which clung to his flesh like a velvet glove. Sergei revelled in the sensation of the beautiful young woman's tight vagina caressing his shaft as he thrust himself in and out of her. The sleek feel of her stockings against his sensitive flanks amplified the delightful feelings emanating from his cock. Taylor's legs tightened around his waist as she rose up and ground herself against him and he sensed her orgasm approaching.\n\nHe too was close to extremis and he slammed himself deep inside her tight wet channel and ejaculated. He kissed her and gasped into her mouth and Taylor screamed into his and raked her fingernails across his back as she writhed beneath him, driving her crotch into his, her cunt quivering and milking him of his seed.\n\nAlexi began to clap. The splendour of the performance he just witnessed, the lust-filled surrender of the woman taken against her will, the animalistic lewdness displayed by her was extremely arousing and he was tempted to pull Sergei off Taylor and take his place. But it was better to savour the moment and wait until he had her to himself.\n\nTaylor was breathless, her body still spasmed as the last vestiges of her climax began to subside. Sergei lay on top of her, panting with the exertion, he was almost exhausted, his cock still twitching as the last dribbles of his spend were planted deep inside Taylor's tight cunt. \n\nWhen he climbed off her Taylor began to quietly weep whilst Alexi continued to applaud her performance.\n\n\"Do I detect little post coital regret from the American princess? Never mind; you will soon become used to being used on a regular basis; that is your future, your punishment for being so greedy. Get dressed we are nearly there,\" Alexi growled.\n\n*****\n\nDavid was distraught. He left the limo driver in the custody of the other two agents and jumped into his own vehicle. He had one slim chance. David had left a surveillance team on Veronique Pascal. They had witnessed the argument between her and Alexi out front of Alinea and because Alexi was their main quarry David had followed the limo while the other team followed Veronique.\n\nHe called the team leader who reported that they had followed Veronique back to her apartment where she had stayed for only half an hour or so before she emerged with a small suitcase. They were currently tailing her along Route 57. She was staying just below the speed limit and driving carefully and the team had had to drop back so as not to be detected.\n\nDavid told them he would join them as soon as possible so that they could tag-team the tail. He hit the lights and siren and put his foot on the gas and prayed that Veronique Pascal would take them to Alexi Kamerov and Taylor Averille. He also prayed that nothing had happened to Taylor and she would be kept safe until he was able to rescue her.\n\n*****\n\nTaylor felt thoroughly disgusted with herself but deep down inside she knew that she had done what she had to survive or at least to prevent serious pain or injury being inflicted on her. The fact that she thoroughly enjoyed being ravished came as a complete surprise and was something that she doubted that she would ever admit to. She wondered what male Taylor would think about the incident; that was if she was able to survive her abduction and get back to her apartment in time to transform.\n\nShe put on her bra and adjusted her sodden panties. She hoped that there was a change of clothing at wherever she was being taken. She struggled into her torn dress as the van jostled and rattled along a rutted track.\n\nThe van lurched to a stop and Sergei, now fully-dressed, flung open the door.\n\n\"Inside!\" Alexi growled and dragged Taylor to her feet.\n\nHe pushed her out into the cold dark night. She looked around and determined that they were deep in the woods. She estimated that they had been in the van for about three hours but had no way of knowing. The sky was clear; the silhouettes of large pine and deciduous trees were framed against the clear star-strew heavens. They had parked next to a wood-framed farmhouse with a gravel courtyard and Alexi pushed her towards the door.\n\nThe house was quiet but there was light spilling through the closed blinds of the second story windows.\n\n\"Where are we?\" Taylor asked, a little a dazed.\n\nAlexi said nothing and pushed her towards the door.\n\nHer stockinged feet hurt as the gravel dug into the soles of her feet and she hobbled towards the farmhouse as fast as she could to stop the pain and to get out of the cold.\n\nThe house was sparsely furnished with rustic wooden pieces, two men with Kalashnikov rifles sat near a roaring fire keeping warm and drinking vodka.\n\n\"Where is Uri?\" Alexi barked.\n\n\"He's upstairs fucking one of the new arrivals,\" one of the men answered.\n\nAlexi flung Taylor across the room and she landed on an overstuffed couch. One of the men put down his weapon and made towards her.\n\n\"Leave her! She's not for you peasants. I'll use her myself to try her out and then I'm keeping her for Yosef to sell out of Dubai. Those ragheads like a girl with some fire in her so I don't want her fucked senseless before we sell her,\" Alexi grunted.\n\n\"You two get outside and keep watch. I'm not paying you to fuck my merchandise and drink vodka. How many girls arrived in the new shipment?\" Alexi asked.\n\n\"Eight; six Ukrainians and two Russians, all young and good-looking, we crossed the Canadian border last night. Two other girls didn't make it,\" the man who had intended to use Taylor said, shrugging his shoulders.\n\nThe man picked up his weapon and he and his partner went outside and closed the door. Sergei went over and threw some wood on the fire and then dragged Taylor up by her arm and pushed her towards the stairs.\n\n\"Walk! Come on I don't have all night,\" Sergei pushed Taylor in front of him.\n\nTaylor had no choice but climb the wooden stairs to the upper floor. There was a series of closed doors running down both sides of the corridor; it looked like the upper floor had been recently subdivided into small rooms. Taylor heard quiet sobbing coming from behind some of the doors but most were quiet. As they passed one of the doors she heard a bed creaking rhythmically and a girl moaning and a man grunting. Sergei grinned at her and pushed her ahead of him into the last room on the right.\n\nIt was simply furnished with a double bed, a chair and a dresser. On the dresser was a wash basin, a pitcher of water, a washcloth and a bar of soap. There was a glass and a plate but no utensils.\n\n\"Wash out your cunt,\" Sergei grunted and pushed her into the room and slammed the door.\n\nTaylor heard the door lock when he left. She tried it anyway but it was securely locked. She went to the window and moved the blind aside and looked out. The two men with Kalashnikovs were talking and smoking, they didn't seem concerned. Taylor just hoped that David Campbell and her rescue team were not too far away. Surely they would free her soon. They could catch Alexi red-handed with the girls he was trafficking.\n\nShe made her way to the dresser and poured some water in the bowl and dipped the washcloth into it and rubbed it on the soap. She pulled her panties down to her knees, squatted and wiped her sex with the soapy cloth. It was cold but refreshing and she was glad to wash away Sergei's semen although she knew that some of it still lay deep in her vagina. Her vulva was a little sore but she was shamefully aware that the dull throb felt quite pleasurable rather than painful.\n\nJust as she was pulling up her panties the beams of a pair of headlights washed over the window and she heard the sound of a car engine. She ran to the window and looked out. A black BMW had pulled up and the driver killed the engine and turned out the headlights. Taylor sneered when Veronique climbed out of the car and took a small suitcase from the back seat. She spoke to the guards for a minute and then approached the farmhouse.\n\nTaylor listened intently but all she could hear was the sounds from another room; the squeaking of a bedframe and a man and woman grunting and moaning. At that moment the woman cried out \"da! da!\" and the man roared and suddenly the bed stopped squeaking. She heard muffled voices and the sound of a door opening and closing and then she heard footsteps receding down the corridor.\n\nA short while later she heard the unmistakeable click-clack of high heels on the boards and the door to her room opened.\n\nVeronique entered and stood in the middle of the room with her hands on her hips and glared at Taylor.\n\nShe was dressed in denim jeggings, a red satin blouse, a fleece-lined Carhartt coat and high-heeled ankle boots. Her full pouty lips were coated in her favourite blood-red Guerlain Rouge Jewel lipstick and were turned down in a scowl. Her beautiful face was framed by her severe jet-black shoulder-length bob, her icy-blue eyes enhanced by dark eye makeup and her sharp rouged cheekbones.\n\n\"Look what you made them do Taylor! I tried to negotiate with Alexi but he turned my proposal down. I told you what happens to anyone that Alexi thinks is jeopardising our operation. He didn't believe the excuses for your absences from work; he's suspicious by nature. You shouldn't have been so greedy.\" \n\n\"It's a shame because I thought we could be real friends but now that is not to be,\" Veronique was seething.\n\n\"Now you will end up in some far off place with some rich swarthy Arab sweating over you. I just hope that he looks after you and keeps him you for himself and that you don't end up in some middle-eastern brothel.\"\n\n\"Just remember what I told you about what happened to me and how I overcame it. Endure it. Don't end up like Olga,\" Veronique took a packet of cigarettes and a gold lighter from her pocket. She took a cigarette out of the pack and lit it.\n\nTaylor had never seen her smoke before but then again there were a lot of things that she didn't know about Veronique apparently.\n\n\"I thought we were friends Veronica,\" Taylor whispered.\n\nShe wanted to run to Veronique; to put her arms around her and hold her close. She wanted Veronique hug her and stroke her hair and tell that everything will be ok.\n\nShe heard footsteps approaching from down the corridor and then Alexi entered the room. He and Veronique had a heated discussion in Russian. Veronique threw her cigarette on the floor in anger and crushed it out. She walked to the door and paused.\n\n\"Goodbye Kmart,\" she said and closed the door.\n\n*****\n\nDavid Campbell had killed his lights and siren about a mile before he caught up to the car tailing Veronique Pascal's black BMW and he picked up the tail just before she left Route 57 and took Route 72 heading southwest towards Decatur. He called ahead to the Springfield field office, explained the situation and asked them to have a SWAT team on standby. Veronique turned off the highway onto a secondary road and then down a dirt track which looked like it led into a commercial forestry. David called the Springfield field office and scrambled the SWAT team. He and the other officers waited about half a mile down the dirt road where they could just see the lights of a farmhouse.\n\n*****\n\nIf she thought that Sergei's cock was big then Alexi's was huge. It jutted from his groin like the trunk of a tree, gnarly and angry.\n\nAlexi pushed Taylor down on her knees and she knew what he wanted. She took the same pragmatic approach she had taken with Sergei, be compliant, be willing, be complicit. She used her lips and her tongue on the swollen glans and when she had it wet enough with her spit she put as much as Alexi's cock as she could into her mouth.\n\nShe worked the shaft with her hand, stroking the flesh she couldn't fit in her mouth. She slathered at the meaty phallus and felt it throb and she swallowed the dribble of pre-seminal fluid that leaked from the pulsing member.\n\n\"Take of your dress. Get on the bed, take off your bra and pull down your panties,\" Alexi pushed her face off his cock.\n\nTaylor did as she was told and scooted to the middle of the bed when Alexi climbed on it.\n\n'Where was David!' she thought. She couldn't take much more of this.\n\n\"Open your legs,\" Alexi ordered and climbed between them when she opened them wide.\n\nHe too was a brute of man, muscled, tattooed and handsome. He lowered his face to her and she let him kiss her and the she responded when Alexi mauled her still-tender breasts. Once again her body betrayed her and her nipples engorged and before long she was wet with her own vaginal secretions. She put her arms around Alexi and rubbed her body against his, feeling the heft of his penis pressing into her belly, smearing her soft white flesh with pre-ejaculate.\n\nAlexi prodded impatiently at her vulva and Taylor put her hand down there and guided him to the entrance of her vagina. She was sloppy with lust and he slid in into her easily despite the girth of his cock. It stretched her vagina but some of Sergei's sperm was still inside her and it eased his passage as Alexi buried his cock inside Taylor as far as it would go. He took her ankles and lifted them indicating for her to put her legs around his back which she did.\n\nAlexi fucked her hard and fast while Taylor clung to him, holding on while he kissed her and fucked her so hard that the bed began to shake. A colossal orgasm began to bloom deep in her spongy channel and rippled outwards igniting a fire as it reached her clitoris. Taylor's screams were muffled by Alexi's kisses but they were screams of passion not of fear. Her orgasm intensified as Alexi blasted her full of his creamy seed, it oozed from her tight cunt and dribbled between her legs and into her sphincter.\n\nIt was then that she heard the blades of a helicopter and suddenly the whole farmhouse was awash with bright light. She heard gunfire in the distance.\n\n\"Fuck!\" Alexi roared and leapt off her.\n\nHe scampered across the room and pulled on his pants just as Taylor heard the deafening sounds of doors crashing open downstairs, flash-bangs, stomping boots, the screams of women locked in their rooms and the stuttering sound of gunfire getting closer. She heard a man scream somewhere as Alexi ripped a pistol out of its holder and flung open the door.\n\nAlexi fired his gun down the corridor, the sound thunderous in the small room.\n\nMore gunshots followed as the agents returned fire.\n\n\"Fuck you princess, you go to hell!\" Alexi, standing in the doorway, aimed his pistol at Taylor.\n\nA series of shots rang out and Alexi staggered back into the room, blood pouring from his body. He gargled once, spun on his heels and fell on top of Taylor.\n\nTaylor couldn't move under the weight of Alexi's body. Then she started to scream and tremble as she tried without success to push him off her. \n\nDavid Campbell entered the room, leading the way with his Glock. He checked to make sure that the room was clear and felt for a pulse and then pulled Alexi off Taylor. She had become catatonic. She was dazed and unresponsive. David sat on the bed and pulled her into his arms but it was like holding a rag doll.\n\nDownstairs the SWAT team paramedics were tending to two of the Russians who had suffered gunshot wounds, Sergei and Uri were both dead. Veronique Pascal had been handcuffed and led away to a waiting transport. Beside the prisoner transport was another bus and as the team cleared the rooms they led the young girls who had been trafficked downstairs and put them on the bus where two FBI linguists were waiting to interview them during their journey to a Federal holding facility.\n\nTwo SWAT guys came into the room and saw David holding an unresponsive Taylor in his arms. One of them checked Alexi and confirmed that he was deceased.\n\n\"She the snitch?\" one of them pointed at Taylor.\n\nDavid just glared at him.\n\nWhen the two men left the room he pulled up Taylor's panties, trying not to look at the mess between her legs. He put on her dress. It was like trying to dress a mannequin. Taylor said nothing. She was dumb; catatonic.\n\nDavid wrapped Taylor in a blanket that he took her from the bed and carried her downstairs.\n\n\"Where are you taking her? She's a material witness and possibly a suspect,\" the Special Agent in Charge growled.\n\nDavid ignored him and continued through the house, down the stoop and walked towards his car.\n\n\"Agent Campbell! You bring that girl back here right now!\" the SAC called after him.\n\n\"Fuck you!\" David said without even turning around.\n\nHe settled Taylor into the passenger seat of his car and he got into the driver's seat.\n\n\"Where are you taking her?\" the SAC called after him.\n\nDavid said nothing and drove Taylor away from the crime scene, aware that he was putting his career in extreme jeopardy.\n\nHe leaned Taylor against him, driving one handed with his right arm around her, comforting her and keeping the blanket in place. About an hour into the drive Taylor started to come around. She started sobbing and clung to David, making it difficult for him to drive but he did his best to comfort her all the way back to Chicago.\n\nDavid gained entrance to Taylor's apartment using his FBI credentials. By now Taylor was capable of walking unaided but she was unsteady on her feet and hadn't said anything comprehensible. He led her to the bathroom but she just stood there looking wretched. David took it upon himself to undress her and at first she fought him feebly but when he spoke to her in soothing tones she stopped.",
        "He put her in a warm bath and bathed her, knowing that he was probably removing forensic evidence but not caring. He lifted her out of the bath and towelled her dry. He couldn't help studying her body and wondering what it would be like to lie beside her naked. He found some babydoll pyjamas, she didn't appear to have any conventional nightwear, and dressed her. He put her in bed and pulled up the covers and she was asleep almost immediately. He turned out the lights, closed the blinds on the breaking dawn, kicked off his shoes and lay down beside her fully-clothed on top of the comforter.\n\nSometime while they slept Taylor kicked back the covers and snuggled up to him, holding him close, her breathing deep and rhythmic.\n\nIt was later that afternoon that an FBI entry team broke down the door to Taylor's apartment and put their weapons on David while they made Taylor get dressed and took her away.\n\nShe spent her last few days as a woman being interrogated by the FBI. She told them everything she knew about Alexi Kamerov, Katcha Kovalenko - AKA Veronique Pascal and Bradley Freeman. She was told that both Veronique and Bradley were being held in custody pending the laying of multiple serious Federal offences including: money laundering, people trafficking, perverting the course of justice, mail fraud... the list went on. Taylor was represented by Terence Mulholland who insisted that Taylor had been a cooperating witness and had not knowingly been involved in any crimes.\n\nHer statements were taken and she was released on her own recognizance with the caveat that she appear as a state's witness when the cases went to trial.\n\nShe asked about David Campbell and was told that he had been removed from the case and directed not to contact her whilst the investigation was ongoing.\n\n*****\n\nTaylor awoke excited on her last day on earth as a woman. She intended to enjoy the rituals associated with being a woman one last time and make the most of her last day of womanhood.\n\nShe luxuriated in a hot bath and then she climbed out and towelled off and wrapped herself in a satin robe and sat before her makeup mirror. She carefully applied her makeup and brushed her hair. After coffee and attending to some emails she dressed. Taylor enjoyed the slinky feeling of the sheer pantyhose as she slid them up her legs and smoothed the panty around her buttocks and belly, then she slipped her legs into a pair of pink satin cami-knickers, luxuriating in the feel of the cool satin slinking along her nylon-clad legs as she pulled them up. She put on a matching bra and a white charmeuse long-sleeve blouse and her navy-blue power suit. She stepped into her heels and checked herself in the mirror.\n\nTaylor's plans to use the ruse of being kidnapped by the Bratva to explain her sudden disappearance had been thwarted when David Campbell and the FBI came to her rescue so she needed another exit strategy. She went to a used car dealer and paid cash for a one year old Mercedes Benz and drove it back to her apartment. She made a show of telling the concierge that the car parked in her allocated parking space in the underground garage was hers in case he wondered where the strange vehicle had come from. She packed two suitcases and put them in the trunk, ensuring that she was seen doing so by the building's security cameras. When the search for her began she wanted people to think that she was planning to run away.\n\nShe hoped her disappearance would be blamed on a revenge abduction by the Bratva.\n\nFreeCom and PostPay were subject to an asset forfeiture application made by the FBI but were still allowed to trade pending the outcome of the claim. Both FreeCom's attorney Hugh Fleetwood and her own attorney Terence Mulholland believed that FreeCom and PostPay should be allowed to continue to operate now that Bradley Freeman and Veronique Pascal were no longer associated with the companies. An application had been made to the US Attorney stating that both companies were willing to surrender all proceeds of criminal activity as restitution to allow the companies to continue to operate and to allow the innocent parties involved to remain in control of the ventures.\n\nTaylor took a car service down to The Loop and settled into her office at FreeCom. She wanted to make sure that everything was in place so that the transfer of ownership and management of PostPay would occur seamlessly when she disappeared. She wrote a series of emails from her work email to the male Taylor Averille's email address explaining that she suspected that the Bratva would not let her off so easily after what had happened to Alexi Kamerov. She made sure that she was seen leaving the office late in the afternoon.\n\nShe caught the L home, enjoying being out and about and the appreciative glances she received from the male passengers. She had already collected Taylor's male clothing from the storage facility and his clothes were ready for him to wear when she transitioned. Once transitioned, Taylor would take a shower and wash off the last vestiges of his feminine identity and check into a hotel and await advice from the law firm of Mulholland and Stamp that his cousin has gone missing and that he would need to take over management of PayPal until she either returned or was declared legally deceased when the company's ownership would pass on to him.\n\nTaylor stripped naked and lay on the bed and masturbated for a long time, relishing the slow build up to her last climax. The shattering orgasm was intense; she would miss the mysterious body-wracking delight of the female orgasm but looked forward to once again having a penis to play with. She stepped back into her panties and put on her robe and took the mystical USB out of the drawer.\n\nIt still fascinated her. The almost otherworldly matte black oblong vibrated in her hand and emitted what felt like a minute electric charge. The red stones flashed erratically as she sat down at the PC. She fired up the computer and put the drive into the USB port.\n\nIt was ninety days almost to the hour since she had first put the USB into the same clunky old Sony Vaio. It seemed that the USB remembered where it was as this time there was no illegible random symbols and cyphers as the red lights on the USB began to pulse rhythmically. \n\nTaylor read the instructions on the screen.\n\nCongratulations. We hope that you have been enjoyed the gift and the most extraordinary and invaluable privilege that we bestowed upon you and we hope that the life changing manifestation you undertook bought you happiness and fortune. As you know, if you elect not to return to the gift today, the gift will be bestowed on you permanently and can never be returned. The digital display in the lower right corner is counting down the elapsed time.\n\nDo you wish to return the gift? Y/N\n\nTaylor's manicured fingernail hovered above the Y key. She had forgotten to remove her red nailpolish; it was a task that her male counterpart would have to attend to post-transformation. She was about to press the key when the callbox intercom buzzed, almost scaring her out of her skin.\n\nThe looked at the elapsed time counting down in the lower right corner of the screen. She had plenty of time. Over two hours. She went to the callbox and lifted the receiver to her ear.\n\n\"Yes?\" she whispered.\n\n\"Taylor? Is that you? This is David Campbell,\" his voice sounded muted and remote through the intercom.\n\nTaylor hesitated. She owed David Campbell her life but it was also his fault that she had been placed in extreme danger.\n\n\"This is Taylor Averille. What do you want?\" she asked.\n\n\"Can I come up? I want to speak to you in person,\" David pleaded.\n\nTaylor glanced at the elapsed time once again. It probably wouldn't hurt if the last person to see her alive was an FBI agent.\n\nShe pressed the button to remotely open the foyer door and activate the elevator.\n\nShe debated whether or not to put on some clothes but decided against it; David wouldn't be here long and as soon as she clicked Y on the keyboard she fully expected to black out and wake up back in her male body.\n\nTaylor went to the door and opened it when David pressed the doorbell. She was surprised to see him dressed in tailored slacks and a turtleneck, he was carrying his overcoat. It was the first time she had seen him not wearing a suit and tie. She took his coat and caught a waft of his aftershave; it was something spicy and exotic.\n\n\"Hello Taylor, sorry to disturb you so late,\" David noted how she was dressed and guessed that she was getting ready for bed. \n\nTaylor said nothing but led him into the lounge but didn't offer him a seat or a drink.\n\n\"I wanted to see you sooner but I wasn't legally allowed to do so. Now I'm no longer involved in the investigation I am free to see you outside of the context of work,\" David continued.\n\n\"So what, you want? To date me?\" Taylor said sarcastically.\n\nBut she couldn't help but thinking of him as a handsome young Sam Elliott with his gritty Texas drawl which still sounded kind of sexy.\n\n\"That might not be a bad thing,\" David gave her that killer smile that she found hard to resist.\n\nShe melted a little and allowed herself to smile. She pointed to the couch and indicated for him to sit and then sat down beside him. Her robe opened when she sat and she was showing a lot of leg and cleavage.\n\n\"What I really wanted to do was make sure you are ok and tell you that I'm so sorry about what happened to you,\" David said.\n\n\"You didn't seem to care too much for me when you gave me the choice of either working for you as a CI or being arrested by a bunch of FBI goons,\" Taylor said bitterly.\n\nDavid flinched visibly; a wounded look crossed his face.\n\n\"You're not going to make this easy for me are you?\" David sighed.\n\n\"Why should I?\" Taylor said; her voice emotionless.\n\n\"You shouldn't. I deserve the reproach but I want you to know that I do care about you,\" David said earnestly.\n\n\"Ok,\" Taylor said, a little dismissively.\n\n\"I care for you a lot,\" David said a little sheepishly.\n\n\"Really? I didn't get that feeling,\" Taylor said.\n\n\"Because I had to remain professional; I couldn't let my feelings show,\" David took Taylor's hand in his.\n\n\"Feelings?\" Taylor stared into his eyes.\n\nDavid leaned into her and pressed his lips to hers. When Taylor didn't resist he kissed her harder and slipped the tip of his tongue into her mouth. Taylor responded and David put his arms around her and pulled her closer. Taylor put her arms around him and pressed her body against him.\n\nDavid broke the kiss and gently brushed the hair out of her eyes.\n\n\"I love you,\" David whispered.\n\n\"Really?\" Taylor whispered.\n\n\"Really. I really love you Taylor,\" he smiled at her and she melted.\n\nTaylor sensed David's sincerity and his love seemed almost palpable. Taylor realised that what she had thought was just an attraction to David was indeed love.\n\nTaylor stood up and David arose with her. They kissed again and her robe fell open. David found her breast and stroked it, causing her nipple to engorge. She found him erect in his slacks and gently squeezed his turgid penis.\n\n\"Come,\" Taylor disengaged and took David's hand in hers.\n\nShe led him to her bedroom.\n\nOn the way to the bedroom she stopped in front of the old Sony Vaio and hit the 'N' key on the keyboard.\n\nThe red lights on the side of the USB glowed fiercely for a second and then they extinguished... forever.\n\nThe End\n\nAuthor's Note: I debated whether or not this story belonged in the non-consent/reluctance or crossdresser/transgender categories. As Taylor did transform I believe I chose the correct category. Please leave your comments and feedback. \n\nEver yours xxx Michele"
    ],
    "authorname": "MicheleNylons",
    "tags": [
        "force-fucked",
        "forced",
        "nylons",
        "oral",
        "pantyhose",
        "prostitute",
        "stockings",
        "transitioning",
        "violent"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/usb-unwanted-sexual-behavior-ch-04"
}