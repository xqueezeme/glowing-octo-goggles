{
    "title": "Linh",
    "pages": [
        "I've been reading stories on this great site for 20 years now. Once I started actually trying to write one, I realized just how difficult it can be. So, I'd like to give a shout-out to all the authors out there that have provided me (and others) with great stories over the years...your work is appreciated.\n\nI'd like to give my humblest thanks to LexxRuthless. Not only is he one of the best authors here, he also provided me with a lot of guidance and advice on writing and posting to this site. His words of encouragement are also greatly appreciated. It's taken me quite a while to be brave enough to finally post something, and it wouldn't have happened without his gentle pushing. I have been sharing with him a very long story that I started almost a year ago. He convinced me to put that on the back burner, since I was stuck trying to make it perfect, so that I could get something on the site to start getting feedback. Thanks man! \n\nHe also reviewed and provided a tremendous amount of feedback and suggestions on this story, kindly going so far to actually draft several paragraphs where I was struggling, which made it much much better. He deserves a tremendous amount of credit for this story, but I didn't take all of his suggestions, so any and all mistakes are on me alone.\n\nAdditionally, TryAnything provided some great insight on the dialog, helping me streamline things. Thank you, sir, for your time and input!\n\nDisclaimers: This is a work of COMPLETE fiction, and just a fantasy. The characters exist only in my perverted mind. Yes, this story is a stretch of reality, especially the ridiculous nature of the massage described here; if realism is important to you (and I get it if it is), this probably isn't the story for you.\n\nAs ZenZerker says (and he's been quoted by so many), \"Don't expect realism, and you won't be disappointed when you don't find it!\"\n\nAll characters engaging in sex are 18+\n\n* * * * *\n\nI was sitting at the hotel bar, nursing a Scotch (neat, of course; no sense in any of that ice silliness) when Linh sat down beside me.\n\n\"That looks good; I would like one, please,\" she told the bartender, pointing to my drink.\n\nI raised an eyebrow at her. \"Really? Scotch? You've always struck me as more of a wine person.\"\n\nShe smiled a bit at me. \"Usually, yes. But I need something quite a bit stronger today,\" she said in her soft Vietnamese accent. Her English was great, albeit choppy at times, but it was still a second language to her. Mostly, she just didn't tend to use much slang or many contractions. I always wondered if that was a result of learning English at a school in Vietnam.\n\nI smiled back. \"Yeah, you've seemed off all day today. I assumed you were just tired from traveling. Did you get in yesterday or this morning?\"\n\n\"This morning. But, I am not used to the traveling like you are. It was certainly an early morning flying in from Arizona.\" She smiled again, but still looked a bit off.\n\nI guess I should back up a bit here and give some background. Both Linh and I worked for the same company. We both used to live in town and would work in the office every day. But, about six years ago, I moved from California to be near family in New York. The company didn't want to lose me, so they set up a home office for me and allowed me to telecommute, provided I traveled back to the office once or twice a month. She had also proposed telecommuting from Arizona, as her relationship with her boyfriend had been on the rocks with her being distant. This was her first trip back to California since the move.\n\nLinh was an exceedingly bright woman and had graduated top of her class with a Masters in biomedical engineering. We hired her as an intern about four years ago and then full time shortly after. Her contributions to the company and strong work ethic made the approval for her to telecommute an easy choice for management.\n\nLinh was also a very beautiful woman. Of mixed descent, she had been born and raised in Vietnam before moving to the US to attend University of Arizona. Her overall look was decidedly Asian, but she had a bit more curve to her than a typical Vietnamese woman. She also had the most captivating bright green eyes I had ever seen.\n\nI'd fantasized about her more than once, even though I never would have considered making a move. Not only did she have a boyfriend, she was also over 10 years younger than me. I certainly didn't want to come across as the creepy old guy at work, even though I'd had more than one tryst with a coworker. I'd never felt the need to settle down, so the relationships didn't ever go anywhere. We always ended as friends and coworkers, though.\n\n\"You get used to it,\" I told her. \"A few trips and you'll be in a nice rhythm.\" I grinned at her. \"At least you don't have to travel as far as I do. There is no direct flight between here and upstate New York. My travel days tend to be 12 to 14 hours.\"\n\nShe laughed at that and took a sip of her drink. She winced. \"Oh! That burns. How do you drink this stuff?\"\n\nI grinned again. \"Years of practice, little one.\"\n\nAnother laugh. \"Yes, the warming feeling is nice.\" Then, her face grew pensive. After a couple minutes of uncomfortable silence, she turned to me. \"Do you mind if we get a table and talk? I have something to ask and I do not want anyone else hearing.\"\n\nI cocked my eyebrow again at her. \"OK. I hope it's nothing serious?\" I left the question open ended and looked at her.\n\n\"No. It is just--can we go to a table and talk? Before I lose my nerve?\"\n\nWell, now I was definitely intrigued. I hoped she wasn't going to tell me she was leaving the company. We made our way, drinks in hand, to a small table in the back of the mostly empty bar. At my signal, the bartender came over and brought us two more drinks.\n\n\"OK,\" I prodded. \"What's up?\"\n\nShe grabbed her first drink and threw the contents back with one gulp, shuddering as she set the empty glass back down. She then reached for her second drink.\n\n\"Whoa, Linh. Watch that stuff. It'll sneak up on you pretty quick.\" She coughed a bit then made the good decision to set her drink down. I didn't want her to just slam another double drink. She wasn't used to alcohol and probably weighed all of 120 pounds.\n\nAfter her coughing fit, she quietly studied her drink, not meeting my eyes.\n\n\"Seriously, Linh. What's up? You can talk to me about whatever you need to. It won't go any further.\"\n\nShe took a while before finally blowing out a breath and looking up at me. \"OK. So, this is what I was worried about for telecommuting. I, um, did not tell anyone before because I was hoping it would be better.\" She took another sip and grew quiet again.\n\n\"And...\" I prompted.\n\nAfter another sip and a few moments of silence, she squared her shoulders and looked at me again. \"I have a, um, an issue with sleeping. Ever since I was a little girl, I could not sleep in a room by myself. I have tried everything from sleeping aids to nightlights and--well, everything our doctor could think of.\"\n\nShe caught the bartender's attention and held up her near empty glass. Soon enough, we had two more drinks at our table. I didn't say anything, just letting her continue at her own pace.\n\n\"I have always had roommates and such. When growing up, my sister and I shared a bedroom. When I went to university, I joined a sorority just so I knew there would be several girls living together. Even though I had my own room, I still was fine. I guess it was because there were many other people there.\"\n\n\"Well, isn't that the same as staying in a hotel? You should be OK, right?\"\n\n\"Yes, that was what I was hoping. But, as soon as I got into my room this morning, I had a bit of a panic attack. That is usually what happens when I try sleeping on my own.\"\n\nI thought I understood where this was going. Always one to help solve a problem, I spoke up. \"Well, we can't have you being uncomfortable. I can convince management to allow you to strictly work from Arizona. With the changes in technology, what with online meetings and all, there really is no need for you to travel out here.\"\n\nShe looked a little wide-eyed at that but quickly shook her head. \"No, that is not what I want. I do not want to be treated differently at work. Plus, I think traveling back here is important for maintaining relationships with coworkers.\"\n\n\"Oh, OK.\" I was a little confused. \"Then, what can we do to help you?\"\n\nShe finished off her second drink and was quiet for a few more minutes. She once again looked back up at me. \"Um, would you be OK if I stayed with you?\" She quickly added, \"It is fine if not! I understand if that makes you feel uncomfortable. I can figure something else out. It is OK. Forget I asked.\" She looked a little panicked, almost near tears.\n\nWhoa! I'd never seen her like this. In the four years I'd known her, she exuded nothing but confidence, regardless of how stressful things would get at work. Seeing her like this--nervous and vulnerable--made me feel bad for her. It was also a surprise how I felt myself reacting on an emotional level. I wanted to reach out, to comfort her. I wanted to hold her and tell her everything would be alright.\n\nInstead, I smiled at her to ease the tension she was under. \"Hey. Don't think for a second you've offended me or anything. It's OK.\" I reached over and patted her hand, even though I wanted to grab it. I'd never done more than shake her hand in the past, so I didn't want to cross a line.\n\nShe looked visibly relieved, her shoulders loosening a bit.\n\nI continued. \"Hmmm. Yeah, we can do that. I have a room with a king bed right now, but I'll go to the desk and change to a room with two queens.\"\n\nI started to get up, but she quickly reached up and grabbed my arm. I looked at her, a bit confused.\n\n\"No. No, do not change it. The beds are very large and I do not take up much space.\" She smiled at me. \"Please. Sit back down so we can go over this.\"\n\nThat was a little shocking. Oh well. We could figure out the sleeping arrangements later. I knew I could just have a cot sent up for me. I took my seat again and reached for my drink. \"OK, how do we handle this?\"\n\n\"First, I do not want anyone knowing. I would be embarrassed for people to know I can not even sleep by myself, like a frightened child.\" She smiled at that but blushed a little.\n\n\"OK. But what about--\" I started.\n\nShe immediately understood my concern, so she cut me off. \"Tom\u00e0s knows. I talked to him about it before I left. He was the one that came up with the idea.\" OK, so that meant her boyfriend was good with it. I had met him on a few occasions and we got along. I guess he trusted me, which was warranted. I certainly wasn't going to make a move on his girlfriend. But it was like she could read my thoughts.\n\n\"Tom\u00e0s and I have a, um, unique relationship. He is fine with me staying with someone, as long as it is you.\"\n\nI took another drink of my Scotch and waited for her to continue. She was in her element, I knew. Taking control of a situation and brainstorming it.\n\n\"Second, I want to maintain the illusion, so I want to still book my own room.\"\n\n\"Makes sense,\" I said. \"That way we can also choose which room is better.\" I grinned at her.\n\n\"Yes. And third.\" Another drink and another pause, \"Third, I plan to make it worth your while. I know I will be cramping your style by staying with you--\"\n\n\"Whoa. Not true. Look, I live alone in New York. Having a roommate when traveling sounds kind of nice. You do not need to 'make it worth my while' or anything. It's really not a big deal. Frankly, you're getting the raw end of the deal here. Ever live with a 40 year old man? We snore.\" I grinned at her again.\n\nShe laughed at that. \"Oh, I think I can live with snoring. But I am not taking 'no' for an answer here. Something you do not know about me is, I was a masseuse in Vietnam. I will give you a great massage after work every day.\"\n\nI started to open my mouth and speak. She interrupted before I could. \"Please let me do this. Otherwise, it will hurt my feelings. I need to do something for you to make me feel OK about this. I know it is a little personal and intimate of an act, but I believe we can separate work from after-work.\"\n\nAfter a couple of minutes, I finally relented. \"Well, I'd be lying if I said a massage didn't sound nice after traveling all day yesterday. You really don't have to do this--or anything else, for that matter--though. I really am OK with just being roomies.\"\n\n\"I understand. But it is important to me to do something.\" She reached her hand across the table. \"Deal?\"\n\nI took her hand after a minute. \"Deal,\" and we shook.\n\n* * *\n\nAfter finishing our drinks and a light dinner (I made sure she ordered something that would help soak up the alcohol; she was visibly buzzed), we made our way up to my, er, 'our' room around 7:00. On the way, we stopped at her room so she could get toiletries and a change of clothes for tomorrow.\n\nOnce in our room, she asked, \"Are you OK if I take a shower?\"\n\nI smiled at her. \"Of course. And this is your room too. You don't need to ask my permission to shower or anything.\"\n\nShe laughed again. \"Oh, I meant in case you wanted a shower. Are you OK if I go first?\"\n\n\"Yup. I can wait.\" I turned to grin at her. \"Just don't take all the hot water.\"\n\nLaughing, she made her way into the bathroom with a small bag. After about 20 minutes, she emerged from the bathroom followed by a billow of steam. Looking up, my breath caught a bit. Her long dark hair was now wet (she was still toweling it off), and she was now wearing a very short silk robe, tightly cinched around her waist. This only worked to accentuate her curves, which she normally kept well hidden in her business attire.\n\nAnd when I say 'short', I mean really short. That line from that terrible Ford Fairlane movie came to mind. I didn't remember exactly how it went, but it was something like 'Man! You have to shave when you wear a skirt that short. And I don't mean your legs.'\n\n\"Wow,\" I muttered before quickly composing myself. \"That's, um, a beautiful robe.\"\n\nThat earned me a dazzling smile. \"Thank you. It is my favorite.\" She gave me a look. \"So, are you showering or are you ready for your massage now?\"\n\n\"Oh, um, I'd like to shower first.\" Actually, I didn't typically shower in the evenings. I was a 'shower in the morning' kind of guy. That helped wake me up. But, if this girl was going to be touching my back, I wanted to at least smell nice.\n\nAfter showering, I got dressed in shorts and a t-shirt. I walked back into the room to see her at her computer.\n\n\"Hey,\" I said. \"The work day is over. Didn't I warn you about working too late?\" I grinned at her.\n\nShe laughed. \"Just reading through emails. I was tired today and did not get as much work done as I would have preferred.\"\n\n\"Well,\" I continued, still grinning, \"be careful how you answer them. You had three double drinks, you know.\"\n\nShe giggled a bit. \"Yes, and that was after two glasses of wine before I came down to the bar to join you. I really needed the boost before I talked to you.\" She shut her laptop and stood up. \"So, are you ready for a massage?\" she asked as she raised her hands up and wiggled her fingers at me.\n\n\"Um, again, I really am OK--\"\n\n\"Enough of that. I want to do this for you.\"\n\n\"Um, OK. So, where do you want me? On the chair?\" I started to sit at the comfortable chair by the window.\n\nShe looked a little confused before she understood. \"What? Oh, no, not a chair. I am giving you a full body massage. You will love it! Believe it or not, my fingers are quite strong.\" She smiled at me again.\n\n\"OK, so...just on the bed then?\"\n\n\"Yes, please. Close to the edge. I start with your shoulders, head, neck, upper back and arms. I need to be able to reach across your body.\"\n\nA little nervous, and not knowing why, I quickly made my way to the bed lying face down close to the edge.\n\nShe giggled a little. \"No, Jim. I need you undressed for this. I use some warming oil and it only works on your skin.\"\n\n\"Oh, um, OK.\" With that, I sat up and removed my shirt, quickly lying back down on my stomach.\n\nA laugh this time. \"What part of 'undressed' is confusing? This is an all body massage. Shorts too.\" I hesitated which she sensed immediately. \"Oh, are you shy? That is a bit surprising. Here,\" she said as she untied her belt and let the robe slide to the floor, exposing her flawless body in all of its glory. I turned my head the other way, just to keep from staring. She blew out a breath. \"Seriously, we are both adults. I have seen naked men before, and I assume you have seen naked women. It is not a big deal.\"\n\n'Big deal'. Interesting choice of words. One quick glance at her perfect body, and the front of my shorts was becoming, in fact, a very big deal. Without getting up, I tugged my shorts and boxers down and off, exposing my butt to her.\n\n\"There. That is better. Now, let us get started.\" With that, I heard the cap being opened on the small bottle of oil she was carrying. After a second, I heard her rubbing her hands together, the slick sound of oil making comical noises. \"Oh,\" she said. \"First, the mood.\" I heard her fiddle with her phone and soon, the room was filled with very soft music playing. I then felt her very warm hands touch my back right between my shoulder blades as she started to spread the oil. \"Just close your eyes, relax, and enjoy.\"\n\nSo, I did. With my eyes shut, I luxuriated in the feeling of her strong hands working magic on my shoulders and neck. She ran one hand through my hair and began massaging my scalp after a short time. She then moved to my upper arms, first massaging the one closest to her and then leaning over to massage my other upper arm. By this time, I was completely relaxed and in a dream-like state. But, the fact her hardened nipples were rubbing along my back and head as she leaned over was not lost on me.\n\n\"Now it is time for your legs and lower back. It is easier for me if I am on top. Are you OK with that?\"\n\nBroken from my reverie, I said, \"Um, sure. OK.\"\n\nWith that, she climbed up on top of me, straddling my lower back. I felt her lean over and start massaging my calves, using her strong fingers to really work on my tense muscles. Slowly, she moved her way up to my thighs, spending a lot of time ensuring every inch of my legs were subject to her magical touch. The sexual nature aside, this was easily the best massage I had ever had. She scooted herself up my back, settling on my upper back. I could feel the warmth of her perfect backside as she sat down gently, not putting too much weight on my back.\n\nMy eyes flew open wide a second later as I could now feel the unmistakable heat and moisture from her crotch on my skin. I cleared my throat and closed my eyes again. She rubbed more oil into her hands, then leaned down and started right below my buttocks, massaging my ass for a while before moving to my lower back. After really working my lower back, she finally got up and stated, \"There. Done with the back. Now, you need to turn over so I can take care of your front.\"\n\n\"Umm...\"\n\nShe immediately sensed my tension. \"I learned long ago that a man getting an erection while being massaged is very normal. I will not be offended.\"\n\nEven though I tried everything I could think of in the brief few seconds before I needed to turn over (I had Homer Simpson's line 'think un-sexy thoughts...think un-sexy thoughts' going through my head), it didn't work. Finally, I just sighed and turned over, exposing my very erect cock.\n\n\"Wow,\" she whispered, her eyes going wide. Seeing my blushing face, she quickly recovered. \"Sorry,\" she said, shaking her head to clear it. \"That was unprofessional.\" She took a deep breath and blew it out. \"OK. I start with the hand closest to me and work across until I get to your opposite hand. Is that OK?\"",
        "I nodded, and she poured more oil into her palm and started rubbing her hands together to warm everything. She took my left hand in hers and started massaging the palm of my hand, digging into the fleshy part of my thumb. She started moving up, working on my wrist, up my lower arm and finally massaging my biceps. Straddling my arm, she began reaching over to my right arm, reversing the order. As she moved from my biceps down my arm, she had to lean over further and further. Even though my eyes were closed, I could feel the heat of her body getting ever closer to my face. She also had straddled my left arm so she could reach over, and I felt her very moist pussy rub against my arm. Then, I felt the unmistakable sensation of her hard nipple brushing along my chin before running it along my lips.\n\nOh, God. How was I going to control my breathing? I could already feel it rapidly increasing and I could feel my erection start to throb. She settled her nipple against my lips while slowly massaging my lower arm and hand.\n\n\"It is OK,\" she said softly. I assumed she just meant it was OK that I was turned on, but after a minute or so of me not doing anything, she breathed out, \"It is fine. You can kiss it if you want to. I would like that.\"\n\nWhoa. OK, so this is where the massage was going? Without even thinking through any of the potential ramifications, I opened my mouth a bit and let her nipple slip inside. I kissed and lightly sucked her hardened nub, causing her to softly moan. After a couple of minutes, she adjusted so her other breast was against my lips. I quickly took that nipple in, sucking a bit more aggressively, which earned me more moaning.\n\nAfter I sucked her other nipple a while, she moved back and stood up. She was completely flushed, her chest rapidly rising and falling with her increased breathing. \"OK, now I need to finish your front.\" She arched an eyebrow at me. \"Are you OK if I straddle you again?\"\n\n\"Um. Yeah. I mean, yes. Of...of course.\"\n\nShe put more oil in her palm and, after rubbing it in her hands, got on the bed and straddled me, facing away. Since she wasn't able to see me, I had no reason not to stare. Her ass was absolutely perfect. Even though I had only seen her in conservative business attire, you could tell she had a more hour-glass shape than would be expected for such a tiny woman. But the slacks and skirts she wore never gave any indication to her slight bubble butt. Her ass was toned, as were her legs, and gorgeous.\n\nLeaning down to start working on my feet, her ass was thrust into the air. My eyes gawked open. With her legs spread to straddle me and bent over like she was, her pussy and ass were completely open for view. Her pussy was beautiful. The outer lips were a bit swollen, but I could see the slightly-darker inner lips peeking out a bit. What's more is I could see a drop of moisture running down the inside of her right thigh.\n\nResisting the urge to reach down and wipe it off so I could taste her, I moved my eyes up a bit to her ass. Her perfect moons were spread enough for me to see her hairless asshole between them. My breathing certainly did not calm in any way. Damn, I wished I had jerked off right after work! I felt like I was going to explode at any moment.\n\nJust like she had done when she was on my back, she began working her way up my legs to my thighs. She again scooted her body up, her pussy getting closer and closer to my face. By the time she was massaging my upper thighs, her pussy was close enough that I could feel the heat and smell her intoxicating female odor mixed with the body lotion she had used after her shower. She moved up a little more to massage my stomach a bit, and she was now close enough that I could have just stuck my tongue out for a taste.\n\nShe then stopped massaging but didn't move. \"How was that?\" she breathed out.\n\n\"Perfect,\" I managed to say, after finally finding my voice.\n\n\"Good. I am glad you enjoyed it. I enjoyed doing that for you.\" She didn't say anything more and didn't move for a while. I started to clear my throat to speak before she quietly asked, \"May I please go further?\"\n\n\"Umm...OK. Can I, um, can I also go further?\" I hoped that didn't creep her out or anything,\n\n\"Yes, please. I need it.\" With that, she grabbed my throbbing cock and started kissing and licking it. Groaning, I grabbed her ass and brought her pussy down to my mouth. Usually, I like to be slow and tease a woman a while, but I had never been so worked up. I quickly buried my tongue between her folds and began licking her tangy pussy. She yelped a bit before taking my cock into her mouth. I didn't want to come too soon (or without warning her; I had no idea if she was the kind of girl that allowed a guy to come in her mouth), so I just focused all of my attention on pleasuring her.\n\nMoving my tongue in and out of her a few times, I ran it down to her clit, gently taking that hard pearl between my teeth and sucking lightly. That garnered a muffled scream and a slight flood of juice running down my chin. She took my cock out of her mouth long enough to give a louder and longer moan. Silence followed, with her body going rigid. Then, a slight \"Oh!\" was let out before my face was literally sprayed with her juice, and her body started trembling uncontrollably. I held firm to her ass as she worked through her orgasm, never releasing her clit from my mouth.\n\nFinally, her body calmed down and her breathing got under control enough for her to speak. \"Oh, Jim. That was...oh my. That was the best orgasm I have ever had. Thank you.\" With that, she took my cock back in her mouth and resumed her gentle sucking. She didn't need to thank me. Not only did I immensely enjoy sucking her, I wasn't anywhere near finished. I ran my tongue up and down her outer lips, occasionally kissing her clit again, always eliciting a muffled yelp from her.\n\nNot able to help myself, I then set my sight on something else. Starting with her clit, I again ran my tongue slowly up her slit. But instead of stopping at the other end of her pussy, I kept moving up over her taint and finally zeroing in on her tight little asshole. Her body went rigid and she let my cock fall out of her mouth.\n\n\"Oh! Jim, what are you doing? Oh no! Stop. That is my bum hole. You should not be...oh!\" But her body was saying something different. She was actually pressing back against me, allowing me to really treat her asshole to a good tongue-bathing. The only taste and smell were her womanly juices and the lotion she had used. I continued attacking that tight hole with my tongue, occasionally stiffening my tongue and pressing it against her rosebud.\n\nAfter a few minutes, she relaxed enough so that my tongue actually went past her tight sphincter a little. I kept at it until her body once again stiffened and started shaking. And, like before, my chin and chest were covered by her spray. It wasn't as much as last time, and her orgasm wasn't quite as intense, but it was obviously still a good one for her.\n\nIt was good for me too. I had been with several women in my life and I never got tired of going down on them. Plus, I had gained a lot of experience over the years and knew what I was doing. Even though all women were different (some were anti-fingers, some only could come by being fingered, some loved the analingus I did, others were disgusted by it and had me stop), I was still pretty good at reading their reactions and focusing on what was needed to give them an orgasm.\n\nBeing older, after all, has its benefits.\n\nShe had her head lying on my thigh, her breathing rapid and her fist still clenched around my cock. \"No one has ever done that before. It is kind of gross, though, correct?\"\n\nI chuckled a bit. \"Gross? No, You're very clean and all. Although I do admit that's usually something I only do in the shower or hot tub or something.\" I gave her inner thigh a couple of kisses, then went on. \"But it was just too irresistible. You have a perfect ass.\" I leaned up to plant another kiss right on her rosebud, eliciting another yelp.\n\n\"Really? I think my bum is too big. It is bigger than any of the women in my family. I think that is the caucasion side coming through.\" She laughed a little. \"You Americans and your fast food. I never met my father, but my mother said he was a very large man, muscular and tall.\" She sighed. \"I can not believe you got me to orgasm so hard. Twice. That has never happened to me.\"\n\n\"Too big? Nope.\" I squeezed her cheeks in my hands. \"You are very firm. Your ass is absolutely gorgeous.\" I kissed each of her moons in turn, then started back toward her pussy, kissing lightly all the way.\n\n\"Oh! No,\" she said, as she climbed off of me. \"I am going to focus on you now. And I can not do that with you working magic on me.\" She laid down next to me and once again took my cock in her hand, leaning over to bring it to her mouth.\n\n\"Umm...Linh?\"\n\n\"Yes?\" she managed in between slurps along my shaft.\n\n\"Um, I don't want to ruin anything here, but, um...how far are we going?\"\n\nShe looked up at me, a confused expression on her face. Then, she realized what I was asking. \"You mean will this go further?\" I nodded. \"Well, I was hoping we would be making love. I have never even seen a penis this big before,\" she said, giving it another squeeze.\n\nReally? I wasn't small, but I was only about 7\" long. I did know I was very thick though. But still; I wasn't usually the biggest guy a girl had been with.\n\n\"But what about--\"\n\n\"Tom\u00e0s? Like I said, we have a unique relationship. He is probably having sex with someone right now. We are very open. He knows I planned to seduce you.\" With that, she took me in her mouth again, this time looking up at me with those jade green eyes.\n\nGroaning, I reached down to pull her chin up a bit, pulling my cock out of her warm mouth. After a few seconds to calm down, I asked her, \"I take it you've never been with an older guy?\" She shook her head. \"Well, one thing to know is the older a guy gets, the less likely there's a multi-orgasm evening.\" I grinned. \"Don't get me wrong. I believe I'll be able to get it up again after I come, but it's not a guarantee.\"\n\n\"Oh,\" she said. \"I did not know that. OK, do you mind if we make love then? I still want to pleasure you with my mouth, but we can have sex for a while, correct?\" She didn't even wait for a response, climbing on top of me. Holding my cock with one hand, she guided me into her steamy box and started slowly lowering herself down, moaning loudly the entire time. She stopped with about half of my length in her and leaned down to rest her head on my chest. \"Just let me adjust a little, OK? Your penis is so thick.\"\n\n\"Yes, of course,\" I breathed out. \"Just go at your own pace.\" I was just concentrating on not coming. I couldn't remember the last time I had felt a pussy so tight. Christ, was she hot. I could actually feel my cock throbbing inside her tight sheath. It was almost painful, but it felt so amazing. It was like a gloved hand was squeezing me.\n\nAfter several minutes of her lying on top of me, she lifted up a bit. She sat upright, placing her hands on my chest. Slowly, she lowered herself more, taking another inch of my cock inside her. \"Oh, Jim. I feel so full. I never imagined anything would feel so good.\" She rocked her hips a bit, slowly fucking me. \"I do not know if I can get all of you in me, but...\" she trailed off, again lowering her head to my chest. She shuddered a little and grew still.\n\nAfter a moment, she raised up again and lowered herself further, taking the final couple of inches inside. Her eyes grew wide and she opened her mouth in a silent scream. \"Oh, no! I can not believe I have it all,\" she finally got out. I could feel her juices absolutely bathing my balls.\n\nShe was still for a few more minutes, just getting used to my size. Then, she started rocking back and forth a little, slowly at first before increasing her pace. I reached up to grab those perfect tits, pinching and pulling at her nipples. I kept my eyes on her face the entire time, gauging her reaction to see what she liked and what she didn't.\n\nEven with her eyes shut in concentration, her face was animated enough to read her reactions. Surprisingly, she seemed to enjoy it most when I was the roughest with her, really tugging at her hard nipples. Taking that cue, I lifted up so I could take her right nipple in my mouth. Still tugging and twisting her left nipple with my hand, I started gently biting and pulling at her other nipple with my teeth. If I had any concern about being too rough or hurting her, she immediately allayed those fears when she reached up and pulled my head tighter into her chest. She then became a bit vocal.\n\n\"Oh, yes. Please bite them. Pull them. Hurt me. Please do not stop.\" She continued pulling me into her chest, painfully tugging at my hair. Her movements became increasingly frantic, raising and lowering herself on my cock, fucking it in and out of her tight pussy. The room was filled with the squishy sounds of my cock fucking her incredibly wet pussy, the smacking of my lips on her nipples, and her increasing groans.\n\nSuddenly, her body went stiff once again, and her mouth opened into a silent scream. Her pussy got even tighter and squeezed down on my cock. My stomach and balls were then soaked with her juices. I had always found that having sex with a squirter was an awesome experience. It was such a turn on to make a woman actually ejaculate, and she had squirted three times already!\n\nAfter her orgasm, she collapsed on top of me, her breathing heavy but slowly calming down. She remained on top of me for a few minutes, then rolled off to collapse next to me, my cock disengaging from her with a wet sound. She lay like that for several more minutes, her arm draped across my chest and her head buried in my shoulder. She finally looked up at me, those captivating green eyes brighter than normal.\n\n\"I am sorry, Jim. I need a little break. No one has ever...um...ever...you know...\"\n\n\"Fucked you like that?\" I finished for her.\n\nHer face colored at my choice of words, the blush reaching her chest. \"Yes,\" she agreed.\n\nI chuckled. \"Well, technically, I didn't fuck you. You were doing all of the work. Trust me. When I'm in control, it'll be even more intense.\"\n\nHer eyes widened a bit and her pupils dilated. \"Will it hurt?\" she asked softly.\n\nI reached over and tenderly touched her cheek. \"Oh, Linh. No, I won't hurt you. We can go at your pace.\"\n\nShe closed her eyes and was silent, once again lying her head down on my shoulder. After a few seconds, she quietly asked, \"No. I meant will you hurt me...please?\"\n\nWhoa. OK, that made sense why she came so hard once I started really pinching, biting, and pulling her nipples. She got off on pain, at least a little. I wasn't really into hurting women, but I had been with a few that enjoyed being spanked and roughly fucked. So, I hoped I could give her what she wanted.\n\n\"Well, I'll do whatever you want to try. What is your fantasy? Do you always enjoy rough sex? Knowing your desires will help.\"\n\nShe raised her head again, looking at me but not saying anything for a minute. Finally, \"It has been a very long time since I had sex. I do have...fantasies that I want to try.\"\n\nWait. That made no sense. Why had it been so long since she had sex? So, I asked her.\n\n\"What do you mean it's been a long time? Don't you and Tom\u00e0s--\"\n\nShe cut me off. \"Oh! I should not have said that.\" She blew out a breath. \"OK. I am going to tell you something, but you have to promise to not tell anybody.\"\n\n\"OK. I promise.\" I held up a three-fingered salute. She furrowed her brow in confusion. \"Sorry,\" I explained. \"Boy Scout salute. It means I won't tell another living soul.\"\n\nShe chewed on her lower lip for a few seconds, obviously struggling with divulging a secret. Finally, \"Tom\u00e0s is...gay. He and I are getting married so he can become a citizen. Do not misunderstand,\" she went on quickly. \"We love each other very much. But only as friends.\"\n\nThat made me feel a whole lot better. I knew she said he was aware of her plan to seduce me and he was OK with it, but it was still weird. In the back of my mind, I was still struggling with having sex with a woman that had a boyfriend. Now that wasn't a problem.\n\n\"I think that's very cool of you. I like Tom\u00e0s. I'd hate to see him deported.\"\n\nShe settled back down, once again lying her head on my chest. We were quiet for a while before I finally broke the silence. \"So, about these fantasies?\" I prodded.\n\nShe looked up at me again before returning her head to my chest. Finally, she asked, \"How would you describe me at work?\"\n\nI was a little confused. \"What do you mean?\"\n\n\"I mean, how would you describe me in meetings or on teams?\"\n\nI thought about that. \"Hmm. I guess I would describe you as knowledgeable and passionate about the work. You also very much take charge of the meeting and provide that same leadership when assigned to a team.\"\n\nShe chuckled a bit. \"Yes. Exactly. As a half Asian woman--or a woman in general--I have been taught to be a leader and take charge when it is needed. Basically, my professors told me to be the most dominant person in the room.\"\n\nI considered that. She was right. Although we had many women in management at work, business was still a very male dominated society. I never considered it was even harder for someone from outside of the country.\n\n\"Well, that makes sense. But, I don't know if I would use the word 'dominant.' You aren't a mean taskmaster or anything. You do what most of our group does. Take charge to keep things on track.\"\n\nAnother chuckle. \"Yes. And I believe I am good at it.\" I murmured my agreement. \"And, I have always expanded that to the bedroom with the few men I have been with.\" She was quiet for a while again. Then, \"But I do not want to be that way with you. I want to be--what is word--your, umm...\"\n\nI didn't have a clue where she was going with this. \"Girlfriend?\" I ventured.\n\n\"No. I mean, yes. I want to be your girlfriend.\" She blew out a sigh, her moist breath blowing past my chest, giving me goosebumps. \"I mean, in the bedroom. I want to be your--I do not know the word for someone that does what she is told...\"\n\nShocked, I just blurted out, \"Slut?\" Remembering she probably didn't know what that meant, I expanded. \"You want to be submissive in the bedroom? Is that it?\"\n\nI could tell she was blushing again, actually feeling the heat from her face on my chest. \"Yes,\" she finally answered softly. \"But, I have never done that, and I do not know what to do.\"\n\nI was still shocked but had been here before. I knew what the first step should be. \"I guess the first thing we need is a safe word for you. Do you know what that is?\" I asked.\n\n\"Is that a word I can use when I want you to stop?\"\n\n\"Exactly. A lot of submissive women--or guys, I guess--want to be able to say 'no' as part of the fantasy, without actually meaning 'no.' So the safe word allows you to let me know when I've gone too far. It's especially important since you seem to want to add pain to the mix. I'm almost twice your size, at least in weight. It would be easy for me to actually inflict too much pain. I don't want to do that.\"\n\nAll the while, I was stroking her hair. My cock, which had gone soft, started stirring a bit at this new development. \"It would also be nice if you can give me some kind of idea of what you want. I mean, there are some submissive women that want to be hog-tied and whipped with an actual whip.\"\n\nShe looked up at me. \"What is 'hog-tied'? No, I do not want to be whipped. Or tied up. I mean, maybe someday but not now.\" She straightened up, still lying on her side but now leaning her head on her propped up hand. \"Mostly, I just want you to tell me what to do. To take charge and just...take me. I have always wanted that, but did not trust anyone before. Like I said, with the other men, I was directing everything. One man tried to be...rough with me.\" She closed her eyes briefly at that, shuddered, and then looked at me with a crooked grin. \"He shortly left the bedroom with a limp.\"",
        "My emotions were immediately polarizing. I wanted to laugh at her response. And, I wanted to ask her the guy's name so I could find him and give him more than a limp. But, I settled with a grin of my own and said, \"Well, I'm glad you didn't put up with any crap.\" My grin got bigger. \"And good to know. I don't want to walk with a limp, so that safe word is important.\" My face turned serious. \"Linh, I want you to know that I really like you, and the last thing in the world I want to do is hurt or scare you. So please tell me when I am pushing too much.\"\n\nKnowing this would be well received, I once again pushed the conversation in the direction of project management, our specialty. \"OK, so let's go through this. You want me to tell you what to do? Do you mean like what position I want you in for sex?\"\n\nA bit flushed, she nodded.\n\n\"And you want me to treat you kind of degrading?\"\n\nHer brow furrowed again in confusion. \"What is 'degrading'?\"\n\n\"Oh. Sorry.\" I thought for a moment. \"Like, call you names that aren't so nice and treat you like a toy?\"\n\nThe flush deepened. She breathed out, \"Yes.\"\n\n\"OK. We can start with that. Just please let me know if I go too far.\" I thought of something else. \"I assume you have an actual fantasy that is submissive? Can you share that with me?\" I figured if she gave me a specific fantasy, it would help me understand her limits. Or, at least give me an idea of where I should go.\n\n\"I ummm...\" She chewed on her lip again for a minute. \"I have this fantasy. Where you are sitting over there,\" she pointed to the desk where our computers sat, \"in a teleconference. All the while, even while speaking, you have one hand on the back of my head, guiding me while I am under the desk giving you oral pleasure.\" She shuddered again, this time with excitement. \"Even after you orgasm, you make me keep going the entire meeting.\"\n\nWell, that was hot. And I was happy she didn't want too much. That was a tremendous relief. I wasn't naturally dominant, so my role playing in that area was decidedly weak. I was good with spanking and talking dirty, but I didn't have any experience with the more extreme stuff. \"OK, what is your safe word?\"\n\nShe thought for a second. \"How about 'winter?' I do not like winter so I will always remember that.\"\n\n\"Fine. 'Winter' it is. If you say that word, I will stop whatever I'm doing and make sure you're OK. Sound good?\"\n\n\"Yes.\" Her breathing increased a bit once again, and I recognized the telltale signs of a submissive slipping into character. \"I am a little scared now. What do you plan to do to me?\"\n\nShe may have said she was scared, but her dilated pupils, heaving and flushed chest and hardened nipples told me she was completely turned on. It felt like I could flip a mental switch when a woman wanted me to become dominant. I felt my cock stirring as I looked at her and imagined giving her what she wanted. What she needed.\n\nMy mind immediately flashed back to Carol, the first girl who told me she was submissive. She was the one who first taught me how to be dominant. Carol and I could be out in public and never draw a second glance. It wasn't as if our sexual relationship defined us or forced us to behave that way all the time. Internally, I shuddered as I recalled all the things I'd done with Carol when we'd been alone.\n\nIt had all been so exhilarating and new. I never suspected I would be capable of doing some of those things before we first started. I'd been afraid of hurting her or of going too far. Over time, I became much more confident, and that made my dominant personality even stronger. And, it's hard to explain. It isn't what I do that turns me on (although it doesn't turn me off either). It's how the woman reacts that very much turns me on. I know a huge part of that is satisfaction at giving a woman exactly what she wants and knowing she trusts me enough to do so.\n\nThere were only three other women I was with who had that submissive streak. After a disastrous first encounter with Wendy, the once after Carol, I learned patience. I had incorrectly assumed that she wanted the same thing that Carol had wanted. But, I quickly discovered that each woman was different, so I learned to start slow in order to learn their limits and desires (and mine, as well). We would gradually escalate things until they got what they wanted.\n\nIn my mind, though, Linh was different from those other women. It's...tough to pin down. Most of the women I had dated from work were more forward, but they'd also been friends for a while before I dated any of them. The last girl I'd dated, Anna Marie, had fit right in when a bunch of us went out to have a few beers and shoot some pool. After only a short time, she was flirting with me openly. It hadn't been a huge surprise when she pulled me aside and told me she wanted me to take her home and fuck her.\n\nWith Linh, it had been shocking just hearing her tell me she was submissive. Hell, the whole massage and sex so far had been shocking. It just seemed out of character for her, and I could tell she'd been a bit reluctant to even bring up her desires. I guess her nervousness made her seem vulnerable, and that just turned me on more. It also made me look at her differently. Before, I had always liked her, but she had seemed very prim and proper most of the time. I'd found her attractive, but hadn't really considered her as a sexual person.\n\nIt wasn't like I thought of her as a virgin or anything, but she seemed like someone I should protect. And now...she wanted me to dominate her? It was arousing to contemplate; I just wasn't sure she really understood what she was asking me to do to her.\n\nBut, she wanted to explore that side of herself, and I suddenly found myself really wanting to please her. I wasn't sure where to start, but I knew to start slow. She seemed to like the use of the word 'slut' and so I began with that.\n\n\"That depends on how well you behave and do what you're told.\" She gasped at that and her breathing got even heavier. \"Are you wet, slut?\"\n\nAnother gasp. \"Y-y-yes.\"\n\n\"Show me.\"\n\nShe spread her legs a bit, raising the one on top. Even though I could tell she was aroused by her scent, I wanted to push her boundaries. When she was fucking me, it was good. But, I had the impression she wasn't very experienced or anything. I wanted to see how far I could take her.\n\n\"No, slut. Show me.\"\n\nConfused, she stammered out, \"I, um...how...\"\n\n\"Stick your hand down there and show me if you're wet.\"\n\nHer eyes widened again, but after only a brief pause, she reached down and stuck a finger inside herself. This elicited a slight moan from her. She fucked herself a few times before pulling her finger out and showing me. Her index finger was absolutely drenched.\n\n\"Good, slut. Now, clean it off.\" She started to lower her hand to the sheets to wipe herself off, but I stopped her. \"No, slut. Clean it off. Stick it in your mouth and clean it off. Now.\"\n\nShe sucked in another breath and stared at me wide-eyed. For a brief moment, I thought I had gone too far, but she quickly popped that finger between those sensually thick lips and into her mouth. She actually closed her eyes and started moaning as she sucked her finger clean. Fuck, was that hot!\n\nAfter a very thorough job, she finally pulled her finger from her mouth and opened her eyes, focusing again on me. \"All done. Did I do OK, sir?\"\n\nHoly shit! She was definitely showing a submissive side. 'Sir?' She had called me that at work in the beginning (as well as every other man at work, with the women getting 'maam'), but we put a quick end to that formality.\n\nShe was going to be a wild one, I thought. Maintaining my composure (barely), I asked, \"Was it good, my pet? Did you enjoy the taste?\"\n\n\"Yes,\" she breathed out.\n\n\"Good. Because from now on, after I fuck that tight little pussy of yours, you'll be cleaning me off with your mouth. If you don't do a thorough job, you'll be punished.\" Her pupils dilated again at the thought of being punished, so I egged it on. \"And, if you do a good job, you will also be punished.\"\n\nIf possible, she looked even more turned on. \"Y-y-yes, sir. I understand. I will do as I am told. I promise to be an obedient...slut...for you.\"\n\nHearing her say 'slut,' maybe the first dirty word I had ever heard her utter, had me rock hard. \"Good. Very good. Now, I think it's time that I showed you what getting fucked is all about. Assume the position.\"\n\n\"How...what position, sir?\" She was actually trembling. From fear or excitement, I didn't know. But it was unmistakable.\n\n\"Like all sluts. Get used to being on your knees when we're alone. You'll either be on them with my cock in your mouth or on them with me behind you, fucking your pussy or ass.\"\n\nI wasn't sure if that was going overboard, but she merely turned away and brought herself up on her hands and knees in the middle of the bed. \"Like this, sir?\" she asked over her shoulder.\n\nI got behind her, admiring her gorgeous ass once again. \"Almost, my pet. Head down though. That puts your ass higher in the air, where it belongs.\" She immediately dropped her head down, pushing her ass up higher, which accentuated her gorgeous curves.\n\nWhile I was inspecting her gorgeous holes again, running my finger up and down her slit and up to her tight little asshole, she said breathlessly, \"Are...are you going to put your, um...penis in my bum, sir?\"\n\nSighing, I pulled back a bit. \"Get up, slut and get over here.\"\n\nShe got up, looking a little upset, like I was actually mad at her. \"Did I do something to displease you?\"\n\n\"I said come here. Next to me.\" She quickly sat on the edge of the bed next to me on my right side. I reached up and grabbed a handful of her hair at the back. She gasped again and looked at me with wide eyes. I then forced her head down into my lap. \"Open up, slut.\" She quickly opened her mouth and took the head of my cock inside. She tried bobbing up and down a bit, but I tugged at her hair and started guiding her movements, fucking a couple of inches inside her mouth. Based on her previous ministrations, I could tell she wasn't used to taking much in her mouth. I had to hold myself back from forcing her head down further; I didn't want to make her gag.\n\nStill using her hair to guide her movements, I pulled her back up to where I could look her in the eye. She winced at the roughness I used but didn't say anything.\n\n\"What is that that was in your slut mouth, my pet?\"\n\n\"It is your penis--Oh!\" She squealed out as I once again forced her mouth down on my organ.\n\n\"No slut. It isn't a penis.\" I fucked her mouth a few more times before once again pulling her head up. \"Try again, slut. What is it?\"\n\n\"Ah!\" She gave a little scream as I roughly tugged her hair. \"It is your...cock. Oh!\" She squeaked as I once again pushed her head down to my crotch and began fucking her mouth.\n\n\"Good, slut. Yes, that is my cock. Get to know it, my pet. You'll be servicing it every day we're together.\" I continued guiding her movements while she sucked on me. Although I had my hand wrapped around a lock of her hair while pressing on the back of her head, I very much let her be in charge.\n\nAfter a few minutes of this, I roughly pulled her up again. \"And where does my cock belong?\"\n\n\"In...in my mouth, sir.\"\n\n\"Where else?\"\n\n\"In...in my...pussy, sir.\"\n\nWhoa. My dick gave another lurch at her saying 'pussy.'\n\n\"That's right, slut. In your tight little pussy. And where else?\"\n\n\"In my...ass.\"\n\nDammit! It had to have been some sort of medical miracle that I hadn't blown my load yet. But, I stayed in character.\n\n\"Correct, my pet. Have you ever been fucked in that gorgeous ass of yours?\"\n\n\"N-n-no.\"\n\nGuiding her back down, I said, \"Always a first time for everything, slut. I'm going to enjoy taking that sweet asshole of yours. Who knows? You might actually learn to enjoy it.\" I laughed a bit at that while she whimpered around my cock.\n\nAfter a few more minutes of her sucking me, I lifted her head up again. \"OK, back into position, slut.\"\n\nShe quickly moved back to the center of the bed, face down with her ass up in the air. Getting behind her again, I looked at her swampy pussy. Jesus! She had gotten even wetter. Her inner thighs by her mound were glistening with her moisture, and I could see a drop of her juice running down each thigh.\n\nAt first, my plan was to slowly enter her and let her get used to my size again. But, I was turned on beyond control. I got into position, grabbed her hips and slammed my full length inside her. This caused her to suck in another breath and I immediately felt bad. But then she started pushing back against me, grinding her ass back on my stomach. Taking the hint, I strengthened my grip on her hips and began fucking her. Hard. Very hard, actually. We had been playing around and fucking for a while now, and I still hadn't come. My balls almost hurt from needing release.\n\nI kept fucking her aggressively. Looking down, I could see her ass was red from smacking against my stomach. I could see the whiteness on her hips where my hands were tightly gripping her, as well as her juices gathering at the base of my cock. She was moaning and squealing the entire time. After almost ten minutes of pounding her as hard as I could, she stiffened again and coated my cock and thighs with her frothy juices. Relieved I had made her come again, I pulled out and stood up on the bed.\n\n\"Turn around, slut, and get ready,\" I growled.\n\nShe gasped, spun around and opened her mouth to take my cock in. It was obvious she wanted me to come in her mouth, but I wanted to see if I could push her further. I grabbed her hair with one hand and stroked my cock with the other, keeping it away from her mouth, which she started to close.\n\n\"Keep that mouth open,\" I admonished. \"Look up at me.\"\n\nOh jeez. As soon as she looked up at my face, those eyes pushed me over the edge. I was already impossibly turned on, but seeing those eyes smoldering with undisguised lust...that was all I could take! I lost it.\n\nI started firing rope after rope of cum onto her face. She closed her eyes just in time, as I absolutely painted her beautiful face, getting cum on her forehead, across her closed right eye, on her nose and finally shooting the rest into her open mouth. She mewled and tried to pull herself closer.\n\nAs soon as I loosened my grip on her hair, she dove on my cock, slurping on the head and sucking every bit of semen from me she could. After that, she used my cock to wipe all over her face, gathering more cum which she noisily slurped down. She couldn't take much of me in her mouth, so she began licking the sides of my shaft and my balls, dutifully cleaning me up. Finally, she sat back and used her fingers to retrieve the rest of my cum from her face and licked it off. I collapsed on the bed, completely spent for the time being. I couldn't remember a stronger orgasm I had ever had.\n\nShe looked down at me and started giggling. \"Mmmm. That was wonderful, Jim. Thank you.\"\n\nI opened one eye halfway and gave her a weak grin. \"Thank me? Wow, no. Thank you. I've never come so hard. You are so sexy.\" I started reaching for her, but she quickly got up.\n\n\"I will be back in a moment,\" she said as she headed for the bathroom. I heard water running for a few minutes before she reappeared. \"Sorry,\" she said, as she rejoined me on the bed. \"I wanted to wash my face and brush my teeth. We have not even kissed yet.\"\n\nI was surprised at that. She was right! We had done a lot together but I hadn't even had the decency to kiss her. Time to remedy that. I grabbed her hand and pulled her down to me. She leaned in, and our lips brushed briefly. She pulled back a little and looked at me, an unmistakable look of affection in her bright green eyes. Then, she leaned back in, closed her eyes and melted into a kiss. Wow. I may have sensed a bit of lack of experience in sex, but there was no lack of experience in that kiss. In fact, it may have been the best kiss I had ever had. It just felt...right.\n\nI placed my right hand on the back of her head, pulling her in tighter. She whimpered into my mouth and kissed me even fiercer. My left hand then made its way to her back, sensually running it down to cup her ass. She shifted, once again straddling me while never breaking the kiss, our tongues battling each other. Her hands brought me up to a sitting position as she maintained her position on top. They roamed along my back, occasionally pulling me in tighter.\n\nDamn! I was getting hard again. But, before I could do anything about it, she pulled back and looked at me again. \"You know, you need to shower again.\" She saw my panicked look and quickly added, \"No! You do not stink or anything. It is the oil I used. You should wash it off.\"\n\nI sighed, but then got a mischievous grin on my face. \"Understood. But, you know, I can't really wash my back very easily. If only there were a way for someone to join me and wash my back.\"\n\nShe gave a throaty chuckle. \"Oh, that was my plan all along. Come along, Jim, let me wash you off.\"\n\nWith that, we headed for the bathroom and started the shower. We both climbed in, and I pulled her in for another kiss. She had grabbed the soap and a washcloth and started cleaning my back while we made out. She ran her hands down my back to grab my ass, squeezing it gently. I broke off from her lips so I could continue kissing down her chin to her neck. I gently kissed, nibbled, and sucked on her svelte neck, careful to not leave any marks.\n\nShe continued washing me off, running the soapy washcloth over my chest and down to my stomach. She then dropped to her knees and began washing my legs and feet. After both legs were thoroughly cleaned, she ran her hand up my thigh and rubbed my swollen balls. She looked up at me and licked her lips before taking my hard cock back into her mouth. She moved her hands to my ass and began pulling me in deeper. She was still only able to take about half of my cock in her mouth but that was actually more than she had done earlier. She bobbed back and forth, blowing me for about five minutes. Finally, she released me and blew out a frustrated breath before standing up.\n\n\"I am sorry. I want to be able to take all of you in my mouth but I can not.\"\n\nI held her to me. \"Patience, Linh. You'll get there.\" I separated from her, still holding her shoulders, \"Now, I think it's my turn to wash you off.\"\n\nWith that, I took the cloth and soap and washed her entire body, running my hands over her sensually. We started kissing again as I moved my hands to her back, washing her back and ass. Once cleaned, I pulled back again and gave her another grin. Without a word, I spun her around and dropped to my knees. I began kissing her ass cheeks, gently biting them every now and then. I then moved to run my tongue along her crack. She took the hint and bent over at the waist, exposing herself to me. She braced herself with her hands against the back of the shower wall.\n\nI didn't waste any time teasing her. My tongue went right to her puckered asshole, and I began licking all around that tight hole. I moved my tongue down to her pussy every now and then but always returned to her sphincter. I really made love to her ass with my mouth, her moaning and pushing back against me the entire time. At one point, she even reached back and pulled my head into her ass, smothering me between those perfect globes. She then surprised me by pulling away briefly and reaching outside the shower. When her hand returned, it was holding a bottle of lubricant.\n\nShe handed me the lube and said, \"Here. Get my bum ready for you.\"\n\nWhoa. She really wanted me to fuck her ass? \"Ummm. I don't know, Linh. You're pretty tight and small. I don't want to hurt you.\"\n\n\"I want to be hurt, at least a little. I am not asking you to just take me now. I would like some--what is word--foreplay? I want you to be gentle this time, but I want to do this now, so that you can really take me later when we are role playing. When you took me from behind earlier, you really pounded me. I have never been made love to that rough, and I loved it. I want you to be able to do that to my bum when you want.\"",
        "I wasn't going to argue. I really wanted her ass; I just didn't want to hurt her. I looked at the lube. She had obviously planned for this. The lubricant was silicone based, which I knew from experience worked in the shower just fine.\n\nI returned to kissing and licking her tight rosebud, making her start to groan and grind back against me again. After a while, I popped the top of the lube and leaned back from her ass. I poured a little at the top of her crack and watched it run down to her asshole. I poured more on my hand and rubbed it into my right index finger, making sure it was very slick. I pressed the tip of my finger against that tight hole and applied a bit of pressure.\n\n\"Are you ready? I'm going to start stretching your tight little asshole with my fingers.\"\n\n\"Yes,\" she breathed out. \"Please get me ready for you.\"\n\nWith that, I returned my attention to the task at hand. I pressed against her hole harder, until the tip of my finger popped past her sphincter. This earned me a gasp from her, but if I had any doubts what she wanted, she removed them. She began pushing back against my finger, taking it all the way in in one slow push.\n\n\"Oh, wow! I can not believe how that feels.\"\n\n\"Does it hurt?\"\n\nShe thought for a moment. \"No. It feels...different. Like I am full or something. It feels really good, though. Please. Keep going.\"\n\nSlowly, I started withdrawing my finger before pushing it back in just as slowly. I did this a few times and added more lube. I then started fingering her ass quicker, causing her to groan. After a few minutes of this, her asshole relaxed a bit and allowed me to increase the pace to a very rapid finger-bang.\n\n\"More, please,\" she begged. \"Please. It feels so good. More.\"\n\nI didn't know if 'more' meant faster or she wanted another finger. I chose the latter. Taking my finger out, I applied more lube to my hand, coating my index and middle fingers with a lot of the stuff. I then pressed both fingers against her ass and asked, \"You ready for a second finger?\"\n\n\"Yes. Oh, please. Yes,\" she panted out. She didn't even wait for me to start. She just took charge, pushing herself back onto my fingers. After a moment, both fingers broke through. \"Oh!\" She stopped moving for a few moments, breathing deep. Finally, she said, \"OK. I am ready for more.\"\n\nWith that, I repeated my earlier ministrations, slowly sliding both fingers in until I had them buried all the way in her tight ass. I slowly pulled them out and added more lube. Once soaked with the lube, I slid them back in and started fucking her ass with both fingers, slowly increasing my pace until I was once again giving her a vigorous finger fucking. I also used my other hand to manipulate her clit, rubbing it rapidly with my thumb. I briefly considered slipping a couple of fingers into her pussy but thought that may be too much.\n\nAfter several minutes of this, I withdrew both fingers and added even more lube. I positioned my fingers at her backdoor, this time including my ring finger. \"Ready for three, Linh?\"\n\n\"Oh, yes,\" she murmured. \"Yes, please. I can not believe how good this feels. Stretch me more, please.\" With that, she once again took charge, backing up on my fingers until all three entered that tight orifice. As before, she stopped once the tips were in, breathing deep. Once she adjusted, she pushed back until my fingers were buried inside.\n\nI again gave her a few moments to get used to the feeling before slowly sliding my fingers in and out, adding more lube. I also returned my thumb to her clit, gently rubbing her, eliciting more moans. The moaning got more intense as I started fucking her ass with all three fingers, again building the momentum until I was rapidly finger fucking her.\n\nAfter about five minutes, she moaned out, \"OK. I am ready. Please take my bum.\"\n\nI stood up, withdrawing my fingers, which caused her to gasp again. \"Want to move to the bed? It's more comfortable.\"\n\n\"No. No, please. I need it now.\" As if to emphasize that need, she moved her right hand from the shower wall to her right butt cheek and spread it open, maintaining her balance with her left hand only.\n\nI sighed. I wanted to do this on the bed simply because she was so much shorter than me and things didn't 'line up' as well here. But, I was going to give her what she needed. Placing my feet apart as much as possible so I could bring myself a bit lower, I lathered my cock up with a lot of lube and stepped forward, placing the tip of my cock on her rosebud.\n\nStarting to press a little, I took her right hand from her ass and said, \"Play with yourself. It will help you relax.\" She immediately stiffened her body. \"It's OK, Linh. Everyone masturbates.\" She relaxed a little and then dipped her hand down between her legs.\n\nAs I spread her cheeks, getting ready to penetrate her, she ratcheted up the moment. Turning her head to look back at me, her green eyes once again clouded with lust, she said, \"Take me, stud. Make me completely yours.\" Crap! Although a small part of me was amused at her words, which were so out of character, they had the desired effect on the primal part of my brain. I was lucky I didn't just lose it and blow my load right then and there.\n\nWith her ass spread, I applied more pressure to her asshole. Even though I'd spent a lot of time preparing her, her ass was still incredible tight. After a few moments, though, the head of my cock passed through her sphincter. This caused her to yelp and squeeze her eyes shut. She faced forward once again and I felt her fingers rapidly stroking her clit.\n\n\"Are you OK, sweetie?\" I kept only the head of my cock in, keeping her ass spread but using my thumbs to lightly stroke her flesh.\n\n\"Y-y-yes. Oh! I am so stretched right now. It hurts a little, but it also feels very good. Please. Please give me more.\"\n\nI slowly started pushing forward until about half of my hard cock was in that unbelievably tight hole. Her moans increased in volume as I went in, until a sharp yelp told me 'far enough for now.' Based on that reaction, I held still. She had stopped masturbating, and her breathing was labored and heavy. After a few minutes, she returned her hand to her pussy and started rubbing herself. This caused her asshole to relax a bit. I took the cue and started pushing another inch of my cock inside her. We repeated this process until I was fully buried, my balls pressing up against her pussy. Once she felt them against her fingers, she reached further down to stroke my sac, intensifying my pleasure.\n\n\"I can not believe I was able to take all of it. The feeling is so...intense. Please be still for a moment. I want to get used to it. Then, I want you to really make love to my bottom.\"\n\nI had to grin at that. Here was this sexy woman, bent over at the waist in the shower, rubbing her pussy and begging me to pound her ass, and she still had a hard time saying anything remotely dirty. Even though I planned to make her use those filthy words when we role played, I found this to be one of her most endearing qualities.\n\n\"OK. I think I am ready. Just please go slow.\"\n\nSo I did. Slowly, I pulled back until only half of my cock was in her. Then, just as slow, I buried myself all the way. I did this several more times until she started pressing back on me again. I took the hint and started increasing my pace. After several minutes, I was fucking her ass at a pretty good rate. I added more lube and started fucking her even faster, causing her to moan and groan, occasionally begging me to go faster, slower, deeper, less, more...whatever was feeling good to her at the moment.\n\nI tightened my grip on her hips and ass and started really giving it to her, her moans echoing through the shower the entire time. The shower spray, which was only hitting my back, started cooling. That's one of the great things about hotels. The hot water lasts for a very long time, but it seemed to have run its course. At almost the same time as the hot water started disappearing, her hand stopped moving, her entire body stiffened, and she gave a sharp cry. Then, her legs started trembling and the rest of her body joined shortly after. Sensing she was losing her balance, I grabbed her around the waist and brought her down to her knees on the floor of the shower, my cock leaving her asshole with a slight popping noise.\n\nShe adjusted herself so she was sitting on her butt and wrapped her arms around her knees, breathing hard. \"I am sorry,\" she managed in between deep breaths. \"My knees, they--what is word?\"\n\n\"Buckled?,\" I ventured.\n\n\"Yes. They buckled and I could not stand.\" Her breathing finally slowed to almost normal. \"Thank you for not letting me fall. That was the most intense orgasm I have ever had. I felt light headed and thought I was going to go all black.\" She turned her head to me and leaned in for a kiss. We kissed gently for a few moments before I pulled back.\n\n\"Well, as nice as this is, the water is starting to get cold. Let me wash up and we can get out.\" I stood and she looked up at me, watching as I soaped up my cock and washed it thoroughly.\n\n\"But, you did not have your orgasm,\" she said, a little sadly.\n\n\"That's OK, Linh. I had a great one earlier. Like I said before, one may be all I can do in a night.\"\n\nShe chewed on that for a moment. \"Hmmm. No. Once we are out and in bed, I will give you oral pleasure.\"\n\n\"Linh...sweetie. Really, it's OK. You don't have to worry about it.\"\n\nShe shook her head. \"I am not worried about it. I want to, umm, suck your cock again.\" She giggled as she saw my cock lurch at that suggestion and her use of the word 'cock' again. \"See? Mister Happy seems to like that idea.\" She giggled again at her words, and I joined in.\n\n\"Can you stand now?\" I asked, reaching my hand down to her. She took my hand in hers and I pulled her up. She was still a little wobbly, so I made sure I had an arm around her waist as I reached back and turned off the shower. Once the curtain was open, I helped her step over the edge of the tub and onto the bath mat.\n\nShe reached for a towel and began drying herself off. I joined her on the mat and reached for another towel. I started drying myself, but she said, \"No. Let me do that for you. I will dry you off.\" With that, she quickly finished drying herself and then took my towel. She spent a long time drying me, making sure she did a thorough job. On her knees, she spent way more time than was necessary drying my rock hard cock and balls. \"There,\" she said, still on her knees and staring at my cock. \"All dry now.\"\n\nWe left the bathroom and climbed into bed, still nude. As we got under the sheets, she snuggled up against me. Lying on my right, she had her right arm draped across me and her head resting on my chest. I lightly stroked her back as we lay there. This was heavenly, and I didn't want to break the mood. But I wanted to ask her a few things.\n\n\"Linh, can I ask you a question?\"\n\n\"Of course.\"\n\n\"You really...umm, well, changed tonight. This was definitely a side of you that I didn't know existed.\"\n\nShe raised up quickly, her eyes wide and locking on to mine. \"You...you did not like it?\"\n\nI could see she was upset, so I quickly clarified, \"No, no, no! I loved it. It was extremely sexy. Please don't misunderstand me!\" She calmed a bit. \"I just wanted to make sure you weren't doing it for me. You know, doing stuff you don't like just because you think it pleases me.\"\n\nShe visibly relaxed and returned her head to my chest. I resumed stroking her back and waited for her to speak.\n\n\"Alcohol.\"\n\n\"What? Alcohol? What about it?\"\n\n\"It was alcohol.\" She raised back up again so she was looking at me. \"I needed the courage to ask you about sharing the room. I really did not know how you would react, and I was worried you would reject that and be upset with me.\"\n\n\"Well, that's just silly. Even had I not been comfortable with it, I wouldn't have held it against you or anything.\" She laid back down. \"So, is that why you had sex with me? The alcohol?\"\n\nShe chuckled softly. \"No, Jim. I did not need alcohol to make love to you. I have wanted to sleep with you ever since I started working here. Even while you were interviewing me, I was getting--what is word--horny?\"\n\n\"Really?\"\n\n\"Oh, yes, Jim. You are incredibly handsome and have the sexiest voice I have ever heard. Once I started work and saw you in meetings, taking charge when needed and always providing a calm influence...well, I just fell for you.\" She raised up again quickly, looking like she had said too much. \"Oh! Do not worry. I am not expecting you to return those feelings. Just this casual thing is OK for me.\"\n\nI thought of that for a second. Looking back, I realized I had noticed her looking at me with adoration a few times over the past few years. It was always brief; she would quickly look away once she noticed I was looking at her. And, I was extremely attracted to her as well. Not just her physical beauty, which was beyond compare. It was her. Her mannerisms. The way she spoke. Her intelligence. Her sense of humor and laugh. But...\n\n\"Linh, I am too old for you.\"\n\nThat earned me a sharp look. \"Please do not tell me what is too old for me. I am a grown woman and I can make my own choices.\"\n\n\"Whoa! Easy, tigress. I didn't mean anything by that.\"\n\nShe relaxed again. \"I am not asking for you to marry me.\" She laid back down. \"I just like you very much and would like to be your girlfriend.\"\n\nWhoa. But, I admitted, \"I like you too, Linh. A lot, actually.\" I wanted to return to my original questions, though. \"OK, so you didn't need the alcohol to have sex. Why did you mention it as a reason?\"\n\nAnother chuckle. \"Yes, it is true I planned to seduce you with that massage. And, it is true I learned to be a masseuse in Vietnam. But, when I massage someone, even an all body massage, I do not actually climb on top of them to do it, nor do I ever get nude. I was doing that for you.\"\n\nI laughed. \"Yeah, I kinda figured that out. If that's how beautiful women give massages in Vietnam, I'd have moved there years ago.\"\n\nShe leaned up to look at me and giggled again. \"No, that is not normal. Anyway, it was alcohol that gave me the courage to ask you to do those other things to me.\" She then looked away briefly before returning her eyes to mine, a little sheepishly. Softly, barely above a whisper, she continued, \"That is not the whole truth. It is also because it is you. I trust you to keep me safe and protected, even when I am most vulnerable.\" She blushed fiercely and turned her head.\n\nI touched her chin and brought her eyes back in line with mine. \"Thank you, Linh. It means the world that you trust me so much.\"\n\nShe was quiet again, looking down to avoid my gaze. After a few minutes, \"Do you remember my first year here? I was finally assigned to lead the manufacturing transition project?\" She looked at me long enough to see me nod. \"And that first meeting with the team where I was introduced?\"\n\nI remembered. I had been assigned to mentor her, so I was as much a part of that project as she was. I also remembered what an amazing job she did on such a complex project. \"Yes. I remember.\"\n\n\"And Jonathan was such a--what is word--jerk to me?\"\n\nI had actually forgotten about that but remembered now. \"Oh, yeah. Well, Jonathan is a jerk, and kind of a pompous ass.\" I was confused where she was going with this though. \"What about it?\"\n\nSilence for a few more seconds. She then looked me in the eye again. \"You stood up for me. You were very professional about it, but you shut him up. To see that hard look on your face, the fierceness in your eyes, as you lectured him, it--\" She shut her eyes again and shuddered. \"It made me feel safe. Like I was being protected,\" she whispered. Then, she looked at me again and blushed. \"It also told me I had finally found a man I could trust to let me explore these...fantasies.\"\n\nWow. Silently cursing myself for allowing the last few years to go by without noticing her desire, I grinned again. \"Well, just because he's vice president of manufacturing doesn't mean he gets to talk to people like he wants. That wasn't the first time I've had to put him in his place.\"\n\nShe smiled weakly at me but her saucy grin returned quickly. \"And, no. I did not do all of these things for you only. I really do have those fantasies...and more. And, I did not plan to give you my bum, but you kissed me there and suddenly, it was all I wanted.\" She sat up again. \"I am so happy I did, too. I am very sore, but that was amazing. I can not wait to do that again.\"\n\nMy dick gave a little lurch at that. I couldn't wait, either. And, even though I had been with submissive women before, there was just something extra sexy about Linh when she did it. I hugged her to me a little tighter and kissed the top of her head. I really liked this girl.\n\n\"Mmmm. OK, sweetie. Thanks for explaining it to me. Now, should we get some sleep? We have a busy day tomorrow.\"\n\nShe leaned back with a crooked grin on her face. \"Sleep? Oh, no. I told you I am going to give you oral pleasure.\" With that, she reached down and grasped my already hard cock. \"See? He wants it.\" Giggling again, she disappeared beneath the sheets and took my cock in her mouth. She began bobbing up and down, making a comical looking lump under the covers as it moved up and down. She wrapped her hand around my shaft and stroked what she couldn't get in her mouth. She used her other hand to fondle my balls.\n\nThe room was filled with wet sucking sounds and her whimpering, which was an amazing turn on! Then, she moved up on the sexy scale. She reached up and grabbed my left hand and brought it to the back of her head, urging me to guide her movements. Returning her hand to my shaft, she started stroking me rapidly. I used my hand to guide her, but really let her have all the control. Within five minutes, I felt the familiar tingling in my balls.\n\n\"Oh, Linh! Oh! I'm gonna--\" I didn't get any more out. As soon as I spoke, she moved her lips up to capture only the tip of my cock and sucked in hard, creating a wonderful vacuum in her mouth. Her tongue continued dancing around my slit, and I started coming. I knew it couldn't have been as much as the first orgasm, but I also knew it was a lot. To her credit, she didn't miss a drop, swallowing rapidly to get it all. The entire time, she was gently squeezing my balls and stroking my shaft. Once I stopped coming and she had swallowed it all, she took more of me in her mouth again and sucked a few times, causing me to tremble. I was very sensitive after I came.\n\nPulling her mouth off of my cock, I felt her give the head one last kiss before she popped up out of the covers. She then hopped out of bed and went to the bathroom. I heard water running for a few minutes and she reappeared, climbing back into bed with me.\n\n\"Did you brush your teeth again? You know, it's OK if you don't want me to cum in your mouth. If you don't like the taste--\"\n\nShe cut me off. \"What? No, I swallow because I think it is sexy. Also, I love the taste. I just was not sure if you were going to kiss me good night.\"\n\nI grabbed her and brought her down to me. I kissed her as passionately as I could, and she once again melted into me. I pulled back a bit and said, \"Of course I'm going to kiss you good night. But, I don't mind if you kiss me after I come in your mouth.\"\n\nShe grinned. \"That is kind of sexy. OK. Maybe next time.\" With that, she leaned in and kissed me again. After a few minutes, she released me and laid down next to me, turning away. \"Good night, Jim. Please hold me. I want to fall asleep in your arms.\"\n\n\"One second,\" I said as I got out of bed. I went to the bathroom for a moment and came back holding a glass of water and a vitamin. \"Take this. It's a multi-vitamin and has a lot of vitamin B. And drink all the water. That Scotch is going to make you feel terrible tomorrow if you don't get some water in you.\"",
        "She took the glass and the pill, looking at me with adoration. She took the vitamin and drained the glass of water. \"Thank you, Jim. I like that you take care of me.\"\n\nI laid back down next to her, pulling her tight to me in the spoon position. As soon as I did, my dick started swelling again. Holy crap! I knew I was spent, but that sexy ass pressing against me started getting me hard again. Holding on to one of her perfect breasts didn't hurt either. But, I needed sleep. I kissed the back of her head, and whispered, \"Good night, Linh. Sweet dreams. See you in the morning.\"\n\nWith that, we both drifted off to sleep. And, if I did snore, she never complained about it.\n\n \n"
    ],
    "authorname": "assman37",
    "tags": [
        "anal",
        "asian",
        "interracial",
        "submissive"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/linh"
}