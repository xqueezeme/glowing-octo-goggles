{
    "title": "Doing Business in India",
    "pages": [
        "An introductory note to readers, especially my Literotican followers. \n\nI am flattered and pleased by the reception of my stories, and thank one and all for their comments and suggestions - all such are very welcome. To all suggestions for sequels or follow-ups, those are under serious consideration.  \n\nABOUT THIS STORY - This is a longish story, but I think it will repay your time. It is NOT heavily laden with overt discussions of sexual activities. It DOES have strong erotic overtones and some interesting erotic twists... but those serve to support the story and the characters I seek to develop - not the other way. \n\nI promise a return (in the very near future) to shorter and more sexually/erotically potent scenarios. Then, perhaps, another longer tale. \n\nCheers! \n\n******** \n\nDay #1 - Preliminaries \n\nThirty-seven years ago, urban India. Philip, the good-looking young American businessman, reasonably fluent in Hindi -- a fact greatly to his advantage in negotiating complex deals such as this. Quick, personable, aggressive in the best American business tradition. And wearing tennis shorts and a tee-shirt to business meetings, EGAD, Sir! \n\nNegotiations were nearing what loomed as a very successful conclusion. The local side was nominally represented by a consortium of several mucky-mucks, but Mister Devasi (shortened to Deva) was obviously the real power, in that all data, all history, all plans seemed to reside at least in his domain, if not actually in his head. Exclusively so. \n\nYet much to Philip's disgust this energetic and very capable man was largely being treated as a mere minor gofur. Deva was clearly the elder, perhaps close to twice Philip's age, and was sought out for information, then abruptly or casually dismissed again after each appearance -- it was clear to Philip that things would have progressed faster still had Deva been simply included in the meeting. But no -- the situation being a product of the caste system, he was sure -- a system which he profoundly detested as inhuman, in-humane, and exceedingly wasteful of human talent. \n\nLate morning, negotiations done, the whole group shook hands -- with Deva pointedly excluded. The muckies exited en masse to do whatever it was they did that earned them their keep. \n\nThey left Philip and Deva together to tie up loose ends, which was fine with them both. They had gotten along famously from the get-go. \n\nDeva in fact admired everything about this American, found it astonishing that so young a man could wield such authority so easily and so considerately, not to say diplomatically! Philip embodied American characteristics which Deva had often encountered in his long and variegated career. Intensity and concentration on the task, an almost brutal (but friendly) bluntness and honesty; a brushing-aside of trivia; an ability to evaluate a situation, to find instantly the crux of things, determine and locate the information needed for a decision; and then (unlike Deva's local counterparts) MAKE the decision and move forward. \n\nThe pace of dealing with Philip's culture, even within an Indian milieu, was breathtaking -- and utterly refreshing once one understood that the American was being anything BUT rude. \n\nSince the beginning, Deva had been reporting on the meeting, and on Philip, to his only child, daughter Lakshmi, well named after the Hindu goddess of wealth and business. A woman of 21 now, and unlikely ever to marry in spite of being both beautiful and unusually well-educated. \n\nShe was more than reasonably fluent in English and, said Papa, a complete nut on English literature. Lakshmi had never met an American: she queried Papa endlessly -- in detail -- about the current foreigner, with whom Papa clearly got along so well. She bored into him for information. \n\nAbout Philip's intelligence - which she found monumentally impressive -- he being (at the age of 26 for the Gods' sakes!) simultaneously a businessman, an advocate, a scientific researcher and a university professor! \n\nAbout appearance - a large man by local standards, just short of six feet tall, well muscled, no fat on him. With strong legs, that detail knowable because he was given to wearing shorts in the Indian climate, even to business meetings. Blond and blue-eyed. \n\nAbout personality, Papa reported a fine sense of humor, a love of intelligent conversation. \n\nA thoroughgoing hatred of the caste system in all its manifestations -- no such thing in America, said Mister Philip -- only individual efforts counted, there were no inherited rankings. \n\n\"A very attractive man, overall!\" said Papa, patiently answering her ongoing and quite detailed inquiries. \n\nThat noon, the final details having been cared for and the muckies all long-gone, Philip said to Deva with his usual disarming directness, \"Tell me, Deva. The others treat you badly, as if a servant, when it is quite clear to me that YOU are the core of this entire project. Is there some aspect of caste at work here? As you know already, I seriously despise that system, such a multiplier of human unhappiness, such a waster of talent. Ugh!\" \n\nDeva hesitated for a moment, considering, then drew upon a resolution he'd made recently - to imitate this youngster's characteristics. Now, directness... not a commonplace in Indian dealings. He steeled himself and proceeded. \n\n\"Yes\" he said: \"...you are quite astute. A matter of caste indeed. Four generations past, my forebear was a member of the untouchable caste profession that collects dung and makes it into cakes for use as fuel in cooking.\" \n\nThere! He'd gotten it out. Now, to see what result. Deva peered up at Philip's face, awaiting reaction. He found curiosity, but no judgment. In fact, Philip suddenly grinned, then laughed, and clapped Deva on the shoulder, startling the poor man thoroughly. \n\n\"So what!?\" said Philip: \"... as a child I spent every summer on my grandparents' farm, where my own father was born and grew up to become a university professor. I spent those summers working hard. They raised many cattle. I myself have shoveled a great many tons of dung, Deva. Whole large wagons filled with it, stinking in the hot sun -- I would then spread it on fields as fertilizer. An honorable if smelly occupation. Such work is hardly cause for being a pariah within MY culture. You and I, we are brothers, members of the same caste! I am honored!\" \n\nBoth relieved and astounded, Deva laughed, shook Philip's hand, and thought to himself \"No bloody wonder the damn Yanks pretty much own the world! No castes, and from manure to professor by his own efforts, in a very few years!\" \n\nThen Philip asked \"What happened in your family? You are not exactly a dung-collector these days.\" \n\nDeva shrugged: \"Here, unfortunately, one cannot readily escape one's caste, however lucky or skilled one might be otherwise. Will I tell you a short bit of my family history?\" \n\n\"Please do!\" \n\n\"My great grandfather was of course illiterate, living in a tiny village some hundreds of kilometers from here. But he was very smart. He realized that everyone, from the Emperor down to himself, everyone short of a god, must cook or be cooked for, and that almost always over a dung fire. This meant that the dung collectors were, if only they could see it, in control. Control any aspect of a people's food supply and you will be some sort of king!\" \n\n\"Therefore he organized the collectors in his village, then in the surrounding many small villages. Together they forced a big increase in the price of dung for the other classes who could afford to pay a bit more: all benefitted, and he took a small percentage of the added value. All benefitted, even the users, because the prices became known and stable as did the supply.\" \n\n\"He sent his eldest son to school, insisting on the value of education, a family first-ever event. Next generation it was better education and movement into supplying and distributing compressed gas for cooking and to run motor vehicles. Then a fleet of tuk-tuk cabs for my very father himself, and school through a two-year college, business school, for me, thus to this job. A progression upwards both economically and in education.\" \n\n\"Nonetheless, Mister Philip, in India no-one can truly escape from one's caste even today. I am still, to most people and including those who run this business, an untouchable. Despite my abilities and experience. As you have said, it seems a terrible waste.\" \n\nDeva sighed, shrugged, eyed Philip briefly, and took another plunge. \n\n\"We can be finished by 1300\" he said. \"Would you be interested...\" He almost stopped, managed to proceed -- \"...in coming to my home for tea, to celebrate this contract, to relax, to meet my family, which means my daughter, her mother being long since dead of cancer.\" \n\nHe hurried on: \"It is but a modest small home and has of course never been visited by any of my business associates, all of whom are trapped in our caste system, and with them no such invitation could possibly be given much less accepted. But you are absolutely not caste-bound, and in that and in other ways also, Mister Philip, I would be like you.\" \n\nA pause, Philip waited, not yet his turn, really. \n\n\"You would be meeting my daughter and only child. She is VERY curious about Americans, yet has never met one. I have told her a great deal about you and about our negotiations -- perhaps a bit more than is really polite, but nothing secret I hope. Even that you conduct business while dressed for tennis! No personal secrets were revealed, except that you are handsome and single -- details which she absolutely demanded, and which I, poor man, had to supply.\" \n\nHe sighed: \"She is named Lakshmi; she is beautiful but of course all fathers must say THAT. You would have to judge for yourself. As her parent, I cannot guarantee any degree of accuracy in my evaluation. Importantly, her English is greatly better than mine, and she will likely wish to practice it extensively on you, a native speaker.\" \n\nHe finished nervously: \"I wonder - would such an invitation be appropriate?\" \n\nPhilip stuck out his hand, shook Deva's, and said, looking him straight in the eyes, \"Deva, I am honored by an invitation into ANY man's home. I accept, with thanks!\" \n\n\"Will you ride home with me on my motorcycle, Mister Philip? Have you any experience with cycles? They can be ... perplexing!\" \n\nPhilip had, indeed. \"Of course, no problem. I own a powerful cycle myself and have ridden it many thousands of miles -- when necessary, I can be a sack of potatoes on the rear seat. Let's go!\" \n\n\"Ah... wonderful!\" said Deva \"But first I must warn daughter Lakshmi who is our hostess. For when you eventually do marry, you must never forget this. Never, NEVER appear at home with an unannounced guest!\" \n\nHe stepped to the desk, set the business phone on 'speaker' and dialed. \n\nA perfectly lovely female voice answered, in the classical Indian version of English, with its musicality and implied head-bobbling. \n\nDeva announced Philip's presence -- the disembodied voice greeted him, introduced its owner as Lakshmi, Deva's eldest and only daughter. \n\nPhilip introduced himself, and immediately said \"Your Papa has invited me to come home with him for tea... but I do not want to accept unless you can assure me it is not inconvenient, that it will not disrupt your activities.\" \n\nA slight sigh and giggle from Lakshmi, then \"I, that is WE, would love to have you for tea and perhaps for some discussion about English literature if you do not mind that as a topic. Your presence would interfere with nothing whatever, in fact the opposite, it would serve nicely to fill a void of activities and intelligent company. Please DO come, but give me time to do the usual woman-thing and change my clothes, then prepare the tea. Papa... can you two arrive home in about one-half hour, but not less?\" \n\nPapa agreed on the schedule, Philip thanked the lovely voice, and they broke the connection. Papa grinned shyly at Philip: \"She is very excited, a father can always tell. We almost never have guests and she loves to entertain, even just providing a simple pot of tea. And right now this immediate minute, I can assure you, she is busy having trouble deciding what to wear. Women!\" \n\nHe was, of course, correct: in the next fifteen minutes Lakshmi went through five changes, settling finally on something almost daring, a diaphanous, not to say gossamer, pair of long Punjabi-pants -- the fabric opaque when not touching skin, but functionally transparent wherever it did. A lace bra under an equally see-through short sari-blouse. Sandals. Her spectacular hair given a once-over touchup. \n\nAnd a very careful job of facial makeup -- nothing glaring or garish or overdone -- just enough, and so applied, to highlight her extraordinary eyes and mouth, her personal short-list of 'best features'. \n\nThen came the doubts whilst staring into the mirror -- why did she feel the need to dress so enticingly -- it would likely disturb Papa, and god know what it might do for (or TO!) a young male of the species. But then, that effect was precisely what she wanted to test -- having literally never been on anything resembling a western \"date\". Papa had instigated this, had primed her with stories about this man, so Papa would have to regard any personal internal disquiet as being his own damned fault! \n\nSatisfied and excited, she headed for the kitchen. She would have everything ready on time. \n\nIt was a twenty minute cycle trip from the office to Deva's home. Part way, Philip asked \"Is there a flower shop nearby? Something better, fancier, than a mere tub of marigolds?\" \n\nDeva answered, shouting into the wind roaring past, \"Certainly! All India is mad for flowers! Shall we go there? It takes perhaps five minutes of extra time.\" \n\nPhilip was in the shop only briefly, returned with a nice bouquet of a dozen small blood-red roses. Deva eyed them, said \"Very nice flowers! Extravagantly nice in fact.\" Then, matter-of-factly, he said \"Quite romantical, indeed. Roses are generally thought to be, no? Same in America, I think.\" \n\nPhilip shrugged as he remounted the bike: \"These are a gift for the Lady of the House to which I have been invited. If I were dating that Lady -- which I most definitely am NOT! - then they might have a different meaning than just 'Thank you!'\" \n\nHe shouted into Deva's ear as they roared off into traffic again \"After all, a man can give the same type of flowers to the same women many times, each time with a very different meaning!\" \n\nDeva managed to make his reply understood -- \"One man most certainly can do that! But I am quite sure, Mister Philip, that this will be the very first time in Lakshmi's entire life that she receives flowers from ANY man, for ANY reason! Even, I am ashamed to state, from myself! I will be interested to see her reaction!\" \n\nHe slowed the cycle as they approached the house, chuckled, said to Philip as the motor stopped, \"Which means you will shortly get very high marks indeed for something -- shall we call it simply DIPLOMACY?\" \n\nPhilip dismounted, said \"If the Lady is as attractive as you say, and has never received flowers, then she must be surrounded by the dumbest and least sensitive group of men ever assembled on the planet!\" \n\nDeva shrugged, muttered \"Perhaps it is so!\" He paused. \"Myself included!\" \n\nThey parked the cycle in the closet that passed for a garage, and headed upstairs. Philip felt a bit funny about showing up in tennis shorts and a tee-shirt, but he'd had no choice -- those were the clothes in which he'd been doing business all week, receiving nary a sidelong glance for commentary. He carried the dozen roses in his hand, behind his back. \n\nUp the stairs they trotted: the door opened as they arrived, as if on an electronic sensor but actually powered by an acutely-aware Lakshmi. \n\nDeva introduced them at the threshold. \"Mister Philip, my daughter Lakshmi. Lakshmi, this is the Doctor Philip you have heard so much about recently.\" \n\nBefore Philip stood, quite simply, a goddess. Small, almost tiny but not quite. The most exquisite figure Philip had ever seen in the flesh -- and that figure was quite unsuccessfully veiled by gauze-like house-pants and blouse that showed clearly every stitch of her underlying bra. Papa was visibly -- if briefly -- nonplussed. \n\nIn the first five seconds of wide-open eye contact, Mister Philip was instantly toast, psychologically so far and so deeply gone that he couldn't even wonder whether he was being obnoxiously obvious to his host and hostess. Philip could not see his own reactions, but they seemed to satisfy the goddess, for she blushed, dropped her eyes, then flicked them back up at him for more contact. \n\nPhilip's libido simply exploded. He felt as if his entire insides had been instantly turned to boiling jelly. He'd never in his life had anything remotely resembling this reaction, not to any of his many women, and it rendered him stunned and breathless. \n\nIt seemed as if someone had gone to all the cultures of the world, collected the most erotic and beautiful features of their women, distilled each feature down to its absolute essence, then mixed them all together and poured them into the mold of a perfectly shaped, perfectly proportioned woman. Caf\u00e9 skin, overlain with a dusky, subtle, slightly purplish tone. Makeup at the highest level of effectiveness to emphasize her eyes and lips and teeth. \n\nThe intense sexuality of every Indian erotic sculpture he'd ever seen, with the exaggerated features reduced to their proper proportions. The most nearly perfect figure and set of facial features he had ever encountered, far beyond any imagining.  \n\nAwkwardly, almost ninth-grader bashful, he held out the roses: Lakshmi looked thoroughly startled, then very graciously received them. They eyed one another silently across the flowers, then, hands full of roses, she made her Namaste to him, bending her head well downwards. \n\nThe world's most beautiful hair confronted him... glistening jet black, parted down the middle and then plaited, the single tapered braid so long she could easily sit on it. Philip's senses were at maximum acuity now -- he looked at the top of her head, down into the central part that exposed a midline streak of scalp. No \"I am a married woman\" sandooram resided there. The small crimson bindi on her forehead, between the eyebrows, was perfectly done -- difficult to do, its perfection a show-off item mostly between women - but simply a makeup beauty-mark of no informational significance. \n\nShe stood there as transfixed as he, feeling much the same way and utterly confused by it. She said to him, in a near-whisper \"My first flowers ever, Mister Philip... I thank you!\" \n\nAs he tried to catch his breath, Philip made a decision, quite coolly, based on his reactions -- this woman was going to be his life's partner. There wasn't the least doubt in his mind, despite having disbelieved in such 'instant relationship' fables all his adult life. Lakshmi was his other half, the missing fifty percent. And he could clearly see a reaction on her part that was similar to his own. A genuine 'OhMyGod' moment. \n\nShe rose from her namaste's greeting-bow, said in excellent, idiomatic English, \"Welcome to our little home, Mister Philip. Our humble abode, as it were. A safe trip from the office, so I see. That is always good. Since you were invited for tea, perhaps that is where we can begin!\" \n\nShe led them to the low table in the living room: a double tea-service sat there, freshly filled, waiting. Beside it lay a mid-sized red book -- Mark Twain's selected short stories! \n\nPapa grinned at Philip's surprise, said \"I told you, Mister Philip, that she is intelligent, well read and very nearly fanatical about her English, most of which she has learned entirely on her own. They only provide four years of English classes in her school, and not so terribly good. I also warned you that she might want to practice the language with you -- you who are her very first American. Not an imposition, I do hope!\" ",
        "Philip managed to say that he would be delighted to discuss Twain and his works, which would serve admirably for 'practice'. \n\nLakshmi simply smiled, bedazzling poor Philip: \"Masala chai or black, as you wish.\" \n\nPhilip opted for the masala, knowing that every woman had her own recipe which she would be anxious to show off. Lakshmi made an odd movement with her left hand, wrapped that hand in a napkin before pouring left-handed. Philip wondered -- was she left-handed? The pot's handle was non-metallic, it couldn't be too hot to touch, and at any rate the gossamer cloth made little practical sense for use as a hot-pad. \n\nHe accepted the cup, wondering also why his own hand was still steady, how he managed not to drop the awkward thing. \n\n\"My Papa says it is fun working with you, Mister Philip. That is a rare compliment!\" \n\nPhilip acknowledged the compliment, then commented intelligently on the chai, particularly her discreet use of cloves - so unlike others he'd had recently: Lakshmi purred. He tried to relax, managed at least to control his voice. \"Miss Lakshmi, your Papa is exceedingly proud of you. Your English so far has been impeccable, which is a rarity among 'second-language' speakers. My congratulations and admiration for a job of learning well done.\" \n\nHe turned to Papa and spoke in formal Hindi -- much to Lakshmi's surprise. Papa had made no mention of such an ability and she was quite impressed. Philip said, with a grin that almost melted poor Lakshmi (turn-about being fair play), \"Sir, with all due respect, thou art but a goat, like me and most other men. How is it that thee produced this daughter, who is clearly the most beautiful woman in my own universe, and certainly likewise elsewhere? How did you do this marvelous thing?\" \n\nPapa beamed, Lakshmi flushed under her basic color. \n\nPapa replied, \"I had the considerable help of her mother, a woman of impossible beauty, now alas long dead as I mentioned earlier. We thank you for your compliments!\" \n\nLakshmi took the initiative. \"Mister Philip, I have been given this body by whatever gods there be, if any -- I am of course grateful, but we all know that the vessel will rapidly age and lose its initial gloss -- looks being of all things probably the most evanescent. But I do thank you for the compliment on my English -- my usage is not perfect and I would like it to be so. Such knowledge and ability are more persistent, and more important, than the accident of one's appearance.\" \n\nPhilip shrugged, then said gently \"Such perfection in English as you seek is simply impossible, My Lady Lakshmi. One's English can be completely CORRECT, but perfection must include whatever meaning is both intended and received, as well as things like musicality. In English there is no such thing as overall perfection -- although perfect grammar is perhaps achievable. So far, you are doing quite well. Again my congratulations.\" \n\nPapa interjected: \"Now, Mister Philip, I see you are also a philosopher of language. I am quite proud of her -- she has finished long ago the eight years of school available here for girls. Twelve for boys, of course. All eight years, she got the best grades in the entire school, and every year she won the academic examination. Beat all the boys she did, every year!\" \n\nLakshmi nodded, then said in a low, tight voice, \"Every single year, I won, and every year the authorities gave the school's only scholarship to the top boy instead. 'Girls are incapable of real learning', so they always said. Wasted resources if more or better education were given to a girl! It is exactly like being in the wrong caste, just a caste based on gender, nothing more. They would not even allow me to attend the other four years available to boys. Perhaps you can tell, Mister Philip, that I am a little bitter. But I threw myself into English studies -- I love English literature, hence the Mark Twain volume before you.\" \n\n\"English lit is a huge subject, Lady Lakshmi - have you narrowed it at all?\" \n\nShe laughed: \"Yes... to American as opposed to England-English literature.\" \n\n\"Why so? An interesting dichotomy! Why not, say, Indian literature as well? Or even instead of those two?\" replied Philip. \n\n\"Indian literature is not serious, merely difficult! It consists almost entirely of rehashing fantastical and confusing tales of the doings of entirely mythical gods. There may be lessons to be drawn from it but others can have the privilege of spending their lives seeking them.\" \n\n\"I greatly prefer American to English because of its breadth and vigor. People are going places, doing things, taking charge of their own destinies, the language is REAL, as are the situations. British literature seems to me to be stuck some hundred years back, if not more, and is eternally reexamining the British caste system. Frankly, here in India, in this very home, we have already a long-standing sufficiency of familiarity with a caste system!\" \n\nShe was on a bit of a roll, Philip realized as she kept right on - \"Consider, Mister Philip, the classic novel Lady Chatterley's Lover. A woman of minor nobility is married to a crippled man of her caste, a man incapable of fathering the child they both wish for. He gives her permission to breed with some other man of her choice, so as to beget an heir. She does so, and all is fine until husband discovers that wife has stepped outside the marital caste and mated with their own gamekeeper, an utterly unacceptable choice. Further, she seems to have fallen in love with this low-caste man.\" \n\n\"The rest of the story is an exploration of the angst of all parties as they flounder in the net of caste prejudice. Phooey. How drab a story, how odd the huge controversy over it. What sane person wants to read such drivel? Especially after a lifetime of living through it themselves!\" \n\nShe stopped. Philip was floored, almost intimidated. He said so, meaning it as a compliment. Then he said \"Well, I can certainly provide some observations on the local gender-bias problem as seen by an outsider... honesty only. Okay?\" \n\nLakshmi looked at Papa, grinned and said \"He is behaving just as you predicted, Papa. Now we can have an interesting conversation instead of tea-time-talk! Please go ahead!\" \n\n\"I will largely agree with your literary analysis, Madam Lakshmi, but my father was the English-literature professor, not I. As to your unfortunate experiences with gender biases at school, all I can do is tell you that in my home culture similar attitudes prevailed for some hundreds of years, up until perhaps fifty years ago when laws were finally passed, at the national level, to prevent such abuses and to promote gender equality.\" \n\n\"It has taken time and hard work, but those laws are working quite well these days. In my own experience, if a girl wins a competition, she gets the prize. It is in fact quite seriously illegal to do otherwise.\" \n\n\"In my own high school, there were 334 students who graduated in my senior year, and I was about number 25. The top six were all women, and they got the scholarships. Period. No questions asked, no protests from the boys or the boys' parents. Merit ruled the selection, with 'merit' determined mostly by grades and examinations.\" \n\nHe shrugged, grinned engagingly: \"I am reasonably bright and have been successful in school and elsewhere, and I routinely find myself beaten by women smarter and better educated than myself. No matter the topic, no matter how good one is at it, there is always someone much better than one's self, if you can search the world closely, and many of them are female. I feel no embarrassment at being so beaten, and am proud to call the women who trounce me friends and equals. So there is some hope!\" \n\nHe grinned again. \"Perhaps your Papa will send you to the USA for college, so that you can compete properly and fairly - and see this other system for yourself!? Then you could undertake a mission to bring some version of that system to India!\" \n\nThere was an extended and relatively comfortable silence. Then Philip broke it -- driven by his emotions purely. There were things he really wanted, needed, to know about Lakshmi. \n\n\"Miss Lakshmi, in our talks back at the company your father mentioned that you are not yet married -- your lack of a marital sandooram in your hair parting-line confirms it. In all honesty, I do find this utterly mystifying, defying explanation, flying in the face of sanity. Especially within the local culture of early arranged marriages.\" \n\nHe steeled himself as if for an icy plunge: \"To be quite frank, you are absolutely the most beautiful woman I have ever met in my entire life.\" Lakshmi pinked significantly but was clearly pleased. \"You are also extremely well educated, and that largely your own doing which makes it even more impressive. I cannot conceive of any reason for you not being married long since. And because the topic of marriage has been broached back at the office, even without you present which is undoubtedly rude, may I ask the obvious question?\" \n\n\"And what question would that be, Mister Philip?\" Lakshmi eyed him, knowing full well. \n\n\"May I very rudely ask \"Why?\" -- and of course, you are entirely free to tell me it is none of my business whatever -- in which case I agree to forever drop the topic.\" \n\nShe looked at Papa, then at Philip. She shrugged. \"I am completely unmarriageable, and that is so for several reasons.\" \n\nPhilip started to say something, and Lakshmi motioned him to silence. \n\nShe took a deep breath. \"First there is the simple fact that I will not even consider an arranged marriage -- were I ever to get married it would be to a man of my own choice. On this Papa and I have long agreed.\" \n\n\"However, reasons second and third, there is the matter of caste and education combined. I will not marry any man who is less educated than I, and within our \"proper\" caste there are precious few who qualify! Like most Indian women I cannot hope to look outside my own caste, you understand. That makes things a bit complex in the marriage department, so to speak. The added fact of my gender putting me into a separate and especially-disabled caste adds to the difficulties but is not really part of the marriageability equation.\" \n\nShe stopped, watching his face for reactions. Philip's being fair-skinned and blue-eyed made his face extremely easy for Lakshmi to read, an advantage! A corner of her mind insisted on discussing the fact that she found him extremely attractive, and the closer the better. In his face at the moment, however, nothing showed but curiosity and, perhaps, puzzlement or even chagrin. \n\nHe waited, finally said \"In my culture, Lakshmi, 'several' usually begins at four and continues up to about a dozen. You have given me three mixed-together reasons -- is there a fourth or even more? None of the first three seems inherently to absolutely bar marriage. I am still puzzled.\" \n\nShe looked again at Papa, who did his own shrug and said \"Go ahead, if you wish. Mister Philip is from a very different culture, so perhaps his reaction may be educational for us.\" \n\nPhilip was totally puzzled by that comment, looked to Lakshmi. \n\n\"Well, Mister Philip\" she said, almost defiantly, neck stretched tall, chin upthrust. She looked squarely into his eyes -- each thought the other's the most beautiful face they'd ever seen. \"Fourth and finally, I am what in commerce one might call \"damaged goods\".\" \n\nHer face flared red under its duskiness, the cords of her neck showed. \n\nHere, Philip knew, was the crux of this problem. He went on high alert -- in most societies, including India he assumed, such a term, when applied to women, meant at least loss of virginity. What to do? Especially since such a loss was so trivial an event in most of his own society -- certainly so within his own personal circle. What might be, locally, an appropriate response to such a statement? \n\nThat problem was resolved for him by Lakshmi herself, speaking very matter-of-factly: \"I know what you are thinking, Mister Philip. Men in particular have only one reaction. No, the problem is not loss of virginity. For whatever that odd intangible commodity may be worth, I still own it.\" \n\n\"The problem is that our society, like that of the conservative, traditional Jews I am told, places a complete ban on marriage of persons who have either a genetic deformity or a permanently-disfiguring injury. No unpretty people are wanted, I guess. The ban is absolute, and in our society any such problem is thoroughly hidden from the world.\" \n\nShe shrugged: \"Unless one is a beggar and chooses to display it for profit. In fact, the usual reaction to accidentally catching sight of such a thing is revulsion and complete rejection of the owner. Actual contact even if momentary and accidental, any touching of a deformity, is literally nauseating. \\\" \n\n\"Even assuming all other problems of my marriagability were solved, one really would not want to enter into a close living arrangement with a person who has been trained from birth to find some aspect of your physical person completely disgusting. It might interfere with one's happiness within the arrangement, don't you think?\" \n\nPhilip was visibly perplexed -- what in the world was she talking about? He scanned her head to toe -- nothing wrong that he could see. \n\nHe finally simply asked: \"Lakshmi, I am at a complete loss here. What injury or deformity? All I see here before me is an extraordinarily beautiful woman, as close to physical perfection as anyone I am ever likely to meet!\" \n\n\"My body is mis-constructed thus\" she said, uncovering her left hand for the first time and raising it to his face level, palm towards him. It took several seconds for him to realize that her middle and ring finger were developmentally joined full-length. Finger number 3+4. \n\nShe watched his oh-so-readable face as she rotated the hand, displaying it almost as a dare. \n\nNo revulsion, no hint whatever of rejection -- impossible! \n\nThen, the most incredible thing -- he reached out and took her problem hand in his, brought it towards him, studied it closely. She flinched: he did not. He turned it over. And not a flicker of upset crossed his face. \n\nHolding the joined fingers firmly he looked up at her and said \"It looks like this hand is fully functional -- is it?\" \n\nShe nodded, he freed the hand, she made a fist, then spread the fingers wide, wiggled them. \n\nHe turned his hand to place their palms together: hers was tiny by comparison. Such delicacy of touch underlain by strength, she could feel it -- and she shivered internally. \n\nHe took a deep breath and said quite seriously, almost angrily, \"Such a trivial thing this is, to have such unfortunate consequences. It is of laughably little importance, really. Damn societies that do this to people! Unmarriageable forever because of THIS!? What utter bullshit that is! The highest and lowest forms of stupidity, combined.\" \n\nLakshmi appreciated the intensity -- she knew the word but had never heard it used. It seemed quite appropriate, however. \n\nThen \"Madam is just living in the wrong society. If I were to take you back with me to America, in three days you would have a line of suitors fifty long waiting for a chance just to meet you! And, Lady Lakshmi, I would be first in line.\" \n\nShe went brilliant scarlet at that -- but didn't break their contact. \n\nHe shook his head and went on: \"Why would I lead the charge? Two reasons -- first, to meet you myself; second, to keep all others from having a chance to even get close. They would have to fight me!\" \n\nPapa seemed to have shrunk to insignificance. Lakshmi and Philip were now in their own private universe, alone together. Philip said, quite seriously, \"May I give you my reaction, from inside my own society, as an American visitor with no right to be critical but a great desire to say something?\" \n\nShe wondered what he meant to say or do, muttered \"Of course. Please do.\" \n\nHe stared hard into her eyes and said \"This special finger is part of YOU. By definition, no part of you can be anything but beautiful. How could it be otherwise with such beauty in human form? Nobody in my culture would give a DAMN about such a trivial thing!\" \n\nThen he raised her hand to his lips and firmly kissed the special finger. A solid, almost forceful, long-sustained kiss. \n\nLakshmi had never been kissed at all by a man, much less on her supposedly nauseating fingers. She stopped breathing while his lips lingered. The pressure was not monotonous -- invisibly he was practically making love to her deformity! \n\nShe had no idea how difficult it was for Philip to resist taking the entire special finger into his mouth and working it over properly with lips and tongue. Very difficult. Only Papa's presence stopped him. \n\nShe finally managed to gasp \"My god, Mister Philip!\" She could produce nothing more -- eye to eye, now, her entire belly was liquid fire: she actually felt light-headed. Never in her life had there been any even trivial acceptance of her deformity by others, and then THIS! Out of absolutely nowhere! \n\nTen seconds and he released the pressure, lowered their hands. He shrugged, said \"So much for YOUR society's views. I greatly prefer those of mine.\" \n\nA thought struck him: he grinned at her and said lightly but obviously seriously \"Tell me my Lady Lakshmi, by any chance does this condition extend to your left foot as well? Because if it does, I would gladly give it the same treatment as your hand just received. For me, today has already been a phenomenally important day, perhaps the luckiest of my life. Am I to be so additionally lucky as to get a second helping?\" \n\nShe gasped twice, having fully grasped -immediately- the import of his statement, finally giggled, and said very quietly, with a wide-eyed full contact expression, \"No, Mister Philip, it does not.\" \n\nThen, unbelievably even to herself, she added \"Unfortunately.\" \n\nAnd there was lightning between them. \n\nNever in her life had she ever conceived of her problem as being potentially an asset. But without it -- what chance for this close encounter? None. Before this moment she could also not have conceived of actually WANTING more of the same problem!  \n\nPhilip smiled at her, she melted again, and he said \"Such a pity!\" Then, very very quietly, with Papa now thumbing studiously through the Twain volume in search of some sort of cover, he whispered for her ear only: \"Perhaps another time, another reason, may occur?! One can always hope!\" \n\nShe blushed again, managed to whisper in return \"Perhaps I shall never again wash this hand!\" \n\nLooking at Philip, she felt as if she were falling steadily forward into him, right up inside him, through the pupils and into the brain. The electricity between them was obvious even to Papa in his outcast position, hence his sudden interest in details of Mark Twain. \n\nLakshmi and Philip each knew -- this was simply \"IT\" -- Perhaps the courtship was not quite over, but the decision had been made. Only the details of implementation remained. But neither of them could yet articulate it. \n\nPapa finally chose to take note of the proceedings and muttered \"I told you he comes from a very different culture, Daughter -- now you and I can both see just how very different it is!\" \n\nAfter some considerable time taken up with silence and the ritual pouring of more tea, Papa undertook to move the meeting forward, and said \"Lakshmi has some specific questions she would like to discuss with you, about Mark Twain's use of English. Would that be fine with you, Philip?\" \n\nPhilip replied \"But of course... and luckily Mark Twain is my personal favorite author, so perhaps I can actually say something meaningful.\" \n\nPapa made a suggestion. \"I, too, am interested in Twain's work. This bench seat is wide enough for three of us if we are friendly, and we seem to be so. We can sit together thus, with Mister Philip in the center and the book flat on the table before him -- that way we can all see the same materials at the same time, and can have a better discussion.\" ",
        "The shift occurred, Papa appearing not to notice how the gossamer of his daughter's formal entertaining-at-home pants floated as she sat down, how the negligible fabric lay atop Philip's leg, how her thigh could not possibly avoid being pressed firmly against their guest's, a leg half naked due to his wearing tennis-shorts, a leg covered with golden-red hairs that prickled deliciously, forbidden, on her own thigh, right through the fabric. And made her belly into water. \n\nLakshmi had marked particular passages where she needed elucidation - second and third order puns, out-of-date but hilarious slang, wildly Twain-ish idioms. Philip was capable of remarkable concentration, and found he needed it. \n\nSeveral minutes into the discussion, he became aware of a tiny throbbing, a barely-detectable steady pulsation where her right thigh pressed against his left. The gentlest of twitchings, rhythmic, emanating from somewhere inside her. \n\nIt took no time at all to figure out that she was masturbating by squeezing her thighs together. Philip was delighted, almost unbelieving. Papa seemed oblivious. Somehow, Philip held up his end of the conversation, studied the pulsations, then began to respond with his own. \n\nIn short order, he was leading. He got one short sideways glance from Lakshmi just before -- in the middle of a Papa comment and question -- she flipped into a nicely-hidden short, sharp orgasm. For several seconds she was gone, sagging against Philip for support as her body took control -- but it did so remarkably discreetly. \n\nShe took a slow breath, shook herself slightly, and resumed her upright position, listened to Papa, and launched into the conversation again. Philip could not help but admire this young woman. With whom he was certain he was now deeply in love. Impossible, but true. \n\nPapa, aware of the electricity but nowhere near fully understanding why the conversation had suddenly flagged, rose to meet his obligations as host. \n\n\"Now, Daughter, we must not bore our guest with his own culture when he has more of ours to experience! Here is what I propose. Mister Philip has told me twice that he wants to browse the jewelry bazaar. I could be his guide, but your English is better and so are both your patience and your knowledge of the bazaar. Not to mention your knowledge of jewelry.\" \n\n\"So let us all three go together, on my cycle. Master Philip is accomplished at motorcycle riding, he sits very comfortably behind me. At the bazaar you two can go off to do his shopping while I do a few errands I have been putting off for some time.\" \n\nHe smiled happily. \"No arguments please. I will now go forth and get the cycle ready -- it needs more petrol, the station is about 100 seconds away, not far. You, Lakshmi, must show our guest the toilet, for there is none in the bazaar and we are all of us quite full of tea, a bad combination indeed! Put on appropriate motorcycling clothes. We will then all go together on the cycle.\" \n\nHe stood and trotted downstairs, leaving Lakshmi and Philip together. Philip made no reference whatever to her little sexual adventure just now. She appreciated greatly his forbearance, blushed furiously at Philip's prolonged examination of herself, then accepted the silent adoration he gave off, and smiled. \n\n\"Papa very much likes you, Mister Philip, and he trusts you completely - as shown by his leaving us here together un-chaperoned. That NEVER happens in our culture -- absolutely impermissible!\" \n\nShe stood, then hesitantly reached for his hand - with her left -- another first for her. \n\nShe led him to the toilet door, stopped, turned to face him. \"You, Mister Philip, are helping me to make better sense of a very important and difficult part of my life. Might I ask a favor of you?\" \n\n\"Anything at all. Ask!\" \n\nShe raised her left hand, examined it briefly, then sighed and said, \"I find it SO hard to believe that there is such a cultural attitude as yours, to this deformity...\" She waggled 3+4. \"Would you mind kissing it again, just to reassure me that this is really happening?\" \n\nIn the background, sounds of Papa departing on the cycle. \n\nThen Philip asked \"A view from my culture again?\" \n\nShe nodded, almost squirming in anticipation. \"Please!\" \n\nHe grinned -- his smile was simply driving her crazy -- and said \"First the kiss, then a short English lesson. Okay?\" \n\nShe nodded. He inhaled her joined fingers all the way into his mouth, then gently closed his lips and caressed the special item lavishly with his tongue. Taken utterly by surprise, totally flummoxed, she shivered in near ecstasy... sputtered \"Oh my god!\" as he slowly -- very slowly - extracted the pair, now glistening wet, nipping repeatedly as the fingers slid out. \n\nHe put two fingers of his own left hand beneath her chin, his thumb just below the edge of her lower lip. \"Lakshmi, look at me. Please.\" \n\nShe did so, still shivering. \"An English lesson -- and YES, I know you are shaking and that pleases me because, deep inside, so am I. For the same reason, I expect.\" \n\nShe looked astounded: reciprocity! Somehow, she composed herself, waited for him. \"Lakshmi\" he said, \"these joined fingers are a part of you. They are not a separate \"IT\" as you referred to them just now. IT sounds impersonal, cold, and when referring to your beautiful body the term \"IT\" is at least ridiculous, at worst quite disrespectful. Now -- can you ask again, but correctly?\" \n\nShe hesitated: he could see her thinking through the puzzle. The light came on, she smiled and said \"My request should be 'Will you kiss ME again?' - not IT!\" \n\nPhilip grinned broadly: \"Bravo! Yes on the kissing, my lady, very gladly and any time, any place, and as much as ever you could wish. Beginning here and immediately.\" \n\nHis thumb tugged her lower lip downwards, he lowered his face towards hers. A first tiny tentative contact, tongue-tip against inner lip surface, then she exploded into action, wide open and voracious, shaking furiously as if eons of unmet lust and need had suddenly broken free. With their mouths pressed into the deepest kiss of Philip's life, his hands went to her ribcage, his thumbs settled on her nipples, clearly detectable even through her bra. \n\nShe gurgled into his mouth, abandoning any semblance of controlling herself, trying to crawl into him bodily and breathe at the same time. Ten seconds passed, an instant and an eternity. Her body and the lower levels of her brain were now solidly in control. Nothing like this had ever happened to her: a bit of her mind sat outside and above the scene, commenting. She ignored the comments, and grabbed Philip's ears, pulled his face against hers desperately hard. \n\nFive more seconds: she released his ears, her hands went behind her neck, she did one of those mysterious female clothing-shimmy movements that so universally confound men, and her sari-blouse and bra hit the floor beside them. \n\nHe collected both of her wrists in one large hand, stretched her upwards, back against the door, on tiptoe. He held her like that, willingly helpless and exposed, as he dropped his face to her armpit, washed its entire surface with his tongue. \n\nShe gasped but failed to protest. Kissed his way across her rock-hard breasts with special homage, intense and very welcome, to both rigid nipples. He had never encountered such perfect breasts, had no time to really explore them or issue praises. Back up the other pit went his face, thence returning to her mouth. \n\nHe breathed out a strong gust that sent his used air outwards through her nose: he inhaled the same way, paused. She imitated perfectly, her breath flowing strongly through him. He gently, firmly insinuated his thigh between hers, she gripped it and rubbed -- in ten seconds, she'd produced a second orgasm for herself. \n\nThen, abruptly, she was panicked at her total loss of control, pulling back, saying -- perfectly sensibly -- \"We must stop, immediately! Papa will only be gone for another few minutes at most, and if the gasoline-line is short he may already be on the way home! Mister Philip, I have never been kissed or touched by a man before -- always a perfect good-girl, that is me. No, that is now inaccurate -- that WAS me -- past tense. I think I must immediately change some habits. My heart is going to explode if we continue!\" \n\nHe did pause, but his next statement stopped her cold: \"You are going to marry me, Lady Lakshmi. Neither you nor I have any real say in the matter.\" \n\nShe stared at him, blushed the deepest red of the day, stammered for a second or two, then finally opened the toilet door, shoved him inside, said \"I will go change as Papa directed, you do whatever you need to do in there! Maybe later we can talk a bit more sensibly!?\" \n\nIn under two minutes he had finished peeing, she had done a whirlwind change of clothing -- now tight jeans, a different and even more transparent sari-blouse. Neither of them noticed the blouse and bra on the floor at the toilet door. Now sans bra, her nipples and even areolas were brilliantly on display. He applauded, leaned down to kiss both breasts again, meeting no resistance. As he released the second, Papa arrived home, tooting his horn from the street to get their attention. She whipped a lightweight pashmina shawl around her shoulders to provide modesty. \n\nPapa paid little attention to his passengers -- he was totally concentrated on the traffic, a good survival tactic. Lakshmi was sandwiched. As Philip settled behind her, she reached back, grabbed his hands, slid them beneath shawl and blouse to cup her breasts, and said loudly \"Hold on like this -- it's the best way.\" \n\nPhilip was astounded, and could not have agreed more. The ride to the bazaar was a mixture of agony and ecstasy, her pebble-hard nipples burrowing into his palms, his fingers dancing freely, Lakshmi squirming gently in slow-motion response. \"For an absolute novice...\" thought Philip to himself, \"she shows a phenomenal innate feel for this business.\" \n\nThey entrusted the cycle to a child \"parking attendant\" and went into the bazaar. \n\nAs he had promised, Papa went off on his own (imaginary) errands, leaving them to fend for themselves, alone in the crowd. No sooner was Papa out of sight than Philip took her by the left hand, turned her to face him, pulled her close. \n\n\"Now then, Lady! Shall we walk demurely side by side, but not even holding hands, blond and ebony hair sort-of-together, tall and short, pink and dusky, male and female? Which public display, even though muted, will most likely perturb all those around us? Or shall I instead treat you properly by my own culture's standards -- by MY culture's version of propriety - and tuck you under my arm while we walk?\" \n\nHe demonstrated both options: \"...like THIS, or like THIS? Please choose.\" \n\nShe instantly opted for the enveloping arm. Very strongly. From under it, she looked up at him, deeply pleased at the attention and contact, although also embarrassed and shy, and said \"Holding hands alone would scandalize the neighbors. THIS version of togetherness will convince all who see us that I am your prostitute. But I am NOT, and I find, quite oddly, that I simply do not care what others think. Especially this crowd of total strangers!\" \n\nThen, only half jokingly, she said \"Perhaps I shall marry thee after all! Thee are big enough to be an effective protector.\" Then she laughed at his expression, pointed, said \"Gold and jewels lie this direction, Mister Philip-the-Crazy!\" \n\nAbout an hour later, at a small bar in a far corner of the bazaar, Deva sat alone in the shade. He contemplated the situation as he sipped at his beer, an extremely rare treat to himself. \n\nPartly via his lifelong battle with the caste system, as regards things social he had become a firm believer in (at least usually) allowing events to unfold as they would, however they might be directed by a situation's possibilities, chance, and interference by the gods. Inherent Indian passivity was what he called this -- 'active noninterference with fate.' \n\nOn the other hand... \n\nHere, he smiled gently at himself. On that forever exciting other hand, the gods and their plans could often stand a bit of direction: that was eminently clear. Gods were frequently nincompoops, in fact. Nudges, they needed, if not an occasional radical turn of the Universe's Great Steering Wheel! And in introducing Lakshmi and Philip -- something that simply could not have happened by chance - he, Deva-Papa, had most certainly nudged! Undoubtedly more strongly than a mortal was entitled to do. Any more activism would surely be improper, perhaps engendering some explosive and undesirable counter-reaction. \n\nBut -- he continued musing -- surely the act (or, was it 'non-act'?) of merely standing aside and watching could not be construed by the gods as further interference? Besides, would the gods care at all? Weren't they busy with their own affairs these days? He, Deva, could CHOOSE to do nothing, an odd, rather hermaphroditic course betwixt action and inaction. \n\nA blooming buzzing confusion in his brain. He needed a philosopher to tell him whether the two courses of action were complementary or conjoint. Quite different things, really. If complementary, they together covered the universe of possibilities but did not overlap -- either/or. If conjoint, then either one amounted to the same thing as the other. He contemplated possible courses of action, examining, considering, rejecting, filing for further thought. \n\nOption ONE - the taking of positive action intended to CAUSE a result. Versus option TWO, an active refusal to take action that would PREVENT the result. Two courses, quite different, yet the same net end result. It seemed to him that the first was almost an insult to the gods -- a way of saying \"I know better than you do how we should proceed -- let's do it MY WAY!\" Whereas the second was more respectful... a sort of active non-interference, by a mortal, with the gods' plans. \n\nWhich one was the most likely to succeed? That was, in fact, the crucial question, wasn't it? He sighed -- one path represented the passivity of his society; the other, the active \"Take charge and GO!\" of Philip and Philip's society. \n\nEventually tiring of such waffling he tried to imitate friend Philip's decision-making. \"You have plenty of data already!\" he told himself. \"Now MOVE!\" \n\nHe made the decision - positive action it would be, clear and strong. He had his plan -- it was simple, and relied entirely upon nature herself. He would hardly need to fib at all, only just a very little bit. Acceptable for the sake of a much larger, although so far entirely theoretical, \"good\". Usually he despised situation ethics, but here he saw no choice. He finished the beer, stood, strode off into the bazaar to find the children, snorting amusedly at himself for so categorizing Mister Philip... and likewise his now-21-year-old daughter! \n\nThe finding hadn't taken long, for Deva actually knew this bazaar far better than did Lakshmi. He spotted them from a distance and was startled how they clung together - but he let them think they'd detected him first. Their embarrassed knee-jerk separation with its aura of \"Quick, before he sees us like this!\" was amusing. \n\nWhen he let himself catch up to them, she was a good deal darker in the face than usual -- she was blushing hard - probably a good sign relative to his goals. \n\nUpon reaching them, he launched his activist plan. It was simple in the extreme: he would merely arrange for extended time alone together for the pair -- whose mutual explosive, electric attraction had been so blatantly, screamingly obvious during their tea and the following English lessons! \n\nNow came the bit of lying. Straight-faced. \"Lakshmi, Mister Philip, my apologies. I made a tactical blunder and phoned the office. I should not have done so: it seems there is an emergency some hundreds of miles from here which --so they say- I and only I can resolve. That really means the others are too lazy to go. I must leave immediately, and will be gone for tonight plus three more, returning thereafter. I must go home at once, pack and leave -- there is only one more train this afternoon and it departs in less than two hours. I am so sorry! And, I must take the cycle home from here.\" \n\nStartled, Lakshmi began an inquiry which Papa forestalled: \"This change in MY plans need not interfere with your afternoon of shopping with Mister Philip. Lakshmi, you can just continue as his guide until Philip is finished. Then you can be our family hostess and see that he gets well fed and eventually returns safely to his hotel. (His personal internal imp popped up to ask, \"And where, O Papa, might that feeding-of-our-guest occur? And with whom as a chaperone?\") You might send him via tuk-tuk. Do not let the driver overcharge our guest! His well-being henceforth is in your hands. I will go home now on the cycle. Is this all okay?\" \n\nThe pair nodded together. Papa shook Philip's hand tightly: Philip said \"I will be sorry to miss you at dinner, and for the next couple of days of my free time. But business rules us commercial folks.\" He grinned broadly: \"You and I will have plenty of time together around future meetings, I expect!\" Then, \"I will take care of Lakshmi for you if need be -- which I very much doubt!\" \n\nPapa turned and disappeared into the swirling crowd. He retrieved the cycle from the attendant, headed home to pack for his phony trip. He parked the cycle in its cubbyhole, and trotted upstairs to the entry level. Enroute to his bedroom and closet he passed the remains of their tea, still on the living room table with the Twain volume beside it. He recalled again the lightning that had flashed silently between Philip and Lakshmi, sighed, quickly packed his overnight bag, phoned a not-too-nearby inexpensive hotel and made a four-night reservation. A small investment, a bet -- and crucial to his plan. \n\nEnroute to leaving home, he needed to pee, detoured to the toilet. He clicked on the hall light. Just beside the toilet door-jamb he spotted a small wad of clothing, obviously Lakshmi's. That, he thought, was odd. Tea-leavings in the living-room computed, clothing on the hallway floor not so. \n\nHe stared, leaned down and picked up the little pile: a bra and a sari midi-blouse, the same diaphanous one Lakshmi had worn at tea, to Philip's obvious enjoyment and to Papa's mild embarrassment, \n\nHe understood in a blinding flash. TEN MINUTES ONLY!! -- he'd been gone, they'd been alone. Ten minutes to get petrol. TEN MINUTES and Lakshmi naked at least to the waist, hurriedly enough to leave these behind. Good GOD! This was a whole new area of American speed in dealing with unexpected situations! To himself he thought, \"We are now playing by American, not Indian, rules!\" \n\nThen came the calm; this was, in fact, just exactly per his plan, wasn't it? Although on a much faster schedule than he would have believed. His child! Ten little minutes only! What COULD they possibly have done, of any consequence, in such a short time? \n\nHe shuddered, knowing only too well. HIS DAUGHTER, Miss Decorum herself -- such deeply unexpected behavior! \n\nHe pondered the almost weightless garments, then stepped to Lakshmi's room. A chaos of clothing lay about, due for re-filing. He dropped the two items atop the pile nearest the door, hurried out, grabbed his little suitcase, and headed for the street to get a taxi. He could, he realized, most certainly use a few days' respite from his cares! \n\nWhilst Papa was returning home enroute, eventually, to his hotel, Lakshmi and Philip browsed. The vast majority of materials on display were trinket-level junk, mostly coin silver -- not even sterling. Crap. Eminently easy to ignore despite (often because of) the incessant yammering of the dealers. Few and far between were the shops that had an active smith or jeweler on site. The others were retailers only, actually made nothing whatsoever themselves. ",
        "One such working jeweler did stand out: a small glass-topped display case stood by his side as he worked. It contained several exquisite, obviously top-quality rings of unusual and beautiful designs, tagged \"18K\", plus several similarly-stamped bracelets. \n\nA large bracelet, almost a small necklace, of twisted square gold caught both Philip's and Lakshmi's eyes -- it was clearly the best thing they'd yet seen and by a considerable margin. \n\nThe jeweler was a very young man, barely out of boyhood, really. He was concentrating, silently preoccupied with a delicate soldering operation. He didn't look up but said, in surprisingly good English, \"Sir, Madam, only wait one moment please. I be not rude, just being busy for one, perhaps two more minutes. The key for the case is under the tablet of paper. Please open and look!\" \n\nThe tablet in question had scribbled on it several notional pencil drawings of rings, all stunning, each different, all clearly original. The art showed a masterly command of pencil drawing. The demonstrators in the case showed an equal or better mastery of the metal. \n\nAs the man worked, Philip and Lakshmi watched for a minute or two, fascinated, then examined the big bracelet. Eighteen karat, square cross-section, twisted through three full revolutions, the joint so good as to be undetectable. Hammered facets mixed with touches of matte surface. Delicious, unique, seriously heavy. And far, far too big for Lakshmi to ever wear. \n\nLakshmi watched Philip's face as he closely examined the circle -- she finally screwed up the courage to ask him, surprising herself by worrying how he would answer; \n\n\"So, Mister Philip, for whom do you shop today?\" \n\nShe wondered: for a relative? Himself? (Perhaps - although unlikely since he wore no jewelry.) Worst of all, for a girlfriend or even a wife back home? NO! Not a wife -- Papa had told her he was single. Why had she not pressed Papa for even more such information, such critical data? How ridiculously stupid of her! She supposed she could just ask Philip straight out -- but no, that would surely be okay in his culture but absolutely not so in hers! Damn! \n\nHe grinned at her -- she felt she had been totally transparent with the question. The reply came: \"Who knows? Perhaps my Mother. Perhaps myself. Perhaps for YOU!?\" \n\nShe reddened, muttered \"For yourself and your Mother, yes. For me? Whom you have known for less than half a day, not even five hours yet? Don't be ridiculous, Mister Philip! Such nonsense!\" Then, \"But I do accept the compliment!\" \n\nHe looked at her through the bangle as if it were an oversized monocle. \"MiLady Lakshmi, beware -- there is often a great deal more truth than falsity, more accuracy than error, in what I say, even in my nonsense!\" \n\nShe was at a loss how to continue, but was saved by the jeweler who finished his immediate task and looked up at them. \"All items in this case are my makings, my designings also. They are made of a special very hard 18K gold -- few jewelers use it because it is hard to work -- but I prefer it. Such gold will last many lifetimes, for the purchaser's great great many great grandchildren to enjoy as well. Bracelet in your fingers, Sir, is the same gold, an excellent choice for Madam's special jewelry, Sir!\" \n\nPhilip nodded and asked, tapping the tablet, \"These are your own drawings, these designs?\" \n\nThe jeweler nodded vigorously, said \"I will not copy any other man's design. I prefer to work with a customer to give something very special.\" Then he shrugged: \"I have so many ideas! But I can choose only a few to be making real. Besides, I cannot afford the time and the gold to make items without a customer waiting, a customer who can supply the necessary funds for the gold. Gold and stones always too expensive to keep in the shop. Sir, Madam. My name is Vivek, may I ask please for yours?\" \n\nThey introduced themselves. Vivek said \"Please, handle the items freely, try for size if you wish, size can always be adjusted as needed. I do not push any customer -- customer just pushes back. My way lies any hope of a sale, I will not push, it is uncomfortable and rude.\" \n\n\"No sales pitch!\" thought Philip. \"Amazing, perhaps unique in all of Indian history.\" \n\nPhilip realized after some minutes of business-and-design conversation, that this man KNEW how different and how good he was, and that his stuff would obviously sell itself to anyone with taste and enough resources. \n\nAs Lakshmi tried on rings, Philip's eyes came to rest on a small sign, hand-written, battered, pinned to the top of the door-jamb. It read in coarse hand-lettering \"Gone to school. Back at two.\" \n\nHe pointed at it, and Vivek responded: \"I intend to be a successful businessman someday, hopefully soon. I go to school daily studying English and business. The others in this bazaar all think I am crazy, so I am known hereabout as either Mister \"Gone To School\" or Mister \"Back at Two\". \n\nThen, tentatively, \"Do Mister Philip and Madam Lakshmi feel I am crazy?\" \n\nPhilip replied -- \"Not only are you NOT crazy, you are probably the only sane and sensible person here! Of course you must continue your English and business studies -- I am an international businessman myself and without those for background, others who have the knowledge will gobble you down like a crow handles a worm. NEVER stop learning, Mister Vivek -- in stagnation lies inevitable failure! For either of us!\" Then, plainly curious, he asked \"What bushiness courses have you taken?\" \n\nVivek thought for a moment, rattled off a list: \"Basic principles of business; simple accounting; customer relationships; mergers and acquisitions; cost of money; business ethics. And several English courses also, hence my present ability --admittedly poor- in your complicated language!\" \n\n\"I am impressed, Mister Vivek! I would enjoy having you as a student in my university classes back home. Keep up the good work, someday you may own a significant piece of the universe!\" \n\nVivek grinned at them, bobbed his head; \"Thank you, such kind words. I shall follow your advice.\" \n\nAs they talked, an idea popped into Philip's mind, full-grown, ripe. It made his head swim. He asked Vivek \"Your work is superb, therefore not cheap. What is the price of the too-big square bracelet?\" \n\n\"Sir, my prices are firm, unlike others in this bazaar -- mostly the others are just dealers in junk, who know what their offerings are worth. I am not subject to bargaining. Always a firm low price for the best possible value.\" \n\nHe laid the bangle in the scale, noted figures on the pad, named a price that made Lakshmi gasp loudly -- a whole wallet-full of ten thousand rupee notes would be required! Surely Mister Philip could not be serious about any such purchase!? \n\nVivek smiled: \"Madam Lakshmi -- a good name, Madam - was surprised, but Sir Philip was not. May I explain, Sir, to Madam these numbers? The cost is, admittedly, significant. Beyond several years' pay for me, in fact.\" \n\nHe did so, quickly, plainly, accurately, doing the arithmetic on the pad, using today's price for gold. Amount of gold, cost of making the special alloy and forming it, design and construction time, profit. \n\nShe had to agree -- the final price although a lot of money was in fact quite reasonable. \n\nPhilip was now thoroughly impressed -- this boy/man in a tiny bazaar shop had a MUCH better understanding of business principles than did any of the corporate mucky-mucks he'd been dealing with here! \n\n\"Do you have a business card?\" he asked. \"I might have a proposition for you, Mister Vivek.\" \n\nThe card was produced, Vivek looking a bit puzzled. Philip did not pursue the topic, to Vivek's chagrin. \n\n\"At what time will you open tomorrow morning?\" \n\n\"At eight, or earlier if Sir needs it. He may name any time that is convenient.\" \n\n\"Eight will do. Here is the proposition. Lakshmi and I both like the bracelet, but it is far too big. We need, however, some time to think. I have some ideas to consider, all of them good from your side of the counter, Mister Vivek!\" \n\nLakshmi was agape, speechless. \n\n\"Here, Vivek, are ten thousand rupees for you to hold the bracelet until we return, which we will do no matter what decision. If we buy it, the money will be applied to the price. If we do not, we will forfeit five hundred of the ten thousand, and also pay you fifty rupees for your own time. Fair?\" \n\nLakshmi almost choked on the \"If WE buy it!\" \n\nVivek smiled happily, sensing an inevitable sale- a good one. \"Very fair, Sir. I will even take the bracelet off display so that nobody might bid against you. The price just calculated is firm, no overnight growth.\" \n\n\"Good! We will see you again tomorrow, quite early. Good afternoon, Vivek!\" \n\nAfter they were out of sight of Vivek, Lakshmi turned on Philip and demanded \"Just what, Sir Philip, are you DOING? You cannot be proposing to purchase such an extravagant gift for ME, a woman whom you have known a mere four or five hours! Nonsense! Furthermore the bracelet is HUGE and cannot possibly be worn by any normal-sized woman such as myself. And Mister Philip, just exactly WHO are the \"WE\" you mentioned that might buy such an expensive toy?\" \n\nHe grinned -- \"My plan will become obvious eventually. Meanwhile, remember my warning about what may lie in the depths of even my nonsense. And Lakshmi, I have already told you that you are going to marry me -- so being here together at a jewelry bazaar makes perfect sense. To me, anyhow. What are we going to do about dinner?\" \n\nThe abrupt change of topic stopped her cold. She pondered for a while, then tucked herself back under his arm and said \"You are indeed a VERY strange man. But I am rapidly coming to like some aspects of your strangeness. It seems likely that I have no choice in whatever is going on in your head, so I won't worry about it. As to dinner, I propose we go back to my home, where I will cook for you, for us. I am a good cook and would like to show off a bit. Would that be acceptable?\" \n\nPhilip admitted that it would be acceptable, indeed! \n\nMeanwhile, not so terribly far away, Papa sat in the lounge of his chosen hotel, a second beer at hand. Two beers in one day! Papa Deva had before him two newly-bought used books -- Mark Twain's collected humorous short stories, plus a battered and outdated dictionary of American slang. He had vowed to spend the the entire four days working on Twain. Plus an hour of yoga at least twice daily. \n\nBut his concentration wandered... TEN MINUTES only! He'd been gone and left them all alone for ten minutes. Not a second more. Lakshmi had gotten at least half naked in that time -- the evidence was convincing. \n\nHe sighed. At least he'd found only upper-half clothing, namely bra and shorty blouse -- better, he supposed, than finding a complete set - including panties - abandoned in such obvious haste upon the floor. He supposed. Maybe. He shivered, revisited the beer. \n\nHe finally smiled to himself. His very own daughter! What a surprise! She must be hotter than a black rock in the blazing midsummer noonday sun... and likewise, he would bet, his own pet American... she must have gotten that from Mama, certainly not from himself. \n\nPapa understood instinctively that Philip was almost certainly a thoroughly experienced seducer. Maybe it had been a bad idea to introduce them to one another. Maybe not! At any rate, things were now out of his control, if they had ever been IN his control! He recalled with amazement the couple's electricity: and her saying --and this he found genuinely unbelievable- \"UNFORTUNATELY!\" Ye gods. \n\nFinally he sank down a bit into his chair -- eventually, he was sure, he would have to play the classic injured father. That would be difficult to carry off well. \n\nLater still, Lakshmi and Philip decided to call it a day in the bazaar. The question of dinner had been 'solved' by Lakshmi volunteering to cook at home. She was a fine cook, having studied with two good chefs -- for her, the thought of making dinner for just herself and this strangely wonderful man, alone together in her own home, well THAT was more than a bit unnerving. \n\nThey grabbed a tuk-tuk and were home in under twenty minutes. Riding along in semi-privacy with his arm protectively wrapped about her shoulders was extremely satisfying - to them both. Up this close, without the distractions of fondling or kissing or crowds, he smelled and felt wonderfully nice. \n\nShe let them in, sat him down in the living room while she went to change into something less confining than motorcycle jeans. She stepped into her messy room, surveyed the strewn clothes, decided on harem-jamas -- loose and translucent but not (she thought, wrongly) overly sexy. \n\nThen, as she moved towards the door, she noticed the sari blouse and bra sitting atop the pile of clothes. She stopped cold, thought back through the encounter with Philip at the toilet doorway, gave a horrified submerged squeak. \n\nShe trotted to Philip, her face flaming again, tugged him to her room, pointed at the blouse and bra, explained -- she'd left those on the hallway floor, Papa was the only person who could have moved them into the bedroom, he'd had the perfect opportunity to do so, Papa was NOT a stupid man, clearly he now knew what was afoot between them! \n\nPhilip calmed her, agreed with the analysis, then thought for a few seconds and said, carefully, \"Lakshmi, he not only knows, but I think he is aiding and abetting our relationship -- I simply do not believe his story about a sudden emergency. I think he's decided you and I, together, are a good thing, and he has intentionally taken himself out of our way for long enough that we can get to know one another. Nothing else makes good sense about his so-called emergency, better called his disappearing act. After him witnessing our encounter over your finger, during tea, what did he EXPECT you and I would do if given the chance?\" \n\nShe stared at him open-mouthed for some seconds, then, thinking hard, said \"I suspect, Philip, that you are probably correct. In which case...\" she said forcefully, \"...he has given us permission to proceed as we choose. I would never have believed it of him before the fact, but now it seems obvious. Therefore...\" \n\nShe looked at Philip and grinned. \"Therefore, we shall enjoy and make use of the freedom and his tacit, implied permission ... and now that I am 21, no permission is actually needed, is it? Not from any other person than myself, anyhow!\" \n\nPhilip returned the grin, then announced his hunger and his willingness to help in the kitchen. \"I like to cook, and am happy either helping you or just being in charge of cleanup. I can wash dishes with the very best of professionals.\" \n\nShe accepted with misgivings -- Papa was a total klutz with a pan of water, much less a sharp knife, and was her only sample of males in the kitchen. Much to her surprise and relief, Philip was more than adept. And wonder of wonders, he kept his hands and mouth off of her -- at least, mostly, which evidence of restraint, in fact, she found a bit annoying -- while they chopped and diced together. It was amazingly comfortable working with him -- she liked it. \n\nTwo or three minutes of chopping and he paused. She looked at him, he broke into another grin. \"I think we should stop for the moment and take a shower together!\" \n\nLakshmi was monumentally embarrassed, almost scandalized, laughed tightly, and said she didn't think so. \n\nMore distracted chopping by Lakshmi. \n\nPhilip brought out arguments -- first, they could definitely use a shower after the day's bazaar tour. \"Think about it, Lakshmi... when I leave tonight what am I most likely to do at the hotel? Take a shower! Alone, which is no particular fun! And when I leave here, what will you do? The same. If two people are both going to shower, and they like one another well, then why not share a single shower? Be good citizens and use only half the total water. Not to mention getting one's back and other body-parts properly cleaned by the partner!\" \n\nStaring at her chopping, she replied \"Mister Philip, things are moving entirely too fast for my taste. The answer is NO. Not that I do not find the idea most attractive.\" She sighed and then giggled: \"Attractive and somehow appropriate, because Papa had our present large and very well appointed bath installed after Mama died and space became available. A wonderful feature of this house.\" \n\nPhilip reiterated his arguments whilst Lakshmi continued chopping, and continued refusing. Then he quieted down and concentrated on veggie preparation. \n\nTen minutes after the original suggestion, Lakshmi stabbed her knife firmly into the wooden chopping block, turned to face Philip. \"Is everything in the world 'logical' to you? Logical and apparently simple as well? I find your approach both interesting and disquieting! You and I are immersed in a complex situation, but you do not see it that way, so I can tell.\" \n\nHe took her by the shoulders, planted a long, deep kiss, which generated no objection whatever. \n\nEventually he broke the kiss and said \"Most of the genuinely important things in life are complex only because we make them so. They are, really, simple questions at heart. For example, however complex you and Papa Deva and I choose to make the situation, the actual questions are quite simple -- namely, do we love one another? Will you marry me? And the answers are equally simple: to both: 'YES'!\" \n\nLakshmi initiated another kiss, then moved Philip's hands to cup her breasts: the sensations made her pant. \"Mister Philip, only the gods know how much experience you have had in these sorts of maneuvers... and I do not ask for or wish to know that information. Certainly, you have a huge advantage over me -- for instance, I had no idea my breasts, especially the nipples, were this sensitive... news to me! Very GOOD news, too.\" \n\nPhilip replied, \"But you didn't NEED to know, until just now -- and I knew, and I showed you! A good exhibition of teamwork.\" \n\n\"Yes, you did, and because you taught me, now I know... and it is a very dangerous form of knowledge indeed! Very conducive to wanting more -- much more! And I know that you know this quite well, I am certain!\" \n\nShe paused to revel in his touches, finally said into his chest \"I am breaking traditional rules left and right, and with my Papa's connivance merely suspected, certainly not a proven fact. As I am now over 21, I am supposedly in charge of my own destiny, although that is a bit laughable for a woman in this country today. Nevertheless, because I wish to, I have decided that I will take a shower with you!\" \n\nPhilip expressed his delight. \n\nLakshmi shrugged: \"But truly. Philip, things are proceeding so fast that my head is spinning. You must know now that I have never ever seen a naked man. Except in various artistic formats, for educational purposes only.\" She paused, sighed, and said, \"And know also that it is with you that I should love to have my first such experience. My choice again. Meanwhile, I will set some rules. Is that okay? You must promise me to abide by the rules... please!\" \n\n\"Very well... I do promise! What are they to be?\" \n\n\"First, you will not stay the night here -- before midnight you must go back to your hotel, vanishing like in the fable Cinderella!\" Then, smiling, \"Who can say what might happen on the other three nights we will have available? Promise me that whatever activities this showering may require, you will not play on my inexperience.\" \n\nPhilip nodded, kissed her quickly and said \"I will not, tonight or ever, do anything without asking and receiving your permission, Lady Lakshmi! Never!\" \n\nLakshmi thought and then said \"No, Philip, that is not quite the promise I need. We should be quite careful to phrase things correctly, seeking crystal clarity if not actual perfection. I already know for a certainty that I will want more than we have yet done, and I am certain to ask you for it... so your promise must be stronger than merely requiring my permission, which I would undoubtedly give. I ask you NOT to make any further suggestions on your own, and also to refuse me if I ask for expansions of our activities. Promise that we will do nothing tonight that goes beyond what we have already done to date!\" ",
        "Then, giggling, \"If things go well, who knows! You are the businessman - any contract can be renegotiated, its terms modified... is that not so?\" \n\nPhilip replied \"I can readily agree to all of that. Nothing beyond our activities to now. What else?\" \n\nShe smiled at him \"I think nothing more -- that is a sufficiency of constraints, even for me!\" \n\nLakshmi took him by the hand -- using her left - and led him to the shower. Standing there they looked at one another for a long moment, then she giggled and said \"Mister Philip, I literally have no idea how to begin. Please - on this problem, make a suggestion! And quickly, too.\" \n\nHe solved the problem nicely: \"We undress one another, alternating taking one item off the other person. I begin with this blouse-like thing.\" \n\nIn moments they were both nude to the waist -- then footwear, and outer lower garments. Lakshmi's blush extended from the roots of her magnificent hair to the tips of her breasts. Finally, after paying proper attention to her lips and breasts and underarms and the nape of her neck, Philip knelt before her and started to roll down her gossamer panties. When he realized that her mons was perfectly shaved, his face broke into an expression of delight that pleased Lakshmi profoundly. \"My daydream come true, Lakshmi -- you have the most beautiful yoni I have ever seen or could imagine. Especially the fact you are shaved -- such a beautiful body, and completely open to my view instead of covered up with nature's useless fur!\" \n\nShe was pleased but puzzled, said \"Certainly I am shaved! Ever since I grew hair down there, I have done precisely as every written source says -- namely, that any woman who wants to be sexually attractive or to aspire to sophistication will never allow a single hair on her body below the nape of her neck. I am happy you like it!\" \n\nHe grinned, leaned far down to kiss her mons: she shivered violently. Then he said \"Naked yoni is one of my favorite daydreams and erotic fantasies -- you are PERFECT! Furthermore, Lakshmi, I would join you in this -- I have never shaved my lingam and its surround, but would love to have you do so for me. That might make a good way of exploring my body, don't you agree? And once we are married, I will become your permanent barber -- that will be one of my basic duties!\" \n\nWhen his erect lingam finally sprang into view, she was again deeply embarrassed, but recovered with remarkable ease -- and she wasn't fully convinced that she ought to provide the proposed shave. At present, for the moment, she found the tangled golden-red mat quite attractive. The hesitancy vanished when he pointed out that it would be nice to be in parallel, and besides, if she really wished he could always let it grow again. It could be her choice -- reversible any time. \n\nThe tub was sunken, with a nearly two-foot-wide flat tiled rim -- and heated from below, something Philip had never seen. Considerable time, and large quantities of soap, were used up in mutually delightful washings, rinses, and general exploratory touching with fingers and other body-parts. \n\nThe climax of activity came half an hour into the official showering period, when Philip's fingers finally slid across her clitoris for the first time. She shivered violently, clung to him, did a ballet plie to give him access. As he touched her he whispered \"Shall I give you another orgasm, like the one you had sitting beside me -- only much, much better?\" \n\nShe replied red-faced and shyly, \"That would seem to be an extension of activities, and forbidden under the current rules.\" \n\n\"Precision in both language and acts, my lady -- if I do give you an orgasm or five right here and now, that is NOT at expansion of activities -- you have already had at least two such events today, adding another extends nothing -- after all it is the result that we are counting, not the details of the process by which one attains the result!\" \n\nLakshmi could readily see arguments to the contrary, but she opted not to advance them. Philip turned off the shower, then picked her up bodily, impressing her with his animal strength. He sat her down on the wide tile shelf, and encountered no protests whatever as he laid her back, knelt before her, and opened her legs like one of the books she was so fond of. \n\nThe time from first touch of lips and tongue to her first full-blown orgasm of the evening was well under a minute. There were, in all, at least five separate peaks before she could no longer breathe and called a momentary halt, signaled by the universal woman's gesture meaning \"a bit of a respite, please... but do NOT leave!\"-- namely, her hands gripping his ears and pulling him away, whilst she muttered \"Stop for a moment please!\" \n\nWhen she had recovered to where she could speak, she managed a little grin and said \"I'm not certain, Philip, that this experience should not be considered an expansion. But I will choose NOT to so classify it. Purely in the interests of future research!\" \n\nThen, two or three minutes into a powerful full-body hug, she asked quietly \"If the topic is orgasms, and if my recent experience did not extend beyond acceptable boundaries, what then might I, Lakshmi, do for Sir Philip, in that line? Have you any suggestions? And I believe that this request again falls within our boundaries.\" \n\nPhilip accepted the reasoning, sat himself wide-legged on the tile, stood her between his knees, put his lingam into her hands, gave brief instructions. \n\nShe was a very quick study -- and instantly enthusiastic about the entire process. Shortly she found herself awed by the gouts of pearly semen that erupted from him under her ministrations -- and recognized his whole-body spasms, one per fountain-jet, as the perfect parallel to her own wracking convulsions of minutes before. \n\nWhen Philip, in his turn, could again speak, she waggled his subsiding erection and said \"This is truly a wonderful device -- I look forward to many many lessons, Philip. But goodness, such a mess we have made -- I do believe we need yet another brief shower. THEN we must finish preparing dinner -- and eating it, too. Stand just here, let me take care of thee first!\" \n\nAt Philip's suggestion, they didn't dress -- rather, finished preparing dinner, and then ate it, in the nude. His free and casual-yet-intense sexuality, and the ease with which she fell into step, simply re-wrote all her thoughts about the whole mysterious business. Emotions aside, playing with bodies -- examining, testing, experimenting -- was simply enormous FUN -- with occasional explosive rewards! \n\nAs the witching hour approached, they finally did get Philip dressed. \"May I offer a suggestion for tomorrow?\" she asked. \n\nHe nodded happily -- whatever she might find worthwhile! \n\n\"Philip, I need very much to get to know you better, in so many ways. I wish to know about yourself, your innermost feelings and needs and desires. About your family, your childhood, your career, your education, your travel. In short, I want a course, full-immersion, in what we might call \"Philip -- the man and his history\". Or something less pompous, perhaps? I should like to simply sit with you and talk about such things -- all day if possible. I doubt either of us will get bored! Are you amenable?\" \n\nHe certainly was, enthusiastically so, but only if she agreed to turn-about: he needed the same information about her. \n\nShe agreed: \"I know a delightful spot down near the river, quite secluded, a favorite hide-away from my own childhood. We could go there and stay the day, talking. Food and such are available nearby. We could have both breakfast and lunch beside the river.\" \n\nHe thought it a fine idea. Then, as he reluctantly prepared to depart, she said \"I'll arrive at your hotel at 0730 precisely, in a tuk-tuk. There are always plenty of them on our street even this late, and at 0700 also. You will have no problem getting one for your return to the hotel. And Philip...\" \n\nHe looked at her questioningly. \n\n\"After tonight, everything about tomorrow night, and the other nights that Papa will be gone -- all is up for negotiation, as we agreed. All negotiable except one thing upon which I have decided.\" \n\n\"And that would be...?\" \n\n\"Tomorrow night we will spend here, in my own bed, not in some strange rental property. If I am to have memories, I would have them be made here. Is that okay?\" \n\nHe realized that she had just agreed to sleep with him tomorrow night for certain, most probably for all three of the nights still available! That was so thoroughly \"OK\" that Philip simply stared at her for a moment, then kissed her again and muttered \"Oh, I suppose so. You are right -- much better here than anywhere else. You are a delight!\" \n\nShe laughed at his expression, then shooed him out the door. \n\nNeither of them got a very good night's sleep that night. \n\nAs planned, she picked him up at his hotel at 07:30, an amazingly early hour for her to be functioning -- if she decided to actually marry this crazy man, they would have to agree on a more reasonable time for addressing the new day! She was dressed in an expensive sari of nicely understated elegance. \n\nHe reacted as he should -- his face lit up, and he kissed her solidly right there in public, smiled at her being flustered. But then, she asked herself as they boarded the tuk-tuk, what else had she expected from her crazy American? She was certainly getting used to his attentions -- and rapidly! \n\nAs they settled into the seat, Philip suggested a small change of plans -- he wanted to go meet Vivek at the jewelry shop. His business would not take long, thereafter they would head for her special spot on the riverbank and spend the day there as planned. She was a bit mystified, particularly when he declined to provide an explanation, just said that everything would be cleared up shortly. And grinned that devastating grin at her from almost too close to bear. \n\nThey arrived at Vivek's shop at 07:45 -- he was the only open merchant in view. \n\nBusiness commenced: greetings; folding chairs; the inevitable fresh tea, made in some mysterious place hidden from view. \n\nVivek waited, wondering what results the couple's \"required thinking\" had yielded. \n\nPhilip opened the occasion's actual business: \"Vivek, I admire your business sense. Bravo. I would do some interesting business with you. Shall I outline it?\" \n\nVivek nodded silently, with well-repressed eagerness, but before Philip could begin they were interrupted by a young man in a crudely-built cart, pushing himself along by hand-power. Otherwise rather good-looking, he had no legs -- both gone at the hips. \n\nThe man stopped, greeted Vivek cheerfully, nodded to Lakshmi and Philip. Vivek excused himself, disappeared momentarily: while he was gone, the cripple introduced himself as Raam, using what was apparently his entire English vocabulary of under ten words. Philip replied in Hindi, which startled Raam, made him grin. \n\nBefore any more chatter, Vivek returned with a tin lunchbox, which he slid into a notch on the cart, clearly a custom fit. The crippled man thanked him, nodded again to Vivek's guests, and departed, wheeling himself slowly along, avoiding pavement bad spots. \n\nPhilip looked inquiringly at Vivek, who said \"I provide him breakfast every day -- now, for over three years. He is not a beggar, Sir, Madam, he is very intelligent, with some serious education, quite a worthy man irrespective of his caste which is in fact exceedingly low, a man unfortunately badly damaged by an unexpected encounter with our national railroad system.\" \n\nHe continued: \"Daily, he does his best to sweep clean our street here, but his earnings cannot support his body's needs. He is proud and will not take money, but food is always acceptable. It takes me no more time or fuel to cook breakfast for two than for one -- rice and vegetables. This has become my duty now -- if ever I leave here I will have to first find someone to undertake the duty in my place.\" \n\nHe grinned: \"Not a problem, however, many people would do likewise.\" \n\nThen, \"Your proposition, Sir Philip?\" He produced the bangle. \"Nobody tried to jump the queue. It is still available. No magical price increases have occurred overnight\" \n\n\"I will buy it.\" \n\nVivek nodded, greatly pleased. \n\nLakshmi started, eyes gone round. Despite all of yesterday's activities, this purchase was a total surprise. \n\n\"However, Mister Vivek, you must modify it for us. Cut it and make from it two rings.\" He looked at Lakshmi, who was still silent, rather in shock. He laughed gently. \n\n\"Sir,\" said Vivek, \"...there is far more gold than is needed for two good rings, perhaps an extra 100 percent or even more. It would be better for you to have the proper amount of gold made up, which is easily done. That way you waste no money.\" \n\n\"That would take far longer than we choose to wait,\" replied Philip. \"If you cut it, can you produce two rings from the metal? By end of business today?\" \n\nVivek shrugged, said \"As Sir wishes. Of course I can do that -- such a job is trivial but exacting, requiring at most one hour per ring.\" \n\nPhilip smiled, said \"So I hoped and suspected. Here is where ring number one goes.\" \n\nHe took Lakshmi's left hand, held it out for Vivek to inspect. Lakshmi roused from her inertia to watch Vivek's face. He took the hand, showing interest but no upset at either sight or touch. \n\n\"An interesting arrangement. A very special finger, Madam. Unusual.\" Then to Philip, \"The first ring to go on Madam's special finger, Sir?\" \n\n\"Correct, Vivek. Is there any problem with that?\" \n\n\"None whatsoever, Sir, Madam. Just a bit more gold than usual, and some special shaping easily accomplished. Not complex. Allow me to make the needed measurements.\" \n\nHe was done in seconds, turned to a clean sheet on his tablet, did a quick sketch. \"Like so, Madam? Will this do?\" \n\nLakshmi managed to say \"Yes. That would be beautiful indeed.\" She was getting deeper and deeper, she realized, and seemed to be unable to fight the quicksand of Philip's attentions and intentions. \n\nPerhaps she should simply stop even a pretense of fighting? \n\nDeep inside her, a voice said that that was the proper course of action. After all, if she married him this instant, they would begin with more face-time and personal knowledge of one another than did most Indian couples in their arranged marriages - and importantly, it would be by her own choice. \n\n\"And ring number two, Sir?\" \n\nPhilip held out his own left hand, fingers spread but with 3+4 touching full length. A perfect imitation of Lakshmi's configuration. Lakshmi stared, and once again blushed furiously, could not manage to speak. \n\nVivek laughed aloud, delighted. \"A truly wonderful sentiment and statement, Sir! I am proud to be the one to put such a worthy thought into solid metal for you both.\" \n\nThen, to Lakshmi, \"Madam, as drawn, this ring will not inconvenience you -- certainly no more than does this special finger itself.\" \n\nLakshmi shook herself, thought for a moment, then said \"Mister Vivek, I have all my life worried and complained, often bitterly, about the burden of this slightly misshapen hand. Now I realize that there is in fact a positive side to it -- it has kept me from marriage up to now, which is certainly my good fortune, not bad!\" \n\nBeside her, Philip said, softly, \"Amen and hear, hear!\" \n\nLakshmi smiled at him, then continued: \"This morning's encounter with your sweeper friend has shown me this much more clearly. Never again a complaint from me about the hand! And just think professionally, Mister Vivek -- this odd finger will enable me to wear even more jewelry than would an ordinary hand. I can spend even more of Sir Philip's money for him!\" \n\nVivek smiled widely at that, and asked \"The excess gold, Mister Philip, what shall we do with it? There will be a goodly amount left over, well over an ounce. Shall I just buy it back at today's prices? That would save you money, and make for my employer a modest profit without any burden whatever.\" \n\n\"No,\" said Philip: \"...hold onto it for me. I may have plans for it. At any rate we can discuss the future of the excess when we return later today -- will four PM give you adequate work-time?\" \n\n\"Fine, Sir -- I will begin immediately.\" \n\nIt was just short of 09:00 when they left Vivek to his work, and headed to the taxi-stand to go to Lakshmi's hidden spot. Minutes later, Lakshmi told the driver where to stop, paid the fare, the taxi buzzed away. \n\nShe then pointed towards the river perhaps a hundred meters off, the bank covered in tall, thick greenery, \"My favorite place to hide and be alone when I was a youngster!\" she said, almost skipping, dragging him with her. \"My Papa brought me here my first visit -- he, too, likes the place. It is very private, few seem to know about it. A good table and bench. We can talk there for as long as we wish, and be both private and reasonably comfortable. A perfect place for our very long day of talking. Which I think will pass very quickly indeed.\" \n\nPart-way down the path there stood a small, slender young woman of indeterminate age. She was bouncing a red ball, looking bored and occasionally glancing about as if perhaps waiting for someone or something. Her presence gave Lakshmi an idea. \n\nThe woman stepped respectfully out of their path, was clearly startled when they stopped and the Lady spoke to her somewhat formally: \n\n\"Hello, Missy... thee art not in school today I take it?\" \n\nShe gave Lakshmi a flat stare laced with curiosity, then was overtaken by politeness again. \"Indeed I am not, Great Lady. Neither I nor my family can afford such a thing.\" Then she volunteered, wistfully, \"It is unfortunate, for I do like learning! I would know everything about everything, if only I could!\" \n\nLakshmi studied her closely. Not scrawny, but could use more food. Quite clean, body and clothing both. Plain of face -- having a dense monobrow with no midline relief from its hairiness did not help. But under the plainness lurked a tinge of possible -but hidden- real attractiveness, and a great deal of unhidden intelligence. In fact, a more than pleasant face -- intelligent, friendly, open-seeming although slightly wary. Clearly this situation was beyond her experience, new territory. \n\nLakshmi continued to address her formally: \"Missy, we would purchase thy time for our needs, as a guard, nothing more. If thou art free throughout this whole day until evening. What is thy name?\" \n\nThe woman simply goggled, finally replied \"To my friends I am always 'Geeta', Great Lady.\" Then, looking puzzled, \"But surely Madam and Sir both understand my caste? And my profession also?\" \n\n\"Of course we know. Thee art an untouchable and also a prostitute. Those things are obvious and we do not care. They do not need stating. The services we need involve neither thy caste nor thy profession. Art thou free for such hire? Would thou easily earn a few extra rupees for the loss of a bit of ball-bouncing time? The work is neither heavy or difficult, nor tiring\" \n\nGeeta nodded her agreement and availability, then volunteered, \"Madam, Sir, my regular work is not usually tiring, just mostly boring. Except when I get a good, talkative customer. I would welcome the chance to earn money some other way. For such work as you describe, especially during daytime, I am most assuredly available.\" \n\nThen, curious and surprised at being so courteously addressed by such an obviously high-caste person, she asked, \"Why is it, Great Lady, that my caste is of no concern to thee and apparently neither to thy foreign gentleman?\" \n\nNot having yet tumbled to Philip's knowledge of Hindi, Geeta continued, grinning impishly, \"He is obviously American, My Lady... and he is very handsome, Madam. Is he also rich and a fine lover? That would be a magical combination.\" ",
        "Lakshmi laughed, knowing that Philip had understood the comments: \"Yes indeed, he is handsome, and I suppose by our standards he is rich. He is young but talented, from America. He is all of these things, together, simultaneously -- businessman, scientist, university professor, and advocate. I find this collection of talents quite amazing, myself. Now, will I tell thee a true fact about caste, Miss Geeta? A secret, something that may surprise you?\" \n\nGeeta did not miss the lack of any mention of \"lover\" in the Lady's response -- and found that intriguing. Could this Great Lady have no experience, be still virgin? She doubted it, but the world was full of strangeness. To the immediate question, she responded \"Please, Great Lady. I would know this secret.\" \n\n\"Well, Geeta, we are all three of us from within one caste, together. All of us untouchables, just of different professions within the larger caste. Thee and me, we are sisters of a sort.\" \n\nGeeta was rendered speechless for several seconds: finally, \"Oh NO Great Lady, that is manifestly impossible! He must be high Brahmin and so must thee. No other possibility seems reasonable!\" \n\nLakshmi looked into Geeta's eyes: Geeta could see the truth there. Electrifying. The impossible made real! Lakshmi said softly, \"Missy Geeta, thee and I are sisters, make no mistake. And between myself and Mister Philip things stand thus -- we are both of us, myself and this beautiful, talented man - from families of dung-handlers. Mine here, his in America, where there are no castes.\" \n\nShe paused to let this sink in as best it might, then proceeded: \"And the gentleman has proposed to marry me! But if I do so, it will be MY decision, not my family's.\" \n\nGeeta stared, eyes flicking back and forth between her two prospective new employers, and finally she blurted out excitedly \"And of course thee has accepted! Indeed, Madam, this is all very like some fantastic cinema!\" \n\n\"No, Missy, not yet. I have known him for less than 24 hours. This is for both him and me a very important decision, thee must agree. We need privacy for a very long talk. Hence the need for your services as guard.\" \n\nGeeta stepped far outside her behavioral boundaries, dared to reach out and shake Lakshmi gently by the arm. Almost desperately she said \"Madam, if I am truly thy Sister, then I may ask this without being thought impolite - has something gone loose or missing inside your head? You MUST say yes IMMEDIATELY to such a request from such a man! Not to do so would seem likely to insult the gods who have arranged this event!\" \n\n\"Geeta, both Mister Philip and I refuse to recognize caste -- I do so by my family's choice, and he because in his home society caste does not exist. There, all people rise or fall based not on birth and karma but on personal efforts. Hard work. Not karma: the concept of karma is completely alien to his society -- they find it extremely distasteful.\" \n\n\"My own family agrees with his position. For instance, I am where I am today, with this man, because of my hard work at school, and harder work afterwards, learning. That learning made it possible for me to meet and interest him. I have broken free of my karma, and can make of that freedom whatever I choose. This can be done, Geeta! At any rate, it is my decision, I am in charge of my own fate, not ruled by some silly mythical gods or some great impersonal wheel of fortune. So- my choice! If I say 'yes' then I will go permanently to America and lose my family here, except perhaps for rare visits. But who knows what interesting, even wonderful, things I might do over there? Nonetheless, it is not an easy decision.\" \n\nGeeta, considerably mollified by the honor of being included in such people's affairs, said firmly \"Not difficult for one such as ME, Great Lady!\" \n\nLakshmi ignored the comment. \"So, Miss Geeta, will thee be our guard for the day, at a good price? Pray tell us, what might thee earn in thy profession on a good day, but not the very best?\" \n\n\"Madam, that would depend on whether I get lucky and service a wealthy foreigner, perhaps even two of them. They usually tip very well: at my profession I am considered quite good. With one foreigner included, perhaps fifteen, even twenty rupees.\" \n\nThen she added proudly, \"A not inconsiderable income, actually.\" \n\nAppalled at the tiny sum -- about one dollar and a half - Lakshmi reached into her purse and extracted a 50-R note. Geeta's eyes widened -- she had never held such a bit of paper herself, although she had seen, once only, a one-hundred. Rumors existed of even larger bills but none of her circle claimed to have ever seen such a thing. \n\nHer eyes fastened on Lakshmi's eyes, not the money. That impressed Philip, who continued watching silently. Lakshmi asked her, \"For today, from now to dusk, can you be our guard, here on the path? Mister Philip and I intend to spend the entire day here, talking together, best without interruptions by passers-by.\" \n\n\"I will thereafter decide about his proposal. If for just this single day we cannot get along, or if we find that we either argue or bore one another to death, then what hope is there for happiness together over say fifty years? If any of those things happen, then I will say NO! But I do not expect such a result.\" \n\nThen, firmly, \"But in any case, it will be MY choice, for as I told you already, I will not marry by arrangement with some man I never see before the wedding. Never that. Will thee be our guard?\" \n\n\"Certainly Madam, I can and will gladly stand guard from now to dusk.\" She eyed the 50, still in Lakshmi's hand. \"But will it be for a fixed price, or for some lesser number with the possibility of a tip after I finish?\" \n\nLakshmi shrugged. \"Price and tip, Geeta, is there truly a difference?\" \n\nGeeta gave Lakshmi another brief, flat stare, spoke slowly, as if to a slightly retarded child, with an edge of barely-concealed amusement at Lakshmi's ignorance. \"Entirely different things, Great Lady! Price is the cost of my services, and is always negotiated and paid before services commence. Tip is an extra gift, given after completing the services, if the customer feels he got special value for his investment. I am very good and therefore get a good price, and also very good tips.\" \n\n\"In fact, Madam, I earn more than either of my older sisters. Not so much as does my Mother, however -- although getting old now, she is indeed a genius at obtaining both price and tips.\" \n\nLakshmi muttered \"Oh. I understand now -- and I thank thee. Learning new things is a blessing, always.\" \n\nGeeta grinned -- she was having fun discombobulating her very own Great Lady. Why not continue doing so? A little showing-off seemed apropos. \n\n\"Of course, Madam, Sir, this guarding of the path will be an easy task, I think. After all, I have available the entire number-one person caste to help me - those persons are I, me, myself, we, and us. Plenty of help if needed, and no extra charge.\" She actually giggled, but quickly straightened her face. \n\nLakshmi and Philip looked at one another in astonishment. Grammar rules used as mild jokes, from this child? And given her station in life?! How in the world? \"Geeta, how is it that thee knows of person and number without going to school?\" asked Lakshmi. \n\nGeeta shrugged. \"I like learning, and often have conversations with my customers, if there is paid time left over, which happens often. That way I learn all sorts of interesting things. It relieves the boredom, too.\" \n\nShe grinned, rattled off \"Person-caste number one is as I just told you. Person caste number two is simply 'you'. Caste three is he, she, it, and they. He for male, she for female, it for no-sex and they for all plurals. This I learned from a customer, an Indian gentleman, a man of business who likes small, young women such as myself. He has been a steady customer for over a year now, and has taught me many things. He is important to me because any professional woman needs several such long-term customers if she is ever to avoid the mad rush of being totally available to the masses.\" \n\nShe giggled again, her face lighting up extraordinarily nicely: \"We talked a great deal that particular day. The poor man could manage only one time although he paid for more. Perhaps he slept poorly the night before?!\" \n\nGeeta abruptly turned her attention to Philip. As she did so, she said to Lakshmi, \"I would tell your American something else of numbers. Will thee translate for me?\" \n\nLakshmi shrugged, replied \"Speak directly to him, Missy -- he is far more fluent in Hindi than you might believe -- a most unusual thing, that!\" \n\nGeeta hadn't had an inkling of such an ability: she looked back and forth at the two, settled her gaze on Philip, shrugged in disbelief, and proceeded. \"For thee, American Sir, I know the set of counting numbers in English, as I learned them from another customer.\" \n\nShe proceeded to proudly and correctly rattle them off, one through ten. Then she added 'hundred' and 'thousand' just for good measure. She finished wistfully, \"Numbers are just like magic, so interesting. I would like very much to know more about them, but as I told you I cannot afford to go to school. At least, not just now. Perhaps someday -- but that is most unlikely in this world. One must not hold one's breath waiting for me to become a schoolgirl so that I might learn to read!\" \n\nPhilip was totally confounded: 'set' and 'counting numbers' were technical terms from mathematics, and illiterate little Geeta had just used them both correctly. Perhaps, he thought, it's just a fluke, an accident of vocabulary. He nodded, cleared his throat and spoke in his reasonable Hindi, surprising Geeta immensely at his command of the tongue: \"Very good, Geeta. Tell me something - thee just used the words 'counting numbers'. That implies that there are other kinds of numbers -- are there? Do thee know of others?\" \n\nNow it was his turn to receive Geeta's brief, flat 'talking now to the idiot-child' stare. Disconcerting. She nodded, said \"Certainly there are other kinds, American Sir. For instance the ordinals: first second third fourth fifth and so on forever. Very different things the two kinds, each kind being a set, namely one two three and first second third. Each set is unendingly large. And the two sets have completely different uses. If I ask you \"how many?\" you may correctly reply \"ONE\" but not \"FIRST\". And so on. Numbers are fascinating things.\" \n\n\"Indeed they are\" said Philip. \"Please, Geeta, call me by my name which is Philip, use of first names among friends is the usual form in my country -- we are very informal and I prefer it so even here in India. And I would count you as 'friend' even on this short acquaintance. If that pleases you.\" \n\nGeeta was dumbstruck for some seconds, finally managed to respond: \"Very well, Mister Philip. You honor me -- at least within my own culture. Thank you!\" \n\nPhilip was deeply surprised at the ease, grace, and aplomb with which Geeta had handled an immense social gulf -- an experience for which she clearly had no precedent whatever. Very impressive. She was every bit as bright about this as about her numbers and grammar. He cleared his throat, asked \"So, Geeta, whence this knowledge of numbers and sets and suchlike?\" \n\n\"All this about numbers I learned from another customer, just a few weeks ago. He was, like yourself, an American. I am hired by a surprising number of your countrymen, Mister Philip -- a good thing, for they are friendly and clean and pay very well -- the ideal customer! He was a somewhat older man, the skin of his arms and legs deeply wrinkled. His hair was entirely gray. But still he was strong, and had a beautiful lingam. He had all of his hair, and his own teeth too, quite white.\" She sighed, apparently reminiscing. \"He smelled delicious! Most old men smell like dust wrapped in ancient moldy newspaper, but not he. It was his own odor, not something applied like perfume.\" \n\nShe sighed deeply: \"He was an old man but he performed like a much younger one. Much! He claimed it was my fault, too, a fine compliment. He was strong and long-lasting, quite a powerful love-maker, and also a very nice person, concerned with my welfare as much as with his own needs.\" \n\n\"Unusual -- so many unusual things about him! For example, I stayed the whole night with him, which is rare -- most customers are in a hurry to leave or be rid of me once they finish, but not he, just the opposite. And because staying together a whole night precludes other customers, it is expensive.\" \n\n\"After his first time for sex, we slept like spoons, very comfortably. Twice in the night he woke needing more sex: the second wakening, when he was done with his own needs, he insisted on putting his mouth on my yoni and most unexpectedly he gave me several sharp orgasms -- bang-bang-bang! That never happens. He was very talented, not in any way clumsy or hurried.\" \n\n\"He taught me the numbers I have just recited. The counting numbers are very useful because I often encounter customers who speak only English, or else at least speak no Hindi but can speak reasonably well in English.\" \n\nShe laughed: \"I asked him for the big numbers just in case I am ever very lucky -- if one gets a tip so large, it would be nice to be able to speak about it accurately. Alas, such an event is unlikely. But I will be prepared, should the gods throw something my way.\" \n\nShe stopped, awaiting a response to her soliloquy. Philip reflected momentarily on what he'd already learned about this young lady. Her profession didn't bother him at all -- the waste of her MIND was a different thing entirely. She obviously understood the concept of 'infinity' -- she knew and used correctly some rather advanced mathematical terminology, and she made jokes about grammar -- and had phenomenal social adroitness. The child had unbelievable innate depth! \n\nLakshmi had listened through their discussion, fully comprehending but distracted by other concerns. \"Good...\" she said into the pause. \"Mathematics aside, we must do our business. This will be a firm price arrangement. Take this fifty now, the price is 100, the other fifty to be paid when thee finish, if we have not been interrupted by outsiders. And there is always the possibility of a tip, as thee described. Is that fair?\" \n\n\"Much more than fair, Great Lady -- in my business, we always try to talk the customer into a higher price, but thee are being most generous, we both know that, and it would be impolite of me to try. This is more than adequate!\" \n\nThen, with another burst of humor, \"After all, Madam, Sir, such guarding is not my normal business, so how am I to know what the rates should be? If both buyer and seller are happy, then the price was correct. So it seems here.\" \n\n\"I'm sure you know the table and bench down there at the riverside, at the path's end?\" asked Lakshmi, reverting to the informal mode's 'you'. \n\n\"Certainly, Madam, I know it. A remarkably private and quiet place, so well hidden! It is one of my own favorites.\" \n\n\"This is the only path to it, correct?\" Geeta nodded. Lakshmi went on - \"You are to prevent all interruptions by visitors of any type. Can you whistle?\" \n\nGeeta stuck two fingers into her mouth and emitted a locomotive's shriek, grinned up at her new employer. \n\nLakshmi said \"Lovely! Your whistle will mean an intruder whom you have been unable to deter.\" \n\nGeeta said, almost grimly, \"I can deter ANYONE, Madam. No need to worry. May I suggest that if you need something, you or your gentleman whistle likewise and I will come running.\" \n\nLakshmi thought for a moment, said \"We will go to the bench now. Here are an extra 20 rupees, for food. Breakfast. For all three of us. Do you know a nearby vendor who is good and clean?\" \n\n\"Indeed I do, a distant relative. Most surprisingly clean are both he and his food. The food is quite good. What dishes would Sir and Madam wish to have?\" \n\nLakshmi shrugged: \"You may choose. Nothing sweet. Do not be afraid of spice, the gentleman is experienced with Indian foods. Do not bring too much -- we can always get more for lunch. Do be sure to bring with the food two very large masala chai, extra hot and double sweet. Eat enough yourself to kill your hunger dead, but do not overdo things! A burst belly is no good solution to a bit of hunger. Go now, bring the food to us at the bench, then assume your duties!\" \n\nBreakfast and extended conversation, no interruptions. \n\nLate morning, and in the streamside bower, conversation finally stalled -- but not due to any flagging of interest, or a lack of topics. Rather, simple horniness had raised its head. For some minutes, Lakshmi had been squirming on the bench beside Mister Philip, squirming delightedly because she was sitting on his hand, which hand was taking considerable liberties with those bits of her anatomy it could contact through the multiple layers of sari. \n\nDespite her preoccupation, she did ask, being more cute than serious, \"Will you allow me, sometime soon, to give you the same sort of pleasure you gave me? By mouth, I mean, not by hand as we did in the shower? We have not yet done so and I would like to try. That is, IF you are interested!? Assuming interest, soon would be good, sooner would be even better!\" \n\nPhilip kissed her and said, eyes twinkling, \"There is no time like the present. Shall we? I dare you to do so -- I'm certainly ready, willing, and able!\" \n\nThis was a bit more than she had planned on -- her question had been more in the \"theoretical-someday\" vein. She went red in the face, sputtered \"Here? Now? Can you possibly be serious?\" \n\n\"This place is perfectly isolated, we are completely invisible to the world, and we have our private guard blocking the only path. Dare you a second time!\" \n\nLakshmi giggled, stared about, then said \"I will accept the dare, Mister Philip.\" She snorted and continued sarcastically -- \"Me, the perfect Indian virgin maiden. What an exercise in hypocrisy!\" \n\nShe reached for his crotch, undid the zipper, tried to get her hand inside, and realized that the multi-layered intricacies of western male clothing were well beyond her. Philip grinned, slouched deeply in the bench with his knees spread wide, his head thrown backwards. He handed her his light jacket, said \"You should kneel on this, between my legs, mustn't get dirt or grass-stains on that beautiful sari!\" \n\nShe knelt, having only a vague idea of how to do this new thing, about which she knew only the barest outline gleaned from clandestine books shared among girls at school. She appealed for help: he assisted her in freeing up his rapidly-growing Snake. In mere seconds it stood up proudly, completely ready for action, protruding through the unzipped fly of his pants after negotiating the layered switchbacks of the primary fly in his Jockey shorts. \n\nMeanwhile, up on the path some 75 meters away, Geeta felt as if she was not only \"her\" couple's protection from interruptions, but likewise responsible for their comfort. She wondered what possessed both Mister Philip and the Great Lady to treat a person such as herself with such informality and apparent respect? Geeta found herself wanting to do something in return. She recalled just how hard the wooden bench was -- she had sat and even slept on it many times. \n\nBrainstorm -- she snagged a passing un-occupied boy whom she knew, and quickly arranged with him a subcontract to take over her duties for a short while, one rupee now, two more when finished. \n\nHe agreed, she told him the signals. It was less than 200 metres to a small shop where, with some bargaining, she rented by the hour two plain but solid cushions. \n\nGeetas bare feet made not the slightest sound on the dirt path, and she said nothing. Around a corner and into the foliage she went. She emerged less than three metres from the bench, just as Lakshmi managed to release Philip's Snake from its cage. "
    ],
    "authorname": "XXscribbler",
    "tags": [
        "caste",
        "jewelry",
        "sudden love",
        "prodigy",
        "sexual awakening"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/doing-business-in-india"
}