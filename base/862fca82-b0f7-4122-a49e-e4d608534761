{
    "title": "First Time Nude Sauna Pt. 11",
    "pages": [
        "This is the story of our experiences in saunas and spas in Switzerland and Germany. It's a multi-part story based on true events. If you're looking for quick and hard sex look elsewhere!\n\n*****\n\nFriday finally arrived. Even though it was only a few days since we had agreed to visit the spa with our new friends Jessica and Harry it had felt much longer. Jia and I were both looking forward to it as was the first time we'd be attending the special event which meant nudity throughout the entire spa (not just the sauna area). \n\nAt around 5pm we left our home and picked them up before driving to the spa. During the drive Jia explained about the special event and they were very excited to hear the news. When we arrived at the spa we decided to head directly to the nude section as we would enjoy the pools after 8pm when nudity was permitted throughout. \n\nIt wasn't very crowded so we started off in the lower temperature saunas with regular breaks on the heated stone loungers. Jessica and Harry liked the facilities in this sauna and we had a good time together. As it got nearer to 8pm more people began to arrive. It was a different demographic to our previous visits with more young couples and virtually no singles. \n\nAt 8pm there was an announcement that the entire spa was now a nude area and no swimwear was permitted. It was all rather romantic with candles and other mood lighting. We also noticed that people were not bothering to wrap in towels when leaving the saunas and just remained naked. This made sense as the towels would just get soaked by salt water when leaving the pools.\n\nWe left the sauna area and went swimming in the outdoor pool first. The atmosphere of the place had changed dramatically and there was a lot more touching, kissing and other public displays of affection than usual. This is frowned upon in the spas and the staff usually intervenes, but it looked like the rules were relaxed for the special event.\n\nI noticed quite a few erections but they were ignored and nothing was said. Jia had also noticed that things were different and after we moved to the indoor pool she swam up to me, kissed and hugged me while wrapping her legs around my body. It was a great feeling and I responded by grabbing her arse cheeks and pulling her closer.\n\nMy cock soon got hard as it rubbed against her smooth pussy, Jia felt it and positioned herself so that my cock was rubbing directly on her clit. After a few minutes of this she hugged me very tightly and groaned into my ear as a small orgasm hit her. I glanced around to see if anyone had noticed. Apart from Jessica and Harry, who were smiling at us, nobody else was showing a reaction. \n\nJia kissed me again before taking my hand and pulling me towards the exit. She called over to Jessica and Harry \"Come with us to the hot and cold pools\". \n\nI whispered to Jia \"But I'm still hard!\"\n\nShe laughed \"It doesn't matter tonight, nobody will mind!\"\n\nI was a bit unsure but followed her out of the pool. It felt strange but also arousing to walk around with a huge boner and not try to hide it. I looked behind me and saw that our friends were following. To my relief Harry was also fully erect and Jessica was pulling him out of the pool. She looked flushed and her small nipples looked like raisins. Jia said \"Let's wait for them to catch up.\"\n\nWhen they joined us Harry and I looked at each other and shrugged our shoulders. His cock was straight and about the same length as mine, just slightly thinner and standing almost upright compared to my 90 degree angle and curve. The two girls were staring at our erections and giggling before taking our hands and pulling us to the pools. \n\nInterestingly our erections didn't fade and we entered the hot pool at full mast. The water was hot but not as hot as our wives. They pushed us into a seating position on the underwater bench before sitting on our laps facing us. After a few minutes the heat became unbearable and we went into the opposite ice pool. There was a lot of squealing and shouting but we all made it in and fully submerged ourselves for a short time. The low temperature had done the trick and our cocks had softened\n\nJia said we should go to the underground relaxation pool next and we all agreed. We went downstairs and lowered ourselves into the water to float on our backs. I drifted off with Jia at my side before closing my eyes and enjoying the floating sensation and underwater music. \n\nIt wasn't long before I felt a hand touch my buttocks before moving down and fingers rubbing over my anus. I let my arm drift out and felt Jia's body before moving my hand up and rubbing over her very erect nipples. Her hand continued moving and soon found my balls which she grabbed and gently squeezed.\n\nMy hard-on returned in full and my cock was proudly waving above the water. I opened my eyes and looked around. More than half the guys floating had boners with some even being held by their partners. It was quite a sight and I noticed that Jessica was one of the women holding on to a hard cock. \n\nI felt some movement and Jia's hand rose out of the water and also grabbed my cock. It seems she had seen what the others were doing and thought it a good idea. I wasn't about to complain as it felt wonderful. Using my cock as a handle she was able to pull and hold our bodies together, we floated like that for about 20 minutes before it was time to leave.\n\nAfter having a shower to wash off the salt we went back upstairs, I noticed that our friends each had a hand on the others buttock and were kissing each other repeatedly. Harry suggested we go for another sauna and we decided on one outdoors with a wood fire. There was another couple already inside but they were busy enjoying each other and paid us no attention. The woman was lying on top of her partner and both of them had their eyes closed.\n\nThe small sauna had benches on three sides and as the couple was on the centre bench we had no choice but to take the benches facing each other. Jia and I sat down next to each other with Jessica and Harry doing the same. The fireplace in the centre was providing the only light, the flickering flames and soft music made it very sexy. \n\nI leaned back and closed my eyes enjoying the heat. After a few moments I felt Jia tap my leg, I looked at her and she nodded in the direction of our friends. I turned my head and watched as Jessica's hand moved up and down Harry's cock. His hand was between her parted legs and despite the dim light I could see one or two of his fingers moving in and out of her pussy. \n\nIt was amazing to watch and my cock instantly became hard. I looked over to see Jia's hands tweaking and pulling on her very aroused nipples. A sudden movement by the other couple made us all stop and look over to them. The woman was lifting herself up revealing huge hanging breasts with erect nipples. As she slid off her partner his erect cock swung into view. It was a giant of at least 8 or 9 inches in length and very thick. They both got up and left the sauna saying goodnight. Once the door closed we all looked at each other simultaneously saying \"wow\".\n\nNow that we were alone, Jessica and Harry immediately started making out with renewed vigour, I looked over at Jia and she smiled at me before leaning over and taking my cock in her mouth. Jessica spread her legs widely and we could clearly see Harry's fingers going in and out of her pink hole with her sweat and internal juices providing ample lubrication and making a loud squishing sound.\n\nThings were getting hotter and hotter and we were heading towards full blown sex. A noise from outside made us stop our actions just as the door opened and a staff member entered, she glanced at our hard cocks, smiled and said she was sorry to interrupt but she had to load fresh wood on the fire. I said it was OK and thanked her. \n\nAfter she left I said \"we better cool things off! It's OK to touch and tease a bit but anything beyond that could lead to us being kicked out!\"\n\nWe all agreed we would wait till later to take things further and relaxed for a few minutes before leaving the sauna and going for some refreshments. After another rest on the heated stone loungers it was already past 10pm and we decided to go for another swim in the outside pool before showering and heading home.\n\nBoth Harry and I had almost continuous erections and our two ladies did everything possible to keep us up. As soon as they noticed some softening they made sure to put on a show or touch our cocks to keep them primed. It was almost a relief to get soft after putting on our clothes for the trip home.\n\nI looked forward to the erotic adventures the rest of the evening would bring and wondered how far it would go. During the drive home Jia and I could tell things were happening on the back seat but it was too dark to see much so we could only enjoy the occasional moan and groan.\n\nIt was hard to concentrate on driving and my poor cock was straining against my pants. Jia noticed my predicament and leaned over to open my pants and release my dick. Out of the corner of my eye I could see that Jia had her feet on the seat and her hand between her legs rubbing her pussy. The whole interior of the car smelt of sex and I wondered how I would last the 30 or so minutes left before we got home.\n\nOnce we left the motorway and hit the more illuminated roads I could see that Jessica's shirt was open and that Harry was sucking on her breasts while his hand was working between her legs again. Thanks to the late hour there was no traffic and we got to our home in record time. \n\nWhen I shut the engine off in our garage and the interior lights went on, the two in the back seat realized we were home. There was some scrambling to get dressed but I laughed and told them \"don't bother, we've seen it all before and we can go into the house directly from the garage\".\n\nThey laughed and everyone got out of the car with various bits and pieces of our bodies hanging out. We went up the stairs and I told them to make themselves comfortable in the living room while Jia and I got some drinks and snacks from the kitchen. \n\nWhen we returned to the living room we were surprised to find them both naked and kissing on the sofa. Setting down the tray I reached for Jia, removing her blouse and skirt in seconds before also getting undressed. I sat down opposite and pulled Jia onto my lap as we watched the action unfold.\n\nHarry was already hard and we could see pre-cum glistening on the end of his cock. He pushed Jessica down and while still kissing her reached down and rubbed his cock up and down her pussy. She groaned and wiggled around until his penis sank into her. Harry thrust forward sinking his entire length inside her. He lifted his chest off her and looked down at his squirming wife before starting a rapid pumping motion.\n\nIt was amazing to watch and we could clearly see her juices on his cock as it moved in and out rapidly. Jia lifted herself off me and reached down to grab my cock and insert it into her soaking pussy. She sat down again and I sank into her hot moist slit. I was expecting her to start riding me and reached up to caress her hard nipples. She leant back and whispered that she just wanted me inside her and watch the others. This was fine with me and I could feel her pussy clasping and releasing my cock rhythmically.\n\nHarry was increasing the speed of his thrusts and Jessica began to scream as she had a massive orgasm. Shortly afterwards Harry grunted as he shot his load and collapsed on top of her.They both lay there panting.\n\nJia couldn't wait any longer and began to rock her buttocks back and forth while moaning that she wouldn't last long. I placed my hands on her hips and helped lift and lower her. Our friends had recovered and were watching us intently as she spread her legs as wide as possible, showing them my cock as it plunged in and out. We saw Harry's cock slip out of Jessica followed by a gush of fluids as he lifted himself off her. This turned us on even more and we both climaxed at the same time. \n\nJia screamed loudly and I pulled her down as far as possible before shooting my load deep inside. Her pussy was throbbing and clenching so strongly that our juices were pushed out onto my swollen balls in a steady stream. After a few seconds, Jia slowly stood up, turned around and bent over to lick my cock and balls. Her freshly fucked pussy was facing Jessica and Harry and our combined cum was dripping from it. \n\nI slid off the sofa and moved between her legs placing my face and open mouth directly under the stream. When there were just a few drops remaining I pulled her down onto my mouth and sucked the remainder out. When I was done, Jia turned around and crawled over to Jessica, kissing her on the mouth deeply and then moving to Harry and doing the same.\n\nShe waved me over and I moved to her side as she pulled our friends in for a group hug. It felt strange at first being sandwiched between two women but I quickly got used to it and found it very enjoyable. The girls then kissed each side of my face before doing the same to Harry. After a few minutes of this we all stood up and Jia suggested we go for a shower before going to sleep.\n\nWe followed her out and went to our bathroom which has a large shower and enough space for all four of us. Once the water was warmed up we all stepped in and Jia began washing Harry, leaving Jessica to wash me. I glanced over at Harry to see if it was OK and we nodded before beginning to wash each other's wives. My cock had recovered and was once again at full hardness and Jessica didn't hesitate to soap and rub it with one hand while her other gently caressed my balls.\n\nI looked over to see that Harry was getting the same treatment from Jia. It was amazing to see my wife touching Harry while Jessica was touching me and I thought I would explode if this lasted much longer. Jia reached over and turned the water off before the two girls said something to each other in Chinese and started to squeeze our cocks in a stronger grip and pumping faster. This was too much for Harry and me and we gasped before shooting our loads over their faces and chests. \n\nConsidering we had only just come a short time earlier there was an amazing amount. The girls let go of our cocks and began to lick the spunk of each other before standing up and switching partners. Jia gave me a deep kiss and told me she loved me and said we should rinse off and then go back to bed. We left the shower and dried ourselves before moving into the bedroom.\n\nWe hadn't discussed it previously but it just seemed natural for the four of us to share the same bed. The two ladies moved to the centre, with Harry next to Jessica and me next to Jia. It was 1 AM in the morning and all of us were very tired so we decided to sleep. I snuggled up to Jia and Harry did the same with Jessica and within moments we all passed out.\n\nIt was daylight when I woke to soft moans coming from the other side of our bed. I looked over to find Harry sucking on Jessica's nipples while his hand was rubbing over her pussy. I watched for a few moments before waking Jia. She quickly realised what was going on and to my surprise, reached over began to play with Jessica's other breast and nipple. When Harry realised what Jia was doing he moved down between Jessica's legs and began eating her pussy.\n\nJessica moaned loudly and writhed around on the bed. Jia moved closer and then sat up and straddled Jessica's stomach before bending down and kissing her. I think it was at this moment that Jessica actually became aware of her involvement and it seemed to excite her even more. My cock was throbbing and harder than it have ever been. Seeing Jia kissing Jessica and how she looked bending over with her pussy and ass in Harry's face was beyond belief. \n\nHarry was still licking and sucking his wife's pussy but his eyes were focused on Jia's crotch as it wiggled around a few inches away and it must have been very tempting for him. Jia suddenly rolled off Jessica, looked at me and said \"you join in and play with her!\"\n\nI was happy to oblige and slid over taking Jessic'a large breast in my hand and moving my mouth over her hard nipple. Jia did the same on the other side and Jessica had her first orgasm, her body writhing and bucking on the bed. \n\nAll three of our mouths struggled to stay attached. Harry rose up and started to move forwards, he took Jessica's legs and lifted them up making a V shape. His cock was dark brown and jutting up, almost pressing against his stomach, making it impossible for him to get it into her in this position. I told Jia \"Harry needs your help! Take his cock and guide it into Jessica\".\n\nMy wife smiled at me, reached over and pulled Harry's throbbing erection down until the tip came into contact with Jessica's bush. She began to rub the head over Jessica's pussy making a sexy squelching sound. Jia must have hit Jessica's clit as she suddenly jerked up and groaned. My wife continued to tease until Jessica couldn't stand it any longer and reached down grabbing Jia's hand and guiding her husband's cock into her opening. Once Harry felt his cock dip into the warm tunnel he gave a lurch forwards burying his entire length in one stroke.\n\nJessica squealed in pleasure and wrapped her long legs around his waist pulling him even closer. Jia's hand remained in place with two of her fingers forming a tight ring around Harry's cock and the rest rubbing on Jessica's clit. I returned to sucking Jessica's nipple that was now bright red and bigger than I had ever seen it. Her other nipple didn't remain untouched for long as Jia also resumed sucking and licking it. We looked at each other and began to suck in rhythm to Harry's thrusts. The combined sensations of Harry's cock, Jia's fingers and our sucking seemed to provide Jessica with sensations she had never experienced before, she closed her eyes and her head bent back raising her chest towards our sucking mouths before making an almost animalistic sound I had never heard from a woman before.\n\nHarry had reached his peak and after a final deep push, collapsed onto his back pulling his cock from Jessica's pussy while it was still shooting his last bursts of spunk. Some of it hit Jia's and my face as it shot across Jessica's body before his cock flopped back onto his stomach with the remainder pooling there. As they lay panting, Jia and I released Jessica's nipples and Jia leaned over and licked the sperm off my face. She then used her fingers to collect the rest from her face and Jessica's body before feeding it to Jessica.\n\nBy this time my cock was so hard it was almost painful, I asked Jia if she was ready for her turn. Instead of answering, she whispered something in Jessica's ear and then moved to the side. Jessica slid her body so that she was lying across the bed before Jia climbed over her, shuffled forwards on her knees and lowering her pussy over Jessica's face. She them told me to take her from behind and lowered her face into Jessica's dripping pussy.\n\nI jumped off the bed and walked over to the other side with my cock bobbing energetically. The sight of Jia's wet pussy being sucked and licked by Jessica's eager mouth was almost too much and I wondered if I would last more than a few seconds. I couldn't wait any longer and moved forwards sliding my dick over Jessica's forehead and nose until it joined her tongue her just inside my wife's pussy. It was an incredible feeling squeezing my sensitive glans into Jia's tight tunnel together with Jessica's hot tongue.\n\nI stopped my forward momentum and enjoyed the sensation while trying to hold back shooting my load. It wasn't easy but I somehow managed. Once I had things under control I pushed deeper inside and felt pussy and tongue scraping along my shaft. When I hit bottom my balls were basically in Jessica's mouth which provided another unique feeling.",
        "I began a slow withdrawal followed by a rapid penetration and kept going with this rhythm. Jia's head was still buried between Jessica's legs and I could hear a low moaning sound indicating she was enjoying my efforts. I pictured her sucking Harry's load from Jessica's pussy and it turned me on even more. Harry had recovered and was sitting up watching Jia, I could see his cock was getting harder again and decided to try something.\n\nI reached down and collected some of the abundant fluids clinging to my cock and rubbed them over Jia's anal entrance. She shuddered but didn't complain. When I was happy with the lubrication I inserted my index finger into her arse slowly. Jia groaned and raised her head, with my free hand I indicated to Harry that he should move forward. He soon got the idea and once his now fully erect cock was in range Jia sucked it in as far as she could manage. All three of Jia's holes were stuffed and seeing this was too much for me.\n\nI stopped my thrusting motion and just used my finger to continue rubbing inside Jia's arse. She must also have been at her limit as she stated pumping her buttocks up and down on my cock and finger and let out a loud scream as she came. I felt her pussy throbbing on my cock and resumed pumping at a fast pace. After a few moments my orgasm hit and I shot jet after jet of sperm deep inside her.\n\nShe hit another high and howled loudly collapsing forward onto Jessica. My cock popped out dripping its remaining load directly into Jessica's mouth. She didn't seem to mind and gulped it down. Jia rolled off Jessica and lay panting on her back. I crawled into the bed next to her caressing her body and kissing her gently.\n\nHarry moved up and lay down next to Jessica doing the same to her. I noticed that his cock was still hard and glistening from Jia's earlier sucking. I asked Harry \"what are you planning to do with that?\"\n\nHe laughed \"No plans, I hope one of the ladies will surprise me!\"\n\nJessica said \"Jia didn't finish her work\" as she rolled over onto her husband. She lifted her chest and crawled forwards trapping his face between her huge hanging breasts.\n\nI looked over as my wife turned onto her tummy and slid between their spread legs. It was fascinating to watch as her hands slowly moved up Harry's legs until they reached his balls. She held his tight sack gently before kissing and licking it a few times. Her hand then grasped his twitching cock and pulled it down towards her open mouth. With lips wrapped over her teeth she engulfed his shaft until her nose was buried in his pubic hair. \n\nI heard a muffled groan and could see that Harry's face was still smothered by Jessica's tits. He was moving his head left and right and enjoying the unique sensation of his wife's breasts in his face while his cock was being sucked. \n\nI couldn't just watch anymore and moved over behind Jia. I placed my hands on her toned cheeks pulling them apart before burying my face between them. The tip of my nose was rubbing over her anus as my tongue lapped at her still leaking pussy. \n\nRaising my eyes I could see her head bobbing up and down with an increasingly fast pace as she sucked and licked Harry's cock. His body suddenly tensed and he let out a loud grunt as he climaxed. Jia's head dropped as far as it could go as she held his cock deep and I could imagine his load filling her mouth and throat. I quickly located her swollen clit with my fingers and moved my tongue out of her pussy and into her asshole. With her mouth still stuffed by Harry's cock she groaned and twitched as another small orgasm hit her.\n\nWe all lay immobile for many minutes before slowly untangling our bodies. Jia gave me a deep kiss and I knew I was tasting Harry's sperm but I didn't care. Once we were all comfortable we pulled the blankets up and drifted off to sleep. \n\nIt was almost lunchtime when we all woke up. We took another shower together but this time it was not sexual and we all just washed the remnants of our lovemaking. Everyone was starving and after drying off we went down to the kitchen to prepare a meal. We didn't bother getting dressed and when the food was ready all sat down at the table and began to eat and talk. \n\nJessica kicked things off by saying \"that was the most amazing night of my life!\"\n\nHarry leaned over and gave her a kiss before adding \"yes, it was fantastic. Thank you both.\"\n\nJia replied \"You don't have to thank us, it was great for everyone.\"\n\nI was about to add my bit when Jessica suddenly started crying. Jia jumped up and went to hug her saying \"What's wrong?\" \n\n\"Nothing's wrong, these are tears of joy. I never imagined we would have friends like you or experience love like this.\"\n\nJia kissed her face gently \"I feel the same\". \n\nWhen the meal was over, we gathered our clothes from around the house and got dressed. It was an emotional goodbye. It was strange seeing them dressed again and hard to believe what we had been up to a few hours earlier!\n\nAfter they had left, Jia took my hand and led me to our bedroom. We sat together on the bed and she asked me \"how do you feel about what happened?\"\n\n\"It went a lot further than I thought it would but it was great and I've never loved you more.\"\n\n\"Were you jealous when I was playing with Jessica and Harry?\"\n\nI thought about it for a moment before saying \"Not really, it was sexy as hell! I know you love me and as long as we do it together I'm OK with everything you want to try.\"\n\nShe smiled and kissed me deeply before I asked \"What about you?\"\n\n\"I was so turned on seeing you with Jessica, it was strange at first but after a few moments it was just exciting. I'm glad we didn't have full sex with them before discussing it because I was worried how we'd feel about it. Now I know it'll be fine!\"\n\nI agreed and added \"I'm not interested in doing anything with strangers or lots of other partners but I can really imagine things going all the way with our closest friends.\"\n\n\"That's exactly how I feel. It'll be exciting to see how things develop and what will happen next!\""
    ],
    "authorname": "cneucpl",
    "tags": [
        "nude",
        "nudist",
        "chinese",
        "sauna",
        "spa",
        "asian",
        "anal",
        "friends",
        "share"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/first-time-nude-sauna-pt-11"
}