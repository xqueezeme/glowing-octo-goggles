{
    "title": "Like Minded Neighbors Ch. 04",
    "pages": [
        "I was more than a little surprised to see Shelly standing there with her panties stuffed up into her pussy. They appeared to be done exactly the same way Jim had stuffed my panties up into my pussy before he and Steve left the house for their trip to the hardware store. And as we stood together, both of us with our shorts pulled down, looking at each other's privates with an inch or two of panties dangling from our lips, we both cracked up and laughed as we pointed to each other's pussies.\n\n\"Our husbands obviously got together on this.\" Shelly said, smiling up at me. \"If they've been trading our panties, I'll bet you Steve told Jim about panty stuffing. He might have even shown your husband pictures of me like this.\" Then, Shelly added, \"I'm betting there are no secrets between those two. They probably tell each other everything they're doing with us.\"\n\n\"Well,\" I said, pointing down at the pink panties hanging down from her hairless lips, \"it would be extremely hard to believe this is a coincidence.\" Shelly and I looked at each other for another few seconds and then she reached down to pull her shorts up and I did, too. But, Shelly looked up at me and with the most casual tone I've ever heard, she said, \"You can leave yours off if you want to, Beth. I mean, it's your house. If you want to keep them off while we watch the video, I'm okay with that.\"\n\nPulling my shorts back into place, I gave her a look and put my hands on my hips. I was about to say something sarcastic, but, she spoke before I could, saying, \"Hey, if you're really an exhibitionist, now's your chance. Go ahead, you can take everything off; get completely naked for all I care. You won't hear any condemnation from me, that's for sure.\"\n\nShelly buttoned her shorts and sat down while I just stood there. I didn't move. When our eyes met, she asked, \"I know that look. You're thinking about it, aren't you?\" \n\n\"Beth, I know you pretty well.\" Shelly went on. \"You probably don't get the chance to do something like this very often \u2013 you're way too much of a chicken. But, if you want to strip down and show off a little with me here, I won't mind. Do you have the guts to do that?\"\n\nI could sense the challenging tone in Shelly's voice. And yes, I was considering her offer, but I felt self conscious doing it, partially because she was a woman, and partially because I was starting to get aroused at the thought of being seen naked by a second person in one day. Then, right as I was about to decline she said, \"I'll make you a deal. How about if we indulge your fantasies this time, but, next time we get together, you indulge mine by agreeing to spank me. How's that?\"\n\nTo say I was surprised and stunned would be an understatement. My best friend had just proposed we live out our fantasies together, me going first and her going next time. It would mean I'd take all my clothes off in front of her, everything - my top and my shorts. I felt my pussy getting wetter, and, while that should have convinced me not to do it, the thought of her seeing me naked, and seeing I was wet and aroused, was moving me closer to agreeing.\n\n\"Beth,\" she said, softly, \"we'd keep this just between us, I promise. No judging each other and no disapproval. You can get naked, show yourself off to me and I'll look at you. Then, some other time, I'll get naked and you'll spank me just the way I like it.\"\n\n\"Shelly,\" I groaned, \"I don't know the first thing about spanking someone. Plus, you're my best friend, I could never hurt you.\"\n\n\"Oh, you wouldn't be hurting me, Beth.\" She replied. Then after she paused for a few seconds she asked, \"Are you hesitant to get undressed because I'm a woman?\"\n\nI couldn't answer. I wasn't sure what to say. I loved Shelly, I really did. She was my BFF and someone who I confided in and relied upon. But, I wasn't sexually attracted to women, or at least I didn't think I was. I guess like all females, I've had passing thoughts about being with another woman, but, it wasn't something I constantly dwelled on. Of course, I knew my husband would love the idea of seeing Shelly and me together, but, except for a trace of curiosity, it wasn't a big fantasy of mine.\n\nSeeing I was trying to decide what to do, Shelly extended her hand out. \"Come here, Beth. Stand in front of me and let me undress you.\"\n\n\"Shit!\" My mind screamed. What was I going to do now? It was more than a challenge \u2013 her words were an offer. Then, Shelly reached for my hand and began to pull me towards her. I let myself be pulled, a tiny step at a time, until I was in front of her as she sat on the couch. \"Just relax now.\" Shelly said, as she stood up next to me. \"Stand still. I'm going to undress you. Think about that day we were trying on clothes in the dressing room together. We were topless, right? Remember how much fun we had that day?\"\n\nShelly's hands were pulling my top up past my belly button, up and over my breasts and then over my head. With my top off, I didn't initially feel any different, or at least I didn't feel any different until she raised her hands, hovering them five or six inches away from me as if she was going to touch my breasts. Looking me in the eye, Shelly said, \"Hold your boobs up, Beth. You know, like you were showing them off to me.\"\n\nAt first, my hands started to rise and then I thought for a second about what I was about to do and I completely froze. \"Just go with it for a minute.\" Shelly said softly. \"Pretend we're in that dressing room again and you're showing me a mark, or a scratch on your breast.\"\n\nLooking me in the eyes, she nodded slightly to encourage me \u2013 and I did it. I raised my hands and lifted my C cups, clearly offering them up for her to look at. I felt the same blush spread over my face which I felt when Steve was looking at me in my panties, but when Shelly's eyes focused on my nipples, they started to get hard and instead of being embarrassed, it kicked my excitement up a few notches. \n\n\"Now,\" Shelly said, \"close your eyes for a minute.\"\n\nWhen I did, Shelly leaned over close to me and whispered, \"Imagine you're standing there in that dressing room, holding your boobs out just like you are now. I reach over and open the door. And,\" she continued on, \"there's a guy there. He sees you.\"\n\nAll at once, I got this vision of it happening. In my mind, I was turned toward the door of the dressing room and she was holding it open, letting this guy look at me holding my tits up. \"Pinch your nipples, Beth.\" She said very softly. \"Pinch your nipples and think about what's going through his mind as he watches you.\"\n\nAs my fingers found my nipples and I pinched them lightly, I though about myself doing that while he watched me. The invisible connection between my nipples and my pussy came alive and I felt a tingling between my legs \u2013 that same tingling I felt when Jim pulled my pussy lips apart so Steve could see the pinkness of my pussy when we were in the kitchen. I pinched my nipples harder. Releasing them, and then pinching them again, I felt myself getting warmer between my legs and I was immediately grateful Jim had stuffed those panties up inside my pussy because if he hadn't, I was sure I might actually start to leak my juices right down my legs in front of Shelly. \n\n\"You look so naughty,\" Shelly continued speaking, \"exposing your breasts and pinching your nipples like that in front of a strange man. But, see how he's smiling? He likes it. It's not every day a man gets to see breasts as beautiful as yours. And, he's getting hard \u2013 so hard, Beth. He's really getting off looking at you. His cock is bulging in his pants. Can you see it?\"\n\nWhile she spoke, I was playing it out in my head, thinking about this random man standing outside the dressing room door looking at my boobs. I would have never done anything like this myself, but, would I do it if Shelly was there? If she opened the door, would I expose myself and touch my nipples? Would I let this guy look at me?\n\n\"Tell me,\" she said, \"does the idea of doing all that turn you on? Is it making you wet?\"\n\nI opened my eyes and looked at her. As our eyes made contact, I nodded my head and felt a tiny smile creep up at the corner of my lips. The picture she painted for me did turn me on and I had to be honest with myself, and admit the idea of her exposing me to a strange man had quite a strong affect on me. Now, even more than before, I pinched my nipples, keeping the connection between my nipples and my vagina alive. It was such a splendid feeling, and although I knew darn well she and I were standing in my living room, in my mind, I saw myself in that dressing room, I was topless, the door was open and that guy was looking at me.\n\n\"Okay,\" Shelly said, \"push your shorts down now. All the way down.\"\n\nI'm not sure why I did it, but my hands did exactly what she said, and a few seconds later, my shorts were in a puddle around my ankles and I was standing naked in front of my best friend. Amazingly, it didn't feel weird. For some reason, it felt good \u2013 it felt right, and it felt like I wasn't doing anything wrong at all. \n\n\"I want you to see something.\" Shelly whispered. \"Don't move.\"\n\nShe reached down carefully between my legs, and with one of her hands, slowly began to pull the panties out of my vagina. \"But, Jim told me to leave them in there.....\"\n\n\"Shhhhh, Beth. I'll put them back inside you. Don't worry.\" Shelly said, calmly. \"I want you to see for yourself why our husband did this to us. Believe me,\" she added, \"you're going to understand a lot more when you see your panties. Just trust me.\"\n\nShelly continued to pull my panties out of my vagina, and as she pulled, I felt every fraction of every inch of that material as it came out. It was a very unusual, but incredible feeling, and when they popped loose, Shelly smiled and held my panties up between us. I could immediately smell my womanly aroma, and looking down at them, I could tell parts of them were soaking wet from absorbing the sexual lubrication which was secreting from inside my vagina.\n\nI watched in fascination as she raised my panties to her nose and inhaled my scent. \"Oh, Beth!\" She whispered. \"This is exactly why our husbands did it.\" Then, she moved the panties under my nose and I smelled them for myself. It was such a heady aroma, and it was permeating the air around us and as soon I smelled it, I could fully understand why Jim pushed my panties up inside me and told me to leave them there until he took them out.\n\nShelly pulled my panties back and held them under her nose again. After she took two or three strong sniffs, she exhaled and smiled. \"You smell good, Beth. I can see why Jim would be proud to share your panties with Steve.\" \n\nHer comment made me turn beet red. It was a compliment, I know, and if it would have come from a man, that would have been one thing. But, it was a completely different thing to be told by another woman that your pussy smells good. Don't misunderstand me - I didn't mind her saying that, but I was getting awfully close to having an urgent need to finger myself and if she didn't stop this, I might just say \"fuck it\", and shove my finger between my legs and rub myself off right in front of her.\n\nJust then, Shelly bent down and picked up their nasty video tape she suggested we watch. \"Go put this in,\" She said, then, waving my panties at me and taking another sniff, she added, \"I'll take care of these for a while.\"\n\nWith my head in a fog, I took the tape from her hand and walked over to the entertainment center and bent down to put the tape in. I heard Shelly gasp softly, and I turned around to look at her. \n\n\"Oh, Beth!\" She said softly. \"Spread your legs a little and bend over again, would you?\" Shelly asked. When I did, I saw her look between my legs from the behind and she grinned. \"Damn, you look so beautiful like that. I wish you could see yourself. You're absolutely gorgeous, and you have the most spankable ass I've ever seen.\"\n\nMy head was spinning and as I put the video tape in the VHS player, I realized how wet I was getting. Without the panties to soak up all my juices, I could actually feel my lips sliding against each other every time I moved. I should have been mortified at the notion Shelly would see my wetness, but, I was too excited to turn back now. I'd never seen this side of Shelly, or even this side of myself, but, it felt really good, and as long as she was okay with it, I was okay with it, too.\n\nTurning to go sit on the couch next to her, I saw her staring at me \u2013 at my nakedness, and a feeling of satisfaction swarmed all across my body. I felt alive and tingly all over. My pussy was heated and wet, and with each step I took toward that couch I realized this was probably going to change things between Shelly and me forever. \n\nShe patted the couch right next to her, and when I sat down, she scooted up right next to me. \"Turn sideways and sit so you're facing me.\" She said, softly. \"Spread your legs and open up so I can see you down there.\"\n\nI pulled my right leg up onto the cushion as I sat, leaving my left foot on the floor. I spread my knees to a comfortable position and leaned back against the throw pillows stacked against the arm of the couch. I watched as Shelly's hands moved to my knees, gently pushing my legs further apart, opening them wider and wider. \"If you're really an exhibitionist,\" she said, chuckling, \"you better get used to being on display. Now is a good time to practice, you know.\" \n\nI felt her hands guiding me...... urging me to open my legs up to her gaze and at that moment, I completely succumbed to her gentle ministrations. Once my legs were splayed apart, she reached out and put her hands on top of mine and moved them toward my pussy. \"Show me.\" Shelly said. \"Pull your lips apart and show me what your pussy looks like.\"\n\nI hadn't expected this. Actually, I hadn't expected any of what we'd done, but, the weird twist of circumstances that now had me naked in front of her were pushing all my buttons. I was more than okay to be naked in front of her, and when she asked me to turn around and bend over, I was even okay with that, too. But, pulling my lips apart would settle any doubt in her mind that I was sexually excited. I'd probably leak pussy juice if I did it; it would dribble out of me and my best friend would know without a shadow of a doubt that I was aroused way past the point of being excited.\n\nMy face and chest began to burn with embarrassment as my fingers felt for the meaty flesh of my pussy lips and I pulled them slowly apart. It would have been impossible for me to stop now, and as I pulled myself open, the look on Shelly's face changed from curiosity to wonder. She even leaned forward, well past my knees, and as I pulled myself open as far as I could, the only thing she said was, \"You're sopping wet down there, Beth.\"\n\n\"I know.\" I said, softly. I felt my pulse banging loudly in my ear, and I knew I should have felt ashamed or remorseful, but, I didn't feel anything except my arousal being kicked up again a few more clicks. \n\nWhen she leaned back away from me, I started to close my knees and lower my right leg to the floor, but she stopped me. \"What if,\" Shelly asked with a curious look on her face, \"and I'm being totally serious now, Beth..... what if our husbands were here with us right now? What if Steve was sitting next to me and Jim was sitting next to you? Would that turn you on? The way you're sitting and holding your pussy open, would you get off on letting everyone see you?\"\n\n\"Uh huh.\" I answered, softly, now starting to feel a little ashamed.\n\n\"Would you hold yourself open and let us all look at you really close? And, I mean we'd be looking really, really close, Beth. Would you?\" She asked further.\n\n\"Yeah.\" I replied, realizing exactly what I was saying to her.\n\n\"What if one of us asked you to touch yourself?\" Shelly added, and then asked, \"Could you do that, too?\"\n\nI nodded my head and Shelly leaned back down between my legs. \"You'd really do that?\" She asked. \"You'd get naked and masturbate for the three of us?\"\n\nI looked up in her eyes and told her I would. \"You'd have to undress me, Shelly.\" I replied. \"And you'd have to tell me what to do.\" I told her. \"But, yes, I'd do it.\"\n\n\"Beth,\" Shelly said as she reached out to touch my leg, \"be honest with me, okay? Would you only do it because we made you, or, is this something you'd honestly like to do?\"\n\n\"Both.\" I answered truthfully. \"Honestly, what I'd really like is to have someone make me do it. Jim, or you \u2013 even Steve.\" \n\nI went on to explain to Shelly more about the exhibitionist games Jim and I had played at the mall. I told her how Jim would tell me what he wanted me to do. Maybe he'd point out a man and tell me to let the guy look up my skirt. Or, he'd send me to the ladies room to remove my panties and then take me by the hand to a shoe store and sit next to me while I tried on shoes and let the salesman look between my legs. I rarely, if at all, did anything on my own. For me, it was always better if he just told me what to do and I just did it.\n\n\"I know what you mean.\" Shelly said. \"It's the same way with me and the spankings. I'd much rather someone just take control of me and do it.\"\n\nShelly told me she'd teach me everything I needed to know about spanking her. \"It's too bad I promised Steve I'd give him the strap-on tonight.\" She added, chuckling a little. \"I could use a good spanking cum tonight. But, he'll take care of me when I'm done with him.\" Shelly went on to explain how much Steve changed when she pulled out their strap-on. \n\n\"He's so incredibly docile, Beth.\" She said. \"I make him get on his knees and suck it like it was a real cock. I tease him, telling him how incredibly hot he looks with that cock in his mouth, and he gets so hard. His cock starts leaking and he really gets into sucking. It's totally amazing.\"\n\nI was still holding my pussy open as she continued explaining the details of what they did with the strap-on. Unconsciously, my fingers started to rub the path between my pussy hole and my clit, spreading the lubricious wetness up and down my slit. Seeing what I was doing, she smiled and told me not to stop as she continued telling me the sorted details of how she fucked her husband's ass. \n\n\"I'm not kidding.\" Shelly said. \"He loves it, and I can tell you from experience, once you've taken your man in the ass with a strap-on, he'll fall in love with you all over again. You have to be gentle at first,\" she warned, \"but once you learn to read his signals, you'll send him to heaven every time you do it.\"\n\nI was riveted to Shelly's story as she told me about making him confess his nasty desires, and say things while she took him with her strap-on. And how she'd gotten him to admit he'd like to hold a real cock in his hands \u2013 making it hard and putting it in his mouth. The things she was telling me were the kinds of things you never told anyone, but with every word, my fingers worked their magic between my legs and somewhere along the way, they started going into my pussy and circling my clit.\n\nAs she watched my fingers, she smiled and kept on talking \u2013 like she was intentionally trying to turn me on, forcing me closer and closer toward my climax. And, it was working. She was telling me how he'd wrap his hands around the base of the cock and try to take as much of it down his throat as he could, and, how he'd be panting and begging her to fuck him with it.\n\n\"Sometimes,\" she explained, \"I'll have him on his back with his legs way up so I can reach down and play with his cock while I'm fucking his ass.\"\n\n\"Tonight, though,\" Shelly added, as she stared at my fingers plunging in and out of my pussy, \"I'm going to wait until just the right time \u2013 right when he's got a big mouthful of cock and I'm going to ask him if he'd like to hold and suck your husband's cock, Beth.\"",
        "Hearing what she said, my fingers took off like they had a mind of their own. I was shoving three fingers deep into my pussy and rubbing my clit like there was no tomorrow.\n\n\"I'm telling you, I bet we could get 'em started, Beth. I know we could.\" Shelly said. \"We'd all be sitting around, and I'd just stand you up and undress you right in front of them. Then, you'd undress me and lay me over your knees and give me a spanking with my legs wide open. You'd probably have to touch me, Beth \u2013 you'd probably have to open me up so they could see how wet I was. You might have to stuff my panties up inside my pussy so I didn't leak all over your lap.\"\n\nShelly was breathing hard now; her eyes hadn't left my pussy and she was watching me intently. \"Then, we'd make them get undressed, too.\" She continued speaking to me. \"We'd make them stand side by side and we'd get on our knees and suck them. Maybe we'd make them hold each other's cock while we did it, or, maybe we could take turns sucking both cocks at the same time. Maybe I could suck Jim and you could suck Steve.\"\n\n\"Fuck!\" My mind screamed.\n\nI could absolutely stand no more, and once she started talking about getting the boys undressed and having them stand side by side naked, and she and I sucking them, and them holding each other and all that \u2013 I completely lost it. So, there, right in front of my best friend, I began to cum and as she leaned down to look at me closer, I simply just closed my eyes and let it all happen.\n\nMy pussy began to contract and in the space of five seconds, I went from pre-orgasmic build up to total climax saturation. My legs were twitching and my pussy was clutching at my fingers. When I got close to my clit, it was so sensitive, my whole body shuddered and convulsed until I moved my fingers away.\n\nShelly's eyes got big, and when she stopped talking to watch me cum, I lifted my hips toward her face so she could see me better, and when I did that, her hand jutted out and she slipped one of her fingers inside my pussy and began feeling around. Without the slightest bit of concern that another woman's fingers had just entered my vagina, I immediately pulled my own fingers out and let her take over.\n\nShelly's finger went right to my g-spot and she began to massage me there better than any of my vibrators could do, better than my husband could do and better than I could do. And, suddenly, another crushing climax began to flood over me. Instinctively, I reached down and grabbed Shelly's wrist in my hand and began using her fingers like a dildo. As I did, she put another finger in me, and then another, and before I knew it, I was jamming her fingers into me over and over as I thrashed on the couch with my legs held open as far as I could.\n\nWhen it was over, I let go of her wrist and fell back into the pillows trying to catch my breath. Shelly, though, didn't remove her fingers from my pussy, and as she slowly moved them in and out of me, I tried to regain my composure.\n\n\"I take it the idea of getting our husbands together appeals to you, too. Huh?\" Shelly said as she giggled. Then, when I finally lifted my head up off the pillows, she added, \"And I think you owe me a good cum, Beth.\"\n\nTo be continued"
    ],
    "authorname": "BethB",
    "tags": [
        "panties",
        "masturbation",
        "exhibitionist",
        "voyeur",
        "bisexual",
        "bicurious"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/like-minded-neighbors-ch-04"
}