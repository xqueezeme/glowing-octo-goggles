{
    "title": "The Mechanic",
    "pages": [
        "This is my first story on here. I like a story with a long build-up; I hope you enjoy it too! I would love to hear your reactions and if you'd like to read more about Riley and Rowan. Happy reading!\n\n* * * * *\n\n\"Excuse me... This is from the stud over there at the bar.\" The bartender had a little chuckle as she put a bright green cocktail in front of Riley. \"Enjoy!\"\n\nRiley's friends exploded in a combination of cheers and wolf whistles. Riley hastily told them to shut up. She was dumbstruck and slightly mortified. This had never happened to her before. She was usually the last person to be offered a drink by a stranger. What was she supposed to do with that? Embarrassed, she looked over in the indicated direction and saw a tall, dark-haired figure raising a tumbler at her. She quickly looked away, unsure of herself.\n\n\"Well? Give him a cheers back then!\" Her friend Sarah reprimanded.\n\nOf course, Sarah would know what to with this kind of attention; she got it all the time. Riley picked up the glass and briefly raised it at the stranger. She forced out a smile, and turned back to her friends. It was flattering of course, but she didn't really want to be put in the spotlight like that. She already felt like the odd one out in her current company. Ever since she broke up with her boyfriend four months ago, she'd been the fifth wheel within their happily coupled-up friend group. Everyone tried their best to include her and make her feel part of the gang, but the fact remained that they used to hang out with three couples, and now there were two, plus an often grumpy 29 year old single.\n\nWith great difficulty, her friends had convinced her to come out tonight, even though she had a great Netflix line-up planned. Halfheartedly giving in, she had not even bothered to make herself look pretty. She had simply thrown on a pair of jeans and t-shirt and taken a brush through her half-long blond hair. All she wanted to do was blend into the background and forget she was 'the single one'. Her friends were having none of that, scrutinising the stranger who had dragged her out of her comfort zone without any scruples.\n\n\"Look at that, Ri, a secret admirer!\" Oliver sounded genuinely excited for her.\n\n\"Not so secret, honey, he's right there... He sure is handsome, though,\" Jenny said dreamily. Oliver's girlfriend had a soft spot for dark-haired, dark-eyed, exotic-looking men.\n\n\"Yeah, he's just your type, hey babe? Maybe if Ri doesn't want him, you can have him,\" Oliver retorted jokingly, pushing a strand of light-blond hair out of his blue eyes. It was a running joke in their group how different Oliver was from Jenny's usual taste in guys. But the two were madly in love and, in jest, it was Ollie's pride and glory that he could make her love her blond guy.\n\n\"So, are you going over there?\" Finn jumped the gun, as usual.\n\n\"And do what, exactly?\" Riley snapped back, sounding more bitchy than she intended.\n\n\"I dunno, talk to him? Thank him for the drink? Maybe more...\" Finn continued unperturbed. \"It's about time you got back on the horse. It's been months!\" This was of course unthinkable for someone with Finn's appetite, but Riley hadn't even thought about it and was definitely not planning on jumping some stranger.\n\n\"You don't have to do anything you don't want to do, sweetie,\" Jenny reassured her, \"just enjoy the free drink. What is it anyway?\"\n\nRiley shrugged and tasted the green concoction. It was a combination of sweet and sour and surprisingly tasty: easy to drink, uncomplicated, and yet different from other cocktails she knew. She tried to pinpoint the ingredients but couldn't get beyond lime and probably lots of sugar.\n\n\"It's good,\" she said simply, seeing the expectant faces of her friends, \"a bit unusual but good.\"\n\n\"At least he has good choice in drinks then. That's a big plus in a man.\" Knowing Sarah, she was probably trying to not so subtly steer the conversation back to the possibility of him becoming Riley's man, at least for the night.\n\n\"I'll say!\" Oliver was looking at her admirer again. \"That's a very good whiskey.\"\n\nThe bartender was refilling the stranger's tumbler and Oliver had clearly recognised the bottle, being a whiskey enthusiast.\n\n\"Hey, if you don't want him, I might go over there!\" He joked.\n\n\"Get in line, babe!\" Jenny playfully nudged her boyfriend.\n\nWhile everyone laughed and joked, Riley took the opportunity to study her admirer a bit more closely. He had dark hair, very short on the sides and longer at the top, from where it fell in thick straight locks over his forehead and partly obscured his eyes. He was wearing a dark leather biker jacket with a light-coloured shirt visible between the undone zipper. Unfortunately, that was all Riley could see, as the bar obstructed the rest and he was a little bit too far away to distinguish more details. She had to admit that it was a cool look, and it suited the handsome features of the stranger.\n\nShe felt a pang of guilt for thinking this way. It had only been four months; she had barely gotten over Dan. But then again, their relationship had fizzled out a while before that, and they had split amicably. Surely, she'd deserved to move on then? So what if she felt attracted to a stranger in a bar? There was nothing wrong with that, was there?\n\nThankfully, her friends' conversation had moved on and Riley had some time to sip her cocktail and contemplate. She found that her gaze kept wandering in the direction of the bar; she hoped no one would notice. The stranger did not pay any attention to her and was chatting to the bartender. It was like he'd already forgotten that he'd bought her a drink not fifteen minutes earlier. Riley wanted him to look over at her. But what would she do if he did? Grin stupidly again? And then what? Maybe she should go over and talk to him after all. He was clearly interested in her, otherwise he wouldn't have send her a drink. So she had nothing to lose, really. Except, she would never hear the end of it from her friends. But the same was true if she didn't go over...\n\n\"Do you think he'll come over here?\" Riley was dragged from her reverie by Finn's question. Although there had been a break in their attention for the stranger, he clearly wasn't off her friends' radars either.\n\n\"I mean, I would,\" Finn continued, \"if I'd bought a girl a drink, I'd want to at least talk to her.\"\n\nThe others murmured their agreement. Riley tried to keep the panic from showing on her face. Oh god, what if he did come over? She'd have to talk to him with all her friends watching and probably behaving inappropriately. She could not let that happen.\n\n\"I might go and say 'thank you' quickly...\" Riley tried to sound casual, \"I guess that would be the kind thing to do.\"\n\n\"You go, girl!\" Sarah burst out, and Ollie and Finn fist-bumped each other.\n\n\"Go get him, and tell us all about it later. We'll want to know aaaall the details!\" Jenny clearly wanted to live vicariously through Riley.\n\n\"I'm just going to thank him for the drink, nothing more,\" Riley tried feebly, but her friends were all beaming with excitement and clearly did not believe her. Riley huffed and turned away. She took a deep breath and, the remainder of her cocktail in hand, made her way towards the bar.\n\n\"Erm... hi.\" Great start, Ri, very eloquent. The handsome stranger and the bartender had interrupted their conversation when Riley came over, and now the bartender quickly made herself scarce towards the other side of the bar. There were clearly some glasses in dire need of cleaning.\n\n\"Hi there.\" The stranger's voice was slightly husky but softer and quieter than expected. Riley was now close enough to take in the angular jaw line, smooth skin, and brown eyes with dark eye-lashes. The stranger pushed a lock of dark brown hair aside and revealed two identical black rings in the helix of the right ear. As the realisation dawned on Riley, the stranger cracked a broad grin.\n\n\"Not what you expected?\"\n\nCertainly not. Riley had come over to talk to a handsome man and found herself facing a... handsome woman, she guessed she could say. She was certainly striking, with powerful features and a confident gaze. She was a bit older than Riley, probably in her mid-thirties. She was at the age where people had usually figured out who they were and were unapologetically secure in their self-image; 'this is who I am, take it or leave it,' her body language said.\n\nThe total picture oozed masculinity and Riley could not fault herself for mistaking her for a man from across the room. Yet, now that she was closer, she could see the finer feminine details of her skin, her lips, her elegant neck, her long slender fingers. Riley realised she still hadn't said anything and remained lost for words as she started stammering.\n\n\"Erm, I came over to thank you for the drink... so erm... thank you.\"\n\n\"You're very welcome.\" The woman was still smiling at her, looking amused. Riley's head was swimming. She had just accepted a drink from a woman, but not in the 'buy a drink for a friend' kind of way. This woman was clearly interested in women in a different way; Riley had seen enough lesbians to recognise the signs.\n\nSo, did this mean she was interested in Riley? Of course; Riley reprimanded herself for being stupid. Why else would she buy a drink for a stranger in a bar? And Riley had accepted, and had now come over to chat. She had given all the signs of being interested too, while clearly she was not. She was not gay. She had only come over because she thought the stranger was a guy. She had messed up and felt that she had to at least set the situation straight. She felt flattered but did not want to get the woman's hopes up.\n\n\"I... Thank you, really. I appreciate it, you buying me a drink, I mean...\"\n\n\"Yeah, you mentioned that. Really, you're welcome.\" The woman's amusement increased as Riley struggled through her words.\n\n\"Yeah, I know... I just want to say... I'm not... I'm flattered, but I'm straight...\"\n\nThe woman laughed. \"Oh, don't worry, I'm very accepting of straight people. I have a lot of straight friends, actually... What's your name, straight girl?\"\n\n\"I'm Riley.\" She felt a bit stupid for her comment now, but she still thought it was better to make such things clear from the start. She could have been smoother about it, though, that much was true.\n\n\"Nice to meet you, Riley, I'm Rowan.\" That was a cool name, Riley thought, it really fit her. Rowan offered her hand and Riley could see a tattoo covering the back of it, starting from the second knuckle and disappearing into the sleeve of her jacket. She shook it.\n\n\"Nice to meet you too... I should probably get back to my friends, though.\"\n\n\"Really, already? They seem to be handling your absence well enough.\" Of course, Rowan was right: the two couples were chatting away happily. They probably had been peeking over at first but, now that the first introduction had been made seemingly successfully, they had eased off the ogling until new developments occurred.\n\n\"This stool is killing my back. Let go sit over there. It's a bit more comfortable. Unless you're really going to run away already?\" Rowan gave her a challenging look and pointed at a two-person table a bit further back. It was less centre-stage and further away from her friends' table, so at least Riley wouldn't feel like she was being watched. She did not want to lead her admirer on, but she was fascinated by this confident, unusual woman.\n\nRowan didn't seem to mind that she wasn't interested in her in the same way, so Riley decided it couldn't hurt to just have a chat, until her cocktail was finished. She was pleased that she'd made it clear that she wasn't gay and had cleared away any potential misunderstandings, however awkward her way of doing it had been.\n\nThey settled down at the small table, Rowan's back to the bar and Riley's friends.\n\n\"So, let me guess: you did not want to come out tonight but your friends dragged you.\" Rowan said it with full confidence, as if it wasn't a guess at all.\n\n\"What makes you think that?\" Riley didn't want to admit straightaway that she was right.\n\nRowan looked at her intently, as if she was trying to read her mind. \"You were going to read a good book, curled up on the sofa with your... dog.\"\n\nRiley couldn't help but smile. \"I was going to watch Netflix. And I have a cat, not a dog.\"\n\nRowan smiled smugly. \"I knew it!\"\n\n\"What gave it away?\"\n\n\"Oh, I don't know, maybe the fact that you kept checking your watch. Nice one, by the way.\" Rowan nodded at the chunky watch dangling off her wrist. It was Dan's and it was too big for her, but she loved it and he had let her keep it after they split up.\n\n\"Were you deciding what would be an acceptable time to fake inconsolable tiredness? Dreaming of a cup of tea at home?\"\n\nRiley laughed. \"Okay, you're onto me. That's exactly what I was thinking. I'm a terrible person!\"\n\n\"Not at all,\" Rowan grinned, \"so, give me the dirt. Why would a beautiful, young, straight...\" Rowan emphasised the word by raising a finger and pausing. Riley felt sillier by the minute for bringing it up. \"...girl rather spend a Friday night at home with tea than hanging out with her friends? What's wrong with them?\"\n\n\"There's nothing wrong with them. They are great. It's just that...\" She paused, wondering how to phrase it. \"They are so happy couple-y, you know?\" As soon as Riley said it, she realised she just stepped into a minefield of potential ways to over-share.\n\n\"And you are not happy couple-y?\"\n\n\"Do I look happy couple-y to you?\"\n\n\"Not right now, no.\" Again, that cheeky grin. \"But it could be that you left your happy couple-y other half at home.\"\n\n\"Nope, no such thing... just one half left of a not so happy couple.\" Oh yes, there it was, over-sharing like a pro. Riley wished she could take the words back as soon as she'd said them.\n\n\"Ah you know what, being a couple is overrated anyway. I personally love the freedom of being single.\"\n\n\"Yeah, I bet you do. So, what's your story? Is your free, single self here all by herself to hit on straight women?\" Over-sharing wasn't half as bad when it was reciprocated; perhaps she would take the bait.\n\n\"Amongst other things...\" Rowan laughed, \"it's always a bonus when I get to do that on the side. But no, actually I am here because she's my friend and I never get to see her because she's always working.\" She nodded towards the bartender.\n\n\"Well, you are doing a great job catching up with her.\" Riley couldn't help but tease a little.\n\n\"Touch\u00e9. I should go and apologise to her right now.\" Rowan didn't look sorry at all, grinning like a Cheshire cat at Riley's cheeky rebuke. \"Can I get you another drink while I'm at it?\"\n\nRiley looked at her empty glass in surprise. When did that happen? She had planned on staying only as long as it would take her to finish her drink, but now that the moment was here, she realised she did not want to leave yet. Just one more couldn't hurt, right? They were just bantering anyway, no harm done. She nodded and opened her mouth to speak but Rowan interrupted her.\n\n\"Let me surprise you. You liked that one, right?\"\n\nAt Riley's confirmation, Rowan sauntered off to the bar. Riley couldn't help but admire her confident swagger and the way she pulled off the masculine look. She could now see the lower part of her body, which was previously obscured by the bar and the table. She was wearing black leather biker boots and faded jeans that were probably meant to be fitted but hung quite loose on her narrow frame. One leg of the jeans was halfheartedly tugged in the boot, while the other had come out completely and hung frayed, dragging the floor. Riley's mum would have a fit if she saw that; Riley just smiled at the nonchalance of it.\n\nRowan leaned onto the bar to chat to her friend. Riley's eyes were drawn to the back of the jeans, now taut over a very firm looking butt. She couldn't take her eyes off it, all the while reprimanding herself for checking out a woman's ass. But, then again, there was nothing wrong with appreciating it from a purely aesthetic standpoint, right? If that was all it was, though, then why did Riley feel a blush forming on her cheeks and did her belly give a brief, restless flutter? It must be that cocktail. And they probably just cranked up the heating in the bar.\n\nAs Rowan returned with another cocktail for Riley and a whiskey for herself, Riley willed her cheeks to return to their natural colour and her belly to calm down.\n\n\"There you go. Cheers!\"\n\nThe cocktail was different from the last one; this one had a yellow to orange gradient and a slice of orange on the edge of the glass. Rowan seemed very pleased with it so Riley thanked her and took a sip. It was spicy, but still sweet, and had a pleasantly intense lingering aftertaste; it contained ginger and orange and who knew what else. It tasted like Christmas and summer at the same time, like good times that left happy memories, like all her favourite days of the year had all come at once. Even as she thought that, it sounded overly poetic to Riley. Yet, suffice to say, the cocktail was very good.\n\n\"Wow, that is nice!\"\n\nRowan looked at her triumphantly and chuckled. \"You like it then? I thought you would.\" Riley felt like she was missing the clue of some inside joke; surely it couldn't be this amusing that she liked the cocktail?\n\n\"Yeah, I do. What is it?\" She asked, slightly suspicious.\n\n\"Tell me, do you like it more than the previous one?\"\n\nSensing she was setting herself up for more secretive amusement, Riley admitted: \"Yeah, that other one was very nice, I could definitely have more of that too, but this one... I wouldn't have thought it from the look of it... I've never had anything like it, it's amazing!\"\n\nRowan tried to keep a straight face and tried her best to suppress another grin. \"It's quite something, hey?\"\n\n\"Okay, seriously, what's so funny about this cocktail? What is it!?\"\n\n\"It's funny that you like this one so much more than the other. Just a silly thing, but funny nonetheless...\" Rowan chuckled again.\n\n\"If you don't tell me what these are right now, I'm going to ask your friend over there. I'm sure she'll tell me, customer is king and all that.\" Kind of a lame threat, Riley realised, but hopefully it would still sway her.\n\n\"Okay, fine. The first one you had - which was nice and you could definitely have more of - is called a 'Lesbian virginity'.\"\n\n\"No way, you're making that up!\"\n\n\"Way, straight girl.\"\n\n\"There's no way that's on the menu of this place. This is not a gay bar, why would they have cocktails with such names?\"\n\n\"Ah, true. It's a speciality of a girls' bar in town, but my friend Megan there knows how to make it. She takes the occasional shift there too.\"\n\nRowan looked pleased with herself. So it was the names of the cocktails - and their implications - that she was so amused about. It was silly and immature of course, but Riley had to admit that it was quite funny. She felt a bit giddy thinking about her virginity - lesbian or otherwise - around Rowan. And this was only half of the joke. Did she want to know the rest? Exactly how deep in the gutter was Rowan's mind at this point? How deep would Riley allow hers to go?\n\n\"Very funny. So what's the other one?\"\n\n\"I'm so glad you asked. The second one, the one you're happily having right now... The one you think is amazing and you've never had anything like it... is called 'My merry gay first time'. Apt, no?\"\n\nRiley laughed despite herself, despite getting the feeling that their chatting and bantering was maybe less innocent than she had thought. Sure, it was a joke, but the underlying teasing and the repeated exaggerated, bordering on sceptical, use of 'straight girl' were not lost on Riley.\n\n\"Oh, that's very clever. What are you, a 14 year old boy?\" She said sarcastically.",
        "\"Only of mind, fortunately not of body. Plus, I have many more skills than any 14 year old boy.\" Rowan grinned. How did she make that sound so dirty? Riley's belly fluttered restlessly.\n\n\"I see so. I bet you use that cocktail trick on all the girls you're trying to pick up.\"\n\n\"Only the straight ones. Otherwise it doesn't quite work, does it?\"\n\nShe was quick; Riley told herself she had to up her game if she wanted to keep up with the teasing and jokes. Did she want to keep up? She had already stayed much longer than she intended, but she was having a good time. Better than she was having before she came over, that was certain. She immediately felt guilty for thinking this about her friends. This had nothing to do with them; they were just having a good time and it was her issue that she felt she didn't fit in there anymore.\n\nSomehow, sitting here with Rowan felt comfortable; chatting with her came natural and easy, and yet it all felt exciting and new at the same time. She did not want to go back to her friends. It was a dangerous thought, a slippery slope, but all of a sudden Riley knew that she wanted to stay.\n\nRiley realised she'd gone silent, lost in her thoughts. As if on cue, Rowan excused herself to go to the bathroom. Riley hoped she hadn't bored her with her silence, ruined the moment. As she sat fretting this, Sarah startled her by appearing by her side.\n\n\"Hey, how's it going? You two lovebirds look very cosy from where we are sitting.\"\n\n\"Sarah, oh my god, you gave me a fright! It's going well, I think. But she'll be right back...\" Riley could kick herself. She hoped Sarah hadn't heard her slip of the tongue. She just couldn't get into it right now, why the handsome man she'd gone to see was now a 'she' and yet Riley was still sitting here. She felt terrible about it, but she just wanted her friend to leave before Rowan came back. She'd explain later, as far as she could explain this. Sarah, fortunately, had that typical quality so often present in straight people, where they hear exactly what they would expect to hear from their straight perspective, in this case a male pronoun.\n\n\"Yes, yes, I'll leave you to it, if that's what you want. Just wanted to let you know that we're going to head out. We thought we'd see if you needed rescuing, but I think you're doing alright. I sent you a message earlier but I guess you were too busy to look at your phone.\" Sarah winked at her. She was right, Riley hadn't looked at her phone or thought about her friends at all from the moment she'd sat down with Rowan. Terrible person.\n\n\"Oh, that's so sweet, thank you. I'm fine, really. I'm just going to stay and chat a bit more. I'll take an Uber home.\"\n\n\"Sure thing, sweetie, have fun. Don't do anything I wouldn't do.\" Riley smiled, there was preciously little Sarah wouldn't do. She had calmed down considerably now that she was in a relationship, but it still wouldn't be a very limiting commitment.\n\n\"I won't,\" she said, \"now go!\"\n\nSarah had barely left the table and her friends were still putting on their coats when Rowan returned. Rowan glanced over and watched them leaving the bar. Riley wondered what she'd make of this. It looked like a good sign for her, that Riley had decided to stay when her friends left. Was Riley giving her false hope, feeding into her expectations?\n\nAt this point, she wasn't so sure anymore where she stood in all this. How false was Rowan's hope, if, indeed, she had hope? Riley just wanted to have a nice time chatting and maybe flirting a bit. Did Rowan still expect more? Some part of Riley wanted her to. But that was silly; she didn't want more from Rowan, so why did she want Rowan to want more? It was nice to be desired, for sure, but that was no reason to lead another person on. Yet, it felt so good to be here with her, sizing each other up.\n\n\"Sorry about that. Where were we?\" Rowan sat down again, all broad grin and cavalier coolness. Riley felt a surge of joy to have her back.\n\n\"We were talking about your tricks for flirting with girls in bars. Although I feel like I've seen a few already.\" Why did she have to bring the topic back to that? It was dangerous territory and Riley knew it, but why did it feel so exciting?\n\n\"Flirting? Who says I was flirting? With you? Why would I? You're straight.\" Again that cheeky grin and another 'straight girl' remark thrown in there, dripping with scepticism.\n\n\"I am straight. And yet you were flirting with me. You must be either very confident or very stubborn.\"\n\n\"Both... But we were just chatting. Saying some words... Flirting is so much more than words: it's body language, gestures, little touches, lingering looks...\" Rowan's dark eyes bore into Riley's blue ones and held her gaze. Riley's belly started doing somersaults and she was heating up rapidly. The blush was coming again, she could feel it. She thought her heart would be heard from across the bar, going double-speed and trying to work its way out of her chest. And it was all part of the game, she suddenly realised. Lingering looks: check. She quickly broke their eye contact.\n\n\"Okay, okay, I see what you mean! You made your point.\" She knew she was still blushing and didn't dare to look Rowan in the eye again, for fear she would give herself away. Rowan laughed and Riley couldn't help but laugh too.\n\n\"I can show you flirting, if that's what you want, straight girl.\" The gauntlet had been thrown down, the challenge was issued. Riley wasn't about to back down now. She was curious about Rowan's moves and she had nothing to fear; she was in on it, and she wasn't susceptible to a woman's game. Or at least, not when she could see it coming and was prepared, probably. She might even flirt back a little, just to show that two could play that game.\n\n\"Sure, show me what you got.\" Game on.\n\nRowan leaned forward and placed her elbows and underarms on the small table, significantly decreasing the distance between them, as if she was about to divulge all her secrets. Body language: check.\n\n\"Okay, so, Riley, tell me what you do for a living.\"\n\nRiley burst out laughing. \"That's your flirting, asking me about my job?\"\n\nRowan rolled her eyes at her. \"Humour me and roll with it, okay? I'll give you a feedback form after.\" Riley laughed, more and more appreciating the other woman's humour and wit.\n\n\"Okay, sure. I'm an IT security consultant, specialising mainly in Blockchain technology.\"\n\n\"Wow, now there's a conversation stopper.\" They both laughed. \"I've used a block chain a few times in the past, but that's probably not what you're talking about.\"\n\n\"Really, you have? In what application?\" Riley couldn't help being surprised. Rowan didn't strike her as someone who would enjoy cryptography.\n\n\"Some old motorbikes... Newer ones use roller chains usually.\" Riley was confused for a moment. \"Like I said,\" Rowan added, \"different kind of block chain: the 'get your hands dirty' kind. I'm a 'get your hands dirty' kind of girl.\"\n\nRowan grinned and raised her hands apologetically before putting them down again. Were they just a little bit closer to Riley than before, or did it just seem that way? Gestures: check. Riley did process this in the back of her mind, but she was distracted. Somehow this comment brought images to her mind of Rowan's hands on another woman's body. Where did that come from; that was certainly not what she meant?\n\nShe tried to get the image out of her head and inadvertently looked at Rowan's hands, which were casually resting on the table close to her, the tattooed right one and the blank left one, which instead featured a chunky silver band on her thumb. Her nails were short and mostly clean, but here and there a hint of black could still be seen: deep under a nail, at the edge of a cuticle. She really did get her hands dirty then. Riley was curious what she had been doing, but it seemed like the obvious question to ask and she didn't feel like giving in that easily.\n\nHer eyes were drawn to the tattoo. The back of Rowan's right hand featured a sort of intricate cog, which spread out over her fingers to smaller cogs, bolts, nuts, and chain links, all mechanically connected. The images were very realistically done. They were black and white but looked so three-dimensional that Riley subconsciously touched Rowan's index finger and lightly traced the depicted parts as if to make sure they weren't actually real. As her fingers moved along the circular shape of the cog towards Rowan's wrist, Riley wondered how far the tattoo continued under the leather jacket. Her imaginative mind conjured up an image of a fully inked muscular arm attached to a broad shoulder. This somehow started to raise her body temperature again.\n\nTrying to distract herself she looked up at Rowan's face and caught her broad, smug grin. Touching: check. What was she doing!? She recoiled from Rowan's hand and sat back with her arms firmly crossed over her chest. She clearly couldn't trust her own body parts. This would not happen again.\n\n\"So, what's the story behind those?\" She asked, casually indicating the tattoos, hoping Rowan wouldn't make a point of her careless transgression.\n\n\"They're motorcycle parts. I'm a motorbike mechanic. I love bikes,\" Rowan said, as if that explained everything. It actually did explain a lot; the 'getting her hands dirty' and the block chains, in any case.\n\n\"So you have parts tattooed all the way up your arm because you like racing around on bikes?\" Riley was fishing and she knew it, but she couldn't get the image of Rowan's bare arm out of mind. She cursed herself for getting flustered: over an arm, really? What was this, the middle-ages?\n\n\"Riding them, repairing them, caring for them, giving them a second life. I love doing that, as my job and in my spare time. But no, my sleeve isn't just motorcycle parts; it's several different aspects of my life that are important to me.\"\n\nSo it was a sleeve, that was so cool. Riley found herself unreasonably interested in what other things were important enough to Rowan to be made eternal on her skin. She couldn't help fishing some more, concealing it in jest in the hope Rowan wouldn't notice.\n\n\"What else do you have on there then? A portrait of your first girlfriend?\"\n\nRowan smiled, clearly aware of Riley's strategy. \"Nah, nothing like that. Maybe I'll show you sometime.\" Again, she caught Riley's gaze and held it, challenging her to a witty reply.\n\nSometime? What did she mean? There was only now, wasn't there? They were unlikely to bump into each other again. Was she implying they should see each other again? And her bare arms would be out? What else would be out? The idea of any part of Rowan's body no longer covered in the exact clothing she was wearing right now sent Riley's head spinning. She felt like a young boy who had found a dirty magazine but didn't quite know where to even begin. It was too much. She hoped Rowan wouldn't suddenly decide to take her jacket off; she wasn't sure she would cope. She told herself firmly to pull herself together, and realised to her horror that she hadn't replied in what felt like ages.\n\n\"Maybe I'll let you,\" she replied weakly. Rowan smiled again; she had won this one and she knew it.\n\n\"What do you like to do, Riley, when you're not securing or block chaining things?\"\n\nRiley was grateful for the change of topic. \"Oh, let's see. I play the piano. I started when I was young. You know how it goes: forced to take piano lessons and all that, but I started to really enjoy it as I got older and could choose my own music. Now I play mostly classical and jazz. I also really enjoy converting parts for different instruments to piano; it just changes the whole piece.\" Riley had jumped at the opportunity to talk about something different - something that would take her mind off naked body parts - and now realised she had been rattling as she caught Rowan's amused grin. She smiled apologetically.\n\n\"That's so cool. You must be very talented then, to be able to do that.\"\n\nRiley shrugged. She was good, she knew that, but she wasn't one to blow her own horn. And she wasn't very good at taking compliments, especially from gorgeous strangers. \"With enough practice, anyone will get good at anything, won't they?\"\n\n\"Definitely not.\" Rowan laughed. Riley's felt a surge of happiness caused by her compliment, even if she would never openly accept it.\n\n\"So, what piece would you play for me then?\"\n\nRiley didn't understand what she was getting at. \"What do you mean? When am I playing for you?\"\n\n\"What piece would suit me, you think? What would speak to me, or capture who I am, or however you artistic people say it? If I had my own theme song, what would it be?\"\n\nThat was such an interesting question. It caught Riley completely by surprise, both because she really had to think about the answer, and because she never would have expected such a question - deep and personal - from someone she'd just met. She took a moment to consider it. What would be Rowan's musical score?\n\n\"I think I would play Gershwin's Rhapsody in Blue for you. It took me a very long time to learn to play that. It's unusual but it's gorgeous. It marches to the beat of its own drum, and it's got so many different layers. It isn't quite like anything else out there, bold and unapologetically different. You wouldn't expect to like it at first, but you can't help but getting intrigued. It's quite a unique piece, really. It draws you in, deeper and deeper, and then... you don't ever want it to end...\"\n\nRowan looked at her intently, listening with her head tilted slightly to one side. Riley realised she had absentmindedly exposed her feelings, feelings she hadn't managed to put into words until now; until her words about the music and those about the woman sitting in front of her blurred, and she wasn't sure which one she'd been talking about anymore.\n\nShe looked down shyly, and was shocked to see that her fingers were intertwined with Rowan's. When had she moved her arms away from their safe position across her chest? How long had they been holding hands? Who had initiated that? Riley honestly didn't know. Had she subconsciously reached for Rowan's hand again while she was talking? After her earlier mistake with the tattoo, she wouldn't put it past herself.\n\nShe knew she should let go, but she realised she didn't want to. Rowan didn't seem to mind, her thumb lightly stroking Riley's hand. Riley's stomach was doing back-flips and she felt a familiar heat rise, not only in her face, but also in her lower body, making her squirm a little in her seat. She had felt this way before, but never for a woman. It was confusing and a large part of her was amazed she had not freaked out and run away yet. The thing that kept her from doing so was that her feelings, and her realisation of these feelings, had come on so gradually that they now felt comfortingly familiar, instead of frightening. That did not make it any easier to figure out what to do with these feelings, however.\n\n\"That sounds really beautiful. I'd love to hear it sometime.\"\n\nThere it was again, that 'sometime'. Did she really mean it, or was it just a matter of speech, like the all polite 'we must meet up soon' that actually meant 'we will never see each other again'. Riley didn't know what to say. She should lighten the mood with some teasing remark but she was drawing a complete blank. On top of that, Rowan kept looking at her with that intent, serious look, which shut down every cell in Riley's brain.\n\n\"I love how you can do that with things: find the perfect fit for a person. Like with music. I do the same with motorbikes. When people come to me for advice or to buy a restored bike, I always try to find the right match for their personality as much as their body type and activities.\"\n\nRiley was grateful that Rowan was at least still capable of continuing the conversation, and that she didn't linger on the intensity of that earlier moment.\n\n\"Oh yeah? You can do that? But a bike is a bike. I mean, no disrespect, but it's just an object. It's not a deep and emotional thing, like music is.\"\n\n\"Ouch... I can't even begin to tell you how wrong you are. And I'm just going to pretend you didn't just say that, to keep me from crying. Hang on, I'll show you. Do you want to know which bike you are?\"\n\n\"I'm not sure if that's a compliment, being compared with a vehicle, but sure, tell me.\"\n\nRowan took Riley's other hand and intertwined their fingers there too, as if she needed to make some sort of physical connection to read her personality before she could make a decision. Riley embraced the rush the additional contact gave her. Who would have thought holding hands with another woman could ever be this exhilarating?\n\n\"Okay, I'd say you are a Triumph Bonneville, a timeless classic. It's a fairly compact bike with sleek lines and intricate details; authentic, iconic, well put together. Its exposed mechanics and the engine block are a work of art; I love dismantling one of those. And it's surprisingly powerful too, when you ride it.\" Rowan grinned cheekily and Riley wondered if she, too, used her words for her companion and her chosen match interchangeably.\n\nRiley felt flattered by the description, and the idea of Rowan dismantling or riding her made her light-headed, but she was still sceptical. \"Yeah right, that all just sounds a little too smooth to me. I bet you say exactly the same to every girl.\"\n\n\"Wrong again. You couldn't be more wrong. So many girls, so many bikes! Each one is different. Each one needs something different.\"\n\nRiley wasn't sure how she felt about the 'so many girls' part; did Rowan do this with that many girls, or was it just a defensive statement?\n\n\"Prove it. What would you make of my friends, the ones that I came with? You saw them, you watched us for a while, didn't you? What bikes would they be?\" This could be a good test, Riley thought; how quickly would she be able to come up with something, even if it wasn't a good match at all?\n\n\"It wasn't your friends I was watching...\" Rowan paused and Riley couldn't help feeling like a smitten teenager, even if it might be more smooth talking. \"But okay, I can have a go, why not. Bear in mind that I don't know them, have never even spoken to them...\"\n\n\"Enough with the excuses, let's have it!\"\n\n\"Alright, alright. The redhead, what's her name?\"\n\n\"Sarah.\"\n\n\"Okay, Sarah, I think, is most like a Harley Davidson, a Sportser or a Softail. Powerful, strong, loud, present; both on the inside and on the outside. These types don't let anything or anyone stop them and bully their way through, whatever happens. They are difficult to handle at first; you need to tame them, find their Kryptonite. After that you can do what you want and you'll have them for life.\"\n\nRiley laughed heartily. \"Hey, that's really good, actually. That sounds just like her!\"\n\n\"Excellent. Convinced?\"\n\n\"Not quite. It could be a lucky guess. What about Jenny?\"\n\n\"The cute brunette? Hmmm... A Kawasaki Ninja maybe: beautiful and sleek, easy to get along with, smooth ride. It's lightweight, reliable, steady, but with enough pit to feel that you've got something special. This one is easy to love; once you try it, you can't help but like it. It's the 'bike next door', you could say.\"\n\nRowan looked lost in her thoughts for a moment and Riley felt a pang of jealousy. The description was very apt for the lovable Jenny, but it made Riley wonder if Rowan had just realised how perfect the other other girl would have been, instead of her.\n\nShe took her hands out of Rowan's and said slightly bitchily: \"Well, it's a shame she's left then, otherwise you could have hit on her next.\" As soon as she'd said it, she wanted to kick herself; she sounded so bitter, so awful. Fortunately, Rowan wasn't taken aback, but instead burst out laughing.\n\n\"Are you jealous?\"\n\n\"What? Why would I be jealous? It just sounds like you're quite impressed with her.\" Riley knew she wasn't fooling anyone, but she had to at least try to save face.",
        "\"Do I seem like the type to go for the 'girl next door' to you?\"\n\nEarlier in the evening Riley would have replied she seemed like the type to go for anything with boobs, but she wasn't so sure that was true anymore. She desperately hoped that wasn't true.\n\n\"I don't know...,\" she sulked, \"which is your favourite then?\"\n\nRowan raised one eyebrow and Riley realised it sounded like she was asking if she preferred her or Jenny. That was too close to home. \"What's your favourite bike, I mean?\" she added quickly.\n\n\"A classic Triumph Bonneville. I love all vintage but that one is my absolute favourite.\" It look Riley a moment to realise that this was the exact bike Rowan had compared her to.\n\n\"Of course it is. Smooth. You're just telling me what I want to hear.\"\n\n\"Oh, is that what you wanted to hear?\" Rowan grinned cheekily again and Riley realised she had shown her cards again. \"It's the truth, believe it or not. I am fixing up a gorgeous 1966 one at the moment. I bought her a couple months ago with the intention of restoring her and selling her, but I must say I've fallen for her, so I think I'll keep her. A few more days and she'll be done. I can't wait to take her for a ride.\"\n\nRiley wanted to find a subtext in there of Rowan talking about her rather than the bike: falling for her, taking her for a ride, but it was a stretch at best. Rowan seemed genuinely excited about the bike.\n\n\"I'd love to see it sometime,\" she said vaguely, returning the ambiguity but wishing it to be possible.\n\n\"You can come see it right now, if you want. It's in my workshop, not far from here\"\n\nRiley's heart stopped. This was the moment that had been hanging in the air. The decision point, where would they take it from here? They had been building towards it and Riley knew it would come eventually. In movies, it was so easy to seal the deal at this point. Just say the words and she could take this further than she ever thought she would with a woman. It was clear they were both up for it.\n\nAll the excitement of earlier, the heat that still coursed through her body, the adrenaline that had made her heart race and her head swim, slowly but surely turned into nerves. Sarah's words rang in her ears: 'Don't do anything I wouldn't do.' Would Sarah do this? It didn't matter, Riley knew, she was just looking for excuses, for a way out. She couldn't understand the bipolarity of her feelings. A moment earlier she had been full of desire for this extraordinary woman and had been fantasising about scenarios that involved nudity, 'dismantling' and 'rides'. Even though this desire was still present, she now felt mostly scared and she knew she couldn't go through with it. She wasn't ready for this.\n\n\"I don't think I can, I'm sorry,\" she muttered. She couldn't even come up with a plausible excuse, and she felt embarrassed for letting her fear get the better of her. Thankfully, Rowan smiled understandingly. Riley imagined she saw a hint of regret in her eyes.\n\n\"Okay. Well, either way, I'm afraid I'm going to have to take off. I have to work tomorrow, and it's long past my bedtime.\"\n\nRiley felt a surge of panic and sadness at the idea of Rowan leaving but she couldn't think of a single thing to say to make the attractive stranger stay.\n\n\"Maybe some other time,\" she said feebly, as Rowan stood up slowly but resolutely. Emptiness started to engulf Riley and she feared she'd made a big mistake. Should she have said yes? Or maybe if she hadn't made that comment about seeing the bike, they would still be chatting now? But deep down Riley knew that would only have been delaying the inevitable.\n\n\"Anytime, straight girl. It was a real pleasure to meet you.\" Rowan winked and gave Riley one last crooked smile, before she turned and walked off. She did not look back.\n\n* * * * *\n\nRiley was woken up from a blissful slumber by her phone screaming for her attention. She groaned and rolled over, annoyed to be rudely dragged away from what was turning into a very sexy dream. Whatever it was, it could wait. The phone rang for an eternity before giving up at last. Riley sighed with relief and tried to go back to her dream. Where did she leave it again? Ah yes, Rowan was just about to kiss her...\n\nThe phone started ringing again. Riley tried to ignore it, but couldn't stop images forming in her head of emergencies that needed her immediate attention. She'd better take this, in case it was urgent. What if something had happened to her granny?\n\nHer phone wasn't in its usual location next to her bed. Where was the damn thing? Reluctantly, she got out of bed. The cocktails of the previous night rose to her head like a hammer blow and made her whimper. Those things certainly were potent. Memories rushed back to her and she smiled as she thought about the handsome stranger that had managed to wrap her around her tattooed finger. She also remembered coming home and being in a hurry to get her trousers off to relieve some of the tension that had been building up in her body all night.\n\nShe found her jeans on the floor where they been discarded and felt in the pocket. Bingo. Her phone vibrated furiously as if protesting her prolonged refusal to acknowledge it. The screen informed her Sarah was called. Riley sighed. She was not ready for that, but she knew her friend too well to hope this would go away. Reluctantly, she answered the call.\n\n\"Morning, Sarah.\"\n\n\"Riiiiii!! At long last! Why weren't you answering your phone? Were you still having sex?\"\n\nRiley couldn't help but smile at her friend's presumption. If only. \"If I was, wouldn't that be a very good reason not to pick up the phone?\"\n\n\"That's why I gave you time to finish up. Alright, start talking, spill the beans. How was he?\"\n\n\"There really isn't anything to...\"\n\n\"Hang on, I'm here with Jenny. I'm going to put you on speaker,\" Sarah interrupted her. Riley rolled her eyes. Of course. Sarah and Jenny went out for yoga and a picnic breakfast in the park stupidly early every Saturday morning. They must have just finished the yoga part and decided to try calling her while having the super-food smoothie and half a grapefruit that constituted their breakfast. Riley had no idea how they could survive on that. Or at least survive until they had three leaves of lettuce and a slice of cucumber for lunch. This was part of the reason Riley stopped going along to their outings - apart from the obvious fact that weekend sleep-ins were sacred - she needed something much more substantial in her stomach to prevent her from keeling over, and she just did not want to deal with the judging looks.\n\n\"Hi Ri! How's the dreamy lover?\" Jenny was clearly trying to stay reasonably calm while secretly bursting with excitement.\n\n\"Where are you? Are you at his place? Is he with you?\" Sarah lowered her voice for the last question, as if that would have made any difference if there was someone with her.\n\n\"I'm at home. Alone. I was sleeping.\" Riley yawned for emphasis.\n\n\"So what happened? Did you sleep with him?\"\n\n\"I didn't. I went home.\" Riley was relieved that so far she had gotten away without having to use any gender-specific pronouns. She hadn't decided what she was going to tell them. How could she even begin to explain that the dreamy man had turned out to be a gorgeous woman, who had intoxicated her with her masculine swagger. That she wasn't sure how she felt about her; how tempted she had been by her; how somehow she now even regretted not going with her.\n\n\"Oh Ri... What happened? Didn't you like him? He was definitely gorgeous, and you guys seemed to be getting on well...,\" Sarah asked incredulously.\n\n\"No, it's not that...\" This was the moment; should she tell them? \"... He was great.\" Coward. Annoyed with herself that she couldn't own up to it, and with life in general because she wished there was anything more exciting to tell her friends, she added: \"Look, I'm not just going to jump a stranger in a bar, okay?\"\n\n\"You're right, sweetie. You shouldn't do anything you're not comfortable with. And, besides, that has never been your thing. It's more yours, Sarah,\" Jenny teased.\n\n\"Oh, you bitch! At least I get some action. Well, now there's only Finn, of course.\" Riley heard them giggling in the background, probably throwing a playful slap here and there.\n\n\"But you did like him then?\" Jenny steered the conversation back.\n\n\"Yeah, I did... it was really great, actually. We really hit it off. And it just felt so natural and comfortable talking, you know, as if we'd known each other for years. But also all new and fascinating at the same time...\" As Riley reflected, she realised just how much she had enjoyed talking to Rowan last night, and how taken she was with the mechanic.\n\n\"Oh, someone sounds a bit smitten! Are you going to see him again?\" Jenny clearly wanted to continue her ideal view of the romance.\n\n\"I don't know. I...\" The realisation hit her like a sledgehammer and she was surprised at the sadness that seemed to reach her very core. \"I don't have a phone number.\"\n\n\"Oh... But he has yours, right?\"\n\n\"No...\" Riley felt like crying; why had she not thought to ask for a phone number? Somehow it just hadn't occurred to her. From the start, she had never expected to be attracted to Rowan, nor had she considered their time together as the start of something more. Now, however, she realised she was starting to see things a bit differently.\n\n\"He didn't ask!?\" Sarah either thought this was a bad sign, or the guy was stupid for not asking. Being the supportive and overly confident friend she was, it was probably the latter.\n\n\"No. I guess it was a bit rushed at the end.\" Riley did not want to tell them that Rowan had invited her over but she had declined.\n\n\"Well, let's not panic yet. That's why there is social media. What's his name?\" Sarah was obviously not ready to give up. Riley smiled as she recalled Rowan's comparison of her friend to a Harley Davidson. How right she was.\n\n\"Rowan,\" Riley said, relieved it was such a unisex name. The consolation was short-lived as she realised that if they did find her on social media, they would surely see she was a woman.\n\n\"Rowan...\" Jenny repeated the name reflectively, as if tasting an exquisite wine.\n\n\"That's it? No last name?\" Sarah was clearly less impressed.\n\n\"I don't know it.\" Riley felt like such an amateur.\n\n\"Oh Ri... We need to teach you a thing or two if you're going to be successfully single. These are rookie errors, you know,\" Sarah reprimanded, before turning to the search: \"Alright, we'll just have to try. Let's see if he's on Insta first...\"\n\nRiley rolled her eyes. Obviously, the sacred Instagram. They probably still had the app open on their phones from posting pictures of their smoothies earlier, carefully positioning them at the edge of a yoga mat and hashtagging them 'blessed' or 'grateful' or 'yogalife'. Riley would never understand the obsession with the platform and seriously doubted Rowan would be the type to post things like: 'Fixed another bike. #wornoutchain #greasyhands #ontheroadagain #selfie #mechaniclife'.\n\n\"Hmmm... no promising hits on the name anywhere, no check-ins on Facebook, nothing on the bar's page, no tweets, nothing! Your guy is a ghost.\" Sarah sounded like she'd just discovered that there were still Neanderthals living in caves under the city.\n\nRiley wasn't the least bit surprised, but no less disappointed, by the lack of clues. \"Yeah, I didn't think so. That's too bad,\" she said, sounding more nonchalant than she felt.\n\n\"You can always revert to old-fashioned stalking and see if he shows up at the bar again,\" Jenny sighed, clearly devastated.\n\n\"I don't think I'm that desperate,\" Riley countered, not sure that she wasn't.\n\n\"Alright. Well, girl, next time you meet a hot guy, ask for his damn number, okay? We want you to get laid - you deserve it!\"\n\n\"Thanks, Sarah. Duly noted. I have to go. Speak soon, okay?\" Riley felt the true gravity of her situation sinking in: she had no way to get in touch with Rowan; no chance of seeing her again. She quickly ended the call, worried she was going to burst into tears.\n\nAs her friends had been talking, Riley had had one final idea; no more than a straw to grasp. With trembling fingers she opened her browser on her phone and typed Rowan's name into Google, along with the name of their town, and 'mechanic'. She scrolled through the results. The search engine informed her that in most of them the keyword 'Rowan' was missing; very helpful. As she had feared, there was nothing that pointed in the right direction. Next, she looked for motorbike repair shops and garages in town. There were many, and Riley wasn't even sure she worked in this town. It was hopeless. Riley threw her phone on her bed in frustration and told herself she would just have to forget about it.\n\nAs the weekend came and went and the new week began, Riley tried to get on with her life and not think about Rowan. It was a little bit easier from Monday, as she could drown herself in work. She did get terribly distracted regularly, especially when someone mentioned Blockchain. The handsome mechanic had a way of intruding into her thoughts, regardless of topic or relevance. She saw a motorbike: she thought of Rowan. She saw someone with a tattoo: she thought of Rowan. She heard a nice piece of music: she thought of Rowan. She met a new client: she thought of Rowan. Every time this happened, she momentarily got lost in reliving whatever memory of Rowan was provoked, before severely reprimanding herself and trying to oust the gorgeous stranger from her head.\n\nAs much as she had first told herself she was just curious, intrigued by this confident, strong woman. She couldn't keep lying to herself for very long; every time Rowan popped into her head, she felt nervous, happy, and strangely aroused at the same time. It boggled her mind - she had never had feelings like this for a woman before - but she couldn't deny it. She had fallen for this woman, and hard. She could not shake her desire to see her again. She pined for her, despite having no way to make this happen.\n\nIt was a message from her mum on Wednesday night that irrevocably ignited a spark of hope. The message was a typical 'just checking in because I never hear from you' and came in around 7.30pm. Riley sent a quick reply saying she was still at work finishing something for a client; she would call on the weekend. Almost immediately her mum replied she should go home soon; she was always working and should be careful of burning out.\n\nA whirlwind of memories came rushing in all at once. She was always working, her mum had said. Rowan had said the same on Friday night about her friend, who was tending the bar. That was why Rowan had been there in the first place, to see her friend. A friend who undoubtedly knew more about Rowan than Riley did, for example her last name, her phone number, or where to find her.\n\nLittle cogs - much like the ones tattooed on Rowan's hand - were turning in her head: she could go and ask Rowan's friend, Megan she believed was her name, for her phone number. Of course, there was a real chance she would come across as a stalker or a desperate, lovestruck puppy. Besides, Megan also worked occasionally at some girls' bar in town, of which Riley did not know the name or address; she might not even find her.\n\nRiley tried to tell herself that this lay in the realm of stalking, and was definitely the opposite of playing it cool and forgetting about Rowan. However, now that the seed had been planted, her excitement about the possibility of seeing the enigmatic stranger again had been growing like a weed, and had completely taken over all coherent thought.\n\nAfter the umpteenth mistake at work the next day, she reasoned with herself that she had to get this behind her one way or another. She simply could not carry on like this, getting all worked up about the captivating woman and wondering 'what if...?' for the rest of her days. She decided she would give it one shot with the bar: if Megan was there and helped her, she would see Rowan again; if Megan wasn't there or anything else went wrong, she would forget about Rowan and move on. She realised the first possibility terrified her, but it was nothing compared to the panic that rose at the thought of the second possibility.\n\nThat evening Riley went back to the bar. She figured that if she postponed, she would lose her nerve. As she entered, she immediately recognised punky-haired Megan behind the bar. She hadn't really paid her any particular attention last time, let alone consider her sexuality. Now, with her straight-bias blinkers removed, she couldn't help but think that with her bright pink spiky hair and angelic face, Megan must be quite the catch in the lesbian scene too.\n\nRiley walked up to the bar hesitantly, still not sure how she was going to play this. It wasn't busy and Megan came over to her straight-away. If she recognised Riley from the other night, she didn't show it.\n\n\"What can I get you?\" she asked with a friendly smile.\n\n\"I'll have a beer, please. That one.\" Riley pointed at the tap closest to her: a lager of some sort. She could do with some Dutch courage while she figured out how to approach this.\n\n\"No exciting cocktails for you tonight then?\" Megan grinned knowingly, as she started pouring the beer. Riley was mortified; she thought she would have a bit more time to prepare. Clearly Megan knew exactly who she was, and she had to hit the floor running. She laughed, hoping it wouldn't sound too forced.\n\n\"Oh god, yes of course,\" she started, as if she only just remembered, \"that was a good joke! And very tasty too. You made them, right?\"\n\n\"Yup. Glad you enjoyed them. Rowan was quite pleased with herself for that one.\" So the conversation had gone straight to their mutual acquaintance; no room for further planning.\n\n\"I bet she was. She's probably played that trick with dozens of girls, hasn't she?\" Riley couldn't help but ask the question, hoping she didn't sound too pathetic.\n\n\"Not that I know of...,\" Megan started, raising Riley's spirits, \"she usually tries to get them drunk asap.\"\n\nRiley was horrified. It must have shown in her expression because Megan started laughing. \"I'm kidding! God, look at your face.\" Riley laughed too, albeit a bit forced. She couldn't help but notice how both Rowan and Megan had skidded around the question of Rowan hitting on many girls.\n\n\"Although... you must have done something right for her to bring out the big guns,\" Megan added calmly. She shrugged and started cleaning the bar.\n\nRiley heart jumped, filled with hope. \"Did she say anything about me?\" she asked, trying to sound casual. She could hear a slight nervous quiver in her voice, but she hoped Megan wouldn't notice.\n\nMegan paused to look at her. \"She said you were straight...\" She raised an eyebrow as if challenging a response, then continued wiping the sink and added: \"But she figured you were a spaghetti girl.\"\n\n\"I am straight,\" Riley countered, although she had long stopped believing it completely. \"What's a spaghetti girl?\"\n\nMegan grinned. \"Never mind, it's a crude joke.\"\n\nRiley made a mental note to look up what it meant, as Megan walked off to serve another customer. She did a quick evaluation of what she had accomplished so far: not very much, apart from a vague notion that she may have received some sort of special treatment from Rowan. However, she was no closer to getting in contact with her. She needed to take it up a notch if she was going to get some concrete information. She continued drinking her beer while considering her options. After she'd downed the last bit, she waved Megan over.\n\n\"Can I get another one, please?\"\n\n\"Sure.\" Megan started pouring her drink, as Riley tried to amp herself up to make the next move. She tried to get some words - any words - out of her mouth but couldn't find a way to make them sound nonchalant.",
        "\"Here you go. Can I get you anything else?\"\n\n\"No, thanks,\" Riley started, before realising this was her chance. \"Oh wait, maybe, actually...,\" she struggled, ruining her chance to come across casual. She soldiered on: \"Would you mind giving me Rowan's phone number? She wrote it down for me but I accidentally washed it with my jeans.\" Riley was quite pleased with herself: it sounded completely plausible and added an air of nonchalance in that she hadn't particularly treasured the piece of paper.\n\n\"She wrote her number down for you? Really?\" Megan looked at her with a combination of disbelief and amusement.\n\n\"Yes,\" Riley said slowly, getting a bit worried about this strange reaction. \"On a piece of paper,\" she added, as if that made all the difference.\n\n\"Rowan never gives a girl her number.\"\n\nRiley panicked. Never, never? Or was this another facet of her player routine, and would she only give it to the ones for whom she'd also bring out the big guns? \"She gave it to me,\" she said defiantly, emphasising the 'me', and added a unconcerned shrug, as if to say it didn't matter much either way.\n\n\"I don't think so...,\" Megan said pensively, scrutinising Riley as if waiting for her to come clean. Riley was starting to get the dreadful feeling she was missing something. She didn't know what else to say so she just gave the bartender a questioning look. Megan took her time before replying, increasing Riley's nerves by the second.\n\n\"Rowan doesn't use her phone. There would literally be no point in her giving you her number,\" she said eventually, with a grin that said 'I'm on to you'.\n\nRiley felt utterly deflated. What kind of cave person did not use their phone? Surely that couldn't be true.\n\n\"What do you mean, she doesn't use her phone?\"\n\n\"She just doesn't. I guess she can't really while she's working: dirty hands and all that. But even after work, she's a terrible communicator. I think she's messaged or called me three times in the last year. Most of the time she doesn't even know where her phone is. She's more of a face-to-face kind of person.\"\n\nRiley couldn't believe it. She had no idea how to go from here. Clearly, Megan had seen straight through her white lie and there was no way she could pretend it was the truth.\n\n\"But... how do people get in touch with her?\" she asked feebly, truly not seeing any other way.\n\n\"You mean, how do you get in touch with her?\" Megan was clearly amused, snickering to herself, until she saw the desperation on Riley's face. Her expression softened. \"Damn girl, she got you good, hah?\"\n\nRiley sighed and admitted: \"I guess so.\" She put her head in her hands and stared at her beer. She did not want to sulk in front of Megan, but she felt like her world had come crashing down. This had been her last chance of establishing contact with Rowan, and now it was gone.\n\nMegan shook her head ruefully. \"She has that effect on girls.\" She paused, while drying a pint glass with a cloth. Riley wondered suddenly if Megan spoke from experience. She tried to shake the image of Megan and Rowan together. If that was Rowan's standard, she stood no chance.\n\n\"Look, if you really want to see her again, just pop by her workplace. I'm sure she'd like that.\"\n\nRiley looked up from her sulk with an equal mix of pure joy and sheer panic at the thought of being reunited with the woman of her wet dreams. She had pictured herself carefully composing a cool and witty message to Rowan and slowly building up a stream of flirty communication over the phone. Instead, she'd have to physically face her, and prevent herself from being swept off her feet. She wasn't sure she would be brave enough to do that. Megan must have caught her expression; she laughed and added: \"She's really not as intimidating as she looks.\"\n\nRiley's reply got stuck in her throat and she quickly took a swig of beer. She looked helplessly at Megan, unsure of what to say.\n\nMegan smiled empathetically. \"Her garage is called 'Ride Again'. It's on Highland Road; green sign, you can't miss it. She works Mondays to Saturdays until 6pm. Oh, and she lives in the apartment above the garage, in case you don't find her in the workshop.\"\n\nThe thought of meeting Rowan in her home made Riley's heart race and her throat go even drier. \"Thank you,\" she croaked, trying to shake distracting images of Rowan's bed.\n\n\"You're welcome. Don't stress it, okay? See how you feel.\"\n\nRiley nodded, grateful for Megan's understanding. She thought for a second and then spoke up: \"Would you mind not mentioning to Rowan that I stopped by?\" She would be horrified if she didn't go and Rowan found out she was too scared.\n\nMegan seemed to understand this too; she just nodded and said: \"Sure, no problem.\"\n\nRiley thanked her again, paid for her drinks and left. She had a lot of thinking to do.\n\n* * * * *\n\nRiley stood opposite the 'Ride Again - Motorbike Mechanics' garage, observing from a safe distance on the other side of the street. It was Saturday late afternoon, just over a week after she had met Rowan; two days since she'd found out where Rowan worked, and that this was her only chance to get in touch with her. Although she would have much preferred to slowly pick up the contact over phone messages - like normal people would - her desire to see Rowan had overcome her fear and she had made her way across town.\n\nYet, she had been standing here a while, her legs unwilling to move and cross the road. She tried again to kick herself into motion. She had made it this far, gone through all this effort; what would be the point if she backed out now? Still, she was nervous and, even now, doubted every decision that led her here: from her initial luminous idea to speak to Megan, to the clothes she had decided to wear. What if she read all the signs wrong and this was all a big mistake?\n\nShe'd spent considerably more time on her appearance than the last time she'd seen Rowan. This was unusual for her, but somehow it felt hugely important how she looked, as if it could make the difference between Rowan throwing herself on her, or throwing her out of her shop. So she had carefully done her hair, which now fell in straight blond locks around her face. She had put on some mascara and lip gloss, and chosen a cute short, blue summer dress that showed her off her legs and her slim waistline, and had ample cleavage to make her boobs look great. She had paired this with her black Dr. Martens boots to create the impression that she wasn't just some girly 'girl next door'.\n\nRealising that standing here longer was only making her more nervous, Riley took a deep breath and crossed the road. She tried to look through the window in the door but could not see much. Scared to be seen peeking, she pushed the door open and a little bell announced her presence as she walked in.\n\n\"Take a seat, please, I'll be right there!\" Rowan's distinct husky voice called out cheerfully.\n\nFighting the urge to run out again, Riley looked around. There were three plastic chairs between the door and a counter with a cash register on it. That must be where she was meant to sit down. Opposite the door the rest of the workshop stretched out. The walls were covered with tools and spare parts, interspersed with vintage metal ads for motorcycle brands and bike licence plates from all over the world. In the centre of the room stood a partly disassembled bike - clearly the current patient - and a few more bikes could be seen towards the back of the room.\n\nRiley considered sitting down, but wasn't sure if she could keep from seeming too keen. She tried to act casual and take a look around. As she wandered a bit further into the workshop, she saw a scuffed pair of tan Timberland boots sticking out from behind the disassembled bike. Her heart skipped a beat; there she was! Riley back-peddled and turned away quickly, pretending to be very interested in a license plate from Barbados. A moment later, Riley heard Rowan get up. She kept staring at the plate, sticking with her 'playing it cool' routine while her heart raced.\n\n\"Right, that is that... Now, how can I help you?\"\n\nRiley turned to face Rowan and took in the full sight of the handsome mechanic. She was wearing baggy blue coveralls that were rolled down, the sleeves tied around her waist. Above that she wore a white tank-top, through which a black sports bra was showing. Riley's eyes were drawn to her small, perky breasts, which had been well hidden the last time they met. She had never looked at a woman this way before, but the sight of them made her insides flutter.\n\nEqually drawing her attention were Rowan's muscular arms and broad shoulders, which Riley had been envisioning earlier, along with her tattooed sleeve, which covered her right arm from hand to shoulder. The tattoo depicted various things that were important to Rowan, she had said. Riley could see part of a clock, a mountain, and a musical instrument, possibly a saxophone. Feeling herself get lost in the intricately inked details, she had to consciously will her eyes to move on.\n\nRowan wore half-finger black leather gloves and was wiping the exposed tips of her fingers on a dirty rag. That wouldn't make much of a difference to her overall appearance; there was more grease on her top and even a smear on her face from where she'd pushed her unruly hair out of her face. She looked scruffy and dirty, but the total picture was irresistibly sexy. Riley suppressed a deep urge to rush forward and press her lips to Rowan's.\n\n\"Well, hello there, straight girl.\" Rowan grinned broadly when she recognised Riley. Her eyes moved along Riley's body, taking in her well-considered appearance. Appreciation coloured her gaze, as she paused on certain parts of Riley's body. If a man had done that to her, Riley would have considered him a creep, but somehow when Rowan did it, it made her go weak at the knees.\n\n\"Hi...\" Riley struggled to remember anything she had wanted to say. She had prepared a story but was drawing a complete blank. Her cool routine had failed already.\n\n\"Do you have a problem with your motorbike I can help you with?\" Rowan asked sceptically, still grinning.\n\n\"Erm... I just came across your shop and thought I'd pop in... to see that bike you mentioned.\"\n\n\"You just came across my shop?\" Rowan raised one eyebrow and looked at her disbelievingly.\n\n\"Yeah, I was in the neighbourhood.\" Riley knew it sounded unlikely; Rowan's shop was in a suburban area, hardly the place one just happened to walk around in.\n\n\"Okay, sure,\" Rowan indulged her. After a moment of silence, she added, as if it was a mere afterthought, \"hey, how did you know where I worked?\"\n\nRiley had hoped Rowan wouldn't question this. She did not want to admit having gone through the trouble of asking her friend; she did not want to seem that desperate. \"You told me,\" she tried, mumbling it quickly, knowing she was on thin ice.\n\n\"No, I didn't.\" Clearly very entertained by the situation, Rowan was not letting her off that easy. She looked at Riley expectantly and waited for another explanation.\n\nRiley sighed. Rowan wasn't going to let this go. She could see why Rowan and Megan were friends; they were like two peas in a pod. \"Okay, fine, I went back to the bar and asked Megan.\"\n\n\"Ah, of course... Well, I'm impressed by your determination and resourcefulness.\" She looked more amused than impressed, and Riley found it hard to gauge how she really felt. Was she flattered and happy Riley was here? Or did she think she was some weird stalker? She had clearly liked the look of Riley, but other than that admiring stare, she hadn't given any explicit signs of appreciation for Riley or her presence here. She was much better at playing it cool than Riley was, that was certain.\n\n\"I was just curious about the bike, that's all. The one you were restoring... Is that it?\" Riley pointed at the bike in the middle of the room, desperate to change the topic, since jumping each other at first sight was clearly off the menu.\n\n\"No, that's a Honda.\" The unspoken 'obviously' hung in the air before Rowan added, \"I'm fixing it for a customer. A bit of a problem child, that one. The Triumph is over there. Come on.\" She gestured for Riley to follow and walked over to the three bikes in the back of the room.\n\n\"This is her. Isn't she a beauty?\" Rowan pointed to an orange and white vintage-looking motorbike, \"A 1966 Bonneville T120R Roadster, in great condition.\" She put her hand on the bike lovingly, and Riley wished she could trade places with the old-timer.\n\nRiley didn't know anything about bikes and she wasn't really here for the bike, obviously. She hadn't prepared for appearing knowledgeable and genuinely excited about the vehicle. It didn't really matter: Rowan was surely onto her real motives anyway, even if she was playing along with the cover story.\n\n\"It's very nice. It's like looking in a mirror,\" Riley commented, referring to Rowan choosing this bike as Riley's motorcycle alter-ego, the one that would best fit her personality.\n\nRowan laughed heartily. \"Isn't it? She may be quite a bit older than you, but she's still got it.\" Her hand stroked the leather seat. \"I finished her this morning and I was planning to take her for a test drive now, actually. Do you want to come along?\"\n\n\"Erm... sure.\" Riley had never been on a motorbike before and was a nervous about getting on one with her heartthrob. However, before coming here, she had told herself to be brave and not back down this time, whatever came her way.\n\n\"Although...\" Rowan looked at her again. \"That's not going to work...\"\n\nRiley wasn't sure what she was talking about and looked on confusedly as Rowan walked off. \"Hang on, I think I have...\" She rummaged through a coat rack. \"Yes, here we are. That will fit you.\" She handed Riley a leather motor suit.\n\n\"Oh...\" Riley wasn't sure how she was going to wear that over her dress. \"Is that really necessary?\"\n\nRowan shrugged. \"I don't want to have to scrape your soft skin off the tarmac if anything happens.\"\n\nRiley's brain couldn't decide whether to focus on the fact that Rowan just talked about her soft skin, or the 'scraping off the tarmac' part. Her nerves about being on a bike flared. \"But nothing is going to happen, right?\" she asked, trying to keep the fear from her voice.\n\nRowan realised she had scared her. \"I've never had any accidents and I'm not planning on having my first today. Call me paranoid, but I've seen what coming off a bike does to people who are not dressed properly, and it's not pretty. I would never forgive myself if that happened to you. So please, just wear it, for me?\"\n\nRiley would do anything for Rowan, especially if her request was paired with that intense pleading look in her dark eyes. \"Okay, fine. Is there anywhere I can change?\" There was no way she was going to hike up her dress unceremoniously in front of Rowan.\n\n\"Oh, yes, of course. You can go in the back, over there.\" Rowan pointed her towards a door to the right.\n\nAs Riley got to the door, she spotted the calendar that was hanging from it. For August, a naked pin-up with big breasts stood bent over a chair, looking into the camera with a 'fuck me' face. Riley couldn't suppress a snicker. Rowan was such a stereotype.\n\n\"Hey, do you have colleagues working with you here?\" she asked casually, paused at the door.\n\nRowan wasn't looking at her, getting the bike ready. \"No, just me.\"\n\n\"So this is your decorative touch then?\"\n\nRowan looked up and saw her standing, leafing through the calendar. She grinned. \"Oh, no, that's for the customers. They like that kind of stuff.\"\n\n\"Sure, sure...\"\n\n\"Yeah, and it's also an image thing, you know. You're not a real mechanic without some boobs in your workshop. People just wouldn't take me serious.\"\n\n\"You're so full of shit, Rowan,\" Riley laughed.\n\n\"And you're not changed yet. If you don't get your pretty little ass dressed quickly, I'm going without you.\"\n\nStill snickering, Riley walked into a small office with a desk and some gym lockers along the wall. She was tempted to peek inside the lockers, but thought better of it. She considered her options for putting on the suit: pulling it over her dress or taking the dress off and wear nothing but the suit. With the first option her dress would be bunched around her waist and would certainly get creased; the second felt overly salacious. Rowan did just mention her pretty little ass, though, that was a step in the right direction at least.\n\nAfter a moment's hesitation, she pulled off her boots and her dress: salacious it was. That was what she was here for, wasn't it? In just her thong and matching bra - a lovely blue and black lacy set that she'd recently bought but had never worn - she stepped into the suit. The leather felt cool on her skin and the suit was a good fit. She left the zipper open to just past her bra strap, showing great cleavage. It was slutty - and not like her at all - but she wanted Rowan to know she wasn't wearing anything underneath. Time to take this thing up a notch.\n\nWhen she came back into the workshop, Rowan had put on a leather jacket and Riley noticed that she had also managed to clean the grease off her face. She stopped in her tracks when she saw Riley in the leather suit. Her gaze lingered on her cleavage, practically undressing her with her eyes.\n\nShe inhaled visibly, and said: \"That's a good fit. I'm glad.\" Her voice sounded slightly strained as her eyes once again dropped from Riley's face to her breasts. \"You're going to have to zip that up, though.\" She turned away and muttered, only just audible, \"unfortunately\".\n\nRiley smiled. This was enough for now; she had managed to break through Rowan's cool routine and got the mechanic to show her appreciation, her desire even. She zipped up the suit with a sly grin. \"Whatever you want. You're the expert.\"\n\nRowan rolled her eyes at her as if to say it wasn't what she wanted at all. She gave Riley a helmet and put one on herself. Riley realised this was going to mess up her hair but it couldn't be helped. She squeezed her head into the helmet as Rowan pushed the bike out through the garage doors. She flipped the store sign from 'open' to 'closed' on her way.\n\nA moment later they were both seated on the bike. Riley was slightly disappointed to find out that there was plenty of space on the leather seat so their bodies weren't quite touching. It was probably for the best; the mere presence of Rowan's body between her legs was already significantly increasing her body temperature and making her insides jump.\n\n\"Hold on. Here we go.\"\n\nRiley couldn't see anywhere else to hold on to, so she put her hands on Rowan's hips, triggering another a surge of heat radiating through her body, lingering between her thighs. The bike vibrated underneath her as they picked up speed and Riley started to understand why people liked riding motorbikes so much. Straddling the powerful machine, the leather of the suit stretched taut over the soft fabric of her thong and the sensitive skin underneath, she could feel every movement of the bike, every variation in the road. It had a tantalising effect and Riley felt her body responding. Feeling herself moisten quickly, she started to worry about soaking through her thong and leaving her mark on Rowan's suit, but she couldn't help giving into the sensations that were coursing through her body.\n\nThey soon reached a long empty road. \"Let's see what she's got. Hang on tight!\" Rowan shouted over her shoulder as she opened the throttle. The bike jumped forward and Riley realised she hadn't experienced a fraction of its power yet.\n\nFeeling unsafe with her loose grip, she wrapped her arms around Rowan's waist and slid forward, pressing her body against Rowan's to anchor herself. In her head, she could see Rowan smiling now; this was probably what she was going for. Riley couldn't complain either; being pressed into the gorgeous woman, her legs on either side of her, was a huge turn-on. It was all Riley could do not to let her hands wander and explore Rowan's body right here and now. It was probably a bad idea to distract the driver, so she just held on tight and enjoyed the physical contact, with all its associated feelings coursing through her body and mind. She was grateful for all the layers of leather separating them; if it weren't for them, Rowan would certainly feel the heat radiating from between her legs.",
        "After too short a time to Riley's liking, they were back at the garage and Rowan was guiding the bike back inside. As they took their helmets off, Rowan slid her hand through her hair and, of course, it looked perfect. Riley could only hope her helmet hair wasn't too bad.\n\n\"What did you think? Not bad for an old lady, hey?\" Rowan looked like a child on Christmas day.\n\n\"She's definitely got spirit,\" Riley indulged her. Now that she had stood up, she felt the result of her excitement rushing down. She pressed her thighs together and tried to alleviate the distracting, yet delightful, throbs. She wondered what to do next. Being so new to the girl meets girl thing, she had no idea what would be acceptable, or successful. Should she make a move? Should she wait for Rowan to act?\n\n\"I just need to check one thing... I heard her stutter a bit at one point...\" Rowan was talking to herself more than to Riley and was disappearing behind the bike. Riley just stood hesitating, unsure of herself, for what felt like an eternity, while Rowan busied herself with a ratchet. It seemed that the moment where she thought she'd captured Rowan with her slutty biker chick look had passed. She'd lost the mechanic to her motorcycle alter-ego. Or perhaps she'd misunderstood everything all along, and Rowan was more into bikes than girls altogether.\n\nFor lack of better ideas, Riley decided to change out off the motor suit. Back in the office, she stripped and saw that a remnant of her excitement was indeed left behind in the suit. It couldn't be helped. She considered walking back out in her lingerie; that would get Rowan's attention, wouldn't it? But what if it didn't, or what if she didn't like it; Riley would be devastated. She decided against it; it was too risky for her fragile self-esteem. She pulled her dress and her boots back on, and tried to revive some volume in her hair using a tiny rusty mirror by a sink in the corner of the room. How could Rowan even see her face in this?\n\nShe walked back into the garage, hoping that Rowan would be done by now; otherwise she had no idea what she'd do. She couldn't just leave? Not after that exhilarating ride. She wasn't sure what she had expected, that Rowan would rip her clothes off as soon as they got back? Should she have done that to Rowan? But maybe she was the only one who'd built up such expectations in her head. After all, Rowan didn't know how turned on she had felt on the back of the bike.\n\nRowan seemed to be happy with her tweaks. She stood by the bike, now once again without her leather jacket, her sexy toned arms showing. Riley admired the movement of her muscles as she twisted the throttle open.\n\n\"That's much better!\" Rowan shouted over the engine revving. She let go off the throttle and the bike went into a quieter stationary purr.\n\n\"Hop on, you have to feel this.\"\n\nRiley instantly regretted getting back into her dress. It seemed Rowan hadn't even noticed she had changed; clearly the bike had her full and undivided attention. Riley hesitated; Rowan also had obviously never tried to get on a motorbike in a dress. Telling herself to make it work and not be a sissy, Riley hiked her dress up a bit and got on, trying her best not to flash her ass at Rowan who was standing next to it.\n\n\"Scooch forward and grab the handle bars.\" Rowan patted the leather seat in front of her.\n\nRiley moved to the driver's seat and leaned forward to grab the handles. She felt the stationary bike hum between her spread legs. In her slightly forward-tilted position, her lower body made more contact with the seat. Without the motor suit separating her soaked thong from the leather, the vibration was even more intense and Riley felt her previous excitement quickly building again.\n\n\"Now open the throttle...\"\n\n\"What?\" She wasn't sure what Rowan was getting at and she couldn't hide her disappointment for the lack of attention she was getting, compared to Rowan's fussing over the bike.\n\n\"Here, twist this handle. Don't worry, it's not going to move.\"\n\nRiley twisted the right handle slightly towards her. The bike grunted and started to hum harder underneath her. Riley eased off, aware of what the increased sensations would do to her.\n\n\"Oh yeah, I can feel it,\" she said quickly, not sure what Rowan actually wanted her to feel.\n\nRowan chuckled. \"That's nothing, open it more!\"\n\nRiley twisted again, a bit further this time, and felt the bike start to rumble powerfully. She suppressed a sigh as the vibration intensified between her spread thighs. Clearly not quite satisfied with Riley's execution of her instructions, Rowan climbed on the bike behind her. She leaned over Riley, her whole body pressing into her back, and put her hands over Riley's. The leather of her half-finger gloves felt cool on Riley's hands. Riley's breath stopped with the sudden proximity of the object of her desire.\n\n\"Like this...\" Rowan's soft husky voice was in her ear, closer than she'd ever been. So close that Riley could feel her breath tickle her ear. So close that she could smell her intoxicating scent - a unisex or male deodorant and sweet female perspiration - as it mingled with the bike's smell of petrol and leather that hung in the air. Riley willed Rowan to graze her ear lobe, her neck; to turn her head and kiss her lips. She tried to calm her breathing and her racing heart.\n\nRowan slowly twisted their right hands and the bike truly came to life underneath them.\n\n\"Feel that?\" Rowan leaned into her, trapping Riley between her body and the rumbling bike. Riley felt Rowan's small breasts press into her back as she was pushed down firmly into the leather seat and the fuel tank in front of it, which was now making maximum contact with her sex.\n\nHer clit welcomed the intense vibration and throbbed ecstatically. Riley felt herself losing control and tried to ease off the throttle, but Rowan was still holding her hand and opened it further instead. Her sweet breath still grazed past Riley's neck and ear and was driving her wild with desire. Urged on by her demanding clit, she gave into the unavoidable tremor between her legs.\n\nShe was going to come; there wasn't anything she could do about it. Her hips involuntarily jerked back and forth slightly as her climax reached her. She pressed herself further into the seat and tried to keep her body still. Hopefully, Rowan would think she just moved on purpose. She would be so embarrassed if Rowan found out what was happening; the silly straight girl got so turned on that she came by just sitting on a motorbike. With her limiting her body's movement, her elation sought another outlet: she moaned quietly against her will. She hoped the noise of the bike drowned her out and Rowan didn't hear it.\n\nAs Riley's orgasm waned, Rowan slowly eased their hands off the throttle and the vibration calmed down until it was back to the stationary hum. She leaned back, slightly releasing Riley's body, but still keeping their bodies connected. The timing was too perfect to be a coincident. Riley was mortified; Rowan knew exactly what had happened. How could she have let herself get so carried away?\n\nShe didn't get much time to beat herself up over it. Rowan's hands had ventured to her thighs on their way back from the handlebars, and were now slowly sliding over her hips. She moved back a fraction and created a small gap between their bodies. Riley felt Rowan gently tugging on the fabric of her dress, and subsequently succeeding in releasing the material trapped under her body. The summer breeze grazed her behind as Rowan slid her dress up to expose her skin. Rowan's hands were on her butt cheeks and traced the band of her thong.\n\nRiley struggled to control her whirlwind of feelings. She should really stop being so easy and give Rowan some counterweight, but it was electrifying to finally feel her hands on her; it made Riley want to be easy, to give herself completely to the mysterious woman.\n\nSmoothly, Rowan moved one hand underneath her, while the other encouraged her to lift herself slightly out of the seat. Rowan cupped her from behind and Riley couldn't help but think of how wet her thong was; she couldn't deny her arousal any longer if she tried. She felt Rowan trace the shape of her swollen lips through the soaked material, and part of her wished she'd left the futile piece of clothing behind in the office.\n\nAs if she had read Riley's mind, Rowan moved the fabric aside and eased her fingers into her wet slit. She allowed her fingers to explore the moist folds, lingering for a moment on the sensitive area at the top. Riley held her breath as Rowan touched her clit, her fingers gently circling it. The mere thought of the sexy woman touching her there was enough to send her over the edge, but she had to keep it together a bit longer. The suspense was too good to waste on another quick orgasm.\n\nAfter a brief exploration, Rowan's fingers moved on. Riley couldn't suppress a disappointed sigh. She heard Rowan chuckle in response. Then her fingers were at Riley's entrance, gently testing the waters. At the same time, her other hand was on Riley's back, easing her upper body forward. Riley leaned onto the handle bars, her clit once again connecting with the vibrating machine. On her already sensitive organ, the stationary rumble was enough to send tingles through her spine.\n\nGuided by Rowan, she tilted her hips up and pushed out her ass slightly to give Rowan more space. Rowan slid one finger into her, and, shortly after, another. Riley felt the edge of the leather gloves as her fingers eased their way in and Rowan started fucking her slowly. Riley moved her hips along with the rhythm as the pace quickened. Rowan leaned into her and pinned her down on the bike with her full body weight. Her fingers slid in and out, and invigoratingly curved round at their deepest position at every stroke. Riley had no idea fucking could be like this; she felt like she had just unlocked a whole new level in the sex universe.\n\nThe combination of the fingers pumping into her and the vibrating seat stimulating her swollen clit was overwhelming. Riley gave into all sensations and didn't care anymore that she was moaning and rocking her body like a rodeo horse, thrusting her behind at Rowan. Their movements grew harder, faster, larger as both women gave into their desires.\n\nRiley's second orgasm was more intense than any she'd ever had, and had her gasping for air. Her immense release caused her to produce noises she wasn't aware she could make, and trash involuntarily, until the initial rush passed and she gained a little control of her senses. She whimpered softly as she rubbed herself against the seat and squeezed Rowan's fingers, riding the gentler after-waves of her climax.\n\nWhen the sensations finally calmed down, Rowan's fingers slowly retreated and she got off the bike. Riley saw a creamy puddle in the palm of her glove and was suddenly embarrassed about what she would have left on the leather seat. Rowan held out her other hand. Riley hesitantly took it and let Rowan help her onto her wobbly legs. As Riley dreaded, there was a large damp spot on the seat. Rowan just grinned proudly when she saw it; another happy customer. Riley straightened her underwear and dress and smiled shyly at Rowan, unsure of what came next.\n\n\"Would you like to come upstairs for a coffee?\" The handsome mechanic asked, with a cheeky grin that said there could be a lot more where that came from."
    ],
    "authorname": "Salandar",
    "tags": [
        "lesbian first time",
        "motorbike",
        "meeting a stranger",
        "straight girl",
        "garage",
        "androgynous woman",
        "butch lesbian"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-mechanic-11"
}