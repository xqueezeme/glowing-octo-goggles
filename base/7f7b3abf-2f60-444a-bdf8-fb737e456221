{
    "title": "Louise Ch. 10",
    "pages": [
        "Louise was finally completely relaxed. She laughed as she talked to Rachel, Nathan's mother about the mischief that he used to get into.\n\n\"I know that he's on the quiet side now but he could sure get into things.\" Rachel said. \"So could Joseph for that matter. Maybe this one will be quieter.\" she added rubbing her stomach. \"You know, you've been good for him.\" Rachel said.\n\n\"I think that it's more the other way around.\" Louise replied blushing.\n\nRachel gave Louise an appraising look before she spoke again.\n\n\"I know that you're aware of the family history and even though Nathan didn't rape, it had to be difficult for you to hear about it. I just want you to know that if either you or Kevyn want to talk about anything you can come to any of us.\"\n\n\"Thank you.\" Louise said taking Rachel's offered hand. \"When is the baby due?\"\n\n\"Hopefully after the wedding.\" Rachel replied. \"Speaking of weddings, do you think you and Kevyn will have one?\"\n\n\"I know that I don't want one.\" Louise replied, \"And I'm pretty sure that Kevyn doesn't either.\"\n\n\"That's alright, Martin and I didn't have a wedding either. By the time we reconnected with his family, we had been mated for several years. But what about your family? I know that your sister Barb is here, what about the others?\"\n\n\"They're back in Pittsburgh, Pennsylvania and they don't know about Nathan yet. I'm still trying to get used to it myself and I really don't want to deal with them while I do it.\" Louise replied.\n\n\"Understood.\" Rachel said. \"Being in this family is a big adjustment and unfortunately, your arrival coincided with a pretty intense event. As I said, any of us are here and willing to talk or just to go out to have a good time.\"\n\nLouise liked Rachel and Martin. When she looked at any of the Sinclaire men who had raped, she understood what Kevyn meant when she said that she had a hard time seeing Patrick in that light. As she looked around the yard, she saw Ethan and Katrina who reminded her of herself in her shyness. She watched Ethan and the way that he treated Katrina and saw that it wasn't much different from the way that Nathan treated her. These men, as flawed as they were, loved their wives and their children. \n\n\"How are you doing?\" Nathan asked as he sat down beside her.\n\n\"I'm good, just getting to know your mom... you were quite the trouble maker weren't you?\" Louise teased.\n\n\"She's been telling stories I gather.\" Nathan said smiling at Rachel.\n\n\"Of course I have! It's my privilege as a mother-in-law to do so.\" Rachel replied winking at Louise. \"Nathan, she's beautiful and I'm happy for the both of you.\"\n\n\"Thanks mom and I agree. She is beautiful.\" Nathan said as he kissed Louise's temple.\n\n\"By the way, I know that you've had your hands full but have you talked to Joseph yet?\" Rachel asked.\n\n\"No I haven't but I'll do it soon. Did you see Winston?\" Nathan asked.\n\n\"Yes... I'm so proud of him!\" Rachel replied. \"I saw him talking to Joseph awhile ago. Maybe Joseph will hire him.\"\n\nLouise saw Joseph and Winston talking in a corner. Joseph looked happy but it struck her as a fake happiness. The only thing that he seemed genuinely happy about was whatever it was he and Winston had been discussing. It was then that she realized that she hadn't seen Barb in quite a while.\n\n\"Nathan, have you seen Barb lately?\" she asked looking around.\n\n\"No but maybe one of the others have, stay put, I'll be back.\" he replied kissing her.\n\nAs he walked away, Louise felt a nervousness that had nothing to do with meeting the family.\n\nBarb was somewhere getting into trouble.\n\n*********\n\nThorne's first order of business was to replace Allen. This time he would choose someone easier to deal with and he wouldn't keep him around as long. His green eyes glittered as he brushed his dark shoulder length hair and tied it back with a black tie that matched the black suit that he was going to wear to the club. He ran down his list of male employees eliminating those who he wouldn't use as Allen's replacement. It came down to two vampires, neither of whom he liked but until he had time to find someone else, one of them would have to do. He chose Billings because he had the least irritating voice and he knew that the timid vampire would do as he was told without question.\n\nBefore he left for the evening, he called Noel. It tore Thorne up every time he talked to him but it helped calm Noel down when nothing else did. He needed to go see him and soon because when he did, Noel would be at peace for six to eight weeks. During Thorne's visits, they did whatever Noel wanted to do which was usually paint. In spite of his mental condition, Noel was still a very accomplished artist with his paintings very much in demand. Thorne owned several of them himself but his favorite one was the one of him and Noel together. The second favorite was of the family minus their father.\n\nIt wasn't until after their father died that Thorne noticed that Noel had never painted a portrait of him. It was something that he had always wondered about and finally asked his mother Samantha about it.\n\n\"I don't know.\" she replied. \"The only thing that I can think of is that your father was always so hard on him about his art and Noel was too afraid to ask.\"\n\n\"Maybe,\" Thorne replied, \"But Noel has an excellent memory for detail; he wouldn't have needed father to sit for him. He painted that portrait of the two of us together and I wasn't here.\"\n\n\"I don't know then.\" Samantha replied.\n\nThorne hadn't believed her but didn't press. It didn't seem important anymore. He finished the phone call with the usual admonishments and a promise to visit soon.\n\n\"When?\" Noel asked his voice tight with anxiety.\n\nThorne closed his eyes; he heard the signs that were pointing to a breakdown in Noel's soft tenor voice.\n\n\"I'll tell you what.\" Thorne said. \"I have to work the weekend but how about I come on Monday? Can you be good until then?\"\n\n\"Do you promise to come?\" Noel asked.\n\n\"I'll promise if you promise to be good for mother.\" Thorne replied.\n\n\"I promise.\" Noel replied some of the anxiety gone.\n\n\"Good, I'll see you then and I'll bring some canvases and paints with me.\"\n\nThorne hung up hating his father and the Sinclaires for what they had done to Noel. He also realized that Noel was the only person that he really truly loved and cared about and wondered if he wouldn't be better off living with him. However, that meant that his mother would have to come too. He didn't hate her exactly but he couldn't say that he loved her either. \n\n\"What?\" he snapped when the phone rang. \"I'm on my way.\" \n\nHe vanished from his bedroom to the club pushing the issues about Noel out of his mind to think about later.\n\n*******\n\n\"Nathan! Wait!\" Louise called after him, \"I'm coming with you!\"\n\nShe gave Rachel an apologetic smile.\n\n\"It's alright.\" Rachel replied. \"I understand.\"\n\nLouise rushed over to Nathan and took his outstretched hand. They found Patrick and Kevyn still talking with Ethan and Katrina. Kevyn's stomach dropped when she saw the worried look on Louise's face.\n\n\"Lou? What's wrong?\"\n\n\"Maybe nothing... have you seen Barb lately?\" Louise asked her voice filled with growing anxiety.\n\n\"The last time I saw her, she was sitting in a corner eating but that was before the dancing started.\" Kevyn replied.\n\n\"Same here.\" Patrick said looking around.\n\n\"She waited until she knew we would be preoccupied.\" Louise said quietly.\n\n\"Sweetheart, we'll check the house, Patrick and Kevyn you start searching the grounds....\"\n\n\"We'll help.\" Ethan said. \"Call your security team and have them start looking too.\"\n\n*********\n\nVictoria saw Barb leave and started to follow her. She hadn't gotten very far before she was stopped by Jamie.\n\n\"Hey squirt! Where are you off to?\" he asked.\n\nShe was so intent on Barb that she didn't notice that Jamie had called her by the nickname that she claimed to hate.\n\n\"I'm just making sure someone doesn't get lost.\" she replied and ran off before Jamie could say anything more.\n\nIt took her a few minutes to catch up because she wasn't as familiar with Nathan's home as she was with Patrick or Martin's homes. She caught up in time to see Barb go into the gazebo. She carefully lowered her shields and felt Barb's intent even if she didn't understand the ramifications of them. What she did know was that it spelled trouble. She was about to run up to the gazebo but someone was already approaching it. When she realized who it was, she did the only thing that she could think to do.\n\n\"Papa! Come quick!\" she screamed telepathically and then she ran toward the woman approaching the gazebo.\n\n*******\n\nBarb couldn't believe her luck. She looked up at the tall handsome man and wondered why he was unattached. Her vow to be more careful had flown out of the window as soon as she saw him. In her mind, if he was somehow related to or a friend of the Sinclaires, then he was safe. As far as she could see, he had it all. Looks, money and a sexy accent.\n\n\"Are you lost?\" Rik asked again as he took a small step back. \n\n\"Not anymore.\" Barb replied. \"What are you doing out here all by yourself?\" she asked as she smiled up at him.\n\n\"I am w...\"\n\nThe next thing she knew, a woman was telling her to get away. Barb turned and faced the woman fully prepared to argue with her.\n\n\"I said move away from him.\" Veronica said quietly but there was no mistaking the fact that she was angry.\n\n\"Who are you?\" Barb asked hoping that the woman was just an overprotective relative.\n\nVeronica stepped into the Gazebo, her blue/brown eyes blazing and fastened onto Barb's dark ones. Victoria rushed to Veronica's side and took her hand.\n\n\"Ronnie? She didn't know.\"\n\nVeronica looked down at Victoria and back up at Barb who stared back at her.\n\n\"Do you always approach the mate of another woman?\" she snapped as she stepped closer to Barb.\n\nInstead of backing off, Barb fought back. She was tired of people telling her what she could and couldn't do. All she had to do was apologize and it would have been over. But she didn't.\n\n\"I don't see a ring on his finger and he sure as hell didn't say that he was with anyone!\"\n\n\"You did not give me the opportunity.\" Rik said softly. \"Ronnie, no harm has been done. She is just a silly human woman...\"\n\nRik realizing his error tried to cover it up but it was unnecessary. Barb wasn't listening. \n\n\"Ronnie!\" Victoria called again, \"She really didn't know!\"\n\n\"But she knows now but yet she still stands here and argues with me.\" Veronica replied taking another step toward Barb.\n\n\"Veronica, listen to me.\" Rik said his voice firm, \"she doesn't matter. She is the sister to Patrick and Nathan's mate... we know of her.\"\n\n\"I don't care who she is.\" Veronica said as she advanced on Barb.\n\nNow that Veronica was close enough for Barb to get a good look at, she could see that the woman was a Sinclaire. She took an involuntary step back, suddenly frightened. Veronica Sinclaire was now in her face and staring down at her.\n\n\"Veronica!\" A baritone bass voice said from behind her, \"Stand down!\"\n\nBy this time, Louise, Nathan, Patrick and Kevyn had arrived. It didn't take long for Louise to piece together what happened. She pulled away from Nathan and walked up to the two women.\n\n\"Veronica, I know that my sister overstepped her bounds but she didn't know that Rik was your mate. I also know that it's well within your rights to handle this but could you please let me do it?\"\n\n\"I don't ....\"\n\n\"Barb for once in your life shut up!\" Louise snapped.\n\nVeronica didn't respond for several tense minutes. Every time Barb opened her mouth, Louise silenced her with a glare.\n\n\"Alright.\" Veronica said and then looked at Barb. \"It's only because of your sister that I don't beat your ass. A word of advice, watch yourself, the next time you may not be so lucky.\"\n\nLouise waited until everyone except Kevyn, Patrick and Nathan left to address Barb.\n\n\"What is wrong with you?\" she said. \"You promised that you wouldn't come here looking for a man!\"\n\n\"I thought that he was single! \" Barb replied.\n\n\"Use your head!\" Louise yelled, \"This is a family gathering! What does that mean? It means that almost everyone here is either mated to a family member or is a family member and if you weren't sure you should have erred on the side of caution!\"\n\nBarb blinked in surprise. She had never seen Louise this angry.\n\n\"What is it going to take in order for you to change? You're my sister and I love you but I don't know what to do for you or about you. And before you start with the I don't have anything crap, save it. I don't want to hear it. I am sick and tired of you blaming everyone else for what happens to you. Everything that has happened to you has been you're doing! You keep looking for someone to care for you but you don't want to care for them. All you look at is what they can give you but what are you offering? It's always been about you and you know what? I agree with Nathan, you're a selfish, stupid bitch! There was someone for you if only you had... you know what? Forget it because you won't listen anyway. Do whatever you want and when you decide that you need help in changing some things, you know where I am.\"\n\nLouise ignored the tears that ran down her face. She hated talking to Barb as she had but it needed to be said.\n\nBarb couldn't speak. Somehow, hearing Louise say the very things that others had said to her hurt far more than she ever could have imagined. She realized it was because of all of her siblings; Louise had always been the kindest to her even when she was being unreasonable or how badly she was treated by the people who were supposed to have her back. She had just lost the one person that she knew cared about her.\n\n\"Lou....\"\n\n\"What Barb?\" Louise demanded. \"Are you going to tell me that this is my fault because I didn't pin a label on the eligible men? This is our family! Notice that I said our and not mine! However, as always, family doesn't matter to you but let me ask you this, you could have been killed when you went with Thorne Blackwell. You could have been hurt just now... what in god's name is it going to take for you to realize that money isn't everything? But you know what I think? I think that even if you had everything that you think you wanted, you still wouldn't be happy. There would always be something else so ask yourself, what is enough?\"\n\n\"Lou.\" Barb said her voice tight, \"I'm sorry.\"\n\nLouise looked at her and shook her head. \"For the moment, yes you are but... it won't last. Look, we have guests to attend to, stay if you want but please no more trouble.\"\n\nLouise turned away leaving Barb alone in the gazebo. Barb watched her leave still shocked that Louise had spoken to her as she had. She had felt the anger, frustration and love behind every word spoken and still she couldn't bring herself to admit that there was truth in Louise's words. She sat in the gazebo for a long time before deciding that she should at least apologize to the woman whose man she had hit on. It wouldn't be a sincere apology but it would have to do.\n\n*******\n\nNathan pulled Louise into a cluster of trees and held her as she shook. Anger at Barb flared and was gone before Louise had a chance to realize that it was there. He tightened his hold when he felt her tears wet his shirt. He felt how much it had hurt her to say the things that she said to Barb even though they needed to be said specifically by her.\n\nHe closed his eyes and took some of her pain onto himself not knowing if she would be angry about it or not. He didn't care if she was; he wasn't going to let her suffer. Fifteen minutes later, Louise was calmer but still upset.\n\n\"What's going to happen to her?\" she asked Nathan.\n\n\"I don't know but we'll try to keep her as safe as she'll let us.\" he replied.\n\n\"But you don't like her.\" Louise said sniffling.\n\n\"No I don't.\" Nathan admitted. \"But you care about her and she is family. Lou, I know that you've never spoken to anyone in the way that you spoke to Barb but she needed to hear it and it needed to come from you. In spite of how she's treated you, she loves you and maybe you reached her.\"\n\n\"Maybe... but I don't think so. Nathan, she's still going to need us. Something is going to happen...\"\n\n\"We'll deal with that when and if it happens.\" Nathan said kissing her temple. \"Are you alright?\"\n\n\"I think so and thank you for doing whatever it is you did. I feel better.\" Louise replied.\n\n\"I just took some of the emotional pain from you.\" Nathan replied. \"Are you ready to go back?\"\n\nLouise snuggled into him. She didn't want to go back but they had to and there was no point in putting it off.\n\n\"I'm ready.\" she replied giving his waist a squeeze and kissing his chest. \n\nThey walked back to the party hand in hand. As soon as Kevyn saw them, she ran over to them.\n\n\"Lou! Are you alright?\" she asked.\n\n\"I'm fine, a little tired but I'll be alright.\" Louise replied.\n\n\"Shit!\" Patrick swore as he looked across the yard.\n\n\"Wh... Damn it!\" Kevyn said as she saw what Patrick was looking at.\n\n**********\n\nBarb left the gazebo and went back to the party intending to apologize and leave. She spotted Veronica and Rik in the far corner of the yard. She noticed that both of them tensed when she approached so she put a conciliatory smile on her face and continued her approach.\n\nFor a moment, she questioned the wisdom of what she about to do when she saw Veronica's cold glare. She squared her shoulders and kept walking not stopping until she was standing in front of Veronica and Rik.\n\n\"I'm getting ready to leave and I wanted to apologize for the misunderstanding. Had I known that he was taken, I wouldn't have approached him.\"\n\n\"You're lying.\" Veronica said quietly \"but for the sake of family peace I'll accept your apology as well as offer a word of advice, just because a man isn't wearing a ring it doesn't mean that he's free but then you know that. One of these times you're going get into a mess that Louise won't be able to get you out of so have a care. Have a nice evening.\"\n\nVeronica and Rik walked away just as Kevyn and Louise reached them.\n\n\"What did you do?\" Kevyn asked.\n\n\"Nothing! I just apologized.\" Barb protested. \"I'm done here, I'm leaving. Have a nice life.\"\n\nShe stomped off without saying another word. An hour later, she was in the apartment trying to figure out where put things when she realized that she had no space for most of what Juliette was going to send her. It would have to go into storage. She sat down on the small sofa that would double as her bed and started making a list of what she needed to do. At the top of the list was calling Juliette and then her realtor. \n\nShe showered in what she thought had to be the world's smallest shower and changed into her nightclothes. Louise's words still hurt no matter how much Barb tried to minimize them. \n\n\"Fuck it! I'm done with them.\" she muttered as she lay on the sofa and fell asleep determined not to contact her sisters again. She didn't need or want their help. That she was living in Kevyn's apartment rent-free didn't cross her mind. It was something that she was entitled to just because they were sisters.\n\n********\n\nThe party ended just before four am. What little leftovers were left was packed up to be taken home by whoever wanted them. Veronica found Louise in the kitchen wrapping up loaves of bread for people to take home.\n\n\"Hey, I'm sorry about earlier. I guess I'm still in what Uncle Patrick calls the new mate syndrome. I wouldn't have hurt her.\"\n\n\"Apology accepted but Veronica, you would have hurt her. You would have felt bad about it later but you would have hurt her.\" Louise said.\n\nVeronica smiled, \"I guess I would have but just enough to scare her.\"\n\n\"Can I ask a question?\" Louise asked.\n\n\"Sure, what is it?\"",
        "\"What's it like to be a vampire? I mean is it that much different than being a human?\"\n\n\"Wow... I don't know how to answer that. I've never been human- at least not for long. I guess I would have to say that aside from the physical differences and the mortality issue, there isn't that much of a difference. As you know when we mate, it's for life and there are very rare instances of infidelity. Why are you asking?\" Veronica asked.\n\n\"Just curious.\" Louise replied as she handed a loaf of bread to Veronica. \"I'm looking forward to the wedding.\" she said changing the subject.\n\n\"So are we... are you and Nathan going to have a wedding?\"\n\n\"I don't think so.\" Louise replied. \"I would be too nervous.\"\n\n\"I understand but you could have a ceremony with just the two of you and then a reception or you and Kevyn can do it together.\" Veronica said.\n\n\"That's an idea.\" Louise mused. It was worth thinking about.\n\nBy five, everyone was gone with the exception of Kevyn and Patrick.\n\n\"Why don't you stay?\" Louise asked. \"It's getting late.\"\n\nKevyn looked at Louise and knew that she had something on her mind.\n\n\"Sure, we can make dinner together.\" Kevyn replied.\n\nPatrick and Nathan sensing that the sisters needed a few minutes alone made themselves scarce. \n\n\"What are we going to do?\" Louise asked Kevyn. \n\n\"There's nothing that we can do.\" Kevyn replied. \"She has to find out the hard way and we can only hope that she doesn't get herself hurt or killed in the process.\"\n\n\"Nathan won't let that happen.\" Louise said. \"He said that they would keep her as safe as she'll let them but Kev... something's going to happen to her and she won't come to us for help.\"\n\n\"How do you know?\" Kevyn asked.\n\n\"I felt it.\" Louise replied sadly. \"She's convinced that we've somehow taken something from her and I don't think that I helped anything.\"\n\n\"You only said what we've all been saying to her and what she needed to hear.\" Kevyn replied. \"I think that she heard you simply because you've never confronted her like that. I was watching her, Lou you hit a few nerves and I bet you planted a few seeds that only have to take root.\"\n\nKevyn and Louise looked at each other and then hugged.\n\n\"Meet you here at three.\" Kevyn said kissing Louise's wet cheek. \"And try not to worry too much.\"\n\n**********\n\nLouise laid on the bed her mind going a hundred miles an hour trying to think of a way to help Barb but kept coming up with nothing. She finally conceded that Kevyn was right, there was absolutely nothing that they could do except watch and wait.\n\n\"Louise, listen to me.\" Nathan said gently. \"There is and was nothing that you could have done for her. All of this is in her hands, it always has been and its time that she face the ramifications of her choices. All we can do is wait.\"\n\n\"You don't understand.\" Louise said softly.\n\n\"Don't I?\" Nathan asked. \"I see the results of the choices that were made by those in my family everyday. I could have lost you because of it. Patrick almost lost Kevyn and the list goes on. You don't think that I wish that I could have done something to change it? But the fact of the matter is I can't do anything but take steps to make sure that it never happens again. So yes sweetheart, I understand.\"\n\n\"I'm sorry.\" Louise said softly.\n\n\"There's nothing to apologize for. You're frightened for your sister and so is Kevyn but you show it more. Its part of the empathy but you are also exhausted and you need to sleep.\"\n\n\"I don't think that I can sleep.\" she replied even as she yawned and put an arm across his waist.\n\n\"Can't or won't?\" Nathan asked as he pulled her closer to him and kissed her.\n\n\"Can't, I have too many things on my mind. If I were at home, I'd get up and cook something.\"\n\n\"That's one option.\" Nathan said, \"but I like mine better and by the way, you are home and if you want to get up and cook, we'll do it.\"\n\nHe nuzzled her temple with his lips before kissing it. Louise turned to face him, looked into his and kissed him. It was the first time since their mating that she had taken the initiative and they both liked it. Nathan deepened the kiss as he ran his hands down her back, over her ass and then under the tee shirt that she insisted that she had to wear to bed.\n\n\"Sweetheart, the tee shirt has to go.\" he murmured against lips and a second later, it was gone. He grazed his lips down her chin, over her neck and to her chest where he stopped and pressed them against where her heart beat. Even his hands were still as he waited until her heart slowed to more normal rate. Only then did he move his lips to the nipple closest to him kissed the tip of it before taking it into his mouth, lightly biting down on it and then sucking on it loving the way it felt as it grew and hardened in his mouth. \n\nHe laid her back with the nipple still in his mouth and moved to the neglected one giving it the same treatment as he rolled the nipple that he just left between his fingers. He took his time with her breasts, like Patrick, the breast was probably his favorite body part on a woman but he had the feeling that he was about to change his mind.\n\nThe scent of Louise's arousal beckoned him. He had yet to taste her and he was now eager to do so. He released the nipple, kissed her and continued his journey down her body. He took his time in exploring her with his lips and hands gently massaging and kissing every exposed area.\n\nWhen he reached the junction between her legs, he paused to smell and look at it. Every other woman he had ever been with smelled sour in comparison to her. In his eagerness, he almost didn't warn her of what he was about to do but then remembered that he could show her.\n\n\"Sweetheart, lower your shields.\" \n\nHe waited patiently as Louise slowly lowered her shields. When they were down, he sent her a telepathic picture of him making love to her with his mouth and then began. He started with the inside of her thighs kissing and nipping at them but causing no pain. He stopped when he saw how tense she was and spoke to her telepathically.\n\n\"Close your eyes and relax.\"\n\nHe waited until she was more relaxed and began again. This time he kept talking to her telling her that she was safe and that he loved her more than anything or anyone that he could think of. Finally, he was at his destination, her wet, aroused mound. Even though he hadn't opened her nether lips, he could see her glistening clit peeking through. Instead of going directly for it, he opened her with two fingers, and swiped her from bottom to the top of her slit stopping just short of her clit and then going down again.\n\nLouise had heard talk at work about the things people did during sex and wasn't sure that she believed half of it but here she was, married and about to experience the pleasures of oral sex for the first time. She was glad that Nathan had given her a warning of what he was about to do and knew that he wouldn't have to do it again. She jumped a little when she felt him open her vaginal lips but relaxed when he began to speak to her telepathically.\n\nShe moaned and bucked her hips when she felt the first swipe of his warm, wet tongue against her sex for the first time. A few licks later, she was moving her hips in search of his tongue wishing that he would touch her in that one spot. She opened her legs wider than she thought possible inviting him to do what they both wanted.\n\nNathan continued to lick and nibble until he got the signal that he was waiting for- the opening of her legs inviting him to feast on her. Even then, he didn't rush as he lapped up the clear fluid that ran from her. As he tasted her, the taste of every other woman seemed to disappear from his memory. There was only her. Finally, he took her pulsing clit into his mouth and suckled on it. He could hear her cries of pleasure and allowed himself to feel what she was feeling. His balls tightened against him and his cock throbbed as he shared in her pleasure.\n\nLouise was beside herself as Nathan made love to her. Just as she was about to come, she opened herself to him completely. Whatever piece of her she had been holding back, she gave to him. A soft moan escaped her lips and gradually escalated into a full scream as she trusted not only him but also herself into his care.\n\nNathan felt her release herself into his care. He closed his eyes in an attempt not to come; he needed to be inside of her when he did that. He didn't know or understand why nor did he care. The only thing that he cared about was that when it was over, both of them would be stronger and closer than even the first time that they made love. He also realized that in order for that to happen, he had to give himself to her completely as she had just given herself to him.\n\nNathan gave Louise's clit one last pull that sent her over the edge crying and screaming for him. Before her orgasm was completely over, he was inside of her pumping hard and fast giving her everything that he was and would be. He came with a scream that left his throat raw and dry.\n\nAfterwards, he hugged Louise to him. Neither of them spoke. There was nothing to say. Nathan lay awake long after Louise had fallen asleep. He wasn't worried about anything in particular, he was thinking about the Yancy family. In order for Louise to have the power that she did meant that an ancestor was psychically powerful. Kevyn was strong in what she could do and even Barb was psychic to some degree, the others he didn't know about but Louise seemed to have been given the bulk of the gifts. As he finally closed his eyes, he made a mental note to check into her line.\n\n*********\n\nBarb woke up early cramped, hungry and still angry about the night before. She looked at the clock, swore and rolled off the sofa. If it hadn't been for the fact that the apartment was rent free, she would have looked for a bigger place. She made her way to the tiny bathroom, used the toilet and washed her hands and face when she was done. She looked at her reflection in the mirror and frowned at the small pimple at the corner of her mouth. She couldn't remember the last time that she had a pimple and attributed it to the stress of the past couple of weeks.\n\nShe fixed herself a bowl of cereal, wondered if Juliette was up and decided that she didn't care. If she couldn't sleep then no one else could either. She put the half-eaten bowl of cereal in the sink and dug through her purse for her cell phone. Juliette's phone rang four times before she answered it.\n\n\"Barb? Do you know what time it is?\" Juliette asked sleepily.\n\n\"I don't know and I don't care. Have you packed up my stuff yet?\"\n\n\"Some of it. I'm on vacation this week, I'll get it done.\" Juliette replied.\n\n\"Good. Just make sure you pack all my under things and clothes together and that the boxes are labeled.\" \n\n\"Barb, do you realize how much crap you have? You need a moving company and that's going to cost you a fortune even if Mr. Riverton gives you my employee discount. Why don't you put it in storage for now and I'll send your clothes and things?\"\n\nBarb didn't respond for several minutes.\n\n\"Let me call you back.\" she said and hung up. \n\nShe called her realtor next.\n\n\"Sonya, what's happening with the house?\" she asked without saying hello.\n\n\"Barb, it's seven am here and I'm not even out of bed yet. I'll call you when I get to the office.\"\n\nSonya hung up not giving Barb a chance to argue with her. She called Juliette back and told her what she wanted.\n\n\"Pack up my clothes and personal stuff and send it here. Will Riverton give me the employee discount on one of the storage spaces?\"\n\n\"He will if you use one his crews to pack up and bring your stuff here.\" Juliette replied.\n\n\"Then do it, it has to be a lot cheaper than having it brought across the country.\" Barb replied.\n\n\"I'll call when the office opens... Barb? Are you alright?\"\n\n\"I'm fine.\" Barb replied.\n\n\"Kev and Lou, are they alright?\"\n\n\"They're fine. I have to go.\" Barb said and quickly hung up. She didn't want to hear or talk about Kevyn and Louise. All it did was make her angry. Just thinking about them made her blood boil but even so, she was still hurt by what Louise said to her.\n\nShe spent the morning waiting for Sonya to call her back about the house, channel surfing and continuing her search for a dating service. Sonya didn't call her until two in the afternoon and the news while not bad wasn't as good as Barb had hoped.\n\n\"I have a buyer but they're offering twenty thousand less than you want. I can try to split the difference but if they don't bite what do you want me to do?\"\n\n\"What about the Jones?\" Barb asked.\n\n\"They passed and there are no other offers on the table.\" Sonya replied.\n\n\"See what you can do.\" Barb said after a long hesitation. \"If they won't budge then sell it.\"\n\nBarb logged off the dating site and onto her bank account. She breathed a sigh of relief to see that the money from her 401k had gone in. Her phone didn't ring again until late afternoon; it was Sonya calling her back.\n\n\"Ok, we split the difference.... And they want the furniture.\"\n\n\"Fine, it saves me the cost of having it moved and stored. Can I sign the papers via email?\"\n\n\"I'd rather not go that route, I'll overnight them to you but I will email them to you so that you can look them over.\"\n\n\"They've made the down payment?\" Barb asked.\n\n\"More than that.\" Sonya replied, \"They have the cash. Apparently, she inherited quite a bit of money and decided to buy a house. Once all of the inspections and appraisals are done and the papers signed we're done.\"\n\nBarb didn't miss the note of relief she heard in Sonya's voice.\n\n\"Email me those forms, I'll look them over and call with any questions.\"\n\n\"Of course but bear in mind that tomorrow is Sunday and I do attend church.\"\n\n\"Yeah, I'll try not to bother you.\" Barb said snidely and hung up.\n\nShe spent the rest of the afternoon online changing her address and contact information before she remembered to call Juliette back with the change in plans regarding the movers. When she called her back, Wanda the oldest grandchild answered the phone.\n\n\"Auntie Barb!\"\n\nThat enthusiastic greeting was the only thing that really brightened Barb's day. \n\n\"Hi Wannie! How are you?\"\n\n\"I'm good! Guess what? I got an A on my science project!\"\n\n\"That's great! Where's your mom?\" Barb asked cutting the conversation short.\n\n\"She's in the kitchen.\" Wanda replied the hurt evident in her voice.\n\n\"Go get her for me.\" Barb said ignoring the hurt tone in her oldest niece's voice.\n\nShe had to give Juliette credit. Barb had never wanted children. To her they were a hindrance and not the blessing that people claimed them to be. However, Juliette loved her kids even if she dumped them on Louise when she wanted or needed a night out. Barb also knew that Juliette always helped the kids with their homework and took them on day trips; she was a good mother.\n\nWhen Juliette finally came to the phone, Barb told her about the change in plan.\n\n\"When can you get up there?\" she asked.\n\n\"Tomorrow and with any luck I can have your stuff ready to be shipped by the end of the day.\" Juliette replied.\n\n\"Are you going out tonight?\" Barb asked not really caring.\"\n\n\"Nah, me and the kids are going to watch movies and make those donut things that mom used to make.\" Juliette replied and then hesitated. \"We were wrong you know.\"\n\n\"Wrong about what?\" Barb asked.\n\n\"About the way that we didn't help Louise with mom. She shouldn't have had to take care of her alone.\"\n\n\"What brought this on?\" Barb asked.\n\n\"I don't know.\" Juliette replied. \"I just wish that we had helped her more.\"\n\n\"Look, I gotta run, call me when you have the price for the shipping.\"\n\nShe hung up and went back to changing and updating her contact information. After thinking about it for several minutes, she cancelled her 'twitter' and 'face book' accounts and then decided to change her cell phone number as well. The only people that she would give it to would be ... no one she decided.\n\nThe next thing was to decide on whether she should buy a car or not. She spent the evening debating the issue and decided to buy a small used car. By the time she finished everything for the day; it was late evening. Her cell phone rang; she looked at the number, recognized it as Kevyn's and silenced it. She didn't even bother to check to see if there was a voice mail\n\nShe made herself a sandwich, poured a glass of soda and turned on the small color television looking for something to watch. She almost gagged when she saw the ad for 'The Emerald' flash across the screen. Barb turned off the television, took the uneaten sandwich to the kitchen, wrapped it and put it in the fridge. \n\nEven though it was warm in the apartment, Barb felt chilled. She wrapped her blanket around her and fell into a fitful sleep.\n\n********\n\nLouise opened her eyes and then closed them again relishing the feeling of Nathan's warm breath blowing across her forehead. She tried to put into words what she was feeling and came up with none that seemed adequate. What she did know was that she was where she wanted and needed to be and not even her concerns about Barb disturbed the sense of peace that she felt.\n\nShe couldn't tell what time it was but she thought that it had to be close to the time she was supposed to meet Kevyn in the kitchen. She tried to ease out of bed to use the bathroom but Nathan stopped her.\n\n\"Where are you running off to?\" He asked his eyes still closed. \"It's early.\"\n\n\"I need the bathroom and I'm meeting Kev in the kitchen at three.\" she replied.\n\n\"It's only one.\" Nathan said slowly opening his eyes.\n\n\"How do you know?\" Louise asked.\n\n\"I just do, so go to the bathroom and come back to bed.\" he replied as he kissed her forehead.\n\nHe noticed with satisfaction that she didn't look for her tee shirt when she got out of bed. Now if he could get her to forget the damned thing period. Nathan watched her ass jiggle as she walked across the room, got out of bed and followed her into the bathroom. He had other things that he would rather be doing than sleeping. He went into the shower part of the bathroom, turned it on and got in. Louise got in a few minutes later and began to wash her hair.\n\n\"Let me.\" Nathan said taking the bottle of shampoo away from her.\n\nLouise stood still as Nathan gently washed her hair taking care not to tangle it. He carefully rinsed the soap out aware of her aversion to having water running down her face and applied the leave in conditioner. Louise didn't object as he washed her back and then turned her around to wash the front of her. When he was finished, Louise reciprocated .She had Nathan kneel in front of her so that she could wash his hair, shoulders and upper back. It occurred to her that they were making love without making love and she loved it. She was learning that there were many ways to make love without sex and wondered what else Nathan had to teach her.\n\nNathan dried her off and applied oil to her skin talking to her in soothing tones as he rubbed her back. His intent was for her to sleep. As far as he was concerned, she hadn't slept enough. He wasn't concerned about Kevyn, she would understand and if she didn't- too bad.\n\nSoon after he started the massage, Louise was sleeping. It wasn't the deep sleep of the exhausted. But it was the sleep of someone who knew that they were cared for, safe and loved. As he watched her sleep, his love for her grew. He didn't think that it was possible but it was happening. He now understood the love between his parents and the others. The feeling that there really was a love so strong and that someone loved him so intensely astounded him.\n\nHe could see how it could easily become an obsession and how it could lead to unhappiness for both parties. He would have to remind himself to step back and let Louise have her space so she wouldn't feel smothered. He knew that part of what he was feeling was the novelty of being newly mated and in time that would pass but still the danger of becoming obsessive would remain.",
        "\"What are you thinking about?\" Louise asked.\n\n\"Us.\" Nathan replied honestly. \"I was just thinking about how much I love you and that if I'm not careful it could become obsessive. I want you to be happy and to feel free to do whatever makes you happy as long as it doesn't endanger you. And I want you to promise me something.\"\n\n\"If I can.\" Louise replied.\n\n\"I want you to tell me when and if I become too obsessive for you.\"\n\n\"Nathan...\"\n\n\"I want your word that you'll tell me no matter how angry you think I'll get and I promise you that I'll do my best not to smother you.\"\n\n\"I promise... Is there something that you aren't telling me?\" Louise asked.\n\n\"No, I just wanted to tell you that.\" Nathan replied. \"Why don't we go shopping for the house tonight?\" he asked.\n\n\"I don't even know what colors I want.\" Louise replied.\n\n\"Ok, then we go shopping for colors and the carpet. We can even order the kitchen appliances. What do you think?\n\n\"I think... that sounds like fun.\" Louise replied. \"How about after dinner?\"\n\n\"You can invite Kevyn and Patrick if you like.\" Nathan said.\n\nLouise thought about it and decided against it. She wanted this to be something that she and Nathan did alone. In the back of her mind, it occurred to her that she was beginning to distance herself from Kevyn but not in a negative way. She and Kevyn would always be close but she was becoming a person who no longer needed her big sister to speak for her. She was beginning to build a life separate from Kevyn's and as sad as it made her, she was equally as excited.\n\n\"No, I want us to do this alone... can we go to the house afterwards?\"\n\n\"I was planning on it.\" Nathan replied.\n\nAfter their last visit to the house, he called the supervisor and gave orders to bring in more help.\n\n\"I want it done by the end of the week- bring in whoever you need to make it happen. The only two rooms that I want completely done are the bathroom and the bedroom. Have Archie go to the warehouse to get a bed and dresser... yes, what female is with you? Tammy? Let me talk to her.\"\n\nBy the end of the phone call, Nathan had given the woman a list of the hair and skin products that Louise used. He resisted the temptation to send her to one of the boutiques to get the expensive version of the same brand. He didn't' because Louise wouldn't like it. She would always be conscious of money no matter how much she had. That prompted another decision.\n\nHe called the bank, opened an account in Louise's name, and ordered a visa credit card for her. \n\n\"Would you like notification when the card or account is used?\" The banker asked.\n\n\"No but if it gets close to the limit, replenish it and you don't need to inform me. Send the card to the address that you have on file.\"\n\n\"Yes sir... what amount would you like to put into the account?\"\n\n\"Make it unlimited and give the credit card a limit of the same.\" Nathan replied changing his mind about the limit.\n\n****** \n\nThe credit card and banking information was in his wallet. He would give it to her at the house and hoped that she understood his intent. He made a call to his foreman to make sure that things were as he wanted them.\"\n\n\"Everything will be ready by this evening.\" The supervisor assured him.\n\n\"Good.\" Nathan replied. \"I appreciate all that you've done to make this happen. I want you to give each crewmember a gift certificate to the restaurant of their choice for them and their families. Yes, thank you.\"\n\n********\n\nA warm mouth on his nipple and a hand on his cock brought him back to the present. He barely detected any reticence on her part as her hand moved up and down his shaft with a slow but firm grip. To compensate for not being able to reach all the way around, Louise used a spiraling motion that Nathan loved. \n\nThe sucking on his nipple and the friction on his cock made Nathan moan and then gasp as Louise, feeling what he wanted bit into the nipple and stroked his cock harder running her hand over the swollen, spongy head several times before going back to the shaft.\n\n\"Sweetheart, stop.\" Nathan said his breath ragged. \"Give me a minute.\"\n\nLouise stopped. Her hand was still on his cock and she began to stroke him again. When he asked her to stop, she didn't. She wanted to see his seed as it left his body. She stroked even harder and faster, her hand moving in a blur as Nathan tried to keep up with her. \n\n\"Louise!\" he screamed as his essence shot out of him landing on his stomach and coated her hand. \n\nLouise was both fascinated and aroused and was just beginning to wonder what he tasted like when suddenly she was on her back and Nathan was slamming into her coming again when she did.\n\nThey missed dinner only leaving the room to make an appearance and to go shopping for the house.\n\n\"We ate without you.\" Kevyn said when they came into the kitchen.\n\n\"I'm sorry...\" Louise started to say and then wondered what she was apologizing for but she still blushed.\n\n\"I managed to save a plate for each of you if you want it.\" Kevyn replied, \"If not, the bottomless pit named Patrick will take care of it.\" she teased.\n\n\"We'll grab something while we're out.\" Nathan said \"but you and Patrick are welcome to stay.\"\n\n\"I think we're going head out to some secret location but we'll be in touch.\" Kevyn replied. \"Nathan, can I have a few minutes with Lou?\"\n\n\"Of course, I'll be in the study when you're done.\"\n\n\"Love looks good on you.\" Kevyn said touching Louise's face. \"I am so happy for you.\"\n\nLouise placed her hand over Kevyn's and stroked it.\n\n\"Thank you for bringing me here. It doesn't matter that you did it out of guilt even though I keep telling you that you didn't do anything wrong. The bottom line is that I'm here because of you.\"\n\n\"I know that you never believed this about yourself but Lou, you are and always have been special and Nathan is very lucky to have you.\" Kevyn said her throat tight.\n\n\"This isn't goodbye.\" Louise said softly. \"We don't live far from each other.\"\n\n\"It is a goodbye of sorts.\" Kevyn replied. \"It's a goodbye to our relationship as it was. You don't need me in the same way and I'm ok with that. You've grown so much in the past few weeks. It was like watching a butterfly being born- it was beautiful and so are you. I love you little sister.\"\n\n\"I love you too.\" Louise replied as she threw her arms around her sister and friend.\n\nKevyn wiped away tears as she watched Louise walk away. Patrick came from behind her and hugged her.\n\n\"Are you okay?\" he asked kissing her ear.\n\n\"I'm fine, I'm just really happy for her.\"\n\n\"I am too.\" Patrick replied. \"Are you ready to go?\"\n\nKevyn looked in the direction that Louise had gone one more time and nodded her head. She took a deep breath and blew it out symbolically letting Louise go.\n\n*******\n\nThe shopping trip proved to be productive. The color schemes were quickly agreed on and the carpet picked out. By the time they were done, Nathan claimed that he was starving and that he would blow away if they didn't eat soon.\n\n\"Fine,\" Louise said laughing, \"you pick the place.\"\n\nNathan pulled into the first thing that he saw open, a twenty-four hour restaurant that Louise had doubts about.\n\n\"Have you ever been here before?\" she asked eying the ill kept building.\n\n\"No but I'm sure that it's fine.\" Nathan replied.\n\n\"Your stomach.\" Louise muttered.\n\nThe food turned out to be good and Louise realized that she was hungrier than she thought. She finished her bowl of soup and started stealing bits of food from Nathan's plate giggling at his attempts to act outraged. They left with promises to return and headed for the beach house.\n\n\"They've gotten quite a bit done.\" Nathan said. \"By next week, we can have the painters come in and then the carpet can be laid.\"\n\n\"I think... I think that I would like to live here.\" Louise said not responding to Nathan's statements.\n\n\"I like it here too and was hoping that you would say that.\" Nathan replied\n\nHe intertwined his fingers with hers and finished the drive in silence.\n\n\"Would you like to see what progress has been made?\" Nathan asked when they arrived.\n\nLouise smiled, nodded and waited for Nathan to help her out of the car. \n\n\"It's beautiful!\" Louise said as she touched the kitchen counters.\n\n\"Let's see the rest of the house.\" Nathan said taking her hand. \n\nThe last room he took her to was the bedroom where the bed was turned back. The room was filled with flowers of every kind and unlit scented candles were scattered around the room.\n\n\"This time we won't have to leave before morning.\" Nathan said as he kissed her. \n\nLouise closed her eyes, inhaled the scent of the ocean and made a decision. \n\n\"Let's go out to the beach.\" she said taking Nathan's hand.\n\nNathan snatched the comforter from the bed as he passed by and allowed himself to be led to the spot where they had made love the last time they were there. He spread the comforter on the ground, sat down pulling Louise down with him. He put his arm around her, pulled her tight into his side and rested his chin on the top of her head. On a whim, he moved and lifted Louise so that she was on his lap facing him a leg on either side of him.\n\n\"I love you Louise Yancy Sinclaire and don't you ever forget it.\" he said his tone serious.\n\n\"I love you too.\" Louise replied.\n\nNathan ran his hands up and down her thighs becoming irritated with the cloth that separated her skin from his. In an instant, the offending material was gone and it was flesh against flesh. Louise wrapped her arms around his neck and ground against him. Her nipples swelled and tingled as they rubbed against Nathan's chest. She could feel his hardness throbbing between them and ground against him harder.\n\nThe thought that she was no longer the same woman of a few weeks ago crossed her mind and was forgotten when Nathan bit and then sucked on her neck hitting a sweet spot that she didn't know she had. The sensation traveled from that spot to her nipples and straight to her clit making her gasp.\n\nNathan lifted her up as if she weighed nothing and eased her down onto his waiting cock both of them moaning at the contact. Louise began a slow rocking motion against him, rubbing her clit against his pelvis. Her breathing was heavy as she whispered in his ear.\n\n\"Make me like you.\"\n\n\"What?\" Nathan asked temporarily losing the rhythm.\n\n\"Make me like you... please.\"\n\n\"Lou...\"\n\nLouise moved faster in Nathan's lap and pulled his head toward her neck.\n\n\"I want to be like you.\" she repeated. \"I don't need the sun, just you.\" she added as she ground against him even harder.\n\nNathan didn't know what to say. Very few human mates elected to turn and a few of those that did, regretted it later. \n\n\"I won't be sorry! Nathan please!\" Louise begged.\n\nNathan hesitated weighing his options and decided to trust and honor her wishes. That she would be the first female mate in the family to turn in over three centuries crossed his mind. He wondered if it meant anything and then decided that it didn't matter.\n\nHe did however; give her a chance to change her mind.\n\n\"Lou...\"\n\n\"I. want. To. Be. Like. You.\" she said, the words coming out between gasps and moans of pleasure.\n\nLouise, sensing that he was going to grant her wish, turned her head and offered her neck to him trusting him not to hurt her any more than necessary.\n\nNathan allowed his fangs to descend, kissed her rapidly beating pulse and bit just as her orgasm began. He came once the sweet, salty and metallic taste of her blood touched his tongue. He held onto her as she writhed and ground in his lap as he drank from her for the first time. Louise cried out as the throbbing in her nipples, clit seemed to increase, and the orgasm seemed to intensify instead of waning. Without missing a beat or slowing his pace, Nathan made a deep cut on the opposite side of his neck and guided Louise's lips to it.\n\nLouise latched on like a new baby drinking from its mother's teat and was surprised to find that she liked the taste of Nathan's blood. It had the same sweet and salty taste of human blood but it wasn't as metallic. She felt Nathan swell inside of her as she sucked at him even harder.\n\nNathan hugged her even tighter as the sensation of her sucking traveled through his entire body. His toes were curled and his balls ached as his seed began its journey to Louise's womb. The pleasure almost bordered on pain as he emptied into her but he didn't want to stop. The word \"mine!\" resonated through the back of his brain as he turned so that Louise was now beneath him. \n\nHe immediately missed her lips on his neck but she had taken enough to initiate the tuning. Nathan bent down and kissed her as he pounded into her. When she came again, his mouth was covering hers; he swallowed her screams as he moaned loudly and collapsed to the side of her.\n\nNathan quickly gathered Louise into his arms leaving the blanket lying in the sand, carried her into the house and straight into the bedroom. He laid her on the bed, covered her and closed the heavy shutters to block out the sun that would be rising in a few hours. He sped to the kitchen where several units of blood were thawing in a small refrigerator. He lifted the fridge, carried it to the bedroom and placed it near the bed. The last thing that he did before getting into bed with her was to call the work crews off for the next three days. After that, he would take her home to finish recuperating.\n\nHe watched for signs that the change was starting, ready to carry her to the bathroom or to comfort her in any way that he could. As she watched her sleep, he wondered why she opted to change. He thought about their past conversations and found the answer. She was willing to give up living as a human for their children. She didn't want to take the chance that their daughters would be born human. She was guaranteeing that they wouldn't die before their mates found them.\n\nHe cuddled her closer and kissed her temple. The fates had chosen well for him.\n\n********\n\nTwo nights later, Louise opened her eyes. She blinked rapidly trying to adjust to the darkened room and when she moved, her body protested. She felt as though she had just been through an exercise regimen whose goal was to inflict pain. She licked her lips that felt as dry as sandpaper and wondered where Nathan was.\n\n\"I'm here.\" he said from the other side of the bed. He had moved because it had hurt her too much to be touched during the change but he never left her side.\n\nShe tried to speak but her mouth was dry and her throat sore. Suddenly, Nathan was beside her helping her to sit up. She winced at the pain but welcomed his touch.\n\n\"Here, drink this.\" Nathan said as he pressed the rim of a cool glass against her lips.\n\nLouise put her hands on top of his trying to speed the rate in which the thick, cool liquid ran down her throat.\n\n\"Not so fast or you'll get sick.\" Nathan said gently as he pulled the glass away from her lips in spite of her protests.\n\nA few minutes later, he gave her more to drink along with sips of water. An hour later, she was back to sleep feeling much better but still sore. When she woke up again, Nathan fed her more blood and sat with her in the Jacuzzi but didn't turn on the jets.\n\n\"You're skin is still sensitive.\" he explained when Louise asked him why.\n\nShe leaned back against him and fell asleep again. She reminded Nathan of a baby, eat and sleep but that would change in the next day or so. There would be a period of twenty-four hours where they would make love almost non-stop. It was also the time when she would be the most likely to conceive.\n\nNathan lifted her out if the tub, carried her still asleep back to bed, and tucked her in. While she slept, he called Patrick and Kevyn to tell them the news.\n\n\"I'm only telling you because of Kevyn.\" he said. \"No don't tell anyone else they'll figure it out on their own. Yes, she's fine. We'll call when we get back to the other house... I'll ask her about it when she wakes up.\"\n\nNathan hung up, looked over at Louise and smiled. In his opinion, he had hit the jackpot of mates. His loins tingled at the thought of the approaching twenty-four hours of lovemaking. It wasn't that they couldn't make love that frequently now but it was one of the few times when all of the senses would be heightened, especially touch. The other times would be at the beginning of a pregnancy and after the child was born.\n\nHe called their other home and gave specific instructions making the recipient of the instructions repeat them back to him. When that was done, he got into bed and waited for Louise to wake up so that he could take her to the other house so that the work on this one could be completed.\n\n******\n\nTwo days later, an exhausted Nathan and a radiant Louise showed up at Kevyn and Patrick's house. Patrick struggled not to laugh as he took in Nathan's appearance.\n\n\"So I guess its true.\" he teased.\n\n\"It is and I can't wait to do it again.\" Nathan replied with a happy smile.\n\n\"Are you up to shopping? Kev wants to look for a dress for the wedding.\" Patrick said.\n\n\"Only if we stop and get something to eat, I'm famished.\" Nathan replied. \"Question, have you and Kevyn talked about a wedding?\"\n\n\"Briefly and she doesn't want one, what about Lou?\" Patrick asked.\n\n\"She doesn't want one either but would consider a small private ceremony with just the four of us. We could have a reception afterwards.\" Nathan replied. \"She also mentioned having the rest of her family here.\" he added.\n\n\"So did Kevyn.\" Patrick replied. \"We would have the same issue as we had with Barb but it shouldn't be a problem... I'm game if you are.\"\n\n\"I'm game and I don't know about you, but I'm interested in finding out about their family line.\" Nathan said looking at Louise who was chatting with Kevyn.\n\n\"What are you thinking?\" Patrick asked.\n\n\"I don't know... maybe its nothing but I don't think so. Louise is too strong of an empath for it to be a fluke and Kevyn's ability to hear the thoughts of vampires and to talk to them isn't a normal psychic gift. I'm just wondering who in their family line had gifts like theirs and if their siblings are gifted as well.\" Nathan replied. \"If nothing else, our children will know the Yancy side of the family history.\"\n\n\"I tend to agree with you.\" Patrick replied, \"But it's a big family.\" he added.\n\nNathan shrugged, \"There's no rush and a reception would be a good time to meet the rest of them. What do you have to snack on?\" he asked changing the subject.\n\n*****\n\nKevyn looked Louise up and down and then hugged her.\n\n\"Are you sure that you're alright? Was it bad?\" she asked.\n\n\"I'm fine and let's just say that I don't want a repeat of any of it except for the last twenty-four hours of it\" Louise replied hugging Kevyn back.\n\n\"So what's it like?\" Kevyn asked.\n\n\"I don't know yet but I can tell you that I feel the same but better if that makes any sense.\" Louise replied.\n\n\"You look great! What do you say? Let's get this shopping thing done.\"\n\n******\n\nThe shopping for outfits was successful. After several stops, they found both dresses and shoes at the same boutique that they liked and left them there to be altered.\n\n\"Come in tomorrow night and we'll get your dresses ready.\" the manager said brightly.\n\n\"That was relatively painless.\" Kevyn muttered to Louise.\n\n\"Thank goodness.\" Louise replied. She hated shopping almost as much as Kevyn did. \"Kev, what do you think about a small ceremony with just the four of us?\"\n\n\"I... why not?\" Kevyn said. \"As long as it isn't a full scale wedding.\" she added.\n\n\"I think that we should invite Gene and the rest of them.\" Louise said and waited for Kevyn's response.\n\n\"Have you said anything to Nathan yet?\" Kevyn asked.\n\n\"We talked about it and he wants to meet them.\" Louise replied. \"Kev, I think that this could help bring us closer the way that mom and dad wanted us to be.\"",
        "That was the deciding factor.\n\n\"Alright but lets wait until after Vanessa and Veronica's wedding is over before we start planning this thing.\" Kevyn suggested.\n\n***********\n\nThe evening of the wedding couldn't have been more perfect. The moon was full, the stars were out and the breeze that blew through the trees was warm but not hot. The yard was decorated with a variety of flowers, some from the grounds and some ordered in from area florists. The garden to the left held the tables where the food would be served and where the guests could sit and indulge. Soft music could be heard playing over the quiet but excited chatter of the wedding guest who had arrived early. \n\nKevyn, Patrick, Louise and Nathan all sat together waiting for the ceremony to begin. What surprised them was that Barb was there. She had been invited, had initially said that she wasn't going to attend and then for reasons unknown to them, changed her mind. \n\n\"Come sit with us.\" Louise invited holding out her hand to Barb.\n\n\"No thanks.\" Barb said ignoring the outstretched hand and walking away. \n\nShe didn't even know why she changed her mind. She really had no intentions of going but curiosity had gotten the better of her. That and the idea of good food. After walking away, she found a seat far to the back and to the right of where her sisters and their men sat. She couldn't stop looking at them, especially Louise. Finally, she saw what Nathan saw, a beautiful but shy woman who had a quiet strength about her. As she continued to watch, her anger and jealousy grew to the point where she decided that she couldn't stay. Just as she stood to leave, the music signaling the beginning of the ceremony started. \n\nShe sat down and tried not to look at her sisters. \n\n\"Not fair.\" she murmured, \"No fucking fair!\" "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-10"
}