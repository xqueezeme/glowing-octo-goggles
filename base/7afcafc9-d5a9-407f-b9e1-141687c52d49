{
    "title": "Beneath the Ice Ch. 05",
    "pages": [
        "Alexei stopped into the store midday on Black Friday, bringing everyone coffee and tea. He was the hero of the hour, though no one had much time to spare him more than a heartfelt 'thank you.'\n\nHe did steal Charlotte away to the back room for a quick kiss and hug.\n\n\"Are you coming for dinner tonight?\"\n\nHer question earned her a narrow look that only made her giggle. She'd giggled all through their morning together before she'd had to leave for work and him for practice. The night before had been all new to them and they'd both woken with smiles.\n\n\"I'll make pork chops.\" He dropped his hands low around her waist and squeezed her ass.\n\nShe gasped and rubbed her front against him.\n\n\"Charlotte.\" His voice held a note of warning. It wouldn't do for him to get hard before he had to walk back through the store.\n\nHer lip between her teeth, she gave him a faux-innocent look beneath her lashes. Damn. Last night had awakened something in her. She'd been growing more comfortable around him with each passing day but after what they'd done the night before, it had changed something. Something wonderful and wild and he couldn't wait until tonight when they could give a shot at recreating it. Or doing more. She knew he'd been holding back on her, and it was getting harder every day, but he had no road map for dating or making love to a single mother. He was taking all his cues from her and it was already beyond satisfying. Really, he might not ever recover if she gave him all of herself.\n\n\"All right.\" She sighed and tugged his head down for a thorough kiss before stepping away from him. \"You should go. We're crazy busy.\"\n\nAlexei nodded and touched her cheek before they walked out of the back room together. He waved at Sarah as he left the store and the woman waved back with a friendly smile.\n\nAt home, he did his usual round of yoga to unwind after practice and showered. He did some laundry and checked in with his agent. The man had secured him a new sponsorship deal that would require some time to shoot ads in the coming weeks, but he didn't mind. He was already planning to use the money for something really important, and a few afternoons here and there were more than worth it.\n\nFinally, Charlotte texted that she was on her way home after picking up Zoe from daycare. He finished up his last bit of work and shut his computer down. Then he went upstairs to their place and was flipping through a cupcake recipe book when his girls walked in the door.\n\n\"Grumpy!\"\n\nZoe's now customary greeting always made him smile and he hurried over to sweep her into his arms for a hug. With his free arm, he pulled Charlotte in at the same time and gave them each a kiss on the cheek before setting Zoe down again.\n\n\"I don't know if you should call Alexei Grumpy, sweetie.\" Charlotte hung up their coats as she spoke. \"He's not grumpy anymore, is he?\"\n\nZoe pursed her lips as she looked him over, her hands on her hips like she was considering a serious issue. \"What do I call him instead?\"\n\nCharlotte snorted out a laugh and patted her daughter on the head. \"How about Alexei?\"\n\nZoe blew a raspberry. \"I like Grumpy.\"\n\n\"Me too.\" Alexei winked at the kid and when he looked at Charlotte again, she was giving him a mock scowl.\n\n\"Traitor.\"\n\nHe only winked. \"Hey, I found a new recipe for us to try, zaya.\"\n\n\"Yay!\" Zoe clapped her hands and dragged a chair up to the counter.\n\n\"While you two do that, I'm going to shower. What a long day.\"\n\nAlexei nodded and pulled her close for another hug and kiss before letting her go.\n\nAfter Charlotte was done in the shower, she helped with the cupcakes and frosting and they all settled in to watch a movie before dinner.\n\nBy the time they went to bed later, Charlotte was barely able to keep her eyes open. Alexei tucked her into bed and held her close, his lips to her hair as she fell asleep.\n\nYes, he had so many plans for her and her daughter. But now, tonight, this was perfect.\n\n\u2500\u2500\u2500\u2500\u2500\n\nSarah came to pick up Zoe on Saturday a little after two in the afternoon. Zoe was buzzing with anticipation over her sleepover with Auntie Sarah.\n\n\"You got everything packed, Gremlin?\"\n\nZoe bolted to her bedroom to double check. Charlotte smiled at her daughter's excitement and turned to her friend.\n\n\"Did you want some coffee or tea? Or do you have big plans for tonight that you need to rush off to?\"\n\nSarah shook her head and toed off her boots. \"I could go for a coffee. Traffic is an absolute bear out there, so there's no use planning anything today.\"\n\nCharlotte chuckled. \"For real.\"\n\nOn top of the fact that it was the weekend after Thanksgiving, it had snowed part of the night, covering the streets of Chicago with a nice layer of the white powder, with surprise patches of ice all over.\n\n\"So, tell me what's on tap for tonight.\" Charlotte said as she set the coffee to brew.\n\n\"Nothing major.\" Sarah sat on the couch. \"We'll go to my mom's for dinner, since she's been asking about the Gremlin anyway.\"\n\nSarah's mother, Gladys, had become a sort of surrogate grandmother to Zoe, after Sarah and Charlotte had become such good friends.\n\n\"Especially since she missed you guys at Thanksgiving.\"\n\n\"I missed her too.\" Charlotte sat next to Sarah. \"But I won't lie, Thanksgiving with Alexei's teammates was a lot of fun, too.\"\n\n\"Of course it was. Tell me everything.\"\n\nCharlotte recapped the event for her friend, making Sarah laugh when she described Zoe's antics with the kids she'd met.\n\n\"And they'll all be at her birthday party?\"\n\n\"Yes.\" Charlotte stood and walked over to pour their coffees as the pot finished cycling. \"Joelle is getting me all their contact info, but when I spoke to the parents the other night, they were all willing.\"\n\n\"Is that a game night?\"\n\n\"It is, but the birthday party will be over lunchtime and everyone will be gone at a decent hour.\"\n\n\"Sounds great. Am I invited?\"\n\nCharlotte chuckled as she handed the cup of coffee to her friend. \"Of course you are. You and your mom, or whoever else wants to come. I'll get you the details once I know what they are.\"\n\nThey chatted for a little while longer as Zoe bolted in and out of her bedroom, asking if one outfit or another was good, or if she was allowed to take two stuffed animals instead of one.\n\nFinally, Charlotte was waving them off and backing into her now silent apartment. For a moment, she didn't know what to do with herself. Then her phone chimed with a pre-game day ritual text message from Alexei.\n\nShe shot him a quick reply with well wishes for a good game, and a promise to watch the whole thing, then set the phone down, butterflies going mad in her stomach. She hadn't told Alexei about Zoe leaving for the night. Not that she was worried about his reaction. They'd been on the cusp of so much more for days. Weeks, really.\n\nNot that I'm expecting anything tonight either. Charlotte sighed and rubbed her hands over her face and ordered herself to calm down, for all the good that did.\n\nInstead, she focused on the things she could control. She started cleaning, which she did regularly, but with Zoe underfoot, it was never as thorough as she'd like. By dinnertime, she was a sweaty, red-faced mess but she'd finished everything she wanted to. She put something in the oven to warm for dinner while she hopped in the shower.\n\nFinally, she settled in to watch the game and eat dinner. Even without Zoe around, Charlotte was exhausted by the middle of the second period. She made herself some tea and endeavored to stay awake but dozed in and out as the third period started. By the end of the game, she'd vanished into a cat nap for a good twenty minutes but woke to find that the Blackhawks had won the game, 4-2.\n\nShe yawned and sat up, rubbing her eyes. The screen showed the men in suits sitting around a desk, discussing the game with footage running on the screens behind them. Charlotte watched, smiling when she glimpsed Alexei's face celebrating one of the goals. With another yawn, she stood and put her mug in the sink.\n\nAfter that nap, she thought she could stay awake now until Alexei got home. But ten minutes after sitting down on the couch again, she was drifting off, only to be woken later by the apartment door swinging open.\n\nAlexei swept in and locked the door behind himself as Charlotte struggled to sit up. He was by her side in another instant, tugging her up into his arms and turning to sit on the couch with her on his lap.\n\n\"Hi.\"\n\nShe smiled and hugged his big shoulders. \"Hi. Great game.\"\n\n\"Thank you.\" He brushed a kiss over her forehead, lifting one hand to cup her head as he met her eyes. \"You're tired?\"\n\nShe shook her head but when it was interrupted by a yawn, he chuckled.\n\n\"I'm sorry. I tried to stay awake through the whole game.\"\n\n\"It's okay. You're a busy lady.\" As he spoke, his eyes flicked to Zoe's bedroom door. A moment later, he blinked and dragged his gaze back to Charlotte's face. \"Where is Zoe?\"\n\nShe struggled to remain nonchalant. \"Oh, Sarah took her tonight. She wanted to spend some time with Zoe since we didn't see her and her family on Thanksgiving.\"\n\nAlexei nodded, his fingers sliding through her hair. \"She's gone all night?\"\n\nCharlotte's heart skipped a beat and she nodded. \"Yeah.\" Don't assume anything, don't assume anything. Maybe Alexei would want nothing more than to go to bed. He'd had a far more active evening than she had, after all.\n\n\"When will Zoe be home then?\"\n\nCharlotte shrugged. \"Sarah said she'd try to get her back here around noon tomorrow, maybe later, depending on how the morning goes.\"\n\n\"That's nice of her to spend the time with Zoe.\" Alexei ran his fingers through her hair again and one side of his mouth lifted in a smile. \"And for you to have time to yourself.\"\n\nCharlotte nodded with a smile, even as familiar guilt tugged at her. She was a mom, a single mom, the only parent Zoe had. It still didn't seem right for her to want any time to herself. She was supposed to be making it work, no matter what it took.\n\n\"Why are you making that face?\"\n\nWith a sigh, Charlotte explained. Or tried to. \"I like having the time to myself, I can't lie.\"\n\nHe nodded, his expression thoughtful as he listened, his fingers playing with the long strands of her hair.\n\n\"But I love Zoe so much and I chose to have her, when I could have taken a different path.\" She rubbed her cheek on Alexei's shoulder, her eyes stinging. \"I shouldn't want to shuffle her off to some baby-sitter when I don't have to work or anything.\"\n\n\"Why do you think this? You know people get baby-sitters for their kids all the time.\"\n\nShe shrugged. She knew that, logically. Sarah had certainly pointed it out often enough, and more recently. But she felt what she felt and the guilt wasn't so easily waved away. \"It's different for me.\"\n\n\"It's not.\" Alexei kissed her forehead and cupped a hand around her cheek to lift her face so their eyes met. \"I know what you're really saying. You think you should be the perfect mother, always sacrificing and never complaining.\"\n\n\"I don't--\"\n\nHe held a finger to her lips. \"I'm guessing it's because of your parents and everything that happened when you were pregnant.\"\n\nCharlotte's cheeks heated but she pressed her lips together to keep from admitting to anything.\n\n\"And yeah, you made the choice to have Zoe when you could have done it differently. But that doesn't mean you don't deserve a night or day to yourself every now and again.\" He huffed out a laugh and moved his finger. \"If anything, it means you deserve it more.\"\n\nCharlotte wasn't sure she agreed with that but hearing Alexei saying it was sweet and kind and she rewarded him with a kiss. She wrapped her arms around his neck and let her fingers sift through the damp ends of his hair.\n\n\"Let's go to bed, hm?\"\n\nShe nodded in agreement at his gruff words and climbed off his lap. They shut off the lights, the TV, and walked into her bedroom together. They stood together at her bathroom vanity, brushing their teeth, and smiling at each other in the mirror. It was all part of their now regular routine and Charlotte marveled, not for the first time, at how much her life had changed in the past two months.\n\nShe finished first and hurried to the bed, stripping down to her underwear in a flash before slipping between the covers. Alexei took his time walking to his side of the bed and his dark eyes remained fixed on Charlotte as he stripped.\n\nCharlotte's breath stuttered in her chest as she watched Alexei undress for her. There was no music and he didn't dance, but it was like a wild Magic Mike show all the same. And he didn't stop at his boxer briefs. Those were shucked as well, revealing the erection beneath before he slid into the covers beside her.\n\nWith a whimper, Charlotte went into his arms when he reached for her, tilting her face up for his kiss. He eased into it, cupping her head and slanting his lips over hers in a slow, soft perusal of her mouth. She sighed and parted her lips, loving the hot slide of his tongue against hers.\n\nIt didn't take long before she was splayed on her back, with Alexei pinning her down, one thick thigh between hers. She had her arms wrapped around his shoulders and rubbed herself against him, loving how the coarse hair on his chest made her nipples tingle.\n\n\"Alexei--\"\n\n\"Hmm?\" He didn't lift his head, the sound of his response vibrating on her neck as he licked his way to her ear. There, he nibbled on her ear lobe as he let his fingers drag in a feather-light touch over her shoulder and down her chest.\n\nWhen he pinched her already taut nipple, she let out a low groan and arched under him, as much as she could with all his weight holding her down. He did lift his head then, looking down at where he rolled her nipple between his thumb and forefinger. Before she could get another word out, if she'd even been articulate enough at the moment, he bent his head and wrapped his lips around her nipple.\n\nMoaning again, she threaded her fingers through his shaggy hair and held him there as he sucked, licked, and generally drove her mad.\n\n\"You don't want to be quiet tonight?\"\n\nShe huffed out a laugh and angled her chin down to look into his eyes. \"We don't have to be.\"\n\nHis lips quirked in a sexy grin and he held her gaze as his tongue flicked out, teasing her nipple again.\n\n\"I think I'd like to find out how loud you get.\" Alexei lifted himself over her, bringing their lips together again.\n\nCharlotte clasped him close, lifting her knees on either side of his hips. He thrust against her, the hard ridge of his arousal bumping her in the exact right spot to make her see stars. She shoved her head back against her pillow with a moan and panted as he licked her lips, her neck, and dropped lower, kissing a path back to her nipples. He teased one, then the other, cupping her breasts in his big hands and holding her down for his sensual assault.\n\nIn another breath, he was shifting lower still, trailing hot, wet kisses over her abdomen, pausing to dart his tongue into her belly button. She gasped and lifted her hips when he tugged her panties down, leaving them both naked and so very hot, nothing but skin against skin.\n\nHe pressed a palm to her inner thigh and shoved her legs wide. His head dropped and he covered her wet core with his mouth. His tongue slicked over her once and his moan rumbled all through her, moments before he licked again. This time, he slid deep, loving her with his tongue as she sobbed his name out loud into the dark room.\n\nHe made her come with such ease, such skill. She babbled nonsense, his name, a lot of the Lord's name taken in vain, and so much begging.\n\n\"Don't stop-- Oh, God, Alexei! Please!\" Not even realizing it, she clutched his hair in her fists, holding him to her as she undulated under his mouth, shamelessly riding his face and letting him do it to her again and again.\n\nWhen he surged over her again, clamping his mouth on hers, she drank in the taste of herself on his tongue and moaned again, wrapping all of herself around him. When he moved his hips between her shaking thighs, the tip of his cock bumped against her and she froze, her chest heaving.\n\nAlexei lifted his head, his eyes a little wild and his own chest pumping hard. He shoved a hand through her hair and lifted her head until she could see nothing but his eyes.\n\n\"I want you, lyubov.\"\n\nShe licked her lips, panting now. \"God, yes. I want you too.\"\n\nHis hips moved again, sliding through her wet folds and making them both gasp at the sensations.\n\n\"Don't move.\" His lips rubbed hers as he spoke, his voice so deep and rough.\n\nShe nodded and held still as he shuffled off the bed and dug through his pants. He dropped them after a moment, holding the package he'd gone for in one hand. Turning, he stared into Charlotte's eyes as he ripped it open and rolled the condom down his thick length. She watched it all, her heart tripping over itself in her chest and her breath coming in short gasps as he crawled back onto the bed.\n\nNerves swamped her as he brought their lips back together, his heavy thigh nudging hers wide again. As if sensing it, Alexei lifted his head and brushed her messy hair from her face.\n\n\"You want this?\" As he spoke, he reached down, angling the tip of his erection to rub over her most sensitive spot.\n\nShe seized her bottom lip between her teeth and arched when he did it again. \"Alexei--\"\n\n\"Because I'll stop if you want me to.\" He kissed her cheek and closed eyelids, his one hand holding her head, the other still rubbing himself on her below. \"I'll do anything you want, just say the word.\"\n\n\"I want you.\" She swallowed hard and forced herself to meet his dark gaze. \"But I'm scared too.\"\n\nHe stilled. \"Of me?\"\n\n\"No, never.\" She lifted her head to kiss him. \"But I haven't done this is in a while.\"\n\nHe gave her a gentle smile and nodded. \"I know. We can go slow, lyubov.\"\n\n\"Okay.\" Charlotte drew in a deep breath and slid her hands through his hair, drawing him down until his chest rubbed hers. \"I want that, please.\"\n\n\"Anything,\" he whispered it against her lips as he slowly lowered himself, fitting them together. \"Anything for you.\"\n\nShe opened her mouth, breathing hard and fast as he slid into her, slow, just as he'd promised. Fire licked through her veins as he held still a moment, pulling back. She gasped and one hand moved to his shoulder, her fingertips digging into the muscle there.\n\n\"Shh, it's okay.\"\n\nShe tossed her head to one side, groaning when he pumped his hips once, sliding back inside her. He held still a moment, kissing her cheek, her ear, licking a path down her neck. One big hand held her hip, keeping her still as he withdrew again.\n\n\"No!\" She clawed at him, desperate to keep him close, to keep their bodies joined.\n\nHis deep chuckle rumbled through her chest and he lifted his head, holding his lips to hers. \"I will make it good, lyubov, trust me.\"\n\nShe did trust him. She trusted him with everything she had. Her heart, her pleasure, every inch of her overheated body. And he delivered. Oh boy, did he ever.\n\nHis muscles tensed under her hands a second before he pressed deep, sliding all the way in until he filled her up completely. She cried out, all her nerve-endings singing with pleasure that she'd never had before.\n\nHe kissed her face, her lips, sliding his tongue into her mouth and swallowing her noises as he began to move. God, so slow, so very slow, every inch of him dragging through her and back in again. Slow withdrawal, agonizingly slow back inside. All the way in, all the way out, over and over.\n\nCharlotte tossed her head on her pillow, moaning at each move he made. Her nails raked over his shoulders and down his back as she lifted her legs, cradling him closer. His hand slid under her neck, holding her as he licked her skin, kissing her lips, her neck, her ear, anywhere he could reach with his mouth. All the while, his body moved in hers, that same devastating pace driving her out of her mind.",
        "\"Alexei, please--\"\n\n\"What do you need?\" His voice was a harsh rasp in her ear, his breath hot on the sensitive skin there.\n\n\"I need--\" She arched as he gave a hard, rushed snap of his hips. \"Oh, God, I need--\"\n\n\"What?\" He closed his teeth on her ear lobe and tugged, sending a jolt of fire through her veins. \"Tell me.\"\n\nShe couldn't articulate a thing. She couldn't have said her name or his at that moment. As the first tremor of her climax rippled through her body, he let out a growl she'd never heard from him before. His hand clamped around her knee and he shoved her legs wide as she came apart under the steady onslaught of his thrusts.\n\nIn a flash, he was no longer steady. His body tensed under her hands and between her thighs. She was mindless with pleasure now as he started to thrust faster, pushing hard and deep with each move of his hips. He lifted over her, his arms locking on either side of her head. She blinked up at him, her mouth hanging open as she shook through everything he did to her.\n\n\"Alexei--\"\n\nTheir eyes locked and his were so dark, wild with lust. For her. He made that noise again, moving harder, his movements not steady at all. Seconds later, he threw his head back, the tendons on his neck standing out as he came, his hips snapping hard against hers. She whimpered and moaned, clutching him close as he sank onto her, all his hard, hot body shaking with the force of his climax.\n\nThey stayed that way for several long minutes, both struggling to catch their breath, their bodies cooling as they calmed down. Alexei turned his head, his lips brushing over chin until their mouths came together. Charlotte blinked back sudden tears as she kissed him, holding him tighter until she gathered herself.\n\nHe lifted his head, shifting to one elbow so he could lever some of his weight off of her. \"Are you all right?\"\n\nShe nodded, her breath stuttering once in her chest. She gave him a weak smile and sighed as he brushed the hair from her face before cupping her cheek in his palm. \"I'm better than all right.\"\n\nHe kissed her then, a long, slow kiss that tilted her straight over the edge into love. She loved him. This big, grumpy, warm ball of gentle affection, she loved with all her heart. In the cooling aftermath of what he'd done to her, she let it out.\n\n\"I love you.\"\n\nThe words were spoken against his lips and so she knew that he smiled in response before kissing her again.\n\n\"I love you, too.\"\n\nCharlotte blinked as he lifted his head, his thumb rubbing along the line of her jaw. \"You do?\"\n\n\"Yes. Didn't you know this already?\"\n\n\"You never said.\"\n\nHe lowered his mouth to hers again. \"Neither did you.\"\n\nCharlotte shivered as the words washed over her lips. She enjoyed this speaking mouth-to-mouth thing. A lot. \"I didn't know until just now.\"\n\n\"Just now?\" He arched a brow and moved, making her realize they were still joined. \"When I did this to you?\"\n\nA giggle burst out of her, one that turned to a gasp as he moved again. \"It wasn't that.\"\n\nAnother thrust.\n\n\"Okay, not just that.\" She sighed and ran her hands back up to his shoulders. She loved his muscles and being able to caress his whole body whenever she wanted. She'd never get tired of copping a feel. \"It was this, after.\" She pressed her palm to his cheek, as he'd done to her. And again, she held her lips to his when she said it again. \"I love you.\"\n\nWith a growl, he took her mouth again in a kiss that left her in no doubt of his virility. He separated them only long enough to don a new condom and then they were together again. There was no slow, steady pace this time. They thrust and twisted and made each other come until they collapsed in a sweaty tangle of limbs, falling fast asleep.\n\n\u2500\u2500\u2500\u2500\u2500\n\nAlexei woke at some point in the night, or very early morning depending on how one viewed it, and found himself on his side, Charlotte's back to him, a shadow in the dark room. She was tipped mostly on her stomach, her hair a dark mass on her pillow, and he had one hand tangled in the ends of it. They'd fallen asleep together but he knew after so many nights together already that she was a restless sleeper, moving away or back to him more than once. He didn't mind and took a moment to watch her back lifting with each deep breath she took.\n\nHe was afraid that he'd never get enough of Charlotte now that he knew how she felt coming apart around him. That first moment when he'd slid into her body, he knew he'd never be the same again. It had taken every ounce of his self-control and discipline not to pound into her like an animal.\n\nFlexing his fingers, he brushed her hair loose and rubbed it down on her pillow before sliding closer to her on the bed. He nuzzled his face into her neck, inhaling her warm, lush scent. She stirred as he wrapped his arms around her, settling their bodies together, his chest to her back, her bottom curved into the cradle of his thighs, his rapidly growing erection nestled between them.\n\nHe cursed his lack of forethought in not storing a box of condoms in her place before tonight. He'd only started carrying the two condoms they'd already used earlier in the week, before Thanksgiving. He hadn't assumed anything but he'd wanted to be prepared for whenever Charlotte was ready for that step.\n\nShe murmured in her sleep and stretched in his hold, her butt rubbing against his hard length, making him suck in a breath. Well, he might not have a condom, but he would make sure she was satisfied.\n\nPressing his mouth to her neck, tasting the lingering salt of her sweat and the base flavor of her alone, he slipped his hand between her thighs. She jolted in his arms and he pressed an open-mouthed kiss to the back of her neck. She shivered and twisted, trying to look over her shoulder.\n\n\"Alexei?\" Her sweet voice, leaden and rough with sleep, had him squeezing his eyes shut to regain control.\n\n\"Shh. Let me put you back to sleep, lyubov.\"\n\nHer breath hissed out of her as he slicked his fingers through her damp folds.\n\n\"Sore?\"\n\nShe nodded once but parted her legs for him all the same.\n\n\"I'll be gentle.\"\n\nWhen she offered no response other than a long, weak moan, Alexei grinned against her neck and did as he promised. He teased and played with her, relearning every groove and every spot that made her gasp. When she cried out his name, her nails scraping his wrist, he wanted nothing more than to proclaim to the world that he was the fucking man.\n\n\"Sleep, lyubov moya.\"\n\n\"What's that mean?\"\n\nHe didn't answer her sleepy, blissed-out question. Instead, he kissed her neck, petting her long and slow for a few more seconds until she stopped shaking and drifted off in his arms again. It took him some time to calm down and join her, but he'd never been more satisfied.\n\n\u2500\u2500\u2500\u2500\u2500\n\nIn the morning, Alexei woke to an empty bed. He frowned as he turned his head to find Charlotte's pillow empty. He let out a jaw-cracking yawn and shoved up from the bed, scrubbing a hand over his face and through his hair. Shuffling to the bathroom, he splashed some cold water on his face after washing up. Then he pulled on his pants from the day before --wondering where his shirt was-- and walked out to find Charlotte sitting on the couch, a half-eaten bowl of cereal on her lap. Wearing nothing but his shirt.\n\nShe looked up at him as he appeared and her cheeks turned pink, the spoon halfway to her lips.\n\nUnable to stop the happy smile from spreading across his face, Alexei crossed to her and bent at the waist to steal a sugary kiss.\n\n\"Good morning.\"\n\n\"Morning.\" Her cheeks stayed pink but her aquamarine eyes sparkled at him. \"How did you sleep?\"\n\n\"Best sleep in weeks.\"\n\nShe grinned and nodded. \"Me too.\"\n\nHe chuckled and kissed her again before straightening. After grabbing some cereal for himself, he joined her on the couch and asked what they were watching.\n\n\"Oh, just a nature show.\"\n\nHe nodded, polishing off his bowl of cereal a few minutes after she finished hers. He carried their dirty dishes to the dishwasher, put them away, and walked into the master bathroom. There, he started running water in the tub, testing the temperature before walking back out to the living room.\n\nCharlotte gave him a curious look as he tugged her to her feet. \"What are we doing?\"\n\n\"You're going to have a bath.\"\n\n\"I am?\"\n\n\"Yes.\" He paused in the doorway to her bathroom, cupping her cheek so he could tilt her face up to his. \"You'll have a bath because I know you must be sore.\"\n\nHer cheek warmed under his hand but she nodded. \"A little.\"\n\nHe kissed her, lingering on the sweet softness of her lips. He'd never get tired of kissing her. \"I'm going to go down to my place to grab a couple things, and I'll be back before you get out.\"\n\n\"Promise?\"\n\n\"Always, lyubov moya.\"\n\nCharlotte wrapped her hand around his wrist, her eyes wide. \"What does that mean?\"\n\nHe smiled, lowering his mouth to hers so the words touched her lips. \"It means 'my love'.\"\n\nShe blinked a few times, her eyes shining. \"So you have been telling me you love me. All this time.\"\n\n\"Yes.\"\n\nWith a sigh, she lifted onto her toes, wrapping her arms around his neck as she pressed her face against his chest. \"I love you, Alexei. So much.\"\n\nHe squeezed her tight, holding his mouth to her hair. \"As I love you.\"\n\nHe held her for another moment before he had to turn and shut off the running water. Then he pulled his shirt off over her head and helped her into the hot bath. She sank down with a sigh, her hair floating around her head as she gave him a sweet, happy smile.\n\n\"I'll be right back.\"\n\n\"Okay.\"\n\nHe dragged himself from the bathroom, rushing to his apartment downstairs to get a few things. He had the day off and only an early morning practice on Monday, leaving him plenty of time to spend with Charlotte and Zoe. If he grabbed everything he'd need for those two days, he wouldn't need to go back to his place for anything. All his spare time would be for his girls, just how he wanted it.\n\nHe changed into clean clothes and grabbed an extra pair of pants before ducking into his bathroom for the box of condoms there. Grinning like a fool, he hurried back to Charlotte's place and found her rising out of the bathtub, her skin flushed and warm-- and wet-- like Aphrodite from the waves.\n\nShe met his surprised look with a smile. \"I'm not sore anymore.\"\n\nAlexei let out a low groan, all his blood rushing south in sudden, firm agreement. He reached for her as she reached for him and he didn't even care that his clean clothes were soaked by her wet body.\n\nShe wrapped her legs around his waist, their lips coming together and their identical moans echoing in the small room.\n\nTurning, Alexei carried her to bed and tossed her down. He ripped his shirt off over his head and yanked his pants down while she watched with hungry eyes. Then he was on her, condom in place, driving deep in a single thrust. This time, he had no finesse, no control. Seeing her like he had, wet and arms open for him, he'd lost it, just completely lost his damn mind. So now he lost himself in her, in her wet, pliant body, her whimpers and cries, and let them both lose control.\n\n\u2500\u2500\u2500\u2500\u2500\n\nOf course, Sarah knew Charlotte too well to not say anything when she dropped Zoe off shortly after lunch that day.\n\nShe took one look at her friend, and Alexei, before grinning and cocking one eyebrow. \"I see you had an active night off.\"\n\n\"I worked last night.\" Alexei's tone was dry. He knew damn well what she meant but Charlotte was the only one embarrassed. After Zoe corralled him, he carried her to the couch and sat down with her on his lap, leaving Sarah and Charlotte to talk.\n\nNo, Charlotte wasn't embarrassed, not really. She couldn't be, not after what had happened between them the night before. Her whole body was alive for the first time in years and her heart thudded steady and fast for the man who had her daughter in his arms. She gave him a smile and he blew her a kiss before turning his attention to Zoe, giving her a moment with Sarah.\n\n\"Oh, honey.\" Sarah shook her head, her grin wider. \"You look wrung out.\"\n\nCharlotte burst into giddy giggles and shrugged. Wrung out, in all the best ways. \"I maybe did have my mind blown.\"\n\n\"Maybe?\" Sarah snorted out a laugh. \"There's no maybe about it.\" She stepped forward and gave Charlotte a quick, tight hug. \"I'm so happy for you, Char. He's a really great guy.\"\n\nThey turned and looked at where Zoe sat on Alexei's lap on the couch, recapping her night with Sarah. He nodded, his gaze entirely focused on the little girl.\n\n\"He is.\" Charlotte sighed and struggled to focus on Sarah. \"And you? How was your night? Was she good?\"\n\n\"She was a peach, as always.\" Sarah beamed. \"My mom was so happy to see her, she kept us until Gremlin fell asleep. I didn't even have to do anything, just get her home to bed.\"\n\nCharlotte grinned. \"That's great. Can I make you coffee? Or do you have to run?\"\n\nSarah looked at her phone, checking the time. \"I should run. I've got a date tonight and I have some errands to run before that.\"\n\n\"Ooh.\" Charlotte clasped her hands. \"I can't wait to hear about it. Call me tomorrow.\"\n\n\"Maybe.\" Sarah winked as she opened the door and stepped out into the hall. \"Depends on how well it goes, might not be able to talk tomorrow.\"\n\nCharlotte laughed and waved her friend off before turning to Alexei and Zoe. They were still engrossed in their conversation on the couch but she walked over and joined them, rubbing a hand over Zoe's back.\n\nThe little girl turned her chatter to her mother, repeating everything with wide eyes and hand gestures. Charlotte couldn't stop smiling as she listened and replied when needed. She met Alexei's eyes over Zoe's red head now and again, happiness that she hadn't ever known before settling in her chest.\n\nI love you, she mouthed in silence.\n\nAlexei's face relaxed into his rare grin and Charlotte's stomach somersaulted.\n\nSo very happy.\n\n\u2500\u2500\u2500\u2500\u2500\n\nA couple weeks later, on the day after Zoe's wild and rambunctious birthday party, Alexei surprised Charlotte with a day for just the two of them. He arranged for Joelle and Olle to watch Zoe for the afternoon, allowing him time to take Charlotte to a nice lunch and then to a dress boutique downtown.\n\n\"What are we doing here?\" Charlotte clung to his arm, chewing on her bottom lip as she eyed the couture surrounding them.\n\nAlexei smoothed a hand down her back. She'd been happy and chatty through their day so far, a relaxed smile on her face that was becoming her usual expression, as opposed to the harried and pinched look she'd usually sported when he first met her. He liked to think it was because of him, at least partly, and today was part of continuing to make her smile.\n\n\"I made arrangements for a private fitting for you.\"\n\nCharlotte stopped mid-stride and stared up at him, her perfect blue eyes wide. \"What do you mean?\"\n\nReaching with one hand, he brushed her loose braid over her shoulder. \"I have a team function next week and I want you there with me. It's black tie.\"\n\nHer cheeks warmed under his fingers as he stroked her skin. \"Oh. Well, I could have managed to find something to wear on my own. I certainly can't afford anything in here.\"\n\nHe smiled and cupped her jaw in his hand bending a little closer to her. \"You're not paying, lyubov.\"\n\nHer lips pressed together even as he saw her pupils flare. \"I am most certainly not allowing you to buy a dress for me.\"\n\nHe'd known all along this would be her reaction to even the suggestion of him buying her a dress, which was why he'd planned it out this way.\n\n\"I want to take care of you.\"\n\nHer eyes softened a moment later, and she lifted her hands to press them to his chest, both of them oblivious to the curious stares of the shop employees nearby.\n\n\"You don't have to buy me things or pay for stuff to take care of me.\"\n\n\"I know that. Today, though, I am buying you a dress.\" He pressed a quick kiss to her lips and straightened. \"Pick anything.\"\n\nCharlotte went back to looking apprehensive and Alexei had to stifle the urge to kiss that spot on her bottom lip that she kept nibbling.\n\n\"Hello, welcome to Modern Fashion.\" A tall woman with her hair in a severe bun approached, smiling widely at both Alexei and Charlotte. \"You must be Charlotte.\"\n\nBlushing, Charlotte nodded. \"That's me.\"\n\n\"I'm Sherry. Now, let's get right to it. What are we looking for today?\"\n\nCharlotte let out a little laugh. \"Apparently I have a black-tie function to attend next week.\"\n\nSherry's smiled widened. \"Sounds fabulous. Let's start over here, shall we?\"\n\nAlexei took a step back, allowing the enthusiastic employee to take Charlotte around the store. At some point, he found himself seated on a cushy little sofa in the back dressing room area, a tiny teacup in his big hand, while he waited for Charlotte to walk out in the first dress she'd decided to try on.\n\n\"This is way too long. Promise not to laugh?\"\n\nHe scoffed and held the teacup on his thigh. \"Come out here, lyubov moya.\"\n\nCharlotte heaved a sigh and the curtain swept back. She came out in a black dress that was indeed a foot too long for her slight frame. She bunched it up in her hands and tottered over to the three-way mirrors. Alexei eyed her shape in the dress and the expression on her face and slowly shook his head when she met his gaze in the reflection.\n\n\"You don't like it?\"\n\nHe smiled. \"You don't like it, so I don't.\"\n\nShe turned and looked at him properly. \"You're really not going to give me your opinion? You'll just agree to everything I say about what I try on?\"\n\n\"Yes.\" He tipped his head to one side when she didn't look pleased by his response. \"You're the one who has to wear the dress. You'd rather I pick something for you?\"\n\nShe looked down, plucking at the front of the dress. \"I don't know. It's not like I have a lot of experience finding something to wear for black-tie functions.\"\n\n\"You find something you love wearing.\" Alexei shrugged. Honestly, he didn't care if she wanted to wear one of the old dresses in the corner of her closet, but he knew she'd want to match the other women they'd see at the function. She would be embarrassed otherwise and that was the last thing he wanted. He wanted the night to be fun for both of them.\n\nShe glanced up at him and then away. \"Okay. I don't like this one.\"\n\n\"Then try another.\"\n\nShe nodded and hurried back to the dressing room.\n\nSherry stopped in a minute later, while Charlotte was still hidden from view. \"How's she doing?\"\n\nAlexei opened his mouth to respond but Charlotte swept back out in a dark red dress that was all wrong for her shape and height. He tried not to frown but he could tell when she met his gaze that he failed. Her face fell as she took a few turns in front of the mirror.\n\n\"Not right.\" Sighing, Charlotte scurried back to the dressing room.\n\nAlexei scratched his chin and glanced up at Sherry beside him. The woman had a pleasant smile on her face but a line bisected her brows.\n\n\"She only picked the cheapest options, didn't she?\"\n\nHe pitched his voice low and Sherry hesitated before nodding once.\n\n\"May I ask a favor?\"\n\nSherry nodded again, shifting so she faced him.\n\n\"You're very experienced at finding dresses to suit the women who come in, yes?\"\n\n\"Yes, I've been here for almost ten years.\"\n\n\"If I were to suggest you find a selection of dresses that would be suited to her specifically, would you have some in mind?\"\n\nSherry's smile started to widen and she nodded. \"Of course.\"\n\nAlexei glanced at the dressing room curtain. \"Tear off the prices before you give them to her.\"\n\nSherry turned away without another word and hurried off before Charlotte came out with her next dress on. This time it was a blue dress and the color was very nice with Charlotte's complexion and hair, but the shape was all wrong.",
        "As she was mid-change next time, Sherry swept back in, an armful of new dresses. \"Knock, knock!\" she called out as she got to the curtained dressing room. \"I've got some new ones I think you should try.\"\n\nThe curtain twitched a bit to one side and Sherry handed in the new selections. When she turned back towards Alexei, the tall woman gave him a firm nod and he responded with one of his own.\n\nHe didn't care what it cost, or how much time it took to convince Charlotte that she deserved this, but he wasn't leaving this store until she had a dress that made her feel like the most beautiful woman in the world. How he already viewed her.\n\nA few more minutes passed and then Charlotte came out, wearing a dress that was much better suited for her. Alexei couldn't stop smiling as she flounced up to the big mirrors, twisting one way, then the other.\n\n\"This one is so pretty.\" Charlotte faced him with a smile that took his breath away.\n\nShe was right. The dress was lovely, tucked in around her waist with several folds and plunging to a deep V over her chest. The length was a little long, but wouldn't take much to shorten, and the color was flattering.\n\n\"It is. Do you like it?\"\n\nCharlotte nodded. \"But Sherry brought me six other new ones to try too.\"\n\n\"So keep trying them on.\" Alexei sipped his now cold tea. \"I'm in no rush, lyubov.\"\n\nShe hurried back to the dressing room for another of Sherry's selections. Alexei exchanged a grateful look with the shop employee.\n\n\"Thank you.\"\n\nSherry nodded, her smile soft. \"I think it's lovely what you're doing for her.\"\n\nAlexei shifted. \"It's nothing.\"\n\n\"It is.\" Sherry folded her hands in front of her stomach. \"Every woman deserves to have someone look at them the way you look at her.\"\n\nAlexei had no ready response to that so he sipped the last of his tepid tea and waited for Charlotte to reappear.\n\nShe tried on two more dresses, her smile growing wider each time. Alexei was pleased, and frustrated in turn. Every time she came out with that excited look on her face, he had to tell himself not to jump to his feet and shove her back into the dressing room so he could do what he really wanted to do. Sherry was congenial but he didn't think anyone there would appreciate him having his way with Charlotte in the middle of their store.\n\nFinally, Charlotte walked out of the dressing room with a glow in her eyes that told him this was the dress. It was gorgeous, hitting her at exactly the right ankle length, hugging her curves and displaying her body to perfection. The color was also flattering, a dark shimmering blue with burnt gold accents at her neck, waist, and hemline, and in straps across her back. It had a sweetheart neckline and two thick straps that rested on the furthest points of her shoulders.\n\nSherry let out a gasp when Charlotte stepped out and up to the mirrors. \"Oh my God. It's like that dress was made for you.\"\n\nCharlotte blushed but her smile stayed in place. Alexei stood up and walked closer to her. He needed to touch her, with that radiant smile on her face calling to him.\n\nShe shifted, eyeing herself in the mirror and then turned to face him as he approached on one side.\n\nHe looked up at her on the little dais and nodded. \"This one.\"\n\n\"You're not even looking at the dress.\"\n\n\"It's not the dress.\" He picked up her hand and brushed a kiss over her knuckles. \"You feel beautiful now, yes?\"\n\nShe nodded once. \"I do.\"\n\nOut of the corner of his eye, he saw Sherry disappear, leaving them alone in the dressing area. He tugged on Charlotte's hand, turning her in a slow circle. She giggled, her mood buoyant now that she'd found something she loved.\n\nAlexei ran his hand over the edges of the shoulder straps, and down the criss-crossing straps on her back. \"How do you get out of this?\"\n\n\"Alexei!\" She covered her laughter with one hand and twisted, batting his hands away. \"I'm not taking it off out here.\"\n\nHe shook his head. \"No. I need to know for after the event. Or I could just reach under the skirt.\" As he spoke, he tugged at the voluminous folds of the skirt, getting a glimpse of her knees and a sliver of her thighs before she danced out of his grasp with another giddy laugh.\n\n\"Stop it!\" She darted around him and into the dressing room, her laughter trailing behind her.\n\nWell, in spite of his state of arousal and the fact that he couldn't do anything about it at the moment, Alexei called this day a success. He pulled his phone out and looked at the time. Look at that. Plenty of time before he had to pick up Zoe from Olle and Joelle's. Time enough to get Charlotte to model the dress once more at home and find out how much he could accomplish under that skirt.\n\n\u2500\u2500\u2500\u2500\u2500\n\nCharlotte knew what he was doing when he suggested she try it on again when they got home later. She knew and didn't give a damn. She closed the bedroom door and slipped into the gorgeous dress and admired herself for a long minute in the bathroom mirror. Before she headed back to the living room where Alexei waited, she reached under the skirt and tugged her panties off. They were useless now anyway, with how aroused she was. She grabbed a pair of plain black pumps from her closet and stepped into them, wanting to give him the full effect.\n\nStifling a giddy giggle, she opened the door and strode out like a model on a runway. \"Well? What do you think?\"\n\nHe looked up from where he sat on the couch, his phone between his hands as he tapped the screen. He blinked and the phone slipped from his fingers.\n\nShe grinned and pointed to the phone on the floor. \"Be careful. My downstairs neighbor is very touchy about the noise levels.\"\n\nHis eyes narrowed and he rose to his feet, striding to stand before her, dwarfing her even in her high heels. \"Lift your skirt.\"\n\n\"I beg your pardon?\" But she was out of breath as she spoke, her heart pounding hard and fast in her chest.\n\nHe reached down and started bunching the fabric on her left side. \"Lift. Your. Skirt.\"\n\n\"Why?\" Even as she offered her token hesitation, she was reaching down on her other side to lift the fabric in her hand.\n\n\"You took your panties off, didn't you?\"\n\nHow could he possibly know that? Swallowing hard, she jerked her head from side-to-side. \"I would never do that.\"\n\nHe made some noise that might or might not have been agreement, lifting her skirt until his knuckles brushed over the bare skin at her hip. At the first touch, he let out a low groan and leaned down until he rested his forehead on hers.\n\n\"Lyubov moya.\"\n\n\"Yes?\" She loved the way he said the term of endearment. As if it was sheer torture to have her in his hands, naked under this beautiful dress.\n\nWithout words, he turned, grasping her by the hips and guided her until her knees were touching the front of her couch. With firm hands, he nudged her forward until she braced her hands on the back of the couch. Then he grasped handfuls of her skirt, lifting and shoving until there was a draft on the bare skin of her thighs and ass.\n\n\"Stunning.\"\n\nHe dragged his rough fingers up the skin on the backs of her thighs, and between them. She dropped her head between her outstretched arms and gasped as he cupped her, teasing her where she was so very, very aroused. For him.\n\n\"Alexei--\"\n\n\"Lift your knee.\"\n\nAs he spoke, she heard the familiar clink of his belt buckle and need jolted through her. She lifted her knee and rested it on the couch cushion. His hot palm landed on her lower back and she arched under his hold when his other hand swept between her thighs again.\n\n\"Have you been like this all afternoon?\" He stroked her as he spoke, his fingers sliding into her. \"So hot and needy for me?\"\n\nShe bobbed her head in a nod, her throat constricting as delicious heat licked through her veins. His hand disappeared and there was a brief crinkle of a condom wrapper opening. Then he was touching her again, spreading her and when he touched her this time, it was the hard tip of him. He slid through her damp core, up and down, bumping her in the exact spot to make her see stars. Then he slammed deep in a single thrust, eliciting a cry from Charlotte.\n\nShe loved it when he did that. When he went from teasing to claiming in an instant. It filled her with heat, set all her nerve endings tingling, and drove her to the edge in minutes. He kept her skirt out of the way, his hands tight at her hips as he drove into her again and again. She moaned, arching as he stroked inside her, every inch of him making her feel alive.\n\n\"Alexei, I'm going to--\"\n\n\"Do it, lyubov.\" His hands tightened and his thrusts grew harder. \"I'm with you.\"\n\nAnd he was, her name a growl from his lips a moment later as he lost control, pounding into her without his usual finesse. She loved it, tossing her head back and gasping through every clenching wave of her orgasm.\n\nAs they came down from that dizzying high, Alexei kept a firm hold on her body. And the dress.\n\n\"Wait, don't move.\" He withdrew, keeping her skirt lifted. \"Here, give me one hand. Hold this.\" He cupped her hand around the folds of her skirt and she dropped her face to the couch cushions, laughter welling inside of her. His chuckle joined in second later as he hurried to grab a towel so she could clean up.\n\nFinally, she straightened and faced Alexei with a smile. \"So.\"\n\nHis smile was lopsided and so adorable she had to kiss it, so she did. \"So?\"\n\nShe smoothed a hand down the bodice of the dress. \"So, you like this dress.\"\n\n\"Yes.\"\n\n\"Would you like me to show you how to get me out of it properly?\"\n\nHe huffed out a laugh and nodded. Lifting her arm, she showed him the narrow zipper down the side of the dress. He tugged it down and helped her slip the straps down her arms, holding the dress as she braced herself on his shoulder to step out of it altogether. Then they both straightened and stared at each other, her in nothing but a pair of shoes and his eyes darkening with each passing second.\n\nHeaven help her, she loved his stamina and recovery time. In the weeks since they'd first become intimate, she'd been amazed every time he was able to make her crazy, multiple times in a night.\n\n\"It needs to be hung up properly.\" She turned and walked into the bedroom.\n\nHe followed, his eyes on her the entire time he draped the dress back on its hanger. Then he faced her as he began to disrobe himself, the sight of him naked making her breath catch, as always.\n\n\"Get on the bed.\"\n\nShe stepped backwards until the backs of her legs connected with the bed, then she leaned back, propping herself on her hands.\n\nHe dropped his pants and was on her seconds later, shoving her legs wide and dipping his head to taste her. She gasped, her knees coming up on either side of his torso, one shaking hand dropping to his head, his soft hair sliding through her fingers. There he stayed for several long minutes, until she was shaking all over, her breath rushing from her lungs.\n\nAt last, he shifted, grasping the backs of her knees and lifting her until she was in the center of her bed, her shoes falling to the floor. He lifted himself over her, caging her with his big arms on either side of her head. He kissed her, letting her taste herself on his tongue and she moaned into his mouth as he shifted his hips, thrusting against her once. She hadn't even noticed him rolling on a condom.\n\n\"Alexei--\" She swallowed and turned her head as he trailed kisses down her neck.\n\n\"Mmm?\" He nibbled on her neck where it curved into her shoulder and nudged her thighs wider before gliding between her folds.\n\nShe gasped, arching as he slid inside, a long, slow claiming that had her clawing at his back for more.\n\n\"You wanted something, lyubov?\" He lifted his head, the late afternoon shadows playing across his face, throwing his angular features into stark relief.\n\n\"We'll be late to get Zoe.\"\n\nHe chuckled, a deep sound that rumbled from his chest to hers. His thrusts increased in pace and she gasped.\n\n\"I'll make it quick, then.\"\n\nOh yes. She could get on board with that. She liked it when it was fast, when he lost all control. To be honest, she liked all the ways he made love to her. Slow, fast, a little bit wild like earlier on the couch, or the other morning when he'd joined her in the shower, where the sound of the running water had muffled most of her cries.\n\nHe kept his word, his finger strumming her above where they were joined, tripping her over the edge into ecstasy as he buried his face in her neck and went right along with her."
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey player",
        "hockey team",
        "single mom",
        "athlete",
        "sports romance",
        "sports",
        "hockey romance",
        "hockey"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/beneath-the-ice-ch-05"
}