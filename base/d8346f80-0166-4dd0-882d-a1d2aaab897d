{
    "title": "Falling",
    "pages": [
        "Isla is based on someone I saw in passing. Annabelle started as the one who would yank her out of her shell.\n\nBut as always seems to happen the characters I write have their own ideas about what their stories are. What I had thought was going to be a gentle flirty four-pager turned into... well, this.\n\nIt had several different titles during its gestation. I guess the one I'm publishing it under has meaning for Izzy and Bella both.\n\n-:- Falling -:-\n\nI slunk nervously through the double doors and out into the main exercise area, feeling exposed, ridiculous and completely out of place in my newly-purchased leggings, running shoes and lycra top. The air was cool, verging on chilly, and I shivered as I walked under a downdraft from the building's air-conditioning system.\n\nI had never been inside an actual Gymnasium before, and apart for the brief tour I'd been given with one of the staff I had, quite literally, no idea of what I was getting myself in to.\n\nI stared around at all the men and women, busy and focussed on their various fitness-related activities.\n\nI felt small and lost.\n\nEveryone looked so comfortable with themselves. No matter their size, shape or general condition, every one of them seemed to fit within this space.\n\nI envied them all.\n\nThen I took a deep breath, sighed it out.\n\nAfter all - nothing ventured, nothing lost.\n\nA line of bicycle-like machines with pedals and comfortable-looking seats was closest. I picked one of the machines, sat self-consciously on it, and stared at the screen with its friendly and encouraging green start button.\n\nIt was well past time to do something about the sorry state of myself.\n\n\"Come on,\" I said, softly. \"You can do this.\"\n\nI managed thirty minutes before I felt too sweaty and yuck to continue, and I groaned as I slid my burning thighs off the seat and tried to stand on my spaghetti legs. I stood, breathing hard. Then I staggered off to try to find the showers.\n\nI was a realist. I knew this would be the first step of a long journey.\n\nBut I was also proud that I had taken it.\n\nAfter all, that was what mattered.\n\n.:.\n\nIt would be hard to put my finger on the precise chain of events that had woken the urge in me and driven me to sign up. Some strange combination of the weather, disgust with myself at needing to go up a size in trousers once more, and the fortuitous arrival of a promotional flyer in my postbox - clearly they had all played their roles well.\n\nI'd have found it even more difficult to explain how and why I went the second time, when my legs were screaming bloody murder at me and I had to roll myself out of my bed in the morning to even start the day. Any illusions I'd harboured about my physical health were swiftly incinerated; the long-ago memories of being able to run and dance and play netball for hours at a time were just that - memories.\n\nBut I persevered. Stubbornness flowed from some deep reservoir that I didn't rightly understand, and I dug in and refused to give in to the strident, unhelpful part of me that wanted to laugh all this nonsense off and go buy and consume large quantities of chocolate.\n\nI slowly stopped resenting the time I spent on the machines, and then, in some weird psychic twist, I began to enjoy the hour, sometimes two, that I could spend on bike or a treadmill or stair machine every second to third night.\n\nI had nothing else meaningful in my life, and this gave me time amongst people, doing something positive with the hours I'd otherwise be wasting, mindlessly browsing the Internet to stave off loneliness and the black crow of depression that alway cawed in the shadows, waiting...\n\nMy favourite became and then firmly remained the spinning bikes. They were marshalled against a low wooden divider, beyond which was a vacant space that the gym clearly had not yet formed a concrete plan for. I'd sit or, later, stand on a bike, sweating and burning, staring off into the empty space and wondering what it would become.\n\nSoon enough my curiosity was sated - workmen would be clearing up when I arrived in the evenings, and day by day strange bulbous wooden structures seemed to spring up like fantastic fungi. As more structure was added I realised that it would be a series of climbing walls, part of an expansion into lifestyle-related activities that the gym was starting to advertise.\n\nThick mats were put down as the various sections were completed, and people began to clamber up, down and sideways along the angular, protrusion-studded framing.\n\nI'd sit, peddling, sweating myself gradually slimmer as I watched lithe, wiry superhumans do things with their bodies that I could not even comprehend.\n\nI saw people hang by their hands. I saw people race one another from hold to hold - cheered on by onlookers. I saw people fall, two or three metres sometimes, onto the padding - sometimes even onto their faces - and they'd stand, laughing, high-fiving their friends before they'd go and try again.\n\nMadmen and madwomen, all of them.\n\nBut they were beautiful, unworldly and inspiring, and I enjoyed watching them, envious of the sense of camaraderie they all seemed to share.\n\nAnd I'd feed off the periphery of their happy buzz to push my body harder.\n\n.:.\n\nMy health improved quickly. My back pain dissipated and then departed. I lost a dress size, and a bra size, and one lovely bright autumn morning I caught a rather good looking man giving me a wistful glance as I made my way in to work.\n\nIt had been a while since I'd been aware of anyone looking at me, and that brief window of knowing I'd been noticed made my week and hardened my motivation even further. Where there was one, there might soon be others.\n\nI rewarded myself with a lunchtime shopping run for a new gym outfit - ankle-length navy tights and a mid-blue long-sleeved quick-dry top that caught and enhanced the colour of my eyes.\n\nI was extremely pleased with the effect. It was so much better than the shapeless camouflage I'd made do with up until now.\n\nThat night, buoyed with a newfound confidence, I ventured in amongst the weight machines. I stared at the pictographs, watched other women using them and then, fighting off my natural shyness and fear of drawing attention, I even went so far as to ask one or two of the friendlier ladies what to do and how to do it.\n\nAnd from there, my routine and knowledge started to expand geometrically.\n\nI began to understand the language that my body was talking. I started to sleep properly. I began to read up on healthy diets and cut a lot of rubbish out of my weekday meals. And I learned how to give myself time to rest over weekends.\n\nBy the date of my twenty-sixth birthday I had lost my second dress size, and my small group of friends were all astounded when I appeared at my birthday drinks in a tiny little red and black cocktail dress that they'd last seen me in at my twenty-first.\n\nFor the first time in many years I could proudly admire myself in a mirror, and wear tight clothes in comfort - without any choking sense of self-consciousness.\n\nI was, very nearly, happy.\n\n.:.\n\nA girl appeared on the walls. Whip-thin and of average height, she'd have blended well into a crowd were it not for the long, ornate, brunette braid that first drew my attention as it dangled like a banner behind her.\n\nOnce I'd noticed her I found it hard not to see her everywhere; I'd come to the gym and find her lifting free weights, or running at pace on a treadmill, or holding a plank position for minutes at a time.\n\nShe always wore calf-length black leggings and a tight sky-blue cotton-lycra vest through which a sports bra would occasionally peek; I had an amusing daydream in which she had a wall-to-ceiling wardrobe containing nothing but pair after pair of these three items of clothing.\n\nHer eyes were a rich hazel, and while she didn't smile much, when she did the slight gap between her two top teeth just made her all the more endearing and fascinating to me.\n\nI watched as she grew in popularity with the other climbers - I soon worked out it was because she seemed to be an anthropomorphic spider rather than a human. I'd sometimes simply sit and stare her in disbelief, almost entirely forgetting where I was as I watched her cling to infinitesimal handholds and imaginary footholds that others simply could not find, let alone use.\n\nI once even ventured out onto the mats to try to verify if a hold I'd seen her dangling from was as small as I thought it was.\n\nIt turned out to be even smaller, and I shook my head in thorough disbelief at her voodoo powers.\n\nShe had stark musculature that looked like it had been etched directly from an anatomy textbook, a stunning-if-slightly-angular face, and a caustic tongue that could clear the floor around her when she very occasionally felt the need to deploy it.\n\nI was awed by her, and tried to be subtle about the way I watched her.\n\nBut she caught my stares; she never said anything, she'd just arch an eyebrow slightly, smile a small smile, and go back to whatever she was doing.\n\nI'd flush hot and try not to do it again.\n\nAnd I'd always fail.\n\nShe was simply too mesmerising.\n\nAs time went on it seemed to me that she slowly gravitated towards me during her time off the wall. It was never overt, but when I looked around from whatever I was doing she'd be nearby; as if there were some weird field between us that kept us within a Goldilocks orbit of one another.\n\nAnd that pleased me far more than it really should have.\n\n.:.\n\nWinter arrived, icy and grim, and soon enough came the long, dark and lonely end of the year. I somehow managed to avoid gaining any weight over the holidays - thanks, I suppose, to the newfound appreciation of just how hard it would be to lose it again afterwards.\n\nMy mother was horrified by my sudden coolness towards her cooking and it took me a great deal of patience and vast expenditure of tact to prevent her taking mortal offence as I skipped her roast potatoes at our family Christmas lunch and opted to load up on protein and salad instead. But my self-evident health and quiet happiness mollified her somewhat - and my sister backed me all the way to the wall.\n\nNew Year's resolutions brought a fresh influx of faces at the gym as people made their traditional oaths to counter the Christmas spread. I ignored almost all of them; I had strong suspicions that most of them would make it through a month and then succumb to laziness.\n\nBut I did notice one of them, a tall, fair-haired, reasonably attractive man with what seemed to be a ready smile. He was usually around when I was, and seemed friendly enough, so I'd smile at him, greet him, occasionally make small talk with him. We settled into a nodding acquaintance of sorts; trading hellos and snippets of meaningless conversation in passing.\n\nOne evening I made the cardinal error of telling him my name, and regretted it almost immediately as he took that as an expression of interest and started coming over when I was doing weights or running, or when he decided I looked approachable, or when he was bored.\n\nHe'd stand in my peripheral vision, talking at me, interfering with my concentration, ruining my mood, impinging on my space, and constantly commenting, advising or suggesting how I should do things.\n\nIt very quickly drove me insane.\n\nI began to dread his presence, to the point where I'd feel a physical tightness manifest itself in my chest when I saw him.\n\nI varied my days and times to try to gain some desperately-craved space. I signed up for random fitness classes to escape him... but nothing worked - he'd simply hang around, waiting for me.\n\nFrustrated and enraged, I clammed up. I started listening to music on my phone when I could. He seemed to get the idea after I pointedly ignored him a couple of times, and I felt a very real relief that I'd dealt with it and could go back to simply using the gym as I wanted, rather than having to run the ever-present gauntlet of this unwanted admirer.\n\nI was soon to discover just how na\u00efve I was.\n\n.:.\n\nIt was a miserable evening punctuated by intermittent showers of freezing rain and sleet, and the bitterly cold wind lashed the strip of exposed skin around my ankles as I exited the gym into the lurking night.\n\nI shivered and hunched deeper into my jacket as I walked towards the pedestrian gate, fervently hoping that I would get to the bus stop before the next cloudburst blew through.\n\nI stared at my phone as I walked, texting my sister, stupidly paying no attention to my surroundings.\n\nEmma was ranting about her man, and I was deeply mired in helping her disentangle his latest act of manifest stupidity...\n\n\"Isla?\"\n\nI froze for a moment, before I took a slow, shaky breath and turned to face him.\n\nHe stared at me from under the hood of his canvas jacket, grim face partly obscured in shadow.\n\nI swallowed as I became horribly aware of how dark and isolated the parking lot was, and how incredibly stupid I'd been to let my guard down like I had.\n\n\"What do you want?\" I said, trying to sound calm and disinterested. I knew that I could not afford to let my discomfort show.\n\n\"Why are you being such a bitch to me all of a sudden?\"\n\n\"Excuse me?\"\n\nHe advanced, and I took an instinctive half-step back.\n\n\"Why are you being so rude to me? I'm just being friendly. I thought we were friends. I thought you liked me.\"\n\n\"You are making me uncomfortable. Please, leave me alone and stop talking to me. I don't want to talk to you any more. I think you should go now, please.\"\n\n\"I'm just trying to be friendly to you, and you're being like this! What's wrong? Why aren't you talking to me any more? You don't even look at me any more. Met someone else, have you?\"\n\nHis voice rose in volume; I felt the icy clawing tendrils of real, primal fear.\n\nShit shit shit fuck shit...\n\nMy brain felt like it was wading through molasses.\n\nI wondered if he had a knife.\n\nI wondered if I'd be able to make it back to the front door of the gym if I dropped my bag and ran...\n\n\"Why won't you answer me? Think you're too good for me now?\"\n\nHe grabbed my arm roughly; his grip was painfully tight and his fingers dug into the flesh of my arm.\n\n\"Let go of me!\" I cried out, shrill and close to panic as I tried to shake myself free of him.\n\n\"Hey!\" shouted a woman, and I heard a burst of running footsteps as someone charged up and barged in between us.\n\nThe newcomer effortlessly broke his grip on me; he shouted out in pain as she did something brutal to his wrist.\n\n\"Is he bothering you?\" she demanded of me as she held his arm away from me.\n\n\"Yes,\" I said, heart hammering in my chest, unutterably grateful. \"Yes, he is. He's scaring me and he won't leave me alone.\"\n\nShe spun to confront my assailant, and I realised who she was by her elaborate braid.\n\n\"Fuck off,\" she told him, coldly. \"Fuck off, right now. If I see you near her again you'll regret it.\"\n\n\"Fuck off yourself, you bitch, this is a conversation between me and her,\" he snarled as he struggled fruitlessly to free himself from her vicelike grip.\n\nShe got right into his space; fearless and utterly contemptuous of him. He flinched back from her, then yelled in agony as she torqued his wrist further with little visible effort.\n\n\"Looks like a pretty one-sided conversation from where I'm standing. Get out of here or the next thing coming out of your mouth will be teeth. And when I've put you down on the ground I'll break one of your arms for good measure. Maybe I'll go further and see how far your hip goes before it dislocates. How would you like that? I think it would be an interesting experiment in physiology...\"\n\n\"Whatever, you fucking cunt. I'll leave. But I'll be back,\" he added, staring past her at me.\n\nMy champion held him pinioned for a few more seconds, then released him and stepped back - poised, fists clenched, staring at him as if she were daring him to chance his luck. He stared back at her, rubbing his wrist, before he turned and slunk off into the darkness, cursing and swearing at us.\n\nI slumped down behind her, and put my hands on my knees to support myself as I panted softly and shook with relief, close to tears, unable to believe how close a call I'd just had.\n\nI heard her let out a long, slow breath and she turned back to me. \"What a class one fuckstick. Hey. Are you ok? Did he hurt you?\"\n\n\"No and yes, he did,\" I whispered. I brushed the tears away and straightened up. \"I'm not at all ok. I nearly wet myself. Fuck, that was terrifying. Thank God you were there. Oh my God, thank you for that.\"\n\nShe linked her arm with mine and applied gentle pressure.\n\n\"Come. Let's go inside and report that to Reception; it's warm in there and you can sit for a bit and just focus on recovering. Odds are he'll try that again, if not with you then with someone else. I've seen him around the gym. He gives off bad vibes. I never liked him one bit. Do you know him?\"\n\n\"Just from here. I feel so stupid. I wish I'd never talked to him. God, I'm such an idiot.\"\n\n\"Chalk it up to experience. Come on. Lets go get you out of the cold and see about getting him banned from here.\"\n\nShe gently guided me back into the building, and hovered nearby while I described the encounter to the horrified women at the front desk. Then my guardian guided me to a table in the cafe and sat beside me, quiet and composed, arm around my shoulders as I shook my way through the adrenaline low that came crashing down onto me.\n\n.:.\n\n\"Are you ok yet?\" she asked, after my shivering had eased slightly.\n\n\"I can't stop shaking...\"\n\n\"That was a very scary situation. I'm not surprised. Fear is a hell of a drug. Oh... sorry, just give me two secs...\"\n\nA group of men had wandered through and she flagged them down and scurried over to them for a moment. They greeted her raucously, then quickly went still. A brief, muttered conversation took place, and I noticed some grim looks being flung my way before they wished her a reserved goodnight and went on their way.\n\n\"What did you say to them?\" I asked her softly when she sat down beside me again.\n\n\"I told them what happened to you. And I asked them to keep an eye out for him; that he was bad news and that we probably don't want him here any more. They're... lets call it unimpressed; he's not going to have a good time if he shows up here again.\"\n\n\"You guys sound like the Mafia,\" I said, nervously.\n\nShe gave me a small smile. \"We're a tight knit group. We look after one another. Most of those guys have girlfriends or sisters or both. I think you can probably connect the dots.\"\n\n\"Well... I really appreciate that you were there. Thank you. That could have gone...\"\n\n\"Much worse,\" she softly completed my sentence. \"I'm really glad I was there as well. I'm Annabelle.\"\n\n\"... I'm Isla,\" I said, softly. \"Um... would you really have punched him? And... broken his arm?\"\n\n\"Yes. With a great deal of pleasure.\"\n\n\"You're so much braver than I am.\"\n\nShe snorted softly. \"Sometimes, maybe. It's probably mostly stupidity though. Come. I'm parked over there,\" she added, pointing at a battered Renault Clio that I could faintly see through the window. \"Can I give you a lift somewhere safe?\"\n\n\"My mummy always told me not to get into cars with strangers,\" I said, hamming it up a bit as relief made me silly.\n\nShe laughed softly, and offered me her strong, slender hand.\n\n.:.\n\n\"Would you like to come up?\" I asked. \"I feel like I at least owe you a cup of coffee for tonight.\"\n\nShe shook her head. \"Thanks, but no thanks. I've got some... stuff... to do tonight that I'm already overdue on. I'll claim the coffee some other time, if you'd like? Maybe buy me a take away one next time you're at gym and we'll call it even.\"\n\n\"It seems like such a cheap way to say thank you for your heroism,\" I said, softly.\n\nShe shook her head. \"I'm just... really glad that I noticed what he was doing in time to help. And that he didn't have a knife on him,\" she added ruefully.",
        "\"So am I,\" I breathed. I sighed, and opened the car door. \"Thank you again, Annabelle.\"\n\n\"You're welcome, Isla. When will you be back at gym?\"\n\n\"Tomorrow... I guess. I guess he will be too,\" I added, in an undertone.\n\n\"He's a gormless idiot, then. I'll keep an eye out for you. What time will you be there?\"\n\n\"Probably around half past six I'd imagine. That's when I usually get there.\"\n\n\"I'll make sure I'm somewhere visible in case he shows his face.\"\n\nI flushed. \"Thank you,\" I whispered. \"That's very kind of you. You really don't need to though...\"\n\n\"It's fine. I'd do it anyway,\" she said. She smiled and waved at me, and I closed the door behind me.\n\nShe waited, her Renault rattling and grumbling noisily as I fumbled at the front door of the block of flats. She hooted once and drove off once she was sure that I was ok.\n\nI stumbled my way upstairs, locked my door behind me, and shot the deadbolt home for good measure.\n\nThen I poured myself a large glass of wine, sat on my hand-me-down couch, and waited for my sister to answer my call.\n\n.:.\n\n\"Are you sure you're ok?\"\n\nI smiled gratefully at the concern I could hear in Emma's voice.\n\n\"Yeah. I'm ok now,\" I said. \"Still shaking a bit. But the door is locked and I've got my wine and so I'm slowly calming down.\"\n\n\"God, I'm so glad you're ok. You know you shouldn't let your guard down like that, Izzy.\"\n\n\"I was busy texting you, you tart,\" I said.\n\n\"Sorry. Fuck, I'd never have forgiven myself if I caused you to get hurt. There I was ranting about trivialities...\"\n\n\"It's my own stupidity. He seemed harmless. I should never have told him my name.\"\n\n\"He'd probably still have waited for you. It sounds like he thinks you owe him something for being a 'nice guy'. Ick.\"\n\n\"That's the last time I'm friendly with anyone there. Well. Make that any guy who I've not scrutinised and vetted first.\"\n\n\"You're learning. So... tell me about this girl who ran him off. She sounds awesome.\"\n\n\"She's amazing. She just came charging in like... like a Fury... and threatened to snap him like a twig. It was... magnificent. I'd have swooned at her feet if I wasn't on the verge of pissing myself.\"\n\n\"You should get her address so I can send her something to say thank you.\"\n\n\"Oh, Em, you really don't need to do that...\"\n\n\"Of course I do, she almost certainly saved you from... well, you can probably imagine what a guy like that would do to you. And besides, I get tons of samples that we can never get rid of. Get her address, Izzy, and I'll send her a nice basket of goodies from both of us.\"\n\n\"Send me some too, please, I'm running low on sparklies.\"\n\n\"Sure. I've got some lipstick samples in the perfect colour for you - prostitute pink.\"\n\n\"Oh, you bitch!\"\n\nAnd we laughed in our age old way and diverged into our typical banter and nonsense. At a scant year and a bit older than me, Em was my closest friend and most important confidante.\n\nShe scolded me gently again once more before saying goodnight, and told me that I should watch my back.\n\nAnd that put ice down my spine as I realised I'd have to have eyes on the back of my head for the next month or so, especially going to and from the gym.\n\nI sighed.\n\nWhat a pain in the proverbial.\n\nI made myself a small meal and tried to find something to watch on Netflix, but the bruises he'd left on my left arm throbbed and I was grumpy and out of sorts so it took me some time to settle. I eventually found myself something suitably brainless, and nested under my duvet as time crawled past.\n\nBut my thoughts kept straying, replaying the scene. Again and again I relived the crippling dread I'd felt when he'd said my name, the choking fear of harm when I realised that I was out of my depth.\n\nAnd the flood of relief that had washed over me when she'd charged in and run him off.\n\nI hoped that she was having a good evening and enjoying a well-deserved showering of positive Karma from the Universe as a whole.\n\nAnd I tried hard to ignore the tiny, vicious part of me that wished she'd kicked his arse so that I could have had an excuse to fall for her, just a little.\n\n.:.\n\nA large part of me had not wanted to go back.\n\nBut the stubborn core had dug its heels in and refused to let me back down.\n\nSo I'd packed my bag and taken it to work and set my shoulders doggedly when I left to go to gym.\n\nI prayed to whatever gods might be listening that he would not be there.\n\nAnd I sighed in unspeakable relief as I saw her loitering against the wall by the gym's front doors. She pushed away and came to greet me.\n\n\"All ok?\" she asked, eyebrow arched. \"Any sign of our friend?\"\n\n\"No. Thank God.\"\n\n\"Ok then. Come on. I'm going to go have some fun on the wall but I'll keep an eye on you. If he shows up I'll see him and we'll come and flatten him.\"\n\n\"Not that I want you to think that I'm complaining... but...\"\n\n\"Why am I doing this?\" she asked, grinning as she held the door for me.\n\n\"Well... yes.\"\n\n\"Firstly, this is a gym, not a bar. Secondly, women come here to exercise, not to get hit on. Thirdly, I don't like him - at all. Fourthly, I never liked how he hovered around you; I found it offensive. Fifthly, you're sweet, and nice, and really don't deserve the griefing. And finally... well...\"\n\n\"What?\" I said, softly, as she paused.\n\n\"Someone like that... hurt my cousin, once.\"\n\n\"Oh.\"\n\nI stared at the floor, not quite sure what to say in response.\n\n\"Hey, cheer up, life is short,\" she said. She touched my shoulder, and I looked up again. \"Enjoy your gym session in peace. And don't you dare forget my coffee,\" she added, with a grin.\n\nI flushed. \"So I'll... see you later, then?\"\n\n\"Yep. You know where to find me,\" she added, giving me a wink, and I flushed hotter and tried to ignore the stupid flutter in my chest.\n\nShe loped off, and I stared after her, wistfully admiring how lithe she was; wishing I were the same. Then I shook my head. I was what I was. At least I was slimmer than I had been.\n\nI made for the locker room and got changed, then made my way out onto the floor.\n\nI settled happily into my routine, quickly working up a sweat, moving from machine to machine, enjoying myself for the first time in over a month, stealing occasional quick glances at my benefactress to check what she was up to whenever I needed a breather.\n\nShe was showing off; climbing what I'd since learned were the most challenging routes up the various walls; I could see her grin even from where I was.\n\nShe was unbelievable.\n\nI gasped as I saw her leap and catch a hold; I stared at her as she controlled her swing, pulled herself up and positioned her feet into spaces that I would swear under oath did not exist.\n\nA small group of her friends were also watching her and whistling in appreciation; one of them turned away, laughing and shaking her head in disbelief.\n\nThe muscles of her arms stood out starkly in the halogen lighting, and I could see the faint sheen of sweat on her neck and forearms even from where I was.\n\nAgile as a cat and utterly tenacious, she attacked route after route with what seemed like inexhaustible reserves of energy.\n\nThen she misjudged a leap and fell hard, and I experienced a sudden stabbing chill of fear.\n\nShe bounced up, laughing, shrugging off the concern and questions of her friends and disciples.\n\nBut I could see the way her expression changed when she turned away from them all, and I watched as she limped carefully to an open area and lowered herself gingerly onto a mat.\n\nShe'd hurt herself.\n\nThere was no way that I couldn't go and check on her.\n\nSo I quickly aborted my own workout and then, shy and uncertain, made my way over to where she was sitting and massaging her right knee.\n\n\"Hey,\" she grinned up at me.\n\n\"Hey,\" I said, as I squatted down next to her. \"Are you ok? I saw you fall.\"\n\n\"Yeah. Just twisted my leg when I landed. No biggie, I've had far worse. They clearly listened to the experts when they built this set of walls. They placed good mats to go with them,\" she said, slapping the vinyl under her. \"I barely felt that one.\"\n\n\"It looks like a very dangerous sport,\" I said, unconvinced.\n\n\"It can be if you're silly about it,\" she agreed. \"I'm... generally not.\"\n\n\"But those jumps you make...\" I said.\n\n\"All planned,\" she said. \"I know I can do them. I only fell because one of the holds was slippery. It probably hasn't been cleaned in a while and it's likely all gunky with sweat and old chalk powder.\"\n\n\"Gross,\" I shuddered.\n\n\"Yeah,\" she laughed. \"Such is the glamour of climbing. So... how're you doing? Enjoying the workout tonight?\"\n\n\"Yeah, it's so much nicer to be left alone.\"\n\n\"I know precisely what you mean.\"\n\n\"Um...\"\n\n\"Oh. No, I didn't mean you, silly,\" she said. \"Girls can't climb, you see. We're not evolved to do it like men can, or so I've been told many times. So most places I go climb at, there'll be a guy or two who view it as their role in life to show and tell me how to do things.\"\n\n\"Oh God. I bet that gets old.\"\n\n\"Very quickly,\" she agreed. \"Thankfully there's no sign of that here. It's a nice gym. It's why I started to come here. Anyway, I'm fine. Thanks for checking on me though. You've still got some machines left in your routine,\" she added with a grin.\n\n\"Um... I'm kind of done for now...\"\n\n\"Don't tell me you packed it in and came over just to check on me?\"\n\n\"Guilty as charged,\" I said, flushing.\n\nShe laughed, delighted that she'd caught me out. \"That's sweet, but unnecessary. I'm fine. But I appreciate the gesture,\" she added, smiling gently up at me, leaving me ever so slightly breathless and lightheaded.\n\n\"Are you going to climb any more?\" I asked, softly.\n\n\"Not tonight. It would be stupid; I'd just injure myself more.\"\n\n\"Um... so... how about that... coffee I owe you?\"\n\n\"Now that sounds like a great idea.\" She held out her hand. \"Help me up, will you? I'm going to hit the showers, then I'll meet you by the cafe.\"\n\nAnd that sounded eminently sensible, so I did the same.\n\n.:.\n\nI put her mug down in front of her, and sat down across from her. She set aside her phone and gave me a grateful smile. \"Thanks,\" she said. \"So. How're you really doing? Be honest with me. Are you ok?\"\n\nHer phone pinged; she ignored it.\n\n\"Oh, you know,\" I said softly. \"Walking on eggshells, jumping at noises, living on my nerves. The usual.\"\n\n\"Any bad dreams?\"\n\n\"No. Thankfully.\"\n\nShe snorted. \"That's one positive then. Well, though I don't usually like handing out advice to strangers, I think that you could do a lot worse than taking some self-defence classes.\"\n\n\"I'm not strong enough,\" I protested.\n\n\"It's not about strength, it's about turning the experience into something positive. It worked for Marie... sort of, anyway.\"\n\n\"Marie?\"\n\n\"My cousin. The one I... mentioned. It helped her recover... well, some of herself at least.\"\n\n\"Oh. Ok. I'll... think about it.\"\n\n\"You should.\"\n\nShe sipped her coffee, then winced and swore softly as she shifted her leg.\n\n\"Is it bad? Your leg?\"\n\n\"Moderately,\" she muttered. \"I'll crawl into the pharmacy on the way home and grab some painkillers. It's more the frustration that I can't stand - I know I'm going to have to rest when all I want to do is climb...\"\n\nHer phone pinged again, then again in short succession.\n\n\"Sorry,\" she said. \"My partner's in a needy mood.\"\n\n\"Don't mind me,\" I answered. I dug my own phone out to give her a bit of space.\n\n\"I didn't say I wanted to deal with it right now,\" she added, wryly.\n\n\"Oh. Um...\"\n\n\"I'm using you as an avoidance strategy, see.\"\n\n\"I... see. Um. Is everything ok?\"\n\nShe snorted. \"Not really. How long do you have?\"\n\n\"An hour or two... I guess?\"\n\n\"Can I be extremely selfish and self-centred and... beg some of your time?\"\n\n\"Of course! I owe you so much...\"\n\n\"You really don't,\" she interrupted me. \"You'd have done the same thing for me or anyone else.\"\n\n\"I doubt I'd have needed to for you...\"\n\nShe grinned. \"Because I'm so hardcore and scary, right?\"\n\nShe laughed at the way I flushed.\n\n\"I guess... um... so... what's on your mind? I'm... I don't want to pry, but...\"\n\nShe made a face. \"Just... I'm in a space where I don't like being home right now. And climbing is really the only escape I have available to me at the moment. So it's... complicated. Let's go with that.\"\n\n\"Is it because of... your partner?\"\n\n\"Yea, some of it is.\"\n\nI thought wistfully back on my own past wreckage. \"I'd love to offer world-changing advice but it's not an area I excel in. The opposite, really...\"\n\n\"How so?\"\n\n\"It's... been a while since anyone rated me as worth anything other than a quick, anonymous shag,\" I said softly.\n\n\"What? What do you mean? You're a really pretty girl... Ugh. I was about to say that men must find you beautiful, but then I remembered our 'friend' and realised that would be a little off colour. Sorry. I'm just... startled, lets say, that you've been... treated like that. That's a crime.\"\n\nI shrugged, embarrassed. \"I'm a bit thinner than I used to be. Maybe that's what you're seeing.\"\n\nShe leaned to one side and gave me a blatant up and down evaluation. \"You honestly don't look like you have much more to lose. Don't go any further, your proportions are to die for just the way they are.\"\n\nI flushed hot and stammered something appreciative.\n\nShe waved my thanks away, and took another sip of coffee. \"Anyway, you'll find someone. Just make sure it's the right someone. Don't settle for hot flames and a warm bed like I did; flames go out and beds cool down on you if you so much as glance away.\"\n\n\"How long have you been climbing?\" I asked, desperate to change the subject and unnerved by her frankness.\n\n\"Oh. A long time. Since I was three. I think I was climbing things before I could walk. Trees. Rocks. The dog. Walls. Buildings...\"\n\n\"Wait... buildings?\"\n\n\"My father was an Alpinist and mountain guide, so stone was in my blood from the very beginning. My poor mother went grey before her time,\" she added. \"It's just... I don't know. It's something I'm good at. One of the few things I am really good at. It makes me feel at peace to be up there on the wall, suspended in space, off the ground and separate from all the stupidity and distractions there... I should have been a bird. Or maybe a bat,\" she added, grinning.\n\nI found myself smiling back at her, warming even more towards this strange, underdressed angel who slouched so carelessly across from me.\n\nShe lifted her injured leg and then let out a muted groan as she rubbed it. \"This is going to be a frustrating one,\" she grumbled. \"A week at least. Ah well. So... why did you tell that idiot your name?\"\n\n\"I guess I found the attention... flattering. And he seemed nice... at first.\"\n\n\"Fair enough. It's hard to be cautious when you're lonely and someone reaches out. That's why I am where I am. See?\" she added, as her phone pinged again. \"No peace. I'll have twenty messages by the time we leave, ranging between \"I'm lonely\" and \"You're cheating on me, aren't you\" to my all-time favourite - \"You don't love me any more.\" It's exhausting. I am too young for this shit,\" she sighed.\n\n\"Can't you just tell him to stop being so...\"\n\n\"Melodramatic? It won't work. And anyway, she wouldn't understand.\"\n\n\"She... oh. Oh.\"\n\nI was mortified. And... intrigued. But mostly mortified.\n\nAnnabelle laughed. \"Your expression is priceless.\"\n\n\"Sorry... it was a really stupid assumption.\"\n\n\"A honest one, though. It's fine, I don't mind.\"\n\n\"Um... So what will you do?\"\n\n\"Go back to work, finish admin tasks that aren't strictly necessary to finish today, go home, have an almighty row, and likely go to sleep on the couch. Again.\"\n\n\"Oh. Um... wouldn't she mind you telling me all this?\"\n\n\"See? This is precisely the problem I have. I no longer care enough any more to care. I'm over all of her drama. I have enough to deal with, and now this on top of it,\" she added, gesturing at her knee.\n\n\"Well... I know we've just met, but... if you ever need someone to talk to...\"\n\n\"That is sweet of you. Perhaps... we could do this again. Just sit and talk about... nothing in particular. I don't get to do that much, and... I like it. You're... remarkably easy to talk to,\" she added. \"I miss that.\"\n\n\"Oh,\" I said, suddenly remembering Em's demand. \"Um... I just remembered. Can I please have your home address?\"\n\nShe tilted her head slightly. \"Why?\"\n\n\"My sister wants to send you something... to say thank you for looking out for me.\"\n\nAnnabelle smiled sadly. \"No. I think rather not. But... thank you. That's really kind, and I'd love to be able to say yes... but I can't.\"\n\n\"Are you sure?\"\n\n\"Yes. I don't feel like the extended argument it would cause,\" she said. \"Freya is... easily offended and a grand master of leaping to conclusions.\" She sighed again, and I thought I caught a sudden undercurrent of bitter regret. \"But... please tell your sister that I said thank you.\"\n\n\"Um... I will...\"\n\n\"In the mean time, why don't you give me your number? That way I'll at least be able to schedule you in when I want to extort another coffee out of you,\" she added with a smile.\n\nI flushed and stammered out the numbers, and she sent me a single smiling emoji to check it worked.\n\n\"Gotcha,\" she whispered, and I felt a sudden, strange shiver.\n\n.:.\n\nI helped her limp to her car, and gladly accepted the offer of a ride as opposed to waiting in the bitter cold for a bus. We stopped at the small moth-eaten pharmacy down the road from me, and I kept her company as she bought some anti-inflammatories and painkillers. She drove me back to my block of flats, waved me goodbye with a chirpy \"See you soon!\", and once again waited until I was safely through the front door before she eased her rattling Renault gingerly off into the night.\n\nI hoped she'd feel better soon and that her partner would chill a bit.\n\nI almost sent her a \"Feel better soon,\" before I remembered what she'd said about her partner's moods, and I decided I didn't want to cause my new friend any more drama than I already had.\n\n.:.\n\nIt was a bright but chilly day, and the post-lunch filing and bookkeeping was dragging. I was just sitting down with a cup of coffee when my phone pinged.\n\nHey. It's me. Are you going to be there tonight?\n\nI stared down at Annabelle's text, and thought about it. I'd been planning to take the evening off and immerse myself in Sandra Bullock movies on Netflix. But the temptation of chatting to her instead was hard to resist...\n\nWas going to binge on movies. But I'd enjoy company. What time will you be there?\n\nProbably around 6:30... though movies sounds nice too, given the state of me and the fact that I'll be keeping the ground warm with my bum instead of climbing.\n\nI mused for a moment.\n\nSo why don't you rest your knee and come over to mine instead? I'll cook something for supper - it will be nice to have company for once.\n\nAre you sure? I don't want to impose...\n\nI smiled. She was a considerate woman under her amazon's armour.\n\nI wouldn't have invited you if it was an imposition. Allergic to anything?\n\nNothing that I've ever noticed. What should I bring? And what time?\n\nJust yourself. I'll get everything else. Any time from six is fine.\n\nSee you at 6 then\n\nI was pleased.\n\nI got to spend a lot less time with Emma these days now that she was in a serious and mostly-committed relationship. And my other friends were scattered far and wide to the capricious four winds. So I was glad that I'd met Annabelle, in spite of the fucked up way it had come to pass.\n\nShe was fun and interesting to be around - it would make for an enjoyable evening.\n\nI had a good feeling about her, and I liked her a lot - despite her uncanny ability to poke my buttons.\n\nAnd she was superb eye candy, a subversive little voice whispered.",
        "I left at five on the dot, waving my boss and coworkers a friendly goodbye. I made my way home via the local Co-op where I bought some salmon and various greenstuff; I'd been itching to try one of Emma's newly-invented dishes and I was glad to finally have a victim to test it on.\n\nOn a whim I bought a couple of bottles of white wine as well; it had been a while since I'd had a glass with a friend and I reckoned we both deserved it.\n\nI spent a few minutes cleaning up the most obvious chaos in my small flat, and ensured all my cutlery and plates were clean so I wouldn't shame myself.\n\nI'd just put the wine into the fridge when my phone pinged.\n\nI'm here.\n\nbe right down :)\n\nI scuttled down the two flights of stairs and opened the front door to the block as she hobbled up from the pavement. Her right knee was enclosed in a brace of some sort; she caught my quick glance and grimaced. \"It was a bit worse than I thought,\" she said. \"Two weeks of enforced inactivity. My God, I'm going to go mad. Hello.\"\n\n\"Hello,\" I answered, smiling. I let the door close behind her. \"Um... will you be ok on the stairs?\"\n\n\"Yeah, I'll just take it slowly.\"\n\n\"Shall I take your bag for you?\"\n\n\"Thanks,\" she answered, grateful. She fought her way up to my floor, and sighed in relief as I let her into the flat. I took her coat and hung it up for her. \"Couch or counter?\" I asked.\n\n\"Couch, I think, if you don't mind. My knee is aching and I'd like to take this brace off.\"\n\n\"Can I give you a cold compress or something?\"\n\n\"You know what I'd really love?\" she said, softly. \"Something alcoholic to drink.\"\n\n\"Then you're in luck. Wine?\"\n\n\"Oh my God, you are a life saver and officially my new favourite person.\"\n\nI eyed her as I unscrewed the top of the bottle. \"Are you ok, Annabelle?\"\n\n\"I... just have a lot of issues stacking up, so it's really nice to be able to escape them for a bit.\"\n\nShe undid the brace, and smoothed the fabric of her leggings out under it. \"Oh, oh wow, that is so much better. That fold was digging into me from just after I started driving. Thank you,\" she added, as I handed her her wine glass.\n\n\"Normally I'd ask how someone's day was, but I can see yours wasn't much fun,\" I said as I poured my own glass of wine.\n\nShe gave me a rueful grin. \"I slept on the couch like I told you I would. It was not a restful night. They seldom are, these days.\"\n\n\"I'm sorry. You should have talked to her when she was messaging you.\"\n\n\"There's a time and place for everything. Talking to her when she's in that mood is futile. Nothing helps except giving her time to cool off. Then there's a chance she'll be rational.\"\n\nI eyed her. Even I could see she was hurting.\n\n\"You're not even remotely ok, are you?\"\n\n\"No,\" she breathed. \"Not even remotely.\" She sipped her wine and avoided meeting my gaze.\n\n\"Um... I'm a good listener.\"\n\n\"I don't want to burden what should be a fun evening. So... maybe later, if you still feel like being a martyr. But... for now, I'd really prefer it if you tell me how I can help. I love cooking but don't get to do it much. It will be a nice little bit of escapism for me.\"\n\n\"I was going to try to prepare a dish of my sister's design. It's going to be rather experimental, I'm afraid.\"\n\n\"That sounds like fun. I'm all in,\" she said.\n\n\"Lets me have some of my wine and then I'll phone her and put her on the speaker and she can instruct us.\"\n\n\"Won't she be busy?\"\n\n\"Nah, she's never to busy to pass up an opportunity to boss me around. Especially if there's an audience.\"\n\n.:.\n\nWe'd danced awkwardly around one another in the cramped kitchenette; I'd left her to sort out the greens as I dealt with Emma's haphazard, sometimes contradictory instructions. Em reduced both of us to helpless laughter more than once as she descended into amused, sweary rants about my inability to follow her \"perfectly fucking clear\" instructions - Emma's partner John had to mediate and calmly interpret her nonsense and guide us back onto the correct path.\n\nThe wine helped a great deal - it brought a wonderful shade of warm pink to Annabelle's otherwise pale cheeks, and smoothed away some of the rougher edges of her mood.\n\nShe was flushed and pink and happy, thoroughly entranced by the obvious bond between my sister and I.\n\nI found myself watching the way she moved, the way she'd turn her head slightly when waiting for an answer from me.\n\nAnd there was one brief moment where she put her hand on the small of my back to keep me in place as she moved behind me and I forgot how to breathe for a moment or two...\n\nSomehow we managed to \"Poisson ourselves without poisoning ourselves\" as Annabelle put it (grinning unapologetically in response to my piteous groan at the awful pun), and we settled into a slow, gentle post-meal lethargy while the TV did little but feed us background noise.\n\n\"So where's your partner tonight?\" I asked her at last, once we'd run short on small-talk.\n\nShe sloshed her wine gently around her glass, and gave me a sideways glance.\n\n\"Mm. Freya's at a work event tonight. Some magazine launch. I'd have cared once... anyway, she's out for the evening. So I got to play my get out of jail free card.\"\n\n\"I've... never heard it referred to as that.\"\n\n\"It sometimes feels like that's what it is,\" she said, frowning at her wine.\n\n\"Sorry... I didn't mean to...\"\n\nShe turned slightly so she could face me.\n\n\"Are you still in the mood to listen to me whining about my lot?\"\n\nI eyed her. Then I topped up both our glasses from the bottle beside us. \"I can't do advice because I'm rubbish at it, but I have a great sympathy face. And I do listen really well.\"\n\n\"You're sweet,\" she sighed. \"Inviting me over and letting me just be me like this.\"\n\n\"You look like you need a friend. So do I. Match made in heaven.\"\n\nShe smiled and slightly clinked her glass to mine.\n\n\"So... what's got you so down?\"\n\n\"There's a long list. But... lets start with the elephant in the room, shall we? Let me whine to you about... Freya. Then... maybe you'll understand enough about me for now. The rest will come... in time, I suppose.\"\n\nShe took a long, slow sip of her wine.\n\n\"We met two years ago,\" she sighed. \"I was at a climbing exhibition for some sponsors. I mean, obviously,\" she added, ruefully. \"Where else would I be, after all? I was... lonely is a good word for it. Lonely and disillusioned and... starved of attention and any form of human touch. I'd have sold my soul for affection from anyone, I didn't care from who.\"\n\n\"She was an intern; she was working on her first solo piece - reporting on the event for the magazine. She was young, and gorgeous... and attractive... and so... enthusiastic about everything. And... very eager to please and be pleased. It was like sparks jumped between us. We didn't even speak about it - she just came home with me afterwards. And... and she kind of never left.\"\n\n\"So what happened - it sounds like it was great?\"\n\n\"I sometimes feel like she was too immature for a serious relationship... like she had skipped some critical stages of young adulthood. She was twenty two when I met her. And... inexperienced. Quite na\u00efve, too. I think she would have benefitted from a lover or two before me. Maybe that might have helped. Or maybe not. But... I loved her intensity. Her passion for me. And... her body...\" she added softly.\n\nShe sighed.\n\n\"It sounds... nice. To be wanted like that...\" I added, trying not to think too hard about my own past and the still-tender scars I carried with me.\n\n\"I think I thought I was in love; that I loved her. But...\"\n\n\"But...\"\n\n\"But lately... I feel like I was in actually in love with the idea of her. Of someone young and tall and glamorous. Someone who was... easy and willing to please and be pleased. I'm only twenty six, she's twenty four... but sometimes it feels like the gap between us is a century or more in terms of how we approach life. I'm methodical. I need a plan. Like I plan my route on a wall or a boulder. She's... not like that at all. She's... chaotic. Random sometimes. Unconstrained. Wounding,\" she added, softly. \"And as a result, far too easily wounded. She's impossible to be honest with; she explodes at the slightest provocation. So... I go still and silent and hide from our issues.\"\n\n\"That's...\"\n\n\"Awkward,\" she said.\n\n\"I was going to go with... tragic.\"\n\n\"You're kinder than I am. I have no illusions about myself. I've hurt her, and myself. It would have been better for both of us if we hadn't met...\"\n\n\"Oh come on. You can't help it. People change. We all grow and mature and metamorphose throughout our lives. You can't dislike yourself for a change in who or what you are. Oh... hell. Listen to me, being all adult and stuff,\" I muttered. \"Em would laugh herself silly.\"\n\nAnnabelle snorted. \"Meanwhile, Exhibit B is sitting here like an angsty teenager, spilling her guts to a brand new friend about the deeply personal things that she is too scared to speak to her partner about. The one person I should talk to about them. Literally the one person I should be able to talk to about them. And I can't... face her.\"\n\n\"Sometimes it's easier to talk to people who... don't share the history.\"\n\n\"I wish she was as reasonable as you. It would be much easier. Can I get you to give her some lessons?\"\n\nI laughed. \"Ask Emma about how reasonable I am when I feel I've been wronged. I think I'm still banned from a couple of pubs in Reading. You have to talk to her, you know. You can't let it fester. It's not fair to her. Or to you, either,\" I added softly.\n\n\"I know. But... I needed a night where I could just... feel like I wasn't walking on eggshells, if even for a moment. She gets these moods, you see...\"\n\nHer phone pinged.\n\n\"Oh for fuck sakes,\" she sighed. \"See? That will be her. Her ears must have been burning. Two secs.\"\n\nShe fumbled for her phone, and grimaced as she read the message. \"She's home early and wants to know, and I quote, where the fuck I am. Here we go with round two. Christ, all I wanted was an evening of peace...\"\n\n\"You should call her.\"\n\n\"And tell her what? That I'm out to dinner with my nice new gym girlfriend and that I'll be home late? I'm not that brave or that crazy.\"\n\n\"Your nice gym girlfriend, hmm? Is that my label?\"\n\n\"Oh, don't be like that. You know what I mean.\"\n\nI smiled to hide the ache of the sudden tension in my chest. I hardly knew her, really, and had no real claim to her other than the scant hours we'd spent together...\n\nSo instead I watched her, pondering her choice of words as she slowly typed a brief response and sent it.\n\nShe bit her lip nervously. \"There. I told her I'm with you. Three... two... one...\"\n\nHer phone pinged again, then lit up like New Year's eve as message after message flooded in.\n\n\"Yes. There we go. She's got a couple of drinks in her. Buckle up, it's going to be a wild ride.\"\n\nI watched her, wide eyed. \"I'm sorry. That's... quite a response.\"\n\nAnnabelle sighed. \" I know that I have to go and face this. It's just going to get worse the longer I leave it. I've learned that the hard way.\"\n\nShe gave me a haunted look. \"I just... really don't want to. I'd far rather... stay here with you where it's nice and warm and pleasant and, above all... calm. Where I feel... safe.\"\n\nShe took a breath, then let it out slowly. She squared her shoulders.\n\n\"Thank you for your company, Isla, and for the wonderful dinner. I really appreciate it. Please thank your sister as well.\"\n\n\"Here, let me help you up,\" I said. I put my glass aside, stood, and took her slender hand in mine. I leaned back and gently eased her up; she took a stumbling step, caught her balance, and gave me a long glance before she released my hand.\n\n\"Sorry for ending our evening on this note.\"\n\n\"We can do it again, sometime... if you'd like to?\"\n\nShe stared up at me, seemingly unsure. \"If you're serious... I'd really like that. I've... I've really enjoyed this completely normal evening with you.\"\n\n\"I am. Serious, I mean. And I would love to do this again, too. It's nice to have a girl... a friend with similar interests to me. It's so nice to have... to have you. To spend time with I mean.\"\n\nI felt the blush crawling up my throat, and cursed myself silently for being so useless and flustered.\n\n\"Well then,\" she said, softly. \"That gives me something nice to look forward to, assuming I survive tonight that is.\"\n\n\"Here, let me get your coat. Shall I police it for my hairs, just in case?\"\n\nShe laughed at that - a warm, deliciously throaty chuckle. \"It's not worth the effort; there's little I could do right now to sink lower in Freya's opinion of me. If your hair is on my coat I'll take it as a good-luck charm and keep it as a ward against evil.\"\n\nI blushed hotter at that.\n\n\"Will you be okay?\"\n\n\"I'll be fine,\" she said softly. \"I'm a big girl. Got lots of experience of looking out for myself.\"\n\nI helped her down to her car, and stood there waving until she'd turned out into the road.\n\nThen I made my way back upstairs and closed the door behind me. It was nearly eleven, but I knew Em would still be awake.\n\nI was deeply unnerved by my strong reaction to Annabelle and I needed to hear my big sister's voice to help ground me.\n\n.:.\n\nEmma sounded like I'd just woken her up, and I felt a brief pang of guilt.\n\n\"Izzy, peanut? It's late. What is it? Everything ok, love?\"\n\n\"Yeah, everything's... ok. Sorry for calling so late. Did I wake you?\"\n\n\"Nah. Was just dozing on the couch with a book on my face. Is your date over already?\"\n\n\"It was not a date!\" I protested, flushing guiltily. \"She's a... a friend and that's all!\"\n\n\"Uh huh. Given your luck with guys, you should maybe give girls a try again...\"\n\n\"Em! Stop it. That's not fair, or funny. You know how that wound still hurts me. And anyway, she's taken.\"\n\n\"Sorry, sorry. I'll stop pushing that button. But you know... you could do a lot worse than your new 'friend', Izzy. She seems decent. She's the one who ran your stalker off, right?\"\n\n\"Yeah.\"\n\n\"I like her a lot, Izzy. A lot. But she's quite intense, isn't she?\"\n\n\"Yeah. But she's wonderfully chill and so lovely once you get to see beyond that. She wanted me to thank you for the lovely dinner,\" I added. \"Clearly the executive chef gets the credit while the sous chef gets nothing.\"\n\n\"You're not the sous chef. You're the pot-girl.\"\n\n\"Oh, you bitch,\" I retorted, and she laughed loud and long.\n\n\"So what's up, poppet?\"\n\n\"Just... really out of sorts, I guess,\" I said quietly. \"Feeling lonely and weirded out and... unsettled and... I wanted to hear your voice again before I turn in. I miss you terribly now that you've got yourself a man.\"\n\n\"I miss you too. On that note, though, we're doing drinks at the Huntsman on Friday evening - it's Bruce's birthday. Why don't you come along?\"\n\n\"Mm. That might be nice.\"\n\n\"You can bring your date.\"\n\nI swore.\n\n\"She is not my date, Emma, for God's sake! I'll fucking kick you if you call her that in front of her. And... stop putting impossible ideas in my head. Please. It's hard enough being me as it is without... without having to dream about unattainable women on top of that.\"\n\nEm made some sort sorry-not-sorry noise, and I muttered to myself.\n\n\"And anyway,\" I added tartly, \"She's already spoken for, and her partner wouldn't approve, and it sounds like there's more than enough strife there for Annabelle to have to cope with. Don't go and add more. Please. For me. Ok?\"\n\n\"Spoilsport. All right. But ask her along anyway. I like her and I think she'll be amusing. Plus... Izzy, I can hear it in your voice, you know. Deep down, I know that... that you want her to come along.\"\n\nI sighed.\n\nEm had always been able to read me like a book.\n\n.:.\n\nI had a quick shower and washed my hair, then eyed it ruefully in the mirror, wishing it were as long and glorious as Annabelle's was. I had a brief but vivid fantasy in which I asked Annabelle to see if she could do something with it...\n\nThen I shook my head, irritated with myself, and pushed the thought away.\n\nI dug out my battered hairdryer and quickly took the worst of the damp out of my mane, then bundled myself into bed, where I lay - staring at the dappled shadows cast by streetlights through the screening branches of the block's perimeter evergreens.\n\nAnd again I found myself thinking of Annabelle, of the way her eyes sparkled when she smiled; the way she'd touched me - and the breathlessness I'd felt when she strayed too close.\n\nMy phone pinged.\n\nHome safely. Forgot to tell you. Thank you for the haven. Wish I could have stayed.\n\nI sighed. I was glad she was home, though I doubted she was having a good time.\n\nGood luck. Sleep well when you do. See you soon I hope. x I replied.\n\nI found that I missed her.\n\n.:.\n\nWhen I eventually managed to fall asleep, it was not for long. Less than an hour had passed by my bedside clock when I jerked awake from the bizarre, somewhat erotic dream - her, me, a house and a hanging bed looking out towards the sunset...\n\nI lay, taking slow, deliberate breaths as my heart-rate slowed.\n\nI was puzzled and confused and... very disappointed that it had ended.\n\nI didn't dream often, and when I did it was usually fractured fragments - bears piloting starships, tall-masted sky-pirate cutters harpooning cloud sharks, that sort of thing. This had been altogether more real, and intensely surreal despite its realism; I pondered the significance of it as I nestled in my shampoo-scented cocoon.\n\nWe'd been on holiday, I remembered. She'd just won something... important. She was ecstatic and needed to share that with me. She'd grabbed me and... her lips had tasted of tangerine when she'd kissed me...\n\nI groaned, and made a mental note to swear at Emma again the next time we talked for seeding my dreams with such awkward and unhelpful impossibilities.\n\n\"Go to sleep, idiot,\" I told myself.\n\nI yawned, rolled over, and went hunting sleep once more.\n\nBut the night was not restful; visions of her intruded frequently in many comical and not-so-comical situations, and by six in the morning I ceded victory to my fertile imagination, gave up on hopeless cat-napping and got an early, unenthusiastic start to my day.\n\nThe Annabelle of reality that I found that evening, however, was nowhere near as happy and vibrant as my dream version of her had been. She was sitting at a corner table, injured leg outstretched, staring solemnly into the middle distance over her half-empty cup.\n\nI kept an eye on her as I ordered myself a coffee, then made my way over to her. I gently touched her shoulder as I brushed past her and she sighed, shaking her head to banish whatever thoughts she'd been lost in.\n\n\"Hey,\" she said. She gave me a wan smile.\n\n\"Hey. Is this seat taken?\" I teased.\n\n\"It is now,\" she said softly.\n\n\"How are you?\" I asked, as I dropped my bag and flopped down next to her.\n\nShe shrugged. \"I've been better. It was a rough night, and the couch was cold, lonely and miserable as always.\"\n\n\"I'm sorry.\"\n\n\"Why? It's not your fault, you had nothing to do with it. It's my own lousy decision making skills that put me here.\"\n\n\"Technically I did. If I hadn't had you over for dinner you'd probably have been ok.\"\n\nShe shook her head, setting her braid dancing.\n\n\"I prefer this outcome. I got to spend a couple of lovely, peaceful hours with you as opposed to staring at a wall, waiting for her to come home and pick a fight with me over something trivial.\"\n\nI reached over to cover her hand with my own, and hers twitched under mine.\n\n\"Thank you,\" she breathed, after a moment. \"Thank you for being here... and there. It's... hard.\"\n\n\"I'm sure. But I'm here for you if you need me. Okay? Any time you need me, you just call me. Okay?\"\n\n\"Okay.\" She let out a soft, shuddery sigh. \"Thank you, Isla.\"",
        "\"You're absolutely welcome. So. On to other matters.\"\n\n\"What is it?\"\n\n\"My sister's invited us to join her and her man and their rowdy bunch of mates at a pub on Friday night.\"\n\n\"Us?\"\n\n\"She specifically wants you there, but she's grudgingly said I was allowed to tag along if I absolutely have to.\"\n\nAnnabelle smiled slightly and sat up straighter. \"What's the occasion?\"\n\n\"One of her friends is celebrating his birthday. I told her you might not be able to make it, but... well... we're both really hoping you maybe... could?\"\n\n\"I'll be there,\" she said.\n\n\"But what about...\"\n\n\"She can fuck off and suck it up and deal with it. After the way she's been treating me this week she could do with some time on the naughty girl's step to think about her behaviour.\"\n\n\"That sounds...\"\n\n\"Harsh? Waspish?\" she asked, eyebrow raised. \"Perhaps. But you don't live with her.\"\n\n\"I guess...\" I said, softly. \"I'm just... I don't like conflict at all, so your home situation sounds like my idea of... hell.\"\n\n\"It's my idea of hell too,\" she muttered. She grinned a rictus grin. \"So I'll take any excuse to get out and avoid dealing with it. And an evening in a pub with you sounds like just what I need to keep myself in trouble with her.\"\n\n\"In that case, it's a date,\" I said, unthinkingly. Then I flushed hot as I realised what I'd said, and Annabelle laughed softly at my discomfort.\n\nI walked her to the indoor climbing wall, and left her there, chatting to her friends. I worked hard on the bikes, then on a treadmill, and when I moved to the weights I realised that she was leaning against the partition wall, keeping an idle eye on me as she joked with a couple of climbers. She smiled and waved a subtle hello when she saw me looking at her, and for some stupid reason I blushed like I was sixteen again.\n\nThe idiot dream kept coming back to me, and I wished I could forget the half-remembered fantasy of her kiss; it made things ridiculously awkward where there really was no call for them to be.\n\nI wasn't even that in to her, I lied to myself.\n\nAnd anyway, she was with someone else, and despite the many names I could be called, 'Cheater' was emphatically not one of them.\n\nOnce I was done and showered, she gave me what was becoming our customary lift home, and I gave her her customary wave-off into the winter darkness before I retreated to the warm, muggy sanctum of my flat to mope.\n\n.:.\n\nWe'd arranged that she would come to mine - she'd park her car in one of the visitors spaces and then we'd catch the bus together. It would mean she could have more than one glass of wine if she wanted, and worst case she could sleep over at my flat before heading home to face the Inquisition in the morning.\n\nI eyed myself in the mirror before I applied a touch more blush to my cheeks, then finished up with the wonderful coral-toned lipstick that Em had found for me.\n\nI smiled at myself in satisfaction; what a change a few months had worked on my looks and confidence...\n\nMy phone rang and I grabbed it. \"Hey, are you here?\"\n\n\"Just parked, yes.\"\n\n\"Do you need the loo or anything or are you ready to go?\"\n\n\"I'm good to go, thanks.\"\n\n\"Ok, I'll be two minutes - I just need to grab a coat.\"\n\n\"See you now then.\"\n\nI dug out my long navy wool jacket and dragged it on, then wrapped my favourite green and white scarf around my neck for good measure. I tottered my way downstairs in my heels.\n\nAnnabelle smiled delightedly when she saw me; she climbed out of her car and limped her way over to me. \"You look absolutely lovely,\" she said. She came in close and gave me a brief hug, and I grinned down at her, warmed and pleased by both her gentle compliment and the physical affection that it came with.\n\n\"Thank you. So do you,\" I said, admiring her earrings and the ornate French twist she'd opted for. \"I love your hair. I wish I could do something with mine but I'm utterly useless at that sort of thing.\"\n\nShe flushed as she glanced up at me. \"Thanks. My word, you're so wonderfully tall in those heels. I feel short and wholly underdressed.\"\n\n\"No, you look fantastic,\" I told her, and she reddened in an uncharacteristic moment of shyness.\n\n\"Come on, it's freezing,\" she said.\n\n\"Is your knee okay?\"\n\n\"It will work for long enough.\"\n\nWe made our way to the bus stop and huddled against one another, hiding from the worst of the breeze, waiting.\n\n\"It shouldn't be long,\" I said. \"The bus we need comes every quarter of an hour or so. Number seventy one. How are you?\"\n\n\"Glad to be here with you,\" she answered. \"Freya stormed off in the late afternoon, so I at least had some quiet time to collect myself.\"\n\nI gave her another impulsive hug, and she leaned in against me. \"I'm so glad I met you,\" she added softly. \"It's so nice to have someone kind and sane to be around. It makes the other stuff... bearable.\"\n\n\"I'm far from sane, but I get what you mean. Annabelle, you really should just stay over tonight, you know. I don't like the idea of you having to go back home to a war zone.\"\n\n\"Thanks. That's very sweet of you. I might just do that. Hang on, you said number seventy one, right? Isn't this our bus?\"\n\n\"Looks like it. That's a stroke of luck.\"\n\nI helped her climb the step, and we grabbed hold of the hand rails as the bus pulled quickly out and away. It was only a short journey, some four miles or so, and we didn't say much on the way. She just quietly stared out the window, watching the world pass us by.\n\nAnd I simply stood there beside her, enjoying the jostling of her hip and shoulder against me.\n\n.:.\n\n\"I really like your... friend,\" Em said.\n\nI glanced past her to where Annabelle was in laughing conversation with a couple of nicely-dressed guys.\n\n\"She's really sweet,\" I agreed. \"And really gentle. And...\"\n\n\"You look moonstruck,\" my sister teased me.\n\n\"Stop it,\" I growled, flushing hot under Em's knowing grin.\n\n\"Uh huh. She's so slender, though, I can't imagine her standing up to that guy like you said she did.\"\n\n\"You should see her muscles. She held his arm with no visible effort. She's really strong, Em. Don't let her size fool you...\"\n\n\"Is she built?\"\n\n\"God, I reckon she could probably kick-start the Titanic. And I don't think she's got any spare weight on her. And I swear she's related to Spiderman, she can hang from things that I'm actually convinced don't exist. She's... amazing. She's... inspiring.\"\n\n\"She's gorgeous, that's for sure. And I love her hair.\"\n\n\"Yeah. I teeter between adulation and liver-consuming jealousy.\"\n\n\"Get her to do yours for you.\"\n\n\"No, that would be weird. I... I don't know if I want to go there, Em. It's... it's really complicated.\"\n\n\"Just ask her,\" Em said, softly. \"You don't have to be awkward about it. Unless you want to be. I'm just saying, Izzy... nothing ventured, love...\"\n\n\"So how are you?\" I said, firmly changing the subject. \"Everything ok between you two again?\"\n\n\"Oh, you know John. Oblivious as only a man can be. We're ok. The make up sex was great.\"\n\n\"Thanks for the mental image,\" I said, pretending to retch. \"I'm glad things are better. I like him. I hope you'll keep him around. He...\"\n\n\"Calms me?\"\n\n\"Yes,\" I said. I glanced past her at my friend again. \"Oh. Hang on, Annabelle's out of wine. I should get her a refill.\"\n\n\"Nah, it's my shout. What do you girls want?\"\n\n\"Another glass of the same for both of us. It's the Marlborough. I'll come help you carry.\"\n\n\"So... tell me the inside story. You hinted her... current partner's a bit of a fiend...\"\n\n\"You know I don't like to speak badly of people, Em... but she just sounds like a really high-maintenance, stroppy, histrionic piece of work. She probably boils bunnies in her spare time.\"\n\nEmma made a face. \"That's horrid. So this is... what...\"\n\n\"I suspect Annabelle would call it a brief moment of sanctuary.\"\n\n\"Fuck me. That's rough.\"\n\n\"Yeah. So I'm going to do my best to make sure she enjoys herself tonight, because she's going to have the Devil to pay tomorrow. \"\n\n\"She should just kick the tart into touch. Move on to... someone better.\"\n\nI pretended not to hear Em's blatant hint.\n\n\"I get the feeling that once she's committed to someone she sees it through to the bitter end.\"\n\nEm gave me a long glance.\n\n\"What?\" I said, suspiciously.\n\n\"Nothing. Just... you're a good... companion... Izzy. Looking out for her like this. I'm sure she really... appreciates it.\"\n\n\"She deserves nothing less. But, on that note, no more digs about dating, please. I had some seriously fucked up dreams because of you and your bloody mouth, and I really don't need the pointless distractions. Nothing will happen. It can't.\"\n\n\"I hope the dreams were nice at least.\"\n\nI flushed red, and Emma laughed loudly.\n\n.:.\n\nAnnabelle and I stumbled into my flat sometime after one in the morning - drunk, tired and and very, very merry.\n\n\"That was a fun evening,\" I giggled. \"Goodness, I'd forgotten how Emma can go on when she gets started.\"\n\n\"She's such a sweet woman. Very much like... you.\"\n\n\"That's our mum shining through, I guess.\"\n\nAnnabelle lowered herself onto the couch with a groan. \"Oh, bollocks to this leg. I wish it would just stop hurting so much for five minutes. Just five minutes.\"\n\n\"Take the brace off maybe?\"\n\n\"Too tired. I'll just sit here and suffer...\"\n\n\"I'll do it then,\" I declared, impulsively.\n\nI flopped down next to her and pushed my fingers in under her knee to fumble for the velcro straps. \"There,\" I announced triumphantly, as I freed her from it.\n\n\"I love how you just started undressing me without asking permission. I could grow to enjoy that sort of decisiveness...\"\n\nI flushed hot, and laughed. \"Don't tease me like that.\"\n\nShe grinned, then started to massage her knee. \"Thanks, Isla. That's much better.\"\n\n\"Just call me Izzy.\"\n\n\"If you want me to. But Isla is a beautiful name. I like... it.\"\n\nI smiled brightly as I slumped backwards. \"Mm. You know what? I'm tempted to have more wine. But I know it's a terrible idea.\"\n\n\"Is it really such a terrible idea? It's not like anything could happen to us. The world is safe from us until the morning, after all. I can't go anywhere in my current state, and you certainly aren't going to abandon me... are you?\"\n\nI eyed her. \"You are a bad influence. Want some?\"\n\n\"I would love some more. Got to get my fun in while I can,\" she added, softly.\n\nShe sat back, watching me as I cracked a bottle. \"This is our one bad night this week, right?\" I said.\n\n\"Deal. Gym tomorrow as penance, yes?\"\n\n\"Yes. But late tomorrow so we can recover from tonight, though.\"\n\n\"Amen to that,\" she groaned.\n\nI handed her her glass and sat down gently beside her again. \"Annabelle... I'm really glad you came with tonight.\"\n\n\"So am I. It was such a lovely change for me. It was so nice to be around... normal people. Your sister was very sweet to invite me.\"\n\n\"I hope she didn't bore you when she dragged you off like that. She can be a terror when she gets going. But she's a great listener.\"\n\n\"Yes... anyway. Thank you for the wonderful escape.\"\n\nI smiled at her. \"It was my pleasure. So. Um...\"\n\nI sipped my wine and squinted at her. \"I have a question for you. It's... a weird one and I'm only asking it because the.. the booze in my bloodstream... is giving me ideas.\"\n\n\"Ok... um... go ahead...\" she said, eyebrow arching upwards.\n\n\"How is it that you manage to do your hair so nicely?\"\n\nShe laughed. \"That's not quite the question I was expecting. Well. Fine then. My mum was a hairdresser... among other things. So it was kind of... inescapable that I'd learn a thing or two.\"\n\n\"It's really nice. I wish I could do anything with mine, but I'm useless.\"\n\nShe tilted her head and stared at me for a moment. \"I can, if you like? Come sit down on the floor in front of me and I'll put a braid in for you. Come on. It will be quick, and your hair is such a beautiful colour. I've been itching for an excuse to play with it and now you've unwisely handed me the chance on a platter.\"\n\n\"Oh... alright then. If I must. Twist my arm, why don't you...\" I said as I slid to the floor in front of her.\n\n\"Scoot a bit backwards, come lean against the front of your couch. Don't mind my knees, I just need them out the way so I can lean forward a bit...\"\n\nI shivered as she pulled my hair free of my dishevelled ponytail. She shifted slightly, and I gasped again as she started to run her lovely strong fingers through my straggly tresses.\n\n\"Um... are you ok? You... uh... moaned.\"\n\n\"Oh God. Sorry. That wasn't... intentional. It's just... oh... oh... that's so nice...\"\n\n\"You have a lot of split ends. You should fix that, your hair is so lovely.\"\n\n\"I... don't pay much attention to it,\" I managed, enjoying the exquisite way her fingers moved against my skin. \"Annabelle... seriously, this is so utterly magical. If I fall asleep, just kick me over, ok?\"\n\n\"Why would you?\" she laughed.\n\n\"Because I... oh wow... love having my scalp massaged and... and your fingers are so nice and soft... oh my God... and it's such a delicious sort of pampering and... I never, ever get anything like this...\"\n\n\"Mm. I'll enjoy remembering that I can make you make noises like this. Now, try not to shift. Or pass out. I have an idea for something that I think would look great on you.\"\n\n\"Do what you need to. I'm going... mm... nowhere.\"\n\nI lost track of time as I sat there, drooling and twitching in pleasure, letting her decorate and primp and preen me according to her own desires. She started achingly low on my neck; goosebumps crawled in waves over my shoulders and back as she slowly worked her way upwards towards the crown of my head.\n\nAt one point she asked if she needed to gag me, and we both laughed for quite a while at that image.\n\nFinally, she picked up my discarded hairband to secure and tie everything off.\n\nShe sighed out a breath, and rested her hands on my shoulders; I groaned and slumped slowly sideways as she gently began to knead the base of my neck. But after a few moments she seemed to realise what she was doing and stopped.\n\nI sighed in disappointment.\n\n\"Are you still awake?\"\n\n\"No. I'm completely asleep. Oh my God, you could make a killing as a masseuse. That was unbelievable. Nobody's ever touched me like that.\"\n\nShe started laughing.\n\n\"That's not what I meant!\" I protested. \"Oh my God! Annabelle! Get out of the gutter!\"\n\n\"Sorry. I have a fertile mind. I'm... I'm very glad you enjoyed that so much. It feels good to be... appreciated,\" she added, softly.\n\n\"I'm all relaxed now. Like cooked spaghetti. I don't think I can stand.\"\n\nI rolled gently onto my knees and then leaned forward, arching and groaning as I stretched the kinks out of my back. She sipped her wine and watched me with a faint, indulgent smile as I sat up on my haunches and explored the intricate braid work that now climbed upwards from the nape of my neck.\n\n\"Go and look in your mirror,\" she said softly. \"I think it is perfect for you.\"\n\nSo I did, and I stared, entranced.\n\n\"Oh wow, it's beautiful,\" I called to her. \"What is it?\"\n\n\"It's a variation of an upside-down braid. It was my mother's favourite as well.\"\n\n\"I love it.\"\n\n\"I'll teach you how to do it sometime,\" she said. \"In the meantime, though... why don't you come back here and drink your wine. Over here on the couch. Next to me.\"\n\n.:.\n\nI'd taken the couch and she'd gratefully accepted the offer of my bed, but she had clearly felt some lingering guilt over her good fortune because at some point in the witching hours she staggered back through to the living room and bullied me into sharing the bed with her. To be honest, I'd been glad to do so, because the couch was freezing and, really, far too small for me to sleep comfortably on.\n\nWe'd giggled and bickered good-naturedly as we fought one another for space in my still-less-than-ample double, before first she and shortly afterwards I passed out.\n\nNeither of us were particularly happy when someone started a motorbike downstairs at seven o clock - and neither, clearly, was a neighbour, because the shouting match went on for a bit before the biker revved the tits off his machine and left at speed.\n\nWe'd dozed a bit longer before breakfast, and she'd left soon after to go and \"face the executioner\" as she put it.\n\nI gave her a long, lingering hug to fortify her; she clung to me for quite a while before she pulled away and gave me a brave little smile.\n\nAnd I'd stared after her as she left, feeling strangely at a loss.\n\nWe'd agreed to meet up at the gym at lunchtime when it was quieter, and so I spent the morning lurking on the couch, letting Netflix autoplay as I gazed blankly at the screen until it was time to shower, change, and get moving.\n\n.:.\n\nI disembarked from the bus and hunched against the bitterly cold wind as I made my way towards the building. A car hooted behind me; I turned, then waved, smiling as I recognised her tatty Renault. She parked up while I stood waiting for her.\n\n\"Hey,\" I greeted her.\n\n\"Hey yourself. I see you kept the braid,\" she added.\n\nI touched it. \"It's nice. I like it. And you didn't teach me how to do it so I didn't want to undo it just yet. It makes me feel... pretty.\"\n\n\"Not that you need help with that,\" she answered with a smile. \"I'll share my secrets with you, eventually. For now, I'll use it as one of my negotiating tactics for when I want some quiet time with you.\"\n\nThen she came over and leaned against me, sighing out as I wrapped my arms around her.\n\n\"How was it?\"\n\nShe shook her head, pulled away and stared up at the clouds, then the trees around us. \"Loud and... painful. I left in the end, I got tired of the screaming and came to do something more productive with my day. I'm sure the neighbours must hate me by now.\"\n\nShe opened her boot and grabbed her gym bag and shrugged it onto a shoulder. She straightened up, and the smile suddenly vanished from her face as she paused, staring at something behind my back.\n\n\"Fuck.\"\n\n\"What?\"\n\nI turned, staring in the direction she'd been looking.\n\n\"That car by the gate. The Ford. It's her. It's Freya.\"\n\n\"What on earth is she doing here?\"\n\n\"She must have followed me to carry on with the fight. She does that sometimes,\" Annabelle sighed. \"Oh hell. Here she comes. \"\n\nThe maroon Ford raced into the parking lot and screeched to a halt behind Annabelle's car. A tall, furious brunette leaped out from behind the wheel, leaving the engine clattering.\n\n\"Is this her?\" she shouted at Annabelle by way of greeting. \"Is this your new slut? I recognise your handiwork on her!\"\n\nI blinked, not sure if I'd heard her correctly.\n\n\"Freya, what the fuck are you doing here?\"\n\n\"Seeing who you're cheating on me with, you lying bitch! I saw you holding her!\"\n\n\"Um...\" I said, wondering if it was worth trying to defend myself.\n\n\"Stop being such a jealous, immature drama queen. She's a friend, that's all,\" Annabelle said. She stepped partly between us and glared coldly up at her furious partner.\n\n\"I'll bet she is. A really special friend, hey! Where were you last night? With her? With this fat cow?\"\n\n\"I'd rather be fat than hysterical,\" I retorted, stung by the unnecessary insult.\n\n\"I wasn't talking to you, whore!\"\n\n\"Don't call her that,\" Annabelle said, low and dangerous.\n\n\"Or what? Whore, whore, whore!\" Freya shouted. \"Hey, everybody! Look at the lying, cheating bitch and her fat fucking whore!\"\n\nPassers-by detoured around us, staring. I grinned nervously, embarrassed for my friend.\n\n\"You think that's funny, do you?\" she shouted at me.\n\n\"Freya, stop being such a child!\"\n\n\"You're the child! You and your secrets and your silences! Well. The joke's on you! You thought you could quietly fuck this bitch on the sly? Well, guess what! I found a real woman! How does it feel? She was better than you could ever hope to be. Do you like that? Do you like hearing that? I slept with another woman and I loved it! How does that taste in your mouth, little miss fucking perfect?\"",
        "\"You are such a cunt,\" Annabelle responded, her voice flat and cold. \"I honestly no longer have any idea what I ever saw in you. And I regret every second of my time and love and energy that I've wasted on you. Enjoy your pathetic little 'victory', Freya. Wow, you really showed me, didn't you. I'm actually impressed; I thought you'd forgotten what that part of you was for.\"\n\nFreya's face went white with rage, and Annabelle took a breath.\n\nI watched my friend squint up at her lover and square her shoulders.\n\n\"You know... I never actually cheated on you. But now I wish to God that I had.\"\n\n\"Liar!\"\n\n\"Whatever. You should leave, Freya. You should leave, now. Go! Go pack your shit and get out of my flat. You'd better be gone by the time I'm home or I will pile up everything you've ever bought or touched or even looked at into a pile in the parking lot and set it on fire.\"\n\n\"Oh, I'll leave,\" Freya spat. \"I'll leave, all right. Once I'm done with your slut!\"\n\nShe lunged forward past Annabelle and lashed out at me.\n\nI barely even had time to begin to flinch before her hard, angular knuckles connected.\n\n.:.\n\nI vaguely heard Annabelle shouting.\n\nI heard a door slam.\n\nTyres squealed and a car sped off while concerned voices babbled around me.\n\nI could taste hot, coppery blood on my tongue, and my jaw and cheek throbbed.\n\nAnd then I felt strong arms gathering me tightly in against a firm body; supporting me, cradling me, rocking me gently to and fro.\n\nI groggily realised that I was lying partly pillowed on Annabelle's lap. She sat on the frozen bricks, heedless of the muddy, ice-cold water that was soaking her leggings, gently smoothing my hair back as she softly repeated my name over and over again.\n\n.:.\n\n\"Oh my God, I'm so sorry,\" Annabelle whispered for the five-millionth time.\n\n\"It's ok,\" I repeated. I shifted the cold pack against my jaw.\n\n\"I should have been quicker. I know she's violent. I know it! I should have seen it coming and stopped her!\"\n\n\"It's not your fault...\"\n\n\"I'm so fucking sorry, Isla...\"\n\nI reached out and found her hand. \"Annabelle. Take a breath. It's ok. I'm ok.\"\n\nThe gym's first aider coughed politely. I shifted slightly, focussed back on him.\n\n\"Again. I don't think anything's broken, but I really do think you should go to A&E and get checked out,\" he repeated. \"Please. I am not medically trained. I'm guessing based on gut feel. I'm extremely concerned that you aren't taking this seriously enough. You could have a head injury.\"\n\n\"I'm ok. Really. I am. Just sore. I didn't hit my head. Just my bum,\" I added, ruefully.\n\n\"Yes, well... please at least think about what I said?\"\n\n\"I can move my jaw. It's not broken. It just hurts.\"\n\n\"Your cheek could be fractured.\"\n\nI prodded at it and winced. \"It's ok. There's no sharp pain. I've broken a bone before, I remember what it feels like.\"\n\nHe shook his head. \"You climbers are all mental.\"\n\n\"She's not a climber, Steve,\" Annabelle corrected him. \"She's just one of our horde of admirers.\"\n\n\"Right. Well. In that case, Annabelle, can you please keep an eye on this stubborn friend of yours. If she gets dizzy or slurs her words or anything weird, take her straight to A&E. Right?\"\n\n\"I promise that I'll stick closer to her than her own shadow,\" Annabelle answered him, with a sidelong glance at me.\n\nHe grunted and began to pack up his first aid kit. \"You should stay still for a bit. We've got a examination bed in the physio office that you could lie down on for a while.\"\n\n\"I'm ok. I just want coffee and cake.\" I winced, then waggled my jaw a bit more. \"Make that coffee. Cake will have to wait until I can chew.\"\n\nHe sighed in frustration and departed, leaving us in peace. I eased back into the chair.\n\n\"Well. My bum's soaked and I'm a mess. So much for gym today.\"\n\n\"I'm so sorry for this, Isla. And I'm so fucking sorry for all those truly awful things she called you. They were all untrue. All of them.\"\n\n\"Words are cheap. I'm used to ignoring them. And I don't remember you hitting me.\"\n\n\"I might as well have. I should have stopped her. I should have known she would do something like that.\"\n\n\"Has...\"\n\nI winced, shifted the ice pack.\n\n\"Has she done that before?\"\n\n\"She's taken swings at me before. It's no biggie, I'm far stronger than her and I can usually duck them or block them. I've learned to watch my back.\"\n\n\"She's been abusing you, Annabelle.\"\n\n\"Yeah, well... it's my fault for allowing it.\"\n\n\"No. It really isn't. And it's not ok. Nobody should have to go through that or make excuses for it.\"\n\nShe sighed and squeezed my hand. \"You're going to have such a bruise. I'm so sorry.\"\n\nI shrugged. \"It's not like I have anyone to look pretty for, is it? And it will heal in time. Everything does.\"\n\nShe swallowed and looked away. But she kept hold of my hand, clutching it as if to comfort herself.\n\n\"Are you ok?\" I asked her, after some time.\n\n\"No,\" she whispered.\n\n\"I'm really sorry I caused such a spectacular and public break-up.\"\n\nShe laughed, then choked, then scrubbed at her eyes with her free hand.\n\n\"Annabelle?\"\n\nShe turned slightly further away from me. \"Sorry,\" she whispered again. \"It's just hit me. The reality of it. That it's really over.\"\n\nShe took a sobbing breath, then another, and found some control once more.\n\n\"You know what sucks most, for me?\" she whispered. \"It's... drawing a red line through two years of my life and writing them off. That and the memories of when it was better. I hate those. They tear at me.\"\n\nI squeezed her hand.\n\n\"Did you learn something at least?\"\n\nShe sniffed. \"How to recognise early-onset psychosis, I guess.\"\n\n\"I think that in time.... you'll realise you learned more and... you'll probably be grateful for this time.\"\n\n\"I'd goddamn better get something decent out of it, given how much it's hurt me. Us,\" she corrected herself, with a shamefaced wince.\n\n\"Can I... ask a favour?\"\n\n\"Of course,\" she said, looking up at me. \"I'd do anything for you. Anything at all.\"\n\n\"Will you please drive me home?\"\n\nShe nodded. \"Now?\"\n\n\"Please. I want to change clothes and wash this... drama... off of myself somewhere where nobody will be watching me or judging me or trying to subtly find out if I'm being beaten at home.\"\n\n\"Ok. Let's go, then.\"\n\nShe wiped her eyes once more, then stood and gently helped pull me to my feet.\n\nShe held my hand all the way to her car.\n\nAnd I felt no urge to let hers go.\n\n.:.\n\n\"Are you sure I can't make you something?\"\n\n\"I can't really chew much right now. So unless it's liquid, I'm out of luck. I'd sell my soul for a glass of wine, but I can't until the painkillers wear off.\"\n\n\"I might just drink yours,\" she muttered.\n\n\"Go ahead, I don't mind. At least one of us can have fun,\" I added. \"I'll sniff it and pretend.\"\n\n\"I shouldn't, but maybe I will.\"\n\n\"It's been a rough day. Be gentle with yourself.\"\n\nShe sighed and resumed her restless pacing.\n\n\"Fuck. I can't believe I fucked that up so badly. How are you so calm about this? I'd be fuming if it was me. I'd have kicked me out if it was me...\"\n\nI shrugged. \"I'm tired and sore, but it's nothing that won't pass with time. Wasting energy on theatrics seems... silly. Especially, and I say this with great affection, especially having seen how overdramatic your ex is. Was.\"\n\n\"I get the point.\"\n\n\"Have some wine, Annabelle. It will numb the edges a bit. And for God's sake, sit down.\"\n\n\"Bella,\" she said, suddenly. She stopped pacing and stared down at me.\n\n\"What?\"\n\n\"Bella. You should call me that. Bella, I mean. I'd... like it.\"\n\n\"Oh. Ok. I will... if you like. Anyway... pour some wine. Put your feet up. Cry if you need to. It's ok to feel sad, or upset. You just broke up with your girlfriend. That's hard...\"\n\n\"It wasn't. It was easy. I should have done it a long time ago. Hard is when I look at that horrible bruise on your face,\" she continued, softly. \"Hard is knowing that I caused that by letting her get away with her shit for so long. Hardest is knowing that my stupidity hurt you. Are you sure I can't...\"\n\n\"Bella,\" I said, cutting her off mid-sentence.\n\n\"...yes?\"\n\nI struggled to my feet and took her hand. \"Sit your bum down,\" I said, pushing her gently backwards. She collapsed onto my couch and sat there, staring up at me. \"Stay there and don't move,\" I ordered her. I fetched a wineglass, filled it from the remains of the bottle of white in my small fridge, and gave it to her.\n\n\"Drink this,\" I said. \"And stop fretting about me. Yes, I'm sore. Yes, your ex punched me. Yes, it hurts. But... I really don't care. I'm just glad that it was me and not you. You've had to deal with enough, ok?\"\n\n\"You're so kind,\" she whispered.\n\n\"You're my... my friend. Let me have your back for a bit now, ok?\"\n\n\"Ok,\" she whispered. She put her glass down untasted and pulled her uninjured knee up to her chest, then sat, hugging it tightly as she took a shuddering breath.\n\n\"Oh God. I shudder to think what my place is going to look like when she's done.\"\n\n\"Oh no. Do you think she would trash it?\"\n\n\"She always throws things when she's enraged. I'm sure it will be carnage. All my pictures, my books, my medals...\"\n\n\"Well. In my opinion you're well out of that relationship then, Bella. It's not right to have to live in something like that. Abuse and violence like that is never forgivable.\"\n\n\"I used to think she was just passionate,\" she said, softly. \"It was... exciting. She felt everything so powerfully - both the good and the bad. And the... the sex... really was extraordinary. But... but then...\"\n\n\"You discovered the darker side of it?\"\n\n\"Yes... how... how is it that you know so much about this?\"\n\n\"A university friend had... problems. I saw... things I'd love to be able to forget.\"\n\n\"Oh.\" She sighed. \"So... yes. Anyway. A lot of our issues are... were hers, but... to be fair, I have spent a lot of time lying to myself as well. And to her... I guess. I didn't exactly help matters.\"\n\n\"Why didn't she just leave?\"\n\n\"I don't know.\"\n\n\"Do you think she still... loves you?\"\n\n\"Loves? No. Not any more. Not now, and possibly not ever. I think... it's a ownership thing. I think she wanted to... to possess me. Like a pet, or a sculpture. I think that's why she attacked you. Because she thought that I was... yours... now.\"\n\n\"I guess I should feel... flattered,\" I said. I was amused by the idea that someone would even for a moment think that a goddess like Annabelle would be interested in a nobody like me.\n\n\"Well. If I could meet someone like you I'd count myself lucky.\"\n\n\"I'm... really not anything special,\" I stammered, after a shocked moment of silence.\n\n\"You're more than special to me,\" she corrected me.\n\nI shifted uncomfortably, cheeks burning; she looked away, conscious perhaps that she'd said more than she'd intended.\n\n\"Isla... do... do you mind if I shower? I feel filthy and I just want to wash today off me.\"\n\n\"Of course,\" I said, relieved for the change of subject. \"Go ahead. Let me get you a towel...\"\n\n\"It's ok. I've got one in my gym bag.\"\n\nShe made her way to the bathroom and I listened with one ear to the various small sounds she made as she stripped and eased herself into my small shower cubicle. \"Use anything you like,\" I called out. \"It's all fair game.\"\n\n\"Thanks,\" came her muffled response. \"Um... Isla, the water's not warming up.\"\n\n\"It takes a while.\"\n\n\"Oh... there it goes.\"\n\n\"Yeah. Sorry. It's a sad excuse for a shower. Tell me, have you got anything to wear?\"\n\n\"Not really. Just spare leggings. I wasn't planning on needing a change of clothes today.\"\n\n\"I'll find you a warm top then. And some socks.\"\n\nI groaned and clambered to my feet. I dug in my cupboard and found a faded pink long-sleeved vest that I'd accidentally shrunk. It would fit her better than anything else I had. I threw in a pair of grey wooly socks as well; the heating was on but the flat was still on the chilly side.\n\n\"I've left it folded on the bed,\" I called. \"It's a bit thin but it will at least be comfortable. It's pink, sorry... I hope that's not against your religious beliefs or anything...\"\n\n\"That's fine. I'll be a girl for once. Thanks, Isla. \"\n\nI prodded at my jaw, sighed, and set about making myself some tea.\n\n.:.\n\n\"How's the pain?\" she asked softly when she emerged. She was carrying the duvet from my bed, and she came to me and bent over me to tuck me in where I lounged on the couch.\n\nI shivered as her fingers brushed my arms, and spent a moment trying to calm myself again. Scent from my favourite body lotion wafted over me, and I had to close my eyes for a breath or two as I fought the urge to...\n\nI was starting to find her extended proximity dangerously distracting - long-dormant feelings were beginning to shift and squirm in the deeper parts of my mind.\n\n\"A bit better. I think the swelling's going down a bit,\" I managed at last.\n\n\"I wish I could do something to make you feel better.\"\n\n\"Carry on whining and wringing your hands and I'll start demanding forfeits from you.\"\n\n\"Oh? Such as?\"\n\n\"Another massage, for starters.\"\n\nShe stared down at me for a moment. \"I mean... I'll do that for free, if you want. Gladly.\"\n\n\"I might take you up on that later, I think. If the offer's still there.\"\n\n\"It will be,\" she said softly. \"Well then... since booze is out, how about I start looking into supper for us. I know it's a bit early...\"\n\n\"That's not the worst idea I've heard. Something easy to chew, though. Like soup,\" I added.\n\n\"Uh huh. So... please... why don't you tell me more... about you?\"\n\n\"What do you want to know?\"\n\n\"Lots of things. But... I guess, for now, what makes you tick.\"\n\n\"Tick in what way?\"\n\n\"Things you... that you like. Apart from gym and wine and your sister and your massive hypersensitivity to having your scalp and neck and shoulders touched... I know very little about you. I'd like to know... more.\"\n\nI leaned back against the armrest, watching her as she dug into the fridge and the cupboards. The vest I'd loaned her fitted her well; it followed her contours without clinging too tightly, merely hinting as to what lay under it...\n\nI flushed as I realised what I was doing, and glanced hurriedly away.\n\n\"I'm trying to think of what you'd find interesting or useful to know,\" I said, trying to keep some sort of nonchalance in my voice.\n\n\"Tell me your favourite colour?\"\n\n\"Navy blue,\" I answered immediately.\n\n\"It's aquamarine for me,\" she said. \"Lets see... favourite movie?\"\n\n\"No. Never. You'll laugh at me,\" I sighed. \"I'll forever be uncool to you.\"\n\n\"Try me,\" she said, glancing up at me.\n\n\"What Dreams May Come,\" I answered, softly.\n\n\"Oh my goodness. Why would I laugh at that? It's so beautiful and so bittersweet. I've always loved it.\"\n\n\"Now I'm intrigued,\" I admitted, after a short silence.\n\n\"What, because I like glorious and romantic tear-jerkers?\"\n\n\"Yeah. It's...unexpected. It didn't fit my mental model of you. I had you pegged as an action movie girl.\"\n\n\"I suspect you'll find that I'm much more... fragile... than you seem to think I am,\" she said. \"You see... I have a persona that I... that I've always worn so that I can pretend I'm strong. But... at the heart of it I'm really just another lonely, isolated woman who always seems to end up looking for love in all the wrong places. It's something I'm really good at. You might call it a superpower. Or a curse,\" she added, bitterly.\n\nShe glanced up at me again. \"Do you think you could manage pasta, Isla? Or maybe I could use some of your greens and just make us some salad.\"\n\n\"Salad sounds... nice. Can I help at all?\"\n\n\"No. Please. I'd... like you to sit there and just look pretty for me.\"\n\nI rolled my eyes at the lopsided smile she gave me.\n\nShe began rummaging in cupboards again. \"Oh, you have olives,\" she said. \"I love them. They're one of my favourites. My mum's family are originally from Languedoc and some distant cousins still have an olive farm and some vineyards there.\"\n\n\"That's... the very south of France, right?\"\n\n\"More or less. We used to spend all our summers out there. Back before Dad... no, never mind.\"\n\nShe sighed and rummaged some more.\n\n\"Bella?\"\n\n\"Lets just say that if I came into money I think I'd move out there. Spend my life worshipping the sun and climbing in the Pyrenees. It was heaven on earth for me. It probably would be again.\"\n\n\"Sounds lovely. Could I come and visit you?\"\n\n\"No.\"\n\n\"No? Really? Why not?\" I said, wondering if I should feel insulted or not.\n\n\"Because I would take you with me, obviously,\" she said, glancing up at me once more. \"I'm tired of adventuring solo during what small breaks I'm... permitted. It would be good to have a... friend... to make some new memories with.\"\n\n\"Didn't Freya ever...\"\n\n\"No.\"\n\nI watched her sympathetically for a moment.\n\n\"Well. I think that travelling somewhere warm with a friend like you sounds like an amazing idea.\"\n\nShe gave me a small, sad smile. \"Maybe we'll be lucky some day.\"\n\n\"It's a lovely fantasy. Far better than taking it day by day around here. Sun and orchards would be nice, I think.\"\n\n\"Yes. They are. So... salad it is.\"\n\nShe wandered back over to collect her wine, and I watched her as she walked; watched the way she placed each foot with care, and thoroughly enjoyed the way her small breasts shifted gently under the vest with each smooth step...\n\nI gave up.\n\nIt was futile trying to deny it any more - I had fallen for her in my old, stupid way.\n\nAnd I had something that was burning a hole in my chest; that I desperately needed to say to her...\n\n\"You really are a gorgeous woman, you know,\" I said.\n\nShe froze, then turned to stare at me, mouth working strangely.\n\n\"What... what made you say that?\" she stammered.\n\n\"I... um... it's just... something I've wanted to say to you since... since I first saw you, I guess. I used to watch you on the walls and at the gym, or on the weights, wishing I was as... beautiful as you... Bella, are you blushing?\"\n\nShe'd spun away from me.\n\n\"No,\" she answered in a husky voice, after some time. \"No. You... caught me off guard is all. I wasn't expecting to hear anything that... nice... about me. Not from... you...\"\n\n\"Why on earth not?\"\n\n\"Because... nobody else ever...\"\n\nI watched as her shoulders started to shake. She hunched over, holding herself...\n\nOh.\n\nI kicked off the duvet and went quickly to her.\n\n\"Oh Bella. Hey. I'm sorry. Hey. No. Don't. Come here.\"\n\n\"I'm sorry,\" she choked. \"I'm sorry...\"\n\nI wrapped my arms around her. I held her to me and rocked her gently from side to side as she shuddered her way through a brief but clearly painful burst of tears. Then I ran my hands gently up and down her back as she slowly sniffed and coughed and struggled her way into a recovery of sorts.\n\n\"Shit. Sorry,\" she whispered again, when she could.\n\n\"She really has done a number on you, hasn't she,\" I breathed.\n\n\"Her... and... others,\" she gulped.\n\nI sighed and pulled her closer again.\n\n\"Talk to me. I'm right here.\"\n\nShe shrugged, sniffed again. Then she pushed herself away and wiped furiously at her eyes.\n\n\"Sorry for blubbing,\" she whispered. \"It's just... hard... staying tough around you. You... you disturb me.\"\n\n\"Disturb?\"\n\n\"Unsettle. Make it hard for me to... to breathe, sometimes.\"\n\nI stared down at her. \"But... but why, though?\"\n\n\"Because you're gentle... and kind, and warm and friendly and lovely and... so unbelievably fucking hot...\" she finished with a whisper.\n\n\"Um...\"\n\nIt was innocent. It had to be. There was no way...\n\nI took a slow breath to try to calm myself.\n\nShe sniffed again, and wiped her nose. Then she pulled away and tore off a sheet of paper towel so she could wipe her eyes. \"I'm not exaggerating when I say that it's been a... a long time since anyone as sweet as you has talked or... been as gentle with me as you are. I... miss it. Sorry. I didn't mean to make it awkward for you. I'm just so... so tired of it all.\"",
        "I leaned back against the counter, heart thumping hard in my chest.\n\nShe grabbed the knife and went back to work. Occasionally she'd sniff, and wipe her nose or eyes with her wrist.\n\n\"You're very... quiet,\" she murmured, not daring to look at me.\n\n\"Still... processing the bit about being labelled fucking hot.\"\n\n\"Sorry. Big, stupid mouth. But you are.\"\n\nShe slashed a pepper in two and began hacking furiously at it.\n\n\"Bella, be careful. You'll cut yourself...\"\n\nShe stopped, sighed and put the knife aside again. \"And that would be a perfect end to the bloody amazing day, wouldn't it. Blood everywhere, stitches and all the associated drama that comes with it.\"\n\n\"And I can't drive, so it would be a long and pretty rubbish bus trip to the nearest Outpatients too.\"\n\nI eased slowly into the narrow gap beside her and put my arm around her. \"Here. Let me do the work; you tell me what you need. I'll be your slave tonight.\"\n\n\"Unlikely,\" she whispered, sadly.\n\n.:.\n\nWe'd eaten in awkward, self-conscious semi-silence; and I'd then migrated to the floor in front of the couch. She'd loitered in the kitchen for a bit, pretending to clean, before she'd given in to the inevitable and shyly joined me.\n\nDiplomatic negotiations had ensued. She'd resisted at first, but in the end she'd capitulated unconditionally to my dual-pronged attack of common sense and soft, soothing noises. And now she lay with her head pillowed on my lap, staring at the wall, legs covered with the pilfered duvet and my right hand clutched in her left.\n\nI amused myself by knotting and twirling my free fingers in and out of her hair and stroking the line of her skull just behind her ear in the slow, quasi-hypnotic motions that my mum had always used on me when I'd been overtired or overwrought.\n\nBar one low, soft sigh she'd made not a sound.\n\n\"So are you going to talk to me?\" I said, when I'd exhausted my remaining patience.\n\nShe shifted. \"I guess. I've got lots to talk about. Lots of... stuff... to unpack.\"\n\n\"You know I'm here for you no matter how long it takes.\"\n\nShe rolled over slightly so that she could stare up at me. \"You mean it, don't you? You actually mean that when you say it.\"\n\n\"... yes?\" I answered her, puzzled. \"Why wouldn't I?\"\n\n\"I've been in four long-term relationships and countless short ones. And you're the only person that I've ever believed when she said that.\"\n\n\"I like to think I'm honest,\" I said softly. \"Even when it hurts. Even when it's hard. Even if it means... losing someone.\"\n\n\"How many have you... lost?\"\n\n\"Two,\" I said, after a short silence. I sighed. \"Only two. The first... the first was I think the worst of them for me.\"\n\n\"The first is always hard.\"\n\n\"Yes.\"\n\nI wondered if I was brave enough.\n\nI stared down at her; at this strange, wonderful, complex woman who I'd become so fond of.\n\nAnd suddenly, just like that, I was done with being careful, or wise, and I needed her to know who I was.\n\nI took a deep breath.\n\n\"Yes. She was a really close friend before... that.\"\n\nHer eyes flicked open in surprise. I felt rather than heard the little gasp that escaped her.\n\n\"Wait... what? Izzy... are you saying what I think you're saying?\"\n\nI glanced down at her again, meeting her wild-eyed stare with an almost detached serenity as I, finally, opened my heart to her.\n\n\"Bella. I... I have this stupid thing that happens to me. My thing is... is that I fall for who a person is. If they're kind and decent and attractive and gentle and even remotely flirty... well... that's generally it for me. It's never really mattered much to me what they have... downstairs. It's who they are that's... that's always been what mattered to me. That's what I... fall for.\"\n\n\"Oh...\" she breathed in a small, almost panicky voice.\n\nI was the first to look away, and I swallowed hard, hunting for my train of thought at the base of the cliff that her expression had just pushed it over.\n\n\"So... my first. Lilly,\" I added softly. \"Oh, God, she was lovely. She had my heart - all of it. Utterly. She was gentle and so... good... to me. But... she went overseas for University, and met someone else who was... better for her. We chat, sometimes. I... I still dream about her. Emma's the only person who knows the truth about her. She was the only one I could trust when my heart was broken and I felt like I was dying of grief. Emma's the only one I ever told about that part of me. Up until now. Now that I've told... you.\"\n\nShe clutched my hand to her.\n\nI stared out through the windows into the gathering dusk. I was surprised how, even after all these years, memories of Lilly would still bring a lump to my throat.\n\n\"What happened then?\" Annabelle probed, voice strangely shaky.\n\n\"So,\" I continued, huskily. \"So... after some truly awful false starts that I'm not going to do more than allude to, I managed to find and somehow stay with a really sweet guy for nearly two years. But he wanted to settle down and put down roots and... have a child... and I wasn't even remotely ready or capable. But I really liked him. He was easy to be with. He made me laugh a lot. But... I just wasn't right for him.\"\n\n\"Do you still see him?\"\n\n\"No. It's better that way,\" I said, softly.\n\nI could feel each and every breath she took.\n\n\"Then... then there was a period of getting whatever I could, whenever I could, and not looking after myself... to the point that I eventually couldn't get anything at all. I put on weight, got depressed, and spent a couple of years bitter and alone until I got my shit together and got help and started looking after myself again. And then... and then... you came into my life... and... well... here we are.\"\n\nShe took a long, slow breath.\n\n\"And here I've been, flirting like a madwoman and not realising the strife I was causing you,\" she whispered. \"I thought I'd get a rise, or a blush, and be able to make do with that. I didn't mean to make this awkward. I didn't mean to stress or worry you at all, or make you have to tell me all of this like this, with no time to plan or prepare or filter... I'm really sorry, Izzy. Fuck, I'm such an idiot...\"\n\n\"Were you... really... flirting with me?\"\n\nShe rolled over onto her back again and stared up at me.\n\n\"Of course I was. All the time. You're lovely. You're stunning and beautiful and sweet and gentle - everything a girl could want. Everything I could want. And your hugs. Oh my, those take my breath away. And... and I'm actually ashamed of myself, because I have to confess that I was cheating on... on Freya... in thought and word... if not in deed. With... well, with you,\" she finished with a shaky little laugh.\n\n\"Your relationship was over, Bella. For months, by the sound of it. One of you just had to actually own that and make the call, for both of your sakes. Both of you were going through hell, and from what I saw and heard there was no salvaging it. Better to be sad but free to move on if... if you wanted to...\"\n\n\"Oh my God, this is so fucked up now...\"\n\n\"Is it really?\" I asked, watching her.\n\n\"I wanted you from almost the first time I saw you. But you were unobtainable and thus... safe to be around. Safe to tease. An idle and innocent dalliance to distract me from my own trauma. I thought you were straight. Every thing you did telegraphed that with spades. But even so something about you just completely fucked with me in ways I've never experienced before. And now that I know all this I'm... I'm... I'm absolutely terrified by that.\"\n\nI stroked my fingers down along the line of her jaw, and she let out a little shivery whimper from somewhere deep inside herself.\n\n\"Why? Why terrified?\"\n\n\"Because...because... I've fallen so hard for you. I... I need you, Isla. I... crave you.\"\n\n\"Well... ditto, you know...\" I whispered, and I felt her hand spasm hard on mine.\n\nWe stared at one another for a moment, then she blinked and looked away.\n\n\"So... what do we do now?\"\n\n\"To be honest... I... hadn't really thought this far ahead. I'm... I'm ad libbing like crazy right now...\"\n\n\"Do you... really... like me like that?\" she asked, soft and horribly unsure of herself. \"Really?\"\n\n\"Yes. Oh God, yes. So much. You... God, Annabelle... I don't even have the words for how being around you makes me feel...\"\n\n\"Ok,\" she whispered.\n\n\"Ok? Is that all you're going to say?\" I said, fighting the mad urge to giggle.\n\nShe smiled shyly.\n\n\"Yes. Um. Well. Normally I'd... I'd crawl onto your lap right about now and start to kiss you silly. But with this knee... and that jaw... I guess that probably wouldn't go very well. So as much as I'd want to... Ok is going to have to do for now. God. You perplex me, woman. I feel like a clueless eighteen year old around you.\"\n\n\"How about you just come sit next to me and we... and we find out what works for... for us.\"\n\n\"I'd... like that...\"\n\nShe shifted off me, and I lifted myself up onto the couch. She lowered herself down next to me and twisted to face me.\n\nI took a shaky breath.\n\n\"Heart's going mental,\" she quavered.\n\n\"Mine too. God, you make me lightheaded when you're this close. I can't concentrate on anything else but your eyes...\"\n\n\"We're such spazzes,\" she softly laughed.\n\nThen she took a breath and looked directly at me. \"Isla?\"\n\n\"Uh huh,\" I breathed, captivated by her.\n\n\"Come here?\" she begged me.\n\nSo I did.\n\n.:.\n\nShe began exquisitely. She leaned in gently against me, and I let out a shivery moan as she trailed her lips along the uninjured side of my jaw and then down to my shoulder. I shuddered hard as she nipped and nibbled at my skin.\n\nI held her gently to me, marvelling at the way her shoulder muscles shifted under my hands as she eased herself in closer.\n\n\"You smell amazing,\" I whimpered.\n\n\"Your shampoo and body wash,\" she whispered into my ear. \"I like them. I think I'll adopt them as my own. There's lots about you I plan to adopt as my own...\"\n\n\"Please... do. They... oh... suit you so well...\"\n\nI could feel the soft swell of her small breasts against me; her nipples jutted against me as she shifted. I glanced down, letting out a hissing moan as I caught a brief glimpse of her down the front of her vest.\n\n\"Voyeur,\" she whispered.\n\n\"Uh huh. Guilty as... uhn... charged...\"\n\n\"I'll take it off and then you can have a proper look. But I want to see yours too. God knows I've waited long enough. Didn't even sneak a look in the showers, no matter how tempted I was...\"\n\nI put her hand to the zip of my fleece top. \"Stop taunting me and undo me,\" I begged her. \"That's your job tonight. I want you to undo me...\"\n\n\"Kinky thing, aren't you... but ok. I accept...\"\n\nShe slowly eased the zip down, and let out a deep throaty moan as she folded the two sides back and bared me to her. \"I've wanted to see those for months,\" she breathed. \"Oh, my God, it was so worth the wait. Your breasts are perfect, Izzy. Perfect. Uhn. Hang on. Let me just...\"\n\nAnd she shimmied quickly out of her own vest and threw it aside.\n\n\"Bella,\" I whimpered, as she trailed her fingertips up from my hips. I shuddered as she explored my ribs and the undersides of my breasts with her fingertips.\n\n\"Uh huh...\"\n\n\"That's... thats so nice. I love being touched. Like that. By you.\"\n\n\"Just wait till I get my... hands on the rest of you.\"\n\n\"Kiss me,\" I begged her. \"But gently. Gently. But kiss...\"\n\nShe reached up and pulled me down to her; her kiss was slow, tender and delicious. I moaned, then whimpered as pain pulsed in my jaw; I eased off, took a breath, then came back for more, trying to ignore the discomfort as something unnecessary, as something distracting but not really real, something unimportant when compared to her.\n\nI hesitantly reached up to find and stroke her small, beautiful breasts; she shuddered and wriggled in closer to me. \"Don't stop,\" she breathed. \"Don't stop touching me. Don't you dare stop, ever. I crave your hands on me. I've wanted to touch you, to feel you touching me for so long now. I'm starved of attention and I will quite literally explode if I don't get it from you right this instant. Izzy, I'm not joking...\"\n\nShe wrapped her arms around my neck and hung backwards off me. \"Play with me. You can play with any bit of me you want to,\" she begged. \"Just make me feel wanted. Just...\"\n\n\"I want to kiss your breasts,\" I groaned. \"I want to kiss you... but this fucking jaw...\"\n\n\"I'll wait. I'll wait for that. Use your fingers. Touch me, touch my body, Izzy. Touch my... mm... oh, just like that sweetie, just like that, oh God... I love having my nipples... uh... yes, pinch them gently. Not too hard... just...\"\n\nAnd then she just went quiet, staring up at me, shimmying her hips in small, slow circles as I teased her, as I toyed with her. She took a shuddering breath, then a second as I trailed my fingers down along her sculpted abs and around to the small of her back.\n\n\"My God, your body is to die for,\" I whispered to her.\n\n\"Years of frustration, self-abuse and hard work. I'm glad...you approve of the results,\" she gasped. \"Izzy. You're burning me up here. I want to be on you, for fuck's sake. Not restricted like we are here. And fuck this stupid knee of mine!\" she shouted out in frustration.\n\nI laughed softly, and she glared up at me. Then, aware of how silly she sounded, she grinned.\n\n\"Bed?\" I suggested.\n\n\"Bed,\" she agreed. She struggled to her feet and pulled me to mine. I grabbed the duvet and she tugged me along by my hand as she made for my bedroom. She spun me around her and pushed me down onto the bed, then lowered herself gingerly down next to me, groaning as she straightened her knee.\n\n\"I hear endorphins are good for pain relief,\" I teased her.\n\n\"Best you get to work on that then,\" she retorted with a grin. She lay back onto the bed and stretched her arms up over her head. \"Play with me,\" she whispered. She grinned at me and slowly started to undulate her body, playing at the role of seductress. \"I want to be your plaything tonight. I want you to explore every bit of me. Get to know me. Intimately,\" she added in a low, sultry alto.\n\nI stared down at her for a heartbeat.\n\nThen she cried out as I put my hand directly to her crotch and pressed up against her mons and lips. She arched up as I wormed my hand deeper between her thighs, and spread her legs slightly for me. I could feel the damp heat of her through her leggings, could feel the slight indentation of the line of her sex, and I moved closer to her so that I could lie down next to her, my body pressed hard against hers.\n\n\"Can I...\" I begged her.\n\n\"Yes,\" she groaned, cutting me off. She reached down and pulled her waistband down and away from her, granting me permission and access. I eased my hand down to her, through the soft downy covering on her mons to her soaked and sticky lips. She made a soft, desperate noise and clutched at me as I slowly spread her with my fingers.\n\nShe was absolutely ready for me; I could feel the heat of her inner lips and slit, and she groaned as I teased my finger around her and back up to the small hood of her clitoris.\n\n\"Isla,\" she whimpered.\n\n\"Uh huh.\"\n\n\"I've wanted this for... so long...\"\n\n\"I'm so happy to be wanted again,\" I gasped. \"And I'm especially thankful that it's by you.\"\n\nI nuzzled gently into her neck and teased my middle finger slowly into her; she arched back with a long, throaty groan as I gently began to tease my fingertip over her clit. She writhed against me, letting out little breathy noises as she started to trail her fingernails over her breasts. Then I gasped as she forced an arm under me and pulled me tight against her; her hand cupping and squeezing my shoulder blade. She turned her head and found a nipple with her mouth, and my toes curled as I felt her deft, moist tongue on my skin.\n\nI tried to focus on her, on the liquid warmth that now sheathed her lips and clit and my questing fingers; the scent that I could now nearly taste as it rose up off her body.\n\nI found the base of her clitoris and slowly, playfully started to glide my fingertip around it.\n\nI loved the way she responded to me. I loved the way she smelled, the way she filled the room with light.\n\nI loved her muscles, the way her body tensed and relaxed everywhere in time to my slow, insistent exploration of her sex...\n\nShe was everything I wanted. Everything I could ever have wanted.\n\nI wanted to please her. I ached to please her.\n\nShe released me; gasped a quick, desperate breath. Her right leg began to quiver.\n\n\"Izzy,\" she whimpered. \"Izzy, that's so good. You're so good at this. Oh, God, you're so good at this...\"\n\n\"Got good motivation to be good at it,\" I groaned. \"Got you to make feel good from it...\"\n\n\"Izzy...\"\n\n\"Yes...\"\n\n\"Izzy...\" she whimpered again.\n\nI could feel her entrance starting to tense and release under my finger.\n\n\"You... close?\" I moaned.\n\n\"So... close. Hair trigger. You're so... good... oh my God...\"\n\n\"I want you to come for me. I want to make you come for me.\"\n\n\"You're so... amazing... on me...\"\n\n\"Come for me. Come for me...\"\n\n\"Gonna... uh... huh... now... now... oh... oh...\"\n\nShe cried out, legs clamping hard onto my hand, and she clutched at my back and curled hard against me. She began to shake with fast, violent contractions, face buried against my breasts, fingers digging deep into my back as her brutal orgasm rocked her.\n\nAnd then she wouldn't let go. She put her other arm around me and clung to me, panting, clutching herself hard against me as her thighs clamped and released in a slowly decreasing frequency on my warm hand as her body slowly relaxed against me.\n\nShe took a slow, deep breath. Then, still shaking, she reached up to me and pulled my head down to hers.\n\nHer kiss was soft as a butterfly on my lips, but my heart felt like it wanted to burst out of my chest nonetheless.\n\nAnd as I lowered myself down into her warm, sweaty embrace, I couldn't quite wipe my incredulous, somewhat self-satisfied smile away.\n\n.:.\n\n\"Oh my God. Can you stop looking so smug for just one second?\"\n\n\"No,\" I said. I grinned.\n\nShe stretched, groaning. \"I suppose I'll have to allow it. My God, Isla, that... that was something special.\"\n\n\"Not bad for my first time, huh?\"\n\n\"Babe, if that's what I'm in for from you, I'll die in a state of bliss. I'm going to need you to do that again in a bit. For verification purposes. Once I've stopped seeing stars, that is. Oh fuck me, that was something else.\"\n\nI flushed, pleased as punch that my efforts had been appreciated. \"Next time I'll use my tongue,\" I whispered into her ear, and she gave an involuntary full-body shudder.\n\n\"Tease,\" she groaned. \"You'll break me.\"\n\n\"I look forward to testing that theory.\"\n\nI rolled over onto my back and stared at my ceiling, listening to her as her breathing slowed.\n\nI ached, but I was not desperate, not yet, and it was nice to simply lie beside her, basking in the knowledge that I'd pleased her.\n\n\"So tell me what you like,\" she whispered.\n\nI smiled. \"Oh. I have a list. How long do you have?\"\n\n\"Sixty, maybe seventy years,\" she said. I could hear the grin.\n\n\"Well. I love being filled. And tongued...\"\n\n\"Mm. Never would have guessed...\"\n\n\"And you kind of also already discovered that I love your mouth on my nipples...\"\n\n\"Heh. Yeah. I noticed.\"\n\nI stretched my arms up behind me. \"Honestly, Bella... the odds are good that you could do anything to me. Anything at all. And I'd love it.\"\n\n\"Is that a challenge?\"\n\n\"Oh I don't know... I mean. I can feel I'm soaking wet, but... well, if you're not in the mood to explore me... well...\"\n\n\"You are such a fucking tease.\"\n\nI laughed softly. \"You're going to have to learn to put up with that bit of me.\"\n\nShe rolled over, propped herself up on an arm, and stared down at me.\n\nI swallowed hard at the intensity of her gaze.\n\n\"You're a treasure, do you know that?\" she breathed.",
        "\"What?\"\n\n\"You. You're smart, funny, gentle, gorgeous, and you smell like literal heaven. I will never, ever have to put up with anything about you. Everything about you is magical.\"\n\n\"You're just saying that to get me into bed with you...\"\n\nShe glanced briefly around, then gave me an are-you-serious look.\n\n\"Which seems to have worked,\" I added, wryly.\n\n\"Funny that,\" she drawled, as she found my right nipple and slowly started to tease a fingertip around it.\n\nMy stomach shuddered.\n\n\"Yeah, you like that, don't you,\" she said, amused.\n\n\"Uh huh.\"\n\n\"So tell me about how wet you are.\"\n\n\"We're talking... Lake District in winter here. I am going to need... new leggings,\" I moaned.\n\n\"Let's see what I can do about that, then...\"\n\nShe lowered her lips to my breast. I arched slowly backwards as she languidly began to lick and nuzzle against my nipple. I felt her hand shifting downwards over my ribs and tummy, and I took a panting gasp as she slowly slipped her hand under the waistband of my tracksuit pants.\n\nThe hot pink flush on her cheeks framed the slightly crooked smile she gave me as she pulled back slightly. She stared down at me, mouth slightly open, and I felt her shudder with me as she reached me.\n\nShe slowly spread my lips, and teased her fingertips along me.\n\n\"Oh, that's nice,\" she whispered. \"Oh, you feel good...\"\n\n\"Uh huh,\" I groaned.\n\n\"Do you always...\"\n\n\"No. Struggle. Often need. Lube. But... oh God, I'm so. Hot for you... this is all you...\"\n\n\"I like that. I like that I got you so eager. So... do... do you want me in you?\"\n\nI nodded desperately.\n\n\"Beg me...\" she teased me.\n\n\"No... please...please, \" I cried. \"Please don't. Torture me... please just take me Bella, please just make me yours... please...\"\n\nAnd then I just lay there, shuddering helplessly, crying out as she slowly eased her finger all the way into me. She added a second digit to me, and I made some sort of uncontrollable noise that set her giggling again.\n\n\"I love how expressive you are.\"\n\n\"Can't help it. God. Can't help it. Want you. So much...\" I wailed, writhing and grinding against her.\n\n\"I'm going to make you see stars, Izzy,\" she whispered.\n\n\"Just... fuck me... already... please...\" I begged her in desperation. I spread my legs as wide as I could and fumbled at her hand, trying to drive it deeper into me. \"Bella, please, I need you, please, oh please...\"\n\nShe put her face to the side of my head and pushed herself against me. Slowly, achingly slowly, she began to ease her fingers in and out of me.\n\nAnd she laughed softly into my neck at the pathetic, uncontrolled noises I made.\n\nI swiftly lost the ability to do anything except lie there - an entirely passive recipient - bar the low moans, which were all I could manage at first. I could feel the joints of her fingers spreading me with each languid thrust she gave me. Her palm brushed gently against my clit with each movement she made, and each time she did so my belly spasmed.\n\nIt had been so long since I was last with someone, and she was so, so good at it...\n\nI was panting little soft whimpery breaths, and I fumbled for her, pressed her hand harder against me. She wormed her free arm under me and gathered me in against her and slowly, maddeningly, she began to kiss my neck, to nibble my earlobe.\n\nI forced my finger in under her hand and started to stroke myself, and that made her arch hard against me with a low moan.\n\n\"Need... need...\" I gasped. \"More. Harder...\"\n\nShe increased the tempo, started to thrust her fingers in and out of me. It was hotter than anything I could remember - better than any cock, better than my toy, better than anything I'd ever felt before.\n\nI was building fast, panting hard, sweating and so achingly slick for her, for Bella, and she took me, drove me up... up... and over, and she grappled me and wrapped herself around me, cocooning me with her body as I shuddered and spasmed and gasped and cried through the beautiful agony of the wonderful orgasm she gave me.\n\nThen I clung to her for quite some time, utterly unable and, really, completely unwilling to let her go.\n\n.:.\n\n\"You ok?\" she asked, softly.\n\n\"Just perfect,\" I whispered. \"Just... appreciating what that was...\"\n\nI wriggled in closer, smiling at her soft laugh.\n\n\"It's been ages since I had someone to be like this with. Lazy. Half-clothed. Post-orgasmic. Spent. You spent me,\" I giggled. \"No change.\"\n\n\"Mm. Almost the same for me,\" she agreed. She breathed in, then out. \"God, I love the way you smell. Soft. Warm. Safe...\"\n\n\"Mm. Well. I'm glad. I'm glad I can be your safe place.\"\n\nI slowly trailed my hand down over her back, and smiled to myself at the way her muscles twitched. She squealed and quickly grabbed my hand to freeze it in place.\n\n\"You're ticklish,\" I breathed, amused, filing that tidbit away for later abuse.\n\n\"Always am... especially after sex,\" she shuddered. \"My skin and extremities go bonkers. I get hypersensitive to touch. Makes everything feel a million times more present...\"\n\n\"Sounds nice. I just get giggly and relaxed.\"\n\n\"You are doing a good puddle of happiness impression right now,\" she agreed.\n\n\"Can't help it. Had sex. With you.\"\n\nShe laughed, and pushed herself in against me. \"I'm glad to hear you enjoyed it.\"\n\n\"So much,\" I groaned. \"It... it was just what I wanted. Just what I'd dreamed of.\"\n\n\"Mm. So...\"\n\n\"So...\"\n\n\"Does this mean... I mean... are we...\"\n\n\"Are we... what?\"\n\n\"An... item?\" she said, softly.\n\nI lifted my head so I could focus on her face. \"I'd like to think that we are. Don't you want to be?\"\n\nShe smiled and relaxed, clearly relieved.\n\n\"No. I mean yes. As in I'd like that. I'd... I'd like to be able to think of you that way. As my...\"\n\n\"Nice new gym girlfriend?\" I teased her gently.\n\n\"It was a stupid choice of words. I'm sorry,\" she breathed.\n\n\"It's fine. I'll forgive you. So long as hot gets inserted in there somewhere too.\"\n\n\"Oh. It does, trust me. I'm sure I could find other things to insert too...\"\n\n\"Uh huh,\" I moaned. \"Not right now you won't. I need a recovery period. Possibly measured in years...\"\n\nShe let out an amused \"Hah\".\n\nI felt for her hand and pulled it to my lips so that I could kiss it. Then I cupped it against my heart and lay there, quiet and content.\n\n\"You know one of the things I've always liked about you?\" she said, softly. \"Apart from your absolutely amazing bum, of course?\"\n\n\"What?\"\n\n\"The fact that you're real.\"\n\n\"Hmm?\"\n\n\"So many of the women at that gym are completely fake. Fake nails, fake smiles, fake faces, fake hair, fake personalities for when they're seeing their 'fitness consultant'. You've never pretended to be what you're not. You've always just been... you.\"\n\n\"I don't have the money or patience to be anyone else.\"\n\n\"Well. It's a pleasure to see, and I've always approved.\"\n\n\"So you were checking out my bum, hmm?\"\n\n\"All the time,\" she confessed. \"Those leggings of yours... well... lets just say you were always fun to watch. And I did a whole lot of watching.\"\n\nI smiled. \"Glad I was a nice floor show for you...\"\n\n\"Izzy... are you falling asleep on me?\"\n\n\"No. Not entirely. Just... feeling so relaxed, and... content. Just here with you. With nothing intruding. It's... nice. Feeling you breathing next to me like this. No... complexities. Just... you and me.\"\n\n\"Yeah. I think I know exactly what you mean...\"\n\nShe yawned, loudly, and I grinned to myself.\n\n\"It's been a long day, hasn't it,\" I said.\n\n\"Yes.\"\n\n\"So... how about we kill the lights and sleep for a bit. You can have me again in the morning... if you're good.\"\n\n\"Promises, promises,\" she whispered, and I shivered as she leaned in to kiss my cheek.\n\nIt was a lot more comfortable lying beside her when we weren't trying to keep an artificial space between us. She crawled in close and held me, and I fell asleep in soft fluffy happiness with the soft skin of her arm pressing, not uncomfortably, against the underside of my breasts.\n\nAnd, true to my word, I let her have me again in the morning.\n\n.:.\n\nAnnabelle pushed her door open and slunk in.\n\n\"Fuck,\" she said, stopping just inside her flat.\n\nI craned my head and stared past her.\n\n\"Jesus,\" I breathed.\n\n\"She... fuck, she went berserk. She's... she's broken everything...\"\n\nI watched her nervously, hoping that Freya was not hiding somewhere, poised to leap out with a chef's knife. Then I swallowed and entered the flat, pulling the door closed behind me.\n\nWe'd braved the trip so that Bella could get some fresh clothes and, as she said, \"price up the redecorating work I'll need to do\".\n\nWe couldn't leave until she was done.\n\nStill, neither of us had expected quite this level of spectacle.\n\nWe stared around ourselves.\n\nShards of numerous bowls and plates littered the floor, and glass from a smashed mirror glittered prettily in the pale morning sunlight. Papers and books lay strewn everywhere, as did cushions and a substantial amount of Annabelle's nicer clothing.\n\n\"Well. Good thing we weren't here,\" she said. She sighed and prodded a ripped lace bra with a toe. \"So much unnecessary drama. I'm glad I'm free of her.\"\n\n\"She was hurting,\" I said softly. \"She probably couldn't help it. I feel... almost sorry for her. I know she's wrecked your place but... it can't have been easy for her either, Bella.\"\n\nBella shot me a glance. \"You're far too nice for your own good, you know. But... you're right,\" she sighed. \"I forget, sometimes, that there were two of us in this mess... There's a broom in the kitchen cupboard. Let me just get to it and I'll get started on the debris.\"\n\n\"Got a vacuum cleaner?\"\n\n\"No. Never felt the need. I do regret that now, though.\"\n\nI began picking up shattered pieces of bowls, stepping carefully wherever Bella had cleared a path and leaving the rest of the floor free to her. She quickly cleared the worst of the debris and swept the rest into a pile to be dealt with later. Slowly we cleared a path to the short passageway that led to her bathroom and bedroom. She paused and briefly glanced into the bathroom, then sighed and turned away, pulling the door half-closed behind her. I followed her to her bedroom, taking a quick glance, noting the \"Lying whore!!!\" scrawled in scarlet lipstick on the bathroom mirror.\n\n\"Well, she was certainly angry,\" I said softly.\n\n\"At least she took her stuff. At least she's gone. But I'll need to change the locks; she probably still has a key.\"\n\nAnnabelle's voice was flat, wooden. She was staring at the chaos of her bedroom. She took one slow step in and knelt unsteadily so that she could pick up a shattered picture frame. \"Now that was unnecessary,\" she whispered. She lowered it reverently onto her bedside table and started to sweep up more glass shards.\n\nI brushed past her and looked at the picture. A pre-teen Annabelle stared up; behind her stood an older darker-haired clone of her with her arms around Annabelle's shoulders.\n\n\"My mum,\" Bella whispered to my unspoken question. \"She... died a couple of years ago. I'm glad Freya found a convenient way to get one last stab in.\"\n\n\"Oh Bella... I'm so, so sorry...\"\n\n\"It's ok. It's just glass and wood. I can fix it, and glue the frame. At least the photo is still whole; at least she didn't go there.\"\n\nI gently put my hand on her shoulder and she turned and came to me. She didn't cry; she just leaned tiredly against me, face tucked into my neck, breathing slowly.\n\n\"Bella? Talk to me,\" I said, gently rubbing her back.\n\n\"Can't. Not now. Not here. I need to... to get the worst back under control and go buy some incense and come and air her out of here and chase out the darkness she's left behind...\"\n\n\"I'll pick up bits, you sweep,\" I said softly. I kissed her forehead and let her go, then got to work.\n\nThe damage wasn't as bad as it had first seemed; the laminate floors were easy to free from shards, and it seemed that Freya had been more intent on knocking things over as a dramatic demonstration of her sense of betrayal as opposed to investing effort in truly wrecking Annabelle's mementos.\n\nI picked up trophies and medals and awards, lined them up neatly on the folds of the duvet, and did one more check for anything else. I spotted one more picture frame under the bed and reached for it, cursing softly as I nicked my finger on a shard we'd missed.\n\nI sucked the bead of blood off my fingertip, then glanced down at the picture... and exhaled. An immaculately-coiffed Freya stared serenely up at the camera from buttercup-stippled grass; Annabelle lay beside her, holding Freya's hand, smiling her small, sweet, gap-toothed smile.\n\n\"What is it... oh...\" Annabelle said.\n\nI turned it over, saw the personal message there and looked away before I could read it - it was not intended for me; Bella would share it if she ever wanted to. I looked up at Bella; she was watching me, unnaturally still - clearly waiting for me to explode or rant or... react in the violent, confrontational way she was so conditioned to expect.\n\nIt broke my heart to see how instinctive her reaction was - how deeply the anticipation of her ex-partner's violent persona had twined itself around her like chains.\n\nI hoped that I would be able to help her break them.\n\n\"You should fix this one too,\" I told her softly. I put it down beside everything else, then wiped my bleeding finger on my thigh. \"But please be careful, the glass is razor sharp.\"\n\nShe sighed out a shaky breath.\n\n\"Izzy... you're bleeding...\"\n\n\"It will heal. Most things do.\"\n\nShe stared at me, not quite understanding me. \"But that's... it's... it's her...\"\n\n\"It's a picture, Bella, of a memory of the two of you that was important enough for you to frame. Memories make us who we are. I could never ask you to throw away your memories; nor would I ever want to. You can hang it up if you want, it's your flat and your space. Just... I'd prefer it were not in the bedroom, please,\" I added with a small, wry smile. \"I don't want her glaring at me while we're making love...\"\n\nShe came slowly came around the bed to me.\n\nShe took a single, sobbing breath and I wrapped my arms around her and held her to me.\n\n\"If ever I needed to know that you're one in a million,\" she whispered after a while, \"that moment right there would have been it. God, you're an amazing woman. I feel so lucky to have met you.\"\n\n\"She was part of your life. I respect that. I don't have to like her, or all the horrible scars she's left on you. But she was part of your life. And that's important.\"\n\nI pulled back and stared down at her. \"But I'm part of your life too, now. So. Let's finish clearing up, and go find that incense, and air the darkness out of this place so that you can have your own haven again. I want you to have somewhere you can be yourself in if you need to.\"\n\n\"Ok,\" she whispered.\n\n\"Ok? Is that all?\" I teased.\n\n\"Sorry. Just...\"\n\n\"I'm teasing you, sweetie.\"\n\nShe flushed a wonderful pink and looked away. But she took my hand in hers and held it tightly.\n\n\"Come. Lets find some unbroken cups and have a coffee. Then we can go get what we need to air and secure your home. Then...\"\n\n\"Then we can... start on making some new memories,\" she said, softly.\n\n\"Yeah. Together.\"\n\nShe pulled me against her and looked up at me. She risked a small smile.\n\n\"So... want to come with me, then?\" she said.\n\n\"Yes. Wherever and whenever.\"\n\n\"Ok then.\"\n\nSo we went, and had our coffee, and bought the incense, and changed the locks, and did all the million little things that new couples do as they grow to know one another.\n\nAnd, what with one thing and another, she never did get around to hanging that picture."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "romance",
        "recovery",
        "healing",
        "survivor",
        "dialog"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/falling-37"
}