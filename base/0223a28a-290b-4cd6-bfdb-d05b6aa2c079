{
    "title": "Mason Ch. 15",
    "pages": [
        "Toni sat on the bed for an hour thinking about what had transpired between her and Mason. She was tempted to call him and demand that he tell her whatever it was so that she could decide whether to jump ship or not. She forced herself to calm down when she heard Jamie in the kitchen, the last thing that she wanted was for him to be upset.\n\n\"Morning.\" Toni said with forced brightness as she walked into the kitchen.\n\n\"Morning mom, want some cereal?\" Jamie asked getting her a bowl before she responded.\n\nMason had rubbed off on him Toni noticed. \n\n\"Yes, thank you.\" she replied.\n\nShe watched as Jamie poured her cereal first and then his own and then waited for her to pour the milk.\n\n\"Jamie, you really like Dr. Mason don't you?\" she asked as she poured the milk.\n\nJamie looked at her as if she had gone nuts but he answered the question.\n\n\"Yep.\"\n\n\"Why do you like him?\" Toni asked.\n\n\"Dunno, he's nice and he likes us.\" Jamie replied.\n\n\"What about Dr. Ellis? He's nice too.\" Toni said and watched Jamie's expression.\n\n\"I don't like him.\" He said scrunching up his face.\n\n\"Why don't you like him?\" Toni asked.\n\n\"He doesn't like me but he likes you.\" Jamie said.\n\n\"How could you possibly know that?\" Toni asked.\n\n\"He didn't talk to me.\" Jamie replied as he finished his cereal.\n\nToni thought back to when Jamie was in the hospital. Jamie was right, Mike said hello to him at the beginning and then Jamie ceased to exist as Mike worked on his own agenda whereas Mason made a point of speaking to Jamie and included him in on any conversation that was age appropriate.\n\nShe felt silly asking a five year old about a man that she was thinking of becoming involved with but his opinion counted.\n\nJamie jumped up when he heard his laptop beeping.\n\n\"Dr. Mason!\" he squealed as he ran into his bedroom.\n\n\"Question asked and answered.\" Toni said under her breath.\n\nShe had never listened in on the talks that Jamie and Mason had on the laptop, it was just another indication that she trusted him. This morning however, she listened.\n\n\"Good morning Jamie.\" Mason said.\n\n\"Good morning Dr. Mason.\" Jamie replied. \"Are you coming over tonight?\"\n\n\"Not tonight, your mother and I have some things to talk about that young men shouldn't hear.\" Mason replied.\n\n\"Like what?\" Jamie asked.\n\n\"I'll let your mother tell you if she chooses to but I was wondering if you could help me with something.\" Mason said.\n\n\"Okay!\" Jamie said eagerly.\n\n\"What should I make your mom for dinner tonight?\" Mason asked. \n\nToni knew what Mason was doing; he knew that Jamie would be disappointed at not seeing him so he found a way to include him in on the evening.\n\n\"I think that you should make..... Pancakes, the Mickey Mouse ones, she likes those.\" Jamie said.\n\n\"Pancakes? Anything else?\" Mason asked.\n\n\"Mickey Mouse pancakes.\" Jamie corrected, \"And she likes that bacon that has the pepper on it.\" Jamie added.\n\n\"What about something to drink?\" Mason asked.\n\n\"Orange juice.\" Jamie replied without hesitating.\n\n\"That sounds like a good dinner.\" Mason said smiling at Jamie, \"Thank you for helping me plan it.\"\n\n\"You're welcome, will I see you tomorrow?\" Jamie asked.\n\n\"I hope so.\" Mason replied. He was hesitant to say yes just in case the evening didn't go as planned. Fortunately, Jamie was satisfied with his answer.\n\nToni stepped away from Jamie's room leaving him and Mason to continue their conversation. Mason obviously thought highly of Jamie, \"No, he said that he loved him.\" Toni said quietly.\n\n*******\n\nMason drove home making plans for the evening; he had already called his furniture supplier and was meeting them at his house in fifteen minutes. The new bed would arrive with them and would be set up in next to no time, he had new linens that he would use on the bed and would dispose of any linen that he had used with Gretchen. They were washed but as far as he was concerned, that wasn't the point, he didn't want Toni sleeping on anything that he had used with another woman. \n\nWhen he got home, his furniture supplier was waiting at the gate. Mason drove in, parked in the garage and then went to the front to let the men in. While they tore down the old bed, Mason got online with Jamie. He knew that Jamie would be disappointed that he wouldn't see him tonight and that was why he asked him what he should make for dinner. Another man might have pretended that he was going to make the meal suggested but Mason was really going to make it whatever it was. It was important that Jamie and Toni both realize that he was a man of his word.\n\nAs he and Jamie talked, Mason did a mental checklist of his supplies, he had everything except the peppered bacon but that was easy enough to make and he had fresh oranges in the fridge. By the time he was finished talking to Jamie, the old bed had been taken away and the new bed set up. He admonished Jamie to be good and logged off. He prepared the pancake batter and peppered the bacon before going to his room to make the bed. He had staff that could have done it but he liked his bed made in a certain way and no matter how hard they tried, his staff couldn't quite get the hang of it so now he made his own bed.\n\nThat done, Mason sat in the living room with his feet propped up and began to practice how he was going to tell Toni that he was a vampire.\n\n\"Toni, I'm a vampire.\" No he thought. It was too... something.\n\n\"Toni, you're going to find this hard to believe but I'm not human.\" Mason grimaced.\n\nAfter an hour of trying various approaches, he gave up deciding to see how the evening played out. He began to wonder what Toni knew about vampires, \"probably nothing other than that drivel they show on television.\" he grumbled.\n\nMason closed his eyes to rest hoping that some inspiration would come to him as he rested. Around one in the afternoon, his cell phone rang. Mason checked the ID, Joyce.\n\n\"Yes Joyce.\" Mason said as politely as he could.\n\n\"Wow, you actually answered the phone, fancy that.\" Joyce said.\n\n\"Did you need something?\" Mason asked.\n\n\"This time it's a real need.\" Joyce said. \"I'm leaving for good this time and I wanted to talk to you about joining your practice.\"\n\n\"Joyce....\"\n\n\"Just hear me out, I may be a busy body but I'm a damned good psychiatrist and you know it. You also know that we work well together as long as we're not in the office at the same time which is related to my big mouth. Anyway, I think that we could work something out. If not with you then maybe Eustace Matthews will take me on as a partner. What do you think?\"\n\n\"I think that Eustace won't consider it because as I told you he and I are partners when the mood or need strikes. I also know that he wouldn't tolerate your mouth and it would end badly for you, why don't you consider opening your own office?\" Mason asked.\n\n\"Because you have to have clients to do that.\" Joyce replied.\n\nMason didn't want to share a practice with Joyce no matter how good of a psychiatrist she was and neither would Eustace even if he was looking for a partner. He understood the desire to leave because he wanted to leave too; he was only there because of Toni which brought up another issue-work.\n\n\"How about this,\" Mason said. \"I won't go into practice with you and I won't give you Eustace Matthew's number but I will give him yours so that he can contact you if he's interested. I will also refer clients to you to get you started and you can use my office space during the day only as I see my clients during the evening.\"\n\nJoyce for once was speechless, \"Y... you would do that?\" Joyce asked. \"Why?\"\n\n\"As you said, in spite of your mouth you are very good at what you do. Think about it and get back to me but not tonight.\" Mason said.\n\n\"Ahh, plans with Toni?\" Joyce asked.\n\n\"Good bye Joyce.\" Mason said and hung up shaking his head. Would the woman never learn? He wondered.\n\nFive hours to go and it was too early to call Ethan, the girls had finally gone to the sleeping during the day/up at night schedule. According to Ethan, they were even busier finding all kinds of things to get into but he loved it and them. It made Mason realize that he wanted that, even though he would consider and did consider Jamie to be his son, he wanted a child with Toni.\n\nHe laughed at himself when he thought about him changing diapers and then he turned serious, he really wanted this. Toni would be the one to stop it and if she said no then.... \"I'm getting ahead of myself.\" he muttered.\n\n*******\n\nWith Jamie gone, Toni had nothing but time to think. \"What are you thinking about?\" she asked herself as she munched on one of the chocolate chip cookie that Mason made a few days before.\n\nIt was another one of those times that she really wanted to talk to her mother but she didn't think that she could stand to hear the \"I told you so\" speech. Toni sighed and decided to go for a walk to clear her head; she wondered why she was making this so difficult. \n\n\"Because you're scared dumb ass.\" She muttered. \"Admit it, you want the man.\" she added as she headed out of the door. Her walk took her to her parent's condo where Jamie and Ben were playing some kind of video game and Barbara was in the kitchen making a snack for them when Toni got there.\n\n\"Hi mom.\" Toni said as she sat at the counter.\n\n\"Hi baby, are you alright?\"\n\n\"Yes, no oh hell mom I don't know!\" Toni exclaimed suddenly not caring about the \"I told you so\" speech.\n\n\"Does this have anything to do with Mason?\" Barbara asked as she sat the snacks on a tray.\n\n\"It.... Yes, it does.\" Toni admitted.\n\n\"Let me take this out to the boys and we'll talk.\" Barbara said as she picked up the tray and headed for the living room.\n\nToni closed her eyes and sighed, it just shouldn't be this hard.\n\nBarbara came back to the kitchen and made coffee while Toni got the sugar and cream out and sat them on the table, a few minutes later each woman was holding a cup of coffee. Barbara waited for Toni to say something and when she didn't she asked.\n\n\"Do you love him?\"\n\n\"Just because you love someone, it doesn't mean that you should be with them.\" Toni replied.\n\n\"I'll take that as a yes.\" Barbara replied and instead of doing the \"I told you so\" spiel, Barbara asked another question. \"Did he tell you that he loves you?\"\n\n\"Yes but...\"\n\n\"Did he mention Jamie?\"\n\n\"Yes but...\"\n\n\"Does he want him too?\"\n\n\"Yes.\" Toni said.\n\n\"So what's the problem?\" Barbara asked. \"Is it James?\"\n\n\"Believe it or not the answer is no, I've pretty much made my peace with that although I still have my moments when I feel a little guilty.\" Toni replied.\n\n\"Alright, so what's the problem? You love each other and Jamie which to me is the most important thing, so what are you afraid of?\" Barbara asked.\n\nToni looked into her coffee cup and then back at Barbara.\n\n\"What if he dies?\" she asked in a whisper.\n\n\"And what if he doesn't? Baby, there are no guarantees; he can't promise you that he won't die any more than I can. Death is as certain as taxes and it's a part of life. Now I can't and won't tell you what to do but are you really thinking about sending that man away because you're afraid that he might die?\"\n\nThat is exactly what she'd been thinking.\n\n\"Toni, its time to stop being afraid and time to start letting yourself be happy.\" Barbara said. \"Jamie loves him too and he's so much happier since Mason's been around, so are you for that matter. If you send him away, make sure it's what you really want.\"\n\nShe was right Toni realized. The crux of the matter was her fear that Mason would die leaving her and Jamie alone-again. It all came down to her making a conscious decision to take that gamble, Barbara was right, Mason might not die anytime soon, he could live to be a hundred.\n\nShe had just made her decision.\n\nToni hugged her mother and thanked her.\n\n\"And thanks for not saying I told you so.\" she added.\n\n\"You're welcome and I did tell you so.\" Barbara replied unable to resist.\n\nToni kissed both her dad and Jamie on her way out and headed back toward home. As she walked, her cell phone rang. She squinted in the sunlight to see the number and answered it.\n\n\"Hello?\"\n\n\"Toni? Hi it's me Mike Ellis. I got your number from the staff directory, how are you?\"\n\n\"Fine, did you need something?\" Toni asked.\n\n\"I was wondering about you and Donahue, how serious is it?\"\n\n\"I don't think that's any of your business.\" Toni replied.\n\n\"I just want to be sure that I don't have a shot at you before I throw in the towel.\" Mike said.\n\nToni rolled her eyes, a good doctor he might be but the man was an arrogant jerk.\n\n\"Okay Mike, you're hearing this first from me, throw in the damned towel!\" Toni said and hung up.\n\nThe phone rang again as soon as she hung up.\n\n\"Mike I...\"\n\n\"Toni?\" Mason's voice asked.\n\n\"Oh, hi I thought that you were somebody else. What's going on?\" she asked.\n\n\"I just wanted to see how you were.\" Mason replied.\n\n\"Fine,\" Toni said. \"But what you really want to know is if I thinking about changing my mind about tonight. Am I right?\"\n\n\"Yes you're right.\" Mason conceded.\n\n\"I'm still coming; you've got some things to explain.\" Toni replied.\n\n\"Good, by the way who were you so irritated with?\" Mason asked.\n\n\"Oh Mike Ellis just called.\" Toni replied without thinking about it.\n\n\"What did he want?\" Mason asked trying to keep the anger out of his voice.\n\n\"Nothing really, he just wanted to know if we were serious.\"\n\n\"What did you tell him?\" Mason asked.\n\n\"I told him none of his business and hung up. I thought it was him calling back when I just answered the phone.\" Toni replied just as she reached her condo.\n\n\"Good answer.\" Mason said.\n\n\"Well it isn't any of his business and ... Mason? Are you alright?\" Toni asked not knowing why she asked. He sounded the same but there was something different. He was.... Angry but why?\n\n\"I'm fine.\" Mason replied. \"Just angry that Ellis insists on calling you when I thought that I made myself clear.\"\n\nThe truth.\n\n\"Don't worry about it, I told him to give up.\" Toni said but got the feeling that her words did little to take away his anger.\n\n\"I'll hang up now, I just wanted to check up on you and I wanted to tell you that I love you.\" Mason said.\n\n\"I... I love you too.\" Toni replied and hung up.\n\n********\n\nApparently Joyce wasn't the only one who never learned Mason thought to himself. Mike Ellis was becoming a thorn in his side that needed to be yanked out. It was still too early to go out but he could call the bastard. Mason called the hospital and got Mike's number from the exchange, which was much too easy he realized. He could have been anyone and they simply gave him a physician's phone number without asking questions.\n\nMason dialed Mike's number and waited for him to pick up; it took three rings before that happened.\n\n\"Ellis here.\" he said instead of the traditional hello.\n\n\"Mason Donahue here, just what in the fuck are you up to?\" Mason asked.\n\n\"What do you mean?\" \n\n\"Don't try to play me.\" Mason hissed. \"I told you that Toni Jacobson is off limits and yet you call her. If you call her or talk to her about anything other than work related issues, you will regret it. Consider this your last warning.\" Mason hung up and leaned back into his chair, he was almost certain that he hadn't heard the last of the fool.\n\nHe spent the rest of the afternoon preparing the bedroom. He placed candles in the bathroom and in the Jacuzzi room located just off of the bathroom. He also placed candles in the bedroom as well as the fresh flowers that he had his staff pick up at the florist. The apartment sized refrigerator was filled with water, juice; wine-although he knew that Toni wasn't a big drinker and a cheese tray that was sealed in an air tight container. Everything was ready and he still had two hours to go.\n\n********\n\nToni soaked in the Jacuzzi tub and tried to calm her nerves, after tonight she would know one way or the other if Mason was going to be a fixture in her and Jamie's life. Whether he would be a permanent fixture, it was too soon to tell but how would she feel if he were? She wondered as she closed her eyes and dozed off.\n\nBecause she did tend to fall asleep in the tub, Toni always used an egg timer and set it to go off in fifteen minutes and that's what woke her. She climbed out of the tub, put on her robe and looked at the clock, she still had an hour and a half before Mason came and since she didn't have to dress up, she had time for a nap. She set her alarm and lay down on the bed, within minutes, she was asleep.\n\nThe doorbell ringing woke her up. She looked at the clock and cursed, she had forgotten to turn the alarm on after setting the time. She jumped out of bed and ran to the front door peeking out before she opened it.\n\n\"I am so sorry!\" she gushed, \"I fell asleep and just give me a minute to get dressed.\"\n\nAs far as Mason was concerned, she never had to put on another stitch of clothing. As she talked, he had to put his hands in his pockets so that he wouldn't untie her bathrobe.\n\n\"It's alright, take your time.\" Mason said as he stepped closer to her and put his hands on her waist.\n\nToni couldn't move. Her skin tingled even though Mason wasn't touching her skin directly. \n\nMason looked down at her and pulled her closer so that she was flush against him. Toni put her hands on his waist to steady herself; she could feel her heart pounding as she felt a kiss on the top of her head. Her breasts tingled reminding her that they hadn't been touched in over three years and she felt moisture gathering between her legs. \n\nToni made herself step back; \"I'll only be a few minutes.\" she said and rushed off.\n\nMason watched as she practically ran into her bedroom, tonight was it, tonight Toni Jacobson would be in his bed he thought confidently as he adjusted his cock in his jeans.\n\nToni washed her face with cold water and looked at herself in the mirror, she hadn't felt desire like that since James and even at its best it had been intense but nothing like this. Toni dried her face and hands managing to convince herself that the desire was so intense because she hadn't been with anyone since James. \n\nShe dressed quickly opting for a plain white bra and panties, a tee shirt, jeans and a pair of striped socks. She slipped on her 'K mart' sneakers and grabbed a jacket and the bunny slippers on the way out.\n\nMason was thumbing through a magazine when she came out.\n\n\"Sorry.\" Toni said.\n\n\"No worries, we don't have to be anywhere.\" Mason said as he helped her with her jacket and taking a moment to hold her after it was on. \n\nToni grabbed her purse, keys and phone before leaving the condo, she had half expected Mason to take her next door but wasn't too surprised when he offered her his arm and led her to the car. \n\n\"Where do you live?\" she asked as she watched the scenery speed by.\n\n\"Not far, about twenty minutes from your condo.\" Mason replied. \"You can change the radio station if you like or put in a CD, they're in the armrest.\"\n\n\"I don't suppose that you have any big band or blues?\" Toni asked.\n\n\"Sorry but I don't.\" Mason replied. \"Who are your favorite artists?\"\n\n\"Benny Goodman, BB King and people like that, do you only listen to classical music?\"\n\n\"Most of the time yes if not that then the news.\" Mason replied.\n\n\"Have you listened to other types of music?\" Toni asked. \"Most people like more than one genre.\"\n\nThe fact was that he had and for the most part found that music other than classical obnoxious as it didn't soothe the nerves.\n\n\"No, I haven't.\" he admitted and explained why.\n\n\"I see what you're saying but sometimes I don't want to be soothed, sometimes I need something that makes me want to move, to dance. You know what I mean? There are days when a happy, upbeat song makes me feel better. Haven't you ever suggested to your clients that they listen to something upbeat?\"",
        "Mason considered what Toni said. She had a point and no he had never suggested that his clients that they try listening to different types of music.\n\n\"I've never suggested that but I'm open to trying it.\" Mason replied. \"Thank you for the suggestion.\"\n\nA few minutes later, they were pulling up to a massive gate.\n\n\"Is this your house?\" Toni asked.\n\n\"Yes, it is. I know that it's large but it had several amenities that I required.\" Mason replied.\n\n\"Wow and I thought that my house was big.\" Toni said as she looked at the house in front of them.\n\nMason parked the car, got out and helped Toni out of the car.\n\n\"Its beautiful here.\" she said looking around.\n\n\"It's quiet and it has a water view both of which I deem necessary. Are you ready to go in?\"\n\nToni nodded and took Mason's offered arm. Once inside, he gave her the grand tour but avoided taking her to the bedroom. Toni commented on all of the televisions.\n\n\"Why so many?\"\n\n\"When I am home, every single television is turned on to a news channel, I've always been one to read and watch every newspaper, magazine and news program that I could. That's how I found out that you married James and later about your adopting Jamie and then James' death.\"\n\nToni didn't reply at first, she wondered if he ever watched anything fun.\n\n\"I watch very little news; I see enough of what people can do to each other at work.\"\n\n\"So what do you watch?\" Mason asked as he led Toni to the kitchen.\n\n\"Comedies and other things that make me laugh; I like the history channel too. Toni replied as she sat in a chair and kicked off her shoes. \"Where'd you put the slippers?\" she asked looking around.\n\n\"In the living room, stay put, I'll go get them.\" Mason replied.\n\nWhile he was gone, Toni looked around the kitchen. It was meticulous, for just a minute she wondered if he really cooked here.\n\n\"Here you are.\" Mason said as he knelt on the floor in front of her and put the slippers on her feet.\n\nHe stayed where he was for a moment just looking at her, \"You really are lovely.\" he murmured as he reached up and touched her face.\n\nToni's face was hot and the tingling to her breasts was back.\n\n\"Umm what's for dinner?\" she asked looking at the stove.\n\nMason stifled a chuckle as he stood up.\n\n\"Mickey Mouse pancakes, peppered bacon and fresh orange juice.\" Mason replied. \"I asked Jamie what he thought that you would like and this was his suggestion.\" Mason said as he took the bacon, whipped cream and cherries out of the fridge and stirred the pancake batter.\n\n\"I... I heard you ask him but I didn't think that you would really do it, he'll be thrilled.\" Toni said shocked.\n\n\"Toni, I am a man of my word and I don't make empty promises or promises that I have no intention of keeping. I wouldn't have asked if I wasn't going to do it.\"\n\n\"So if Jamie had suggested lobster...\"\n\n\"Then we would be having lobster.\" Mason said interrupting her. \n\n\"Can I help with anything?\" Toni asked.\n\n\"You could flour the bacon.\" Mason said as he got down a canister filled with flour.\n\n\"Why would you flour bacon?\" Toni asked as she walked over to the counter.\n\n\"I bake it and not fry it.\" Mason explained. \"The bacon doesn't shrivel up and it gets nice and crisp.\"\n\n\"Oh.\" Toni said.\n\nIt wasn't very long before the counter was covered with flour and Mason was almost beside himself with frustration. He was an immaculate cook, he washed dishes as he used them and kept his counters spotless and now it was a disaster area.\n\n\"Toni, why don't you let me clean up that mess?\" he asked.\n\n\"Why? I'm not done and it's only going to get dirty again.\" Toni said as she floured another piece of bacon.\n\n\"Toni, stop.\" Mason said and reached for her hand.\n\n\"Hey!\" Toni exclaimed flinging the floured slice of bacon so that flour flew everywhere including Mason's shirt.\n\nShe stopped, covered her mouth with a flour covered hand and started to laugh.\n\n\"I am so sorry!\" she said still laughing. \"Now you know why mom and James never allowed me in the kitchen.\" she added.\n\nMason watched and listened to her laugh and the mess no longer mattered. Before he could stop himself, he took the bacon from her hand, picked her up and sat her on the floured covered counter.\n\nToni let out a startled yelp when she felt herself being lifted.\n\n\"Mas...\"\n\nThat was all that she got out before his mouth was covering hers. Mason pulled her hips forward until they were at the edge of the counter and he was standing between her legs grinding against her as he kissed her. This wasn't the way he planned it, he needed to talk to her first but he couldn't make himself stop. \n\nToni found herself responding to the kiss. She wrapped her arms around Mason's neck and kissed him as fiercely as he was kissing her. She opened her mouth and offered her tongue to him moaning when he accepted it sucking it gently. Toni rocked against Mason's cock and felt his hands under her tee shirt rubbing her back and moving downward to her ass to pull her even tighter against his cock.\n\nMason broke the kiss and moved to her neck nipping and sucking at it as he continued to move against her, he had to have her even if it was on a floured covered counter.\n\n\"Toni, I want you.\" he whispered against her neck, his breath ragged. His hands fumbled with the clasps of her bra moving back slightly when the clasps were undone. Mason pulled back to look at her, looking for indications that would tell him that he had to stop. When he saw nothing to indicate that he had gone too far, he lifted Toni's tee shirt, pulled the cups of the bra down and attacked one nipple and then the other. \n\nToni cried out when Mason took one nipple and then the other into his mouth and sucked hard, she reached down between them and struggled with the buttons on his jeans. Mason released her nipple from his mouth, stepped back and undid his jeans but stopped her from undoing hers.\n\n\"Let me.\"\n\nToni's eyes widened when Mason unzipped his jeans and let them fall over his hips and to the floor before stepping out of them. James hadn't been small by any stretch of the imagination but Mason was even larger. With his eyes on hers, Mason moved toward Toni and kissed her while unfastening her jeans. With one hand he pulled the zipper down, lifted her up enough to slide the garment from underneath her ass and down her legs until they got caught on the bunny slippers that were still on her feet. Knowing that she wouldn't notice, Mason thought the slippers away allowing the jeans to fall to the floor.\n\nThe only thing left between him and his cock were her panties. Mason kissed Toni's chest and took a nipple back into his mouth and sucked hard as he put a hand between her legs.\n\nIn the back of her mind, Toni was thinking that things were moving way too fast and that they needed to stop but she couldn't bring herself to say it, she wanted and needed this. Once they were naked, she knew that it was over; any ideas of stopping were shot to hell.\n\nShe tangled her hands into Mason's dark hair pulling it hard when he hit a particularly sensitive spot on her body as he gently pushed her back until she was lying on her back. \n\nMason stopped at her waist, he could smell how aroused she was and feel the heat radiating from her body, she belonged to him whether she understood that or not. He took the waistband of her panties and slid them down, raising her hips to ease them off.\n\nFor the first time since they began to make love, Mason spoke to her.\n\n\"I love you Toni Jacobson, you and Jamie are mine.\"\n\nToni thought that it was an odd way to tell someone that you loved them but didn't get the chance to comment. Mason's face was buried in her crotch licking and sniffing at her. Toni's torso rose off of the counter as she moaned and opened her legs wider inviting him to do what it had taken her years to allow James to do.\n\nMason wasted no time in accepting the invitation, he took a slow lick and then took her clit into his mouth and suckled from it, the tip of his tongue flitting across the top of it one second and flat and rubbing against it the next. Mason heard her moaning and heard the slow build up to a scream, she was close. When Toni was close to orgasm, he slid two fingers inside of her and pumped them in and out. Moments later, Toni's screams reverberated throughout the house. Before her orgasm was completely over, Mason stood, held her legs open and slammed into her and began to pump into her hard and fast sending her into a second orgasm whose intensity matched his own. Instead of one voice screaming out in pleasure, there were two.\n\nMason lay on top of Toni's sweat slicked body and kissed her.\n\n\"Toni, are you alright?\" he asked.\n\n\"I... um... I'm fine, what about you?\" she asked as she tried to catch her breath.\n\n\"Toni, if you're waiting for me to apologize, it isn't going to happen.\" Mason said as he moved to kiss a nipple. \"I won't apologize for something that I'm not sorry about.\"\n\nDid she want an apology? She wondered. \"I don't want or need an apology, I was an active and willing participant.\" she said. \n\nMason kissed her again on the nipple and looked at the counter. Amazingly, the food was still intact and not on the floor and the most surprising thing of all was that the mess really didn't bother him as much as it normally would have.\n\nReluctantly Mason moved from on top of Toni. She was a mess, covered with sweat and flour from the counter. He held out his hand, helped Toni sit up and lifted her down from the counter. \n\n\"I'll show you where the shower is and see if I have something that you can wear.\" Mason said leading her to his room. \n\nToni took note of the flowers and candles.\n\n\"You were planning to seduce me.\" she stated.\n\n\"That was the plan.\" Mason said as he led her to the shower with the intent of letting her shower alone. He laid out several thick towels and washcloths and was ready to leave when he heard the shower running. He turned around to see Toni's silhouette against the opaque shower walls, and changed his mind. As they showered, he realized that the hard part was yet to come. He still had to tell her what he was. \n\nAfter the shower, Toni wrapped one of the big fluffy towels around her and used a smaller towel to wrap around her head. Mason had gotten out of the shower before her and was already downstairs in the kitchen cleaning up the mess that she made when she was flouring the bacon.\n\nShe was somewhat surprised at the lack of guilt that she felt; she really thought that she would feel guilty after making love with someone other than James for the first time. She also admitted that she knew that she and Mason would end up in bed together before the night was out but she hadn't expected it to be so incredible.\n\nShe slipped on the tee shirt that Mason left laying on the bed for her and made her way downstairs. The kitchen was spotless, the bacon floured and lined up in a baking dish and the pancakes were ready to be cooked. Mason was sitting on the patio in a clean tee shirt and jeans looking at the water.\n\n\"A penny for your thoughts.\" Toni said as she sat in the empty lounge chair beside him.\n\nMason smiled and reached for her hand but didn't say anything. Toni looked over at him and wondered what was bothering him, the thought that he was sorry for what happened crossed her mind.\n\n\"I'm not sorry.\" Mason said.\n\n\"What?\"\n\n\"I said that I'm not sorry for making love with you but are you sorry?\" he asked.\n\n\"No, no I'm not.\" Toni replied honestly.\n\n\"Do you feel guilty?\n\n\"No.\" Toni said after the briefest of hesitations.\n\nMason nodded and began to stroke the back of her hand with his thumb. He seemed to be trying to decide something so Toni didn't speak.\n\nA few minutes later, the bacon was in the oven and Toni was sipping on freshly squeezed orange juice. Mason decided to see what he could find out what Toni believed about the supernatural world.\n\n\"Jamie told me that you like to read.\" Mason said as he pulled up a stool next to Toni's.\n\n\"I enjoy it but I don't read nearly as much as I would like to.\" Toni replied.\n\n\"What type of books do you like to read?\"\n\n\"I don't know if I have a particular type of book that I would call a favorite. I like to read about almost anything.\" Toni replied and wondered where he was going with the questions.\n\n\"Do you enjoy books about the supernatural?\" Mason asked.\n\n\"Are you talking about werewolves and things like that? Sure. Do I think that such things exist? Who knows?\"\n\nAt least it wasn't a flat out no Mason told himself as he went to check the bacon.\n\nAfter dinner was over Mason cleaned up the kitchen, when it was as spotless as he liked he turned his attention back to Toni.\n\n\"Have a little OCD do we?\" Toni asked.\n\n\"I am not obsessive compulsive, I just like things a certain way.\" Mason replied.\n\n\"Uh huh, that's why you about freaked when the flour was on the counter.\" Toni replied trying not to laugh.\n\n\"That doesn't mean that I'm OCD.\" Mason replied although he knew that she was right.\n\n\"Whatever.\" Toni said laughing.\n\nMason became serious, while he was cleaning the kitchen; he took the time to think. He wasn't going to screw around and play games. He was just going to have to trust that Toni could handle the truth. He had no doubt that she wouldn't believe him at first, he also knew that when she did, she was going to be as mad as hell. She would see it as a lie by omission which in a way it was. He knew he should have told her before now but the time had never seemed just right but the making love had. That Toni loved him he had no doubt but would and could she accept what he was once she was over her anger? \n\nToni looked at Mason and wondered what he was thinking about that was making him so pensive. Whatever he had to tell her couldn't be that bad could it?\n\n\"Why don't we talk to Jamie before he goes to bed?\" Mason suggested.\n\nA few minutes later, Jamie's face was on the laptop.\n\n\"Hi mom! Hi Dr. Mason! Did you have Mickey Mouse pancakes for dinner?\" he asked.\n\n\"We sure did and they were delicious.\" Toni replied very aware of Mason's hand on her back.\n\nThey talked for a couple of minutes before Mason suggested that he read a nighttime story.\n\n\"It's called the 'Chronicles of Narnia.\" Mason said, \"A man by the name of C.S Lewis wrote it. It's about three children who go to another place and time. Would you like me to read the first chapter to you?\" \n\nJamie didn't hesitate in his answer.\n\n\"Yes please if it's alright with my mom.\"\n\n\"Mom?\" Mason asked teasingly and put an arm around her.\n\n\"Alright but then you get ready for bed.\" Toni told Jamie.\n\nJamie and Toni listened transfixed as Mason read the first chapter of the book.\n\n\"I'll read the next chapter another time.\" Mason said as he closed the book and marked the page. \"Now go get ready for bed like your mom said.\n\n\"Ok, night mom, night Dr. Mason.\" Jamie said.\n\nAfter they said their goodnights, Mason suggested that they watch one of her television shows, he was stalling and Toni knew it.\n\n\"No but thanks, I'd much rather hear some explanations.\"\n\nMason sighed, this was really it. He offered Toni something to drink and when she said no, he began to talk.\n\n\"Toni before I say anything I want you to remember a few things. First and foremost, I love you and Jamie, the second thing is that I want you to remember how you knew that I was lying and....\"\n\n\"Stop stalling and spit it out!\" Toni said losing patience. \"I hate when people pussyfoot around so whatever it is, just say it.\"\n\n\"I'm a vampire.\"\n\nToni stared at Mason, \"what did you just say?\" she asked.\n\n\"I am a 600 years old plus vampire.\"\n\nToni started to laugh, \"Very funny.\"\n\n\"Toni, I'm telling you the truth. Listen to my words and tell me that I'm lying.\"\n\nToni was still laughing, \"Isn't there s psychiatric term for people who think that they're vampires?\n\n\"Toni...\"\n\n\"Really, if you didn't want to see me anymore, all you had to do was say so...\"\n\n\"Toni!\"\n\nToni kept laughing; she knew that he wasn't lying to her, that he was a vampire or thought he was. It was the look on his face that stopped her laughter. Mason was looking at her with a serious expression on his face and waiting for her to stop laughing.\n\n\"You really don't believe you're a vampire do you?\" Toni asked.\n\n\"I am a vampire.\" Mason replied and you are my mate or wife if you like that term better. I've known it from the very first time that I saw you.\"\n\n\"Prove it.\" Toni demanded. \"If you're really a vampire then show me.\"\n\n\"Toni I...\"\n\n\"What? You can't show me?\" she asked even though she knew that he was telling her the truth. \n\nMason was backed into a corner; Toni wasn't going to take his word for it. She believed him, he was sure of that, but her mind was rejecting what she had already known on some level. \n\n\"Toni, look at me and don't be afraid. I would and could never hurt you.\"\n\nToni's heart began to pound, he was serious, he was fucking serious she thought to herself. He really.....\n\nMason's dark brown eyes darkened making them look black instead of brown, he heard Toni's sharp intake of breath when his fangs descended.\n\nToni stared at him in shock and disbelief. As her mind caught up with the rest of her, Toni became angry as Mason suspected, she saw it as a lie by omission.\n\n\"You fucking lied to me.\"\n\n\"No...\"\n\n\"Yes you did and I told you that I couldn't be with someone who lied. I should have been told before I fell in love with you which reminds me, aren't vampires supposed to be able to make people do things against their will?\" she asked.\n\n\"Yes but Toni, I didn't do that with you as a matter of fact, I don't compel anyone unless I have no other choice.\" Mason replied seeing where the discussion was headed.\n\n\"How do I know that and what about Jamie and my parents? Did you do something to make them like you?\" she asked.\n\n\"I did no such thing!\" Mason retorted.\n\n\"And the sex in the kitchen, did you do that too?\" Toni asked.\"\n\n\"Toni, I have never compelled a woman into having sex with me but let me clarify something, we didn't have sex....\"\n\n\"We didn't what? Toni asked shocked. \"Just what in the hell do you call what we did?\n\n\"Making love, we were making love. Look, I know that this is difficult for you but think about the past few weeks, how right it felt. Think about how you always knew when I lied to you and let's be honest; you knew that there was something different about me.\"\n\n\"What about Jamie?\" Toni asked.\n\n\"What do you mean?\" Mason asked caught off guard by the change in topic.\n\n\"I mean, whose going to tell him that we're not seeing each other anymore?\" Toni replied.\n\nMason felt as though he had been hit in the stomach with a sledge hammer. He had expected her to be upset and angry but not this angry.\n\n\"Take me home now.\" Toni said.\n\n\"No.\" Mason said. \"I'm not taking you anywhere until we talk about this.\"\n\n\"Fine, then I'll walk.\" Toni replied and started to stand up.\n\n\"I said that I use compulsion as little as possible, that doesn't mean that I won't use it to keep you here until we've talked.\"\n\n\"You wouldn't.\" Toni said. \"It would just prove to me that you used it to get what you wanted.\" Toni replied confidently.\n\n\"I would and will if I have to so either you sit down of your own free will or I compel you. Choose.\" Mason said. His eyes were their normal shade of dark brown and fangs had descended several minutes ago.\n\nAfter debating for several minutes, Toni sat down.\n\n\"Alright, I'm listening so talk.\"\n\nToni was silent as for an hour Mason gave her the basic information that she should have known before they made love.\n\n\" yes, you're right in that I should have told you before tonight but you also know that I didn't compel you, what happened in the kitchen and everything prior was all us. As far as Jamie is concerned, I love that child as if he was my own and I would never do anything to hurt you, him or your family.\"",
        "\"Why didn't you tell me?\" Toni asked.\n\n\"The time just never seemed right and I couldn't decide on how to tell you. Toni, I'm sorry that I didn't tell you sooner but I also wanted you and Jamie to get to know me as a man of his word. I can see how you would think that I lied to you and I concede that if I were you, I would have seen it as a lie by omission as well. But you know that I'm not lying to you.\"\n\nToni knew he wasn't lying but that didn't change the fact that he withheld important information from her, information that would influence the rest of her and Jamie's lives. That she wouldn't have believed him and that they would still be having the same conversation didn't matter, he should have told her; he should have trusted that she would have gotten over it like she would now-eventually.\n\nMason was dying to know what she was thinking and could have easily found out by taking a peek inside her mind but he didn't. He hated the fact that he was really going to compel her but he meant what he said, he would have. She was still angry, he only had to look at her to see that but she was also processing and realizing that on some level, she had already known.\n\nHe understood something else, it wasn't the vampirism that angered her, it was the fact that he hadn't told her and to her that was an indication that he didn't trust her. Nothing could have been further from the truth but he saw her point. It was almost nine so time wasn't an issue yet; they had seven hours before he had to take her home, that's if she wanted to go home.\n\nToni mind was on the past few weeks, she had to concede that she was gradually drawn to Mason. Had it been other wise, she would have been suspicious. She remembered the night that Mason helped her get a very drunk James home, she had offered to have a drink with him and he had blown her off. It was soon after that that she and James worked out their issues. It was as if he had.... What? Released her just as James had released her to find someone to care for in that last disc.\n\nToni realized that before James, she really didn't know how to love someone, he had taught her that. She didn't think for one second that James knew that he was going to die so young and that she was his mission before he died. If that was the case, she would have much preferred that they had gone their separate ways and that they would have remained colleagues and friends in the best case scenario. She felt her anger cooling and knew that Mason hadn't compelled her, Jamie or anyone else close to her. She turned to tell Mason that but he was gone.\n\nMason slipped away to give Toni space and time. He didn't want her to think that he had influenced her in anyway even though from where he was he could have. He realized that he had almost fucked up but it wasn't over yet, she hadn't rejected him as her mate and Jamie's father. He hoped that even if Toni rejected him that she would still allow him to see and talk to Jamie. He would still need a man in his life and her father wouldn't be around forever. \n\nHe took another sip of wine and looked out at the water; he would sit here until he couldn't or until Toni was ready to continue their discussion.\n\n\"This friend of yours, Ethan, is he a vampire too?\" Toni asked from behind him.\n\nMason had heard her coming but didn't say anything; the ball was in her court now. He stood and turned to face her.\n\n\"Yes he is.\" Mason replied.\n\n\"And his wife, Katrina, is she a vampire too?\"\n\n\"No, but she is immortal. She is still human but has enhanced strength.\"\n\n\"But she can't die.\" Toni stated.\n\n\"Not very easily.\" Mason replied.\n\n\"What are their babies? Human or vampire?\"\n\n\"Vampire although with female babies it could go either way, it they had been male they would have been vampire.\"\n\nToni was silent as she digested the information.\n\n\"I wish that you had trusted me enough to tell me what you were. You're right in that I would have reacted in pretty much the same way but this is what I think; I think that you were so afraid that I wouldn't accept it or you that you wanted me to fall head over heels in love with you so that it wouldn't matter. I love you, that hasn't changed but I really have to think about this and what it means for Jamie.\"\n\nMason considered her words, there was quite a bit of truth in them, he really had been afraid that Toni would have turned him away but that still could happen. If she rejected him, he wasn't beneath begging to get her to reconsider, he had lost her once and wasn't about to do it again. The fact that she wasn't demanding to be taken home was a good sign.\n\n\"How did Ethan meet Katrina?\" Toni asked.\n\n\"I can't tell you that because I once treated Ethan and he is a friend however, when... if you meet them, Katrina can tell you if she wishes.\n\n\"Can I ask you a question?\" Toni asked.\n\n\"You can ask me anything you wish.\" Mason replied. \"But why don't we sit down in the living room?\"\n\n\"Why did you contact me on face book when you made it clear that you weren't interested?\" Toni asked when they were sitting across from each other in the living room.\n\n\"I was in mourning over the loss of Katrina. I hadn't been in Boston for very long before I found you and you reminded me so much of her physically. As I said, I knew who and what you were but emotionally I was in no shape to take you as a mate. I couldn't have loved you as I do now but at any rate, to answer your question; after I turned you away I realized that I had made a huge mistake. I actually went back to your apartment to look for you but you had already moved.\n\nWhen I contacted you on face book, I was trying to rectify that mistake but it was already too late. When I turned you away, I released you to love and to be loved by someone else and it happened to be James. I won't lie to you and tell you that I wasn't hurt and angry when I saw that you married him but I'm glad that it was him. He loved you very much and you were happy.\"\n\nToni looked at him confused, \"How do you know that?\" she asked.\n\n\"I kept track of you; I always knew where you were.\" \n\n\"You followed us?\" Toni asked incredulous.\n\n\"Not me personally at least not all of the time but I had to make sure that you were safe and cared for.\" Mason replied.\n\n\"Why didn't you come forward?\" Toni asked.\n\n\"It would have served no real purpose; I was content knowing that you were cared for.\" Mason replied.\n\n\"The night at the coffee shop...\"\n\n\"That was purely coincidence.\" Mason replied. \"I had no idea that you would there that night.\"\n\nThe truth, all of it was the truth Toni realized. She also knew that what happened next was completely in her hands.\n\n\"What happens if I say no, that I don't want this?\" she asked.\n\n\"You will age and die and when that happens, I die as well. You have to understand that we are connected; we always have been even though we didn't know each other. We are even more connected now that we've made love and Toni; I claimed both you and Jamie.\"\n\n\"How? And without my permission?\" Toni asked getting angry again.\n\n\"When we made love, do you remember me telling you that I loved you and that you and Jamie were mine?\"\n\n\"I remember.\" Toni replied.\n\n\"That was when I claimed you and yes I know that I did it without your permission but the words just came out. Toni, I will love you no matter what you decide.\"\n\n\"Why can't you just find someone else? Toni replied anxious at the possibility that Mason could die.\n\n\"It doesn't work like that.\" Mason replied. \"In most cases, we have only one mate, in my case, I had two-you and Katrina but it was up to her to choose between me and Ethan, when she chose Ethan; she released me much in the same way that I and James released you. You are my one and only mate, it's not like human relationships where one person can choose numerous mates.\"\n\n\"You would really die?\" Toni asked anxiously.\n\n\"Yes but not until you did so don't let that influence your thinking.\"\n\n\"But if I said yes, you wouldn't die?\" Toni asked.\n\nMason saw where she was going and stopped her.\n\n\"Toni listen to me, I am not going to die until you do. I cannot die unless I choose to or I am killed by another vampire and that just isn't going to happen.\n\nThe truth.\n\nToni relaxed now that her one fear had been addressed.\n\n\"So now what?\" she asked.\n\nMason could have danced a jig, she hadn't accepted him but she hadn't rejected him either.\n\n\"We could continue as we were for awhile until you're more comfortable with things or we could say fuck it and get married.\" Mason replied.\n\n\"Married?\" Toni asked. \"We don't know each other that well to get married and what about Jamie? He's not like you and neither am I for that matter.\"\n\nMason had already known that Jamie would be an issue. He had hoped to discuss it after they worked out their own issues but since she asked, he wasn't going to put her off.\n\n\"Jamie will have....\"\n\nToni listened as Mason explained that they would have to gradually teach Jamie the importance of keeping what he was a secret and how when he was old enough, he would be presented with a choice to remain human or be turned into a vampire.\n\n\"It has to be his decision and we need to know what his wishes will be if something should happen where he is unable to verbalize what he wants.\" Mason said.\n\n\"You mean like a living will?\" Toni asked.\n\n\"Exactly and like a living will, it will need to be signed and stored away in a safe place. \"\n\n\"What about me? Will I have to do the same thing?\" she asked.\n\n\"It is my hope that you will decide to mate with me but if not then I think that it would be a good idea.\" Mason replied.\n\nSo much to think about Toni thought to herself. To be able to live forever and watch history being made and maybe even to have a small part in making it happens. To be with someone who would never die and neither would Jamie for that matter if he chose to be turned. But her parents and friends, she would see them die, but then she would see her parents die anyway and it would be painful no matter how she decided. And here was the bottom line, she loved Mason.\n\n\"What else do I need to know?\" she asked.\n\n\"There's a lot.\" Mason replied. \"Too much to tell you in one night but I'll give you the highlights. One thing is because we don't age, we'll have to move every so often. I know that it's time when people notice that I'm not aging. The other thing is how you become immortal and no you don't have to become a vampire although that is always and option but to become immortal, we exchange blood twice while making love. After that, you will go through a three day transition that is far from pleasant but you will never be left alone. The first two days are the worst of it as your body is changed; the third day is the recovery day. The third day is when you will sleep most of the time. When you wake up, it will be over. You will always be as you are but stronger emotionally and physically, any psychic gifts that you have will waken and you will be telepathic- all of our mates are even if there are no other gifts.\"\n\n\"Is this for real?\" Toni asked even though she knew that it was.\n\nIt was a rhetorical question so Mason didn't answer. \n\n\"This is nuts!\" Toni exclaimed. \"A vampire? I just had unprotected sex with a vampire on his kitchen counter.\" she said talking to herself seeming to forget that Mason was there.\n\n\"Toni.\" Mason said quietly. \"I don't have any diseases; I am immune to every disease known to man.\" \n\n\"That's good to know.\" Toni snipped. \"I could get pregnant couldn't I? Of course I could, your friend's wife had twins didn't she?\" Toni asked answering her own question.\n\nWhat would she do if she had gotten pregnant? She wondered. Keep it and love it as she loved Jamie she decided but she was being premature, she more than likely hadn't gotten pregnant at least she hoped not, a baby would complicate things even more. She made herself slow down; the immediate question was what she was going to do about Mason. She needed time to think, this was the mother of life changing events but she also knew that if Jamie wasn't involved she wouldn't need to think about so much.\n\n\"I have to think about this.\" Toni said. \"I have so many questions about... well everything.\"\n\n\"I understand.\" Mason said. \"I would like to make a suggestion, write down your questions and we'll talk about them in a few days.\"\n\nToni was a little surprised, she fully expected Mason to want an answer right then and there but his willingness to give her time and space helped. Had he insisted on an answer right then and there she wasn't sure of what she would have said.\n\nMason breathed a sigh of relief, she had already decided and just like Katrina, she just didn't realize it yet. The next question was whether she would spend the night and if she did, he wasn't about to promise that he wouldn't touch her again.\n\n\"Stay with me tonight.\" Mason said.\n\n\"I'm not sure that would be a good idea.\" Toni replied. \"I think that I need to be away from you so that I can concentrate.\n\nMason moved from the chair to sit on the couch next to Toni.\n\n\"I think that what we need is to spend more time together, we could just relax, watch one of your comedies and go to bed.\" Mason said as he rubbed Toni's neck. \"Stay.\"\n\nToni debated; she really should go home and spend the rest of the evening thinking, except what was there to think about? Jamie was her only major concern. He would be thrilled if she decided to go into an official relationship with Mason; it was the other part of it that she was worried about. How would Jamie handle the vampirism? She had to remind herself that kids are resilient, and knowing Jamie he would think that it was totally cool. She was using Jamie as an excuse and she knew it.\n\n\"If I stay do you promise to behave yourself? In other words no repeats of what happened in the kitchen?\" Toni asked.\n\n\"I won't promise any such thing because if I did, it would be a lie.\" Mason replied as he continued to massage her neck. \"What happened in the kitchen was completely unplanned and phenomenal and I can't .....\"\n\n\"Stop right there.\" Toni said. \"I agree that it was phenomenal but it was irresponsible. What if I got pregnant? Then what?\"\n\n\"Then we would have a baby.\" Mason replied.\n\n\"You sound like I just told you I only had water to drink.\" Toni said surprised. \n\n\"Toni, I love you and if we have a baby then so be it.\"\n\n\"And we would explain that how?\" Toni asked.\n\n\"There would be nothing to explain, we made love, we got pregnant end of story but Toni, you're trying to find reasons to say no to spending the night with me.\"\n\nHe was right. In her mind if she stayed, she was saying yes to being his wife or mate as he called it. \"Do I want to stay?\" Toni asked herself. She did she admitted to herself that she did but the whole pregnancy thing was a concern and she really did need some time alone.\n\n\"You don't happen to have any condoms do you?\" Toni asked giving Mason her answer.\n\n\"Condoms? No, why would I have condoms?\" Mason asked.\n\nHis response alarmed Toni; someone who looked like him couldn't have been celibate.\n\n\"You've been having unprotected sex with other women?\" she asked. \"How do you know that you don't have children?\"\n\n\"I know for a fact that I don't because the only person that I would be able to impregnate would be my mate-meaning you. As far as the unprotected sex goes, you're the first woman that I've been with for a long time.\" Mason replied.\n\n\"So it never happens? A vampire can't impregnate any one that isn't his mate?\"\n\nMason remembered Ethan's grandfather and couldn't give her an unequivocal no.\n\n\"It has happened at least once that I know of but it's extremely rare.\"\n\n\"You say that you're over 600 hundred years old, how do you know?\" Toni pressed.\n\n\"I would know and if I had children they would be loved and well cared for.\" Mason replied.\n\nThe truth.\n\n\"Could I have some time alone?\" Toni asked. \"I know that I'm probably beating a dead horse but ....\"\n\nMason interrupted her, \"I understand, it's a lot to take in so why don't I go for a walk? You can call my cell when you're ready.\" \n\n\"I don't mean that you have to leave.\" Toni said, \"I just wanted a place to think\"\n\n\"I don't mind and besides I enjoy walking.\" Mason replied. He kissed Toni and was gone before she could say anything else.\n\nToni walked around the house and eventually found her way out to the patio. She sat down on a chair, picked up Mason's wine glass noticed that it was mostly full and took a sip grimaced and then drank the rest of it. It had a strange taste to it but she was no wine connoisseur as a matter of fact, she rarely drank but tonight she needed one. \n\n\"So Toni, what are you going to do?\" she asked herself already knowing the answer but she had to examine her motives. Why was she saying yes? Was it because she really loved him or was it because he would die if she didn't say yes? A combination of both she thought but which was the dominant reason? She asked herself, she loved him; the other reason couldn't help but be a factor so now the question was what the next step would be. What it would not be she decided was them sleeping together when Jamie was in the house.\n\nToni realized that a whole new chapter of her life had just opened. There were things to work out, namely the whole conversion thing and Jamie but it could be done, families of all kinds blended together on a daily basis. The second thing that Toni realized was that she was relieved. Mason was right when he told her that she knew on some level that there was something different about him. His being as old as he was answered the questions about his old fashioned mannerisms and way of speaking. \n\nMason's phone ringing brought Toni out of her thoughts, she didn't know whether she should answer it or not but opted not to, it could be the hospital namely Joyce and she didn't want to fuel the rumor mill any more than she had to, it would be fueled soon enough.\n\n*******\n\nMason walked not really paying attention to where he was going, his thoughts were on Toni and what she would tell him when he got back to the house. Then he thought about Jamie, what would he call him besides \"Dr. Mason?\" Papa Mason? Daddy? \"Slow down.\" he told himself even though he was almost positive that Toni was going to say yes. They would have a wedding and everything that went with it. \n\nHe had been walking for almost an hour before the phone rang. Toni.\n\n\"Hi, you can come back now.\" \n\nMason fought the urge to vanish from where he was to the house, he wanted to give Toni a few more minutes to herself, somehow he didn't think that they were going to end up in bed or if they did there wouldn't be any lovemaking. Toni would be full of questions and they had to work out the logistics of their relationship since he was certain that Toni and Jamie wouldn't move in with him until they were married. That meant that they would have to think about the engagement thing or just having a private service, either way it didn't matter to him just so they were married.\n\nHe found Toni in the kitchen making tea and liked the fact that she felt comfortable enough to search his cabinets for what she needed.\n\n\"Did you find what you needed?\" he asked.\n\n\"Yep except that I can't reach that big mug that's all the way up on the third shelf.\" Toni said.\n\nMason got the mug down for her and watched as she made tea for the both of them, she definitely belonged here and so did Jamie. He was beside himself with anxiety, although he knew that she had chosen him but he wanted and needed to hear her say it, it wouldn't be real until she did.\n\nToni took her time making the tea; it wasn't until they were sitting in the living room that she began to speak.\n\n\"Alright, how we feel about each other isn't up for discussion but what we do about telling Jamie and my folks is. We can't sleep together when Jamie is in the house and we use protection.\"",
        "\"Toni, are you accepting me as your mate?\" Mason asked.\n\nIt seemed like a long time before Toni responded, \"I guess I am.\"\n\nThat wasn't good enough; he needed to hear a resounding yes.\n\n\"Toni, it's either yes or no. I guess sounds as though you're ambivalent and I need and want for you to be sure because once this is done, it's irrevocable. There is no such thing as divorce or separation; we will be together for eternity.\"\n\n\"I guess I did sound kind of ambivalent.\" Toni agreed, \"But yes, the answer is yes.\"\n\nMason sat his cup of tea down, took Toni's from her hands and knelt on his knees in front of her taking her hands in hers.\n\n\"Toni Jacobson, will you marry me and allow me to be a father to Jamie?\" Mason asked.\n\n\"Marry? As in wedding dress marry?\" Toni asked shocked although she didn't know why.\n\n\"We can do it however you want, wedding, Justice of the peace, a private ceremony; I don't care just so you marry me.\"\n\n\"Why have a wedding if we're already married?\" Toni asked.\n\n\"We're not married in either world yet.\" Mason replied. \"We haven't mated yet and a human wedding will make things legal so that I can adopt Jamie and put your name on my assets ...\"\n\n\"Why do that if you're not going to die?\" Toni asked.\n\n\"It's a precaution and nothing more.\" Mason said assuring her.\n\nToni realized that Mason was still on his knees and told him to get up.\n\n\"Not until you answer my question, will you marry me?\"\n\nToni didn't reply for several minutes, what was she waiting for? A final sign from James? Toni closed her eyes and then opened them. \"Yes.\"\n\nMason jumped onto the couch next to her, pulled her into his lap and kissed her. He felt his cock harden as her soft bottom pressed against it. Mason slid his hands under her tee shirt and fondled her breast, rolling and pinching the nipple until it was hard.\n\nToni moaned softly and wiggled in Mason's lap, she was going to say something about protection but his hand moving from her breast to between her legs stopped her. Toni bit her lip to contain her moan.\n\n\"Don't be quiet, there's no one here but us.\" Mason said as he slid a finger between her vaginal lips and then inside of her and stilled. He started to slide his fingers in and out, his thumb massaging her clit, \"I want you to scream for me.\" Mason murmured his lips pressed lightly against hers.\n\nToni felt as if her entire body was on fire all thoughts about a possible pregnancy were gone. All she could think about was the immediate want and need. Mason pressed his thumb against Toni's swollen and throbbing clit and then moved it back and forth. The orgasm came so suddenly that Toni was caught off guard; she buried her face in Mason's neck and screamed.\n\nMason cradled a shaking Toni against him until she calmed and was relaxed against him. He was going to say something to her when he realized that she had fallen asleep. He stood still holding her in his arms, carried her to the bedroom and put her to bed. He stripped off his clothes and climbed in behind her pulling her tight against him. Toni mumbled something in her sleep and snuggled back into him before falling silent. Soon Mason thought, as he kissed her shoulder.\n\nToni woke up to the smell of brewing coffee, for just a second she forgot where she was and then she remembered that she needed to go get Jamie. She jumped out of bed and looked around the room wondering where her clothes had gotten to. They would be covered with flour but she could wear them until she got home to change, but first she needed to call her parents, they had to be worried.\n\nMason came up with a breakfast tray just as Toni was coming out of the bathroom.\n\n\"I've got to get home and change clothes.\" Toni said. \"I have to go get Jamie.\"\n\n\"Jamie is fine, I've already spoken to him and your parent's this morning.\" Mason said setting the tray on the dresser.\n\n\"Y... you did?\" Toni asked suddenly nervous. \"What did you say exactly?\"\n\n\"Relax, I only told your parents that you were with me and I didn't say anything about us getting married although I think that they already know. They're fine with Jamie spending the day with them, apparently there's a football game or something that Jamie wants to watch with your dad and Jamie is looking forward to seeing us this evening.\" Mason said as he walked toward her. \"That gives us all day to ...\"\n\n\"Talk.\" Toni said backing up.\n\n\"That too.\" Mason said as he advanced on her taking off his tee shirt.\n\n\"Wait! About the pregnancy issue.\" Toni said backing up.\n\n\"There is no issue as far as I'm concerned.\" Mason replied still advancing on her, his jeans unbuttoned and the zipper down. \"If it happens, it happens, I would love to have a baby with you.\"\n\n\"Maybe I don't want a baby.\" Toni said stopping Mason in his tracks.\n\n\"Are you saying that you don't want more children?\" he asked.\n\n\"No but what I am saying is that it's something that we need to talk about.\" Toni replied.\n\nMason swore under his breath, he could understand why it took James three years to get the woman to marry him.\n\n\"Alright.\" He said, \"Let's talk. I love you and would love to have children with you. Having said that, it's not going to happen before it's supposed to. In other words, it could be twenty years or you could be pregnant now which you are not.\" he assured her when he saw her eyes widen.\n\n\"The question is do you want children with me? I know that things are moving fast but what's the real issue here?\" Mason asked.\n\n\"The real issue as you call it is..... I don't know, nerves maybe?\" Toni admitted.\n\nThis time when Mason walked toward her, she didn't back away.\n\n\"Tell me what it is that you need.\" Mason said hugging her.\n\n\"Nothing really, I just needed something to panic about and I never thought that I would get married again.\" Toni replied. \"And this is rather fast.\" \n\n\"We can wait on telling your parents and Jamie if that will help.\" Mason said.\n\nToni gave it some thought; the very reason that she and James didn't have those three years together was because of what she was doing now, even as she accepted what was happening she was still fighting it. She loved Mason and if she got pregnant, what would be the problem? None. What good would waiting to tell her parents and Jamie do? And like Mason, she was sure that her parents already knew especially since he called them to make arrangements for Jamie.\n\n\"No, we'll tell them tonight.\" Toni replied as she reached for the waist of Mason's jeans and pulled him close. \"I'm alright now. Really.\"\n\nMason pulled the tee shirt over Toni's head leaving her naked. He ran his thumbs over the tips of her nipples smiling down at her when she closed her eyes and moaned.\n\n\"Do we still need to talk?\" Mason teased.\n\n\"We do but it can wait.\" Toni replied as she rubbed against him enjoying the feel of her breast rubbing against Mason's bare skin.\n\nWasting no time, Mason picked Toni up and carried her to the bed. Toni scooted back on the bed so that she could watch Mason undress, her eyes widened when his clothes just disappeared.\n\n\"How did you do that?\" she asked.\n\n\"I can do many things but we'll have plenty of time for me to show and teach you things that you'll be able to do even though you won't be vampire, I thought we were done talking.\" Mason said as he climbed into the bed from the foot of it and crawled toward Toni.\n\nAs Toni watched Mason crawl toward her three words came to mind, mine, sexy and graceful. Mason didn't stop moving until he was stretched out on top of her, his hips between her legs and his cock pressed between them. He took a moment to savor the fact that Toni was finally where she had been meant to be, it had been a long time in coming but so worth the wait.\n\n\"Mason wh...\"\n\nMason didn't give her Toni a chance to finish whatever it was she was going to say. He slid into her in one slow, smooth stroke and stopped. The lovemaking in the kitchen had been hurried and frantic, this morning he had wanted to take his time but he couldn't wait to be deep inside of her again.\n\nToni moved against him trying to hurry him along but Mason refused to be rushed. He thrusts in and out a few times and then stopped, sometimes the thrust were hard and fast sometime painfully slow. Toni writhed beneath him crying out for him to stop torturing her.\n\n\"Not yet, I....\"\n\nToni tightened her vaginal muscles stopping Mason mid sentence. His concentration gone, Mason began pump into her wildly murmuring Toni's name, his orgasm starting just after hers. \n\nMason rolled off of Toni still pulling her into his arms as he moved. \n\n\"You are incredible do you know that?\" he asked.\n\n\"You're not so bad yourself.\" Toni said still trying to catch her breath and resting her head on his shoulder.\n\nThey were quiet for a few moments, each lost in their own thoughts. \n\nToni was thinking about how she thought that she would never be able to love someone as deeply as she did James and Mason was thinking that maybe things happened the way that they were supposed to. Toni hadn't been anymore ready for him than he had been for her. He regretted that she had to go through the pain of losing James and he owed James a debt that he could never repay but it got them to this point.\n\nMason remade breakfast and decided to make it his mission to teach Toni how to cook.\n\n\"You have got to be kidding.\" Toni said, \"You really think that you can succeed where both James and my mother have failed?\"\n\n\"I think that I can teach you how to do more than pop something into the microwave.\" Mason replied.\n\n\"Uh huh, and you'll freak as soon as I spill on your counter, no thanks.\" Toni said laughing.\n\n\"Just for the record, I didn't freak as you put it, I got a little.... Anxious.\"\n\n\"Like I said, you freaked.\" Toni said.\n\n\"I just have to learn to adapt that's all.\" Mason replied.\n\nThe first cooking lesson took place at lunch. Mason decided to start with omelets because they were simple and easy to make. Toni watched as he lined the ingredients up on the counter, \"not OCD my ass\" she thought as Mason continued get things ready for the omelet.\n\n\"Alright sweetheart, it's ready come over here.\" Mason said.\n\nToni hesitated and then asked, \"Are you sure about this?\"\n\n\"I'm sure now come on and stand in front of the counter.\"\n\nToni stood in front of the neatly lined up bowls of onions, cheese, ham and peppers. The eggs were already cracked and in a bowl waiting to be beaten. Mason stood behind her and reached for the bowl of eggs as he pressed against her.\n\n\"The secret to a good omelet is...\"\n\n\"To go to 'Denny's'\" Toni interjected. \"That's what I do.\"\n\nMason groaned, \"But 'Denny's' doesn't serve a beautiful woman breakfast in bed do they? Nor do they allow a man to stand this close to a beautiful woman while a meal is being prepared.\"\n\n\"No but at least at 'Denny's' there's no stress for said man regarding the mess.\" Toni.\n\n\"As I said, I will adjust.\" Mason said as he put the whisk in Toni's hand and then placed his hand over hers. \"Now let's whip the eggs until they are fluffy, it's important not to over whip them.\"\n\n\"Yes Julia Childs.\" Toni said giggling.\n\nIn the end, Mason gave up, the egg splattered all over the counter had proven too much.\n\n\"Tell you what, I'll do the cooking and you... go read or something. We'll try another approach as soon as I can think of one.\" Mason said kissing Toni and patting her on the ass.\n\nToni laughed, \"Told you.\"\n\nMason put the omelet on one plate and got out two forks, this was something that he had always dreamed of doing with his mate and it was happening. Toni ate less than half of the omelet leaving the rest of it for Mason. While he finished eating Toni wiped the counter off, the dishes were already done with the exception of the plate that they used and the silverware.\n\n\"We need to decide on how we tell Jamie.\" Toni said as she dried her hands.\n\n\"We just simply tell him.\" Mason replied. \"Jamie is a bright boy, he probably already knows. Do you think that your parents would mind keeping Jamie a couple of times a week?\"\n\n\"I don't think so, and how do we explain that to him?\" Toni asked.\n\n\"We don't unless he specifically asks if you're staying at my house and then we don't lie, we just say yes and leave it at that. You're nervous.\" he said. \"Why?\"\n\nToni had to think about it before answering.\n\n\"I'm not sure really. James and I just got married, we didn't tell anyone until after we did it and let's just say that neither set of parents were very happy with us.\"\n\n\"We could do that you know, we could go to Mexico or Hawaii and just get married.\" Mason said.\n\n\"Oh no, mom forgave me once but I don't think she will a second time so eloping is out of the question, there has to be a wedding of some kind; the fewer people the better.\"\n\nToni looked at the clock, \"we'd better get moving, and where are my clothes?\"\n\n\"In the laundry room, I laundered them while you were sleeping.\" Mason replied. Toni went to the laundry room and found her clothes folded perfectly. \"Not OCD my ass.\" she muttered as she picked up the clothes and went back into the kitchen.\n\nShe stopped dead in her tracks when Mason met her in the kitchen completely naked and erect.\n\n\"We have time before we have to go to get Jamie and it's going to be a few days before we can make love again.\" Mason said. \"And we have some lost time to make up for.\" he added.\n\nToni had forgotten that they both had to be at work the following evening, she didn't know what Mason was thinking but she wasn't about to announce that they were getting married. The only people that she wanted to tell were her parents and Jamie. She wondered if she needed to tell Robert and Gina and decided that she probably should but it could wait, she didn't want to hear Gina's hysterics about how she never loved James.\n\nWhile Toni was thinking, Mason moved so that he was standing directly in front of her. He took the folded clothes from her hands and sat them on the nearest chair. Toni offered no resistance as Mason took her hand and led her to the living room. He sat down first, had Toni turn so that she faced him and pulled her forward placing her legs on either side of his hips. He took a heavy breast in each hand and massaged them before putting them together so that the nipples touched and took both nipples into his mouth at once and sucked hard. Toni felt a spurt of fluid between her legs as Mason simultaneously nipped and sucked both nipples.\n\nToni moaned and then sighed as she raised herself to her knees, reached down between them and took Mason's cock in her hand and ran her hand up and down the shaft several times making Mason moan against her breasts. He had released her nipples and was leaning back against the sofa his eyes open and looking into Toni's face thinking of how beautiful she was.\n\nToni slid backwards, bent down and kissed Mason's chest before licking and then sucking one of his nipples while she pinched and pulled on the other while she stroked his cock. Mason struggled not to move as Toni stroked his cock repeatedly hitting the sensitive spot just under the head.\n\n\"That feels good.\" he murmured as he ran his hands up and down Toni's back.\n\nToni moved from Mason's lap to the floor positioning herself between his legs and took the head of his cock into her mouth and sucked it gently and then with more force as she followed Mason's non verbal cues. Mason cupped Toni's face in his hands caressing it with his thumbs. It wouldn't be long before he came and he wanted to come buried deep inside of her.\n\n\"Sweetheart, stop.\" Mason said, his voice ragged. \"I want to come inside of you.\"\n\nToni gave him a few more sucks and climbed back into his lap straddling his hips slowly sliding onto his cock.\n\n\"Oh my god.\" Toni moaned as Mason raised his hips to meet her downward slide her orgasm already beginning. Mason pumped hard, he felt his balls tighten and tingle, he was going to come soon but he wanted Toni to come first. Mason held Toni close to him as he pounded into her, he could feel her warm breath on his neck as she clung to him. Toni's orgasm started with a low moan and ended with a scream with her mouth pressed against Mason's neck, Mason's own orgasm began just as Toni's began to wane.\n\nMason held Toni close to him long after the orgasms were over relishing the emotional and physical closeness between them. Mason reluctantly let Toni go so that they could go to her parent's house to give them the news and to take Jamie home.\n\nThey showered together, quickly dressed and were out of the door thirty minutes later. \n\n********\n\n\"Mom!\" Jamie exclaimed when Toni and Mason walked in.\n\n\"Hi baby.\" Toni greeted hugging Jamie. \"I missed you.\"\n\n\"I missed you too.\" Jamie said and then greeted Mason. \"Hi Dr. Mason!\"\n\n\"Hi kiddo, how are you?\" Mason asked. \n\n\"Fine are we going somewhere tonight?\"\n\n\"In a little while.\" Mason replied. \"We have some things to talk about with your grandparents.\"\n\n\"Is this more big people talk?\" Jamie asked feeling a little put out.\n\nMason laughed, \"No Jamie, this time you can stay.\"\n\nBarbara and Ben looked at each other with their fingers crossed.\n\n\"Well come on in and have a seat.\" Ben said. \"Do you want anything to eat or drink?\"\n\n\"No, I'm good.\" Toni replied with Mason agreeing with her.\n\nNow that they were here, Toni wasn't sure of how to proceed and was grateful when Mason took the lead.\n\n\"Ben, Barbara, I'm sure that you are well aware of how I feel about Toni; you probably knew even before she did or before she admitted it anyway. I love your daughter and I am asking for permission to marry her, Toni has already consented and all we want is your blessing.\"\n\n\"Thank god!\" Barbara exclaimed. Ben seconded with a resounding \"Amen!\"\n\n\"I am taking that as a yes?\" Mason asked.\n\n\"It's not just a yes.\" Ben said, \"It's a hell yes!\"\n\nMason turned his attention to Jamie who understood most of what was happening, his mother and Dr. Mason were going to get married Dr. Mason would be his dad.\n\n\"Jamie, is it alright if I marry your mom?\" Mason asked.\n\n\"That means that you'll be my dad doesn't it?\" Jamie asked.\n\n\"It means exactly that.\" Mason confirmed. \"And we'll live in the same house and see each other every day so what do you think?\"\n\n\"I think that I would like that.\" Jamie replied.\n\nToni listened to the excited chatter around her and swallowed a lump in her throat, the abundance of happiness was almost too much for her but she'd get used to it.\n\nBarbara was already planning what needed to be done for the wedding although no date had been set. Toni had to put on the brakes.\n\n\"Slow down! We haven't set a date yet and you'll be the first to know when we do.\"\n\nMason noticed that Jamie had gotten quiet; he excused himself, held out a hand to Jamie and took him outside.\n\n\"What's bothering you?\" Mason asked after they were sitting on the two lawn chairs on the patio.\n\n\"Nothing.\" Jamie said quietly.\n\n\"Jamie, never be afraid to tell me anything and it doesn't matter what it is. I promise that I won't get angry.\" \n\nJamie hesitated and then spoke.\n\n\"What do I call you?\"\n\n\"What would you like to call me?\" Mason asked.\n\n\"Could I call you dad?\" Jamie asked shyly.\n\nMason blinked back tears, he had a son.\n\n\"I would like that and you don't have to wait until your mom and I are married.\" Mason said anticipating Jamie's next question.\n\nJamie flew out of the chair, hugged Mason and kissed him on the cheek.\n\n\"I love you dad.\" Jamie said hugging Mason tight.\n\n\"I love you too.\" Mason replied as he hugged Jamie back.\n\nBy the time they got back inside, Barbara had a notepad out and was making notes.\n\n\"You alright baby?\" Toni asked Jamie.\n\n\"Dr. Mason said that I could call him dad.\" Jamie replied happily.\n\n\"He did?\" Toni asked looking up at Mason. \"That's what he'll be isn't it?'\n\nMason gave her an almost imperceptible nod.",
        "Ben stopped Mason by the door as they were getting ready to leave.\n\n\"Barbara had a good feeling about you the very first time she laid eyes on you and so did I. You've been so good for Toni and Jamie and I just wanted to say thank you and welcome to our family, we're happy to have you.\"\n\n\"Thank you but it is I who should be thanking you and Barbara for giving me your blessings. I promise you that Toni and Jamie will always be safe and loved.\" Mason replied.\n\n\"I have no doubt about that.\" Ben replied shaking Mason's hand.\n\n*******\n\nJamie chatted the entire way back to Toni's condo. Toni actually had to tell him to take a break because he used dad in almost every other word. Mason answered each of Jamie's questions patiently not at all minding the frequent use of the word \"dad\". He knew that Jamie was trying to get used to saying it and that he had to get used to hearing it.\n\n\"Are you going home?\" Jamie asked when they got to the condo.\n\n\"Not just yet, I believe that you and I have some reading to catch up on.\" Mason replied.\n\nHe decided that he would spend the next several nights at the condo next to Toni's and that he would give her and Jamie a key, it was time to start teaching him about responsibility.\n\n\"Jamie before we go inside, I want to show you one of the places where I live.\" Mason said.\n\nHe unlocked the condo and led them inside.\n\n\"I'll be sleeping here from now on until your mom and I get married.\" he said. \"I'm going to have keys made to give to you and your mom for emergency use. Do you understand what that means?\" Mason asked.\n\n\"It means that I can't come in whenever I want?\" Jamie asked.\n\n\"That's exactly right.\" Mason said. \"It's alright to use the key if you locked out of your place or if there's an emergency and you need a safe place to go. Does that make sense?\"\n\n\"I got it.\" Jamie replied proud that he was going to be trusted with something so important.\n\n\"Good.\" Mason replied as he ruffled Jamie's hair. \"Why don't we go in and get started on our reading?\"\n\nToni didn't miss the feeling of rightness about the situation; she could honestly say that she was really happy for the first time in a long while. She watched Mason and Jamie together and the feeling was reconfirmed. \n\nLater when Jamie was in bed, Mason kissed Toni and told her that he would be back.\n\n\"I have an errand that I need to run, I won't be long.\"\n\n******\n\nMason drove the cemetery where James was buried and found his headstone. He stood in silence for several minutes paying his respects to a man that he had only met once but owed so much to.\n\n\"Although we never officially met, I owe you a debt that I can never repay. You loved Toni and kept her safe and happy, for that you will always have my respect and gratitude. You had the foresight to release her to love and to be loved and for that I also thank you. I am here to make a pledge to you, I pledge to always love and protect those who you have entrusted to me. Toni and Jamie will want for nothing and Jamie will know who you are, I will make sure of it. Rest well James.\" Mason said and then he walked away.\n\nAfter leaving the cemetery, Mason went to his house and to his bedroom. He moved the large dresser with no effort at all and opened the safe that was hidden behind it. In the back was a large wooden jewelry box that was covered with intricate abstract designs. He murmured a few words and the box sprung open revealing the contents inside. Mason carried the box to the bed, sat down and emptied the contents out; he was looking for something specific. He found it after a minute or two and held it up to the light. The amethyst gem stone surrounded by small perfect diamonds sparkled in the light. There were other rings that he would have liked to have given her but she would have thought them too showy or pretentious, this however was perfect. The stones were large enough to notice but not so large that Toni would find the ring too much. \n\nMason first saw the ring over two hundred years ago and almost bypassed it but it seemed to be calling to him so he bought it, stuck it in the box and hadn't given it any more thought until today. Apparently even then the fates knew what was going to happen he realized as he put the ring into his pocket. He secured the box, put it back into the safe and pushed the dresser back into place.\n\nBy the time he got back to Toni's an hour and a half had passed, he spent more time at the gravesite than he had intended. Toni was in the kitchen making tea when he walked into the kitchen, she didn't hear him come in so he took the opportunity to watch her without her being aware of it. She was humming to herself as she put several teaspoons of sugar into a mug. \"Soon.\" Mason thought to himself as he knocked on the wall to let Toni know that he was back.\n\n\"Want a cup of tea?\" Toni asked in greeting.\n\n\"No thank you\" Mason replied as he sat at the counter and waited for her to finish making er tea. They still had to talk about work but that could wait, he wanted to get the ring on her finger first.\n\nMason followed Toni to the living room and waited until she sat the cup of tea down before taking the ring out of his pocket.\n\n\"Toni, I know that you've already agreed to marry me but I wasn't fully prepared when I first proposed to you and now I am.\" \n\nMason got up from the couch and knelt in front of Toni as he had earlier, took her left hand in his and proposed as he slid the ring onto her finger.\n\n\"Toni, will you marry me?\"\n\n\"Yes.\" Toni said without hesitation.\n\nMason kissed her hands and then moved so that he was sitting beside her on the couch and kissed her, he wanted to do more than kiss her but that would have to wait.\n\nToni looked at the ring on her finger, \"It's beautiful, how long have you had it?\" she asked.\n\n\"A long time, when I bought it I didn't know why or who it was for, now I know.\" Mason replied as he held the hand that he had just slipped the ring onto.\n\nBy morning they had decided what to do about work. Toni wanted to keep practicing but agreed to go to part-time as would Mason. They agreed that if there was a child that Toni would be the one to decide whether she wanted to work or stay home.\n\nIt was five am when Mason reluctantly left.\n\n'I wish that you didn't have to go but Jamie....\"\n\n\"I know.\" Mason said. \"When are we going to get married?\" he asked.\n\n\"Four weeks?\" Toni asked.\n\n\"I can't convince you to make it a week can I?\" Mason asked.\n\n\"No and a month isn't that far away.\" Toni replied.\n\n******\n\nThe next evening Mason waited for Toni to come out of her condo, his plan was to drive her to work.\n\n\"What happens if I have to stay late?\" she asked. \"I think that I'd better drive myself.\" she added.\n\nMason had a sense of foreboding that he couldn't shake.\n\n\"Sweetheart, let me drive, if you run late one of your parents can come for you.\"\n\n\"I'm fully capable of driving myself to work and back\" Toni said kissing him on the chin. \"Come on we're going to be late.\"\n\nMason stopped Toni, \"Let me drive.\" he said. \"I know a shortcut.\" he added.\n\nAs soon as Toni agreed, the feeling of foreboding was gone.\n\nTen minutes later they were at the hospital.\n\n\"That was a lot shorter.\" Toni agreed as Mason parked the car.\n\nToni hadn't even made it to the sleeping room that she would be using when the announcement calling for all available physicians to go to the ER. The ER was in chaos as ambulances pulled up and brought injured people in.\n\n\"What happened?\" Toni asked as she went to a gurney.\n\n\"Oil truck exploded on the highway.\" The paramedic said as he helped transfer the victim to the cot.\n\nA chill ran through her, Mason had known. Maybe not the specifics but he knew that something was going to happen and that's why he didn't want her to drive.\n\nFour hours later, things had calmed somewhat. Several of the accident victims had to be transferred out to burn centers, three were in ICU of those three, one wouldn't make it through the night. The remaining five were going to the med surg/ tele units. \n\nToni went to the sleeping room, kicked off her shoes and put on the bunny slippers. She kept thinking that one of those people could have been her if she had driven\n\nToni jumped when her cell phone rang. Mason.\n\n\"Are you alright?\" he asked before she could say anything.\n\n\"You knew didn't you?\" Toni asked.\n\n\"I didn't know the specifics but I knew that I couldn't let you drive to work tonight but are you alright?\"\n\n'I'm fine.\" Toni replied. \"I could have been one of those people, had you not insisted on driving...\"\n\n\"Stay put, I'm coming to you.\" Mason said and hung up.\n\nSeconds later he was in her room hugging her. \"Better?\" he asked.\n\n\"Better and you'd better get out of here before someone sees you.\" Toni replied.\n\n\"I don't care if I'm seen.\" Mason replied as he kissed her. \"But I do have to get back, see you in an hour?\" he asked.\n\n\"Barring any emergencies yes.\" Toni replied walking him to the door.\n\nAfter Mason left Toni decided to do rounds before lunch and then she could dictate. On her way to the med surg unit she ran into Dr. Ellis and the resident working with him that night.\n\n\"Hello Toni.\" He said.\n\n\"Hi Mike, how are things?\" Toni asked and then nodded at the resident.\n\n\"Excuse my manners.\" Mike said. \"Eli this is Dr. Toni Jacobson one of our best doctors and Toni this is Eli Marks, he'll be working with me but I believe that he plans to specialize in trauma.\"\n\nToni shook hands with the resident and welcomed him.\n\n\"Mike's a good teacher, you'll learn a lot from him.\"\n\nThe resident started to say something when he was interrupted by Mike.\n\n\"Why don't you go ahead and pull the charts of our patients? I'll be there shortly.\n\nAs soon as the resident was out of earshot Mike spoke.\n\n\"Still seeing Donahue?\"\n\n\"As a matter of fact I am.\" Toni replied. \"What is it with you? How many different ways are there to tell someone that you're not interested? I've told you in so many words, I know that Mason has spoken to you about it but here we are having the same conversation. So let me end this once and for all, I am not interested in you for anything other than a professional relationship. I am engaged to Mason therefore I am off the market and feel free to announce that on the rumor mill.\"\n\nToni walked off leaving Mike Ellis staring at her and wondering what would have happened if he had gotten to her before Mason.\n\n******\n\nThe floor was quiet with the exception of the occasional IV pump alarming or call light going off. Toni pulled the charts that she needed and went back to the physicians section of the station. She rounded on one patient at a time and then either wrote, discontinued or added orders. She was writing orders on the last patient when Kim tapped on the door.\n\n\"Dr. Jacobson? Do you have a minute?\"\n\n\"Sure, what's up?\" Toni asked as she finished writing the orders for the last patient.\n\nKim sat down and gave Toni a nervous look.\n\n\"I wanted to tell you that I've been talking with Tom, Dr. Myers and he's doing well. He'll be at the clinic for a few more weeks and then he'll be back.\"\n\n'That's good news.\" Toni said sensing that there was more to it.\n\n\"We've decided to start seeing each other when he gets out....\"\n\n\"Kim...\n\n\"Let me finish.\" Kim said.\n\n\"I know that you think that all I'm looking for is a rich doctor to take care of me and at one time that would have been true but not anymore. I know that Tom is vulnerable right now but I really like him. I liked him even before that whole thing happened, that's why it was so hard to say anything but I couldn't let him just throw his life away. That's why I came to you knowing how you felt about me.\"\n\nToni was quiet for several minutes; she heard no lie coming from Kim and felt her sincerity.\n\n\"How I feel or don't feel about you has nothing to do with this.\" Toni said. \"Tom is a friend and I don't want him hurt or taken advantage of by you or anyone else. The warning that I'm going to give you would be given to anyone who I felt had the potential to hurt someone that I cared about. You hurt him or take advantage of him in any way, I will hunt you down and kick your ass are we clear on that?\" Toni asked.\n\nKim nodded her head emphatically, \"I understand.\" Then she saw the ring. \"Are you getting married?\"\n\n\"Yes.\" Toni replied.\n\n\"To Dr, Donahue?\"\n\n\"Yes.\" Toni replied.\n\n\"Congratulations! \" Kim said excitedly. \"I love weddings!\" she added throwing a hint.\n\n\"Thanks, look I gotta run. See ya.\" Toni said handing the chart to Kim.\n\nBy morning, the news of their engagement was all over the hospital.\n\n*******\n\nMason was in his office dictating when Joyce stuck her head in. Mason hit the pause button and looked at her.\n\n\"So I hear congratulations are in order.\" Joyce said sitting down.\n\n\"Yes, thank you.\" Mason said.\n\n\"Am I going to get an invite?\"\n\n\"We haven't made any concrete plans but chances are it will be a very small ceremony.\" Mason replied.\n\n\"So when's your last day?\" Joyce asked changing the subject.\n\n\"Toni and I are both staying on a part time basis, when are you leaving?\" \n\n\"I gave notice for sixty days.\" Joyce replied. \"Were you serious about your offer?\"\n\n\"I was and I am.\" Mason replied.\n\nThey talked for a few more minutes before Joyce left the office. Mason wondered if her replacement would be as good and as aggravating at she had been.\n\n********\n\nThe next weeks were filled with making wedding plans. Tried as they might to keep the guest list down, it still ended up with one hundred names on it. Toni was seriously rethinking the suggestion that they just elope but seeing the happiness on the faces of her parents made her keep her mouth shut.\n\nMason had wanted to have the wedding at his house but there just wasn't enough room.\n\n\"I have an idea.\" he said one evening. \"Ethan has a cook who runs his own business on the side; we could have the ceremony and the reception there as well. The thing is if we're going to use him, we have to call him soon, reservations are made weeks in advance.\"\n\nToni shrugged, \"call him. If we can't do it there we can use one of the hotels that has banquet facilities.\"\n\nToni listened as Mason called and spoke with Ethan about Caesar.\n\n\"He's available? That's great! We'll call him tomorrow with a menu. You'll meet her soon; you are coming to the wedding aren't you? I would like for you and Katrina to meet her. Thanks Ethan and give Katrina and the girls my love.\"\n\n\"It's a go.\" Mason said as he hung up the phone.\n\n\"I heard.\" Toni said softly.\n\n\"Toni?\" Mason asked.\n\n'Nothing, I just had a moment of insecurity but I'm alright now.\" she replied.\n\n\"If there's something bothering you let's get it out now.\" Mason said.\n\n\"Really, I'm good. It was for just a second I wondered if you were still in love with her.\" Toni admitted.\n\n\"You once told me that there was a part of you that would always belong to James and I told you that the same would be for Katrina. I also told you that it in no way meant that I couldn't love someone totally and I meant that, Toni I love you. It's not Katrina that I think of when I close my eyes to rest and it's not Katrina that I want to make love with every day. It will always be you and no one else, do you understand that?\" Mason asked.\n\n\"I understand.\" Toni replied. \"I think that it's just nerves.\" She added playing with his fingers.\n\n*******\n\nThree weeks later Toni stood in front of the mirror looking at her reflection. Today was gong to be the fourth happiest day of her life, the first one was when she married James, the second was when she passed boards, the third was when she and James witnessed Jamie's birth and finally today when she married Mason. \n\nShe found it hard to believe that she was happy; she thought that the pain of losing James would never subside but it had, it had taken three long years but the pain had finally subsided. The only thing that marred the day was the phone call from Gina telling her that she shouldn't be marrying again so soon. Toni heard Robert walk in to the room, say something to Gina and then he was on the phone apologizing profusely.\n\nToni was also nervous, she was never one for big crowds and she was going to be meeting Katrina-the other woman for the first time. She wondered how she would compare to her and what Katrina would think about her. She didn't know why Katrina's opinion of her mattered so much except that it was because Mason had loved her. A tap on her door pulled her from her thoughts.\n\n\"Come in!\" she called.\n\nBarbara came in carrying the dress that Toni would get married in, it wasn't a wedding gown per se, Toni drew the line there. She and her mother argued about what she should wear for days until Ben stepped in.\n\n\"Barbara, it's her wedding and she doesn't want a gown.\"\n\nThat was all it took for Barbara to give up. It took them two days to find the dress that Toni would be wearing.\n\n\"It's a beautiful dress.\" Barbara said as she hung it up.\n\nThe dress was cream colored with a flowery design that was slightly darker in color than the dress itself. The neckline was squared; the sleeves fell to her elbows. The waist of the dress fit snugly around her waist before it flared out over her hips with the hemline ending two inches above her knees. \n\n\"Did you bring the extra panty hose?\" Toni asked.\n\n\"Three pair just like you wanted.\" Barbara replied.\n\n\"I'd better start getting dressed, god forbid that I should be late to my own wedding.\" \n\n******\n\nMason had a hard time resting; he hadn't seen Toni in over twenty-four hours by the decree of Barbara.\n\n\"It's bad luck to see the bride before the wedding so say your goodbyes and have a good time with Ben and Jamie.\"\n\nThe three of them had gone to the movies and played at a video arcade until Jamie was too tired to stay up any later. After putting Jamie to bed, Ben and Mason talked.\n\n\"I guess you already know how stubborn she can be.\" Ben said. \"That comes from her mother's side of the family.\"\n\n\"I noticed.\" Mason said chuckling.\n\n\"And I guess you found out that while Toni is a good doctor, she can't cook to save her life.\"\n\n\"I noticed that too.\" Mason said and told Ben about Toni flouring the bacon.\n\n\"Yep, that's our Toni.\" Ben said laughing.\n\nThe rest of the evening passed quietly with Ben leaving around one am. From that point on, the night slowed down. He talked to Toni several times throughout the night but it wasn't the same as seeing her. He had even entertained thoughts of appearing in her room just long enough to kiss her good night but he didn't, he didn't want Jamie to wake up and no one be there.\n\nNow he was pacing back and forth counting down the minutes when he would marry Toni. Caesar had the restaurant looking nice but not over the top, he was however surprised by the menu.\n\n\"Mickey Mouse pancakes?\" Caesar asked incredulous. \"Wouldn't she rather have prime rib or.... Or.... Mickey Mouse Pancakes? He asked again.\n\nToni and Mason had agreed to let Jamie help with the menu knowing that's what he would choose. The tables were already set with real china and silverware and crystal goblets for the fresh orange juice.\n\nIt was almost time.\n\nMason turned when he felt a tap on his shoulder.\n\n\"Ethan! You made it, where are Katrina and the girls?\"\n\n\"In the bathroom.\" Ethan said. \"I wanted to be the first to congratulate you , nervous?\" he asked.\n\n\"A little.\" Mason admitted.\n\n'You'll be fine, oh there's Katrina and the girls.\" Ethan said.\n\nKatrina made her way over to Mason followed by the girls who had grown so much and were as beautiful as Katrina was, they would have Ethan's height hew noted. Katrina hugged and then kissed Mason on the cheek, \"Congratulations! We're so happy for you!\" she said smiling up at him.\n\n\"Thank you and I'm glad that you could come.\" Mason replied looking down at her. He greeted the girls with hugs and kisses and then looked at Katrina again. She was still as beautiful as he remembered but the feelings that he once had for her were gone, she was his friend and the wife of his friend Ethan, all was as it should be.",
        "*******\n\nToni slipped the dress over her head with the help of her mother. It was almost time.\n\n\"Is Jamie ready?\" she asked.\n\n\"Stop worrying, he's with your father and he looks very handsome in his blue suit.\" Barbara said as she fussed with Toni's hair.\n\n*******\n\nSeven o'clock sharp, the room went silent as soft music began to play. The minister, a friend of Ben's stood waiting in the front next to Mason who kept touching the wedding bands in his pocket. Almost.\n\nToni stood to the back of the restaurant literally shaking. She looked at the group of people who were waiting for her to come in and almost went back into the room where she had just come from. She closed her eyes, opened them and took the first step toward Mason and then the next. She kept her eyes on his not daring to look around her; she vaguely heard the sounds of chairs scraping the floor as people stood to watch her walk by. She glanced to her right and saw Jamie and her father waiting to fulfill their duties.\n\nFinally she was standing in front of Mason, her hands sweaty and ice cold from nerves. She wanted to sigh with relief when his warm hands took her cold ones in his.\n\n\"You are so beautiful.\" he whispered giving her hands a squeeze.\n\n\"Shall we begin?\" The minister asked and waited for the signal from Mason. \"Who gives this woman to this man?\" he asked.\n\nToni felt tears running down her face as her father, her mother and her son stood up and said in unison \"we do.\"\n\nFrom that point on, everything was a blur. Toni cried through the vows, cried through the ring exchange and cried through their first kiss as man and wife.\n\nImmediately after the service, Mason took Toni to the room that she had gotten dressed in and kissed her the way that he wanted to but couldn't in front of so many people.\n\n\"Antoinette Marie Jacobson Donahue.\" Mason said with a chuckle. \"That's quite a mouthful.\" he added.\n\n\"It is and thank you for letting me keep Jacobson as a part of my name.\" Toni said drying her eyes. \"I have to look a mess.\" she said glancing at the mirror.\n\n\"You look beautiful.\" Mason said and kissed her again. \"Are you ready to go back out?\"\n\n\"For Mickey Mouse pancake I am,\" Toni replied taking Mason's hand.\n\nAfter the reception, Katrina shyly made her way to Toni.\n\n\"It was a beautiful ceremony and you are a lovely bride.\" Katrina said.\n\nToni assessed Katrina and realized that she was just as nervous about their meeting as she had been. She could see why Mason fell in love with her, she was beautiful but shy, stubborn and ..... Strong and Toni immediately liked her.\n\n\"Thank you and I'm glad that you came.\" Toni said taking Katrina's hands. \"I've heard so much about you including that you're one hell of a scrabble player. \n\n\"I...\"\n\n\"Mama!\" Veronica called out and ran up to Katrina.\n\n\"I'm talking and what do you say when you want to interrupt?\" Katrina asked firmly.\n\n\"Sorry, scuse me but mama Nessa won't share.\"\n\n\"Where's your papa?\" Katrina asked.\n\n\"Talking to that man over there.\" Veronica said pointing at Ethan and Mason.\n\n\"I'd better go and see what Nessa is into, it was nice to meet you and I'm really happy for you and Mason.\" \n\n\"Thanks, maybe we could get together sometime?\" Toni asked.\n\nKatrina seemed surprised but pleased. \"I would like that.\"\n\nBy two am, Mason and Toni were on a plane headed for Hawaii. Jamie was going to spend a week with Toni's parents and then they would fly to Hawaii with him and spend the second week with them. As the plane took off, Toni closed her eyes and murmured a heartfelt thanks to James."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "mason",
        "toni",
        "vampire",
        "bbw",
        "jamie",
        "james"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mason-ch-15"
}