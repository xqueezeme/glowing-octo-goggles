{
    "title": "The Actress",
    "pages": [
        "This one is based on a true story... I'm joking, I wish! This is a slow burn story with lots of build-up but I think you'll find it worth your while. I know I did when I was writing it! I would love to hear your reactions - happy reading! \n\n* * * * * \n\nAgainst my better judgement, I opened the kitchen cupboard and peered at the shelf that should contain my snacks. Nothing. I should have known. I didn't have any unruly, hungry roommates to blame for that. I lived on my own, so this was all me: emptying that cupboard as soon as there was anything there worth eating. \n\nTo be fair, my body didn't show it; between my natural leanness and my tendency to alleviate any work stress with a run or a bike ride, I could eat whatever I wanted and stayed in shape without any issues. However, I still felt that I should try and snack less. So I hadn't actually bought anything naughty for a while, thinking it would stop me from wanting it. It didn't. \n\nAnd now, Friday night had arrived and I was doomed to have a movie night without any chocolate. After a manic workweek, I had spontaneously decided to have a night in, instead of joining my colleagues at the cocktail bar near our swanky office block. This meant I would miss the opportunity to try another cocktail from their extensive menu and, more importantly, to watch the cute pink-haired bartender make said cocktail with her signature down-to-earth style with just a hint of flair. It was crucial to make this lack of eye-candy worth my while, and for this I needed chocolate with my movie. And possibly some wine. \n\nAn all too familiar internal debate ensued between the healthy me - pleading I could easily watch a movie without chocolate - and the indulgent me - arguing it really was no effort at all to go the supermarket and grab some. As usual, the indulgent me won. Slightly annoyed with my own lack of a backbone, I stepped into my sneakers without bothering to tie the laces, and grabbed my leather jacket. \n\nIt was chilly outside but at least it was dry. Autumn was slowly setting in, but so far the endless and dreary grey days had not yet made an appearance. The walk to the supermarket was quick. I had been living in the same residential area for a few years and knew all the alleys connecting the cul-de-sacs. This was why I loved walking and cycling places; there was always a more direct route. \n\nThe small suburban supermarket was deserted, apart from a bored teenage employee playing on his phone behind the till, and an ambitious cleaner hoping for an early night. Most people would be out drinking at this time, having gone straight from the offices to the pubs. At least this would be a quick in-and-out then; my movie was waiting. \n\nAs I started my beeline to the sweets aisle through the fruit and vegetable aisle, I noticed a woman in a long black coat standing in the middle of the aisle with her cart, appearing slightly lost. She was holding a bag with two leeks and was looking around for something or someone. \n\nAs I approached to pass her, she turned to me and mumbled: \"Oh, you don't work here.\" She looked away quickly, as if she was either terribly shy or in a huge rush to be on her way. She did not speed off, however, so I assumed it was the first. \n\n\"No, I don't, I'm afraid,\" I replied politely, \"I think the kids who are on shift are all either playing on their phones or secretly smoking out the back.\" \n\n\"Great,\" she sighed, slapping the leeks across the palm of her hand. She glanced at me, pale blue eyes meeting mine for just a split second, before she turned away again slightly, her shoulder-length blond hair obscuring part of her face. I couldn't help noticing how beautiful she was. \n\nI never thought it would be this difficult, the woman with the leeks thought. Let's just cook a healthy meal from scratch; that will make me feel good. Famous last words. I can't even get the ingredients right! I have no idea how much of this stuff I need; 2 cups, what does that even mean? \n\nAnd of course there isn't a soul around to ask. Are supermarkets always like this? I'm glad it's so quiet, but I could really use a little help to figure this one out. Although, would one of those kids who work here even know? My kids for sure wouldn't. Now that they're all off to uni, they'll have to learn soon enough. \n\nMaybe I should just leave it. I can find other ways to empower myself than cooking and buying groceries... \n\n\"Thanks anyway,\" she said, as she turned to walk away. \n\nThere was something about her tone and her body language that made me want to help her, whatever it was she needed. She looked so deflated, as if all her hopes and dreams had just been crushed by my lack of an employee uniform. \n\n\"Hey, but I do come here a lot. I practically live in the sweets aisle. It's a bit of squatter's situation, actually. They're not very happy about it,\" I started, rambling; overdoing it in attempt to keep her from walking away. Get to the point. \"Maybe I can help you? What do you need?\" \n\nMaybe you can... You don't look like much of a cook either, but at least you'll know how this supermarket thing works. \n\nShe glanced at me again with her captivating pale eyes and smiled. \"Oh, it's nothing, really. I was just looking for the scales to weigh these.\" \n\nShe slapped the leeks across her palm again. Somehow it made my knees go weak, watching the fortunate vegetables impact with the elegant hand in such a deliberate action; it triggered inappropriate associations in my imaginative mind. \n\n\"You only weigh them when you get to the check-out,\" I replied, banishing envious thoughts towards the leeks or the hand. \n\nWhat? That doesn't make any sense. How do you know how much you're going to buy? Or do people just magically know how many leeks fit in a cup?! \n\nAt her next quick look at me, I told myself to take in a few more details so that I could piece together the picture of her face. She had pronounced cheek bones and a wide mouth with well-formed lips, the bottom one slightly fuller than the top one. I felt defiant, sneaking a peek at her face while she was clearly doing her best to hide it from me. She still looked puzzled and even a bit frustrated. \n\n\"That doesn't help?\" I asked carefully, part of me wishing I had just skidded past her, grabbed my chocolate, and left. As much as I always enjoyed talking to a beautiful woman, I did not want to be on the receiving end of some sort of produce-induced tantrum. \n\nShe sighed, looking embarrassed. \"I'm supposed to put two cups of leeks in this dish I'm cooking. I have no idea how much that is in grams or ounces, let alone in actual leeks.\" \n\nThere, I've said it. I have no clue what I'm doing. I'm completely useless at this. You'll probably think I've escaped from a convent or something. \n\nI couldn't help but chuckle. I could understand her frustration; those kinds of measurements were completely puzzling to the novice cook. Although, I wasn't sure how she could be a novice cook. She was surely not a student living on her own for the first time. If anything, I would have guessed she had a family to cook for. Perhaps she'd just left a partner who'd always cooked for her; of course she'd be single in my optimistic mind. \n\n\"Well, let's see. One cup of raw leeks is about 250 grams. That's one large or one and a half medium-sized leeks. Those two you're holding are medium, I'd say, so you'll want one more and then you have your two cups,\" I reasoned quickly. Calculations came easy for me and I was no stranger to converting kitchen measurements. \n\n\"How do you just know that?!\" \n\nShe now looked directly at me with a perplexed look on her face. For the first time I saw her face in its entirety, its overwhelming beauty catching me by surprise, despite the sneak previews I'd had. I'd never seen anyone this attractive around here, just wandering through the supermarket. There was something familiar about her too, like I'd seen her face a million times but in a different context. It was that typical experience of meeting your gym instructor in plain clothes in a restaurant and not having a clue where you know them from. Did I know her? I was convinced I would have remembered her if I'd met her before. \n\nI realised I was staring at her and quickly responded: \"I cook a lot.\" My brain was struggling to focus on having a normal conversation, working overtime to place her in different places I'd been to see if she fitted anywhere. Something must have shown on my face because she looked away again quickly. \n\nYou just recognised me, didn't you? I shouldn't have looked at you like that. It's my own fault. This au naturel appearance only works so far in keeping me incognito, I guess. \n\nOh well, this will be a nice story to tell your friends, to laugh about while you prepare your meals with your perfect measurements; how you met the famous actress who had no idea how to cook for herself. I should get going before we'll end up taking selfies with my groceries. \n\n\"Thank you very much. You've saved my dish from a shortage of leeks.\" She turned away, undoubtedly off to add another leek to her bag. \n\n\"You're welcome. How many people are you cooking for?\" I knew it was a feeble attempt to keep some form of conversation going, but I still hadn't figured out if I knew her and from where. At the same time, I realised, I was desperately fishing for any confirmation of my theory about her being recently single. \n\n\"Just me,\" she replied dismissively, while still avoiding eye contact. \n\n\"You must be quite hungry then. Or very fond of leeks...\" I could kick myself for my silly response. I was usually quite confident around women and was known to be a bit of a flirt, but now I wasn't being my usual smooth self. Something about her was throwing me off, as if the coolest version of me still wouldn't be cool enough to talk to her. \n\nDespite my lame comment, she said with a conspiratorial smile: \"Maybe both...\" At that, she walked off and left me wondering if there could possibly be any double meaning in that. If there was, it was too obscure for my occupied brain to grasp. \n\nFor lack of anything else to do, I continued towards the sweets aisle to choose my chocolate. Usually this was a task I enjoyed greatly but when I looked at the shelves now, I did not see any Cadbury, Lindt or Galaxy; all I saw was her face. The sudden realisation hit me like a slap in my face. I did know her. Or rather, I knew who she was. The whole world knew who she was. \n\nIt had seemed like nothing out of the ordinary, her being here. She had looked like any other person doing their shopping at the end of a busy day. But she wasn't like any other person. Her well-known face should have looked out of place in this insignificant environment, like a fully-costumed extra in a fantasy movie who had wandered onto the set of a rom-com. Yet, her lack of make-up and designer clothing seemed to transform her; make her blend into the everyday without drawing any attention to herself. So much so, that even when she'd looked directly at me, I hadn't made the connection. \n\nI remembered that when I'd first seen her on the big screen, I'd thought she was striking. Since then, I had watched many of her movies and had developed a bit of a soft spot for her. Many people had; she was incredibly talented and widely acclaimed. Not only had she won two Academy Awards and hundreds of other prestigious awards, she was also intelligent and witty, as far as I could glean from back-stage material and TV interviews. \n\nI was struggling to comprehend how this could possibly be happening when a sudden brain wave brought some much-needed enlightenment. I recalled reading in a tabloid magazine that she had recently sold her exorbitant city penthouse and moved to the suburbs. Whereabouts it didn't say; they probably didn't know. At the time I had dismissed it as a wild guess altogether - these tabloids were not known for their fact-checking. A recent divorcee, she was currently enjoying a bit of a sabbatical from acting and was looking for some peace and quiet, the same article had claimed. She'd supposedly confided in them that she needed to regroup and rediscover what was important. \n\nSo it was true? She'd moved to the suburbs - my suburbs? And here she was, just casually strolling through my local supermarket? At the very least that last part was true. I never would have thought a star of her calibre would do her own shopping, or at least not by physically going to the supermarket. But then again, perhaps it provided a much needed sense of normality. \n\nAnd - let's focus on the important things - she was indeed recently single, my optimistic brain quipped. I reprimanded myself; there was no way of knowing that for sure. Besides, what was I going to do, hit on her in the supermarket? I laughed out loud at the thought. \n\nI grabbed the first piece of chocolate I could get my hands on, my usual debate about brand and cocoa percentage suddenly seeming irrelevant. I felt lost, as if I was missing something important. What else was there to do? What else could I have done? I'd had a perfectly pleasant but completely meaningless conversation with her. She would go on her merry way and forget about me, and I had no choice but to go on mine: back home to my movie. Maybe I could watch one of her movies then; that would at least be something. \n\nStill beating myself up for my lack of smoothness and my failure to make her fall for me on the spot, I crossed to the wine aisle and grabbed a nice Chianti; that would cheer me up. I made my way over to the check-outs. A moment later, I was stopped in my tracks when I saw that she was there too. \n\nMy heart skipped a beat and my mouth went dry. Should I go up to her and ask for her autograph, maybe a photo? I would certainly regret it later if I didn't. But then, she probably didn't want to be bothered like that while doing something as mundane as grocery shopping. My politeness and wish to respect her privacy battled with my desire to have one more moment with her and somehow capture that moment for eternity. I watched her briefly. Hiding in her inexplicable anonymity, she was even more captivating than on screen, if that were possible. \n\nI remembered then that I'd already been interested in her before I'd realised who she was. Even to me, it sounded like a puny justification for wanting to speak to her again, but it was true nonetheless. I realised I could not just stand there endlessly; either way I had to go where she was to pay for my groceries. The bored employee who had been at the tills earlier had disappeared, so we were both confined to the self-service check-outs; my usual choice regardless. Shyness engulfing me, I set my products down on the check-out next to hers. \n\n\"Hi again,\" I mumbled, without looking at her. I hoped I didn't come across rude; that was the last thing I wanted. \n\nOh you again, the only person to be seen in this whole place; one person, whom I couldn't even keep from recognising me! Still no 'Can I have your autograph' or 'I'm such a big fan', though. That's a relief. \n\nRight, let me just figure out how this damn thing works so I can get out of here. Whatever happened to people doing this for you? \n\n\"Hi,\" she said simply, as I quickly scanned my products and put them in the reusable bag I'd brought. She looked over at my check-out like a student peeping on a test, then glared at the machine in front of her and tapped the screen awkwardly. \n\nI tried to be inconspicuous as I lingered slightly longer than necessary and watched her struggle for a moment. Did she not know how to use the self-service machine? I could hardly believe that. But then again, she probably hadn't done this very often and the things could be confusing at first. I realised this was my chance. \n\n\"Are you alright there? Is the machine not working?\" I asked, not wanting to make her feel bad. \n\nI think you can see very well that it's not the machine, but that's very kind of you to put it that way. Once again, maybe you can help me out here, supermarket whizz... \n\n\"I'm sure the machine is fine. It's me, I'm technologically challenged. Would you mind? I can't figure out how this thing works.\" \n\nI was impressed with her honesty and, of course, I was more than happy to give her a hand. Even if it had been the machine, I imagined I would have opened it up and debugged it, if it meant I could help her. She looked at me earnestly, less inclined to hide her face now. She probably thought I'd recognised her by now anyway. For some reason, I didn't want her to think I was only talking to her because she was famous. I wished I could explain to her that I hadn't even realised before, without sounding silly. \n\n\"Of course.\" Moving over to her, I walked her through the initial settings - she hadn't brought her own bags - and showed her how to scan the products and bag them so the machine would register their weight. \n\nStanding side by side, we worked together: she scanned, I bagged. Her physical proximity still made me feel nervous, but I felt reassured by the banality of what we were doing, and the fact that I had been able to teach her something new, no matter how trivial. \n\n\"You haven't shopped in a while then? You haven't had to use one of these before?\" I tried to make conversation. \n\n\"I usually go to the normal check-out, but it seems the people who work here are still not around.\" \n\nWell, that's what I would do, if I did do this more often. But there's no need to dwell on the fact that I haven't done my own grocery shopping for years. It would just make me seem snobbish. But I'm not, I've just always been so busy! But now that I have more time off, it's nice to do these things myself. This is the whole reason I moved out to the sticks. Well, part of it anyway. \n\nThe next item was the bag of leeks. She stopped, for lack of a barcode to scan, and looked at me helplessly. \n\n\"This is where you weigh them,\" I explained and selected the right item on the screen. The weight showed as 493 grams. \n\n\"See, two cups is about 500 grams, so you should be good,\" I confirmed, \"even if you are very hungry and very fond of leeks.\" \n\nShe smiled genuinely and I melted a little. \n\n\"What are you making?\" I continued. I realised I wanted to know so much more about her; not about her spotlight life but about her everyday life. I wanted to picture her in her kitchen, preparing a meal in her comfortable clothes and her slippers. \n\n\"It's an oven dish with pasta. I can't remember what it's called. It's one of those lean, mean, green things.\" \n\nThe recipe looked easy enough to start with. If that works out well, perhaps I can graduate to something a bit more complicated. Or have people over. I'll see about not poisoning myself first. \n\n\"Lean, mean, green?\" I laughed, \"you don't look like you need to worry one bit about your leanness.\" It had come out before I realised it. Apparently, my optimistic brain had still not given up on the thought of hitting on her in the supermarket.  \n\nOh smooth! That's very nice of you to say, but at my age these things don't come as easy anymore. I always have to worry about staying in shape, and about my PT shouting at me for eating the wrong things. \n\nAnd did you really just flirt with me? That's flattering, but it's going to get you nowhere. \n\n\"Why, thank you. It's working then.\" Her eyes became slightly slanted as her smile engulfed her entire face. \"What are you making? I noticed you're on a healthy diet of chocolate and wine.\" She grinned. \n\n\"Yeah, I just came in here to give into my cravings. I have a lot of those.\" I grinned at her cheekily. I couldn't help it. My brain had initiated a flirt sequence and I felt myself slipping into that zone. ",
        "I'm sure you do... Do they have anything to do with hitting on famous people in the supermarket? With hitting on me? \n\n\"Okay, done. How do I pay?\" She abruptly interrupted my flirt sequence. She pointed at the cart, which now only contained her handbag. \n\nI showed her how to complete her check-out and looked away as she entered her pin. This was it; my extra time with her was up. It had been pleasant again, but nothing more than that. I felt a wave of despair coming over me. I had to try something else; I couldn't just let her walk out my life. \n\n\"Hey, can I ask you one more thing?\" \n\nHere we go. Well, I guess you have deserved a selfie after all your help. It's not your fault I failed to fly under the radar with my lack of life skills. \n\nA shadow of annoyance crossed her face, not quite reaching the surface; she was too professional for that. It was quickly replaced by a polite smile. \n\n\"Sure,\" she said. No doubt she expected me to finally go into starstruck fan mode and she was ready to go through the usual spiel of gracefully accepting compliments, scribbling her autograph, politely excusing herself. Rehearsed to perfection, out of sheer necessity. \n\nI kept telling myself that it wasn't about that. I wasn't just a fan; I would still be interested in her if she'd been my next-door neighbour or the person who delivered my post. But how could I convince her of that? I barely believed it myself. As I racked my brain, a solution slowly took shape. It was a simple idea but it could work. I hesitated, uncomfortable with the idea of keeping the truth from her, but I started to believe it was the only chance I had. \n\n\"What's your name?\" I asked her, as casually as I could. \n\nWhat do you mean? You know my name. You know who I am. That's why you're still talking to me, isn't it? \n\nNow I had truly puzzled her, her expression growing more pensive. She looked at me for a moment, clearly not sure what to make of me. \n\n\"Are you serious?\" \n\n\"What? Too much? Should I have gone with 'Can I buy you a drink?' instead? I have to tell you, it was a toss-up in my head. I realised too late I actually wanted to ask you two more things.\" \n\nWhat are you waffling on about? Now you want to buy me a drink? I'm confused... You literally just met me. Do you think that just because you've seen me in a couple of movies, you know me? \n\nAlthough, you just asked me my name, as if you have no idea who I am. You don't recognise me? You're just a random chatty person? I really can't tell now; how annoying. Oh hell, I can hardly do a \"Don't you know who I am?!\", can I? I'm just not diva enough for that. \n\nShe just looked at me with a baffled expression. I answered her questioning look with my most genuine expression - the one that said I was merely casually making conversation with a stranger in the supermarket. \n\n\"You want to buy me a drink?\" She then asked incredulously. \n\nI felt myself getting nervous under her scrutiny so I rambled on: \"Well yes, I would like that. I thought it might be polite to ask your name first. Although that's clearly a hard limit for you... Which is a bit strange, if you ask me. But just the drink then?\" I gave her an innocent smile. \n\nYou really have no clue who you're talking to, do you? I don't know how that's possible but it really seems that way... And now you want to go for a drink? What, like a date? You've got balls, I'll give you that. \n\nShe smiled, shaking her head in disbelief. \"Do you always try to pick up people in the supermarket? And ones old enough to be your mother, for that matter!\" \n\n\"It's a bit of an issue, actually. My therapist believes I may have been a shopkeeper in a previous life. You know, didn't get out much...,\" I improvised jokingly. I decided to let the age remark slide. Although she was technically right, she did not need any encouragement in thinking she was, or looked, old. She remarked on that in TV interviews too, but the truth was that she had only become more beautiful as she'd aged. \n\nYou are such a weirdo! A flattering, friendly weirdo; definitely the good kind, but a weirdo nonetheless. \n\nShe laughed, surprise and amusement battling for first place in her expression. \"I think that therapist is no good...\" \n\n\"He did say that going for a drink every now and then with a stranger I met in the supermarket could tremendously help my progress,\" I continued unperturbed, with a serious expression. Seeing her laugh was the best thing since sliced bread. \n\nShe laughed again wholeheartedly, showing a perfect row of white teeth and slightly throwing her head back, revealing a glimpse of her long, elegant neck. \n\nYou're quite pleased with yourself, aren't you? But in such a no-nonsense way. So different from those sleazy guys at the red carpet events, flocking to me because they know I'm single again. I must say that I like your style. But I have no idea who you are! And you may or may not know who I am. I can't just run off to the pub with you! \n\n\"I don't think that's a good idea,\" she said, still smiling. \n\n\"Are you sure? We may be the only two people in the whole town not in a pub right now...\" \n\n\"Which is exactly why I am here instead,\" she mused, looking at the groceries in front of her. She was speaking more to herself than to me, it seemed. \n\nAvoiding other people... I have been avoiding people for so long. At least, people who are not in the business. People that think they know me based on what they've read or seen. You seem different, that's true. But are you? I can't be sure. \n\nShe snapped out of her reverie and turned to me. \"I really can't. I'm sorry.\" She leaned in to grab her handbag from the cart and turned away to take her grocery bags. I noticed a plastic bag with one apple in her cart, which had previously been obscured by her purse. \n\n\"Wait!\" I called to her. \n\nShe turned round, looking more amused than annoyed. \"You don't give up easily do you?\" \n\nI shrugged, faking nonchalance. \"The drink thing? You don't want to, that's fine. Your loss.\" \n\nOh you're so cocky! Maybe it is my loss. I haven't had a drink in ages. But I wouldn't go out and have one with some weirdo I had just bumped into in the supermarket. \n\nShe laughed. \"Then what it is?\" \n\nI pointed at the apple. \"Were you planning on stealing that? If so, you're terribly bad at it. You're meant to take it with you. That's kind of the point of stealing.\" \n\nShe looked at the fruit as if it had appeared from nowhere, and then at her grocery bags, not immediately understanding why the apple was not in one of her bags. \n\n\"You wouldn't tell anyone, would you?\" She grinned cheekily. \n\n\"I can't be an accomplice. I would have sleepless nights over that. Please let me get it for you. It's the least I can do. I would hate to see you throw your life away by slipping into crime.\" I looked at her earnestly. \n\nYou want to buy me an apple? You really are something else. Is this some new form of courting that you youngsters engage in? You can't be older than, what, 25? 30 at the very most? What am I supposed to do with this? \n\n\"What a strange girl you are,\" she mused with a bewildered expression. \n\n'Flung out of space,' I completed in my head, a reply I couldn't possibly voice. \"Compellingly odd?\" I suggested instead. She laughed again, amusement colouring her smile and her eyes. I smiled back, now holding up the apple expectantly. I wasn't sure where I was going with this, but at least she was still here. \n\nCompellingly odd? I guess you could say that. Compelling... yes... I've never had a woman flirting with me before. Or at least not that I've noticed. Is it always like this? This is actually quite... refreshing. But I'm not into women, so there's really no point in you flirting with me! It's not like this would go anywhere... sexy or romantic... \n\nOh dear, where is my mind going? Focus, woman! All you asked is if you can buy me an apple. That's not such a big deal, is it? Strange, for sure, but nothing major, I think. This isn't some youngster or lesbian code that I don't understand - being the dinosaur I am -, is it? \n\nAfter what seemed like an eternity she said: \"Fine.\" She paused and then added: \"It saves me from having to do that whole techy thing again. And from descending into crime, of course.\" \n\nI quickly weighed and paid for the apple and slipped it into one of her grocery bags. I reached for the bag she was about to pick up and allowed my fingers to brush past hers lightly. \"Let me help you with your bags. They look heavy.\" She pulled back quickly and gave me an incredulous look. \n\nSo gallant! Is this where all the manners went, to the lesbians? Well sign me up; for the platonic stuff, that is. \n\nShe looked me up and down, trying to do so inconspicuously, but failing. I knew what she saw, but wondered what she thought about it. I was wearing my favourite pair of faded black loose-fitting jeans which ended messily half in and half out of my unlaced Converse. My zipped open leather jacket showed part of the science geek shirt I was wearing underneath. I wasn't even sure which one I was wearing today. I had so many, and I loved them all. I was looking scruffy. Had I known I was going to bump into her... Well, let's be honest, I usually ended up looking scruffy, no matter how hard I tried. \n\nI caught her perusing my face. I knew my eyes were one of my best features. People commented on this a lot. They were large with long, dark lashes; they usually looked green but seemed to change colour slightly, sometimes appearing more blue or grey. I never wore make-up; I didn't like it and didn't think I - or any other woman, for that matter - needed it. \n\nMy dark-blond dreadlocks - my other defining feature and the one people remembered me by - were tied up in a scruffy bunch, as usual. I loved them. They were the first and only thing I'd ever done with my hair that actually suited me. All in all, I had no complaints about my looks - and I had met plenty of others who appreciated them - but I had no idea if it was something she was into. I could only hope. \n\nAnd look at you, I guess you're quite cute too, in a very boyish, rough and tumble kind of way. From a purely aesthetic standpoint I mean, of course... Fine, you can help me with my bags. Just don't read anything into it! \n\n\"Okay, sure. That would be great. Thank you.\" \n\nAs I grabbed her bags, I tried to control my inner jubilations at the fact that she had agreed, even if it was just a humble start. We walked together to her car, a dark-blue family model. Like her current appearance, it seemed to have been chosen for its discretion. \n\n\"So, how about I buy you that drink now?\" I asked, after she closed the boot. \"I think we both deserve that after sacrificing part of our Friday evening to groceries.\" \n\nOh wow, so much for that being my loss. I certainly can't say you're not dedicated to your cause. \n\n\"Buying a bottle of wine and chocolate plus an apple for a stranger hardly constitutes doing groceries,\" she countered, giving me a wicked grin. \n\n\"Okay, fair enough. You deserve it then. I'll just come along for the company, even if it will be awkward because I won't know what to call you.\" \n\nOh that's right, I still haven't told you my name. And you really don't know it, do you? Or are you pulling my leg, testing what I will do? \n\nWhichever it is, at least you're not acting all starstruck. You seem quite keen on just having normal conversations. Well, normal is a big word. You're clearly a bit strange... but also different, refreshingly so... \n\n\"You already got me an apple. I'd be too much in your debt.\" \n\n\"Hmmm... you got a point there. How about you buy me a drink then?\" \n\nShe laughed. \"You're really not going to let this go, are you?\" I smiled and shrugged, maintaining my question with my silence. \n\nIt is tempting... I haven't been asked out for a drink in so long... I guess I haven't really been in situations where that could happen in a while. I have been saying I wanted a bit more normality. That's what this whole sabbatical thing was all about, well partly anyway. And here's a chance to do something any other normal person would be able to do: go out for a drink on a Friday night. No biggie! \n\nGosh, you really are starting to win me over here... \n\nBut I shouldn't, really... What if you are actually some creepy stalker and you're just pretending you don't know me? Or worse, a reporter looking for some juicy gossip. Please tell me you're not either of those things! You really don't seem like the type... \n\nSurely I would be able to tell if you were just putting on a show here. I'm an actress, for god's sake; I see people acting all the time! And you just don't seem to be acting... If you are, I'll have to get you in touch with my agent because then you are brilliant... \n\n\"I have to get home, I've got the groceries in the car,\" she said feebly, after visibly weighing her options for what felt like ages. \n\nObviously I was aware of this fact, having put them there myself a moment earlier. I still remained silent, trying not to push or encourage her any further. I'd done more than enough of that and a smidgen more might sway her in the opposite direction. She had to figure this one out; silence was golden. \n\nSay you are who you say you are, and you have no idea who I am... Then I guess it would be nice to have some uncomplicated company, for a change. You seem uncomplicated and certainly a good laugh. \n\nAnd you're clearly interested in me for who I am, not for who you think I am, or the image of me you have in your head. Who knows why, if it isn't the star appeal?! Surely you can get plenty of girls your own age? \n\nBut I don't want to lead you on; that could get complicated quite easily. A drink would be nice, but it wouldn't be more than that. I'm just not into that; surely you can see that? You're hoping you can win me over, maybe? You won't, I'm sorry... I just couldn't with another woman. \n\nYou're a grown-up, though - I'm sure you can handle that, if I let you down easy. I hope I'm not shamelessly using you here, but I actually really want to take you up on that offer. Bring on the normality! \n\nShe looked at me inquisitively, trying to figure me out, once more. Trying to ascertain what I really wanted from her, no doubt. Trying to answer that question that had been bugging her since I had initiated my plot twist. I could see her weigh her options. She was intrigued, not willing to let this go. Not willing to let this just be the weirdest supermarket experience ever; a fun story to tell at a birthday party. She needed to know more, I could tell. \n\n\"I guess we could have one drink... It has to be somewhere quiet, though.\" \n\n\"I know just the place.\" \n\nWe were in. All systems go. I was beyond ecstatic. I had nailed the first act: the exposition; now on to the rising action, and finally - I hoped we would get that far - the climax. \n\n* * * * * \n\nThe pub was not far from the supermarket, but I suggested she take her car and park it in a quiet street around the corner. This was not a completely innocent suggestion as it was actually the street where I lived. I hoped she would forgive my white lie, or rather my slight omission. \n\nAs I had walked to the supermarket earlier, I rode along and directed her to the place. Being in the car with her felt strangely normal and I was mostly at ease, apart from the fact that her physical proximity was making me feel warm inside and tempted to touch her. The drive being so short, there was hardly any time for more chatting, apart from exchanging directions, and soon she'd parked the car and we had walked towards the pub. \n\nShe seemed a bit nervous when we approached the door, but I knew there was no need; this was a real hidden gem. It was one of my usual hang-out and I liked it for its peace and quiet, and its relaxed atmosphere. Strangely, it was usually quite empty and thus perfect for a movie star who did not want to be accosted by adoring fans. \n\nAs we walked in - with me leading the way and her trying to be casual while hiding behind me - I saw that it had been the right decision. The place was quiet, featuring only a few couples too lost in each other to notice the striking woman who had just entered. When we walked up to the bar, the bartender looked up from the rugby match he was watching. \n\n\"Hey, if it isn't our local celebrity!\" He exclaimed, rather loudly. She visibly stiffened beside me and looked around quickly to see if anyone had heard him. \n\n\"Yes, yes, Tom. There's really no need to bring it up every time,\" I hastened to say. \n\nAs a much-needed explanation for her, I quickly pointed at the photo hanging over the bar: \"That's me. Last year. And Tom here won't let me forget about it. It's embarrassing, actually.\" \n\nShe looked at the photo, which showed me posing in front of the pool table with a cue and a small golden trophy, smiling goofily. She relaxed instantly, realising she was not the celebrity Tom was talking about. In fact, he probably genuinely did not recognise her - he was not into mainstream movies or celebrities. Classic case of living under a rock, that one. \n\n\"Pool champion, hey?\" She said now, citing the little home-made plaque underneath the photo. She grinned and looked at me with renewed interest. \n\n\"Of the whole pub?\" She waved jokingly at the empty seats around us. \n\nI laughed, but Tom answered earnestly: \"There were thirty very serious contenders from the whole region, and she beat them all. We are all very proud of her.\" \n\n\"Well, consider me impressed...\" She smiled at me warmly and made me weak at the knees with the sheer thought of her being impressed with me. \n\nI felt myself getting shy and I had to change the topic. I asked her what she wanted to drink and, as requested, ordered beers for both of us. While Tom poured them, I asked him if the pool room was open tonight. This was a small room in the back that could be closed off from the rest of the pub. Tom was serious about his pool table and did not want any drunkard to be able to abuse it. \n\n\"I closed the doors, but you guys are more than welcome to go in there if you want. Anything for our champion!\" He laughed, knowing he was embarrassing me again. \n\nI thanked him and we grabbed our beers. I led her to the pool room. I didn't intend to play tonight, but it was perfectly private. I just hoped she wouldn't freak out when I shut the doors behind us. Maybe that would be too much; too serial-killer isolating a victim? Maybe I should just leave them slightly ajar? I had never been this preoccupied with the position of a door before and I told myself to stop worrying about it. \n\n\"Oh, this is so cute,\" she said as we entered the little space. There were only three small two-person tables to the one slide and the pool table centre-stage. \n\nLook at you, finding this perfect little quiet nook. You have no clue how grateful I am about that. I can't even remember the last time I've been inside a pub. Or the last time I've had a beer. My PT would have a thing or two to say about this. But she doesn't need to know. I deserve this! I deserve to just let go a little and enjoy myself, just like everyone else! \n\nWe took off our coats and sat down at one of the tables. \n\n\"I like your shirt,\" she said with a smile. \n\nI tried to glance down inconspicuously, a bit embarrassed that I had no idea which shirt I had thrown on. It was the one with the dinosaur and the equation 'velociraptor = distanceraptor / timeraptor'. I grinned apologetically, not sure what I was apologising for. \n\nObviously much more mature than me in her clothing choices, she was wearing a simple loose-fitting button-down shirt, which, I was pleased to see, showed just a hint of cleavage. ",
        "\"I like yours,\" I replied, trying my best not to look at her breasts and imply anything dirty. I think I succeeded. \n\nShe nodded towards the pool table. \"Does this mean you are going to demonstrate your skills then?\" \n\n\"Definitely not! I mean, I would, but you're clearly already in awe with my celebrity status and I don't want to overwhelm you.\" \n\nShe laughed wholeheartedly. \"You are very right. It's probably for the best then. Wouldn't want me losing myself now, would we?\" She smiled and narrowed her eyes at the last statement, almost as if challenging me to make her lose herself. \n\nWhy did I say that? Did I just flirt with you? What's gotten into me? That's what you get when you don't get laid for a while. My friends were right: it messes with the mind! \n\nI do like a bit of flirting, and it seems you do too, but I'm just going to give you the wrong idea here. I've got to stop doing that. Keep it casual... \n\nMy heart skipped a beat at her daring comment and I struggled to find a witty reply. I hadn't expected this. She saved me by raising her glass. I met it with mine, making a point of looking into her eyes as we toasted. \n\nShe then surprised me by saying my full name - slowly, deliberately, as if she was trying it out to see if it was a good fit. How did she know my name? I knew I hadn't told her. \n\nShe laughed at my puzzled expression. \"It was on the plaque, champion.\" \n\nAh yes, of course, the stupid plaque. She had certainly studied that well in the split second she'd looked at it. \n\n\"Good thing it was, too. I wasn't sure you were ever going to tell me. I mean, you bought me an apple, but I didn't even know your name,\" she continued with a smile, as if this was a most normal scenario in which we had failed to act according to common decency. \n\n\"Look who's talking, I still don't know yours either! It must be a state secret or something,\" I countered indignantly.\" \n\nThis was a deciding moment. Would she tell me the truth? Would she come up with a credible alias? Or would she call me on my act? She looked at me inquisitively, searching for deceit. \n\nYou're right, and you really don't know who I am; I believe that now. Incredible but true. I guess I was right in thinking that it would pay off to move out to the sticks. \n\nSo you won't have any prejudices or assumptions about me because of what you've read or seen. You might actually give me a chance to let you get to know me, like normal people! \n\nI wish I could meet a guy who's like you, who has no idea who I am... Really start from scratch. Wait, now I'm comparing this to a date again! \n\nI watched her sip her beer and disappear into her thoughts again for a moment. It was incredibly attractive. Along all her outward confidence, she seemed to take plenty of time for reflection and inner dialogue. Of course, it was an unusual moment for reflection - a simple question that shouldn't require too much thought - but I understood her concern. \n\nShe seemed satisfied with her internal enquiry and told me her name. Her real one, although only her first name. I felt honoured in a way that she trusted me, immediately followed by a surge of guilt for lying to her. I just hoped she would understand my reasons and let me make it up to her. If we ever made it that far. \n\nOur conversation moved on to jobs. Cover the bases first; not very exciting but necessary nonetheless. I told her I was a software developer. She seemed genuinely interested and asked insightful questions. Not just a pretty face, this one. But then again, I already knew that. I asked her what she did. This was understandably too close for comfort and after a moment's hesitation, she told me she was a journalist for a local newspaper. This was a role she had played recently, I knew. Clever choice; that shouldn't be too difficult to keep up. \n\nConversation flowed easily and, although I was doing my best to be funny and charming, I didn't really flirt with her. I was sure that by now she knew I was into her, but I did not openly try to get anywhere with her. This easy-going atmosphere seemed to relax her, as if it was a relief to just have a chat without having to dodge ill-timed come-ons. As a result, neither of us were ready to call it a night by the time we depleted our beers. \n\nThis is so lovely. Just nice, friendly banter, without having to worry about everything I say being eaten up, regurgitated, and spat out again for the tabloids to gobble up. This is just what I needed! You seem to have understood that it's not going anywhere else too. At least I don't need to worry about leading you on anymore. \n\nAlthough I do kind of miss your cheeky flirtations a bit. Typical woman, hey, thinking one thing but meaning another! Or maybe that's just the beer talking. \n\nSpeaking of which, I would really like some more of that. And I really wouldn't mind spending a bit more time with you either. \n\n\"One more?\" She asked, looking pensively into her empty glass. \n\nI considered it a very good sign that she wanted to stay. She hesitated when she remembered she'd driven her car here. I was really hoping she wouldn't need to drive again until the morning at the earliest. But I could not tell her that yet. I would not want to spoil the ending. \n\nI still have to drive home. Damn it! I guess I could stay and drink something else. But this beer tastes so good right now; I want more. I should be able to stay and maybe get just a little bit pickled; who knows when I'll get another chance to do this again! \n\nI guess I could call for someone to come pick me up, but I don't want to have to deal with the judging and the assumptions. How do other people do it, having a spontaneous drink or two? Oh wait, maybe a taxi...? If it's dark enough so they won't recognise me. That could work... \n\n\"I guess I could leave my car and take a taxi,\" she concluded. \n\nGreat idea. Even though I hoped it wouldn't come to that, having that thought in place would allow us to have another beer without any further alcohol or time constraints. So I was more than happy to support it. \n\n\"Yeah sure, why not? Your car is parked in a very safe street anyway. It will be perfectly fine,\" I assured her. \n\n\"Okay, let's do it!\" \n\nShe seemed genuinely excited about the prospect, which in turn made me feel on top of the world. I offered to go get the beers, which she happily accepted. No doubt she was grateful for any opportunity to stay anonymous in the little hideaway I had created for us. \n\n\"So, who's the gorgeous blond MILF?\" Tom asked me, subtle as always, as I got to the bar. \n\n\"I just picked her up in the supermarket,\" I said matter-of-factly. I felt a little sensitive about the MILF comment, but he was technically right so I decided not to pursue the matter. I plonked the empty glasses down. \"Two more, please.\" \n\nTom whistled between his teeth appreciatively as he started pouring the drinks. \"We all pale in comparison to your skills with women... She really is quite the looker.\" I had to smile at the understatement. You have no idea, Tom, you have no idea. \n\nWhen I came back into the pool room, my companion was standing by the cue rack. She had a cue in her hand and was scrutinising the tip. She looked up as I entered. \n\n\"So, champ, what do you say to a quick game of eight ball? I'd really like to see the legend in action.\" \n\n\"Oh, I don't know. Tom is very touchy about having beginners on his competition table...,\" I challenged her brazenly. \n\nThere you are; cheeky is back! Beginner, tsss! Although, it has been a while... I haven't played since we moved out of the country house a few years ago. I remember how upset my dear ex-husband was when his pool table didn't fit in the apartment, with the space needed for the kids and all... He was always selfish like that. It's about time I made some new pool memories. \n\n\"Who are you calling a beginner? I have probably played more pool in my life than you, young Padawan.\" \n\n\"Alright, alright, challenge accepted. If you really think you can handle it. Just keep the idolising to a minimum, okay?\" \n\nShe laughed her rich laugh and I vowed there and then to make her laugh as often as I could. I had fallen in love with that laugh. \n\nI arranged the balls and took the break shot. I immediately pocketed two easily positioned balls and continued to position another one to set up the rest of my game. No need to finish her off too quickly. I liked to take my time. \n\nShe stepped up to the table and studied the layout. She chose unexpectedly, but I could see her intention. It was going to be a difficult shot but if she could make it, she could pocket two at the same time. Now we'd see what she was really worth. \n\nAs she leaned forward on the opposite site of the table, I realised that playing pool had been a great idea, for unsuspected reasons. Her loose-fitting shirt fell away from her chest and I had a great view of her cleavage, only partly obscured by her head and hair. I knew I was being purvy but I couldn't help but think that this was going to be amazing. \n\nI watched her face as she concentrated, her beautiful blue eyes fixed on the ball. She took her shot and, amazingly, managed to pocket both balls. She wasn't kidding about not being a beginner. Any thoughts I had of teaching her the fine intricacies of cue control, by leaning into her and guiding her movements with my arms around her, quickly dissipated. \n\nShe grinned smugly and pocketed two further balls. In the process, she ruined my perfect set-up for my next shot, putting her solidly in the lead. \n\nTake that, champ! Calling me a beginner... You may be the best out here in the burbs, but you haven't played with the big boys and girls yet. \n\n\"Okay, miss hidden talent. I see what you're doing there. But don't get ahead of yourself, I can fix this.\" \n\nShe grinned and nudged her chin at me. \"Hit me with your best shot then, champ.\" \n\nShe was definitely asking for it - it was time to put her in her place. And maybe impress her in the process; that would be a bonus. I would have happily let her win, and I did not care at all about honouring my champion status, but I had a feeling that a bit of friendly competition could help my chances for tonight. \n\nI studied the table and planned my moves. I went to work, expertly determining my lines and executing them with perfect aim and force. After three relatively easy scores, it was time to really show her who was boss. I glanced over to see if she was paying attention, finding myself petty for needing her admiration. \n\nShe was, standing on the other side of the table, smiling cockily at the impossibility of my next shot. \n\n\"Ran out of luck, champ?\" \n\n\"Not even a little bit. Watch and learn, baby.\" \n\nThe 'baby' had slipped out before I knew it. It was more of a movie quote kind of expression than an endearment, although I wasn't sure she would see it the same way. I didn't dare look at her reaction, and pretended nothing had happened by focusing on my shot. \n\nBaby, hah? Are we going there? And now look at you, all shy about it afterwards. That's adorable. What happened to the confident philanderer who was making advances earlier? Don't get coy on me now, cheeky. \n\nThe cue ball bounced off two sides before hitting and pocketing my first ball and continuing to hit a second, the final ball in my suit, which also found its final destination. It was showy but effective. The eight ball was an easy shot. I could finish this game right now without any issues. My turn to grin at her. \n\n\"Did you want to have another go, or shall I save you the trouble?\" \n\nWow, that was impressive! I should introduce you to my ex-husband. You could tone down that smug arrogance of his. \n\n\"How did you do that?!\" \n\n\"It's just mathematics... I've always liked maths.\" \n\nOf course you have. You're one of those brainiacs, aren't you? With your maths and your programming. But you're so modest about it. You're so young and yet so confident and comfortable with who you are. No pretending, no over-doing it. I like that. I really need more people like you in my life. I could really do with people doing a lot less talking and more showing; that they're clever, that they're good at what they do, or even that they're a good person. \n\nAnd god, I do love a good brain on someone who's not going to rub it in your face. Intelligence is just so damn attractive... If only you were a guy! Or I was into women... \n\nI caught her staring at me, momentarily lost in thought. She recovered quickly when our eyes met. \n\n\"Well, go on! Finish it then, smarty-pants. You have officially humbled and impressed me.\" \n\n\"I live to please.\" I smiled and winked at her. It was stronger than me and felt so completely natural and apt in that moment that it crumbled my resolution to avoid overt flirting. I decided that it didn't matter - it was probably just about time to turn up my game anyway. \n\nAh, back to flirting, are we? Well, I must say I did miss it a bit. You live to please? I very much doubt that; you don't seem like much of a pleaser. At least, not in the kiss ass kind of way. Thank god! \n\nAlthough it does please me to be here with you. It pleases me greatly, actually. I'm so glad I came out. This was really unexpected, but you are such an interesting person: funny, smart, down-to-earth... And cute. Gorgeous eyes... I like the way they look at me... \n\nOh god, here I go again! Look at me how, exactly? Like you want to get somewhere with me? I shouldn't be liking that. But you're flirting with me, and it's putting weird thoughts in my mind. This beer is clearly going to my head. \n\nI called the pocket and quickly pocketed the eight ball. \"Good game,\" I told her, meaning it. I regretted finishing it so quickly, as I wanted to see more of what she could do. \n\nIt was a good game. Although you were clearly holding back. Didn't want to crush me too quickly, did you? Spare my self-esteem? Well, I appreciate that. There's certainly a lot I can learn from you. I'm sure you'd be a much better teacher than my ex-husband; perhaps you could show me a thing or two? \n\nAbout pool or otherwise... I imagine there's a lot more you're much better at than my ex-husband... Oh my god! Stop! Now! Filthy, sex-deprived mind! Pool... let's focus on pool! \n\n\"Congratulations, champ! Rematch?\" She proposed. \"Maybe you can give me some pointers along the way?\" \n\nThoughts rushed back in of wrapping my arms around her to teach her like they did in the movies. Of course I'd be happy to give her some pointers. \n\nShe started the next game, expertly taking the break shot and pocketing a first ball. I hang back, leaving my beer on the table behind her as a convenient excuse. I watched her backside as she leaned forward over the table, and appreciated its firm, round shape. I wondered if it would feel as good as it looked. \n\nAfter her first shot, she stood up and looked back over her shoulder. My eyes snapped up to her face but, judging by her amused smirk, I had been too slow. \n\nAnd now you're just openly staring at my ass?! You've clearly found your nerve again. Lord, help me... \n\nWeird, it doesn't even bother me, coming from you. In fact, stare all you want, you little perv. I have a great ass. Like what you see? \n\nIf she minded my transgression, she didn't show it. She leaned forward again in front of me, almost as if she was inviting my admiration. She took another shot and pocketed another ball. \n\n\"You know, I'm glad you convinced me to come out. I don't do this much, but this is the most fun I've had in a while,\" she said as she stood up and turned towards me. \n\nShe had actually convinced herself to come along, but I let that one slide. \"I'm glad you came too. You're very good company... Usually it's just me talking to myself at the bar... or beating myself at pool.\" \n\nShe laughed loudly. \"I don't believe that for one second. You must get plenty of attention from the ladies.\" \n\nYou seem like quite the player. You're obviously a catch, and a strong persuader... Am I just another notch on your guitar? You wouldn't even understand that reference; you were probably born when that song came out! Oh, what am I doing here? You're obviously way too young for me, if nothing else... \n\nI really hope I'm not just another conquest - I thought those days were behind me. And I have no clue why you'd even go for an old tart like me. I know I'm lucky enough to still have some of my looks - god knows I work hard enough for them - but I'm not tight and smooth like girls your age. I couldn't compete with that, even if I wanted to. You'd be disappointed if you got to unwrap this package. Not that you will, of course... \n\nIt sounded like a casual comment, but there was a slight underlying tension in it, barely noticeable. It was an obvious compliment and possibly even a flirtation. Moreover, she wanted to know if I did indeed get a lot of attention. That appeared to matter to her, much as she tried to hide it. Perhaps it even made her feel a bit jealous? She was right in her assumption, although the girls that flocked to me didn't interest me in the least. \n\n\"Nothing worth pursuing,\" I told her honestly. \n\n\"You're single then?\" She ventured, again trying in vain to sound casual. \n\nI can't believe I only just thought about that. You may be happily hitting on me while you have a partner waiting at home. Speaking of deal-breakers! \n\nBut wait, what I am saying? No deals to be made or broken here... This isn't anything more than a bit of harmless flirting and having a good time. It would still make you a pretty awful person though, to be acting this way behind your partner's back. \n\nShe was doing a decent job at faking nonchalance, but this was not a movie set and she hadn't taken the time to get into her role of the merely casually interested stranger. It showed to my trained eye, that sparkle of hope she couldn't hide. Hope that she herself might not even realise was there. I marvelled at how the tables had turned. \n\nI dawned on me that it was strange that we'd only now reached this topic of conversation. It had been such a gradual transition from just having a drink and having some fun, to getting a bit more flirty and starting to see the potential for more. Although it still seemed very faint from her side, I had seen a slight shift in her. Where my relationship status didn't matter - at least to her - in the early stages of our encounter, it had suddenly become a relevant consideration. \n\n\"Yes, ma'am,\" I confirmed quickly; a stellar performance in composure. If this had been award night and we'd both been nominees, I would have wiped the floor with her. \n\nAh, thank god! I assumed as much, but it's good to hear it, I guess... Just to know that you're not that type of person. It doesn't really matter to what we're doing here, but it still feels like a huge relief, somehow. I don't know why... Why am I glad that you're single, what's it to me? \n\n\"What about you?\" I spared her a reaction to my admission and instead returned her ill-concealed curiosity with some even more open interest of my own. My eyes found hers and I held her gaze. Would she tell me the truth? \n\n\"I am divorced. We separated 8 months ago,\" she said honestly, and quickly added the important part the tabloids hadn't been able to tell me: \"I'm not currently seeing anyone.\" \n\n\"I'm sorry to hear that.\" \n\n\"That I'm not seeing anyone?\" She raised her eyebrows and grinned. \n\n\"Not so much. About the divorce, I meant.\" \n\nBut you are glad I'm not seeing anyone? Because I think I am right now... Somehow, this is starting to feel like something I should not be doing if I were seeing someone; if either of us were seeing someone. Like it just got a bit less innocent... How did we get here? What's going on? ",
        "I think I kinda like it... I think I like you... Maybe even in more than the \"you're a nice person\" kind of way? If I didn't know any better I'd think I was starting to feel attracted to you. \n\nBut that's crazy. I didn't think I could feel that way about another woman! I've never had that before! This is certainly an interesting - if somewhat terrifying - development... \n\n\"Thank you. It hasn't been easy, but I finally feel like there's good things on the horizon again, you know?\" She smiled, directing her piercing blue eyes directly at my soul. \n\nI indeed knew about those good things, for sure I knew. I smiled back at her, feeling my knees go weak once again, and my self-control crumble. We stood there for what felt like a lifetime - smiling at each other and not knowing what to say. \n\nWas that too much? Too gooey? At least it was open to interpretation, wasn't it? I didn't profess my undying love for you or anything! I just wanted to flirt back a little, let you know that I'm okay with that. Oh, I don't know how to play this! I'm too old for this shit. God, where is this going? Am I up for this? What are we supposed to do now? \n\nMy mind was racing. Should I kiss her? Was it too soon? She meant me when she talked about good things, right? I had never felt this insecure around a woman before. I tentatively took a small step in her direction while holding her gaze, testing the waters. \n\nSuddenly, Tom popped his head round the door. \"Any more drinks for you guys? It's last calls, I'm afraid.\" \n\nOh, does this guy just have the worst timing, or what? Read the room, man... You were about to make a move, weren't you? And I think I would have let you... You felt the same, didn't you? You understood my hint. What were you going to do with it? I can't believe he ruined it! \n\nWe snapped out of our moment and quickly consulted each other about the mundane question posed by Tom, all tension from before quickly dissipating. We still had a game of pool to finish and we both seemed equally reluctant to end our time together. We ordered a final round, which Tom said he'd bring right over. \n\nWell, that moment is ruined. Back to the drawing board, I guess. I'm still not sure where I want this to go, although I think I've seen now where you want this to go... The thought of that... It's so scary. But so exciting at the same time. \n\nOh man, I'm getting all flustered here! Could I really go through with it? With another woman; with you? I really don't know! I do know that I enjoy your company... a lot. Especially when you're flirting with me. Can we just keep doing that? At least for now? \n\n\"Hey slacker, you were going to give me some pointers.\" She directed my attention to the pool table: \"So, how would you take this shot?\" \n\nI quickly surveyed the layout, jumping on the chance to restore our enjoyable time together; the time before it got slightly awkward. The position of the balls wasn't straightforward, but not nearly as complicated as the shot she'd aced earlier. I was sure she knew what to do here. She was baiting me, giving me a chance to show off. I was obviously going to let her, but I would rope her into this. She wanted some pointers? She would have them. \n\n\"Well... If you look at your angles... Come here.\" I leaned toward the table and gestured for her to join me. She came over but was too far away - for what I wanted her to see, and also to my liking in general. \n\nI gently laid my hand on her waist and guided her a fraction closer. Our hips touched briefly, and I felt her lean into me ever so slightly to maintain the connection. I left my hand where it was and enjoyed the feeling of our first prolonged physical contact. Her face was inches away from mine and I could hear her breath catch. \n\nHow very smooth... I guess I kinda asked for that. You're onto me, aren't you? You know I'm starting to enjoy this more than I should. I didn't quite expect this level of initiative, but I'm glad to see you haven't lost your nerve after that rude interruption. This is nice though... Hmmm, and you smell nice too. \n\nHer proximity was causing my head to spin and my heart to race. I took a deep breath to still the free-fall sensations. This was one of those cheesy movie lessons without any real educational value. My pool friends would have laughed at the obviousness of my tactic here. But what did they know? I suddenly wondered if Patrick Swayze felt this turned on when he did his pottery with Demi Moore. \n\n\"So when you look along your ball, you can see that your angle is off for hitting that one,\" I forced myself to continue, holding the cue along the table with my free hand. \n\n\"Uh-uh...\" she murmured. \n\nI don't really care about my angles or this ball, but if that's what you need to stay here... Just keep talking. And definitely keep holding me. \n\nLook at me; you put one hand on my waist and I'm a puddle at your feet... Seriously... \n\n\"Alright then, here you are: two beers,\" Tom burst our bubble, once more, with his impeccable timing. \n\nAs a reflex, we shot away from each other at the sound of his voice. He grinned sleazily. \"Hey, don't let me interrupt anything.\" \n\nToo late, dude. I glared at him, I couldn't help it. Tom left, glancing back with that dirty grin still on his face and demonstratively closing the doors behind him. He didn't understand the delicate nature of the situation, but I could smack him for his insensitivity. I was pleased to see similar emotions of disappointment colouring her face, but she also seemed a bit shocked. The truth was that the moment had once again passed, and a shadow of doubt now crept over her face. \n\nWhat am I doing; throwing myself at some young thing in the local pub?! And a girl, for that matter! Out in the open, for all the world to see. What's wrong with me? \n\nThat bartender could be anyone. He could tell anyone what he just saw. It could be all over the internet tomorrow! We weren't doing anything, really. Thank god! But what did it look like to him? Guys and their imaginations... He could say anything and people would believe it. I really should be more careful! \n\nNot sure how to reestablish connection, I took a sip of my beer. She followed my lead, smiled nervously and avoided my eyes. She seemed a lot more skittish all of a sudden, and I didn't know how to reassure her. \n\n\"So about that shot...,\" I tried. \n\nShe seemed relieved for a practical topic of conversation, although I noticed she kept her distance. \n\n\"You were saying my angles are wrong. I'm not sure how I feel about that.\" We both laughed at her slightly forced attempt to lighten the mood. \n\n\"Only on the table,\" I assured her with a smile, \"you are perfectly fine otherwise... More than fine, actually.\" I muttered the last part under my breath. \n\nWhat did you say there? I'm more than fine? Well, so are you. You are charming and lovely and beautiful. And I wish we could go back to where we were a moment ago, but I just can't risk it. I wish I could explain that to you. I wish there was a way to do that without telling you who I am. Because if I did that, if I told you who I am, I'm sure nothing would be the same anymore... \n\nIf she heard me, she chose to ignore me, so I was forced to return to the topic of pool. \n\n\"So, what I would do in this situation is either use my other hand or take it from behind,\" I continued after a moment of silence from both of us. \n\nAs soon as the words left my mouth, I was aware of how they sounded. She tried to keep a straight face for a moment, but when my cheeks started flushing, she burst out laughing. \n\n\"I bet you would!\" She was inconsolable. I had to laugh too, enjoying seeing her more relaxed and happier again. \n\n\"Oh my god, that came out so wrong...,\" I said, mortified. \n\nHell of a way to lighten the mood! You couldn't have done that better if you had tried. Talking of a Freudian slip... I hope you don't expect me to let this one slide; not to tease you mercilessly? \n\n\"Are you more partial to the one than to the other? Any preferred order of events?\" \n\n\"Oh shut up!\" We were both still laughing uncontrollably. \n\n\"Come on, don't leave me hanging. Are you quite ambidextrous then?\" She giggled, wiping the tears from her eyes. \n\n\"You bet I am! If you're lucky I'll show you.\" That slipped out before I could stop myself and I held my breath for her reaction. Did I mess up? Give away too much of my hopes for tonight? \n\nYou'll show me? We're both not talking pool here, are we? I can imagine you could do amazing things with those hands... Things no one has done to me since my ex-husband... Or, actually, things even he didn't do to me... I haven't been in the mood for any of that for so long. Until now... \n\nIs it warm in here all of a sudden? I'm so hot! What are you doing to me? You're dragging me down into the gutter with you! \n\n\"Only if you'll show me how you take it from behind too.\" She smiled naughtily, and her face showed an underlying intensity. \n\nOh god, why did I have to say that?! I'm just merrily digging my own grave here. How can I expect us to be civil if I say things like this? I'm enjoying playing this game with you too much! \n\nI was dumbstruck. I wanted to make a comment about taking her from behind, because that was obviously where my mind was going. That would be too crude though, especially since moments ago she had looked ready to pull out completely. I decided to play it safe. I didn't say anything and positioned myself on the edge of the table, trying not to blush. \n\n\"Watch and learn, baby?\" She shot my careless comment from earlier back at me, placing slightly more emphasis on the last word. \n\n\"Indeed.\" I held the cue behind my back and gently took the shot. The ball found the pocket and I gave her a smug look. \n\n\"Just like that... baby.\" I emphasised the last word, as she had, showing her that it didn't embarrass me anymore. It wasn't my favourite term of endearment - in fact, I disliked it - but it served its purpose. \n\nNo longer coy about that one, are you? Glad to see that. Your cocksure swagger is strangely appealing; sexy as hell, actually. I'll have to put you in your place, though. \n\n\"I'm not your baby... But thank you for showing me.\" She flashed another devilish grin at me. \n\nI was completely lost. She had me wrapped around her finger. I wanted to show her a whole lot more and she was luring me mercilessly. I rearranged the balls - this game had turned into a training exercise and a deliciously slippery slope leading straight to the gutter. \n\n\"Your turn.\" I tapped the edge of table right next to me. \"Come sit here.\" \n\nShe complied but was careful to keep some space between us as she sat down. She'd been keeping a safe physical distance ever since Tom had left. I stood in front of her and gently touched her hips. \"Scooch your left hip up a bit so that you can turn more easily.\" \n\nOh, this is dangerous. What if mister busybody comes in again? I want you to touch me, I really do, but I can't risk him blabbing if he sees us. At least if we're just talking, there isn't much to see... Can we just talk, and be as dirty as we want? \n\nSeeing the nervous tension returning to her face the moment I touched her, I let go of her hips after she'd positioned herself. She moved the cue behind her back and held it there awkwardly. \n\n\"Like this?\" \n\n\"Relax your shoulders.\" I put my hands on her bunched-up shoulders and felt her relax them. Her eyes flitted towards the door. It was still closed. \n\nWas she worried about people seeing us? The only one who'd even noticed us was Tom - was she worried about him? I wished I could reassure her that Tom had no clue who she was, and he was certainly not going to gossip to anyone. But I couldn't do that because supposedly I had no clue who she was either. This was the predicament I had created for myself. I still felt this had been the right decision; giving myself a chance by sidestepping the prejudices she would undoubtedly - and understandably - have against admirers. It did, however, present its challenges. \n\nSeeing her discomfort, I decided to abandon the physical contact for now and return to verbal innuendo. She had seemed to enjoy that, even after the Tom incident. \n\n\"Now, when... uh... taking your shot from behind, you want to make sure that you're being super gentle. You'll notice that you have to be a lot better at controlling your movements to not overdo it. Just imagine the amount of force an instrument of this length could impart to the... uh... target.\" \n\n\"Right...\" She succeeded in keeping a straight face - only the slightest twinkle in her eye giving away her amusement. \n\nYou do like a bit of double meaning, don't you? Did you just read my mind about talking dirty? You're so good at it; that was brilliant... So innocent, yet so salacious. Tantalisingly salacious. Two can play this game, though... \n\n\"So how did you learn to control such a... considerable length so well? You seem to be very good at... hitting your target just right; from behind and otherwise.\" She looked up at me with large innocent eyes. \n\nLittle minx! I had clearly met my match. She didn't want me to touch her, but her words were all over me. It was a delicious form of torture. It would be so easy to push her back onto the table, get on top of her and... It took all my self-control not to do exactly that - or even to keep my brain from going any further there. I was struggling enough as it was. \n\n\"It takes a lot of practice,\" I said simply, trying to control the strain in my voice. \n\n\"With many different targets?\" Still those innocent eyes. She was ruthless, and in serious danger of me losing myself and letting her feel just how well I could reach my targets. \n\n\"All we need to focus on right now is your target,\" I spoke to her sternly, realising a fraction too late what I was insinuating. \n\nShe was clearly even better at this than me. This was a new experience for me, and it was seriously alluring. She snickered, unable to maintain her serious face. \n\nSo we're both focusing on my... target... now, are we? I bet you'd like that! The thought of you going anywhere near it is getting me all hot again. You really do know how to push my buttons. You certainly found the horniness dial. I thought that one had rusted solidly in place a while ago. I guess you found the key to lubrication... \n\nShe took the shot. Her aim was good but the cue ball barely moved and the ball she was aiming for remained untouched. \n\n\"That was good, but just a little bit too gentle. You didn't even reach your target there. Try again, a bit harder.\" \n\nSo, do you like it hard? Or are you a gentle kind of person? How do you even do that with another woman? \n\nOh man, this is getting too much. I'm soaking here... I can't help thinking about these things! You make it way too easy. Focus! We're just playing pool here. Yeah, right... \n\nShe shuffled forward slightly to reposition herself and took another shot. This time the cue ball cannonballed into the other one and knocked it right off the table. \n\n\"Remember what I said about being gentle? That was too hard.\" I went to pick up the ball. \n\n\"Oh, was it?\" She asked innocently. \n\n\"It's not meant to end up on the floor, you know.\" \n\n\"I find that sometimes it's not a bad thing to end up on the floor... I figured the... target... would be a bit warmed up by now.\" \n\nI was flummoxed. She was hitting me left, right, and centre with her insinuations, her words dripping with barely contained lust. How on earth did she expect me to keep it together? I just stared at her, lost for words, while she grinned maliciously. \n\nA bit tongue-tied, are you? Am I beating you at your own game? Getting you a bit worked up? Luckily you're not a guy, hah? You're still not hiding it very well, though... \n\nFrom the corner of my eyes I saw the lights being switched off behind the frosted glass in the doors that separated us from the rest of the pub. She'd seen it too. The spell was broken. Sadly, we had to return to reality. Although, I felt that if it had lasted a moment longer, we'd both been at risk of shattering the physical contact boundary she'd put in place. \n\n\"I think Tom's locking up. I hope he remembered we're still here,\" I said. \n\n\"He probably doesn't want to come in because he's worried we'll be making out on the table.\" \n\nGood to know her head was definitely in the same place as mine. It was the most direct comment about our situation either of us had made all night. It was quite refreshing after so much doublespeak. \n\n\"I think he would definitely come in if he thought that,\" I mumbled. Tom was a good guy and I wanted to give him the benefit of the doubt, but I wasn't sure he would be able to resist that temptation. \"Let's get out of here so that he can go home.\" \n\nWe put on our coats and left the room. Tom was still washing glasses behind the bar, although they looked pretty clean already. I got the impression he had been waiting for us for a while, but had indeed not wanted to interrupt again. I felt grateful for that. \n\nWe settled our bill, and said goodnight to him. He quickly gave me the thumbs-up behind her back and mouthed: \"Good luck\". I rolled my eyes at him. I didn't need any luck; I was not going to screw this up. \n\n* * * * * \n\n\"Well, this was great... I really had a nice time,\" she kicked off as we stood in front of the closed pub. \n\nIt was that time of night where we'd either decide to awkwardly say goodnight - abruptly ending all build-up in an anti-climax - or to continue the night in one shape or another. \n\nOf course, I had some ideas about this. She had certainly given me the impression that she would be partial to my ideas. However, standing in the chilly night air, the hot and keen atmosphere from inside seemed like a distant memory. \n\nIt was funny how a sudden change of scene could do that; making a continuation of passion from one act to the next seem as impossible as touching the bright full moon that was beaming down at us. If she'd been any other girl, I would have pinned her against the wall and kissed her. But she wasn't any girl. She was a lady, and one that should definitely not be seen snogging outside a suburban pub. \n\nI threw some ideas around in my head on how to continue. Should I take the lead? Invite her over? I didn't want to make it too easy for her. She had been teasing me mercilessly earlier. I felt that a bit of payback for her ruthlessness was in order. It would give me a chance to see where she really stood after distancing herself from the unexpected appetite that had come over us earlier. \n\n\"Yeah, me too. I'm glad we bumped into each other.\" \n\nWould she suggest anything? Had she been sufficiently enticed to throw her limiting beliefs overboard and try something new? \n\nWhy does this country bumpkin bar close so early? I was having such a good time! I'm not ready to go home yet. I don't want to say goodbye to you yet. Isn't there anywhere else we can go for a night cap? I guess everything closes early around here... I can't believe this is it... \n\n\"I guess I should get a taxi then...\" She started looking for her phone in her handbag; slowly, deliberately stalling. \"Where is the damn thing?\" \n\n\"You have so much stuff in there; no wonder you can't find it,\" I teased. \n\n\"Oh shut up. It's all absolutely essential.\" She rummaged some more. \n\n\"Why don't I call you a taxi? My phone is right here.\" I produced it promptly from the pocket of my jeans. \n\nYou really want me to leave now? I guess it was all play then; all about the hunt? I had half expected you to ask me to come home with you, the way we were at each other earlier. ",
        "But what would I have done if you had? I wouldn't have, I couldn't have... It was nice for the time being, the fun and games, but it's probably for the best. It should really end here. Where would it go, anyway? What was I expecting? Still, you dismiss me so easily... \n\nShe looked at me, disappointment clearly colouring her expression. It was interesting how acting could be so brilliant on screen or stage, yet so difficult in real life. I felt cruel for playing with her, but maintained my act a little longer. \n\n\"That would be great, thank you,\" she lied, not meeting my eyes. \n\nMixed emotions brought her face alive like brilliant yet disturbing painting. I suppressed the urge to hug her and tell her I was joking. \n\n\"Unless... Hey, I still have that bottle of wine I bought...\" I had thought about this as we were leaving the pub but I pretended it had only just occurred to me. Another brilliant performance, if I said so myself. \"Do you fancy a glass?\" \n\nWhat? Oh, right, from the supermarket. It feels like a lifetime ago that we were there! Do I want a glass? Hell yes! Because that means I get to stay and chat to you a bit longer... \n\nWait, what is going on with me? When did I get this desperate? Probably around the time I started feeling this attracted to you. What have you done to me? You make me feel like a teenager all over again. I do not really need to relive that time... \n\nAlthough I'd forgotten what this feels like; to be so into someone without even really know much about them, without really knowing why. \n\nShe was not very successful in hiding her enthusiasm for this idea. But she saw a snag: \"You didn't steal any glasses from the pub, did you?\" \n\n\"I half assumed you would have some in your massive handbag, since they are also essential.\" I wasn't planning on needing glasses here, but I was going along with her line of thought. \n\nShe pulled a sad face. \"I'm sorry to disappoint you. I do have an opener, though.\" She laughed and showed me a full-size corkscrew. \n\n\"Of course you do! Absolutely essential, that. Also good for self-defence, I guess. Don't let them see you with it. I'm not sure you're supposed to carry things like that.\" \n\n\"Well, sometimes after a long day on the set, you just need a little tipple to unwind. There's usually a bottle or two and some glasses floating around backstage,\" she said carelessly, clearing slipping out of character. \n\nI was shocked and tried to keep the surprise from my face. I had to rectify this, sweep it under the carpet somehow. \n\n\"Yeah, I can imagine. You must have really long days: rushing all over to collect your materials and then having to write it up after.\" \n\nIt was a feeble attempt to twist her comment but it was the best I could do on the spot. I hoped I had made it sound casual enough. \n\nShe looked at me, confused at first, immediately followed by a hint of panic. \n\nOh my god, what did I just say? I was talking about the set and backstage, wasn't I? That was stupid! I completely forgot that I'm pretending to be someone else here. \n\nThis is how at ease you make me feel. It's like I've known you forever and you just accept me for who I am. But that's only because you don't know who I am. I don't think you noticed my slip there, did you? God, I have to be more careful! \n\nShe recovered quickly: \"Yes, exactly!\" After a moment she added: \"So anyway... We could drink from the bottle?\" \n\nI could see it was said only half in jest. I was amazed by her determination. She clearly did not expect many people to walk past here at this time of night. Still, it could absolutely ruin her reputation to be seen here doing that. I was not planning on being the cause of a ruined reputation. \n\n\"On the sidewalk, in front of a closed pub? What a classy bird you are. I'm sure you were raised better than that.\" \n\nMy father would turn in his grave if he saw me behaving like a slutty teenager, desperately trying to stay here with you, whatever it takes. You're right: bad plan... \n\nShe laughed. \"Oh all right then, smart-ass, what's your suggestion?\" \n\nPlease say you have one. Please tell me you have another idea... Because I swear to god I will crack open this bottle and I will sit somewhere on a park bench with you all night, if that's what it takes. Talking of desperate measures... Get a grip, woman! \n\n\"We could just go to my house for a nightcap. I live just around the corner.\" \n\n\"You do?\" She clearly hadn't seen that one coming. She hesitated. \n\nWhat? That's an important detail to leave out! And an interesting option... But it wouldn't just be a nightcap, would it? So you are asking me to come home with you, after all... \n\nAm I really up for that? Having a drink was great, and, god, the flirting was amazing... You had me in quite the state earlier! But going home with you...? \n\nYou're essentially still a total stranger. I can't do that. I shouldn't. That's just not me. I've never done that before, especially with another woman! And besides that, it would be totally irresponsible. And at my age... What if someone found out? What if it leaks and ends up online? What if people read about it? Oh god, what if the kids read about it?! \n\nI could see her getting stressed out, so many questions going through her mind in that brief moment. It was important I gave her the time to reach her own decision, as much as I wanted to convince her she really should come along. I waited, casually sliding my hands in the pockets of my leather jacket. It was a bit too chilly to be standing out here, perhaps her sub-conscience would get the hint. \n\nOh my god, what do I do? Who would you even tell? How could this possibly leak if you have no clue who I am? This has just been such a roller-coaster! I didn't expect to be feeling this way. What does that even mean, that I'm feeling this way about you? \n\nI think I'm really into you. It's been so amazing all night and I could certainly do with some action. My body is craving it, you made sure of that. You awakened it; damn you! It's been so long... I can feel myself heating up again now, just thinking about it... \n\nAnd you are so great, and so hot... And I kinda want to see if you can put your money where your mouth is. I want... you... God, I really do! Oh, to hell with it. I deserve this! \n\n\"Oh, go on then, it beats standing on this street corner in the cold,\" she spoke at last, managing surprisingly well to sound casual this time. \n\nMy insides somersaulted but I tried to keep it cool. It had never mattered this much to me whether a woman came home with me or not. It wasn't just that I wanted to sleep with her. I genuinely liked getting to know her, and really enjoyed talking to her. I would hate it if she would walk away now and I would never see her again. So, next step, we just needed to make it to the house without her changing her mind. \n\nWe walked back to my street. Supposedly coincidentally, this was also the one where we'd left her car earlier. She only realised that as we were practically standing next to it. \n\n\"We're back at my car...,\" she said, suspicious and confused. \n\nI thought for a second and acted quickly: \"Wait a minute... You parked your car right outside my house? Are you stalking me or something?\" \n\nShe couldn't suppress a laugh and then stared at me, realisation dawning. \n\n\"You planned this, didn't you?\" She pretended to be upset. \n\nSo you have more tricks up your sleeve, sneaky! So cocksure, thinking I would naturally end up at your house... So you were playing me more than you let on? I'll give you the benefit of the doubt. I quite like your self-confidence... \n\n\"It's a safe street to leave your car,\" I grinned, enjoying the prolonged play and relieved that she wasn't genuinely perturbed by my little set-up. \n\n\"And so convenient for when you'd woo me and take me home later!\" She was struggling to keep up her pretence of being dismayed. She was a bit shocked, but clearly more amused than troubled. \n\n\"Woo you?\" I laughed, resisting the temptation to joke about her old-fashioned phrase. \"You were wooed by me?\" \n\n\"Of course I was! And it was all part of your plan from the moment you saw me, it appears.\" \n\nClearly, you made me think I was playing with you but meanwhile I was the one being played. I need to up my game and pay attention! Not that I mind your little master-plan... \n\n\"I may have set the scene a little bit.\" I winked at her. \n\nAs she opened her mouth indignantly, I turned away from her with a smile and walked towards my house. \"Are you coming?\" \n\nShe shook her head in disbelief and stood there for a moment, then followed and caught up with me as I reached the front door. She stepped between me and the door. \n\nOh god, this is really happening... I'm about to enter your house - and wherever that may lead. This is all so new... What if I don't know what to do? What if I'm not into it? This is nerve-racking! \n\n\"Wait... Erm... Just wait a minute...\" \n\nShe seemed suddenly unsure of herself, looking down, averting her eyes. She was standing so close to me now. The wind blew a strand of her hair into my face and I could smell a remnant of her shampoo: fruity, feminine. It took all I had not to kiss her. She had to be sure she wanted this first. \n\n\"What's wrong?\" I asked kindly, parking the cool routine for a moment. 'Please don't freak out on me now,' I couldn't help but think. \n\nShe touched the front of my jacket and let her fingers slide down the zipper absentmindedly. \n\n\"I... I've never done this before.\" \n\nShe looked into my eyes. I melted. She looked so fragile and sincere. Even this woman who was adored by most of the world's population clearly needed to be reassured every now and then. \n\n\"Gone home with someone?\" I knew it wasn't what she meant, but there really wasn't much of a difference and I wanted to lighten the mood. \n\nYou're going to make me say it, aren't you? You know full on well what I mean, and I think you suspected it all along. Regardless of how well I can flirt with you, you know I'm new to this. \n\nShe smiled, still shy. \"With a woman, I mean,\" she said in a small voice, again those beautiful eyes bore straight into me. \n\nHer experience in this area was limited to on-screen then; to what was, naturally, one of my favourite movies of hers. \n\n\"Wait, I didn't know that having a glass of wine with a woman was different than with a man! I don't know if I'm ready for this...\" I gave her a worried look, deliberately exaggerating the joke to lighten the situation. It worked: she laughed and playfully slapped my chest. \n\n\"No, I guess you're right: no difference at all... Asshole...\" She muttered the last word under her breath while shaking her head in disbelief. \n\nI can't believe you! You just completely undermined my super honest and personal confession with a joke... And yet, it makes me feel calmer already. We both know we're not really talking about having a glass of wine here, but maybe it also isn't as big a deal. \n\nI mean, I'm definitely attracted to you so, surely, I'll be into it... And I am a woman too, so I should be able to figure out what to do... Oh god, just stop thinking already! Wine! Let's just have some wine and see where we go from there... \n\nShe was still standing between me and the door, too close for this to look like a casual encounter, one hand still in touch with my jacket. While I did not mind her proximity in the least, we had to be careful. I glanced around quickly, there was no one in the street at the moment, but this could change. I would not want her to be all over the tabloids tomorrow because we got too cuddly at my front door. \n\n\"Let's get inside,\" I said gently, shifting her body slightly so I could get to the keyhole. \n\n* * * * * \n\nI took her coat and carefully put it on the coat rack; despite its plain nature, it looked rather expensive. I hung my worn-down leather jacket next to it. The two garments illustrated the two very distinct worlds we came from; their sleeves just touched, mirroring the fragile bridge we were building. \n\nShe followed me into the kitchen, which was just off the hallway. I thanked myself for tidying up before going out. I would have hated to receive her with dirty dishes stacked in my sink. \n\n\"Nice place. Do you live here on your own?\" She asked, still looking a little unsure of herself. \n\nI really should have asked that sooner! You may have some social media-happy house mates who can still turn this whole thing on its head. \n\n\"Yup, just me. More wine for us!\" I grinned casually, understanding why she had to ask. \n\nShe visibly relaxed and sauntered over to the fridge to peruse the collection of paraphernalia stuck to its door, while I opened the wine bottle and poured two glasses. \n\n\"Who's this then, your girlfriend?\" She looked over her shoulder at me and grinned cheekily. \n\nI walked over to her and handed her her glass. I positioned myself close to her, enjoying her proximity and pretending I needed to look at the picture to know who she was talking about. I didn't; I knew it was the one of me and Jordan being silly in a photo booth, her wild afro taking up most of the picture. This was an annual ritual to celebrate our friendship. \n\n\"I told you I don't have a girlfriend,\" I reprimanded her jokingly. \"That's my best friend. I once wished she was my girlfriend, but that was many years ago. We are not each other's types, romantically.\" I had no idea why I felt the need to share that with her, but it felt right to tell her a bit more about myself. \n\nShe looked at me interestedly, cocking her head slightly and studying me with her pale eyes. \"How long have you known you liked girls then?\" \n\n\"Oh, I've known since I was about 14. Falling in love with your best friend has its way of making such things clear very quickly.\" I paused and then added with a serious face: \"How long have you known?\" \n\nShe looked at me perplexed for a split-second and then burst out laughing. \"Oh, I don't know, 2 hours?!\" \n\nI don't even know that I like girls! But I like you... That's enough, isn't it? This - whatever this is - is almost certainly just a once off, because I've never met a girl like you, and I don't think I ever will again. \n\nI laughed with her, appreciating her honesty. I knew the time frame was chosen arbitrary but I couldn't help but think about what we were doing two hours ago. When had she realised she liked me? Had it started while we were playing pool? I thought I had sensed a slight change in her then. She had certainly picked up her innuendo after that. That was probably more bravado than anything, though. She was probably feeling quite insecure about this and I knew we had to do this at her pace. \n\nI suggested we made ourselves comfortable in the lounge and ushered her through. \"Make yourself at home.\" \n\nI put on a Spotify play-list of sixties through eighties music - my usual choice - and was greeted by The Beatles' singing \"When I'm Sixty-Four\". \n\nShe kicked off her shoes and curled up in the corner of my L-shaped sofa. Excellent choice, it was the best seat and my favourite place in the whole house. \n\nI watched her for a moment, looking so at home on my sofa. Powerful visions of lazy Sunday afternoons rushed into my head. She would sit right there with a glass of wine and a book, while I cooked us some dinner and rushed over with a spoon for her to taste my concoction, narrowly escaping a spill on the carpet. I would make something with leeks, which would remind us of how we met, and we would laugh about the randomness of our first encounter. \n\nIt looked blissful and appeared completely feasible but I knew it was nothing but a fantasy. Her world and mine were miles apart; we may as well be living on opposite ends of the planet. And this, her being with me, was just here and now. She would go back to her life of spotlights and red carpets, of stylists and interviews; a life I did not fit in. And I would have to go back to mine. \n\nA wave of melancholy hit me, as I realised how much I wanted this to be more than a one-night stand. This wasn't about the chase or the kill anymore; I actually liked her. She had swept me off my feet with her wit, her charm, and her warm personality. And yet I knew she took unobtainable to a whole new level. \n\n\"I love this song,\" she said, humming along quietly. \"I hope someone will be there for me when I'm 64.\" She laughed a little, as if she had amused herself. \n\nThat's not that far off... I only have about a decade and a half to get someone to love me that much. I better hurry up! \n\nI would, I thought; I would be there for you. Of course, I could not say that. I smiled defeatedly. \n\nShe patted the sofa next to her. \"Are you coming to sit down, or what?\" \n\nI sat down next to her and realised I had no clue how to go on from here. Usually I would just make a move, or the other woman would, but it felt like we had drifted into yet another uncharted territory. One where my compass was aimlessly spinning, disturbed and confused by an abnormal magnetic field. \n\nWe were now away from prying eyes and could technically jump each others' bones right-away, but we were in a mellow space of co-presence: perfectly relaxed, yet not in a hurry to go anywhere fast. It felt like we'd known each other for years and were just doing what we always did on a Friday night. I realised that, despite my still disregarded physical desire for her, I quite liked it. \n\nThis is perfect, just nice and relaxed. It's like you know that I need some time to get to terms with this. \n\nI like seeing you in your own house. It says a lot about you. You seem very tidy and you have good taste; lots of books, to keep your big brain occupied, no doubt. I really like what you've done with the place. I assume you've done it yourself, anyway. You probably don't have a decorator like me... \n\nYour sofa is very comfortable too, I can just imagine you lying on it: relaxing, watching TV, making out with girls? \n\nShe smiled at me and I saw a twinkle in her eyes, as if she just had a naughty thought. Whatever it was, she didn't share it and I just smiled back, a little unsure. \n\n\"So, do you bring a lot of girls here? To drink wine, I mean, of course,\" she asked a bit later, with that twinkle still there. \n\nShe was back on this topic then. Except now there seemed to be curiosity and intrigue in her expression, rather than insecurity and suspicion. \n\n\"No, I don't,\" I told her honestly, \"today's turn of events is quite the exception.\" \n\nSomehow it was important to me that she knew this. I knew I could come across as a player and often that worked to my advantage, but I wanted to set things straight with her: that wasn't who I was, really. On top of that, I valued my privacy and my home was my sanctuary. Somehow, it was too sacred to open up to any girl I picked up in a bar. \n\nI believe that... You seem much more than your cool charm. I bet you could bring another girl here every night if you wanted to, but you are more selective than that. That makes me feel quite special somehow, that I'm here, chosen by you. \n\nI guess I will have to be the one you make out with on this sofa then... \n\nShe seemed satisfied with that answer and playfully leaned into me. I stretched my arm across the back of the sofa. She interpreted my invitation as intended and curled up again me, swinging her knees round and leaning her folded legs onto my lap. \n\nI put my arm around her, resting my hand on her hip. I suppressed a happy sigh at the feeling of her in my arms. I still couldn't quite believe this was happening to me, and I felt my whole body jitter with excited anticipation of what could be next. Was this it? Was she ready? ",
        "She looked up at me with an intense, slightly nervous gaze. \n\nYou can kiss me now... Please kiss me. I'm afraid I'll lose my nerve if you don't do it now... \n\nI moved my head a fraction towards hers, testing the waters. She tilted her face up towards me, inviting me. I kissed her, feeling her soft lips lightly touching mine. \n\nHeat spread throughout my whole body and I felt the overwhelming urge to pin her down and rip her clothes off. The tension that had been building all night coursed through me, rushing back from where it had been laying dormant just below the surface. \n\nI suppressed the urge with will-power I never knew I possessed and broke contact. I waited, as if challenging her to a response; as if I wanted to see if she still could turn the tables with ease, as she'd done earlier. \n\nHer lips found mine again with an unprecedented eagerness. For a brief moment I considered all the famous lips she had kissed and wondered how mine compared. I had the distinct advantage that this wasn't a movie kiss - this was very much real. \n\nAs gentle as our first kiss had been, so full of passion and desire was the second. Our tongues found each other and I reciprocated by giving into my own desire; escaping from under her legs to lean over her and press her into the sofa. She stretched her legs past me and pulled me into her, my upper body now on top of hers. \n\nMy hands roamed through her hair and our lips remained locked in their embrace. I explored her slim waist, as she pulled me even closer. I felt her hips connecting with mine and was amazed by the powerful fluttering it caused in my belly. A small part of me still expected she would stop me at any moment. Instead, she tilted her hips slightly and pressed herself into me. \n\nGod, yes, I've needed this! I can't even remember why I thought it would be different with a girl. You got me so hot, just by kissing me! I'd forgotten what it feels like to get wet from a single touch. \n\n\"Did you want some more wine?\" I whispered in her ear, teasing her. \n\nI nodded my head towards her empty glass, sitting forlorn on the table; the victim of a last-minute script change. \n\n\"It was never about the wine for you,\" she sighed, as I caressed her ear lobe with my tongue. \n\n\"Guilty as charged.\" I grazed her neck with my lips and she tilted her head back in anticipation. \"The wine was just a prop.\" \n\n\"I don't believe it was about the wine for you either, though...,\" I whispered as I started kissing her neck. \n\n\"You're onto me. I'm a terrible actress.\" She laughed softly, as if to a private joke. \n\nI smiled too, her joke being less private than she thought. I trailed kisses down her neck and pushed open her shirt as I went lower towards her chest. \n\nHmmm, this is nice... I want to do this properly, though; not just a quicky on the sofa. I want you to show me every corner of your bedroom. I'm ready... \n\n\"Take me to bed,\" she said, her hands gripping a few of my dreads. \n\nI stopped kissing her and looked at her with surprise at her confident decisiveness. \n\nWithout saying a word, I got up, grabbed her hand and pulled her along, up the stairs and into my bedroom. We left Journey behind, urging us from the speakers not to stop believing. They didn't have to tell me twice; I would hold on to that feeling. \n\nShe surprised me by pushing me onto the bed and climbing on top of me. This suited me perfectly as it allowed me to undo the buttons of her shirt. She rushed to help me by shrugging if off her shoulders as soon as I'd finished with the buttons. \n\nOur actions revealed her simple but elegant black bra and the treasures that were now only party hidden underneath. I paused for a moment to admire them. She smiled, clearly happy with the appreciation she received, and kissed me again. \n\nYou like them, don't you? You've been staring at them all night, no doubt wondering how they would feel... I'm sure you won't be disappointed. \n\nI allowed my hands to roam her waist and the sides of her breasts. My thumbs traced over the soft top part of her breasts, pushed up enticingly by her bra. I was torn between conflicting emotions. I wanted to give into my wild passion and take her here and now, but I felt I should savour these moments, committing them to memory. I knew they would be among the sweetest I would ever have. \n\nFeeling my self-control crumble, I deftly unhooked her bra with my right hand, while my left was on her chest as soon as the fabric left it. I explored her breasts as we kissed and her hands started to roam underneath my shirt. I knew it was often said about many different breasts, but hers were truly perfect: the right balance between full and perky, and fitting beautifully in my hands, her nipples hardening at my touch. \n\nI love the way you touch me, so gentle and so firm at the same time. And hmmmm, I love touching you. I never thought I would enjoy feeling another woman's boobs, but this is amazing... I want to see you too... \n\nShe pushed my shirt up and I sat up so I could pull it over my head. As usual, I was wearing a simple, slightly loose-fitting sports bra. I hadn't exactly dressed for the occasion of seducing the hottest woman on the planet. She wasn't remotely perturbed by this and urged me to take it off. I naturally complied and watched her face as my modest breasts were bared. There was curiosity, appreciation, and - I was pleased to see - plenty of lust. \n\nOh wow, you are so beautiful... So sexy... Your shoulders and your arms, so toned, slightly masculine even... But you're still very much a woman, a gorgeous, handsome woman, half-naked underneath me... And I want to do things to you, so many things... \n\nShe pushed me back down and pressed her lips to my chest. She was all over me, kissing my breasts, feeling them. Her tongue traced my nipple, before her lips enclosed it and she sucked it. She grazed my nipple with her teeth and then bit down gently. I moaned, tilting my head back into the bed, pushing my body towards her. I couldn't believe the transformation in this woman who, just a short while ago, had been lingering at my door, insecure about going home with another woman. She sure seemed to have found her groove now. \n\nI decided it was time to take back some control; I couldn't let her have all the fun. I rolled her off me and pinned her down on the bed, pushing her legs apart in the process. She did not need much encouragement there. I moved my lower body across her thigh so I could keep her pinned and still reach her. \n\nOh god, it feels so good to have you on top of me. You're in your element now, aren't you? Show me what you want to do to me. And touch me, please touch me! I need to feel you... \n\nI undid her trousers and got a glimpse of her lacy black underwear. It matched the bra that currently lay discarded half over the edge of the bed, about to fall to the floor at our next tumble. That wouldn't be long. Of course; only a lady of her calibre would be wearing matching underwear to go the supermarket. \n\nI slowly slid my fingers between her trousers and her underwear. She held her breath and closed her eyes when I reached the edge of her mound. I reached deeper, following the contours of her lips, taking in the heat radiating from her. \n\nShe gasped as my fingers passed her sensitive inner lips, the moist fabric of her underwear not doing much to numb the sensation. I explored tantalisingly slow, for as long as I could. I desperately wanted more, her heat and wetness urging me on. I wanted to make her gasp over and over again. \n\nHmmmm, that feels so good, please don't stop. Don't ever stop. It's been so long since I've been touched like that. Oh my god, I'm so wet for you. You can feel that, can't you? Please keep doing that... \n\nI eased my hand out of her trousers and, before she could protest the sudden lack of attention, pulled them down her hips and free from her legs. She wasted no time getting back into position and I settled between her legs, my head close to her belly. I kissed her lower belly and inner thighs. Her hands gripped the back of my head urgently, trying to roam through my hair but, failing to achieve that, holding on tight to my bundle of dreads. \n\nThat's even better... Wasting no time here... You seem to know exactly where I want you. Where no woman has gone before you. But I know you'll make it worth my while. I know you'll be so good at this. \n\nI took my time to reach my destination and pressed a single kiss directly between her legs, pressing down while inhaling her sweet scent. Her hands pulled me into her and I could hear her moan. I felt myself getting hotter and wetter too and pushed my lower body into the hard fabric of my jeans. Her scent was driving me wild. I couldn't wait to taste her. \n\n\"Time to take these off,\" I said as I reluctantly submerged a moment later. \n\nShe complied eagerly, shimmying her kickers towards the end of the bed. She closed her knees, all of a sudden shy; feeling the effect of being completely naked with a stranger. I peeked at her sex, modestly tucked away, a strip of neatly trimmed light-coloured hair just visible. I caressed her legs and hips, moving towards her inner thighs. \n\nShe moved along, not wanting to obstruct my touch, and slowly parted for me. I kissed her thighs and marvelled at the slowly revealing beauty of her sex. I could not fathom how this woman could be so perfect all-round. Her inner lips were swollen with her excitement but I could see how they would neatly and symmetrically fit within the contours of her outer lips. It was like a portfolio piece of a world-class designer, straight from an exclusive catalogue; the kind that belonged in a gallery. \n\n\"Kiss me,\" she urged. \n\nI love the way you're looking at me. You clearly like what you're seeing and you're making me drip just by looking at me with that lustful gaze. But I need to feel your lips on me right now! \n\nI realised I had taken my time to stare at her, and forced myself to look away from her sex to her face. Not a punishment at all. She was looking at me in keen anticipation. Her beautiful blond hair now messy, her mouth slightly open. The tip of her tongue traced her lower lip. Whether this was a deliberate hint or a sub-conscious action, I would never know. Whichever it was, it made the butterflies in my belly go manic and kick-started me into action. \n\nI lowered my face between her legs and grazed her lips with mine. As much as I wanted to prolong the moment and tease her some more, I did not have the self-control to wait any longer. I probed between her lips with my tongue and was rewarded with another gasp. \n\nEncouraged, I let my tongue explore, starting at the top and slowly making my way down. I took my time to discover every detail and intricacy, moving outside and in as I went along. I paid close attention to the reactions of her body: the sounds of her breathing, her sighs and moans, the involuntary twitches of her muscles, the urgency of her hands on me. Reaching the end, I lingered to taste her sweet juices, now amply present and covering my lips and chin. She tasted delicious and I gently dipped my tongue inside her to get more. \n\n\"Oh god...\" She liked that - she groaned and pushed herself into me, while pulling my head with her hands. \n\nOh god, yes... Whatever you're doing down there is pure magic. You sure know your way around. I guess it's true that a woman knows a woman's body much better than a man. And god, does that pay off... \n\nI smiled, at least internally as my mouth was a bit busy, and pushed my tongue deeper. While I moved in and out of her, she rocked against my face. I was starting to cramp and I knew I couldn't get deep enough with my tongue. Its strengths lay elsewhere. \n\nI moved up and once again beat her disappointment by immediately focusing my attention on the sensitive area around her clit. I alternated between well-trialled moves to find out what she liked, and was soon rewarded with clear feedback as she called my name and urged me to go on. \n\nAs my tongue gave the performance of its lifetime, I slowly inserted my fingers into her, first one, then two. She called out loudly and pushed back on my fingers. I started fucking her with my fingers, slowly at first but soon picking up the pace to match her growing excitement. My fingers and tongue coordinated their actions like a well-oiled machine, with all desired consequences. She met my movements with her hips, all the while still keeping my head steadily in place. I heard her pant as we both sped up for the earth-shattering conclusion - at least the first one. \n\n\"Oh god... Don't stop... Don't stop... Don't...\" her voice stagnated as we worked together to lift her higher and higher. \n\nI could feel her starting to convulse as she lost control over her hands and tensed all her muscles. My tongue knew what to do and found the delicate balance in keeping the stimulation going but easing off the over-sensitive areas at the right moment, while my fingers pushed deep into her, curving round to grip her. \n\nShe squeezed my fingers with her body as she gave into the overwhelming sensations. I loved the moment when a woman climaxed, possibly enjoying it even more than she did. I realised I was embarrassingly humping the bed in my excitement. Fortunately, she was too preoccupied to notice. I desperately wanted to come too, but I wasn't done with her yet. \n\nShe had passed the main high and was now riding its after-waves, whimpering softly. I gently picked up the pace again. It only got better after the first one. \n\nOh wow... that was amazing... I haven't come that hard in a long time, if ever... Wait, what are you doing? I thought you were done... Oh... Oh, that feels good... \n\nShe uttered a confused noise; I had clearly surprised her by carrying on. After a moment's hesitation, she settled into the rhythm again and I quickly had her on the verge of climax again. This time she wasn't going to get off that easily. I stopped just before she toppled over the edge, only for a moment; just enough of a pause to stop the impending high. \n\nShe groaned her disappointment and gripped my head tighter. I resumed and, as I felt her tightening, paused again. Again, the disappointment and the encouragement to continue. I loved this game. And the longer we played, the more intense it would be in the end. She gripped my body with her legs, pulling all of me closer. \n\nAs I stopped at the crucial moment the third time, her legs clinging to me, she sighed and looked down at me. Her expression wasn't so much annoyed, more surprised, as if she couldn't believe I could have such little empathy to her sensations. \n\nWhat are you doing?! You keep stopping just before I come! Can't you feel that? I thought you were good at this. Just let me come, please! I'm going to explode! \n\nI grinned at her and flicked my tongue teasingly. It was only then she realised I did not, in fact, have the worst timing in the world, but had been deliberately building the suspense. \n\n\"You're such a tease...,\" she sighed with a smile, as she rolled her eyes and I went back to it. \n\nI can't believe it! You're just keeping me dangling on the edge deliberately, driving me more insane every time you stop! Just give it to me! I need it so badly! God, I'm so horny... \n\nI had intended to let her have it that next time, but this was even more fun now that she was in on the game. She started to tense up again, her legs trembling against my back, her fingers clawing into the back of my head. This required very delicate timing. Too early and I would miss the height of the build-up; too late and she would have passed too far and her orgasm would be off to a disappointing start. \n\nMy timing was perfect. My tongue stopped dead in its tracks one more time. She let out a loud low growl and did not release her grip on me. She pushed herself into me, clasping my face between her thighs, and flicked the back of my head with an uncontrolled slap. \n\n\"Just! Give! It! To! Me!\" She half begged, half commanded, thrusting herself at me. \n\nI couldn't suppress a snicker. My tongue came back to life, as did my fingers. I did not need to do much after that, the build-up being so strong, the suspense driven to the extreme. \n\nHer whole body convulsed and trembled around me as she held on to me wherever she could grab me. I had heard her say many profound lines in her movies - in different voices, different accents, different languages even - but these raw and incomprehensible noises were the most beautiful things she had ever uttered. \n\nI moved my hand to cup her while keeping my fingers inside for her to squeeze as she kept shuddering. I moved up to lie beside her and watched her face as her eyes fluttered open and closed, and she breathed quickly through an half-open mouth. She was covered in a light sheen and I could smell her sweet perspiration. She was elegant even in this state of complete bliss. \n\n\"What did you just do to me?\" She sighed after a moment, opening her eyes to look at me at last, appearing awestruck. \n\nThat was incredible... I did not know my body could do that! I have never had an orgasm even remotely like that. I feel like I've been tossed around in the most beautiful and powerful thunderstorm, and I'm now floating away on a soft fluffy cloud... \n\n\"You're not with a man now, honey...,\" I couldn't help saying. I wasn't an activist or an elitist in any way, but I genuinely believed that women could do things to each other that men couldn't even dream of. \n\n\"Clearly.\" She smiled. \"Who would have thought...\" She looked away, drifting away into a moment of blissful reflection. \n\nIf this is what sex with another woman is like... Or is it just what sex with you is like? Either way, you have blown me away... I'm starting to think I've seriously missed out in the past... \n\nWe lay side by side for a while, my head resting on the pillow next to hers, my hand still between her thighs. The throbbing under my fingers slowly subdued and she rolled onto her side to face me, my hand slipping away from her. \n\nIt's about time I return the favour and show you how grateful I am. I don't think I'll be as good at it as you are, but I'll give it my all. I want to do for you what you've done for me. I want to see you all wet and horny too, trembling with desire for me. Hmmmm, that will be so hot! \n\n\"How did I get to be the only one who's naked here?\" \n\n\"Well, you were rather keen,\" I teased her, making her utter a husky laugh. \n\nOh, cheeky! Well, you're right. I was keen, wasn't I? I still am... But it's your fault; you made me this keen for you... \n\n\"I think it's time you lost those jeans. I can't believe you're still wearing them...\" \n\n\"They are rather warm, that's true.\" \n\n\"And very restricting in what I want to do with you. Off, please.\" \n\nShe gave me a strict school teacher look, which made me burn with desire. Her exquisite build-up earlier had had much the same effect on me as on her, except I had not had any relief. I quickly undid my trousers, revealing my bright green boxer-shorts underneath. \n\nShe smiled. \"Oh, I like those a lot...\" \n\nShe played with the broad elastic band, sliding her fingers underneath slightly and caressing my lower belly. \"You're such a tomboy.\" \n\nWhat little self-control I had left crumbled under her touch and her words. I wanted to be her tomboy. I wanted her to do whatever it was she wanted to do to me. Whatever punishment she had in mind for my deliberate torture earlier. \n\nShe pushed my jeans down and I hurried to take them off. Her hand grazed over the front of my boxers. They were soaked through; undoubtedly she could feel that. The sensation of her fingers on the wet fabric left little to the imagination as she traced the outline of my lips. I pushed my hips forward to meet her touch. ",
        "You're so wet... Did making me come turn you on a little? You liked that, didn't you? I think you'll like this too... \n\nShe slid her hand into the fly, navigating the layers of fabric until she reached the soft skin underneath. \n\n\"So handy...,\" she said with a grin, as she leaned in to kiss me and at the same time pushed her hand in further to touch me. \n\nHer fingers touched my wet lips at the same time as her tongue entered my mouth. So many sensations all at once; it made my head spin. Her fingers explored me through the fly as we kissed intensely and she positioned herself on top of me. She said she'd never done this before, but clearly having a female body herself gave her a lot to go on. She expertly stroked my clit and pushed her thigh between my legs to open them further. \n\nMy boxers were now getting in the way, so I moved to take them off. I watched her face as I slid them down and was pleased to see desire in her eyes. I pulled her back on top of me. She smoothly eased herself onto my thigh and intertwined her legs with mine. She brought her hand back between my legs and continued where she'd left off. \n\nI held onto her and let my hands roam over her whole body, distracting myself from the most intense sensations between my legs. I did not want to give into those just yet. \n\nShe seemed to enjoy driving me into a frenzy: kissing me and stroking me, lifting her upper body off me so I could see her beautiful breasts, then lowering it so I could feel them pressing into mine. She pressed her crotch into my thigh. \n\nI tensed the muscle and she welcomed the sudden hardness by grinding into it. She had to be incredibly sensitive still, and the rough but superficial stimulation of her movement was working for her. She was clearly up for a little more fun. I grabbed her firm butt and pulled her into me, encouraging her to ride me harder. \n\nOh god, that feels good... Touching you is so hot. I love feeling you tense underneath me. And my clit against your thigh, oh man... I can't help grinding into you a little, it just feels so good... \n\nHer fingers were driving me crazy and it took all I had not to give in yet. Now that I knew she had more in her, I desperately wanted to share that moment with her. She started to breathe heavier and her kisses became more intense, as I could also feel my own breathing and my heartbeat quicken. I pressed myself into her fingers, her hand wedged between our rhythmically moving bodies. \n\n\"Come with me...,\" I whispered in her ear. \n\nOh yes... I'm so close, again; I can't believe it... I want to come again, with you! Yes, please... I'll come with you... I hope you're ready, because I am... \n\nShe lifted her upper body so she could press down harder with her lower, and threw her head back as she prepared for the final scene. \n\nI felt my climax approaching rapidly and hoped fiercely she was with me. I couldn't hold off any longer. I felt her cling to me as my body jerked uncontrollably, and hers started to do the same. \n\nThere were intense sounds of pleasure - hers or mine, I couldn't say. Our sensations and our bodies blended into each other as we experienced this extreme high together. We moved through it together until the killer waves became smaller and, eventually, subdued to a gentle surf. \n\nShe collapsed on top of me and stayed there until other sensations started to return. Such as her hand being crushed between my pubic bone and her hip. I hoped I hadn't broken her fingers. Try to explain that to her agent. She slid off me, settling into a more comfortable position with my arm around her and her head on my shoulder. \n\n\"My god, I'm so sorry about that. I don't know what came over me,\" she sighed, a hint of shame in her voice. \n\nI was going to make you come, and what do I do? I come again myself. Selfish much? \n\n\"What are you talking about?\" \n\n\"I'm such a pillow queen. I didn't mean to make that all about me again.\" \n\nI couldn't help but laugh. She really had no idea what she did to me. \n\n\"Not all about you, darling... Not even a little bit...\" I smiled at her and lazily pushed a rogue strand of hair from her eyes. \n\nWell, at least you came too. You came hard! I'm so proud I did that to you... \n\nShe smiled back and I could see the relaxed bliss was kicking in rapidly. She blinked sleepily. \n\n\"Well, in any case, that was really amazing,\" she muttered with a yawn, settling her cheek on my chest. \"I just want to stay here for a minute, okay?\" \n\nShe could stay there for all of eternity if it was up to me. It didn't take long before I heard her breathing become slower and more regular. I pulled the covers over her as best as I could, careful not to wake her. As much as I wanted to stay awake to prolong this beautiful moment, I soon drifted off to a most peaceful sleep myself. \n\n* * * * * \n\n\"Good morning, beautiful.\" \n\nShe opened her eyes just as I walked back into the room carrying a tray. I could see it took a moment for her to realise where she was and to remember everything that happened. \n\nI must have fallen asleep last night... And I slept like a log! I can't believe I just woke up in a stranger's bed. That is certainly a first in at least ten, fifteen years. Some stranger though... You really have surprised me at every turn... Here you are, bringing me coffee, and I actually feel happy like a child on Christmas morning to see you. \n\n\"Morning,\" she replied with a groggy smile, clearly not disappointed with the recurred memory. \n\nI took in the sight of my room - the bed sheets a tumble, one pillow on the floor as we had contrived to share one all night, clothes everywhere - and the sight of her in my bed - her blond hair now scruffy, her beautiful eyes still sleepy, her nakedness partly covered by my sheets, her face still all blissful smile. \n\nI set the tray with the cups, milk, and sugar on the bedside table on her side. Puzzled, she pointed at the three cups: \"Are we expecting anyone else?\" \n\n\"I didn't know if you wanted coffee or tea, so I brought both,\" I explained matter-of-factly. \n\nShe laughed. \"Ah, so practical. I'll take the coffee, thank you very much.\" \n\nLast night was just amazing. I'm so glad I came home with you. I can't believe how good the sex was. To think I nearly didn't go with you because I thought I wouldn't be into it with a woman... Or that you were too young for me. Or that you were a crazy stalker. All that's crazy about you is how good you are in bed! \n\nWe sipped our beverages in silence for a moment before she turned to me, a reminiscent grin on her face. \n\n\"I just can't get over how great last night was.\" \n\n\"You weren't acting then?\" I probed, easing the way. It was subtle, and the penny didn't drop yet. \n\nI knew it was time to come clean. I couldn't quite put my finger on why this felt crucial; she would walk away never knowing any better and never needing to. Yet, my heart felt heavy with the deception that was still hanging between us. She had captured more of me than I'd thought I would allow, and I hadn't been able to stop it. \n\nI still had no hope that this would turn into anything more, but she needed to have all the facts nevertheless. I had no idea how this would go down, but I hoped with all my heart that she would give me a chance to explain, so that in time she might understand my motives. \n\n\"Nope, no acting required. Definitely a top 10 performance,\" she teased. \n\nI pulled a sad face. \"Top 10?! That's it?\" \n\n\"Hey, that's a very decent score. I am difficult to impress, you know.\" \n\n\"I'll say... Your reaction last night indicated at least top 5, maybe even top 3,\" I countered with faked disappointment. \n\nTop 3? Oh yes, no doubt about that. I can't think of anyone who's come close to what you did to me last night... And you need to hear it, hey? I didn't think you lacked the confidence to know how good you are, but fine, I'm happy to indulge you... \n\n\"Okay, okay, I'll admit it. It was The Best Sex. Ever. Period.\" She rolled her eyes at me and winked. \n\n\"Oscar-worthy?\" I ventured another step in the treacherous yet righteous direction, meanwhile trying to contain my exhilaration over being her best lover ever. \n\nOscars for sex? Wouldn't that be something! It might make some people try a bit harder! Maybe we should write to the Academy about that... \n\nShe laughed softly. \"I hate to disappoint you, sweetie, but that category has not been recognised yet... There are no Oscars for best sex, I'm afraid.\" \n\nShe smiled at me and nearly made me lose my nerve. How could I risk ruining this moment? I flashed her a grin, hoping she wouldn't notice its slightly forced nature. \n\n\"Yeah, I guess otherwise you would have won way more than two...\" I gazed into my coffee, not daring to look at her. I waited for the guillotine to drop on my fragile neck. \n\nShe laughed first, then realised the full extent of what I had said and what it meant. She stared at me, dumbstruck, the full truth finally dawning on her. \n\nWait, what did you just say? I'd have won more than two Oscars? You know I've won two Oscars?! But what... How do you know? You know... Everything? You know who I am? \n\nHow did you just find out?! Oh god... You didn't... You've known all along, haven't you? \n\n\"You knew?\" She asked, already knowing the answer. There was pure astonishment on her face. I didn't say anything, giving her more time to process. \n\nI can't believe this! How is this even possible? You had no idea, I could tell! You were asking me all these questions; you never gave me any indication that you knew. You acted so... normal! This whole time, you managed to keep up the pretence?! You lied to me, this whole time...? That doesn't seem like you... \n\nWhy would you do that? Why did you feel the need to pretend? \n\nSo many thoughts were going through her head. She was probably replaying every moment of the previous evening, seeing if I'd broken character at anytime, lost the plot, skipped a line. I hadn't, I was sure of it. \n\nBecause I never would have given you a chance otherwise... I would have dismissed you as just a fan, out to get your ten seconds of fame. I would have assumed you just liked the idea of me, never even considering that's not the real me. \n\n\"You knew...,\" she repeated; it was more statement than question now. She looked at me intently. I met her gaze, holding it with honesty, trying not to plead. I didn't want her to be angry but I wouldn't apologise either; I still believed I'd done the only thing I could have done. \n\nAnd yet, you gave me a chance to show you the real me. You gave us both a chance... You did that... \n\nI should be angry with you for lying, but if you hadn't... I wouldn't have gotten to know you... I wouldn't have been here with you. I never would have gone with you if you hadn't convinced me you didn't know who I was... \n\nAnd man, you had me convinced! I never even noticed; I had no idea! Me and my arrogant assumption that I would recognise someone acting from a mile away! You just blew that out of the water completely! That's... rather brilliant... actually...  \n\nShe surprised me when she started laughing, quietly at first, then louder until she became inconsolable, her deep laugh contagious and excruciatingly attractive. I didn't quite know what it meant, but I laughed with her; I couldn't help it. \n\n\"Well, who's the great Oscar-winner now?\" She said as she finally calmed down, tears in her eyes and a grin from ear to ear. \n\nI felt nothing but relief that she took it so well. In my wildest dreams I could not have foreseen this reaction. I could only imagine that in her pondering she'd developed some understanding for my actions. I knew she was clever, but she'd amazed me by figuring this one out so quickly. I smiled and shrugged apologetically. \n\nMischief coloured her expression, the cute twinkle in her eyes making its appearance again. \n\n\"I'll make you pay for that most deceitful performance, Oscar-worthy or not,\" she said with a lustful malice, clearly still contemplating what exact shape her sweet revenge should take. She moved on top of me and pinned my hands over my head. \n\nI grinned at her challengingly and whispered: \"I'd like to thank the Academy...\""
    ],
    "authorname": "Salandar",
    "tags": [
        "flirting",
        "lesbian first time",
        "lesbian sex",
        "older woman",
        "straight woman",
        "tomboy",
        "first time"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-actress-3"
}