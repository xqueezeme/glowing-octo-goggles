{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 25",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\n\"Incoming.\"\n\nNatalie, now dressed in light blue scrubs, looked up from the message she was typing. Gwen's phone dinged in reply a few seconds later. \"Thought I owed you a fair trade.\"\n\nYou don't owe me anything,\" Gwen protested with a smile, unsure exactly what her sister-in-law was talking about, and opened the message to find a file attached. She looked up and smiled uncertainly at the message's sender, then tapped to play the video. It opened to the image of two dangling breasts, then Natalie's stomach as she straightened after starting the camera. She stepped back further, her nude body still filling most of the screen as she grinned and waved excitedly. The scene behind her made it apparent she was in a hotel room, the camera propped on the dresser and aimed at the little hallway behind her, the bathroom to the left of the door. Gwen thought she could hear the sound of running water, maybe the shower? \n\nThe naked woman quickly turned and hurried to the door, opening it just enough to poke her head through while the rest of her stayed safely hidden behind. She stepped back and swung it open just a second later, revealing the surprised young pizza delivery driver standing in the hallway. He shuffled in uncertainly as Natalie hurried away to where her purse sat on the edge of the bed, unabashedly staring at her upturned ass as she bent over to retrieve his money. Gwen could hear her saying something as she took her time getting the bills out of her wallet.\n\n\"What are you telling him?\" she asked, her eyes locked on the screen. \n\n\"Oh, just that I was getting ready to join my husband in the shower when the pizza showed up, and how much we love having pizza in bed together after sex,\" Natalie said with an impish grin. \n\n\"So Adam was in the bathroom?\"\n\n\"Oh no, I was at a conference in Jacksonville that weekend. Adam was home, and I sent him this after. I just told the pizza guy that so he'd think somebody was there with me. A girl can't be too careful. Oh, and you can't see them, but I left some of my toys on the bed, too,\" she added. \n\n\"You are crazy!\" \n\n\"Maybe, but Adam seemed to like it. He sent me a video back about an hour later, showing his, umm, appreciation. Wanna see?\"\n\n\"God no! But maybe I should show Tim this to pay you back for showing my brother mine.\" \n\n\"Go for it. I would hope you've figured out by now that I've got no problem being seen naked. Oh shoot, almost forgot! Be right back!\" Natalie hurried out the door while her puzzled sister-in-law remained in the kitchen to replay the video. She returned with a stack of paperwork. \"The partnership stuff you asked Adam for. He kinda snuck it out of the office before your father had a chance to intercept it and make changes. Anyways, gotta go. Talk soon?\"\n\nGwen traded the paperwork for a hug. \"Talk soon.\"\n\n***\n\nTim and Cricket waved as they passed each other on the road, one on the way into town on an emergency call, the other on the way to the house for a weekend with her horse and friend. The lines of thunderstorms that had begun marching through the area before midnight were continuing, the downpours overwhelming several sump pumps that Tim was on his way to attend to while washing out the young woman's plans for a relaxing ride. There were still barn chores to do though, and that in itself was a comfort. Mucking stalls in a quiet country stable had become very much preferable to pushing papers in a sterile office. \n\nGwen was pleased to see the young woman arriving earlier and earlier for her weekends, not to mention that the house was now the first stop after she exited the car rather than the barn. Marvin was not forgotten though, and Cricket hurried out to her horse soon after hugging the home's owner. \n\nDespite the rain there was still some discussion as to whether a ride might be risked before a particularly close flash of light and subsequent peal of thunder convinced them it would probably not be safe. They tended to the horses instead, meticulously grooming them before moving on to their tack. \n\nGwen finally called a halt shortly before lunch. \"Given the weather I was thinking of getting the grocery shopping done this afternoon. You're welcome to stay here...\"\n\nShe remembered with an equal mix of excitement and embarrassment her last trip to the store, and the show she had put on. \"No, of course not! I'll go with you.\" \n\n\"Okay, then we can make an afternoon of it, go somewhere for lunch, my treat.\" \n\nThe young woman's protests that lunch should at least be split was overridden, and for the second time in a day two bodies rinsed themselves under the spray of the shower in the master bathroom. There was no time spent in the bedroom other than to change into clean clothes after, Gwen omitting a bra and daring Cricket to do the same.\n\nThe young woman's shirt was not particularly revealing, but she still felt small thrills every time she reminded herself she was braless in public. It probably isn't even noticeable, she thought, and a quick glance at Gwen's chest only hinted at the fact her breasts were unrestrained. It was not until the dairy aisle of the grocery store that she noticed the hard little points gently moving up and down beneath her friend's shirt as she walked, and a quick check confirmed was in the same state. Still she was not pushed into displaying anything more, not like last time.\n\n\"Forgot to mention,\" Gwen announced as she drove, \"just us after dinner tonight. Tim's going out with some friends\u2014somebody's birthday, I guess, so the TV is ours tonight. Hope that's okay with you.\"\n\n\"Of course it is! It'll be nice to have someone to watch with.\"\n\nBoth women had the meal preparations under way when Tim finally returned home, Gwen laughing and shooing him off to the shower when he tried to squeeze her rear end. She reached into the refrigerator a moment later and retrieved a beer. \"He forgot this,\" she said, holding it out to Cricket, \"Could you take it to him?\" \n\n\"Oh, uhh, sure...\" He was stepping out of his jeans when she got to the bedroom, shirt already gone, penis flopping free after being freed from his sweat-soaked underwear. The casualness of his nudity flustered her momentarily, and the young woman had to remind herself she had seen him naked before, in far more compromising positions. Like when his cock had been in her hands...Tim looked up, a little surprised, freezing in place. \"Uh, Gwen asked me to bring this to you.\" \n\n\"Woman's a saint, I tell ya,\" he said, reaching for the can and breaking the spell. \"Tell her I'll be right out to help get dinner ready.\"\n\n\"Oh, we're almost done. We'll put it on the table when you're done, umm, showering.\" \n\n\"Be out in a couple of minutes.\" \n\nHe waited until Cricket retreated, then turned for the running shower, also mindful of how easy it had become to be naked in front of others. He wasn't exactly packing, but it was fun to show off what he did have. Would have been nice if Gwen delivered it in person though, maybe stayed to wash my back, he thought with a smile.\n\nThey ate slowly, talking, Tim in no hurry to be on his way, almost wanting to call it a night and stay in. No, he finally decided, a guy's gotta do guy stuff sometimes, and reluctantly said his goodbyes after helping with clean up.\n\nThere was plenty of wine and popcorn to go with the TV watching. Cricket was near the bottom of her second glass as they watched an R-rated crime suspense movie, the kind Gwen would never have consented to be shown in her living room back in the old days. There was a brief shot of a sultry young administrative assistant sliding down to her knees in front of a silver haired lawyer leaning against a desk, her likely destination of the man's waist just below the camera's reach, hinting strongly at the act she was about to perform. The scene faded, only to cut to an unmade bed, the camera focused on the now bare back of the woman as she apparently sat astride the man's face, his hands full of asscheek. \n\n\"I never thought about doing\u2014that-that way,\" Cricket mused, emboldened by the alcohol. \"Of course, before I met you and Tim I always thought that\u2014\"she nodded at the TV before looking into the bottom of her glass, wishing it full again, \"didn't actually happen nearly as much as people talked about it. I mean, even though I wanted to try it just once, just to see what it was like, putting a man's penis in your mouth, just seemed, I don't know, so far out there, and I knew Daniel would never let me do anything so dirty, much less do it to me. But when I see you two do it...well you both seemed to like it. You do, right?\" \n\nGwen looked down at the bottom of her own glass and smiled. \"I wasn't sure I'd like it the first time I did it for him, but I do\u2014a lot\u2014now. It makes him happy, and I just, I don't know, something about having him in my mouth that I really enjoy. And I couldn't imagine a man returning the favor for me, either. But I'm really glad he did.\"\n\nCricket smiled. \"Did you ever imagine doing that with a woman before the first time you actually did?\" \n\nGwen paused. Before Miss Ritter? Never. Okay, she corrected herself, maybe once or twice, but that was just teenage curiosity...Before Natalie? Only in a few of her fevered dreams until the possibility became real. \"Once or twice, but really, it just...happened. How about you?\"\n\nThe young woman blushed. \"Maybe once or twice...but I'm glad it \"just happened\" with you. I do still want to feel what it's like to have a man do that, though. I have to guess it feels different?\"\n\n\"It does. Remember my experience is pretty limited\u2014Tim's the only one that's done that for me, and yeah, it's a little different...but it's like he's guessing at what I want. Women just know, I guess. The guessing is fun, though. You never know where he's going next. Oh, and stubble.\" \n\n\"Stubble?\" \n\n\"A man's razor stubble on your skin. Sometimes it tickles, sometimes it's a little like sandpaper...\" Gwen giggled. \"I sometimes wonder what a full beard would feel like, although I'm not about to ask Tim to grow one just to find out. I think women have the easier job, though. Men are happy anytime their things are in something else, and the fact there's a tongue involved just makes it just that much better.\" Gwen giggled again, this time at her coarseness. \"I'm going to go close up the barn, then call it a night,\" she announced, stretching and yawning.\n\n\"I'll go with you,\" Cricket volunteered, and the women trudged across the yard to make one last check of the horses. There was no longer any question of what bed the young woman would be in when they returned to the house, and she lay there naked next to Gwen, looking up at the ceiling, trying to rationalize how the situation she found herself in was any semblance of normal. Screw normal, she finally decided. I don't care. I like it. She smiled at an imagined conversation with her mother. Don't worry Mom, I must still like men\u2014I got really excited putting my hand on Tim's penis. But sex with Gwen makes me feel really good... \n\n\"I think we're turning you into us,\" Gwen said quietly as she turned on her side and threw an arm across the young woman's blanket-covered stomach. \"Boring old people who are in bed before dark.\" \n\n\"It's dark out, and I keep telling you I was like that before I knew you. I just like knowing I'm not the only one who appreciates that kind of pace.\" \n\n\"Hmm.\" A kiss landed on her cheek, very close to her lips. \"Good night. Don't forget, Tim will probably stumble in around midnight. He tries really hard to be quiet, but sometimes he's not very good at it.\" Gwen rolled again, her back now to the woman in her bed. \n\nCricket rolled up behind her, hoping that would be alright, knowing it would be, luxuriating in the feel of a soft warm body. Her hand slid under the covers and over Gwen's ribcage, resting at the spot just below her breasts. \"Do you think Tim will just go right to sleep when he comes home late?\" \n\n\"Maybe, maybe not...why?\"\n\n\"Just wasn't sure if you two had a, you know, a cutoff time for...\" The young woman's fingers began to gently stroke the smooth skin they lay on. \n\nGwen felt sure she knew what the unspoken activity was and smiled. \"Are you worried you might miss cutoff, too?\" \n\nThe hand stopped and withdrew. \"Oh\u2014uh, sorry, no, just curious.\" \n\nGwen rolled over to face her, a hand gently brushing Cricket's cheek. \"Nothing to apologize for. And to answer your question, no, it's never too late for him\u2014\" or you, the Slut drily reminded her, \"so don't be surprised if Tim has something on his mind when he comes home. Will you be alright if he does?\" \n\n\"Oh, uhh, of course, I mean, whatever you two do\u2014or don't do is alright with me! I just asked because I was kinda wondering about-that...sorry, I'm such a pervert.\" Even in the dark Gwen could see the young woman blush. \n\n\"No more than me...would you like me to help you before he comes home?\" \n\nCricket hesitated, thinking it rude to ask before blurting it out anyway. \"I just like the way you feel\u2014so soft and warm-if I can just touch you, that would be nice.\" \n\n\"Touch all you want,\" Gwen replied, her hand already smoothing the young woman's side. \"But I get to touch you, too.\" It was sometime before either woman's fingers reached for intimate spots, both enjoying the feel of fingertips gliding over feminine skin and muscle while their lips met with occasional brief kisses. Gwen was first to a breast, tongue gently flicking and bathing the nipple while the young woman sighed in pleasure. Legs opened in invitation, the older woman's hand happily accepting. \n\nHer lips continued on down Cricket's taut stomach, towards where one finger was now slowly gliding in and out while her palm pressed against the young woman's clit, finally sliding her body over a spread thigh to gently kiss at the wetness between her legs. \n\n\"Oh God,\" Cricket moaned, \"that is so good...I know what you mean about a woman hitting the right spots.\" It was some time before she raised her head to look down at the woman between her legs. \"Can I do that to you now?\" Gwen looked up and smiled, and the two women quickly changed places, the older woman's turn to look down at the head bobbing at her crotch. \n\nThe young woman worked slowly, dipping to run her tongue up Gwen's sex, still marveling at the pleasant mildness of her taste, so unlike what she had imagined before that first time. Gradually, the hard little nub at the top became her focus. Gwen's hips twitched in response, and a pair of hands found their way to the back of the head tormenting her, fingers combing through her hair. \n\nShe allowed the lips and tongue to withdraw after another moment or two, and Cricket sat up. \"You said you were going to show me the gifts you got for modeling?\" \n\nGwen smiled and extricated herself from the woman between her legs. Neal was retrieved from the nightstand drawer first, his banishment to the closet ended after Natalie had left the day before. \n\nHis was not the focus of the young woman kneeling on the bed, however, instead pointing at the other lifelike reproduction that had been placed in front of her. \"I see what you mean about them being almost real. That one looks very familiar...Tim, right?\" Gwen smiled and nodded. \"Does it feel real, too?\" \n\n\"Touch it and find out.\" \n\n\"Really? Are you sure?\"\n\n\"Why not? Of course.\" \n\nCricket tentatively ran a finger up the length, giggling nervously at the feel of the yielding surface over the hardness beneath. \"How in the heck did they do that?\" she chirped, looking up at the older woman in wonder. \n\n\"No idea. Pretty real, huh?\"\n\n\"Really real. Does it, uhh, feel real, like him, inside you?\" \n\n\"I suppose...it's hard to tell without the body the real one is attached to, though. You can pick it up you know. It doesn't bite.\"\n\nCricket accepted the invitation with another nervous high-pitched giggle. \"It's heavy.\" \n\n\"It's certainly solid. Would you like to try it out?\" \n\n\"Really? You don't mind?\"\n\n\"I don't mind. Tell you what,\" Gwen said, getting off the bed long enough to retrieve the Magic Wand and plug it in, \"you take this, and I can help you with that.\" She traded the vibrator for the dildo and gently pushed the young woman onto her back, climbing between legs opened in anticipation. \n\nGwen waited until the tennis ball head of the wand was applied to the young woman's clit before gently pressing the head of the length against her opening. She waited for the angry buzz, then gently pushed his length forward, watching Tim's reproduction bull its way into another woman for the second time in two days. Cricket didn't have the labial lips Natalie had, and the length disappeared into her without abundant folds of flesh grabbing at it as it slid by. \n\n\"Ohh! That is nice...\" The young woman's hips rose to meet the invader, helping to push it deeply into her, testicles soon bumping against her bottom. \"The ones you got me always feel so massive...this one feels comfortable, more real.\" \n\n\"Mmm-hmmm...\" Gwen had begun a regular cadence of thrust and withdraw, watching her friend accept the cudgel then give it back, hips twitching forward to hurry its return. The mad hum of the Wand was bringing her closer...\n\nThe whoosh of the air conditioning could not completely mask the sound of a truck coming up the driveway. \"Tim's home,\" Gwen said softly, an incredibly perverted idea beginning to form. \"I know you're probably close, but do you think you can wait a little longer until Tim can join us?\" \n\n\"Uh, sure, yeah I guess,\" Cricket mumbled, lying there with the vibrator now turned off, waiting for the length inside her to be removed. \n\n\"I'm going to say hello,\" Gwen continued, placing the dildo back on the nightstand. \"Be right back.\" \n\n\"Alright...\" the young woman made her way under the covers, suddenly conscious of the fact she was naked in another woman's bed and that woman's husband was home. \n\n\"You're back early!\" Gwen called out as she turned the corner into the kitchen while Tim was shutting the door. \n\n\"And you're naked, which is a great reason to come home early,\" he said with a grin as he took her in his arms and kissed her. \"Hope I didn't interrupt anything...\"\n\n\"Well, actually...\"\n\n\"Oh, uh, well, I can watch some TV until you're uhh, done...\"\n\n\"No, it's fine, I want you to come to bed. But you should shower first. You smell like cigarettes.\"\n\nYeah, bars'll do that...you sure? I can hang out here for a while if you want.\" \n\n\"You've had a busy day and I'm not going to kick you out of your own bed! But if you're not too tired,\" she said, lowering her voice, \"I think Cricket was hoping to see us together, if you know what I mean.\" His grin told her he did. \"Come on.\" She grabbed him by the hand and led the way down the hall, letting go once he was at the foot of the bed. \n\n\"Uhh, hey Cricket. Hope I didn't wake you...\"\n\n\"No,\" she squeaked, the covers modestly pulled up above her chest, \"we\u2014I\u2014was awake.\" His eyes went to the dildo on the stand beside her\u2014his dildo, a pretty good likeness he supposed, almost creepy how real it looked, although he had never really spent much time memorizing the look of his dick. It was just kind of there...he wondered where it had been tonight. Gwen, or perhaps even Cricket?\n\n\"I'm, uhh, gonna take a quick shower\u2014Gwen says I smell like cigarettes. Be right back.\" He hurried through a quick shampoo, body lather and rinse, his freshening erection getting a little more attention than necessary. He quickly rejoined the two women, making no effort to hide his bobbing cock as he tried not to hurry to his customary side of the bed, next to Gwen with Cricket to her other side. There was a moment of uncomfortable silence as they lay there, Tim and Gwen above the covers, Cricket still beneath them, each wondering what to do next. ",
        "What the hell, he finally thought, she wants a show. \"I was hopin' you'd still be up,\" he grumbled, kissing her. \n\n\"I told you,\" she laughed, briefly turning her head to look at the woman behind her. \"And I'm glad you're up,\" Gwen reached between them and gently shook his length. \"I've been waiting for you. Could you do me a favor?\"\n\n\"You could get me to do just about anything right now.\"\n\n\"We were talking about oral sex before you came home, and I was telling Cricket how good you are at it. Could you kiss me down there?\"\n\nTim glanced at the young woman, noting her wide-eyed interest, then chuckled over his wife's bluntness. \"Don't know about how good I am, but I'm willing. Be glad to.\" He kissed his way down a familiar stomach as she looked on, finally installing himself between open thighs that he hooked with strong arms. \n\nHer sex was pulled to his lips, and Cricket marveled at the casual display of strength as her friend gasped at the first flick of her hooded nub and turned and smiled dreamily at her friend. \"Like I said, different, but nice,\" she sighed, \"so nice.\" Her eyes closed as her senses surrendered to Tim's efforts. \n\nThey were still closed when she spoke again. \"Cricket?\" \n\nThe young woman's eyes darted from the head between Gwen's spread legs to her face. \"Huh?\"\n\n\"Would you like to try it?\" \n\n\"You mean...do that, to you?\" she asked uncertainly, afraid to dare to believe what was being offered.\n\n\"No, would you like to see how nice it feels?\" \n\nTim also guessed at what the invitation implied and brought his head up to look at his wife for confirmation. \n\n\"I, uhh, well, isn't that up to Tim?\" \n\n\"It's up to both of you,\" Gwen said throatily. \"If Tim's alright with it and you're alright with it...\" \n\n\"It's alright with me,\" he replied after waiting long enough to keep from appearing overeager, eyes shifting between the two women to gauge their reactions. \n\n\"You should go first...\"\n\n\"I did\u2014and I will later, after you've had a chance. I feel bad you were interrupted earlier.\" Gwen gracefully swung her leg over the body between them and rolled away. \"C'mon.\" Her hand pressed against Cricket's stomach, gently pushing her onto her back before moving up to cup a breast. \n\nTim bided his time\u2014patience, patience, he silently counseled, don't scare her, give Gwen enough time to change her mind\u2014waiting until one leg slowly moved away from the other. It finally stopped, just enough room for his body to fit between them. He rose from the bed, his temporarily-freed cock red and angry-looking before it again disappeared under his freshly-repositioned body. Cricket looked down in wonder at the salt-and-pepper hair on the head poised above her crotch, his focus on the prize before him, and realized she had not left him much room to work with. Her eyes closed in embarrassment even as her legs opened further in lust-filled anticipation. The young woman nervously grasped her friend's hand for support. \n\nAnd there it was, just inches from his face. Delicate inner lips barely peeked from puffier outer ones lightly covered with wispy hair. It did not thicken much at the point where her lips met, where her clit lay hidden beneath. The pussy of my wife's friend in licking distance, my naked wife watching me. This has gotta be some kind of payback for years of keeping my dick in my pants, Tim rationalized. Better not screw this up...\n\nDespite her nerves, Cricket giggled as he felt the gentle kiss against her sex and the rasp of his cheeks against her thighs. Tim looked up in mild surprise. \"Okay?\"\n\n\"Oh\u2014yes, it's just that your stubble tickles a little.\" \n\nGwen smiled. \"Told you.\"\n\n\"Sorry, Gwen told me to shower. She didn't tell me I needed to shave. I've got an electric razor I can use, only take a minute...\" \n\n\"No, no, you don't have to do that...it just tickles a little, that's all, I'll get used to it.\" \n\n\"Tell me if you don't.\" He again bent to his task, tongue gently exploring the wet folds, working closer to the nub where they met. He eagerly inhaled the heady fragrance of a woman in heat, the scent stronger than the actual taste of her wetness. \n\nCricket jumped at his first swipe at her clit, inhaling sharply in surprise, hoping for more. She was not disappointed, and her soft coos and sighs made it clear she had at least temporarily banished any reservations she had about the pleasure being given her. \"I see what you mean, it does feel different,\" she said after opening her eyes just long enough to focus on Gwen smiling down at her. Eyelids drifted shut again as her hips twitched and her hand squeezed the one she held. \"But nice different. I like it.\" \n\nGwen gently smoothed her fingers over one breast, then the other. \"Would you like me to hand you the vibrator?\" \n\n\"No, that's okay...is it alright if I just...like this?\"\n\n\"Of course.\" \n\nTim helped produce her delayed orgasm a few moments later, the young woman softly chanting, \"oh my...oh my,\" in time to her writhing hips until it was cut off with a sudden \"oh my G--\" and the constriction of every muscle as the first wave ripped through her. Tim kept up his efforts until delicate hands pushed his head against her sex. And then she was limp, spent, breathing heavily while her eyes opened to what she had just done. A quick check of the older woman still patiently smiling down on her helped soothe her fear and remorse; there was no anger in her friend's face, just a certain knowing satisfaction. \"Ohh, that was nice!\" Cricket looked down between her legs, to where Tim looked up at her, wondering if it was proper to remove himself now. \"Thank you for\u2014that,\" she hurriedly squeaked. \"I had no idea...\"\n\n\"You're welcome.\" \n\nGwen gently kissed the young woman on the cheek and got to her knees. \"Tim, do you think you can hold out a little longer? I'd like to do something first. I promise you'll be very well taken care of.\" \n\nHe smiled, taking this as his cue to remove himself from between another woman's legs. \"I always am. Does that mean I'm sitting this one out?\" \n\nShe rose from the bed. \"No, but do you think you could lie down for me?\" \n\nTim grinned and lay back on the spot she had just vacated, next to where Cricket still reclined on her side, a hand propping her head up. Gwen waited until he was comfortable, then climbed on with him, a knee above each shoulder as she straddled him and steadied herself on the headboard beyond. \"I\u2014we\u2014saw this in a movie tonight.\"\n\n\"Must've been a hell of a movie,\" Tim was able to get out before his mouth was covered with her sex and his tongue slipped into the second pussy of the night. The abundant wetness he found was too real to make everything that happened since he had come home part of a dream, and Tim took it as well as her need to be satisfied as evidence his wife had enjoyed watching his earlier efforts. \n\nCricket scrambled into a sitting position, legs crossed in front of her. Tim's potent erection was also right in front of her, and her stare alternated between the pulsing length and Gwen's hips undulating against his face while hands grasped at her ass. His finger occasionally brushed against the writhing woman's asshole; it had to be an accident, a heat of the moment thing, she decided. \n\nThe arousal that had first begun to stir during the film and continued to grow in the hours since finally exploded into orgasm, the novelty of the position and the wickedness of an audience contributing every bit as much as her husband's tongue. Satisfied, she climbed off and looked down at a face wet with her juices. His face was wet before you used him like that, the Lady suggested darkly, but she brushed it aside. Tim had been very patient; he was past due to have his needs met now. \n\nGwen took a breath to slow her breathing. \"Cricket, would you like to practice?\" \n\nThe young woman glanced at the cock she had stopped staring at when her friend had dismounted. \"You mean, like last time? Is that alright?\"\n\n\"I don't think Tim will mind...\" she turned to her smiling husband. \"Right?\" \n\nHe made his shaft flex off his stomach a couple times in response, an ability Cricket found oddly amusing. \"Happy to help.\"\n\n\"Okay...\" The young woman extended a finger and gently stroked the underside from where the loose skin of his ball sack turned to something more solid up to where the bulbous head began to flare. Another stroke and another finger was added, then a third. Fresh precum had been bubbling out of the tip since his cock had been freed from the blanket he had been laying on between her legs; she extended a fingertip to gingerly coat the pink head with the slickness. \"Is that okay?\"\n\n\"That's great.\" \n\n\"It's so warm compared to the, uhh, other one.\" \n\nSo she had been playing with it, Tim thought, and the image of it buried deep inside her flashed into his head. He didn't attempt to chase it out. Cricket paused, then formed an O over the tip of the head with her thumb and forefinger then gently pushed them down over the spongy mass, the opening expanding to fit him before again tightening beneath the flare and continuing down. More fingers joined the first with each stroke. \n\nGwen waited until the fist was snugged up against the base of her husband's cock before impulsively reaching over from where she was sitting to scoop some more liquid from his cock head and offer the fingertip to Cricket. \"Want to taste it?\" \n\nThe young woman hesitated. \"Does it taste bad?\" She quickly blushed and looked at Tim. \"Sorry, I didn't mean\u2014\"\n\n\"It's okay,\" he laughed. \"Fair question.\"\n\n\"Doesn't taste like much at all,\" Gwen advised. \"Maybe a little hint of salt.\"\n\nCricket leaned forward to delicately take the offered finger between her lips. \"Hmm, yeah, not much at all...\"\n\n\"Would you like to put it in your mouth?\" \n\nThe young woman's eyes grew wide and she glanced meaningfully at the penis she was holding. \"You mean\u2014it?\" \n\n\"Yes, it. You were wondering what it was like.\" \n\nCricket looked at the cock's owner, but Tim was looking at his wife, unable to believe what he was hearing. \"Can I?\" He smiled helplessly and shrugged. The images of her friend kissing and licking the length before taking it in her mouth were burned into her brain and she acted from memory, bending forward to gently plant a kiss midway down the underside of the shaft, feeling the heat on her lips. \n\n\"Lie down with your head over his stomach,\" Gwen suggested. \"it's easier on your back and neck.\"\n\n\"Let's you control the action a little more, too,\" Tim added helpfully, and though the young woman wasn't quite sure what he meant, she was not going to ask now. \n\nIt was an interesting view from there; her hand aiming the wet scarlet-hued head at her face. She delicately planted another kiss, this time on the spongy head, pulling back just enough to lick the salty moisture from her lips. Cricket did her best to imitate her friend's actions, kissing and licking up and down the length and beyond, the feel of his loose sac very different from the hardness that extended from it. She paused after a trip back up to the spongy head, her tongue following the valley through the underside of the mushroom head to his slit. The length jumped in response, lightly smacking her on the lips. The young woman looked up at her friend sitting next to her. \"Do I put it in my mouth now?\"\n\n\"Put it in whenever you want, although I think Tim would really like you to.\" \n\n\"How far do I put it in?\"\n\n\"As far as you want. Just not so far that you gag yourself.\"\n\nCricket nodded, apparently thinking this information critical, and slowly parted her lips to take him, feeling the texture change as the head gave way to the shaft. \n\n\"You can also put your hand around the base of the guy's, uhh, penis to keep him from pushing in too far,\" Tim added. \"Some guys get in a hurry. Your fist acts like a stopper against your mouth.\"\n\nGwen laughed. \"You never told me that!\" \n\n\"Didn't think you needed to know. I'm always really careful not to gag you. But Cricket might be with a guy who isn't careful.\"\n\n\"And how did you know about that little trick?\"\n\n\"Somebody told me...\" that somebody had been a girl prior to Gwen whom he had been in a hurry with once, and the hand always wrapped around the base of his cock after had been a clear signal she didn't trust the energetic young man to control himself. \n\nCricket removed him from her mouth just far enough to speak even as she continued to stare at the thing in her hand. \"Thanks, that's good to know.\" And then the mouth was back, beginning to pick up a bobbing rhythm like she had seen Gwen do. Like he's fucking my mouth...\n\nTim's groans and sighs were cheers to the young woman, the gentle flexing of his hips a sign of hope that she was at least not a failure at this. She tested her limits, finding that spot where taking him any deeper might cause her to gag and splutter, trying to incorporate her tongue into the vagina her mouth had become. There was a hand gently smoothing her back, Gwen's, encouraging her efforts... \n\n\"Tim, any words of advice?\" the older woman looked up and asked, hand still turning circles on the back of the naked woman at his waist.\n\n\"No, she's\u2014you're, doing fine, you're changing things up, that's good, no teeth, that's really good...Damn, is it good, really good, but I'm getting' close...\"\n\nThe older woman knew he had been even before he announced it. \"A nice guy tells you when they're close to finishing, so it doesn't come as a surprise.\" \n\nCricket's mouth popped off the end with the next stroke. \"Ohh\u2014what do I do know?\"\n\nGwen smiled. \"Well, you could use your hand to make him come, or I can take over for you...\" \n\n\"I can do it, unless you think you should,\" the young woman insisted. \n\n\"If you'd like to, be my guest.\" \n\n\"Would it be alright if I, uhh, used my mouth?\"\n\nThe older woman gave another gentle smile. \"Are you sure?\" \n\n\"I want to see what it's like.\" Cricket bent, prepared to take him back in, then stopped. \"I know you swallow it, after...should I?\" \n\n\"You don't have to, no, a lot of women spit it out after from what I'm told.\"\n\n\"Guys'll tell you if you swallow it shows you love 'em more, but I think that's bullshit,\" Tim grumbled. \"It feels good either way\u2014guys just think it's kinkier when a woman swallows.\"\n\nShe briefly hesitated before again engulfing his length and resuming her bobbing. \"Get ready,\" Gwen offered quietly, \"you'll be surprised how fast it happens.\" The twitching of his hips was more pronounced now, in her opinion bringing him dangerously close to choking her, and the young woman briefly panicked, her hand reflexively gripped his cock at the base in response. \n\nThe extra pressure was too much for Tim and the \"Uhhh!\" escaped his lips as the first jet leapt from his cock. Despite Gwen's warning, Cricket was caught unaware by the force of his spurt against the back of her throat and with a spluttering gag she attempted to pull away from the cock in her mouth while redirecting its aim, not fast enough for the second blast to still land on her tongue, the other spurts landing wetly on her turned cheek while she coughed his spend back up from her windpipe. \n\n\"Sorry, sorry,\" Gwen said soothingly, her hand on the young woman's back now trying to help her recover and breathe again. \"I should have been more clear with my warning. I did the same thing the first time...\"\n\nCricket looked up, wide-eyed and a little shellshocked, her hand still wrapped around the rock-hard shaft. \"I thought I knew what you meant, but he must have shot a gallon.\"\n\n\"It just feels like that,\" Gwen said with a laugh. \"There's a lot of force behind that little bit, though.\" \n\nThe young woman turned her attention to the man whose cock she still held, his come dripping down her cheek. \"I'm so sorry Tim,\" she chirped between coughs, \"that couldn't have been too nice for you! I know I can do better than that\u2014\"\n\nHe laughed. \"To tell you the truth, I feel really bad how good it felt even while you were gagging on it. Are you okay?\"\n\nCricket gave another couple of coughs before replying. \"I think so, yeah, and I'm glad you liked it but boy that was unexpected, like having somebody shoot a squirt pistol into the back of your mouth.\"\n\n\"Now you know for next time, and you'll be ready,\" Gwen advised. \"I kind of put my tongue against his head to keep him from squirting too far.\" \n\n\"Good to know.\" Cricket finally let go of him. \"Feels like I should clean up,\" she said with an embarrassed smile while gently touching the wetness on the side of her face. \"I'll bring back a washcloth for you?\" \n\n\"That would be great, thanks.\" Tim waited until the young woman was in the bathroom. \"Sorry about almost choking your friend.\"\n\nGwen shrugged and smiled. \"You did choke her. That would have been an interesting emergency room visit. She wanted to try it though, and I thought she needs the experience and practice, so...\"\n\n\"Uh-huh.\" His expression made it clear he thought that only part of the story. \"You know most wives wouldn't have even offered her the chance, right?\"\n\nGwen's short laugh came out as a snort. \"I have to guess most husbands would have thrown me out on the street for what I do with my sister-in-law, or that nice young woman in the bathroom.\" It was the Lady's turn to snort. Or for showing yourself to complete strangers, or for having such an obsession with that monstrosity of Neal's, or even thinking what it might be like to spread your legs for whatever man wanted you, she added.\n\n\"Maybe, maybe not. All I know is I'm not asking you to change a thing. You were just the opposite for so long, it's good to see your needle move the other way some.\" \n\n\"You don't think my needle is in the red?\"\n\nLet's just say I'm not ready to pop any relief valves, so I guess my hidden kinks are coming out and keeping pace with yours. Good thing we got each other. Now if only I could ride a horse, then you'd have a real catch...\"\n\n\"You can ride, you just don't like to,\" she retorted with a smile. \"And you're still the best catch I could have ever hoped for. Oh\u2014remind me later to show you something Natalie sent me...\"\n\nCricket found them cuddling in each other's arms when she returned with the warm washcloth and wondered if she should retreat from an obviously private moment, but Gwen rolled her husband on his back and invited her friend on to the bed. She watched while Cricket cleaned and sleep soon followed, Gwen happily sandwiched between a soft and feminine body on one side, a rougher and more masculine one on the other."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "dildo",
        "cunnilingus",
        "blowjob",
        "husband",
        "wife",
        "lesbian",
        "video",
        "sister-in-law"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-25"
}