{
    "title": "Wrong Side of the Tracks",
    "pages": [
        "Author's Note: I wrote this story for the Beyond the Wall of Sleep Gothic horror story event, a rare but gleeful dip into the genre for me. Thank you to blackrandl1958 for inviting me to participate, and to Etaski for the mutual beta/proofread. Hope you enjoy!\n\n\n\n*\n\n\n\nPittsburgh, 1958. \n\nThe slightest tremor shivered the floor under his feet as the train went thundering past, outside. The wheels chanted over the tracks: follow me home, follow me home, follow me home. \n\nSome part of Mason Locke registered the vibration through the soles of his shoes, but that part didn't bother troubling the rest of him with the mundane. When the clatter of passenger cars faded, the pelting of rain on the windows out in the hallway took its place.\n\nThe rest of him sat with furrowed brow at his desk, gooseneck lamp making a cone of yellow light over the insurance application in his hands. The legibility of the applicant's handwriting made him squint and frown. The only other light in the room came from outside, through the frosted glass pane that took up the top half of his office door, but visibility was not the problem. This man's chicken scratch was.\n\nMason coughed again and put a fist to his mouth, even though there was no one else in his office to offend. If this kept up, it would be a trip to the drugstore on the way home. And of course, he'd forgotten his umbrella, because why should he remember a thing like that when it had been raining on and off for days?\n\n'Byrne', the chaotic scrawl in the Applicant field seemed to spell. 'Edgar Byrne', if Mason was making any sense of it. He was going to have to get this Mr. Byrne on the telephone and clarify some of what was on this form, if there was any hope of offering the man a legitimate rate, at all. If he could make out the phone number.\n\nHe set the form aside and rubbed at his eye sockets with his fingers, elbows resting on the desk.\n\nThere were footsteps in the hall. The lightweight click of heels that wasn't male; a more intentional staccato to the quiet, vast rhythm of the rain. \n\nMason reached for the receiver of his telephone just as the steps halted outside the barely-ajar door to his office. An eye flicked to the sound just as a blurred shadow fell over the glass.\n\nThe door swung inward and there was a woman, unfamiliar. Black skirt to her knees, white blouse, dark hair. Surreal, perfect red lipstick that was the only bright color in the room. Mason's train of thought was still switching tracks while she shut the door behind herself.\n\n\"Can I help you, Miss?\"\n\nHadn't he seen her in the building? Perhaps on another floor, at least once or twice in the last few weeks? And where was her jacket in this weather?\n\nMost visitors came with paperwork in hand, but she carried nothing and moved straight for the end of his desk that pointed at the door.\n\n\"Miss?\" He tried again, swiveling his chair to give her full attention. \"Is there something I ca\u2014\"\n\nShe'd stepped right up to him, right into the air he was breathing. Her eyes were huge and dark, as though they welled over with stories. Motion never stopped, and she went from standing to kneeling, her stockinged knees on the floor as he scrabbled back out of the way, shoes propelling the wheels of his chair until the back rest met a filing cabinet with a metallic clunk.\n\n\"Miss, wha\u2014\"\n\nThe woman closed the gap and was between his panicked knees. His eyes shot to the closed door and back, and he gripped the arms of the chair.\n\n\"What are you\u2014Miss!\"\n\nHer hands were on his belt! Fingers working the buckle!\n\nHe moved to swat her outrageous reach aside, but she brushed away his stammering and frantic hands, a sea washing over drowning screams. Languid. Indifferent.\n\nShe had his shirttails out, his fly apart, all while his mouth was open in horror. The urge to grab narrow shoulders and push her away broke on the shores of astonishment. She had his briefs down, and her head bent.\n\n\"Miss, I don't kn\u2014oh!\"\n\nHe was in her mouth!\n\nKnuckles white on the chair arms, blood rushed to what must have been the hottest furnace in the building. Asleep and soft, his cock twitched and plumped awake. Filling that wet cavity.\n\nThe woman showed no signs of anything but forward momentum, and Mason could no longer make words. He could barely make his lungs go.\n\nShe was\u2014!\n\nHe was\u2014!\n\nOh god, and she sucked him like she was starving for it! Red lips in a wider 'O' now, as his prick didn't know a fifth-floor office from a motel room and had risen all the way to the occasion. \n\nMason tried to breathe, but it came out a choked groan and his eyes rolled back. His chair wheels made metallic little squeaks over the floor in time with the bob of her head. \n\nThe door wasn't locked. Someone could come in at any ti\u2014\n\n\"Mi\u2014hunnh!\"\n\nAnd what the Christ was she doing to his balls?\n\nHe dared a look and could hardly handle it. Her cheeks hollowed with her work, one manicured hand clutching him around the base. She fed him past full lips and a busy tongue again and again, dark eyes rising to meet his.\n\nSomething spilled out of her then. It doused him, slicking down confusion and panic. Some cool, settling thing that made his shoulders drop and his tailbone shift lower on the seat. Mason stopped fighting and offered his cock. Gave it to her, she could do with it whatever she wanted.\n\nAgainst all reason, what this woman wanted was to suck. He spread his knees wider, trousers webbing tight under her moving wrist. The surreal held his entire focus. \n\nSlick and stiff, his organ disappeared into her mouth, over and over. Her tongue played scalding tricks, shifting and squirming over taut flesh, darting to taste the hole where he pissed, dipping to tag his sack.\n\nHis right hand had shifted to cover her left on his thigh. Did he remember making that move? Her fingers curled and nails dug into his trousers, Soft, moist sounds from the work of her mouth were a private solo over the rhythm of the rain.\n\nThe woman didn't stop when Mason's grip laced into her hair. Dark curls, crisp with hairspray, gave at the back of her head to the ruin of his palm. Twin lines of eyelashes fluttered down, intent, and he held her to the task.\n\nWhat part of him was this? He didn't ask women for favors like this, let alone grab them while they were at it. He could barely look the girl at the train ticket counter in the eye.\n\nBut now he was grunting. Making low noises while a feminine brow, a cheekbone, a pearl earring bobbed in a nursing loop over his crotch. Mason wanted this. The sight, the scent, the control. The little hums from the back of her throat.\n\nHis fingers curled into a fist. She met his eyes.\n\nMason pushed her onto his cock. Held her.\n\nAfter some quiet glottal noise, he let her off, but aside from a fine string of saliva lolling from shaft to lower lip, the woman bent, undeterred, and circled him again in that perfect red pout. \n\nDown and down she went, her face too pristine, too beautiful to be anywhere near the nest of coarse hair, the musk of a huddled scrotum. He palmed the back of her skull and stuffed himself in to the root. Claimed that hot, sucking hole.\n\nThere were wet clucking sounds, sputtering as she gagged around him. Her hands did nothing to fight it, though, and Mason, a different man in the moment, fucked up into that sticky, bucking throat like he was in the middle of a Roman orgy and not an office with an unlocked door.\n\nShe could only hold on now, hands gripping his thighs while he rode her pretty face. His backside bunched in steady time to the quiet squeaks of his chair, base instincts to feed the meat upward, to scrub himself past tongue and teeth and plumb deep to where yielding tissue kissed and squeezed.\n\nHe could feel it building in his balls. Would she squeal if he shot it down her throat? Would she cough, and her face turn red?\n\nBoth hands guiding her now, and the woman accepting. Clinging as she let him violate. So good, so good, and he just. Needed\u2014\n\nSteps in the hall. Male. They stopped at the door, along with Mason's heart. His pumping.\n\nDon't come in here. \n\nShe took up for him, reckless, swallowing him down to the base. Mason ground his teeth against every small, wet sound that might warrant unwanted attention, while his eyes rolled back at her vigor, at the fear prickling his skin.\n\nThe man in the hallway was talking to someone else, the bass in his voice a murmur. A threat.\n\nPlease, don't come in here. \n\nHer hand was on him again, jerking his cock from the base, coaxing, milking. Shoes shuffled outside, mere feet away from where Mason sat, balls-deep in some strange woman's mouth on company time.\n\nChrist, don't com\u2014\n\nEverything seized.\n\nGOD!\n\nAnd then pulsing, scalding light.\n\nHe wanted to turn inside out. Parts of him were trying. A mouth worked, ceaseless, and he spurted into it, biting his lower lip nearly in half to keep from loosing the roar in his lungs. Oh god. Oh god, she kept sucking! Swallowing! Tugging! He was sure some small thing might burst inside his skull, or he might stamp his foot on the floor from having to keep silent.\n\nToo sensitive! Holy shit!\n\nThe footsteps outside ventured off, and Mason let out a shuddering breath. The labor in his lap slowed and became gentle. Soothing. He stared at the ceiling, head on the back of his chair, jaw slack.\n\nWhile he slumped in a haze, soft lips and tongue cleaned the guilty member in his lap. Lungs resumed some normal pace beneath his ribs, and he only lifted his head when he felt the small jerks of leather that meant she was buckling his belt again.\n\nMason stared at the woman, who moved to stand, palms on his thighs for support, painted red lips impossibly unsmeared. Dark eyes searched him, and the first question rose is his throat, but she was at the door. Through it. A glance over a shoulder as she slipped away down the hall.\n\nHe blinked into the vacuum she left. One reality had derailed into another, obscene and ludicrous, and then jerked back into line again so fast it might have been a hallucination.\n\nBut he shifted to sit upright, and his cock was still damp in his pants.\n\n\"What the fuc\u2014\"\n\nA new round of coughing seized his dry throat. Worse than earlier, and he pounded his chest with a fist. There was a watercooler at the end of the hall, but Mason bent double, his shoulders quaking over his desk, eyes burning. That deep trill in his chest with every bark.\n\nAnd something was in his mouth, making it worse. On the back of his tongue, some wet wad.\n\nBetween hacks, he forced fingers between his teeth. Reached while his throat still convulsed and found the offensive something. When he slid it out over his tongue, he could only squint, lip curled, at the wet thing plastered to his fingertips.\n\nAmid subsiding coughs, he brought his hand into the light from the desk lamp. A dun-colored triangle; serrated on one edge. He rubbed it between finger and thumb.\n\nNewsprint?\n\nHow ...\n\nHe peeled the thing up and turned it, but there was no print on either side. Only a thin, watery streak of blood that stuck the inexplicable paper scrap to his thumb.\n\nMason exhaled, long and deep.\n\nMystery women. Bloody pieces of paper. Clients' handwriting he couldn't read.\n\nHe needed to get out of there. It was close enough to five o'clock; no one would hassle him. Edgar Byrne, or whatever his name was, could wait until tomorrow. Mason flicked the scrap of paper into the wastebasket.\n\nLamp switched off, hat and coat collected from their hook, the besieged actuary left his office behind.\n\nAt the end of the hall near the elevator, another door stood open, and a lanky blond man sat inside at a similar desk to Mason's. He'd rolled his shirtsleeves up and was scanning through a pair of horn-rim glasses back and forth between a life table and some other densely printed sheet of paper.\n\nMason stopped at his door. \"Say, Wynn.\"\n\n\"Yeah, Locke.\" The other man didn't look up from his work.\n\n\"You seen a new girl in the building?\" He re-draped his coat over his forearm. \"Dark brown hair? Big eyes? Maybe down on the third floor, or something?\"\n\nWynn swiveled his focus to his colleague. Pale blue eyes blinked at him. \"No. Not that I can think of,\" he said. \"There's that blonde down in the lobby, but ...\" The man shrugged, acknowledgement that the description didn't match. \"Why?\"\n\n\"Eh.\" Mason vied for indifferent tones. \"Saw her passing in the hall. Wasn't sure if she was a secretary, or ...\"\n\n\"No idea.\" Wynn turned back to the tables.\n\n\"Well,\" said Mason, \"have a good night.\"\n\n\"Night.\"\n\nHe coughed again, waiting for the elevator. \n\nHad that woman even been real? The things she'd done, kneeling in his office, had felt real enough. But why? Who was she? Where had she come from?\n\nYou didn't do a damn thing to stop her, either. Just sat there like a pervert. Grabbed her hair.\n\nAnd that scrap of paper?\n\nMason Locke did not enjoy dealing in unknowns.\n\nHe enjoyed it even less when they came from himself.\n\n*\n\nEvery squeak of his office chair as Mason shifted at his desk throughout the day was another uncomfortable reminder of the woman and what she'd done. The Incident, as he was now mentally referring to it, had occurred a full week ago, and yet here was his prick, still jumping at every tip-tap of high heels that went past his door.\n\nHe'd seen neither hide nor hair of the brunette since, other than on the backs of his eyelids while he alternated between furious masturbation and shame, each night. And on Friday, both of those things at once in the fourth-floor washroom, just after his lunch break.\n\nThe clock to the right of his office door told Mason it was nearly six, which suited him just fine. There had to be some demarcation to his recent daze of work-eat-sleep. Even the coughing had become background noise. Since the Incident.\n\nAt least he hadn't hacked up any more strange little pieces of paper.\n\nHow was a man supposed to concentrate on actuarial tables and insurance rates after a thing like that? \n\nHis inquiries around the building had produced no results. He'd probably been less circumspect than he would have liked, but that mania, that desperation to make sense of it, had him in a grip. No one had seen a woman of that description. Not in the typing pool, not among the switchboard operators. Not even\u2014heaven forbid\u2014among the sometime-visiting wives of the executives.\n\nIf Mason had imagined the whole thing, well then ... then he was going to have to go see a doctor about a lot more than this cough.\n\nAs if summoned with the thought, tissues in his throat rubbed together, dry, and he barked into a fist. There was already an empty bottle of cough syrup in the wastebasket. He'd have to pick up another on the way home.\n\nThat's three this week.\n\nMason cleared his desk and retrieved his hat and coat. \n\nAt the end of the hallway, when he turned to say 'good night' to Wynn, the door was closed, the office dark on the other side of the glass. Mason hadn't heard him leave, but then he also hadn't heard much over the noise in his own head for the last few days.\n\nHe pressed the call button for the elevator and waited. His shirt and tie and trousers a shell inside which Mason felt imaginary. As though yes, his head and hands were in on the fa\u00e7ade act but, past the seals of collar and cuffs, there was nothing else of him inside. A void. An empty recording of a beating heart.\n\nWhen the car arrived on his floor and he swung the door open, however, the very real clutch of that same heart in his chest yanked him straight back into the viscera of reality.\n\nShe was there.\n\nOn the other side of the scissor gate, in a grey dress and jacket. Clutching a small purse. Smiling quietly in scarlet.\n\nWhy, when Mason had at least a dozen questions, did he want to turn and run down the hall to the stairwell?\n\nHe pushed the gate open, instead, and stepped inside the car, pulling it closed behind him. Pressing the button for the lobby out of habit.\n\nCoat and hat like a shield, he turned to the woman, his mouth coming open before he knew what would come out of it.\n\n\"You came to my office the other day.\" Some mysterious part of him supplied words. \"And I ... I don't know ...\" Poorly.\n\nEyelashes fluttered to the floor as the car descended, and shy spots of color bloomed on porcelain cheeks. How did a man talk about something like this?\n\nShe was the one who did it!\n\nHe tried a different tack. \"What's your name?\"\n\nNow she did look at him again, as though he were the sun breaking rainclouds. Dark eyes were huge, and she faced him. \n\n\"It's May,\" she said, the words full and heavy like some endearment he hadn't earned. Her lips never sealed back together, but if she had more to say, it didn't come.\n\nThere was less space between them, though whether he'd moved or she had, Mason couldn't tell. The car should be groaning to a stop in the lobby, but it rode on, descending.\n\nThose eyes swallowed all his attention, hypnotic. He'd last seen them looking upward for approval while he'd disappeared into her mouth. The hem of her dress brushed at his trousers and the woman stood on her toes. Her lips were so red. Painted perfect. He wanted to smear them. She tilted her head.\n\nThe beginnings of the kiss carried so much weight; a boulder tipping somewhere high on a plateau. Her breath and his, drawn in together at the warmth, the spark of it again. And then the tipping point. The fall.\n\nThey were tumbling in it, his tongue in her mouth, her fingertips curling on his chest. His free hand was on the back of her neck, and Mason didn't know whether he'd let her go if she tried to pull away. Some primitive instruction written in muscle and bone told him to pry her open, to get inside where it was warm and wet. \n\nAnd May yielded, sweet tongue meeting his, soft flesh, bound in brassiere and dress and jacket, pressing to him. Her purse hit the floor of the car, a dull thud against the grind of moving cables. A delicate hand was between them, fumbling at his belt.\n\nMason inhaled and his eyes came open. Any version of him who hadn't lived this last week would have stayed her hands, would have tried to be something of a gentleman. They were in an elevator, for Pete's sake! But the only version of him here now had suffered through several agitated, sticky nights asking 'Who?' and 'Why?' of empty rooms, and none of those questions mattered now, because here she was again, and he could have more.\n\nMore of May.\n\nHis hat and coat fell in a heap on top of her purse. His hands were about her waist in a grip, and the feminine squeak she let out when Mason spun her to face the wall went straight to his cock.\n\nHe was crowding her, hot breath in the crook of her neck like a beast while he worked at buckle and fly one-handed. Finishing the job she'd started.\n\nThe elevator descended, impossibly. They should have been on the ground floor long ago, but Mason ignored it.\n\nHis prick was out in the open air, poker stiff and in hand. He leaned in, rucking the grey wool of a skirt, the satin of a slip up over stockings, over a gartered bottom. May's hands were in the thick of it, wriggling panties past her hips.\n\nAs soon as the fabric was clear, a taut bridge between her thighs, Mason fit himself close. She braced her palms on the wall and stood on her toes, lifting that bare backside.\n\nHe didn't even look. Just aimed his cock with a fist, smeared around for that other wet mouth between her legs, and pushed.\n\nInside her again. Yes.\n\nShe moaned, one cheek against the wall, red lips parted, and Mason fucked her.\n\nIf her mouth had been heaven, there were no words for this. He rooted into her body over and over, spine hunching like an animal. Her dress rumpled around them, hiding the obscenity from view while her pussy took his violation with a kind of aggressive surrender a mouth could never match.",
        "He couldn't remember being this rough with a woman. Grunting. Clapping his hips to her buttocks. Circling her throat from behind with a hand to keep her in place for the fucking.\n\nHer little noises had his balls drawing up tight. His belt buckle jangled at his thigh. He rutted, cock slicking in and out, selfish. Heedless.\n\nThe elevator descended.\n\n\"Mason!\"\n\nToo much!\n\nHe seized up. Plunged home. Began to spurt as he held her by the hips.\n\nOh god!\n\nAnd she let him, pushing back, soaking up the filth he pumped into her like he was more than some strange man taking advantage where he could find it. He sluiced past plum-ripe flesh, juice seeping around the seal, her whimpers steaming the gloss of the wall, lovely as they came with his every last jerk.\n\nMason all but fell away from her when it was over. Some automatic part of his brain still operating separate from the chaos of impulse had him tucking his cock away, righting his trousers and shirt tails. May was tugging her underthings back into place, smoothing her skirt.\n\nWhen she faced him, the haze cleared, and Mason blinked, a different man.\n\n\"May, I'm ... I don't know what ...\" \n\nShe stooped to collect her purse, before standing again, the crimson edges of her smile pristine. \"Don't worry,\" she said, and came up on her toes to kiss him, chaste this time, a ghosting of fingertips at his jaw.\n\nThe elevator bobbed to a halt. May turned and slid the gate aside.\n\n\"Wait.\" He put a hand on her wrist.\n\nDeep brown eyes shimmered with kindness and something else. Regret, perhaps. \"I have to catch my train.\"\n\nShe pushed the door to the lobby open and left, a squeeze of her fingers the last thing he felt as May pulled her hand from his.\n\nMason stood there, dumb, but the door swung open again, and another two men halted to find him in the way. He shook his head and muttered a pardon, bending to scoop up his coat and hat. The pair turned their heads as he sidled past, but the actuary couldn't care if he looked a mess.\n\nThere was no May in the lobby and, for an idiot moment, his feet wanted him to head for the front doors. His lungs convulsed in argument; Mason was in no condition to be chasing anyone down the street. \n\nHe pointed himself at the first-floor washroom, instead, a quick check for shoes under any of the stall doors before he risked a hasty wash-up at one of the sinks. The mirror showed him a forty-six-year-old man who looked like shit. Sockets dark under his eyes, skin sallow under bright light.\n\nAnd no lipstick anywhere?\n\nIs this what he'd looked like when she'd kissed him? He was no matinee idol. Women didn't drop to their knees for this. Didn't pull their panties down in elevators. Mason Locke looked like death, and he punctuated the notion with another round of coughing.\n\nHe had his hat on his head when he stepped out onto the street, shrugging into his coat as he went. On the opposite side of the building, trains clattered heavily in and out of the station, the sound a thrum on the air, in his bones, like the rushing of blood at his temples as he set off down the sidewalk. \n\nFollow me home, follow me home, follow me home.\n\nHow had she known his name?\n\n*\n\nMason set the brown bag from Thrift Drug on his kitchen counter, the taste of lo mein still on his lips as he clicked on lights in his apartment. Coat and hat hung on the hall tree, shoes abandoned alongside the sofa, he made to pull the knot from his tie and unravel after the second strangest day he'd lived through since god-knew-when.\n\nAs soon as he flopped into the support of his sofa, Mason swore and heaved himself back to his feet. Couldn't remember anything these days. From the cupboard next to the kitchen sink, he retrieved a glass, and then swung around the doorframe to the sideboard in the living room where he kept his liquor.\n\nThe bottle of Seagram's was half empty already, and he emptied another two fingers' worth into the glass. This time, when he settled into the sofa with a grunt, he set the tumbler aside on the end table and turned on the little radio he kept there. If he could just hear something other than the whirring in his own head, he might be able to relax for ten minutes.\n\nStatic hissed from the speaker even as he went to lean back and massage at his temples. A noise of aggravation in his throat had him coughing again, but Mason leaned over and tweaked the dial.\n\nJust a nudge. It should have been tuned to KDKA, where he'd left it. Now, he was getting nothing. He turned the knob back the other way. That empty rain-crackle was there, a sound like a dinner party abandoned with full plates still on the table.\n\nHe switched the radio off with a sigh. Either something was going on down at the station, or the damn thing was broken. And having to think about which it might be, to think about anything at all, really, was about the last thing Mason wanted to be doing just then.\n\nSlumped on the cushions, glass resting on his unbuttoned shirt, the actuary depressurized for the night by sips.\n\nHe'd been trying\u2014trying\u2014to gather his routines back into some semblance of normalcy after The Incident last week. Now what? What was he supposed to name what had happened today? The Second Incident?\n\nThe whiskey worked on melting him and Mason closed his eyes.\n\nMen just didn't ... fornicate with women in elevators and then walk on about their business. Who was he? To grab her like that? To push her against a wall and get up under her skirt?\n\nHis prick shifted in his trousers, lazy interest at the images on the backs of his eyelids. When was the last time, before this? Had he been so hard up? There hadn't been a steady girl in his life since ...\n\nSince when?\n\nMason's eyes popped open and he frowned. Squinted against the light from the end table lamp. The last woman he'd been with was ...\n\nLike that radio static. Gone. Not a name, not a face.\n\nHow was he not remembering a thing like that?\n\n\"You're not getting enough sleep,\" Mason said to his living room furniture. He emptied the glass down his throat and groaned. Shoved himself up out of the sofa.\n\nOne last trip to the kitchen to rinse out the tumbler and grab up the paper bag with the cough syrup, and Mason resigned himself to head to bed. Didn't care if it was only eight-thirty. Today had been enough.\n\nOn his way past the sideboard again, he cocked his head. Framed photographs of his family stared up at him. A sun-bleached image of him and his father, fishing at the lake when he was maybe eleven. A more recent portrait of his mother, taken at his sister's wedding.\n\nHe picked up a small silver frame, another hole in his memory, and cursed out loud.\n\nThe Thrift Drug bag thunked to the rug, syrup sloshing inside glass while Mason held the little frame in both hands. Brought it to his face so he could blink and shake his head.\n\nOn the front steps of some unfamiliar house, the photo painting her red lips black and her skin paper-white, stood May.\n\nArm in arm with Mason.\n\nThey were smiling.\n\nNo.\n\nHe stared at it. Just stared.\n\nHis hair was shorter in the picture, but not much. The nose-end of a sedan peeked out around the porch from the driveway. And she was ... there.\n\nA circus of truncated questions went wheeling, tumbling between his ears. Mason grasped at the flapping pieces and tried to tie them together, but no one end was long enough. Nothing would hold.\n\nWhat was he supposed to do now? Telephone his mother at this time of night and ask whether he'd ever brought home a girl named May?\n\nHe retrieved the cough syrup from the floor and stood, scowling at the photo. It didn't belong on his sideboard. Not where it could gleam there, a beacon for a fractured reality to flutter around like so many moths.\n\nHe dropped the entire frame in the kitchen wastebasket.\n\nClothes piled on the floor, a swig of medicine down this throat, Mason pulled the sheet high over his shoulder and curled up on his side in bed.\n\nIn the dark, it was the rustle of fabric all over again. The delicate tang of her sounds. The sheen of vertigo while the elevator descended. While he was inside her.\n\nNo.\n\nHis cock stood out from his body, hard and oblivious.\n\nI don't want this. Whatever this is. \n\nMason fought past his anatomy and too many unanswered questions until he found, and flung himself into, sleep. \n\n*\n\nThe alarm at seven was jangling murder in his veins, and Mason lumped a blind hand at the clock until his fingers found the switch and the atrocity came to an end.\n\nA shower, a shave, and a toothbrush bristling around in his mouth were a morning prescription to slough disorientation from yesterday. He would have to go to work. His landlord would want rent, not tales of mystery women and framed photographs.\n\nHe dragged on socks and trousers, coughing as he went with a sideways look for the bottle of syrup. Did the stuff do anything, or was it still legal to sell snake oil at the drugstore?\n\nBuckling his belt yanked him straight back to the elevator, and Mason sighed. He might just knuckle down and take that damned photo into the office. Ask Wynn and the boys whether they'd ever seen the woman. May.\n\nThe bathroom mirror shamed him for the thought while he pulled a comb through his hair. How would he answer their questions, then? 'Why don't you know her, Locke? You're the one in the picture.' And then the rumors. The suggestions he 'take some time off.' \n\nMason shook his head and the side of his mouth turned down. No. Bad idea. But sleep had cleared away the whiskey. He could think straight now.\n\nTie in place, he went out to the sofa to slip on his shoes. Went back to the kitchen to the trash. To fish it out and have another, clearheaded look.\n\nThere were paper napkins in there, but that was fluff. The silver frame had been heavy; it would be on the bottom. He dug past eggshells and empty sausage tins. Made a face and pulled the whole bin out from under the sink.\n\nNow he was squatting on his heels, pawing, pulling the larger pieces of rubbish out onto the floor.\n\nIt wasn't there.\n\nHe could see to the bottom and there was nothing like a frame, a photo. Just a few days' worth of garbage, most of which he now had to pick back up off the tile.\n\nI ... it was ...\n\nAround the corner, the photos of his family sat where they always did on the sideboard. The one scratching away at the finish on his sanity was no longer among them.\n\nMason scanned the whole length of the sideboard, agog. Brows drawing down, mirrors to the curtains over what he could claim to know of objective reality.\n\nMaybe you should see a head-shrinker, Locke.\n\nOr maybe he should quit fooling around and get to work.\n\nHe made another trip back into the bedroom to pick out a clean handkerchief from his top left dresser drawer. It would be no better than taking in that photograph if he started asking his colleagues how to get blood stains out of all the others.\n\n*\n\nAnother week of incessant rain worked to wash the ugly disruptions from Mason's routines. The skies could be grey forever, as far as he was concerned. Grey was beautiful. It was neither black nor white. Neither feast nor famine. Nothing to get excited over, no shadows to jump at.\n\nHis cough was down to a mere tickle. Maybe late at night he'd fall into it, at most.\n\nThe only thing he could live without was the way it made him cold. Walking to and from the office didn't help, but the trip wasn't nearly far enough to justify getting on the bus.\n\nIt had been enough, at least, to have him moving his showers from the mornings to just before he headed to bed, the last three nights, and that was where Mason stood, head ducked under the spray, palms braced on the wall, letting the meat on his bones get warm.\n\nHe should get out, soon. The hot water wouldn't last, but he hadn't yet given up on the idea that he could quit his job and live in the steamy little rectangle of space forever.\n\nDamp heat opened his sinuses and Mason sniffled. Sighed. Coughed.\n\nDamn it.\n\nHere he went. No pretense at stifling, there was no one to see. Just hacking with vigor; the logic to get it out, to be past this round for the night. \n\nHis lungs tried to wring themselves out like sponges. He sucked air between the fits.\n\nOkay. All right, goddammit!\n\nIt was not all right. Mason's tailbone bumped against the tiled wall as he leaned, arms curling around his ribcage. Great bronchial honks bleated out from the center of his chest, the rest of him limp and useless while the malady drove him.\n\nThe pitch rose as he couldn't stop it. His eyes bugged. Something was ...\n\nNo.\n\nComing up.\n\nNot again.\n\nSick sounds flattened out to something speckled. Granular. His throat convulsed, tissues working foreign matter up and out. Mason bent double and retched.\n\nBright, lipstick red splattered the grout underfoot. The spray from overhead muddied the scalpel edges of red on white, swirling it down the drain while Mason's head swam.\n\nLips, smeared. Unsmeared.\n\n'Don't worry.'\n\nHis sides heaved again. Something foul was on the back of his tongue. Draping from his lower lip, a long, black rope. He snatched at it\u2014out! Get it out!\u2014and gagged again at the length snaking from his throat.\n\nHair.\n\nIt was hair, and long. Not his, and Mason flung it at the wall, where it stuck, curlicued and grotesque.\n\nAnd something hard. Rolling alongside his gums. He grimaced and worked his tongue until he could spit the thing into a palm, and when he saw it, his stomach joined in the heaving.\n\nA tooth. A single cuspid, root broken amid watery pink that pooled in the valleys between his fingers.\n\nMason dropped the thing like a hot coal and shoved those same fingers into his mouth, checking, urgent, while the water began to go cold. But there were the regular rows, in their little horseshoe shapes, top and bottom. No gaps. No new blood.\n\nIf not his, then ...\n\nStop.\n\nHis mind sheared away from the question. He was not asking it. Not. To ask questions like those was to make admissions.\n\nHe wrenched the shower knobs until the water quit falling. The pipes groaned behind the wall, revulsion mirroring his for the tooth. The hair. \n\nHe would not touch them. Not tonight. Mason pulled the curtain and stepped out, shivering, and reached for his towel. Maybe tomorrow the gruesome evidence would be gone. Just like the photograph.\n\nMaybe tomorrow you'll be gone. Be like Stevenson over at Green & Daily. Just have a nice little nervous breakdown and the men in the white suits will come.\n\nHe worried the towel over his limbs; scrubbed his hair with it, brisk as though he could whisk everything that was wrong out of his head that way. Terrycloth tucked around his waist and a firm refusal to consult the mirror, Mason pulled open the bathroom door to cold air and a dark hallway.\n\nLight from his bedside lamp made a wan rectangle into his bedroom, and he made his way there, damp soles on the floor.\n\nThe mattress on his double bed dipped on the near side from the woman sitting on the edge.\n\nMason's heart tried to end him.\n\n\"May?\"\n\nHe gripped the doorframe, staggered.\n\nJust in a housecoat, she sat. Legs crossed at the ankle, hands folded in her lap. No red lipstick in sight, this time. No powder or cake at all. Her hair was down, wet like his, and it stranded limp over her shoulders. The whole of it made her dark eyes bigger, somehow, the bow of her lips more fragile. Vulnerable.\n\nHe made his legs propel him into the room.\n\n\"Wh ... what are you doing here?\"\n\nShe cocked her head, a fine line coming between her brows.\n\n\"How did you get in?\" he said, ignoring the way they were both dressed, or rather, weren't. \"How ... how do you know where I live?\"\n\nMay smiled prettily and shook her head. \"Mason, what are you talking about?\" She braced her palms on the mattress on either side of where she sat and settled her weight on her spine, as though she belonged.\n\nWhite suits.\n\nHe went to her, crumbling into it. Dropping to his knees on the rug. His arms slid around her waist, the damp of his hair soaking the white housecoat while her ankles opened to gather him close. She cradled his head in her arms and the nonsense began to pour from his mouth.\n\n\"I don't understand.\" He was sniffling into her softness like a child, eyes going hot.\n\nShe ran fingers through his hair and stroked the back of his neck, the tops of his ears.\n\n\"There was a photograph,\" he said, a hardness coming in his throat. \"Do I ... do I know you, May?\"\n\n\"Oh, honey.\" Her arms were around his shoulders, and Mason sobbed, lost.\n\n\"May.\" The name was a plea.\n\nThe side of her cheek laid on top of his head and she shushed him while he convulsed, weak, gripping her small frame like he might drown if she wasn't there.\n\nI give up. I can't.\n\nShe cooed and stroked until he was still, until his ribs quit stuttering. Until he dared extract himself and look up.\n\nThere was more sympathy in that one pair of eyes than in all the open-armed statues of virgins he'd ever seen. May took his upturned face in her sweet hands and leaned down, absolving with a kiss. \n\nFor several erratic heartbeats, Mason knelt there, dumb, and let her tend his hurts. Let soft lips piece him back together, even if it might be in some other way than what he knew from before.\n\nBut she sighed into his mouth, and her knees shifted, a quiet reminder he was between her thighs. Inertia fell away and Mason tilted his jaw. Kissed her back. When she hummed against his tongue, he knew what he needed.\n\nThe arms circling her waist moved to become splayed hands on her back. His nipping and tasting drifted to the smooth line of her jaw, the heat of her throat.\n\nMay only shrugged, helping when his fingers traced the neckline of her housecoat to slip below the lapel, to brush it from her shoulder. Clean, fresh skin curved away from him in all directions, and Mason had attention for it, nuzzling, lapping. The well above her collarbone, the cleft where upper arm met naked breast.\n\nOh, no. No panties or underthings to stop him here. Mason ducked his head for a nipple, pink in the dim light, and she let her head fall back when he caught it. When he pulled with his teeth and, unsatisfied still, let go and rose to his feet. Made the mattress strain further when his weight joined hers, one knee at a time, and he bore her back on the bed, towel coming loose as he straddled her thighs.\n\nMay arched when he bent to suckle again, to press him to a cream-pale tit, while his palm weighed and squeezed the other. While his erection rose hot against shower-damp fabric and squirming woman.\n\nHis fingers wandered. Ribs, then the nip of a waist, then her belly, tugging housecoat away as he went. The place where her thighs split around him was wet, and she mewed when he traced fingertips there. Rolled hips when he burrowed past fur and plump lips to get inside, first his middle finger, then the ring, so he could feel where his cock had been.\n\nMay oozed around his knuckles. She clutched his shoulder while he worked in and out, but feeling wasn't enough. He sucked at her neck, her tits, and found himself sliding, back off the edge of the bed, until his knees met the floor again, and her pussy was in his face, a wet trail down her thigh where he drew his fingers away.\n\nMason sank between her legs and buried himself to the nose. She gasped and five cold toes dug into ribs on either side when he latched on with his mouth and nursed.\n\nHis thumbs pried her open; she would not hide this time. Not run off. She would squeal until he'd had enough.\n\nMason made her squeal. He made his tongue do things that had him locking his arms under her thighs and over her hips, so her wriggling could buy no relief. ",
        "She panted and took his hair by damp fistfuls. He growled and ducked back, out of the way long enough to catch her up by a bent knee and roll her onto her belly. To dive down again and lap at her snatch, to draw at that sticky pink nub that stood swollen out from her lips. Mason wormed fingers into her cunt, an index from both sides to spread her wide and have her humping the bedspread, desperate.\n\nSlick with fluid, he shifted attention to the pucker that bobbed in his face. Pressed his touch there, prying her cheeks apart when she squeaked and pushed past the knot of muscle.\n\nWarm inside. That's how she felt. Both her holes, and Mason was in up to his knuckles, rhythmic in alternation, juicing her secret places until he was satisfied she couldn't think, and then he poured his tongue back into the mix and stirred the poor woman to a froth.\n\nMay bucked for him and made reckless noises his neighbors would hear. She tried to push him off with her feet, sensations too intense, but her knees were off the edge of the bed, and he was too close. \n\nAnd how close are you, sweet?\n\nHe sealed his mouth down around her and sucked. Squished a second finger into first one entrance and then the other, to pack her full, to plumb in and out.\n\nShe warbled nonsense into the mattress and struggled toward her limit. Mason drove her, relentless, until her body clamped at the stuffing fingers, milking. Until fluid seeped into the crevices of his palm and her thighs shook.\n\nAnd when May floated down, Mason rose up, that same violence taking him as it had in the elevator. He kicked the towel out from around his ankles and clambered back up on the bed, the limp woman dipping from right to left as he mounted the backs of her legs. As he angled his cock low and led his hips down to meet her cheeks. To glide through the mess he'd made and get himself slick.\n\nEvery time.\n\nHe rooted for the place he could slip inside, up on one arm while May angled her hips, spent but willing.\n\nEvery time you're inside her the dream is over. In minutes.\n\nWas it a dream? Or had Mason Locke lost his mind?\n\nThe woman twisted her neck to look back at him, cheek still pressed to the linens. It could be. Dreams were a sudden blowjob in a darkened office. A fast girl who took her panties down in an elevator and then walked away with a kiss.\n\nIt was too available. Too easy. Dreams always said 'yes.'\n\nMason held her gaze. Shifted his aim.\n\nDreams didn't hurt.\n\nHer mouth came open. Brows came down.\n\nHe pushed where his fingers had gone, where her body didn't know how to take him. Forgot her pussy and stretched that little ring, instead.\n\nThe pain on her face was real. She clutched at the bedspread and whined, and Mason didn't stop.\n\nNot a dream when he opened her up. Not a dream when she pushed, but the hard organ wouldn't back out of her bowels. He felt her knees try to bend and scrabble, but Mason sank down, draping his weight on her back, and fitted his groin to the cleft of her ass.\n\n\"Does it hurt, May?\" \n\nHis breath landed on her ear, and her face knit into lines against what was stiff and inside her.\n\n\"Y-yes!\" It was nearly a hiccough, but it was raw. Real.\n\nHe drew back his hips and bored into her again. Slurred at her like a drunk and smeared the hair back from her forehead with his fingers. \"Do you want me to stop?\"\n\nThe eye looking up at him shimmered, wet. \"No.\"\n\nDreams always said 'yes'. Mason didn't stop.\n\nShe whimpered under him, and he made her hurt. He abused her rectum as a hot, sucking sleeve, a place to sheath his angry prick, over and over, as long as it pleased.\n\nAnd oh, it pleased. Housecoat bunched at the small of her back, hips pinned to the bed and that helpless little bottom unable to shut him out. His spine curled, hunching his back so he could wedge down deep, so his balls could squash against her empty cunt each time he hilted. \n\nMason gathered her wrists, one at a time, and planted them above her head. Clamped them to the bed in his grip while he fucked her prone and she stretched taut under his use.\n\nTears were making a pool in the sideways socket of her eye, trailing a line over the bridge of her nose. Narrow, brass bedposts grated the plaster of the wall. Springs squeaked in a pattern, and Mason grunted in time, snapping his hips into the perversion.\n\n\"May.\"\n\nHe'd showered, but now he was sweating. Snarling.\n\n\"Yes, Mason.\" Her voice broke. She was sobbing out loud, taking his cock. \"YES!\"\n\nHe roared and jetted those black dreams down into her body. Kept pumping while she mewled, her eyes rolling back. Newsprint and photos and teeth and hair, he fed them all to the woman, as though she might fill up and choke. Might relent and give up answers.\n\nThe riot in his veins, between his ears, drained out with the purge into flesh. His heart staggered under his ribs, and shame rushed in to fill the void of aggression.\n\nMason let go her hands. Slid from her body, sticky and falling fast.\n\n\"May.\"\n\nShe sniffled and let him put her back together. Let him drag the housecoat around her, the bedspread and sheets down so he could persuade her head onto a pillow.\n\nHeavy, lavender eyelids blinked back at him as Mason slipped into the bed at her side. There was no office door. No elevator to walk out of this time, fully clothed and onto the street. She wouldn't be going anywhere. \n\nHe switched off the lamp and gathered May's soft frame in his arms. Pressed his lips to her hairline, and she curled into the warmth. Her fingertips nudged among the hair on his chest.\n\n\"Mason.\" His name was a breath, her limbs going slack. \"Come with me.\"\n\nHe stroked damp hair away from her ear. \"Where, honey?\"\n\nShe was already asleep.\n\n*\n\nWhen she wasn't there in the morning, Mason had lost all ability to be surprised. The only consolation to his sanity was the scent of her on his hands, a memento he discovered while inhaling as he rubbed at bleary eyes.\n\nThere was no housecoat, no rumpling of the linens from another body. But his discarded towel was still on the floor beside the bed, and the smell of her on him was unmistakable. May had been there. A person did not wake up hallucinating the same things as before they'd gone to sleep. At least as far as he knew. \n\nMason stretched his arms in bed and his eyes fell unfocused in the direction of the drawn curtains over the window. \n\nJust what sort of reality could a man accept? A woman who came and went with no warning whatsoever? A life that swung between the tedium of geometric tables, grey days and nights of radio static stretching on toward some horizon at one extreme, and at the other: atomic, unpredictable episodes, the sort that came brown-paper-wrapped, from beneath the counter of the one shady newsstand on the block all the fellas knew. \n\nMason spent every working day staring at pieces of paper that told him when other people were most likely to die. And then he took their money, a bet against those odds, like some backward Charon ferrying against the current on a River Styx of annuities.\n\nSome poor bastard had to do the dirty work. Had to guide those souls on their way. But who did the living get? Mason had been ship and rudder and helm, all unto himself for as long as he could recall, but there had been no wind. No North Star.\n\nAnd now here was May, a tempest.\n\nHe had to make decisions. There was no controlling other people, but he could damn well take control of himself. It would be the only way out of some narrow existence where he waited for things to happen.\n\nToday was Saturday. Mason pushed back the sheets and swung his legs over the side of the bed. Inhaled.\n\nHe wasn't hearing more rain outside, at least nothing intense. He could go out and pick up a newspaper. Maybe get his hair cut, if the barbershop wasn't too crowded.\n\nShowering again was a debate, but he gave in to his own, lewd stink and had one anyway. The problematic twist of hair he'd flung onto the tiles the night before was gone, and Mason refused to see in the disappearance any new, weird portent, but accepted it as a comfort instead.\n\nHe scrubbed himself pink and found clean clothes to wear. Shoved open all the curtains to dissolve the gloom. He was a hat and umbrella away from ready to head out, when a flat clack! sounded from near his front door.\n\nMason came around the corner to the entry, but there was nothing. No one. He even stuck his head into the kitchen, expecting to find what, he didn't know.\n\nWith a frown, he moved for the door again, and something gritted under his shoe. A quick step back revealed a familiar rectangle on the floor, and Mason Locke thought he might be the first man to choke to death on his own heartbeat.\n\nEven bending to pick the thing up, he knew. The tips of his fingers prickled, pins and needles, and his stomach flopped like a fish as he turned it over.\n\nSmiling May. Smiling Mason. Arm in arm, where he didn't remember.\n\nAnd the glass was broken, now. The noise he'd heard, no doubt, but where had it fallen from?\n\nHe shuffled, distracted, to the kitchen, to dump the shards in the trash. To pluck the photo from its frame and bring it right in front of his face to really squint.\n\nNo lights came on, other than reminders of the previous night, but he flipped the image over, hoping.\n\nThere was no inscription there, no scrawled date or names. He frowned and made to toss the entire empty frame again, when a flash of yellow warned him otherwise.\n\nA printed card waited, wedged into a corner between frame edge and press-paper backing, behind where the photo had been.\n\n'The Pennsylvania Railroad Company. Good for one passage, in either direction within one year in addition to date of sale stamped on back.'\n\nMason plucked the train ticket out and turned it in his fingers. The thing had expired a year ago, unused.\n\nGold for the ferryman.\n\nHe snorted, and this time he did dump the frame. Tucked the photograph and the ticket in his coat pocket so they wouldn't disappear on him.\n\nMaybe he should disappear.\n\nMason picked up his hat and stepped out of the apartment. Locked the door and moved off down the hallway, anything to avoid the sucking pull of questions he couldn't answer.\n\nWet pavement met him outside, that tang of clay and metal in his nostrils, but the clouds were light enough not to oppress. He could breathe out here. He could walk, and he did, a left turn to go see about that newspaper.\n\nCars drove past on the street, tires hissing through puddles like the breaking of waves on a shore. He should take a vacation. When was the last time? Florida. California, maybe. Somewhere with palm trees, just to be away from all this for a week. Hell, two weeks, even. Mason never asked for time off. They would give it to him.\n\nHe coughed a little into a fist and stepped around an older man out walking some kind of mutt terrier in the opposite direction.\n\nMaybe see a doctor. 'Excuse me, Doc, can you tell me why I'd be coughing up other people's teeth?'\n\nThe only thing not a 'maybe' was what would happen the next time May appeared. He was not going to let her out of his sight. None of this running off, slipping away in his sleep.\n\n\"Come with me, Mason.\"\n\nHe would. Anywhere she wanted to go.\n\nAnd somehow, he would have answers. \n\n*\n\nThat damn haircut had been the high point of Mason's weekend. Aside from the obvious, though May had brought with her a blind spot of chaos to run alongside the sweetness and acceptance.\n\nSunday was humdrum, Monday had been a slog, and now here he was on a Tuesday morning, nearly as deteriorated as he'd been on Friday night, right before he'd discovered a woman perched on the side of his bed.\n\nAnd the trains were relentless, today.\n\nMason rubbed at his face with his palms. When he was deep in his work, all those sounds from outside the building merged into one blurry, atmospheric hum. He could look up from the task at hand to see hours had passed without his notice.\n\nToday there were times he was certain his clock had gone dead. Trains\u2014god, there were so many of them\u2014a constant clatter, a constant tremor beneath his soles. Someone along his row of offices was doing something percussive. Repetitive. Not hanging a picture, it wasn't that kind of banging, but enough to have him twitching, either way.\n\nHe wasn't writing policies that day. Mason was trying to make his way through a report from Vital Statistics that Wynn had dropped off. The words swam on the page. He couldn't absorb information the same way he'd done in college. An analysis of the means by which infant mortality rates were adjusted for error had become a tightly-columned collage of words, and he kept reading the same lines over, hoping they'd fall together and make sense.\n\nHe flipped a page, just to see if there was more of the same to come, and a series of formulae gnarled their way through the text, inset and baroque. Mason sighed.\n\nCoughed.\n\nChoked.\n\nIt came violent, an ambush, and Mason clawed at his throat. Pounded his sternum with a fist. His eyes watered and stung, and lips made a hard, round rim, like the edge of a bowl while he hacked.\n\nInside him. Again. Coming up.\n\nHe gripped the edge of his desk, sending blotter and statistics report askew, the flesh under his fingernails going white. His tongue tried to curl, and black specks swarmed the limits of his vision. \n\nNone of his reflexes were with him to grab the wastebasket. Mason heaved and a stream of blood-ribboned saliva shot out over his desk.\n\nHis gut lurched two, three more times, and weak coughing pulled him down, a balm by comparison. At the near end of the mess: geometry, sticky and flat.\n\nNo.\n\nHe went for it with a limp hand.\n\nNo no no.\n\nNewsprint. Another shred. \n\nI can't.\n\nMason slid it off the edge of the desk, a macabre swatch of ticker tape. Black print ran parallel to the ripped edge. A date.\n\n... within one year in addition to date of sale stamped ...\n\nA date from last year. A date stamped on a yellow ticket in the breast pocket of his coat.\n\nAnd the trains were so loud.\n\nHe rolled the chair away from his desk and stood on untrustworthy knees. Wiped his chin with his hand, doing more to smear than clean, but the answers were coming. He could hear them.\n\nThe fifth-floor hallway was a cannon barrel, propelling Mason along. Elevators were for people with patience, with sense. He went the opposite way, to the stairs. To the lobby. The street.\n\nIn a block were the tracks, row upon row, converging toward the station. A line of passenger cars roared by now, drowning his heartbeat, square windows strobing past, hypnotic, so that Mason swayed on his feet.\n\nRain stuck hair to his scalp, his shirt to his back. It pattered, cold on his shoulders, hot on his cheeks.\n\nAnswers.\n\nMason knuckled the tears from his face and saw red when his hand came away. Blood on his fist like a bar fight.\n\nWhen the last of the wheels clattered past, there was red on the other side of the tracks.\n\nLipstick and dress and coat. All of it, today livid against gravel and concrete and steel.\n\n\"May?\"\n\nShe had a smile for him but shook her head. Took a backward step.\n\nNot yet. Not time.\n\nMason stood with her, a world apart, wavering. She kept her hands folded at her waist, those lips red and sweet and alive.\n\nThe pavement hummed with the next arrival, that bright engine light distant, but getting bigger. May's dress hung pristine, dry. Her hair untouched by wind.\n\nHis toes were just this side of the wooden ties, and thousands of tons of steel screamed forward, unstoppable.\n\nMay glanced at the train and then returned her eyes to his.\n\nShe put out her hand and Mason remembered.\n\n\"Come with me.\"\n\nThe whole world was made of color. Bright reds and yellows.\n\nNow. Now is the time. \n\nHe put his foot out over the rail. He followed her home."
    ],
    "authorname": "DeathAndTaxes",
    "tags": [
        "beyond the wall of sleep story",
        "blowjob",
        "historical",
        "horror",
        "mystery",
        "painal",
        "rough sex",
        "scary",
        "supernatural"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/wrong-side-of-the-tracks-1"
}