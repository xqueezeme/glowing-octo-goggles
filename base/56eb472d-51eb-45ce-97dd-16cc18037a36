{
    "title": "Sexy Af",
    "pages": [
        "Disclaimer: Like all lit stories this one would fit in multiple categories. This story has nudity between friends, exhibitionism, and light bondage. If those aren't your thing, stop now and find another story.\n\n*****\n\nDeployment:\n\nDay 2\n\n(Ligero)\n\nAfghanistan. My first deployment as a Marine Corps Gunnery Sergeant. I was a bit young to pick up the seventh rank out of nine on the enlisted side. I celebrated my 28th birthday a couple of months ago. Now I was in a waiting terminal at Bagram Airfield. A small delay here and I would hop a flight to a base in Jalalabad, capitol of the Nangarhar Province where I would spend the next year's deployment.\n\nI glanced up from reading my iPhone, setting it to the side, I looked around. The room was dusty from desert sand and had six rows of construction made wooden benches with cheap light blue cushions. Three on my side, with three on the opposing side facing me. Desert brown netting hung from the walls and there were two doors. One to an exit, and one to an outside smoking area. The only other person in the room was another gunnery sergeant.\n\nWe were in the center rows and he was seated across from me. Dressed like me in a desert brown camouflage uniform, with his rifle next to him on the bench he was reading a small beat up paperback novel. I casually noticed he was good looking in a rugged sort of way, with dark hair, and a lean body. As he read one hand dropped to his rifle and stroked the stock. As if he needed the reassurance of its presence. The name tape on his uniform said \"Solas.\"\n\nStanding up I stretched my body and grabbed my rifle, looking quickly at my gear bags I was about to ask Solas if he'd mind watching them while I went to the bathroom. Realizing the odds of anybody coming in and taking anything in the short time I'd be gone I didn't bother. I walked to the exit and into the next room to find the head. I wasn't gone for more than ten minutes before I returned and took my seat again.\n\nReaching down I went to grab my iPhone and I noticed it wasn't where I left it. Frowning I did a check of my pockets and looked on the ground to see if it had fallen. \n\nFinding nothing I looked up at Solas, \"Hey Guns, did you see my phone?\"\n\nHe looked up at me for a second in confusion, realizing I was talking to him he looked around then said, \"Huh, no, sorry.\"\n\n\"Did anybody else come in here?\"\n\nHe shook his head no.\n\nI started fuming, this asshole must think I'm stupid. Clenching my fists, I counted to ten.\n\n\"Well, if nobody came in, and you're the only one here...\" I emphasized the words and let my sentence trail off purposely.\n\nHe frowned, \"Not sure what you're getting at.\"\n\n\"Look, just give me back my phone and I'll forget this ever happened.\"\n\n\"I don't have your phone.\"\n\nI gritted my teeth, \"You just said that nobody else came in here. You're the only person that could've taken it. Do I need to go get somebody else and make this official?\"\n\nHis eyes flared, \"You can go get anybody you damn want, I haven't moved from my seat and I sure as hell didn't take your phone.\"\n\nI snapped, \"Jesus Christ, are seriously going to pull this bullshit? Just give me my damn phone.\"\n\nHe jumped off the bench and stood up straight. He was at least six feet tall and looked 180 pounds of solid muscle. The expression on his face made me flinch a little but my own anger at having been stolen from by a fellow Marine, not to mention, a fellow rank was pissing me off. I stood up just as fast.\n\nHe moved toward me and for a second, I thought it was going to turn physical, but then he bent over and started jerking the cushions away. The second one he pulled uncovered my phone. \n\nOh for crying out loud. \n\nDAMN. \n\nThat sucked. \n\nUnfortunately, I was mad, and when I get mad, I have a tendency to act up.\n\nThinking furiously, I glared at him, \"What a coincidence, you knew right where to look. Probably did that yourself so if I forgot about it you could pick it up later and keep it.\"\n\nHis jaw dropped in astonishment, \"You've got to be kidding me.\"\n\nNever one to admit I was wrong, I said, \"Screw you asshole.\"\n\nHe didn't say a word but grabbed his gear and moved it to the farthest corner on the last row. Ignoring me he sat back down and started reading again.\n\nI sat there fuming. Way to go dumbass. I needed to write a book, \"How to make friends.\" I just couldn't help it, when I get mad and embarrassed, I tend to lash out. It doesn't matter if I'm wrong, hell, I tend to be worse when I'm wrong. \n\nFortunately, the odds of us being on the same base were slim. He would live his life thinking I'm a bitch and I would live my life regretting the whole incident.\n\nJust then an airman came in the door, \"Whoever's going to Jalalabad, get ready, we're loading up now.\"\n\nAs I stood up, I noticed he did too, we looked at each other and came to the same conclusion.\n\nYou've got to be kidding me.\n\nDAMN, DAMN, DAMN.\n\nOkay, reign your temper in, try to be polite and say you're sorry. I can do this.\n\nI took a deep breath and looked at him, just in time to see him roll his eyes and shake his head. Then he ignored me and bent to grab his gear.\n\nOh hell no, you did not just roll your eyes at me, I will cause the plane we're getting on to crash and kill us both, I really don't care!\n\nWith that happy thought I grabbed my own gear and smiled sweetly as he passed by me. He frowned and took a step away from me, maybe he sensed the danger he was in. I reached out and stroked the stock of my rifle while I smiled.\n\nHe took another step away from me.\n\nNow I was enjoying myself. Gradually I felt my blood pressure go down. I quit smiling like a madwoman and followed the airman out to the runway. We loaded up and took seats across from one another.\n\n(Solas)\n\nWow, and I do mean wow. So I'll admit, I have a thing for fiery Latina's and this girl was textbook. We'd sat across from one another for hours in the airport terminal and I'd checked her out. Even in cammies you could tell she was very fit. Since she wore her clothes tight, her chest stood out and her ass stretched the material when she bent over. Which I was not watching when she put down her gear, it was just a coincidence that her butt was in my line of sight. Average height, she was about 5'4\" and I'd guess 110 pounds. Long black hair, and brown eyes, she wore glasses, which gave her that sexy nerdy vibe. It was hard not to stare because she was so beautiful but I didn't want to creep her out.\n\nOf course, my opinion of her drastically changed after she accused me of being a thief. Beautiful she may be, but psycho bitch didn't begin to describe her.\n\nSomething about her smile while we were loading was unnerving. I'd swear she was planning my death. Therefore, I was a little surprised when we got to our base and she'd passed by me and said, \"I may not have been as right as you in that incident.\"\n\nI studied her to see if she was joking and saw that she was dead serious. Okay, she was one of those. I've known girls like that, stubborn as hell and will burn down the world around them before saying they're sorry or admitting they're wrong.\n\nBy that standard, that was a five-star apology. I took it by nodding my head at her.\n\n*****\n\nDeployment:\n\nDay 5\n\nAs soon as we got to the base, we were put in transit quarters with other Marines coming off and reporting in. Over the next few days Marines came by to grab the lower ranks, finally leaving just me and Ligero. Eventually an older Marine walked in, as he came close, I read his name and saw his rank, Sgt. Maj. Blake. \n\nWithout any hesitation he walked up to us. \n\n\"Follow me,\" he said.\n\nWe grabbed our bags and quick stepped behind him. Bright afternoon light and the smell of the desert hit us as he opened the door. Once we got outside, we hurried to keep pace as he marched across the gravelled ground. \n\n\"So we had a small issue, some dumbass lost control of his vehicle and went crashing through one of our solo rooms, so we only have one room left for your rank.\"\n\nTaking us to a fenced separate compound on base, he walked to a small wooden building and opened the door while stepping inside a well-made room built for two people. There were beds on opposite sides, small dressers, two chairs and a center table, with a small refrigerator in each back corner. A couple of tan wall lockers stretched across the back wall. \n\n\"Gunny Solas, Ligero, one of you gets this room and one of you will have to bunk up with the other sergeants.\"\n\nWithout hesitation, he pulled out a unit challenge coin, \"Ligero, call it in the air.\"\n\n\"Heads,\" she said.\n\nWhen it landed, he looked up at her, \"Tails, Ligero, I'll take you to the females berthing.\"\n\nHe marched out of the room without another word and left Ligero with a confused expression. Seeing no recourse, she frowned and followed him out. \n\nI was sure he'd done everything at hurricane speed to keep us off-balance and prevent any arguing about who should get their own room. Still, it was a relief to drop my bags and start stowing my gear. \n\nI spent the next few hours unloading gear and storing it into drawers and a locker. After that I was hungry and noticed it was dinner time. Leaving the room, I found my way to the nearby chowhall and amid the bustle of the evening crowd grabbed a tray and loaded up on food.\n\nBeing deployed, the food was actually pretty good. They had a decent selection of entree's and a respectable salad bar. I was happy to note they even had an olive bar and dessert section. My last deployment I'd gotten hooked on olive bars. With some Italian dressing, tomatoes, and some cubed pepper jack, they made an awesome side dish. It was also one of the higher vitamin C food available, so it was an easy way for me to get proper nutrition. \n\nI kept it light and grabbed a couple of grilled ham and cheese sandwiches and some potato salad, a sweet tea, and a chocolate chip cookie. \n\nThe chowhall was a prefab, light aluminum building, with a dining room the size and design of a high school gym. It had standard white tile floors and wooden tables with bench seating. Scanning the area, I found an empty spot and settled down to eat. \n\nJust as I took my first bite Ligero plopped down across from me. \n\nShe didn't smile or nod but looked around and said, \"I need to talk to you.\"\n\nI eyed her warily, \"If this is about asking me to give up the room, the answer is going to be no.\"\n\nHer lips pursed and her eyes narrowed, \"Of course you wouldn't be a gentleman.\"\n\nGetting a little mad, \"Don't try that shit with me.\"\n\nShe didn't say anything but stared at me.\n\nIgnoring her, I kept eating.\n\n\"Fine, what about sharing?\"\n\nI looked up, \"What are you talking about?\"\n\n\"Look, I'm married, we're the same rank. There's no reason we can't room together.\"\n\nI scoffed, \"You're kidding right?\"\n\nScowling she snapped, \"No I'm not.\"\n\n\"Jesus Christ,\" I said.\n\n\"What? What's the problem? Would you mind sharing with a male gunny?\"\n\nI sighed, \"No, I guess not.\"\n\nI thought for a few seconds, then held up a hand to stall her comments, \"Look, I get what you're saying, and in a perfect world you'd be right. We should be able to be roommates, but this is the military and they take a pretty conservative view on that shit. There is no way Blake is going to be okay with this. And do you really want to have everybody talking about us once it gets out?\"\n\n\"I could give a damn about everybody, and if I go to the commanding officer and talk to him, well, it's on me at that point, right?\"\n\nI took another bite of sandwich and sighed.\n\n\"I assume you're not going to rape me?\" she asked.\n\nI gave her my best \"Are you serious\" face.\n\n\"Exactly, I also assume you're not a slob.\"\n\nI gave her my face again.\n\n\"Great, do you really care about sharing with a girl, or is it just me?\"\n\nSwallowing I said, \"Not really thrilled with either option, but not your biggest fan at all.\"\n\nShe matched my gaze, \"Be that as it is, can you do me a solid and ignore your feelings and hook a fellow Marine up?\"\n\nI rolled my eyes, \"Tell me honest, would you do it for me?\"\n\nShe stayed quiet.\n\n\"Yeah, that's what I thought. We both know if I was asking this of you right now because I'd lost, you would be telling me to get lost! And that's the best-case scenario.\"\n\nI ignored her and kept eating, after a few minutes she tried again.\n\n\"Fine, I'll pay you.\"\n\nI scowled, \"What the hell are you talking about?\"\n\n\"I'll pay you. I'll give you...\" she paused and thought for a few seconds, \"$200 a month.\"\n\nI sighed and closed my eyes, \"Just, just shut up please... Go get permission and you can stay there. NO MONEY.\"\n\nShe nodded and without a word, got up and walked away. \n\nI really didn't want to do this. I thought it was a bad idea, and I know she wouldn't return the favor if the roles were reversed. Still, she was making such a fuss I was sure she wouldn't stop, and if I didn't concede I might lose the room altogether. Better to deal with it on my terms than to have her back stab me. She was ridiculously hot, but she seemed to have a bitch personality with plenty to spare.\n\nAfter dinner I went to explore the base. They had a good gym, recreational center, church and few pay to eat places like Burger King and a pizza place. Pretty decent compared to same of the bases I've been at. Now it was my home for the next year. After I wandered, I went back to the room and found her already moving her stuff in.\n\nI'd left some gear on the left side bed as well as using my sheets and blankets to make the bed. When I got in my stuff was on the right.\n\n\"Hope you don't mind. I have a thing about sleeping on that side of the room so I moved your stuff over there.\"\n\nI stood there for a minute fighting to stay calm. Eventually I unclenched my fists and relaxed my jaw. I had to keep reminding myself that I really didn't care which side of the room I slept on and if she'd have asked, I would've moved. So in the end, the results would have been the same.\n\nI moved to what I guessed was my side of the room now. She stayed facing away from me as she pulled clothes out of her gear bag.\n\n\"Also, since your stuff was in this side locker, I moved it to the other, hope you don't mind.\"\n\nI looked over at her and was about to say something when she pulled a handful of her panties out of her bag. I saw cotton and silk in a variety of colors, black, blue, pink. One dropped on the floor and she picked it up. It was a red g-string that had to be the smallest thing I've ever seen. She looked toward me but I pretended to be setting up my nightstand. \n\nWhen I looked back, she was no longer looking at me. With an economy of motion, she folded all her panties and put them away. Maybe this will be an interesting deployment I thought with a smile. Then I spotted the ring on her finger and my excitement cooled. \n\nSo far in life I had never had an affair, either being the cheater or the other person. One, I didn't need the drama, and there was always drama. Two, I firmly believed in the golden rule, \"Do unto others as you want them to do unto you.\"\n\nI believed that if most people adhered to this rule, the world would be a better place. With that in mind I put thoughts of Ligero firmly out of my mind.\n\n*****\n\nDeployment:\n\nDay 30\n\nIt was a long day and night. I'd been out with a unit for more than 24-hours. I got back to my room and I was looking forward to dropping my gear, taking a shower, then hitting the rack. I opened my door and heard music playing from Ligero's side of the room. She had a bluetooth speaker paired to her iPhone. There was no service so you couldn't use them out here to make phone calls, but you could use the internet on them and send emails and take pics. Plus, most people kept songs downloaded to listen while they worked out or whatever.\n\nLigero had her back to me and with the music blaring she must not have heard me come in. She was holding her phone above her head but pointed down and the only thing she was wearing were black thong panties with little white ankle socks. \n\nShe had to have been taking a selfie for her husband. She had one hand covering her breasts and was smiling toward the camera. I stood transfixed by her beauty. Her body was well defined, she had a sculpted ass and I could see muscle definition in her arms and thighs. From this side angle I could see her tits were on the larger side of a C cup. While I watched, she kissed the air, then dropped the arm covering her tits. Her hardened nipples came into view from the side, not quite giving me a full look, just a side peek, still, they were small, light brown, and beautiful. I cleared my throat but she must not have heard me because she took another picture. This time moving the camera toward her backside to show her ass.\n\nI cleared my throat louder and her head snapped around. She froze for a second and then hastily covered her boobs with her arm and shut her music down.\n\n\"What the hell Solas? What are you doing back already?\"\n\n\"Mission ended early.\"\n\nI could see she was mad, her face was red as she snapped, \"Why the hell didn't you knock?\"\n\n\"Why would I knock to my own room?\"\n\nShe didn't answer but glared at me as trudged in and dropped my gear.\n\n\"You could at least turn around,\" she said as she turned away from me and grabbed a pair of tiny black workout shorts off her bed. She kept her back to me as she struggled to put them on and once she got them over her ass, she grabbed a black sport bra and quickly put it on before facing me.\n\nShe scowled when she noticed that I'd watched her the whole time with a small smile on my face.\n\n\"Jerk,\" she said.\n\nI smirked, \"What did I do?\"\n\nShe held up her hands in a \"what\" manner, \"What, couldn't be a gentleman and turn around?\"\n\n\"Why would I turn around? I haven't seen a hot girl in her underwear in months, and besides, what are you, in high school? You that worried about being seen?\"\n\nShe glared at me, \"Screw you.\"\n\nI rolled my eyes but we ignored each other after that. I dropped my gear and went to clean up and she left the room. \n\n*****\n\nDay 45\n\n(Ligero)\n\nOne day I was working in my office and Solas happened to come in. My desk was in view of the door so I noticed him as soon as he entered. A flash of annoyance went through me, what did he want? Was something wrong? He looked around and noticed me, he gave me a quick heads up then walked around one of the other desks. \n\nI looked over and saw Gunnery Sgt. Reed stand up. Reed controlled the legal section but we shared the same giant office since we had a lot of cross work between us. His unit was in another area of the base so he didn't have to use our barracks. I got along with him well enough and since we were the same rank, we ate lunch together a few times a week as colleagues but I didn't know they knew each other. \n\nReed was a tall mid-western blue-eyed farm boy with skin that was white but showed the freckles of lots of outdoor time. He was good natured with a quick sense of humor. Good looking with an easy smile he'd tested the waters with flirting but I'd made a point to emphasize my marriage. He hadn't stopped flirting but it had changed to a goofy sort of thing and I didn't feel any pressure from it. I'd even taken to some light banter back when he cracked jokes.\n\nI watched as Reed and Solas saw each other. They got up and full hug embraced one another. After a few moments the tone of the hug changed and they wrestled against one another struggling back and forth. Solas gained the upper hand and lifted Reed of his feet.\n\n\"You're gonna regret it. You're gonna regret it,\" Reed repeated as Solas pushed him around.\n\nReed moved his head and brought his lips toward Solas.\n\n\"I'm warning you,\" Reed said bringing his lips forward.\n\nSolas tilted his head back but Reed slowly moved till their lips were almost touching. ",
        "Solas yelled, \"Fuck\" and dropped Reed while moving back. Reed immediately put his hands in the air like a prize-fighter.\n\n\"And the crowd goes wild folks,\" he said. \"Once again another contender has learned to his cost that Alexander Reed is the greatest 'gay chicken' fighter in the world.\"\n\nSolas rolled his eyes while Reed looked at him.\n\n\"I keep telling you baby, it's all about commitment.\"\n\nI giggled and Solas narrowed his eyes and looked at me.\n\nHe took a few steps toward me and said, \"No comments from the peanut gallery.\"\n\nReed jumped forward, \"Hey man, you can't be talking to my deployment wife like that. That's the future mother of my children as soon as she comes to her senses and swears off other men.\"\n\nI giggled again.\n\n\"Yeah, well the future mother of your children is my roommate.\"\n\n\"Wait, you two know each other?\" Reed asked. \n\n\"I was about to ask you the same thing,\" I replied.\n\n\"This defeated adversary was a fellow squad leader back when we were both in the grunts,\" Reed said.\n\n\"I'd kick your ass in a fair fight,\" he grumbled.\n\n\"Which is exactly why I don't fight fair,\" Reed said. \"Honestly, sometimes it's like you don't even know me.\"\n\nAfter that day I saw a lot more of Solas. He'd come around and grab Reed and the two of them would head to the gym and workout or play basketball, or go get dinner. Reed still did lunches with me and he invited me to dinner a few times but despite living together, so to speak, there was still tension between Solas and I, so I would always decline.\n\n******\n\nDeployment:\n\nDay 60\n\n(Solas)\n\nI'd just finished with my duties for the day and was back in my room. I changed clothes to a pair of black gym shorts and a beat-up black t-shirt with the video game logo Mortal Kombat on the front. I grabbed my computer and was about to watch a movie when Ligero walked in.\n\nIgnoring her, I put on some headphones as she ducked behind the small curtain she'd hung up next to her wall locker to allow her to change. I wasn't paying any attention to her so was caught off guard when she tapped me on the shoulder. \n\nI looked up, like me, she'd changed to some gym gear. She wore tight black spandex bottoms and a matching black sport bra, she'd taken her hair out of the tight military bun that was required in uniform and let it fall loose past her shoulders. \n\nSignalling me, she pointed to my earphones. I took them out and closed my laptop.\n\n\"What's up?\n\n\"I'm bored, was just wondering what you're watching.\"\n\n\"It's that movie, 'Fifty Shades of Grey.'\"\n\nShe raised an eyebrow, and looked at me funny for a second.\n\n\"I heard that was almost a porno,\" she joked.\n\n\"Heard the same, but I thought I'd see. Kind of doing it weird because this is the third movie and I haven't seen the other two yet.\"\n\n\"Would you mind if I watched too?\"\n\n\"Not at all,\" I said warily. We'd started to get along better, but that was mostly because we avoided each other. I'm sure she was just bored, but I was hesitant to start becoming her friend. \n\nStill, I didn't see the harm so I moved around on the bed and positioned the laptop so we could both see it, then I propped a pillow against my foot post so I could lean against it. She grabbed one of the chairs and brought it to the edge of my bed and I hit play.\n\nThe movie started and we sat in silence to watch it together. Partway through was a scene where the girl was tied standing up with her arms and legs spread to the corner of an elegant metal frame.\n\n\"Kinky,\" Ligero whispered.\n\nI nodded.\n\n\"Wow, this is kind of crazy. You ever do anything like this?\" she asked.\n\nI looked at her, \"Never like that, but I think it's cool. I've tied girls up before, I admit its kind of a thing for me.\n\nShe laughed, \"Why doesn't that surprise me.\"\n\n\"How so?\"\n\n\"Just that you need to tie a girl up to enjoy them.\"\n\nI frowned, \"What do you mean?\"\n\n\"You know, it doesn't surprise me that it'd be all about you. You strike me as that kind of guy.\"\n\nI'm sure my face matched my emotions because she tensed up. \n\nWe looked at each other uneasily for a few moments, before she spoke.\n\n\"Look, I wasn't trying to insult you. It's just that I can see that you'd be that kind of lover, all about you before her.\"\n\nI held up a hand to stop her from explaining anymore.\n\n\"Let's just watch the show.\"\n\nAfter that there was unmistakable tension between us. She could tell I was insulted and neither of us said a word for the rest of the movie. Truthfully, I wasn't paying it the slightest attention after that and as soon as it finished, I snapped my laptop closed and left the room without a word.\n\n*****\n\nDeployment:\n\nDay 75\n\nI opened the door, walked inside and turned on the light to our room. When I turned around, I stepped back in surprise. Ligero was sitting on her bed red faced and crying. She scowled at me as I stood there.\n\n\"Uhmmm, everything okay?\" I asked hesitantly.\n\n\"Fuck off.\"\n\nMy eyes went hard and my body tensed, I was getting ready to be very impolite but caught myself. I didn't like her, and I really didn't care about her issues but it was obvious something was upsetting her. Swallowing my pride, I turned back around and turned the light off before I left the room. I went to the base recreation center and grabbed a couch. Fortunately, I had my iPhone, it didn't have reception but I could tether to the local Wi-Fi and I kept a lot of books on my Kindle app.\n\nWe were never close but we usually acknowledged each other in greeting. However, the next few days were passed in strained silence as she worked through whatever demons had upset her.\n\n*****\n\nDeployment:\n\nDay 80\n\n\"What's up?\" I asked.\n\n\"Hey, I just wanted to apologize for the other day. That was uncalled for.\"\n\nI shook my head, \"Don't worry about it. You seemed to have some heavy shit on your mind.\"\n\nShe snorted, \"You can say that again.\"\n\n\"How long have you been together?\"\n\nHer eyes snapped toward mine, \"Who told you?\"\n\nI shook my head, \"Nobody told me, I didn't ask around or anything. It's pretty obvious. You're on deployment, nobody cries like that unless, one, the spouse cheated, or two, somebody died.\"\n\n\"How do you know it wasn't a death?\"\n\n\"Because you've been grumpy for days. It was understandable for you to snap at me that day. If it had been a death, the next few days you would have been sad. You haven't been sad, you've been mad. That means somebody hurt you.\"\n\nShe kept staring at me with a frown, finally it broke and she shrugged, \"Yeah, he cheated on me. Got another girl pregnant.\"\n\n\"Ouch,\" I said flinching. \"Sorry.\"\n\n\"I actually shouldn't be as upset as I am.\"\n\n\"Why's that?\"\n\n\"It's a long story.\"\n\n\"Fair enough, I don't need to be in your business.\"\n\nShe looked at me for a minute, I could sense she wanted to talk about it but wasn't sure. I assumed she didn't have a lot of girlfriends on deployment and that most of her support structure was back home. \n\nHer eyes started watering so I grabbed a Kleenex from a box on the dresser and handed it to her. She wiped her face and started talking.\n\n\"To start with, he's in the National Guard, but he's activated full time. Our unit had to go support his during that bad hurricane and we met.\"\n\n\"Started out simple, we kept in touch, light texting, some flirting and stuff. He was a couple hours away so I thought we were keeping it light with the whole long-distance thing, but right before deployment he ended up moving into the area, then he asked if I wanted to get married.\"\n\n\"At first, I thought he was kidding, then I thought he was crazy. Then he told me how he was looking for someone to marry because he needed the extra pay, and he needed a place to stay. His extra money was being used to care for his mother's hospital bills, I fell for the whole sick mother thing.\"\n\n\"He was charming and good looking and he seemed like he really cared so I went ahead and did it. It was kind of fun, it felt like letting loose. I figured there was enough attraction and respect that we could build into something solid.\"\n\n\"Now I just got an email from another Marine. She asked me how I knew him and I told her, then she told me he had gotten her pregnant. Worse, they'd been seeing each other for months before I left. She admitted that she was having an affair, her and her husband were split.\"\n\n\"Any chance the kid could be her husband's?\" I asked.\n\n\"I asked that too, he's on deployment, so that would be a little tough.\"\n\n\"Ouch,\" I said.\n\n\"Right,\" she nodded while sniffling and wiping her nose with the Kleenex.\n\n\"So despite my rank and everything it turns out I'm a stupid little girl that doesn't have the sense god gave a donkey,\" she said.\n\n\"Not sure I'd go that far,\" I joked. \"I'd rate you at least as high as a toddler. I mean you can tie your own shoelaces and stuff.\"\n\nShe snorted and rolled her eyes, \"Fine, a toddler then.\"\n\nI frowned while lost in thought. When I looked up, I said, \"Not to compound this, but it kind of seems like a setup. I have a little criminal investigative experience. You didn't give him access to any of your bank accounts or anything?\"\n\nShe got a frown on her face and snapped, \"No, but Daren wouldn't do that. He's an ass and a womanizer, not a thief.\"\n\nI held up my hands to her anger, \"Sorry, wasn't trying to get in your business. My apologies.\"\n\nAfter that she was a little cool toward me. I didn't want to pry, so I didn't ask any more questions but I could tell she was thinking. She may have not liked my comment, it probably made her feel a little dumb, but I was positive she was replaying past conversations with her husband in her mind.\n\n*****\n\nDay 85\n\n(Solas)\n\nI went to work as usual and when I got there I sat down at my computer and opened my outlook folder. Scanning through the dozens of emails I noticed something unusual. I had a message from Ligero. Clicking the icon, I opened it up. The title was unusual, \"How stubborn girls say they're sorry...\"\n\nThere was no message, just a picture meme. It said the same thing as the title and showed side-by-side pictures. The left was the backside of a beautiful woman wearing a black leather miniskirt, the right side was the same picture but the miniskirt was hiked up to her waist and showed the girls ass in a skimpy red thong.\n\nI assumed Ligero realized she was wrong and this was her cheeky way of saying she was sorry. I smiled but dismissed it and didn't give it another thought. I went through my day and got back to my room after dinner. I wasn't paying attention to anything until after I changed into my standard shorts and t-shirt. Then I happened to glance at her bed. She was facedown and reading and she was only wearing a pink thong with a black tanktop. With her beautiful hair in a ponytail and those cute little glasses perched on her nose, she had that whole hot, nerdy girl vibe perfect. \n\nI waited to see if she'd look my way but she ignored me. After a few minutes I sat down on my bed to play on my computer and she cleared her throat. Looking up I watched as she turned to face away from me, propping herself up on one arm as she continued to read. \n\nI had a perfect view of her thonged ass. She ignored me but stayed like that for a long time. We passed the night in silence and eventually we went to sleep.\n\nThe next morning, I got back to work and opened the email she sent me from the day before. I hit reply and typed two words, \"Apology accepted,\" then hit send.\n\n*****\n\nDeployment:\n\nDay 90\n\n(Ligero) \n\nI sat on my bed looking at the divorce paperwork. I'd downloaded it, then filled it out, then had Reed check it for me. I had emailed my husband, Staff Sgt. Daren Vann and told him that I was sending it to him for signing and that he needed to file it asap.\n\nI couldn't believe how dumb I'd been in this whole scenario. Falling for him so quickly and agreeing to marry him. What the hell had I been thinking? In hindsight my stupidity was easy to see, it was actually galling and I really had a hard time believing I'd been so freaking dumb. \n\nWhen Solas had pointed out it looked like fraud I got mad. Mostly because he was right. Looking back at all our conversations I realized that he had slowly made me pay for almost everything. \n\nAt the beginning he'd wined and dined me, but then as we started to see each other more. I remembered I'd paid for plane tickets, for us to go out to eat, tickets to the movies. All kinds of stuff, all because he had medical bills to cover for his family. \n\nThinking back, I realized, I never even saw his family. I wasn't sure they actually existed. That was when I decided to divorce him. I'd been toying with the idea of forgiveness. He'd written and emailed me numerous times, apologizing for his mistake, promising we could work it out.\n\nNow though, I was looking at him in a new light. Now it was easy to see the selfishness, the deceit.\n\nEvery time I thought about it, I hated myself. How I ever fell for such a slimy no-good, rat bastard was beyond me. \n\nIdlily, I glanced up and noticed Solas had left his cammies on his bed, he must have gone to workout with Reed.\n\nThinking about him brought a fresh wave of embarrassment. Christ, I had no idea what had been going through my mind when I flashed him the other day. \n\nOur relationship had been strained since day one, and it had mostly been my fault. He was a good guy, he'd even agreed to let me stay in his room so I didn't have to share a bay with a dozen other girls. \n\nI wouldn't have done the same in his position. \n\nThe only time he'd been a bit of a jerk was when he walked in on me taking selfies for my husband. He hadn't even tried to look away. Fortunately, he only saw me from the side and back. At the time, even that had annoyed me. \n\nBut I had to admit, I'd felt a very tiny thrill when he'd commented about not having seen a hot girl in months. It was gratifying to know I'd affected him. If I was honest with myself, he affected me a bit in ways too. Now that we practically lived together, I'd seen him without his shirt on multiple occasions, and a few times in just his briefs. Wow, he stood a finger width under six-foot and looked like he weighed 180 pounds of lean muscle. Smooth skinned, with little body hair, he had made a guest appearance on a few of my nighttime fantasies. \n\nI'd been really surprised when he'd found me crying, I'd been rude as hell on purpose, I wanted to fight with somebody. To my surprise he'd left me alone, and didn't give me any chance to argue over the next few days.\n\nWhen he finally did talk, he'd given me insight that I hadn't considered.\n\nI smiled as I thought about my apology. I really hadn't planned on going that far. I'd been at work and tried to look up something funny on the internet to send to him as an apology. Instead I'd ran across that sexy picture. Even then I hadn't planned on duplicating it the way I did.\n\nI'd sent it to him and for some reason it stuck with me all day. I'd gone back to the room and changed over but when I was about to put on my shorts, I stopped. I couldn't get that meme out of my head. Finally, I folded my shorts and started reading, wearing my panties and a tanktop. \n\nMy heart had been pounding nonstop when he finally came in. I pointedly ignored him but it had been easy to tell when he noticed me. He literally stopped breathing. I'd had to fight back from laughing when it happened. After that it was easy to relax, once again I felt a small thrill about the way I'd affected him. \n\nIt made me feel good after my colossal stupidity. I'd decided to turn on my side with my back to him for a while to let him get a really good look. Once again, I could easily tell by his breathing that he was watching me. I was surprised he hadn't passed out. I had to stifle a giggle at the thought of him falling out of bed after forgetting to breath for so long. \n\nIt was fun to tease but I had to be careful, I didn't want to give the wrong impression. There was no way I was ready to mess around after the fiasco my soon to be ex had created in my life.\n\n*****\n\nDeployment:\n\nDay 110\n\n(Solas) \n\nWe were in the room relaxing, both of us on our respective bed reading on iPad's. I happened to check my email and got a message I'd been waiting for. I looked over at Ligero.\n\nWe'd somewhat made up and were much nicer to each other but I'd hardly call her a friend at this point. Still, it was worlds better than when we first started.\n\nI sat up and called over to her, \"Hey, I need to ask a favor.\"\n\nShe put down her iPad and said, \"What's up?\"\n\n\"You said you're going out of the wire this week, right?\"\n\nShe nodded, \"Yeah, for three days on Wednesday.\" \n\n\"Cool. Would you care if I brought somebody in our room? I've got a thing I want to do.\"\n\nShe raised an eyebrow.\n\nI laughed, \"No, not like that, but it is a girl.\"\n\nShe gave me her best \"Uh huh\" look.\n\n\"Okay, let me give the long explanation. You've seen those shows on television about the super smart detective that notices all kinds of stuff and is brought in by local police as a consultant.\"\n\nShe nodded.\n\n\"That's me.\"\n\nShe raised an eyebrow.\n\n\"I'm serious. I took some intelligence tests when I was a kid, apparently I scored very high.\"\n\nAgain, she looked less than impressed.\n\n\"Anyway, I have a Masters Degree in forensics and criminal psychology and I work a lot of cold cases. I put a lot of effort in my off-time to get federal credentials so that I can work cold cases across the country.\"\n\n\"They just let you work police cases?\"\n\n\"You have to remember, most little cities don't have full time specialist detectives. They may have a detective but they'll see one or two homicides in their life. So they don't get a lot of experience with them.\"\n\nContinuing, \"I have federal credentials and despite what movies show a lot of police units will gladly outsource the investigation. Particularly since we aren't around afterward to take credit, so they will.\"\n\n\"That seems shady,\" she said.\n\nI shrugged, \"I don't really care, they still have to pay for our services, so I'd rather get a good rep with agencies so they'll keep giving cases. If the downside is they want credit on the backend, more power to them.\"\n\n\"Makes sense,\" she said. \"So what are you doing?\n\n\"A re-enactment of a crime scene. I was going to set up the scenario and see if it sparks some insight.\"\n\n\"Sounds neat.\"\n\nI raised an eyebrow, \"Did you just say neat? Okay grandma, glad it sounds neat,\" I said laughing.\n\nShe scowled playfully and grabbed her pillow and threw it at me, \"Don't be making fun of me when I'm about to do you a favor.\"\n\nI stopped laughing but held a big smile as I tossed the pillow back at her. She caught it and pouted, \"And don't be teasing me about my grammar or I'll beat you up.\"\n\nI snorted, \"Yes, ma'am.\"\n\n\"Hmph. Yeah, go ahead, you can use it whatever day I'm not here. Just don't do anything weird or kinky to my bed.\"\n\n\"Noted.\"\n\n*****\n\nDeployment:\n\nDay 115\n\nI checked my laptop again, looking at the images. Ligero left in the early morning and I had a break from my normal military duties. Since I had a few days to myself I was planning on doing some consulting work. I'd set up the room the way the crime photos showed as much as possible. While I was checking them one last time, I heard the door open behind me.\n\nThat was weird, I was expecting a Marine to come by but I didn't think she'd walk in without knocking. I turned around to look and Ligero was standing there.\n\n\"Oh shit,\" I said.\n\nObviously, something came up if she was still on base, she was supposed to be gone for the next few days.\n\nShe held up a hand to stop me from getting up, \"Relax, our convoy got delayed about six hours so I thought I'd come back by and watch if you don't mind.\"\n\nI shrugged, \"No problem.\"\n\nAt that moment there was a knock on our door. Ligero opened it and ushered the small blonde Marine standing there inside. ",
        "\"Hey Gunny Solas, I'm here.\"\n\n\"Hey Sgt. Lawson, glad you could come.\"\n\nShe took off the M2 she had strapped to her body with a 3-point sling and stood it up by the door next to mine and Ligero's, then she looked at me and said cheerily, \"Wouldn't miss it, sounds fun.\"\n\nLawson was a solid Marine with a great attitude, I knew from conversations she had picked up sergeant a few months ago. When I'd approached her, she'd seemed genuinely interested in my proposal and even expressed an interest in learning a few things.\n\nI tilted my head in greeting to her and pointed, \"This is Gunnery Sgt. Ligero.\"\n\nThey nodded at each other and shook hands.\n\n\"If you'll come over here to my computer, I need your signature.\"\n\nShe did as I asked and I had her sign some forms.\n\n\"I sent the money to you via PayPal,\" I said.\n\n\"Thank you. I would've done this for free you know. It sounds cool.\n\n\"Yeah, I appreciate that, but I actually do need to pay you. I'm logging you into the system and I need to make it official. Plus, if any senior Marines in your unit complain or question how professional this is, I can show this as a defense for both of us.\"\n\n\"I can understand that.\"\n\n\"On that note, I do have another Marine coming by. A sergeant, like we talked about. Are you still good with that?\"\n\n\"I think so. If I get nervous bear with me.\"\n\nI laughed, \"No problem. And on that note, I have everything set up, so there really isn't a way to ease into this.\"\n\nTurning to Ligero, Lawson asked, \"Are you staying?\"\n\n\"Do you mind?\" she asked.\n\nShaking her head, she answered, \"Not at all. It actually makes if feel more clinical, less personal.\"\n\n\"I did tell you to bring a friend,\" I said.\n\n\"Yeah, but there was nobody I wanted to ask.\"\n\nWalking to my bed she asked, \"Can I put my stuff on here?\"\n\nI nodded and went to my computer, next to it were some hard copy photos I printed of the crime scene. I heard rustling behind me and ignored it. I did glance at Ligero and she was watching Lawson undress. A quick glance showed Lawson already down to a matching pink thong panty and sport bra set. I went back to checking my pictures. \n\n\"Okay, I'm ready.\"\n\nI turned to find Lawson moving toward me completely naked. She was a just below average height, athletic, blonde and blue-eyed with solid muscle tone and smaller C sized breasts capped with small light pink nipples that stood with youthful firmness. She'd let her hair down and it reached a few inches below her shoulders. Her sex was shaved smooth and she stood in front of me confidently despite her mentioned nervousness. \n\nI showed her the pictures and pointed out how I wanted her to lay down. In the photos was a pretty college girl on her bed, limbs askew, with a black silk scarf loosely tied around her neck. A shaft of sunlight crossed the body and showed the room. The room was neat, but with a few clothes lying on the ground at the foot of the bed, and a small stack of college books on the dresser next to the bed. \n\nAccording to reports she hadn't been sexually assaulted. \n\nI held up a copy of the black silk scarf that was in the pictures and showed her what I was doing. I wrapped the scarf around her neck leaving it extra loose like the photos and tied a simple knot in the back.\n\nOnce done I had her lay on the bed as I arranged her limbs. I noticed she was breathing heavy and her chest was flushed. I glanced at her nipples, they were hardened little points. I'd noticed this affect before. I used lots of girls and even guys for enactments. Not on every case, just on those that had quirky little details that needed to be seen to be understood. Sometimes the actors had to be clothed, sometimes not, sometimes in various states in between. \n\nThe one thing they all had in common was the excitement. I'd asked a few about it and they told me it wasn't sexual. For which I was thankful, I really didn't want to send out that vibe or get a bad reputation. No, they told me it was the idea, the feel of the situation, that they were doing some small part to help catch a criminal or prove an innocence.\n\nI understood what they were talking about, I remember when I solved my first case, it was intoxicating. \n\nAs I arranged her, I said, \"Okay, one last thing. I don't mean to be a jerk, but I've done this kind of thing before and I always have a problem with the newbies. Not to put it mildly, I'm paying you to be an actor, not to ask me nonstop questions about everything. Lot's of people are 'Ohhh, sounds cool,' then they get here and won't shut up. It's hard to concentrate that way.\"\n\n\"I get it, lay here and keep my mouth shut,\" she giggled. \n\n\"Don't know if I'd have put it that rudely, but yes, that's the point. Also, I tend to mutter details of the case, they aren't questions. You don't need to respond.\"\n\nOut of the corner of my eye I saw Ligero take a seat in one of our chairs. I grabbed the other one and reversed it about five feet away from the edge of the bed and Lawson, then I sat down and propped an elbow between my chin and the backrest.\n\nClosing my eyes, I sat there for a minute letting all my senses work. I could smell the wood flooring, the sand from the desert. Focusing past that I could smell both girls' scents, Lawson being light, clean, with a hint of lavender, and Ligero a mild musky scent, spicy. \n\nI listened to the creak of wood, the muted, dull background noise coming from outside. I heard the rustle of cloth and the movement of limbs, I could tell they both had stirred. \n\nI noticed the hard feel of the wood underneath my elbows, the tight texture of my own skin under my hands as I cupped my chin, the light growth of hard stubble from my afternoon shadow. \n\nOpening my eyes, I saw Lawson in a new light, gone was the beautiful naked girl, any attraction or stirring I had when I first saw her disappeared. Now I saw a crime scene, I looked past her beauty, her chest stopped moving with life, now I saw the stillness of death, the bright look in her eyes replaced with cold entropy.\n\nI stood up and circled the bed. Gratefully, Lawson was an ideal candidate, her eyes didn't track me and she stared glassy eyed forward. \n\nI made slow circles around the bed.\n\n\"Why no defensive wounds?\"\n\n\"Why was the scarf tied?\"\n\nIn this particular case the boyfriend had found her like this. Her body was warm enough that if he hadn't killed her, the killer had done it right before he found her and called it in. The local police considered him the number one suspect. He was a big guy, 22-years-old, white, six-foot-two, 215 pounds, college student at local university. He could have taken her down fast enough to have prevented a defensive struggle but the police weren't convinced they had enough to convict. \n\nThere was no history of violence between them, he had no history of a temper. The neighbors hadn't been around so there was nobody to see anyone leave before him. \n\n\"The boyfriend and others confirm they were in a sexual relationship, but she didn't have sex before she died.\"\n\n\"Clothes lying around the bed, bra, pants, shirt... hmmm, no underwear.\"\n\n\"Unlikely this was planned, but how could it be spontaneous?\"\n\nI took a seat again and focused on Lawson.\n\nBefore I knew it more than an hour went by. A small knock at the door brought me out of my trance. I looked at Ligero.\n\n\"Could you get that?\" I asked.\n\n\"COME IN,\" she yelled.\n\nExasperated, I looked back at her, \"I could've done that.\"\n\nShe shrugged and flashed me a cheery \"Sorry not sorry\" type smile.\n\nThe door opened and Sgt. Sanchez walked in, he was as close a match to the boyfriend as I could find. Clean cut, pretty boy Latino, he was a big kid. His physical dimensions were almost a perfect match.\n\nOnce he got fully inside his eyes went wide when he saw Lawson. I'd explained everything to him beforehand but I think the reality of it all still shocked him. He set his weapon next to the rest of ours and walked over to me.\n\n\"Okay Lawson, go ahead and stand up.\"\n\nWith a big smile she hopped up and stood in front of us with her hands behind her back. She looked up at Sanchez, then stuck out her hand and introduced herself. Sanchez tried not to be a jerk but you could tell he was crushing on the happy naked girl in front of him. \n\nAfter they got the pleasantries over, I went right to work. I had Sanchez move to the front of her and place his hands around her throat, using the scarf to mock choke her. I made some notations and had him switch to behind her. The next thirty minutes I tested his height and hers in various poses, front, back, sideways. I had him straddle her and then even had her straddle him. In the end I was frustrated.\n\n\"There is literally no scenario that his height and strength come into play that leave her like that.\"\n\nNobody said anything and I appreciated that. \n\n\"I think we're nearing the end, I promised two hours to Lawson and this is it.\"\n\n\"Did you get any ideas?\" Ligero asked.\n\nI hadn't even noticed that she'd moved behind me. She held the crime scene photo I was basing the scene off of.\n\n\"I mean, it looks like a perfect duplicate of the room under the circumstances.\"\n\nI looked over at it, \"Yeah, almost.\"\n\n...\n\nThat was it, it came to me in a flash.\n\nI looked up at Sanchez, thinking furiously I motioned to him. \n\n\"Take off the sash from around her neck, put it on her in a blindfold and tie an easy knot.\"\n\nHe did what I told him and waited.\n\n\"Now pull it down around her neck.\"\n\nHe did and the sash came over her face and was left in the same loose manner around her neck as displayed in the photos. \n\nQuickly I went over to my computer. Pulling up Google Earth I did some quick checking. It took me a while and once I found what I was looking for I started doing some calculations. Ligero cleared her throat.\n\nI looked up at everyone and said, \"We're finished. I'll contact you when I know something.\"\n\nAfter that I ignored them and went back to work. I could tell they were wanting some explanations but those would have to wait.\n\n*****\n\nDeployment:\n\nDay 130\n\n(Ligero)\n\nTwo weeks had gone by since his little crime scene in our room. We'd grown more friendly, and talked every day for a little bit before we went to bed. I was careful not to ask him too many questions about the detective work because I could tell he didn't want to say anything.\n\nWe kept our conversations about other things but he was surprisingly forthcoming about most of his life. We went over our past relationships and mistakes we made and plans for the future. I began to look forward to those times at the end of every day. \n\nOne morning he was on his laptop checking his email and he looked at me afterward.\n\n\"Hey, I'm meeting Lawson and Sanchez for lunch at Burger King, you want to come?\"\n\nI nodded yes and agreed to a time. I was a little surprised, he hadn't mentioned them since that day so I wondered what he wanted to talk about. Maybe another crime scene?\n\nI'd been impressed with him then. When Lawson walked in and undressed, I'd figured this was just some novel way to get a girl naked. After I'd watched his face when he first noticed her bare, I was positive. He could talk all he wanted about being professional, but I saw the lust, the admiration there. Hell, I'd been mildly aroused. She was so youthful and perky I half wanted to have her sit in my lap when she was running around without clothes.\n\nI kept watching him and then he impressed me. When he started working, I saw the look in his eyes disappear. I grudgingly noticed that it never returned. He may have enjoyed it for a few minutes, but after that it was strictly professional. \n\nThe whole thing had actually looked fun. Enough that I wanted to see if he had any others scenes he needed to recreate that he could use me for. I bounced back and forth with the idea of asking him. I was equally scared he'd say no or that he'd have one that needed me to be nude. The thought excited and terrified me at the same time.\n\nLunch time came and I went to the base Burger King. I made my order and took a seat at a small booth in the back corner. \n\nQuickly the rest of them came in and looked around. After I waved at them, they each placed an order and then came and sat down. For a few minutes we talked about little things until everybody got their food. \n\nOnce we all started eating Solas grabbed a fry and started to talk, \"So, I just wanted to let you all know the outcome of the case.\"\n\nHe paused with a serious look on his face and I thought something was wrong.\n\nThen he cracked a smile and said, \"Case solved. They caught the guy. Our information was what did it.\"\n\nThe three of us sat there stunned.\n\n\"Wait, are you serious?\" I asked.\n\nHe nodded and pointed to Lawson and Sanchez, \"Yep, and you two helped.\"\n\nExplaining, he continued, looking at me, he said, \"When you said 'It looks like a perfect duplicate of the room' I realized it wasn't. The picture had a shaft of sunlight coming in. That got me to thinking, the boyfriend wouldn't kill her and open the curtains. So that meant they were probably already open.\"\n\n\"The boyfriend reported that he was supposed to pick her up and they were going to go get dinner and see a movie, it was their one-year anniversary. Knowing that, things fell into place quickly. I realized that the girl was probably going to surprise him with a little fun time, so to speak. She undressed and was waiting for him. I assume she blindfolded herself.\"\n\n\"I imagine she planned on him coming into her naked and blindfolded on the bed. I'm not sure if she knew the neighbor watched her and she was into it or not, but one way or the other the neighbor saw. He went over there thinking it might be a thing for him. When he came in the room, she was lying face down. Apparently, he got on top of her and when he pulled the scarf down, she realized it wasn't her man, she freaked. He panicked and tried to calm her down.\"\n\n\"He says he was just trying to get her to be quiet so he pulled on the scarf. Before he knew it, she quit moving. He turned her over and realized she was dead, he didn't know what to do so he left.\"\n\n\"I figured it out once I realized she could be seen, I checked Google Earth and matched her window on the crime scene photos. I backtracked the angle to his house and noted in the police interview that the neighbor said he was at work and didn't know anything. The police never checked his alibi because they really liked the boyfriend for it.\"\n\n\"I wrote to have another go at the neighbor and account for his whereabouts. They did, and found out he lied.\"\n\n\"For the record, no matter how much they like someone else for a crime, finding out you lied about your location on an active murder investigation always get people instantly interested in you.\"\n\n\"So while they interviewed him, they got a search warrant and checked his house. They found a pair of her panties.\"\n\n\"It went downhill from there. He tried to explain that they had a thing, she was always undressing in her window in front of him. That she was into him, etc., etc.\"\n\n\"They always try to justify it. She may have been a bit of an exhibitionist or may have never even noticed. There are no records of phone calls, or texts, or anything between them. Either way, he became obsessed.\"\n\n\"Once they found her underwear he confessed and tried to claim it was an accident. They're booking him for second degree murder.\"\n\nAll three of us were staring at him open-mouthed, our food forgotten.\n\n\"Are you serious?\" Lawson asked.\n\nHe nodded, then sniffed as he looked around at us and said, \"He's trying to say it was an accident, yada, yada, but they'll push and he'll probably take a deal that gets him 20 years. If he goes to trial, he's an idiot.\"\n\nSnorting, he said, \"Kind of hard to say accident yet you ran away with her underwear. Juries don't like that kind of stuff.\"\n\nHe paused and took a bite of his cheeseburger. In between bites he continued.\n\n\"Yep, I put everything in the report. Including my two actors as assistants. So you are forever going to be a consultant for a solved murder conviction. Now I'm sorry to say, we won't get credit for solving it, because the detectives that interviewed the suspect got him to confess. So they'll get the recognition, but anybody who reads the case file will know where the break that solved the case came from.\"\n\n\"Will somebody read it?\" Lawson asked.\n\nSolas shrugged, \"It's possible. It would make a good training case. They'll log it into a national database with the particulars and in the future, it may be used as a case study.\"\n\n\"That is so cool,\" Sanchez said, glancing at Lawson.\n\n\"Right,\" she nodded and smiled.\n\nI had to admit, it was cool as hell. I know that it was all Solas, but the fact that these two had their names on a real case file was cool. I felt a stroke of jealousy and I knew I was going to ask him if he had another. I wanted to have my name on it, I didn't give a damn if I had to be stark naked in front of him or another actor. I wanted to be a part of it.\n\nSolas took a sip of his soda and said, \"So there you have it, you helped solve a murder.\"\n\nLawson grinned and looked at Sanchez, \"That is such a trip.\"\n\nSolas paused and watched the both of them for a few seconds, he sniffed the air again and put down his coke.\n\n\"Quick question for you two,\" he said.\n\nThey both looked at him and nodded.\n\n\"You two didn't know each other before the other day, right?\"\n\nThey both shook their heads.\n\n\"And exactly how many days have you seen each other since then?\"\n\nSuddenly they both had a guilty look, shooting quick glances around and at each other.\n\n\"Wha... what do you mean?\" Lawson stuttered.\n\nSolas laughed, \"Never mind, you answered my question.\"\n\nHe looked at Sanchez, \"For the record, the commissary only sells two kinds of soap, Irish Spring, mostly for the guys, and Dove, mostly for the girls. The day we met, you smelled like Irish Spring. Now you smell like a different soap, a light lavender scent that I've only smelled once before.\"\n\nAs he finished, he looked pointedly at Lawson, who turned bright red and looked down.\n\n\"I... I get soap from home.\"\n\nAgain, all three of us looked at him surprise. Sanchez and Lawson were both noticeably embarrassed but Solas just smiled and told them to have fun. After a few more minutes they left.\n\n\"I swear, I would have never noticed that. I will admit to being mildly impressed,\" I said.\n\nHe shrugged, \"Don't be, it's mostly training. You do have to have some knack, but if you start teaching yourself to pay attention to certain things, they'll stand out big time after a while.\"\n\nI blew out a breath, steeling myself I spoke, \"I agree with Lawson, that was really cool. Enough that I want to try it. Do you think you can find a case and do an enactment with me? Not going to lie, I kind of want my name on a solved case file too now.\"\n\nHe glanced at me and set down his coke, \"I can try, but you need to understand that was pretty uncommon.\"\n\n\"How so?\"\n\n\"Well, for starters, the cases aren't known by the looks of the body. I happened to have studied that case and because I wasn't having insight, I was on the lookout for somebody built like the deceased.\"\n\n\"Also, I don't always need a scene reenactment. So finding a case with a woman roughly your size is a crapshoot. I just look up cold cases. Plus, as I just said, it needs to have me stymied a little. Most I can look at and if I can figure them out from the case details I do. That's probably half.\"\n\n\"I understand, any chance you can do a little searching?\" I asked.\n\nHe smiled, \"I'll see what I can do.\"\n\n*****\n\nDay 133\n\n(Ligero)\n\n\"Do you want the good news or the bad?\" he asked.\n\nWhen he walked in, I was in my standard after work uniform. Tiny black spandex booty shorts and matching black sport bra. The colors varied but it was generally all I wore. ",
        "\"Let's hear the good,\" I said.\n\n\"I found two cases.\"\n\nMy head snapped up and I looked at him intently, \"Really?\"\n\nHe nodded, \"Now I haven't looked at them yet, so I'm not sure if I need a recreate but I do know they both have females that are roughly the same size as you.\"\n\nHe dropped two dark brown file folders on the table and then took off his blouse and tossed in on his bed. I gave a quick admiring glance to how he filled out his green undershirt and went back to the folders.\n\nThe first one I opened showed a woman in a waitress uniform behind a small diner. The pictures were clinical and I felt a twinge of disappointment. Which made me feel a little guilty because this was somebody's life I was looking at.\n\nI picked up the next one and my eyes went wide and my heart pounded. I covered my reaction and dropped a neutral expression. This one was another bedroom scene, the woman was dark haired like me and the only thing she was wearing were panties, stockings and a garter belt. \n\nI'm not sure why, but since the idea of being his actor took hold, I've really wanted it to be risqu\u00e9. It was stupid, I should be happy to do any scene, but the more I thought about it, the more I wanted it to involve me only partially dressed or something like that. In a perverse way, I thought of it as earning the title assistant. He could get any girl to recreate a clothed scene, how many would do it full or half-naked? And a small part of me was excited by the idea.\n\nHe came over and picked up the other file.\n\n\"So what's the bad news?\" I asked.\n\nHe tapped the file in my hand, \"You can see that recreate is a lot less clothing, so I'll do my best to solve that one on my own. I'll work on these tonight and let you know if I need to set up a scene in the morning.\"\n\nI kept my face expressionless, \"No problem, whichever one you need.\"\n\nWhen I went to sleep that night, he was still studying the files. I didn't want to go as far as to pray that he'd need to recreate the panty and garter girl, but I did do some pretty strong wishing.\n\nWhen I woke up in the morning, he was still at the table studying.\n\n\"Did you sleep at all?\" I asked.\n\nHe yawned and nodded, \"Yeah, I grabbed about six hours but I wanted to give a solid effort. So I have good news and bad news again.\"\n\n\"Oh yeah,\" I said rubbing sleep out of my eyes.\n\nI stood up and shuffled to the table, taking a seat opposite him.\n\n\"Good news, I solved one,\" he said tapping a folder and sliding it toward me.\n\nMy heart hammered as I took it. Opening it I saw the waitress.\n\n\"The bad news, I would be able to use a recreation of this one. So if you're up for it,\" he said holding up the other folder.\n\n\"Well, that's not really bad news, I did bug you to let me in on a case.\"\n\n\"True. We may have to wait a few days. I'll need to order stockings and a garter belt.\"\n\n\"Don't worry about that, I have some.\"\n\nA confused look crossed his face, \"Out here?\"\n\nI gave him a coy smile, \"Yep.\"\n\nHe raised an eyebrow, \"Why?\"\n\n\"Don't worry about it,\" I said, grinning. \n\nIt really wasn't that big a secret. I'd brought some to wear because I was going to take some selfies to send back to my husband, before I found out about his being a rat bastard. But I liked the look Solas was giving me, and making him think kinky thoughts was kind of fun. \n\n\"Great, if you have the outfit, when do you want to do it?\"\n\n\"Is tonight good?\"\n\n\"Tonight is perfect, that way the details are still fresh in my mind.\"\n\nAfter that we both got dressed and went to work. I was anxious all day long and watched the clock nonstop. I swear it was the longest day of my life and every time I checked it seemed time was moving backward instead of forward.\n\nWhen I finally left, I hurried to our room and found that Solas had beaten me there. He'd already arranged the room to match the crime scene. I'll admit to a splash of fear that at any moment he'd notice something during the setup and \"solve\" the case and tell me I was no longer needed.\n\nIt didn't happen, he smiled and went over the facts with me in a clinical fashion. When he asked if I was ready, I caught a flash in his eyes. The more time I spent with him the more I was impressed. He seemed to be so disciplined, so in control, it was kind of sexy, but I saw the look in his eyes. He wanted to see me half-naked. The knowledge thrilled me. I liked the power I had over him. Even that blonde chippie hadn't made him react like this.\n\nHe went over some paperwork with me and had me sign some documents. Then he asked for an account to send money too. Unlike Lawson, I wanted to be paid. Not because I wanted the money, but because I wanted the legitimacy of it. I was not some simple volunteer having fun. I was a paid assistant. \n\n\"Now that that's out of the way,\" he said.\n\nI nodded then I acted like nothing was out of the ordinary but I made a show of getting ready. I was already wearing the black bikini underwear that I planned on using for the crime scene. In my pair, the front was very sheer. Since he was using my bed, I went to his bed and casually took off all my clothes and folded them neatly, placing them on his comforter. Standing there in white ankle socks and black bikini panties I \"remembered\" the garter and stockings were in my locker.\n\nWalking over to get them I came back and I noticed that he'd never moved. He'd watched my ass the whole time walking away, and was staring at my tits the whole time coming back.\n\nI ignored him and pretended not to notice. I sat on his bed and drew the stockings over my legs then stood up and put the garter on. \n\nLooking up at him, I said, \"Mind giving me a little help here?\"\n\nLike every girl in the world, I knew how to attach my own garters but I wanted to let him get a close-up before work started. I knew I was affecting him now, but I was certain when he started working the lust would disappear. At least until he finished.\n\nHe knelt down in front of me and clipped the front garter to the stocking.\n\n(Solas)\n\nJesus Christ!\n\nThe devil has to be a woman. To put temptation like this in front of me. It was brutal. I know how badly her ex cheating on her affected her but I was impressed with the enthusiasm she was taking to this job. I'd really tried to use the waitress crime to recreate but I'd solved that case fairly easily and I know I could have still put her name down as my assistant but it wouldn't have felt right. In a perverse way, I know she wanted to \"earn\" the title of assistant.\n\nI'd seen her reaction before. When I told Lawson and Sanchez about being a part of something like this, I knew how cool it was for them. I wanted to give Ligero the same feeling and given the way her ex had lied and cheated I didn't think being anything less than honest was a good idea, even if it was to hook her up and prevent her from being half-naked.\n\nI know if I cheated the odds of her finding out were astronomical, but at the same time I was a firm believer in karma and the golden rule. I tried my best to treat people the way I wanted to be treated and I firmly believe that if you didn't, it came back to haunt you. So I'd played it straight and would use her on the case I hadn't solved yet. Hopefully, her help would be the mental break I needed.\n\nWhen I looked at the second case, I knew this was a chance. I felt there was something missing, that it was solvable with just the right nudge.\n\nI will confess, the tiniest part of me may have wanted to see Ligero wearing just her panties but I did my best to keep that part buried.\n\nStill, it had been hard not to react as she undressed. Dear freaking lord. Playboy models would be embarrassed to be around her. \n\nSlim waist, flat stomach, and beautiful full D breasts capped with small dark nipples that were hard from the open air, she was a wet dream. I couldn't help it, I stared. Thankfully she must have been concentrating on not being nervous because she never seemed to notice. When she walked to her locker, I almost ran across the room and grabbed that ass with both hands. Peach, a definite peach of an ass. Then she'd come back, she hadn't even looked up, so unselfconscious about her partial nudity.\n\nHer boobs had bounced slightly as she walked back to me. Just by looking at them, you could see how firm they were. The nipples were quarter sized, hard and perfect. \n\nI'll admit to not understanding women completely but even I could sense she was teasing me a little when she asked me to attach her garters. I knew she was being playful so I took it for what it was worth and complied. I dropped to my knees and hooked one of the garters through her front. As I grabbed the second one, I took a good look at her underwear, they were incredibly sheer. This close I could make out the fact she was smooth shaved and could see most of her pussy. Her lips were nice and tight. I fumbled for a few seconds and looked up to see if she noticed. She had a small smile with a raised eyebrow, as if she knew damn well what affect she was having on me and was lightheartedly enjoying it.\n\nI hastened to finish the front and without a word she turned to let me snap the backs. I fumbled again as I tried to divide my attention between the fact that her panties were just as sheer in the back and I could see her gorgeous ass, and the small clips that were frustrating the hell out of me.\n\n\"Having problems?\" she asked with another coy smile.\n\nI knew she was teasing me. I knew she was being playful, I didn't think she was being suggestive so soon after her marriage fiasco but she seemed to definitely be enjoying this. \n\nI slapped her butt, \"Behave.\"\n\n\"Ohhh, harder,\" she said friskily. \n\nThen she wiggled her ass and said, \"Don't blame me you can't multitask between your perving and clipping on a simple garter.\"\n\nShe pushed her butt back and bumped me in the face knocking me off balance.\n\nShe laughed harder then. Shaking my head, I stood up, pretending to glare at her.\n\n\"There, all done.\"\n\nShe looked over her shoulder to the back-garter straps, \"Took you long enough.\"\n\n(Ligero)\n\nWe walked back to my bed together and he arranged me in the way of the crime scene. Like last time he reversed a chair and sat in it. This time I was facing his front so I could watch him. Careful not to move I shifted my eyes toward him. Before he closed his eyes, I saw him track up and down my body, as if memorizing it for future reference. Then he closed his eyes for a long time. When he opened them, I had to stop myself from letting out a small squeak.\n\nThe transformation was amazing. There was no way anybody viewing him could think he was less than professional. Gone was any hint of lust, hell, gone was any hint of emotion at all. He looked me over and I'm not sure he even saw me.\n\nI was simultaneously fascinated at his intelligence and a little annoyed that he could look at my half naked body and lose all interest whatsoever. Walking around me he asked himself questions that only his mind answered.\n\nThis time he was faster. I could see when it hit him. His head snapped up and he grabbed his computer. As much as I wanted to move, I stayed perfectly still. He lost himself on the computer for another hour before he looked over at me.\n\n\"You can get dressed now.\"\n\nI propped myself up on one elbow, and waved a hand pointing at all of him, \"You know babe, when you do this, you have this whole sexy vibe thing going on, but we really need to work on your manner.\"\n\n\"The first part is fine, I expect professionalism. The second part, is like a dismissal, I can tell you it's annoying as hell and I promise you, Sanchez and Lawson felt the same.\"\n\nHe looked surprised, then thoughtful. After a minute he tilted his head in acknowledgment.\n\n\"I'll work on it. Do you have any suggestions?\"\n\nI smiled, \"How about, thank you. I think we're finished now. I can't give you details yet, but I promise if I find out something I can let you know, I'll contact you.\"\n\nHe smiled, \"I'll remember that.\"\n\n\"Good. Now, want to help me take my garters off?\"\n\nHe rolled his eyes and laughed, \"Sure.\"\n\nWe kept it light, once he unsnapped them, I got up and got dressed. I wondered if he'd try anything but he was a gentleman. I wasn't sure if I was disappointed or relieved. He was cute, sexy, smart, and utterly clueless but I also wasn't sure about anything while still in the middle of my own relationship fiasco.\n\n*****\n\nDay 140\n\n(Solas)\n\nIt was the week before Christmas and our company was hosting a party. It'd been an easy day at work and I'd left early. I went back to my room and taken a nap. Now I was up and changing from my camouflage uniform to black knee length training shorts and a grey USMC t-shirt. Since it was a party, the unit allowed casual wear for the dinner and following games. \n\nLigero came in while I had my shirt off. Her eyes flicked over my body giving me quick smile before she turned and flopped on her bed. I finished dressing and walked toward the center table.\n\n\"You ready for the party?\" I asked.\n\nShe groaned, \"Not really. I think I'm just going to stay here.\"\n\nI watched her for a few moments, being away from loved ones on the holidays usually led to being sad, but this seemed different, something else.\n\n\"Anything you want to talk about?\"\n\n\"Something I very much don't want to talk about but probably should. It's the freaking ex, or soon-to-be ex I should say. He's fighting me on our assets. Can you believe that? He says I have to give him half my retirement savings, $50,000.\"\n\n\"Ouch.\"\n\n\"Yeah, this whole thing is turning into a nightmare. I just want to lay here and forget about him.\"\n\n\"Are you sure that's the best thing? Maybe going out, hanging with friends would be better,\" I said.\n\n\"What would be better is a bottle of Jack, a two-liter bottle of coke, and me getting trashed beyond belief, but since that's not going to happen, I just want to stay here and plot his death in as many ways as I can come up with.\"\n\nShe grabbed a pillow and pulled it on top of her head. Seeing her this upset was bothering me. Since we got past our initial hang-ups, we'd become somewhat friends and I hated seeing her like this. I walked over to her bed and started unlacing her boots. She didn't move or take the pillow off her face as I took them and her socks off.\n\nI walked over to my locker and grabbed a bottle of Crown my parents had sent me and put it on the table, then went back to her bed. \n\nOn a whim I sat at the bottom of her bed and grabbed one of her feet. Using my thumbs, I started to give her a foot massage, kneading my thumbs into her soles. I half-expected her to pull away but she lay there and started moaning. Neither of us said a word over the next ten minutes as I worked on her foot. The second I dropped one she lifted the other and held it in the air, wiggling it back and forth, waiting for me to do the second.\n\nI chuckled but grabbed the offered foot and began working on that one. She pulled the pillow from her face and looked at me with heavy lidded eyes. \n\n\"Dear god, you have no idea how good that feels.\"\n\n\"Yeah, well, don't get used to this. Just trying to cheer you up, you look like you could use it.\"\n\nShe smiled, \"Thank you.\"\n\n\"And I have another surprise.\"\n\nI looked toward the table and she followed my gaze.\n\n\"Oh.\"\n\n\"Yeah, fam unit sent it to me. Didn't have the heart to tell them there was no drinking while deployed. I was planning on just bringing it back or whatever but it seems like it might be good for an emergency use.\"\n\nShe bit her lip, \"We could get in so much trouble for that.\"\n\n\"Yep,\" I agreed.\n\nStill facing the bottle, she looked out of the corner of her eye, \"Buuuuuuttttttt, if we were to lock the door, and maybe only leave a small light on, we could get drunk as hell and nobody would know.\"\n\n\"I was thinking something along those lines. Not like anybody ever comes to get us this late at night. If they did, we just wouldn't answer, say we were asleep if asked.\"\n\nHer eyes brightened as she chewed on her lip in thought.\n\n\"You're not going to try and get me drunk and take advantage of me, are you?\"\n\nI laughed, \"I promise, no matter what happens tonight, we will not be having sex.\"\n\n\"Should I feel insulted right now?\" she asked.\n\n\"Definitely not, it's just I plan on getting as drunk as you, and I don't ever sleep with a girl the first time while we're both drunk. I have no desire to deal with somebody having morning regret and then accusing me of misconduct.\"\n\nShe nodded, \"Understandable.\"\n\n\"We'll have to pinky swear to keep tonight between us,\" she said holding up her hand with her pinky finger out.\n\n\"Pinky swear?\"\n\n\"Pinky swears are unbreakable bonds of loyalty. If you break a pinkie swear you go straight to hell.\"\n\n\"Straight to hell,\" I said dryly.\n\n\"Everybody knows that.\"\n\nI reached my hand out and hooked my pinky with hers.\n\n\"Go lock the door,\" she said. \"I'm going to change out of uniform.\"\n\nI did what she asked as she changed into small, tight, black, spandex shorts and a small black tanktop. The way her nipples pressed to the fabric I suspected she wasn't wearing a bra.\n\nI grabbed some small glasses I kept on the table then walked over to our small refrigerator and filled them with ice. I opened the coke and she held up her hand.\n\n\"First, let's do a shot, just to take the edge off.\"\n\nI shrugged but poured a shot in each glass, melting the ice a little. We each grabbed one, swirled it, then clinked them together and drank.\n\nAfterward we smiled at each other and she put the glass down, \"Now make me a drink.\"\n\nOnce I handed her the new drink, she took another sip and eyed me, we stayed quiet as we each watched the other with a small smile. She moved to her bed and patted the spot beside her, I grabbed the bottles and went to her and took a seat. We both sat Indian style, with one of our knees touching.\n\n\"I have to admit, I never thought I'd be doing this with you of all people.\"\n\nI raised an eyebrow as I held the glass to my lips.\n\nShe took hers in one big drink and held up a hand to forestall my comment, my face must've showed my annoyance.\n\nPutting one hand on my knee, \"I didn't mean that in a negative way.\"\n\nI took my drink, letting the liquid burn down my throat. \n\n\"Not sure how that could be taken in a good way, but I get what you're trying to say.\"\n\nShe snorted as she poured us more drinks.\n\n\"Can I be honest?\"\n\n\"Go for it.\"\n\n\"Part of the reason I was originally such a bitch to you is that you put me in my place when we first met.\"\n\nI frowned, \"You're going to have to explain that.\"\n\nNodding her head, \"You obviously remember our first meeting, I was so sure you were in the wrong. That you were a thief. It was so galling and embarrassing when you proved me wrong. After that I would've done anything to prove you were an ass.\"\n\n\"Gee, thanks.\"\n\nShe sighed, \"You don't know much about women, do you?\"\n\nI laughed out loud, \"Never have truer words been spoken.\"\n\nShe giggled and smacked my knee, \"Relax cowboy, I meant that you don't understand what that meant. It's like when a guy doesn't look at you and you're dressed hot as hell in a mini skirt and halter top. If he ignores me, he must be gay.\"\n\n\"That makes no sense.\"\n\n\"Because you're not a woman.\"\n\n\"Hard to argue with that logic.\"\n\n\"Don't act like guys can't be like that. If a man showed you up in an embarrassing way, are you saying you wouldn't want to get even?\"\n\n\"I wouldn't care,\" I said. \"But I understand your point.\"\n\nAfter that we each sipped our drinks for a while, letting the buzz of alcohol sink in.\n\nLigero looked up at me, \"So you know about my relationship disaster, but I don't know anything about yours, if you even have one. How come you don't have anybody in your life?\"\n\nI shrugged, \"Nothing big really, after two years, my last girlfriend fell out of love. Can you believe that?\"",
        "She eyed me for a minute, \"No.\"\n\nI looked up at her, she blushed and took another sip.\n\n\"So did she let you tie her up a lot?\"\n\n\"Yes she did. I like the whole bondage thing. Not like crazy whips and latex, just simple tied up. I also like taking pictures of her naked or in her underwear.\"\n\n\"Anything else?\" she asked.\n\n\"I like exhibitionism.\"\n\n\"Explain please.\"\n\nI shrugged, \"Not much to explain, I like my girl to be seen. I like her to wear thong bikinis. I'm not bothered if other men see her naked.\"\n\nShe raised an eyebrow.\n\nI explained, \"It has to be done right, not crude or anything. But if the right friend came over and my girl was walking around in her panties or sunbathing topless, I wouldn't be bothered, I'd be excited.\"\n\n\"That's unusual, most guys get jealous,\" she said.\n\n\"True, most do, but I think you'd be surprised by the amount that are like me. Especially in the military. I've noticed we seem to attract people that have a thing for that.\"\n\n\"So why did she fall out of love, she not like that stuff?\n\n\"No, I think it was more circumstances, deployment on her side, then my side. Just weren't together enough. For the record, absence does not make the heart grow fonder,\" I said while taking a drink.\n\n\"She ever tie you up?\"\n\nI shook my head no, \"Not my thing.\" \n\nShe nodded, after a moment she asked, \"So how would you do it?\"\n\nI raised an eyebrow.\n\n\"If you tied me up? How would you do it?\"\n\nI was feeling good from the alcohol but wasn't trashed. Something about her tone had been a little too calculated, too interested. With a start I realized she was hinting me toward something. It was probably the alcohol and I realized it might be a bad decision. Come tomorrow we might both regret it, but as I studied her face and she met my eyes unblinking, I wanted to take a chance. Have a little fun. \n\nI looked away at my pack and shifted my legs underneath me to stand up. I walked to my gear and pulled out some 1/4-inch cotton rope. I kept a bunch of two-foot lengths for cinching up my gear, these were new and still soft. I walked to her bed and she watched me the whole time. \n\nWe could feel the tension but neither of us said a word. I took the drink out of her hand and put it to the side. Then I took her wrist in my hand and moved it to the top corner of the bed frame, with my free hand I pushed her shoulders down on the bed.\n\nMilitary beds are great for this kind of play. Single frames made of heavy-duty square tube metal that are sturdy as hell. \n\nI took her wrist and made sure to exaggerate my movements. I showed her that I was wrapping the ties loosely around her wrist and the bed frame. After a few loops I crossed the rope between her wrist and the frame and the tied it tight. This tightened both loops to a point that she couldn't pull free or reach them but it didn't cut off her circulation either. \n\nI moved to her other side and took that wrist. She looked at her tied wrist and tried to wiggle it while I repeated the procedure with her free hand. After I finished both, I stepped back and watched as she spent the next ten minutes seeing if she could free herself. \n\nAfter she finished trying to get loose, she looked at me. I pointedly looked at her feet and took another piece of rope. Still silent, she watched as I looped her feet together then wrapped the middle the same way I did her wrists. I took a last piece and looped it to the bottom bed frame and pulled her until she was firmly secure.\n\nI went and grabbed a black shirt and stood next to her while she tested her feet.\n\n\"What's that for?\" she asked as I ripped the shirt apart.\n\n\"Could be a blindfold, could be a gag, could be both.\"\n\nHer eyes went wide but she didn't say anything as she watched me make strips. I bent over and took her glasses off then put the cloth over her eyes and wrapped it around her head. She gave a small whimper as she lost sight but didn't tell me to stop.\n\nEven blindfolded I could see how nervous she was as she twisted her head and tested her arms and feet.\n\nI grabbed one of our chairs and took a seat next to the bed to watch her. I noticed her nipples seemed harder as they poked against her tanktop. After moving her head back and forth in a vain attempt to see she looked in my direction.\n\n\"I think I need another drink, my heart is pounding right now.\"\n\n\"Okay, but I have an idea about that.\"\n\n\"What's that?\" she asked.\n\nI didn't say anything but took a good drink from her glass. Bending over I carefully moved forward and then pressed my lips to hers. She kissed back eagerly for a split second then I let my lips part and she felt the trickle of coke and whiskey into her mouth. Careful not to let it go too fast we stayed lip locked as I passed the drink to her. She finished swallowing and then slipped her tongue into my mouth and slowly twirled it against mine.\n\nWhile we kissed, I scrunched her tanktop from the bottom then pushed it up inch by inch. She let out a small whimper into our kiss when she realized what I was doing but didn't break away or try to stop me. I paused as my hands got to her underboob and used my thumbs to stroke the underside of her tits. \n\nAfter a few caresses I teased the shirt back and forth then brought it over her chest to her chin. Breaking our kiss, I finished bringing it over her head and left it bunched up near her hands.\n\nShe hissed and arched her back, \"I thought we weren't having sex?\"\n\nI laughed, \"We aren't. Just because I took your top off doesn't mean I'm having sex with you. Do you sleep with every guy that sees your tits?\"\n\n\"When he takes my shirt off and kisses me like that I do,\" she cried.\n\nShe bit her lip as I ran my fingers over her chest, teasing her nipples even harder than they were. A small growl escaped her lips and she thrust her chest out.\n\n\"You're a bad girl,\" I teased.\n\n\"I'm bad? Are you kidding me, I'm bad?\" she asked. \"Look who's talking.\"\n\n\"I stand by my promise, we are not having sex tonight. Maybe some other time, but no way tonight. I don't want you waking up with morning regret.\"\n\nShe tugged futility at her bonds, \"I'm not sure whether to respect you for that or stomp you with my boots when I get free.\" \n\n\"If you think that's bad...\" I trailed my voice off as I grabbed the waistband of her shorts. \n\nHooking my fingers underneath her shorts and panties, I moved them back and forth. Moving my hands to the backside I cupped her butt and then hooked the top and pulled them slowly below her cheeks. This made the front ride down a little but left the material hooked under the curve of her ass. She took a deep breath and held it as I moved my hands back to the front. Using one finger I repeatedly teased the waistband away from her body and let it go. The stress from the backside moved it down centimeter by centimeter. Every time I ran a finger under the band and let it go, the tension would bring it down farther.\n\nShe swallowed, but stayed still as her shorts inevitably moved south. When I got to a point the tension would no longer bring them down, I could see most of her mound. She was waxed smooth but at this point her lips were still hidden. I could tell they were just out of sight. Using both hands I grabbed the sides of her shorts and did a slow-motion pull-down. I gave her every chance to say something or struggle but she just let out another little whimper as her pussy became exposed. Gaining speed, I tugged them down to her knees and she shifted position. At this point I just moved them down to her ankles and left them there as she twisted her body, once again exploring the sensations of her nudity. \n\n\"Jesus Christ I can't believe that just happened.\"\n\n\"Which part?\" I whispered.\n\n\"That I let you tie me up and take off my clothes,\" she whined. \n\nOnce again, she flexed her body and opened her hands, grasping the air as she vainly looked around, tugging at her hands and feet. After a minute she calmed down and looked in my direction.\n\n\"I think I need another shot now.\" \n\nIn response I grabbed her glass and took another swallow. When I bent over her, I could tell she felt my presence because she lifted her head and met my lips. She knew what to expect this time as I let my lips part and the drink went to her mouth. \n\nThen I took the bottle and poured a small amount into the cap, then carefully I poured a little bit across her pussy making her hiss. I brought my tongue down to lick it off her, giving one long, slow lick up, then down her slit. After that I poured a some on each of her tits, she bit her lip as I swirled my tongue once across each nipple licking them clean.\n\n\"Not sure how much of a shot you got doing it that way,\" she giggled.\n\n\"Yeah, but at least now I know I've licked Crown Royal off your tits, so it works out,\" I said.\n\n\"Do I get another shot now too?\"\n\nIn response I repeated our kiss and drink method.\n\nAfter we parted, she said, \"I'm definitely going to have to remember this method of drinking, it's pretty fun.\"\n\n\"Are you having more fun than you thought you would?\"\n\n\"Yes,\" she whispered.\n\nWe were quiet for a few minutes after that as we let the implications of her statement sink in. I ran my hands across her body, tracing my fingers across tits, stomach, legs, and pussy. She let out small contented noises and goosebumps formed across her skin. Her head lolled back and forth as she shifted her body in answer to my touch. \n\n\"So what's next?\" she asked.\n\n\"This not enough?\"\n\nWith a small sigh, she said, \"It is, I could let you do this all night. Just wasn't sure this was all.\"\n\n\"As it happens, I do have some other ideas.\"\n\n\"Like what?\"\n\n\"How about a game of Truth?\"\n\n\"What's that?\"\n\n\"Like Truth or Dare but without the dare,\" I said. \"I'm not going to untie you so you can't really do a dare.\"\n\nShe laughed, \"True, so what, we just ask each other questions?\"\n\n\"I'll ask you questions and if I feel you're not being truthful I'm going to make you pay.\"\n\nAlarmed she said, \"Wait, what? Make me pay? I swear to god I will kill you if I feel pain.\"\n\nLaughing, \"Calm down girl.\"\n\nI stroked a finger on the side of her rib and she exploded into laughter and flinched away.\n\n\"Just like I though, ticklish. There are much more creative ways to make you pay than whatever you were thinking.\"\n\nShe struggled as she talked, \"Oh hell no, no damn way. I swear I'm going to kill you.\"\n\nI stroked my fingers against both sides of her. She shrieked and twisted.\n\n\"God damn it, I'm so going to kick your ass,\" she panted as she tried to wiggle her body away from my fingers.\n\nI tickled her for a minute as she struggled, she was panting and screaming and laughing the whole time. I stopped and she stayed still while trying to catch her breath.\n\n\"I swear to god, you're a dead man when I get free.\"\n\nI laughed, \"Good luck getting free.\"\n\nWith a frustrated heave she said, \"Fine, ask your questions.\"\n\nI ran a finger across her tits and down her stomach until I traced her pussy up then down, \"So tell me, did you want me to take off your clothes when I tied you up?\"\n\n\"Wha... I... I didn't think about it...\"\n\nI ran a finger up the side of her ribs and she thrashed and twisted as she shrieked.\n\n\"Wait, wait...\"\n\n\"You're lying,\" I said.\n\n\"No I'm n...\"\n\nI ran both hands up her sides.\n\nAs she screamed, \"Okay, okay, yes I did. Stop, I did, I really did.\"\n\nI stopped and she took a few seconds to gain control.\n\nPanting, she said, \"This is so not fair. Why don't I get to ask you questions?\"\n\n\"You can ask me anything you want, I always tell the truth.\"\n\n\"Yeah right,\" she muttered. \"No guy always tells the truth.\"\n\n\"I do,\" I said. \"But it isn't a moral righteousness thing it's a 'I don't care enough about people's feelings to make the effort to lie thing.'\"\n\nHer face turned to me, smugly she asked, \"Okay then, when did you first want to see me naked?\"\n\n\"Pretty much the first minute I saw you. I mean yeah, you were a bitch to me, but you're beautiful and have an outrageous body so I imagined you naked when I saw you sitting across from me. Hell, even while you were yelling at me, I was thinking you'd look hot naked. Especially on all fours.\"\n\nHer mouth dropped as I talked, stuttering she asked, \"Fine, have you jerked off thinking about me?\"\n\n\"More times than I can count. One day you left your laundry out and I saw all your panties. Wow, let me tell you, hot. All g-string and thongs. I had to go take a shower right then and take care of business.\"\n\nShe stared in my direction for a minute, even with the blindfold I could see her frustration. She opened her mouth about to speak, then stopped and closed it and thought some more.\n\nWith a frustrated groan, she frowned and said, \"You're right, this game sucks when the person you're talking to is completely honest about everything and embarrassed about nothing.\"\n\n\"I don't hide my inner freak.\"\n\n\"I'm noticing that,\" she giggled.\n\n\"So you really wanted me to see you naked?\" I stated.\n\nHer lips compressed for a moment, \"Yes,\" she said meekly.\n\n\"Did you like when I licked the Crown off you?\"\n\n\"Yes,\" she whispered.\n\n\"You'd let me fuck you right now if I wanted, wouldn't you?\"\n\nShe paused and struggled again for a second before relaxing, this time she stared forward, \"Yes.\"\n\nI stayed quiet as we both lost ourselves to our own thoughts.\n\n\"I want a picture of you, right now, just like this,\" I said.\n\nShe inhaled and paused, then she gave a sharp nod of her head.\n\nI took out my iPhone and opened the camera. I snapped off a couple of shots then closed it.\n\n\"Perfect,\" I said.\n\n\"If those get out, I will kill you.\"\n\n\"I promise they won't.\"\n\n\"I've never let a guy have a full frontal.\"\n\n\"Really?\" I asked.\n\nShe nodded her head yes.\n\n\"So I'm the first. I like that.\"\n\n\"Can I have another drink?\" she asked.\n\nI repeated our earlier maneuver and kissed her while giving her more alcohol. Our kiss lasted long this time, after she swallowed, we stayed locked, our tongues slowly teasing back and forth against each other.\n\nWhen I broke, I stood up and crossed the room to get some baby oil. I took a small bowl and filled it with water and heated it in our microwave. Then I put the oil in the water to warm up.\n\n\"What are you doing now?\" she asked.\n\n\"You'll see,\" I said.\n\nOnce I got the oil nice and warm, I came back.\n\n\"Brace yourself,\" I said.\n\nShe took a deep breath as the oil hit her. I moved my hands back and forth as I poured making sure oil was all over her body.\n\nSetting the bottle aside I spent the next 30 minutes massaging the oil into her skin. Less than a minute into it she started giving constant moans and writhing as I made sure to work the oil everywhere. I caressed every inch of her, rubbing warm oil into her sex, her tits, her legs, stomach and arms.\n\nShe arched her back as I took my time rubbing her. I dug my thumbs and fingers into her thighs and legs. Leisurely I kneaded her flesh as she let out little whimpers and moans of pleasure. I caressed her tits and played with her hardened nipples. Tracing my fingers around them, cupping and holding them. I played my hands across her stomach, moving back and forth.\n\nAfter I did the rest of her body I moved back to her sex. Playfully I stroked my hands all around her bikini area, teasing her with my fingers. Using my thumbs across her mound, sliding up her slit with one thumb then the other. Her moans grew in strength and her squirming heightened.\n\nI slid two fingers inside her and coaxed back and forth. She moved to the rhythm and pushed her hips up and down to my hand. Slowing down I pressed harder and she pushed back harder. Her body stilled its side-to-side movement but she pushed up harder and her breathing increased. As she was really getting into it, I stopped. \n\nIt took her a few moments to realize what happened and when she did, she growled and struggled. \n\n\"God, I hate you.\"\n\nI moved forward and undid her blindfold, \"Now, now, behave.\"\n\nShe glared at me now that she could actually see.\n\nFrustrated she snapped, \"Are you really not going to finish me?\"\n\nIgnoring her I asked, \"So I have a question, do you have a vibrator here?\"\n\nHer eyes widened and she immediately jerked, \"No, we are not talking about this.\"\n\n\"So you do have one,\" I said.\n\nFrantic, she whimpered, \"No, no I don't.\"\n\nMy eyes narrowed and I reached a hand and stroked the bottom of her foot, she jerked like she'd been touched with ice. I knew most girls had a weak spot for ticklish feet and I would use it without remorse.\n\n\"Do I really need to tickle your feet until you scream?\"\n\nShe tugged her hands and looked back and forth at her arms and legs. Irritated she looked at me, \"I so hate you.\"\n\n\"Uh huh, now answer the question.\"\n\n\"Yes, it's in my drawer by the fridge.\"\n\nI went and opened the drawer on the small dresser she had and saw most of her frilly, colorful, and very tiny underwear. Lifting a few I found a slim, silver vibrator in the bottom.\n\n\"What are we doing now?\" she asked warily.\n\n\"You'll see. Where is your toe nail polish?\"\n\nShe frowned but motioned with her head toward another drawer. I opened it and saw two vials, Ruby Red and Sapphire Blue. I grabbed the blue one and brought it back. I grabbed another piece of rope and started looping it around her thighs, cinching them tight together so she couldn't separate her legs. \n\nOnce complete I turned on her vibrator at medium speed and slipped it under the thigh rope and pushed it forward until it was just touching her pussy.\n\nI let it work and watched her face start to take on a glazed expression. Her moans turned to whimpers and she turned her head back and forth. \n\n\"Oh my god, you can't do this to me. This is so embarrassing. Oh god, please...\"\n\nShe kept up her talk enough that I got up and went to her panty drawer again. Grabbing a small pair of pink bikini cut underwear I brought them back and wadded them into a ball.\n\nShe eyed me and as I pushed them toward her mouth, \"Wait, stop, no, you can't ju... mumph.\"\n\nShe could only glare at me and moan as I took the strip I'd used as a blindfold and tied it around her head securing the panties in her mouth as a gag. She kept giving me hateful looks so I turned up the speed on the vibrator and suddenly she couldn't think straight. All she could do was lay back and arch her back and push her hips forward.\n\nI moved to her feet and uncapped the toenail polish. She tried to yell through the gag at me as I took out the brush. It was fun to watch as she kept pushing her hips up but still tried to keep her feet still as I decorated her toes. \n\nI took my time, when I saw that she was getting worked up I would slow the vibrator down. Then she would watch me as I would paint a toe nail. When she calmed enough that I could see she could control herself I would increase the speed. As she rose up and got more worked up, she fidgeted more. I would keep painting but then bring the speed back down.\n\nI kept her on complete edge, back and forth for almost an hour. It took me that long to finish her toes since she was moving so much. She growled at me and glared every time I kept her on low speed and she lost her edge.\n\nBy the time I finished she was panting and drenched in sweat, her hair was a mess. I stopped the vibrator and undid the rope around her thighs, then I reached up and undid the gag.\n\n\"Are you really not going to finish me off?\"\n\n\"Yep, we're almost done, just one little thing.\"\n\n\"What's that?\" she snapped. \n\n\"Well, since I got to taste Crown off you, I also like the idea of giving you some in the same way.\"\n\nI got the bottle and stood at the edge of the bed. I slid my shorts down exposing my hardened dick. I moved on the bed on my knees toward her head.\n\nHer eyes went wide as she understood what I was about to do.\n\n\"Oh hell no, the way you just left me hanging, that is not happening.\"",
        "She struggled but I reached my free hand into her hair and pulled it tight, she gasped and held still, glaring daggers at me. I positioned myself until my dick was almost touching her lips. She tugged a little against me but I held tight and put the tip to her lips. She tried to keep her mouth closed but a small tug on her hair opened her mouth and I slid my dick past her lips.\n\nThen I took the bottle of Crown and tilted it over my dick, to trickle off me into her mouth. I let her hair go just enough to let her suck on me and drink. I let her sip, then pulled the bottle away. Afterward, her eyes went downcast and she pushed her head forward to envelope my shaft. One slow push forward then a maddeningly slow pull back with her lips wrapped tight around my shaft. At the end she gave a slow lick around the tip then pulled back completely.\n\n\"That's all you get,\" she whispered.\n\nI raised an eyebrow.\n\n\"That's right tough guy, you're not the only one who can tease. You want to do me, go ahead. I'll let you screw me all night long, any way you want. Just know I will lose respect for you tomorrow. Mr. 'We're not having sex tonight' and 'I don't lie to girls' will be proven a liar. Your choice stud.\"\n\nI stared at her, my opinion of her grew.\n\n\"I love it,\" I said smiling. Then I eyed her hard, \"I'm always a man of my word.\"\n\nI got off the bed and put the bottle away. \n\nShe didn't say a word but smirked at me the whole time. I went to her feet and undid the ties then moved to her head and untied her arms. Limp she lay there.\n\n\"Just so you know, I may kill you tonight,\" she muttered.\n\nShe reached out a hand and snatched the vibrator. Turning it on she pressed it to her clit and worked it back and forth. It may have been my imagination but it seemed like it was only seconds later she was arching her back and crying out in orgasm. Incredibly as she slowed down, she switched the vibrator on high and suddenly she was crying out again. This one lasted for almost a minute before her body collapsed and her hands dropped. \n\nI took the vibrator and put it on the nightstand as she watched me. Getting up, I got a towel and two bottles of water. I opened one and handed it to her, she sat up a little and took small sips. I used the other bottle to wet the towel and then I proceeded to wipe the sweat and baby oil from her body.\n\nShe relaxed and drank water as I cleaned her up. When I finished, we stared at each other. \n\n(Solas) \n\nThe next morning, I woke up with Ligero snuggled into me. She was gloriously naked and her warm body pressed to mine in all the right spots. Without waking her I moved her to her back and slid down her body until my head was between her legs. Gently using my tongue, I began to lick her softly. I ran my tongue up and down the length of her pussy, kissing and teasing her.\n\nI could tell the instant she came awake as her body tensed, but I stayed using my tongue inside her pussy. She moaned and spread her legs wider giving me easier access. Her hands came down and gripped my hair, alternately running her fingers through and holding my head tight to her sex. She started pushing her hips against me as held my head tight against her.\n\nSpurred by her enthusiasm I pushed with my tongue and licked hard as she pressed against me. Her speed increased and she was constantly moaning. I felt a tremor run through her, then her body locked and she held me in a death grip as the orgasm hit her. She cried out and held me to her for almost a minute as shocks travelled through her body. \n\nWhen she let me free, I moved up to a kneeling position. She'd slept naked but I had on a pair of black sport briefs that I slid off. Her eyes flicked toward my hardened member and then I moved on top of her, positioning myself until my head was slightly pressed to her slit.\n\nHer eyes closed as she gasped and wrapped her arms around me, digging her nails into my back.\n\n\"I thought we weren't having sex,\" she breathed.\n\n\"That was last night,\" I responded. \"I never promised I'd leave you alone after that.\"\n\nI pushed forward sliding myself halfway into her.\n\n\"Feel free to tell me to stop,\" I said.\n\nShe squirmed as I held in place, she tried to move me deeper but I kept steady, refusing to go further.\n\n\"God, you're such a bastard.\"\n\n\"Why's that?\" I asked playfully.\n\n\"You know why,\" she said while trying to shift her hips.\n\n\"Are you saying you want me to fuck you?\"\n\nShe shifted and squirmed but now I was using all my strength to keep us in exact position, me halfway inside her. Her eyes flared and her nails dug deeper, I shifted more of my body to pin her and reached a hand to weave into her hair and hold it tight.\n\n\"Yes damn it!\" she hissed.\n\n\"Say it,\" I whispered, bending down I ran my tongue across her lips. \n\nShe groaned and brought a hand up trying to push me away but I grabbed her wrist and pinned it to the bed. Her other arm beat against my back but was pinned by my weight and the arm that was pulling her hair.\n\nFinally she gave in, \"Yes, damn you, fuck me.\"\n\nJust as she said \"fuck me\" I pushed deep inside her and her words ended in a cry. \n\nWe came together then. The first few minutes were rough and furious as we pressed our bodies harder and harder to each other. I let go of her hair and lifted off her, she wrapped her legs around me and brought her arms forward to caress my chest and we moved to an even tempo.\n\nQuickly we came a head, each of us building to climax. Her hips pushed back a little harder as I bent down to kiss her. She pulled me a little tighter and then halfway through our kiss she bucked. One hand grabbed the back of my head as she quivered underneath me. My own need was satisfied by her orgasm, and as she finished my body reached its peak. I thrust hard as she clung to me and I released inside her. Wave after wave hit my body, each one releasing a little more of me until I was spent. \n\nI dropped to the side of her and she shifted to cuddle against me while I was still inside of her.\n\nWe spent the morning repeating ourselves. Sometimes slow, making love, sometimes hard, energetic. She rolled over and rode me cowgirl. I turned her over and took her doggy style. By midday we were both starving and had to get up to get dressed and go to the chowhall.\n\n*****\n\nDeployment:\n\nDay 150\n\n(Ligero)\n\nWow.\n\nThe last few weeks had been spectacular. We went at it like bunnies for a few days after the Christmas party night and I had to admit, it was hot. He was a very good lover, and creative as hell. I spent a few more times tied to the bed as he'd teased, tickled, and basically played with my body in numerous ways. I'd been completely wrong in my thoughts about bondage and now actually looked forward to nights that I spent an hour or two tied up in kinky ways because I'd always cum multiple times.\n\nWe'd had a talk after a couple of days of sex. He wanted me to know he'd back off if I felt we should. He realized given our living arrangement and my own ridiculous marriage that things could go south pretty quick. So he said he'd give me space for a few days to let me see how I felt.\n\nIt drove me wild. By the third day I sent him a signal. I pulled his bed from the wall a few feet, then brought my bed over and put them together. After that I stripped naked and lay in bed reading a book until he got back from work for the evening. Usually, we'd go to dinner together or go work out depending on the mood.\n\nThat night we went hungry and had our own special workout.\n\nEverything had been going great, but now it looked like we were in for our first fight. I hoped it was nothing, but I was a little scared he'd been so inconsiderate so fast. I really hoped it wasn't a sign that he was one of those \"As soon as I get it, I treat you differently\" types.\n\nHe'd left early to the gym to go play basketball with Reed. I was waiting around wearing just a t-shirt.\n\nWhen he finally walked in, I ignored him for a few moments. When I looked up, he took my breath away. He was wearing white high-top sneakers and black basketball shorts with a red sleeveless shirt that had large armholes letting me see the muscles of his chest. He was all sweaty and at that moment he took the bottom of his shirt and lifted it in order to wipe his face, exposing his rippled stomach muscles. \n\nI forced myself to calm down and bring my expression back to neutral.\n\n\"Hey sexy,\" he said with a smile. \"You dressed like that for a reason?\"\n\nMy anger came back in a flash.\n\n\"Yeah, as a matter of fact I am. I'm not wearing any underwear because I don't have any clean ones because you promised to go to the cleaners and pick up my load Sunday morning.\"\n\nI glared at him. \n\nI'd given him a simple job. I had to work late one night and I had asked him to drop off my clothes to the base cleaners. For free they would do your laundry and fold it. All he had to do was take the ticket in the morning and go pick it up. Instead he went and played basketball and I was stuck in our room because I didn't have any clean underwear.\n\nI know I could've just grabbed something not so dirty and gone to eat or whatever else I wanted to do, but it was the point. If this was a one-time thing fine, but I didn't want him to start a trend of being inconsiderate.\n\nHe smiled and shook his head.\n\nOh hell no. That was the wrong thing to do. My temper soared.\n\n\"Really? Really? That's the attitude you want to give right now? I don't know who the hell you think you are, but I swear I'm not going to be the girl that gets played. I just went through this shit with the last asshole and if you think I'm going to put up with it from you, you're out of your goddamn mind.\"\n\nHis face went from smiling to his lips pressed in a thin line.\n\n\"You done?\" he asked.\n\n\"Don't play this shit with me,\" I warned.\n\n\"Can I talk now?\"\n\nI nodded.\n\n\"It's Saturday.\"\n\nIt took me a second to register what he just said. My eyes went wide and I grabbed my iPhone.\n\nDAMN, DAMN, DAMN.\n\nI looked back up at him and he had a smug smile.\n\nDAMN!!\n\nDeep breaths, deep breaths.\n\nHe still had that smug smile. I swear to god I will burn this building down around us, I don't give a damn!\n\nNow he was chuckling. My eyes narrowed as I glared at him.\n\nHe finally sensed the danger because he quit laughing and tried to get his expression under control.\n\nFuming I stood up, I pushed my glasses farther back on my nose and strode toward him. Standing in front of him, he lifted an eyebrow. Without warning I violently shoved him back until he hit the bed and stopped. Then I grabbed his shorts and yanked them down, I pushed again and he fell onto the bed. \n\nScrew apologies. Dropping to my knees I wrapped my lips around the head of his dick and swirled my tongue in circles.\n\n\"Oh hell,\" he muttered.\n\nSpurred by that comment and the instant hardening of his dick to a steel bar I went to town. I licked the shaft up and down. \n\nHe was still a little sweaty as I ran my tongue up and down, and around his shaft, but it was kind of sexy, a clean sweat.\n\nI hated being wrong, but at least if I was going to be wrong, I could make sure he wouldn't give me hell about it. I stopped licking and looked up into his eyes.\n\n\"I told you to get it today didn't I?\" I said.\n\n\"Huh, what?\"\n\nI licked some more and stopped, \"I told you to get my laundry today, right?\"\n\nMy eyes narrowed and he looked confused, understanding hit him as I made a motion to pull away. \n\nHurriedly, \"Yes, yes, I'm so sorry I forgot to get your laundry. It's totally my fault.\"\n\nI shook my head and growled, \"Don't let it happen again.\"\n\nHe nodded and I went back to using my tongue and mouth to make him see god. I attacked his cock with my full energy. It took a little longer than I thought, he lasted almost ten minutes but, in the end, he cried out and held the back of my head as his dick pulsed and he unloaded in my mouth. I looked into his eyes as he came. I kept sucking and he tried to pull away but I clung to him, then he fell back on the bed, his energy leaving him, as if I was sucking him dry like a vampire.\n\nI loved it.\n\n*****\n\nDeployment:\n\nDay 160\n\n(Solas)\n\nThe past weeks had been great. This was the closest I'd ever come to living with somebody and I was loving it. I knew Ligero had just got out of, was kind of still in, a bad relationship so I didn't want to push. It was just so hard. We got along so well and despite my reservations I'd swear she was feeling the same. Sometimes I'd catch her staring at me with a smile and I knew she was crushing on me. I wanted to return the look but I was scared she'd be overwhelmed. It was so hard to know how to react.\n\nI had a mad crush on her. Watching her while she was reading or just lying in bed with those cute glasses, wearing a black tanktop and white bikini panties or a thong was so sexy. I'd taken a picture once of that exact scene and I swear I looked at it every day at least a dozen times. \n\nI didn't want to scare her but I did want to see if she wanted to vacation with me and Reed. When you deploy for a year, the Marine Corps always allows you a two-week vacation sometime during that year. They will send you anyplace you want to go. Almost all Marines want to go home during the holidays but this is impossible, you have to have people to run the unit tasks. As higher ranks Reed and myself tended to get the last choice on dates, since you tried your best to give holiday dates to junior Marines.\n\nKeeping that in mind we'd chosen to use our dates together and go on a tropical vacation in the winter part of the year. Most everybody else wanted to vacation when their kids were out of school, so not many wanted the winter month time frame.\n\nInstead of going home, we opted to hit the tropics and some beautiful sand beaches. At the time of planning we were both single and thought someplace that had sexy girls in bikinis would be fun.\n\nI explained all this to Ligero and asked if she wanted to go with us.\n\nShe chewed her lip in thought for a few minutes.\n\n\"I was planning on going home and seeing my family,\" she hedged.\n\n\"I figured, most people do.\"\n\n\"And I really need to make sure everything is fine on my divorce paperwork. I need to make sure he's out of my apartment by the time I get home.\"\n\n\"I definitely understand that,\" I nodded.\n\n\"But the hell with it, it sounds fun.\"\n\n\"Really?\"\n\nEyes bright, she nodded\n\n\"Of course, I didn't bring any tropical clothing,\" she said slyly.\n\n\"I'll buy you a bikini,\" I grinned.\n\nShe bit her lip, \"Why do I feel like that's dangerous?\"\n\n\"Tell you what, I'll buy you three bikini's and half of the clothes for this vacation, but you have to wear what I buy.\"\n\n\"I get the feeling I'm going to be half-naked for this trip.\"\n\nI laughed, \"Probably.\"\n\n\"You're such a man,\" she giggled.\n\n\"Yep, so do you want me to buy clothes or not?\"\n\n\"It's just you and Reed, right?\"\n\nI nodded.\n\nShe chewed her lip in thought.\n\n\"Fine, but I swear to god I better not hear about this from any of the other Marines. I don't need some slutty reputation getting around.\"\n\nI rolled my eyes, \"I'm not a 20-year old college frat boy.\"\n\n\"And Reed?\"\n\nI shrugged, \"He's goofy, not an ass. And if you're his friend, he will literally walk through hell for you.\"\n\nShe looked at me for a minute, \"So on that note, I assume he know about us?\"\n\n\"A little bit, not all the sordid details but that we're kind of together,\" I said.\n\n\"I assumed, it would be hard to ask me on this trip and not think something was up.\"\n\n*****\n\nDeployment:\n\nDay 180\n\nVacation day. The three of us had grabbed our gear and went to the airfield. A short hop to the main base at Baghram and then we were on our flight. Eight hours later we landed and were driven to our hotel after normal customs routines.\n\nI'd let Ligero see the clothes I'd bought her. I actually got her a lot more than half, and they weren't near as crazy as she thought they'd be. I bought her a couple pairs of shorts, some light sheer blouses that could be worn over a bikini top. A few normal dresses and two cocktail dresses, both were black, one was elegant, the other scandalous. Also, a few pairs of open sandals. I'd held back on the bikini's, I wanted her to see them after we got here. The first one was normal size, yellow and blue with Corona emblems on it. The next two, one was black, one was white, and even if you put them together, you'd have about half the material needed for the normal bikini.\n\nWhen we got to the room, I held up the white bikini I'd gotten her.\n\nShe raised an eyebrow, \"Are you kidding me? Where's the rest of it?\"\n\n\"That's it girl,\" I said.\n\nShe took it from my hands and went into the bathroom to change, closing the door behind her.\n\n\"Why are you changing in there?\" I called out.\n\n\"Because I want to see what the hell you're getting me into first,\" she called back.\n\nAfter a quick minute, \"Oh dear god, I can't believe you want to take me to the beach in this. I have literally never worn anything this small.\"\n\nI opened the door and peeked in.\n\nThe bikini was perfect sheer white. The top had two triangles with string ties. Even stretched out the triangles barely covered half off her boobs, gently supporting them from underneath and just covering her nipples and aureole. In fact, as she twisted to look in the mirror, she had to be careful or too much movement would show the \"girls\" to the world.\n\nThe bottoms were even worse. The front covered her pussy but not anything else. If she was going to wear it in public, she needed to keep her mound shaved bare. Strings ran up her hips to the back and connected to... more string. It really didn't have a back, just more string that crossed her back and then met one that went down and bisected her butt to meet the front. \n\n\"You really want me to go out in public in this?\" she said gesturing to her body and the bikini.\n\n\"Not really, the beach we're going to is topless. So you won't need that top part.\"\n\nHer mouth dropped and she stared at me.\n\nThat day we took our rented car to beach with Reed. Despite her reluctance, she didn't say a word as she put on her bikini. Getting dressed, she put on a pair of denim shorts and a black Minnie Mouse tanktop to cover up on the way there. \n\nAs we drove there, she seemed totally relaxed and chatted easily with Reed. When we pulled in, she got out of the car and grabbed a small travel bag that had her towel, sunscreen, and wallet.\n\nShe stood at the back of the car and showed her first nervousness. Taking off her tank she stuffed it in her bag. She bit her lip as she looked at me and Reed while she unbuttoned her shorts. \n\n\"I can't believe I'm doing this,\" she exclaimed.\n\n\"Why what's wrong?\" Reed laughed.\n\n\"I'm about to show you my ass! We work together.\"\n\n\"It's not going to be half as bad as you think,\" I laughed.\n\n\"Easy for you to say,\" she muttered.\n\n\"If it really is that upsetting...\" I started to say.\n\nShe waved a hand and took a deep breath, then she slipped off her shorts, leaving her in the bikini and sandals.\n\n\"There,\" she said.\n\n\"OH MY GOD,\" Reed exclaimed in a girl's voice. \"OH MY GOD, OH MY GOD.\"\n\nI chuckled as Reed teased her, he so overexaggerated it that even she started laugh.\n\n\"Okay, don't be a jerk,\" she giggled.\n\nHe stopped and laughed, \"It is a rather exceptional ass though. I will give you that.\"\n\n\"Hmph,\" she sniffed, but she held a small smile as she said it. I could tell she was a pleased with his compliment.\n\nShe turned from us and looked out at the beach, we did the same and you could see numerous females without their tops. For a minute none of us said anything.\n\nRed-faced she turned to us.\n\n\"We can leave if you want,\" I said quietly.\n\nShe bit her lip but shook her head, \"No, I want to do this now. It seems like it'll be fun.\"\n\nShe reached behind her back and undid the strings to her top. As it came loose, she brought her hands to the front and kept it pressed to herself. She pursed her lips and scrunched her eyes as she looked at us.",
        "\"Help me,\" she said.\n\nI laughed and reached out a hand to tug the top away. She held it semi-firmly and only slowly let it slip through her grasp, whimpering the whole time. It finally pulled free but she still had her hands over her boobs.\n\n\"What's the big deal?\" Reed laughed.\n\n\"I'M ABOUT TO SHOW YOU THE GIRLS!\" she whined. \"And I work with you every day, how am I ever going to look you in the face knowing you've seen me half-naked?\"\n\nI laughed and shook my head. I could tell she wasn't mad but she was torn. I held her top toward her and she looked at it. Taking a deep breath, she shook her head and dropped her hands on her hips.\n\nFor once, Reed was silent. We both just stared at her beautiful body. Ligero blushed and turned her head but was still smiling.\n\n\"Beautiful babe,\" I said.\n\n\"I'm actually speechless,\" Reed said.\n\nStill with her head turned down she whispered, \"Thank you.\"\n\nWe headed down to the beach to find a good spot. Halfway across the sand we found a nice area that didn't have anybody closer than 50-yards or so. Most people tended to be spread out from others. We pulled our towels out to lay down when Reed realized he left his cellphone in the car. \n\n\"You guys need anything?\"\n\nWe both shook our heads no and he took off across the sand.\n\nI turned to Ligero, \"You sure you're okay with going topless? You seemed pretty jumpy there.\"\n\nShe turned to face me putting her hands on her hips, \"Babe, not going to lie, I'm kind of crushing on you pretty fast, but I promise you, if I didn't want to do this, it wouldn't happen.\"\n\nI held up my hands in placating gesture, \"I was just asking, you seemed nervous.\"\n\nShe laughed, \"Of course I was nervous, but I was excited too. I can't let your buddy know it turns me on to go topless. He's not going to be the only one thinking about it when we see each other at work. Knowing he's seen the girls and the booty is kind of a turn-on.\"\n\nAs she said \"booty\" she slapped her own butt. \n\nI nodded, \"Understood.\"\n\n\"Hell, get me a little buzzed out here and I might lose the bottoms too.\"\n\nI gave her my best evil grin, \"Challenge accepted.\"\n\nThe rest of the vacation was a whirlwind of hot sex, white sand beaches and sightseeing, and great meals.\n\nShe did get buzzed that day. After we relaxed, we got up and walked down the beach to explore. Just a little way past us was a beach bar. We all got some drinks, hers was some local fruity concoction that held an unexpected punch. After two of them she walked back to our setup and without any pretense dropped her bottoms and went to play in the waves stark naked.\n\nWe joined her and spent a while laughing and playing. She'd jump on our backs and demand piggy back rides as we played in the surf. Laughing, she goofed around most of the afternoon. She even had another beach tourist take a picture of the three of us. Reed and I were on either side of her in our shorts and she had an arm wrapped around each of us while still naked.\n\nAfter a while she settled face down on her towel, \"One of you needs to put suntan oil on me and the other one needs to go get us more drinks.\"\n\n\"I volunteer for the oil,\" Reed said.\n\n\"I don't think so,\" she laughed.\n\n\"Oh come on, I'll be good.\"\n\nShe pursed her lips and thought about it a second, grabbing her sunglasses she looked at me as she put them on, I shrugged, \"Not like you can't stop him if he crosses a line.\"\n\nShe gave me a \"true\" look and said, \"Fine, we'll leave it to chance. Flip a coin.\"\n\nReed grabbed a quarter from her bag, \"Call it in the air.\"\n\n\"Heads,\" I said. \n\nIt came up tails so I went to go get us more drinks.\n\nWhen I came back Reed had just finished putting oil on her back and was now massaging it into her butt and legs. He wasn't shy as he rubbed oil into her body but he wasn't rude or forceful.\n\nFor the next two weeks, Ligero was more open around him. She would playfully flirt as the three of us enjoyed our vacation. She would constantly let Reed oil her body when we went to the beach, and we would go to the nude beach every other day as we explored the island.\n\nAfter the next visit, she actually let him put it on her front too. She would relax in the sun and let us both massage oil into her body. It wasn't sexual with Reed, he didn't suggest anything between all of us. It was just frisky camaraderie.\n\nShe got to where she enjoyed the massages, one of us on each side of her, rubbing the oil into her naked body. She didn't even wear bottoms after the third trip and would drop all her clothes unashamedly as soon as she got to the beach. \n\nAt night we would explore and find new and great places to eat. We shared our stories about life and joining the military. Ligero even talked about her disaster of a marriage and how she'd been duped. Reed playfully teased her and she'd punch his arm. \n\nShe got used to be naked around us. Our room had an adjoining outdoor balcony with a spa and at night we'd get into it and relax. After her trip to the beach, Ligero didn't even bother with a swimsuit. She just came out naked and got in the water. \n\nWe'd relax and order room service drinks and they'd deliver them to us.\n\nLigero also proved a good luck charm for Reed in other ways. Halfway through our vacation Ligero managed to find a cute tourist that was vacationing on her own. A European blonde with a lean swimmer's body, she had small B cup boobs but legs that went on forever.\n\nShe invited her to dinner with us and it was obvious her and Reed had an immediate attraction. After dinner Ligero invited her to join us in the hot tub. The girl, Amy, was a little surprised when Ligero told her she went naked, but smiled and went along with it.\n\n\"You only live once,\" she said as they came out of our bedroom and dropped their towels.\n\nAmy had a small blonde racing strip and pink nipples that always seemed hard. By the end of the night she was attached to Reed and spent the night in his room. For the rest of the week Amy hung out with us as we had fun. We took both girls to the beach and had fun massaging oil into their bodies. \n\nAt this point we kept to our own girls, but the playfulness never stopped. The girls would laugh and jump on our backs as we played in the water. We took multiple pictures throughout the vacation and the girls posed for us nude at the beach multiple times. \n\nI managed to get a perfect shot of Ligero, she was nude with a red hibiscus tucked in one ear, her hair all on the opposite side with one hand on her hip, knee deep in the ocean with the waves crashing in the background. \n\nBy the end of the vacation we had all become best friends.\n\n*****\n\nDeployment:\n\nDay 365\n\n(Solas)\n\nI did my best to keep my face neutral. It was the end of our deployment. We'd been inseparable since the vacation. We'd even got a nickname, The Three Musketeers, because we were together so much. \n\nNow we were heading home. It's not like we were breaking up, or not going to see each other. We were just heading back to the states and would now be able to date like normal. \n\nI don't know why I was upset. \n\nCheck that, I knew exactly why I was upset. I cared, I really, really cared. Maybe even loved her.\n\nSigh.\n\nWe'd lived together for a year now. The thought of going back to my house, to not seeing her every day when I woke up or came home. I didn't like it.\n\nI vowed I would talk to her soon. Maybe give us both a week, see if the feeling went away. Maybe I'll like having my freedom.\n\nAnd maybe I'll grow wings and fly.\n\n*****\n\nPost-Deployment:\n\nDay 1\n\n(Solas)\n\nBack. We'd spent the day in flight and now we were home. As soon as we got back, we both had some catching up to do in our lives. Since we went on vacation instead of visiting home, I needed to go see my parents and family. They had planned a big family thing the second week I was home. They wanted to do it immediately but I told them I needed to make sure my life was in order first. My dad understood.\n\nI was at the company office when I got a text.\n\nLigero: Where you at?\n\nMe: Company office.\n\nLigero: Come out back to the parking lot.\n\nI did what she asked and saw her standing by a black Jeep Wrangler. As I got close, I noticed she seemed upset. Her face was red and I could tell she'd been crying.\n\n\"That son of a bitch,\" she cried out as I got close.\n\n\"What?\"\n\n\"That rat bastard, shady muther...\" she paused and took a deep breath.\n\n\"I'm homeless,\" she said.\n\n\"What? What do you mean?\" I asked.\n\n\"What part of that sentence needs explaining?\" she snapped.\n\nI raised an eyebrow.\n\n\"Sorry,\" she said. \"It's just it's gone, all gone. Everything in my apartment is gone. He sold it all. Then he closed the lease. All the money I've been sending to pay rent, he's kept it all. I literally have nothing.\"\n\n\"Are you serious?\"\n\nShe nodded, tears forming in her eyes.\n\nShe slapped the steering wheel, \"I'm lucky I left this with my parents or it'd be gone too. My dad told me he'd keep it running and change the oil. So at least I have a car.\"\n\nMy jaw dropped and I just stared at her. I was about to tell her she could stay with me when she said.\n\n\"I already talked to the Sergeant Major, he gave me a barracks room until I figure out what the hell is going on.\"\n\n\"You know I'm here for you,\" I said.\n\n\"Thank you,\" she said as she moved to hug me. \"Look, I know we were going to go out to dinner and stuff this week and I do want to, but let me figure out what's going on before you plan anything.\"\n\n\"Of course,\" I said.\n\nShe held me tight, \"God I'm going to miss you at nights.\"\n\nI held onto her and didn't say anything.\n\nA few minutes went by before we broke apart.\n\nShe reached up and gave me a peck on the lips.\n\n\"Let me figure out what the hell is going on then we'll get together okay?\"\n\nI nodded.\n\n\"Text me, and I'll send you updates,\" she said.\n\nI went through the rest of the day in a daze. I remembered asking her if she should be worried about this type of thing but I didn't want to bring that up. It might sound too much like an I told you so.\n\nHaving dealt with this kind of stuff I knew what to expect. Once, during our conversations she told me she'd signed a power of attorney for him. Based on that, I knew if he had sold her stuff, she was unlikely to get anything back. She might be able to take him to court and win, but actually getting the damages would be a nightmare from this guy, and even a court win wasn't a guarantee. \n\nIt could be years before she found out the full extent of damage he may have done to her. He could have opened credit cards, borrowed on her credit. All kinds of things, and she'd basically signed a get-out-of-jail free card to him with power of attorney.\n\nI could help but I needed more information. I'd let her figure out what had happened then maybe pull some strings and see what I could do.\n\n*****\n\nPost-Deployment:\n\nDay 2\n\n\"Hey guns, need to talk to you for a minute,\" Blake said as I walked by the company office.\n\nHe motioned me toward the company briefing room. It was a large room with a single dark wood table surrounded by a dozen or more black office chairs.\n\n\"Gunny Solas, this is Staff Sgt. Vann, Vann, this is Gunny Solas,\" said Blake as we entered the room.\n\nI nodded at the soldier across from me. Even as a male I could admit he was classically good looking. Pretty boy would be a good way to describe him. Average height, he looked about three inches shorter than my six-foot frame, lean build with dirty blonde hair, he reminded me a little of a young Ryan Gosling. His uniform was all sharp creases and immaculate. His hair was perfectly cut in a stylish manner that stayed within military regulations but somehow gave a rakish appearance. His eyes were a clear crystal blue and when he smiled, I noticed he had perfect, gleaming white teeth.\n\nI took a seat across the table, Vann took a sip from a Starbucks coffee cup as he watched me. \n\nI knew who this guy was from conversations with Ligero, so despite his appearance, I didn't have a really high opinion of him.\n\n\"What's up Sergeant Major?\" I asked looking at Blake.\n\n\"One second,\" Blake replied holding up his hand. \"We're waiting on Ligero.\"\n\nVann looked at me and motioned toward the door, \"I don't know what's she's been telling you dude, but you need to be careful around her.\"\n\nI stared at him for a moment, his voice was rich and smooth, like honeyed toffee, combined with his looks and easy smile I could understand how Ligero could fall for him. \n\nMy eyes went cold, \"I'm not a dude.\"\n\n\"Sorry Gunny.\"\n\nIt's permissible for a senior rank to be familiar with a junior rank and call them by name, but military protocol doesn't allow for the reverse, and he was one rank lower than me so I said, \"It's Gunnery Sergeant.\"\n\nHe stayed silent for a second then looked at Blake who raised an eyebrow.\n\n\"Yes, Gunnery Sergeant,\" Vann said then took another sip of his drink and set the cup down.\n\nWe waited in silence for another minute before the door opened and Reed and Ligero walked in. I looked at Reed quizzically, he gave a barely imperceptible shake of his head. Ligero had a confused look on her face but Reed looked troubled, he knew what was going on.\n\nGreat, this was not going to end well.\n\nLigero took a seat on my side of the table but still apart from me. \n\n\"So Staff Sgt. Vann had some troubling accusations to make, I thought we'd get everybody together and see if we couldn't work this out before we have to make it official,\" Blake said.\n\nContinuing, \"I know you were rooming together on deployment and Vann seems to think you were messing around with his wife.\"\n\n\"Ex-wife,\" I corrected. \"They got a divorce.\"\n\n\"Yeah, that's what I figured she told you,\" Vann said pointing at Ligero.\n\nShe started to stand up and talk but Reed put a hand on her shoulder.\n\nRaising my voice, I said, \"Yeah, she told me that and the fact that you got another girl pregnant while she was gone, and that you sold all her stuff while she was away.\"\n\nHe was taking another sip of his coffee, then he shook his head, \"That was a misunderstanding. I didn't get anybody pregnant.\"\n\nHe looked at Ligero, \"I told you we could work this out. It was all just a misunderstanding. You didn't need to go screw every Marine on base.\"\n\nLigero's eyes flamed, \"Screw every... fuck you, you piece of shit.\"\n\nShe stood up and when Reed put his hand on her shoulder again, she shrugged it off.\n\n\"Where the hell do you get off...\"\n\nBlake stepped between the two of them, \"Hold on a minute, everybody calm down.\"\n\nLigero stood there fuming while Vann had a smug smile on his face.\n\n\"Whether you like it or not, these are some very serious accusations. You all know damn well that adultery in the military is a chargeable offense. I've seen higher ranks lose their stripes for this.\"\n\nThat sobered everybody up immediately. We all could see this guy was a jackass, but Blake was right. This was serious. Now I could see why Reed was troubled. \n\nTurning to me, Vann put his hands on the table and straight-faced said, \"Look I get it, you're caught in the middle of some drama. I don't even blame you, you had no idea what was going on. I'm sure you would not have done anything if you had known, but the fact is, we never filed. I did not tell her I agreed to a divorce. I would not agree to that under any circumstances while she was deployed.\"\n\n\"Darren,\" Ligero snapped.\n\n\"Darren,\" she repeated. \"You know that's a lie.\"\n\nStartled, he looked at her, \"No it is not. Why would I lie about that?\" \n\nHe pointed a finger at her, \"At this point, damn straight we are getting a divorce, but that's because I just found out about all this crap you did behind my back. Hell, he's probably not the only one. I would not lie to your command.\"\n\nI realized that Ligero could get me in serious trouble here, making a quick decision I said, \"Hey great one.\"\n\nWhen that didn't get his attention, I snapped my fingers, \"Hey.\"\n\nHe looked at me.\n\n\"I don't want to be in the center of this bullshit. I didn't know what was happening.\"\n\nI looked at Blake, \"I'll write a statement or whatever, just keep me out of this shit.\"\n\nI looked back at Vann, \"Fair enough?\"\n\nHe took the final drink from his cup and looked to the small trash in the corner, taking a moment he tossed it in the trash, then looked at me and nodded his head. Afterward, I looked at Ligero.\n\n\"I don't know what kind of fucked up game you're playing but stay away from me. Don't call me, don't text, don't try to contact me in any way. Stay the hell out of my life,\" I said angrily.\n\nLigero's eyes were watering and I could tell she was on the verge of breaking down into tears. Reed was glaring at me but I glared right back. I stood up and looked at Blake, even he looked a little uncomfortable.\n\nWe all stood up to leave, but Blake looked at Ligero, \"I'm going to need to talk with you for a while, we need to see the commander.\"\n\nLooking toward Vann, he said, \"And I'm going to need a written statement from you too.\"\n\n\"I'll have it soon,\" he replied.\n\nWhen we walked out of the room Reed moved toward me but I waved him away. Even Vann looked like he wanted to say something but I cut him off, \"Let me know when you want my statement.\"\n\nI started to walk out the door, but as I passed the Marine seated at the front desk I stopped and asked him for a favor, then took off.\n\n*****\n\nPost-Deployment:\n\nDay 6\n\nVann and Ligero walked into the room together and both of them pulled up startled. I was sitting at the table with Reed on my right, Blake on my left, and two men standing on either side of the door. One was obviously military police, he was in full uniform with a belt that had handcuffs, gun, and all the other gear most officers carry. The other carried himself in the same manner but was dressed in a suit and tie. Again, to anybody that's watched a cop show you could tell he was a civilian detective.\n\n\"Have a seat,\" I said, gesturing to the two chairs on the opposite side of the desk. \n\nVann looked around, \"I need to get a drink of water.\"\n\nHe moved a step toward the door but the civilian moved to block him, \"I'll get it, just have a seat.\"\n\nHe smiled pleasantly but didn't move out of the way.\n\nVann eyed him warily but looked around and realized that the comment was less of a request than an order. Putting on a big smile he took a seat. \n\nI was about to wipe that smile off his face.\n\nThe civilian stuck his head out and said a few words, and at the same time the military officer moved forward and grabbed the second chair. He put it on the side of the table and held it out for Ligero.\n\nShe frowned and looked around, but the rest of us kept straight faces. Finally, she took a seat off to the side. By this time Vann was eyeing all of us and I could see his shoulders tense. A knock on the door sounded, the civilian opened it and took the bottle of water handed to him. He opened it in front of Vann and set it down.\n\nI watched as Vann licked his lips and took a small drink of water, \"So what's going on? I thought we were here to see the Sergeant Major.\"\n\n\"We'll get to that,\" I said. \"Right now, I wanted to go over a few things with Gunnery Sgt. Ligero.\"\n\nI looked at her and smiled, she met my gaze but I could see the hurt in her eyes as she did. I hoped that it would go away as I talked. I knew she was still mad and hurt, but hopefully she'd understand why I did what I did.\n\nStarting I said, \"So let's hop in the time machine and go back a few days.\"\n\n\"When we were brought in here, I was just as stunned as you. You told me how he basically robbed you, but it was pretty obvious that he was here to make you hurt. Which given everything you've told me so far was a little weird.\"\n\nShe frowned.\n\n\"Don't get me wrong, Captain Douchebag over here probably enjoys causing you pain to some degree but so far, based on what you told me, pain is more of a cherry on his sundae. His main goal seems to be money, how to get as much as possible from you.\"",
        "\"So while threatening you and me for having sex while you were still married to him was a way to cause trouble, it didn't make sense. Especially because there were so many things he was lying about.\"\n\n\"You obviously know I have some experience in law enforcement, but what you haven't seen is I have a particular interest on spotting liars. I've even done a few papers on them that are taught at police academies.\"\n\n\"See, most of the time when people talk, they are animated, they use hand gestures. A liar, will often drop all motion, will school his body and face to not give anything away, he'll go dead-pan or straight-faced. The idea behind it is simple, the liar doesn't want to give any tells away, except, this is the biggest tell of all.\"\n\n\"If he's animated one moment, then goes all still the next, that's a pretty big sign. Another tell is when a person uses contractions and then changes to non-contractions.\"\n\nShe'd stopped scowling but her eyebrows formed a V, \"Contractions?\" \n\n\"Don't, didn't, can't, non-contractions, do not, did not, that type of stuff. This is actually one of the bigger tells. It happens a lot. People tend to emphasize their non-contractions.\"\n\nShe looked toward Vann, then around the room, I could tell she was still confused about what was going on. I glanced at Vann, he looked worried.\n\nContinuing, \"You probably didn't notice, but he did that a lot during our last conversation. I told you before, it's all training. If you're not looking for it, you'd never notice, but if you are listening, dear god, it's like a whistle going off.\"\n\n\"The thing is, his lies made no sense, was it just to cause trouble? But then I remembered, you said he wanted you to split your retirement, he wanted $50,000 from you.\"\n\n\"Suddenly, things started to make sense, he couldn't outright extort you, but I'm sure if he made a big deal officially, then after you were scared about losing your career, offer some type of compromise. I'm sure you'd agree, if just to be done with him.\"\n\nHer eyes went wide, and her face flushed red, I could see the anger in her eyes as she looked at Vann.\n\n\"I see I hit a nerve there, so we'll get back to that. Another thing that bothered me was when you called his name. I was looking right at him, and the first time you said his name it didn't register. It took a split second before he realized it.\"\n\n\"Now, I got to thinking, I know when somebody uses my first name it takes me a moment to realize who they're talking to. Curse of military life, we tend to use last names as first names.\"\n\n\"But for some reason it stood out to me. Maybe intuition, maybe something else. You may not remember, but I called him 'Great One,' and it didn't even phase him. Which is weird because that's what his name means. I found it a little difficult to believe somebody with his ego wouldn't know that or respond to it. So that made me real suspicious.\"\n\n\"But it also made something click, weirdest story I've heard in a while. You see, they recently had a Marine exposed for more than twenty years of fraud. This guy went to boot camp but was discharged after two years as a private, but then he shows up at a reserve unit with phony paperwork as a sergeant.\"\n\n\"They think it's a glitch and the last unit forgot to input him into the system. Dude spends twenty-five years in the reserves, actually makes the rank of sergeant major. They keep re-enlisting him and when he gets ready to retire, they go back through his paperwork to make sure everything is in order. That's when they start noticing discrepancies.\"\n\n\"A little digging and they find out the whole story. Now, I don't know why that clicked except that Vann went from active duty Marine, to National Guard active.\"\n\n\"I actually know a lot of people who do it, so it really shouldn't have stood out to me, but they way you described him, it just seemed weird. So going off instinct, I decided to investigate a little.\"\n\n\"The problem is, I couldn't have him suspicious, because I know people like this, sociopaths, but they're very good at spotting when people are being false. So I had to hurt you, I had to make him feel he'd won, so I agreed to make a statement against you. I figured that would be enough leverage for him to make you do what he wanted, then he'd drop the case.\"\n\n\"For the record, Reed was ready to kill me.\"\n\nShe glanced at Reed, he smiled. Her eyes were slowly taking on a much more interested look.\n\n\"After I left, I asked the Marine at the front desk to get the Starbucks cup in the trash. I told him I'd give him $50, but he couldn't touch it, he needed to get it with a plastic bag and make sure nobody else touched it.\"\n\n\"Then I left and came back in an hour to get it. By then you and asshole had left.\"\n\n\"Now I've gained a lot of favors over the years in my investigations and I've never used any of them. I've never needed to. However, this time I called in a lot of favors, and boy were they willing to do me a solid. People jump on the chance to repay me and get on my good side. Apparently, I have a good reputation. We were able to get a rush on a DNA test, and on fingerprints.\"\n\nI paused, then I looked at Vann, his face was barely contained fury, his eyes darted around the room and settled on Ligero.\n\nI turned back to Ligero, \"And holy hell! You would not believe the shitstorm that came up.\"\n\n\"Your boy here is a very wanted man. He has some outstanding warrants in Florida and Louisiana for fraud, and a is also wanted in connection with a rape charge in Florida.\"\n\nLigero's eyes went wide as she looked at Vann.\n\n\"It gets better, in a weird twist of fate, I was right. He's a fake, not a Staff Sergeant. Or at least he wasn't. In almost the exact way I just described, he was discharged as a private by the Army, he was caught stealing or something. After he was kicked out, he got phony paperwork from an honorably discharged soldier and showed up to a National Guard unit as a sergeant.\"\n\n\"He may have gotten the next rank legit, but he's all fake.\"\n\nHer mouth had dropped.\n\n\"Oh, before I forget, his name is William Harris.\"\n\nShe was still staring at him as he glared around the room tight-lipped.\n\n\"I'll admit I didn't expect to find this level of assholeness but damn.\"\n\n\"Anyway, we've been prepping a case against him all week. Detective Mills here,\" I said pointing to the civilian. \"Is happily ready to take him into custody for extradition to Florida where he'll be tried for rape. Pretty rock-solid case too. They have DNA evidence and eyewitness testimony.\" \n\n\"Before that though, Gunny Reed has been filling out paperwork all week. Turns out marriage by fraud is a pretty easy thing to annul. The judge was more than willing to sign the paperwork. Usually it takes a while to get on the docket, but like I said, I've been calling in favors all week.\"\n\nAt this point she was still in shock, I asked, \"I assume I was right about the retirement thing?\"\n\nShe focused on me, blinked a few times and nodded her head.\n\n\"Yeah, that's what I thought. I asked the Sergeant Major to call the finance institution. He sent some paperwork once we knew what was going on. That's why they've been stalling you until today. You were supposed to get an electronic deposit today, right?\"\n\nShe nodded.\n\n\"Yeah, don't worry, they've got a hold on it until you call them. It won't leave your account.\"\n\nHer jaw dropped again, \"Now the bad news is that we're going to have a hard time getting any money for all your stuff he sold. Even if they can find his accounts, there are other fraud victims, so the line is pretty long.\"\n\n\"After he goes to jail for rape, he's going to be on a whirlwind tour of city jails across a couple of states that are just waiting to get him into their courts. Your future children will graduate college before he he's free again.\"\n\n\"Buuuuuut, on the bonus side, I submitted your name as the person that led to his arrest. So that means you're entitled to the reward for his capture. Two different counties had a $10,000 reward. I got them to expedite it, it should be in your account this morning. Probably there now, if you want to check. I'd suggest you save a third of it for taxes, that'll still put you 13 grand ahead, it should replace a lot of your clothes and stuff.\"\n\nAt that point I stopped and sat back. Everybody in the room was smiling except Harris. The civilian detective motioned for him to stand up and he brought his hands behind his back to handcuff him as he read him his rights.\n\nHalfway through Ligero stood up and walked in front of him until they were almost nose to nose, without warning she brought her knee straight up into his groin. \n\n\"Ohhhh, damn,\" Reed and I said at once.\n\nThe detective and the MP just winced and even the Blake looked away. Harris lay wheezing for a good ten minutes on the ground after that.\n\n\"I... want... to... press... charges,\" he said between gasps.\n\n\"For what? I didn't see anything,\" the detective said.\n\nThe rest of us shook our heads as he looked around. The MP hooked him into a standing position and then him and the detective took him away.\n\n\"That was incredible Gunny,\" Blake said. \"I've wanted to see you in action since I heard stories about you, that did not disappoint.\"\n\nTurning to Ligero, he continued, \"You can have the rest of the day, I'm sure you have details in your life to take care of.\"\n\nShe nodded, \"Thank you Sergeant Major.\"\n\n\"If you two need the day off to help her, go for it,\" he said, then he left the room.\n\nWe all stared at one another.\n\nReed smiled at her, \"I'll be outside.\"\n\nWhen we were alone, we both looked at each other for a few minutes.\n\n\"Sorry I had to hurt you on Monday, I knew he needed to have you in a corner.\"\n\nHer eyes were a little watery, \"Not going to lie, that was a blow. Probably the hardest one I took that day. I've been crying all damn week.\"\n\n\"Sorry.\"\n\nShe took a deep breath, \"I understand why you did it.\"\n\nAnother minute went by.\n\n\"So, the Sergeant Major let you stay in the barracks this week until you got things sorted right?\"\n\nShe nodded.\n\n\"Know what you'll do now?\"\n\n\"I guess find a place to live,\" she smiled. \"At least I can go shopping and have something to wear now.\"\n\nI nodded, \"You know, I have a two-bedroom house. If you needed a place to stay until you found your own place...\" I trailed off.\n\nShe raised an eyebrow.\n\nI continued, \"I mean, it's not like we haven't lived together for the last year. I'd let you stay however long you wanted, a week, a month...\"\n\n\"A year?\" she interrupted.\n\nI smiled, \"Even longer if you need it.\"\n\n\"Hmmm, I think that's possible. The only problem is I've gotten used to your snoring, so I don't think I'll be able to sleep in the guest room.\"\n\n\"I know what you mean, yours is pretty loud too, it was eerily quiet all week long, made it very hard to sleep. I guess if you want to share my bed, I think I can live with that.\"\n\nMoving toward me she closed the distance until her face was inches from mine, \"I'm warning you, I don't cook. I listen to music loud. I need constant attention and will bug the living shit out of you if I don't get it. Also, I have a temper.\"\n\nI raised an eyebrow, \"Remind me again what I'm getting out of this.\"\n\nShe smiled and wrapped her hands around my neck, \"I give the best apologies.\" She said as she pressed her lips to mine. We closed our eyes and I wrapped my arms around her. The kiss was soft, gentle, her tongue slipped past my lips and slowly moved against my tongue. I lost all sense of time.\n\nA throat cleared, \"So are we moving her stuff into your place or what? I'm hungry, can we go eat before we go shopping?\"\n\nWe both opened our eyes and looked at Reed, he'd come back into the room unnoticed.\n\n\"You really know how to ruin a moment,\" I said.\n\nHe rolled his eyes, \"Yeah, yeah, yeah, you guys will have plenty of time to do that later.\"\n\n\"Did she accept? Is she moving in?\" he asked.\n\nI nodded.\n\n\"Told you she would, you big dummy. Let's go get her crap and drop if off at your house, then we can go to lunch. After that, I'll leave you two alone, you can go shopping with her all day if she wants.\"\n\n*****\n\nNote: The fraud story referenced about the soldier is actually true. For those that think there is something wrong with the writing in this story, please refer to my story \"Kinky Sex and Pop Tarts,\" it will explain all. Criticism is fine, I'm a big boy, I can handle it, but anon trolls deleted. "
    ],
    "authorname": "storm_usmc",
    "tags": [
        "loving wife",
        "crime",
        "deployed",
        "detective",
        "marine",
        "military",
        "rope",
        "skinny dipping",
        "tied"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/sexy-af"
}