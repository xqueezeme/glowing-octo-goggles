{
    "title": "How to Succeed at Life",
    "pages": [
        "There are no magic formulas for success, but the older I get, the more I rely on a few simple principles to help get me through each passing day. One could argue that these are simply \"common sense\", but as my wise grandmother used to say, \"common sense isn't very common.\" The common superficial indicators of success-money, a good job, fancy possessions, and a house on the water- really don't indicate much more than an individual who has focused his life on things. True success goes deeper, and that is what drives the following observations. Sorry, I can't guarantee that any of these will work for you, but by diligently applying them to my own life, I have noticed a distinct change for the better over the last 20 years. \n\n1. FIND YOUR PASSION\n\nThe most essential step to leading a successful life is to find your passion. Everything positive will flow from your pursuit of an area that truly floats your boat. There are many definitions of \"passion\" out there, but try this one out for size:\n\nA PASSION IS SOMETHING YOU DO THAT MAKES TIME FLY BY\n\nWhen I was a teenager, I loved to play piano. It always amazed me that my two hours of practice seemed to go by in a few seconds. On the other hand, if you are only playing piano to please your parents, spouse, or teacher, practicing will inevitably become an interminable agony. \n\nSome possible passions are sports, gardening, music, reading, weaving, meditation, movies, and dining out. Pretty much anything is fair game no matter how offbeat. I have a good friend who discovered his true passion in life was growing orchids! Even more amazing is that he was able to develop an avocation into a vocation by buying a greenhouse and selling extra plants.\n\nNot all hobbies will necessarily lead to full time employment, but with a little creativity, you'll be surprised at what is possible. In my life, I've turned playing piano into giving lessons part time, growing flowers to selling perennials at flea markets, and reading books to giving lectures on various classic works.\n\nHow do you find your passion? Join Internet newsgroups. Start a local club revolving around your specific interest. Get your friends hooked. Then merely sit back and watch what happens. In some cases, your interest may wane after a few months, but in other instances you will find a true passion, something that will consume your life until your dying breath.\n\n2. TAKE CHANCES\n\nNothing is sadder than someone stuck in a dead end job or hopelessly mired relationship. Change is always a little scary, and many people simply choose to be miserable rather than risk financial stress or marital discord. \n\nApproximately one year ago, I was working full time with some of the most negative people on this planet. In addition, my position was going nowhere and I was doing more and more work for the same amount of pay. Then, on that fateful day May 31st, 2006, my life changed in an instant. While eating a bowl of cereal, I experienced very severe pain and needed to be rushed to the hospital. As the doctors muttered something about an \"unexplained abdominal blockage\" I was given the last rites. After making it through the night, I awoke with a nasal-gastric tube down my throat. Unable to eat or drink, I was given only ice chips for 5 miserable days. \n\nYet, while I was lying on my back for what seemed to be an eternity, I had plenty of time to think. And when I was released from the hospital one week later, the first thing I did was turn in my resignation. My family and friends thought I was crazy to leave a tenured position that paid $60,000. per year. But, I had seen the light, and you may be curious as to where I am one year later. Well, I have the most incredibly wonderful postition in the same field. I am treated with respect by a \"dream team\" of colleagues and next year will actually be making more money than I ever have... AND enjoying it! Yes, there were financial insecurities along the way, and there were times when bills didn't get paid. But I find it extremely ironic that I had to look death in the eye to finally learn how to live. \n\nIt takes a great deal of guts to change the status quo in your life. There are no guarantees, but if you follow your heart very little can go wrong!\n\n3. DON'T SAY ANYTHING TO ANYBODY\n\nThis was my mother's favorite phrase and it took me 20 years to fully comprehend the import of her wisdom. Gossip is extremely, extremely dangerous. If you are labeled a troublemaker at work your career is ruined. If you are catty and chatty in a relationship, you stand a good chance of losing your significant other's trust. A good rule of thumb to use if debating whether or not to say something is:\n\nDON'T SAY ANYTHING ABOUT SOMEONE YOU WOULDN'T SAY TO THEM IF THEY HAPPENED TO BE STANDING RIGHT THERE\n\nA particular dangerous variant of the gossip game is \"But I only told one person!\" Sure you did, and that person only told one person, and the next guy in the chain only told one person, and before you know it everyone knows. Loose lips do indeed sink ships. Yes, gossip is quite tempting but at best only gives the gossiper a smug superiority...for a while. So, in the coming weeks, try to say five positive statements a day about people in place of anything even remotely controversial. You will notice a change for the better in your relationships almost immediately.\n\n4. LET SERVICE BE YOUR MANTRA\n\nLeading a hedonistic lifestyle is almost always synonymous with unfulfillment and failure. Look at the hapless Virginia Tech shooter- an individual consumed with anger and totally engrossed in a fantasy world. People who service others are in a win-win situation. Success comes from the feeling of accomplishment by sharing your wealth of ideas and individual talents. Here's a short list of service oriented choices which can only heighten your feelings of accomplishment. And who knows?- you may meet your significant other or a special friend in the process.\n\na) Become a Big Brother/Big Sister/Mentor/Tutor\n\nb) Volunteer to be on your community's P.T.A., or chaperone various school functions.\n\nc) Help at your local church with a food bank or clothing drive.\n\nd) Give free lessons in the area of your choice (I sometimes give complementary music lessons to disadvantaged children who cannot afford them.)\n\ne) Build houses, repair dreams, mend broken hearts. \n\nf) Become involved with Boy Scouts/Brownies, Den Mothers and Fathers are always needed.\n\ng) Agree to be a \"Patient Visitor\" at your local hospital. I did this one Summer and learned more about life in two months than in my previous 35 years!\n\nIn this me-me-me culture, it takes considerable effort to look beyond yourself to the greater good. But I can think of nothing more powerful then servicing others, even in the smallest way. It will make you feel successful like few other activities can, and could easily change your life in a major way.\n\n5. ARRANGE TO BE LUCKY\n\nIt always seems that certain individuals are simply lucky, but I have discovered that you can indeed arrange to be as lucky as the next guy. For example, suppose you are interviewing for a particular job. Only allowing yourself 2 prospects means than luck could occur at most 2 times. But doing 20 interviews increases your possibility of luck tenfold! When I was interviewing for a new position, I did 25 interviews, of which 2 resulted in job offers. So, I was \"lucky\" twice. In a similar manner if you wish to meet new people, and have three blind dates over an entire year, you're not giving luck much of a chance to work. But meeting three people per month increases your chance of luck by a factor of 12. The truly \"lucky\" people stack the deck in their daily life so that luck has the maximum probability to occur. And sure enough, over time luck is sure to be a \"lady tonight\" without any extra effort on their part.\n\n6. FORGET ALL COMPARISONS\n\nIf I had my way, I'd abolish ALL competitions, contests, and any event that grades people. It only fosters dreaded comparisons, which is a major factor in depression and disillusionment. Let's face it, no matter how good you are at something, someone, somewhere, is even better. And conversely, even if you feel you are hopeless at something, I guarantee you could teach someone, somewhere, that is even more hopeless. \n\nInstead of comparing yourself to some impossible yardstick, simply do. That's right, just do something. Play guitar, plant a rose, take a walk, climb a tree. Inactive people are the dangerous ones, the meddlers and parasites of society. Get yourself out there even if it is something as simple as weeding the garden. The body craves movement and activity, yet does even better without self judgements. Worrying about doing better at a particular sport, or feeling guilty about a past imperfect performance simply eats up time and immobilizes you. And an immobilized person is an unsuccessful individual. It's essentially as simple as that.\n\n7. FIND YOUR INNER GOD\n\nRather than endlessly wonder about the location of Heaven, or the existence of Satan, try to find your inner God. We all have a conscience, or \"tracking system\" to help us in times of need. I prefer to call this inner light \"God\", but you can call it by whatever term makes you comfortable. Your success in life is intimately tied to how well you are in tune with your \"soul\". Some people spend a lifetime ignoring their inner voice and the end result is confusion and despair. We all are stronger than we think...I brought myself back to life last year when I suddenly realized my work on earth was merely starting at the age of 47. Although the signal may be weakened by all the noise and junk we put in our lives, it is always there, waiting to be at our service. \n\nCultivate bewilderment, walk under the pale light of stars, and listen...I guarantee you will never turn off your inner God again!\n\n8. BECOME FRIENDS WITH \"YD\"\n\nYou have an enemy lurking in the bushes. And alas, it will never go away. The name of the enemy is YOUR DEATH, which I prefer to write as \"YD\" which seems a little less threatening. The final key to you leading a successful life is to come to terms with YD. Frankly, this isn't easy, and some individuals spend a lifetime trying to cheat death, only to be surprised as they approach the finish line.\n\nOne very simple thing you can do to feel comfortable about YD is to write your own obituary, no matter if you are 18 or 81. After all, no one knows you as well as yourself, and the experience will be quite humbling. Trying to reduce your life to a few simple paragraphs will inevitably force you to realize you are a mere speck, an asterisk, the head of a pin. Along the way you will discover areas of your life you want to put in your obituary, but can't right now, and this will lead to important changes in your future. I wrote my own obituary at the age of 25, which lead to an incredible two decades of self-exploration. If you have a significant other, you may want to write each other's obituary along side of your own. It is very likely the two obits will be quite different, and this could lead to a productive talk about future plans.\n\nAnother activity which will help you shake the hand of YD is to make a \"Death Gift Box\". This sounds morbid, but is simply an ordinary toy box that is filled with small tokens of appreciation for important people in your life, should you die suddenly or unexpectedly. You could write a letter to a friend, or dry an exquisite red rose for your mother. Be sure to tell someone or mention in your will the location of your death gift box, so your sentiments can be distributed accordingly. \n\nRecently in my community, a gifted 36 year old teacher died suddenly in a tragic car accident. Fortunately, she had put together a death gift box. I cannot describe the looks on the lucky individuals' faces who opened presents from their friend's gift box. They found it almost impossible to put their \"treasures\" away, and as in most win-win situations, that teacher's memory is now perpetuated forever by a simple act of kindness.\n\nI will never forget sitting next to my grandmother as she was dying 25 years ago. In a faint whisper, she asked if there was anything positive about death. I thought for awhile, then responded \"well, at least you can find out how that good dream ends!\" She laughed a bit, then was gone. Just as a sentence is a mere collection of words without a period, death is the period that gives life meaning. And all of our lives are ideally a good dream which death merely extends until the next lifetime...\n\nI sincerely hope your life is as successful as it can be, now and forever!\n\nSack"
    ],
    "authorname": "sack",
    "tags": [
        "success",
        "self-help",
        "happiness",
        "advice"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-succeed-at-life"
}