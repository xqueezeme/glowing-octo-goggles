{
    "title": "Scent Marked",
    "pages": [
        "Scent Marked: A biologist learns her true power on the trail of the snow leopard \n\nMy heartfelt thanks to mollycactus and Brittni4u for their generosity in reading and editing this story. \n\nChapter 1 \n\n\"Fucking bollocks!\" I uttered softly as I watched the large chunk of ice break away from the cliff where my axe had struck it, trying to give myself an anchor on which to grab hold. 'It's likely going to fall right on top of me, and bash in my bloody skull,' I thought as I felt my body also in free fall, just below and underneath the breakaway chunks of ice. Time seemed to slow as I watched a snow drift right above where the ice broke off begin to fall as well - a small, beautiful tsunami of rolling white powder set against the backdrop of a clear blue sky. 'This won't end well,' is the last complete thought I had before crashing into the icy bank below. I tried to quickly turn my head in the split second before the rest of the mini-avalanche took my face off but I was too slow. I knew trying to conquer this mountain was a bad idea... \n\nIt took the rest of my crew five minutes to climb down to me, another five minutes to dig me out. I came to a few minutes before they reached me, and those were the scariest 3-4 minutes of my life. And the bloody coldest! By the time they got to me, I was a shivering mess from both panic and the freezing temperature. \n\n\"Priya! Priya! Are you ok?\" they all asked me urgently. I tried to answer, but I couldn't stop shaking. My face was wet and cold. I tried to wipe away the moisture and pulled away a wet red hand. I tried to stand up and felt woozy, almost fainting as my brain tried to shield me from the red hot flash of searing pain shooting up my nerves from below my right knee. I looked down to see my right foot grotesquely twisted to the side. If Greg and Elias hadn't been there to hold me up, I would have fallen again. \n\nFurther panic set in. This could be the death knell for our trip. If I can't hike and continue to climb, they would have to call for an emergency airlift out of there. All my planning, all the hard work I put into making this a possibility, and all the blood, sweat and frozen toes I put in to making it this far... down the drain. \n\nI tentatively put a little weight on my foot to assess the seriousness of the situation. To my great relief it wasn't broken, but I suspected the sprain was really severe yet a rush of adrenaline was keeping me from experiencing the full brunt of the pain. I was going to need it wrapped soon or it would likely swell up. The only problem was that we were in no position to take off my boot and try to wrap my foot. It was too cold, and my foot would freeze too quickly. It needed to take place inside of a properly warmed tent. Somehow, I would have to keep going. \n\n\"I think I'm ok to make it to the next camp,\" I told them, trying to sound confident. \n\nEver perceptive, Sonam (our lead sherpa) saw the look on my face but didn't ask me about it right away while the others all fussed over me and continued asking if I was alright. I indicated that I was fine, the gash on my head a minor cut, and that if we kept hiking I'd likely warm up a bit. We had about another hour to go until we reached the camp site and we needed to hurry if we wanted to get there before darkness set in. We were all acutely aware of that, so the others congratulated me on cheating death, wrapped a bandage around my head, and then we set forth. \n\nAs we continued on I was determined that I could brave it and make it to camp, but something must have registered on my face because soon Elias stopped me and pulled me to the side. I was still shivering, perhaps even worse than before. \n\n\"Your face is turning blue,\" he observed, \"and you make a slight grimace every time you put weight on your right foot.\" \n\n\"I'll be fine,\" I retorted. \n\n\"Elias is right,\" Sonam chimed in. \"Priya,\" he began hesitantly, \"I know you're brave, and I know you're tough, but if we don't get you warmed up and get that ankle looked at, you are going to be no good tomorrow, and this trip will be over for you.\" \n\n------- \n\nOut of all the things I'd ever done to prove myself just as smart and capable as the next biologist, this had to be the craziest. Some parts of our planet are so brutal that any animal that can merely survive in those areas achieves almost mythical status. When an animal actually thrives in those areas, it becomes legendary. As an evolutionary biologist who studies big cats, I was teaming up with a small band of scientists and an international film crew to make an attempt to find one such creature that lives in the peaks looming over us, the same peaks that had claimed the lives of countless persons who were foolish enough to try and tame its summit. The mountains are the highest and the most hostile in the world: the Himalayas. Towering above India's northern borders, the Himalaya's are where one searches for the Holy Grail to a big cat biologist: the panthera uncial, commonly known as the snow leopard. \n\nSnow leopards can be found in the mountainous terrains throughout the near east, but there is an isolated population that that lives and thrives exclusively in the Himalayas. Back then, merely to have seen one was considered a stroke of luck rarer than getting hit by lightning. To film one was thought to be nearly impossible. Not only is the climate inhospitable to humans, so it is also to cameras and video equipment. It was a wildlife film-maker's wet dream. Nowadays, there are a handful of documentaries with footage of these rarest of cats. This is the story of the film crew who proved it could be done. \n\nIt remains one of the most rarely seen creatures on earth - the snow leopard. At that time, the number of people in the world who had ever seen one in the wild could be counted on two hands. I was hoping to add my name to that exclusive list. Even more aspirational, I was hoping to catch a pair mating and/or film a mum with her kits. Like many mountain adventures, it was a quest that was to end in both tragedy and triumph. \n\nWhat made this journey so foolish for me is that I am not a mountain climber. I have no experience climbing the other tall peaks of the world, for all the big cats I typically study live in jungles and on savannas. I don't know what it's like to try and push myself past my limits in an oxygen-deprived sub-zero environment... for weeks on end. But when the BBC calls and offers you a huge budget and an opportunity to work with the production company of Sir David Attenborough to try and film one of the most elusive big cats in the world, you say bloody hell yes! Full stop. \n\nLuckily, we weren't trying to reach the summit of Mount Everest, or any of the other insanely high peaks in the Himalayan mountain range. While the peak of Mount Everest stands 29,000 feet above sea level, the highest we would be climbing is to an outpost camp at about 21,000 feet. Helicopters would fly us up to a staging camp at about 11,000 feet but couldn't get us any higher: the air above is too thin for helicopters to sustain lift. We'd have to climb the last 10,000 feet ourselves. Still, it was going to take some insane endurance training on my part to be able to make the trek. It was the biggest challenge of my life. Foolishly, I accepted. \n\nI cleared time off with the chair of my department and assigned my remaining lectures for the semester to my graduate students. I dropped everything else and flew to Denver where for two months I took on intense anaerobic training at the U.S. Olympic Center, situated in the \"mile high\" city to take advantage of its oxygen-deprived altitude and help hopeful athletes expand their lung capacity. \n\nMy time there wasn't all bad. Spring in Denver is bright, crisp and beautiful - the perfect time of year for endurance training. The green of new growth on the trees shined vibrant in the thin air, bathing in the rays of the sun. It's one of the most active cities in the U.S. and by late March the bikers and runners scurry all about the city and its surrounds, reclaiming them from winter's grasp. With so many parks and trails, it was a runner's paradise. \n\nI also managed to sneak in a brief romance with a young Canadian athlete named Aaron, a hopeful for the 2008 Olympics in Beijing. Aaron was a sprinter who specialized in the 100 and 200 meter races. He was humble and kind and took me under his wing to help me train at the gym. His humility, I learned, stemmed from the fact that his event was dominated then by Usain Bolt. Everyone else was just happy to compete. Aaron knew that he'd likely never win gold in his field, but he was determined to compete anyway. I admired that about him. \n\nHaving sex with Aaron was an experience that I almost let pass me by. He was so incredibly toned and fit that I was mortified at the prospect of taking off my clothes in front of him. I couldn't imagine that he'd find my average human body sexy. Plus, he was 14 years my junior. There was not an ounce of fat on his 21 year-old body. He wore me down with his wit and his humor though, and boy am I glad he did. His stamina was legendary. \n\nAaron also introduced me to the women who ran distance, training for the 5000m. On weekends the girls and I drove to Colorado Springs to jog up the trails of Pike's Peak, one of the highest summits in the Rocky Mountains. At first I suffered massive headaches from altitude sickness, but they clued me in that I could prevent those by popping two Excedrin and chasing them with a bottle of Gatorade. \n\nIt was probably the most intense two months of my life. In that ten weeks I lost 14 pounds - training all day and reading all night, trying to devise the best strategy we would use to find the elusive felines. The shitty part was that I also lost a breast size. My C cups went down to a full B. Why is nature so cruel to us like that? My thighs retained their thickness, only grew more firm. But my boobs never ran one single mile, yet that's where all the weight seemed to drop from. \n\nFriday nights I gave myself a break and called Aaron over to my tiny flat to \"enjoy a little down time.\" If I was feeling insecure about my lost cleavage, Aaron was the cure. Our age difference meant that he was deferential to me and easily took direction, an eagerness put to good use in the form of all the oral attention he gave to me. \n\nI experienced nirvana many, many times thank s to his lips and tongue even though he was not particularly skilled in his technique. He seemed to eat me for his own pleasure, and not just to slick the way for his cock. That's what got me hot. Plus, in addition to his marathon stamina, he also had miraculous recuperative abilities, something that I had sorely missed in the older men I usually dated. I could suck him to completion and five minutes later he'd be rock hard inside me, good for the next hour. What more could a girl ask for? \n\nBoth Aaron and I knew that our romance was temporary, which is probably why we were able to have such a carefree and wonderful time together, and why I dropped my usual guard when it comes to men. I tend to avoid long-term relationships. I often claim that it's because I want to focus on my career but if I had to tell the truth about it, it's because I never want to let a man get close enough to me to hurt me the way my father hurt my mum. With Aaron, though, there was no need to be emotionally reserved in order to keep him at arms' length because our relationship already had a built-in expiration date. That was perfect for me. \n\nThe betrayal I felt from my father cut many ways. It started when I hit puberty. Then, out of an outdated and misguided sense of decorum common to my culture, my father began to shy away from hugging me. My baba (as I affectionately called him) was my best friend for the first 12 years of my life - I couldn't understand why he suddenly seemed so distant. Not only did it wound me emotionally, I learned to be ashamed of my budding body, as if the feminine curves adding definition to my form had somehow rendered me unclean. A few years later, when he cheated on my mum with some young, curvaceous woman half his age, it not only broke my mother's heart but it reinforced the perception of my young body in bloom as unclean and sinful. \n\nNeedless to say, relationships with men have always been complicated for me. I shied away from all entanglements that risked leaving me too vulnerable. With Aaron, there was no awkward discussion warning him not to become too attached. We could be together carefree, living for the moment. \n\nOne funny thing that happened was that Aaron got in the habit of taking a pair of my knickers back to his flat after each of his visits. The following week he'd bring them back and exchange them for a \"fresh\" pair. When I asked him what he did with my panties he just smiled bashfully and told me that he liked the way I smelled. \n\nI got the shock of my life one day when I went to watch him work out on the track, taking a break from my own training. Right before he and the other runners got down into the blocks to ready themselves for the practice race, Aaron took from his pocket a tiny piece of red fabric that he pressed to his nose as his chest expanded with air. Everyone else was so deep in concentration that no one seemed to take notice. He discretely slipped it back into his shorts before kneeling down to take his mark. He won his heat by two body lengths, his beautiful muscles all working in unison, the little droplets of sweat on his brown skin shining in the morning sun. I was appalled by what felt like a brazen violation of our privacy, yet my nipples stiffened immediately and I was instantly wet. \n\nWhen we met at the gym the next day, I confronted Aaron with what I saw. \n\n\"Smelling you right before I race is like taking a shot of adrenaline,\" he confessed. \"You saw how well I did!\" \n\nWhat could I say? Some of my past lovers had certainly taken pleasure in my scent and my taste before, but never as boldly as Aaron. Still, it felt wrong, like a violation of our privacy. Yet, my knickers became a sticky mess every time I thought about it. Failing to come up with further reasons to scold him, I took him back to his dorm room and we finished our workout there for the rest of the afternoon. \n\nEven more drastic than my frenetic training, I cut my hair. We were going to be up in the mountains for 4-6 weeks with no opportunities for a proper shower or bath. My hair, which normally hung down past my shoulders, was going to be an oily tangled mess under those conditions. This was the opportunity of a lifetime - there was no time to be prissy. Still, sitting down in that salon chair was more difficult than running up the Rocky Mountains with my lungs on fire. I opted for a short pixie cut with asymmetrical side bangs. It was the closest I could get to being practical yet still cute. It took everything I had not to shed tears as I watched the first long black tress fall to the floor. \n\nChapter 2 \n\nAfter 12 weeks of training I was going home in a way that I had never imagined. I was born in Nashik - a holy city in western India. When I was 5 years old my mum and dad immigrated to London were I was raised, and I now live in California where I teach evolutionary biology and ecology at U.C. Berkeley. I'd visited India with my parents when I was little, and many times as an adult for my work, but I never imagined that I'd be coming back home to climb the Himalayas - that was something only crazy foreigners tried to do. I'd somehow become one of them. Even though the Himalayas are technically in Nepal, living abroad had helped me see that we are all the same people, only separated due to the vestiges of colonialism and war. \n\nThe good thing is that I had some friends on this trip. The academic world is so small, particularly within a subspecialty of a discipline, that you really can't escape knowing nearly everyone in your field. My good friend Taz Chaudry had also been tapped to accompany the film crew as a scientific advisor. Short for Tazmeen, she was from Bahrain and studied evolutionary biology at Harvard. We met while we were both in graduate school, and quickly discovered that whenever we end up in the same place that our joy and laughter is increased exponentially. She got a job at the zoo in her home town of Manama when she was a teenager and fell in love with the leopard there. When she went to school she dedicated her time to studying the solitary cats in Africa, India, and South America, though there they are called jaguars and pumas. \n\nAlso coming along on this trip was Greg Roland, who everyone called \"Poop.\" He was a shorter man, about 5'7\", balding but with a full beard and black-rimmed glasses. I'd read all of Greg's work and seen him speak at numerous conferences, but he was one of those super geeks that kind of kept to his self - more solitary than the leopards we were trying to locate. \n\n\"How in the world did he get that for a nickname?\" I asked a colleague one year. She explained that they started calling him \"the pooper scooper\" because that's what he does - analyzes cat feces to determine their health and dietary habits. \n\n\"At some point, someone just shortened it to 'Poop' and it stuck,\" she explained. He didn't seem to mind, though, which I found strange. Nevertheless, it is because of him that we know everything about what snow leopards eat, and knowing what they eat was how we were going to find them. \n\nAnd then there was Elias. Adhama Elias Greyson was born in Kenya, the son of a White American mother and a Black American father. His parents joined the Peace Corps in 1971 to escape fighting in Vietnam. There they lived among the Maasai on a reserve for ten years where they had Elias, which is where he fell in love with lions. I knew his story not because we were close, but because everyone knew his story. Just as lions are perhaps the most popular of all the big cats, the same is sadly true in the academic world of big cat biologists: those who study lions get the bulk of the attention and the bulk of the funding. \n\nFor extra insult, Elias also had a keen eye for photography, and therefore all his articles included these absolutely captivating photographs of his subjects. He was more famous for his pictures of lions than he was for his research. For Elias this was simply a matter of living up to his name. The English translation of his first name, Adhama, literally means \"glory.\" It's as if he was born to be an arrogant bastard. \n\nMaybe 'bastard' is too strong of a word. He was never a wanker to me, but perhaps that is just because I was one of the few women who had not slept with him. He was notorious for bedding colleagues at conferences. One year I had the frustrating displeasure of being in a neighboring room to his at the Omni Parker House Hotel in Boston, where I was forced to listen to a marathon tryst coming from his adjoining suite one night. That memory was singed into my brain, easily one of the most frustrating nights I have ever spent. \n\n\"I'm not that type of girl,\" I heard the mysterious woman coyly proclaim after about two hours of first giggling, then sighing, followed by moaning, and finally muffled screaming and the rhythmic knocking of a headboard against our shared wall. Twice I had picked up the phone to call the front desk and complain, but each time I put it back down. Just because I wasn't getting any didn't mean I had to spoil someone else's fun. Plus, the voyeur in me was just too strong. I was only 25 at the time, and I was a late bloomer with boys due to my strict upbringing but I was quickly trying to catch up. \n\nI have to admit, listening to them go at it and imagining what they were doing got me more than a little aroused. It was enough to overcome my annoyance at being kept awake. The woman sounded exhausted, but apparently Elias wanted more from her. I couldn't help but be curious as to what it was. Being in a higher pitch I could just barely make out her voice and what she was saying through the wall, but his voice was low and muddled. ",
        "\"But I've never done that before,\" I heard her protest further. \"Besides, it would never fit.\" My curiosity was totally piqued by that point. Elias mumbled something that I couldn't quite make out, and then there were more giggles, followed by what sounded like wrestling, and finally a loud yelp. \n\n\"You are such a pervert,\" I heard her exclaim. \"No one's ever licked me there.\" Her head sounded closer to the wall then, like she had been repositioned on the bed. \n\n\"Oh God,\" I heard her moan, and my mind swirled with the possibilities of what he was doing to her. The needy ache between my legs could no longer be ignored. I reached up under my night shirt and began to roll my nipples while my right hand snaked under my knickers. I was embarrassingly wet. My lips were puffy and flowering open, ready for my familiar touch. I slowly began to rub my clit as I listened to them start back up again. Before long, she was begging him to go slow and be gentle. Her moans grew more feral, guttural, as he built up speed. After a while, the rhythmic banging of the headboard returned, followed by screaming and moaning that I couldn't tell whether it was from pleasure or pain. I pinched and pulled at my nipples as my fingers on my clit sped up to a blur. All three of us came at the same time, though hopefully no one else heard me. \n\nWhat truly made it sting was that Elias had been flirting with me earlier that same day. It could have been me getting my brains fucked out for hours, if only I had relented. When he begged me to come away and have a drink with him, I turned him down and stayed with my girlfriends instead, not wanting to be another one of his conquests. After five years of attending the same conference, I knew his reputation well. \n\nElias is ruggedly handsome and unmarried - which is not usually true for the guys on the prowl at our annual meetings - so that wasn't the issue. He was charming but he could also be arrogant, especially when it came to research in our field. Besides, for a young woman in any science field, getting the men to take you seriously is always an uphill battle. Sleep around too easily and you can just forget about being respected. This is all the more true for women of colour. I saw the mysterious woman sneaking out of Elias's room early the next morning. I won't name her, and I would never slut shame her, but I also never want to be \"that girl.\" \n\nI also have to admit that my reluctance toward Elias stemmed from the fact that he ridiculed a theory I had about human evolutionary biology many years ago when I was still in grad school presenting at a conference for the first time. I desperately wanted to redeem myself and eventually prove him wrong. I couldn't do that on my back with my legs up in the air and my knickers dangling from around my ankles, no matter how bloody handsome he was. \n\nPerhaps because of those negative early experiences with Elias, I had turned my academic eye to big cat evolutionary biology. I have a thing for tigers. I don't know if it is just because I was born in India, but can one ever truly know what inspires wonder and curiosity in a child? For whatever reason, I love tigers, who can grow to be bigger than lions, damn it! In my work I'd become an expert at tracking and studying them, while somehow not ending up as their supper. \n\nLike snow leopards, tigers are solitary animals for most of their lives and despite their size are also incredibly hard to find if they want to avoid you, which they most often do. In the thick of the bush, a tiger can be ten feet away from you and you'd have no clue that this creature that is eight feet long and weighs 500 pounds is even there. That's the bad way to find a tiger, and you risk putting yourself in a situation where you may have to harm the cat to fight for your own life. My method is to put cameras in the trees beyond a tiger's reach and retreat from the bush almost entirely. The trick is in finding the right places to settle the cameras. I was one of the best at it, and thus my invitation to join this search for snow leopards. \n\nWe also hired two sherpas and two porters to accompany us on this trek. Normally a group would have one sherpa and one porter, but we hired more to help distribute the weight of all the gear we needed to schlep up the mountain, including laptops, extra batteries, cameras, comprehensive medical kits, medical oxygen, and satellite phones. I initially felt guilty - hiring people to basically serve as our pack mules - but as our lead sherpa, Sonam explained, portering is a way of life in Nepal and, although it is tough work, is also relatively well paid, particularly in the Khumbu region. That made me feel a little bit better, but only a little. \n\nRounding out our group were four members of the BBC production team - two cameramen, Eric Weismann and Vihaan Patel; a sound specialist, Jannell Valenzuela; and an on-site producer, Vanessa Berlowitz. Twelve of us in all. \n\nVanessa is 'a bad ass,' as my American friends say, and I think I was most excited at the prospect of working for her. She's had more than twenty years' experience at the BBC's Natural History Unit and has filmed almost everywhere on earth. She's collected over 20 Bafta and Emmy awards for her nature films and is Attenborough's top choice when it comes to his series. Dirty blonde hair in her late 30s, she has high cheek bones that accentuate her warm, generous smile and give her face a roundness that suggests a little more weight than she actually carries. She was fit and also tough, having braved the extreme conditions at both the north and south poles. I was looking forward to learning from her and proud that she was leading our team. \n\nMost of us flew into Kathmandu. From there we took a smaller prop plane up to this tiny airstrip in a little mountain village called Lukla, 9,383 feet above sea level in the Namche province of Nepal. From Lukla we were shuttled by helicopter up to a slightly lager village called the Namche Bazaar in the Khunde region, where we stayed in a 20-room lodge called the Yeti Mountain Home, 11,286 feet above sea level. For the foolish and more gullible tourists visiting, there was a Hindu temple nearby that claimed to house an actual scalp of a Yeti. The hosts at the lodge tried hard to get us to shell out a few thousand Nepalese Rupees each to go and see the scalp, but we politely declined. \n\nThe lodge had a grand, spacious main lounge with a huge stone fireplace just past the lobby and before the dining hall. There was a warm cozy fire and plenty of tender to keep it going, so we all gathered there to have a few drinks and catch up that first night. Our hosts served us little brass bowls of a drink called Chyang, which is made from fermented rice and tastes rather similar to a cider. It likely has a similar alcohol content as well and its taste was pleasant. As the Chyang flowed, Eric, Vihaan and Elias became more and more flirtatious with myself, Taz and Jannell. They competed over who could tell the funniest expedition story. \n\nElias was eyeing me more and more boldly, but he was also eyeing Taz. I always felt that Taz is prettier than me, and far more outgoing. Guys were constantly ogling her, and she was usually the life of the party. She had smooth brown skin a shade darker than mine, long black hair and full sensual lips that spread out into a radiating smile. Plus, she had this curvy bubble butt that most girls would kill for. To my surprise, she was always insecure about her thighs and butt, fearing that they were too thick and too big, but I saw the way guys looked at her with raw desire. She had absolutely nothing to be insecure about. Guys would literally drool when looking at her butt, mesmerized, finding it hard to tear their eyes away. It was particularly demoralizing being on a double date with her. \n\nThere was probably some small part of me that was jealous of Taz, but I struggled hard to suppress that jealousy and never let it come between us. She knew that guys thought that she was really hot but she was never arrogant about it or bitchy toward other women, and I really appreciated that about her. The fact that Elias was eyeing us both just made me all the more determined to give my attention to Vihaan. \n\nI learned that Vihaan was in his early 30s, born in Johannesburg to parents originally from Mumbai. His mum and dad were anti-apartheid activists and members of the ANC, but moved his family from Johannesburg to London in 2001, shortly after the end of Mandela's presidency. He was very handsome with a thin full beard lining his angular jaw, and he was fun to talk with. \n\nIt was likely because Vihaan had never lived in India that we got along so well. I often struggled to find common ground with Indian men from India, as their outdated ideas about gender roles and proper womanhood didn't vibe well with me. But Vihaan was charming and cool. Before long we were laughing like old friends. \n\nVihaan went to film school in London but it was only by a fluke that he became a nature specialist. Desperately needing money to support himself just out of school, he took a job with a conservationist organization to make a nature documentary. That job led to other similar jobs and then to more of the same, until eventually he just fell in love with it. He'd worked on two previous Attenborough projects for the \"Planet Earth\" series that took him high up into the mountains, so he became one of the first names on our producer, Vanessa's list. \n\nAs Vihaan and I traded stories, Elias asked our hosts if they had anything stronger to drink. They brought out some Aeylaa, a distilled beverage brewed from millet. They told us that it was the strongest drink they had. \n\n\"Man, are you crazy?!\" Vihaan exclaimed. \n\n\"Can't handle a grown man's drink?\" Elias teased. \n\n\"You mean a grown woman's drink?\" Taz sassed him. \n\n\"H-E-L-L-O! You guys do remember that we are supposed to wake up god-awful early and go on a full day's climb tomorrow, right?\" Jannell warned, trying to talk sense into us. We had already downed a few rounds of the Chyang. \n\n\"Just one shot won't hurt us,\" Elias goaded us on. \n\nWe relented and took it, but as the flirtatious banter continued, one shot eventually became three. That stuff was strong! I was way past buzzed when a playful argument broke out about whose strategy was going to work best to find our elusive cats. \n\n\"I'm sure Priya's got a few bottles of leopard pee in her backpack to help bring the kitties to us!\" teased Elias, both making fun of me and the smaller size of the cats we were tracking. Everybody roared. \n\n\"Yeah, and I'm gonna pour it all over your backpack when you're not looking,\" I retorted. \"We'll see if you still call them 'kitties' when one of them caries you up the side of a cliff in her jaws!\" \n\n\"Leopards do have the strongest neck and jaw muscles of all the big cats,\" Greg chimed in. \"They can climb a tree carrying an animal that weighs almost twice as much as them.\" \n\n\"Leave it to Poop to cite the statistics,\" Elias chided, elbowing Greg in his side good naturedly. \n\n\"Very funny, smartass, but you won't be laughing when my strategy brings in the best footage,\" I replied. \n\n\"Do I sense a bit of a wager afoot?\" Taz asked, cocking up one eyebrow. A dark lust flashed over Elias's eyes as his gaze raked over me, a wicked grin curling his lips. A shiver ran through me and my nipples perked up, and I thanked God my clothing was layered. \n\n\"Loser buys the drinks for everyone when we get back to Kathmandu,\" he suggested, apparently too polite to say what he was actually thinking. \n\n\"Sounds good to me. Priya...?\" Taz raised her eyebrows and gestured toward me. \n\n\"You're on!\" I affirmed, \"and I have to pee. So if you all will excuse me...\" I set my drink down and went to the loo. 'As if I wasn't feeling enough pressure already,' I thought to myself as I sat perched atop the porcelain bowl, my hands covering my face. The slight eco of my urine splashing in the bowl reverberated throughout the room as I tried to calm my nerves. I didn't want to admit it but my heart was also racing from the lascivious look Elias gave me. I needed to put those thoughts out of my head and stay focused on the job we were hired to do. \n\nI washed my hands and face and opened the door to head back to the group, only to run into Elias in the hallway blocking my path. The mischievous look on his face told me he was waiting for me. \n\n\"You know Priyanka, buying drinks is one thing, but we really should put something with consequence on our little wager,\" he suggested, using my full name. I hated when he did that. \n\n\"Something with consequence, huh?\" I asked sarcastically. \n\n\"Unless you're afraid...\" \n\n\"Puh-lease!\" I snorted. \"You will be extolling my brilliance when this is all over.\" \n\n\"Then being so confident, you should have no problem raising the stakes,\" he said, eyeing me hungrily. He was as ruggedly handsome as ever, sporadic flecks of grey decorating his jet black hair. It was seemingly unruly yet meticulous in its care. I had to fold my arms across my chest to prevent him seeing any evidence that he was getting to me. \n\n\"And just what did you have in mind?\" I asked, raising one eyebrow. \n\n\"How about if you lose I get to photograph you, and capture your natural beauty, just like I do my cats?\" \n\n\"Ha! In your dreams, big boy!\" \n\n\"If you are so confident in your tracking skills, there's no risk. Just name what it is you would extract out of me,\" he replied, spreading his arms and looking down, gesturing that he was open to anything. \n\n\"You're serious?! You want to see me naked that bad, huh?\" \n\n\"For a while now,\" he admitted boldly as a simple matter of fact. \n\n\"And that's really how you want it, from a bet?\" \n\n\"I've made no secret about the fact that I want you,\" he said softly, licking his lips, \"but you've yet to give in.\" \n\n\"Listen,\" I said to him, shifting into a sultry voice and slowly poking my finger at his chest. \"If you are going to see me naked, it should be because I'm hot for you, dripping wet for you, and needing you inside me.\" He was caught fully off guard, his mouth hanging open in shock. I was laughing internally but I held it together. I was totally teasing him, and I glanced down to make sure I was having the desired effect. \"That's how it should happen, not because you had to resort to some cheap trick like a bet,\" I concluded. \n\n\"Well, I was about to call it a night,\" he said as he recovered from his initial shock at me being so brazen, his voice a baritone timbre. \"I'd truly and sincerely love it if you'd consider joining me for a nightcap so we can work on setting those proper conditions,\" he proposed. \n\n\"Are you seriously asking me to come back to your room with you?... Tonight?\" I asked incredulously, all teasing aside. \"With the day we have ahead of us tomorrow?\" \n\n\"I've always had a thing for you, Priya, you know that.\" \n\n\"And I've always turned you down.\" \n\n\"Aren't you tired of saying no yet?\" he smiled confidently. The memory of that night in Boston flashed through my mind, and just how hard I came listening to his performance. God, the offer was tempting but I reminded myself that I wasn't the only woman receiving his attention that night. \n\n\"You flirted with Taz just as much as you did with me,\" I told him, striking a defensive posture. \"Maybe you'll have more luck with her, but I'm going to bed... alone.\" \n\n\"Let me come tuck you in, and give you a little something to help you sleep better,\" he persisted, licking his plush full lips as he stepped closer to me. I could feel the heat coming off his body as he undressed me with his eyes, hinting at just where he wanted to put that tongue. \n\n\"Dream on, dude,\" I told him, holding firm despite the trickle of moisture forming between my legs. \n\n\"Oh well,\" he signed. \"I had to try.\" \n\n\"Good night, Elias. See you bright and early,\" I said as I walked away, naughtily putting a little extra sway in my hips. I could feel his eyes zeroed in on my backside. \n\n\"Mmm mmm mmm,\" he sighed heavily. \n\n------- \n\nThe next morning we met with our Sherpas bright and early at 5 am. They gave us a run down on how we would spend the next few days taking short day-long hikes to help get acclimatized and finalizing the logistics for our eventual excursion to find the leopards. Those day hikes were grueling. They were also sunny and beautiful but when you're that high in elevation, sunny skies are deceptive. Cloud cover can actually trap warmer air rising up from the south but bright sunny days are frigidly cold. There was no more staying up late drinking, laughing and teasing. When we got back to the lodge each evening, we had dinner and showered and then were passed out by 9:00 pm. \n\nThe night before we departed for the final trek, our lead sherpa, Sonam, gathered us around the huge fireplace in the lodge to center our thinking and calm our anxieties. \n\n\"We believe that the mountains challenge our bodies, our minds, and our souls,\" he explained. \"They are places where we are forced to turn our gaze inwards and search within ourselves for the grit and the humility to continue. From our years in the mountains we know that no person steps foot from a mountain unchanged in some small way. We recognize that from the mountains we draw our vitality and we feel strongly that it is our responsibility to do our share in giving back to them.\" \n\nIn contrast to the excitement and laughter we'd shared over the past few days, the mood that evening was solemn, reflective. We all knew that our search was extremely dangerous and potentially life-threatening. So many people had died trying to tame these mountains, and if we didn't approach this trip with respect, we could very well add our names to that grim list. We listened intently and in total silence as Sonam spoke. \n\n\"Over 290 people have met their creator trying to climb Everest. The last time that we went a year without anyone dying was 1977,\" he warned ominously. \"Most of them perished in what we call, 'the death zone,' above 26,000 feet. Up that high, there is not enough oxygen to sustain human life. Luckily for us, we are climbing only up to 21,000 feet.\" \n\n\"How many climbers have you lost personally?\" our producer, Vanessa asked. Sonam paused, and cleared his throat before continuing. \n\n\"Way too many,\" he admitted grimly. \n\n\"We thought that you are the best at taking people up and bringing them back safely?\" Greg chimed in. \n\n\"I haven't lost a climber in 12 years,\" Sonam insisted. \"It is the best safety record of any sherpa here. However, my wisdom came at a steep price,\" he said despondently. We all got very quiet. \n\n\"It was the month of May in the year 1996 of the Western calendar,\" he continued. \"I was much younger then, and it was my first trip as a sherpa. I portered the previous 6 years. It was exciting to finally become a sherpa. A mixed group of climbers from New Zealand and the United States, and one woman from Japan made up my team. Yasuko was her name. At 47, she was actually the oldest in our group, and the most experienced. She tried to warn me that I was letting a few of the cockier men push our group too hard. Regrettably, I didn't listen to her.\" There were tears forming in his eyes then as he stared off into the flames. The rest of us sat quietly amidst the crackle and pops of the burning logs and didn't make a peep. \n\n\"We were approaching up the south summit at just over 28,000 feet. We could see the peak of Everest less than a thousand feet away but because the group had been pushing themselves so hard, they were using up oxygen faster than planned. We were in danger of not having enough oxygen to make it back down to a free-breathing altitude. What was worse, there was a major storm brewing. A blizzard was forecast for the mountain. My gut told me not to risk it and turn back, but the guys were so disappointed when I raised that potentiality with them. Many climbs don't make it to the top, either due to the weather or because of an injury. But being so close, the group decided to go for it. Yasuko deferred to the group decision, but I could tell that she disagreed. ",
        "\"We knew the storm was coming and I got constant updates over the satellite phone in order to try and time our ascent to catch a calm break before the tempest. We made it to the summit with no time to spare. We took a few pictures then quickly started back down the south slope. That's when the wind sped up and brought the full brute force of the blizzard down upon us. Visibility went down to near zero. The winds howled so loudly that it was hard to shout over them and be heard. The temperature dropped to -23 degrees, -47 with the wind-chill. Members of our group got disorientated. It was difficult to stay together and near impossible to stay on path. Our pace slowed to a crawl, and our oxygen was running low. It was like some Hollywood horror movie, as every few minutes a couple members of our group just disappeared, seemingly swallowed up by the mountain. I was in an impossible situation. I knew that if we stopped or turned back to look for the missing that we'd all die. I made the decision to press on and used the satellite phone to call for help and more oxygen. \n\n\"There were 12 climbers in my group that morning. When we got back down to camp, only 4 remained. In the end, it was one of the deadliest few days in the history of climbing Everest. Eleven people lost their lives during that climb, including Yasuko. Three were rescuers who climbed up to search for the 8 missing from my group. One of the rescuers was my older cousin, who trained me as a sherpa. I had to break the news to his wife and kids that he was never coming home because of my mistake. \n\n\"Two members of my party were never found. The icy slope of the mountain is their tomb. In fact, there are many climbers who have perished on this journey whose bodies have never been recovered. Keep in mind that we are not just climbing a mountain but traversing a sacred burial ground. \n\n\"I live every day with the guilt and regret for failing those who had trusted their lives to me. But never have I not listened to my better judgment again. I entreat you to please not question me if I say we cannot climb any further. If we find the leopards, great. If we don't find them, that's ok. The meaning is in the journey. My job is to make sure that you live to climb another day, and that you go home to your families alive.\" \n\nHe gave us a few minutes to let his words sink in. We all looked around at each other, coming to terms with the fact that even with all of our expertise and all of our planning and all of our high-tech equipment, the trip could still be a bust as far as finding leopards went. We had to reset our expectations to understand that true success is really just survival. \n\n\"Now for some logistics,\" Sonam continued. \"Our efforts as sherpas and caretakers of these mountains take two forms: environmental stewardship and social outreach. Being environmentally responsible means that we minimize our ecological footprint as much as possible. To do that, everything we take up the mountain we bring back with us, including all of our waste. Many visitors find this to be the most distasteful aspect of their climb but it is an imperative that we don't litter and despoil the mountain with our waste. The beauty you will discover is only there thanks to the fact that the climbers who have come before you have observed this basic rule. We will leave the mountain as beautiful as we found it for future generations.\" \n\nI think of myself as a pretty tough chick, but when I heard about this aspect, it was enough to make me want to hurl my cookies. The thought of relieving ourselves in bottles and bags for the next four weeks and then carrying all that around with us was simply nauseating. There were designated places at each camp site to dispose of our pee each night, but every time we had to pee while climbing would be in a bottle. In addition, each of us would be hauling our own individual bio-degradable bag full of our own feces. There were no disposal sites along the way. That bag was going to be with us for the better part of a month. \n\nDon't get me wrong. I am no princess and in some of my previous trips to India, I had used some toilets that were little more than holes in the ground. They would make most Westerners gag. But at least with those you could walk away once you were done. We were talking about hauling our shit around with us, strapped to our backs for weeks! \n\n\"Isn't that why we've hired extra porters?\" asked Eric, one of our camera operators. \n\n\"Absolutely not!\" I piped up before Sonam could reply, appalled and embarrassed that a member of our team could be so insulting. \"We make our own waste and we will carry our own waste,\" I insisted, my indignation suddenly outweighing my shared disgust. \n\n\"I agree wholeheartedly,\" Taz had my back. \n\n\"No, that wouldn't be right,\" Jannell chimed in. Elias eyed me curiously and smiled. Vanessa, our producer, was in agreement. We women were not going to stand for any such abusive power differential. Sonam continued without making any more ado about it. \n\nThis brought us around to a discussion of food. As Sonam explained, we would burn between eight and ten thousand calories every day of climbing, yet we would only be consuming about 1500 calories each day. \"This means that each of you can expect to lose 10-15 pounds during this trip.\" \n\n\"Woo hoo!\" shouted Taz, high-fiving both me and Jannell. We all got a good laugh. \n\nThat meant packing food that was high in energy and fiber, but low on weight. \"We need to consume a lot of fiber because we need to stay regular, and we need to condition our bowels to void our waste regularly and on schedule - in the late evenings and early mornings while we are at camp in the privacy and warmth of a tent. Believe me, you don't want to have to relieve yourself in the middle of the day while we're climbing.\" I shuddered just thinking about it. \n\n\"Once we reach our staging camp at 21,000 feet, it will be difficult for us to do much cooking. You can't really cook anything in that environment. The higher you get, the lower the temperature of the flame gets, due to the low amount of oxygen in the air. Our little kerosene stoves will be rendered nearly useless for cooking by that point. Water won't boil so it takes 20 minutes to cook an egg, for instance. It's near impossible to brew a truly hot cup of coffee.\" \n\nAt the lodge, local staff members had the sole responsibility of chipping clean ice from the glacier to melt for drinking, cooking, cleaning, and bathing water. At camp each evening, we'd all take turns working with our sherpas and porters melting clean snow for water. It takes 2-3 hours for a team of four people to collect and melt the water our entire team would need each day. \n\n\"First rule of thumb,\" Sonam reminded us, \"don't confuse your water bottle with your pee bottle! If they are the same colour, I recommend marking one with a sharpie.\" We all laughed. I was glad he had a sense of humor, despite the somber beginning of his talk with us. As our lead sherpa, his manner would set the tone for the trip. \n\nWe would sleep in three tents of four each. The difference in weight between a two person tent and one that sleeps four is only 2 lbs, and one person carrying the tent allows for a more efficient and economical distribution of extra food and water between the three other people in one's pod. Plus, with the extra body heat a four-person tent slept much warmer than a two or three-person tent, especially for the two sleeping in the middle. \n\nWe thought about doing a girls tent and two guy tents, but Jannell suggested that we organize our tents according to specialties, which we all agreed would work better. Joining me in the nerd pod were Taz, Greg, and Elias. In the tech geek pod were our two camera dudes, Vihaan and Eric, our sound specialist Jannell, and our producer Vanessa. Our two sherpas, Sonam and Ganesh, and our two porters, Kabir and Zayan would make up the third pod. \n\nWe were also carrying two larger tents, one that would double as a kind of mess hall and another that would be our little on-site production studio to assess the footage we were getting. In all, there would be about 50 lbs. of dead weight strapped to my back. Guys were carrying 60. We were carrying the normal gear that all climbers require: 10 pairs of knickers, 4 pairs of high density wool trekking socks, two sets of a base layer shirt and trousers made out of wicking material that draws moisture away from the body, a mid-layer mountain fleece light jacket, mid-weight hiking trousers, waterproof jacket and trousers, a few toiletries including sunblock and lip salve, a Nalgene wide neck water bottle, hand warmers, a sleeping pad, flashlight with spare batteries, small first aid kit, an ice axe, rope, waste bag, and about 15 lbs. of baby wipes. \n\nWell, perhaps that many baby wipes wasn't quite \"normal.\" Most of the people in our group carried only half that many and thought I was crazy, but for the next four weeks those baby wipes were going to be the only things available to provide some miniscule semblance of a bath or shower. It was bad enough that with only 10 changes of knickers, each pair would have to be worn for three or four days. They could laugh and tease me all they wanted, but this girl was not going to go four weeks with a dirty itchy arse. Screw them. The only one who didn't laugh at me was Elias, who sat back in the corner appraising me as the others teased me for being so prissy. \n\nIn addition to those standard items, we were also carrying some major HD photography gear, including 20 infra-red motion sensor mounting cameras, distributed evenly among five of us. We needed the motion sensor cameras because they were really our best hope of capturing any footage of a snow leopard. They avoid humans completely, and would never allow themselves to be seen by one of us, better yet pose for a photograph. Our only hope was to come up with good \"guestimates\" for where they were likely to be, mount our cameras there and retreat back to camp, and then pray. That's where we came in - the small group of big cat experts who could make the best determinations of where the cats are likely to pass. \n\nThe plan was to hike up to 21,000 feet and set up a staging camp, and from there launch little day treks to scout and place our cameras. If all went well, we would reach our staging camp area within five days. If all went well... \n\n-------- \n\nChapter 3 \n\n'Priya, what the bloody hell have you gotten yourself into?' I cursed under my breath as I assessed the steep climb up the rocky slope in front of me. Our little practice hikes were one thing, but this was the real deal. Freezing temperatures and dangerous altitudes were all we could look forward to for the next month as we ascended toward the summit where \"earth meets sky.\" \n\n\"Don't get cold feet on me now, Priyanka\" came the deep voice from behind me, still scratchy from being up so early. I turned around to see Elias striding toward me emerging from our lodge, the last semblance of modern civilization we'd experience for the next five weeks. His face had taken on a rugged look now that he hadn't shaved for the past two days. The hair atop his head was also starting to look less sculpted. \n\nHe'd be quite grizzly by the time we made it back down the mountain. In fact, we'd all be much more hairy by that time, in ways I really didn't want to think about. I was warned about this very issue, and in fact advised to stop shaving or waxing two weeks before the trip so as not to have to go through the \"itchies\" during the initial regrowth of hair. Hiking with an itchy crotch under four layers of clothing sounded like a recipe for torture to me. I gladly stopped waxing my punani. My professors used to tell me that I was too girly to make a good naturalist - with this trek I was finally going to prove them wrong. \n\n\"She hates it when you call her that,\" cried Taz, coming up behind him. \n\n\"Why? It's her name...\" \n\n\"Yeah, but you say it like a scolding parent,\" she admonished, punching him playfully on the arm. The two of them had been acting very chummy on this trip thus far. As far as I knew they had never slept together, but I knew Taz also found him attractive and like the leopards she studied, she could be super stealthy. I can't count the number of times we've gone out with a group of friends and I've gone home thinking that she had also gone home alone only to be surprised the next morning when she'd call me to fill me in on the details of her latest tryst. If it wasn't for the fact that we'd have virtually no privacy during our climb over these next few of weeks, I'd suspect that status with Elias might soon change. \n\n\"You know that I prefer to just go by Priya,\" I asserted. That preference had developed when I was a little girl in London. I hated how most native English speakers on both sides of the pond mispronounced my name. 'Priya' was just easier all the way around. Elias knew what I preferred, he just was always looking for ways to try and get under my skin. \n\nWhat I truly feared was him seeing little tingles of doubt creep across my face as I faced the mountain before us. I did my best to present my most determined and self-assured demeanor. \"I'll beat your arse to the top,\" I said jokingly, hoping my levity would mask my anxiety. \n\nDespite my fears that first day went off without much of a hitch. To keep our energy up, we snacked regularly throughout the day on nuts, dried fruits, crackers, granola, and energy bars. Still, we were bloody exhausted by the end of the day. There is nothing quite like the joy and relief that came over me when we finally saw that string of colourful flags letting us know that we'd reached camping grounds for the night. \n\nWe cooked together for our meals in the evenings, which mostly consisted of instant soups, rice, and pasta dishes where all we needed to do was add some water and heat. Tea, coffee, and hot cocoa were our best friends. \n\nThe hardest part was actually going to pee. It was imperative that we stay hydrated, and staying hydrated meant peeing regularly. For the guys this was easy, they could whip out their cocks and stick the tip in a bottle and let loose. For us girls, peeing into a bottle is a lot more complicated. We have to pull our trousers down and expose much more of our bits to the freezing cold. Then we have to squat and try to balance ourselves and do all this without peeing on our hand. It incentivized us to try to hold out as long as we could. When it was time to go, us girls would stand shoulder-to-shoulder in front of the one peeing to block the wind so she wouldn't get too cold. \n\n\"Fuck this!\" Taz joked at one point. \"I should have got myself a catheter for this trip.\" \n\n\"A nice warm bag of pee strapped to my thigh does sound pretty good right about now,\" I quipped. \n\n\"No shit,\" Jannell agreed. \"I'm totally not even grossed out by that at the moment.\" \n\nThe other issue was privacy. Sometimes there were rocks or cliffs for us to stoop behind away from the curious eyes of the guys. At other times we were just kind of out in the open and we had to depend on the guys' honour to just look the other way. When we did stop for pee breaks Sonam suggested that we all go at the same time, whether we all felt it or not, as this would insure that we were most efficient with our time. \n\nThe second day I woke up so exhausted that I was again doubting my sanity for agreeing to do this. I suspected we were all feeling that way, but no one was admitting anything. Greg had warned us that he was a heavy snorer but I slept so hard I never heard it. The guys were chivalrous and let Taz and I go first sleeping in the middle. I turned toward her when our alarm went off and she started giggling, wiping sleep out of her eyes. \n\n\"Girl, you've got a trail of dried drool going all the way down your cheek,\" she teased. I elbowed her and tried to scrub off the evidence before one of the guys saw me. \n\nWe had breakfast together in our large group tent and took turns handling any \"private business\" back in our sleeping tents. Afterward we packed up and set off again. Outwardly, I exuded confidence that our trip would be successful and our strenuous life-risking trek would be well worth it in the end. Secretly, however, I was scared to death for I knew our chances of actually getting any footage of a snow leopard were about as likely as finding an all-you-can-eat steak night at a Hindu buffet. \n\nIt was on the third day that we picked up the trail of the bharal - Himalayan blue sheep. We recognized them right away from their bluish-grey dense fur. Their tummies and the backs of their legs are white, while their chest and fronts of their legs are black. Separating their blue-grey coat and white belly is a black stripe that runs along their side. From the back they look all white except for a short furry tail. \n\nThe evolutionary purpose of their color scheme is for camouflage at higher elevations: the white on their lower half and underside blends with snow while the bluish-grey coat on their upper half blends with the sky. They are the main food source of snow leopards and our plan was to find one of their herds and stick close to them, figuring that where they go, snow leopards will follow. To keep up with them, we wanted to put satellite tags on a couple of members of the first few herds we came across. \n\nSounds easy, right? The challenge was that we had decided from the outset that we weren't going to use tranquilizers. Many Buddhists in the area see them as a sacred animal and protect them. We needed to be mindful of that and use methods that were the least traumatizing to the animals. That meant we were going to try our luck at goat herding. The bharal are so agile and sure footed, with hooves designed specifically to grip wet and slippery rocks, that they can scamper up a rocky cliff and out of reach at a moment's notice. To successfully herd them, we devised a strategy to separate a couple from the group, then us girls would try to block their path up the cliff while the guys closed in from behind. The satellite tag was merely a microchip, and they were loaded into an insertion device that looked and worked like an Epi-pen. When the guys got ahold of one, my job was to rush in and insert the microchip, right in the upper thigh. \n\nReady with our strategy, we took up positions and were about to close in when two rams broke out into a fight and began rutting! What luck. Vanessa was on it right away, instructing Vihaan and Eric to pull out their cameras and start filming. \n\nThe rutting seemed to go on for an eternity, so we used the opportunity to pull out some snacks and watch all the raw power on display. Mature males have large, thick horns. They grow upwards, then turn sideways and curve backwards, looking somewhat like an upside-down moustache. A thunderous clap reverberated throughout the valley every time the two large males smashed heads. \n\nFinally, after what seemed like over an hour, one of them threw in the towel and decided he'd had enough. The victor chased him a ways up the cliff to make certain of his departure, then returned back down to where the ewes were gathered. He went sniffing about their behinds, and we figured he was trying to assess which ewes were coming into estrus. What happened next completely shocked us and left us speechless. \n\nAs the victorious ram went up to smell the hind quarters of the first ewe, she let off a brief gush of what we initially thought was urine to flow over his nose and outstretched tongue. He lapped up the short deluge hungrily. \n\n\"Whoa,\" I whispered at the first instance. The ram then went up to another ewe and the same was repeated. Then again with another. \n\n\"Is he tasting their pee?\" Vanessa whispered, trying to understand. \n\n\"I think the other ram must've lost on purpose,\" chuckled Eric. \"Looks to me like this guy drew the short end of the stick.\" ",
        "\"It's probably not urine,\" asserted Greg. \n\n\"I thought you were just into scat play, Poop,\" teased Elias. \"You do golden showers, too?\" \n\n\"They're scent marking,\" I confirmed, ignoring Elias and trying to keep the conversation out of the gutter. The sheep weren't helping, though. \"That liquid is from the Skene's gland, which surrounds the lower end of the urethra in female mammals.\" \n\n\"Having a little taste test to see who's ready,\" Taz chimed in. I elbowed her in the ribs. She wasn't helping, either. \n\n\"Oh...\" Vanessa said, pinkness flushing her cheeks. \n\nThe ram wasn't just smelling their pheromones to see if they were in estrus, he was tasting them, too. Each one after the other. A visceral reaction took hold of me as I watched this play out with nearly every adult female in the herd. That is, until he found one that smelled and tasted to his liking. She was only half his size yet before we knew it he mounted her and was ramming into her in a lust-fueled fury. \n\nI have a hard time putting into words the effect that watching this had on me. I wasn't aroused per se, but a deep longing came over me at seeing such raw sexuality on naked display. There was no societal or cultural etiquette to get in the way - he just smelled and tasted the liquid offering from each of their pussies until he found the one that he liked the best and then he mounted her and fucked her raw and hard. There was a primitive part of my brain for which that resonated powerfully. And as evidenced from the prolonged silence among us, I wasn't the only one. \n\n\"Wow!\" Taz said finally, breaking the quiet. \n\n\"Fuckin' A,\" Elias mumbled. \n\n\"Please tell me you got that...\" Vanessa asked Vihaan and Eric, but it was more of a demand as in, 'you better have caught that or I'll have your asses.' \n\n\"Every juicy second of it,\" Eric called out. \n\nThat night over dinner we laughed and joked about what we'd seen with the bharal. \n\n\"I wonder if the ewes find it as erotically charged as the rams do?\" Taz queried. \n\n\"You mean if the females cum?\" asked Eric, getting right to the point. \n\n\"Well yeah, if you want to be crass about it,\" Taz responded, \"but more if they just find it arousing, to be sniffed and tasted in that way.\" \n\n\"It didn't seem all that romantic to me,\" Jannell chimed in, scrunching up her face. \"The sex lasted for all of ten seconds.\" \n\n\"One of the other characteristics that all mammals share - in addition to having mammary glands that produce milk to feed our babies - is the fact that, gestationally, we all begin life as females,\" said Greg, seemingly unable to relax and turn off his academic voice. \"All mammal embryos start out as females with female genitalia and it is only by the release of male sex hormones that a clitoris, vagina and ovaries are transformed into a penis, ball sack and testes. So physiologically, they have all the necessary equipment to experience orgasms.\" \n\n\"Bro, I really hope you don't talk to your wife about sex like that,\" Elias teased. Everyone started laughing. \n\n\"Greg is right, though,\" I interrupted. \"One question that most male biologists have never explored is that of female orgasms in other mammals. You men have always assumed that only the male orgasm is important.\" \n\n\"I have to admit, I've been making nature films for almost twenty years and I've filmed thousands of animals mating but I've never even thought about it,\" Vihaan admitted. \n\n\"To be fair,\" Elias countered, \"the male orgasm is easy to identify. The female one... not so much.\" \n\n\"Shows how skilled a lover you are,\" Taz retorted. We laughed raucously. \n\n\"Actually a few researchers back in the 70s tried to answer the question of whether females in other species of mammals derive intense pleasure from copulation and experience orgasms,\" Greg informed us, \"but there's no funding for that kind of research any more. What has been demonstrated in a few species - chimps, sheep, and horses - is that digital stimulation of the vagina and manipulation of the clitoris does lead to swelling of the labia, lubrication of the vaginal canal and, if stimulated with just the right touch, contractions inside the vagina.\" \n\n\"If researchers could produce all of that in a lab setting with the animals in a cage, I'm sure their real sex out in the wild must be better,\" offered Vihaan. \n\n\"The researchers or the animals?\" Vanessa asked, her own sense of humor coming to the surface. \n\n\"They probably got 'em drunk first,\" Eric joked. \n\n\"I don't know, guys,\" Jannell shook her head in doubt. \"I've been doing this for a while and when you watch animals mate, it doesn't last very long. Sneeze and you might miss it.\" \n\n\"I'm afraid she's right,\" Greg added. \"Different species employ various amounts of foreplay, but the average copulation duration in mammals is anywhere between 10 seconds and 3 minutes.\" \n\n\"It is hard to imagine any female getting off on that,\" Taz said solemnly. \n\n\"Plus, for many species, the sex can be rather violent: scratching, biting and maiming... you name it,\" Greg added. The Bharal were no different, I thought to myself as I listened to them debate. As erotic as their foreplay was, when the ram found the ewe he wanted to mate with, he head-butted her into position then grabbed her violently around the hips and bit her neck as he fucked her roughly for all of 7 seconds. She managed to escape his grasp but then he hopped back on for a second round that lasted all of 8 seconds. The quality of his pregame was so much better than his final performance - I felt cheated for her. \n\n\"Maybe females in the rest of the animal kingdom are more honest to the fact that rough sex gets them off,\" said Elias, looking like he'd just told a forbidden secret. He made a point of making eye contact with me, trying to gauge my reaction. \n\n\"It's not always the guys roughing up the girls,\" I reminded them, \"just ask any Black Widow, Praying Mantis, and many species of octopus.\" \n\n\"True dat!\" exclaimed Taz. Elias just smiled and gave that universal nod that means, 'touch\u00e9.' \n\n\"There are those species where we know both males and females engage in sex for pleasure and not just for procreation, Bonobo chimps for instance,\" Sonam chimed in as if he'd been waiting for the right time to drop some wisdom. \n\n\"That's right,\" Elias added. \"They do it to strengthen social bonds within the group.\" \n\n\"And surely the clitoris isn't a redundant organ in virtually every other mammalian group save for humans,\" I argued. \"That just wouldn't make sense, and it would be totally inconsistent with how nature does almost everything else. Rather than assuming that humans are some kind of special exception, it is more scientific to assume that similar organs have similar functions across species.\" \n\n\"She's right about that,\" Greg nodded. \n\n\"We know from our own experiences as humans that female arousal makes copulation better for both parties, and female orgasms increase the chance of conception. Why would this not be true across the animal kingdom?\" I argued. \n\n\"Can the girls of other species really be getting off from such brief and rough sex?\" Jannell pondered. \n\n\"If they are, I wonder which aspect turns them on the most?\" Taz continued, following the line of reasoning. \"Is it the musky scent of the males in heat? Is it watching the guys fighting each other for the right to mate with the females? Is it the rough and violent way that males typically mate with them, brief as it is?\" \n\n\"Who knows,\" I said, but it's not what I was thinking. The topic had suddenly become too risky for me to voice my honest opinion in mixed company. Likely all of those factors aroused the females, I thought, but, as much as I hated to admit it, my bet was that it is mostly the rough sex. The feminist in me cringes at voicing this but we girls tend to enjoy a rough ride. \n\nMaybe 'rough' is not the best descriptor. Perhaps a better way to describe the phenomena is that we want our man to be so attracted to us that his need and desire manifest themselves aggressively. But only the men we like! Lord knows we don't want that from all men. Now, I've known my share of women, traumatized by past sexual encounters and unwanted aggression from men, who consequently desire soft and gentle lovers. For me, however, soft and gentle is for foreplay and cuddling afterward. When it comes down to the dirty deed, bite me, spank me and pound me senseless and I'm one happy girl. My problem has always been finding a guy who understands this without being a prick about it. \n\nChapter 4 \n\nThe following night our conversation centered much more around our task at hand - finding and filming the leopards now that we were on the trail of their main food source. \n\n\"Ok,\" Vanessa began, bringing us to attention as we ate. \"Snow leopards are solitary, except for females with cubs. They rear them in dens in the mountains for extended periods. An individual snow leopard lives within a well-defined home range that may vary greatly in size, anywhere from 40 square kilometers (15 square miles) and up to 1,000 square kilometers (386 square miles). It will be hard for us to cover that much territory on day excursions.\" \n\n\"Like most animals, snow leopards use extensive scent marking to communicate with one another,\" I interjected. \n\n\"Yeah, but a terrain with so much harsh freezing winds and snow is not conducive to preserving scent marks, is it?\" Vanessa asked. \"With territories so large and spread out, it could be weeks or even months before another leopard comes along to smell another's scent marking, by which point I'd think the smell would be long gone, right?\" She'd done her homework and I respected her for that. \n\n\"If we just stay on the bharal and put cameras on them where they stay huddled for the night, we'll find the leopards because that's when they do most of their hunting,\" Elias offered. \n\n\"Maybe,\" Taz countered, \"but maybe not. If they've caught one recently they can eat off of that one carcass for weeks. Then if we're not following the right heard, we could miss them altogether.\" \n\n\"Taz is right,\" I added. \"Vanessa asks the right question, though. Snow leopards had to solve the evolutionary communication problem by developing particularly potent urinary, anal, and scent gland emissions and learn how to deposit them strategically so as not to be destroyed by the elements before the next cat comes along.\" Now we were in my domain. For me, the inspiration to try to find and study the snow leopard was a scientific one, all about the power of pheromones. For that reason, I figured that snow leopards were the perfect species to test out my theory about higher orders of sophisticated chemical communication of which animals are capable through their scent-marking practices. \n\nMost cats use trees, bushes and tall grasses for scent marking. However, trees stop growing at elevations above 12,000 feet because of the harsh climate conditions and thinner air when one is up that high. Since snow leopards live at an elevation where there are no trees or bushes to scent mark, they use rocky ledges to rub against and spray. I was betting that if we found those and left our cameras nearby, we'd find our leopards. \n\n\"If we follow the same paths as the sheep,\" I continued, \"and look for rocky outcroppings with a slight overhang between three and four feet off the ground, I bet they'll reek of leopard pee, and that's where we should place our remote cameras.\" \n\n\"Sounds good to me,\" said Vanessa. \"I assume you know how leopard pee smells?\" \n\n\"Taz knows better than me.\" \n\n\"One of my many skills,\" she sighed in mock arrogance, shrugging her shoulders. \n\n\"It'd be great if we could get some samples!\" Greg interjected, way too enthusiastically. \n\n\"I've never seen anybody get so excited about piss and shit,\" Eric said, shaking his head. \"I'd hate to read your FetLife profile.\" Vihaan and Taz fell out laughing while everyone else looked confused. \n\n\"What's FetLife?\" Sonam asked. \n\n\"Yeah, tell us all about it, Eric,\" Elias teased, a sly smile across his face. \n\n\"Cat scat lover seeks sexy kitten for hot, wet fun,\" Taz cracked. More laughter as the rest of us started to get the idea. \n\n\"Very funny, guys,\" Greg replied sarcastically. \n\n\"No dog scat lovers please!\" Vihaan chimed in. He and Taz were rolling on their sides at that point. \n\n\"It's just a uh... dating website,\" Eric answered finally, scratching the back of his head and suddenly not making eye contact with anyone. When Taz and Vihaan stopped laughing they both looked at each other with one cocked eyebrow. I'd have to ask her about it later. \n\n\"Ok, moving right along...\" Vanessa interjected to bring us back on track. \"This sounds promising. No reason why we can't employ both strategies. Tomorrow we reach our base camp, right Sonam?\" \n\n\"Correct you are. Tomorrow will be our toughest day of hiking, with a fair amount of climbing. But at the end of the day we will be at 21,000 feet and we will set up our base of operations there. So get plenty of rest tonight. Tomorrow will be our biggest challenge so far.\" \n\nWe finished up and went back to our tent pods after dinner. Nights in the Himalayas are bitter cold - usually 20-30 degrees colder than during the day. Our tents were separated by less than 12 feet, yet traversing that short distance chills you down to your bones. Under clear skies, however, you will never see a more beautiful starscape. In the night skies of London or Berkeley I'm lucky to see a few dozen stars. In the Himalayas, up so high with no air or light pollution to drown them out, the stars twinkle by the billions. You can even discern the colour differences between those that tint blue, white, yellow or pink. It was breathtaking. \n\nEveryone took a turn in the tent alone to relieve their bladders and bowels. The guys were courteous enough to let Taz and I go first because they took longer. Taz and I went to help collect snow to melt for our drinking water the next day while the guys completed their business. The last one to finish opened the tent flaps on both sides to air it out, then we all got in and sealed it tight to warm it up and get ready for bed. \n\nThis relative lack of privacy really unnerved me in the beginning, but I was starting to get used to it. I had no other choice. No one really prepares you for how intimate a four person tent becomes during a month-long mountain excursion. Even though we each took some alone time after dinner, its different in the middle of the night. If you wake up and have to pee, it's too cold to go outside the tent plus we're not dressed for it, so you just grab your bottle and pee into it and wait until morning to dispose of it. \n\nThe funniest moments came if you happened to be the last person to fall asleep on a given night. As each person drifts off, their muscles relax and, occasionally, they let out the gas they've been holding all evening, trying to be polite. I was grossed out the first time I heard it. Taz and I were sleeping in the middle that night and the sound came from my right, so I knew it had to be her or Greg. Then I heard another come from my left, followed by Taz's faint giggling. What could I do? I started giggling, too. As my laughter increased, the gas that I'd been holding all night slipped out. \n\n\"Oh snap!\" I blurted, then quickly slapped my hand over my mouth as I laughed hysterically. Taz was through. Trying to remain quiet, she was laughing so hard that I could feel her body shaking through the sleeping bag as she lay next to me. \n\n\"I see you never gave up on your pheromone ideas,\" Elias said to me as we changed, taking me out of my memory. I was surprised that he even remembered the exchange we had when I was still a grad student, when he ridiculed my ideas and embarrassed me so. \n\n\"Yup. I think there's a lot more going on with chemical communication than anyone realizes.\" I didn't, however, let on that I had all this gear that I was secretly hauling to collect samples to take back to my lab. \n\n\"You're barking up a dead tree,\" Elias said, mixing his metaphors. \"We already know what animal pheromones communicate: territory, sex, and readiness for mating, whether the females are in estrus and the males in musk, that sort of thing. Their scent markings have been analyzed over and over - you're not gonna find anything more than that.\" \n\n\"But that makes no sense to me,\" I countered. \"When you think about it, most animals possess a sense of smell that is hundreds or even thousands of times more sensitive than the human sense of smell. That seems like overkill for just three narrow bits of information.\" \n\n\"The sensitivity is about picking up those scents over a distance,\" Greg added. \n\n\"I don't think it's either, or,\" I continued. \"Our problem is that we've inherited an arrogant scientific tradition that assumes humans are the only complexly communicative species, and we also assume that the only form of complex communication is language.\" \n\n\"Men thinking that we're the center of the universe and God's special creation,\" Taz offered, having my back. \n\n\"Exactly. I'm merely trying to approach my research without that arrogant baggage. I'm betting that there is an entire world of communications that animals are able to convey chemically - things like health, diet, age, lineage, overall genetic compatibility, fear, aggression, family status (like whether a female is actively rearing cubs), and who knows what else.\" I was betting that snow leopards sprayed some pretty chemically potent stuff, perfect for testing my theory. Now all we had to do was find the leopards. \n\n\"I just hate to see you wasting your time and your talents chasing fool's gold,\" Elias said, shaking his head. He seemed clueless as to just how condescending he was being in that moment. \n\n\"Not only will I prove that animals have this wider array of communication, but eventually I'm going to prove that humans still possess some of these capabilities as well,\" I insisted evenly, trying my best to hide my rising agitation. Elias laughed. \n\n\"Ok, now you're just being ridiculous,\" he said between guffaws. \"I was taking you seriously for a minute. There are no known human pheromones! Study after study has tried to detect them through molecular analysis, starting all the way back in the 1950s, and each and every one of them has come up short.\" \n\n\"A perfume and cologne company started that myth back in the early 1990s in order to patent and sell two molecules that they wanted to advertise as increasing sexual attraction. But those molecules were never verified by strict scientific standards to actually and consistently produce a physical or behavioral response in the receiving individual,\" Greg added. \n\n\"Many evolutionary biologists have differing opinions about this,\" Taz interjected. She was my rock. \"Some argue that humans don't have and make use of pheromones at all, while others argue that humans are simply more complicated in that we may use pheromones in our decision making but just don't rely on them exclusively as some insect and small animal species seem to do.\" \n\n\"Just because we haven't isolated them in a lab doesn't mean they don't exist,\" I insisted. \"That's just more male scientific arrogance. And it belies common sense and the proof of human pheromones that we see every day.\" \n\n\"Such as?\" Elias asked. \n\n\"For instance, by the end of this trip, Taz and I will be on the same menstruation cycle, as will Jannell and Vanessa. This phenomenon takes place in college dormitories and shared living spaces all over the world each and every day, and its due to our bodies chemically communicating with one another.\" \n\n\"She's kinda got you there,\" Greg said, assuming the role of referee. \n\n\"Ha! We'll see,\" is all he said as he crawled into his sleeping bag and turned to get comfortable. Taz squeezed my hand to let me know she was with me then killed the light. Pretty soon the sound of Greg's snoring filled the tent. Once again, I was the last to fall asleep as I lay there lost in my thoughts. Eventually, the chorus of farts as everyone drifted off lulled me out of my thoughts just enough for sleep to overtake me as well. ",
        "Chapter 5 \n\nIt was on pure adrenaline and determination of will that I managed to hobble into base camp, draped over Sonam's and Elias's shoulders who were basically carrying me by that point. My injury had slowed our progress considerably, and darkness was quickly setting in. With darkness came the cold. They left me seated on my backpack while everyone else worked on quickly erecting our tents for shelter from the sub-zero temperatures and the brutal winds. My ankle throbbed in my boot and I knew it wasn't good. I sat there shivering, trying to hold back my tears. The bone-chilling effects of being buried in the snow had not worn off in the least. \n\nVihaan, Ganesh and Jannell got to work preparing our dinner while Eric and our porter Kabir began collecting fresh snow to melt for our water. Sonam and Vanessa began examining me while Greg, Elias and Taz looked on with concern. We were in one of the larger tents that would double as our mini production studio, and Zayan was busy in the corner setting up the butane furnace so my foot would not freeze when they took off my boot. Shivers continued to vibrate through my body though at that point I was just as nervous as I was cold. \n\n\"It's a bad sprain but at least it's not broken,\" Sonam explained after assessing my mobility and level of pain. \"This needs to heal for a few weeks before you can hike again. I'm really sorry, Priya.\" It was all I could do to hold back my tears.  \n\n\"Do we need to take her back down to get her medical attention?\" Taz asked, grabbing hold of my hand and squeezing warmly. \n\n\"Not necessarily,\" Sonam reassured, sensing the anxiety among us. \"I can call for help on the satellite phone. We have rescuers who specialize in this sort of thing, taking injured people safely down the mountain.\" \n\n\"That really sucks, kiddo. I'm sorry,\" Vanessa tried to comfort me. \n\nElias didn't say anything, but took my other hand and squeezed it. There was a pureness to the empathy in his eyes, like he'd be really sad to see me leave. \n\n\"Bloody hell,\" I said dejectedly. \n\n\"We can talk more about it over dinner but right now I need to wrap your ankle up tight, put your sock back on and get it back in your boot before it swells up so much that it no longer fits.\" \n\n\"That sounds like it's gonna be painful,\" I complained. \n\n\"Not as painful as it will be if your foot freezes because we can't get it back in your boot,\" he explained. I guess I couldn't argue with that. \n\nOver dinner, Taz, Vihaan and Ganesh offered to accompany me back down the mountain while the others continued with the work but I insisted that I would just wait for the rescuers so that they all could concentrate on finding the leopards. They needed as many teams out scouting for places to put our cameras as possible, and I didn't want to ruin anyone else's trip. It was settled. \n\nAfter dinner I really had to pee. My ankle had grown more tender and I could barely put any pressure on it without feeling excruciating pain. We had ibuprofen in our medical kits and I took the maximum dose of 800mg right away. They managed to dull the pain if I was sitting and not putting any weight on it, but standing still hurt like hell. There was no way I'd be able to keep my balance and squat to pee, without help. I was still shivering like crazy, and the thought of pulling my pants down, even for a minute, was horrifying. It felt like I would never get warm again. \n\nI whispered in Taz's ear that I needed help and she readily agreed. She and Elias helped me hobble back to our smaller tent. Once inside Taz zipped us in to give us privacy while we started trying to pull down my layers of trousers and fleece. I was on my back, lifting my bum off the ground with my one good foot while Taz tugged. As my bush came into view I saw a look of concern on her face. \n\n\"What is it?\" I asked. \n\n\"Umm,\" she hesitated, biting her bottom lip. \"You just have to pee, right?\" she asked with one raised eyebrow. \n\n\"Oh no! I'm sorry Tazzy, I've got to take a really huge dump,\" I teased her, trying not to laugh. The look of horror on her face was priceless. She tried to contain it but she couldn't. Finally I couldn't hold it any longer, and my smile broke. \"Just pee, you wuss.\" \n\n\"Allah is so merciful,\" she sighed, dropping her head in reverence and looking totally relieved. \n\n\"Some friend you are,\" I teased. \n\n\"I'm sorry, Priya,\" she laughed hysterically, tears coming out of her eyes. \"Of course I'll help you when you need it, I just wasn't ready for all that just yet. You've got to ease me into these things.\" We were both laughing by then. \n\n\"You two sure are having a lot of fun in there!\" Elias called out, apparently waiting just outside. \n\n\"Bet you'd love to come in and help, wouldn't you?\" Taz teased. \n\n\"Well if you insist...\" he replied, and began jiggling the zipper to the tent. I think he was only messing with us, but it was still enough to bring me to a sudden panic. \n\n\"We're just fine!\" I shouted. \"You stay put out there!\" More giggling from Taz, seeing the look of horror on my face just from the prospect. \n\nAs it turned out, helping me pee proved to be a little trickier than we anticipated. Taz knelt behind me with her arms wrapped around my chest under my own, holding me up in a squatting position. I was balanced on my one good foot while my busted ankle I held out in front of me, trying to avoid putting any weight on it. The only problem was that in that position, I couldn't bend forward far enough to see what I was doing and accurately place the bottle to catch my stream. It would be a disaster to miss and pee on our sleeping bags or the floor of the tent. We contemplated having me lay on my back and pee but that position just seemed ready made for a major spill. My bladder wasn't going to hold much longer, so Taz decided to go call Jannell for backup. \n\n\"It seems Jannell is otherwise indisposed in her own tent at the moment,\" Taz reported back to me a minute later. She said to give her five minutes. I doubted I could wait that long. My face twisted up in anguish as I debated with myself what to do. \n\n\"Who is outside?\" I asked. \n\n\"Elias is standing right outside waiting for us in case we need anything,\" she reported. \n\n\"Ok, call him in,\" I relented in desperation. 'This is the last way I wanted him to see me naked,' I sighed to myself in resignation. Could my day get any worse? \n\nElias had a devilish look in his eyes as he climbed in but to my surprise he was a perfect gentleman. Almost. It took me a second to work out just how I wanted to do this in a way that offered the least amount of embarrassment. Finally, I had Elias stand facing me as I held onto him for support while Taz worked on pulling my fleece trousers back down. Then, still with my hands on Elias's shoulders, we both squatted simultaneously. He grabbed me around the ribcage just under my arms to hold up my weight, and I locked my fingers behind his neck for a better grip. Meanwhile, Taz knelt behind me, with my arse in her face, aiming the bottle to my opening to catch my pee when I released it. I would owe her big time. I was mortified to need help in that way but I knew I had to take it. \n\nI expected Elias to be a typical guy, and I had mentally prepared myself for it. I knew that as soon as my pants came down that he would take the opportunity to take a look and check me out. I was surprised to discover just how conflicted my feelings were about it. On the one hand, I was suddenly glad that I was sporting a little afro down there, as all my hair would make it impossible to see my labia and my slit. I was grateful for that added protection of my modesty. On the other hand, there was another part of me that felt that if Elias as going to check out my pussy then I wanted to present her looking and smelling her very best. I was mortified that he would see me in such an unkempt state after a long strenuous day. \n\nTo his credit, Elias looked me directly in my eyes the entire time and never looked down. Maybe what I'd said to him back at the Yeti Mountain Lodge had registered. As Taz pulled my pants down just above my knees, I knew he wanted to. The little sparkle in his eye and the sly smile across his lips told me that he wanted to, but out of respect for my modesty he didn't. I tried to thank him with my own eyes, and let him know how much I appreciated his chivalry. \n\nAs we squatted, his eyes remained locked on mine, and I felt as if he were peering into my very soul. Then I saw it. A tiny little twitch. It was out of the corner of my field of vision so I looked directly at his nose to see if it repeated. Sure enough, there it was again. Mortification returned to me as I realized what those little twitches meant. Nostrils flaring, Elias was smelling me. I drew a deep breath to test the air and to my horror, picked up my own scent. Bloody hell. \n\nGod, I was ripe! Like it was the end of a long, strenuous day and I had just come from the gym. Fuck. My musk wafted thick and pungent in the air, and I watched Elias's chest expand as he took a deeper breath. As he filled his lungs with my essence, the light and playful look in his eyes transformed into something dark and feral. His hands took a firmer grip on my ribcage as his eyelids narrowed and his lips parted ever so slightly, suddenly dry and needing moisture. And the smells would only intensify once I started peeing. \n\nEven though my bladder was uncomfortably full, I couldn't release my flow right away. I was just too nervous. Poor Taz waited patiently holding the bottle under me with my butt stuck in her face. But I was transfixed and held in limbo watching Elias respond to my pungent pheromonal cocktail. He continued to take in ever deeper lung-fulls of air, and as the look on his face slowly transformed into one of raw hunger, I began to realize that far from being put off by my ripeness, he was incredibly turned on. When the tip of his tongue came out to moisten his dry lips, I began to lose my composure. \n\n\"Any day now, Priya,\" came the sarcastic comment from Taz. \"The view is lovely and all but my arm's getting tired.\" I felt bad for her stooped behind me with my arse in her face, but I sure as hell didn't want her trading places with Elias. \n\n\"I... I'm sorry. I'm a little... I'm just nervous, and my bladder freezes up when I'm nervous. I've never peed in front of two people before. It'll come in a second once I calm down,\" I replied, still looking deep into Elias's eyes. His sly smile returned, but it still retained sinister undertones. The animal-like quality of it made me squirm slightly, but I was proud and glad that I could elicit that sort of response. I wondered if my labia were visible from behind. There was no thatch of curly black hair back there to conceal them. If Taz could see them, could she tell how damp they were becoming? It felt to me as though they were slightly swollen which would increase the possibility of them being visible. \n\n\"Relax,\" Elias mouthed silently. \"Pee.\" Though silent, the command was unmistakable. Still I hesitated. He lowered his hands a bit from under my arms to down around my waist then pressed in gently with his thumbs. \"Pee for me, Priya,\" he said in the faintest whisper, just loud enough for me to hear but not Taz. \n\nIt was the \"for me\" that really got to me, not to mention his strong hands around my waist putting pressure to my tummy, gently squeezing the liquid out of me. Before I realized quite what was happening I began to pee, a strong steady stream and as I did I felt more than just the normal relief associated with unleashing one's bladder, but something far more satisfying, something that bordered on a sexual release as well. My damn burst and released the flood waters as my head rolled back and my eyes closed. I was simultaneously embarrassed to openly let go in front of Elias like that but at the same time feeling too much relief to care. \n\n\"Oh fuck!\" I heard Taz yelp, adjusting the bottle to catch my spurting stream. The sound of my jet of urine as it splashed into the plastic container echoed in the night air. \n\n\"You get a little wet down there?\" Elias chuckled. \n\n\"Bitch peed on my hand!\" \n\nMore laughter from Elias. \"Looks like I got the easier job,\" he said, still squeezing more pee out of me. His thumbs were rhythmically pressing in and moving down repeatedly, as if he was milking my body of its moisture. Little did he know... \n\n\"Sorry Taz,\" I croaked out as my stream began to wane. \n\n\"You owe me your first born,\" she retorted, acting more indignant than she really felt. \"It's warming my hand, though,\" she informed us, \"that part's not so bad.\" \n\n\"I'm sure Elias could accommodate you if-\" \n\n\"Fuck off, bitch.\" More chuckles from Elias. \n\n\"I was just trying to be helpful,\" I said cheekily while Elias squeezed the last few drops out of me. I reopened my eyes to find his gaze still fixed on my face. His look told me that he had watched intently the pleasure I experienced from my release with rapt attention. Nostrils still flaring, I couldn't help but imagine how the olfactory portion of his cerebral cortex was attempting to discern between the three different chemical odorants emanating from my body. There was the general musk emitted from the glandular secretions of my pudenda that is collected in and concentrated in pubic hair, then there was the smell of my urine which in addition to waste (discarded nitrates are what give urine its offensive smell) also contains secreted hormones. I was close to ovulating, so I knew my pee would be hormonally charged. Underneath those two scents was the smell of my sexual arousal, and watching Elias's response I knew I was observing scientific proof of a strong pheromonal response. \n\nI wanted to glance down and confirm my suspicion but stopped myself. Instead I reached for the pack of baby wipes. Taz had beaten me to it, wiping my errant pee off of her hand and from around the bottle. As I grabbed one I looked down to wipe myself. My swollen lips glistened through their wispy brunette veil, and I knew the moisture wasn't all urine. My suspicions were confirmed when I slid the baby wipe through my tender lips and felt it slide between my labia in a smooth way that only sexual wetness allows. \n\n\"That's it? No number two?\" Elias asked with faux enthusiasm. \n\n\"Don't give her any ideas, dude!\" Taz croaked, quickly pulling my pants back up over my butt. \n\n\"You two don't fancy helping me with that?\" I joked along, though truthfully the thought mortified me. \n\n\"I'm your girl, Pree - you know this - but I don't know if I'm ready for all that just yet. You've got to ease me into it.\" Poor Taz was hurrying to tie up my fleece pants and secure them in place, as if doing so would somehow shut my bowels down if they were ready to release. \n\n\"I'm sure we could ask 'Poop' to help you instead, that's right up his alley!\" Elias was proud of his double pun and laughed accordingly. \n\n\"Eww!\" Taz and I said simultaneously, both laughing as well. Thankfully, I needed no further help at that moment. I was going to need to figure something out, though. I desperately didn't want to ask anyone to help me with that. \n\nWhen we were ready to go to sleep Sonam came to our tent to check on me. \n\n\"How's your head?\" he asked. \n\n\"Still hurts where the ice struck me.\" \n\n\"Do you feel any pressure or throbbing?\" I thought about it for a second while he shined a little pen light in my pupils. \n\n\"No, it's more of a sharp pain.\" \n\n\"Do you feel confused or foggy headed?\" \n\n\"More sad and depressed, and like it was stupid of me to think that I could pull this off.\" \n\n\"Don't let yourself feel that way,\" he reassured me. \"What happened to you could have happened to the most experienced of climbers. There is no predicting it.\" \n\nI nodded, but it was little consolation to the fact that I was going to miss out on all the action. \n\n\"What about dizziness or any ringing in your ears?\" he continued with his questioning. \n\n\"You suspect she may have a concussion?\" Taz asked. \n\n\"It's one of my concerns, yeah.\" \n\n\"If I do it means you can't let me go to sleep, right?\" \n\n\"I know you're exhausted but I need you to be absolutely truthful with me about these questions, Priya. You could die otherwise.\" \n\n\"I get it,\" I sighed heavily, \"and I certainly don't want that.\" \n\nThrough a few more questions he determined that I likely didn't have a concussion, or if so it was only very mild. It had been just over six hours since the accident, so he felt that it was ok to let me sleep. \n\nI laid there as everyone else drifted off, feeling sad and still trying to process all that had happened to me that day. \n\n------ \n\nThe following morning our group split up into two teams while all I could do is lay there and watch. They were supposed to be two teams of 6 each but now one team was short a biologist. Sonam led one team while Ganesh led the other. Each had a porter: Kabir with Sonam's group and Zayan with Ganesh's. Our camera specialists also split up, Vihaan with Sonam and Eric with Ganesh. Vanessa, Jannell and Elias also went with Ganesh, while Taz and Greg went with Sonam's group. \n\nThey were leaving the tents set up and all the heavy gear behind under my \"watch\" so their hikes would be much easier not carrying so much weight. Sonam also left me with one of the satellite phones. We had four of them, so it didn't put either team in danger to leave one with me. He had called for a rescue but it was going to take the rescue team a few days to reach us. Until then, I was going to catch up on a lot of rest, apparently. \n\n\"You sure you're ok to stay here all day by yourself?\" asked Taz. \n\n\"I'll be fine, you all go and find our cats,\" I insisted. My first order of business would be to find a way to pee and poop on my own. Peei ng was one thing but there was no friggin' way I couldn't ask for help with the latter. \n\n\"Call if the slightest little thing goes wrong or if you feel you need help,\" said Sonam. He also admonished me not to use up all the butane running our little furnaces. To stay warm, I'd have to spend the day huddled under a pile of sleeping bags. They tucked me in with all the food and water I'd need for the day, plus my pee bottle and my poop bag within reach. \n\nI finally broke down and cried as they walked off after zipping me inside the tent. All the hard work I did to get ready for this trip was wasted, and all the research I wanted to do shot to bloody hell. I had the full day ahead of me to do nothing but lay there and think. To make matters worse, my ankle was throbbing with pain and my body felt bruised all over. The fall had taken a greater toll on me than I had realized, and I was feeling the full brunt of it. I grabbed the med kit and took out the bottle of ibuprofen then swallowed four of them. Everything I knew about pheromones raced through my head as I lay there in both mental and emotional torture, waiting for the ibuprofen to kick in. \n\nWhen you think about it, pheromones are quite miraculous. They're like little secreted magic serums that trigger a social or behavioral response in other members of the same species. Pheromones are capable of acting outside the body of the secreting individual to impact the behavior of the receiving individual. Microscopic magic spells of biochemical mind control. Most animals and insects use pheromones, but insect use has been the best documented. Some plants also communicate by using pheromones.  \n\nThere are food pheromones (most commonly used by ants to lead their siblings to a distant source of food) and related mammary pheromones that help babies find their mothers' nipples. There are also alarm pheromones (thus the observation of how some animals are said to be able to \"smell\" fear), and of course sex pheromones that attract mates and signal fertility. \n\nFor most animals, detecting pheromones involves both taste and smell via the olfactory system. Receptor neurons line the nasal cavity and the roof of the mouth and plug directly into the brain via the olfactory bulb. Humans have approximately 10 million of these receptor neurons, while most animals have 3, 4, even 5 times that many. The nerve fibers that leave the olfactory bulb do not project to the brain's cortex but rather to the amygdala, and from there to the hypothalamus. These are the primal parts of our brain that control certain functions and behaviors without conscious thought. Of course, the cortex is the part of the brain that exercises caution and restraint. The fact that olfactory sensory inputs bypass this part of our brains means that our reactions to such stimuli are purely instinctual, circumventing the forebrain's ability to suppress or conceal them. ",
        "Where do these scents we produce come from? Whereas other animals release pheromones equally from their skin, urine, feces, and sometimes their breath, humans have evolved to release most of our pheromones only from the skin. Our scents are largely produced by the skin's apocrine glands which release our skin's natural hair and body oils. These glands develop during puberty and are mostly located adjacent to sweat glands and beneath tufts of hair. They are found everywhere on the body but are concentrated in six areas: the underarms, the pubic, genital, and anal regions, the area around the mouth and lips, the eyelids, the nipples, and the outer ear. \n\nMost of these areas on our bodies have the thickest patches of hair growth, which makes perfect sense, as hair is a very efficient means of spreading one's scent. Our body oils - rich with our unique and individual scent, including our pheromones - coat the surface of our hair follicles which exposes them to more air. That exposure leads to evaporation of the moisture which frees those scents to take flight and find the nostrils of a prospective lover. The fact that body hair and apocrine glands appear simultaneously at puberty could not be an accident. It suggests that body odor and its dispersal is a key factor in sexual development. \n\nTo my thinking, it is also no accident that these are the areas where most oral sexual contact takes place - the mouth, ear, chest, genitals, and anus. As humans, we want to smell, kiss and taste our lovers where their smell is most concentrated. In many species, the most powerful sex pheromones are released from anal glands. In some species of fish, for example, the females choose a mate based on her attraction to the pheromones released by glands on the male's anal fin. Dogs are perhaps the most common example that most people have witnessed. They sniff each other's butts because for their species, some of the most powerful sexual scents are found there. \n\nThis is no less true for humans. Our anal glands produce a powerful musk that is easy to discern and appreciate when we're clean of fecal matter. It is by no coincidence that the human anus is poetically referred to as a rose bud, because the scent it emits can be no less endearing to the olfactory part of our brain. \n\nThe big question is, why are there some people with whom we crave and long to share these intimacies, while the thought of doing so with others we find utterly disgusting? Does physical attraction influence our perception of smell and taste? Or do the smells and pheromones released from our bodies influence how attractive we find another person? Are both true? \n\nObviously for humans we experience physical attraction often long before we have an opportunity to smell that person. My hunch was that smell that seals the deal. We seem to lose our attraction for people who don't smell or taste right to us. When a guy I'm attracted to smells and tastes good, my desire for him is increased tenfold. \n\nAs far as we currently know, most sex pheromones throughout the animal kingdom are produced by the females of each species; only a small percentage of sex attractants are produced by males. It's like nature gave us girls the power to hypnotize men with our scent. Sometimes, we hypnotize other women, too. Mesmer had nothing compared to the scent of a woman aroused. It was in that moment when I had an epiphany. \n\nThere was something about the way that Elias looked at me the night before - nostrils flaring as he took in the scent of my sex while I peed - that stayed with me throughout the day. I couldn't shake the memory from my mind. That, combined with the memory of the goats mating that we watched the day before, kept replaying in my head. A plan started to form in my mind as to how I could make the most of my time stuck in that tent while my colleagues were out chasing the glory denied to me. Maybe the trip didn't have to be a bust for me after all, I thought. As the plan continued to percolate, I wondered if perhaps there was a reason I got injured. In fact, maybe I wouldn't need a rescue crew to come carry me down the mountain. I could make perfect use of my time right there in that tent. \n\nA 1976 study on sleeping babies tested their response when presented with a cotton pad that had been worn by their mothers inside their bras for the previous three hours. When the cotton pad was then put right under their noses, 9 out of 10 sleeping babies salivated and had a suckling response to their mother's scent. When the pads were switched around so that each baby was presented with a pad that did not belong to her/his mother, only 1 baby out of 10 had the suckling response. \n\nThe memory of this study inspired me. Could I get Elias to react in a similar manner when presented with female sex pheromones in his sleep? He who was a non-believer in the efficacy of human sex pheromones? He who had mocked my paper presentation at the evo-bio conference all those years ago? What sweet divine justice that would be! But how would I prove it? It turns out that the answer was sitting right in front of me. \n\nI peeked out of my sleeping bag cocoon and reached for my backpack, braving the freezing cold that had overtaken the tent. \"Thank the Gods,\" I whispered, finding two of the remote motion sensor cameras still inside. The crew had not taken them all, and luckily the ones I was carrying were left behind to set up somewhere else on a different day's excursion. The cameras weren't large - no more than ten centimeters square. They each contained a rechargeable lithium ion battery that could last for a month before needing a new charge. They were also equipped with infrared technology to record at night. Each had a slot for an SD memory card, and we used 128 gigabyte cards in each so they could record in HD without running out of storage. \n\nTo test one, I set it to record and then took it into the warm darkness with me under the pile of sleeping bags. I set it down next to me as I continued to hash out my plan, which got me more and more excited. The 800mg of ibuprofen were having their desired effect and the sharp pain in my ankle had subsided to a dull ache. As I thought more about my scheme, the wetter I got and the louder the sounds coming from between my legs. As my excitement built I repositioned the camera to sit between my legs facing me. I had on my flannel but I wanted to see how well the camera could pick up subtle movements underneath fabric, specifically those of my hand buried in my knickers. Then I laid back and languidly enjoyed imagining Elias's reaction to my plan. There was no hurry - it would be many hours until the others returned. I was able to take my time and build up slowly. \n\nAll of a sudden panic set in, interrupting my excitement. What if he didn't like my smell? What if the most intimate scents of my body did nothing for him, or even worse, turned him off? I had my baby wipes, but I hadn't showered in over a week. My bold audacity to assume that he'd love it began to falter. At the same time, the thought that he would love it made me so aroused that I could clearly hear the wet squishy sounds as my fingers played in my labia. \n\nI pulled my fingers out of my slick folds and gave them a tentative sniff, something I'd been doing religiously since the age of 13. I mostly did it to check for health and cleanliness, but there was also something about the musky richness that fascinated me. It seemed to trigger the firing of a specific set of neurons that resulted in a tiny light-headed sense of euphoria, followed by a nearly irresistible urge to take another whiff. The aroma was concentrated. Definitely more ripe than usual, but it didn't offend, or at least I didn't think so. But would Elias? Would he crave my scent the way young Aaron did in Colorado? \n\n\"No risk, no wickets,\" echoed my father's voice in my head, making reference to his favorite sport. When would I get another such opportunity? I needed to be bold. With one more sniff of my fingers, I steeled my resolve and relaxed back into my imagination. \n\nIt had been more than three weeks since my last orgasm and eventually my need to cum became overwhelming. My last dalliance with Aaron flashed through my head, the memory of how hard he fucked me on our last night together as I held the wet gusset of my panties tightly under his nose. In a flash Aaron's face was gone and it was Elias on top of me. I jammed three fingers into my pussy in rapid succession and furiously rubbed my clit at the same time, trying to match the action of my digits to the image of Elias slamming his hips down into mine. I came explosively, freely screaming out to the mountain as my body was wracked with convulsions. It took a full ten minutes for me to come down completely as I curled into a fetal position, my body still pulsing around my fingers as my hand remained trapped between my thighs. Moisture was everywhere. I'd made a total mess of myself. \n\nTime to put my plan into action. With my relatively clean hand I cleared a small space above my head to let in some light, then located the sleeping bag that belonged to Elias. With my heart beating out of my chest, I searched for the pillow section that extends out a bit from the rest of the bag to offer head and neck support. Making a mental note that I was selecting the section on the left side, I removed my fingers from my pussy and wiped them there. Then I pulled down my flannel and used the same section to wipe up the mess between my thighs. \n\nOnce clean, I grabbed the camera and turned it off then pulled out the memory card. Next I reached for one of the laptops we'd use to check and store the footage caught by our cameras. I inserted the memory card and opened the file. There in black and white was me, at first talking silently to myself as I stared blankly into the darkness, and then there was the view from between my thighs, which looked like two hamsters wrestling under a blanket. Yes, these cameras would work out just fine. \n\nI erased the memory card and inserted it back into the camera, and then thought about how I could strategically place it without notice. I settled on putting it back in my backpack but leaving the bag unzipped, with the eye of the camera pointed out of the hole, and positioning the hole to face us where we slept. My heart was still beating out of my chest. I was nervous, excited, and feeling a twinge of guilt. But I was also committed. No risk, no wickets. \n\nAll that was left for me to do was to find a way to balance on one leg and relieve myself without putting any weight on my sprained ankle. The need was getting urgent - I couldn't put it off any longer... \n\n------ \n\nI had worked out my plan fully by the time the groups returned. I begged Sonam to call off the rescue squad, explaining that I could still be useful as a shut-in by reviewing and sorting the footage on the memory cards we'd collect each day. By the evenings I'd have all relevant footage ready for them to review and could help map out strategies for other places to locate our cameras. After the 2-3 more weeks that we'd be up there, I reasoned, my ankle sprain should heal enough for me to hike down on my own. If not, we could call for a rescue then. \n\nWe discussed the pros and cons of this as a group. Many felt it was a sound idea, but Sonam wanted to examine my ankle again before he agreed to anything, reminding me of the admonishment he gave us the night before we set out to always heed his advice. I dreaded having my ankle unwrapped and exposed to the cold, but I had to suck it up and bear it if I wanted to conduct my research. \n\n\"The cold is actually good for you, to help reduce the swelling,\" Sonam explained. \n\n\"Yeah, I should go collect some snow so we can ice it,\" joked Taz. \n\n\"The bloody hell you will!\" \n\n\"We can use her ankle to melt the snow for our drinking water tomorrow,\" Greg joined in. \n\n\"Eww!\" squealed Jannell, scrunching up her face in a look of disgust. Others laughed. \n\n\"Toe jam soup - breakfast of champions!\" Greg continued. Everyone groaned while Jannell made hurling noises and mimicked a vomit. It was the first time I'd heard Greg crack a joke. It was gross, but I was glad that he seemed to be warming up and feeling comfortable enough to let his humor fly. \n\n\"Is 'toe jam' what I think it is?\" Sonam asked. He was chuckling. \n\n\"If you're thinking something disgusting, then yes,\" I confirmed. \"I hope you're not getting any ideas...\" He chuckled some more. \n\n\"No, I just need to make sure you're healing normally and not getting any worse. If it looks like you need to see a doctor urgently, I'm not taking any risks.\" \n\nOnce the ace bandage wrappings were removed we could see the extensive bruising that had spread around the ankle and back of my foot. \n\n\"Let me see you wiggle your toes,\" Sonam asked me. I did as instructed. He next asked me to bend my foot back and forth, then twist it around. It still hurt but I was able to perform each task. I'm sure all the ibuprofen coursing through my veins helped a lot. \n\n\"Everything looks normal for a sprain of this severity,\" he finally explained. \"I guess you can stay.\" Everyone cheered at that. I had not realized just how much tension I was holding in my muscles with all the anxiety. The relief that I could stay and still be a part of the project was overwhelming. I fell asleep almost immediately, anxious for what the new day would bring. \n\nChapter 6 \n\nThe morning routine the next day seemed to take forever before the teams were off and on their way. It was like they knew I had something that I wanted to do and for which I needed privacy, so they took extra time getting ready. Once we all had breakfast we took out a map to chart out the different areas the two teams would cover for the day. We based our strategy on satellite data we received from the bharal in which we put microchips. Plus, each team had to locate the cameras they placed the day before and swap out the memory cards. Once all that was done and water bottles were topped off, they finally set off and left me to myself. Taz gave me a bit of uplifting info before departing, however. \n\n\"Don't worry, Greg and I are using your strategy to place the cameras. If we find them it will be your ideas that led to our success.\" That made me feel so much better. I hugged her tight before they left. \n\nFinally I had some privacy! The moment Taz walked out of our tent I scrambled quickly over to the motion sensory camera and retracted the SD memory card, then just as quickly scrambled back over to my laptop and inserted the memory card into the reader. Laptop in tow, I returned to my cocoon of sleeping bags and turned it on. A window popped open on my screen displaying the numerous video files on the SD card. \n\nThe camera begins recording whenever there is movement then shuts off when the movement ceases. In each instance, it saves the video as an individual file, to make it easier for one to later sort through and see what you've captured. I was so nervous that my hands were sweaty. I took a deep breath to steel my nerves then hit play. The first video captured us settling in for the night, and the next three showed us shifting and getting comfortable. We tended to be exhausted so there wasn't much tossing and turning, save for Elias. \n\nHe started out lying on his back. The camera captured his head turning back and forth to each side at about 25 minute intervals. Twenty minutes after he turned to his left for a second time, then he rolled over in that direction, planting his face inches from where I'd scent marked the padded headrest section on his sleeping bag. The next video file showed him shifting again until his face was pressed directly into my scent marking. The time stamp on the video read 2:26 AM, five minutes later than his previously captured movement. The rest of us remained still. The movements made by Elias were increasing in frequency in a manner to bring his nose as close as possible to my scent marking, which by that point was filling his lungs and his brain. Like a good scientist, I logged the entries into my journal. \n\nI opened the next video file and watched confused, as I didn't see any movement. The rest of us were still and Elias, still lying on his stomach, seemed to be still as well. His face was in the exact same position, nose down and pressed into my scent marking. I rewound the video and watched more closely, as something obviously had to have triggered the camera to come on and begin recording. Then, near the bottom of the screen, I finally saw it. Subtle up and down movements around the middle of Elias's sleeping bag. \"Oh my god!\" I said out loud as it dawned on me just what was happening. \n\nWarm moisture immediately began to pool in my sex as I sat there watching Elias dry humping the floor of our tent. I wondered if he was still asleep, or had his horniness awakened him by that point. There was no clear way to tell. I quickly entered the dry humping in my journal, however, and made note of the time. \n\nWhat I couldn't be certain of is whether Elias found my scent marking by random chance of his tossing and turning or if he was able to pick up a slight hint of my musk and his turbulent sleep was the result of an effort to get closer to it until he found it. There was only one way to find out: I would have to scent mark his sleeping bag again, only the next time in a different location, and see whether he gravitated to the new spot in his sleep. I was a girl on a mission! \n\nBy the time the last video finished, there was major arousal going on in my pants. I watched the sequence of videos again as I leisurely began to masturbate, so turned on at watching Elias face plant right into the smell of my sex. I let one hand snake up under my shirt to find my nipples while the fingers from my other hand drew lazy circles around my clit. All the while my mind raced thinking through all the possibilities of where I could take this little experiment. Before long I had made another mess between my thighs as I lay convulsing under the sleeping bags. \n\nOnce again I used the pillow section of Elias's sleeping bag to clean up the mess between my legs and on my fingers, only this time I did so on the right side. Then I took out some baby wipes and tried to clean any lingering traces of my scent on the left side from the previous night. Once it was all set, I made note in my journal. \n\nI quickly downloaded the existing video files on the SD card to my laptop and erased the SD card to free up memory. Then I inserted it back into the camera and set the timer to begin recording that evening. \n\nI was filled with a kind of nervous elation and excitement. On the one hand, I felt a twinge of guilt that what I was doing was wrong - it was an unhygienic violation of his personal space where there was a reasonable expectation of privacy. On the other hand, this was the best data demonstrating the power of human pheromones that I'd ever had. This kind of research was notoriously difficult to secure academic funding to conduct. The NIH would never give me a grant for this. Private industry funders would salivate over this, however. Fragrance and bathing product producers would easily get on board with promising preliminary data. I just needed to produce more of it. It was an unethical research design because the subject didn't know he was part of an experiment and had not given his consent. Those were issues I'd have to worry about solving later. \n\nI spent the rest of the day reading and napping until the teams came back. Everyone was giddy and excited to check the footage on the memory cards they collected, unable to wait for me to do so on my own the next day. I took out the laptop and began loading the files from each card as others prepared dinner and gathered snow to melt for our water. I made sure to put my clandestine footage of Elias in a password-protected hidden folder so there could be no accidental mixing of those files with the others. After dinner, we all huddled together to discover what we'd captured. "
    ],
    "authorname": "Jayded_Lust",
    "tags": [
        "cunnilingus",
        "anal sex",
        "smell of sex",
        "analingus",
        "squirting",
        "voyeurism",
        "face sitting",
        "sniffing panties",
        "deep throat",
        "submission"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/scent-marked"
}