{
    "title": "Unbreakable Bond Ch. 11",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nChris Donovan vs. Shane Lewis \n\nDedicated to Ama Potello. Love you to bits Sis.\n\nBonded for life!\n\n***\n\n\"You mean you told someone else that you wanted to break up with me?\" Shane whispered emotionally, feeling not only anger, but shock and humiliation as well. \n\nShane had never felt that stupid in his life. Now he understood everything. Chris' recent remoteness, his disappearance, and general attitude. Chris had wanted out. But why couldn't he simply tell him? To think his boyfriend had actually been contemplating breaking up with him...and didn't even have the decency to tell him to his face. The fact that Chris wanted a break-up was hurting enough. And as if that wasn't bad enough, he'd rather gone telling someone else about it. Shane felt so much pain inside his chest he couldn't breathe.\n\n\"Shane it's not like that.\" Chris said with a groan, moving to stand in front of Shane.\n\n\"Did you or did you not tell Murray that you wanted out?\" Shane's voice was so quiet and cold Chris shivered. Shane sounded lethal.\n\n\"Shane please listen to...\" Chris began desperately but got cut off by a visibly trembling Shane. \n\n\"Just answer the damn question.\" Shane growled.\n\n\"No Shane.\" Chris' voice raised. \"You don't get to do that to me a second time.\" He said angrily. \"You asked me the same trick question when you saw me at the hotel with Peaches. 'Are you saying you've never fucked her?'\" Chris rasped, giving the sentence quotation marks with his fingers. \"How the fuck was I supposed to answer that when I had indeed fucked her before?\"\n\n\"You could have told me you fucked her a long time ago.\" Shane growled, remembering the pain he'd felt at Chris' answer that day.\n\n\"I got angry, Shane. Angry that you could think that of me in the first place. So I chose to tell you the truth...what you wanted to hear.\"\n\n\"And now?\" Shane whispered, breathing harshly. His fists clenched by his sides.\n\n\"It is not a simple yes or no answer, just like that stupid Peaches question.\" Chris growled.\n\n\"Yes it is.\" Shane countered. \"It's either you told him you wanted to break up with me or not. Simple as ABC.\"\n\n\"Would I be here with you if I wanted to break up with...\" \n\n\"You woke up here.\" Shane bellowed. \"You were so drunk you had passed out. Aaron claims you agreed to come here with me but I can bet my last cent, you didn't even know what you were talking about.\"\n\n\"Shane...\"\n\n\"Shut the fuck up and listen to me, you asshole.\" Shane growled. He could barely control his temper. He wanted to lash out at something. The myriad of emotions twirling within him were so intense he couldn't understand how he could still talk. \"I should have known. All the signs were there. You wouldn't talk to me, you lied to me that you were going to sleep at home when you were actually drinking your life away in some hotel. Tell me Chris, was I so sickening that you couldn't stand being with me anymore?\"\n\n\"Baby...\" \n\n\"Don't you dare baby me.\" Shane bellowed. \"Know what hurts me even more? That you couldn't tell me but could tell someone else. Do you have any idea how that feels? I love you with my whole being. I want you to be happy. Whether you deserve to be happy is debatable but silly me wants the very best for you anyway.\" Shane didn't react to Chris' gasp at his words. \"So if you were no longer interested in this relationship, all you had to do was tell me. I would have let you go if that was what you felt would make you happy. It will be difficult but I would have. You didn't have to go discussing leaving me behind my back. Who else did you tell? The guys? Have I been a laughing stock all this while? In fact, do you even love me as you claim you...\"\n\n\"Stop.\" The word tore out of Chris' throat with so much pain and torment, Shane stopped his tirade. \"Are you listening to yourself right now?\" Chris screamed, his hands clenching. \"How can you even ask if I love you? I was having visions, Shane. When I started therapy, all I could see was you...Nick...beaten up. All I had to do was think of you or close my eyes, and that image of you, lying on the floor of my bedroom all bloodied and broken up, would be there. I thought I was the worst thing that has ever happened to you. I thought you would be better off with me out of your life. I don't know why I thought that, but I did. Maybe I was going crazy but...\"\n\n\"What? Pleading temporary insanity now?\" Shane sneered.\n\n\"I wanted to go away and think, Shane.\" Chris sighed deeply, tears clogging his words. \"I just wanted to think. I couldn't do that when I was around you.\" His voice cracked as his eyes welled with tears. \"Not when I was assailed with all those images. In the end I didn't even have to think. I knew I couldn't let you go. Call me selfish but I want you in my life, Shane.\" \n\n\"Really?\"\n\n\"You know I do...\" Chris felt wetness on his cheeks and furiously rubbed it away but they continued to flow. His chest felt so tight he found it hard to breathe.\n\n\"I don't know any such thing.\" Shane growled, and then gave a short humourless laugh. \"You really need to stop talking because every word that drops out of your mouth makes me realize just how stupid you think I am. I'm surprised you actually expect me to believe that crap about thinking through whatever shit and coming to the conclusion that you couldn't be without me? Dude! I have a one hundred and forty IQ and two PHDs and it's pretty hard to insult my intelligence but I think you just did.\" Shane said quietly with a slow shake of his head. \"You could have told me in that hotel that you were not sleeping with that girl and yet you chose to make me believe the worst. That only shows one thing. You were determined to end it.\"\n\nPanic swelled within Chris until he was virtually panting for air. \"Shane please...\" Chris whispered, his cheeks wet with tears.\n\n\"What were you trying to prove with that girl? Push me away? You figured...if I hurt him enough, if I kill his pride, if I push him away as I possibly can, he won't come back.\" Shane shrugged with a sad and resigned look on his face. \"Well congratulations, Chris. Mission accomplished. I'll be out of here by morning.\" \n\n\"Shane... Christ. Don't say that!\" Chris' breath caught on a sob.\n\nWithout another word, Shane turned to go. But at the door he paused and turned around to face Chris. \"Oh and one more thing. I didn't hire Mario. Your housekeeper did.\" With that final parting shot, Shane left the study.\n\n*** \n\nGasping for breath, Chris watched the closed door of the study, willing himself to wake up from whatever nightmare he was trapped in. He felt numb all over but at the same time, felt so much pain within his chest. Had Shane just broken up with him? He'd never seen so much anger and decisiveness on Shane's face as he'd seen moments before. It was as though Shane had made up his mind and there was no going back. Chris allowed himself to slide to the floor, wrapping his arms around himself. He couldn't believe what had just happened. He felt like his world had actually come to an end. \n\n\"Oh my God, no.\" He muttered, shivering as though he were standing in the snow, naked. \"This can't be happening.\" He mumbled. \"I've lost him.\" He whispered as the tears streamed down his cheeks. \n\nAfter sitting on the floor of the study for a while, Chris dragged himself off the floor and got out of the study. As if in a trance, his feet carried him directly to his childhood bedroom, where he'd spent a lot of time with Chris...and where he'd committed the greatest sin ever...in his opinion.\n\nWhen Chris entered the room, he switched on the light and looked around. His room had always been big. Like an adult's room. His father had always said he was only one after all...no siblings...so why not make the most of it? The room was just as he remembered. Except for the LED TV on the wall. Everything had been left as it was all those years ago. Well, those had been his exact orders. It was obvious, however, that the room was cleaned very often as it looked extremely clean. Chris turned to stare at a spot on the carpet. The carpet hadn't been changed but it still looked as good as new. There was no blood stain or anything of that sort but Chris knew exactly where to look...where he'd left Shane lying in blood and snort that night. That night he'd beaten Shane to a pulp and attempted to take his own life afterwards. Chris locked the door after him and walked slowly forward till he got to that spot. \n\nThen he completely broke down.\n\n***\n\nShane came awake, drenched with sweat. He scrubbed at his eyes as he sat up on the bed. He didn't remember having a nightmare but there was a heaviness around his heart that made him so uncomfortable and sad. Then he remembered! Chris. Shane turned to look at Chris' side of the bed and noticed that it didn't look slept in at all. Chris had still not come to bed. Shane turned to the clock on this bedside table and noticed that it was five eleven a.m. Where the fuck was Chris, he thought worriedly. He remembered the tears on Chris' face when he left him in the study earlier and groaned.\n\n\"Shit.\" Shane muttered as he got off the bed and headed towards the bathroom.\n\nShane had gone to bed around a quarter to three a.m. after taking a quick shower. He'd contemplated going back to check up on Chris, remembering his tear-streaked face. But he'd felt too drained after the humiliating revelation and their fight so had fallen into a restless sleep. His plan was to wait till morning to decide whether to leave Florida or to simply move into a hotel till Sunday. Though he preferred the first option, he felt he could at least take it easy in a hotel till Sunday...just to relax. Then at least, he would have had a week's vacation. Chris had still not come up by the time Shane was about to sleep. Well, he'd obviously not been to bed at all. After rinsing his mouth with a minty mouthwash, Shane pulled on sweatpants and t-shirt and went in search of Chris.\n\nChris wasn't in the study. Shane went to every possible place he thought Chris could be but couldn't find him. He went outside but the car was still parked, an indication that Chris hadn't gone out of the house either. Shane had never felt so much panic as he felt at that particular moment. He couldn't help but be angry at himself for leaving Chris in that state. He should have known better than to do that, knowing what Chris had tried to do to himself the first time he thought he'd hurt and in effect, lost Shane. \n\n\"Oh God, no.\" Shane groaned as he ran back to the study to check the drawer in which he'd seen Chris putting his father's gun. He almost passed out with relief when he found it inside the drawer. \"Where the fuck are you, you idiot?\" Shane muttered to himself. He just wanted to find Chris...needed to see that he was okay. \"His room.\" Shane mumbled suddenly, and broke into a run.\n\n\"Chris?\" Shane called out when he tried to open the door and realized it was locked. He knew Chris was in there because he could hear him sobbing. \"Chris, open the door.\" Shane couldn't mask the desperation in his voice. \"Please.\" He pleaded but Chris didn't open the door.\n\nShane contemplated going to ask the caretaker, Jon, for a spare key. But apart from the fact that he didn't want to alarm the guy, he knew that once the key inside remained in the keyhole, he couldn't open it with another key from outside.\n\n\"If you don't open this door, I'm going to break it in, Chris.\" Shane growled. \"Come on, open it.\"\n\n***\n\nInside his childhood bedroom, Chris tried to stop his sobs, knowing Shane could hear him and that it was hurting him to hear him cry just as he couldn't stand seeing Shane cry. He tried to move, to open the door for Shane but he couldn't seem to control any part of his body...couldn't get his limbs to obey him. He couldn't recall how long he'd been on the floor, sobbing his heart out. Try as he had, he just couldn't seem to stop his tears. His throat hurt, his whole body hurt but he couldn't stop sobbing. He felt like he'd lost everything. And he couldn't help but acknowledge the fact that he'd brought everything upon himself. \n\nChris heard Shane threaten to break down the door and really tried to move. Though he certainly didn't want Shane to see him in that state, he didn't want Shane to destroy the door either. He rolled onto his hands and knees and tried to crawl toward the door but collapsed on the floor, racked by fresh tears.\n\nWhen Chris heard the first kick, he groaned and covered his face with his palms, sobbing into his palms. Fuck, why couldn't he just stop, Chris asked himself angrily. There was a second kick, then the door opened. \n\n\"Chris...\" Chris heard Shane say his name and sucked in a sharp inhalation which ended in more sobs.\n\nThen Shane was kneeling in front of Chris and pulling him into his arms. Chris cried even harder as Shane rocked him gently. Shane didn't bother hiding his own tears. He remembered clearly what had happened between them in that room. He recalled the feeling of Chris being angry at him, the possibility of Chris not wanting him as a friend anymore and not having Chris in his life again and felt darkness suffocate him. Surely death would be better than that feeling, Shane thought. He sure as fuck wasn't ready to travel that road ever again. He'd been ready to let Chris have his way. If he wanted out of his life, Shane was ready to let him go. But now, being in that room, feeling the pain he'd felt all those years ago... Shane was ready to believe Chris' words about wanting to be with him even if Chris hadn't meant it because Shane never wanted to feel that way again. Shane was ready to take whatever Chris could offer because he wasn't going to allow himself to go through that pain again. Hell, he wouldn't survive it. \n\nShane held Chris, allowing him to cry till the sobs stopped on their own accord. Chris needed that. They both needed that. Chris didn't need to apologize for what he'd done all those years ago. The two men understood each other. Nothing was important. They had each other and that was all that mattered. Shane turned his head to look at the time on the bedside table. It was seven thirty-two a.m. \n\n\"You need to get some sleep, baby.\" Shane murmured into Chris' hair.\n\nChris tried to talk but had to clear his throat before his words could be audible. \"Stay with me.\"\n\n\"I'm not going anywhere.\" Shane said. \"Come on, get up.\" Shane pulled Chris up and led him to the bed.\n\nShane pulled off Chris' boots, socks, jeans and that sexy red v-neck t-shirt that looked so good on him, leaving on only his sexy boxer briefs. Then Shane took off his own t-shirt and sweats, leaving his boxer briefs too, and then got into bed and pulled the covers over their bodies. Chris wriggled till he was comfortable, with his head resting on Shane's shoulder and enjoying the feel of Shane's fingers combing tenderly through his hair. Save for the occasional spasm in Chris' breathing due to crying for so long, there was a comfortable silence. Till Chris broke it.\n\n\"I love you to death, Shane.\" Chris breathed. \"I really do.\" His voice cracked and Shane instinctively tightened his hold on him. \"And I'm not going to allow you to walk out of my life.\"\n\n\"Shh... I know.\" Shane murmured. \"Forgive me for all that crap I spewed in the study. I knew what you were telling me was the truth. I was just so damn hurt and angry.\"\n\n\"And mean.\" Chris whispered, drawing a chuckle from Shane.\n\n\"Remember you said I could give you stress? Well, this is me giving you fucking stress.\"\n\n\"That wasn't stress, Shane.\" Chris said quietly. \"That was you ripping my heart out. You were doing what you've warned me never to do to myself. Those words...\" \n\n\"God, baby I'm so sorry.\" Shane said, hugging Chris tightly to him. \"I was hurting and lashing out. Forgive me.\" He said, pressing a kiss against Chris' hair. \"I'm still mad at you though.\" He murmured after a while.\n\n\"I know. I'm sorry I led you to believe I was home when I wasn't.\" Chris sighed.\n\n\"And...\" Shane prompted.\n\n\"And for making you believe I was fucking Peaches.\" Chris said with a smile in his voice. \n\n\"And...\"\n\n\"Ow come on...\" Chris groaned.\n\n\"Mario.\" But Shane felt Chris tense up against him. \"There's nothing there, Chris.\" He said softly.\n\n\"He wants you.\" Chris growled.\n\n\"Well, I don't know about that. But even if he does, I only have eyes for you and you know it.\"\n\n\"I know.\" Chris sighed, wondering why he wasn't pointing out the fact that it was Shane who'd made an issues about him wanting to fuck John first. But Chris knew deep down that it wasn't the same thing. Whilst Shane had merely been referring to the erotic nature of their dance, he had been jealous of Shane's relationship with Mario.\n\nBending his head, Shane pressed his lips to Chris' forehead. \"You're all I want, Chris. There's no one else. There will never be anyone else. Got that?\"\n\nChris nodded. \"I'm sorry.\" He muttered. \"Still angry?\"\n\n\"Hell, yeah.\" Shane chuckled. \"And still in love with you.\"\n\n\"Thank God.\" Chris gave a mock gasp, making Shane burst into laughter. \n\n\"Now sleep.\" Shane said softly, resting his cheek on top of Chris' head. \"I'll be here when you wake up.\n\nAnd even as Chris drifted off into a deep sleep, Shane continued to run his fingers through his hair, looking down at his face, all innocent and vulnerable in sleep and falling even harder for him. Chris was and would always remain the center of his world. Nothing could change that.\n\n***\n\nChris stretched and opened his eyes to Shane's amused eyes on him. \"Hey.\" He murmured.\n\n\"Hey yourself.\" Shane grinned. \"How'd you sleep?\"\n\n\"Like a baby.\" Chris yawned. \"Fuck, I need a shower. I feel so sticky.\"\n\n\"Why don't you hit the showers here?\" Shane said, leaning down to peck Chris lightly on the lip. \"I'll go get you something to eat.\" Shane rolled out of bed and turned towards the door.\n\n\"Hey Shane?\" Chris called out as he got out of bed too. \n\n\"Yeah?\"\n\n\"Thank you.\" Chris said, moving towards Shane, who promptly opened his arms to him. \"Thanks for everything.\" Chris muttered with so much feeling against Shane's neck.\n\nThey hugged each other fiercely till Shane broke their embrace. \"I love you.\" He whispered.\n\n\"Don't ever stop.\" Chris responded.\n\n***\n\nBy the time Chris came out of the shower with a towel wrapped around his waist, the bed had been made with fresh sheets and on it was his deodorant spray, boxer briefs, a grey sweatpants, a white t-shirt and a note on the pillow which said he should relax. Chris smiled at the note and dressed up. Then he turned on the forty-two inch LED television on the wall. He sat back and wondered what Shane was up to as he flicked through the channels.\n\nShane came into the room after a while, followed by Isabel, Jon's wife who took care of the house with her husband. Whilst Isabel pushed a trolley laden with assorted foods which smelt so good Chris' stomach growled, Shane held a bottle of wine and two wine glasses. He'd obviously taken a shower too as he now wore cargo shorts and a t-shirt. And as usual, Shane looked hot. Chris tore him eyes off his man with difficulty and focused on the food.\n\n\"Wow.\" Chris breathed. \"That's a lot of food. Hello Isabel. Thanks so much for the food. I'm famished.\" He laughed too as Isabel began to laugh.\n\n\"That's all Chef Mario.\" She said, arranging the food on the table in the room. \"He's simply the best.\"\n\nChris' eyes went to Shane's at Isabel's comment. He saw the amused smirk on Shane's face and flipped him off, making Shane burst into laughter.\n\n\"Thank you Isabel.\" Shane chuckled. \"Please leave the trolley.\" He added when Isabel started to pull the trolley away. \"Come on let's eat.\" He said to Chris as he opened the bottle of wine.\n\nThey enjoyed their meal, happily reminiscing about the fun they'd had in the house all those years ago. During their earlier tour of the house, they had both remembered but hadn't said much due to the tension between them. Now they reminisced and laughed whilst enjoying their meal. At a point, Chris had laughed so hard he'd began to choke, scaring he bejesus out of Shane.",
        "Shane was by his side in an instant, pushing a glass of water against his lips. \"Drink.\" He watched as Chris drank the water. \"You okay?\" Shane asked with concern.\n\n\"I'm fine.\" Chris said, clearing his throat. \"Damn, we had some real good times in this house.\"\n\n\"We sure did.\" Shane said as he went back to his seat.\n\n\"And I enjoyed it more because you were here, Shane.\" Chris added quietly, watching as Shane smiled that smile that never ceased to make his heart pound faster. \"I'm sorry for what I did to ruin it.\"\n\n\"We've already been over that, Chris.\" Shane said softly. \"I know how sorry you are. For what it's worth, I'm sorry too.\"\n\n\"For what?\" Chris asked looking curious.\n\n\"Well...for blowing your mind too early I guess.\" He drawled.\n\nThere was a moment of silence. Then both men erupted into laughter. \"You are nuts.\" Chris said in between laughter. \"But seriously, that is hands down my highest mind-blowing experience ever.\" Chris groaned with a slow shake of his head. He had a faraway look in his eyes, an indication that he was recalling what went down between them all that time ago.\n\n\"Really?\" Shane asked, sounding incredulous. \"After all the sinful things we've done to each other's bodies, that still remain your highest?\"\n\n\"Just the thought of it never ceases to make me hard.\" Chris groaned, pushing his chair back and getting to his feet. And the obscene tent at his groin left little to the imagination. \"See what I mean?\" Chris husked as he threw a leg across Shane's thigh and straddled him. Then he coiled his arms around Shane's neck and leaned in to take his mouth in a kiss so hot they both trembled. \n\nShane eventually broke off the kiss. \"What are you doing?\" He whispered, looking into Chris' lust-laden eyes with his own dazed ones.\n\nFor a second, Chris looked surprised at the question, then he smiled and kissed Shane again, rocking his arse on the unmistakable hardness he felt beneath his arse. \"What does it look like I'm doing?\" Chris whispered against Shane's wet and swollen lips. \"Trying to get the love of my life to blow my mind again.\" He murmured, grinding his hard-on against Shane, his sweats already wet with his precum. \n\n\"Think I can still blow your mind?\" Shane asked, leaning back with an amused look in his aroused eyes. \"Didn't look that way to me yesterday.\"\n\n\"What do you mean?\" Chris asked with a slight frown, still grinding against Shane.\n\n\"Stop that.\" Shane held Chris hips to stop his cum-inducing movement. \"You gave me one of the greatest fucks of my life, and didn't even orgasm.\" All the amusement had vanished from Shane's eyes at that point. \"What the fuck was that?\"\n\nSilence hung between them. Chris' eyes were widened in bewilderment. His face was still flushed with arousal, his sexily swollen lips parted in stunned guilt. Shane thought Chris had never looked sexier. A myriad of emotions flashed across Chris' face. The full meaning of what he done...or hadn't allowed himself to do finally hitting him. \n\n\"Shane, I was angry and...I had so much on my chest and...I wanted to...I needed to hear what was on your mind...why you had shut me out...I wanted to...Fuck, I'm sorry...I was tied up in knots inside...God, Shane I just couldn't come. I wanted to, God knows how much I wanted to but...\"\n\n\"You look so cute and sexy when you're wrong,\" Shane muttered and kissed Chris. \"And flustered.\" Another kiss. \"And I'm going to enjoy watching you squirm because I'm not going to get you off anytime soon.\" A longer kiss.\n\n\"Ow come on Shane.\" Chris groaned against Shane's mouth. \"I said I was sorry.\" He whimpered.\n\n\"Well, saying sorry is not going to get you out of this one.\" Shane said, getting to his feet with his arms tightly around Chris' waist to ensure he didn't fall down. \"That was the greatest insult you could have given me, Chris.\" He gave him a quick kiss and leaned his forehead against Chris'. \"And I'm not going to let you off the hook easily.\"\n\nChris' hands went to the sides of Shane's head to hold him when Shane made to move away from him. \"I'm sorry, Shane.\" He whispered. \"So sorry.\" The remorse in Chris' voice was so palpable it could have been cut with a knife.\n\n\"Still not letting you off the hook.\" Shane murmured. \n\n\"I don't care.\" Chris answered quickly. \"I deserve whatever punishment you want to give me. Just know that I'm very sorry for what I did.\"\n\n\"Apology accepted.\" Shane grinned.\n\n\"And the punishment?\" Chris asked with his fingers crossed on both sides of Shane's face. Shane didn't miss it.\n\n\"Didn't you just say you deserve whatever punish...\"\n\n\"Damn!\" Chris swore. \"I had to try.\" He laughed softly and kissed Shane soundly. \"One more thing Shane.\"\n\n\"Lay it on me.\" Shane said, tightening his hold on Chris.\n\n\"Please don't shut me out when we have problems.\" Chris said quietly. \"It kills me.\"\n\n\"You started it.\" Shane murmured. \"Does the name Four Seasons ring a bell?\" There was an amused twinkle in Shane's eyes.\n\n\"Ouch!\" Chris couldn't mask the hurt that flashed in his eyes.\n\n\"Hey, don't mind me.\" Shane bumped their foreheads together. \"I was out of line for keeping things bottled in and I'm sorry. It won't happen again.\"\n\n\"Thanks.\" Chris' voice was barely above a whisper.\n\n\"And I expect the same from you.\" Shane added. \"Chris, no matter what the problem is, I expect us to be able to talk about it. When I had problems in the initial stages of therapy, you were there to help me through it because I told you about it.\"\n\n\"Yeah. After going MIA and making me abandon my business partners.\" Chris drawled.\n\n\"But I still told you about it and you helped.\" Shane said urgently. \"That's how it's supposed to be. I gave you the silent treatment because I was so angry and hurt I dreaded what would come out of my mouth if I'd opened it.\"\n\n\"But you didn't have any trouble opening it to Mario.\" Chris muttered, making Shane give a deep sigh.\n\n\"I'm not in love with him. Neither had he ripped my heart out with his actions.\" Shane said quietly.\n\n\"I know.\" Chris smiled. \"I promise to open up whenever I have problems.\"\n\n\"You've promised before.\" Shane growled.\n\n\"I'll try harder to do that this time. Hell, I'll even tell you when I can't find my stapler at work.\" He laughed.\n\n\"You have your secretary for that asshole. Now move. I have to pack this stuff off the table, Chris.\" Shane muttered against Chris' lips, drawing a whimper of protest from Chris.\n\n\"Really?\"\n\n\"Really.\" Shane laughed, reaching for the trolley. \"I have a surprise for you.\"\n\n\"Then I'm going to help.\" Chris grinned and began packing the plates. \n\nIsabel followed Shane into the room to clean the table when Shane came back from wheeling the trolley to the kitchen. He brought a bottle of Hennessey for him and Chris which he opened whilst Isabel worked. When she left, Shane motioned for Chris to join him on the carpet as he poured shots into their glasses. Shane picked up his glass and downed the content at a go and poured himself another. Chris raised an eyebrow at that but did same.\n\n\"Ready?\" Shane rasped, but Chris merely shrugged, looking curious. Then Shane brought out the box of dominos from under the bed.\n\n\"Fuck!\" Chris whispered. \"How did you...it was in the safe...\"\n\n\"I took it when I went to get the keys.\" Shane said smugly.\n\n\"But how...\" Chris looked shocked.\n\n\"You mean how did I know the password? N.I.C.K.? Dude, I got it on just the first try.\"\n\nChris moved so fast Shane didn't see him coming. He slammed his mouth on Shane's and kissed the living daylights out of him. When they eventually came up for a much needed air, Chris scattered kisses all over Shane's face.\n\n\"What was that for?\" Shane gasped.\n\n\"I love you.\" Chris simply hugged Shane, sighing with contentment when Shane wrapped his arms around him and hugged him back. \"I love you so much it hurts sometimes.\"\n\n\"The feeling is mutual, baby.\" Shane muttered. \"Ready to get your arse kicked?\" He grinned.\n\n\"You sure the playing field is level?\" Chris whispered against Shane's lips. \"Seeing as one of us has a double PHD and an IQ of...what was it again? A hundred and...\"\n\n\"Shut up.\" Shane burst into laughter. \"I'm so sorry about that. I was so blinded by anger what I was saying made a lot of sense at the time. Now it sounds plain stupid.\"\n\n\"Well, I don't need some test to know my man is brilliant. I knew even when we were kids. Hell, I taught you how to play this goddamn game but you whipped my arse all the fucking time.\" Chris groaned.\n\n\"Scared I'm going to whip your arse again?\" Shane teased.\n\nChris gave Shane a smoldering look from beneath his lashed. \"You can do whatever you want with my arse, baby. I'm never gonna complain.\" Then they were kissing again. \n\n\"Fuck.\" Shane growled as he tore his mouth away from Chris'. \"Trying to get out of the punishment I see.\" His breath came out in pants.\n\n\"Is it working?\" Chris whimpered, burying his face in Shane's neck and sucking up a mark on his sensitive flesh.\n\nShane shivered. \"Hell yeah.\" He husked. \"But the fact still remains that you emasculated me by doing that. And you have to pay.\" Shane said with a devilishly mischievous look in his eyes.\n\n\"Jerk.\" Chris muttered and moved off Shane to sit on the carpet. He opened the box of dominos and looked up into his boyfriend's laughing eyes, challengingly. \"It's on!\"\n\nAnd just as they used to do all those years ago...in the same room...on the same spot, they played for hours, both so engrossed in the game it was as if they were kids again. When Isabel knocked on the door and asked them whether they were ready to eat supper, both men were shocked it was that late already. After eating dinner in the room, Shane and Chris cuddled up in bed and watched TV for a while, and then went back to the dominos. Around midnight, they slotted in the movie, 'Endless Love', which they had been watching on that fateful night. Though both men had finally watched the full movie at a point in their lives, they watched it again but this time, together as they never got to finish watching it that night. Chris cried, not because of the sweetness of the movie, but because of what he'd done during the movie all those years ago. Shane held him, rocking him gently, allowing him to cry it out. And Chris felt drained but a whole lot better afterwards. \n\n\"I love you.\" Chris whispered as he drifted off to sleep after the movie.\n\n\"I know. And I love you right back.\" Shane whispered back.\n\nFor the next five days, Chris and Shane had eyes for nothing and no one but each other. It virtually felt as though they were on a honeymoon. They talked about everything, got to really know each other, catch up on every relevant thing they'd missed in each other's lives for all those years they'd spent apart. There were things they learnt about each other that surprised them. They felt closer to each other, freer with each other, totally in sync with each other, and as strangely as it seemed to both of them, they fell even more in love. And they didn't even have sex.\n\n\"I'm really not looking forward to going back to all that...noise and work.\" Chris murmured, playing with the hairs around Shane's nipple.\n\n\"Hmm...\" Shane hummed in answer to what Chris said. Then a soft sound escaped him. \"I...I back...work.\" \n\nThey were sitting on the patio outside, taking in the wonderful scenery, with Shane's head in Chris' lap. Ignoring his protests, Chris had undone the top buttons on Shane's shirt and stuck his hand in there to play with his nipples, and it was driving Shane crazy. From the naughty smile on Chris' face, Shane knew Chris was very much aware of the effect what he was doing was having on him and was enjoying watching him squirm. Fuck!\n\n\"I didn't catch what you said.\" Chris murmured, turning his head to look at Shane's hardness against his thighs, inside his jeans. It looked painfully hard and mouthwateringly sexy as fuck. \n\n\"Fuck you.\" Shane laughed softly and groaned when he felt Chris' fingers begin to rub his hardness through his jeans. \"Oh God, Chris...\" Shane breathed.\n\nChris leaned down and took Shane's mouth in a kiss so soft and sensual it blew Shane's mind. As they kissed, Chris unzipped Shane and slipped his hand inside to stroke his hard leaking cock. Shane moaned into the kiss and his hips jerked as he fucked himself into Chris' hand. He wanted Chris so bad it was driving him insane. Then...\n\n\"Damn, I really feel like a swim.\" Chris broke off the kiss and murmured against Shane's lips. \"Come on, you'll love it.\" Chris zipped Shane up and pushed him up. \n\nShane looked like he was going to combust with frustration. But Chris was already up and heading into the house. That was supposed to be his fucking role, Shane thought frustrated. Since pronouncing a 'no orgasm' punishment on Chris, Shane had never passed an opportunity to tease Chris ruthlessly. When Chris least expected it, Shane would strike...touch him, fondle him, get him close to release, and then leave him on the brink. Shane did that a number of times in a day and it always drove Chris crazy. Once, he'd actually woken Chris with his hot mouth on his dick. Chris had gotten so into it that when Shane had abruptly gotten off his cock, preventing his release, Chris had rained curses on him. Shane still smiled whenever he remembered that morning. And that was how it had been for their past five days of relaxed bliss. But arousing Chris never failed to arouse Shane himself. Though sometimes it was difficult for Shane to pull back since he wanted Chris so badly too, Chris' reaction after each teasing was always worth Shane's own blue balls. But at that moment, Shane couldn't help but feel that Chris was now turning the tables on him. Fuck!\n\nChris was inside the house for a while. When he finally came back out in his swim trunks, Shane was still sitting where he'd left him.\n\n\"Hey, I brought you swim shorts.\" Chris threw the shorts to Shane and started moving towards the sea. \"Would have loved to go skinny-dipping but wouldn't wanna scandalize Isabel as I don't know the time she and Jon will get back.\" Chris threw over his shoulders. That whole stretch around the house was private property so Chris could have comfortably decided to go skinny dipping.\n\nShane turned to look at Chris then and gasped. He wasn't at all prepared for what he saw. Chris was in a baby-blue short, low waist, body hugging swim trunks that had Shane salivating and getting short of breath. And his arse in that sexy trunk was out of this world. Though Shane would have loved to see Chris bared-arsed, that sexy butt in the equally sexy swim trunks was even hotter.\n\n\"Shit.\" Shane breathed as he stood and headed for the changing room. \n\nThey swam for a very long time, splashing each other and simply having fun. Shane got out first and went to sit on a dry spot with his back to the stylish marble curb leading to the house. As he toweled himself dry, he watched Chris swim. He couldn't help but admire Chris' beautiful body. The way his sexy abs and biceps flexed as he moved through the water, hard and rippling with muscle. The man was so boldly masculine and gorgeous. Shane felt himself getting hard and groaned. For someone who was determined to hold out on Chris, drive the man out of his mind with want, he sure was doing a fine job Shane thought sarcastically. He couldn't think straight, seeing all that hot, mouthwateringly delicious body of Chris on display. He was blinded by so much lust he was contemplating damning his so called punishment and ravishing Chris, right there on the beach. Where was the punishment when he the punisher was suffering so much? Shane watched as Chris finally got out of the water and headed towards him with a grin. \n\n\"Fuck, I enjoyed that.\" Chris laughed, flopping down beside Shane and snatching the towel to wipe his hair. \"That was f...\" Chris trailed off when his eyes landed on Shane's bulge. The man was so hard Chris could see his cock jerk inside his wet black swim shorts. His plan couldn't have gone better, Chris thought smugly. Looking at Shane's throbbing length, Chris got so hard so fast he felt dizzy. \"You're so damn stubborn.\" Chris breathed as he reached for the cord on Shane's shorts. \n\n\"Chris...\" Shane groaned in a feeble protest when his mammoth cock was released to the cool sea breeze. \"I don't think...\" He began when Chris leaned down, his intentions clear.\n\n\"Shut the fuck up, Shane.\" Chris growled just as he engulfed about half of Shane's cock in his hot, wet mouth.\n\n\"Oh fuck!\" Shane threw his head back with a lustful moan as his hands went to Chris' head. \"So good.\"\n\nChris sucked hard, getting Shane even harder and wet. He wasn't bothered by the salty taste of the sea water at all. It felt so fucking good to feel Shane's cock in his mouth after such a long time he wouldn't have given a rat's arse if Shane's cock had tasted spicy. He'd missed it so damned much. Chris was so much into sucking Shane he almost forgot his main goal till he heard Shane gasp that he was close. Chris immediately got of Shane's cock and moved to straddle his thighs. Then he grabbed Shane's head and kissed him fiercely. \n\n\"I know this was supposed to be my punishment, baby.\" Chris murmured against Shane's mouth. \"But we will both go fucking insane if you don't take me right-fucking-now.\" He rasped as he stuck both of his hands beneath his arse.\n\nWhen Shane heard the sound of tearing, his eyes widened with incredulity. \"I loved those trunks, you idiot.\" Shane growled, drawing a breathless chuckle from Chris. \n\n\"Isabel got them for me.\" Chris murmured as he took hold of Shane's cock and moved it in line with his already lubed up hole. \"She got it in six different colours.\" He rubbed the head of Shane's leaking cock against his twitching hole.\n\n\"Oh fuck.\" Shane gasped. \"I love this colour on you.\" Shane's eyes were closed in sheer pleasure.\n\n\"There's one more of this colour.\" Chris breathed huskily. \"It's a pack of twelve.\" Even his voice sounded so damn seductive Shane moaned. \"Two of each colour.\" Chris began to sink slowly onto Shane's pulsing cock. \n\n\"Sweet Lord. Baby you know you can't do this without lube.\" Shane gasped even as he felt Chris' hot tight channel slowly swallow up his cock.\n\n\"Wanna bet?\" Chris gasped. \"Fuck, you feel so good. I missed you so fucking much.\" Chris watched from beneath heavy lids as Shane's eyes opened in surprise, the realization of just how prepared Chris was, flashing in his eyes.\n\n\"You sly fox.\" Shane husked just as he bottomed out in the perfectly slicked up channel. \"You planned this.\" Then taking hold of Chris' hips, Shane thrust up, slamming into the pleasure button embedded deep inside Chris. Chris came undone.\n\n\"Shane...\" Chris cried out as he threw his head back in sheer animalistic ecstasy. Release had never been sweeter. It had been so long he'd virtually forgotten just how good it felt to come. Surely that had to be the fastest orgasm in the history of orgasms, Chris couldn't help but think as he kept shooting. \n\nEven as his body writhed in ecstatic release, Chris sought Shane's mouth. He needed that mouth like he needed air. His cock, which was stuck between the band of his swim trunks and his six-pac, shot out cum as far as his chin. And even after he stopped spurting, he didn't lose his hard-on for even a second. Chris only felt more energized now that he'd gotten that initial release out of the way. He looked into Shane's eyes with a naughty smile.\n\n\"Ready?\" Chris husked.\n\nThen at Shane's nod, he proceeded to give Shane the fuck of his life. Chris rocked, gyrated, bounced and simply fucked Shane's brains out. Anyone observing their tryst from their sides would have thought Chris was merely bouncing on Shane's lap, or goofing around as Chris' swim trucks was in place. He'd only opened up just enough space along the seam to enable Shane's cock get to his hole. But someone watching from behind Chris or Shane would know exactly what was happening. From behind Chris, no one would have missed the mammoth cock appearing and disappearing in and out of Chris. And the erotic movement of the two men, from the angle behind Shane, left little to the imagination. And that was exactly what Chef Mario saw.",
        "When Chris looked towards the house and saw Mario watching them, a bolt of excitement so intense it drew a gasp from him, shot through him. He instinctively tightened around Shane, causing Shane to throw his head back in pleasure as he let out an ecstatic cry. Chris wrapped his arms around Shane's neck and pressed his temple to Shane's, and then with his eyes locked on Mario's he slammed his hips into Shane's, pumping that tight channel up and down the rigid length, taking complete control of the fuck. Chris knew he was acting like a slut but he couldn't help it. Let Mario watch and know that Shane was his, he thought smugly. But Chris lost total control at the next words that fell from Shane's lips.\n\n\"Damn, I love your tight hole around my cock.\" Shane growled as his fingers dug into Chris' hips, yanking his hips down as he thrust upward, shoving deep into him. \"Love riding my big black cock? That tight, hot, satiny, insatiable chute is milking the fuck out of my baby-maker.\" Shane was in a world of his own. His eyes wasn't focused enough to notice the shock on Chris' face. \"Feel me nailing that sweet, cum-triggering button deep inside you?\" He husked as he hammered Chris' pleasure button head-on with each upward thrust. \"You're going to make me come so fucking hard. Want me to breed that arse, baby? Tell me you're ready for my cum.\"\n\n\"Oh shit, dude!\" Chris gasped. Shane had never said anything so dirty during sex. He was always the perfect gentleman. But this Shane...this dirty-talking Shane, was causing Chris to feel things he'd never felt before. The combination of those words and that steely cock pummeling so deep into him was too much for Chris. His eyes shut on their own accord, cutting off his focus on Mario. \"Give me your cum, baby.\" He moaned and then completely lost it.\n\nWith a lustful cry Chris ground into Shane, moving as though he didn't have any control of his being. Chris' face was ferociously etched with lust and his need and he rode Shane hard. His head fell back, his chest heaving as harsh sounds of pleasure tore out of his throat. He went completely berserk. \n\n\"Fuck baby.\" Shane breathed, watching Chris' transformation. His man obviously liked dirty talk during sex. \"You're so fucking gorge...\" but Shane trailed off, his rhythm faltering and his vision blackening as a powerful orgasm tore through him. \"Oh fuck...\" He gasped as his back arched in unadulterated bliss.\n\nShane wasn't alone in that fall. Chris was right there with him, climaxing with a cry, his entire body shaking, his channel griping and rippling along Shane's cock, milking him till Shane thought he was going to pass out from all that pleasure. \n\n\"Fuck Donovan.\" Shane gasped, trying to get his breath under control. \"Gonna fucking kill me.\" Shane's voice was lethargic and satiated.\n\nChris went slack against Shane, utterly boneless, loving the gentle way Shane enfolded him against his body. He felt sated, content and loved and he never wanted to stop feeling that way. \n\n\"Not gonna kill you.\" Chris sounded drunk. \"Just plan on keeping you forever.\"\n\nShane shuddered at those words. \"I won't have it any other way.\" His voice cracked.\n\n\"What the fuck got into you?\" Chris breathed. \"That talk...\"\n\n\"You did tell me to try it on you remember?\" Shane chuckled.\n\n\"I do but I didn't think you had it in you.\" Chris actually sounded shocked. \"Fuck, that was filthily hot.\" He gasped.\n\n\"At least now we know you like it.\" Shane chuckled. \"Those ladies...\"\n\n\"Shut up, Shane.\" Chris growled, drawing raucous laughter from Shane.\n\nBoth men went quiet, savouring their earth-shattering encounter as they tried to calm their still erratic breathing. It was a comfortable silence. Till Chris broke it.\n\n\"Let's do it.\" He said quietly.\n\n\"Do what?\" Shane asked.\n\n\"Get married.\" Chris leaned back and looked into Shane's eyes. \"Shane, I'm yours just as I know you're mine. If I could have just one wish, I would wish to wake up every day to the sound of your breath on my neck, the warmth of your lips on my cheek, the touch of your fingers on my skin, and the feel of your heart beating with mine. I can never find that feeling with anyone other than you, Shane.\"\n\n\"Oh God, Chris.\" Shane breathed, completely floored by Chris' words.\n\n\"I want to be yours in every sense of the word.\" Chris looked as though he was high on drugs but the excitement in his eyes was simply infectious. \"I don't want to wait, Shane. I don't need to think. We can tell the people who matter afterwards. I don't have to ask anyone...well the guys will be thrilled so they don't count. That leaves Auntie Syl and Adele...\" Chris dropped a quick kiss on Shane's lips which was opened in shock. \"Shane I want to do it. Here...in Florida, before we go back home.\" When he noticed Shane's eyes welling with tears, he leaned in to kiss each eyelid. \"I'm not taking no for an answer so don't even think about it.\" He growled.\n\n\"You're saying we should elope.\" Shane's voice didn't even sound like his.\n\n\"I don't care what you call it.\" Chris rasped. \"Call it a shotgun wedding if you want...\"\n\nShane burst into laughter then, not even bothering to wipe the tear that finally slid down his cheek. \"Oh my God, I love you, Chris Donovan.\"\n\n\"And I love you.\" Chris answered. \"And I can't wait for you and our daughter to go get me a ring before you ask. So let's go to town and do it now.\"\n\n\"Chris... You sure we don't have to book or anything?\" Shane couldn't mask his own excitement. \n\n\"Money talks and bullshit walks, baby. I want you to be mine. I want my ring on that finger. I want everyone to know you're mine. Speaking of wanting everyone to know...\"\n\n\"What?\" Shane asked when he noticed Chris looking behind him.\n\n\"He's gone.\" Chris shrugged. \"Mario. He was watching us.\"\n\n\"Really?\" Shane laughed.\n\n\"Yep. He's probably wanking off somewhere.\"\n\n\"Don't be mean.\" Shane chuckled. \"Let's get inside before we get more audience.\" He kissed Chris soundly. \"Besides we have a wedding to attend...our wedding to attend.\" He grinned.\n\n\"Yeeeessss!\" Chris shouted as he pulled himself off Shane's cock, moaning in the process. \"Oh fuck, I love this cock.\"\n\nShane laughed as he accepted the hand Chris offered. When he stood, he pulled Chris to him and kissed him again. \"I'm so happy it feels like I'm floating.\"\n\n\"Wait till you have that ring on your finger.\" Chris murmured, pulling Shane's swim shorts up to cover his cock and retying the cord. \"I'm sure the feeling will be euphoric. Fuck I can't wait. Let's go.\"\n\nAnd both men had a bounce in their step as they moved towards the house and their future.\n\n***\n\nShane and Chris stared with awe and admiration at the ring in the palm of the petit lady behind the counter.\n\n\"It's too beautiful.\" The lady murmured almost reverently. Almost as if, if she raised her voice, the ring would disappear. \n\n\"Of course you'd say that.\" Chris chuckled. \"You're selling it.\" They were in one of the most expensive jewelry shops in Florida, trying to pick out rings. \"But you're right. It is spectacular.\" \n\n\"I swear I always drool over this ring.\" She said in a hushed voice. \"This is classy, striking, masculine, and totally beautiful. I know it's abnormally expensive but...\" She laid her other hand over her heart with a sigh. \"All you have to do is see it on your finger each morning to fall in love all over again. Thrust me on that.\"\n\nShane and Chris stared at the ring the lady was creaming her panties over. It was an 8mm, 950 platinum wedding band, with an elegant design of forceful vertical grooves and polished beveled edges. Its strong, highly engineered look was offset by six round cut diamonds burnish, set in a satin finish. The ring's undeniable elegance accompanied by those glittering diamonds, not only established the piece as a timeless tribute to passionate romance, but it also provided magnificence and status. It was simple, classy and exceptionally stunning. \n\n\"I want it.\" Shane breathed, obviously enthralled by the ring in question.\n\n\"So you're the groom.\" Petit lady moaned, smiling at Shane whose eyes remained on the ring.\n\nChris ignored the lady's question and turned to look at the man he loved with all his heart, saw the want and longing for that ring, and knew he wasn't going to leave the shop without that band. Though Chris thought the ring was beautiful too and had actually fallen in love with it immediately the lady had brought it from the hidden safe, he knew he would want to see that look on Shane's face for the rest of his life. It was that ring or none other.\n\n\"Do you have two of these?\" Chris asked with his eyes still on Shane.\n\n\"What?\" The lady sounded confused. \n\n\"We want two of these. Today. Now.\" Chris said slowly as though he were talking to a child. \"Can we get it?\"\n\n\"Oh my God... It's for the two of you.\" Petite lady whispered with a flushed face. \"I think I'm going to pass out...\" She whispered.\n\n\"Breathe.\" Shane finally looked up and told the girl. \"Now answer his question.\" He said when the girl looked calmer.\n\n\"The designer made only two.\" She said shakily. \"Because of the prize and the unique design we were made to keep both in the safe for...please let me get my boss.\"\n\n\"Do that.\" Chris said in an amused tone. The girl looked like she wanted to take their autograph or something. What was it with girls and gay couples, he wondered with a shake of his head. \n\n\"I can't wait to see it on your finger.\" Shane said softly, interlacing their fingers together on the counter. \"Fuck, I can hardly believe you're almost mine.\" \n\n\"I was yours from the very first moment I laid eyes on you, baby. And that has never changed.\" Chris murmured, pressing a soft kiss against Shane's temple.\n\n\"Hello.\" Said an elderly man in an elegant suit. He was being followed by a younger man, also in a suit who had a wide smile on his face. \"I understand you're interested in our beautiful platinum pair.\"\n\n\"We sure are.\" Chris responded smoothly.\n\n\"This way please.\" He said as he gestured towards his office. \"Make yourselves comfortable, gentlemen.\" The elderly man waved them into the comfy looking chairs in the office. \"I'm Marlowe, the owner of the shop. And this is my son, Stephen, the manager.\" He said as he took his seat behind the desk. \"I can tell you for a fact that you're buying the best...\"\n\n\"Err... with all apologies, Mr. Marlowe.\" Chris began. \"You don't need to convince us to buy the rings. Much as I would love to listen to just how great and spectacular the rings we've picked are, we don't have the time. You see, we're getting mar...\" As Chris spoke, Shane took out his credit card and handed it over to Marlowe. \"Shane...\" Chris growled.\n\nBut Shane leaned closer to him to murmur into his ear. \"Don't worry, love. You're going to pay with that sweet arse and beautiful cock for the rest of your bliss-filled life.\"\n\nChris' face reddened so fast Shane couldn't control his laughter. Then he shocked Chris even further by leaning closer to capture his parted lips in a soft sweet kiss.\n\n\"Oh fuck.\" Chris whispered when Shane released his lips. \"What happened to not kissing in front of people?\"\n\n\"Well, I decided you're mine, and I can kiss you whenever and wherever I want.\" Shane growled. \"Have a problem with that?\"\n\n\"You know I never have.\" Chris grinned.\n\n\"Shane Lewis?\" Marlowe couldn't hide the shock in his voice. \n\n\"Yes. Is there a problem?\" Shane raised an eyebrow.\n\n\"No. No.\" The flustered man replied quickly. \"It's just...\" The man was looking at Shane was eyes filled with awe. \"Never mind.\"\n\n\"Good.\" Chris said curtly, quickly recovering from Shane's surprise stunt. \"As I was saying, we're getting married today and are yet to make arrangement at the town hall.\"\n\n\"Allow me, Mr...\"\n\n\"Donovan.\"\n\n\"Mr. Donovan. Stephen?\" Marlowe turned to address his son. \"Bring the form and take down their names and get things set for them immediately at the chapel. And please call Dennis to come and take their measurements.\" \n\n\"Thanks.\" Shane said with a surprised grin.\n\n\"That's the least we can do for our cherished customers.\" Marlowe chuckled, turning to look at the man who entered the office. \"Dennis will take your measurements and whatever you want to inscribe inside the rings please.\"\n\nShane and Chris stared at each other in surprise as Dennis took the measurement of their ring fingers. They hadn't thought about the inscription part at all.\n\n\"We'll give you some time alone to think about that.\" Marlowe said as he got up to leave.\n\n\"Can I have a pen and piece of paper please?\" Shane asked, tearing his eyes from Chris'.\n\n\"Sure, sure.\" The elderly man said, placing a sheet of paper and a pen in front of Shane.\n\nThen with a naughty smile on his face, Shane boldly scribbled on the sheet, 'My Donovan, You're The Center of My World. S.N.L-C.D'. Then he placed the pen on the sheet. Chris read what Shane had written and couldn't stop the smile that split his face. He picked up the pen and scribbled his. 'Nick, My Love, My Heart, My Life. C.D-S.N.L'.\n\n\"There.\" Chris pushed the paper towards a surprisingly emotional looking Marlowe. \"That must be in his ring.\" He said, pointing at what he'd written.\n\n\"I understand.\" Marlowe rasped. \"I'll be right back.\"\n\nAnd even before the door closed behind the man, Chris was leaving his seat to kneel in front of Shane. Then he wrapped his arms around Shane's waist and simply laid his head in his lap. He just wanted to be held, to be close to Shane, to feel their bodies touching. Chris gave a deep sigh of contentment when he felt Shane bend over his back and lay his head on him. No words were needed. They simply drew strength from each other, relishing their love.\n\n***\n\n\"You can now turn to face each other and say your own vows.\" The officiating minister announced with a smile. \n\nMr. Marlowe had organized for a Minister to officiate their marriage in a small chapel. And the man had actually come to witness their marriage with his son. Some people sure did take customer service to another level, both Chris and Shane had concluded. They turned to face each other as the minister had instructed, both looking smart casual and smoking hot in their jeans, un-tacked white button-down shirts, sexy jackets and boots.\n\n\"You really wanna do this?\" Chris asked with a smile that could neither hide his love nor adoration of Shane. \n\n\"Hell yes. Do you?\" Shane's couldn't suppress his own smile.\n\n\"More than anything I've ever wanted.\" Chris actually managed to sound cocky, making Shane smirk. \n\n\"Good, 'cause I'm not letting you get away from me...ever!\" Shane husked. \n\n\"I'm holding you to that.\" Chris rasped.\n\n\"Good.\" Then taking Chris' finger, Shane said in the sexiest voice Chris had ever heard. \"I give this ring as my gift to you, a symbol of all that we have promised and all that we shall share. Wear it and think of me and know that I love you. I pledge to you all that I am and all that I will ever be as your husband.\" Shane slipped the ring on Chris' finger. \"I love you, Chris Donovan.\"\n\nChris had to swallow hard around the huge lump in his throat as Shane reached up to catch the tear shimmering on his eye lash, with his thumb. Chris didn't care that he had tears in his eyes in front of strangers. He'd never felt so overwhelmed in his life. He wanted to crawl inside Shane and be one with him. As he reached for Shane's finger, his hands trembled so bad he had to pause and take a deep breath.\n\n\"God, I love you so fucking much.\" Chris gasped, making both Shane and the minister and the few people seated inside the small chapel burst into laughter. Then as if he couldn't help himself, he leaned in and kissed Shane.\n\n\"We haven't gotten to that part yet, Mr. Donovan.\" The minister said with amusement.\n\nBut Chris pretended as though he hadn't heard the minister. He broke off the kiss and leaned his temple against Shane's. \"I can still feel you inside me. And I want you back in there so bad right now.\" He whispered into Shane's ear and kissed him softly on the cheek.\n\n\"What do you say we finish this, and I grant you your wish?\" Shane breathed, his eyes alight with love and lust. \"Deal?\"\n\n\"Deal.\" Chris chuckled and stepped back. \"Sorry about that, Sir. I couldn't help myself.\" Chris told the Minister as he started slowly sliding the ring onto Shane's finger. \"I give you this ring as a symbol of my love for you. I promise not only to stand by your side always, but to also be a faithful partner to you always. I bestow upon you all the treasures of my mind, heart, and hands. As I place this ring on your finger, I Chris Donovan, accept you Shane Nicolas Lewis, as my husband.\" Chris slipped the ring on Shane's finger. \"I love you too, Shane. So much.\" \n\n\"That was so beautiful.\" Shane whispered as his own tears slid unchecked, down his cheeks. Neither man had known what the other was going to say. And hearing those heartfelt words from Chris totally floored Shane...made him feel so special.\n\n\"Alright, Chris and Shane, I now pronounce you married.\" The minister said. \"You may kiss each other.\"\n\nThere's a moment between a glance and a kiss when the world actually seem to stop for the briefest of times. Chris and Shane saw right into the very soul of each other at that point, the anticipation of the coming kiss so intense their hearts actually pounded. Then their lips touched and their eyes shut, then it was just the two of them as for a moment, everything around them disappeared. It was a kissed that rocked both men to their very souls. To them, there was no feeling greater than knowing that they belonged to each other, body and soul. Both men tasted the salty tears but couldn't tell whose it was. It didn't matter at all.\n\n\"We did it.\" Shane's voice cracked. His arms remained around Chris' neck whilst Chris' wrapped around his waist, their foreheads leaning against each other's. Shane didn't seem to have the willpower to let Chris go.\n\n\"Yes, we did.\" Chris whispered against Shane's lips. \"Thank you.\" Then they were kissing each other again.\n\nIt was a short but beautiful ceremony. From the chapel, they drove directly to one of the most expensive and luxurious beach hotels in Florida, Boca Raton Resort & Club, where they checked into the presidential suite. The spectacular setting and view loved by many about the Boca Raton Resort was however lost on the two men since neither stepped out of that room for the next two days. \n\nAfter sparing some two minutes to call Jon and Isabel to tell them not to expect them back home till the next day, they jumped into bed and simply held each other. For both of them, it felt so unbelievably exciting to be married it was almost surreal. They would look into each other's eyes with so much love, smile at each other and simply kiss. Surprisingly they didn't even feel like having sex. Just lying in each other's arms was okay. And they were not even talking much except to declare their love for each other sometimes amidst kisses.\n\n\"We're acting like a bunch of teens.\" Shane laughed at a point.\n\n\"With you, I don't care what I act as. I could be a cat for all I care.\" Chris murmured.\n\n\"A cat? No. Definitely a lion.\" Shane chuckled. \"Hungry?\" And at Chris' nod, Shane ordered room service, surprising Chris by requesting for a bottle of chocolate syrup. \n\n\"Chocolate syrup?\" Chris raised an eye brow.\n\n\"Shut up.\" Shane said, attacking Chris's lips again. \"You taste so good I might even call to cancel that order.\" He murmured against Chris' lips.\n\n\"Don't.\" Chris laughed. \"I love chocolate syrup. Do you think we should call Auntie Syl and the guys to tell them?\"\n\n\"Let's keep it to ourselves.\" Shane kissed Chris on the forehead. \"At least for a day.\" Another kiss to the tip of Chris' nose. \"We can tell them tomorrow.\" A lengthier kiss on the mouth.\n\nWhen their food finally came, they only picked at it though it was scrumptious. Both men still felt too excited to eat. They however finished the bottle of champagne that came with it. Chris called the reception and requested for someone to come for their dishes. After giving the lady a huge tip, he closed the door and joined Shane in the shower. After their shower they relaxed in the Jacuzzi, with Shane sitting between Chris' legs with his back against Chris' front. ",
        "\"This feels like heaven.\" Shane moaned, resting the back of his head on Chris' shoulder. \"I could stay this way forever.\"\n\n\"Hmm. Much as I agree this feels nice, I'd rather be in bed with you deep inside me.\" Chris murmured, drawing a soft laughter from Shane.\n\n\"You're such a slut.\"\n\n\"We had a deal.\" Chris murmured in Shane's ear, drawing his lobe between his teeth. \"In a chapel.\" He released the flesh long enough to add huskily. Then he started sucking on the sensitive flesh, loving the sounds of Shane's uncontrollable moans. Chris licked his way down to the sensitive spot on Shane's neck and sucked up a mark.\n\n\"Chris...\" Shane's cock was throbbing, aching. Chris knew all his buttons and just how to push them to get him ravenous with need. \"You'll make me come,\" Shane moaned.\n\n\"And that's a bad thing, why?\" Chris turned Shane's face and started licking and biting his chin.\n\n\"I have other plans.\" Shane groaned.\n\n\"Hmm. The syrup. I wonder what plans they are.\" Chris murmured and captured Shane's lips in a fiery kiss.\n\nShane tilted his head to enable him better explore the sweet sexy mouth of his husband. Then he moaned into Chris' mouth, a soft sound of pleasure and surrender which was so erotic it made Chris' toes curl. And when Shane's hand moved up to Chris' head, to slide through and tug at his silky wet hair, it created a sensation so delicious within Chris he growled lustfully into their kiss. \n\nChris could feel each tug of Shane's fingers in his hair right down in his cock. What the fuck were they still doing in the damn Jacuzzi anyway? \"Let's get out of here, baby.\" Chris tore his mouth off Shane's and growled. \n\nIn the bedroom Shane lightly placed his hands on Chris' waist and propelled him backwards till the back of Chris' legs hit the bed. \n\n\"I want to lick you all over.\" Shane murmured huskily. \"To kiss you all over. To get to know every inch of my husband's body.\"\n\nChris shuddered at those fiery words. \"You already know it.\" He said huskily.\n\n\"I don't think so.\" Shane drew Chris' lower lip into his mouth and sucked on it till a tortured sound tore out of Chris. He pushed Chris onto the bed. \"Move up.\" Shane instructed in a lust-roughened voice and watched as Chris did exactly as he'd said. They were both rock hard.\n\nShane crawled up Chris' body and just looked at him with a look so hot Chris gasped. Then leaning down slowly...almost as if he had all the time in the world to do what he was about to do, Shane lightly kissed both of Chris' eyes, then his nose, ears, chin and finally his mouth. When he released Chris' mouth so they could breathe in a much needed air, Shane moved down to Chris' neck and sucked up an even bigger mark than what Chris had given him in the Jacuzzi. Then reaching for the bottle of syrup, Shane drizzled some on Chris' nipples and on his stomach, right down to his treasure trail. \n\nChris was going out of his mind with anticipation at that point. He made a sound which was a cross between a sigh and a moan when he finally felt Shane's tongue on him. It was hot, wet and so, so pleasurable. He watched and writhed as Shane licked him all over, his abs, nipples, tummy, belly button...and Shane kept moving downwards. Chris had never seen his cock gush out so much precum. Shane ignored that hungry cock when he got to it, smirking when Chris made a sound of protests, and moved down to Chris' inner thighs. By the time Shane got to Chris' toes, he was a quivering mess.\n\n\"Shane please...\" Chris whimpered. \"I need to come. Just get me off and let's continue, please.\"\n\nShane took out the little toe he'd been sucking on and gave Chris a mock glare. \"Do you want me to gag you or something?\" He asked huskily. At Chris' widened eyes, Shane smirked. \"Didn't think so. Get on your tummy.\"\n\n\"Bossy aren't we?\" Chris muttered as he turned over.\n\n\"What was that?\" Shane growled, slapping Chris lightly on the butt.\n\n\"Ouch.\" Chris groaned. \"This is Domestic Abuse.\" He muttered, drawing laughter from Shane.\n\nShane proceeded to drizzle some syrup on Chris' back and licked him all over. When he got to Chris' sexy arse, he placed tiny kisses on each cheek. \"Get on all fours, baby. Actually, leave your head on the pillow.\" Shane sounded hoarse. He watched, almost drooling as Chris' twitching hole was exposed to him. \"Beautiful.\" Shane whispered to himself as if in a trance. Then totally forgetting about the syrup, Shane leaned in and licked at that twitching star. \n\n\"Oh fuck!\" Chris gasped. He'd never felt anything so exquisite. He'd done it to Shane but had never had the pleasure of feeling that delicate bliss. But much as it felt good, he really didn't want Shane to feel he had to reciprocate or anything like that. \"Shane, you don't have... Oh fuuuuck!\" Chris cried out, totally forgetting his line of thought. Whatever Shane was doing with his tongue felt so good it made his eyes water.\n\nShane ate the hell out of that arse. The sounds falling out of Chris sounded like music to his ears. Since he'd never rimmed Chris, there had been that initial uncertainty of not being experienced enough to deliver. But from Chris' reaction, Shane knew he was on the right path. Shane would move down to lick all over Chris' perineum, and move up to plunge his tongue into that moist hole. At a point he moved down to take Chris' balls into his mouth and gave them a good tongue bath, then moved back to the hole. When he heard Chris' scream, Shane was actually startled. But then he felt the contractions against his tongue and knew what had happened. Chris had orgasmed from his tongue, without a touch to his cock. Shane had never seen anything sexier.\n\n\"Oh fuck, oh fuck, oh fuck...\" Chris kept chanting as he collapsed onto the bed, not minding at all that he'd fallen into his cum on the bed. And what a load it was. \"Oh my God, Shane...\" He panted, trying to catch his breath.\n\nShane crawled up to lie on Chris' back, shaken by the whole experience himself. It had felt great to bring Chris pleasure that way. \"You're so fucking sweet and hot.\" He murmured, dropping kisses on Chris' neck. \"I'm officially an addict to that sweet hole. Damn, I loved doing that.\" He gasped, making Chris laugh softly.\n\n\"We're still not done with our deal.\" Chris murmured, wriggling his arse against Shane's hardness.\n\n\"That, we're not.\" Shane said rolling off Chris and reaching for the tube of lube on the bedside table. \"On your hands and knees, Sexy.\" He rasped as he lubed up.\n\nShane poured a generous amount of lube onto the already moist hole in front of him and slammed in without warning.\n\n\"Fuck.\" Chris groaned, automatically tightening up on Shane, causing Shane to give an animalist growl.\n\n\"Will you stop that?\" Shane gasped. \"Not gonna last if you keep tightening up.\" He growled as he pulled Chris up so that Chris' back was against his chest. \n\nChris turned his head, seeking Shane's mouth just as he felt Shane's slick hand on his stiffening cock. He was rock hard in a matter of seconds. Shane fucked Chris deep and hard, nailing his pleasure button relentlessly, stroking him the whole time.\n\n\"You feel so fucking good, Donovan.\" Shane husked as he latched onto Chris' neck, sucking and licking till Chris thought he would go insane from sensory overload.\n\n\"And you feel amazing.\" Chris said shakily. \"Your cock, your hand your mouth... the fuck!\" Chris couldn't suppress his growl of shock and outrage when Shane abruptly let him go. His mouth left his neck, the delicious friction of his hand on his cock was no more, and that cock... that mouthwateringly sweet cock was no longer plunging inside him, sending him to the clouds... \"What...\" Chris gasped. \n\n\"On your back.\" Shane tight voice showed just how fast his control was slipping. \"I want to watch your face...among other things.\"\n\nChris didn't wait to be told a second time. He turned on his back and crooked a finger at Shane, who quickly covered Chris' body and took his lips in a spine-tingling kiss. Then Shane sat up, knees on either sides of Chris' hips. He watched Chris' face, wishing he could take a picture of his sexy husband that very moment. With his face flushed, eyes shut and lower lip stuck between his teeth, Chris looked sexy as fuck. Shane reached down to take hold of Chris' slick pulsing cock, brought it to his entrance, and slowly lowered himself onto it.\n\n\"Christ!\" Chris gasped as his eyes shot open. The shock of the unexpected heat and tightness surrounding him was mind-blowing. He watched as Shane sank down, completely taking him deep inside. Chris could see the discomfort in Shane's eyes and tensed up. \"Shane...\" He whispered.\n\n\"I'm okay.\" Shane rasped as he started grinding on Chris. Though he'd been on the verge of a powerful explosion whilst inside Chris earlier, he wanted to come with Chris deep inside him. Since Shane was on top controlling their movement, he knew the perfect angle to get that sweet gland inside him, nailed. And he did just that. \"Ahh...\" Shane threw his head back as pleasure slammed into him. He held that position and slowly gyrated his hips. He knew he wasn't going to last. The head of Chris' cock was pressed so tightly against his prostate, Shane saw stars. \"Oh fuck, I'm gonna...\"\n\nChris took hold of Shane's hips and thrust deep and held. Then he watched as Shane erupted, shooting above his own head. His mouth was opened as though he was screaming but no sound came. His stomach clenched as his orgasm rolled through him, the sweet feeling washed over him with such force, Shane thought he might die from an overdose of pleasure. Chris stared at his gorgeous husband and felt his heart swell with so much love. When Shane collapsed onto him, still shaking with aftershocks of that intense orgasm, Chris wrapped his arms around him and gently kissed his forehead. \n\n\"Mine.\" Chris whispered. It was the softest of claims but Shane heard him just fine.\n\n\"Yours.\" Shane breathed in return. \"And I'm still hard.\" Shane added, shocking Chris into laughter.\n\n\"And we can't leave you like that, can we?\" Chris chuckled as he rolled them over, making sure that he remained deep inside Shane. Then placing one of Shane's legs over his shoulder, Chris started to pound into him, relentlessly.\n\n\"Oh fuck,\" Shane groaned and grunted as Chris fucked him with deep, long and erratic thrusts. Chris fucked him as though he were possessed. Shane loved it. \"So good.\" He almost sobbed as Chris gyrated in a particular angle, finding and ruthlessly battering his prostate, faster and harder, over and over.\n\nChris' mouth was everywhere he could reach, nipping, licking, kissing and simply driving Shane out of his mind. When he wrapped a hand around Shane's cock and pulled, Shane almost passed out. His body was on fire. Chris filled him, searing him from the inside, claiming him with every thrust, every pull and every kiss. Shane knew he was losing it. When he felt the tingle along his spine, he knew what it was and reached for it.\n\n\"Chris...\" Shane whimpered shakily as his hips slammed up to meet Chris', his orgasm building like a volcano. He felt his cock swell, knew he was going to shoot his load... \"Chris...\"\n\n\"Let go baby. I've got you.\" Chris whispered as he closed the gap between them and took Shane's mouth in a kiss so soft and sweet, Shane's eyes welled up despite himself. \n\nShane shot between them just as spams wracked Chris' body and he flooded Shane with his essence. Words were not important as both men writhed against each other, mindless with pleasure. The intensity of emotions sweeping through them was overwhelming. Chris pulled out of Shane and gently lowered his leg back onto the bed. Then he moved to lie beside Shane, curling around him as they both tried to catch their breath. Though both men were spent, they couldn't stop giving each other soft kisses. \n\n\"Hey.\" Chris said softly after a while. \"You okay?\"\n\nShane smiled at him and tangled his fingers in Chris' hair. \"Never better. I love you, husband.\"\n\nChris closed his eyes and stroked Shane's chest. \"Damn, I love the sound of that.\" He whispered. \"I love you more, husband.\" \n\nShane laughed softly. \"We have to change the sheets and hit the showers.\" He murmured. \"I remember seeing fresh sheets in the closet.\"\n\n\"Go get in the shower.\" Chris said. \"I'll change the sheets and join you.\"\n\n\"I don't want to leave you.\" Shane whispered, leaning in to capture Chris' swollen lower lip. As he sucked on that juicy flesh, Chris moaned and slowly humped his thigh. \"You're an insatiable slut, Chris.\" Shane let go of Chris' lip to murmur when he felt Chris begin to harden against him.\n\n\"You're a fine one to talk, Mr. Lewis.\" Chris chuckled, grabbing Shane's erection.\n\n\"Fuck.\" Shane gasped as he rolled out of bed. \"I guess we have a lot of catching up to do.\" He chuckled, heading towards the closet. \"Our bodies obviously feel starved.\" He said as he walked back to the bed with a new sheet.\n\n\"And whose fault is that?\" Chris growled. \n\n\"That was good therapy, darling.\" Shane turned his head to accept Chris' lips. \"Ask any therapist.\" He breathed when they broke off the kiss. \"Remove the sheet.\" He said and waited till the sheets were off, and then spread the fresh one on the bed.\n\n\"Speaking of therapy...\" Chris started.\n\n\"What about it?\" Shane asked, busily straightening the sheet. \n\n\"Are we going to keep...\"\n\n\"We did pay a shitload of cash, Chris.\" Shane said dryly. \"We're going till Murray says otherwise. Besides, I like the man.\"\n\n\"Ow come on, I'm your newly wedded husband.\" Chris protested with mock outrage. \"You can't tell me you like another man. I'm sure there's a law against that or something. It's not even been twenty-four h...\"\n\nShane stopped Chris tirade with his lips, kissing him till he melted against him. \"Now let's hit the fucking showers and come continue compensating our bodies.\" Shane husked, turning towards the bathroom.\n\nAnd that was exactly what they did. The couple spent hour after hour, fucking, kissing, sucking and fucking some more. They would order room service, eat, call Adele, sleep for an hour or two, and then get back to fucking. They couldn't get enough of each other.\n\nSometimes they made gentle, slow, sweet love which melted their hearts for each other and other times, it was a frenzied and brutal fucking that left every muscle and joint aching deliciously and yet they kept going at it like bunnies. Chris ordered some clothes, and some other stuff he thought they'd need online, to be delivered to their suite. They'd remained naked since they checked in on the day they got married, wearing the hotel robes whenever they needed to cover up. Apart from the fact that they didn't have any clothes besides the ones they'd worn into the hotel, they simply didn't need clothes. \n\n\"Okay, now we have to do it.\" Shane said on the morning of their third day in the hotel as they got ready to check out.\n\nThey'd checked into the hotel on Wednesday night and stayed in their room the whole of Thursday and Friday. On Saturday, they finally decided to go back home as they were to go back to L.A. on Sunday. \n\n\"Do what?\" Chris asked as he fixed his belt.\n\n\"Tell people we're married.\" Shane said as he pulled on his shoes.\n\n\"He finally decides to share.\" Chris mumbled, drawing a chuckle from Shane. \n\n\"I wanted to keep you all to myself for a while.\" He said as he wrapped his arms around Chris from behind. \"Sue me.\"\n\nChris laughed softly. \"I wish I could keep you to myself longer.\" He heard the whine in his voice but didn't give a flying fuck. He could be himself with Shane and not get self-conscious at all. That's how free he felt around his husband.\n\n\"Tell you what,\" Shane said, turning Chris around to face him. \"Whenever we feel like it or we feel a teeny weeny bit stressed, we have to go away for at least three days. Just lock ourselves into a room...like this...and just be with each other. What do you say?\"\n\n\"I like the sound of that. No phones, no work, one to disturb us...\" Chris husked and licked at the corner of Shane's lips, making him shiver with lust. \n\n\"Just like this.\" Shane whispered. \"Do we have a deal?\"\n\n\"Oh yeah. Deal.\" Chris captured Shane's mouth in a fierce kiss. \n\n\"Fuck, I love your mouth.\" Shane gasped when they came up for air.\n\n\"Love yours too. Now let's make that call.\" Chris moved out of Shane's arms and headed towards the laptop on the table in the room. \n\n\"Think we should Skype huh?\" Shane went to sit beside Chris.\n\n\"I want to see their reaction. We call your mum first.\" Chris said as he pushed the laptop to face Shane. \n\nShane didn't waste any time in dialing Sylvia Lewis on Skype. His mother never ceased to amaze him with her love for technology. She loved Skyping.\n\n\"Shane?\" Sylvia's pretty face filled the screen. \"Are you boys okay?\"\n\n\"We're good Ma. How about you?\"\n\n\"I'm very well. Just missed you so much. Where's Chris?\"\n\nShane adjusted the laptop so that his mother could see both of them. \"Hello Auntie Syl. We missed you too.\" Chris grinned.\n\n\"We both know you didn't, boy.\" Sylvia laughed. \"You both look good. How's the house?\"\n\n\"We feel good and the house is same.\" Chris said.\n\n\"You're to go back to L.A. tomorrow right?\"\n\n\"Yes Ma. We have something to tell you though.\" Shane said softly and turned to smile at Chris when he felt Chris lace their fingers together on his lap. \n\n\"I'm listening.\" Sylvia said looking at then expectantly.\n\n\"Last Wednesday, Chris and I got married.\"\n\nSylvia's hands went to her chest. \"Oh my babies.\"\n\n\"Ma we're not bab...\"\n\n\"Shut up Nick.\" Sylvia cut Shane off. \"You two have no idea just how happy you've made me.\" She said, wiping at her eyes. Wait...did you say Wednesday? Why are you now telling me?\"\n\n\"We were on our honeymoon, Ma.\" Shane groaned. \"We had a lot of catching up to do so...\"\n\n\"You actually worked on your honeymoon?\" Sylvia Lewis screeched.\n\nChris burst into laughter as Shane groaned. \"You can call it that Auntie Syl. Not all types of work is stressful though. Some are very pleasu...\"\n\n\"Shut your mouth Chris Donovan.\" Sylvia gasped as what the couple meant by 'work' finally dawned on her. Shane was laughing so hard his mother finally joined in. \"You kids are crazy. Don't let me keep you from 'working' then.\" She gave the word quotations with her fingers. \"Go back to putting in extra hours.\"\n\nThis time Chris laughed so hard he fell right off his chair. \"Ma, do you mind?\" Shane laughed, reaching down to pull Chris back into his chair. \n\nSylvia laughed too but then grew serious. \"I wish you boys enjoy all the pleasures that togetherness brings in life. May your life hereafter be filled with happiness and delight. And may your bonding last forever, and should it ever change, may it change to a firmer and better one.\" Sylvia's voice shook. It was obvious just how close to tears she was.\n\n\"Thanks.\" Both Chris and Shane responded.\n\n\"I wish I could hug you boys.\"\n\n\"We'll come visit you soon, Ma.\" Shane said quietly, obviously affected by his mother's words too. Chris leaned closer and kissed Shane softly on his cheek.\n\n\"You do that, hon. Love you boys so much.\" Sylvia said watching the display of affection by Chris. She couldn't be happier.\n\n\"Love you too.\" They both responded. \n\n\"Take care. And call me when you get back to L.A.\"\n\n\"We will.\" Chris responded as Shane nodded.\n\nChris placed his head on the table and laughed when they disconnected the call. \"Oh my God, that 'extra hours' part was hilarious.\"\n\n\"You're an idiot.\" Shane chuckled. \"Did you really have to explain the types of work?\"\n\n\"I couldn't resist.\" Chris laughed.\n\n\"Like I said, you're an idiot. Call the guys.\" Shane pushed the laptop towards Chris. \"Whose house do you think they're fooling around in today?\"\n\n\"You should know better than I, dude.\" Chris drawled. \"It not like I've been hanging out with you guys of late.\" He said quietly. \"I don't even think they would want to talk to me.\" Chris suddenly sounded wistful.",
        "\"Hey,\" Shane turned Chris' head to face him. \"Those guys are your family. Family doesn't end in blood and doesn't start there either. Family cares about you. Family is there for the good, bad...all of it. They've got your back even when it hurt. That's family. Those guys love you no matter what you'll do. Got that?\"\n\nChris nodded. \"Yes.\"\n\n\"Good. Now you better get back to your cheerful mode because if they get the slightest impression that you're not happy, my arse is grass.\" Shane looked so serious Chris' eyes widened. \n\n\"Really? Did I miss something?\" He asked with amusement glittering in his eyes.\n\n\"You're enjoying this aren't you?\" Shane growled. \"If you throw me to the wolves, Chris Dono...\"\n\n\"Relax.\" Chris laughed. \"It just feels good to know that those idiots threatened you on my behalf. You have no idea how protective they are of you. All the subtle threats they've given me...\" Chris burst into laughter once again. \"Who did the threatening exactly?\" He looked so amused.\n\n\"All of them.\" Shane said. \"Well, except Tyron of course. Sometimes looks carry more weight than words. And the look in their eyes...\" Shane was virtually talking to himself. \"Aaron's was the only non-threatening ones. But his was even worse.\"\n\n\"Where was Tristan?\" Chris asked, finally noticing just how shaken Shane was by whatever his friends had portrayed. \n\n\"He was out of town.\"\n\n\"Thank God!\" Chris gasped. \"Tristan would've had a field day.\"\n\n\"He wouldn't have. Trust me.\" Shane muttered.\n\n\"That bad huh?\"\n\n\"Scary.\" Shane tried very hard not to remember the scene when the guys were standing around his chopper with melancholic faces.\n\nChris left his chair to straddle Shane's thighs, facing him. He lifted Shane's chin with a finger and kissed him softly. \"I'm sorry I put all of you through that.\" He said softly.\n\n\"You're apologizing to the wrong person.\" Shane sighed, drawing Chris' head down to kiss him softly. \"Just don't sign my death warrant with a sad face please.\" He whispered, making Chris laugh.\n\n\"I promise I won't.\" Chris said, moving off Shane's lap. Then he straddled Shane's thighs again, facing the laptop this time. \"Let's try Matt.\" He said, dialing Matt. But Matt didn't pick up. \"Okay, no response. Let's see...if I'd been there, it would have been my turn today. Next person is...\"\n\n\"Damon.\" Shane chuckled.\n\n\"Fuck.\" Chris muttered as he dialed Damon's Skype link. He promptly groaned when Tristan's face filled the screen.\n\n\"Well, well, well...look who we have here.\" Tristan drawled. \"Sober now?\"\n\n\"Hello to you too, brat.\" Chris growled whilst Shane laughed softly. \"Where are the others?\"\n\n\"In the den. Yo, Shane? Sup?\" Tristan turned his attention to Shane. \"It's been a really long time.\n\n\"Hey Tristan.\" Shane laughed. \"You were out of town when we were leaving.\"\n\n\"You mean when you were carrying his arse out of town.\" Tristan drawled, drawing a growl from Chris.\n\n\"I swear to God if you don't take the laptop down to the...\" Chris started.\n\n\"Okay, okay I'm going. Settle down cow... hey, what's that on your finger?\" Tristan gasped. \"Chris? Did you guys...\"\n\n\"Just...\" Chris started to say but Tristan was making so much noise he decided not to waste his breath. He heard the guys asking Tristan what the problem was just before Kyle, Matt and Michael's faces filled the screen. They were sitting on the couch in the den, probably playing a video game. \"Hey guys.\" Chris said. \n\nAll the guys started talking at the same time. Chris could see the joy and relief on their faces. He gave a sigh of relief. Shane was right. The guys didn't look angry at all. They were his family and accepted his faults and mistakes.\n\n\"One at a time assholes.\" Chris laughed as he watched Aaron rush to sit on Kyle's lap with a wide grin on his face. Then Damon and Cole appeared behind the couch so he could see them all. \"I've missed you idiots so much.\" Chris gushed.\n\n\"Yeah, yeah, yeah...\" Cole drawled but his eyes twinkled with delight. \"Don't you have chairs where you are? Why the fuck is Shane carrying your weight?\"\n\nChris waited till the guys laughter settled down. \"And why is Aaron sitting where he is right now?\" Chris retorted. \n\n\"'Cause I enjoy feeling my man's rock hard cock beneath my arse.\" Aaron responded with mock innocence even as his wriggled his arse in Kyle's lap. And at Kyle's uncontrollable tortured groan, Matt drew Aaron off Kyle and into his lap.\n\n\"Now sit still.\" Matt said sternly whilst the guys laughed their heads off.\n\n\"Where's Dean?\" Shane asked, shifting so that Chris wasn't straddling him anymore but rather sitting across his thigh. He unconsciously coiled an arm around Chris' waist, making Chris smile. The guys didn't miss it.\n\n\"Kayla gave birth two days ago.\" Matt said. \"A cute baby girl.\" \n\n\"Great.\" Chris was thrilled. \"I hope she looks like Kayla and not the asswipe. Okay we have something to tell...\"\n\n\"They got married.\" Tristan shouted from somewhere in the den. Shane and Chris couldn't even see him on the screen.\n\nBut Shane and Chris forgot about Tristan in the midst of the shouts and cheers and whistles. In the midst of all the noise, they heard a popping sound. Then Tristan appeared, handing out flutes to the guys and filling them with champagne. \n\n\"To the best news of the century.\" Kyle shouted.\n\n\"And to the smartest, hunkiest, horniest and all the ests couple ever.\" Matt said.\n\n\"To Chris and Shane.\" Damon added.\n\n\"May you fuck each other till it's time to check out of this world.\" Cole shouted.\n\n\"Yeah...on every surface and space...and every fucking restroom.\" Michael added. \n\nAnd even as the guys laughed uproariously and Chris flipped them off, he leaned down and took Shane's lips in a heart-melting kiss. There was nothing as soul-lifting as having the support of your family when you take that plunge with your soul mate. And at that particular moment, Chris and Shane felt like the luckiest couple in the world and they knew that their serene bond and love would grow from strength to strength with each passing day. Theirs was indeed a bond that could never be broken.\n\nTHE END\n\n'WHEN TWO WHO HAVE SUFFERED FIND EACH OTHER, THE BOND IS LIKE STEEL. THEY BECOME EACH OTHERS' SOUL MATES AND COMFORT FROM THE STORM OF LIFE.'"
    ],
    "authorname": "adjoaq",
    "tags": [
        "chris",
        "shane",
        "hea",
        "beach",
        "wedding",
        "hotel",
        "bonding",
        "love",
        "rimming",
        "voyeur"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/unbreakable-bond-ch-11"
}