{
    "title": "There and Back Again Ch. 157",
    "pages": [
        "Chapter One Hundred Fifty-Seven: Fading In \n\nI walked down the stairs with my brother, towards the ritual that would revive Faren, Maker-willing. But as frightened as I should have been about the ritual \u2013 what if it doesn't work? What if something goes wrong? What if Anders ends up possessed, or worse? \u2013 to my shame, there were other things weighing more heavily on my mind. I hadn't seen my husband since my dramatic failed seduction in the morning, and while I should have been thinking about my friends, or even the large stack of paperwork I'd discovered on my desk, the worry kept distracting me despite my best efforts. What if he stops loving me? He deserves someone he finds desirable, and that's not me anymore. Is he going to put me aside \u2013 or worse, stay with me out of guilt or obligation? \n\nSomething must have shown on my face, because Aedan eyed me curiously as we walked in silence. The unspoken question was clear, but I shook my head slightly \u2013 I wasn't ready to talk about it, especially not to my brother. He stayed silent, to my relief, but reached out and gripped my hand in support, and I squeezed back gratefully. \n\nZevran joined us once we reached the main floor, and seemed less inclined to let it slide. He examined me critically and opened his mouth \u2013 only to be interrupted by Aedan offering me lunch on the way past the dining room. We stopped in and shoved a few hurried bites of food into our mouths, and the entire time Zev kept trying to get a word in edgewise. Each time he attempted, though, Aedan would reach out and shove something into his mouth \u2013 a piece of bread, a small hunk of cheese; by the end the three of us were all laughing, despite my personal agitation and Zevran's apparently insatiable curiosity. \n\nA few minutes later, the three of us headed up into the tower \u2013 formerly Avernus' tower, but I supposed now it belonged to Jowan more than anyone else. We'd decided to do the ritual in Avernus' old lab; it was one of the few places we had enough space for the number of people required, and \u2013 I hesitated to even think about it \u2013 the best place to have to fight an abomination, if Anders' trip to the Fade went horribly wrong. The walls were stone, there was little furniture to destroy, and it was a long distance from the servants' quarters, so there would be a lot of opportunity to kill any abomination before anyone even found out. And the Architect's supposed tomb \u2013 really a small empty supply closet near the lab \u2013 meant everyone who was aware of it felt uncomfortable enough to attempt to stay away. \n\nI really shouldn't have been so worried about the abomination thing; it wasn't like it was Anders' first visit to the Fade, after all. And somehow Morrigan going into the Fade back in Redcliffe, more than a year earlier, hadn't frightened me at all, though I'd known the outcome. But this unknown, unexpected Fade vacation had me all kinds of nervous \u2013 my current marital issues notwithstanding. I couldn't picture anything that could tempt Anders, really, on his trip, but nevertheless I couldn't help imagining what would happen if he became an abomination. Justice didn't count, not really. \n\nThat was where I came in; I would have wanted to be there regardless \u2013 whether I'd had a choice or not, I'd been the one who'd given Faren the poison and I wasn't prepared to be anywhere else until this was over \u2013 but I was also there for another reason. If something did go wrong, I was our best defense against an abomination, which was always a risk when someone was going into the Fade, no matter how stable or well-intentioned. I'd promised to try to stay out of any physical fighting that might happen; Anders had made me promise to try to avoid anything more strenuous than sparring for a month after the miscarriage \u2013 thus why I was still in my dress, not armour \u2013 but my templar abilities would be critical. For the same reason, Fred, George, Rolan, and Alistair would be present, and the rest of the Wardens would be right outside. \n\nI'm getting sick of situations in which everyone has to gear up as if for a fight inside my own damn keep! \n\nAs we reached the door to the lab, I shook my head and tried to put aside all of my feelings \u2013 my fear about my marriage, my guilt for Faren's illness, my worry about Anders going into the Fade \u2013 and concentrate on my duty, and on Faren's recovery. I took a deep breath and stepped inside. \n\nFaren was laid out on a cot in the middle of the large room, Sigrun by his side. An empty cot, clearly intended for Anders, was close beside. Anders, Solona, and Donal spoke softly amongst themselves, while Jowan and Velanna, the two mages not taking part in the ritual, listened silently. I watched Solona for a moment; her posture was unusually stiff, her complexion even more pale than normal, but she smiled at Anders and responded to something he said with a slight chuckle. I was impressed, yet again, by her total bad-ass bravery, given that I knew she experienced severe panic when around any Wardens who weren't Anders. \n\nNo one stood near the door that led to the sealed storage room we'd told everyone was Avernus' tomb; knowing it was just an empty room, it made me laugh a little inside to see everyone pretending nonchalance. The two templar recruits, as well as Rolan, stood against the opposite wall, looking like they were trying to camouflage into the stone rather than be noticed. I shot them a reassuring smile, and they nodded back respectfully. Conrad, Oghren, Bel, and Wulf stood by Faren's unconscious body, all looking exceedingly uncomfortable. Sigrun nodded at something Conrad said, and the four men left, nodding at us as they went by. \n\nThe last person in the room was Alistair. He was leaning against the same wall as the templars, but clearly not with them; his expression was impassive, and he avoided eye contact with me when I glanced at him. His jaw was clenched, though, and his shoulders hunched slightly. I was certain he knew I was there \u2013 and he was working hard to ignore me. I rubbed at my chest irritably, hoping to soothe the pain that flared there in response. Better this than some sort of confrontation here in front of everyone. I turned away, deliberately staring back at Faren as though he was my only concern. \n\nAedan's gaze flickered from me, to my husband, and back again, before grimacing and looking away. He squeezed my hand, though, and I gave silent thanks to whatever deity might be out there for giving me a brother. Anders saved me from any further humiliation when he stepped forward and cleared his throat. \n\nHe didn't waste any time. \"Donal and Solona are going to perform the ritual. I'll be going into the Fade. I've no idea how long this will take, so don't go getting all antsy and cutting off any heads, yes?\" He made eye contact with each of us, winking cheekily at me when I rolled my eyes. When he was happy with whatever he saw in each of our eyes, he gestured to Faren's unconscious form. \"Shall we?\" He plopped himself down onto the empty cot, and Solona and Donal settled onto the floor on one side. Jowan anxiously held an odd bowl-like structure, the wide opening obscured by the edges which curled in and up, hiding the contents. I wondered where the bowl had come from \u2013 I'd never seen anything like it \u2013 but I could feel magic radiating off of it in waves, and that made the contents clear: Lyrium. \n\nThe templars straightened up, hands on their pommels, and Anders rolled his eyes at them as he settled onto his back on the cot. Alistair waved them back, and they relaxed again, pink-cheeked at Solona's deep scowl. With a sigh, Anders reached out and put one hand on Faren's arm, just as Solona and Donal reached out and each gripped one of his ankles. The two support mages closed their eyes and began murmuring under their breath; Anders nodded at Jowan, who bent forward and held the bowl of Lyrium where he'd be able to reach it. With one last, reassuring nod at Sigrun \u2013 who appeared to be barely even breathing, she was so tense \u2013 the blond mage placed his free hand into the bowl and fell unconscious. \n\nJowan waited a long moment, watching Anders' face; when nothing changed, he pulled the bowl away and returned it to one of the nearby lab benches. Solona and Donal's chanting eventually trailed off to silence, the two of them slumped uncomfortably in place. \n\nAnd then...nothing. \n\nWe waited. After a while, maybe half an hour, I crossed the lab and availed myself of a chair; Aedan followed me, and settled onto the floor beside me. Zevran crouched against the wall near Alistair, and I shot him a grateful look. A few minutes later, Rolan and the two templar recruits slid down the wall to rest on the floor, and Alistair followed suit. Velanna and Jowan took stools by the bench holding the Lyrium. \n\nNo one spoke. I could clearly hear each of my companions breathing, almost startled by every sigh, sniffle, or sneeze. \n\nAfter another hour, Seranni and Wulf showed up with platters of food, dropping them off and then retreating. I nodded at the both of them gratefully, and Seranni blushed as she closed the door behind herself. After a few awkward moments, I wandered over and jammed some meat and cheese into a bun; I started a trend, and soon everyone had eaten. Still, no one spoke, all of us alternating between watching the three mages, the unconscious dwarf, and staring off into space. It was awkward, the silence becoming almost oppressive, but I had no desire to be the one to break it. \n\nAnother hour in, we all took turns having 'bio breaks' and stretching our legs. The Wardens waiting outside in the antechamber were no less tense than those of us inside, though at least they were talking quietly amongst themselves. I got quick hugs from several as I scooted through, and felt surprisingly better by the time I returned. \n\nIt was another hour after the final person had their bio break when things started to get interesting. Solona and Donal, who'd been slumped over, unmoving, sat up and opened their eyes, looking around and stretching, reminding me of nothing so much as young children awaking from a nap. Their eyes were adorably unfocused as they yawned and settled more comfortably \u2013 until Solona glanced over at where Anders still rested, unconscious. \n\nShe frowned. That can't be a good sign. She glanced to Donal, whose expression had turned grim, and then over to Faren. Her frown deepened as she saw nothing had changed. \n\nAedan scrambled to his feet, and I heard clattering behind me which indicated the others there had as well. My brother gripped my shoulder hard, almost painfully, but I couldn't bring myself to care \u2013 it felt like the pain helped anchor me while my mind started spinning. \n\n\"Solona?\" Aedan whispered, his voice hoarse from the prolonged, tense silence. \n\nShe twitched, looking away from her lover and meeting Aedan's eyes. \"Why isn't he back? He should have been back.\" Jowan had crept closer, and now knelt at her side, offering his hand \u2013 she grabbed it and clung tightly, clearly ignoring the taint sensation in her need for some sort of comfort. \"How long?\" \n\n\"Few hours,\" Jowan replied gently. \"Maybe it will just take a minute?\" He glanced up hopefully, and then his face twisted with a fierce scowl as he leapt to his feet. \"Don't even think about it!\" \n\nI blinked, startled at the ferocity, only to realise he wasn't looking at me, but over my shoulder. I turned to see Alistair, expression anguished, standing closer behind me than I'd realised, his hand reaching out awkwardly as though uncertain as to whether he could touch me \u2013 and Fred and George right behind him, swords an inch out of their sheaths, expressions sombre and full of regret. Rolan hadn't moved from his position, his face buried in his gauntleted hands. \n\nI squeaked, a high pitched, totally unladylike sound that spilled from my mouth without permission. I grabbed Alistair's hand and used it to lever myself to my feet, turning to face the two templars with my hand held up in the universal gesture for 'stop'. \n\n\"Wait, wait,\" I cajoled them, looking wildly around for support. \"Jowan? Solona?\" \n\n\"I don't know,\" Solona wailed, and I could hear the tears without turning to look. \"He was...I thought we had him.\" \n\nI reached out instinctively with my templar senses, feeling the mana pools of the five nearby mages; Velanna and Jowan felt normal, Solona and Donal somewhat depleted \u2013 but Anders felt like he had no mana left at all, his mana pool practically undetectable. But nothing about him felt wrong, not like Uldred or the other abominations in the Circle, not like the demons either. \n\nFred and George separated to pass me on either side, armour clanking with each step. Solona sobbed. Rolan groaned, shaking his head wildly and squeezing his temples, his gauntlets leaving violet marks on his skin. Alistair gripped my hand, ready to pull me away from the approaching slaughter, I was sure. \n\nMy mind spun. Anders, still unconscious. The Fade. Faren. Healing in the Fade. No mana. I paused, grasping at some intangible thought that refused to make itself clear. \n\nNo mana. And suddenly I knew. \n\n\"No, no. Wait.\" I pulled away from my brother and my husband, jumping past both templars, placing one hand on each of their chests. \"Wait, damnit. He's not all gross and demony yet \u2013 just give me one minute. We've got one damn minute! Let me think.\" \n\nThe two templars paused, but neither released their grips on their pommels, and neither backed off. I stayed in place, thinking furiously. \n\n\"Solona.\" The pretty mage didn't respond, having collapsed into Jowan's arms. I changed tack. \"Donal?\" He grunted, eyes locked with horror on the two templars. \"You've been in the Fade. Right? Your Harrowing?\" \n\nHis gaze darted around the room, shocked at my casual mention of the Circle ritual, then returned to me as he nodded. \n\nThe templars took one more step, almost in unison, and I slid a foot across the floor. \"Listen to me! Donal, when you're in the Fade, do you need mana to get back?!\" I was shouting now, desperate, cursing my lack of armour, my insufficient strength. I kept trying to make eye contact with either Fred or George, trying to get them to look at me, to think, not to react like templars but like people. I heard clanking, muttering, a gasp, but didn't look, I couldn't, and then came the sound I'd been dreading \u2013 the rasping metal-on-metal slide of a sword being drawn rapidly. It wasn't either of the men I was bodily trying to impede; panicked, I let go and spun, hoping against hope that I could jump in front of the sword before something happened that we couldn't take back. \n\nAnd then I stopped, mouth hanging open. Rolan stood, sword in hand, between me and Anders. But he wasn't facing the mage, wasn't standing over him as judge, jury, and executioner. He was facing us \u2013 staring down Fred and George, his gauntlets creaking with the tenseness of his grip \u2013 and blocking the path for the two men to reach Anders. \n\nEveryone stopped for a moment, and then before I knew what had happened, Alistair had slithered around us somehow to stand on Rolan's left. Sigrun took up his right, Aedan behind at the foot of the bed, and Zevran was nowhere to be seen \u2013 melted into the shadows, I was sure. No one else had drawn their weapons, but it was crystal clear to me that the two templars weren't getting anywhere near Anders without a fight. \n\n\"I think we should hear what the lady has to say,\" Rolan growled, \"before anyone loses their head prematurely, yes?\" \n\nAlistair gestured to me \u2013 I could see fear, absolute terror in his eyes at how close I was to the two men with violent intent, and I had to restrain myself from almost cheering; he wouldn't be so scared if there wasn't something still there, would he? \u2013 and I took the handful of steps needed to tuck myself in at his side. Rolan glanced at me only briefly before looking back at the two templars, who had stopped completely and seemed to be confused, trying to figure out what was happening. \n\n\"We are going to talk about this,\" Alistair said, his tone authoritative and commanding, and damn if that isn't sexy. He gestured to the two men to release their weapon hilts before continuing, \"like grown-ups, and then, like the Commanders we are, Aedan and I will decide what will happen next. If something must be done, you can be sure it won't be either of you asked to do it.\" \n\nNodding, faces flushed, both of the templars dropped their hands, muttering something that was obviously equal parts embarrassment and agreement. Rolan put his sword away, and everyone seemed to calm down a little, postures relaxing. \n\nAfter a long, silent moment, Rolan gestured at me, and I realised he had really meant it when he said he wanted to hear my idea. \n\nI cleared my throat, nerves making me almost hoarse. \"Um, it's just that his mana is gone. Like, completely. Dwarves are resistant to magic \u2013 makes them difficult to heal. And I know Anders doesn't have the self-preservation instinct of a drunken lemming when he's healing \u2013 it wouldn't be the first time he'd tapped himself out completely. So I just thought...what if he is just out of mana? Stuck in there because the idiot didn't save enough to get himself back? Is that a thing?\" \n\nI heard a strangled cry behind me, and glanced back to see Solona claw her way onto the little cot, leaning over Anders' prone form. Her aura flared, and I could suddenly feel her pushing mana into him, waves of it leaving her and flowing into him \u2013 and hardly making a dent in his deficit. The process clearly wasn't terribly efficient, and at that rate, she'd run out of mana long before he had enough to work with. \n\nBut then I felt another aura, and then another; in a moment, all four conscious mages were pouring their power into him, and it finally made enough difference to make note of. I heard murmuring, felt Alistair's arm wrap around my shoulders, but I couldn't look away from the unconscious mage. It took mere moments for the other four to run out of mana, forced to stop by the very self-preservation instinct I knew Anders lacked \u2013 but Anders had an appreciable amount of mana now, his aura pulsed slightly as it adjusted, and all we could do now was...wait. \n\nAgain. \n\nBut not for long, fortunately. The mage, eyes still tightly shut, took a shuddering breath, much deeper than the shallow, sleep-breathing he'd been doing \u2013 before letting out a low groan and twitching lightly. We all stared, waiting with bated breath \u2013 please don't be an abomination, please don't be an abomination \u2013 and I wasn't the only one who took a deep sigh of relief when he rolled to his side, clutched his head, cursed the Maker loudly \u2013 and then promptly vomited all over himself. \n\nSolona didn't even seem to notice the vomit; she threw herself at the poor suffering idiot, alternately sobbing and chastising him, her complexion all blotchy from tears. Everyone else slumped, relaxing after the tense exchange and the horrid waiting. Jowan, Donal, and Velanna looked peaked, and all three slumped down on benches, both proud and exhausted in equal measure. Zevran smiled at me and slipped out the door \u2013 to tell the other Wardens to stand down, presumably. Alistair still held me, though he turned to Rolan and Sigrun to have a quiet conversation, which I ignored. \n\nAedan took the two abashed templars aside, murmuring to them softly; he didn't look angry, and I was surprisingly glad, knowing that they hadn't been acting malevolently, they just hadn't ever experienced something like this \u2013 and they'd been training their whole lives for the risks that accompanied a mage going into the Fade. I couldn't really blame them, though part of me wanted to. They'd been about to murder my friend \u2013 but somehow I couldn't find it in myself to hate them for it. Those in glass houses...they might have been about to murder my friends, but I had actually tried to murder another one. ",
        "I looked around the room, my gaze jumping from group to group, person to person, trying to reassure myself that everything was alright. I'd been so afraid that I felt like I hadn't taken a proper breath in days. I eyed my brother and my husband, my friends and new acquaintances, testing the sensations around me for confirmation that everything was fine. I examined each mage with my templar senses, and found all of them nearly empty but regenerating \u2013 Anders being the exception, and even his mana was still low despite everything. I examined the Wardens around me with the taint, feeling the strange buzzing pressure in my skull as I went from one Warden to the next. Alistair was his usual beacon of warmth and light, the rest of the Wardens their normal assortment of sensations. \n\nEverything felt...normal. I almost whooped with joy, so thrilled that we had passed this hurdle that I couldn't help giggling slightly, feeling almost drunk. I squeezed Alistair's arm, which was still wrapped around me, in a sort of half-hug that he returned unconsciously, and then unwrapped myself to throw myself into Zevran's arms \u2013 I hadn't even seen him return. I met Aedan's eyes, and could see them twinkle with relief; he winked at me and I laughed out loud. \n\nReleasing the assassin, I looked around the room again, and found myself captured by a pair of eyes I hadn't really allowed myself to believe I'd see again. Laying on his cot, motionless and still in the same position as I'd seen him last, alone, Faren lay staring at me. His brown eyes were the same warm shade as I remembered, though his expression was so confused, so lost, that I was immediately worried. \n\nIt seemed I wasn't the only person to forget about the unfortunate dwarf in the middle of the drama over Anders in the Fade; when I glanced around, I realized no one else was looking at Faren, and he'd been left to himself on his cot. Sigrun saw me looking, and followed my gaze; to my surprise, when she realized he was awake, she paled and ducked behind Aedan. I rolled my eyes, amused by her sudden bout of shyness, and turned back to the newly awakened dwarf. I forced a smile, despite my worry, and took three strides across the lab towards his cot. \n\nHis reaction was immediate and perplexing: he flinched, breaking eye contact, and half-curled onto his side. It was clear he was weak \u2013 he couldn't roll all the way, and even the flailing was half-hearted \u2013 but equally clear he was terrified. I paused, startled, bringing my hands up in a placating gesture. \n\n\"Faren?\" I took a few small steps, approaching slowly and attempting to look non-threatening. \"You're safe now. Everything is okay.\" \n\nHe didn't react further, though his eyes seemed to be roving around the room somewhat wildly, not focusing on any one person; I assumed he wasn't sure where he was, and tried to reassure him. \n\n\"You're at the Peak, in Avernus' lab. We were rescued, and you've been asleep for a long time. Anders healed you, and now you're fine.\" I had unconsciously slipped into a soothing tone of voice one might use on a baby, or an animal; when he didn't flinch any further, I eased up to the edge of the cot. I heard steps behind me, and assumed that Aedan and Alistair had followed me over; I didn't turn to see, not wanting to look away from Faren's frightened face. \"You're going to be weak for a while, but Anders assures me you will recover. How are you feeling?\" \n\nHe didn't respond right away, examining first my face before his gaze shifted over my shoulder to whoever was behind me. I waited with bated breath, afraid he'd be angry with me for poisoning him, or perhaps just confused as to why he was still alive; listening to him berate me seemed a small price to pay to have him back, and I mentally braced myself. I'll take any amount of anger, I can live with that, if only he's okay. \n\nPlease, please let him be okay. \n\nHis attention was drawn back to me, his eyes fixed on mine, his tattoo standing out starkly on his too-pale face. He opened his mouth as if to speak, cleared his throat \u2013 which sounded painful \u2013 and croaked out a sound that no one should be able to make. I gasped and reached down for the water skin Sigrun had left by his side, holding it up for him and allowing him to gulp a desperate mouthful of water. He grimaced as he swallowed, then gave me a grateful smile, licking his lips to catch the drips of moisture that had spilled over when I tilted the skin. \n\nHe cleared his throat again, and when he finally spoke \u2013 in a rasping whisper that was barely recognizable \u2013 what he said would rock my world. \n\n\"I'm sorry, Surfacer, I've obviously missed something, but I'm fairly certain I'd remember if I'd ever met a human before. Who are you, and how do you know my name?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "celebrities",
        "romantic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-157"
}