{
    "title": "Bring Me to Life",
    "pages": [
        "Foreword: \n\nMost of my favorite stories on the site to date have been the longer stories with a slow build. In that vein, I have chosen to take a similar approach to my first story. If you are just looking for a story that jumps straight to the sex with little content, then this won't be for you. If however you are interested in stories with a longer build-up and more developed characters, then I hope you will enjoy my first attempt at writing here. All constructive criticism is welcome, and thank you for your votes and comments in advance. \n\nNote for clarity: Though not overly specific on location, the story is written as occurring in Canada with respect to observed holidays. \n\nSpecial thanks to careythomas for her invaluable assistance with editing, if you're not already familiar with her work I highly recommend it - her writing is probably what most inspired me to try my hand at my own contributions. (If uncertain how to search by author, you can easily find her in my favorites!) \n\n***** \n\nAlexis - Friday, November 14th, 2014 \n\nIt was dark by the time I got home, I'd been working late again, as I had done all too often since losing Sam almost a year ago. My friends had been supportive for a while, trying to get me to go out and socialize, but without Sam, nothing seemed worthwhile. After a while, they got the hint and stopped asking. We drifted apart. I suppose I missed them, but I didn't really notice because I missed Sam more. \n\nBefore anyone judges them for giving up, it wasn't something I blamed them for at all. First off they were mostly couples that Sam and I used to get together with, and that was itself a part of the issue: they weren't \"my\" friends, they were \"our\" friends. With Sam gone, the dynamics changed and we didn't know how to fit together anymore. Second, I didn't have the emotional energy to do what they tried to get me to do, which was to talk and talk and talk about what happened. I just wanted to shut out everything around me that reminded me of her. \n\nWithout friends, and without Sam, the only thing left for me was work. As a Financial Planner and Portfolio Manager for a respected wealth management firm, I threw myself into my work. Over the past year I had built up my portfolio quickly enough by consolidating client assets, attracting new clients, and some well-timed calls on the US markets taking advantage of the incredible spike in value resulting from their long delayed post-recession recovery. The combination of these factors had conspired to make me the highest performer in the firm, both in new client acquisitions and in growth of average assets under management per client for each of the first three fiscal quarters. With year-end numbers almost final, it was looking like fourth quarter - and by extension my year-end - would be just as strong. \n\nMy performance had always been strong, but my near obsession with my work this year had yielded significant enough results to get me noticed by some of the senior partners in the firm, and the buzz was that I was favored for a promotion. I honestly didn't care one way or another. First, I never paid attention to office gossip, or invested enough time in my coworkers to be a part of any water-cooler conversations. Sam used to say that I was the most lovable misanthrope she'd ever known. Second, work was the only thing that made me get out of bed each morning, so it was my sanctuary - they didn't need to promote me to get me to show up. All that said, I was good at my job, took care of my clients, and ultimately what mattered in this business was results. My boss Marc, the only one at the firm whom I would consider a friend, joked that I should suffer personal tragedies more often. The fact that I found the remark morbidly humorous was a credit to the friendship that we seem to have fostered, and to the fact that time had allowed room for such comments to not completely flatten me. \n\nThere was one thing about the promotion that was appealing to me - I'd get a new office instead of the four by four trading desk I currently had: more privacy and less forced socializing. I would also earn the privilege of having an Associate Portfolio Manager assigned to work with me. I hadn't yet decided if this was a good thing or a bad thing. In theory it would allow me to focus on acquisitions and more complex client concerns while my Associate managed the day to day concerns, but in practice I knew a lot of Associates were no better than glorified secretaries. \n\nAs I walked in the door, my black lab, Max, came running up to greet me, barking excitedly. He was the only thing that could get me to smile these days, and the only part of the life I shared with Sam that I felt no compulsion to push away. Maybe it was my imagination but he seemed to understand what it meant to lose Sam, we'd had Max for six years together and so she had been a part of his family too. In the post-Sam world, it was me and Max... and that was enough. My favorite part of the day was to go for a run after work, and Max was the perfect running companion. I gave Max's ears a quick scratch, \"Sorry I'm late boy, why don't we get your dinner ready and then we'll go for a run?\" \n\nBarking once, as if in agreement, Max ran to his mat and waited patiently for his dinner... which he wolfed down in about five seconds flat. I chuckled as I changed, marveling at his ability to literally inhale his food, and pulled my sneakers on. Max scratched at the front door as I put my hoodie on. \n\nThe moment I took the first couple steps towards my normal route, I felt like Max and I shifted into a different world. I wasn't alone, and I didn't have to remember to breathe. The steady thuds of my footfalls and the clinking of Max's collar were my therapy, and I was able to think about Sam - cry about Sam - without prying eyes and idiotic platitudes from well-meaning witnesses. \n\nIt was after nine by the time we got home from the run. My ragged breathing and the clickety-clack of Max's paws echoed through the house, which was now almost bare. Everything sat haphazardly in various-sized boxes, the only items remaining were the bigger pieces of furniture and my office. At one time I had loved living in this house, two stories with a red brick exterior and a finished basement. The back of the house faced west and opened onto a large yard bordering on a small lake, and the master bedroom on the second floor had floor to ceiling windows looking out over the yard, providing spectacular views of sunsets over the lake. Sam had been an architect and had designed every inch of the house when we bought the land ten years earlier, and that was ultimately the problem... as much as I couldn't let her go, I'd come to realize that living in the house she had built for us was untenable. Every bit of the place spoke to me of her... and yet as much as I couldn't live here anymore, I couldn't bring myself to sell it either. Instead, I had hired a property management company to furnish it and rent it out however they felt would be best. In fact, they assured me that they'd have a tenant in by the end of the next week. \n\nAs for myself, I was moving into the city. I'd just closed on purchasing a condo close to my work, it was ground floor, had access to a small yard for Max, and I had already found several parks in easy walking distance. My thoughts were interrupted by my phone. I picked it up and noted an unusual number of missed calls from Marc. \n\n\"North American markets closed hours ago, signaling the start of the weekend where, as you usually enjoy reminding me, means no matter what happens I can't do anything about it for two days. Why are you bothering me?\" I couldn't fathom what the urgency could be. \n\n\"Human interaction doesn't just have be predicated on market movements, Alexis; I almost don't want to tell you now.\" \n\n\"What?\" \n\nMarc sighed dramatically, \"They promoted you. I tried to tell them you were a lost cause, but there were dollar signs leaking out of your portfolio, so there you go.\" \n\nI laughed, \"Good to know you have my back. So why not wait to tell me on Monday?\" \n\n\"Staffing. You have the option of getting staffed with an Associate, and the new rosters go out over the weekend. So, if you want an Associate, you'll get one. Happy early birthday, Alexis Hart.\" \n\nGlimpsing the calendar out of the corner of my eye I was reminded that my birthday would be this weekend... the first one without her. I closed my eyes as I fought back the memories of how much had changed in so little time. I would be turning 32 this year and while most people would insist I was still young; I felt like my best years were already behind me. \n\n\"Sure, why not,\" I said resignedly, \"I guess I'll meet her Monday.\" \n\n\"Nonsense,\" said Marc, \"Take the week off. You're moving, right? And you've got more vacation days accrued than anyone at the firm.\" \n\nI didn't say anything. I couldn't imagine what I would do without having to go to work. \n\n\"Take the week off,\" Marc repeated, \"I'll assign you someone and he or she can shake in their boots for a week before you come back and torture them as only you can.\" \n\nI frowned, wondering if whoever Marc chose would actually be helpful to my workload. \n\n\"... I assume by your silence that you agree,\" Marc had a slight hint of amusement in his voice, \"It's rare to catch you at a loss for words, Alexis. A vacation will do you good.\" \n\nI muttered something stupid in response and Marc hung up. With a sigh, I went to shower and get ready for bed. Sleep, as usual, did not come quickly, but eventually I drifted off to dreams of the life I was supposed to have with Sam. \n\nAlexis - Monday, November 24th, 2014 \n\nMy week away was a blur. Thankfully, the logistical tasks of the move were enough to make the days pass without issue. Max seemed to have taken the change in location in stride and I followed his lead in not overthinking everything. It wasn't until my first morning back at work that I remembered I had my new Associate to meet. \n\nI got to work a few minutes after nine, as was my habit - technically I was late, not being much of a morning person, but I more than made up for it in both hours worked and results so Marc never gave me any grief over it. Deciding that since I'd be working closely with the new associate I should make an effort to at least know their name, I made a quick stop at admin where Jonathan was already at work organizing the year-end meeting for the senior partners to review our office's performance with the corporate VPs from headquarters. \n\nBeing largely independent, the senior partners managed the day-to-day operations, but since being acquired by one of the country's largest financial institutions almost six years ago, this quarterly song and dance had become a new part of their routine. I was happy enough not to be involved in that nonsense, preferring market analysis to corporate politics any day. \"Morning Jonathan, have you got a moment?\" \n\nHe looked a bit surprised, though whether because I rarely approached anyone at the office or because he hadn't noticed me wasn't entirely clear, \"Uh, of course Alexis, what can I do for you?\" \n\n\"I was told a new Associate was going to be working with me and should have started last week, but I was on vacation. Any chance you know their name?\" \n\n\"Oh, sure, let me see... Mikaela Young.\" \n\n\"Thanks Jonathan, have a good day.\" \n\n\"You too, Alexis.\" \n\nGiving him a simple nod of acknowledgment I set off towards my office ready for a long day catching up with clients and their accounts and to find out just what type of Associate I had been assigned. Our office was certainly large enough in its own right, and even larger in you take into account our corporate office, that there was a broad pool of talent to choose from. Despite that, I reminded myself that everything was a bell curve and I had heard a wide range of feedback from other Portfolio Managers about the professional chemistry, or lack thereof, which could make being staffed with an Associate one of two experiences: either a heaven-sent lifesaver or an absolute nightmare. \n\nWalking into my new office, my first thought was that I had just stumbled into a third category: total enigma. The young woman sitting behind the smaller desk had her black hair in a pixie cut with the tips bleached and dyed pink. Looking past the hair I noted a silver stud on one side of her delicate nose, and her makeup darkened her eyes and lips. She looked like she would be more at home at a club than in one of the most reputable financial firms in the country. \n\nBut she somehow made it all work: she was professionally dressed in a sapphire blue silk blouse that seemed to set fire to the bright emerald green of her eyes, and a pair of black slacks that fit her form so well they must have been tailored for her. \n\nLooking up at me as I walked in, she smiled slightly, albeit confidently, and introduced herself, \"Good morning, Alexis I presume? I'm your new Associate, Mikaela.\" \n\n\"Alexis,\" I said curtly, confirming her assumption, and offering her outstretched hand a firm shake, \"You've been busy, apparently.\" I noticed a thick sheaf of papers in her other hand. \n\n\"I took the time to go over your accounts last week and familiarize myself with your clientele. I have some questions - but I won't bombard you with them until you've had a moment to settle in.\" \n\n\"Fire away,\" I said, slightly amused by her take-charge attitude. She was not intimidated by me in the slightest. \n\n\"Really? Wow. Ok. Of course I would appreciate getting your feedback as I go, so that in the future I can better put this stuff together for you.\" \n\nOver the next hour she presented her review to me, and while a few points merited a bit of debate, most of them were largely based on the client's network and potential influence on referrals which she did not have context for and could not be easily tracked through simple account histories. She had also managed to identify two potential at-risk clients who had been slowly moving out large portions of their portfolios over the last six months. To say I was surprised by the acuity of her evaluation would have been an understatement. Closing up the review, I acknowledged the quality of her work before mentally adjusting my schedule for the day, \"You've done a great job here Mikaela,\" I couldn't help but smile as her eyes lit up, \"I had planned some follow ups for this morning, but you've already covered most of it. So let's pivot and tackle those two large accounts you mentioned right away so we can work to retain them, and in the meantime I have a few files I'd like you to look at and a couple of clients to contact for me...\" \n\nMikaela - Friday, November 28th, 2014 \n\nI was exhausted after my first week working with Alexis. I'd known her reputation well ahead of time and where others saw an ice queen or other far less flattering terms, I had seen an opportunity to work with, and learn from, one of the more successful women in the firm. When word had spread that she would be getting an Associate soon, I wasted no time in making my interest in the position known. While I didn't play it up, I wasn't without connections in the firm and so I had easily secured myself the position. Of course, it didn't hurt that I wasn't exactly facing a whole lot of enthusiastic competition. \n\nOne thing was for certain, however, her reputation for being stand-offish was nothing compared to the hours she put in. With the added task of learning to work together we had easily put in over sixty hours this week at the office alone, with plenty more corresponding from home, and I was running on fumes. And it was a relatively light week, given the Thanksgiving holidays in the US, I found it hard to imagine what it would be like with the US markets open all week. \n\nAs had been more often the case this week, I grabbed a light dinner in town after leaving the office late and stumbled home with little on my mind except for a hot shower and sleep. As I climbed the stairs to the second floor and into my bedroom, my eyes flitted to the windows on the far wall, the beautiful lake view shadowed by the dark of night. I'd only just moved in last weekend, a miraculous real estate fluke. This was the first place I saw with the broker and fell in love with it immediately. \n\nShedding my clothes and placing them in the hamper, I stepped into what might have been one of the best parts of this place: a large full master bath containing both a sizeable stand-alone shower and a luxurious bath complete with jacuzzi jets. Even with being outside of the city, I still could hardly believe the deal I had gotten for this place, the rent could easily have been double what it was and still be considered fair, and I rather preferred being away from the noise in the evenings. \n\nAs the hot water of the shower poured through my hair and I gently lathered in my favorite lavender shampoo; I closed my eyes and just basked in the cathartic combination of soap and water as the heat slowly worked its way deep into my muscles. \n\nFinally feeling clean and refreshed, I turned my attention to rinsing off the last suds of the soap, my hands skimming lightly over my breasts and lingering slightly to massage the sensitive mounds. Tilting my head back and closing my eyes as I enjoyed my soft caress, I was startled when a pair of sharp blue eyes appeared in my mind's eye. There was no mistaking they were Alexis's eyes. They most often appeared as cold as her icy reputation, but I had also seen them melt to a gorgeously warm sapphire the night before when she was briefly lost in thought... Fuck... \n\nI finished the rest of my shower quickly, pushing aside thoughts of Alexis as I dressed for bed and resolutely ignoring my aching need for a quick release... the thought that her eyes, or any other part of her gorgeous body, might drift into (or drive) my fantasies was more than enough to keep my erotic urges at bay. I mean, lusting after a colleague, especially one who was my boss in everything but name, could never end well. Right? Right... \n\n************ \n\nAlexis - Friday, December 12th, 2014 \n\nIn the three weeks Mikaela had been working with me I quickly came to depend on her far more than I would have imagined possible. If there was one word to describe my time with her, it would be \"unpredictable,\" but in the best possible way. Her keen insight and ability to see beyond the numbers had helped me to not only save my accounts with two of my larger clients that were recently being courted by a rival firm, but to significantly expand my relationships with a half dozen other clients by demonstrating the value of consolidating their family's assets with me, further reinforced by reminding them of how much I had helped them with their portfolios over the last seven years, most notably after the global financial collapse in 2008. As with most people, they had wanted to abandon their investments when, after a year of bad news, they started to feel like there was no end in sight. I had been able to successfully argue the value of their defensive investment positions and the importance of weathering the storm. Six years later, where many others were still struggling to regain their losses from that horrible time, my clients were profiting nicely. I had already signed one of them on for a family management pricing plan and had appointments booked for the other five in January to do a full review of their family portfolios. \n\nMore surprising for me was that despite everything we had accomplished in the last weeks, having her in my corner meant that I was actually going to be leaving early on a Friday, if for no other reason than I was so ahead of schedule that I honestly couldn't come up with an excuse to pull another late night. As I grabbed my coat, I hesitated at the door and, faced with the prospect of an evening without distractions did something completely impulsive. Before I could stop myself, I turned back to Mikaela. Ever alert to what I might need, her eyes flicked up from her computer monitor, \"Something you need from me, Alexis?\" ",
        "I hesitated only a moment before reminding myself that the alternative was far too much time alone with my thoughts, \"I umm... I just wanted to say how much I appreciate your hard work these last weeks...\" I paused, trying to find the right words, \"I mean, I'll admit to being a bit concerned about whom I would be saddled with, but... well, if these first three weeks are any indication I really am grateful that you were selected as my Associate.\" \n\nHer smile lit up her eyes, which made my mouth say something I hadn't fully thought through, \"I know I pushed you hard the last few weeks and you've put in a lot of extra hours for me... if it's ok, I'd like to thank you by taking you to dinner tonight?\" \n\nMikaela - Friday, December 12th, 2014 \n\nThe air felt charged as Alexis's question hung there. Those blue eyes, usually cold as ice, in rare moments warm as sapphires, now looked almost scared. The nervousness in her eyes briefly made me wonder if there was more to this invitation that she was saying, and a voice in the back of my head asked if that wasn't because I wanted there to be something more... with a mental 'Fuck it', I decided to test the waters as I replied with a light teasing tone intended to give her an easy out if I was off the mark as I replied, \"Why Ms. Hart, dinner on a Friday night? You wouldn't be trying to ask me on a date would you?\" \n\nI immediately regretted my decision as the blood seemed to drain from her face and with a strangled gasp she shook her head and then practically ran from the office. Swearing under my breath I quickly closed up my system and grabbed my coat as I rushed to the parking garage, hoping I'd find her before she left. I had no clue what had just happened, but I knew I had to try and fix it. \n\nAlexis - Friday, December 12th, 2014 \n\nI barely registered the halls of the office as my feet led me to my car, wracked by fear, guilt, and the darkness I struggled so hard to shut out. Sam's beautiful face floated in my mind as I sat in my car, barely holding tears at bay. What I saw was not the too thin visage of her illness, but the vibrant lively face that I remembered from our best years. The only thing out of place was the accusation in her eyes... a look I had never actually seen from her, but I certainly felt it, powered by my own guilt. Why had I asked Mikaela to dinner? Why had I let my guard down around her? Was I being unfaithful to Sam's memory, or simply afraid of being alone with my thoughts? \n\nA caustic laugh ripped itself from my throat at this last thought, even if I was interested in someone else, I knew Sam wouldn't have been mad at me... not after she had made me make that impossible promise. I closed my eyes as my memories spiralled back to that day last year... \n\n******* \n\nAlexis - Saturday, November 16th, 2013 \n\nMy heart felt like it was being ripped out of my chest as I saw the pain on Sam's face, pain that I couldn't do anything about, and for lack of anything better, I took her in my arms and just held her. \n\nWith a shuddering breath, she looked up at me and whispered gently, \"I love you Lexie, with all my heart. I've been so blessed to have these last ten years with you, you know that right?\" \n\nMy only answer was to hold her tighter and kiss her forehead, a tear forming in the corner of my eye as I watched my heart in so much pain, \"I feel like we just found each other... ten years are not enough...\" \n\n\"Shhhh. Honey, I need you to promise me something. Lexie, it's something I know you will hate, but something I need you to promise me. It's the only way I can let go peacefully...\" \n\nI gasped, my voice strangled as I tried to argue, \"No! Don't let go. You could still get better Sam... there's that new clinical trial...\" \n\nShe didn't let me finish, \"No Lexie... I can feel it, and I hate that I'm going to be leaving you, but the doctors are right... the cancer is simply too far advanced... I'm not sure how much time I have left with you. That's why I need you to promise me that when I'm gone, you will remember how to live. You put so much of your life on hold for me during my illness this year, but you need to go back to living and, eventually, you need to let someone else into your life... you're too young, with too much life yet to live, to love, to be happy.\" \n\nI shook my head, not wanting to hear this, \"Sam, I...\" \n\nShe cut me off before I could refuse her, and said calmly \"Lexie, my love... consider this my last request. Please, promise me?\" \n\nLooking into her eyes, wondering at the strange peace that seemed to have masked her pain for now, I nodded helplessly \"I promise, Sam.\" \n\nShe whispered \"Good, I love you dear heart... happy birthday\", with that said her eyes closed and then suddenly she went limp in my arms. \n\n\"Sam?\" I brushed her hair back from her face, shocked at how quiet the room had suddenly become ... \"Sam!\" my voice broke as I tried in vain to get a response. Turning my head I cried out for the live-in nurse we'd hired so Sam could be comfortable at home. That was the last time Sam and I spoke. She slipped into a coma... and then slipped away. \n\n********* \n\nAlexis - Friday, December 12th, 2014 \n\nMy thoughts were startled back to the present by someone knocking at the window of my car. Looking up I saw Mikaela standing outside my car, concern clearly etched on her features, and with a tired resignation, I waved her to the passenger side where she got in and turned to look at me, holding out a pack of tissues. \n\n\"Thanks... I must look a fright,\" I answered her, looking pointedly at my hands. \n\n\"Alexis, if I said anything inappropriate...?\" \n\n\"No... no it wasn't you... it's just... something I'd rather not get into right now.\" \n\n\"Fair enough, sounds like you could use a distraction from something though and I do recall a dinner invitation, strictly professional of course?\" \n\nGrateful that apparently Mikaela was as adept at reading my needs outside the office as she was within, I nodded and replied \"I vaguely recall the offer in question, I don't suppose we could take a rain check though... I'm suddenly...\" \n\nBefore I could finish, Mikaela deftly cut me off with a gentle smile \"Now Ms. Hart, I do believe my employee feedback forms are due next week and I don't believe that reneging on an offer of free food would play very well in my feedback. For strictly professional reasons, I must urge you to think about your year-end review and take me out for that dinner you offered.\" \n\nStifling a laugh at the impish gleam in her eyes, I shook my head, \"Alright Mikaela,\" I wondered how it was that she could make me smile at this particular moment, \"You've persuaded me.\" \n\nShe just nodded, \"One more thing, no more of this Mikaela nonsense. I prefer Mikey.\" \n\n\"You drive a hard bargain, Mikaela,\" I grinned, enjoying the flash in her eyes at my refusal to cave. \n\n\"So where are you taking me, then?\" \n\nMikaela - Monday, December 15th, 2014 \n\nThe weekend had passed in a blur. During dinner Friday Alexis had been quiet and withdrawn; the woman who usually radiated a calm authority had simply looked lost. Whatever it was that spooked her was completely off-limits, and after dinner she dropped me off at my train with a polite wish for a good weekend and a comment that she would see me in the office Monday. \n\nI had tried reaching out to a few contacts to find out more about her, without any mention of Friday's events, but was met with either the typical response of \"She's just made of ice that one, don't say I never warned you,\" or a far more concerning comment along lines of \"It's not my place to say... if she wants you to know, she'll tell you.\" The latter usually came coupled with sympathetic support for whatever hardship she might be putting me through, but I wasn't concerned with their sympathy, I was concerned about what was hurting my friend so much... and about the pain I'd seen in those sapphire eyes... fuck, I thought as her eyes floated back into my mind, I am so fucked... How is it possible that I could care so much for her in the short amount of time that I've known her? \n\nWalking into the office I was surprised to find Alexis had arrived before me. While she was no shirk, and often stayed late, mornings weren't usually her thing. One look at her eyes let me know what kind of day this would be: Icy with storm clouds. \n\nI shot over a warm \"Good morning,\" and she responded with a single nod, I got behind my desk and got to work. \n\nAlexis - Wednesday, December 17th, 2014 \n\n\"Because Marc, I don't want to go, that's why.\" I glared at the telephone silently cursing my boss for pushing me to go to the company's dinner this Friday. \n\nHis warm chuckle through the phone was aggravating as he replied, \"Well you should have thought of that before you shattered pretty much every sales record the firm has ever had. The senior partners made it very clear to me that they expect to see you there, and it's my ass if you're not.\" \n\nGrowling to myself, fully aware I was losing this debate, I gave it one more halfhearted attempt, \"Be that as it may, I...\" \n\nHe didn't let me finish, this time his voice carried a slight edge, though no less warmth, \"And because you know what she would have said.\" \n\nI sat back shocked into silence for a moment, the downside of Marc being a work-friend was that he knew everything that I'd gone through with Sam, but more importantly he had actually known her and mourned with me when she passed. \"Fuck you for going there, Marc...\" \n\n\"Does that mean you'll come?\" \n\nA last sigh, \"Yeah... don't even pretend you didn't know that you'd win that one.\" \n\n\"Good, and bring that new Associate we hired for you. If she's half as good as your evaluation says, she should meet some of the partners too,\" and adding with a touch of sympathy, \"and if you're lucky she may deflect some of the attention from you.\" \n\n\"One can hope, I suppose. Send me the details for the dinner by end of day please?\" \n\nAs I hung up I turned to relay the invitation to Mikaela and then went back over some of the updates she had sent me last week as well as the usual client concerns approaching the holidays. \n\nWhen I asked her about it later on, I noted the look of concern on her face, \"Everything OK Mikaela?\" \n\nShe looked, for the first time since I've known her, completely unsure, \"Oh, yeah, it's just that I'm not a huge fan of driving in the city and it doesn't look like the transit lines are that great near the restaurant for Friday.\" \n\n\"Well, that's easily remedied. If you'd like, I can give you a lift to the restaurant from work and drop you at your train after?\" \n\nMikaela smiled as a look of resolve formed on her face, \"If it's not an imposition... I'd really appreciate it.\" \n\nI found myself considering her briefly before responding, it seemed like she was still uncertain, but if she didn't want to tell me what was really on her mind I wasn't about to pry. \"Think nothing of it,\" I replied as I buried myself back in my work. \n\nAlexis - Friday, December 19th, 2014 \n\nMikaela and I had called an early day today to get ready for the dinner tonight. For my part I was wearing a black dress that Sam had always said looked great on me. I accessorized with a diamond solitaire necklace that Sam bought for me our last Christmas together, coupled with matching stud earrings. I had my hair done and carried a small black clutch with my essentials. It was pretty simple as far as these things went, but it was good enough for a work function and I didn't have the energy for more than that. And now I was waiting for Mikaela who was, uncharacteristically, running late. My phone buzzed, catching my attention and alerting me to an incoming text, \n\n\u300aMikaela\u300b Be there in 5, sorry I'm late. \n\n\u300aAlexis\u300b If you want to be a couple hours later it would give me an excuse to skip this? \n\n\u300aMikaela\u300b Not a chance in hell Alexis, didn't spend this long getting ready just to ditch \n\n\"Damn... oh well, didn't honestly expect that to work,\" I muttered to myself. \n\nA movement to the side caught my attention and as I looked up I felt my breath catch. Mikaela was walking towards me and I couldn't help as my eyes slowly traveled upwards from her shoes, barely able to fully take in the sight. Where she normally wore flats, tonight she had put on an elegant set of black short heels with just enough lift to emphasize the curve of her calves. Above that she wore black slacks, as was her habit, but these were tailored so perfectly to her that they looked painted on. Her blouse was perfect, sapphire blue like the one she wore when I first met her, but this one flared over her hips going a bit past mid-thigh, giving the impression of a dress while preserving her preferred style. \n\nShe wore an open front black jacket over the blouse which seemed to emphasize rather than mask her figure. Around her neck was a choker of emeralds sparking with the same fire as her eyes, and matching emeralds hung from her ears. As she strode towards my car, I found myself staring, then mentally kicking myself as I reminded myself that I had already had my turn... Sam may have died young, but I would hold on to that memory and stay true to her. \n\nSwallowing hard, I managed a teasing \"About time, ready to go?\" as I climbed into the car. Apparently Mikaela found some humor in this because she just laughed as she climbed in beside me. \n\n\"Yeah, let's go,\" she finally added as I realized that I hadn't started the car yet. Blushing slightly that she'd distracted me so, I put the car in gear and drove off to the dinner. \n\nMikaela - Friday, December 19th, 2014 \n\nI sat next to Alexis quietly. On the one hand I had noticed her appreciation of my appearance and a part of me was thrilled by it, though in light of her near breakdown a week ago I knew that those were dangerous waters... shark infested, even. Mostly though I was concerned about this dinner, though for a reason very different from what Alexis may have assumed. \n\nMy concern centered on my father. It wasn't something I talked about, and for the most part I had managed to keep a lid on this factoid, but my father was the Senior VP of Wealth Management at the corporate office, and I had no doubt that the senior partners would certainly recognize me as Dad's plus one from the annual gala the head office held for upper management. Despite my insistence on keeping the relationship private for the most part so that I could advance strictly on merit and not on the basis of blood, he had countered by insisting that I get the opportunity to meet and network with other leaders in the business. I vehemently disagreed with him, of course, until the opportunity to work with Alexis popped up. The end result was that I was now on my way to a dinner where all my careful attempts to obfuscate my family background might be for naught. \n\nDespite that, I was not blind to the vision of Alexis sitting next to me, her attire was so like her... designed to look just elegant enough to fit in without standing out. The only flaw with her plan was that if one knew to look a little more carefully (and I did), the dress did very little to hide the incredibly sexy body underneath. The subtleties of her dress only served to emphasize her natural beauty, and if not for discovering the emotional minefield that lay beneath it, I had to wonder if I wouldn't try to see where things would go. I briefly let myself fantasize such a reality; while it may raise some eyebrows, technically I reported to Marc and not to her, so there weren't any actual conflicts of interest... and even if you considered my father's position, he was far enough removed that the lack of influence (he had no say in the way individual teams were compensated or promoted) was true for the reverse as well. I stared at the passing shadows in the wing mirror, once more berating myself for falling for someone like Alexis. \n\nLost in thought, I failed to notice that we had arrived until Alexis nudged me, \"Shall we go parade for the senior partners?\" she asked, somewhat sarcastically. \n\n\"Hmm, let's, but do remember their age when you strut past them, wouldn't want them getting heart attacks over staring at your... swish,\" I finished cheekily. \n\nI was rewarded by one of Alexis's rare laughs and her eyes melting into sapphires for a brief moment before she shook her head and got out of the car. \n\nWe survived the necessary small talk and the inane banter of boring financial analysts. Thankfully, we were all called to our tables before either one of us died from boredom. I didn't think I'd ever meet someone who hated cocktail events more than me, but Alexis won top prize hands down. \n\nThe meal itself was wonderful, though the rest of the evening was best described as stuffy and self-congratulatory. I had managed, at least, to subtly discourage any of the partners from openly acknowledging me, and I might have been imagining it, but Marc certainly seemed incredibly amused that he knew something about me that Alexis didn't. He kept glancing over at us and grinning as we heard speech after speech about the firm's success. \n\nWhen they started to rattle off individuals for recognition, Alexis was singled out as a star performer. That was when I realized that the more praise was lauded on Alexis the more she drank and while it was clear that she could hold her liquor, she was in no condition to drive when the dinner came to a close. \n\nFor once I was grateful for my relationship to my father as I was able to discretely speak with a couple of the senior partners and make excuses that Alexis had been fighting a virus the past couple days and was feeling unwell so I would be helping her home. Whatever they may have felt about my story, they clearly felt it best accepted at face value and conveyed well wishes for her health. Being familiar with the venue, I led Alexis out one of the side exits near our table to avoid an embarrassing interaction, and the inevitable office gossip that would follow. As I helped Alexis through the gardens and back to her car I was faced with a new dilemma: I didn't know where she lived and she wasn't in the best state for giving directions.  \n\nTaking her keys, I made a decision and just hoped for the best as I drove her back to my place. \n\nWhile I had a spare bedroom, it wasn't furnished, so after chewing my lip to shreds debating on the best course of action, I decided that my king size was big enough to share and, helping her out of her dress (and trying not to ogle her too much), I helped her into an oversized t-shirt and into bed before getting changed myself and crawling in on the other side. \n\nAlexis - Saturday, December 20th, 2014 \n\n\"...remember how to live,\" the voice floated through my head as my eyes cracked open. My head hurt something fierce, but for a moment my heart felt light. I looked out the grand windows to the lake down the slight hill and, closing my eyes again, rolled in to the warmth next to me, wrapping my arm around her and holding her close. I knew this was a dream, I hadn't lived here for over a month now, but my dreams were the only place left I could be with Sam so I just lost myself in the warmth and love as I leaned forward to kiss the top of her head. \n\nBreathing in deeply, something started nagging at me... this wasn't quite right... though pleasant, the hair in front of me smelled of lavender and not of coconut as Sam's would have. And that's when reality came crashing down on me as I jerked back, almost as if burned, looking down at Mikaela who was just stirring at my abrupt move and whose eyes were suddenly filled with concern as I pulled my knees to my chest and just sat there. \n\nMikaela - Saturday, December 20th, 2014 ",
        "I was slowly waking up, feeling warm and secure with someone's arm around me, when with a sudden jerk the arm was gone and, looking over my shoulder I saw Alexis almost cowering back by the wall. My heart breaking for how scared she looked I reached out to gently touch her arm, \"Alexis? It's ok hon,\" I mentally kicked myself as soon as the endearment left my lips, \"You had a bit too much wine at dinner last night and I didn't know where you lived. I brought you back here, but nothing happened... Alexis, are you ok?\" \n\nI strained to listen to her as I heard light muttering between sobs, \"Not Sam... not Sam... not Sam...\" \n\nI was stuck, not knowing how to respond... I didn't know who Sam was, and without context I didn't know what she needed... so deciding to just give her silent support I moved over to her and pulled her, unwillingly at first, into my arms where after struggling for only a moment she broke down and started crying into my shoulder. \n\nAlexis - Saturday, December 20th, 2014 \n\nI slowly came back to myself, the yawning black pit that constantly threatened pushed at bay for now, and looked up to see Mikaela looking back at me. Her eyes showed warmth without the slightest shred of judgement as she just held me and let me recover myself more fully. \n\nEventually I found myself starting to feel a bit silly as my familiar defenses started coming back up and I tried pulling away, but Mikaela wasn't quite done and squeezed me one more time tightly before whispering \"I don't know what happened to you, but whatever it is if you ever need someone to talk to I would be happy to listen.\" Only after that did she relax her arms enough to let me get up if I wanted. I found myself lingering just a bit longer before releasing a long sigh and sitting back up. \n\n\"Ummm... I... I guess I owe you an explanation...\" I started, but she stopped me before I could continue. \n\n\"Alexis, anything you want to tell me I will give you my full attention and confidence, but you don't owe me anything... I know we only met a month ago, but I would like to think we have developed a friendship and I've seen enough to know you're hurting. If you want to share, I'm here... but only if you're ready.\" \n\nI felt my breath catch as I stifled a fresh sob and nodded, \"Thank you... it's just...\" I looked around the bedroom, \"Did you know this is my house? I put it up for rent through an agency last month, I knew they had found someone quickly but I never imagined...\" \n\nMikaela was silent for a moment, her eyes clearly showing her surprise at this revelation, \"No, honestly I had no idea. I was just thrilled to find such a beautiful place within easy distance of the city at such a great price... but if this is your home, why on earth aren't you living here? Clearly it isn't the distance...\" \n\nI looked down at my lap, fidgeting a bit as I replied softly, \"That would be where the story gets a bit longer...\" \n\nWith genuine warmth, Mikaela reached out to touch my shoulder and, when I looked up at her, she simply said \"In that case, why don't I put together some breakfast and you can tell me as much, or as little, as you feel like?\" \n\n\"...remember how to live,\" the voice from my dream... Sam's voice, and her dying request, floated back in my mind as, for the first time in a year, the darkness started to shrink a little. It was still there, still threatening, but somehow not as strong. I look up to see Mikaela... Mikey waiting for my response, \"I'd like that... Mikey.\" \n\nThe smile that spread across her face when I used the diminutive of her name as she preferred was a ray of sunshine stabbing through to the darkness in my heart, and she turned and bounced from the room, her black hair flying up as she did, the pink tips catching the morning sunlight. \n\nTen minutes later, a hot cup of coffee in front of me, I allowed myself to tell Mikey everything. \"She was diagnosed with a rare and aggressive form of bone cancer almost two years ago. It spread fast and none of the treatments seemed to help. She wasted away day by day, and every day a little bit of me died with her. I didn't know how I'd live without her, I still don't, she was everything to me... we'd been together since college. The one thing I realized was that I was never going to 'keep on living' like she wanted if I lived here. She designed every inch of this place, imbued it with her spirit in a way... I wonder if...\" I felt my voice trail off as I remembered hearing her voice as I woke up earlier that morning. It was only a dream, but... was it? \n\nTrue to her word, Mikey listened attentively, freshening my coffee as needed and sitting patiently whenever I lapsed into silence. She hadn't asked a single question, but also hadn't taken a single one of my silences as the end... just waited for me to find my strength and choose my words. When I finally dared look at her face, her eyes were wet with tears and she was giving me the same undivided attention now as she had for the last couple hours. \n\nAs I started to say something more, I was suddenly overcome with an incredible sense of tiredness, but also a peculiar lightness. It was as if a large part of the weight I had been dragging, not all of it, but enough, had suddenly vanished and I was just now allowing myself to realize how tired I was. Yawning widely, I felt a blush creep up my cheeks. \n\nMikey, bless her, as always demonstrated that keen insight that seemed to let her know what I needed even before I did yet again as she commented, \"That was hell that you went through, Alexis...\" \n\nI almost stopped myself, but something forced the word out of me, \"Lexie.\" \n\nShe paused a moment, a flash of confusion, and then, \"Sorry, what was that?\" \n\nMy throat constricted briefly and I swallowed before pushing through, in for a penny and all... \"My friends... call me Lexie.\" \n\nMikey's face immediately lit up as understanding dawned, \"Alright, well then Lexie, this morning has clearly taken its toll on you, so why don't you lie down a bit and take a nap. I'll clean up and when you're ready we can figure out what to do later?\" \n\nI smiled, surprised at the ease of it, and nodded simply, \"Thank you... I umm, well I guess I know my way around. I'll...\" \n\n\"Shush, go lie down, talk later.\" \n\nI felt my eyes tear up again, but this time it was gratitude at how well she understood my needs instead of the oppression of the darkness that always threatened. \n\n***************** \n\nAlexis's Dream \n\nI was walking through our home, everything was familiar yet different. I was looking for something, but didn't know what. \n\nAs I walked into the bedroom and looked out the windows, I saw someone standing on the patio and somehow knew this is what I had been looking for. \n\nStepping outside, I closed the door behind me. The noise made the person turn and look up, my breath catching as I recognized her, \"Sam?\" \n\n\"Yes love, it's me.\" \n\n\"But... how? I've been looking for you for so long and couldn't find you.\" \n\n\"You weren't ready,\" Sam answered, \"you needed time.\" \n\nAngry, I snapped back at her \"I didn't need time Sam, I needed you!\" \n\n\"That's why you needed time, my love... you can't have me anymore... I'm gone, and you need to remember how to live... to go on living without me.\" \n\n\"But... you're here now, why can't you stay?\" \n\n\"I can't stay, because I'm not really here... I was waiting until you were ready to hear this, because I only get one shot at this. After today, I won't be able to speak to you again... there are rules.\" \n\n\"Rules? I don't understand...\" \n\n\"Sometimes, my love, fortune favors us with a last chance to say goodbye... I made you promise me to go on living after I died, now I need to tell you that I meant it. Watching you this past year has torn me apart, I can't bear seeing you in so much misery. You have a chance, and I want you to take it... for me, please, try and remember how to live without me.\" \n\n\"But... I love you... that should be enough...\" \n\n\"It's enough for me. But not for you. I will always love you, but you must live, not just survive, and you need to let yourself love again. Because you can - remember your promise.\" \n\n***************** \n\nMikaela - Saturday, December 20th \n\n'Well, you definitely understand why anyone who knew her said it was her story to tell Mikey', I thought to myself, 'she's been living with so much hurt, I'm amazed at her strength to keep moving on. As if there wasn't enough about her to fascinate you already... just be careful, Mikey, that's a fire just waiting to burn you if you're not careful.' \n\nI was finishing cleaning up and had just made a cup of tea when a sound from upstairs caught my ear. Moving up quietly, so as not to wake her, I approached the bedroom and heard it again... Lexie was crying. I quickly moved in and wordlessly wrapped my arms around her, holding her close as she cried in my arms. With my free hand I brushed her hair back and caressed her cheek. \n\nEventually her tears ran dry and, with a light sniffle she looked up at me, \"I seem to be making a habit of this, don't I?\" \n\nWith a wry smile as I looked into her eyes, I pulled her in close, \"I'm not complaining. Do you want to talk some more?\" \n\nAlexis - Saturday, December 20th, 2014 \n\n\"No,\" I felt Mikey stiffen slightly as I rested my head on her chest, \"I mean... just not right now. I can't express how much I appreciate you listening to me, but... I need to work some things out for myself.\" \n\nI felt her relaxing under me as I continued, knowing she understood I wasn't trying to shut her out again, I just needed time to process. \n\n\"I understand, and when you're ready...\" \n\n\"When I'm ready, you'll be the first to know.\" I felt her arms tighten around me and I allowed myself to enjoy the comfort, for the first time since Sam's passing allowed myself to lean on someone else, even if only for a moment. \n\n\"Good,\" she replied, and then fell silent holding me close and stroking my hair. I must have dozed off again because the next thing I knew the room was a fair bit darker and looking out the window I could see the sunset. Mikey was sitting against the backrest, still holding me in her arms, and I blushed a bit as I sat up. \n\n\"Umm, sorry about that...\" \n\n\"Don't be, you looked like you needed it. Are you hungry?\" \n\nA growl from my stomach answered her first and, with another blush, I replied \"I guess so... but I probably need to get home for a shower and change of clothes...\" \n\nWith her trademark impish grin, Mikey shrugged, \"I believe I recall you saying this was your home, so check on that, and we're about the same size so I can lend you a change of clothes. That just leaves a shower. Why don't you go ahead and hop in while I put something together for dinner?\" \n\nI shook my head ruefully, and smiled at her \"I suppose this isn't up for debate?\" \n\n\"Nope, now go on while I get dinner sorted,\" and with that she gave me some clean clothes and left the room. \n\nIt seemed odd, just a month ago I'd felt like this place would drown me, now it still felt like Sam but... Sam wasn't here anymore. I headed into the bathroom, stripping off the t-shirt and my underwear as I went, and stepped straight into the shower. \n\nAdjusting the familiar controls, I closed my eyes as the hot water poured over me, imagining that I could see it literally washing away so much of the shadows that still clung to me. Looking to the soaps I picked up the shampoo and smiled as the smell of lavender mixed with the steam. I took my time washing up, feeling more alive than I had since before Sam got sick... a twinge of sadness flicked through me at that thought, but it no longer overwhelmed me. \"Unpredictable,\" I muttered to myself as I thought about how Mikey had changed everything. \n\nI dried off and padded back in the bedroom, my hair wrapped in a towel, and looked at the clothes Mikey left out for me when I heard the door open. Turning around it took me a moment to realize I was standing naked before I managed to grab the shirt and held it to my chest. \n\n**************** \n\nMikaela - Saturday, December 20th, 2014 \n\nI went back up to let Lexie know dinner was ready, I guess I expected her to get dressed in the bathroom, what I certainly hadn't expected was to walk in to a view of her gorgeous, naked backside... and even less so for her to turn around and for me to see everything else. When I had helped her out of her dress the night before, I had been prepared and the room somewhat dark so I hadn't seen much of her body. Caught off-guard now, and with the lights shining brightly, I couldn't help myself. My eyes traveled of their own accord down her neck, taking in her firm breasts, her nipples stiff and pebbled in the cooler air of the bedroom, over her flat stomach and down to the neatly trimmed vee of pubic hair on her mound which seemed to point the way lower towards her lips which were shaved and appeared to pout from between her thighs, begging to be kissed. We stood like that for seconds that felt like an eternity, her frozen in surprise and me drinking in her beautiful body before time suddenly sped up again and she grabbed a t-shirt and covered herself. \n\nI found my voice, stammering out an apology, \"I'm sorry, I should have knocked, I didn't think...\" \n\nShe turned back to me, the shirt just barely covering the tops of her thighs, 'stop staring Mikey,' I silently berated myself, but my eyes refused to listen, \"It's ok, I umm, was just looking through what you set out. I don't suppose I could wash my clothes if you plan to keep me here?\" Her smile, warm and open (so unlike what I'd come to expect from her), indicated to me that she was joking, \"the clothes are fine, don't get me wrong, but I'd rather like to have underwear...\" \n\n\"Oh, yeah, of course. I just went shopping recently... I should have some packs of new underwear in the top drawer that might fit you... I just came to say dinner is ready, whenever you want to come... uh, come down... I'll be downstairs.\" \n\nI made my escape before I could do anything stupid, but the image of her standing there was seared into my brain and I knew I'd be revisiting that memory more than once in the nights to come, \"Get a hold of yourself Mikey... she needs a friend, not someone perving out over her...\" \n\nAlexis - Saturday, December 20th, 2014 \n\nI watched Mikey running out of the bedroom, face flushed... with embarrassment, or something else? I could swear she was checking me out, and a part of me was secretly happy that I had flustered her, but my mind was such a jumble of emotions that I couldn't dwell on that thought. Instead I quickly finished dressing, even finding a pair of underwear that fit nicely enough, but the bras wouldn't work. My chest wasn't especially large, but still fuller than Mikey's apparently. I considered putting my bra from last night back on, but something held me back, and before I could second guess myself I went downstairs as I was, conscious of the stiff buds of my breasts peaking the t-shirt enough to betray the lack of bra. \n\nI got to the dining room just as Mikey finished serving, a simple dinner of pasta accompanied with garlic bread and a bottle of wine. \n\n\"That smells delicious,\" I commented as I slid into the seat opposite her, \"I... thank you. For everything.\" \n\nMikey threw me a dazzling smile as she looked over at me, I caught the slight freeze as her eyes flicked across my chest and was sure I saw her swallow before she forced her eyes up, \"Think nothing of it Lexie. I... I'm just happy you trusted me enough to open up... I'm no shrink, but I think you needed that?\" \n\nI smiled ruefully and dipped my head, \"That's putting it mildly. I... guess I hadn't realized just how bad it was. I'm not saying I'm suddenly fixed,\" a slight frown at that, \"but... I think I'm moving in the right direction? If your offer still stands... I do need to think through some things, but I would like to talk about it some more with you soon?\" \n\nHer face lit up and, reaching across the table, she took my hand in hers, her thumb lightly caressing the back of my hand, \"Any time you need someone to listen, and I do mean any time, you just call me, OK?\" \n\n\"OK, I know I can trust you, but I feel like we do need to discuss how...\" I paused, uncertain what word best fit whatever this was between us and continued a bit lamely, \"this affects our work?\" \n\n\"The way I see it? It doesn't. There are no rules concerning relationships between colleagues, and while you may have a lot of say on my day to day, you're not my boss, Marc is.\" \n\nI didn't know how to respond to that so I just nodded, though I had felt a flutter at her use of the word 'relationship'. I arched an eyebrow, \"Seems like you've given this a lot of thought!\" \n\nMikey blushed in the most adorable way as my words stopped her mid-chew, \"Kind of had to,\" she mumbled through the garlic bread, a cheeky smile emerging, \"I accidentally walked in on you while you were naked.\" \n\nNow it was my turn to blush. I grabbed a piece of garlic bread and stuffed it in my mouth. Mikey chuckled and poured us each a glass of the Pinot Noir de Bordeau she had selected, \"I think we both need some of this...\". \n\nI felt compelled to get her back, so I took a sip of wine, delightfully light flavored with almost none of the dry after taste I typically associated with red wines, and gave her a wink, \"Are you sure it was an accident?\" What are you doing Lexie, do you even know? \n\nMikey almost choked on her wine. I laughed, loving her reaction. I picked up my fork and pointed it at the pasta, \"Truce, Ms. Young?\" \n\nMikey recovered from her coughing fit and touched her fork with mine, \"Truce.\" \n\nWe ate in silence for a while, shooting each other shy smiles across the table, \"This is wonderful, thank you.\" I meant it - I'd forgotten the joy and comfort of sharing a meal with someone like this \n\nMikey chuckled at that, \"You must have been hungrier than I realized, it's just bottled pasta sauce, but I'll accept the compliment.\" She paused in thought for a bit, chewing her lip as her eyes clearly showed she was debating what to say next, before continuing, \"I assume since you own the property you have a key?\" I nodded, not sure what she was getting at, \"Whenever you need someone, you're welcome to come over... and before you worry about imposing, I want to assure you that being there for a friend will never be an imposition for me.\" \n\nThe offer took me by surprise, and after a moment of thought I forced myself to reply, \"What if you had a date, I wouldn't want to intrude...\" \n\nShe just shook her head at me, \"Don't need to worry about that.\" Changing the subject before I could inquire further, \"I was thinking after dinner, would you mind going with me to the station so I can pick up my car? You're welcome to come back after, I'd just rather not leave it there all weekend.\" \n\n\"Of course. I uh, appreciate the offer, but I need to get back home. I've got a dog that I need to get back to. My neighbor checks in on him twice a day because of my work schedule, but...\" \n\nMikey smiled at that, \"I get it, it's not the same as his mama being around?\" \n\nI laugh at the accuracy of her comment, \"Yeah, he's always been attached, and it only got worse after Sam passed. There were many days where he was my reason to keep going, but... I know it's ridiculous, but I think he worries.\" \n\n\"I don't think it's ridiculous at all. Next time you come over, you should bring him.\" \n\nNext time... I felt my lips curving up at that thought... \"That would be nice, th...\" \n\n\"And no more of this thanking me, ... that's what friends are for right?\" ",
        "I just laughed as she cut me off and nodded, but caught the slight hesitation at her presuming friendship. Well, whatever other feelings I may be trying to resolve, she may be struggling with some herself. Nonetheless, I found myself almost desperate for at least a friendship - and given my pattern of behavior over the past year - that's saying a lot. Still I felt the need to tease her at least a bit, \"Fair enough, but about being friends...\" I saw the look of concern back in her eyes, \"I don't need to go through any ritual initiation or anything, do I?\" \n\n\"I think it's safe to say you've been fully initiated since last night's dinner,\" Mikey quipped back, her natural wit able to recover quickly, and make me blush in the process, \"Oh, one more thing. I know it's been hard on you, and with the holidays coming up...\" \n\n\"Yes?\" I prompted her to finish her question. \n\n\"What are you doing for Christmas?\" \n\nI felt my smile drop at this, \"Umm... take out and bad movies?\" \n\n\"No family?\" \n\nI grimaced a little, \"I was an only child, and my parents aren't around anymore. As for Sam's family... they never accepted me or her 'unnatural lifestyle', so...\" \n\nI caught a brief frown from Mikey before she shook her head, \"Nope, no good that. Be here at 10:00 on Christmas Day, you're spending it with my family.\" Seeing me open my mouth to protest she cut me off, \"Not taking no for an answer on this one Lexie, please?\" \n\nI sighed and nodded, \"Fine.\" I tried not think about it too much, though, because as much as I wasn't sure about spending Christmas with her family, I found that I was really looking forward to seeing her outside work again... \n\nMikaela - Saturday, December 20th, 2014 \n\nComing home from the station, I cleaned up the dishes from dinner then headed up to bed. It was early yet, but I hadn't slept much last night and felt the need to turn in. As soon as I was in bed though, images of Lexie's naked body sprang unbidden, but not unwanted, into my mind. \n\nAs I remembered every inch of her toned body, her firm breasts sitting proud on her chest, the erect buds of her nipples pointing slightly up and pebbled with goosebumps in the chill. Her smooth stomach, toned and clearly in shape, though not enough for muscle definition. Lower... the trimmed blonde triangle of her pubic hair and her lips, peeking out between her legs. Shaved smooth and clearly visible, when she turned her hips just right I could swear I'd caught the small bump at the top of her slit. \n\nI groaned as I slid my hand down over my stomach and into my underwear. My fingers trailing over my mons, the smooth skin passing under them as my hand drifted lower, running one finger down through my slit and back up again. A shuddering breath escaped my lips as I felt a rush of wetness soaking into my panties. Picturing Lexie naked was getting me more turned on than I could remember in recent past, and my finger slid easily through my warm folds to circle the bundle of nerves hidden beneath its hood at the top of my stroke. \n\nI bit my lip and groaned low in my throat as I continued rubbing gently around the nub, my free hand sliding up my thigh and teasing the entrance of my slick passage. I gasped, surprised at how turned on I was, as two fingers slid easily inside me, my other hand rubbing over my clit and pinching it gently. My fingers settled into a rhythm, sliding in and out of me, pressing firmly against the rougher patch just inside and above me, gasping with each firm thrust of my fingers and slowly building my way towards a peak until, with what felt like an explosion ripping me through me, I cried out and my thighs reflexively closed around my wrist. I was gasping for breath at the intensity as sparks of light flickered in my vision and I gradually came down from the high. \n\nRealizing that just the memory of Lexie's nude body just drove me to one of the best orgasms I could recall having, I cursed softly into the night wondering what I was getting myself into... \n\nAlexis - Wednesday, December 24th, 2014 \n\nMikey had seemed withdrawn the last couple days, not distant so much as lost in thought. Despite that, she made a point of reminding me about spending Christmas with her family so I guess there was no getting out of that. \n\nThe office had closed early for Christmas Eve, and we had the rest of the week off for Christmas and Boxing Day. Mikey had told me to pack through to Sunday, insisting on keeping each other company through the whole break. Now I was sitting on my bed fidgeting, Max had picked up on my nervous energy and alternated between pacing the condo and curling up by me. I had briefly considered using him as an excuse not to go, but Mikey had only reminded me of her previous insistence that I bring Max with me next time so he wouldn't be left out. \n\nAnd yet as much as the idea of spending almost an entire week with Mikey terrified me... I realized that I was actually looking forward to it. \n\nA slight twinge of guilt struck at that thought, especially as I realized I hadn't dreamed of Sam since Saturday, and just as the familiar darkness started to rise towards me a familiar voice pushed it away again, the same voice from my last dream of her... from the last request she made from me... \n\nI will always love you, but you must live, not just survive, and you need to let yourself love again. \n\nHer warmth surrounded me and taking a deep breath I realized something else had changed... while Sam would always be my first love, and I would never forget her... the idea of falling in love again no longer felt like a betrayal of our relationship. \n\nMy thoughts flicked back to Mikey, to how she seemed to know just what I needed and got me to open up without ever pushing me, and to the way her eyes sparked with emerald flames when she'd smile just so... \n\nI shook my head, I didn't even know for sure if she was interested, and while the guilt that I might be betraying Sam's memory if I allowed myself to move on had been bad, it was nothing compared to the idea that Mikey, who had so quickly become so much more than a friend to me, might reject me. My newfound peace felt fragile and I didn't know if I could survive it if that happened. \n\nAlexis - Thursday, December 25th, 2014 \n\nI pulled up in front of the house Sam had built, the house I had unknowingly rented to Mikey, and glanced at the clock. 9:57, right on time. Taking a deep breath as I wondered for what must have been the thousandth time if I shouldn't just back out, I realized it was too late for that when I saw Mikey, wrapped in a warm coat and scarf, waving at me from the front patio. \"Guess you're going through with this, Lexie\", I muttered to myself and got out of the car, Max jumping out after me and running ahead, and paused just long enough to grab the small package containing Mikey's gift. \n\nWalking up towards the door, I noticed Mikey hadn't moved from the upper level. Looking up, I called out, \"Aren't you going to come down and let me in?\" \n\nEven from here I could swear I saw the sparks in her eyes as an impish grin spread across her lips, \"Nope. I already invited you to use your key to let yourself in whenever you needed to. Now is as good a time as any to start.\" \n\nI couldn't help the laugh that bubbled up at that and just shook my head, \"Fine, you win this round Mikey, but only because I'm freezing my ass off down here!\" \n\nMikey's answering laugh sent a thrill through my chest as I ducked under the patio and let myself in with Max running in to his familiar home and, showing far less hesitation than me, he did a quick sprint around the house. While I busied myself removing boots, jacket, and other winter accessories Mikey came bouncing down the steps. Max, tail wagging, lunged at her and Mikey returned his embrace with equal enthusiasm. I could only stare wordlessly: Max was not known to be that affectionate with strangers. Her impish grin still fixed beautifully on her face, Mikey threw me a wink as she disappeared around the corner towards the kitchen, \"Coffee? I just made a fresh pot, got that hazelnut cream you like so much too.\" Max trotted after her. \n\n\"I'd love a coffee,\" I responded, \"but I thought you hated that flavored cream?\" I finished hanging my things and started toward the kitchen. Max had squished himself right up against Mikey's legs as she stood by the kettle, and she was absently scratching his ear between pouring a couple mugs for us. \n\n\"I do, but I meant what I said about you coming by whenever you need to... and I figured it wouldn't hurt to keep a few things around just in case.\" \n\nI felt my breath catch at that and blinked back a tear quickly at her thoughtfulness. It was a small gesture, but just the kind of thing that she was so good at. She was always looking out for me. As I stood there, by the kitchen entrance, Mikey pointed to the cup of joe, \"Well, you going to come before the coffee gets cold?\" \n\nNodding my head in the affirmative, I quickly dabbed my eyes on my sleeve and walked into the kitchen. Just as I crossed under the archway Mikey rushed up to meet me and planted a light kiss on my cheek, sending a lightning strike through me and spreading a warm glow both through my cheeks and down below my waist. As I stood with my mouth open, Mikey giggled at my expression and pointed above my head, \"Mistletoe, not my fault you walked under it, and traditions simply must be observed.\" \n\nHer eyes weren't just dancing with sparks now, they were emerald flames dancing with glee as she smirked at me. Regaining my wits, I replied \"Given that you must have been the one to hang it, and you insisted on me coming in to the kitchen to get my coffee, one could say it was a pre-meditated ambush.\" \n\nHer face still alight with mischievous glee, she retorted, somewhat unconvincingly, \"Nonsense, I completely forgot it was there until just now. And really Lexie, you didn't expect me to serve you, now did you?\" With that she scampered out of the kitchen and towards the stairs, calling back once more, \"I'll just be a minute getting the last of my things together, and then we can head out after. You remembered to pack a separate change of clothes in case we get stuck there overnight, right?\" \n\nTaking a sip of my coffee, I replied, mostly to myself, \"Yes, though really I'm going to feel awkward enough spending Christmas with your family I certainly don't see myself making it worse by drinking so much I can't drive...\"  \n\nI looked down at Max, who was staring at me with his tongue hanging out, \"And you...\" I scratched his ear, \"You have been no help at all.\" \n\nMikey came back down the stairs, a small carry all in one hand and a few gift bags in the other, \"Seriously, I hope you packed - first, it's winter and they're calling for either snow or freezing rain later. Second, quit worrying about my family. I've talked with them about it already and they are happy to have you over. As for Max, I've already talked to your neighbor Jeannie and she promised to take him on his walk later today, and look in on him if we get stuck.\" \n\nI took the gift bags from her to lighten her load and placed them by the door with the rest of her things, \"You've thought of everything. How are we getting there? Dog sled?\" \n\n\"Funny. But this won't come close to the Iditarod. We're taking my car, it's better equipped for winter weather than yours, even if it is less practical for city driving. Let's finish our coffee, then if you can give me a hand loading the car we can get on our way.\" \n\nThe rest of the morning had passed without much talk, we finished our coffees, gave Max some big hugs (he seemed perfectly content to sit in a warm patch of sun in the kitchen), got in the car, and just sat in companionable silence as she drove towards her parents. Where silence with most people felt awkward for me, with Mikey it just felt natural. Along the drive my hand would occasionally lift to touch my cheek, my fingertips grazing the spot where I imagined I could still feel Mikey's lips, wondering what, if anything, it had meant. Had it just been a sort of holiday prank, or... each time I caught these thoughts floating through my mind I'd snap my hand down and try to focus on anything else. \n\nMikaela - Thursday, December 25th, 2014 \n\nThe drive to my parents was quiet, but I couldn't help the constant smile as I'd steal looks at Lexie sitting next to me through the rear view, I had installed a wider mirror with a parabolic view which allowed me to see her clearly without being overt. Obviously she hadn't noticed me noticing her, and every time she'd touch her cheek I'd see her break into a silly little smile and her eyes would melt into those sapphire pools I could see myself drowning in so easily. \n\nAs much as I knew the risks of pursuing her, that I might get my heart broken, there was something about her that had pulled me in right from our first meeting. At first I'd told myself it was just her incredible passion for our work that worked to inspire me, but as I got to know her I had begun to realize it was something deeper... and where others might have run when they found out about her past and everything she was carrying, I only found myself falling for her more. Still, her wounds were still fresh and I would need to be careful both for my sake and, more importantly, for hers. \n\nAs we pulled into my parent's drive, I suddenly kicked myself as I remembered that I hadn't told Lexie who my family was, and she would certainly recognize my father from corporate communications. Lexie must have noticed my change of expression because she turned to me, a look of concern mirroring mine, albeit for different reasons, to ask, \"Is everything ok? If you're regretting invi...\" \n\nI cut her off before she could finish, \"No! I mean... I'm not regretting inviting you, but I need to tell you something before we go in... something I swear I meant to tell you sooner, but I completely forgot, and I just hope you don't hate me for springing this on you at the last second...\" \n\nHer brow furrowed as the look of concern deepened and she reached out taking one of my hands in hers, \"Mikey, I don't know what could possibly make you think that anything you could say would make me hate you, but you're rambling and if you don't just spit it out I may start to panic so please...\" \n\n\"My father is Daniel Young.\" \n\n\"Ok... wait... you mean... Marc's boss's boss's boss...\" \n\nI nodded as I turned to look at her, \"Yes, that Daniel Young, as in Senior VP of Wealth Management at our corporate offices. I swear I wasn't trying to blindside you, I just get so used to hiding the relationship to avoid preferential treatment at work...\" \n\nWhile I was talking I saw the shift in her eyes, there was a brief flicker of her old ice that nearly made my heart stop, but as I rambled on it melted again and finally she touched her fingers to my lips cutting me off. The feel of her fingertips made my breath catch and my heart skip a beat so I almost missed what she was saying, \"It's ok... it's a surprise, but I get it, and I know you didn't mean to spring it on me this way. Just promise me your mother isn't the CEO or something?\" \n\nI laughed in spite of myself and shook my head, \"No, my mother, Helena by the way, she's a wonderful woman and I love her to death, but she absolutely hates 'all that financial' stuff, as she puts it, and will chastise my father and me if we start talking about work. And before you ask, no she's not shy about doing it in front of guests.\" \n\nShe gave me a smile, perhaps a bit uncertain but it was still genuine, and moved to get out of the car, \"Let's get inside then.\" \n\nAlexis - Thursday December 25th, 2014 \n\nAs we got out of the car I helped Mikey with the various packages and gifts she brought before walking up the drive towards the house. The lawn was covered in snow, obscuring most of the landscaping, but in the middle of the yard was a towering pine tree draped with lights and crowned with a silver star. Mikey caught me staring and laughed at the look on my face causing my cheeks to flush as I dropped eyes to the bags in my hands. With my eyes fixed down I didn't notice as she came up to me and gently lifted my chin so I was looking into her eyes, her mirth causing them to spark softly with their ever present emerald fire, and smiled at me gently, \"Mom absolutely loves Christmas, and Dad can never say no to her. Come on, let's go in where it's warm.\" \n\nWith that she turned away before I could respond and continued up towards the house. Scrambling to get my thoughts in order I skipped up the first few steps to catch up and then fell in next to her. At the house she opened the door and walked in as she called out our arrival, I hesitated briefly but her glance back towards me and her warm smile spurred me inside as she closed the door behind me. \n\nAs she took my coat, it felt like her fingers lingered on mine a moment longer than strictly necessary and I felt my cheeks flush again, my eyes dropping down to our hands as I felt a smile spread across my lips. A soft cough made me look up to see a smiling couple watching us. I recognized Daniel from his monthly newsletters, though he seemed far more relaxed in a sweater and slacks than in the suits and ties I was accustomed to seeing him in. Helena looked to be a bit younger than him, with the same emerald eyes as Mikey, though her hair was red where her daughter's was black. \n\nAs we looked towards them, Daniel spoke first, \"Welcome to our home Alexis, and Merry Christmas. I'm Dan, and this is my wife Helena. It's a pleasure to meet you, Mikaela has spoken very highly of you.\" \n\n\"Thank you...,\" I hesitated briefly at the familiar form of his name and felt Mikey nudge me, prompting me on \"Dan. Helena, your house is absolutely beautiful, and I love your tree out front.\" \n\nHelena's smile showed all the warmth of her daughter's, though without the mischievous twist, as she replied \"Thank you, I love this time of year and Dan humors me. Now,\" and here I saw a hint of Mikey's impishness light her eyes, \"I may be outnumbered, but I must insist on no work talk today.\" Her tone shifted back to its earlier warmth, \"That includes you worrying about making a good impression for my husband. Whatever he may do at work, here he's just my Dan.\" \n\nI found myself relaxing in spite of myself at the honest welcome and smiled, \"Thank you. Mikey did warn me about leaving work talk behind today, and I appreciate you opening your home to me.\" \n\nWith the introductions completed, Dan and Helena led the way to the living room where a warm fire crackled in the hearth and a smaller version of the tree from their yard was littered with presents underneath. A tray was set out with fresh coffee, milk, and sugar as we sat down and I sipped quietly as the family got caught up on the events of their lives. \n\nMy eyes kept finding their way back to Mikey, tracing the curve of her jaw or catching the sparkle of her silver stud, and occasionally her eye as she looked back at me. Whenever this last happened, I'd catch the fire sparking in her eyes and feel my cheeks flush in response before dipping my head and taking a sip of my coffee. \n\n\"Shall we get to the presents before dinner is ready?\" Helena interrupted the flow of conversation and brought my attention back to what was happening around me. \n\nMikey jumped up to help sort the presents and, to my surprise, dropped a long slender box in my arms. Looking up at her, I caught the smirk in her lips and the sparks flickering in her eyes as she quipped, \"What, you don't think I'd forget to get you something did you?\" \n\n\"I just never expected... thank you. I umm, I got you something too.\" I got up and retrieved the bags I had brought, picking out the smallest for her. \"I wasn't sure what you would like, Dan and Helena, but I wanted to get you something to thank you as well,\" I continued as I handed them the other two bags. ",
        "I held onto my gift as Dan and Helena opened theirs first, thanking me graciously as they removed the Godiva chocolates, as well as a bottle of Glenlivet 10 year single malt for Dan and a bottle of Disaronno Amaretto for Helena that Mikey had assured me would be well received, then turned to watch Mikey, catching her eyes on me as I did. With a slight flush heating my cheeks, I smiled and waved my hand, \"You first, Mikey.\" \n\nHer reply was both simple and complex, delivered in the hushed tones of one of my favorite movies, one which I knew she had seen as well, \"As you wish.\" \n\nLooking into her eyes, I could not help but recall one of my favorite scenes from the Princess Bride, when Buttercup realized that Wesley's constant \"as you wish\" responses were his way of saying \"I love you.\" \n\nAny doubt I had as to her meaning was dispelled by the look in her eyes. A low, smoldering fire in the blazing emerald green that had captivated me so often. I felt my breath hitch as she looked away suddenly to focus on the gift in her hands, and saw a flush in her cheeks. Did Mikey love me? Was I ready to love her back? \n\nMikaela - Thursday, December 25th, 2014 \n\nThe look in Lexie's eyes was turbulent, the sapphire pools storming in their intensity, and I felt my cheeks warm in response. Looking away quickly, reminding myself that I couldn't take advantage of her pain, I focused instead of the package she had given me. Carefully removing the box from within the gift bag, I slipped open the ribbon and pushed it back before opening the latch and lifting the lid. \n\nThere, lying on velvet smooth material, was a black choker with a silver clasp. Threaded through the dark material was a playful design in pink the same shade as my hair tips, and nestled in the middle, where it would sit above my throat, a delicate emerald heart. At a complete loss for words, I lifted it from its setting to show it off and then feeling the waver in my voice asked Lexie, \"Help me fasten it, would you?\" \n\nHer fingers were silken fire along my neck as she settled the choker and fixed the clasp. I wasn't sure how she managed, but the fit was perfect. Catching my mother's eye I saw the question in her eyes and shook my head slightly at her. It seemed an eternity had passed when I felt Lexie's fingers withdraw and I allowed myself to breathe again. \n\n\"Thank you, it's... beautiful seems so insufficient. Are you sure this isn't too much?\" \n\n\"Just my way of thanking you for everything, Mikey. I thought of you the second I saw it, and the firm was quite generous with bonuses this year,\" her tone at the last was light, humorous. \n\n\"I'm glad you approve,\" chuckled my father, \"but at the risk of breaking my wife's rules I must say you definitely earned it - I saw your numbers. They were impressive. But enough about that, I wouldn't want to earn Helena's ire.\" \n\nMy mother swatted my father's shoulder in turn and her eyes turned back to me, \"It is truly beautiful Alexis, and suits Mikey so wonderfully.\" \n\nI turned back to Lexie, my fingers gliding across my new choker, and looked to the unopened package on her lap. \"I believe it's your turn, Lexie.\" \n\nI watched as she looked down, appearing almost as though she had forgotten the box I had gifted her, and slowly began to undo the wrapping. Her eyes shifted through liquid pools of sapphire into a turbulent storm and settled into the vibrant blue of the sky after a storm, a single raindrop tear running down her cheek, as she lifted the emerald green silk scarf from the box. It had Celtic designs threaded through it in sapphire blue and as her fingers swept through the material it shimmered vibrantly in the flicker from the fireplace. She smiled as she wrapped the scarf around her neck and looked up at me, \"I love it... thank you.\" \n\nAlexis - Thursday, December 25th, 2014 \n\nThe rest of the afternoon was a blur, I went through the motions, joined the family dinner, exchanged meaningless small talk. The only parts that I truly experienced were when nothing was happening. In those moments, however brief, my eyes would seek out Mikey and just drink her in. \n\nDinner over, I had excused myself to the washroom and was on my way back when voices around the corner brought me to a halt. Mikey and her mother were talking, and something about the way they spoke made me want to hang back a moment longer. \n\nI heard Mikey's voice first, and felt a pang as I heard the stress in her tone, \"It's not like that mom, she's my friend, not to mention practically my boss, that's all... that's what she needs me to be.\" \n\n\"Nonsense dear, I saw how she keeps looking at you. Not to mention how you look at her.\" \n\nA light sob, Mikey I'm sure, and a hitch in her voice as she answered, \"It's more complicated than that... it's not about what I want mom, it's about what she needs... I can't say more, it's not my place, but I'll give her that and who knows what the future may bring.\" \n\nI slowly retreated back the hall, closing the door of the washroom firmly and then humming Holy Night as loudly as I could as I walked back towards Mikey and her mother. When I walked in this time they were saying their goodbyes, but I caught a hint of red around Mikey's eyes. Joining her I thanked her parents for having me over again, and exchanged well wishes for the new year before leaving. Our drive back was silent as snow started drifting across the roads, my mind turned to the woman sitting next to me and the words I had overheard. \n\nIn the short drive to the house the snowfall had quickly turned from a light dusting to a heavy sleet and I was glad we had planned for me to spend the next few days, driving into the city in this weather would have been unpleasant at best. As we entered the foyer, the beginnings of an idea began to form in my mind, half madness and half filled with hope and fear. I knew that despite what she thought, what I needed from Mikey was so much more than a friendship. While the idea of anything more terrified me, the thought of never trying was so much worse. \n\nMax gave me a happy greeting, his fur still slightly damp from his recent walk with Jeannie. Shaking the snow off, I hung up my jacket and kicked off my boots, grabbing the leftovers Helena had sent along and carrying them into the kitchen. There, I waited for a minute listening as Mikey finished hanging up her things before calling out, \"If you're done stalling out there, I could use some help putting your things away.\" \n\nA snort sounded from the other room, and Mikey sniped back \"It's no fault of mine you were in such a mad dash, some of us try not to kill themselves getting undressed.\" \n\nAs she turned into the kitchen, much as I had done this morning, she walked under the mistletoe. Unlike this morning, I did not just plant a kiss on her cheek as she had with me. Instead, I stepped forward before I could second guess myself and slid one arm around her waist, the other up to brush the back of her neck, and as a light gasp of surprise parted her lips, I dipped my head to hers. \n\nMy heart froze as my lips touched hers, and then, with a sigh, she melted into my arms and returned the kiss passionately. I felt fire shoot through my body and was sure my heart would leap from my chest as if it had suddenly burst. \n\nMikey's lips parted with mine, her tongue slipping out hesitantly to brush mine, and I felt a groan resonate up from her chest and into me as I responded in kind. My fingers dug into her back, pulling her in tight, and I groaned loudly as I felt one of her hands slide down to squeeze my ass firmly. I let my hand slide up from her waist under her shirt to caress the smooth skin of her back, fingers skimming over her warm skin. \n\nAt this she pulled back from the kiss, a low whine escaping my throat as she did, and I looked into her eyes. I nearly lost my words at the intensity of the blaze I saw there. I thought I'd seen fire there before, certainly sparks often enough, but this was the sun eclipsing a candle. I felt like I should be scorched in their intensity, but instead I felt only life and love banishing shadows of the past. \n\nFinally I managed to speak, \"Why did you stop... don't you want...?\" \n\nHer finger to my lips cut me off, \"Is it what you want? I don't do casual flings, if we do this I...\" \n\nThis time it was my turn to cut her off, \"Mikey, two months ago I was dead. You know my past, you know more than anyone who didn't live it with me. I never thought I would be able to live again, but... you not only brought me life, you brought me love. I'm terrified of what this all means, but this is no fling for me... I need you like I need the air I breathe, the water I drink, the earth that supports us... you are the fire that warms me, and fills me with love, life, and joy.\" \n\nI kissed away the tears I saw forming in her eyes and she whispered, \"Where do we go from here?\" \n\nTaking her hand in mine, I pulled gently and led the way to the bedroom. \n\nMikaela - Thursday, December 25th, 2014 \n\nI followed Lexie up the stairs, scarce believing what was happening, and into my bedroom. She turned as she got near the bed, pulling me in and pushing gently so I fell sitting on it and looking up at her. Standing in front of me she pushed one strap of her dress off followed by the other, and with a wiggle of her hips let it shimmy down over her body. \n\nMy eyes followed the line as her dress fell, past her collar, over the slopes of her breasts still encased in her black bra, down over her taut stomach. It caught briefly on her hips, and I felt my breath catch in turn as her hands slid down her sides to slowly push it farther down, then draw in sharply as her high cut black panties were revealed, followed by the smooth skin of her thighs and down past her calves to finally fall to the floor. \n\nShe stepped out of the pool of material on the floor, clad only in her lingerie, and straddled my lap as she cupped my face and lifted my mouth to hers, her lips claiming mine in a heated kiss. I felt myself melting into her embrace as her hands slid down over my cheeks, over my shoulders, and to my chest. Gasping gently as I felt her palms cup my breasts and squeeze them gently. \n\nI moved my own hands up between us, tugging at the buttons on my shirt and pulling it open as I did, needing to feel her skin on mine as I felt a fire roaring through me, a blazing inferno I was beginning to realize could only be sated in the warm waters that I'd come to associate with Lexie's expressive sapphire eyes. Undoing the last button and tugging my shirt free of my pants, I threw it aside and wrapped my arms around her as her hands ran over my chest, a low purr escaping her throat as she discovered I wasn't wearing a bra. \n\nHer palms brushing my nipples made them tighten as I undid the clasp on her bra, pulling away from her just long enough to throw it away, and my breath caught as her breasts were exposed to my hungry eyes. I tipped my head down towards the naked swells, my memory of that first glimpse after her shower hadn't done them justice. Her moan as I closed my lips around one nipple, sucking it gently, was music to my ears and I slid one hand up to gently pinch the other. \n\nLooking up at Lexie's face, her nipple still firmly between my lips, I drank in the halo of her blonde hair circling her face as her eyes, so often puddles of sapphire, were now a grey thunderstorm, her lightning arcing through her fingers as they skimmed the bare skin of my back. Suddenly I stood, picking her up as I did, and turned lying her down on the bed while I crawled over her. I brushed kisses over her chest, her neck, her jaw, and the tip of her nose. Looking straight into the stormy grey eyes I moaned low in my throat as I husked out, \"I want to make love to you.\" \n\nAlexis - Thursday, December 25th, 2014 \n\nMikey was an inferno of fiery passion above me, staring intently into my eyes, the blazing emeralds boring deep into me, her words lingered softly and try as I might the only response I could muster was a needy moan and thrusting my hips up against her. My hands slid down her back grabbing her firm ass tightly as I did, pulling her into me as I thrust against her. \n\nA throaty chuckle escaped her lips as she bit my neck gently, eliciting another moan from me, and whispered in my ear, \"I'll take that as a yes.\" \n\nHer lips trailed fire down my throat, between the valley of my breasts and up to the tip of each tight bud. Everywhere she touched felt like I was burning, and I couldn't get enough of it. \n\nEventually she moved down from loving my breasts, and I groaned at the loss of her lips, but my groan turned into a gasp as her lips skimmed my stomach and then her tongue traced the line of my panties. Her eyes looked up at me, giving me one last chance to back away from this, and a voice I barely recognized as my own begged, \"Please... please don't stop\" \n\nThat was enough for her as she whisked my panties down my thighs and past my feet in one swift move, her lips continuing down to my hips, the tops of my thighs, and just as she got tantalizingly close to my center... she slid further down nipping and kissing the inside of my thighs, down to my calves and finally my ankles. \n\nHer hands were skimming the outside of my legs gently as she slowly started kissing her way back up, but this time she had settled my legs over her shoulders and she was clearly moving towards her goal. I could feel myself already dripping down my thigh with anticipation, and the feel of Mikey's tongue on my inner thigh as she lapped at my nectar sent a surge of fire through my core and out through the rest of my body. I realized I was panting as I thrust my hips towards her, whimpering low in my throat as I sought to feel her lips on mine while she stayed teasingly out of reach. \n\nJust when I thought I couldn't wait any longer, I felt her tongue dip into my slit and my vision exploded into a million stars and lights as a cry of pleasure ripped from my throat. My toes curled into her back as my legs tensed, pulling her in more deeply. My stomach rippled up, waves of pleasure cresting higher as she rode through my first orgasm, her tongue avoiding my sensitive clit as she coaxed me higher. I was panting her name, wondering what was happening to me. Not only had I never come so quickly, I felt like I'd barely survived my first orgasm and here she was pushing me towards something even bigger. It was terrifying in its intensity, and yet I felt myself chasing it. My last coherent thought before I felt her fingers thrust inside me to press firmly up against the rougher part of me that marked the sensitive bundle of nerves within at the same time as her tongue thrust over my clit again was If this is how I'm going to die, what a way to go... and then the room exploded and darkness covered my eyes. \n\nMikaela - Thursday, December 25th, 2014 \n\nAs Lexie's second orgasm hit I felt her tense up as her voice, rough with passion, cried out and then just as suddenly she went limp. I took a moment longer, cleaning her delicious honey from her thighs with my tongue, thinking how I could definitely get hooked on the taste of her, then stood and stripped off my jeans and panties before crawling up next to her. Her breathing was deep and even, but it looked like she was completely out of it. \n\nWrapping my arms around her, I pulled a blanket over us and brushed her hair out of her face. Gradually she began to stir before finally looking up at me, \"What happened?\" \n\nI laughed softly, caressing her cheek as I did to make sure she didn't take it the wrong way, \"I think it's safe to say I just rocked your world.\" \n\nShe smacked my shoulder as she laughed back at me, \"You're incorrigible... but if you ever wanted to do that again, I wouldn't object... for now, I think I owe you one.\" \n\nShe started to slide down, but my arms tightened around her causing her to look up at me questioningly. \"There will be plenty of time for that later, for now I just want to enjoy this.\" \n\nHer eyes, again the sapphire pools I could drown in, though the thunderclouds were still hovering nearby, looked deep into mine as she caressed my cheek, \"I don't know how you did it... but thank you for bringing me back to life. I honestly didn't expect to ever be happy again before I met you, and now...\" \n\nI leaned forward, interrupting her with a kiss, \"You're rambling Lexie, so let me just save you some time: I love you too.\" \n\nThe tears that sprang to her eyes held none of the pain that I'd become so accustomed to seeing, and she pulled me in tight as she whispered back, \"I do, you know, love you.\" \n\n\"I know, now get some sleep sweety. We have all day together tomorrow and I plan to enjoy it.\" \n\n******** End ********"
    ],
    "authorname": "Andaryll",
    "tags": [
        "lesbian",
        "personal loss",
        "coworker",
        "colleague",
        "tragic",
        "lesbian romance",
        "novel",
        "novella"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/bring-me-to-life-1"
}