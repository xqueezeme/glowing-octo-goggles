{
    "title": "Remembrance of Things Past Ch. 02",
    "pages": [
        "2025 - Boise, Idaho\n\nThe two men surveyed the darkness, noses scenting the air, before slamming the doors of the SUV. They glanced at each other and nodded, moving towards the warehouse and quietly opening the door. The sign on the front said \"Creighton Enterprises \u2013 Boise, ID.\" The place was deserted except for a lone figure, slumped in a chair in the dimly lit office. The two men entered the office, softly closing the door behind them.\n\n\"Why the secrecy, Drago?\" Silvano's confused voice was soft as it cut through the silence.\n\n\"We don't want everyone to know, at least not yet.\" Drago seemed distracted as he spoke, not able to look either of his two fathers in the eye.\n\nZsigmond and Silvano exchanged perplexed looks. \n\n\"You know you can trust us, Drago, with anything. Now what is so urgent that you've asked to meet us alone in the middle of the night?\" Zsigmond knew it must be something bad for Drago to meet them without his mate or his two mothers present. \n\n\"I don't even know how to say it.\" The human half of his mind was a jumble, warring with his wolf who didn't understand why his human half was so distraught. Drago sat motionless, unable to look up at his fathers.\n\nSilvano was always a little unnerved when he saw his adopted son side by side with his biological father. It was like looking at twins, the only difference being Drago's short-cropped hairstyle in contrast with his father's longer, almost shoulder-length, hair. Even their voices were close to identical. And, of course, there was a hint of gray at Zsigmond's temples; he was over two hundred years old, after all.\n\nZsigmond laid a hand on his beloved son's shoulder. \"How can we help you if you don't confide in us?\" Even if he hadn't already felt his son's distress through their bond, he would have felt the tension in his muscles, so unlike his easygoing son. \n\nDrago swallowed hard before trying to talk. His voice cracked as he began. \"I think Kelly and I must have done something wrong.\" He could feel the surprise from his fathers through their bonds. \"Jason is... he's not normal.\" His voice was so quiet that anyone without supernatural hearing would not have heard him.\n\nZsigmond felt his heart break. His grandson, Jason, was the light of his life. He had vowed to be a part of the cub's life, no matter the distance or inconvenience. He wanted to be there for each milestone, each little step that Jason took, if for no other reason than to assuage the guilt he still felt about Drago's kidnapping as a cub. His hand tightened on Drago's shoulder, but he couldn't find the words.\n\nSilvano could see the pain in Zsigmond's face and spoke for both of them. \"Tell us, Drago. Maybe we can help. It can't be that bad, can it?\"\n\nDrago closed his eyes a moment and spoke. \"My son is human. He isn't a Werewolf.\" There, he'd said it. He couldn't look at either of them. He was afraid of how they would look at him, their son, unable to father a true Werewolf. \n\n\"That is impossible, Drago. You are a Werewolf, and Kelly is a Werepanther. Your children cannot be anything but Weres. There must be some explanation.\" Zsigmond wasn't sure what else to say. He looked at Silvano, the scientist. \"Silvano, have you ever heard of a Werewolf fathering a human?\"\n\n\"No, not that I am aware of. Drago, why do you think he is human? Not that it is possible, mind you.\"\n\nDrago looked at the two men he trusted more than anyone in this world, besides his own mate. He took a deep breath and told them. \"He can't shift. There's no bond with me or Kelly, not even with the Alpha. He's a human!\" There, he'd said it. Drago felt as if a load had been taken off his shoulders. The secret was out, finally. He just couldn't pretend anymore.\n\nZsigmond was speechless. As far as he knew this was unprecedented. Drago had to be wrong. \"I've never heard of such a thing. Even if he is late to shift, there should be a bond. Shouldn't there?\" He looked to Silvano. He was the educated one. Zsigmond knew how to run a pack, how to hunt, how to lead the Betas in a fight. He knew nothing about Werewolf biology. \n\nSilvano was as dumbstruck as Zsigmond. But a thought suddenly came to him. \"Have you spoken with Leonardo? Did he suppress Jason's wolf as he did Kelly's panther? As he did to all the cubs in his pack for a century?\" That must be it. The Creighton Alpha had ordered his cubs' panther-selves to remain dormant until they were mated to be sure they did not show themselves to the humans in the surrounding community. He had thought it best for the pack. Surely he had not done that to his own second's cub without telling him.\n\nDrago slowly shook his head. \"That was my first thought, but he swears he's done no such thing!\"\n\nZsigmond squared his jaw, determined not to let his son down by showing weakness. But he couldn't stop the tears from forming at the corners of his eyes. \"I will speak with Guillame about it. The Alpha has been among many packs over the centuries. Maybe he will know.\" His hand went to Drago's head, the gesture from so many years ago still so natural, to touch his son's head to bring them both some comfort. \n\n\"I need to go back home. Kelly is waiting for me. I didn't tell her I was meeting with you tonight. She doesn't know what it's like to have a bond with her parents, so it doesn't seem to bother her. But I can't live this way. I know we're missing something; he's missing something.\" \n\nSilvano was shocked at the admission. Drago seemed almost broken. He knew that Carla and Margareta would be devastated to hear that anything was amiss with their grandson. He was a lucky boy to have such devoted grandparents. They had all been aware he hadn't shifted yet. But since there were no other cubs in the Creighton Pack, it wasn't totally unexpected. Although, to be honest, twelve was going beyond what anyone had heard before. To have no bond with his parents, though, that was a horrifying thought for a Werewolf. Why had Drago kept his secret so long? Why hadn't he told them sooner?\n\nDrago took a deep breath. \"I'll tell Kelly we met and what we talked about. And we'll wait to hear from you about what we should do next.\" He gave each of his fathers a hug and locked the doors behind them as they left.\n\n~-~-~-~-~-~-~-~\n\nElko, Nevada\n\n\"Are you sure Leonardo doesn't have something to do with this?\" Alistair had never fully trusted the Alpha Panther. \n\n\"What reason would he have to lie?\" Jenna knew Alistair didn't like Leo, but to think he was lying? You know you're being unfair. This is his great-grandchild, you know. \n\nAnd he did the same to his own granddaughter. I wouldn't be surprised!\n\nRhys ignored the looks he saw exchanged between Alistair and his mate. \"I do faintly remember some sporadic cases of the wolf-self joining with the human-self much later than usual, but I can't think of specifics. I'll look through our records. Katy has been employing Ben to digitize everything so we can do these types of searches more easily. I fought her a bit on it, but I guess I will have to concede that she was right.\" \n\nHe whirled around at the sound of a familiar giggle coming from behind him. \"Sneaking up on me again, little one?\" His grin lit up his face whenever he saw his lovely flame-haired mate. He just couldn't help but tease her a little bit. \n\nKaty rushed into Rhys' arms and was enfolded in his strong embrace. She lived for these moments, and savored them every chance she had. \"I knew you'd give in as soon as it came in handy. Just think how much time we'll save by not having to rely solely on your amazing memory and paper records.\" She snuggled for a moment before pulling herself away from his warmth. \"Bronwyn and the other cubs will love having Jason here to visit.\" It always amazed her how the children interacted with him. They didn't hold it against him that they could shift and he couldn't. They were just kids and played and laughed. They didn't need bonds to love him. They just did. \n\n\"They'll be here later today. In the meantime, Carr says that Jeff, Logan and Xylon are brainstorming. They say they have a plan, so we'll leave it up to them.\" Alistair still wouldn't put it past Leonardo Creighton to be behind this in some way. \n\nA few hours later the members of the Baxter and Bertrand-Kardos packs lined the driveway, waiting for Drago and his family to arrive. The cubs were jumping with joy and the few that had arrived in their wolf forms had quickly shifted back to human and slipped on their clothes. \n\nJason was popular among the children, especially the girls, who were almost giddy as they waited for him to arrive. Kyla and Tyra were jumping up and down, holding hands, unable to keep still as they waited. They and their brother, Colin, were among the very few cubs that weren't Jason's cousins. They both secretly hoped that someday one of them would be lucky enough to be Jason's mate. Even Werewolves could be boy crazy teeny-boppers at age twelve.\n\nThe black SUV pulled up in front of the main house. Drago got out, followed quickly by his Alpha, Leonardo Creighton. No one but Jenna could see the look of aggravation that flashed across Alistair's face. Kelly and Jason climbed out of the back seat.\n\nKelly smiled when she saw her friends and walked over to Jenna, giving her a big hug and speaking to her through the special bond she shared with all her sister-panthers. Jenna, do you think we should be worrying? Drago is going crazy about this. Is it really a big deal?\n\nI wasn't born a Were, so I don't really know. It seems to upset the men, though. I guess we'll have to wait and see. What about your grandfather? Does he seem worried?\n\nKelly glanced quickly at Leo. Trying to read him is like reading a block of ice. I don't have a clue.\n\n\"Hey, Mom? Do I have to stick around here? The guys want to show me the tree house they built this spring. Can I go?\" \n\nKelly smiled at the interruption. \"Sure, go ahead. Have fun.\" She watched as he ran off with a group of cubs. They were like their own pack of twelve year-olds, led, of course, by Colin Baxter. She was just sure they'd get into some kind of trouble this afternoon. \"I know you'll all make it back by dinner!\" She had to yell to be heard over the whoops and hollers of the boys as they took off running through the compound. She laughed when she saw the disappointment in the girls' faces. She knew Jason was going to be a heartbreaker someday. He looked so much like Drago it was scary. What was it about these Vlkolak genes, anyway? The boys all looked similar; the girls were carbon copies of their mothers. It was kind of spooky. At least in their pack... on second thought, she realized, their pack wasn't much different. \n\n\"So, what are we doing here?\" The booming voice of the Creighton Alpha reverberated through the foyer as they entered the Baxter Alpha's home.\n\nKelly was mortified. \"Grandpa, Jason has a problem. You know that. We're here to see if we can figure out how to help him. I thought we discussed this thoroughly before we got on the road. You didn't have to come, you know.\" \n\n\"He is my blood, and a member of my pack. I will be here.\" The tall man glared at his granddaughter. You are showing great disrespect in front of outsiders, Kelly. It is not appreciated.\n\nThis is Drago's family; they are not outsiders! And they are going to help Jason; at least, I hope they can.\n\nDrago showed nothing on his face but knew his mate and his Alpha were having one of their \"disagreements.\" Alpha, you and your granddaughter are very much alike, but this is my family! I will not have them shown disrespect by your quarreling. We are here to help Jason, nothing else. So please, restrain yourselves until we get home!\n\nKelly felt the mental rebuke from her mate and acknowledged it through their bond. She saw the slight flinch on the face of her grandfather, but he acquiesced silently.\n\nJenna ignored the awkwardness between the Creighton Pack members and quickly grabbed Kelly by the hand to lead her into Carr Baxter's office. \"They're in here. The doctors have been putting their heads together for days.\" The door was open and the room was already crowded with people. Carr Baxter, his mate, Lee, the two pack doctors, Xylon the geneticist, Drago's parents, both biological and adopted, and Guillame, the Bertrand-Kardos Alpha.\n\nLee welcomed the newcomers and put out a hand to Carr. \"Let's leave them to their plans, love. We have things to do. Besides, Kyra and Tyla want me to help them with their hair. They want to look beautiful for when the boys come back.\" Lee winked at Kelly, who laughed. \n\nDrago looked dejected as he sat next to his mate. Kelly stroked his neck while they waited, leaning in close to lend Drago the peace she felt. Their son was healthy; if he never shifted or had a bond with them, would it really be the end of the world? Gazing at her soul-mate, she guessed that his answer would be \"yes.\" \n\nLeo seemed impatient, and leaned against the wall with his arms crossed. \"So, what now? How do you intend to fix my great-grandson, hmm?\" The alpha panther was an imposing male, and in lesser company would certainly have been frightening. But he was standing among the most powerful Weres in North America. Whether he liked it or not, they were his equals at the very least. \n\n~-~-~-~-~-~-~-~-~-~-~\n\nColin stopped at the top of the hill, glancing back at his friend struggling with the steep incline. Colin and the cubs from the pack weren't tired at all, but Jason could barely keep up. He had to keep stopping to catch his breath. Colin pushed the chocolate brown hair out of his green eyes and sat down on a rock, calling out to his pack-mates. \"Hey, guys, wait up, I'm tired, gotta catch my breath!\" He saw the heads cocked in question, then understanding and grins as they trotted back to the big rock to wait for Jason.\n\nJason wasn't surprised to see his friends waiting for him. He was gasping for breath when he plopped next to Colin. \"Thanks guys. I know you aren't tired.\" He smiled at their attempts to make him believe that they were exhausted and laughed at Colin's fake wheezing. He looked down for a minute, his toe pushing a rock in the dirt. \"You guys try to make me feel better, like I'm part of the pack, but I know I'm a freak. My dad thinks I'm a freak. I see the way he looks at me; how my Alpha looks at me. The only one who doesn't seem to think I'm strange is my mom. She says it's nothing, that she was the same way.\" He kicked the rock ahead of him, watching it land in front of Corey.\n\n\"Hey, adults don't know everything!\" Corey kicked the rock to his left, hitting Jamey in the foot. \n\n\"Yeah, they think they do, but they don't.\" Jamey swiped his foot through the dirt, sending the rock sailing through the air to hit Teddy on the forehead. \n\n\"Ouch!\" Teddy rubbed the long cut on his head which quickly healed into a faint line under his fingers.\n\nTad leaned over and looked at it closely. \"Dang, Auntie Rebecca and Uncle Trey are gonna notice that right away!\" Tad and Teddy were the images of their twin fathers, and as close as brothers themselves.\n\nColin laughed. \"You're just trying to look like my dad!\" Even after thirteen years, Carr Baxter carried a rather dramatic scar on his forehead from the battle with Gary's Dire Wolves. It had become his badge of honor, and the cubs were enthralled by the story of the fight whenever they heard it.\n\nTeddy took a big kick, the rock bouncing off a tree and landing on top of Daniel's head. The blonde giant smiled and reached up to pull the rock out of his hair. He stood a full head taller than the other cubs his age. And although he was as gentle as a lamb, the entire pack expected him to make as good a Beta as his parents, Nathan and Lila. \n\n\"Well, let's get moving. If we're gonna make it to the tree house and back for dinner without our parents nagging us, we should get going.\" Always the leader, Colin jumped up and put an arm around Jason's shoulders. \"You know you're one of us, even if you'll be a panther someday. So don't worry if you get tired. You can tell us.\"\n\nJason nodded and grinned at his best friend. Well, his best friend other than Hope, that was. And he couldn't wait to get a chance to tell her everything that was going on. She always seemed to understand him best, even better than his mom. \n\nEven though they'd driven into the middle of the Baxter Pack compound, they'd be staying with his grandparents at the Bertrand-Kardos compound right next door. And since Hope's parents were the Alphas, he knew he'd have all the time he wanted to visit with her. \n\n\"Jason, did you hear me? We're here.\" Colin didn't know what was distracting him, and didn't really care. If Jason wanted to talk, he would. \n\nJason realized he'd been thinking about what he wanted to tell Hope instead of paying attention. He looked up and saw the tree house, just as Colin and Corey had described it to him. \"Wow, that's neat!\" He looked at his friends who were waiting for him before they climbed up the ladder into their lookout high in the branches of the juniper tree. \"How tall is it?\"\n\n\"It's gotta be like a thousand feet tall.\" Jamey was staring up at the top, a huge smile on his face.\n\nCorey leaned over to whisper to Jason, \"More like about forty-five feet. Dad brought out some kind of instrument that he used to measure it. Said mom wouldn't let us do anything without knowing how far from the ground we were going to fall first.\" Corey snickered when he remembered his mother's argument about how dangerous it was. \"She kept saying 'Wolves aren't supposed to climb trees.' Dad just laughed and said we'd heal, so what was the problem.\" \n\nJason glanced up at Corey, one of his many cousins in the pack, watching him climbing the makeshift ladder. Did Corey know that Jason didn't have the Were healing abilities that they all did? I'll just have to make sure I don't fall. He quickly, but carefully, clamored up the ladder after them. Within minutes he was sitting on the edge of the platform high up in the tree. \n\n\"Wow, this is awesome!\" He could see across the entire valley, even making out the buildings that made up the two separate pack compounds. He tried to pick out his grandparents' house, next door to the Alpha's. His Grandpa Zsig was the second in the pack, and his Grandpa Sil was a scientist. Sometimes when he was little he'd gotten confused about how he was related to them, but now he was old enough to understand. Dad had two sets of parents. His grandmothers were overprotective, especially Grandma Margie. He figured she'd be really upset that he was out here with his buddies. In fact, he'd probably be lucky to get some time like this again during the trip. Grandma Margie barely took her eyes off him when he was visiting. But now that he thought about it, Grandma Carla wasn't much better. \n\nBut for now, he'd just sit up here and listen to the wind whistle through the branches high in the air. The boys laughed and cheered at the blackbirds swooping after a Red Tail Hawk that dared to come too close to their nests. Jason was going to enjoy this as much as he could. Soon enough he'd have to come back to earth and whatever the doctors had planned for him.\n\n~-~-~-~-~-~-~-~-~-~-~-~\n\n\"And what is this DNA going to tell you?\" Leonardo looked skeptically at the Greek Were. What could the boy's blood say that wasn't obvious? He wasn't a panther, he wasn't a wolf; he was a human, through and through. \n\n\"I'll be looking for any possible abnormalities. We've mapped the Werewolf genome, and since meeting you, the Werepanther genome. They are similar, but different in small ways. The Vlokolak seem to be some sort of amalgam of the two, and those peculiarities seem to show up generation after generation.\" Xylon was about to lose his patience with the panther Alpha. He seemed very unwilling to look to science for any help for his great-grandson. Just because Leo was over a thousand years old didn't make him the authority on everything.",
        "Rhys could read the frustration in his friend's voice and cleared his throat. \"I'm afraid I'm not much help. I can't seem to find any notations of this occurring in any North American pack. The only suggestion I have is that we might consult my friend Edward. The Blue Stars know a great many things, and I expect that they would help us if we asked.\" \n\nLeonardo growled, making his opinion of that idea crystal clear. \n\nAlistair was surprised to find himself in agreement with Leonardo, for once. \"We should exhaust every private avenue before turning to outsiders,\" he declared firmly, \"especially non-Weres.\" There were nods around the room. \n\nRhys nodded as well. \"I agree, my friend; I was simply noting the option. I wish I could be of more assistance. Guillame?\" He turned to the Belgian Alpha, who sadly shook his head sadly.\n\n\"No, I've never heard of anything of this sort among the European Packs. But, I would like to add, I doubt any would want it known by outsiders if it did occur. In my time as the Archivist, I found that packs were more likely to share information that put a positive light on them than anything of a negative sort. Something like this... well, I don't think they would volunteer the information.\" \n\nGuillame laid a hand on Zsigmond's shoulder and squeezed. He wished he had better news for his second, his brother, his friend. Zsigmond had brought Guillame's mate to the States those many years ago, had kept her safe, helped her raise Mariska, Guillame's eldest daughter. He would do anything to help Zsigmond's grandson, anything!\n\n\"Really? Nothing? That's odd.\" Jeff held an old book in his hand. \"This is my father's journal. He kept it from the moment he learned to write until his death. And there IS an entry regarding this very thing!\"\n\n\"What? Here? Or was it in Scotland?\" Rhys wanted to see that book. \n\n\"Here. It happened before they knew there was a North American Council, so I'm sure that's why it was never reported. Remember, the pack was alone here in the west until the Nineteenth Century.\" \n\nAlistair had never heard this before, either. He leaned in close, trying to see the page that Jeff had opened to. \"Well, what happened?\"\n\n\"Hang on, let me get to the right page. I don't remember my father ever talking about it before. And I don't doubt he never told anyone. It's not like it would have been something the old Alpha wanted anyone to know.\" Jeff carefully opened the old yellowed pages to the bookmark he'd left. \"Here it is.\" He looked up for a moment. \"What I'm going to tell you can't leave this room. Carr knows, and he's agreed to let me tell you, because it's for Jason.\"\n\n\"Of course we'll keep it confidential.\" Kelly looked at her stoic grandfather, still leaning against a wall, arms crossed. \"Won't we, Grandpa?\"\n\n\"Yes, Kelly, of course.\" Leo gritted his teeth in consternation. Who would he tell? Like the panthers cared about the skeletons in the wolves' closets.\n\nJeff ignored the panther alpha and sat on the corner of the table, his father's journal held carefully in his hands. He almost felt he could hear his father's brogue as he read the words. He took a deep breath before speaking. \n\n\"So it happened not long after they came to Nevada. The Alpha had been worried about the fact that none of the females had gone into heat the first few years they were here. My father told him that the wolves would breed when they were ready, and there was no need to be concerned.\" Jeff paused for a moment before turning the page to the part that got interesting.\n\n~-~-~-~-~-~-~-~-~-~-~\n\nNevada Territory \u2013 Spring, 1632\n\n\"Ach, she's a bonnie lass.\" Kenneth Kilean carefully cleaned the wrinkled pink skin of the Alpha's firstborn and laid her gently in her mother's arms. \n\n\"She's beautiful...\" Claire's voice was soft as she cradled her new cub. \"Ewan, do ye not think she's perfect?\" She gazed up at her mate, her face glowing with pride. \"And here ye'd been so worried.\"\n\nThe Alpha stroked his love's face as he looked at their tiny little bairn. \"Aye, she's a beauty, just like her mother.\" He took a finger and traced the tiny hand as it grasped at him. He didn't look up from the baby as he talked. \"Kenneth, when does the bond form?\"\n\n\"Ye should be feelin' it soon. It starts just after birth, or at least so me father told me.\" \n\n\"What will we name her, Ewan?\" Claire couldn't stop touching her cub. She was so tiny and fragile and beautiful. After waiting these last several years she had thought the time would never come that she would hold her own child in her arms. Now she knew what her mother felt for her cubs, and how much it must have hurt her when Claire left to follow her mate. A salty tear dropped, caught in mid-air by her worried mate.\n\n\"Claire, ye should be happy. Why the tears, me love?\" The Alpha's green eyes were filled with concern for the love of his life. \n\n\"Oh no, Ewan, I'm so very happy. But it's just... I miss me mother. I wish she could see our lovely lass here.\"\n\n\"Maybe someday she'll meet our little Colleen. And that's what we'll name her, Colleen.\" He'd never felt this kind of love for anyone before. He couldn't keep his eyes off his little blonde-haired, blue-eyed Colleen. But how much longer before the bond formed?\n\n~-~-~-~-~-~-~-~-~-~\n\nNevada Territory, Winter, 1636\n\nThe man gently pulled the shawl over the little girl's shoulders, her blonde hair peeking out from under the soft wool. She giggled when he tucked the ends together to keep it tight around her neck. The more the man tried to make her sit still, the more she fidgeted.\n\n\"Quit yer strugglin', Colleen. Now hold still while I get ye dressed.\" The huge man dwarfed the tiny tot as he did his best to get her into her winter clothing. He stood there in his shirtsleeves, the chill of the winter air not bothering him at all. Finally, she was covered head to toe and shielded from the frigid cold. He took her by the hand and walked slowly outside, his strides shortened to allow the little one to keep up. She tugged at his hand, trying to get him to hurry. \n\nShe'd been cramped up in the house for weeks, and the snow had finally let up enough for her parents to let her out to play. As soon as they were out the door she broke free and ran with abandon, screaming into the wind, enjoying the fresh air on her face. She giggled and clapped her hands when she spotted a jackrabbit across the yard and ran after it as it hopped back to its den. Her father kept a watchful eye but let her venture a little farther away from him than her mother normally did.\n\n\"Be careful, Colleen. Yer mother cannae watch ye today; it's yer father that will watch out for ye. So don't go far, lass.\" \n\n\"Papa, Papa, come see what I found!\" The little girl practically bounced with excitement as she pointed to the prairie dog poking his head out of his hole in the ground. \n\nEwan moved as quickly as he could but the damned little animal had bitten Colleen before he could get to her. Her screams carried back to the camp where his mate lay, awaiting the birth of their second cub. Second cub, more like our first. How much I love my little Colleen, but she's no cub. \n\nEwan, I can hear her screaming. What's happened?\n\nDon't worry yerself, Claire. She just has a little scratch. She'll be fine.\n\nOh, Ewan, ye know she doesn't heal well. The last wound she had festered terribly. And she had a fever. And I've no way to care for her in my condition. The new bairn will be here any time.\n\nThe Alpha brushed his chocolate brown hair out of his eyes and bent down to scoop up the wailing child. He held her close, doing his best to calm her cries as he made his way to the healer's home. Kenneth, be ready, she's hurt herself again.\n\nI can hear her, Alpha. I'm ready for ye both. \n\nIn minutes, Ewan had his daughter back in their camp, the pack's females surrounding them, each begging to take the small child from the Alpha. He shook his head at them all, wanting to take her himself to the healer. He had some words for Kenneth Kilean!\n\nWhen he was this age, he'd healed from every scrape, bite, or cut within minutes. Why did his child seem more human than wolf? What was wrong with her? It wasn't that he didn't love her. He loved her with every fiber of his being, but this wasn't what he had expected. Would all the cubs born in this new land be human? Was there a poison in them that killed the wolf inside their bairns? There were no other cubs yet. Colleen had been the first of the pack, and the last until this next child to be born any day. The other females were fearful that all their future cubs would be this way. \n\nThe frantic cries had become sniffles by the time Ewan set Colleen on the table in the healer's room. The Alpha looked up at the healer who was busy readying his supplies. She'll ne'er be able to be alone, Kenneth. We wouldnae know if she was in danger. She'll always need to have someone looking after her. \n\nEwan, we dinnae know that, not yet. Ye have another that will be here any minute. There are other females pregnant now. They're just as worried as ye are. But a wolf still has to have young. It's the way of the world, Alpha, wolf or human, it's what must be!\n\nEwan took in the words of his healer, his friend. He leaned down to kiss the soft crown of his daughter's head. He wanted to feel the bond with her so much, it almost hurt. With a bond, he could help take her pain away when she fell, know when she was scared before she cried, know what she needed before she asked. Was that too much to ask?\n\nEwan!\n\nKenneth saw the Alpha's head jerk. \"Is she in labor?\" He quickly picked up Colleen and handed her to his own mate, Jeanne, who would be giving birth shortly herself. She bundled the child off to keep her occupied while her new sibling was being born. \n\nClaire lay in bed waiting for Ewan as she thought about her firstborn, who she loved more than she'd thought possible. She wouldn't admit to anyone, even her beloved Ewan, how much she prayed to the Ancestors that her second child was born a Werewolf and not human. She felt her mate's hand on her shoulder and closed her eyes, calming herself with his scent. \n\nBreathe, Claire. The babe will be ours to love, and that's all that matters, is it not? Did Ewan believe what he was telling his mate? Yes, he did. He would love this child as much as he loved Colleen. But had he doomed their kind by bringing them to this country?\n\n~-~-~-~-~-~\n\nJeanne watched as Colleen played with some stones on the dirt floor, her hand resting on her prominent belly, feeling movement under her fingers. Ancestors, please let this cub be born a Werewolf. I would love a human child, as I love Colleen, but I so wish for one of my own kind. Her thoughts were interrupted by the loud crying of the Alpha's new child. \n\nAnother girl, Jeanne. \n\nShe smiled and knelt down next to the little girl. \"Colleen, ye have a new baby sister.\"\n\nColleen squealed with delight and clapped her hands. \"My very own doll!\" She giggled and then cried when she hit her bandaged finger by accident. \n\n\"Shhh, it's alright, Colleen. The pain will go away soon. I'll take ye to see yer mama and papa soon. But let's give them a little more time with the wee one.\"\n\n~-~-~-~-~-~\n\n\"Oh, Ewan. She looks just as Colleen did when she was born.\" The little squirming bundle screamed with all her might as her mother tried to calm her. Suddenly, Claire's face lit up with Joy. Ewan, can ye feel it?\n\nThe Alpha's face softened and tears formed at the corners of his eyes. Aye, I feel it, love. She's a wolf for sure. His hand stroked the soft downy hair on the head of his cub, his first cub. \"What do ye wish to name her?\"\n\n\"Annella, after me mother.\"\n\n\"Annella, a fine name, love.\"\n\n~-~-~-~-~-~-~-~-~-~-~-~\n\nNevada Territory \u2013 Spring, 1660\n\nAnnella, where is yer sister?\n\nShe's with me, Mama. Do ye want us to come back? We've almost a full basket of berries.\n\nYes, we have washing to do. Be back before dark. Ye know yer sister can't see when there's no full moon.\n\nYes, Mama. We'll be home soon.\n\nAnnella watched her sister out of the corner of her eye. She felt sorry for her. No bond with their parents, no wolf to keep her company. She couldn't run across the land, the wind in her fur. She wondered what her sister thought when the pack went on a hunt and came back, muzzles dripping in blood. She wished things were different. Annella loved her sister so much, but she felt closer to the cubs she'd grown up with than her own sister.\n\nSuddenly, she had the strangest feeling they were being watched. She cocked her head as she listened and thought she heard a faint sound of a twig breaking. She quickly scanned the area, but seeing nothing, decided she must be overly cautious because they were so far from the camp. Whenever she and her sister went berry-picking they had to venture a ways from their home. It always made her nervous. Annella could shift and run home if there was danger, but Colleen was so much slower. She lifted her head and scented the air. Nothing. \n\n\"Colleen, Mama wants us home.\" Annella was surprised when her sister didn't answer. She spun around and was shocked to see... nothing. \"Colleen? Where are you?\" Her heart pounded in her chest as she scented the air. She quickly shrugged off her clothes and shifted, putting her nose to the ground. Colleen had walked into the trees and just... vanished. Her scent was nowhere to be found. The blonde wolf started circling, the discarded basket of berries forgotten in the dirt. No scent, anywhere!\n\nPapa, I can't find Colleen. I can't find her scent. Papa, I'm sorry!\n\n~-~-~-~-~-~-~-~-~\n\nWhen she felt the hand covering her mouth, Colleen was too scared to think, and the arms that closed around her were like bands of steel, not allowing her any movement. Annella was so close, but she had no way to make a sound to alert her. In that one quick moment, Colleen swore she would let them kill her before she told them anything about her family. She would never tell them what they were or where they were. She would die to protect her family and pack!\n\nWithin minutes the male who had spirited her away from her sister had joined a group of five others. She was startled to see they had fair skin like her pack, not dark like the natives of this land. \n\n\"Oh ho, what have ya got there? Now where would ya find a tender morsel like that way out here in the wilderness?\" The man made a movement towards Colleen and her kidnapper, who stepped back, the slight woman still in his arms. \n\n\"She's mine, and ya best keep yer distance, John!\" The male still held her in his arms but had lightened up his grip, no longer so tight she could barely breathe. But his hand was still held over her mouth.\n\nThe man he called John put up his hands in mock surrender and grinned as he backed away. \"Have it yer way then, Tom, she's all yours. I won't touch a hair on her pretty little head.\" He turned around and laughed, addressing their friends. \"Guess she's spoken for. Then maybe we'll have to find where this little girl came from to find a playmate of our own.\" \n\nColleen couldn't bear the thought of any of these men touching her little sisters, or any other females from the pack. She'd have to find a way to protect her family. They didn't seem to be carrying any weapons. All the stories she had heard of humans had said they always carried some kind of weapons. Maybe she could lie to them and tell them their camp was far to the south; that she had wandered too far from home. And she would tell them they had dozens of males, yes, that was what she'd do. \n\nThe male she now knew to be Tom whirled around to look at John. \"You'll not look for any females, so get the thought out of yer heads!\" Knowing his orders would be obeyed, he brought his attention back to the beautiful prize he held in his arms. He set her carefully on a large rock, but held her close. His lips were near her ear as he whispered, \"If I take my hand away, do ya promise not to scream?\"\n\nColleen thought for a moment before nodding her head. She felt his hand move away from her mouth and settle in her hair. She watched him suspiciously out of the corner of her eye as his hand moved slowly through her blonde curls. \"Do ye not have females where yer from?\" \n\nTom laughed quietly. \"We have many females, but none like you. What is yer name?\" His eyes traveled over her body in a possessive way, like she belonged to him already.\n\nShould she tell him? \"Ye've not earned the right to know my name. Ye've stolen me away and ye expect me to be civil with ye?\" \n\n\"Yer right. I shouldn't have done that, but I was taken by yer beauty, and I couldn't take a chance that I would lose ya. My name is Thomas, but my friends call me Tom. I'd like to be yer friend.\" His brown eyes sparkled as he spoke, like there was something he knew but wasn't sharing with her. \"Yer like a scared little rabbit, aren't ya?\"\n\nHer voice was so quiet, she wasn't even sure if he'd hear her. \"My father will kill ye if he catches up with us.\" She looked him square in the face and was surprised to see amusement reflected in his dark brown eyes.\n\n\"He can try, but I doubt he'd be successful. I'm a good fighter.\" \n\nHe had an air about him that told her he really believed he'd win a fight with her father. And she was just as sure that he'd die, his entrails spread in the desert sand. A small part of her felt sorry for that. \n\n\"I hear Scotland in yer speech. Is that where yer people are from?\" \n\nColleen was silent. She wasn't ready to give him any information about her or her family.\n\n\"My family came to this country from \u00c9ire. So we're from the same part of the world, and here we've met in this new land. Lucky for me we went exploring, eh?\"\n\nColleen looked away, unable to look at the handsome man. Her father would kill him, of that she was sure. She didn't want to remember his face. \n\nHis hand gently turned her face. \"Don't look away from me. Yer mine now. I won't give ya up, even to yer father.\" He gave her a long steady look before he stood up and walked towards his companions.\n\nShe made her plans as he walked away. She'd spent her life running with her pack-mates, doing her best to keep up. She knew she was fast as far as humans went. And she knew the land better than he did. She waited until he was across their makeshift camp before quietly sliding off the rock and slipping into the brush. \n\n\"Yer rabbit just ran away, Tom. Ya best hunt for her before someone else catches her. They might have her for dinner.\" John threw his head back and laughed heartily as his friend leapt to his feet and ran after the slippery little blonde. The other four men joined John in his merriment at Tom's expense.\n\nColleen could hear the sound of her heart pounding. She ducked low as she ran, staying as close to the ground as she could, her slim body slipping easily between the dense brush. She heard her kidnapper behind her, gaining ground, but cursing every time he was stopped by the bushes, too thick for his larger body to pass through. She didn't have the time to laugh. This wasn't one of the games she played with her little sisters or the other cubs in the pack. She was running for her life, and she couldn't imagine it without Mama and Papa, without Annella, Blaire and Elsbeth. She would rather die. \n\n\"You'll tire before I do, little rabbit. I'll catch ya and then keep ya tied when I'm not watching ya. Save yerself the trouble and give in to me.\" Tom wasn't about to let her go, not after finding her by chance. He'd do his best not to kill her father if he caught up to them. But he'd do what he had to.\n\nColleen ran until her lungs burned. She couldn't hear anything but her own rasping breath. She didn't feel the branches that cut through the sleeves of her dress and then her skin. She just knew she had to run towards home. It was her only hope. Papa would be looking for her with the Betas. She had to just run towards home.",
        "Tom was amazed at how fast his little rabbit could run. He was impressed. He knew he'd chosen well. But now she was tiring. He could see her just ahead of him. A few more minutes and he'd have her back. \n\nColleen ran into a solid object and struggled for a moment thinking she'd been caught by her pursuer. It took her a few seconds before she realized it was her father. She looked up and saw the worry and fear on his face, and then relief.\n\n\"Colleen, I have ye now. Ye'll not be harmed my pet.\" \n\n\"Oh Papa!\" Colleen couldn't stop the flood of tears that ran down her face as she clung to the comforting arms of her father. \n\n\"Shh, yer safe now. I'll take ye home to yer mother. But first... \" He pushed Colleen behind him to confront the male who had stopped only yards away. \"Ye'll die for touching me daughter.\" The menacing growl in his voice was clear. \n\nTom stood his ground, not looking a bit frightened. The shifting winds that swirled about them suddenly brought realization to both men who stood glaring at each other. Tom stammered, \"Yer daughter? But... she's human.\" \n\n\"And still me daughter. And ye tried to kidnap her from us! Human or nae, the penalty is death!\" Ewan couldn't contain his rage. He shifted and moved to attack.\n\nPapa, no!\n\nThe immense chocolate brown wolf stopped in place, shocked beyond all words. He turned his head, his emerald green eyes looking at his Colleen, his human daughter. But it was her voice in his head. Colleen? But how...?\n\nI \u2013 I don't know, Papa. But please, don't kill him. I don't know why; I just know it would be wrong.\n\nThe Alpha shifted and walked slowly to his daughter, scenting the air. It couldn't be! He circled her slowly. \"Jamison, come here!\"\n\nJamison, the Alpha's second, moved towards the girl he'd known since her birth. She had always smelled human. But now, her scent was definitely that of a Werewolf! He looked at Ewan, the shock plain on his face. \"She's... \"\n\n\"Aye! She's a Werewolf! Hah! She's a Werewolf. Me daughter is a Werewolf. Ha ha!\" The laughter in his voice matched the look of joy on his face. \"I don't care how it came to be, she's a Werewolf!\" He picked his precious daughter up high in the air and swung her around in a circle, watching as the scratches on her arms healed before his very eyes. He set her down carefully on the ground and hugged her tightly, unable to contain his delight.\n\n\"Papa,\" she whispered in his ear, \"my wolf is with me, and... and she wants him.\" She nodded her head towards the male who stood at rigid attention, watching them.\n\n\"Oh, does she now? Finally shows herself after twenty-eight years and wants a mate already?\" Ewan turned around and faced the wolf who dared to touch the daughter of an Alpha. \"Why did ye take my daughter?\"\n\n\"She is my mate, whether she knows it or not.\" Tom squared his jaw, not willing to show any sign of weakness. At the time he had taken his little rabbit he thought her a human, and so hadn't thought about consequences. Now he was faced with possible death for the crime of kidnapping the daughter of a pack alpha. But when a wolf found a mate, consequences didn't matter.\n\nAlpha, we found his camp, and five more Weres, Betas I think.\n\nBring them here.\n\nEwan narrowed his eyes as he looked at this stranger who had attempted to steal his daughter away. But if she was his mate, as they both had said, then he couldn't very well kill him, not without hurting his own beloved daughter. He glanced over at Colleen, her new wolf's need for the male clear as day. \n\n\"Where are ye from, lad?\" The Alpha's voice had softened just a bit, surprising both his Betas and the male standing before him.\n\n\"Our pack is from \u00c9ire. We came to this land a few years ago. My father is the Alpha, and sent us west to find someplace as far from humans as possible to make our home. This was as far as we got. And...\" He looked at his little rabbit. \"and then I saw her, and I couldn't leave without her.\"\n\nEwan tried to forget the anger and fear he'd been feeling such a short time ago and tried to make an honest appraisal of the Beta standing in front of him. He walked slowly around him, watching his stance, his breathing, his lack of fear. He had to admit, whether he liked it or not, he would be a fine mate for Colleen, a born Alpha. And he had made her wolf show herself! \n\n\"And your intentions towards my daughter are to take her for yer mate?\"\n\n\"Aye, she IS my mate.\"\n\nEwan nodded, more to himself than to anyone in particular. \"How long since ye've had a good meal? Hmm?\"\n\nThe question startled the young Beta. \"Ah, several months, Alpha. We've been making do with what we can catch.\" \n\n\"Aye, that is obvious. Come, we'll return to my pack, feed ye and yer friends, and make plans for yer mating.\" He turned his back on Tom and put a gentle arm around his daughter, pulling her into his body, speaking with her through their new bond, and expecting Tom to follow. \n\nTom didn't know what to do at first. He expected at the very least to be tied and led into the camp as a prisoner. He fell into step behind the Alpha, his little rabbit turning every so often to catch his eye and blushing when he winked back. He knew his pack-mates would be joining him soon, and hoped they would remember their manners before meeting the Alpha. \n\nAlthough not exactly treated as a prisoner, Tom did not have free run of the camp. Everywhere he or his friends went, they were accompanied by Baxter Betas. They seemed like a friendly enough pack, friendlier than what he was used to in \u00c9ire. There, packs rarely had any dealings other than wars, and the annual pack gatherings. And of course, those sometimes escalated to wars after some wolf found his mate and, instead of approaching her Alpha and asking permission to take her, spirited her away in the night to his camp. Tom smiled to himself when he realized that was exactly what he had attempted, and failed. \n\nSince returning to the camp earlier today he hadn't been allowed near his little rabbit. His wolf already pined for her and wanted to search the camp. Tom tried his best to assure him that the Alpha had approved of the mating and it was only a matter of time, but wolves thought in the here and now. And right now, she was not with them. In fact, since arriving here, he hadn't seen a female anywhere, only the males. He wondered if the Alpha was worried about any of his Betas taking the other females. \n\nHe'd been distracted with his thoughts and until this moment, hadn't noticed the whispering from behind him. It was at a distance, but he heard it, or rather, them. \n\n\"He's beautiful.\" \n\n\"Males aren't beautiful, silly. They're handsome.\"\n\n\"He's handsome.\"\n\n\"He looks so different from our males.\"\n\n\"It's only his hair that's different.\"\n\n\"I've never seen a male with blonde hair before, have you?\"\n\n\"No, but I suppose there would have to be some.\"\n\n\"Ninny, of course there are.\"\n\n\"Oh, Colleen is so lucky.\"\n\n\"Someone's coming!\"\n\nTom laughed as he heard the sound of the females scattering. He turned to greet the approaching Alpha. \"Good afternoon, Alpha Baxter.\"\n\n\"Aye, it's a good day. Sit down Tom. I wish to speak with ye.\" Ewan felt more relaxed than he had in years. This was a good day. \"I have something to discuss with ye lad.\"\n\nTom didn't say a word and wasn't sure what the Alpha had on his mind. He seemed friendly enough, at least for the moment. But he stayed on his guard, his wolf at the fore, just in case. \"Yes Sir?\"\n\n\"Do ye intend to return to yer pack with me daughter? Or would ye want to be stayin' on with us? Ye may have noticed we have nae male cubs here as yet. I've no heir. If I were to die, the leadership of the pack would be for the taking. The pack would accept Jamison, but I don't think he really wants it. And ye have to want to be an Alpha. It cannae be thrust upon ye.\" Ewan leaned forward to stare into Tom's eyes, trying to see into the wolf inside. \"Do ye want it, lad?\" Ewan saw the Alpha in this wolf, it was obvious to him.\n\nTom swallowed hard, wanting to speak slowly and carefully, being sure not to say the wrong thing. The last thing he wanted to do was upset the father of his mate. \"Sir, I have no wish to lead yer pack. I am my father's only son, and he's trained me to take his place. That is my future, and Colleen's is to be at my side.\"\n\nEwan leaned back, slapped his hands on his knees as he rose to feet. \"Ach, I had to ask. So be it. But tell me, do ye have to mate with her in yer pack lands? Or ken ye do the deed here with her family present?\"\n\n\"I've no desire to travel months with Colleen without being fully mated. My wolf and I could not take the strain. My Betas could possibly end up dead from a misunderstanding. No, Alpha, I wish to perform the mating here, so we are fully bonded by the time we leave.\" Tom was relieved to see the smile that brightened the Alpha's face.\n\n\"Good! That will make her mother happy. The full moon is in two weeks. Ye'll mate then. But until that time, ye'll not be alone with her. And yer betas are not to be among my females at all!\" Ewan couldn't help but glare at his future son-in-law. Tom's Betas seemed pleasant enough, but his pack did not let their females consort with males other than a mate. Many packs were much more permissive. He didn't want them to get ideas that his females were for the taking!\n\n\"I understand, Alpha. They will be on their best behavior.\" Tom bowed his head in deference to the Alpha, who smiled back at him.\n\n\"We eat when the sun is below the mountains. Ye'll meet my mate and the rest of the pack.\" Ewan turned and walked away, his wolf satisfied that his daughter had found the perfect mate. He was honest, honorable, and bound by duty to his pack. Aye, a fine mate!\n\nTom sat around a fire with his group of betas as they talked quietly. \n\nJohn looked off into the distance near the sound of laughter. \"Sounds like the females are about. Wonder if they all look like your tender rabbit.\" \n\nTom glared at his friend. \"Better get that look off your face or the Alpha might rip ya limb from limb. And I might help.\" Tom smiled when he heard Colleen's sweet voice speaking with the other females. \"All of ya need to be on yer best behavior or I'll slaughter the lot of ya!\" \n\nThe other four snickered as John lowered his head, showing proper submission to the son of his Alpha. \"I promise ya, Tom, I'll not disgrace our pack.\" \n\nTom managed a grin at his comrade and tried to make out who was approaching. It was the Alpha's second, Jamison.\n\n\"Time for dinner. Ye'll be meeting our females, so don't be getting no ideas now.\" The black haired male eyed the blonde strangers who'd come into their midst. They were the first outsiders he'd seen in some forty years. The Alpha seemed to trust them, though. Good enough for me, then.\n\nThe group made their way through the camp and to the long wooden tables where they took most of their meals together. The males were all seated around the larger table, the cubs at a smaller table nearby. The adult females, mated and unmated alike, were bustling around the tables, being sure everyone had their plates. \n\nTom and his Betas gawked at the massive amounts of food on the table. In the last few months they'd eaten nothing but wild game. And since they'd been traveling in the winter through the mountains, the game had been sparse and lean. Tom's stomach growled almost as loudly as a wolf at the sights and smells of meat, hot bread, berries. He was so distracted by it all that his wolf snapped at him to get his attention. The scent of fresh rain and green grass wafted through it all. My little rabbit!\n\nTom leapt to his feet, scanning the faces of the females looking for Colleen. Damned if several of these females looked close enough to her to be her twin! But there was no hiding his mate from him. His face lit up at the sight of her. She had on a different dress, brightly colored and a sharp contrast to the drab shift she had worn earlier in the day. He could see her face shining red with embarrassment, and he was sure she was avoiding his gaze. \n\nSome loud throat clearing next to him from Jamison brought him back to his seat, but slowly, his eyes never leaving the form of his little blonde rabbit. His wolf almost bounded over the table when she bent over one of her pack-mates to serve him a large hunk of meat. Control yourself! It will do no good to start a fight now. She is ours, no other's. We must wait until the full moon, and we WILL be patient.\n\nTom chuckled to himself as his wolf grumbled, circling several times before flopping down to curl up and wait, patiently. But his eyes followed her around the table as she served all of the men. She slowed as she approached him, unsure of what to do. \n\nClaire watched her first-born from close by and shook her head with a grin on her beautiful face. \"Colleen, don't leave him waitin', lass. The man's hungry!\"\n\n\"That meat's not all he's hungry fer!\" John slapped a heavy hand on the table as he roared with laughter. Tom's friends snickered and surreptitiously watched those sitting nearby to see if they had overstepped. When they saw the Alpha laughing with them, they exchanged relieved looks and relaxed for the first time since they'd been brought to the camp.\n\nColleen bit her lip and did her best to avert her eyes as she held the tray of meat for her soon-to-be mate. What was it about this male that made her tremble so? She found herself struggling to hold the platter, and couldn't look away as she watched her hands shaking. Her newly joined wolf was spinning in her head, and she wasn't helping the situation. The tray started to tilt and just as she was about to lose it completely, she felt warmth covering her fingers and saw HIS hands covering hers, steadying the tray.\n\nShe stammered, frantically trying to speak, but could not find the words. When she was his captive she spoke more readily than she was able now. What had happened to her? Ah yes, her wolf. There was the difference. This new friend that shared her mind was controlling her heart and turning her brain into mush.\n\n\"Let me help you with that.\" \n\nHis voice was soft in her ears, his scent wrapping around her brain and making her swoon. She leaned closer to him, her shoulder brushing his, forgetting everyone sitting nearby. She inhaled, her wolf reassured that yes, this was their mate. Colleen had her eyes closed and a smile on her face. The laughter that exploded around her brought her quickly to her senses and her eyes sprang open, seeing her family and friends clapping and roaring with glee. She immediately pulled her hands away from Tom, and readied herself to run to her bed. \n\n\"Ach, Colleen, dinnae be embarrassed, lassie. Yesterday we ne'er would a thought ye'd be findin' yer mate. The entire pack is happy for ye!\" Ewan rushed to his daughter's side. He pulled her hands away from behind her back, and gently placed them into the much larger hands of the male who stood silently next to her. \"For all the pack to see,\" the Alpha's voice boomed across the camp. \"I give me daughter, Colleen, to Tom...\" He leaned over and whispered. \"What's yer pack name, lad?\" \n\n\"Wells.\"\n\n\"Tom Wells, son of the Wells Alpha.\" \n\nA loud cheer went up from the assembled pack. Not only had the Alpha's eldest found a mate, but her wolf had finally shown herself! Now they couldn't wait to see her in the flesh. Would she wait for the full moon and the mating? All eyes would be on Colleen from now on.\n\n~-~-~-~-~-~-~-~-~-~-~-~\n\nNight of the Full Flower Moon \n\nColleen looked up at the bright blue sky, slowly fading as the sun set, the moon rising to take its place. Soon we will be one with our mate! Her wolf's exuberance was overshadowed by Colleen's fears. The wolf might have been in her head, but she hadn't shifted yet. What if she couldn't? She heard a sound behind her and turned in time to see her mother coming towards her, carrying a bundle. \n\nClaire sat down next to her firstborn and just gazed at her, a huge smile on her face. \"Yer father and I dinnae have the chance at a proper mating. I'm so excited for ye, Colleen. And I want it all to be special for ye.\" Tears fell from the corners of her eyes and she quickly brought a hand up to wipe the tears away.\n\n\"Mama, why are ye crying?\"\n\n\"Ye've come so far since the night ye were born. Ye were the first to be born to the pack, and now the first to be mated and to...\" She stopped for a moment, took a deep breath and finished her thought: \"... and the first to leave us. I know ye'll be happy, Colleen. Ye deserve all the happiness in the world. And yer father thinks Tom is a fine wolf and will make a worthy mate.\"\n\n\"Oh Mama, I'm going to miss ye!\" Colleen leaned her head on her mother's shoulder and began to cry.\n\n\"Hush now, me lass. This is a happy time. I brung ye a dress that me mother had made for me mating. I ne'er had a chance to wear it. But she let me take it when yer father took me from the pack. I want ye to wear it, for Tom.\" She carefully un-wrapped the package that had been hidden away all these years. The dress was bright green, the color of new grass, and next to Colleen's golden hair, it shone like an emerald.\n\n\"Mama, it's beautiful!\" There was awe in her voice as she touched the soft material. \"It's so fine and delicate. I'd be afraid I'd ruin it.\" Her hand couldn't stop touching the fabric.\n\nClaire laughed. \"Oh, child, mating dresses hae been ruined for centuries. Some males will tenderly remove yer gown, while others will rip it from ye to see what they've won fer themselves.\" She gave her precious daughter another hug and kissed her on the forehead. \"Ye'll be ready at the clearing when the moon is high, after the hunt. Yer sisters will see to ye.\"\n\nColleen was so proud that her mother thought her worthy enough to wear this special dress. And for her mother to stop her own preparations for the full moon to come to speak with her made Colleen realize how much she would lose when she left her home. \n\nBut think of what we will have. Our very own mate!\n\nColleen couldn't help herself, she had to ask. Why did ye wait so long to join me?\n\nYe didn't need me. When our mate was in danger from Papa, then ye needed me.\n\nThat was interesting. Her wolf felt she wasn't needed, so she had slept for twenty-eight years? How very strange.\n\n~-~-~-~-~-~-~-~-~\n\nColleen stood in the middle of the clearing, waiting for the hunt to end. Her heart pounded, and she barely felt her sisters' hands as they held hers, Annella on one side, Blaire on the other. Elsbeth, the youngest, stood behind her, keeping the bottom of her dress from being soiled in the wet grass. The four sisters were so alike, those that didn't know them would think the three eldest were triplets. And Elsbeth, only ten years old, just looked like a younger version of her siblings.\n\nThe whispers in Colleen's head were so new to her, she still was learning the subtle differences between her sisters' voices. But she was sure it was Blaire, just sixteen years old, who spoke to her now. \n\nOh, Colleen, I wish it was me mating tonight. Yer so lucky!\n\nThen the soft laughter she knew so well from Annella. Don't be silly, Blaire, yer too young. Yer wolf would never allow it. Colleen, yer so beautiful. Yer wolf will show herself tonight, I just know it. And she'll be as pretty as Mama! \n\nElsbeth's excited voice called out. \"Here they come, they're back. Look at the buck Papa brought back.\" She almost dropped the hem of the dress in her excitement. \"And Tom has one almost as big!\"\n\nColleen followed Elsbeth's arm as she pointed at the hunters returning with their kills. The pack would feast well tonight. But she knew they were more interested in seeing if her wolf came out tonight. Her wolf spinning at the sight of Tom made her momentarily dizzy. Only her sisters' steadying presence helped her regain her composure. ",
        "The Betas trotted in behind the Alpha, dragging their kills. While their leader was a rich chocolate brown, most of the Baxter Pack were solid black or dark gray. A lone blonde male followed closely behind, not sure what was expected of him tonight. His dark brown eyes lingered on his little rabbit, a vision in green, standing just feet away from him. \n\nColleen watched as her parents met at the edge of the clearing, the elegant blonde wolf with the sky blue eyes approaching her mate, gently licking the blood from his muzzle, telling the pack she was proud of her wonderful Alpha male. They sat together at the edge of the clearing, and the Alpha nodded his big shaggy head at the blonde male.\n\nTom shifted, his body streaked in dust and blood. He saw only Colleen, her long blonde hair flowing over her shoulders, the green gown hugging every curve, clinging to her like a second skin. He felt his wolf urging him forward, eager to make her theirs. If he saw the pack surrounding them, his five pack-mates standing nearby, he gave no hint. He had eyes only for the female standing before him, waiting for him.\n\nAs she watched his approach, Colleen's mind wandered to the last two weeks. She'd not had any time alone with her soon-to-be mate. They had not even touched since the night her father had placed her trembling hands into Tom's steady ones. And now they were to mate in front of the whole pack. \n\nAll will be well. \n\nEasy for her wolf to think. She hadn't been with her all this time. She didn't know everyone watching them.\n\nI have always been with you. And now our mate will be with us always.\n\nColleen didn't have time for her wolf's comment to register before Tom was standing in front of her. She didn't even notice the movement around her when her sisters retreated. She saw only Tom, her mate, and felt a sudden calm wash over her. All was as it was meant to be. Her wolf's words made more sense to her now. \n\nTom looked into her blue eyes, the color of the sky, and was lost forever. Never would he look upon another female with anything close to the feelings he held for his little rabbit, his Colleen, right now. He felt a shock as his hand gently reached up and touched her face. The scent of her, the feel of her... nothing existed except her. \n\nColleen leaned into his hand, wanting nothing but to be near him. No one was in her world but Tom. At this moment she couldn't care less about the eyes following their every move. She had never imagined what a kiss would feel like, but when his lips touched hers in a tentative, gentle kiss, she felt her heart leap in her chest. At that very moment, her human half fell in love. This was what it meant to be a Werewolf. Your wolf showed you the way to your one true love.\n\nTom couldn't stop his hands from moving across her soft skin. He wanted to feel every inch of her, and marveled that she was his. He found the clasps at the back of her dress and slowly undid them, taking his time, but at the same time, impatient to rid her of the clingy fabric. He watched the gown slide off her shoulders and pool at her feet, realizing he hadn't taken a breath as her perfect body was exposed to him for the first time.\n\nSo beautiful. And she is ours!\n\nColleen breathed deeply, trying to keep herself from rushing into his arms, waiting for him to say, to do something, but he just stared. She bit her lip and looked at the ground. Was he displeased?\n\nHis hands drew her face up so he could gaze into her amazingly blue eyes. \"No, Colleen, never look away from me. You are everything I have ever wanted. I was meant to come here and find you. I'm sure the Ancestors sent me this way for just this purpose. I vow this very night that I will protect you and any cubs we bring into this world, 'til the end of my days on this earth. You are my life, Colleen.\" He leaned forward and captured her lips in their first torrid kiss, his arms wrapping around her body, holding her close, feeling her heart pounding through her chest.\n\nOnce his lips left hers, they never stopped moving across her skin, along her jaw, down her neck, between the valley of her breasts. His hands reverently touched her bare breasts for the first time, marveling at the weight and the soft feel of them. He could not resist and bent down to lap at one stiff nipple, pulling it into his mouth to suck, until the moment was right, and then he bit down just enough until he heard her moans of pleasure. His fingers worked her other nipple, bringing it to a hard point for him to suckle.\n\nHer hands moved to his hair, stroking his head as he showed her what pleasure could come from love. She moaned as he touched her, licked, sucked and bit at her body. He went to his knees in front of her, his hands reaching between her legs and parting her nether lips, opening her body to him. \n\nTom could smell her arousal and inhaled deeply, letting it fill his mind, inflaming his wolf further, but he did not allow him forward yet. No, she is not one of those little pack sluts that chases after the Alpha's son. She is ours, she is special, and... she is a virgin. So we go slowly!\n\nColleen felt a warmth flowing through her veins she'd never felt before as her Tom flicked his tongue between her folds. Her knees went weak, and though she didn't know how, he had lowered her to the ground, tenderly placing her on the small patch of grass. He had pulled her legs over his shoulders as his tongue lapped at the fluids that flowed from her at an ever-increasing pace. Her hands grasped at the ground, her head tossing from side to side as she felt something building. What it was she didn't know, but knew there was more to come. Her hips lifted to her mate's mouth, his tongue expertly exploring her depths.\n\nTom was pleasantly surprised by Colleen's enthusiasm and buried his face in her sex. He felt the tension building in her body as he caressed the well-developed muscles of her thighs. He doubled his efforts, his tongue gliding along her swollen flesh, the taste of her flooding his brain. His wolf fought against the human for control, but Tom held fast, wanting to be the one to bring their mate to her first orgasm. When he heard her cries of pleasure and tasted a fresh rush of her fluids, he slowly backed away, his tongue still flicking along her fair skin, feeling the fading twitches of her spasming muscles. He kissed his way back up her body, taking his time, and was startled by the feral look in his love's blue eyes as she gazed back at him, licking her red lips. He was finally content to let his wolf take control. \n\nColleen lay back, trying to catch her breath, her pulse jumping in her throat, feeling a new urge within her. She knew what was expected of her, to mate with the wolf that now stood in front of her, his tongue hanging, Tom's dark brown eyes watching her intently. She smiled and sat up, reaching for the wolf to come to her. The blonde wrapped her arms around the wolf's muscular neck and buried her nose in his thick fur. She whispered so only he could hear, \"I'm ready for ye, Tom. I want to be yers forever.\" \n\nThe couple was oblivious to the pack that surrounded them. They didn't see the Alpha and his mate as they leaned into each other, basking in the knowledge that their eldest child would be well mated and take her rightful place in a Werewolf pack. She was not destined to life as a human. No one but his mate saw the tears fall from the big chocolate wolf's eyes.\n\nColleen rolled over onto her hands and knees, spreading her legs and preparing herself for her mate. She glanced over her shoulder at the big blonde wolf watching her intently, smiled, and wiggled her hips in invitation. She wasn't disappointed when he moved forward, his nose probing her weeping sex, licking tenderly, remembering his human half's admonition to be gentle. But she was ready, and so was he, his hard cock a testament to their mutual desire.\n\nThe blonde male slid his tongue along her haunches, pulling himself away from her sweet nectar and lifting himself to cover her back with his body. His hard cock felt for her entrance, eventually finding his target and surging forward, feeling her tight sheath like a glove on his throbbing member. But the wolf was puzzled. There was a barrier. He held her hips with his large paws and pushed, hearing a painful squeal from the female beneath him. \n\nShe is a virgin. It is our duty and pleasure to open her entrance. And no other shall touch her. \n\nThe wolf was pleased that their mate would never know the touch of another male. She was theirs forever tonight. He drove his cock in with a mighty thrust. He felt the barrier give way and his mate scream out in pain, but her pleasure followed closely as she was filled for the first time. His tongue reached out to taste her skin and calm her trembling. \n\n\"I am alright, Tom, really.\" Colleen's voice was tremulous, the slight moment of pain gone and replaced by the urgent need to mate. She pushed back against him, his cock now fully encased inside her body. She could feel the throbbing, hard flesh deep within herself and knew there would be more. She braced herself as the big blonde wolf began to thrust, slowly at first, then faster and stronger until he was pounding into her freshly torn flesh. Her small cries of pain were gone, only her cries of longing and pleasure heard over his loud grunts.\n\nThe wolf felt his knot grow and pushed forward steadily, forcing the large knob to stretch his mate's entrance. Colleen gasped at the sudden intrusion, but by the time it was well seated, she felt the pleasure from the added pressure. Tom's thrusts were shorter but more frantic as he neared completion and leaned forward across his beloved's back to grasp her neck in his strong jaws. He could feel the pulse jumping in her throat and as he felt her body jerk and spasm in her second climax, he bit down, feeling his teeth pierce her tender flesh, her blood flowing into his mouth. Colleen's scream cut through the silence surrounding them as she cried out her pleasure. Her body convulsed underneath him and he held tight to her neck until her screams had died down to moans of pure delight and satisfaction. Tom continued to thrust, his seed flooding her womb, his teeth still buried in her delicate throat.\n\nThe couple lay together on their sides in the grass, the large wolf still filling the slender human form of his mate. Her body still trembled; with the occasional spasm of a muscle. The wolf's long tongue lazily stroked his beloved's back, waiting for her to recover and for his knot to recede. He knew her pack was waiting to see if her wolf would come forward tonight. Whether she did or not didn't matter. She was his now. He felt his knot shrink and his cock slide out of her stretched hole. His forelegs tightened around her body, not willing to let her slip away just yet.\n\nSleep now. It is my turn to be with our mate. I have waited patiently to awaken. I will be patient no more.\n\nColleen could almost see herself inside her head, passing the blonde wolf who trotted to the front of their shared soul. She gave her body over fully to her lupine half, willingly giving up control for the first time in her twenty-eight years. For years she had watched with fascination as the cubs learned to share their bodies with their other halves. It seemed something they needed to practice, to learn. But now, she was going to shift for the first time. Would she be able to?\n\nOf course.\n\nColleen could feel Tom's soft fur against her back and begrudgingly rolled away from him, lifting herself to her hands and knees. Suddenly the world looked different. The ground seemed so much closer, and she felt it with all four feet, not just two. She looked to her parents, and instead of having to look down towards the two wolves, she saw them straight ahead of her. The pride on their faces was obvious to her. She moved her head to look at her new mate. The look of love in his dark eyes was unmistakable. \n\nYou are so beautiful, little rabbit.\n\nThe female wolf moved forward slowly, stretching her neck out and flicking her tongue across the wet nose of her male, her mate. She took a few steps, trying out her new limbs. She felt an incredible energy! I need to run.\n\nThe two wolves ran through the clearing, the female so much smaller than her new mate. But they made a striking pair as the two blonde wolves ran side by side into the desert. \n\nColleen's heart sang as she ran beside Tom and heard her parents' words in her head. \n\nWe're so proud of ye, Colleen. So proud!\n\nThis was a good omen for the Baxter pack. The Alpha's eldest had found her wolf. \n\n~-~-~-~-~-~-~-~-~-~-~\n\n2025 - Elko, Nevada\n\n\"C'mon, Hope. I don't have all day ya know!\" Jason waited impatiently for his cousin to get a move on. The doctors had been poking and prodding him all week, taking samples, doing their tests. He was ready to get away, and he really wanted some time alone with Hope. They hadn't had any time alone to talk yet, and she was the only person he felt he could tell everything to. He crossed his arms and leaned against the wall, his head laid back and eyes closed. He didn't notice the pack members who walked by, smiling at him. He didn't know they commented among themselves how much Zsigmond's grandson looked like him.\n\nHope was skipping as she left her father's office. She loved sitting there while he did whatever it was an alpha did. She just liked being around him, surrounded by his scent. He always made her giggle when he'd stare at her across the desk and ask her if she didn't really want to be out playing instead of hanging out with her ancient father. She'd shake her head, her long red pigtails flying. Maybe it was the knowledge he had never known her older sister, Mariska, that made her want to spend every possible moment with him she could. Hope's mother frequently commented that she thought Hope was Mariska reincarnated. Orsolya would call Hope an old soul, shake her head, and walk away. But right now Hope knew her cousin was waiting for her, and she couldn't wait to find out what it was he was so anxious to talk about.\n\nShe found her cousin standing against the wall near the front door, his eyes still closed. Hope grabbed his hand as she skipped by, dragging him through the doorway. The passing Betas got a good laugh as the tall gangly boy tripped while he trailed along behind the little redhead.\n\nHope ran, giggling, as Jason struggled to stay up with her. She figured that the sooner she tired him out, the sooner he'd say what it was that was bothering him. She finally stopped underneath a tree, looking up at the tree house the Baxter boys were so proud of. They didn't let girls in their tree house. But she had plans about that. She waited patiently for Jason to catch up.\n\nJason gasped for breath. No way was he going to let his little cousin leave him that far behind. One thing he loved about Hope was that she didn't coddle him the way the adults did, and didn't act like nothing was different about him, like the boys. She was just Hope, straightforward and truthful, always, even when it hurt. He kind of liked that.\n\nOnce he'd caught up to her, he saw the glint in her eyes and her glances up into the top of the tree. \"Don't you dare! The guys don't want girls up there. It's their tree house!\" Jason knew where the boys hid the ladder that led to the rungs nailed in midway up the tree trunk. But he wasn't going to talk, no matter what. He'd made a promise. \n\nHope pursed her lips and crossed her arms, the usual Hope way of saying she didn't care. She kept looking up, her brow furrowed as she thought things out. \n\nJason studied his cousin's face and knew he was in for trouble. \"What are you planning? Please, don't do anything that's gonna get the guys mad at me. They don't even want any of you girls to know where the tree house is.\" \n\nHope burst out in laughter. \"Well, they're out of luck then. We've known since they built the silly thing.\" Hope thought back to how secretive the boys had been while they planned their tree house, hoarding supplies and trying to sneak them out here. All of the girls knew exactly what they were doing and where. They'd even spied on them a few times. But none had ventured into the trees, yet.\n\n\"I can do what I want. I'm an alpha's daughter, aren't I? What are they going to do? Spank me? Send me to bed without supper?\" She grinned ear to ear and shook off her sweats, shifting quickly into a small, lithe panther. Her red coat glistened in the sunlight, and her pale green eyes sparkled with mischief. Out of all the cubs born to the Vlkolak females, she was the only panther. Even Jenna's cub was a wolf. The doctors had said it was just genetic chance. \n\n\"Please, Hope, don't do it. For me?\" Jason pleaded with her until he watched with amazement as she leapt into the air, her claws digging into the bark of the tree about six feet up. She carefully made her way up the tree one clawhold at a time, until she reached the wooden slats they had attached to the trunk. \n\nJason gave up. What difference did it make now if he got the ladder? She was already up. He grabbed it from its hiding place and scurried up the tree in time to see the panther's tail switching back and forth as she climbed even higher than the tree house. \n\n\"Hope, please, come back down here. Don't go to the top of the tree!\" All he could see were two glowing pale green orbs looking down at him through the needle-like leaves. He imagined he could see the smile on her face and her whiskers twitching with excitement. \n\nJason strained to see her red coat in the dense foliage, but saw only the swaying of the uppermost branches. \"Hope, you're going too high. The branches can't hold your weight! Please, come back down.\" He could barely make out the tip of her tail as it flicked from side to side. \n\nHope gazed at the valley floor with amazement. The view from up here was spectacular! Oh she wished she could share it with Jason. The breeze felt so good ruffling her coat. Her head jerked up when the blackbirds starting dive-bombing her. I must be too close to their nests. She snarled, trying to scare them away but there seemed to be even more of them swarming around her. She snapped her jaws at them, not trying to hurt them, just to get them to scatter, but it was no use.\n\nJason heard the growls coming from his cousin high up in the branches of the tree. And he could see the accumulated birds swarming around something. Were they attacking Hope the same way they had the red-tail hawk? \"Hope, come down!\" What was that sound? Cracking wood? Jason watched in horror as the little panther tumbled forty-five feet to the ground, her body contorting in a panic, trying to right herself to land on her feet. \"HOPE!!!\" He heard his voice echoing like he was in some bizarre dream. It almost was like time slowed down as her body landed with a loud thud. \n\nJason scrambled as quickly as he could down the ladder to the base of the tree where his cousin lay, so still. He knelt next to her head, his hand gently touching the top of her head. \"Hope? Hope, can you hear me?\" He watched for some kind of movement, but could barely make out the rise and fall of her chest. Small drops of water fell onto the red fur, but he didn't realize they were his tears until he looked up at the clear sky. \"Hope!\" His voice cracked as he gently shook her. \"Hope, please wake up!\" He suddenly noticed a spreading pool of dark red, coming from underneath the still form of his little cousin. He lifted her shoulders just a bit and gasped when he saw the tree branch that had pierced her chest. His hands shook as he let her back down. I shouldn't move her.\n\nHe leaned back, the tears streaming down his cheeks. He could never make it the two miles back to the compound in time. And he couldn't just leave her here alone to die! His head fell back and he screamed into the sunlit sky. \"HELP!\" Jason prayed to the Ancestors that someone, anyone was nearby and could hear him.",
        "~-~-~-~-~-~-~-~-~-~\n\nDrago appreciated all the help the Baxter Pack was giving them with Jason, and so he was more than willing to help with a little manual labor. These dead trees were a fire hazard, so the sooner they were pulled out, the better. The sweat was pouring down his face, and he stopped a moment to swipe his arm across his forehead and grab a swig of water. Time alone to think was a good thing. Maybe he'd been too focused on what he expected of his son instead of just enjoying the time he had with him. The Doctors were assuring him that Jason was a normal, healthy boy. If his Were-half was late in showing himself, so be it.\n\nHELP!\n\nDrago pulled his head up and scanned the area. He cocked his head, listening intently but hearing nothing.\n\nHELP!\n\nThe voice he heard was in his head, but it wasn't one of his Betas. It wasn't the Alpha or either of his fathers. The voice was too young. It almost sounded like Jason. I must be hearing things.\n\nHELP! Dad, help me!\n\nDrago jumped into the truck, and put the pedal to the floor, sending the pick-up skidding across the desert sand. Jason, is that you?\n\nYes! Dad, Hope is hurt, bad!\n\nWhere are you Jason? I'm coming!\n\nKelly, did you hear him? Drago knew his mate was back at the compound, with the other panthers. \n\nYes, the Doctors are packing now. Did he tell you what happened? \n\nNo, just that Hope is hurt. I'm closer than the rest of you. I'll let you know what I find. Drago had a feeling of dread as he sent the truck hurtling down the dirt path. He could just barely make out the tree but didn't see Jason standing nearby. But once he was closer, he saw him, or at least he assumed it was him. The truck screeched to a halt in front of the small red panther, lying motionless on the ground, her body being sheltered from the sun by a long, lanky black panther. \n\nDrago was startled for just a moment. Jason?\n\nYes, Dad, it's me! \n\nDrago rushed to Hope's side and quickly assessed the situation, sending the information to Kelly, who relayed it to the Doctors who were with her in the speeding SUV. Moments later they had arrived and, as Jeff and Logan attended to their gravely injured patient, Kelly and Drago sat with their son.\n\nI'm proud of you, Jason. What else was there to say? Drago sat quietly, his hand lightly resting on his son's shoulder. Jason's sleek coat was jet black, and he looked remarkably like Kelly and Leo in his panther form, but with Drago's dark eyes.\n\nKelly just stared in awe at her precious son. How did you do it?\n\nI don't know. He just kind of took over. I was really starting to panic. I couldn't leave her here alone to go for help, and it would have taken me way too long to get back. After I'd screamed myself hoarse, he started talking to me. He told me he'd help me, help Hope. And he called to you, Dad. The dark brown eyes looked up at Drago. \n\nCan you shift back?\n\nHe says he wants to stay a while. He said I can take over again in a bit. He wants some time. Is Hope going to be okay?\n\nThe Doctors will do their best, Jason. But without you and your panther, I doubt she'd have a chance. Drago knew she wouldn't have had a chance. He watched while the doctors gently rolled the cub to her other side. Drago winced when he saw the branch sticking out of her chest where she had been impaled and the slick coating of blood that covered the ground underneath her. He took a deep breath and took Kelly's hand, squeezing it tightly. \n\nKelly looked up at her mate with tears in her eyes. \"Orsolya and Guillame are waiting at the hospital. They lost one daughter, now they're afraid they'll lose another.\" \n\n\"Can you help her? Like you did me? Like you did the injured wolves on the battlefield?\" Drago had no doubts she could. His mate's healing gift was the reason he was here now.\n\n\"I-I don't know. Maybe.\" \n\n\"Go with them. I'll take Jason back with me.\" Drago pulled his mate close, kissed her tenderly, and whispered through their bond. If anyone can help her, you can, baby.\n\nKelly climbed into the back of the makeshift ambulance, settling herself into a corner, leaving the Doctors room to work, and laid a hand on the only part of Hope she could reach, her tail. Kelly didn't usually speak directly to her panther; they just kind of knew what the other was thinking. But today, she needed to. Can we help her?\n\nPerhaps. There is only so much we can do. But we will do all we can. Our sisters are waiting for us. They will help. \n\nKelly barely noticed the Doctors as she focused only on Hope. We're with you, Hope. All of the panthers are with you. There was no reply. Kelly did her best to block out Orsolya's anguish and concentrate on Hope.\n\nThere was a crowd waiting near the entrance to the hospital but the betas cleared the way so the SUV could park close to the door. Everyone in both packs knew Alpha Bertrand's daughter had been gravely injured, and wanted to lend their moral support and anything else that was needed. Guillame was inside with Orsolya, both doing their best to calm the other's fears. \n\nAs the pack second, Zsigmond waited to escort his Alpha's daughter, also his niece, into the hospital. As always, his emotions didn't show on his face. But his heart was breaking for his sister and his friend. He prayed to the Ancestors not to allow a second child to be taken from them before her time.\n\nThe back of the SUV opened, and Trina stood nearby, ready with the gurney. As an experienced trauma nurse, she was able to keep her face blank as she saw the damage done to the little panther. She'd already had a heads-up from Logan as to what to expect, and had everything waiting. They gently placed Hope on the gurney, Kelly never taking her hand off the cub's red tail. \n\nOnce they'd rolled the gurney into the trauma room, Kelly turned her attention to the assembled panthers and Hope's grief-stricken parents. \"I could feel her panther while I held her tail. She was fighting to stay with Hope. And she said to give you a message.\" Kelly felt tears falling down her face as she struggled to make the words come out. She could barely look at Orsolya and Guillame as they clutched at each other for strength. \"She said Hope's last thoughts were that she didn't want to hurt Mama and Papa.\" \n\nOrsolya was beside herself and unable to make a sound other than gut-wrenching sobs. Guillame held her hands tightly, bringing them to his lips, before gently brushing the tears from her eyes. She is strong, like her mother and grandmother. And we must be strong for her!\n\nOrsolya gave her love a weak smile and a barely-seen nod. It was only then she saw her sister-panthers surrounding her, feeling their love and support. She felt their hands touching her gently, knowing the Seven Sisters were together and would do all they could for her daughter. She steeled herself for what could happen and nodded her head. I'm ready, Sisters. She closed her eyes, barely able to feel Guillame next to her, and let her panther join with their sisters. \n\nKelly concentrated on Orsolya's love for Hope. With her sister-panthers' help, she soon found herself in the trauma room, unseen by the Doctors and Nurses as they did all they could to save the little red panther. Kelly went to the head of the table and gazed down at the lovely head of the little red cub. She took Hope's head in her hands and lovingly stroked the soft red fur between her eyes. She leaned down and whispered to her through their panther bond. We are all with you, Hope. We know you are struggling to come back to us, and we will help you all we can. \n\nKelly was startled by the response she received: \n\nI am with her. I won't let her leave Mama and Papa. \n\nKelly sat back and cocked her head. That wasn't Hope's panther. Who are you?\n\nI am Mariska. Or, what is left of Mariska. I will not let her die. \n\nKelly was taken aback. She fumbled for something to say and could only think of Thank you. She watched the various monitors as Hope's vital signs steadily improved. She could see the surprise in the eyes of Jeff and Logan and their quick responses to the changes. And she felt Hope's panther stir deep inside her mind, reaching out, and then it was Hope's panther calling out. \n\nI'm sorry, I'm sorry I'm sorry!\n\nKelly could sense the relief from Orsolya wash through her body and mind and soon found herself back in the waiting room with her Sisters. She was a little rattled from her short meeting with Mariska's... ghost? Should she tell them? No, now wasn't the time. She would let them think only of Hope for right now. \n\nJenna squeezed Kelly's hand as she shepherded the panthers out of the room, leaving Orsolya and Guillame to wait to see their daughter. Kelly smiled as she saw the two of them crying tears of joy, because their daughter would return to them. But it was time to shed her own tears of joy. Her mate and son were waiting for her. She quietly shut the door and made her way to where she knew they were waiting outside the hospital.\n\nKelly was momentarily surprised that Jason was still in his panther form, but she quickly let it go and sat down next to him, Drago on the other side, his hand still resting protectively on his son's shoulder. You and your panther saved her life, Jason. \n\nI know. It was really him. But when I asked him why he'd waited so long to show himself, he just said I hadn't needed him 'til now. \n\nThe family sat there quietly as members of both packs passed by, trying not to be obvious as they glanced at the sleek panther, flanked by his proud and relieved parents.\n\nThis was a good omen for all the packs. Drago and Kelly's son had found his panther. "
    ],
    "authorname": "lilgirlsix",
    "tags": [
        "werewolf",
        "beta",
        "alpha",
        "werepanther"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/remembrance-of-things-past-ch-02"
}