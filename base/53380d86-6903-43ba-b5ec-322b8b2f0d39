{
    "title": "The Reader",
    "pages": [
        "Copyright \u00a9 2017 Endura Glass\n\nAll rights reserved.\n\n<br >\n\nDEDICATION\n\nTo all the fortunate souls out there, whether they be male or female, who have dared to love, dared to find solace in the embrace of romance.\n\n<br >\n\nACKNOWLEDGMENTS\n\nTo the wonderful individuals who led me, in their own ways, through their various fetishes, to where I am today, imbuing me with an understanding of the many facets of human nature the physical desire.\n\n------------\n\nAfter much time and work, insecurity and uncertainty, Elery Shore had finally begun to attain some success with her career as a freelance copy-editor and reading aide. Her website encouraged people of all ages to partake of her gifts as a linguistics major and a lover of literature. She held a deep passion for the tantalizing rhythm of words authors strung together in their beautifully fluid telling of stories. Ever since she was a young girl, Elery loved books, spending countless hours alone poring over the pages and escaping into the wonderful landscapes of her\u2014and the author's\u2014imagination. Adding to the equation that bolstered her reader-for-hire offerings was the fact that she possessed a pleasantly mature, feminine voice that infused her live reading with a kind of verbal honey.\n\nTo date, Elery's growing client pool of people requiring a reader had been predominantly that of parents interested in getting their children into better schools by hoping to infuse their offspring with an appreciation for the written word. She often tried to curb parent's ambitions, explaining that any progress came down to an individual's genuine interest in books, which unfortunately, they would have to arrive at on their own.\n\nOver the past months Elery had been receiving calls from people who subsequently hired her to read to their aging and ailing, often bed-ridden parents. She enjoyed the time spent in various homes and care facilities, sitting alongside a bed where\u2014often prone and somewhat despondent\u2014rested an elderly man or woman who looked out at her from life-withered faces as they listened to her eloquent voice carefully unravel the stories. Some drifted off to sleep, others into catatonic states. Most however, defied their physical deteriorations with a sparkling lucidity in their eyes as they listened, enraptured, like an infant marveling at all around it. Elery would sit, turning the pages, reading, her soft voice respectfully cradling each and every word, transforming them into a verbal elixir that lingered in the air like a tantalizing morning haze.\n\nOne day Elery received an inquiry from an older man desiring to hire a reader. She traded two e-mails and then a phone call with the prospective client. The man at the other end of the line introduced himself. His voice, though aged, had a youthful resonance that left Elery believing he was most likely inquiring about her services for one of his parents. Agreements arrived at and address exchanged, a date was set for a formal, face-to-face introduction. Elery penciled it into her calendar for the following Monday.\n\nThe day of the meeting with the prospective new client Elery paid special attention to her appearance in order to make the best impression\u2014not that she wasn't always immaculate and well-groomed. She chose a somewhat conservative dress and modest heels. After a final look at herself in the mirror she then headed off to catch the B train to the south side of town.\n\nExperienced with this routine of meeting new clients, Elery wasn't the least bit nervous, listening to the shriek and scrape of the subway train's wheels against the iron tracks as it raced through the darkened underground. Elery always used any free time to read, as she was doing now; her second time through Cormac McCarthy's All The Pretty Horses.\n\nBooks had always been a pleasant escape for her, a place to while away the hours, escaping into fantasies and other places. They were her friends, the various fictional characters often holding more realism and truisms than those of actual flesh and blood. The books had sheltered her broken heart on several occasions, as they were presently\u2014her last relationship having suffered the calamities that so often prey upon love. A confusing squabble, a heated exchange, and, poof! Another man she had dared to love had vanished, leaving behind no physical proof that he had ever existed. Like a ghost known only to her, with the once lovely memories fading into sad obscurity. The tiresome routines of romance brought a beleaguered and sour reality that the books never plagued her with. For the time being, Elery was happy to be unattached, un-tethered to a man, finding her own sensual escapes in the imagined stories of others, with the frequent retreat into self-satisfaction so many lovelorn people resort to.\n\nAfter twenty minutes on the subway and one train change, Elery emerged from the underground into the warmth of the day, got her bearings, and headed off into the tangle of residential streets. A few minutes later she arrived at an elegant three-story red brick home on a tree-lined avenue that looked to have been built at the front end of the 20<sup>th</sup> Century. A manicured lawn bordered a cement pathway that led to the porch. Ascending the steps Elery felt the palpable air of history that hung about the home. She then stepped into the shade of the porch and rang the doorbell, listening to the cascade of metal bell sounds resonate the house on the other side of the ornate front door.\n\nA moment later the door was opened to an older man dressed in beige khakis and a blue dress shirt, the sleeves rolled up to the elbow. His hair was brilliantly gray and combed straight back. He looked to be in his mid-seventies, but it was hard to tell. He stood eye-to-eye in height to Elery and despite a slight bend of years had relatively good posture and a slim physique. A pleasant, friendly smile accentuated his handsome, sun-weathered and deeply lined face. When he extended his hand to shake hers she took note of the Rolex watch adorning his right arm; a 'lefty,' she thought to herself.\n\n\"Ms. Shore?\" he inquired, his voice laced with an appealing aspect of aged masculinity.\n\nTo which Elery simply responded, \"Yes.\"\n\n\"Pleasure,\" the man said, holding his gaze on her a moment too long, pleasantly surprised with her attractive appearance. \"Come in.\"\n\nElery found herself being led through the spacious old home, past the grand staircase that circled up to the second and then the third floors, a massive wood banister curving with it. The home was tastefully decorated and held what appeared to be a good number of rare antiques. The only sound aside from their footsteps against the hardwood floors was that of a large, ornate grandfather clock chiming out the exact hour of her agreed upon arrival.\n\n\"You're punctual,\" the man offered as he led her down the hall, \"I like that.\"\n\nA moment later Elery was sitting across from the man in a small study, the walls tiered with cherry wood shelves that held hundreds of books, many of them first editions. A massive oak desk dominated the room. Heavy drapes were opened to reveal a large window, the view of the backyard softened through sheer curtains. An over-sized globe was illumed from within. There was a well-worn leather reading chair paired with a brass reading lamp and small table just large enough to hold a good-sized novel and a Brandy.\n\nElery took a seat on the leather couch opposite, hands clasped together demurely in her lap, fingers fondling the thin straps of her purse. She assumed this was the initial interview and that she would then be led upstairs to be introduced to an ailing father or mother in a large poster bed, where she would draw a comfortable chair alongside and set to reading a book to a person who may, or may not even know that she was there.\n\n\"Ms. Shore,\" the man spoke, \"I did due diligence, your resume is impressive and your references impeccable. If we decide to enter into an arrangement I would like to secure your services three times a week. Monday, Wednesday, and Friday. Two hours per day, preferably mid-day. And for that I will pay you your stated rate on your website. Which I believe is twenty dollars per hour.\"\n\n\"I would have to charge for travel time, given the distance,\" Elery countered. \"So that would add perhaps another hour per trip.\"\n\n\"Not a problem.\"\n\n\"Well, what can I answer for you, or tell you about myself?\" Elery said, breaking the ice toward the interview.\n\n\"There's nothing I need to know. You simply need to read.\"\n\n\"To whom will I be reading?\" Elery asked.\n\n\"Me,\" the man came back.\n\n\"Oh, I thought perhaps a family member.\"\n\n\"I've no family. It is only me now,\" he said, placing his elbow on the arm of the chair and settling his chin onto his knuckles, studying her intensely.\n\n\"Oh, all right,\" Elery responded, adjusting her preconceptions.\n\nAfter a moment of quiet deliberation the man took from his desk an old volume of White Jacket by Herman Melville. He handed her the novel, which she handled with care, believing it to be quite old. When she opened it the lovely smell of old paper wafted up into her nostrils.\n\n\"One thing you need to know, before we go any further,\" the man said as he studied her. \"I would like you to be completely naked when you read to me.\"\n\nElery couldn't hide her surprise. She sat, holding the novel in her hands, digesting what the man, a virtual stranger, had just said.\n\n\"If that offends you, or makes you uncomfortable in any way, I understand. I will gladly pay you your full rate for the day and we will say goodbye.\" He watched her for a moment, waiting for a response.\n\nElery's eyes combed the room. She was uneasy, looking for something to fix on.\n\n\"I've made you uncomfortable,\" the man proffered.\n\nHer initial thought was to politely thank him and bid him farewell then and there. Then make for the front door and escape into the sunlight and be gone from the house that smelled of another era. But his soft voice and sincere and polite disposition put her at ease. He made no move to explain himself, no attempt to excuse his request. He simply sat there studying her with the wisdom of someone who has lived a long time. As she sat there, mulling it over, the idea took a vague hold. \"Well,\" Elery managed, fingers now kneading the strap of her purse, \"that's certainly a first for me... or rather... would be a first for me.\"\n\n\"Have you a boyfriend?\" the man asked.\n\nThe question elicited a flurry of images of the man Elery believed to be the one who had subsequently vanished. \"No,\" she answered, with a delicate and somewhat sentimental dismay.\n\nHer answer seemed to exonerate them both from any concerns of encroachment or disloyalty on an existing relationship with regard to his request.\n\n\"I'm not asking for sex, or any type of copulation,\" the man offered. \"I just would like for you to be nude when you read to me.\"\n\nElery sat quietly, assembling the elements before her. This man, of a certain age that certainly had seen a rich string of life experiences\u2014and no doubt many dalliances with women\u2014still carrying a handsomeness and vitality, yet perhaps no longer capable, or interested, in chasing after the often difficult ritual of finding a mate, was now perhaps content\u2014and obviously quite able in terms of resources\u2014to explore his fetish on his own, unapologetic terms. She thought of her own escape into books that so gratified her wants, sans the troubles of relationships, and surmised she had merely met another bewildered soul who had found similar satisfaction in the uncomplicated and physically un-hurtful realms of the written word.\n\nThe man's provocative request was certainly softened by his cultured demeanor and social status. A man on the street, in vulgar approach with the same request would warrant a slap to the face. But sitting there, eyes locked firmly, knowing that the future of their liaison rest fully with her, his demeanor took on a kind of attractive vulnerability. He had no doubt been here before, proffering this same arrangement to other young women, most likely suffering being scolded and rebuffed, as well, perhaps, enjoying the indulgences and fancies of adventurous young girls willing to partake. She wondered about his history. Was this a new fetish? One perhaps emerging with age and the onset of incapacity that often arises with males against the passing of years.\n\nThe man was experienced enough to sense Elery's tension easing, her shoulders relaxing as her body settled back into the couch. He chose this moment to launch into a very succinct explanation as to how he would like to be read to. For the next five minutes Elery listened as the man explained she was to be naked, her hair up with just the right amount of loose strands framing her face. She was to wear reading glasses. If she didn't need them or have them, he would procure a pair for her. When she informed him that she wore glasses to read he was pleased, and asked to see them. Elery withdrew the glass case from her purse and showed them to him. They were gold, thin wire rims with small oval lens. He nodded approvingly. With each reveal of his concise desires, Elery was getting more comfortable with the idea. As with sex, the more one gets comfortable with a partner, the more acceptable even the most outrageous of suggestions. Given that this was their first meeting and she could not have known, he informed her that on subsequent visits she was to wear tall black heels. He was quite specific about the color and style. Other than the glasses and heels she was to be completely naked, save for the book, held just so. The only other item she would be allowed to wear\u2014which he seemed to accept upon sight of it\u2014was the dainty gold watch with its petite black strap that adorned her left wrist.\n\nAt the end of his instructions the man looked at her, his face in earnest, tacitly asking if she were interested. The man once again assured her that he had no interest in intercourse or any of the wonderful copulations that exist between a man and a woman. He simply wanted to look at her naked body as she read to him.\n\nElery was mulling over the request, her tongue between her teeth in uncertain, but intrigued hesitation. The proposition was free of any conflicts of conscience and Elery, having been without any sort of human interaction with regard to the sensual these past months, warmed to the idea. Fingers absently twisting the thin straps of her purse, she then asked, \"Where is the bathroom?\"\n\n\"Do you need to use the bathroom?\" The man asked.\n\n\"No, I need to get undressed,\" Elery found her mouth speaking for her.\n\nThere was that luxuriant relaxing of tension when consent has been pleasantly arrived at between two people, which introduced an equal barrage of emotions inherent in the anticipation of a new encounter. Though obviously well-versed in this private escapade for him, this would be a new and unique venture for Elery.\n\n\"I want you to undress here, in front of me.\" The words came with such calm confidence that Elery found herself relaxing further into the intrigue. She trusted in the man's self-assured tone. Their age difference presented a long lost feeling from her youth when she had felt so completely safe in the presence or embrace of an older person, long before such actions threatened to undo innocence with any vulgar implications. Merely pure, unfettered trust.\n\nThe two sat, facing each other. Elery stood and set her purse down to free her hands in order to disrobe.\n\n\"Wait, one moment.\"\n\nThe man stiffly rose from the plush leather chair and crossed to the large window that looked out onto the backyard. He partially drew the drapes so that a narrow slash of light split the study. He then disappeared into the other room where the scrape of chair legs against the hardwood floor was heard. He appeared a second later carrying a simple, darkly lacquered antique bentwood parlor chair with a swirling round back. It had a cushion of soft, crushed red velvet for the seat.\n\nHe strategically placed the chair at the center of the room where the light would catch it just so and settled once again into the leather reading chair. He then sat, arms draped over the arms of the chair, like that of an expectant patron settling in for a show.\n\nHis eyes stayed fixed on her. His attention to her every breath, her every movement, however subtle, roused a strange feeling of exhibitionism in Elery to appease his voyeurism. A rush of blood went to her pelvis, the familiar sensation like that which precipitates sex. But he had assured her, there would be no sex. So she felt safe and unpressured.\n\nShe began with her hair, reaching her arms up to draw the thick brown strands together and fix them at the back of her head. Then, to satisfy his request, she carefully drew loose strands on either side of her face and let them hang in a gentle framing. She looked at him. His approving eyes ushered her along in her undressing. Elery rose from the couch and reached around to unzip her dress. She carefully removed it from her shoulders and let it drop to the floor, revealing her firm body and flat stomach, daintily stepping out of the discarded dress. She then unfastened the clasp of her lace bra and let that fall away to reveal her small, but well-formed breasts.\n\nThere was something oddly easy about the actions of undressing before the stranger. Perhaps it was his obvious appreciation for her youthful form. His eyes sumptuously drank her in with an appreciation she'd not experienced with the younger men she'd slept with. Elery found herself profoundly enjoying the older man's admiration for her youthful curves and smooth skin. Her nipples were erect, she thought perhaps the resulting chill of suddenly finding herself naked. But there was no doubt some titillation seeping into her being from this strangely exciting act.\n\nElery then ran her fingers inside the elastic band of her panties and slowly sashayed out of them, sliding them down over her thighs, revealing her neatly tended pubic hair, a tastefully trimmed v-shape of preciously soft black hair. She let the panties fall to the floor and stepped out of them. She bent to retrieve them and lay them across her other clothing.\n\nWhen she was done she stood before him, naked, arms crossed, her breasts alighting upon her forearms. Her face seemed to ask of him, 'what now?'\n\nThe man took a long, slow inventory of her, his eyes beginning at her soft face, traversing her neck, then took in her breasts, admired the flat stomach, lingered on her perfectly trimmed garden of pubic hair, the lips of her vagina just visible. His gaze then slid down over thighs, across the knees, and down her slender and defined calves, coming to rest on her dainty ankles in the modest heels.\n\nElery felt as though he had fully absorbed her nakedness like no other man before. A sensation of trepidation, yet curious eagerness coursed through her. The nervousness she felt was unabashedly ascribed to arousal. She had never felt so joyfully and completely naked before a man\u2014certainly not a man of his years. She wondered how many women the man had had in his life.\n\nWith a graceful sweep of his arm he indicated the bentwood chair positioned strategically to catch the sunlight, diffused through the thin curtain.\n\nElery settled onto the parlor chair with a slight creaking of wood. The dull glare from the window was gracing her with a tasteful modeling of light, falling over her body, the accompanying shadows accentuating the curves of her hips and breasts, the definition of her long legs, the lines of her cheekbones.\n\nThe man then picked up her purse and retrieved her reading glasses, handing them to her. She opened the ears and drew them on. He then picked up the heavy tome of Melville and handed it over to her.\n\n\"One last thing,\" he said, his voice unaffected by any sense of self-consciousness or hesitation. \"Cross your legs.\" Elery did as she was told, lifting her left leg up and hooking it over the other.",
        "\"The other way around,\" he said.\n\nElery obliged the request, unhooking her left leg and settling the heel to the hardwood floor, then lifting the right leg over the other. His placid face held a mystical expression of contentment. For a fleeting moment Elery thought to herself that she had only just laid eyes on this man not but fifteen minutes ago. And now here she was, completely naked before him. She thought to herself that some seven billion people were presently on Earth, and here they were, the two sole participants in this secret little endeavor. She was to be the keeper of his personal desire, entrusted with this private fetish. Elery was now engaged in a mutually titillating and non-physical tryst.\n\nOpening the heavy tome in her lap, the spine of the old novel fit perfectly into the valley where her smooth stomach disappeared between her crossed thighs. Elery carefully turned the opening pages, arriving at the opening chapter, and began to read, her soft voice spilling out over the room and intoxicating the older man. He savored the sound of her voice and the simple beauty of her face, as much as he did the elegant, youthful curves of her slender figure and perfect white skin. The man's admiring of her youthful body was oddly welcome. He didn't see her own perceived flaws; the slightly too wide hips; the disproportionate breasts; her numerous moles. He simply looked at her with awe, reminded perhaps of his own youth and the passing of years, fascinated with her smooth skin, as yet untouched by the harshness of time. Elery felt comfortable in the appreciative embrace of his eyes.\n\nTwo hours later, with the heavy book becoming more balanced against her naked thighs with each turn of page, Elery arrived at the end of a chapter. So engrossed in the story Elery had actually forgotten she was sitting naked before the older man, who had been gazing at her exposed body the entire time.\n\nAs if on cue, the chimes of the grandfather clock reverberated through the empty house. Her eyes met his. He had the vaguest hint of smile, like a young boy engaged in a private mischief. \"Well,\" he said, masculine voice breaking the serene atmosphere she had set them both adrift in, \"that was quite captivating.\" He sat up and handed her an elegantly painted bookmarker, taking in the sight of her to satiate his mind for the coming day without her, and said, \"You can get dressed now.\"\n\nShe placed the bookmarker between the pages and reached out for her panties. Whereas when she undressed the man had focused unnerving intensity on her every move, tracing the way the fingers peeled each item of clothing off to reveal the skin beneath, the man now seemed occupied with other concerns, and Elery dressed relatively unnoticed.\n\nA moment later Elery found herself on the threshold of the old house, the man holding the door for her, ushering her out of the serenity of the study and back into the harshness of the real world.\n\n\"Were you able to find parking?\" the man asked.\n\nElery, stepping from the house onto the porch, stopped and turned to him. \"Oh, I don't have a car, I took the subway.\"\n\nThe brow of his forehead furrowed slightly and he came back, \"Well, I shouldn't like to think of you taking the subway. I'll arrange for a car on Wednesday.\" There was a pause between them, then he asked, with a hint of uncertainty, \"You will be coming Wednesday, won't you?\"\n\nElery relieved him of his concern with an affirming smile and a nod of the head. She then turned and descended the cement steps. As she went she heard the large oak door close, followed by the latch of the dead bolt. It was the period on the end of what had been a surprisingly tranquil and utterly new experience for her. Her shoes clapped the cement as she reached the walk and started for the subway station.\n\nOn the subway ride home Elery forgot to crack open All the Pretty Horses, choosing instead to analyze the past two hours. She didn't necessarily feel ashamed. Quite the opposite. She was rather proud of herself for having stepped outside her comfort zone. It had been, without question, after the initial surprise and question, actually quite exciting. If she had been told beforehand on the phone of the man's intentions, she would have never gone there in the first place.\n\nElery considered how many things in one's life are left undiscovered due erroneously preconceived notions that are too often listened to. Well then, she thought, so I have been hired to undress before a man three times a week, and then read to him completely naked. Elery found herself staring out the train window at the rush of tunnel lights. It was their little secret. She was tickled at the notion that no one on the subway car had any clue they were in the vicinity of a professional concubine. It was Monday. Elery would repeat the routine day after tomorrow, only this time she would entertain his whims by wearing taller heels. And they would be black. As he so liked.\n\nThe next morning, as Elery stood in the doorway of her closet sipping at her coffee, she studied the shoe rack sitting beneath the hanging clothes. She was still mulling the previous day's experience over in her mind, recounting the hours she had spent naked before a virtual stranger. She pushed the clothes aside and studied her cache of high heels. With a seriousness of task, she considered the shape and style of the various shoes, settling on a pair of tall, black, soft suede heels that she felt would satisfy the man's request.\n\nThe day that intervened the next reading went by without much fanfare. Elery visited one client and helped copy edit an essay for another. But throughout the day she was continually sidetracked by thoughts of what had transpired, with a kind of tantalizing anticipation of the appointment looming for the following day.\n\nCome Wednesday, Elery took care of several reading tasks for clients during the first half of the day, but the impending second visit to the man on the edge of the city was what was capturing her fancy. She continually checked the dainty gold watch on her wrist to track the passing hours as she went from errand to errand.\n\nBack at her apartment, as Elery was readying herself for her visit with the man, the doorbell rang. When she answered it an older, tall, thin black man was standing there, dressed in a black suit and black tie set off against a perfectly laundered white button down shirt.\n\n\"Ms. Shore?\"\n\n\"Yes,\" Elery came back, wondering what the man wanted.\n\n\"I'm ready whenever you are.\" When he stepped back and clasped his hands before him, she saw a black Town Car double-parked out front her building.\n\nAs the Lincoln breezed along smoothly and quietly through the streets of the city, Elery ran her hand over the plush leather of the seat. She felt a rush of indulgence at the thought of a private car having been procured to deliver her to read in the nude to the man in the big house. She smiled at the provocative liaison she was en route to; several titillating hours of words, of reading, of wondering.\n\nWhen Elery rang the doorbell of the grand house, she listened as the muffled chimes rang through the vast home. The faint sound of approaching steps on the other side of the ornate door stirred her, raising her heart rate slightly.\n\nThe big door was unlatched and swung open to reveal the man standing there. He was wearing a dark sport coat over an opened white shirt and black slacks. When he saw she was wearing the black heels he smiled approvingly. He stood to the side and made a welcome gesture with a sweep of arm.\n\nAs Elery entered he closed the door behind her. Hearing the latch of the dead bolt shot an enticing aspect of sublime capture through her. She was now in his home, away from the prying eyes of the public, locked away here now with a provocatively clandestine duty to perform. The world outside and the banal aspects of daily life were effectively shepherded away upon entry into the timeless environs of the old house and the simple erotic nature of her presence here.\n\nWhen the man ushered her into the study Elery saw the bentwood chair had already been placed in the center of the room, facing the leather reading chair. With little more than a perfunctory inquiry as to how she was doing, the man settled into his reading chair, placing his elbow on the arm and resting his jaw against his knuckles. His face carried a commanding expression of expectation. It was a pleasantly nasty look that spoke of sex and deviant scheming as to the desires of the flesh.\n\nKnowing her purpose here, Elery wasted little time. She approached the chair and turned around to face him. A mix of anxiousness and eagerness swept through her being. She slowly unzipped her dress and let it fall gracefully to the floor. Demurely stepping out of the pile of material on the floor she let the movement linger to emphasize the soft suede heels. She then unfastened her lace bra and peeled it away from her breasts. In slow, sensual movement she slid her fingers down over her body and ran them inside the elastic of her panties, pushing them down over her thighs and lifting the black-heeled feet out of them. Nude before him, she then pulled her hair up and fastened it, drawing out the appropriate strands on either side of her face. She then took her glass case from her purse, withdrew the wire rim glasses and in calculated movement opened the ears and slid them on.\n\nRetrieving the old volume of Melville's White Jacket she settled into the parlor chair, the bentwood frame creaking as her lithe weight settled onto the crushed velvet pad. She then crossed her right leg over the left in a beautifully choreographed feminine display of obedience. She then fingered the bookmarker set between the pages of the old book and opened it across her naked lap, like a butterfly spreading its wings over the wonderful mysteries of the hidden valley between her legs.\n\nThe room was then gently intoxicated with the mellifluous rhythms of Elery's sweet voice as she continued from where they had left the story of a young man aboard a Man-O-War. In relatively short order Elery slipped from her self-consciousness and was able to concentrate on the beautiful language of the old novel, easing into a shared enjoyment of the story from long ago.\n\nElery was never far from understanding that as she read his eyes were drinking in her nakedness, the voluptuous curves of her hips, the definition of her calves. She never took her eyes from the text as she wondered where his gaze was focused and what perhaps he was thinking. She dared to consider if at some point the scenario would prove too powerful and he would be moved to primal action, taking her right there on the floor of the reading room in a savage explosion of raw, animalistic impulse. That thought came and went as she turned the pages, the grandfather clock chiming out the passing of the time. She quashed her little whimsies, reminding herself that he had assured her he wasn't interested in sex, or even oral copulation\u2014a practice which Elery had been told by more than one boyfriend she possessed a genuine gift for. He had made his intent clear; he simply desired to have her read to him in the nude.\n\nOver the course of reading White Jacket, Elery often stumbled over a word, unfamiliar with the myriad nautical terms which Melville infused his writing, such as afterguard and futtock, binnacle and garboard. At these moments, when her voice lost its sensual confidence and stalled momentarily with pronunciation, he would intervene, repeating the word properly and then describing for her, in his worldly way, what it referred to, often with a thorough description of the working aspect of the old tall ships Melville, and the man, were so enamored of.\n\nIt was during these frequent discourses, delivered with the eloquence of his mature voice, she would fall into a kind of trance listening to him, enjoying his knowledge of such things, which he made wholly interesting to a landlocked woman such as herself. Often, he was so engaging in his descriptions that she would innocently forget for the moment that she was fully naked before him. After his explanation she would take up again reading the prose from the pages of the book. The man especially liked when Elery became so engaged in her reading, enraptured so with Melville's words and the evolving tension of the story, that she became completely unaware of her nakedness before him. It was those precious moments where he could fully enjoy the titillation of his voyeurism.\n\nWhen the grandfather clock chimed, announcing the end of the allotted two hours, Elery took a breath, sliding the bookmarker into the pages and closing the old volume. She then lifted it from her lap, exposing the crevices that the juncture of thighs and pelvis created, and placed it on the table.\n\nAs before, as soon as the time was up and the book closed, the man got up out of his chair and wandered off into the house, leaving Elery to dress alone and unobserved. It was a direct contrast to the intensity of his audience when she undressed. She thought to her herself, as she pulled on her panties and fastened her bra, if perhaps the act of dressing didn't carry the same excitement of undressing. Maybe the notion of dressing was indicative of an encounter having ended, a forlorn farewell, as opposed to the heightened emotions of anticipation associated with the act of undressing. As she drew her dress up around her she studied the empty reading chair. She took off her glasses and placed them back in their case.\n\nElery made her way through the austere house toward the front door. She saw the man standing there, his hand on the brass knob, ready to turn the ornate handle and return her to that staid world beyond, so sadly devoid of secret intimacies. The sweet reverie of being here in the great, naughty secret with him, suspended in the dream, was at an end for now. She would pass through that door and be swallowed up into the unemotional diatribes of daily routine.\n\nAs she passed within a whisper of him, close enough to catch his scent and a momentary return to the dream, his stoic face and disposition was suddenly contradicted in asking, \"Do you have stockings?\" His words stopped her on the threshold of the grand doorway. \"And a garter?\"\n\nElery was reassured by the question, as it revealed his desire to continue with their wonderful secret.\n\n\"What color?\" she asked.\n\n\"Whatever you like.\" He smiled\u2014well, as much as he managed to smile, which was more a slight bend of the mouth at the corner of his lips.\n\nAs Elery descended the cement porch steps the door closed behind her. She heard the dead bolt drawn across. She made for the Town Car where the driver was standing at attention with the rear door open. It was all so adolescently fairytale-ish; the coachman awaiting the princess to alight in the fine coach sent to fetch her by royalty in order for her to fulfill her concubinary purpose. As she settled into the plush leather confines of the Lincoln, Elery looked up at the imposing house, wondering what the man was going to do with the rest of the day, and the day between their next visit. She wondered if he thought about her in those absences as the car pulled away to speed the concubine home.\n\nThat evening, after completing the various chores of life, Elery pulled open the drawer of her dresser where her silk and satin panties and lace bras were kept. She swept the garments to the side to reveal a stash of garters and wadded up stockings that had not had the pleasure of her thighs and waist for some time, those frivolities having laid dormant due the departure of physical romance from her life. She playfully sorted through the various items, pursing her lips with decision, collecting them into matched pairings of stockings, garter and bra. It tickled her that she was doing this for the indulgences asked of her by the admiring man.\n\nLying in bed that night, reading in the soft light from the lamp on the nightstand, Elery was finding it difficult to concentrate. She was feeling a bit amorous. The limitations of physicality in her new duties as a reader in the nude were creating inherently powerful, if somewhat delayed, arousal. To have been twice now bared before the man as she read, his eyes devouring every inch of her nakedness, and her, immaculately vulnerable before him, was inviting a pleasant uneasiness into her being.\n\nFolding away her book and turning out the light, Elery sank into the bedding. Her hands went beneath the covers, fingertips trespassing her warm skin to arrive between her legs. She quickly revisited the sensations roused earlier in the presence of the man, her tongue moistening the edges of her mouth as her fingers pressed apart the lovely lips of her vagina, instantly sticky with wetness, finding their way inside to fondle the fleshy walls of her womanhood. The initial, delicate explorations turned to gentle stroking in small, circular rotations of varying degrees of pressure against her clitoris, the faint teasing of touch progressing into deep plunges, taking her to the tantalizingly elusive brink of satisfaction. When at last it came, in that wonderful abandonment of self-control, when the natural impulses of the body take over and the climb to orgasm becomes inevitable, there was that accompanying unleashing of total primal immersion in unrestricted convulsions. The orgasm broke, resonating through her like an electrical current of rapidly reversing polarity in a wonderfully mad tingling of the senses. The climax passed over her like a diminutive, warm and crystalline wave in the shallow depths of some far off south sea island. As the orgasm passed it left delicious ripples of sensation that coursed her entire body in gradually diminishing tremors. As her body sank into the indentions of the mattress her breathing slowly returned to normal. After the wave of pleasure had passed it gave way to a kind of confusing sadness. Elery grabbed her pillow from under her head and wrapped her arms around it, desperately in want of his arms to be engulfing her. And with this pathetic, stuffed replacement for the living being she wanted, Elery cried herself to sleep, exhausted as much from the shudders of a powerful orgasm as that of emotional longing.\n\nFriday. The third visit now to the house on the edge of the city. The car, her coach, had delivered the concubine once again to the castle. The man had welcomed her in and she had proceeded to the reading room, their little haven segregated from the worrying troubles and the empty, vulgar lusts that permeated the world outside.\n\nToday, as he sat, awaiting the show to begin, she took extra care in removing her blouse, teasing the ritual unbuttoning with slow deliberation, each maneuver of fingers pressing the little white buttons through their respective holes with agonizingly wonderful slowness. After she unfastened and unzipped her skirt, she carefully slid it down over her waist, revealing a black lace garter belt. Continuing the deliciously slow progress she eased the skirt down over her thighs to reveal the thin black straps of the garter and the sheer stockings. She wore no underwear, the garter and straps framing the trimmed forest of pubic hair. His response was subtle; raising his chin slightly in salutation, affirming his pleasure at her careful study and delivery of his want.\n\nAfter properly laying the skirt and shirt and bra across the arm of the couch to keep them from wrinkling, Elery settled into the bentwood throne of her domain. She took the novel from the table and after crossing her legs just so, carefully placed it in the lovely crevice that held her womanliness. With a push of finger to set her glasses back on her nose, she found where she had left off previously and began again the reading. Her sensual voice flowed the words into the admiring man's ears like honey, his eyes wandering the beautifully smooth canvas of her body. Elery enjoyed the sensations that were ebbing up through her at the thought of his eyes on her.",
        "As the session went on, Elery turning the pages with eagerness in the progress of the story, the man enjoying her voice and her youthful presence, she began to wonder about him. Without revealing any wavering of concentration in her reading, she wondered if all this was a replacement for an inability to achieve an erection? After all, he was old. Perhaps he no longer had the ability and sufficed his sensual needs by this simple act of watching her read to him in the wonderful nakedness. She considered, a woman doesn't need penetration to achieve pleasure. It arrives in such a vast array of sensual notions. Perhaps the man had discovered this kinky alternative by chance. And who was to say if maybe he wasn't experiencing a truer, more moving intercourse through the nude reading than that of the more often than naught simplistic and animalistic act of penetration?\n\nAs she continued her loquacious activity, turning the pages with a deliberation to match the cadence of her verbal rhythms, Elery began to wonder about other women who had read for him. She took a zealous pride that her delivery was not to be outdone and fancied herself the best reader he had had, regarding the act of reading with the same value as that of oral copulation. Elery wanted to believe she was the best. A twinge of jealously coursed her for a fleeting moment at the thought that another woman had occupied the bentwood parlor chair. Accompanying this thought was the notion that perhaps he was seeing another reader as well. No, she thought to her herself; I am it, most certainly, I am it. And if there are others, they will have begun their sad paling in comparison to her brilliant delivery.\n\nHer thoughts were intruded upon by the old grandfather clock as it chimed out the end of the session, and the end of the week. They would not share the intimacy of the words and the nakedness until Monday. For the time being she felt cleansed, as if bathed in the purity of his simple desires.\n\nAs she dressed and brought herself back to being fully clothed he drew back the curtains, flooding the room with afternoon light and bringing the room back to a kind of normality, spilling the erasing light in to vanquish the dark environs of their precious secret. He then turned to her and asked, as one might a passing acquaintance, \"Would you like a Brandy?\"\n\nThey sat on the leather couch, laughing and regaling various stories and remembrances of life. An hour passed, with no concern for the running tab of the Town Car, dutifully waiting outside. During the exchange she learned that he had been married, and that his wife had passed away some ten years ago. There was a daughter, about Elery's age, who was a lawyer in Boston. Other than that, she learned little, except that he had amassed his wealth in businesses he said, \"Bore wealth, but little in the way of genuine reward.\"\n\nAs she sipped timidly at her Brandy, the man drew an envelope from the desk and handed it to her. She discretely slid it into her purse. The weight of the envelope didn't cause any suspicions. He seemed surprised that she didn't open it and count it. For the next fifteen minutes, as if quieted by the shared gratification of the reading, they sipped their Brandies without words, only the ticking of the old grandfather clock filling the space. She stole looks at him, admiring the face that was growing more handsome and refined the more she looked at him, the more she listened to him.\n\nAs the Lincoln cruised her home in luxury, Elery drew the envelope from her purse. Only now did she register the slight heft to it. She opened it to see a neat stack of crisp, hundred dollar bills. She fanned through them, realizing there was a great deal more than what she was expecting. She counted them; ten one hundred dollar bills\u2014a thousand dollars. A thousand dollars to sit naked before a man she found quite attractive and read Herman Melville.\n\nWhen Elery arrived home from the Friday session of nude reading she was a little more on edge than previous visits. The routine of being naked before him as he savored her body with eyes only was taking its toll on her will. The satiation found in her fingers was proving to be but a vague and unsatisfying alternative to the reality of the flesh\u2014specifically the flesh of the man.\n\nIn her moment of wrestling with the growing frustration of unattended arousal the phone rang. When she picked it up a male voice said hello. It took her a moment to identify the caller as one of the young men in a book club she frequented and with whom she shared an interest in several authors. As he waffled on with vague and indefinite hints at getting together to exchange some books, Elery, motivated by some deeply seated impulse, blurted out rather boldly, \"Do you want to come over?\"\n\nThe buoyant, affirmative response from the other end of the phone had her realizing that he thought this to be merely an opportunity to talk about books, and that if there were other intentions it was obvious he believed he was going to have to make a slow and patient gambit toward what he believed to be this most docile of women. How wrong that assessment was given her current mood of impetuousness.\n\nElery was way ahead of him. In fact, if the unsuspecting male friend had any hint of what she was summoning him to her place for, he might have been frightened off (often such is the case when women make the first move). After giving him her address and agreeing that he should come straight away, Elery quickly bathed and peppered her body with her favorite perfume and rose water, dappling a bit between her legs in determined anticipation. As she dressed in a silky summer dress she gave passing thought as to how to handle the impending situation. She had no interest in small talk. And for the moment she had no interest in books. All she wanted was to get thoroughly fucked after the three, agonizingly ungratified visits with the man. So wound up on female desire, Elery didn't care if her aggressive stance might find its way back to the book club's other male members with rumor and gossip about loose values and the potential labeling of nymphomaniac. All Elery knew or cared about was getting properly fucked.\n\nWhen Elery's book club friend arrived a short time later, a book cradled under arm, she welcomed him into her apartment and led him directly to the couch where they settled in, Elery strategically landing somewhat close to him.\n\nThe next twenty minutes was a bit of a haze for her, as she wasn't listening to much of what he said, instead trying to decide at exactly what point either he was going to brave a pass, or, if it didn't present itself soon, just how exactly should she go about the seduction herself? So wired up and brimming with lust, Elery finally just leaned into his yabbering mouth and planted a kiss squarely on his lips. The move quieted him with uncanny effectiveness. Frozen with shock he simply stared at her as she withdrew. When Elery realized he was too timid to take her up on the obvious invitation she leaned in again, this time pushing his lips apart with her tongue and pulling him into a deep, salaciously suggestive kiss that had him instantly erect within the confines of his pants and reciprocating in awkward earnest. He jumped a full two inches off the couch when Elery reached down and grabbed his erect penis through his slacks.\n\nIn frantic, somewhat clumsy effort, they managed to get each other partially undressed. Impatient, Elery wanted only for his essential bit of manhood up inside her immediately, removing just the clothing that was covering said parts. She slid his pants and jockey shorts halfway down his thighs and undid only the bottom buttons of his shirt\u2014creating an upside down V that perfectly framed his hard cock. She forewent any explorations into foreplay, as she was sufficiently lubricated from the past hour of fantasy and want. His groin exposed, his member was rigid with young male vibrancy, pointing attentively at the ceiling. He wasn't terribly big or terribly small. He possessed just a pleasantly normal penis that, thanking her lucky stars, was stiff and ready. Grabbing it in her hand it had a much healthier girth than the small fingers she'd been making do with the past week.\n\nElery surprised him further by pulling her short skirt up to her waist, revealing her panty-less and perfectly trimmed pussy. Skirt clumsily gathered up into one hand, she straddled him, using her free hand to take hold of his cock and guide it inside her with an inexplicable urgency. Her body immediately and riotously bounced its way to climax, Elery glorying in the much-needed feel of a cock up inside her after a full week of troubling arousal that went unrequited by the man with the books. Elery closed her eyes as to not be reminded of the evidently inexperienced man-boy she'd chosen to satiate her selfish needs. But, after all, he was a young man, he would be equally grateful for any woman who would allow him to take her. With that in mind she easily and swiftly quashed any guilt so that she could concentrate on the task at hand; bringing herself to climax as quickly as she could so as not to be further frustrated should this guy happen to erupt prematurely in a disastrous result of inexperience.\n\nElery was doing the great majority of the work, rocking her pelvis back and forth to get his dick properly situated inside her for maximum effect. When his breathing became increasingly heightened and he began to let out little guttural sounds, Elery knew he wasn't that far off from spewing his precious fluid and foiling the entire purpose of this potentially character-damning event with the book club. Despite Elery's focused determination on the cock inside her, rubbing the walls of her vagina in a ruse of raucous gyrations, Elery figured her days with that particular book club were over and she would have to find another, given that the man-boy presently inside of her would be forever, lecherously gazing at her from across the little circle of chairs they set up each week in future gatherings in order to engage erudite discussions of D.H. Lawrence, T.S. Elliot and the like.\n\nFor now none of that mattered. His scent, his skin, his generously hard cock were working their wonders inside her\u2014coaxed along by the most willing and compliant partner he could hope for\u2014and Elery felt the first rumbling, just at the edge, not quite assured yet, of a coming orgasm. Her own strains of breathing and animal grunts were conspiring to lead him closer to his own moment of truth. Elery truly hoped he could hang on just a few precious moments longer so that she could achieve this much-needed climax.\n\nThe young man's impetuousness and over-eagerness led to an animal-like pounding of her pussy that, although a happy physical confluence to satiate her much-aroused and under-attended needs, paled to the old man's respectful restraint and air of worldly experience. As the man-boy heaved beneath her, Elery's mind drifted off and she tried to imagine the man in his place. But the vision didn't take, as there was nothing here resembling the gentle attentiveness the man exhibited in his every move, his every gesture.\n\nThen, as her body danced and writhed on top of him, Elery arrived at that beautiful place, that inevitable arrival to orgasm, when all is unstoppable, when one need only to maintain the faintest of physical action to land at that magical place. And so it came, rushing through the secret inner corridors of her femininity\u2014aggravated just appropriately enough by his thrusting penis\u2014a mesh of unity between physical stimulation and emotional surrender. For one fleeting moment, when all nerves and sensations, physical and emotional, become welded together in one glorious explosion. Elery let out a scream that scattered the pigeons loitering on the window ledge as her body convulsed in beautifully delicious, involuntary spasms and the orgasm spread out inside her as if a large feather had been inserted in her vagina and was playfully tickling her insides with a joyful sensation of full-bodied pleasure.\n\nElery was relieved when he finished a moment later in a heaving of exalted breathing and a final few brutally floundering thrusts that left him utterly deflated beneath her. Elery imagined the man of the books coming inside of her, then settling the full of his weight upon her in a glorious post coital embrace, thoroughly exhausted by sex and the luxuriant embrace of love. She longed for his touch. She had settled for a pale replacement, something she now knew would never suffice. And at that moment she realized, she was falling in love with the quiet man with whom she shared a completely immersive engagement of mind and body.\n\nOnly as she collapsed onto the man-boy did Elery feel the immense wetness blotting the couch beneath them. A combination of her copious juices mixed with a healthy ejaculation of semen, which, from the feel, appeared that the man-boy's balls had not been evacuated for some time.\n\nSloshing around for a moment in slight movements of post orgasmic heaven, Elery straightened and, opening her eyes to indulge a kiss, was momentarily surprised to find not the man with the books, but this rather impish young nerd wearing a sort of stupefied and drained expression of idiocy. She decided not to belabor the fact that this was not the man she wished for and instead wallowed for another moment in the wonderful wetness that was drowning his rapidly softening penis.\n\nAs her orgasm subsided, the last little twangs of sensation evaporating, Elery was brought rudely back to reality. The heated moment now consummated, she had the unsavory task of how to get the man-boy out of her apartment. They had just exercised what is supposed to be the most coveted act between two people, and here she was now drawing up plans as to how most efficiently and expediently extricate him first from her vagina, and then her home, with the least amount of hurt as possible.\n\nThe following Wednesday Elery turned the remaining pages of White Jacket, feeling the lovely weight of the book in her naked lap, ultimately arriving at the end. She read, with appropriately sensitive tone, the final passages of the novel; \"Our Lord High Admiral will yet interpose; and though long ages should elapse, and leave our wrongs un-redressed, yet, shipmates and world-mates! let us never forget, that, whoever afflict us, whatever surround, life is a voyage that's homeward-bound! The end.\"\n\nElery then closed the book, running her hand thoughtfully over the old cover, over the gold leaf letters adorning the spine. Her words were still resonating the room, dissipating slowly as the two of them came back to the present, like lovers recovering from the transporting otherworldliness of making love. They each slowly breathed themselves back to the study from Melville's open oceans. The relationship between them, though most certainly steeped in sexuality, had taken on an air of absolute comfort. To Elery, her nakedness before the man had become but a simple and now normal aspect, like that of taking a drink, or proffering a casual gesture, or uttering an oft-used phrase. It was as natural as breathing. Sitting there, the words of the novel resounding through her, she was completely unaware of her nakedness.\n\nIncreasingly, the reading sessions, naked before him, without even the whisper of a touch from him, left her prickly with a heightened sense of arousal. As a result the ride home was often an agony as the Town Car maneuvered traffic, impeding her desire to get home and touch herself. On one occasion she had not waited and reached her fingers down between her legs to feel the moistness of her pussy, hiding her actions with her coat folded neatly in her lap.\n\nThe ensuing weeks brought continued, thrice-weekly readings at the big house on the edge of the city. When they finished savoring White Jacket, they moved onto Joseph Conrad's The Secret Sharer, which was one of the stories in an elegant, over-sized edition of A Conrad Argosy. It was yet another seafaring tale told through striking prose that had originated in a more genteel time of wordsmithing.\n\nThe regular visits brought about a comfortable routine; Elery would arrive via her carriage, climb the stairs and enter the quiet room where the two of them could partake of the sensual secret. With each visit she tried to surprise with new variations on the black heels and especially of what color and style of garter and stockings she would have for him. Elery delighted in his approving murmurs of \"Mmm,\" and, \"well, well, well,\" signaling she had once again roused his passion. As a result she had become a frequent customer to an upscale lingerie store near her home.\n\nDuring the course of her readings, with Elery's voice acting like a soothing metronome of eloquently measured cadence, her fantasies began more and more to introduce a taking of decisive action of a decidedly physical nature. Despite concerns that she might alarm or, worse, possibly humiliate the man, she imagined slipping down out of the parlor chair and crawling naked on all fours across the hardwood floor, over the throw rug, to arrive at his feet in pleasured service to him. To push his legs apart and climb between his knees, unfasten his slacks and find his member among the folds of underwear, and then take him in her mouth. She wondered, if he were impotent, she would still crave the feel of his flaccid penis in her lips. Elery wondered if he would find pleasure in her performing fellatio on him, if in fact that were the case. If it was, she wanted to believe that she could do perhaps what no other woman could do and bring him out of his dormant erectile dysfunction.\n\nHow would he fuck her if he could, she wondered. Would he choose to be on top of her? Perhaps he would prefer her to stride him. Would he take her from behind? She thought, would he like to put his mouth on her. She imagined the man savoring the taste and feel of her youthful vagina the same way he so appreciated the sight of her nubile figure. Myriad thoughts of both a sensual and nasty nature filled her mind. The game now was in maintaining her reading unfettered by the more graphic images her imagination was conjuring. She culminated her fantasies with ideas of what his climax might be like and how his semen would taste, how it would feel pooling inside her.\n\nEach Friday, after the reading, he would invite her to share a Brandy with him and they would casually chit chat in a friendly manner. Then he would hand her an envelope, which she would open in the back of the Town Car on the ride home, fanning through the neat stack of one hundred dollar bills.\n\nOn the third week of their secretive liaisons, as Elery took up position before the parlor chair\u2014which now seemed to own a permanent place in the study\u2014and was about to start unfastening the tiny buttons that ran up the front of her blouse, he stopped her with, \"No.\"\n\nThe word caught her off-guard. She turned to look at him. He handed her the oversized Conrad Argosy, in which Elery had read deeply into The Secret Sharer. He then motioned for her to sit. She obeyed, settling into the bentwood parlor chair, feeling strangely perverse being fully clothed. She wanted again the feel of the crushed velvet seat pad against her naked bottom.\n\nUnsure as to where this disruption in the order of their routine was headed, she watched the man settle back into his familiar leather reading chair and begin to unbutton his shirt. Elery couldn't hide her surprise and watched his each and every move. He slid the shirt off and carefully draped it over the arm of the chair. He then slid his feet out of his leather shoes and methodically peeled off the black dress socks. He stood and unfastened the belt of his trousers, then unzipped the fly and let his pants fall, stepping out of them and carefully laying them across the shirt. He then removed his boxer shorts.",
        "He was now fully naked before her. His body was old but in decent shape for a man of his years. She wondered for a moment what he must have looked like when he was younger. He eased back into the leather chair, then motioned gracefully with his hand for her to begin reading. She used her fingers to trace where the bookmarker had been set, opening the book to where they had left off on the last reading.\n\nForty minutes into her reading of The Secret Sharer, the man interrupted her. \"Excuse me,\" he said softly, tone begging forgiveness for the intrusion. When she lifted her gaze from the type on the page she was surprised to see that he was fully erect. His circumcised member was of surprisingly decent size. He had very little pubic hair, and what there was, was very sparse, due the years having slowly evicted it from his body. \"Will you undress, please?\"\n\nAs if summoned by some mystical siren, Elery set the book down and stripped before him with a little more urgency than usual. She had no idea what the next act would be. When she had completely disrobed, she stood before him (in a new pair of black stilettos, which fulfilled immaculately the definition of 'fuck me pumps').\n\n\"Turn around and get to your knees on the floor, and open the book on the chair.\"\n\nElery didn't hesitate, collecting up the old volume and turning around to crouch on the floor, her heels pointing directly at him. She then rested her elbows on the velvet pad of the chair and opened the book before her, her ass fully on view to him. There was a delightful vulnerability of having her backside to him, where he could fully devour with his eyes the hourglass shape of her body; from the dimpled small of her back to her round ass, which led like a beacon to the exposed lusciousness of her pussy. A new sensation of arousal swept through her as she began to read. She hoped she would next feel his presence close behind her, followed by the feel of his cock entering her. The visuals she attached to that wish aroused her and a visible, glistening wetness came to the lips of her vagina.\n\nAs she read aloud, Elery became aware of an ever so slight stir of movement disturbing the stillness of the room. It quickly became apparent that he was playing with himself. The thought of him masturbating while gazing at the curves of her ass, the pointed sharp black heels directing his gaze into the wonderful and beckoning mystery between her legs, was almost too much for her. She was desperate to turn around and suck him. Despite her mind being wild with vivid thoughts of him gushing into her mouth, onto her breasts, and into her ass, Elery remained composed enough to not act on impulse and continued her reading, afraid if she were to suddenly abandon their agreed upon arrangement, it might well disrupt some sacred bond of trust they held between them and she would have ruined it all.\n\nAs she read she enjoyed the increasing tempo of his movements, understanding he was bringing himself to climax. To lure him deeper into his ecstasy Elery gradually spread her legs, as if she were receiving him from behind, and arched her back, the bend accentuating the curve of her ass. She was now fully exposed to him, aiding his arousal with the visual allure of her wet sex.\n\nDuring this, Elery regaled in the new knowledge that the man was in fact capable of an erection. She reveled in the notion that there was hope\u2014if she could be certain of how to proceed\u2014that the two of them may well find themselves in a beautiful canopied bed with satin sheets, or, perhaps, right here on the hardwood floor, making love with a passion so strong it would supplant the pain of the hard surface and make light of their bruises and scratches until after the wave of their orgasms had passed and they would laugh at their youthful, reckless impulsiveness.\n\nAfter a few minutes of this aural torture; Elery listening to the frantic movement in the leather chair behind her, the man let go with the unmistakable moan of coming. She imagined what the texture of his semen was like as it streamed down the shaft of his penis and bathed his fingers. She could almost feel the hotness of it, the consistency. In that rapidly waning moment, Elery felt that given a little more time, she might have been able to climax without any physical stimulation whatsoever, merely the engrossing mental sensations of imagining his pleasured state.\n\nElery remained posed, bent against the parlor chair with legs spread, her nakedness on full display. She listened carefully over her own heightened breathing at his movement. When she braved a turn to look at him she caught his backside as he exited the study, clothes bunched up in his arms.\n\nShe sat there a moment longer, hoping against hope that he would return and save her from getting dressed. She wished for him to come back and gently fondle her breasts. To reach his semen soaked fingers up inside the folds of her, to use his ejaculation to lubricate her anus and accept his fingers. She wanted the wonderful contrasts of gentle kisses along the nape of her neck with the animalistic pull of her hair, whipping her head back in a firm bridle hold of absolute control over her. Her body screamed for these myriad touches but Elery slowly came back to Earth in harsh realization that their time today was over.\n\nStiff from being on her knees against the hardwood floor, Elery slowly rose, shaking out her sculpted legs. She closed the heavy tome of A Conrad Argosy. She then got dressed with an air of somberness, taking the opportunity to feel her wetness with her fingers. The room had lost its magical air of tempered arousal. It was now merely a well-appointed study occupied solely by her. The room, and she, begged his presence.\n\nThere was an added feeling of isolation between them as he held the front door for her. As Elery descended the cement steps toward the waiting black Town Car she cringed at the sound of the heavy oak door closing behind her, followed by the cruel sound of the dead bolt drawing across, locking him and the great house and the playful reading away from her. When she reached the car the driver was standing dutifully at the opened back door, welcoming her into the plush leather confines of the Lincoln. As Elery settled into the seat the driver shut the door and slid behind the steering wheel. As the car pulled away Elery looked up at the imposing house, wondering about the man, and the day that stood between their next visit. Elery hoped she'd not done anything inappropriate and that there would, in fact be, another visit. She wondered if the man thought about her in their sweetly brutal absences as the car sped her home across town.\n\nThat night Elery lie awake in bed, tracing occasional shadows cast by passing cars that ambled across the wall, bending the patterns of the window frame, accompanied by the lonely peel of tires that faded off into the barren streets. Their last encounter had confused her. She wondered why he had disappeared after climaxing and retreated to some other place in the large house to compose himself, reappearing fully dressed and completely devoid of the lingering sensuousness of climaxing. Eventually, though she could not recall when, sleep finally overtook her confusion and she slipped off into dreams that would be squandered to the dawn.\n\nOn Friday, the third day of their weekly routine, the reading had progressed well past the allotted two hours. They were now enjoying Jack London's South Sea Tales, from which Elery was partway into The Whale Tooth. So deeply engrossed in the prose the time had gotten away from them both, so much so they each had been unaware of the chiming of the grandfather clock in the other room. They both were suddenly pulled from their sweet reveries at the same time, for no apparent reason, like lovers who have fallen asleep after love who then stir simultaneously.\n\nToday had seen a return to the familiar routine of her undressing before him, revealing yet another new garter, of dainty lavender and frivolously adorned straps that held sheer stockings. The lingerie was augmented by a pair of steep black heels with straps that ascended her calves in shades of bondage.\n\nAfter getting dressed, Elery met the man in the foyer. He pulled back the drapes of the front window that looked onto the street to reveal the Town Car patiently and dutifully parked at the curb, the driver discretely waiting for the princess concubine to appear and slide into the back seat of her carriage.\n\nCrossing the threshold of the old house Elery was tempted to break from protocol and address him directly, to suggest going out somewhere, for a drink, or dinner, or perhaps just a walk. She felt her body about to stop, her mouth about to address him, but found herself still in motion, unimpeded, and then crossing the porch with things unsaid.\n\nShe cringed at the horrible sound of the heavy door closing behind her, followed by the un-retractable sound of the dead bolt sliding into its hole to lock out her temptation. She thought to herself; there would be more opportunities in the days and weeks ahead to suggest such things as men and women who care about one another do together. Yes, definitely, she thought to herself, she would gather her confidence and suggest a date. Perhaps an outing together to the lingerie store, where she would try on various articles of sexy underwear for him to lust after. For a fleeting moment she imagined him reserving the entire shop for just the two of them to hold a private fashion show of tantalizing lingerie.\n\nAs the Lincoln combed the back streets headed toward the little apartment across town the sun was lower than usual, due the fact that the reading had gone well past the allotted time, the two of them pleasantly consumed in the moment. The sun had dipped below the rooflines of the passing brownstones, the gaps between the buildings creating a picket fence effect that cast the interior of the car in a flickering of shadows, like spokes of a spinning wheel. Elery didn't bother to open the envelope in her hands. She could feel that it held the thousand dollars. Her mind was still ruminating on the afternoon. There had been a deeper sense of closeness between them, an intimacy that had affected them both, as evidenced by their losing track of time. What stirred her most was the look on his face when she raised her eyes from the pages of the book and saw in his eyes the unmistakable look of love. For all the charged energy of their previous experiences, the various detours into kinky sexuality and savoring of private fetishes, he wore the expression of deep longing, as if he simply wanted to kiss her, to hold her. Elery thought to herself, as her fingers handled the envelope, that she would gladly trade the contents for just one kiss from him.\n\nThe weekend passed slowly. Despite sunny weather, warm temperatures and clear skies, Elery spent the majority of it indoors. She napped a little more than usual, absently thumbed the pages of a new book she was reading, and went for several walks, dreamily recounting the previous weeks, remembering with clarity the various ventures into exhibitionism to appease his voyeuristic whims.\n\nOn Sunday, the eve of their next visit, Elery decided she would take action. She could easily and happily continue with the erotic trysts, pleasing him in all his most lavish fetishes, explore as many variations of arousal as he so wished, but what she couldn't bear was to be without the simple intimacy of touch that came with love. He'd unwittingly worn her down by sheer attrition. By allowing her to come to this on her own, without the all too familiar pushiness of men, he had defeated her normally protected disposition and iron will. She was in the throes of a deeply profound longing for his attentions, to consummate with words and actions an affirmation of mutually shared caring. She wanted nothing more now than to finally feel his hands on her, on her breasts, her ass, between her legs. She wanted his scent to be entwined in hers and to feel those strong hands of his over her entire body. And that face. She wanted to crush him in kisses. To smother the breath out of each of them, close to suffocating, and then recover to smother again, to be engulfed in everything that had been kept from her these past weeks. Sitting naked and vulnerable before him she had flawlessly performed the ritual, entertaining his whim. Now, though it meant a betrayal of their agreement, she was going to touch him, and have him touch her.\n\nMid-day Monday, as she dressed, Elery took special attention with the application of her perfume, walking her naked body into the spray of clouded mist, letting it fall over her. In dressing she took a certain joy in rolling her stockings up over her taut calves and up around her thighs, then clasping the snaps of the garter. In the mirror was the reflection of her neatly trimmed pubic hair framed by the straps of the garter. She savored with determined mind the private little joys of these simple tasks, as they were all a foretaste to the grand encounter she was orchestrating in her imagination.\n\nDescending the steps of her apartment building to the Town Car idling at the curb, the sheer stockings and lacy garter were her little secret beneath her clothes; each move of leg and swing of hip sent stirring sensations from the pleasant rub of the garter up her spine. She hadn't bothered with panties, wanting to be naked beneath her skirt when she pressed up against him.\n\nThe familiar routine of the climb up the cement steps to the porch of the grand house was followed by the ringing of the doorbell. Elery was brimming with nervous anticipation for his imminent arrival at the door and his gesturing arm that would welcome her once again into their secret netherworld where ordinary, banal life and its dull imitations of love could not touch them. As the chimes rang through the massive house it introduced the familiar sound of his footsteps against the hardwood floor.\n\nWhen the door was unbolted and swung open, standing there was not the man, but a stranger. He looked at her quizzically. \"Yes,\" he asked, \"may I help you?\"\n\nAn uneasy feeling coursed through her. The upset in the balance of their practiced routine confused her. Her mind quickly surmised that this disruption in routine carried an ominous foreboding.\n\n\"I'm...\" her words ended there, replaced by a new and pressing thought. \"Where is Mr....\" again the words were stifled. Elery had to search her mind for the man's name, as she had only uttered it once, upon their first meeting. Before she could sort her thoughts and place them into words, the stranger spoke.\n\n\"I'm sorry, but the man of the house has passed on.\"\n\n\"Passed on?\" Elery heard herself saying, as if the words were coming from someone else... \"but...?\"\n\n\"A heart stoppage,\" the stranger came back, with vague hint at compassion.\n\n\"When?\" Elery asked, dumbfounded, the excitement of her planned seduction of the man cruelly replaced by a somberness that descended on her like a thick fog.\n\n\"This past Saturday evening,\" the stranger spoke, standing in guard of the threshold, which had suddenly grown cold and unwelcoming. \"Pardon me for asking, but what was your relation?\"\n\nElery was still digesting the windfall of information. It took her a moment to compose her thoughts. \"I worked, I... read for him,\" her voice labored.\n\n\"Are you Elery?\" the stranger asked with a kind of recognition.\n\n\"Yes,\" she answered, voice cracking and unsure, as if her name was just some hollow thing, like a borrowed coat, or one of the unused coffee cups in the back of a cupboard.\n\n\"He left something for you.\" On that the stranger disappeared into the house she knew so well but was now apparently barred from, given that no invitation had been granted, her duties here now terminated. In her mind she saw the stranger entering the study to retrieve whatever it was the man had left for her. The stranger would be unaware, as he crossed the room, of the lovely hours she had spent naked before the man. To him it was merely a room with cherry wood shelves filled with books.\n\nWhen the stranger returned he was carrying three books in his hands. They were warmly familiar, the three novels she'd read to him; Herman Melville's White Jacket, A Conrad Argosy, which held The Secret Sharer, and South Sea Tales by Jack London, from which they were partway through The Whale Tooth.\n\nShe took the books from him, their weight requiring both of her hands.\n\nAnd on that the stranger said, as politely as he could, \"I'm terribly sorry for your loss.\"\n\nElery didn't bother to inquire any further, about the man, or to ask what relation the stranger was to him and the house. A lawyer perhaps? An accountant? It didn't seem to matter. All she knew was that the man was gone.\n\nThe driver of the Town Car had watched the interaction on the porch and knew something had happened. When she turned and began retreat to the car he got out and waited for her.\n\nAs she went down the cement steps for the last time, the books held close against her chest, Elery's mind was flooded with images of her time in the study. Just a few days previous they had enjoyed such a perfect afternoon, losing track of the time like children playing, unaware of the goings on in the world outside the safe sanctuary of the old house.\n\nAs the Town Car somberly maneuvered the streets, absorbing the potholes and uneven pavement, Elery gazed out at the city with its pedestrians in perpetual, hurried movement. The three books were cradled in her lap and she absentmindedly stroked them with her fingertips. They weighted her lap with a comforting reassurance, like that of the man resting his satiated body across hers.\n\nIt then dawned on her, the unusually intimate moments she had shared with this man, had been deeper and truer than that of the lovers that had come and gone from her bed, their declarations of devotion and forever-lasting love having all proved empty and erroneous. She then realized that in all their times together, posed naked before him, they had only touched but once, when they first met and exchanged that cursory handshake.\n\n\"Pardon me,\" Elery softly spoke. The driver craned his head slightly, his eyes observing her in the mirror. \"We won't be needing the car service any longer.\"\n\nOn hearing herself say those words, Elery began to cry.\n\nThe Town Car slipped through the streets, past all the people unaware of the great love that had unfolded in their midst, unaware of such lovely and simple moments that were capable between a man and a woman.\n\nThe End\n\n<br >\n\nABOUT THE AUTHOR\n\nEndura Glass was born in Pittsburg, PA. to immigrant Indian parents. Having earned teaching and writing degrees she taught 4<sup>th</sup> grade for more than a decade in two different New England counties. Endura abruptly left America and moved to Amsterdam where she worked as a nude model for sculptors and photographers. Another dramatic leap of faith saw her enter the sex trade industry as a high-end escort with a respected reputation for discretion that introduced her to politicians and the world's elite. Her experiences in the field of human pleasure led her back to her first love of writing. The Reader is one of her most published works in Holland. She lives in Amsterdam, writing erotica inspired from true experience, and still maintains a very exclusive list of clients."
    ],
    "authorname": "Cervantes1958",
    "tags": [
        "nude reading",
        "voyeurism",
        "erotic novelette"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-reader"
}