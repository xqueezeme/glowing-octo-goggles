{
    "title": "The Neighbors",
    "pages": [
        "I moved into a new house last summer and things got interesting. I'm a single guy, an old-school geek I guess you could say, one whose whole life has been angling that way. I got into comic books as a kid (I especially liked the big breasted female characters even though I was too young to know why), I was in A/V club in high school, I have a college degree in Television Production, and now I have a good job as a Camera Operator/Producer for one of the local news channels here in my mid-sized city. I make enough money to be comfortable thanks to the low cost of living around here. I guess I can thank the harsh winters for that. Those of us who live here also thank the harsh winters for making the summertime extra special, a vivid green explosion of outdoor life that we all try to take advantage of as best we can. We all do it in different ways \u2014 convertible cars, motorcycles, bicycles, outdoor festivals, beaches, swimming pools. Whatever your outdoor pleasure, it's probably being done around here. My new neighbors are swimming pool aficionados. They have a nice one, in ground, with a fancy concrete paver patio all around it that gets used almost every day.\n\nWorking in TV news usually means lots of hours, and the schedule can be crazy. I've been on the morning shift for a while now, 4 AM until just after the noon newscast. It was a real grind at first, but once my body adjusted I started to like it. I head home soon after 12:30 PM and I've got my afternoons free. In the summertime that's especially nice.\n\nThe new house that I mentioned is definitely an upgrade from my last one. It's not too big and not too old; just right for a single guy like me. It's in a nice old-fashioned neighborhood, one where the streets are laid out in a rectangular grid. The houses are back to back in each block. Mature trees in most of the backyards give us all some privacy, but I can see my out-back neighbor's yard and house pretty clearly. My upstairs back window has a nice view of the pool I mentioned \u2014 it's a kidney shaped one that's lit up in the evenings with lights down under the water, giving it a soft glow. With the exception of my own view of it, their back yard is actually fairly private \u2014 tall fences and strategically placed Arborvitae trees block the view from their side neighbors, and I think maybe even the houses next to me can't see it very well, due to some big, mature maple trees. But my back bedroom window looks right through a gap in those nice old trees, and my backyard is fairly open to it as well, and that shimmering pool always seems to draw my eye.\n\nWhen I bought my house two guys from work helped me move in. It was a Sunday, a nice warm early summer day, and Nico was the first one to notice the neighbors.\n\n\"Hey, you got some old spunkers, man,\" he said. \"Check it out.\"\n\nI set down the bed frame I'd just carried into the room and I walked over to the bedroom window where he was standing. I asked him, \"What the fuck's an old spunker?\" \n\n\"Just older folks that still got the mojo, man,\" he said. \"Ain't you ever seen that porn site? Old Spunkers?\"\n\n\"Unlike you,\" I said, \"I don't sit around watching porn all fucking day.\"\n\nIt was a lie. I watch a lot of porn, and I knew just what he meant about old spunkers when I looked over his shoulder at my new neighbors, seeing them for the first time, the two of them lounging in their bathing suits by their pool. They didn't strike me as all that old, though. They're a married couple, empty nesters named Robert and Lori. He's 59 and she's 51, but they could both pass for younger. I learned all about them over the next few weeks and months. Robert is an architect, has his own firm that does mid-sized commercial work. He rakes in plenty of money from what I can tell, and Lori doesn't work. She was a stay-at-home mom, but both of their kids are in their mid-twenties now, and both of them moved out of state. Now that the kids are gone Lori sticks with the stay-at-home lifestyle. I sort of figured that out the next day after I moved in. I got home from work at about one in the afternoon and there she was, wearing a bikini again, sprawled on a lounge chair by her pool, reading a book. Nico and I had already seen the bikini, a red one that looked thick and structured. It wasn't exactly sexy in a swimsuit model kind of way, but the mysterious older-than-me neighbor woman looked more than a little okay in it.\n\nI realized, that week, that she's a serious sun worshiper, and I also realized that geeks like me like to look at bikini-clad women, no matter how old they are. I already knew that, of course, but you get the drift. Part of my fascination was due to the fact that I'd met her, that very first Monday, in the late afternoon, when I was moving some furniture around and unpacking boxes. She knocked on my side door, introduced herself, welcomed me to the neighborhood, and gave me a plate of cookies. That's when I learned her name is Lori, and it's when I first saw the alluring, almost sparkling shyness in her eyes, hiding behind her outward friendliness. She wasn't wearing the red bikini, in case you were wondering. An untucked button-up shirt, capri pants and sandals adorned her, and a subtle perfume scented her.\n\nIt was that first Friday when I got the invitation. Lori saw me outside, and she waved at me. She put a long, flowing, gauze-thin cover-up on over her blue and white floral bikini, and she walked toward me, all the way to the back edge of her yard.\n\n\"Robert would love to meet you,\" she said loudly, drawing me nearer to her. \"Are you a drinker? Would you like to come for cocktails at seven? We have some nice flavored seltzer if you'd rather.\"\n\n\"Oh. Sure. Yeah, I drink,\" I said, none to suavely.\n\nAnd drink I did. Robert and Lori can really put it away. They have a bar just inside the French doors that lead to the pool patio, and holy cow is it well stocked, with at least two bottles of just about everything imaginable. The funny thing is, they never get drunk. They get happy and loose, but they really know how to drink. Old school.\n\nMe, on the other hand, I'm just a thirty-six-year-old kid in a lot of ways, and holding my liquor has never been one of my strengths. After two hours of happy laughter with my nice new neighbors I found myself moving swiftly between the shrubs that separate our yards, wearing the bathing suit that I'd just gone home to put on, with my much too white, much too soft belly on display. And then the three of us were in the water, and the sky darkened to black and the pool glowed from within, and the hangover the next morning felt like my skull was bleeding.\n\nWe did it again a week later. It became an 'every Friday' thing, and bathing suits seemed to be the mandatory uniform. It was really enjoyable. I have the social life of a geek, so basically all my Fridays are free, and Robert and Lori are homebodies, too. The three of us hit it off like old friends, and the conversation was effortless.\n\nThe only thing I felt bad about was my new pattern of voyeurism. Lori was out on her favorite lounge chair virtually every afternoon that it wasn't raining, and I was often home after work. Of course I had to change out of my work clothes when I got there, and I already told you about the bird's eye view of their pool from my bedroom window. I mean, why wouldn't I take a quick look, or even a longer one, at my friend. It felt nicely reassuring to see her there, and it was always interesting to see what bikini she was wearing and what position she was in -- on her front or on her back, legs up or legs down. I was, you know, just making sure she was getting an even suntan, I guess you could say. That's one way to look at it, right?\n\nOkay, yeah, I get it. It's not rocket science. I was fascinated by Lori's large-breasted fifty-one-year-old body. It's far from perfect, but it didn't seem to matter for some reason. She carries a little extra weight and she's a bit soft and out of shape, and a little bulgy where she probably doesn't want to be, but somehow it all looks womanly and nice. She complains about cellulite that I don't even see, and she frets about not dieting properly. She claims she's swimming more than she's done in the past, for exercise, but I mostly see her reading books while she soaks up the sun, sipping on sugary pink lemonade. That sweet lemonade is good in the evening with two shots of dark rum in it, by the way. I guess what I'm saying is, none of her 'flaws' mattered to me. Not in the least.\n\nI did my best to keep the voyeurism under control, and I'm pretty sure Lori never caught me at it. But she was lying there in full view of my windows, so maybe there was something going on in her head. Looking back on it now, I'm pretty sure she was well aware.\n\nSo I mentioned that things got interesting, and after a few Friday evenings, things did.\n\n\"Interesting! \" Lori said. \"Real serious porn, you mean?\"\n\n\"Yeah, the real thing,\" I said. \"I mean, once it crosses a certain threshold, porn is porn, right?\"\n\n\"Excellent,\" Robert said, nodding his approval. \"That's what I'm talkin' about. If you're going to make a bucket list, yeah, man, that's the stuff.\"\n\n\"So let me get this straight,\" Lori said. \"You just want to film it. You don't want to be in it.\"\n\n\"Yeah. I mean, it's what I do,\" I said. \"Probably every guy who's a videographer thinks about it now and then. So what about you guys? What's your wackiest bucket list item?\"\n\n\"Ha!\" Lori said. \"I've never even told Robert this. I want to kiss a handsome well-dressed Frenchman, a stranger, inside a smoky cafe in Paris. I'm talking a real tongues and moans kind of kiss.\"\n\n\"Nice!\" I said. \"That's doable! Unlike my wacko idea.\"\n\n\"Very doable,\" Robert said to her. \"I get to watch, right?\"\n\nLori furrowed her brow in surprise. \"Would you...want to?\"\n\n\"I'm going to add 'watching you do that' to my bucket list,\" he said. \"We were thinking about a trip to Paris in the spring, right?\"\n\n\"Whoa,\" she said, looking happily surprised. \"If I'd known it was this easy I'd have written out my list years ago.\"\n\n\"So Robert, what's at the wacky end of your list?\" I asked.\n\nHis happy-looking eyes flashed a twinkle and he said, \"Nicole Kidman. I'll say no more.\"\n\n\"Oooohh!\" Lori howled. \"For real? Well at least you've got good taste! Do I get that hot husband of hers? What's his name...Keith Urban, right? Yes, please. I'm amending my list.\" She smiled and turned her attention toward me. \"How about you?\" she asked, looking me square in the eyes. \"Who's your celebrity fantasy?\"\n\n\"Oh, wow, should I admit it?\" I said. \"You'll probably laugh. Jane Fonda.\"\n\nLori's mouth dropped open and her eyes smiled. \"Christ! She's older than me!\" she said. \"How old are you, anyway?\"\n\n\"Thirty-six.\"\n\n\"I hate to tell you this, but she's, like, way in her seventies,\" Lori said. Her eyes were twinkling the way Rob's had been.\n\n\"I'm aware,\" I said. \"She's still hot though, right? I think so. I've known about her forever; my mom used to exercise using her routine. It was on an old VCR tape. I used to watch it, when I was a kid.\"\n\n\"Oh my God, yes,\" Lori giggled. \"With the leg warmers? Oh my God.\"\n\n\"It's not that funny, is it?\" I said. \"I mean, hot woman, adolescent boy...\"\n\n\"No, it's not,\" Lori said. \"I shouldn't laugh. And she's definitely still a hottie. But the age difference, that doesn't bother you? I thought you young guys would be grossed out by us old gals.\"\n\n\"No, are you kidding?\" I said. I'm sure there was too much flirt showing in my eyes. I'll blame it on the good bourbon. I'm pretty sure Lori blushed, although with her sun-tanned face and the dim light of their pool patio it was hard to tell.\n\n\"Wow,\" she said, shaking her head in wonder. \"Bucket lists, huh?\"\n\n\u2014\n\nAn unexpected bombshell dropped, right in my lap, just a week later. It was a Friday evening like the others, the three of us sitting at the round table on the pool patio, sipping our drinks, laughing at this and that as the sky darkened beyond twilight. The underwater lights were on and the pool was glowing the way it does. The neighborhood was quiet. After a pause in the conversation, Robert's voice, softly resonant, broke the peaceful silence. I noticed Lori stiffen, looking nervous as he began...\n\n\"Lori and I have been talking,\" he said. \"We were wondering if you'd like to check off one of your bucket list items.\"\n\n\"Huh?\" I said.\n\n\"Filming a porn movie,\" he said. \"We'll be your actors.\"\n\nThe backyard went silent again. Lori's drink was on the table, her fingers fidgeting in the sweating wetness on the outside of her glass. She watched them, her fingers, when she spoke...\n\n\"We won't be good or anything, but...we thought...it'd be fun and...with your bucket list and everything...\"\n\n\"Wow,\" was all I could say.\n\n\"It's probably not what you had in mind,\" Robert said. \"We don't look like porn stars, but I'll tell you, Lori's really beautiful when she's...well...you know.\"\n\nSilence again, and in the deepness of it I heard the breath go out of Lori. Her eyes glanced up and met mine, just for an instant, and then they were back on her fingers. My body felt immovable, like stone. I said, \"I don't know what to say, you guys. This may be the most generous thing anybody's ever offered me.\"\n\n\"It's not just for you,\" Robert said. \"We think it's exciting, too. We're pretty normal people, and haven't really even thought of doing something like this, but, now that we have, we, uh...have you ever had one of those ideas that won't go away? We're sort of stuck on it, in a good way. Of course we'd have to talk about privacy. The end product won't be yours, it'll be ours. I may even have my lawyer write up some sort of a contract. But it's the experience that counts, right? You'll be in charge, making your movie.\"\n\n\"We've never done any acting,\" Lori said, her eyes nervously looking at me and not looking at me. \"We're good listeners, though, and like Rob said, it's exciting to think about, so maybe we'd be okay.\"\n\nBefore I could answer, probably with something awkward, Robert said, \"We know this is kind of an odd thing to do, being neighbors and all, but for some reason we think it's a good idea. You're a good guy and we trust you. It surprises us a little, because we don't know you all that well, but the more we think about it the more it seems like this is...almost fate, you know? Like this was meant to happen. You moving here, and something to spice up our kind of boring lives. Living here alone, without the kids, it's...I don't know, boring's the wrong word, but we could definitely use a jolt of excitement, and the bedroom seems like a good place to get it.\"\n\n\"Is that where it would be?\" Lori asked me, her eyes big and curious, gazing into mine. \"The bedroom?\"\n\n\"Oh,\" I said, trying to calm my scattered thoughts. \"Yeah, probably. And maybe, uh....it'd be great to use the pool, too. The light's really great out here at night.\"\n\nLori looked surprised. \"Outdoors?\"\n\n\"Oh, yeah, I can see it,\" Robert said. \"He's got a vision, hun. We gotta go with it.\"\n\n\"I'm not gonna make a porn out were my neighbors can see me!\" Lori said. \"Won't there be lights and...stuff to attract attention?\"\n\n\"Not out here,\" I said, speaking thoughts as they came to me. \"I'd want it to be just that glowy underwater light. One of you could pretend to be a neighbor that sneaks into the yard, for a late night fling. Maybe you're both married to other people.\"\n\nRobert looked like the idea was a good one. \"My wife's away and I'm out for a late night swim, and my sexy next door neighbor shows up out of nowhere.\"\n\n\"Hey!\" Lori said. \"Do you think about that kind of thing?\"\n\n\"No!\" Robert said. \"We're just throwing out ideas.\"\n\n\"Have you met Lisa next door yet?\" Lori asked me, gesturing at the house behind the fence and the arborvitaes. \"She just had some work done. She went from a C cup to a double D.\"\n\n\"Did she tell you that?\" Robert asked, looking interested.\n\nLori shook her head at her suddenly fascinated husband. \"Just a pretty good guess,\" she said. \"What were you guessing? Triple D?\" Lori smiled a knowing smile at Robert. He shrugged his shoulders. His smirk gave away the accuracy of her guess.\n\nMy mind was spinning with movie related ideas, so I threw some more out there. \"If it's a secret affair like that, then it might be silent, with no dialogue, at least for the outside scenes here by the pool. With no extra lights and small cameras we could shoot it really late at night, at like 3 AM. If we're quiet we could probably get away with it, right?\"\n\n\"So we're doing this?\" Robert said. \"We're making a porn movie?\"\n\n\"If you guys really want to,\" I said.\n\nLori looked nervous again, but she nodded her head. I could tell she was excited, and conflicted. That was pretty much how I felt, too.\n\n\u2014\n\nI've made a few documentaries over the years \u2014 college assignments and personal projects \u2014 so my new basement is full of boxed-up equipment. Microphones and lights, umbrella reflectors and flat reflectors, tripods, stands and cables \u2014 it's all dusty and some of it is cheaply made, but it's all workable. Video cameras these days are the same ones you buy to take still pictures; the nicer ones shoot very high quality editable video. I have four of them and a nice array of lenses. Of course, being a proper geek, I have a monstrously big gaming computer with two huge monitors, and a suite of editing software for video work. And yes, if you're wondering, I have an external hard drive that's full of porn. Doesn't everybody?\n\nThe work week started and I wondered if I should be in contact with Robert and Lori, or if we'd just talk about things at our usual Friday get-together. I found myself wondering if they were porn watchers, and if they had an interesting sex life, and if Robert had a cock that was something we could work with. I'd never spent much time thinking about men's cocks, but I was starting to worry myself with thoughts of a tiny little limp noodle between his legs, one that didn't want to come out to play in front of the cameras. It's a funny thing, being on camera. People get all kinds of shy. I've seen it happen over and over again at work, but then there's other folks who just seem to light up. I had a feeling Lori was going to be shy, but my overriding thought about her involvement in such a crazy project was one of surprise. I couldn't quite believe she was going for it, and I braced myself for the inevitable shutting down of the enterprise.\n\nMaking porn was certainly fun to think about, though, and on Monday, after work, as I changed out of my work clothes in my bedroom, certain aspects of it got stuck in my mind. My curtains were open and Lori was down by the pool. I kept my distance from the window so she wouldn't see me. She wore a big floppy-brimmed hat that day, sunglasses that flashed the sun at me like a signaling mirror, and a black and tan print bikini. It was the style of bikini she always wore, thickly padded and underwired on top, the bottom piece sort of the opposite of skimpy, squeezing her hips in a way that made visible soft bulges above and below. She looked relaxed and comfortable as she read her book. I won't claim it's the first time I'd thought of it, but as I stood there in my boxer shorts I envisioned her taking the bikini off. As she did it, in my minds eye, she smiled at me the way she does. And then the new part of the fantasy was there, as clear as day: Robert was naked too, and she played with his cock and she started to give him a nice blowjob.\n\nThe vision held as I watched her, reading her book, a hundred feet away. I pushed my boxer shorts down my legs and they fell to my ankles, and my hand went to my hard cock. I could hear my breath in my quiet bedroom; my mind was alive with fantasy. I was there, just feet away from Rob and Lori, with my camera by my side. I watched the blowjob with the eyes of a film director, feeling confident, but Lori noticed the lump in my pants. She reached for me, and then I was in her mouth, my cock bigger than Robert's. She held his in her hand and she sucked mine like a pro, the way the go-to girl on my hard drive would do it. I stood there alone in my bedroom and I stroked my aching cock until the cum shot out of it, with no regard for the mess I was making on my new rug. In my mind I was cumming in Lori's hungry mouth, her eyes looking up at me. She smiled, and she opened her mouth and showed me the puddle of my cum on her tongue before she swallowed it.",
        "It was a powerful fantasy, and it was clear I was becoming obsessed with my curvy, somewhat plus-sized neighbor. Her comment about her next door neighbor's new double D's made me wonder about Lori's breast size. She's at least that big, and probably bigger. Her proportions make it deceiving, though. Her voluptuous ass complements her prodigious tits, and her softly meaty thighs keep the 'curvy woman' thoughts flowing. Her waist has a nice, subtle hourglass shape to it even though her belly curves outward, in the slightest and softest of ways. None of it is unpleasant. On the contrary \u2014 she's a lovely, womanly woman, one who just happens to shop the little bit bigger sizes on the rack.\n\nThe next day at work I spent way too much time wondering if a blowjob was something Lori would do. Some women won't. Maybe lots of women won't, and especially older ones, I thought. I certainly couldn't picture my mother or any of her friends giving blowjobs, but Lori was a little younger than them and she seemed more comfortable with her body. The fact that she wore a bikini in my presence every Friday night said a lot, not about her proclivities for oral sex, but about her lack of prudishness. \n\nShe was sunbathing again that day, and I jerked off and had to wipe up my rug again. I thought about walking over to discuss the project with her, maybe ask her about blowjobs and other things, but I decided it would be too awkward without Robert there.\n\nWhen Friday evening finally rolled around I walked over in my bathing suit, with a pad of paper and a pencil in my hand.\n\n\"Oh, boy,\" Lori said. \"We're getting serious.\"\n\n\"Looks like a tequila night,\" Robert said, eyeing the pad. \"Margaritas? Shots? Something different?\"\n\n\"Can we just sip on it?\" Lori asked him.\n\n\"Absolutely.\"\n\nRobert left and was back just a few moments later with an expensive looking bottle, some quickly sliced lime garnishes and three glasses. \"Are we writing the script tonight?\" he asked me.\n\n\"Oh, not really, no. I need to get an idea of the various directions we can go. When I know those things I'll have a better idea of how we can shoot it. So...you guys are...still thinking this is a good idea?\"\n\nRobert smiled. \"I shouldn't admit this, but our bedroom time has already been more fun this past week. We'd still like to give it a go if you're still game.\"\n\nA nod was the best answer I could come up with. The whole situation still had me rather tongue tied.\n\n\"So what are we brainstorming tonight?\" Robert asked. \"Are we going with the cheating angle? The hot next door neighbor?\"\n\n\"Yeah, I think so,\" I said. \"It's a nice simple workable hook. The dialogue can be pretty basic. Unless you guys are naturals we probably don't want too much dialogue.\"\n\n\"Right,\" Robert said.\n\nWe all took sips of our drinks. Not being used to straight tequila, my sip was bigger than it should have been; my throat burned and I felt the heat hit my stomach.\n\n\"So I guess...I've got some questions for you guys,\" I said, picking up my pencil. \"I'm thinking about the way porns usually go, the way things get started, and...a lot of times there's oral.\"\n\n\"Ah, the blowjob scene,\" Robert said. \"Yeah, we should definitely do that.\"\n\nI looked at Lori and she was watching her fingers on her glass again, avoiding eye contact. \"So you...do that?\" I asked her.\n\nShe smiled without looking at me. \"I do,\" she said.\n\n\"She's good at it, if you're wondering,\" Robert said.\n\nI wrote Good at blowjobs on my pad, and I could feel Lori's eyes watching me do it. Goosebumps raised the hairs on my arms. I wonder if Lori saw that, too.\n\n\"So,\" I said, feeling a blushing heat rush through me, \"as far as sex positions go, there's, like, missionary, and girl on top, and doggy style, and...a bunch of others.\"\n\n\"Let's try 'em all,\" Robert said. \"I mean, those are the basics, but there's lots that Lori and I have never tried before. To be honest with you, trying some things for the first time with you filming it, I mean, that's pretty hot, right?\"\n\nI could tell Lori thought so. Her breathing was audible and her face was noticeably blushed. She still wasn't looking at me.\n\n\"Yeah,\" I said. \"I mean, that kind of thing, that spontaneity and excitement, that's what I'm hoping for.\"\n\n\"I know what you mean,\" Robert said, nodding. \"Why don't we not even talk about it now. You can just direct us into different positions when the time comes. Sound good, hun?\"\n\nLori said, \"I guess so,\" but she didn't sound sure of herself. I wondered if she was losing her desire to continue with the project. I had a feeling she might pull the plug at any moment.\n\n\"You know, this whole thing is just a crazy idea,\" I said. \"We can just drop it and not talk about it anymore if it's getting awkward.\"\n\n\"It's awkward all right, but it's good,\" she said, glancing at me shyly. \"I need to get pushed out of my shell. Rob's right, with the kids gone things are... sort of stuck. Thinking about your movie has been fun for us.\"\n\n\"But isn't it nuts?\" I said. \"Maybe just the thought of doing it is enough.\"\n\n\"Well yeah, it's nuts,\" she said, smiling, a little more relaxed. \"It's a whole new kind of nuts. The exciting kind. I'm liking it...so far.\" Her expression settled into a subtly flirtatious barely-there kind of smile. I imagined her saying, Now that you know I'm good at blowjobs, don't you wanna see?\n\n\"So, I guess wardrobe's not a big thing to worry about,\" I said. \"Rob, you'll just be in your bathing suit at the beginning. That one you have on should photograph okay out here in the dim light.\"\n\nI made a note of it on my pad, right underneath Sex positions: All.\n\n\"Lori,\" I said, \"what do you think. If you were a horny neighbor and wanted to surprise the guy next door during his late night swim, would you be wearing a bikini like the one you have on?\"\n\n\"Maybe,\" she said, her shy eyes perking up. \"It would probably be a sexier one. But maybe it'd be hotter if she was in pajamas, or lingerie, or, something loungy but sexy. And then she surprises him when she takes it off and she skinny dips and he's in his bathing suit.\"\n\n\"Nice,\" I said, jotting down the idea. \"Do you have clothes like that, or would you need to buy something?\"\n\n\"I have a sexy bikini that I never wear that she might like, and I can raid my drawers and find some other things for her. Is it silly that I'm calling her 'her'? I mean, she's me, but...\"\n\n\"No, that's fine,\" I said. \"What she wears needs to photograph well. Some fabrics and colors work better than others. It depends on the lighting and some other things. Ideally I'd do a little test. Set up a camera and have you just stand there, turn and maybe move a little.\"\n\n\"You're the pro,\" Robert said. \"Just tell us what you need us to do.\"\n\n\"Shall we do it?\" I said, looking at Lori.\n\n\"Oh, wow,\" she said. \"Tonight, you mean?\"\n\nRobert smiled and refilled her drink with more of the top shelf straight tequila. \"Let's do it,\" he said, smiling at me. \"Wanna go get your gear?\"\n\n\"Yeah, sure,\" I said. \"It'll be dark soon. Are you comfortable with a wardrobe test out here? The neighbors are still awake.\"\n\nLori shrugged her shoulders and nodded without too much conviction. She took a big gulp of liquid courage. \"I'll go look through my clothes,\" she said. \"Do you want to be in on it?\"\n\n\"Let me go get my camera,\" I said, \"and you can show me what you picked out when I get back. Pick a few different kinds of things and we'll see what works.\"\n\n\"No bra, probably, right?\" she said, looking me square in the eyes. \"I'm picturing her coming over all sort of loose and jiggly.\"\n\n\"Sounds like we're on the same page,\" I said, smiling at Lori's bashful excitement.\n\n\"Loose jiggly neighbors are the best,\" Robert said.\n\n\"Hey!\" Lori scolded. \"You know, Lisa's new ones aren't gonna jiggle like the real thing.\"\n\n\"I was talking about you, hun. You're a jiggly neighbor too, you know, or at least you will be in a few minutes.\"\n\n\"Oh,\" Lori said, glancing at me all shy again. Her emotions were delightfully easy to read.\n\nIn the dusky darkness I made my way through the landscape shrubbery between our yards, and quickly gathered together a camera, a lens and a tripod from my gear cabinet in my spare bedroom. I went into my bedroom and looked out the back window and I could see a light on in the upstairs across the way. It wasn't a clear view; Lori and Robert's bedroom has lacy curtains at the window, but I could make out two blurry figures, one of them trying on clothes, and then they joined together and I think they were kissing. I wondered if Lori was naked.\n\nI stood there wearing nothing but my bathing suit, talking to my growing boner, telling it to go away. I came to the realization that it was going to be a problem. I could change my clothes, I thought, but that would be an odd thing to do; it was a warm evening and it was still our regular Friday poolside get-together, a time when we always wore bathing suits. I picked up my camera gear and headed for the dark of the backyard, pretty sure I'd be in a less embarrassing state after my short walk.\n\n\"You're going to trip on those shrubs and hurt yourself one of these days,\" Lori said.\n\nI'd watched her emerge from the house when I was dodging bushes in the dark. She was standing there looking smokin' hot in an American flag bikini, probably the sexy one that she'd mentioned, the one she never wears. White stars on a field of dark blue covered her right breast, a little triangle of the same print covered her crotch, and red and white stripes covered her left breast. It was the thinnest of fabrics, nylon or polyester or maybe a stretchy spandex. The dark circles of Lori's areolas showed through it as a conspicuous tease, and her aroused nipples made bumps that were surprising in their exuberance. Bright white strings tied the pieces of fabric to her body; the two triangles that made up the top were spaced wide apart, with nothing but four inches of string across the width of her prodigious cleavage, and there were drooping bow knots at her hips that looked like they were itching to be untied.\n\n\"What do you think,\" she asked, smiling shyly as she surveyed the happy look on my face. \"She might wear this, right? It unties and comes right off, really easy.\" \n\nI set my gear down on the table, watching Lori blush, listening to the breath rush out of her. It was a stunning thing to witness, close up and alone with her. Quite obviously her comment had excited her. She'd suddenly turned shy and her eyes left mine; I realized my cock was hard again and my bathing suit was no match for its muscle. I sat down, but not before her glancing eyes saw the tent I'd pitched from the pole she'd erected. Robert walked out of the house just in time to break the awkward silence.\n\n\"That's a hot one, huh, Evan? Now that she knows there's friendly eyes out back maybe she'll wear it once in a while.\"\n\nMy name is Evan, by the way. Evan Puzman. With a name like that, is it any wonder I grew up a geek?\n\n\"It's...excellent,\" I said, taking the opportunity to let my eyes roam freely over Lori's thinly covered voluptuousness. \"Definitely porn worthy.\"\n\n\"The see-through part gets me every time,\" he said. \" Are you a tit man, Ev?\"\n\n\"I've been known to...enjoy them,\" I said, sounding like a dumb adolescent.\n\n\"Try on some of those other things we picked out, hun,\" Robert said to her.\n\nLori looked at me, with a growing sparkle of lust in her eyes. \"Don't you need to...test me?\" she asked.\n\n\"Oh!\" I said. \"Yeah. Wow, that tequila's got me all...thinking wacky tonight.\"\n\n\"Good stuff, isn't it?\" Robert said. He sat down at the table and twirled the bottle so he could see the label. \"It's from deep in Mexico. Beautiful women down there.\"\n\nI fumbled with my camera, trying to get it mounted on the tripod without standing up and showing off my boner again. Lori knew what my predicament was and she gave me that shy, mischievous little smile of hers.\n\nI fumbled with my gear and mumbled like a goofball. \"I'm gonna have to...wow, let me try something...Oh wow, is it warm tonight? I'm sweating.\"\n\n\"Jump in the pool, my man,\" Robert said. \"That's what it's there for.\"\n\nI didn't need to be asked twice. In order to place my tripod where it needed to be I was going to have to stand up and show myself, but first I needed a cool down. Sweat was trickling down my face and Lori's tits had my cock fully hard. My chair was just a few steps from the water. I tried to make it look like I was in a bent-over-ready-to-dive position as I left my seat and quickly made my way to the pool's edge, but I'm sure I just looked like a whacked-out dork. I splashed in and Robert followed.\n\n\"What a beautiful night,\" he said when his head surfaced. \"You coming in, hun?\"\n\n\"I don't know,\" Lori said. \"Do I need to be dry for the...test?\"\n\n\"Oh, yeah,\" Robert said. \"Evan, how do you want her, wet or dry?\"\n\n\"Both might be good,\" I said. \"Then we can come up with a plan for what'll be sexiest for the movie.\"\n\n\"Good enough,\" Robert said. \"Sorry, hun, you can't cool off just yet.\"\n\n\"I'm okay,\" Lori said, standing next to the table, with her drink in her hand. \"I'm more nervous than hot anyway.\"\n\n\"Oh, you're plenty hot,\" Robert said. \"You definitely gotta start wearing that again, and maybe get some more like it, now that the dickhead's gone.\"\n\nThey didn't volunteer the information, so I asked, \"Who's the dickhead?\" \n\n\"I guess we haven't told you about the family that lived in your house, have we,\" Robert said. \"A husband and wife and a little kid. They all screamed at each other all the time. Italians, you know? I shouldn't say that because Lori's half Italian, but, wow, they were somethin' else. He had a big nose and beady little eyes that were too close together. He made Lori uncomfortable, looking at her too much, working way out in the back part of his yard when she was out by the pool.\"\n\n\"He was a creep,\" she said. \"The house was empty for a month before you moved in, so I got used to laying out here again. I can't even tell you how much we wished for you to be a nice guy.\"\n\n\"She was so happy that day she met you,\" Robert said.\n\n\"But we hardly talked,\" I said.\n\n\"Oh, it was enough,\" Lori said. \"A girl can tell.\"\n\nRobert nodded, smiling. \"She was so happy about it I suggested Friday cocktails, and...here we are. Here's a funny story, Ev. When we first moved here our kids were teenagers. Lori had a bikini that was sorta like this one, small and sorta see-through and way too sexy. She wore it when we were alone, when the kids weren't home. We used to fool around in the pool when we got little chances like that. Do you mind me telling him this story, hun?\"\n\n\"I guess not,\" Lori said, still standing there, leaning her hip against the table, sipping her drink.\n\n\"So our son, he was about sixteen I guess,\" Robert said. \"He had a pool party one night. Our daughter was there, and a couple of her friends, but mostly it was boys. It was on a Friday night, a lot like this one, nice and warm. Good pool weather, you know?\"\n\nRobert and I were neck deep in the soothing, cool water. I nodded.\n\n\"Lori and I were in the house,\" he continued. \"We had the windows open to sort of chaperone things. They were all a bunch of horny adolescents. You know how that was. So we're up in the bedroom, sort of listening, and Lori, with her super x-ray hearing, says, 'Something's happening.' She looks out the window and whispers to me, 'That Williams boy is kissing our daughter.' So I say, 'Why don't you go out. Bring 'em a fresh bag of chips or something. Just to remind them all that we're here.' And then I had an idea. 'Wait,' I said. 'Wear your yellow bikini. That'll get his mind off of her.' \"\n\nI said, \"Is that the one that was\u2014\"\n\n\"The see-through one, yeah,\" Robert said. \"Totally sexy. Wicked, wicked awesome bikini.\"\n\nRobert's mind drifted and his eyes looked dreamy.\n\n\"Jeeze, Rob,\" Lori said, looking a little embarrassed. \"Maybe I should see if I still fit in it. I'm pretty sure I don't.\"\n\n\"We'll go shopping,\" he said, with a twinkle in his eyes. \"So I don't know why she did it, but she put it on. You never did tell me why,\" he said, turning his attention back to Lori. \"Was it seeing your daughter get kissed? Did it stir up your hornies?\"\n\n\"What are you, a psychiatrist now?\" Lori said. She was on the move, stepping toward the edge of the pool. She sat down and dangled her legs in the water. \"I don't know, maybe it was something like that. I don't remember exactly. I do remember putting that bikini on, though. It felt like a...sort of a bold move, you know? Dangerous. I remember it exciting me.\"\n\n\"It was really something,\" Robert said, sounding proud. \"Here's this forty-year-old with a body like Kate Upton, wearing her sexiest see-through bikini, walking out amongst a crowd of bathing suit clad adolescent boys. I was watching from the upstairs window. I loved every fucking second of it.\"\n\n\"What happened?\" I asked.\n\n\"Our daughter was horrified,\" Lori said, smirking embarrassedly at the memory of it. \"She said something like, 'Mom! What are you doing!', and everybody got really quiet. I've never been on stage before, so I don't know if it's like that, but it was a really bizarre kind of thrill.\"\n\n\"What did you do?\" I asked her.\n\n\"I walked around and straightened up the snack trays, and I made a few trips in and out of the house, picking up empty soda cans for the trash.\"\n\n\"It's probably the wiggliest bikini I've ever seen,\" Robert said. \"Top and bottom. And the see-through was top and bottom, too, but not in the pussy part. You could sort of see the crack of her ass right through it, though, and man did that ass wiggle.\"\n\n\"Oh my God, was it that bad?\" Lori asked. \"Those poor boys.\"\n\n\"Poor boys?\" Robert said. \"I guarantee you every single one of them remembers that night, to this very day. Guaran-fuckin-tee it. That was one of the best nights of their adolescent lives.\"\n\n\"What happened with your daughter, and that boy that kissed her?\" I asked.\n\n\"She started dating him, and she married him,\" Lori said, smiling.\n\n\"He started dating her is more like it,\" Robert said. \"When you see the mother you have a pretty good idea of how they're gonna grow.\"\n\n\"Hey!\" Lori protested. \"Are you talking about what I think you're talking about?\"\n\n\"Tits, hun. They're important to a boy.\"\n\nLori lowered her face into her hand. \"Oh my God,\" she said.\n\nThe sexy conversation hadn't allowed me to totally eradicate my erection, but it was down to a swollen state that I convinced myself was something I could be proud of. Guys are supposed to be proud of having a decent sized cock, right? At least the full-on tent pole had gone down. Being away from home with nothing but a bathing suit on was beginning to seem problematic.\n\nRobert and I got out of the pool and Lori tossed us each a towel. She was standing again and the tossing motion made her tits move. My mind turned it to slow motion, like those old soft-core Playboy videos of the Playmate washing a car. I've got a box of those in my basement, too. \n\nMuch to my relief, my cock mostly behaved. I still had a half-state erection, swollen and enlarged, but hanging low. I dried my suit with the towel as best I could, so it didn't cling. There was a noticeable lump there, but I could live with it. I started setting up my tripod where I thought I'd get a good angle of view.\n\n\"Ready to be a sex-pot, hun?\" Robert said. \"You look every bit as hot as you did at that pool party.\"\n\n\"Yeah, right,\" she said, sarcastically. \"How long's it been, eleven years? They're not a girl's best friend, you know.\"\n\nRobert looked my way. \"Evan. Is this a sexy woman, or what?\"\n\n\"Oh. Yeah,\" I said too timidly, wishing I had the courage to tell her how boner-worthy she was.\n\n\"Would you be making this movie if she wasn't?\" he asked me.",
        "\"Yeah, but...this is way better,\" I said. Lori and I made eye contact and we both smiled shyly. \"Rob,\" I said, using his nickname for the first time, \"let's try this without those downstairs lights on in the house. Maybe just leave a dim one on in the bar. And switch off these patio lights, too. I want to do a test with just the light from the pool.\"\n\n\"You got it,\" he said.\n\nHe dashed into the house, leaving quiet in his wake. The night was fully dark, with just a hint of twilight in the western sky. I adjusted my camera settings while Lori sat nervously at the table, sipping her drink. Her bare feet fidgeted a little, mostly just her toes, wiggly little things with dark red nail polish on them. Lights went off in the house, one by one, and then the patio was suddenly darkened, lit only with the subtly moving glow from the underwater pool light.\n\n\"Wow,\" I said. \"I like it. I think it'll look good.\"\n\nLori looked around at the new atmosphere, and I saw her look at the neighbor houses, to see what they could see.\n\n\"What do you think,\" I asked. \"Is it okay to do this tonight?\"\n\n\"Yeah,\" she said. \"I don't think anybody can see much, so...\"\n\nMaybe the other neighbors couldn't see much, but I could see all the beautiful details, like Lori's big nipples being back to fully aroused, something she had no chance of hiding with that particular bikini. \n\n\"Oh yeah, this looks good,\" Robert said, joining us again on the patio. \"Will your camera work when it's this dark?\"\n\n\"Yeah, low light is no problem for these newer ones. The question is will there be enough light to see you properly.\"\n\n\"Oh yeah,\" he said. \"Gotta see the goods, right?\"\n\n\"Can we all talk quieter please?\" Lori said. \n\n\"Oh, sure, hun. Evan, what's the plan?\"\n\n\"Lori,\" I said, \"can you walk out from between those two bushes there, stop right in front of the table, and turn slowly around?\"\n\nShe nodded and walked into the darkness, around the back of one of the big arborvitaes. I pressed the video start button on my camera. Feeling my adrenaline surge, I thought about calling \"Action!\", but I kept things silent, the way Lori wanted it. It was definitely a thrill, though, when she emerged from the darkness, looking shy and sexy. My first porn girl! On my very own camera!\n\nI could tell Lori was thinking about her posture. She stood straight as she walked, with her nicely rounded ass out proud and her big tits thrust forward. It was subtle, but noticeable, and it looked just great. Her sexy nipple bumps led the way.\n\n\"The sound doesn't matter,\" I said. \"I'll be doing it with microphones when the time comes. These tests are just for the visuals. We can talk during them.\"\n\n\"Oh, okay,\" she said. \"So just, in front of the table here?\"\n\n\"Yup, that's perfect. Now turn, slowly, all the way around. I'll be looking for how the shadows look, and for any moire pattern problems with the bikini fabric.\"\n\n\"Moire pattern?\" she asked as she slowly turned.\n\n\"It's something that happens with cameras; still pictures and video can both have it. It's when you get sort of a wavy vibrating look from certain fabrics, usually because the weave or the pattern has fine lines that are too close together. I doubt if that bikini does it, but other things might.\"\n\nLori completed her turn and looked at me. \"Do you want me to change into something else now?\"\n\n\"Did you want to get wet?\" I asked. \"I mean, you don't have to, but I'd kind of like to see what you look like down in that nice pool light.\"\n\nShe flashed me a sexy smirk as she walked to the pool's edge, stopping at the top of the steps that lead down into the shallow water. \"Don't be so timid about asking,\" she said. \"You're the director.\"\n\n\"Okay, wait,\" I said. \"Go back over by the table and start again. I want to follow you with the camera. When we do this for real I'll be extra careful with the focusing, but for now we'll just wing it.\" I practiced the pan and tilt move I'd be using to rotate the camera on the tripod, and then we were ready. \"Don't laugh at me,\" I said quietly. \"I'm gonna call 'action,' okay?\"\n\nLori smiled and nodded. Robert was silent behind me, watching.\n\n\"Action!\" I said in a loud whisper. \n\nLori walked to the pool's edge again, and made her way gracefully down the steps. She was waist deep for a moment and I could tell the lighting was going to work beautifully \u2014 her nicely tanned skin and big breasts looked amazing, lit from below with the moving, shimmering light.\n\n\"Do you want me all wet? Hair and everything?\"\n\n\"That's up to you,\" I said. \"At least up to your shoulders. We'll be doing it a few times, so...\"\n\nThere was a moment of silence. \"Oh,\" she said. \"I'm getting in the water in the other clothes, too?\"\n\n\"I was thinking we would, yeah,\" I said. \"Your idea of her just stripping and skinny dipping is good, but her getting wet while she's wearing something might be good, too, right?\"\n\n\"Oh, I'm liking it,\" Robert said. \"That stuff you picked out is perfect, hun.\"\n\nI think Lori blushed, but she was underwater before I could be sure. She came up covered in goosebumps, standing waist deep again. The dousing had rendered her bikini even more transparent, its thin fabric clinging to her like red-white-and-blue glaze.\n\n\"Damn. You look sexy, honey,\" Robert said.\n\nI quickly dismounted my camera from the tripod and I got down on the concrete, lying on my side at the pool's edge with the camera at my eye. I said, \"This light's gonna be awesome, I think. Can you walk up the steps now?\"\n\nLori nodded. She looked nervous again, maybe because of my angle, and my closeness, or maybe because of the way I'd be scrutinizing her ass, the one she thought was too big. I'd seen it plenty of times of course, garbed in various bathing suits at our Friday poolside drinking sessions, but never with a camera in my hands that was trained on it, and never when it was so thinly covered with such a provocative, clingy, somewhat see-through bikini. She seemed to put a little extra wiggle in it when she climbed the steps, and the shimmering light on the water dripping off of her was spectacular.\n\nRob's voice cut through the silence. \"That's an ass. Am I right, Evan?\"\n\n\"You look...fantastic,\" I said, still recording, with the camera to my eye. I felt the thrill again, the adrenaline, as my porn star made her way to her towel. I suddenly felt like I was in the zone, the way I feel when I'm wielding my TV camera at work.\n\n\"Are we done with this look?\" Lori asked, drying her shoulders, keeping the towel in front of her in an attempt at modesty.\n\n\"Yeah, you can change,\" I said. I hauled myself up off the ground, went to the tripod and re-attached the camera. \"I'll do Rob while you're changing.\"\n\n\"Oh, you need me to do it?\" he said.\n\n\"You can just stand there and turn,\" I said, \"and maybe walk around a little.\"\n\n\"Got it,\" he said. \"You wanna see my cock?\"\n\n\"Rob!\" Lori said. \"Jeeze!\"\n\n\"What!\" he said. \"Did you forget what we're doing here?\"\n\nShe shook her head and started to walk away. \"I don't know about this,\" she said.\n\n\"Is she...okay?\" I asked as she disappeared into the house. \"We're not pushing her into this, are we? I wouldn't want to do that.\"\n\n\"Oh, no,\" Rob said. \"Not unless she changed her mind all of a sudden. This was her idea you know.\"\n\nI felt a strange tightness in my body and my throat. \"Really?\" I said.\n\n\"Yeah, she came up with it, that night after we were all talking about our bucket lists. We were in bed, and she said wouldn't it be fun to do this with you, and she got hornier than I've seen in a long while. Don't tell her, though. She'll be pissed at me for telling you.\"\n\n\"Oh, no, I won't say anything.\"\n\nI was stunned by the new knowledge. For some reason I'd thought it was Robert who was behind the idea, not Lori. My camera was rolling and Rob was strolling around in front of it when she walked out of the house.\n\n\"That's what I'm talkin' about!\" Robert said when he saw her.\n\n\"Quiet, Honey!\" she said, glancing around to see if any new lights were on in the neighborhood.\n\nLori was wearing a lovely piece of underwear, a short, white slip that was made of satin; it caught the light beautifully, shimmering, looking almost like silver. With a wide, low V neck, and little spaghetti straps, it hung on her big nippley breasts like it was barely there, showing acres of cleavage, the silky fabric draping softly around her middle, casting vertical shadows. The way her thighs emerged from the short length of the little slip had my curious mind reeling \u2014 did she wear anything underneath?\n\n\"I thought maybe she'd sleep in something like this, and she snuck over, right out of bed, you know?\" Lori was looking down at herself when she said it, and I wondered if she liked what she saw as much as I did.\n\n\"Yeah. For sure,\" I said, stupidly tongue-tied again.\n\nWhen Lori's gaze shifted from her satin-sexy bosom to my watching eyes, she was clearly blushing. \"How's my stud husband?\" she said. \"Is he camera worthy?\"\n\n\"Oh. Yeah, he'll do,\" I said, smiling at her. \"He's not gonna be the star, though, I can tell that already.\"\n\nIt was a killer line, and I was surprised it came out of my own mouth. Lori looked at me with a spark of excited happiness, but then it was gone. Reined in on purpose, maybe, or maybe it was that cute shyness of hers taking control again. I took a deep breath. She was getting to me, and I felt the blood heading toward my cock, plumping it, warming it. It felt dangerous, but I didn't hate it.\n\n\"You wanna do the walk out of the bushes thing again?\" I asked.\n\n\"Direct me, director,\" she said, waiting for me to take better charge of things.\n\n\"Oh, right,\" I said, with half of my mind on her and half of it on my growing cock. \"You'll walk out of the bushes, I'll track you, you'll stop and turn slowly, and then I want you in the water, fully wet. We'll see if that satin looks as good as I think it's going to.\"\n\nLori glanced at my problem. My cock was big and long and mostly hard under my bathing suit, not pitching a full tent, but very noticeable. Her eyes were back on mine when she nodded, and then she was out amongst the dark bushes, looking like a sexy ghost.\n\nRobert was behind me again; I'm pretty sure he didn't see my boner problem, but it was right there for Lori to see as she did her walk, and her stop, and her slow twirl. Her mouth was acting all sexy, smiling a little and then not, over and over again, like she was fighting it. It was adorable. And did I mention that her big breasts, naked and unsupported under the wispy satin, moved like nothing that I'd ever seen? They brought to mind Playboy breasts, the classics from the 70s and 80s, when big and firm and natural was the thing. I was breathing louder than I wanted to, and I had a big ol' erection that was embarrassing. All I could do was stand there and work my camera. I was glad Lori would soon be in the water, not only because I knew she'd look stunning, but because I could sit cross legged at the poolside with my camera and hide my throbbing boner.\n\nIt all happened without any more direction. She walked down the pool steps and the satin slip floated up around her waist, surprising her. She quickly pushed it down, but not before I'd seen the bold choice she'd made in the dressing room \u2014 there was nothing on underneath it. The camera and I had a quick glimpse of the dark thatch of hair at her crotch. It looked neat and trim, and it was hidden again as quickly as it had appeared.\n\n\"Damn,\" Robert said. \"She's goin' full sexy on us.\"\n\nLori must have heard him when she was going underwater; she came up slowly, with a full-on tease. Just her head, and then shoulders, and a sloooow rise that left me unable to breathe for a few wonderful moments. I was cross legged, just five or six feet from her. She stood there, waist deep, with satin plastered so thoroughly to her breasts and wildly aroused nipples I could see her goosebumps through it.\n\n\"Damn, honey,\" Robert said. \"What the fffuck!\"\n\nLori giggled, and I was so happy my camera was there to capture the moment. \"This is crazy,\" she said. Her shy smile and her seductive eyes were making a mess of my thoughts.\n\n\"Crazy good, I'm thinking,\" Robert said. \"What do you think, Ev? That's fucking hot, right?\"\n\n\"Absolutely,\" I said, still filming the remarkable sight. \"We may have our winner.\"\n\n\"You don't want to see the other outfit?\" Lori asked.\n\n\"Let's do 'em all, hun,\" Robert said. \"This is fun.\"\n\nI wholeheartedly agreed and was glad Robert had said it.\n\n\"It's just one more outfit,\" Lori said. \"A t-shirt and panties. It's something else she might sleep in, right?\"\n\n\"You're the expert,\" I said.\n\n\"How many girls have you slept with,\" she asked me. \"I'm talking about real sleep.\"\n\n\"Oh, wow. Just...two, I guess.\"\n\nLori nodded, like that was the number she'd guessed. She turned and climbed the steps out of the water without another word, with satin plastered to the smooth round curves of her surprisingly young looking ass. Robert's eyes and my eyes and my still rolling camera captured it all.\n\n\"You gotta put that in the movie,\" Robert said.\n\n\"Yup,\" I said.\n\nLori looked over her shoulder at us and she smiled.\n\nShe picked up her towel and was a bit less shy when she dried herself. There were nice glimpses \u2014 as fleeting as lightning strikes \u2014 of her pussy and her milky white ass cheeks. I tried not to stare. My camera was switched off and I was reattaching it to the tripod. My cock was still big, the long lump noticeable down the leg of my bathing suit, but it didn't bother me quite so much. I knew Lori was aware of it, and she didn't seem to mind, so why should I? Because her husband was there, that's why, but he didn't seem to mind either. I noticed his own bathing suit was lumped out more than usual, not that I looked at it much.\n\nAs Lori scurried away for a costume change, with tits jiggling and ass wiggling, Robert asked me if the lighting was going to work. Lori's sexiness was still muddling my thoughts, but then she was gone. I explained a little about a camera's exposure settings, ISO and F-stops, and he nodded like he sort of understood, and then Lori was back, wearing a white t-shirt that fit her snugly but perfectly, its low scoop neck showing lots of nice cleavage. A short, midriff baring shirt, it barely covered her belly button, and below it she wore white cotton panties, nicely shaped bikini-cut ones that were plain but sexy. She said, \"Another sleeping outfit. This is what I wear, so she might wear it, too.\"\n\nMy cock rose with the news. I was surprised that was all it took, finding out what Lori wears to bed.\n\nShe looked a little bemused by what was happening inside my bathing suit, but truthfully, she looked smokin' hot right down the line \u2014 her sparkling eyes, her little smile, the perfection of her soft cleavage, and those sexy dark areolas of hers that were showing through the thin shirt, circling the exuberant bumps from her aroused nipples like holy halos. And then there was the supple, soft-looking flesh of her belly showing above her panties, and the dark mystery that showed through the thin cotton at the crotch. I sensed something new in her mood as she stood there, a slightly pluckier sparkle in her eyes, a new relaxation with letting it all hang out for her new neighbor.\n\n\"Same routine?\" she asked, sounding more confident.\n\n\"Ask her to take the top off,\" Robert said. \n\n\"Rob!\" she said. \"Jeeze! Ev's the director!\"\n\n\"Is it...late enough?\" I asked, looking around the quiet, dark neighborhood.\n\nI was surprised to see a shrug of Lori's shoulders and a mischievous twinkle in her eyes.\n\n\"Let's treat it like a rehearsal for the movie,\" I said, feeling bold. \"Robert, you're in the pool, swimming quietly. Your neighbor comes out of the bushes. She says, 'Your wife's not home, is she?,' and you say 'no.' You can improvise some dialogue if you want, maybe ask her about her husband. She joins you in the pool, still dressed, you kiss, she takes off her top and tosses it up on the patio and you kiss some more. Sound good?\"\n\n\"Got it,\" Robert said.\n\nLori nodded. She looked nervous and intense, like she was running it all through her mind.\n\nI said, \"I'll be hand-holding the camera the whole time, sort of moving around. It's important that you ignore me. Never look at me or the camera. Don't stop and ask me anything, just improvise. Pretend the situation is actually happening.\"\n\nRobert was getting into the water when I looked at Lori. My eyes roamed down her body, the way she and I had gotten used to. The dark mystery at her crotch was punctuated with an unmistakable wet spot on the 'down under' part of her panties. I doubt if she knew it was there. Our eyes met for a few moments and I think maybe we gave each other confidence. \"Now?\" she asked. And then it was happening. She approached Rob...\n\n\"You're wife's not home, is she?\"\n\n\"She's out of town. Is your husband sleeping?\"\n\n\"Out like a light. He drank too much again.\"\n\nRobert smirked. \"Did you make his drinks?\"\n\n\"Extra strong. Mind if I join you?\"\n\n\"I'd love it.\"\n\nLori sashayed down the steps into the water. Her posture was perfect and her tits jiggled with each step down. She went underwater for a moment and came up dripping, standing waist deep, sweeping the cascading water out of her hair with her hands. Her tits looked amazing under the wet t-shirt \u2014 huge curves and pointy nipples and big dark areolas that were even more visible than when she had the American flag bikini on. She closed the gap to Robert and he reached for her, pulling her to him with lusty energy. They kissed. It was wildly passionate, both of them feeding off the horniness that had been building all evening. Robert turned her, so that her outward thrust tits were pointing right at me. He was behind her, tight to her body, and his hands were on them, squeezing the softness of those glorious breasts. I heard Lori moan through her open mouth. Her excited eyes looked at mine, just for a quick moment. Robert lifted her soaking wet shirt, her big tits tumbled out, and he tossed the shirt away, onto the patio. Her eyes were on mine when one of his hands claimed the massive flesh of her breasts again, and his other hand went lower, to her crotch. Everything was happening so quickly. Lori was spectacularly topless and her body had gone to what I think of as carnal posture\u2014 tits thrust wildly forward, hard against Rob's squeezing hand, and ass thrust forcefully against his certainly hard-cocked crotch. Lori's eyes closed, she moaned through her open mouth again and she looked overcome. It went on for a few moments, her moans deeper and more wondrous with each breath, and then I thought for sure she was fainting.\n\n\"Do you always cum that easily?\" Robert asked her, staying in character. He was still holding her the same way, from behind, a tit in one hand, a pussy in the other, his mouth near her ear. \"You should swim with me more often.\"\n\nLori, breathless, swooning, tried to get her bearings. She'd had an orgasm, and neither she nor I could believe it. My camera captured it all, thank God. I continued my slow, deliberate movements, with my cock hard and aching. Lori looked right into the camera as her mind got a grip on things. Both of Robert's hands were on her tits. Her head was leaning to the side and he was kissing her neck. \"Jesus,\" she whispered.\n\n\"Cut,\" I said.\n\nA few moments went by with nothing but the sounds of breathless lovers and my pounding heart. My astonished mind hadn't yet begun to worry again about the big embarrassing lump in my bathing suit when Robert said, \"The water's nice, buddy. Want to hop in and cool things down?\"\n\n\"Yeah?\" I said.\n\n\"Don't be shy on my account,\" Lori said. She looked post-ogasmically beautiful, and a bit shell-shocked. She turned and hugged Robert, snuggling her head against his chest. I think she was shy again, trying to hide those stunning bare breasts of hers.",
        "\"What do you think?\" Robert asked me, as I slipped into the comfort of the water. \"Do we pass the screen test?\"\n\n\"You both get an A+,\" I said. \"That was...pretty awesome.\"\n\n\"I'm just along for the ride,\" Robert said. \"My sweet wife's hair trigger makes everything happen.\"\n\n\"Hey!\" she quietly scolded, head still sideways against his chest. Her smirk showed her inner delight. \"That's not polite, in front of our neighbor.\"\n\n\"You're gonna be the perfect porn star, Honey,\" he said, holding her tight against him. His eyes looked my way. \"Real live orgasms are what you're after, right Evan?\"\n\nI didn't answer. Lori face and her shoulders were flushed red, maybe from embarrassment, and I didn't want to add to it.\n\n\u2014\n\nThe next few days at work seemed interminably long. All I wanted to do was get home, gaze out my window at Lori by the pool, and work on the video files I shot Friday night. It was hot stuff. Lori looked amazing in every shot, and her endearing shyness made everything even hotter. And that orgasm! Oh my God! Topless and quietly explosive, I'd missed the subtleties of it in the heat of the moment. I played it back over and over, adjusting shadow highlights and correcting color...yeah, I know, those were just excuses to stay interactive with it. This porn hobby, I'm telling you, it's kind of awesome.\n\nFor real though, the way Robert turned her toward me, and the way the wet shirt came off of her, and the look on her face when Robert's hand took forceful hold of one her bare tits, squeezing his fingers into its softness; awesome is the only word for it all. I feel like I'm watching super hot porn, and yet I was the guy behind the camera. It's amazing. I think the hottest part is the way Lori's eyes found me, and the look in them when it was happening, just an instant before her orgasm. I can't help but think I was part of what got her there so quickly. The camera and me. A trigger, for the hottest thing I've ever seen in my life.\n\nI kind of wish I'd left my camera running on the tripod to capture the way it all wound down. The three of us were in the pool, Lori's embarrassment faded, and she got more and more comfortable with the situation. The topless situation, I mean. I thought for sure she'd want to cover up, at least with the wet t-shirt that lay in a puddle next to the pool's edge, but she didn't. Robert brought all our drinks to us, and we stood there in the glowing light and talked about their kids, my life growing up, and my failed love life. Lori's tits were there, and I looked at them, and Robert did, too, and we even joked about how awesome they are, but for a half hour or so we were just three good friends hanging out together, carefree and tranquil, in waist-deep water. It was so nice. I remember how some of the conversation went, after we'd relaxed and had more than a few sips from our drinks...\n\n\"You'd be a big hit at a wet t-shirt contest,\" Robert said.\n\n\"I'm too fat.\"\n\n\"No no no no,\" Robert said, shaking his head. \"Bikers love women with some meat on their bones. And they're crazy about awesome tits.\"\n\n\"Keep your voice down!\" Lori scolded.\n\n\"Are we, um...I was wondering what we're calling things,\" I said.\n\n\"Tits, you mean?\" Lori said, eyes sparkling mischievously. She smiled at the look of boyish wonder on my face. \"You're too cute, Evan. We're making a porn together and you don't even know if you should say dirty words around me.\"\n\n\"It's all new, that's all,\" I said. \"We're still neighbors, after all.\"\n\n\"Yes. You're polite, and I like that,\" she said. \"But it's tits and ass and...cock. When we get deeper into this I'm going to need to be immersed in it, otherwise I might...\"\n\nRobert finished the thought she'd left hanging. \"She's fought shyness all her life, and she hates it.\"\n\n\"I do,\" she said. \"It's a curse.\"\n\n\"I know all about it,\" I said. \"Maybe not super bad, but it definitely hits me when I don't want it to.\"\n\n\"I know you understand,\" she said. \"I don't think I'd do this with somebody who didn't understand that part of me.\"\n\nThere was comfort and understanding there that night, with the darkness surrounding us as we all stood in the warm embrace of the glowing, waist deep water. It was real, human connection. I thought about it when I looked out my window at Lori, sunbathing that day in her white bikini, with her big floppy-brimmed hat on and a good book in her hand. She was fascinating. And sexy. And lovely. She was also bigger than the girls I liked, and older than them, too. I wondered if the 'type' I'd longed for my whole life was all wrong. I could easily fall in love with a Lori, and maybe I already had.\n\n\u2014\n\n\"Thanks, buddy. You really got things stirred up here last week.\"\n\nThat was Robert's softly smiling friendly greeting to me Friday evening, when I walked over for our usual 'cocktail hour.'\n\n\"Oh, yeah, it was fun,\" I said.\n\n\"I'm talking about the part after you left,\" he said. \"Holy cow, she was on fire in the bedroom.\"\n\n\"Hi Evan,\" Lori said, exiting the house wearing a bikini I hadn't seen before. It was a thin, satiny, aqua-colored one, with no nipple control and lots of bouncy action. I liked it. A lot. \"How'd work go this week?\"\n\n\"Pretty good,\" I said. \"Same old grind.\"\n\n\"Are you used to those early hours?\" she asked. \"That seems like it'd be really hard to get used to.\"\n\n\"Yeah, I kind of like it. I love having summer afternoons off.\"\n\n\"Oh, right,\" she said. \"I forget you're over there; you're so quiet.\"\n\n\"You should come over for a swim, buddy,\" Robert said. \"The pool's yours, whenever you want to use it.\"\n\n\"Oh, thanks, but I wouldn't want to disturb Lori's reading.\"\n\n\"It wouldn't bother me any,\" she said. \"The neighbors might start to talk, though.\"\n\nShe gave me a wink that raised the hairs on my arms. I'm sure there was nothing more than friendliness behind it, but my mind was lost again in her sexy little smile.\n\n\"We're in a rum mood tonight,\" Robert said. \"What's your pleasure?\"\n\n\"Yeah that sounds good.\"\n\nThere was a drink in my hand just a moment later. The three of us sat at the poolside table and I tried to take in all the little details of how the new bikini top cradled Lori's breasts, without her knowing I was doing it of course.\n\n\"So what's the verdict with the screen tests, or wardrobe test or whatever you call it?\" Robert asked. \"Did everything look okay?\"\n\nI reached into my camera bag and pulled out a small laptop computer. \"We're making this movie for you guys, so you get to choose. To be honest with you, I like 'em all.\"\n\n\"Yeah, a sexy woman, all wet; I guess it doesn't matter what she wears, right?\" Robert said.\n\n\"I've been wondering all week if I look like a cow,\" Lori said to me. \"I was gonna walk over and knock on your door.\"\n\n\"Oh, I'm sorry,\" I said. \"I should have brought this over and showed you. I thought Rob should be here, and I'm in bed pretty early when I have to get up the next day.\"\n\n\"No, it's fine!\" she said. \"I'm just a worrier. So I look...okay?\"\n\n\"Better than okay,\" I said. \n\nThe laptop was up and running and I cued up the first clip, the wardrobe test of the American flag bikini.\n\n\"Oh my God,\" Lori said. \"My tits look huge! Do they always? Is that like a...one of those lenses that make things bigger, like noses and things?\"\n\n\"Nope. Straight normal lens. It's actually got really good curvature of field specs,\" I said, sounding extra geeky.\n\n\"You're a beautiful woman, hun. That's the answer,\" Rob said. \"That bikini does a number on you, though. Damn, that's a good one. Oh, here we go,\" he said, watching the screen. \"Gettin' wet.\"\n\nThe three of us watched as Lori doused herself in the pool and came up dripping.\n\n\"That's...really see-through!\" she said.\n\n\"Awesome,\" Robert said. \"The camera really picks it up. Wow, I like the way that watery light moves on her. Like a sexy acid trip.\"\n\nThe bikini scene ended, so I cued up the one with Lori wearing the satin slip.\n\n\"Oh, baby,\" Robert said. \"You are photogenic! I'm liking this project. I'm liking it a lot.\"\n\nWe all sat silently, watching Lori dunk herself and rise up slowly from the shimmering water, with silvery satin plastered to her goosebumpy curves.\n\n\"Oh, you're killin' me,\" Robert said. \"You're fuckin' killin' me! Evan, man, you've been looking at these all week, haven't you. You dirty dog!\"\n\n\"Oh my God,\" Lori said quietly, watching herself.\n\nAs she watched I was watching her reactions, but I couldn't read her emotions. None of her comments had been positive. My lack of confidence ran away with my thoughts and I was sure she hated what she was seeing, sure she thought I'd taken advantage of the situation and overstepped my bounds. We were neighbors after all; we had to live amongst people that knew us, friendly old folks and innocent kids.\n\n\"Oh my God,\" she said again. \"I look good.\"\n\n\"Yeah you do,\" Robert said. \n\n\"Do you really think so?\" I asked her. \"I mean, I think so, but do you? Do you like it?\"\n\nShe smiled that little smile that I'd grown to love. \"I wanna do more,\" she said. \"I wasn't sure until now. If looked fat I...wasn't sure. But you make me look...better than I think I do.\"\n\nHer eyes looked at me like something special was happening. She looked back at the laptop and I watched her watch it. I clicked a few keys and the next clip started playing. Lori in white, t-shirt and panties, tits jiggling like a sex goddess as she walked into the water toward Robert, kissed him, and then...\n\n\"Oh my God,\" she whispered, her unblinking eyes staring at the laptop. She's there on the screen, turned toward the camera. Soaked shirt translucent over dark areolas. The tittiest, most exciting woman in the world at that moment. Robert's hands are there, squeezing, and then her shirt is off, her tits are out, his hands are busy up top and lower, and then...\n\n\"That's my wife,\" Robert said, quietly, reverently, eyes glued to the aftermath of the climax of the scene. \"I still can't believe you came like that, hun. That was amazing.\"\n\n\"Oh my God,\" Lori giggled, still watching her own struggle to regain sanity. \"That's...wild. I can't believe it's me.\"\n\n\"I think it's pretty great,\" I said. \"You guys are...really good.\"\n\nLori looked at me. Her suntanned face was red, blushing, embarrassed but clearly excited. \"I guess you want to set up cameras and watch me fuck, now, huh? When I first met you I never would have guessed what a dirty boy you are.\"\n\nRobert looked happy. He said, \"Evan, man, you got her on the ropes, and I'm horny too. Go grab some gear. Let's do something.\"\n\n\"Tonight? Right now?\"\n\n\"Right now, brother,\" he said. \"We're ready. We don't have to do it in order, right? Is it all right if we just jump right into bedroom scenes?\"\n\n\"Oh, yeah. Sure. Can you come with me and help me carry a few things?\"\n\n\"You got it, brother.\"\n\n\"What should I do?\" Lori asked.\n\n\"Oh, let me think,\" I said. \"So, the first scenes will be out here, and those will cut right to the bedroom scenes, so...your hair should be wet, and...what did you decide for wardrobe? I like the slip or the t-shirt and panties myself.\"\n\nLori nodded. \"Yeah, t-shirt and panties I think. Rob?\"\n\n\"Sounds good to me,\" he said. \"Do we get to recreate that pool scene?\"\n\n\"Yeah, I'll get microphones set up out here another night. So for now, upstairs, we need you in wet hair and wet white panties.\"\n\nLori nodded. Her eyes showed her nervous excitement.\n\n\"We'll be back, hun,\" Robert said, kissing her deeply but quickly. \"Don't chicken out and run off on us.\"\n\n\"I won't.\"\n\nRobert and I heard a soft splash when we were wending our way around the shrubbery, heading for my backyard. I wanted to see what the new aqua-colored satin bikini looked like all wet, but I didn't stop to look. I don't think what was about to happen had fully sunk in to my thick skull \u2014 I was going to see Lori suck a cock that very evening, and fuck a cock, too, if the shoot went smoothly and we got that far. Thinking back on it now, with the luxury of hindsight, I'm amazed that I went along with everything so easily, without questioning things more or just plain freaking out. The three of us were suddenly in the middle of some crazy stuff, but it all flowed with dreamlike ease. I guess none of us were overthinking things; we just let the sexy summer nights take us where they wanted to go.\n\n\u2014\n\nRob and Lori's bedroom is a lot bigger than mine, which was helpful for the camera and light set-ups. Lori had a bathrobe on when Rob and I got there, a pink one that looked soft and comfy. Barefoot, and with her hair toweled but wet, she looked plenty sexy, especially so since she most likely wore only panties under the robe, the loose top of it exposing deep cleavage that seemed to want to show off even more than usual. \n\nI set up three lights on stands but I ended up using just one of them; I aimed it into a big gold colored umbrella reflector, with Rob and Lori's two bedside lamps switched on to supplement it. The soft lighting looked warm and natural, and it gave me lots of options for camera positions.\n\n\"I'm not really sure how this is gonna go,\" I warned. \"It might be a stop and go process. Rob, are you a Viagra user? This might be a good time for it.\"\n\n\"I'm on it,\" he said, disappearing into the bathroom.\n\nI asked Lori, \"Are you guys serious about me calling the shots? I gotta warn you, I watch a lot of porn. I have...ideas.\"\n\nI smiled and Lori did too, but her smile looked like a sort of nervous curiosity. She said, \"Yeah...I mean...we can always say no, right?\"\n\n\"Oh, that goes without saying. But really, you guys can just do what you normally do if you want, and I'll try and capture it.\"\n\n\"We kind of like the idea of you directing us,\" she said, looking adorably shy. \"You tell us, and...we'll do it.\"\n\nHer face reddened again and I'm pretty sure I could see the beat of her pulse on her neck; her heart must have really been pounding. I thought about what Robert had mentioned, about the whole endeavor being Lori's idea, and I wondered \u2014 when she said 'you tell us and we'll do it', did she really mean 'you tell me, and I'll do it'? She sort of had that look in her eyes. Just tell me what you want, Evan, I imagined her cooing, close to my ear. I'll do anything. Anything. My mind was a mess again when Robert returned from the bathroom. I took a deep breath and tried to say something that sounded professional.\n\n\"I'll warn you guys, doing this tonight is a bit rushed, so it may turn out great or it may end up being an extended rehearsal. But this is just one of quite a few nights anyway, so...\"\n\n\"Really?\" Lori said. \"How many...sessions do you think?\"\n\n\"I don't know, really. There'll be camera movements, and maybe some close ups. You guys will be in lots of different positions. If we want to end up with an hour or more of finished product it's going to take quite a few nights.\"\n\n\"Wow, I...guess I hadn't thought of all that,\" Lori said.\n\n\"You still up for it?\" I asked, as I was attaching a microphone to a long boom stand. \n\nLori nodded and smirked. \"I'm not as horny as I was down by the pool, but...\"\n\n\"Take off your robe, hun,\" Robert said. \"Maybe that'll do it.\"\n\nLori flashed him an odd little look, and then, in a quick moment that stilled me and stopped my breathing, she undid her robe and let it slide down her arms. She was wearing nothing but white panties, in her own bedroom, and I was there. It was fucking awesome.\n\nI gathered my wits as best I could and adjusted the boom microphone so it was way up by the ceiling over the center of the bed, pointing down. I set up two more mics off to the sides, and connected all the cables to a small mixing console. I was perspiring and worried I was making mistakes because, you know, Lori's tits. If she wasn't horny I sure as hell was, and I felt like an idiot for not changing into pants when I was home getting the equipment. My cock was bonered up again, long and hard, lumping the leg of my bathing suit. Lori noticed, of course.\n\n\"Rob,\" I said, \"can you put on that bathing suit you had on when we did the test? That one showed up nice in the pool light.\"\n\n\"It's in the laundry room,\" Lori said.\n\nRobert nodded and headed for the door. \"I'm on it.\"\n\nLori and I were suddenly alone, both of us topless, bare-legged, and aroused. She sat on the bed, glancing at various parts of my body while I adjusted the settings on my cameras. \"So I guess we're making a porn together,\" she said, smirking. She looked surprisingly relaxed, but a quiet intensity in her roaming eyes gave away something different. \"How long have you been doing video and stuff?\" she asked.\n\n\"Since college. High school, really.\"\n\n\"Nothing dirty?\"\n\n\"No. Like I said, guys like me just fantasize about this kind of thing. We never get to actually do it.\"\n\nLori smiled again, even more relaxed. \"How come you don't have a girlfriend?\"\n\n\"They avoid me.\"\n\n\"They do not,\" she said. \"You probably just get it in your head that you think they do, and that ruins it.\"\n\n\"Oh, beautiful and smart, huh?\"\n\n\"You don't really think I'm beautiful,\" she said, closing her body language a little, with a subtle arm and leg movement. The flush of pink was back, on her face and upper chest, and her nipples, already aroused, seemed to swell even firmer than before. \"It's probably like Rob says \u2014 big tits mesmerize men.\"\n\n\"And boys. Don't forget boys,\" I said, smiling as I took a healthy glance at her naked tits. \"Yeah they're...mesmerizing all right, but you're the whole package. Inside and out.\"\n\nLori squinted, her brow furrowing a little. \"Do you like older women? Is that a thing for you?\"\n\n\"I didn't used to, but I do now.\"\n\n\"Just from...me?\"\n\nI looked into her eyes and she looked into mine. She was sitting and I was standing, so her eyes were looking upward. Bedroom eyes. I held her gaze but thank God I have good peripheral vision, because Lori's astonishing tits and her dazzlingly suckable nipples seemed to glow with an inner light, and they heaved with her slow, deep breaths. I could feel my cock trying to lift \u2014 it was as hard and as long as it gets \u2014 and I watched Lori's eyes go there, to the big, prominent lump down the leg of my bathing suit, and then Robert's voice was in the hall, approaching. \n\n\"Found it,\" he said. \"I put it on and jumped in the pool. I'm supposed to be wet, too, right?\"\n\n\"Yeah, that looks good,\" I said, feeling the need for a calming deep breath of oxygen. \"Lori, maybe you should wet yours some more. You could do it in the sink.\"\n\n\"Wet panties. That's pretty sexy, huh?\" She got off the bed and winked at me when she passed.\n\n\"Damn,\" Robert said, watching her tits wobble as she walked past him. \"Walking around topless with the neighbor here. Did you get your horny juice flowing, hun?\"\n\n\"Oh yeah, I'm there,\" she said from the bathroom. \n\nI could hear the water running and I pictured her standing there naked, rinsing her panties under the faucet. When she came back she was soaked from head to toe. She'd been in the shower.\n\n\"I should do that too,\" Robert said, \"so we're even.\"\n\n\"Are we ready to...do it?\" she asked me.\n\nI nodded and tried to keep my grin from looking too lecherous. \"You look...perfect,\" I said. I wondered if she could see in my eyes that I really, really meant it.\n\n\"So where do we start?\" Robert asked, dripping wet after a few quick seconds in the shower.\n\n\"That depends,\" I said. \"Will there be a blowjob at the pool? Do you guys want to risk that, shooting it out in the open?\"\n\n\"That's up to my dear wife,\" he said. \"It'll be really late when we film it, right? Like three in the morning?\"\n\n\"Yeah,\" I said. \"I'm used to getting up at that hour, but you guys...\"\n\n\"We can do it,\" Lori said. \"Yeah, if that's the storyline we're going for, that's definitely what would happen. She'd blow him down there, and he'd pull her up here by the hand and fuck her really hard.\"",
        "I must have looked surprised, because Lori's eyes got wide and she looked worried. \"Is that...not...right?\" she said.\n\n\"No! I just love how you're getting into this,\" I said. \"Yeah, that's perfect. So we're at the getting down and dirty scene.\" I gathered my thoughts for a moment and tried to visualize it all. \"Okay, here's what we're doing. Since you're all nice and wet, we'll do the doorway angle. I'll move my camera...here, and you guys will come up the stairs and down the hall and land on the bed. That'll be it. I'll call cut and then I'll move my camera for the bed scene. Pretend you're excited, and anxious, and horny and everything else. Giggles would be good. Don't forget all the sound is being recorded this time, and never look at me or the cameras, okay? We'll do it two or three times, and I'll use the best one.\"\n\n\"Got it,\" Robert said. He reached for Lori's hand. \"Shall we make a movie, my dear?\"\n\nLori nodded and her eyes looked excited. I'm sure mine did, too. I had a moment of ecstatic clarity when I realized it was actually happening \u2014 my sexy couple wasn't backing out! I was directing a porn!\n\nI focused my thoughts, getting my mind in the game. We did the entry scene three times but, surprisingly, the first take was the best. I moved the camera and tried to picture my own movements, somehow getting myself from camera to camera during the scene without casting shadows or tripping over stands or cables. It all looked workable.\n\n\"The camera didn't see you guys tumble onto the bed, and I don't think I want you to. Oh, we fucked up didn't we. If there was a blowjob at the pool, Rob would be naked when you guys come up the stairs.\"\n\n\"You're right,\" he said. \"Okay, here goes nothing.\"\n\nHe took off his wet bathing suit and he was kind of small and limp. Disappointingly so.\n\n\"I wouldn't look like this, either, would I,\" he said, looking down at his shrunken penis. \"It's that clammy wet suit.\"\n\nI nodded and acted like a real director. \"Okay, well, you guys are porn stars now, so...Lori, fix that for him while I set up for the hallway shot again.\"\n\nLori sat on the side on the bed and Robert stood in front of her. I tried not to stare, but the sight of her morphing into a purely sexual woman was enough to stop me in my tracks. She had his cock in her mouth and her head was moving, slowly and sensually. Her hands caressed the backs of his thighs and his surprisingly good looking ass, and I heard her moan.\n\n\"Oh, baby,\" Robert said quietly, his hand rearranging Lori's messy wet hair. \"Do you like showing off for another man?\"\n\n\"Mm-hmm,\" she moaned.\n\n\"How hard should I be, Ev?\" he asked me, sounding a little breathless. \"It's happening fast.\"\n\n\"Hard is good. We'll just have to match it when we start the bed scene.\"\n\n\"I think I like this job,\" he said. \"How about you, hun? Wanna be a horny slut for a living?\"\n\n\"Mm-hmm,\" she said, nodding with her mouth full of hard cock. It was about as sexy a thing as I'd ever seen.\n\nRob's cock slid out of Lori's mouth and she breathed hard and deep, her face pink again with excitement, lust, and maybe a little embarrassment. She looked satisfied with her work. \"You asked me if I was horny earlier? Now I am.\"\n\nRobert's cock was big. Bigger than mine I'm unhappy to report, but it looked promising for the job at hand, and I was nearly trembling at the thought of watching it fuck Lori.\n\n\"All right \u2014 hallway scene before he loses it,\" I said.\n\nIt was a better take than the first three. Lori's horniness was written all over her. It was almost as if she'd broken though a mental barrier when she gave the nice blowjob. She'd let her inner slut out in front of me and I'm pretty sure she liked it. There was definitely a new energy in the air, and it all seemed to be radiating from her.\n\nI moved the camera into position for the bed shot. Robert's cock was still hard. Lori stroked it slowly with her hand, with a magical look on her face, like it was the most awesome thing in the world to be doing it right in front of me.\n\n\"All right,\" I said. \"When I call action, I want you to blow him some more. Sit yourself right...here, so I can get a good angle on it. Remember, don't look at any of the cameras. They'll all be on. I'll wave my arms to signal you but don't look at me. When you see me wave, pull him down on the bed, on his back, take off your panties and sixty-nine him.\"\n\n\"Oh, wow,\" Lori said. \"Do you know what that is, honey?\"\n\n\"I do,\" Rob said. \"Do you?\"\n\nLori gave him a look. \"How do you know about it?\"\n\n\"Porn,\" he said. \"I'm a guy, remember? I've tried to pull you onto me that way a couple of times, but you always chicken out.\"\n\n\"Really? Show me, so I know what I'm doing.\"\n\n\"Where do you want us to land, Ev?\" Robert asked me.\n\n\"Let's try diagonal,\" I said. \"While you guys are getting a feel for it I'll check my cameras and make sure it looks good.\"\n\nRob stretched out on his back and he reached for Lori. \"Head to cock, pussy to mouth,\" he told her.\n\n\"I noticed you're calling it a pussy now,\" she said to him. \"You're full of surprises.\"\n\n\"I need you to turn around, Rob,\" I said. \"Your head down here. That'll give me better angles.\"\n\n\"Oh, yeah. Gotta get the juicy stuff. My sweetheart's a wet one, and I'm not talkin' pool water.\"\n\n\"Oh my God,\" Lori said. \"Are we all going to be talking like sailors by the time we're done?\"\n\n\"Throw a leg over my head, hun. See how it works?\"\n\n\"Oh. I do remember you trying to get me this way,\" she said, mounting him awkwardly. She looked back over her shoulder. \"Oh my God. Two cameras back there?\"\n\nRobert nuzzled his teeth against her panty-covered pussy, and all the breath went out of her. \"Oh, Jesus!\" she said, holding his cock in her hand.\n\n\"Can I make a few suggestions?\" I said. \"Arch your back downward, Lori. It's really important. Otherwise you'll look like a monkey fucking a football. It makes the back view better, too. More...open.\"\n\n\"Oh shit,\" she said. \"This is for real. Are we going to be able to face each other again? Christ, I'm gonna blush beet red every time I see you from now on.\"\n\n\"That's okay,\" I said. \"I'll be blushing, too. Maybe you should try the mount and dismount a few times, so it looks like you've done it before.\n\nMy cameras were set, so I watched, and I marveled at how amazing Lori's ass looks in that position, even with the plain white panties covering her. I walked around the side, just to see the way her big tits hung, and I wasn't disappointed. She looked at me with a smirking smile.\n\n\"You're loving this, aren't you,\" she said, reading my easily read mind. \"Rob,\" she said, \"our neighbor is thinking dirty thoughts about me.\"\n\n\"So am I, hun,\" he said. \"Let's get this show on the road. I'm dying to eat some pussy.\"\n\n\"Oh-h-h,\" she moaned, when she felt his nibbling teeth there again. \"Okay. I guess...let's do it.\"\n\n\"Do a quick water splash in the shower,\" I said, \"but not too much. Keep that cock up if you can.\"\n\n\"The Viagra is working it's magic,\" Rob said.\n\nHe and Lori spent a few seconds in the shower, and when they returned and took their positions I called \"action.\" I had a looking-straight-at-it view of the blowjob, unlike my timid, voyeuristic view the first time. Lori looks remarkably comfortable sucking a cock, happy even, which is the opposite of the way the girls had seemed the two times I'd had it done to me. I let her really get into it, mainly because I just wanted to watch. Rob was moaning and Lori was, too. She sat on the edge of the bed with her knees spread wide. Rob was standing close in between them. As she mouthed his cock her hands toyed with the base of his shaft and his balls. He was a surprisingly good looking guy down there, and it was easy to see Lori liked every bit of him. I nearly moaned myself when she held his cock up against his stomach, licked the veiny underside of his long shaft and then licked and mouthed his balls. Then she held those up, too, and her tongue reached way under them, tickling him there, and I think I did moan. She shifted back to blowjob mode with her mouth on his shaft and I could tell she was sucking it tight as she moved on it. Damn! It was good! And then I waved my arms.\n\nLori caught sight of my signal in her peripheral vision and she placed Rob on his back on the bed just like we'd practiced, and then she broke the rule, glancing at me when she whisked off her panties. I didn't mind. I was finally seeing her in all her naked glory. On my computer screen at home I'd freeze-framed the quick flash of her pussy in the pool the week before, and it sure looked like she'd trimmed things since then. There was still some soft dark hair decorating her pussy, but not much of it. She swung her leg over Rob's head, and it took her a moment to remember to arch her back downward, but damn! Her ass is fine! I mean porn-worthy fine! I mean dream-about-it-for-the-rest-of-my-days fine! I wanted to jump up and down, and call my friends, and post an Instagram, and change my Facebook status to 'Porn Maker.' I was so thrilled by the sight of her ass and her pussy, and Rob's mouth on it all, I hadn't even checked my cameras. Thankfully they were rolling along without me, but I tried to get my head in the game. I had three angles to cut between, so I was free to zoom and pan without worrying too much about smoothness; it would all edit together and look good in the end. I checked the soundboard and all was well. I was glad of it because Lori was making wonderful noises. She was taking to sixty-nine like a duck to water.\n\n\"Oh ffuuck!\" she cried, clearly in the throes of it. She put a few breathless words together, asking Rob, \"When does your wife come home?\"\n\n\"Day after tomorrow,\" Rob mumbled, his mouth full of juicy pussy.\n\nLori sucked his cock for a moment and then, huffing through clenched teeth, she said, \"God, you really know what you're doing!... I'm gonna cum!... Oh, shit!... I'm gonna cum! \"\n\nThe quick orgasm in the pool that I'd watched a hundred times on my computer didn't prepare me for Lori's true sexuality. As she orgasmed, naked and spread open on top of Rob, her body spasmed and she ground her syrupy wet pussy hard across his moaning face. She tried to hold in her squeal at first but it howled free and sounded glorious. Her whole body moved with rhythmic energy. I glanced at the side-view camera and yes, Lori looked amazing \u2014 her back arched just enough to make her tits move against Rob's stomach. Her face looked so beautiful, rosy red and orgasmic, with half-lidded eyes and an open, huffing mouth. I was thinking I might call cut when it was over, but it wasn't over \u2014 the moment her orgasm waned she went at Rob's cock like she was ravenous for it. I'm sure she remembered that I was there, that I was watching her, but she was lost in something better. Rob was still eating her pussy, lapping up her bountiful juices, clit-tickling her with the tip of his tongue. She took his cock deeper in her mouth than I'd seen, flirting with throating the big thing, and then she did it, her head all the way down, her face red and her breath held, looking like she was going to burst, with a big, hard cock all the way up in her throat. She held it there, wiggling her nose from side to side on Rob's balls. He groaned loudly. I wanted to groan, too. \n\nLori gasped for breath like a drowning woman when she lifted her head, emptying her throat and mouth. Rob's cock was slippery with thick, shiny throat juice, and Lori's hand worked it, stroking the big shaft in a way that would have made me cum in an instant. And then she did it again \u2014 deep throat, easier this time, but still red-faced and all-in. She was wild. Beyond my dreams. Rob's mouth was relentless on her pussy and an orgasm convulsed her again, with her back arched deep and her head thrown back, her mumbled voice crying out, and I just about creamed my pants. I had to touch myself. Not inside my bathing suit but outside, on the hot, lumped surface of it, but it still felt like what I needed. I saw Lori sneak a peek at me out of the corner of her eye. She saw my hand kneading my hard lump like it was bread dough; she heard my breathy, nearly silent moans. Her head plunged downward again. She was a wild cock sucker. She ground her pussy on Rob's face again and in no time at all she was grunting like an animal and winding up for orgasm number three. I could sense it, the energy of it. She was deep throating and pussy grinding at the same time, something I don't think I've ever seen before in all my days as a porn watcher. Her sneaky eye was on me again, on my hand. I had the fabric of my swimsuit wrapped around my cock and I was stroking it. I knew the end game was messy but I couldn't stop. Lori was cumming again, her body spasming. Her head lifted and she gasped for air. Rob's cock was huge and shiny and alive, spurting cum in rocketing gushes, and Lori's mouth went to it again. She took the swollen cockhead between her lips and drank its spewing essence, and I came, too, with breathy gasps and a whispered moan, my fast stroking hand milking every drop from deep within me.\n\n-\n\nI emerged sheepishly from the bathroom, my bathing suit freshly rinsed out, toweled to a state of dripless wetness. I'd overheard a low murmur of quiet conversation when I was in there, and I expected a razzing from Robert, or maybe from both of them, or, even worse, a declaration that everything had gone much too far and I was to pack up and leave. But there were just pleasant smiles. Rob and Lori were both in their robes, reclined against the pillows on their bed but not snuggling; they both had that glow about them that people get after good sex. Lori, though, looked shy again.\n\n\"You must be tired,\" she said, her voice soft. \"It's way past your bedtime on a workday, isn't it?\"\n\n\"We were just saying,\" Robert said, \"why don't you leave the equipment set up.\" \n\n\"It'll be way easier than setting it up each time, right?\" Lori said. \"If you've got any openings in your schedule the next few nights maybe we could...keep at it.\"\n\n\"What my horny wife is saying is, can we do it again tomorrow night?\"\n\nI looked at Lori and she was blushing. Shy and adorable. It was me who should have been blushing, but it was clear that, even with my incredibly inappropriate behavior, Rob and Lori had enjoyed the experience.\n\n\"We were saying, you must have magic powers or something,\" Rob said. \"You show up in the neighborhood and become our friend and we have the best sex we've ever had.\"\n\n\"No magic. You guys are...awesome.\" My eyes were on Lori when I said the word 'awesome', and I think she blushed even deeper. I meant it. I'd never seen a woman let herself go the way she did. None of my few girlfriends ever did, that's for sure. I wanted to praise her, and I just happened to be the director, so I did. \"I think the footage is going to be amazing. I was surprised by how real you guys looked. You didn't look nervous or inhibited at all.\"\n\n\"I had it easy, down underneath,\" Rob said, smirking. \"No acting involved. Did Lori look good? I mean, I know she does, but...natural, I mean?\"\n\n\"Oh, yeah. Fantastic,\" I said. \"I think it's gonna be great. So, you guys had never...?\n\n\"That position? Nope. I'm kind of embarrassed to admit it,\" Robert said. \"With kids around sex isn't a big recreational sport, and now, without them here, I guess we've been sort of complacent and boring.\"\n\n\"Three orgasms,\" I said, letting my mind drift back to it. \"That was...\"\n\n\"Awesome, right?\" Rob said. \"Lori's always had the gift. I call it a gift. My, shall we say, previous relationships had trouble getting there. With Lori it's never work; it's always fun.\"\n\n\"Yeah, that's what a girl wants to hear, a conversation about old flames' orgasms,\" Lori said, smirking. \"Let's let this handsome young man go home to get some sleep before I get embarrassed again.\"\n\nI packed up my cameras to take with me, and I moved a few minor things out of the way, but the bedroom looked like a porn studio when I left. It was weird, and wonderful. I was making porn. My crazy fantasy had come true.\n\n\u2014 \n\nThe video on my computer \u2014 video I'd shot with my very own hands \u2014 was extraordinary. I'm a realist and I knew that I was seeing Lori through rose-colored glasses because I had feelings for her, but still, the sixty-nine scene was pretty awesome. Raw and natural. Those qualities are vital to good porn. I think so anyway. That and a female star who has real, beautiful orgasms, or at least can fake them in a convincing way. My star, Lori, doesn't fake anything. She's as real as it gets, a fifty-one-year-old who makes me hard as soon as I see even a single frame of video of her. \n\nI spent the morning poring over the files, making adjustments, tweaking this and that, trying out some rough cuts from camera to camera to make the scene flow. I'm pretty good at it, if I do say so myself; I even won an award for one of my documentaries and went to New York City to receive a nice little trophy and some prize money, money that I used to buy some snow tires for my car.\n\nWorking on the Rob and Lori movie was way more fun than a documentary. I played with some different editing decisions, but the big ones would wait until I had all the different scene files on hand. Rob called me on the phone to see if I was interested in getting started in the early afternoon and working right into the evening. A full day of naked Lori, with me calling the shots. Yes please!\n\n\u2014\n\nI cleaned myself up, readied my cameras, and walked over to the poolside patio, with my laptop tucked into one of my camera bags. \"Do you guys want to see the dailies,\" I asked, \"or would you rather wait for the finished product?\"\n\nThey pondered the idea, talking to each other in the quiet, almost whispery way that they sometimes do. \"Lets wait,\" Robert said to me. \"We want to see your movie.\"\n\nI smiled. It was the answer I was hoping for. Lori's pretty eyes looked my way. She was shy again. She wasn't a porn star; she was an architect's wife, a mother, a neighbor. Her shy eyes held secrets. They sparkled as she kept her gaze on me. She and I had had sex together, in a way. We were six feet apart when it happened, yes, but we'd orgasmed together, each of us feeding off of the energy of the other, just as real lovers do.\n\n\"Did you get rested?\" she asked, sweet and motherly. \"I hope we didn't keep you up too late.\"\n\n\"No, it was fine. I...sat up a while, going through each of the camera's files,\" I admitted.\n\nLori tried to keep her face neutral, but her eyes gave away her embarrassed happiness. \n\n\"We were dying to try some more sixty-nine this morning,\" Robert said, \"but we wanted to save our energy for tonight. We really loved it, though. Lori says I go down easy that way.\"\n\nLori blushed. \"It must have been invented by a woman,\" she said. \"It's so...good.\"\n\nIt was just after lunchtime. We sat at the round table by the pool, in the shade of a big umbrella. Lori, maybe needing a quick break from the blushingly frank conversation, went to get me a cup of coffee. I watched her walk away, into the house. It was the first time I'd seen her in pants since the day she brought me cookies, the day after I moved into the neighborhood. Robert saw me looking at her.\n\n\"She's got a great ass, doesn't she?\" he said. \"She gets pissed at me when I say stuff like that, but we're guys, and anyway, you know what she looks like unwrapped.\"\n\n\"It's kind of...weird, isn't it? That I know that?\" I said.\n\n\"You got that right,\" Rob said. \"We were talking about it last night after you left. This is so out of character for us, and yet...it's happened in such a nice, comfortable way. We can't figure it out.\"\n\nRob looked mellow and untroubled, and I was glad of it. I watched Lori return with my coffee in her hand, her sleek but meaty thighs tightly packed in her capri length pants, her big bosom moving gently under her white cotton button-up shirt. Her feet were bare, the way I like them.",
        "\"It was so funny waking up surrounded by lights and wires and microphones,\" Rob said. \n\n\"I'm glad the cameras weren't there,\" Lori said. \"I'm not a pretty sight in the morning. I did my makeup the same today; I should probably do that, right?\"\n\n\"Oh, yeah,\" I said. \"That's a good idea.\" It gave me a chance to look at her face a little more openly and blatantly. It makes me happy, Lori's face. It's pretty in a, dare I say, motherly kind of way. I guess that's what happens when you get to be fifty and beyond. Rob looks fatherly. He's fit, though; not at all heavy. A little soft, but not flabby. But Lori's face is special, to me anyway. I love how I can read it, and how her eyes sparkle, even in the shade of the big umbrella.\n\n\"You didn't wear your swimsuit,\" she said to me. \"We'll be taking some breaks, right? I'm not going to be able to...go for hours on end.\"\n\nHer readable face blushed again, the way I love. She was a shy porn star, and I was beginning to think that was the best kind.\n\n\"Speaking of going at it,\" Rob said, \"what do you have planned for us today?\"\n\n\"Oh. I was thinking doggy style. We should definitely get that in the mix. It's a classic, and cowgirl, too. We'll see how the time goes today. Maybe some other things.\"\n\n\"Nice,\" Rob said. \"We're looking forward to all of it. We told you about the kids, and how things have gotten a little routine. We've been just missionary and Lori on top for years now, with some oral to spice things up. Not wild oral like last night. I love what you call cowgirl, but Lori rarely sits up that way.\"\n\n\"Are we giving away all our secrets?\" Lori asked, smiling softly like she was okay with it. \"This is like sex counseling or something.\" She sipped her coffee and Rob went silent. \"I'm not complaining,\" she said. \"Go on. Tell him what you want to tell him.\"\n\n\"I was just going to say that doggy style was a position we used during Lori's two pregnancies,\" Rob said. \"It's a way you can keep a bit of a sexlife going, but then, after the births, I guess we sort of associated it with that and stopped doing it. It's a classic, you say, huh?\"\n\n\"Oh, yeah,\" I said. \"Definitely. It's a porn favorite.\"\n\n\"Is it what you like, when you're watching porn?\" Lori asked, looking genuinely curious.\n\nI nodded and I felt myself blushing. Lori looked quietly happy when she saw it.\n\n\"Here I thought you were a tit man, and it turns out you're an ass man, too,\" Rob said, smirking. \"No wonder last night was so good...for all of us.\"\n\nIt made me uncomfortable knowing that he knew that watching Lori had made me cum. I scolded myself, as I sat there, for being so unprofessional.\n\n\"Well, what do you think?\" he said. \"Is the production company ready to do some work?\"\n\nLori laughed. \"Work? It's the best job you've ever had, mister.\"\n\n\"I know!\" he said, smiling. \"Let's punch the clock and make a dirty movie!\"\n\nI followed them, into the house, up the stairs, to their bedroom. It surprised me when we walked in, how different it felt being there during the day, bright sunlight streaming in through the windows, the bed neatly made, with none of Rob and Lori's top-shelf alcohol in my system.\n\n\"There's a few things we need to do,\" I said, looking around. \"I need you guys to pull the shades and the curtains and, if you have any dark colored blankets, hang them over the windows. We need to make it nighttime again, as best we can. While you're doing that I'll get the cameras set up and I'll use last night's files to get the room and the bed looking the same.\"\n\n\"We're on it,\" Robert said. \n\nWe all scurried around like a real crew, and as we got closer and closer to go-time I could feel the energy level rise in the room, the way it does in the TV studio. It was way different, though, because Lori, in her tight capris and her bare feet, was looking sexier and sexier to me, and I knew the time was coming when I was going to be able to tell Rob to put his big cock inside her.\n\n\"You guys both need wet hair,\" I said, \"but you can towel off your bodies and get the hair so it's not dripping.\"\n\n\"Oh, right!\" Rob said, smiling. \"I almost forgot I've got a blowjob in my pool to look forward to, don't I. I've always wanted to get frisky out there. Maybe it'll start something.\"\n\n\"Yeah, we'll see, you old horn-dog,\" Lori said to him. She smiled and winked at me. Was it a clue, telling me to keep my eyes looking out my back window in the future? Maybe my horny mind was just imagining that kind of delightful voyeurism.\n\nWe all finished our preparations and then it was time. Lori and Rob emerged from the bathroom, Lori slipped out of her robe and I watched in awe as her naked body reacted. A blush pinkened her face and the upper part of her chest, and goosebumps rose on almost every bit of her. Her nipples came to life in that stunning way that they do, and her posture straightened, lifting her amazing goosebumpy breasts higher. All the breath went out of me, but I tried to maintain some composure. Lori didn't stare, but she watched me. I think she liked seeing how she befuddled me. \n\n\"We can get all fancy and try and make the scenes flow into one another,\" I said, \"or I can just use editing to dissolve from one position to another. I think that'll be fine, and it's easier.\"\n\n\"It's your vision, Ev,\" Robert said, standing there naked like it was a normal thing to do. His cock was long, and half-hard already, aided by Viagra no doubt. \n\nTo keep visual continuity in all the scenes, I held the laptop in my hand and looked back and forth between it and both of them. \"Is it all right if I...fix your hair.\"\n\nLori nodded, so I went to her. I couldn't help but think, and be embarrassed by the thought, that we probably should have done this when she'd still had her robe on. But here we were, inches away from each other, her fully nude. Touching her sent a jolt of electricity through me, and I think through her, too. I had to finger her hair pretty thoroughly to get the clumping similar to yesterday's look, and both of us seemed to enjoy it; Lori's eyes were all sparkly again. I thought of asking her to do Robert's hair, but I wanted to be the one to do hers each time, so I did his, too. It was awkward, with his big cock looming between us. I finished quickly.\n\n\"The energy level was high where we left off last night,\" I said, \"so let's jump right into doggy style fucking. Lori, get yourself into position, and I'll see where you need to be for the cameras.\"\n\nShe got onto the bed silently, on her knees. She went down on all fours, hands and knees, and her big tits hung under her like a dream. My tight boxer-briefs and thick bluejeans started to do their work, holding my growing cock at bay. I made my way around to all the cameras to have a look-see, and asked her to move closer to the center of the bed and turn a little, diagonally.\n\n\"Good. Yeah, that's a good spot,\" I said. \"Now, if you don't mind, I've got some more suggestions about your body position.\"\n\n\"Show me how it looks good,\" she said. \"I asked Rob last night; he says you can adjust me.\"\n\nThere was a smoldering, quiet excitement in her voice and her eyes when she said it, and I heard it in her breathing. I looked at Rob.\n\n\"Go for it, brother,\" he said. \"You're the expert.\"\n\nIt was an assignment I hadn't even dreamt of. Hands-on direction, with naked Lori. I wasn't sure if it was the right thing to do, but I moved in anyway, slowly and tentatively. I put a knee on the bed next to her and I leaned in.\n\n\"The back arch is really important,\" I said, feeling the warmth of her skin as I pushed the curve of her spine downward. \"I know it sounds dumb, but it makes all the difference. So, you probably know all this from when you used to use this position, but...there's three ways you can go \u2014 up on your hands, down on your elbows, and all the way down with your shoulders and head on the bed. They're all plenty hot looking, especially if your back's got a nice curve to it, like this. When you're up on all fours like this your...tits look amazing, and when you're down your ass does. We want to play to all your strengths, visually, so...equal time maybe, if you think of it.\"\n\n\"Down...like this?\" she asked, settling herself with shoulders down on the bed, her head comfortably sideways, and her ass up proudly, beautifully ready for a doggy style entry. \"Does my back look good?\"\n\nI pushed it down into an even lower arch.\n\n\"Oh, wow,\" she said. \"Really? I feel like I'm all ass.\"\n\n\"That's the idea, hun,\" Robert said. \"I'm pretty sure this is the ass lover's position, and I'm fuckin' loving it. You look unbelievably hot.\"\n\n\"What about my legs,\" she asked, looking up at me sideways, with sexy eyes.\n\n\"That's all variable,\" I said. \"Knees tight together will make your...pussy look tighter, and then you can widen them as much as you want. You can even go prone, with legs together, or legs wide.\"\n\n\"Prone? Show me.\"\n\nI put my hand on the side of her ass, round and smooth and warm, and I took hold of her leg near her knee and pulled it to spread her wider. She matched it with her other leg. We went wider, and wider, until she was flat on her belly with her knees out as wide as she could get them, with her feet and ankles up in the air. Her fantastically visible pussy glistened with wetness, begging for a cock.\n\n\"Oh my God,\" she said quietly. \"A guy can...fuck me this way?\"\n\nI pushed down on her back and she got the idea, arching it down into the soft mattress, rotating her ass upward, beautifully fuckable.\n\n\"Wow!\" she said quietly. \"This is a position! \"\n\n\"Oh, yeah,\" Rob said. \"We're doin' that.\"\n\n\"Rob, I want you to think about those same things,\" I said to him. \"Think about the line of your back. There's nothing uglier than a naked guy who's all hunched over like Quasimodo.\"\n\n\"Are you guys done looking at me,\" Lori said, smirking shyly. \"Can I get up now?\"\n\n\"I get to look at you every day, hun, but Ev might want another minute or two.\"\n\nShe wiggled her beautiful wide-spread ass as she got her knees back under her, and she sat up to let her blood redistribute. She was pink all over. Have I mentioned Lori's tan lines yet? She's beautifully two-tone; a deep tan from weeks in the sun, with the creamiest, milky-whitest breasts, punctuated with those big, dark areolas that make me crazy. Her bikini bottom area is milky white, too, and her pussy is dark fleshed and big lipped, with puffy mounds either side of it. I'll be dreaming about every inch of her for months and probably years. \n\nI gave Rob some direction about the penetration. Slow, I said. Tease her. Lori looked bashful again, but ready. I told them we might need to do some pure penetration scenes, with closer-up cameras, and she moaned a little.\n\nI called \"action,\" and at long last I heard the beautiful noises Lori makes when a big cock fucks her. I had so much to think about I could barely keep up with the plain and simple watching I wanted to do. I wanted to soak it all in, the live event, the first real live fucking I'd ever seen in person. And it was my new favorite woman being fucked.\n\nShe was up on all fours at first, her moans escaping her mouth on warm breaths as the fucking commenced, her shoulders back and her back arched just like I'd instructed. Her neck was elongated like a fashion model and her face looked happily surprised. Maybe she'd forgotten how deep a man goes in that position, or maybe she was surprised by how much her tits were swinging, with a camera directly off to her side to capture the beauty of it. Or maybe she was surprised, yet again, to be doing it all with me standing there.\n\nIt was beautiful fucking; there's no more succinct way of putting it. Rob knows his stuff, and his big cock thrust into Lori's pussy deeply, with a smooth, mid-tempo rhythm. Lori responded the way I wish every woman would, letting her whole body in on the fun, her whole mind. When she gave herself over to it, she was there, floating on the lifting wave. Dropping to her elbows, her tits kept swinging, her big nipples grazing the bedsheet, and I imagined what she was feeling, the tingle of the friction that the cool cotton put into them. Nipples fascinate me, and Lori's are spectacular. \n\nRob's fucking reached a galloping pace, Lori's moans coming freer and freer, lovely and louder, and she began to gasp for breath. Her hands started to give away the intensity of the fire building inside her, fingers clutching at the bed sheet, knuckles whitening. Robert's moans joined with hers and I glanced at the microphones, glad they were there to capture it all. It was Lori I wanted to hear \u2014 her mouth sounds, and her pussy sounds; wet noises and squishy sounds; the sound of a big cock fucking her depths, and the beguiling whimpers of her building orgasm. She dropped lower, shoulders on the bed, head turned away from me, arms outstretched and white knuckles gripping. She fucked Robert as much as he was fucking her, her womanly hips swiveling under his holding hands, meeting his thrusts; her whole body was writhing as the orgasm rose up within her. She lifted her head and turned it and her amazed-looking face was there, breaking the rule again, her eyes looking right into mine. I reached for my hard, aching crotch again because I knew she wanted me to. Robert was fucking with full-bodied energy, his body slapping loudly against hers, and he saw where my hand was. He wasn't hidden underneath her this time, he was up, fucking and moaning, watching her watch me when her orgasm overtook her. It was a special one, an orgasm different than the ones she'd already shown me. Rob fucked her hard, with thudding energy, and she writhed with it, riding, floating, still fucking. Her hips had energy that wouldn't quit, and her breathy gurgles and gasping, inward screams sounded like she looked \u2014 wide eyed, darkly flaming, a lusty woman just learning how amazing it can be.\n\nLori's body quieted, her eyelids drooped, and Robert continued fucking her, slower, easing her down from her lofty peak. \"You're amazing,\" he said to her, lovingly breathless. \"I want to fuck you a thousand times.\"\n\nI smiled. It was a perfect line and I wondered if he'd planned to say it. Lori saw me smile, still watching me with her half-lidded eyes, and she smiled, too.\n\n\"Cut,\" I said, lost in the beauty of her. She was getting to me again.\n\nLori moaned when Robert backed his cock out of her. It looked more like a porn cock than ever, slippery, and reddened, and even bigger than it'd been before, truly porn-worthy, and Lori's glistening pussy looked ever so succulent.\n\n\"You didn't cum,\" I said to Rob. \"You're a better man than me.\"\n\nLori's eyes widened, still looking into mine. \"Did you? \" she asked.\n\n\"No!\" I said, embarrassed. \"I meant, if I'd been......I would have.\"\n\nHer eyes flared and her smile changed. Happier, maybe. Her head was still down on the bed and her ass was still up. She looked like she was in a fuzzy dreamland, and Rob looked like he was there, too, stroking his slippery cock slowly with his hand.\n\n\"Rob, you good to go?\" I asked, quickly moving one of my cameras.\n\n\"Always,\" he said, breathing deep.\n\n\"Get back in her, just like that, and fuck her until she's down prone, flat on her stomach like I showed her. Is it okay to cum inside her?\"\n\nHe and Lori both nodded.\n\nI said, \"Do it, but not too deep, you know what I mean? And then, after you cum, pull out and move out of the way. Lori, as soon as Rob's out of the way, keep things spread open wide so there's a good view, and see if you can squeeze some of the cum out of you, with just your inside muscles. I'll be zoomed in. It's called a cream pie.\"\n\n\"A what? \" she giggled.\n\n\"A cream pie. Trust me. It'll be great.\"\n\nI called \"action\" and Lori moaned so gutturaly when Rob's hot cock bottomed out inside her I got goosebumps. The close quarters of our intimate little porn shoot felt warm with humidity and I could smell her sex. Soon Lori was down flat on her stomach, prone, with her thighs spread wide and her feet in the air. She grunted with each of Rob's thrusts, each time he bottomed. Her ass was turned up, so sexy and fuckable, and she was limp, with her arms at her sides, like a very happy ragdoll. I think Rob liked it. His moans matched her grunts and soon he was giving it to her hard, flexing the big mattress with each of his powerful thrusts, making the bed beg for mercy. Lori shrieked, \"Oh!... God!... Oh!... God!...\" over and over. The room felt overloaded with energy, and Rob kept at it, hard fucking that was wonderfully intense. Lori absorbed it beautifully as the energy built, and built, and built, but then she seemed like she was at the limit of what she could take. Rob bellowed loud and his quick thudding thrusts changed in rhythm. He wasn't as deep and he was cumming, letting Lori's squeezing pussy milk his pulsing cock. His face showed the ecstasy of it, and then he was out, and he moved away, and I zoomed in with my camera's lens, slowly, smoothly. The muscles in Lori's thighs twitched with lingering orgasmic energy; she'd cum again, maybe more than once. She moaned quietly, my microphones capturing the spine-tingling sound, my camera's frame nearly filled with her shining wet pussy and the tender flesh around it. It looked alive and raw, and then I saw it \u2014 Rob's cum, milky and oozing, leaking out of her.\n\n\u2014\n\nI'm sure a psychiatrist would have had a fascinating time probing the minds of the three of us during that two week period in our lives. After the exuberant energy and wide-eyed thrill of the doggy style and prone position fucking scenes we'd just shot, two of the three of us went all bashful again. Robert was the one who didn't succumb to it. He walked tall, as usual, and his voice was the same confident one that I imagined him having in the boardroom at work when he was winning building contracts. He wasn't at all arrogant, but after the session he had the air of a man who'd just had great sex with his good woman. It was interesting how sharing it all with me seemed to suit him, and I wondered if I'd be anything like him if I was the married one and he was the camera-wielding neighbor.\n\nLori, on the other hand, turned bashful and reverted to her mothering instincts. She put on fuzzy slippers and a robe, and she cinched it tight. I was quietly fiddling with my cameras when she emerged from the bathroom with her makeup touched up and her hair brushed out. Her face and her upper chest were still blushed with inner heat, and her voice was quiet and soft and lovely.\n\n\"I'll make us some dinner,\" she said. \"Evan, do you like chicken parmesan?\"\n\nRob put on the clothes he'd started the day in, a pair of old shorts and a comfortable old polo shirt, and the three of us went downstairs. He and I chatted in the kitchen, about the colleges we went to, while Lori started her seemingly effortless food preparation. It took a while before she and I made solid eye contact with each other. It happened after Rob had drifted away, to the bar to make us drinks, leaving Lori and me alone in the kitchen. \n\n\"Did you have fun at college?\" she asked, picking up on the conversation she'd been listening to. She was turned away from me, facing the two pans and one pot she had going on the stove.\n\n\"Oh, sure,\" I said. \"Yeah, it was great.\"\n\n\"Did you lose your virginity there?\"\n\nI smiled. \"I did, yeah. High school was a washout in that department.\"\n\n\"What was she like?\" Lori asked, still facing her sizzling pans and bubbling pot.\n\n\"Really skinny, with glasses. A book reader, like you.\"\n\n\"Skinny's not like me.\"\n\nI felt a flush of heat rush through me. \"You're...a woman. She was a girl.\"\n\n\"You must have a lot of sex now,\" Lori said. \"You know all the moves.\"\n\n\"No,\" I said. \"It's been months, actually. Close to a year if I'm being honest. I told you, I watch a lot of porn.\""
    ],
    "authorname": "riverboy",
    "tags": [
        "sextape",
        "neighbor",
        "swingers",
        "pool",
        "newsroom",
        "wife sharing",
        "star trek",
        "amatuer porn",
        "footjob"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-neighbors-12"
}