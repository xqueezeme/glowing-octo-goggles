{
    "title": "An Unexpected Romance Ch. 154-165 - Final",
    "pages": [
        "Chapter 154\n\nCoach Frost sent the equipment manager to the stands for a message to Michael's parents.\n\n\"Coach Frost wants you to know, Mr. Young. Michael passed the concussion test. He'll have 4 to 5 stitches after the game and a large bruise on his face.\"\n\n\"Thank you. Tell Coach Frost, thank you,\" replied David. Cathy moaned in gratitude.\n\nTexas Tech added a run in the bottom of the 8th. The score... 5-0.\n\nThen, Michael came out of the dugout for the top of the 9th.\n\nThe roar and applause was deafening. Larissa began to cry and Angela had to take her under the stands to get away from the noise.\n\nJames chuckled. \"He looks odd with that white patch under the eye,\" he thought.\n\nIt didn't take Michael long to end the game. Eight pitches. Three outs. Two infield grounders and a foul out pop up caught by the first baseman to end the game.\n\nAgain, the crowd showed their approval.\n\nIf not for the single hit by the Wildcats, it would have been a perfect game.\n\n28 batters. 27 outs.\n\nJames was very impressed. And smiled.\n\nAngela had told James she would meet him at the concession stand after the game. When James finally reached her, she said, \"What happened after we left?\"\n\n\"Eight pitches is all it took. Two infield grounders and a foul out. One of the best games I've ever seen,\" he mused. \"I'll take Larissa, now.\"\n\n\"Thank you,\" she moaned. \"My arms are killing me.\"\n\n\"The players meet their families over there behind the third base dugout. Would like to go with me? I would like to congratulate Michael.\"\n\n\"Yes, I want to hug him, too. Larissa, do you want to see Michael?\"\n\n\"Ya.\"\n\nChapter 155\n\nIt took Michael a long time to come from the training building. He was being interviewed by the local press and TV stations inside the building.\n\nWhen he emerged from the building, a roar of approval went up. Along with his girlfriend, every teammate, parent, girlfriend, and fan wanted a word with him. He smiled and thanked each one, asking them their name, if he didn't know them. The cut he sustained in the 8th inning was clearly covered with gauze, his cheek swollen.\n\nJames and his 15 month old, Larissa, stood on the outside of the crowd and watched with smiles. He had been speaking with Tech fans and parents while waiting for Michael. Angela was with Cathy, holding her arm while waiting for Michael.\n\nOut of nowhere, Pablo Ortiz walked up and stood next to James.\n\n\"What do you think?\" he asked, with a nod toward Michael.\n\n\"Well... It's not every day you see a one hit shutout,\" James replied.\n\n\"I know. I should have expected something like this from him, but not this soon. He's been pitching well this season. Getting better each week. But, I didn't expect this tonight,\" Pablo offered. He then turned to face James.\n\n\"We end conference play in Norman next week. Then the conference tournament in Oklahoma City. Will I see you, and your pretty daughter, there?\"\n\n\"I don't know. I don't have plans right now,\" James offered.\n\n\"OK... Make plans for the national tournament. We're ranked number 5 in the country,\" he offered, as he waved and walked away.\n\nWhen Michael emerged from the crowd, he held his mother in an embrace. Angela, Emily, and Katie began smiling with joy, and gave him a hug also. Angela, the girlfriend, did, too. David hugged him as well. Grandpa Young shook his hand.\n\n\"How bad is it, Michael?\" His mother asked.\n\n\"They want me to go to the hospital for a precaution. Will you come with me?\" he asked.\n\n\"Yes... Yes, I will come with you,\" she sobbed. \"You were wonderful, tonight, Son.\"\n\n\"Thank you, Mom. I felt great. Like never before,\" Michael offered. \"I want to say something to Uncle James, then, I'll be right back.\"\n\nAs he left his mother and began walking toward James, Angela, his girlfriend, tried to follow him. He stopped her and said with a strained and painful smile, \"Just me and Uncle James this time, Angela. I'll explain later.\"\n\n\"OK,\" she answered, with a little disappointment.\n\nAs Michael approached, James barked, \"What have they been feeding you here?\"\n\nMichael tried to smile, but, it was too painful. James laughed at his pain.\n\n\"Congratulations, Michael. A game I won't soon forget,\" he offered.\n\n\"Ya eh ma,\" offered Larissa.\n\nMichael tried to smile to his tiny cousin, but held her little hand in gratitude.\n\n\"Thank you, Uncle James,\" Michael replied. He dipped his head to gather his thoughts, then looked James in the eye.\n\n\"I haven't forgotten that morning at the breakfast table. I've thanked you for what you have done for me, but tonight... You deserve another. I told you that morning I wanted to play D1 baseball. It wouldn't have happened if not for you.\"\n\nJames nodded and did a great job of holding back a tear or two of joy. Flash backs of David and Cathy helping him when he was a young baseball player came and went.\n\n\"You're welcome.\"\n\nChapter 156\n\nAngela watched Michael approach her husband; Larissa in her father's arm. She glanced around and found nearly every parent, teammate, girlfriend, brother, and sister standing in silence to see what was about to happen. They knew the two men were uncle and nephew.\n\nAngela suddenly realized Michael was no longer the awkward, tall, and lanky teenager she knew from high school, just three years ago. He looked and stood just like James. Both men tall, masculine, and athletic. Dark hair and dark brown eyes. Square jaws. She began weeping in joy when she saw the two men shaking hands, and James nodding his head to Michael. She turned to see Cathy weeping, too, with her hands over her mouth, and nodding her approval.\n\nShe tried to run to James to collect Larissa, but was cut off by photographers and fans taking photos of the two men together. She tried to push herself to the front, again for Larissa's sake. It took her a full minute to reach James, who smiled when she arrived.\n\n\"I'll take Larissa now,\" she offered.\n\nJames gave Larissa up... Reluctantly.\n\nChapter 157\n\nWith his 4 month old son, David, in his arms, asleep, James was telling a tale about their cousin Michael. Listening, but often distracted, were Larissa, nearly 3, and Cynthia and Margaret, nearly 2. James paused from his tale, to reflect on his daughters who were listening to his words.\n\n\"I will die a fine death,\" he thought. \"These little girls are killing me with the eyes their mother has given them.\" He nodded his head in gratitude for being their father.\n\nGathered around their Daddy's recliner, the girls listened as the tale continued, on this December evening after supper.\n\n\"As I mentioned, Michael had dominated the opposing teams for three weeks. In the final game in Omaha, Michael got the start he had dreamed. The Stanford Cardinal didn't have a chance. Already beaten in the first game of the final series, 12-2, the Cardinal had to face the unanimous college pitcher of the year, Michael Young.\"\n\nLarissa let out a cute little gasp and her father chuckled as he continued with a dramatic voice.\n\n\"Michael pitched one of the most famous games in Omaha history. He put out 21 straight batters. Not one, mind you... Not one batter was allowed on base. He struck out 5, his infield put out 14, and his outfield put out 2, for a total of 21 outs. Not one hit allowed. Not one walk allowed. Not one hit batter allowed. Not one error allowed. His team had scored 6 runs in those 7 innings. In the end, Michael's coach, Coach Frost, felt he needed to come out, and put in the Texas Tech ace reliever, Martin Post.\"\n\n\"Why, Daddy?\" ask Larissa.\n\n\"Coach Frost is a sly coach, Larissa. You see, Martin had a slider that broke 3 feet and batters swung at it so hard, they nearly fainted!\"\n\nAngela, listening from the kitchen, nearly died with laughter. \"Don't you think there is a little too much imagination going on in there?\" she yelled from the kitchen.\n\n\"Don't listen to your mother, Larissa. I saw a batter nearly faint at Martin's slider. Anyway, Martin did the same thing your cousin Michael did. He put out the next 6 batters with six strikeouts, and one of them nearly fainted!\" he clucked, with emphasis on the fainted.\n\n\"Did Michael win, Daddy?\" asked Larissa.\n\n\"Yes he did, Larissa. Texas Tech won their first national championship in baseball. Never in Omaha history, had a team put out 27 straight batters as Michael and Martin had done. They are now famous college pitchers, and it's only been... What, Mama? Six months since the game of the century?\"\n\nAngela came into the living room chuckling. \"OK, Daddy. It was phenomenal what Michael and Martin did, but aren't you adding a little drama to the fainting part?\"\n\n\"I don't think so,\" he groaned. \"That last batter fell to the ground trying to hit that slider, ending the game. I say he fainted.\"\n\nChapter 158\n\n\"Hello, Brenda. I was thinking of you today. You and I haven't seen each other in two months.\"\n\nJames was checking the pens of Angela's prize bulls. Making sure they looked healthy on this cool January morning.\n\n\"You'll be seeing me soon,\" she offered. 'I'm coming to Texas to see you and Angela. And, those precious little girls and handsome son you have.\"\n\n\"Great! You'll be staying with us. No arguments about it,\" he barked.\n\n\"I planned on it,\" she quipped. \"You have an appearance at the new dealerships in Lubbock and San Angelo. And the grand openings at the Pizza World shops in San Antonio. Two weeks from Friday. I'm taking the week off to stay with you after the appearances.\"\n\n\"Brenda... The kids ask about you all the time,\" he offered.\n\n\"Thank you. They are so cuuuuutte!\" she giggled. \"OK... Business... Mr. Turner has a message for you. Today, you will be receiving a phone call. You are to take the call because it is important. Don't ask me why or who, because I don't know. Carry your phone with you all day today so you can answer. The area code from the caller is 992.\"\n\n\"Not even a hint?\" he asked... concern in his tone.\n\n\"Nope, Mr. Turner just smiled and said don't ask questions,\" she quipped.\n\n\"OK... Angela is looking forward to seeing you. And, I'll tell the kids.\"\n\nChapter 159\n\nAngela was peering out the kitchen window watching James unsaddle Youngster from the day's ride over their 890 acres. Cynthia was standing and holding onto her leg for balance and asking for a piece of weez, aka, cheese. And Margaret was playing with Larissa. They had toy dinner plates and cups scattered across the kitchen floor. Of course, Larissa was giving Margaret instructions. David... he was taking a late afternoon nap.\n\nAs James left the stable for the house, she noticed how gray he had become. She could see it, even with his hat on from a distance. It didn't make him look older, but, it did make him look... a little sexy and handsome, she thought.\n\nShe also noticed his demeanor as he approached the house. \"Something's happened,\" she thought.\n\nAs he stepped onto the back porch and shook the dust from his boots and clothes, she stepped outside to meet him with Cynthia in her arms.\n\n\"How are the bulls?\" she asked.\n\n\"They're fine. Same as last week,\" he announced. \"I set out feed, just like you asked. I also checked the steers on the north side. They seem fine, too. I did what you told me to do. May I have a kiss from you and the pretty girl in your arms?\"\n\n\"I don't know,\" she barked, with a giggle. \"You're all dirty.\"\n\n\"Dah dah!\" chirped Cynthia, with her arms extended toward him.\n\n\"She wants me,\" he glared seriously.\n\n\"Don't do it, Cynthia. He's filthy!\" she quipped.\n\n\"OK... I'll take a shower. But, there better be kisses and hugs waiting on me when I get out.\"\n\nChapter 160\n\nAll of his babies were asleep. He knelt at the side of Larissa's bed and kissed her a fatherly kiss on the cheek.\n\n\"Mmm,\" she cooed, as she rolled onto her side, and fell back to sleep.\n\nHe knew, at that moment, had it not been for the wreck in Kansas City, and the shortening of his baseball career, this little girl would not be in his life. He would not have met her mother.\n\nA tear of joy ran done his face as he realized the circumstance of this moment.\n\nHe rose from the floor to leave her room and found Angela leaning against the door jamb.\n\n\"You are the best husband and father I could ever hope for,\" she whispered. \"Thank you for stopping on the side of the road for me.\"\n\nHe took his young bride in his arms and gave her a warm embrace.\n\n\"There is never a day, I don't think about the day we met,\" he replied, in a whisper. \"Thank you for being my wife and giving me these beautiful children. I love you.\"\n\nThey broke their embrace. She took the back of his head and pulled him into a kiss. Their kiss was romantic and loving.\n\nAs they broke their kiss, she whispered, \"Something happened today. I can tell the way you were tonight. I noticed it when you came in from the stables.\"\n\nHe smiled a sly smile and replied, \"I will never be able to keep any secret from you. You read me like a book and turn every page on me.\"\n\nShe giggled a soft giggle. \"You got that right, Mister Young.\"\n\n\"Let's go to the kitchen. I have some news.\"\n\nChapter 161\n\nJames set a glass of ice water in front of Angela as he sat next to her at the kitchen table. He smiled and took a sip of his iced tea.\n\n\"What is it, James?\" she asked.\n\nHe took her hand and continued with his smile.\n\n\"I received a call from Brenda this morning after I left to check the herd. The usual stuff. Appearances in Lubbock, San Angelo, and San Antonio in two weeks. She will be staying with us when we're done. She can't wait to see the kids.\"\n\nHe paused to measure his words, and Angela took note.\n\nHe nodded and began, \"I also received another phone call this afternoon on my way back home. Brenda told me to expect it, but she didn't know why. Mr. Turner told her to tell me to expect the call.\"\n\nAngela tilted her head in curiosity, and smiled. \"Well?\"\n\n\"I suppose it was the phone call I knew was coming. Considering what everyone has been telling me since I retired from baseball. I have been elected to the baseball hall of fame.\"\n\nAngela didn't say a word. Emotions suddenly choking her chest and throat. She began weeping softly. Nodding gently at her husband as tears of joy fell on her cheeks. She took both of his hands into hers and nodded again.\n\n\"It's hard to believe it's been five years since I retired,\" he replied, with a slight quivering of his voice. \"But, I realized, when I was in Larissa's room tonight, how fortunate my retirement was.\"\n\nHe choked down a soft sob.\n\n\"I met you just months afterward.\" He choked down another sob. \"Despite my disappointment in giving up my career before I intended, a blessing was waiting for me here. In this house. A beautiful wife and 4 beautiful children.\"\n\nAngela nodded through her sobs.\n\n\"If I had not been in that car wreck, I may have played another five, perhaps, seven more years. You and I would never have met. Someone else would have stopped to help you on the side of the road,\" he choked with a sob.\n\n\"Hold me!\" Angela cried.\n\nHe left his chair and helped her stand. They embraced each other until there were no more tears to cry.\n\nWhen the tears stopped, James released his bride from a warm and firm embrace, continuing to hold her hand.\n\n\"Angela... I want you to never forget what I am about to say. Since I left home to pursue my baseball career, these last five years with you have been the happiest. I mean it.\"\n\nChapter 162\n\n\"I love you, Daddy. I'm going to miss you.\"\n\nJames chuckled to his daughter. \"I love you, Larissa. I'm going to miss you, too. But, not for long. You're going to live right down the road.\"\n\nShe smiled and kissed her 58 year old father good bye and took the hand of her husband to leave the KOC hall for their future together. A future with the new veterinarian who grew up in Thermopylae... 27 year old, Vince Sideris. The grandson of Dr. Sideris, who had retired. The 20 year old Larissa fell for an older man, just as her mother had. And her grandmother.\n\nVince told James he fell for her because of her eyes. That she cast a spell on him. And her beauty and naturally wavy black hair was the clincher. James knew how he felt.\n\nAs he watched Larissa and Vince walk toward their future together, a familiar hand took his own.\n\n\"I remember our wedding day. You were so handsome, I couldn't wait any longer. You still are very handsome,\" Angela mused.\n\nHe turned to look into the eyes of his bride of 21 years. Her eyes still hypnotize him to this day.\n\n\"I love you, Angela.\"\n\nChapter 163\n\n\"I love you, Daddy. I'm going to miss you.\"\n\n\"I love you, too, Cathy,\" James replied, to his youngest child. \"And, I'm going to miss you, too.\"\n\nWith that, Cathy smiled, kissed her 67 year old father good bye and took the hand of her husband to leave the KOC hall for their future together. A future with a professional baseball player she met through her brother David, also a professional baseball player. His name... 25 year old, John DeLoach. A left fielder for the Detroit Tigers and a teammate of David. The 20 year old Cathy fell for an older man, just like...\n\nHer mother...\n\nHer grandmother...\n\nHer sister, Larissa...\n\nHer sister, Cynthia...\n\nAnd... her sister, Margaret.\n\nJohn had told James he fell in love with her eyes. She had cast a spell on him, and her beauty, olive colored skin, and her black naturally wavy hair were irresistible. James knew how he felt.\n\n\"Angela and I can finally have that Greek honeymoon,\" he mused in his thoughts.\n\nAs he watched Cathy and her husband walk toward their future together, a familiar hand took his own. As he turned to his bride of 30 years, he noticed his children gathering around him. Larissa, Cynthia, Margaret, David, Samuel, Michael, Nathaniel, and Mark. Their spouses were with them, along with his 20 grandchildren.\n\n\"I am so happy, Angela. For having you and all our children,\" he said with a soft sob. \"There was a time I thought I would never have a family. Then, I found you on the side of the road. Now look, Angela. Look at all of these tiny children our children have brought back to us.\"\n\nAngela kissed his tears away, laid her head on his chest, and embraced him. His three year old granddaughter, Helen, asked if he would hold her. And he complied with a wide grin and great happiness in his heart.\n\nChapter 164\n\n\"There were two outs in the bottom of the 8th inning. The bases were juiced. And...\"\n\n\"Grandpa... The bases were juiced?\" yelped 10 year old Maggie.\n\n\"Yes, Maggie. Juiced. It is slang for, the bases are loaded. All of the bases have a runner on them,\" her Grandpa Young replied.\n\n\"Come on, Maggie! You knew that. We talked about it last week, remember?\" barked her brother John.\n\n\"That's OK, Maggie. I tell it better than John, anyway,\" mused Grandpa Young. \"Come here and sit with me as I tell this tale.\"\n\nMaggie yelped and leapt into her grandpa's lap and arms. Angela smiled loving to her husband from her chair across the room. Their children, grandchildren, and great grandchildren had returned to their home for Christmas.\n\nEighty four year old James smiled as he glanced around his large family room. There were 42 grandchildren and five great grandchildren gathered to hear him tell his tale. His children and spouses were gathered, too.\n\nAnd, the daughters of his daughters... his granddaughters... all had Angela's eyes. They were all looking right at him.\n\n\"I can't concentrate because of all of the hypnotic eyes,\" he mused to himself. \"I am so happy I stopped on the side of the road and met their grandmother.\"\n\n\"The bases were juiced. Your Uncle David steps into the left side batter's box with calm demeanor. The score was 6-4 and the Tigers were losing to the Mets. The seventh game of the World Series in Detroit. David takes the first two pitches for strikes. All seemed lost with his 0-2 count. Then, John Whitson, the pitcher for the Mets, thinks he can pull a fast one on David. He throws a changeup so slow, it looks like a floating balloon. But, David was looking for it. He knew it was coming.\"",
        "James paused to glance at his son, David, and found he was smiling, nodding, and enjoying the story.\n\n\"David was patient and waiting for the big fat pitch to get closer and closer. When the ball reached the perfect place, David swung and slapped the ball to the right field corner so fast, it hit the wall before the right fielder could move his feet. One runner scores. Another runner scores before the right fielder got to the ball. The score was tied, 6-6. When the right fielder picked up the ball, he found the cover of the ball had been nearly torn off! He couldn't believe his eyes!\"\n\nHe paused as all his little grandchildren gasped in surprise. He chuckled.\n\n\"The cover had been torn off the ball?\" cried his granddaughter Julie. Her eyes messing with his concentration.\n\n\"Yes, Julie, it was hanging on by three threads!\" he replied. \"By now, the third runner had scored and David was racing for third base, laughing along the way!\"\n\nDavid burst out laughing, along with his wife Connie. All of the adults and older grandchildren, who had heard this story told before, gut laughed, too.\n\n\"The right fielder paused, not knowing what to do. The center fielder was screaming at him to throw the ball to the infield! He gathered his composure and launched a strike to the cutoff man, but the ball was flopping around in the air because of the torn cover. The ball fell to the ground twenty feet in front of the cutoff man. By the time the cutoff man ran and picked up the ball, David was racing for home plate!\"\n\nJames paused again to view the tiny faces all around him. Their eyes were wide as saucers in anticipation of his story.\n\n\"The cutoff man launched the ball with all his might to the catcher, but the ball wouldn't fly. Again, the ball fell to the ground twenty feet in front of home plate. And... our Uncle David jogged the last few feet and touched home plate, smiling as wide as a six lane highway.\"\n\nThe adults in the room were laughing so hard they couldn't catch their breath.\n\nFive year old, James, got up from the floor and went to his grandpa. \"Who won the game, Grandpa?\"\n\n\"The Tigers won that game, James, and the World Championship, 8-6. And, the catcher gave the broken baseball to David as a memento. You see, it is a rare day when a man can hit the cover from a baseball. It is even a rarer day, when that man wins the World Series with such a hit,\" James asserted, while looking at his son, David. \"Your Uncle David gave me the ball for safe keeping. Do you want to see it?\"\n\n\"YEAH!\" was the consensus reply.\n\nJames reached to the lamp table next to his chair and held up, for everyone to see, the broken baseball inside a clear plastic cube, the cover still hanging on by three threads.\n\n\"Can I hold it?\" cried Penelope.\n\n\"Yes, Penelope, but you must let everyone have a chance to hold it, too. You see, this is the rarest of baseballs,\" Grandpa replied.\n\nAngela was smiling and giggling over the embellishment her husband gave to a true story.\n\n\"Dad,\" David began, as he approached his father. \"Thank you for being my father. I love you.\"\n\nHe knelt at his father's feet and hugged him.\n\nChapter 165 The Last Chapter\n\n\"Today. We lay to rest a legend in his own time. James Samuel Young,\" David announced at the graveside service.\n\nA crowd estimated at 5000, some say 10,000, was gathered in the cemetery near where generations of Young men and women had been buried. So many people were expected, loudspeakers and microphones were used so all could hear the words of his son.\n\nThe governor was in attendance, along with the President of the United States, also a Texan. Owners from every major league team and the commissioner were present. Sports writers from all across America came to cover the funeral services. George County had become the birthplace of major league baseball players. Beginning with the greatest of them all... James Young.\n\n\"A legend in major league baseball,\" David continued. \"And more importantly. A legend within his family. A man who feared he would not have a family. Until he met a pretty woman on the side of the road who had a flat tire. He stopped to help her and her friends to change the tire. And, on that day, a romance began that would not end for 63 years. To speak to my mother, the romance continues, she told me. She will love his memory in her heart. She will see him in her children, grandchildren, and great grandchildren.\"\n\nHe paused to gather his thoughts and courage.\n\n\"He told me, when I was preparing to leave home for professional baseball, to play the game with passion. To make the team first. If I were to play baseball with all my might and think of the team first, success in my personal career would come with little effort. And through those experiences, I would return to my family and succeed with my wife and children. Making them first and loving them with passion.\"\n\nHe paused again to choke down a sob or two, reflecting on the life of his 99 year old father.\n\n\"James Young left baseball before he intended, due to injuries he received in a car wreck. I dare to wonder the records, that would have been, had he been able to continue his career. His existing records, to this day, have yet to be broken. Imagine the records that could have been had he been able to play another 5 to 7 years, or more.\"\n\nHe paused to let everyone to consider his words.\n\n\"My mother told me about a conversation she had with my father when he was elected to the baseball hall of fame. He told her he was heartbroken when his baseball career ended before he wanted it to end. But, he also told her, had he not been in the car wreck, he would have continued his baseball career and he would not have come back to Texas and find her on the side of the road. Had he stayed in Kansas City, another person would have stopped to help her.\"\n\nHe paused to gather his thoughts.\n\n\"He told her right then. The happiest he had ever been since leaving his childhood home for a career in baseball, were the ones he had spent with her. That he was grateful for finding her with a flat tire.\"\n\nHe paused to look around the crowd that had gathered. Many were in tears.\n\n\"My father was known by many nicknames when he played baseball. The Thief, for stealing so many bases. The Texas Hurricane, for destroying opposing teams with his ferocious hitting, error free fielding and throwing, and base stealing. The Free Pass, for the intentional walks he received, for fear he would hit the ball each time he stepped into the batter's box. There was an occasion, I'm told, when he stole 8 bases in one game, the opposing manager ran onto the field after the game to prevent him from leaving the field. He told my father he had already called the police for stealing those bases and to wait right there. He was pressing charges.\"\n\nThe crowd broke out in laughter through their sobs and weeping.\n\n\"I would like to end my baseball comments with one last set of facts. James Young has set another baseball record... His last one. You see, he had sons, grandsons, and now a great grandson to also play major league baseball. Three sons, 16 grandsons, and 1 great grandson, have now played for major league teams. To date, no other former player has had this many descendants to also play the game at the highest level. And, I predict, that record will continue to grow. I might add, my cousin, Michael Young, my father's nephew, also became a major league baseball pitcher, and he had two sons who also became major league players. Michael told me, on many occasions, my father was directly responsible for his successful career. If not for my father, Michael would have been a rancher like his father. George County, Texas is now famous as the birthplace for major league baseball players. Because of James Young.\"\n\nHe paused to gather courage for his next words.\n\n\"My memories of my father do not involve baseball. It involves him loving my mother, me, and my brothers and sisters. I will never forget how happy we were in his presence. The joy in my mother's face when he entered the room. And, the adoration he gave her in return. I recall the many sunrise and sunset horseback rides with my father. The branding of calves together. Rounding up cattle for sale at auction. The family campouts under the live oaks on our ranch. All with my brothers and sisters enjoying the same experiences I have enjoyed in the presence of our father. And many times, my mother was there, too. Our father gave us the best family. An example for me to match with my own family.\"\n\nDavid took a few moments to swallow the overwhelming sorrow he felt.\n\n\"I break down, every time, when I reflect, my father feared he would never have a family.\"\n\nHe paused to measure his words and to choke down a sob.\n\n\"And, I rejoice when he stopped on the side of the road, to help a pretty girl change a flat tire. I love you, Dad. I love you, Mama.\"\n\nThe End"
    ],
    "authorname": "ajroye",
    "tags": [
        "fantasy",
        "mature",
        "older man",
        "younger woman",
        "greek"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/an-unexpected-romance-ch-154-165-final"
}