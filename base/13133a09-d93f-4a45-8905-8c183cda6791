{
    "title": "Dark as Ivory Pt. 01",
    "pages": [
        "Content warning: It is a nonconsent story and there are some things that might be considered harder fetishes. I didn't want anyone upset and want it to be enjoyed, so I thought I'd put a forewarning. Have fun!\n\nEver since I was little, I wanted to be a physicist and I wanted to own a gaming store. I chased both of those and somehow the end result was even better than expected. My life was a dream and I got to meet the most interesting people, got to play the most interesting games. But sometimes I wanted things a little more interesting.\n\nI didn't know his name. He was an online foray of mine that I indulged in during the darkest hours of the night. After hosting a Dungeons and Dragons session or a Magic the Gathering tournament, I would get home to my laptop and see the tab open for his messenger on a kink website I explored. He used the user name Flatline9 and he lived 30 minutes away from me. We hadn't traded addresses, nothing like that, although one time I let slip my name when telling him a story. Not that my name gave much about me away. It was Tuesday. Tuesday Holter, but he didn't even have the last name.\n\nAnd that was another thing. He flirted with everything, even mundane work stories. Those were his favorites, even, and he would have me blushing within moments while he turned something innocuous and boring into something filthy or profane.\n\nThe night when things started to change, when we went from flirtatious messaging to the next level of playtime, started no different than any other. I walked into my cozy apartment after a boring day. No MTG tournaments or campaigns since it was midweek. I had merely been sorting merchandise and selling, but when I walked in, turned my laptop on, and saw the message notification on the website that was so frequently logged on my history, my heart sped in excitement. I didn't even walk to my bedroom to strip out of my work clothes. I did it right in my small apartment's equivalent of a living room, the first room when you walked in. I stood naked as I leaned over my desk, tossing my bra to the side and typing.\n\nHi. Are you still there?\n\nI waited, eager and hoping. I looked forward to these naughty little conversations way more than was probably healthy. It occurred to me that this might be becoming a flirting addiction of mine, but I didn't care enough to stop doing it. I went to my room and put my pajama pants on while waiting, grinning and scurrying when the chime sounded from the laptop. It came before I could even get to my shirt, so I just left it off.\n\nYes. It's been a few days.\n\nI bit my thumbnail before I answered, wondering what dirty place he would go to this time, wondering how he would get there. Every time was interesting and creative. He played such wicked games, filthy in their strangest way, and I had displeased a customer today, something that never felt okay to my pleaser's personality, so I wanted something to make me blush and forget with someone else's pleasure.\n\nIt has, hasn't it? They've been a boring few days, too.\n\nOh, no. No fun games to keep you entertained at work? Whatever could you have done to pass the time when you had it, Two?\n\nHe loved using the number Two for my name, though my handle was Masokissed. Because he liked using any moment he could to remind me of my slip, that he had my name and I didn't have his. Nothing much. I mostly read and made sure the store was in order.\n\nI giggled and bit my fingertip, taking my laptop to my favorite recliner and curling into it, waiting with a sense of excitement for his answer to that. And I wasn't disappointed.\n\nI bet you're lying or at least being coy with me. I bet the books you read are filthy BDSM fantasies and you like to go to your back room and find a way to rub something against your clit to get off when you're bored.\n\nMy skin turned hot in arousal. Maybe the attraction was all in my head since I was relegated to pure fantasy and imagination where he was concerned, but I wasn't sure, hadn't thought about it in depth to be honest. This was a fun little pastime for me and it didn't need to be ruined with overthinking and bullshit. Maybe. But if I did that, say, yesterday in the dead hours of the afternoon it wasn't from reading. I got up to light a candle by the chair and then fetched my bottle of cheap wine from the fridge, drinking from the bottle and going back to curl in my chair for his answer. It could barely even be called wine since it tasted more like grape juice. Which is why I bought it when I could afford whatever struck my fancy. Grape juice tasted nice and this one got me drunk.\n\nFilthy fucking girl. What was it then? What made you such a greedy wanton that you had to go to a back room like a little whore to get off?\n\nI fucking loved his dirty talk. He was degrading in all the best ways and he'd jumped all over it when I confessed to my filthy moments, when I got aroused and went to the storage room, rubbing my pussy either through my jeans or going to my employee bathroom to do it out and out. Most of the time I would feel myself get worked up and start to fantasize until I reached the point where I could give my clit a few harsh strokes over my clothes and go off, so needy that it was that easy. It took hours of fantasizing to reach that point though and it was more like climbing a razors edge of arousal that it was a gentle finish. One night after a few glasses of boxed wine, I confessed that to him and he'd been more than a little delighted by the fact, loved to bring it up.\n\nBut I knew things about him as well. Fantasies he had told me over our months of online flirting. And I knew his favorite fantasy. I dreamed about his favorite fantasy actually. And when I masturbated to it? Holy hell, it made me see stars.\n\nMaybe I was daydreaming of being watched or followed while taking the subway. Maybe I was thinking about having a stalker see me when I thought I was alone and bored.\n\nWhat he loved playing most and the hottest word sex scenarios we wrote to each other? They were the ones where we played out something pure animal, something twisted and elaborate, things that were sick and sadistic and depraved. We talked of how hot kidnapping scenarios could be wherein I would play out my unwillingness. We talked of boundaries and I really didn't have many. We talked of desires for the borderline psychopathic and ways to make them as close to real as possible. In one conversation, we talked of how it would definitely be hotter to have more of the fear element.\n\nFor instance, the safe way to play a kidnap scene? That would be to let me know his face, to meet beforehand, and then let me know I wasn't in real danger. But we talked of two other possibilities. Like how hot it would be if I didn't see his face and didn't know I was okay until a little further in the game than most others would be comfortable with. We talked of a second, head fuck scenario where I would know who he was but wonder at every turn if I was still playing a game or if he would break the pre-agreed rules to the kidnap game.\n\nEdgy. Dark. Fucked up. There were lines between fantasy and reality and I had played in those lines for so long because it was all most people were ever comfortable with. But when I spoke of blurring the lines and the hidden desires to know what it was like to be so filthy, he had gotten it. He had spoken of feelings that were kin to mine.\n\nMaybe that was another reason why I could orgasm so fucking hard to my fantasies of him.\n\nThe ... indicator of the message appeared and reappeared while my heart went crazy with thoughts of his intensity and my stomach turned delirious somersaults. No matter how boring the day or how emotionally cold I could sometimes feel, whenever he wanted to play I knew he would make me wild, make me warm again, and make me forget.\n\nSuch a fucking tease. You do like to play with danger, don't you? Tell me, then, since you want to be so hard tonight. Did you leave the door cracked so that you could be watched and imagine that someone stopped to see you be such a slut in your back room? Did you have to bite something when you came so you didn't make a sound?\n\nHe knew. God, he knew all of those answers by now. Anytime I talked about how bored I had been at work, he turned it into something wild, something that was starting to make those dull moments disappear. Yes! My wrist. I had to bite my wrist. And I spread my legs on the spare table while facing the door, hoping the wet spot on my jeans would be visible if someone were watching me.\n\nNot someone. Him. It was always him I fantasized about. Christ, you left a wet spot while thinking about it.\n\nYes. After I took my panties off midday to feel my clit hood ring rub against my jeans.\n\nI bit my lip, feeling wicked. I hadn't told him about my rings. I had a horizontal clitoral hood ring but I also had others, the better to pleasure my partners with. All of them were to please, to bring out the dominance in the men I took an interest in.\n\nYou're pierced?\n\nSuch a short answer. My grin turned wider because I knew he liked it. I just knew by then that he loved the thought. Yes. I love that it keeps me horny all the time. I have three tongue rings and a septum ring too. Sometimes I like to imagine my stalker getting tired of watching me and going into the back room, scaring me. Shoving me to my knees so he can force me to suck his cock while telling me he knows I want it because I wouldn't have the rings in my tongue if I didn't.\n\nThere was a ... again that stopped and was replaced by another. And then another. But when the message finally came through, the answer was short. You're playing with fire.\n\nThe threat from anyone else would have made me disappointed. Others who talked like that didn't have the brazen history to back it up, to make my stomach churn with anticipatory fear. But he did. He messaged stories with the voice of experience, not of the fake or of candy ass bullshit. I set my laptop on the armrest, aroused by the threat from him, and typed out my answer in a reckless rush. I can handle the heat. I grabbed the candle that had been burning for long enough, staring at the wax pooling in it, and curved my body, tilting the holder so a little bit of wax dripped onto my abdomen.\n\nWhen I looked again the message came through while I was riding a hot wave of desire. Can you? Then strip back to being naked and pour the wax lower.\n\n\u2014\u2014\u2014\u2014\n\nI would love to say my response had any self preservation at all in it, but it didn't. It was reckless hedonism that took hold of me, heat whipping through me and ending right at my already engorged clit. I threw my head back and moaned just to have some kind of outlet for how hot my body apparently thought his twisted game was. It was an intensity so fierce that I couldn't have ignored it for anything, much the same way I sometimes couldn't stop masturbating after a certain point even if the world crashed down around me. Once I reached a high enough ring up the ladder of arousal, my body commanded me, lost to need. And this followed that same pattern. I set the candle down and eagerly tore off my so briefly worn pajama pants, tossing them to the side so that I was naked on my chair rest. And then I obeyed, making sure to face the only window he could have been watching through, sprinkling the wax down my thighs and right over my pussy in the tender triangle. I grit my teeth and moaned again, my eyes closed, imagining him watching from somewhere anyone could see.\n\nWhen the chime of his next quick message cane through, I turned to read, knowing he saw me turn to respond and delighting in that fact. Good fucking girl. You're a filthy little slut, aren't you? If I can see then anyone else can and you don't care at all, do you?\n\nI laughed, breathless and giddy from this. And I lay back on the incline to answer him so that my pussy was even more displayed, the wax outlining it. I am a filthy little attention slut. They can watch too if they like.\n\nI wondered what his facial expressions were like. Would he be smiling at the way I played back with these wicked flirting games? Would he be as intent and intense as his flirting seemed to hint at? Of course they can. But you might be disappointed because they probably don't have the balls to chase you down and stalk you. Are you going to cum already?\n\nGod. Fucking God. I was close, sitting up now to stroke my clit. I realized my lips were parted while I read, my body climbing the pleasure greedily. He was probably right. No one else would be crazy and stalk some random girl fingering herself in the window. But he was crazy enough. I slapped my clit to stop the pleasure chase and worked to think straight enough to answer. I'm trying not to.\n\nThe answer was fast as he typed out in a hurry. Why? Do it. Spread your legs like you did at work and rub your pussy until you finish all over your fucking hand. Cum for me, Two.\n\nI moaned at the words, thrusting my fingers inside of myself and sobbing out in insane pleasure. It was crazy, wildly unsafe. It was bad, the kind of impulsive behavior that would and should be the death of me. One second.\n\nI got up and ran to my bedroom, grabbing my wand vibrator and a black permanent marker. The last I used to write the words \"Flatline Whore\" across my chest, wickedly laughing. The vibrator I took back to the recliner with me and lay back on the armrest again, turning the toy on. I held it against my clit on a low setting, wanting this to last. His answer came through instantly.\n\nHa! You do like to play with fucking fire, don't you? God, you filthy whore of a fucktoy. You don't even know me, do you, but you play so brazenly.\n\nWhen I made to answer, he stopped me. No. Don't answer. Just read and focus on playing with that pussy for me, on making it cum while I watch. Flatline whore, indeed.\n\nI laughed, arching with needy cries while stroking the wand vibrator over my clit. And still he tortured me with taunts. I bet that pussy is so goddamned aroused that you could fit the head of that wand inside of you, couldn't you? Instead of answering, I did it. I wasn't sure my body could fit it at first, but I teased open my slit and it turned out that I was aroused enough and dripping enough cum to force the wide head of the wand inside of me. I had to shove my fingers in my mouth to keep from screaming with how hot it made me feel, stuffing myself with such a blunt, massive toy head.\n\nThe orgasm screamed through my nerve endings with the delectable bite of pain that came with something too wide filling me so suddenly. I grasped my hair with my free hand and stared down at the toy spreading me, amazed that it fit, horny as all fuck with the sight of it inside of me. I watched myself hump it while coming so fucking hard I couldn't hear anything over the roaring in my ears. It was almost as if I were watching someone else's pussy milk the toy but it was such a turn on the way my hole gaped eagerly open.\n\nI looked at the screen when I could focus again, wincing when I took the toy out of me, realizing it was coated in blood. But even that was hot at the moment, hot that I hadn't felt a single pain in the midst of my arousal.\n\nHoly fuck, Two.\n\nI laughed, breathless. I might be an attention whore, but you're a voyeur slut.\n\nFor a long while he was quiet, so long that I curled up in a blanket and stared, waiting. But then when the message came through, it was worth the wait.\n\nIt was a video clip. I couldn't see anything in it besides his cock in his hand. He had so carefully made the angle and cut so that there were zero indicators of where he was. The only thing I saw that was anything was a ring on his middle finger, a black stone that was beautiful. It was cut in a heart with sterling silver band.\n\nWell, that and the fact that it looked like he had fucking horse cock. Holy shit. He jerked himself off and I felt like panting like a dog and turned horny all over again. I watched, riveted, as he stroked, slowly, torturously. My mouth watered and I swallowed, imagining my lips spread so wide around him, imagined choking on him, my tongue rings caressing the underside of his massive sex when I swallowed desperately and tried to breathe through my nose. God, it was good he was a sadist because even that part of his physiology had been built to wound and hurt a victim.\n\nI moaned when he finished, semen spritzing from the tip of him in waves. And there was so fucking much that I shuddered, spreading my legs abruptly with what felt almost like a mini, dissatisfying orgasm.\n\nJesus. You're so big.\n\nIt was a stupid reply, an obvious one. But Christ he really was so fucking big. I wanted his cock so badly I ached with it at the moment. Is that what just made you shudder like that?\n\nI smiled. Fuck yes. Thinking of sucking it and choking on it almost made me cum again.\n\nFilthy girl. Are you sure you're ready for the games you just started? I'm not nice, Two. I'm a control freak always, I came into masturbation on sadism and torture porn, and I push a lot of what's safe and sane.\n\nI answered easily, not flying quite so high on arousal and able to think more coherently. It's okay. I came into masturbation from The Fountainhead and Dante's Inferno. If it's ever not okay I'll hash it out with you and I'd love to push some boundaries.\n\nHis answer was very slow in coming and when it did I immediately knew why. It was because he was trying to be sure he wanted to follow his answer. Alright, then. Let's play, Two. But we have to have open communication throughout all of this and I want that clear. You don't lie to me or withhold from me, understood?\n\nYes, sir. He was mostly a sadist but I had already learned that submissive answers well pleased him.\n\nAlright. Brave, reckless girl. Haha. Flatline whore. Is your pussy alright, baby?\n\nI felt like both dancing and curling up under a blanket for comfort from the surge of maelstrom energy it gave me to have him tell me we'd play. It was both thrilling and terrifying and... a question. He'd asked me a question.\n\nYeah, it's fine. The next week might suck while it heals. They tell me you're not supposed to masturbate and I never can follow that and it always takes a long time.\n\nIt wouldn't be the first time I'd played too rough and injured myself. I had a scar on my leg where I'd been trying to figure whips out and cut myself.\n\nHis reply made me grin. Fuck me, you've played hard with yourself and done this enough times that you know how it goes.\n\nWell, not this exactly. But I do hurt myself when I get too into it sometimes.\n\nPoor baby. You need someone to take care of those bad little needs and hurt you in ways that won't injure that little pussy.\n\nSomeone like you? The answer just happened in the wake of one of the hottest orgasms of my life, like a strange post coital session. Without the sex. Or the fucking person, for that matter. All I knew about what he looked like was that cock and... \n\nChrist, that cock. Someone like me. Oh, yes, because someone like him could take care of the fuck out of my needs. He spoke over our conversations with the voice of experience. Maybe not experience in what we were doing. He talked about how that was an edge he hadn't gotten to play yet. But he had experience with scenes and he spoke of club names he liked and scenes gone awry. He wasn't just a front either. I knew people from my store who would google right in front of me to try to keep up a conversation with me when they didn't know the subject. They'd try to impress me with knowledge they didn't have and it was clumsy and awkward. Flatline didn't go into that category. He spoke too casually, owned his mistakes too readily. When I brought up my whip incident, he had one of his own where he'd broken his ceiling fan. He had such easy confidence.",
        "I was getting so fucking horny I ached all over thinking about the possibilities from someone like him. Again. I'd be alright with you caring for my needs.\n\nYou're going to have to be patient, Two. I'll head fuck you so hard, but you play my way and you behave.\n\nSomehow I knew what those words meant. He was going to draw this out, torturing the both of us with a dark game. And I wanted that, I suddenly realized, more than fucking anything. What else was he going to do? How else was he going to find ways to violate me from a distance? I couldn't wait to find out. That made me an insane, possibly very stupid, fucking physicist - Master's degree or no - and I had the thought that if there was any justice at all in the world Flatline would turn out to be a charming axe murderer and I would be raped and tortured with my body never found.\n\n\u2014\u2014\u2014\u2014\n\nIvory\n\nI didn't know when I decided to do something fucking crazy with my little playmate, if I'm being honest. At first, talking with her had been a pastime on a kinky website for those moments when I didn't have time to go to my favorite fetish club and dominate a cowering little masochist. And those little masochists were hit or miss for me and they had started to become mostly misses. Don't get me wrong, I love domination and sadism. It's my life, something that completes me, but I craved something deeper and darker than just one night stands from fetish clubs or my phone contacts. One night when I was reading torture porn stories and masturbating to some particularly dark thoughts after a stressful day, I somehow ended up messaging her for the first time on the kink site.\n\nI never once regretted it. She understood the fucked up shit I talked about and she spoke of feelings that were so familiar to me that it made my chest hurt. She talked about the comedown of guilt after masturbating to a pure evil fantasy and the thoughts of \"what's wrong with me\" and \"why am I like this\". She spoke of the desire to color outside the lines and explore other creative ways of playing. And when I revealed my fantasy of stalking someone and violating their day to day privacy until they wondered if they were ever safe, she had turned the game back to me after a minute or two of the tell-tale ... message that indicated her typing. I still remember what it said.\n\nWould you break into my store and watch me when I wasn't looking, leaving pictures later that sent chills down my spine? To let me know that you were there and I wasn't safe or alone?\n\nIt was the first time we'd broken that barrier between talking of fantasies and inserting ourselves into the roles. It had thrilled me beyond bearing, that she would play along.\n\nOf course I also knew the plight of a masochist, so I approached those moments for a long time with the wary sense that there was a massive difference between a person's fantasies and what they could handle in real life, how much strain the psyche could take. But then we had started talking of experiences, both embarrassing ones and hot ones that had worked for us. And I had learned that the line between fantasy for her and what she could take truly was the thinnest of anyone I had thus far met. She was evidently an extremely gifted masochist and edge player.\n\nA few weeks after some more role play I had rented a small apartment right across the street from her. By then she had let slip her name and I had searched for her on my laptop in the early hours of the morning. It hadn't taken long to find the Tuesday who owned a gaming store 30 minutes from me. In the dark I searched through her store's website, searched her Facebook page. She didn't have any privacy settings on at all and I looked through pictures of her while stroking my cock. She was a little thing for being so edgy. In the pictures she looked just barely five feet tall and she had shoulder length, thin dark hair that was straightened down to her shoulders. Very rarely she would have her septum ring show in a picture, which had delighted me with images of her shuddering on a piercer's table from the pain. More often, she had it hidden though. Her expressions held a hint of mischief in every picture that made me smile because I knew what that innocent little face hid. And that wicked little quirk on her lips was the only indicator that she was a depraved, sick, twisted fuck just like me. I imagined her small waist between my hands, so little and fae-like that I could kill her if I wanted. I never wanted that, but the thought sent dominance hot through my veins.\n\nIt was crazy. It was all so fucking crazy. The night I talked to her I had hunters' binoculars with me and stood in my new apartment, wondering what the hell I was doing. I had the money for this kind of frivolous spending, so that part wasn't actually that crazy but the actions themselves? Now that was the crazy part. Fuck me, I had masturbated to this girl's Facebook photos and bought an apartment and needed to walk the hell away and be a sane human being.\n\nBut then she'd messaged me back while I sat thirty minutes from my work place and she was right across the way from me without knowing I was there. Even then I hadn't been intending to play the game I did. The lights were still off around me but the phone app chimed with her message and I opened it, looking up to her apartment and inhaling with a little bit of shock.\n\nBecause she was bent forward over her laptop, wearing not a fucking thing. Her small, naked form was restless with her excitement to message me back. I didn't even need the binoculars to see her. They were just for a better view.\n\nI wondered there, briefly, if she'd had a bad event through her day, something that made her more brazen than usual. Because she was. She rarely directed the flow of the conversations and generally let me take over to guide her through dark fantasies that got both of us off. But this time, the time that damned me? She let me know clearly what she was thinking about and it was something that made me moan with a little torment. I truly intended to behave. And then she'd brought up my favorite fantasy, the one that had already started down the dark path of becoming reality. Me stalking her, hunting her. The thought of head fucking with her everywhere she went, work and home and even other places, made me hot all over. I had masturbated 40 times to the thought of assaulting her in a parking garage or some gritty place like it, of feeling her struggle in terror while I stroked my cock against her slit through her jeans and whispered foul, graphic threats to her.\n\nI tried to give a warning, but if I were being honest it was as flirtatious as I could make it. With her, I might as well have been the devil standing in the entrance of a torture chamber, beckoning and purring the words \"come and play with me\" in an erotic taunt. You're playing with fire.\n\nBut then I looked up and saw her sprinkling the hot wax on her sensitive abdomen and I was lost, grinning wickedly in the dark, deliberately keeping the lights off so she wouldn't see me even while I so greedily molested her no longer as naked form with my eyes. She had at least put on some pajama pants, but Jesus Christ, what a bad fucking tease of a girl. If I could look and watch her kinky masturbation then so could fucking anyone else. My God, I would have to punish her for lack of safety out of basic human decency if I ever reached that point with her. And then I realized I was imagining my game in full in my mind, planning it out in graphic detail. The things I would do to fuck with her, the ways I would violate her privacy and the head fucks we would share. I was going to hunt her if she wanted to play, hurt her in delicious ways, eventually. I looked down at my phone, thinking of how much bigger I was than her. I'd made working out an obsession in high school and was still all muscle. I could bench press over two of her easily. It would be nothing to overpower her, to feel the violent surge while she cried out in pain and wished she could get away. I hoped she'd fight me, hoped she'd scratch at my arms uselessly while I forced her.\n\nI didn't have as much self control as I once thought. The realization actually shocked me when I fell like a rock for the temptation right in front of my face and sent her that message that started the landslide, deciding I was keeping the rented apartment for a time. She wanted to play, my wicked siren, and I had craved for harder games for so long that there was no escaping her song. She hit every hot button I had like it was a bingo card.\n\n\u2014\u2014\u2014\u2014\n\nTuesday\n\nWhen Friday came two days after my wild night, I was more than ready for it. I had a Magic the Gathering tournament and my two hired workers were both coming in to help because it was a stunningly big affair. But it would be a huge profit because I opened Magic packs and sold the rare specifics that people coveted at a huge turnover. For a card game, it was an expensive ass hobby and the people into it were usually willing to spend the money for specific cards after they stole packs from Walmart or some other bullshit. Because everyone stole Magic packs from Walmart. I was smart enough to keep mine behind a locked display case.\n\nThe entire Friday was cool. A busy night, which I liked. A fun night, which I also liked and I was riding an energy wave after Flatline's game and threats and promises of more.\n\nWhen the phone rang while the tournament was in full swing I went to the back to answer it, leaving the two guys who worked for me to take care of the tournament board. Both Tate and Jackson were trustworthy geeks who knew their shit, both college kids in different science areas. And they were having fun with the tournament so I happily took the phone call.\n\nI paced to my back room and cheerfully answered. Funny enough many people who called for the first time thought I was my own worker because my voice was high pitched, almost mousey. It sounded too young sometimes and I had a problem with submissive behaviors in all things. But this time my voice had some confidence to it when I said my standard introductory message. \"You've reached Grenadier's. This is Tuesday, how can I help you?\"\n\nThe voice on the phone made me pause and my rare moment of delightful assertiveness was instantly shattered. God, it was deeper. It reminded me of a few of the career marines who came in to play D&D. They always had this way about their speech, this militant, quick pacing. The officers were used to being in charge and respectful at the same time. This voice had those elements to it. He didn't stutter, knew exactly what he was going to say, and commanded with similar respect and politeness.\n\n\"Can you still order the legacy board game Blackgrave?\"\n\nI grinned at the question, working through that sometimes cursed desire to submit, and grateful for the subject. It was one of my favorite games to sell, a huge dungeon style board game with stickers that were put on the board when a decision was made. It was a huge game with a ton of pieces and it was expensive but it was a joy. \"I can get it anytime you like. I can't order it over the phone due to security but I can tell you about it.\"\n\n\"Tell me.\" There was some other note in that voice, too, something that made me stop pacing and sit down hard, my heart going haywire in my chest. I didn't know why I was reacting so violently but it seemed like my body instinctively recognized what was happening while my mind rebelled the knowledge.\n\nMy voice shook when I spoke next and I stuttered, a touch of fear that I couldn't control making it through my usually tight locked customer service. Which was bad. That customer service was a lifeline against that voice in my head telling me to not be assertive, to bow my head and be polite. I was used to wars with myself against it, but it wasn't usually such a problem anymore. \"Um. So it's... Blackgrave. Right. It's a legacy game which means when you make decisions, you place stickers on the board and the decisions stay in place. However, there's a new version out that comes with an expansion called Darkgrave that has removable stickers. It's 100 dollars more but it's twice the gameplay and replayable. Of course the original version is already-\" I lost my train of thought with the shudder of breath in my ear and closed my eyes.\n\n\"Already what?\" He finally prompted me and this time there a note of dark amusement to his voice.\n\nDear god, he was actually listening and doing what he was doing at the same time. My blood raced through my veins. \"Already hundreds of hours worth of sessions,\" I finished weakly.\n\nI wished he'd give me one sign, any sign, that it was him. I kept waiting for any indicator, no matter how small, but he wasn't giving one. He didn't slip up and call me Two, nothing. Without some indication, I felt dirtier by the second because I was getting aroused and didn't even know for sure it was him. That shake of breath was something that I would have hung up on before and I wasn't now and holy fucking God, what if it wasn't even him and I was playing along with a fucking stranger?\n\n\"Tell me how the sessions work.\"\n\nMy voice was shaking still and I couldn't get it under control. My pussy felt alive even while my mind felt violated. The word \"sessions\" scattered my thoughts and made me think of a very different kind of dungeon sessions. \"So one person is the DM.\" Think. Fucking think. Not BDSM dungeon monitor, but gaming dungeon master. God that's still just as close and I bet Flatline is one hell of a master in the dungeon. Fuck me, think, damn it. It's a kid friendly game. \"They set up the boards as the guide depicts. It's a lot easier than Dungeons and Dragons DMing is, too. You can set up the board for different difficulties and different amounts of players.\" I wanted to whimper. His breath quivered again and I felt my face turning hot from... Christ, I didn't even know what to feel anymore. \"And then your initiative is based on attack choice instead of a dice roll. It's really... um, shit.\" I had never slipped up and cursed over the phone without knowing the person in all my years of doing what I did. True I wasn't the best with people but I had learned how to be good in order to make sales and most nerds and gamers loved me for the mild shyness because they were shy too. I held the phone away for a second, rubbing my forehead and trying to collect myself. \"It's really thought- um, really well thought out. There's a lot of character choices and no two play is the same if you opt for the usable... um, reusable... er...\" Holy hell. \"Removable stickers.\"\n\nA soft growling sound was the next thing I heard and I closed my eyes, leaning back. I had both workers with me, goddamnit, and couldn't masturbate to this and I shouldn't have been wanting to anyway because I still didn't fucking know for sure it was Flatline jerking off and coming to the sound of my voice over my work phone. His stalker fantasy and the game we had played had turned me inside out. I was mad with arousal even while I was freaked out but part of what made me so crazy horny was being kind of freaked out. I felt insane and twisted and that growl was wicked hot.\n\n\"Thank you. I'll come by and order it.\"\n\nAnd then the phone went quiet. \"No, don't go,\" I whispered, too late. I got my cell phone and checked the messenger app for the kink website, but Flatline didn't send anything. I even broke a rule of mine and turned that chat on while I was at work so my phone would send me the notifications. As a standard rule I usually left those silent in case I needed to use my phone for a work purpose and couldn't have my kinky sexual deviances showing up on my screen. But hours later, when I was still high strung and running through the Magic tournament, he still hadn't talked.\n\nChrist it had to be him. It had to. When I was closing by myself I finally broke and went back to the back room. I sat on the edge of a spare chair and took a picture of my jeans where my arousal had soaked them through with so much cum I could smell it while this close to it. My hands shook as I sent him the picture. I didn't ask him if he had called because he wouldn't like that. The night when he had watched me masturbate we had gone over some rules and one of his first ones was that if he didn't want me to know something, I wasn't supposed to ask. Not his name, not if he had been the one to leave an anonymous gift, nothing. If he didn't clarify I wasn't meant to know and that was that.\n\nSo I didn't ask because I wanted to be a good little sub. The truth was that no matter how bold I could sometimes act, my born nature was to please people and when it came to doms I cowered to their commands, wanting to please them more than anyone else. Instead, I said Thinking of you.\n\nThe chime scared the hell out of me in the quiet store. I looked over my shoulder out the windows, wondering, deliciously afraid. Fucking tease. Are you still at the store?\n\nI felt dark as hell, vicious little thrills curling through my abdomen. Yes, sir. Sir, because I felt meek after this. Sir, because maybe like a rabbit going still in fright, the big, bad wolf might go easy on me if I submitted. But of course this wolf didn't seem to have ever gone easy on anyone. And I didn't actually want him to. It was a busy night. I couldn't find a break to even get off, so I've just been... suffering it. But I couldn't help flirting and teasing either. It was the equivalent of taunting and pushing at him, only to struggle in fear when he retaliated.\n\nGo to your back room and pull your jeans around your ankles. I want you to fist yourself open. Take pictures and a video so I can see and if you're a good girl who shows me yours, I'll show you mine again.\n\nI whined low in my throat but ran to obey, leaving the door cracked just a little so that someone might see if they walked to it and were quiet enough. There were no windows to this room, like any other store rooms, so the door was the only source of visibility and it felt delightful to leave it open that tiny amount. I vibrated with craving and kicked off my jeans. I hadn't sent him pictures or videos before but he had sent the first one and I was more than ready to play too.\n\nI held my phone at an angle and recorded myself, stretching my pussy open and adding fingers. And it took an embarrassingly short time for me to stretch myself open too. For all of ten seconds I felt a little awkward recording myself but then my arousal ratcheted high and I flicked my hood ring with my thumb. I cried out with shocked bliss and worked myself over. When my fist finally fit my cry turned more desperate and I whimpered out the words, \"Oh, please...\" I had no idea who that begging was even for, wasn't thinking clearly and couldn't think clearly. All I knew was depravity and pleasure and I whined when my fist rubbed me just the right way and then I choked on ecstasy and my words became repeated pleas that didn't even make sense. I stopped the video after the last thrusts of my hips against my fist, riding out every last wave of bliss. And I sent it without looking at it because if I watched it I'd lose my nerve and never send it. Once it was done and sent, then I watched it.\n\nIt was definitely the kind of thing I would have deleted before sending it. Because every aspect of it made it slutty. You couldn't tell it was my store or that it was me at all, but you could see that it took place in a storage room of some kind and my voice was a whine of desire when I spoke. It was humiliating.\n\nIt was also so fucking hot it made me want to fuck myself, which was possibly the most narcissistic thought I'd ever had.\n\nLook at all of that cum, you little slut. You had to stop it from dripping on your fucking floor it was so much at the end.",
        "I stared down where I was washing my hands in the bathroom, while reading the messages as they came through, and shivered. He was right. I was so edged from the night that cum had nearly squirted from me.\n\nI finally answered when my hands were clean. It hurt so bad after a few hours.\n\nPoor baby. Did your little pussy quiver all night?\n\nI sprayed down my entire back room with bleach cleaner while I talked now, humiliated and still so aroused. Yes, sir. It spasmed the worst when I thought of being filled with your thick cock.\n\nI was still hot but sane enough to finish cleaning and closing up, putting my floors back the way they were and making sure my bookshelves were still in order. I could flirt and try to get home at a decent hour at the same time now.\n\nBut my arousal still simmered. It was a static sound that hadn't stopped after he'd watched me masturbate in my apartment and it still wasn't going away even after I fisted myself for him. I felt like the most sexual creature alive these past few days, masturbating more often than ever before. It felt like he had ruined me, like I was a sex kitten now, continuously hot for him.\n\nOh, you mean this cock?\n\nI played the video, whimpering and watching as he jerked off again. This time he was laying down and the frame showed hints of black sheets. He jerked himself sensuously, his horse cock far bigger than his hand and every stroke made me more aware of my sexuality. I moaned when he came, salivating again. Was it just me or did he spritz less cum than he had before? I wasn't sure because he came a lot and I was lost for him, needy for him. He wore that black heart ring again and even that seemed to arouse me. \n\nYes! Yes, please, that cock, sir.\n\nSuch sweet begging you have tonight, on your video and through text. I think I'll give you a treat. Don't go anywhere, Two.\n\nI finished closing while waiting and stayed in the store even though I was pretty sure his command was just to keep me waiting for the video he was making and not specifically in the store. What image would he torment me with next? It couldn't be worse than the sight of his cock spritzing cum that I ached to swallow, could it?\n\nIt was. Oh, it was much worse. The video was carefully made so that I still wouldn't get a glimpse of him. I saw his wrist at the beginning and that same hand with the heart ring. But this time that hand was holding a lethal bullwhip, a tail of leather made for agony and torture. Even in that brief view it was obviously no light 50 Shades of Gray bullshit. And there was one brief glimpse of a torso covered with a black T-shirt before he stepped back and was out of sight. Instead, I was looking at a narrow view of the darkest dungeon I'd ever seen in my life. It was deliberately crafted to be a nightmare to any sub foolish and brave enough to end up there with him. This specific image was of an area that was a strange reverse dais. Instead of being raised, a square had been cut lower into the floor and a whipping post was built right in the middle of it, but it wasn't like other whipping posts I'd seen. This one was harsher. It was iron with adjustable bolts and it was the height of a person. In the middle of it was a belt attachment to force the body still and there was a head harness at the top with crossing leather straps and a cock gag to tether and lock the head in place. There would be no moving or escape once locked into place of that post. It was some serious gear too, not the fake pleather toys that a submissive could easily escape from. There were small padlocks around the backs of those harnesses. That's the kind of gear he evidently had minutes away from where he'd lain and jerked off.\n\nThe whip crack made me jump, my breath catching in fear. The lethal strip made a crazy loud sound against the post. It was singularly terrifying, nothing like the playful books online. This was something more from the darker sites of torture porn I read sometimes. My heart beat a fucking tattoo against my rib cage. He snapped the 6 foot whip again and I jumped again, whimpering. An inferno burned through my abdomen and I had to sit on the floor of my store or have my knees give way with how weak I felt. When he shook the whip against the floor, it rustled teasingly. I flinched when it abruptly flicked, anticipating the sound, but it didn't come. No, it was another tease of his, the whip skittering cruelly. But then he did do it again and I moaned to the sound. Damn him, but when I was finally calm enough to think, it turned out to be nothing but the eye of the storm before he threw me back into it with this. My blood was a conflagration of need and this time it wasn't the kind of need that could be slaked by myself. I craved to feel that cock gag and have that whip torture me all over. I watched him strike it again and needed it all the more, but couldn't look away from the video to stop the build of terrible desire. That whip would be preferable to the miserable denial I felt now. I was shaking pathetically on the floor with it and didn't even care that there was no dignity left to me.\n\nThe video ended too soon where I got a glimpse of his shirt again before it went black. I sent him a message response that was even less dignified than the rest of me and still didn't care. Please, sir. Please.\n\nPoor little Two. So horny and needy and with no way for this kind of relief without a playmate.\n\nI closed my eyes and breathed through the raging fire burning up my nerve endings. I messaged the only thing that came to mind for the moment. Please whip me, sir.\n\nWe'll get there, Two, but in my time and my way. You might say this is a little taste for later, a glimpse.\n\nYes, sir. Please keep telling me what to do, please. I'll do anything, sir.\n\nOf course you will or I'll make you.\n\nI managed to get myself together and stand up, sending him flirtatious messages but at the moment they had an undertone of serious desperation. I walked to the subway and took it home, going up to my apartment while talking to him. And I slept in my favorite recliner like a curled up puppy so that he could see me if he wanted to or could. If he could, he didn't bring it up and I wasn't allowed to ask. Instead he sent me threats, dark erotic tortures he wanted to put me through, and all the while I burned with a hunger I couldn't sate.\n\n\u2014\u2014\u2014\u2014\n\nIvory\n\nI couldn't keep calling her while she was at work. It wouldn't be as much fun if I did and she'd figure out for sure it was me all too soon. No, I had a plan for how this would go so I left her to wonder about the caller who jerked off while she spoke of games. I knew she already suspected but there would be some doubt there and I wanted to let that doubt take a nice hold and fill her with paranoia and fear while she wondered. Had it been me? Would she hear from that person again?\n\nI grinned with a sense of delight all throughout the weekend. I would wake up and drink my coffee and catch myself smiling while staring out the window, thinking of her restlessly trying to sleep while she daydreamed of the whip video, envisioning how she might agonize over her obvious arousal to the call she'd gotten.\n\nBut I couldn't stay fully away from her either. I ended up at her apartment building while she was away, running her game nights and LAN parties like a fun little fae. I slipped an envelope under her door that had photographs I had taken one night when she was at work along with a note of instructions for her to go down to her apartment's basement. Right before I knew she was on her way home I hid a box for her behind the water pipes. My instructions also told her how to get there without being seen - because shady sneaking was my part of this game and not hers and I didn't want her confronted - and where to look and then went to my apartment and waited, staying in the dark again so she wouldn't see me.\n\nShe looked like she'd had a draining day when she walked in, wearing her standard jeans with a gamer shirt. But then she stepped on my envelope and looked down. I couldn't see her expression but knew her eyes were probably widening. Some fear, some excitement.\n\nShe threw off her backpack and grabbed it, evidently forgetting whatever had made her walk through her building with such exhaustion. Instead of the tired girl I had seen, there was an energetic thrill seeker, chasing the lightning I gave her and I smiled at her newfound energy, grabbing the binoculars to see her better.\n\nTwo was such a delight and easily the most edgy playmate I'd had in a long time, at least ten years now. She opened the envelope, ripping into it, and sank down into her favorite recliner, sitting on the edge while she looked through the pictures I'd taken of her. They were good pictures too, ones where she'd been looking through a box of shipments and grinning with the packs of playing cards she was opening. She had posted the rare ones on her Facebook page to sell for instant profit and there were buyers before the day had ended, so some pictures had her checking messages. There were pictures from when she'd gone to get coffee later when Tate was there. I'd used my phone camera for all of them so they weren't the best quality but my phone was a hell of a lot more discreet than a goddamned Nikon so it was what it was.\n\nHer eyes were wide as she looked and then she did an action that I wish I could have caught on camera, one that I would remember as a favorite moment. Because she turned and looked over her shoulder in her own apartment and I had to smile, my heart going dark with wicked pleasure. I was getting to her and it thrilled me, power trip adrenaline rushing through me. What would it be like to break into her apartment and wait for her to come into her bedroom where I could hold her down and rape her while she struggled and cried tears for me.\n\nBut I wasn't to that point yet. There were a few reasons why, but the biggest one was that there's a line that is violating someone's home door and I hadn't played enough games with her yet to do things like that. For her case, it seemed like a good rule to at least wait until I was close enough to her that I could copy her key. If I had to use a hidden spare from under the doormat or break in another way, it was, first of all, shady and second of all, too goddamn soon for that shit.\n\nNo, the way I had planned it out to fuck with her and eventually fuck her was perfect as it was. It was a game that had ruled my obsessions for so fucking long that I thought about every little detail. Now that I had a person to do it with, a specific character to plan for and around, the details were even more solid.\n\nFor right now those details involved a more subtle form of fuckery than sex. For right now I watched her fearfully read my note and it made me smile. She seemed to think about it for a minute but then I saw the beginnings of my favorite expression.\n\nIt was that little smile she had in her photos. That little quirk that just hinted at the devil behind her innocent fae face. And the more I learned of Two and played with her, the more I was realizing that it was a devil to rival my own and mine was a sick fuck. But while my entire demeanor and stature screamed of threat and broadcast my demon, her appearance was tiny and innocent.\n\nExcept for that smile where a little mischief shined through. She left her apartment and I waited while she obeyed my commands.\n\nSure enough she was undeterred in obeying me. She came back with the box of gifts and sat it on the table, still in plain sight of her window and that was on purpose. She stayed there for my viewing pleasure if I so desired.\n\nGood girl.\n\nShe opened the gift and blushed, but grinned as well, and I had to laugh. She was so open, her heart on her sleeve. She set the butt plug I'd sent her to the side, staring at it with trepidation. It was the largest version of an extended wear plug and it was unforgiving steel to hurt her little asshole. I'd also put a rather special set of cuffs in the box, a comfortable pair that, nonetheless, padlocked shut once they were adjusted on the wrist. Each cuff had a notch to adjust the leather and a heart shaped padlock that fit perfectly through the hole in the notch. A nightie was the last thing, a sheer black one that would show off her tits and it had a nearly see through thong to tease me. I smiled at the sight of her staring at it in shocked joy and got my phone, deciding to play some more.\n\nThose cuffs are the exact ones I use with my whipping post. I thought you might like to get used to the feel of them while you stretch your asshole to eventually take my cock. You can even lock them if you're feeling brave, but who knows where the keys might disappear to if you're out with them and not paying attention?\n\nShe jumped when the message went through and dove for her phone across the table. Her head snapped up and she looked at the window while my smile broadened. But she was grinning too, that same wicked grin that she'd had when she had run to the back of her apartment to write \"Flatline Whore\" on her tits. It was a grin that meant she was going to tease and push me.\n\nWhile I watched she fitted the cuffs, locked them, and threw the key carelessly to the table so that I laughed. Naughty fucking girl. I had no doubt that she was going to go out over the course of the week and leave those keys anywhere she thought of to leave them.\n\nI played with her that night too, commanding her to wear the nightie while she made cookies and danced around her apartment. I made her wear the plug too and she winced at times. She messaged back and forth with me and drank a little wine. Or more than a little. I watched her get steadily more drunk while I scolded her.\n\nShe fell asleep in that recliner where I could see her shifting restlessly with her sexy little cuffs and her massive butt plug torturing her through the night.\n\n\u2014\u2014\u2014\u2014\n\nTuesday\n\nMy weekdays were no longer boring. I looked over my shoulder every time I walked to the subway, wondering if any of the people around were him. Especially at night I looked and hurried, fearful of every moment now. He messaged me daily, taunting little messages that asked what I was doing or thinking about.\n\nBut he sent me other messages now, too. Messages where he asked questions about music and movies. He let me talk to no end about how much I loved Lamb of God and how Metallica's best album was definitely either Master of Puppets or ...And Justice for All. It turned out he liked the hard stuff too. We went back and forth over how the opening riff of Raining Blood was a work of true artwork.\n\nI wondered what he was doing during those moments. They always seemed to happen during the day so I imagined he was at work with a little down time that he decided to use on me. And then I wondered what he did, but I couldn't ask those things about my play stalker. He stayed anonymous, taking pictures of me, naked and dressed, while I didn't even know so much as his hair color.\n\nIt drove me wild. And it was during one of these conversations that I got a call on the work phone again. I was sorting out comic books and new releases and it'd been days since Flatline had sent me the toys and played with me, stalked me. It made the thought of that phone call torture. Every day felt like another time he would have called to tease me again, if it was really Flatline, but I wasn't sure. What if this was his teasing instead? Leaving me to think and torment myself for him?\n\nThe phone rang and I answered with my greeting, alone for a good few hours at the moment while I messaged my distance dom who wasn't so distant.\n\n\"Hello, Tuesday.\"\n\nI froze at the voice, swallowing and looking at my phone. It was cool and commanding as before but here was the thing. Flatline was still messaging me on my phone about the brilliance of the song Damage Inc.\n\n\"Hello.\" Thank God for my years of customer service. Without the reflex I might have sat there for a full five minutes like an idiot, staring blankly at partially sorted comic books. \"Did you want to talk more Blackgrave?\"\n\nHe laughed, to my mortification, laughed at me. He had to know I remembered him because he masturbated over the fucking phone, right? My phone got the message from Flatline and I shook, an actual body quiver of fear. What the fuck was going on? Was it him? I couldn't even decide and I felt a little bit of panic claw up my throat.\n\nCan I ask you a question if it's kind of within the rules?\n\nI sent it to Flatline while whoever was on the phone kept talking without missing a beat. If it was Flatline he was fucking good because I didn't hear a hint and that's what tripped me up the most. It was freaking me out a lot. The man on the phone didn't break conversation the way someone would if they were texting as well. Well, the way someone generally would. I had known some people who could do both but not many. Maybe it was Flatline and he was one of those?\n\nGod I was turned inside out and I just barely could focus on my phone friend's question to remember it.\n\n\"Not this time, but I do want to order it when I get a chance to come in.\" He was never going to come in and order it, whoever it was. That's how I felt anyway. \"This time, I wanted to know where to start with the Batman graphic novels and ask if I could order those from your site or if they would have to be special ordered.\"\n\nChrist, another one with a lengthy reply. \"Okay, so, where to start.\" He just wanted to hear me talk, I knew, so I could just dispense with the questions entirely and go right through the explanation and oh, God I was going to fucking play along again. It wasn't even Flatline... but what if it fucking was? I read his answer while I made my reply. Sure.\n\nWhat are you doing? It was a dumb question and I knew, I knew he would answer as he damn well willed. If he felt like misdirecting to fuck with me more, he would. If it wasn't even him, the answer wouldn't make a difference either way, but God, God, I had to ask something because I was losing my mind a little. When I answered it was higher pitched than usual. \"Okay, so it will depend on how dark you want. If you want the delightful grittiness of DC's underworld, the New 52 remakes are what I think is the way to go. They made a run that became a graphic novel called Death of the Family-\" I stuttered in talking about one of my favorite comic series when I heard that shake of breath. My phone had gone off already with Flatline's answer and I hadn't gotten to look at it because if he could answer while talking, then I was damn well the opposite and could definitely not. But now I dove for it like a life preserver, squeaking in my answer. \"Death of the Family instead of- of-\" Listening to a boring as fuck accounting check up and getting coffee. What would you rather I be doing, Two?\n\n\"Instead of?\" He prompted me and again he was amused, his fucking deep voice so commanding and controlling that I forced myself to continue, feeling like I was in high school and incapable of saying no to anyone again. As if I hadn't gone through the torture of learning some damn assertiveness to try to be an adult.\n\n\"Instead of the previous Death in the Family. They upped the ante with the new ones and made it even more twisted and now it's a neat little ride. But beyond that one, because I realize that's not a lot of material, but after that one-\" The voice shook at the same time my phone lit up with another silent alert and I closed my eyes, feeling way too much, torn on an edge where I could fast fall off into either terror or the hardest orgasm I'd ever had in dreams or life. \"After that one, Batman Hush is just pure awesome too. I don't consider it quite as dark but-\" His breath hissed in a shudder in my ear and I whimpered. I actually broke and whimpered. And my voice rushed out, panicked, when I continued again. \"And also the New 52 version has a lot of dark tie-ins that are pretty cool in the universe like John Constantine appearing in... in... in...\" My pussy pulsed. His breath ran quicker. My phone lit again. It couldn't be him when he was so obviously doing this while on a business call too, could it? Or could it and he was just doing so much in his power to fuck with me and oh my God it was working and there was a wet spot on my fucking jeans again and my clitoral hood ring tormented me. My voice came out frantic and needy and I couldn't fucking stop. \"In Neil Gaiman's Sandman series, which is both dark as all delightful hell and crazy good and ties in with DC and there's a whole graphic novel about Lucifer and the Art of Shredding by-\" Fuck me I had looked at my phone and read the freaking title of a Pantera song and fucking cursed. His breath was intense in my ear. \"I mean. Um, Lucifer which is the the TV show now and all the references from New 52 are a lot of fun.\"",
        "Again, that growl in my ear. No one had affected me like this, fucking no one. Ever. I was a wreck and I wasn't even talking about Batman anymore. I had been freaking rambling and if it wasn't Flatline on the phone talking to me, then it was still Flatline who was fucking me up like this. If it was a random guy, he was playing a part he had no idea he was playing.\n\nHe laughed in my ear, wicked, sinful laughter that sent cold chills of warning down my spine. And he hung up, leaving that laughter as the last thing I heard. It was like the devil in my ear, that same kind of voice Dave Mustaine used to sound purely satanic.\n\nI finally turned my attention to my phone, my hands shaking.\n\nAnother one that bangs hard is Pantera. The Art of Shredding is so underrated.\n\nAre you still there, Two?\n\nAnd then Everything okay?\n\nI finally answered. I'm still here. Sorry. Pantera is amazing. Walk is overrated but awesome but I hate that it's what everyone knows. I'm scared to be in the store by myself now.\n\nEven my messages were frantic and rushed. I didn't have anyone to turn to besides him because he was doing what he wanted. He was head fucking me so hard.\n\nNo pity from him. No mercy. He messaged back instantly. Good. I want you on edge with continual fear and arousal, so go to your back room. This time I want you to rub your clit until you cum and then put your butt plug in and wear it for the rest of the night. Video it so I know you're being a good girl. And you did behave and take the toy with you like I commanded, didn't you?\n\nYes, sir.\n\nGood girl. The words were like a balm, like a blessing. The praise was more than I could have hoped for and the commands were soothing. I fell into the role of submissive like wrapping myself in a comfort blanket. I put my cuffs on too, for more of his distant control, leaving the keys on my table with the register. I went quick, stroking myself for him, though I knew no one was coming in while I was in the back room during this hour. The boxes of comics I locked behind the register anyway and listened for the door, which generally hit the bell when opened.\n\nI videoed myself stroking my clit in circles and nothing else since that was what I'd been commanded. There was so much cum all over my fingers and stranded between them that it was obscene even if I didn't finger myself and my cry was smothered to try to keep quiet but still so fucking slutty. I used the cum to spread my asshole and videoed myself whimpering and whining with suffering as I inserted the brutal toy.\n\nI sent the videos to him and walked back out to a store that was still empty. This was my upkeeping hour and it was a routine I had learned so very well from owning the store. It was during school and work hours on a weekday and always a routinely safe hour to get my projects done. But then I turned to the counter and realized that routine had been fucking broken.\n\nThe keys to my cuffs were gone. I ran out the door, thinking I should have my business taken away from me and I should die down an alley. But he wasn't there. There was no one in front and no one going towards the parking garage or to where I knew the subway was. I ran back to my phone in time to see his message. Bad fucking girl. I hunt you in this. You don't chase after me. Do you want to be my submissive or not?\n\nYes! It was a desperate response. Yes, sir, I want to be your submissive.\n\nThen no more fucking orgasms for the next three days and don't you dare try to steal any. You suffer your punishment and obey me. And maybe then I'll give you the keys to your cuffs back.\n\nYes, master. I'll obey. Can I message you when it feels too much still?\n\nOf course, baby. I won't be so mean as to cut you off.\n\nI stroked my cuffs before answering. That's because it's not really punishment, is it? You didn't care about my chasing you just like you didn't care about my looking out the window or looking over my shoulder to check. It didn't matter what I did. You were going to take my orgasms either way.\n\nI waited for the answer. For the first time since we'd talked he spoke with emojis. Three devil emojis that were followed with the message. Good call, baby.\n\nCan I beg you for something?\n\nBut of course. I'm delighted to hear your terror and begging.\n\nPlease... please when you make me suffer tell me sometimes or whenever it pleases or... I don't know... but tell me when it's actually punishment?\n\nAww. Does that make it easier, little slave heart?\n\nYes, master.\n\nWell, because you were such a sweet girl and because you used that oh, so provocative honorific, I'll agree to that. You're right. It didn't matter and I do love watching you look over your shoulder. Some things are too intense for funishment, yeah?\n\nI breathed easier. I'm sorry. I'm not sure what's wrong and it's weird because I always love being a sassy brat or being mischievous. I'm sorry.\n\nI was fast realizing that he was so weirdly kind despite his cruel, hard proclivities. Don't apologize, baby. It's just the way it happens sometimes when there's so much fear, when the words \"good girl\" are a kindness to give you some strength, especially when they're so hard to earn and so very well deserved.\n\nI grinned, feeling better, rubbing my cuffs. I better be a good girl! Do you know how hard it's going to be to not come with the things you do?! I go to sleep daydreaming of your cock and see the whipping post in my nightmares and wake up with my asshole filled with a pain toy and so much cum on my sheets that I've had to change them twice in four days!\n\nHa! That was his immediate answer but then it was followed by more. Speaking of which, since you were a good girl showing me yours I'll show you some more of my toys. And since you have that plug in for the rest of your work night you don't have to wear it to bed tonight but you will the next two. You'll sleep in your chair for me so I can see you suffering when I wake up at night, yes?\n\nYes, master.\n\nHe continued his filthy talk while I started to get the customers from after school and for the first time I realized it comforted me to have others in the store with me. I put on my sweatshirt to cover my cuffs and worked with an easy smile.\n\n\u2014\u2014\u2014\u2014\n\nIvory\n\nI had to take a moment to consider my movements and give us both space while she suffered her orgasm denial for me. Well, some space. Alright, it wasn't a lot of space but it was an honest effort. I started every morning with a message to her to tell her how beautiful she was to watch, quivering in her sleep with her face flushed in terrible arousal. And that night I kept on my promise. Instead of the whipping post in my dungeon, I took a video of my torture rack and the sound of my leather wrapped cane striking it when I flicked my wrist. And then I went to my other apartment where I could watch her, already deciding I was spending the next few nights there to see her. Poor little Two. So horny. So needy. And all I gave her was cruelty and more cruelty.\n\nI taunted her to the max while considering how best to continue. Her voice on the phone had been broken with real terror and frantic confusion. She didn't know what to feel anymore. I thought one more week of confusion might do the trick and then we could move on to a little different game. I would still leave her confused because oh, how I adored the quaver in her voice. I had cum so fucking hard while masturbating to her voice that day and was blatantly lying to her in the messages. What are you doing, she had asked. Ha. Like I'd tell her the truth. No, I wanted her a shaking mess, wanted her to be scared to go to the subway, wanted her to message me while she walked in all that stark terror.\n\nBut I had to do it carefully. I didn't want to break my little Two, never. I wanted to play with her, not ruin her for the future of my desires. I couldn't have a playmate who continuously screamed in traumatic paranoia. I wanted one to play edge games with me while she cowered.\n\nSo, carefully. With nice encouragement. It was a tightrope on when to use the gentle speaking and when to torture. And in between those still were the conversations we had that weren't either of those things, where we spoke of hard metal bands and horror movies. She liked all the same things I did and then some more as it turned out. I flinched to consider those conversations actually because... I didn't want to think about why. I only knew that I wasn't going to stop doing them and they were necessary in some way.\n\nI watched her through her denial days, so proud of her willpower. It was obvious that she was in such pain and she messaged me with pathetic begging to ask me to distract her. When I was at work, going through the now dull motions of running my company since it had become so stable, I would take up my phone and answer her kindly. But she obeyed. Beautifully, she obeyed me.\n\nOn that third day exactly, I waited until she went to the back room of her store and quietly went in to to set the keys on her counter with a small note I had written for her. \"Such a good girl,\" it read. \"Why don't you go and reward yourself and imagine it's me?\"\n\nThis time, I waited around to watch her in a blind spot outside her store. I saw her stop and stare at the counter... and then beam with a pride that she had well earned. Such a good girl she was for me.\n\nMy heart throbbed a little too hard and it was suddenly torture that I didn't want to think too much about. What the fuck was this shit that made my chest feel heavy?\n\nAnd yet even while my thoughts raged, I smiled when she sent me the video not even five minutes later and it was a full, stupid smile. She was in her back room and she finger fucked herself furiously, bringing herself to orgasm. As I watched, she slapped her clit, her moans so hot they were like a blowtorch to my already crazy fantasies. She came again in a frenzied mess.\n\nAnd then she did it again. All so quick it made me laugh. Good girl. You passed one of my tests baby. I'm so proud of you. Now, keep behaving for me and be an obedient girl and I'll make it worth your while, understood?\n\nYes, master!\n\nI laughed at the answer and had to make myself walk away.\n\nI called and tortured her again during the middle of the week, masturbating to her voice while making her talk and listen to my depravity.\n\nBut it was the Friday a week and a half after her orgasm denial training that I made my real move. I couldn't stay away from her anymore. Tuesday. Quirky little Tuesday. Metal head Tuesday. Deviant Tuesday.\n\nI wanted her next level. And she was so obviously more than receptive enough to giving it. She gave me all kinds of signs when we were talking, which was necessary when I didn't want to tell her my games because that'd ruin a lot of the fun.\n\nI just took from her and of her. And this wasn't any different. It was who I was, who I always was, but at least she seemed to like who I was. For the first time in a long time, a very long time, I felt accepted, enjoyed even, and it was wonderful. It was something I hadn't known was missing, this feeling of companionship.\n\nIt was strange too because acceptance wasn't usually something I cared a fuck about, but this feeling of not being alone in the world? That was what made it important for me.\n\n\u2014\u2014\u2014\u2014\n\nTuesday\n\nI didn't always have MTG tourneys on Friday. Sometimes I showcased board games and I loved these nights. They were happy nights and I always showed one game that was a short game for casual players and one game that was way more in depth for people who wanted to try out something more complicated and had the time. It was always a success and I could make up the money with snacks and energy drinks alone. It was for these nights that a lot of my free time was spent looking through board game review sites for the most fun and engaging and downright challenging games I could find.\n\nI was beyond pleased when I started closing the store by myself, so pleased I sent my two weekend employees home early because of the major PlayStation release that had come out and I knew they didn't want to be cleaning up at the store. Tate and Jackson didn't ask and they never would but I rarely made them close because it felt cruel somehow when they went to an awesome college and should have some Friday nights to themselves. On the few occasions I did ask them to close, they never had a problem with it. And they were really good at what they did with me. The things I didn't know, they did. Because despite my deep geekiness, I wasn't perfect about it.\n\nAnd closing was actually kind of soothing. Or it had been before the phone calls. I looked up when the phone rang and felt my body shake with fear. Was it him? I had heard from him earlier that week already so maybe it wasn't. Sometimes people called after hours when they didn't know the hours or when someone left something while playing a board game... I picked up the phone, my hand shaking, my knees going a little weak, and managed to get through my greeting.\n\n\"Listen to me very carefully, Tuesday.\" I whimpered because it was him and there was a tone to his voice that made chills run down my spine. \"Are you listening?\"\n\nHe made it perfectly clear that I was to stay on the phone and do whatever he said with nothing but the intensity in his voice. \"Yes.\" My voice was so hoarse and my tongue was suddenly dry with terror. \"Yes,\" I repeated, a little louder.\n\n\"Good. Go to the far right of the store. Pretend like you're walking through the door and go to the very first bookshelf you see. Do you know which one I'm talking about?\"\n\n\"Yes.\"\n\nI made like I was following the instructions, going to the front door, trying to sneak to set the deadbolts. Why the hell hadn't I already? His snarl in my ear made me choke out a cry. \"Don't you fucking dare. Do what I fucking said and listen to me. If you listen you won't be hurt and you don't want to be hurt, do you, Tuesday?\"\n\nMy heart thundered. \"No, sir.\" Maybe if I was soft and polite he'd be nicer. Maybe it wouldn't be so bad. Maybe I wouldn't die. I had become ever more doubtful that the caller who tortured me was actually Flatline.\n\n\"That's much better.\" He practically purred it when I broke and obediently went to the shelf he spoke of. My eyes instantly fell on the book that stuck out just a little bit.\n\nIt was Death of the Family. I whimpered, wondering if this was what a lamb felt like when it obediently walked to its own damn death and then instantly discarded that thought. The lamb usually didn't know what was up. I could imagine and it was driving me to the edge of insanity. \"Open the book, Tuesday.\"\n\nI shook so badly that it was amazing I could obey him. And when I opened the book, I cried a little. \"Please no. Please d-don't hurt me.\" There was a terrible humiliation in crying and pleading to this person who mostly only laughed at me. But when I saw the eye mask in the book it broke me. It wasn't the serious kind of gear that Flatline had shown off in his videos when he showed me the whipping post and the rack. This one was simple, almost like a sleeping mask. The disconnect made me lose hope that this was any kind of game.\n\n\"Do what I say and I won't hurt you. We won't even leave the store, if that comforts you. Put the mask on, Tuesday.\"\n\nI trembled as I did it but obeyed him, making sure I couldn't see. Which I couldn't. The mask, for all its simplicity, was effective as all hell.\n\nOver a roar of panic I heard the door lock and squealed in fear, but just as soon as I could remember anything to try to take the mask off, try to fight, he was there. And he was big. His grip felt like it could snap me in two. When his torso brushed me it felt like I'd hit a wall, except it was warm. He jerked the phone from my hand and quickly pulled my wrists in a hold. Something abrasive locked my arms behind me, securing me, and I somehow realized it was a zip tie when I heard the sound of it. \"There we are, you helpless little fuck.\"\n\n\"Please! Please!\" I cried the words out miserably, being jerked in front of him. He manhandled me with no reservations, so that I felt frantic and disoriented and when he finally shoved me forward to a table I didn't even know which table it was. I felt the rougher surface against my cheek and knew it was one of my store's tables, knew we hadn't left, but I no longer knew anything else.\n\nI thought I'd been shaking before but when he unzipped my jeans and tore my shirt, literally ripped it from a weak seam, I realized my fear hadn't made me shake at all. Those little tremors were nothing to the way I vibrated all over, from head to foot.\n\nWhat was worse? It wasn't entirely unpleasant. And the side of me that enjoyed the fear and the violence was fast reacting to this man, whose face I didn't even know. I tried to keep still, tried to not react. I felt something sharp across my chest and gasped when he cut through my bra, then shrieked and struggled when I felt a cold blade touch my throat. I meant to be good because he was violent and his reactions would be terrifying, but I couldn't stop myself. It felt so cold and so sharp.\n\n\"Be fucking still, Tuesday. Be still and quiet if you don't want to get cut. I said I wouldn't hurt you if you listened to me, you horny little whore, so stop flirting with me unless you want some pain that badly.\" His voice was the worst part of it all. He was violently amused and when he pressed me forward I felt the outline of his cock against my ass and, my God, he was hard for it. I really was turning him on something fierce.\n\nAnd that, horribly, turned me on even harder. My body responded to him, shuddering even though a knife stroked my throat. He shoved my jeans down as carelessly as he'd taken the rest of my clothes and the knife left for a minute while he knelt. \"You kick me, little bitch, and we'll spend the night listening to you beg and cry while I leave nicks from the knife all over you, understood?\"\n\n\"Yes,\" I whispered. It was all I could manage for an answer. Please don't hurt me, please don't hurt me, please be Flatline, please don't kill me.\n\nHis hands were so large when he pulled my jeans and shoes off, leaving me naked and humiliated. He stood up to press me down onto the table, one hand holding my wrists. The other hand I didn't feel for a moment.\n\nBut then he spanked me and I shouted in shock, stunned for a moment. His hand squeezed the flesh where he'd struck it. I couldn't get over how big he was and was abruptly struck by just how tiny I was. His entire hand was larger than the asscheek he punished. And he didn't stop with that one strike. That was just the beginning.\n\nHe slapped the other cheek four times and they weren't soft, playful spanks. They were hard and cruel and the violence that he radiated was even hotter when he was striking me. He switched back to the other cheek, his hands hard enough to be like the times when other doms had paddled me. And the blows kept falling, the pain layering with repetition. I tried to suffer in silence, hoping that he would lose interest, and I could take a fair bit of pain, but after 18 when he still wasn't slowing down, I broke from with a wail. \"Please! Please, you said you wouldn't hurt me!\" I danced on my toes, but in answer to my movement he stepped on my shoes, holding them down with one foot over both of mine.\n\n\"I did say that, didn't I?\" And yet even as he spoke he kept spanking and tormenting the already heated flesh with squeezes. \"Let's see if I'm hurting you, Tuesday, because I don't think I am.\"\n\nAnd then he did the worst thing he could have ever done. He thrust two of his fingers into my pussy.\n\nI was so fucking drenched that it was obscene. I could hear it when he filled me and I burst into tears, realizing that my body had never been so aroused and he was controlling it against my will. I struggled in my zip tie, thrashing against the table and I couldn't even tell anymore if I was trying to get away or trying to rub something, anything, against my clit. I just bucked, internally in a maelstrom of torture. \"No! No! Don't, please, don't!\" I was shouting it, wild and frantic and held down like prey.",
        "He was laughing at me, damn him, and I hated him for it. \"Such a wet little cunt.\" The words came out a growl of violent pleasure, much like the growls I'd heard when he'd orgasmed while having me speak to him. And damn him for that too because my body shuddered in desire for him at the sound, at how impossibly big he was, at how his energy was pure fucking animal. All of him was something feral and terrible, some wild thing that started the tempest inside of me like a goddamned sorcerer. \"I don't think I'm hurting you at all, Tuesday. I think you're a naughty fucking girl who craved a hard spanking.\"\n\nHe went back to that spanking as he brought it up, only this time I felt defeated and broken by his words because I felt like they were true. He was assaulting me and all I felt was pleasure at that fact and hated myself for it. A naughty fucking girl, he'd said. It felt like a brand I had earned, my scarlet letter.\n\nI whimpered and took his punishment for that, thinking that I absolutely deserved it and worse. I arched back and he laughed when soft pathetic mewls escaped me. \"Please,\" I whimpered. \"Please, I'll listen. Please, I'm good, not bad.\"\n\n\"We'll see in a second.\" I heard something tearing but I was dazed and floating in some strangely exquisite hell. I just listened, lost, and not entirely sure what anything meant anymore.\n\nBut then I felt the blunt nudge on my slit and moaned. \"No... please...\" but it was so weak as to be laughable and he did laugh at it.\n\n\"Quiet, Tuesday. Look at how you're dripping on your floor for this. God, you're a fucking masochistic slut, aren't you?\"\n\nI didn't disagree with that but I squirmed and struggled when he pressed inside of me, choking in shock. \"Oh my God, no!\" I had had my fair share of kinky sex and I didn't know what was wrong when he started to force into me and I couldn't stop and breathe and think about it, but he hurt me. Even with the amount of cum and even with my pussy more than eager to take him, he hurt. I could feel him throbbing with every inch he slid inside of me.\n\n\"Such a tight fucking hole for such a horny whore for me, Tuesday.\"\n\n\"Stop, please, please! Please, it hurts!\"\n\n\"I'll stop when I feel your cervix. Christ, look at you. You don't even know me and you're such a slut for it that your arching back for fucking more. You'll be begging me for harder by the end of this, won't you?\"\n\nI cried. Actual tears of miserable heat, because he was right. I was arching back for more of him even though it hurt. I would like to claim it was because I was trying to get it over with or some other reason like that, but I wasn't sure. He stretched me so wide, so painfully wide that I might have been craving for more of it. \"I hate you,\" I whimpered. And it was the most pathetic sound in the world because his cock made me feel so horrifically vulnerable that I couldn't even summon any kind of real fight anymore.\n\n\"Do you?\" He moved his hands from where he'd been holding my waist, fisting one in my hair and curling the other around my throat, lifting me so that the angle was even deeper. His next push was a thrust and I squealed with the abrupt force that ground his cock into my cervix. I thrashed on him, writhing. \"Do you hate me or do you want more?\"\n\n\"More! I want more!\" Delicious agony and torment were pulsing in waves from where he massaged that spot so deep inside of me, where he humped me mercilessly, as if he had every intention to bruise me inside and out. But the stretch and the fullness and the fact that he was so deep and I couldn't see anything, was forced to just feel him... It all set me off like wildfire.\n\nHe laughed again. \"Such a whore. Apologize for being a bitch then.\"\n\n\"Please, I'm sorry I was a bitch! Please, I'll be a good whore! Please!\" My cries trailed off into needy repetition and my world was going white at the edges. It seemed like the feral pleasure of this should kill me. My heart was thundering and I felt blood on my wrists where I struggled so fucking hard around him, but it wasn't the struggling from earlier. It was a struggling for more friction, a sexual kind.\n\n\"Good girl,\" he said and this time there was condescension in his voice. I whimpered and then he withdrew and I cried out at the loss of him. But then he thrust and I screamed in ecstatic joy, blood rushing through my ears.\n\nHis pace was brutal when he started, but I was grateful for it because if I had time to think I would have felt nothing but horror. As it was, it was almost merciful of him to fuck me so viciously because I couldn't think at all, could only feel. He was an animal but I was an animal like him and I imagined a monster behind me, using me like the prey I was. I imagined some grotesque gargoyle of a creature making those soft growls that reverberated through me and my body loved that thought. As soon as the image of a satanic beast crouching over me came to mind, I rocketed up the pleasure ladder, racing to reach the top. He reached around to stroke my clit and I shouted a howl of a sound, incoherently begging. He went harder, faster, torturing me with pleasure. \"That's right. Give over, Tuesday. You know how much of a whore you are, what kind of a slut you are. You're the kind that drips so much fucking cum on your floor while a stranger is raping you. Christ, that's more cream than even I've ever seen from the filthiest fucktoys. You're drenching my cock like a goddamned river and you haven't even finished yet.\"\n\nI hadn't orgasmed yet because I was fighting still, trying to not do that last terrible thing, but his words ripped through me and he abruptly slapped my clit and tugged the piercing there and my world blasted apart. I was dimly aware of the keening sound coming from far away, like a howling little animal wounded in a trap.\n\nI'd had a lot of orgasms and most of them were pretty good. With doms who knew how to play there was always a good few orgasms and when I stroked my clit alone at home, I knew how to do it and came pretty hard and easily. But nothing, nothing was like what the demon behind me did to me. Only Flatline's online forays came close to giving me anything like the one my caller gave me. I couldn't hear, couldn't see, and it felt like the ground had been obliterated from under me. I shattered apart, my mind going dead with so much pleasure.\n\nI came back to him still fucking me, his cock railing me like a piston. I was just barely aware of the trickling blood on my wrists and the feel of his hands softening their hold. \"Fuck! Fucking Tuesday, just Jesus goddamn...\" He trailed off, riding me through his own wave of bliss while I realized my eye mask was soaked with tears. I moaned, my knees shaking. He stroked me after his finish, his hand tracing a line down my spine, and I sniffled pathetically. \"There's a good girl,\" he crooned. \"That's how good little whores act and take it, Tuesday. And I suggest you start using toys to make yourself more ready for the next time I want to feel one of your holes milking my cock.\"\n\nI moaned again, wondering how often he would want this, wondering if I didn't want more of it. He chuckled to my soft sounds and withdrew. My knees gave way as soon as he wasn't behind me to support me, but he caught me easily and set me on the floor. \"Good girl. On your knees where you belong, ready to take some cock down your throat.\" He laughed again at his own sadistic words, loving the fact that he could torture me with them and he could. He had felt my every reaction to what he said and did from my pussy communicating it straight to his dick. \"Now, behave yourself, Tuesday. I don't want to end this on a punishment note and you don't want that either, do you?\"\n\n\"No, sir.\" The words slipped out so easily, so goddamned easily it was hateful. My submissive tendencies rose like a tide in the wake of what he'd done and it was true. I desperately wanted to please him.\n\n\"Aww. Look at you, saying sir like a good girl. Don't take your mask off. I will tell you when, understood?\"\n\n\"Yes, sir.\"\n\nHe chuckled and I heard the sink start, heard the rustle of plastic. I didn't know what any of it meant and I couldn't have cared less in that moment. \"Saying sir like a good girl\" he'd said and Flatline knew I said sir all the time, expected it. I was more than convinced that a stranger had given me the most intense orgasm I'd ever felt, had held me down and raped me while I bled from zip ties, but I couldn't even find the willpower to care. I was defeated and there was no fight left.\n\nI jumped when he grabbed me by my hair, lifting almost gently so that I rose on my knees, wondering what he was going to do now. Kidnap me? He wasn't acting like it. Fuck me some more? Maybe.\n\nNone of what I thought was the answer. He pressed a soft terry cloth between my legs, gently washing my pussy. I moaned at the feel of the warm water and leaned to him, wordlessly begging for more of his almost gentle care. Almost gentle, because violence still sparked through his every mannerism, like a leashed beast waiting to get out and play again.\n\nIn answer he chuckled. \"That's a sweet little girl. See how kind I can be to good little whores who behave themselves?\"\n\n\"Yes, sir,\" I whispered.\n\n\"And you are my good little whore now, aren't you, Tuesday?\" Soft menace coursed through the words expectantly.\n\nI moaned but answered with what he obviously wanted to hear. \"Yes, sir.\"\n\n\"Good girl. I was kind to you this time since you were startled, but next time if you go to try to lock me out when I call to give you directions, I'm going to leave you with cuts on your tits and I'll hurt you too badly for you to come. No orgasms and a lot of pain, Tuesday. I don't want that.\" He said the last bit with such twisted sincerity that I shivered. \"I don't, little Tuesday. I'd rather torment you some and feel you milk my cock when you cum so hard I have to cover your mouth. You don't get any more leniency. You obey me like a good girl next time, understood?\"\n\nI closed my eyes behind the blindfold, feeling more tears escape. Because his voice made it obvious that there was definitely going to be a next time. I both dreaded it and was shaking with desire for it. \"Yes, sir.\"\n\nHis lips brushed my forehead and it shocked me so much that it almost scared me. He laughed. \"But if you be good for me, be my horny little whore and obey me, I'll be so very kind again. A little spanking, some easy pain with a paddle or belt, some clamps, and you'll cum all the harder for it. You know that's true, don't you, Tuesday? That you're a little pain hungry whore?\"\n\nI moaned because my God, it was definitely true. I could still feel his hand searing my ass and all I could think of was how a cane might feel in his hands. \"Yes, sir. I like canes and whips and straps, too.\"\n\nHe laughed. \"Of course you would. But you have to be good if you want the nice kind of pain, understood?\"\n\n\"Yes, sir, I understand.\"\n\n\"Such a good girl when you try to be. Now, I'm going to cut you free, but you don't move. I want you to stay kneeling right here. I'm going to give you your store phone and when you hear it ringing you may take the blindfold off.\"\n\n\"Yes, sir.\"\n\nHe cut the zip ties and left me there with the phone in my hand while I still knelt on the storage floor, still blind and submissive where he left me. When I was sure he was gone I whimpered pathetically, \"But someone already owns me.\" And then I felt weird that somehow the first thought I had after enjoying what had happened was that I was pretty sure it wasn't Flatline and I was somehow cheating on him. Not the sex. That didn't feel like cheating because we'd both said exclusivity wasn't a priority. But the kink? The hot intensity? That felt like cheating.\n\nIt was a while before the phone rang, so long that I wondered if he had forgotten about me, but I didn't dare move from my knees where he'd left me. Not after his terrible threats to torture me if I didn't obey. I jumped when it finally rang, having fallen down into a dark, submissive world.\n\n\"H-hello?\"\n\nHe didn't answer. He hung up and I lifted the blindfold with shaking hands, holding it close to my chest and staring in front of me at the back door to my storage room. It wasn't fully closed and hanging off of the door handle was a plastic covered dress, like a fairy's night party dress. The top of it glittered like a dream and the bottom flared out adorably. A jacket went with it since it was sleeveless. The tatters of the clothes I had worn to work were gone. My gaze went back to the floor and I swallowed at the sight of all the cum I had left there, so fucking much of it. Almost mechanically, I stood and got dressed in his gift, which was stunningly comfortable, albeit a little mismatched with my favorite flats I had worn to work. But then I realized he had left sandals with it too, set to the side, and I put those on instead, feeling a weird disconnect between the act that had just happened and my beautiful new clothes. I was like a princess, but the filthiest, sluttiest whore of a princess at the same time. I cleaned up the back storage room in a daze, using hard cleaner, and left.\n\n\u2014\u2014\u2014\u2014\n\nThe subway ride brought me a little back down to reality, although it still felt dream like and my dress was an overdress to say the least. When I got off and went upstairs I was in a strange mental place of the darkest submission I'd ever known. The sheer violation and violence he had visited on me was astounding. I jumped at everything, even the sound of my door lock and it felt like a fucking useless act to lock the door back. I did it out of habit and statistics anyway.\n\nI turned on my PlayStation, wanting a stupid game to play, something cute and colorful and silly to comfort me, but then when I started it and added a few friend requests, I didn't start any game at all. I made a party as if to talk to someone to help me think of something, anything else, and then I didn't. Instead I went to my bedroom, in the same routine as usual, and went to change from my work clothes. But then I didn't do that either because when I looked in the mirror and saw myself with a shellshocked gaze and wearing the crazy beautiful dress, I couldn't take it off yet. I was his whore and this was how he had dressed me. I couldn't take it off yet. I couldn't...\n\nI looked at the TV screen and saw someone in the party I had made, one of the new people who had added me. The handle was JohnGalt with some numbers and I smiled at the reference, picked up my headset and turned it on. \"Hello,\" I said it and it sounded human.\n\nThe chuckle in my ear made me freeze and I moaned in dread. \"Hello, little Tuesday.\"\n\n\"No. No, please. No more.\" I begged it of him even while my pussy throbbed. I was already starting to feel sore and there was pain from his brutality but my body reacted to that with fiendish delight.\n\n\"Oh, but yes, Tuesday. A little more. I'm sure you can take it. That was so hot that I got home and had to play again.\"\n\n\"It was.\" I couldn't deny that anymore. I had never come so hard. Never. \"But...\"\n\nHis voice shook in my ears with his arousal and I sank to my knees on my carpet, automatically falling back under the waves of terrible submission. \"But what, Tuesday? Did I traumatize you, little whore?\" The words were coolly mocking.\n\nI hated how right it felt for him to call me that, especially \u202athis night\u202c after what he'd done and how I'd loved it. \"No.\" I didn't actually know what trauma was but wasn't sure if it could possibly come with these dark feelings of filthy desire. And also I didn't want him to have affected me so hard so I'd take any denial available to me. \"No, I'm fine.\"\n\nHis breath shook and I whimpered, closing my eyes and thinking of that monster I had fantasized about. I pictured that demonic creature stroking his cock in profane lust and grabbed the blindfold from my backpack. I tied it between the headset, painting my world black.\n\nAnd then I reached between my legs because the arousal there was already rubbing against my thighs. And I wasn't disappointed. When I dipped a finger into my slit, it slid as if I had covered myself in lubricant. And then it was my breath shaking in his ear while I flinched from the pain he had left.\n\nHe growled at the sound. \"What are you doing, Tuesday, and don't you dare lie to me.\"\n\n\"I'm wearing your dress and blindfold and fingering myself while you stroke your cock.\" They were dirty talk words, but I didn't say them in a dirty talk voice. I said them in a whimper borne of my terror for him and how he might hurt me the next time if I didn't obey and say what I was supposed to in exact detail.\n\n\"Such a greedy little whore with a greedy little fuckhole. I was going to ask if you'd rather I ask you questions to make you talk while I jerk off again, but maybe you'd rather dispense with all that and cum for me while I talk to you instead. I don't care one or another, Tuesday, and I don't mind telling you outright that I'm jerking off to the sound of your voice while thinking about how your pussy looked being forced open and ruined on my cock. And you loved it.\"\n\nI gasped, moaning at his filthy words and how aggressive he was. He had a hard edged dom voice that he used all the time. I had had other playmates but none of them came close to this man's level of domination. He was all encompassing, consuming and suffocating. He was a raging wildfire to be near and he had blown my world apart, had wreaked havoc on my day to day life. \"I didn't like it,\" I whispered.\n\nAnd he laughed evilly, cruelly. \"Lying little fuck. Tell me you loved my cock hurting you, Tuesday, or you won't orgasm next time. Say it right now and you'd better convince me.\"\n\n\"I loved your cock hurting me!\" I said it desperately, with so much shame it hurt, but I craved more of that orgasm. What was more I was scared he had ruined me in some way. Not my pussy, no, but I was scared that if I went out to get laid with just a vanilla one night stand, I wouldn't be able to orgasm at all anymore.\n\nHe laughed again and I was starting to hate that laugh. It was only ever at the expense of my humiliation or suffering. \"Now tell me you're my greedy little whore.\"\n\nI obeyed, thoughtlessly lost to the pleasure, rubbing my clit now. \"I'm your greedy little whore.\"\n\n\"That's right. God, you came so fucking hard you passed out from it. Cum again for me, Tuesday. Let me hear you. Fingerfuck that sore little pussy while wearing your pretty dress and cum hard for me.\" I filled myself up with my fingers and cried out to his command, my body alight with nothing but sensation.\n\nHis breath turned quick in my ear and I heard that growl and now I knew that meant he was coming because that's what had happened when he'd fucked me. \"Good girl,\" he said softly and his voice was replete with satisfaction. I lay on my floor right where I was, having felt too much too quickly, and reached up with the blindfold still on to grab my throw blanket. \"Did you find the medical cream?\"\n\nI cuddled in my dress, thinking I should take a shower, and then thinking I didn't deserve a shower after how filthy I was. No, I deserved to sleep with this feeling of being dirty down to my soul. \"No, sir. I didn't.\"\n\n\"Ah, you need to get it tomorrow and use it, Tuesday, understood? It's laying on the table in your storage room.\"\n\nHow the hell had I missed that? I would have to go in early and find anything else that escaped my attention. \"Where do I use it?\" My voice sounded far away to me.\n\nHe chuckled in my ear. \"Your wrists, little girl.\"\n\nOh. Right. Because I had chafed them to bleeding trying to escape and then again when I orgasmed. \"Yes, sir.\"\n\n\"Goodnight, Tuesday. Remember to get it. I'll know if you don't behave and then, well, you won't have as much fun next time. I will, but you won't.\"\n\nI shivered. \"Yes, sir. Goodnight.\"\n\nAnd then I was out. But I woke up only a couple of hours later, sitting up in my floor bolt upright and thinking. Thinking. My pussy was so freaking sore. I had never felt anything like it and I wasn't a choir girl. I hadn't done a ton of fetishes but more than most probably had and I had experimented with toys a fair bit. But nothing had felt like the pain of his cock forcing me open. Of course, after the pain nothing had felt like the pleasure either.",
        "I don't know how I didn't piece it together before then. I felt like an idiot because it would take huge cock to make me feel like he had and I already knew whose cock was big enough. I broke into a crazed grin and then into gleeful laughter. It was Flatline.\n\nIt was motherfucking Flatline. The John Galt reference after I had already told him my first masturbation discoveries were to The Fountainhead and Dante's Inferno. And the fucking horse cock. The head fucking. I jumped up and ran to my room, laughing and so fucking horny I couldn't see straight. I got the permanent marker and wrote Flatline Whore on my tits again, got a wine glass, and then messaged Flatline back where he had already messaged me earlier with something about movies we both liked. But I didn't tell him that I knew now because it didn't work like that. He controlled it and he was fucking fantastic at control. That menacing voice! It was one in the morning but it was Friday and I knew, just knew he would be awake all night if I flirted at the moment.\n\nAre you there?\n\nThere was exactly a minute delay before he answered. Yes. Late hours, Two.\n\nTwo. I grinned because damn him, damn him, and damn him some more, but he was a god. I wanted to worship him for how he'd been brilliant about every fucking step. I was giddy as all hell. It is but I was thinking about something and I couldn't sleep.\n\nI wondered if he was smiling, reading the message while he was laying in bed or doing whatever, his attention slowly being taken by me because he knew me by now. He knew when I was coy it meant I wanted to play.\n\nI see. And what were you thinking about, Two?\n\nI stared down at where my tits said Flatline Whore beneath the pretty dress I wore, his beautiful gift in replacement for my over worn work jeans and gamer shirt. I was thinking about when you told me the hottest humiliation fantasies you had, like deep torture humiliation, and I was thinking about your whipping post and fantasizing. Would you like some videos?\n\nI placed the cuffs on my wrists while I waited for his answer, locked them, and threw the key on the edge of my bathtub. After that I took off my dress and kept the heels he'd given me on. I'd have to be careful with those and the cuffs with what I planned to do but he'd love it. I was feeling fucking filthy.\n\nI see we like the whipping post. I'll have to remember that when you're screaming in the dungeon and begging me to stop. I'll have to remember that you don't mean it and remind you how much you love the post. Send me the videos, naughty fucking girl.\n\nI took the videos, making sure everything was right. For the first one I pissed for him in the wine glass, kneeling with the camera angle showing off my cuffs and heels. I lifted the camera so he could see my tits with the humiliating script and lowered it while I finished my light watersports display.\n\nI sent that one and then took the second one and in that one, I drank it. I took pictures of me lifting the glass and sipping and then took a video of me laying in my bed still with the heels and cuffs and my legs spread wide, my pussy still swollen from his abuse. I greedily drank it down, my throat working, and I licked my teeth, smiling sweetly while I waved playfully at him. Because I knew it'd drive him wild. I'd heard the desire and uninhibited avarice in his voice on the PlayStation chat so I knew that he'd burn to feel me beneath him again if I pushed him like this. He had made me so fucking crazy and now I wanted to make him a little crazy, drive him sexually wild.\n\nHe was silent after I sent the first video and I was grinning when I sent the second. The ... disappeared and then went silent. But I waited, knowing that the longer it took the hotter it would be. And in the meantime I was already thinking of other things I could do to torment him through the weekend. After this I thought that maybe he'd be spending the night wherever it was that he watched and stalked me from.\n\nHe sent through the answering message 15 minutes later and it was a video in his dungeon again. My heart jackhammered with the desirous flame it started just seeing that dungeon. This time the video he sent me was a chair and it was more of a torture throne straight out of Saw or Hostel than it was a sex chair of any kind. It was wooden with a slatted back to better tie his victim down. And sure enough an exact copy of my cuffs were roped to the arms. More rope lay coiled, wrapped around the slats threateningly, as if waiting for me. This time he seemed to have his phone propped at an angle because I heard movement off camera, heard something hard tapped against the concrete of his dungeon floor and flinched, knowing it was something terrible and evil without even being there or seeing it yet.\n\nIt was. It was a rattan cane. The last cane he had sent me a video of had been a leather wrapped horror but this one made me truly shudder. It was made for real play and torture. I had felt the cane a few times before, but I knew now that however bad I thought that was, Flatline would be four times as bad at least. My other playmates had nothing on him. They might as well have never existed next to the purity of his sadism and the level of cruel games he liked to go to.\n\nHe teased me again, stroking that cane up the chair slats, gently sliding the end of it up one side of a chair before his wrist flicked, a casual little horror of motion, and the cane snapped loud against a slat, making me jump and moan. My pussy pulsed for him and I was needy as all fuck, but it was all for him. Because I really appreciated Flatline for the level of the game he had given me, for how careful he had so obviously been in hindsight, how he had taken both of us to an edge that I don't think even he had been before. That took guts and balls and, in some strange way, a little bit of nurturing personality to do something like that. I didn't know his name, no, didn't even know what he looked like but I suddenly had to admit that I had respect for him. What was more, I had an odd trust for him that felt somehow deeper than it had with any other partner while still being in a tenuous, building stage.\n\nI was eager to feel that godawful strip of a cane that snapped so cruelly against the chair when his wrist so carelessly twitched. The motion was nothing to him and he teased me with it again and again, but it would be everything to me when I was tethered and suffering and at his mercy when he had none.\n\nNo, that wasn't right, was it? He did have mercy, but when he was torturing he made it seem like he didn't, like the hell would never end. But when he'd fucked me tonight he'd left me with enough merciful clues to let me find the way. He'd used a rubber, for God's sake, even while he made sure I was too terrorized to be able to wonder why a stranger raping me would bother with a condom.\n\nI felt even more aglow from the video of that cane, watching while he circled around the camera and went to the other side of the chair and tortured me with more teasing, loud strikes. He stayed out of view still and I liked him even more for that.\n\nAfter the video, I backed out and read his message. It was another with emojis, the devil one again. You're playing with fire again, Two.\n\nI can take the heat. I repeated that message from before, recklessly, flying high on the wicked, dark lust he inspired. I was fantasizing the piss was yours.\n\nFuck me, that's a turn on. Yeah? You like thinking of being tethered to the post until you're screaming and then having me let you down so you can kneel for a break, only to have me break you down even farther and use you like a piss slut instead?\n\nYes! I was fire hot from the idea of his torture, of his pure degradation. I was horny as hell on the thought of being brought low. I love thinking about having you use me in ways even lower than any other slave or playmate. I love thinking about being degraded and brought to the worst of humiliation torture. I sent that and then thought for a moment and sent another. Do you want another video?\n\nYes. That was it. Simple and I wondered if that meant he was taking another video even while I was.\n\nFor mine I got his terrible butt plug and this time I had to lubricate it. My pussy was still too sore from his fucking, so I broke and used the lubricant even though I hated lube with my anal. I had to get creative for something to set my phone on, eventually propping it with books carefully arranged and hoping it wouldn't fall in the middle of my video. I used a pillow for a point of reference in positioning myself, then started the video recording and went to my bed with my ass to the camera and my face down, my legs spread wide for a full view for him. I could see the image in my phone just barely from where I lay since I used the front facing camera and knew it was exactly perfect. I double checked and then went to work with the harsh toy, ignoring my pussy entirely because he'd left it so fucking swollen.\n\nChrist, that cock. He was a monstrosity. I forced the toy the way he would want, without mercy on myself, daydreaming he was here with me again. I fell back into a place where I could feel his hard chest again, like a wall or a concrete cage and just as unforgiving.\n\nA cry escaped me when I shoved the toy particularly deep, imagining it was him, knowing he would be even more painful in my asshole. He would be like nothing else I'd ever felt, like no one else. I worked the toy in a torturous rhythm in and out of myself, thinking of being in that hell of a dungeon, knowing that most other people would run at the sight of it. It wasn't a baby player's dungeon. It was a hard, sadist's torture chamber. I cried out again and this time it was a word. \"Please!\" I cut off self consciously because he wasn't actually hear for me to beg even though I was making him a video. I bit my comforter, one hand working the toy while my nails clawed into my knee with the other. I felt a sharp little pain with how hard I accidentally scratched, shoving the toy particularly hard, seating it inside of me. A little tickling feel made me aware of the small amount of blood that came from my clawing.\n\nBut I didn't leave the toy. I withdrew it painfully and fucked myself with it, whining softly. I'd never cum from solely anal stimulation, but I was about to. I could feel it right there and had no desire to touch my clit and make it too easy. I imagined him again instead, whipping me while I writhed, making me cry and scream for his pleasure.\n\n\"Please!\" This time it was a shocked yelp and I came so hard I felt like screaming but bit my comforter again instead to keep silent. It was nothing like the nova orgasms he could give me in person but my God it was still better than anything else I'd ever felt and he wasn't even there with me.\n\nI turned to the camera, post orgasm flush covering me, and I grabbed the other things I'd gotten from my bathroom. Two clothespins that I placed on my nipples, right under the words \"Flatline Whore\".\n\nThe video was long when I went to it but I cut down the first little bit of setup and was pleased as all hell when it sent. It was just short enough to send and I felt a surge of relief that was kind of astonishing for being over something like a successful video message. But it was a video I knew he would love and that made it a delight.\n\nHe'd already sent me his by the time I did too and I watched it.\n\n\"Oh, God.\" It was actually two videos. The first was of him pissing in a cup, a large glass one. The second was of the whipping post again. He held the camera the entire time for this one, sitting the glass aside while he got a funnel like thing from beside the post. The next image was a close up of the cock gag and that was when I moaned in desire.\n\nIt was hollow and the funnel was an attachment.\n\nWhich he made clear when he screwed it in before he got the glass of nearly clear fluid and poured it through the funnel. I closed my eyes when I heard the sound of the liquid hitting the concrete, imagined my toes dancing on that cold, intentionally cruel floor while I was forced to drink whatever wine he wanted to force feed me. He would have me in agony by the time he graced me with it, I knew, so that I thanked him and worshipped him for such a depraved reward while I was lost and trembling in pain fueled subspace.\n\nMy phone chimed and I fell back on my bed, reading. You goddamned tease of a fucktoy. I swear to God, Two, when I have you under me I'm going to make you regret this. I warned you that you were playing with fire so you are to suffer what I give you when I give it to you and I don't want any fucking complaining when it happens.\n\nYes, master. I have a question. I grinned up at my phone, thinking of how to push his buttons. I've never been a D type. Does it gall you in moments like these when you can't touch me and hurt me and make me suffer for pushing you the same way it galls me that I can't beg for your cock right now?\n\nMy phone was silent and then he sent me a video. It was him masturbating again, the heart ring glistening where it always was, as if he wore it all the time. My mouth watered for his cum when it spritzed out of his cock. You have no idea, Two.\n\nGood! I would hate to be alone. I sent him angel emojis, knowing it would make him laugh in that deep, commanding voice he had. He flirted with me all night, driving me wild, telling me things to do for him in videos. He had me take pictures of my asshole after I had tortured it, pictures of my pussy while I spread it open for him to view. He taunted and threatened me that he would turn me into a pain craving fucktoy, that I would beg readily for sexual torture, that he would condition me so hard and often that I would orgasm from the strap or cane on my clit.\n\nAnd I was going to keep fucking with him, I knew. That made me a bratty little submissive, but the ideas I had were games I definitely thought he would love based on games he had already told me about, fantasies from when he had even first starting talking with me. I went off those, grinning, because I owned a game store.\n\nWhich meant I loved games and his were more thrilling than any I'd ever known."
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/dark-as-ivory-pt-01"
}