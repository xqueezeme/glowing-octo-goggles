{
    "title": "Anna Experiments with a New Toy",
    "pages": [
        "Friday\n\nJack finished the last of his wine and looked across at Anna. She smiled and drained the her glass too.\n\n\"Well, did you enjoy it?\" Anna questioned. They had just sat through a light hearted romantic comedy together and Jack stretched out after the grueling two hours.\n\n\"It was,\" he thought quickly, \"er...ok.\"\n\nAnna laughed, she knew he hadn't particularly enjoyed the film but she appreciated his effort. \"I know it's not Star Wars Jack but thanks for sitting through it,\" she touched his arm as she commented.\n\nThey were sat on Anna's sofa. Anna had her hair tied up and her pretty neck was fully on show.\n\nIt was the evening and Anna was dressed for bed. She had on her cotton white vest with a single, thin strap over each shoulder. It hugged her body and pushed her pert breasts together with a V-neck cut showing off Anna's cleavage. The outline of her breasts were clearly visible as she sat there.\n\nIt was her legs, though, that Jack couldn't take his eyes from. She was wearing a pair of bedroom pyjama shorts. They were cotton and pink. They were very short and her long tanned, toned legs were sprawled across Jack's lap. When she had got up during the film, Jack noticed that the shorts clung to her sexy arse. They stopped just below her pert cheeks and Jack loved to watch it. While she had been laying there, Jack kept trying to glance up her shorts and down at her firm shapely thighs.\n\n\"Look,\" she started, \"next time, you can choose the film.\" She looked at him and smiled. She stretched her arms up over her head and yawned, \"Mmm, I'm tired tonight.\"\n\n\"One more glass before bed?\" Jack queried whilst shaking his empty glass.\n\n\"Not for me, sorry.\" Anna stretched out her legs and Jack looked down at her calves. She was so sexy and he had spent the evening trying to keep his semi-erect cock away from her legs as he didn't want her to feel it.\n\nSuddenly, the doorbell rang and Anna instantly looked up at the clock.\n\n\"Who's that at this time? It's nearly 10 o'clock,\" she commented.\n\nJack got up and moved towards the door.\n\n\"Tell them, we're not interested,\" Anna shouted after him as he made his way out of the room. \n\nJack moved from the lounge, through the kitchen and into the short hallway to the front door. Because of the time, it was dark outside so he turned the outside light on to illuminate the late night guest. Jack opened the door.\n\nEllie, Anna's sexy friend was stood in front of him. He blonde wavy hair was down and she swore a long black material coat with a belt hugging it closed at her waist. It stopped just below her knees and Jack could see that Ellie was wearing black nylons and a pair of black high heels.\n\n\"Hey Jack,\" Ellie greeted.\n\n\"Ellie,\" Jack stared into her big blue eyes and down to her perfectly full, puckered lips. \"Come in,\" he stammered.\n\nHe had been so close to fucking Ellie on quite a few occasions and his cock instantly reacted to her. Her eyes widened as she saw him and a smile had appeared across her face.\n\n\"Thanks. Is Anna in?\" Ellie questioned.\n\n\"Yes,\" Jack opened the door wider and made room for Ellie to enter, \"she's just in the lounge.\"\n\n\"Oh good,\" Ellie smiled.\n\nShe moved passed Jack into the hallway. He could smell her scent and it was intoxicating for him. She continued into the house and made her way into the lounge, her heels clicking on the floor as she went. She was carrying an expensive looking brown paper bag.\n\nJack closed and locked the front door and he thought to himself that, just as he was writing this evening off as frustrating, things may well be taking a turn for the better.\n\nHe walked into the lounge and Anna and Ellie were deep into a loud conversation already.\n\n\"I was hoping you'd still be up,\" Ellie was saying, \"I've had a long day and just managed to pick something up before the suppliers closed.\"\n\n\"Well, Jack and I have just finished a film.\"\n\nJack moved to the fridge and shook the half drunk bottle of wine in the direction of the two of them in the sofa. \"Wine, Ellie?\"\n\n\"I'd love a glass,\" she replied, \"thanks Jack.\"\n\n\"So what is the big news?\" Anna questioned.\n\n\"Well,\" Ellie continued, \"you know me, I'm always looking for something new to drive my business forward further and...well...I think I've found it.\" She gestured towards her bag on the floor.\n\n\"I'm very intrigued,\" Anna said, \"show me then.\"\n\nEllie smiled and dipped her hand into the expensive looking brown paper bag. She pulled out a expensive looking box. Smaller than a shoe box, it was decorated with delicate ornate designs. Ellie pressed a catch on the box and something clicked inside it. Then she slowly lifted the lid.\n\nJack didn't know what it was that she had brought out. It was shaped a little like the letter 'U' except one end was much shorter than the other. The shorter end was a little longer than a thumb but it was thicker than a thumb. It curved down and then joined with the longer end. This was around 7 inches long and reminded Jack of a cock. There were no veins on it, just a small head at the tip and it wasn't as thick as the shorter end.\n\nEllie held it up for all to see. Anna almost shrieked with joy when she saw it. She obviously knew what it was.\n\n\"A feeldoe!\" she blurted out.\n\n\"What is it?\" Jack thought aloud.\n\nEllie looked at him and smiled, \"a feeldoe dildo. They are very popular nowadays.\"\n\nAnna was running her expert eye up and down the feeldoe. She had started rubbing her hand down the cock.\n\n\"It's a way that two women can get pleasure at the same time...whilst fucking.\" Anna hadn't taken her eyes from the feeldoe when she spoke. \"This end,\" she was holding up the small thumb like end, \"is placed into a woman's pussy and she grips it inside herself with her pussy lips. The other end,\" she held the long, cock - like end up, \"then sticks out and the two women fuck whilst both gaining pleasure at the same time.\"\n\n\"This one, hence the excitement, also vibrates,\" Ellie added, clearly proud of the new purchase for her store.\n\nAt that point, she reached over Anna and pressed a silver button located at the base of the sex toy. It sprung to life. Not a quick or aggressive vibration but a gentle low hum that sounded like it wouldn't stop unless the job was done.\n\nThe women now stared intently at the vibrating toy and their eyes lit up.\n\nEllie broke the tense silence in the room, \"so...my best friend...would you...\"\n\n\"Try it out?\" Anna finished the sentence for her friend.\n\n\"Well, you know I never ask anyone else to try them out,\" Ellie said quietly, \"I just know I can trust your honest review.\"\n\nAnna smiled. She had tried out around six or seven different sex toys for Ellie in order for her to sell the most satisfying things in her store.\n\n\"Of course I will,\" Anna agreed.\n\nEllie jumped forward and hugged her friend. Ellie's coat rode up her legs a little and Jack could see the beginning of her shapely thigh.\n\n\"The problem though,\" Anna continued, \"is that this toy is a...little different. It's not really a solo thing...is it?\" She looked at both Ellie and Jack at this point and a smirk had started to appear in her face.\n\n\"I just thought you could try out both ends on yourself,\" Ellie suggested.\n\n\"Yes, of course, let's go for it,\" Anna replied.\n\n\"Thanks,\" Ellie said, whilst lifting her wine glass, \"Ok, I'll finish this and you two can get on with it.\"\n\n\"Oh, don't worry, you can stay. I'll check it tonight for you.\" Anna looked down hungrily at the dildo.\n\nEllie looked at Anna and then up at Jack and she smiled to herself, \"ok,\" she agreed.\n\n\"That ok Jack?\" Anna asked cheekily, \"is that ok if Ellie stays to watch me test this toy out here?\"\n\nJack nodded.\n\n\"I'll take off my coat if I'm staying then,\" Ellie stood up as she spoke. She undid the four buttons and the belt and finally pulled the coat slowly from her shoulders. It dropped down her body onto the sofa nearby.\n\nJack struggled to stop his mouth from opening wide in a gawp.\n\nJack knew that Ellie had black high heels on with a pair of see-through suspenders but now he had a closer look. Her heels shaped her legs in a sexy way. They also seemed to lift Ellie up and forwards.\n\nShe was wearing a black silk mini dress. Jack thought it was more like a nightie. It stopped well above her knees and just below her arse. It draped off her hips and hung loosely around her body. It continued up her body and displayed Ellie's full breasts in an obvious way.\n\nIt was cut high up to her throat and clasped tightly around it. But the material hung tightly around her breasts. The was only material just around the front of the dress. There was no material on the back or around the sides of the dress so Jack could see the side of Ellie's breasts. \n\nEllie had her glasses on and was wearing a red lipstick to show off her full, red lips. She had her long, wavy blonde hair loosely hanging down. Her big blue eyes had watched Jack's eyes as they made the journey up her sexy body. She knew she always turned heads and the way she dressed dictated how many heads would turn.\n\n\"Sorry,\" she said whilst gesturing her dress, \"it was a launch evening for the supplier and you have to dress...well...appropriately.\"\n\n\"When is the next evening? Count me in,\" Anna joked, \"well...give us a twirl.\"\n\nEllie turned slowly and Jack could easily see the side of her breasts as she did so and around the back, the dress material stopped at her arse. So the only visible material on the top half of her dress round the back was the clasp around the back of her neck. Her back was on show. Jack saw the soft skin on her back and his eyes travelled down to her sexy arse. The mini dress barely covered her arse. His cock was starting to stir with the beautiful, twirling sight in front of him.\n\n\"Wow!\" Anna said, \"that is one hell of an outfit Ellie.\"\n\n\"Thanks,\" she replied in a coy way, \"I know it seems a bit much but at the launch parties this is mild.\"\n\nJack tried to consider how this look would be mild but he couldn't comprehend it.\n\nEllie suddenly reached down for the brown bag on the floor. Jack watched as the dress rode up a little and he saw Ellie's stocking tops. His eyes instantly went to the top of her dress and, because of the angle she had created with her bend, he saw one of her full breasts. It was full and the nipple was slightly erect. To Jack, it was a moment of utter sexy perfection.\n\nEllie produced a bottle with a liquid inside.\n\n\"What's that?\" Anna asked.\n\n\"This,\" Ellie explained, \"is a sensation oil. Apparently it has a natural chemical reaction when it comes in contact with skin. It creates a tingling sensation. Look...\"\n\nShe placed a small drop on her fingers and rubbed it gently onto one of Anna's shoulders.\n\nJack could tell it created some feeling on her shoulder because of her reaction.\n\n\"Oh, wow.\" Anna exclaimed, \"it's kind of like a light tickle. But quite concentrated. Oooh that is good Ellie.\"\n\nEllie looked down at her friend and her eyes flashed wide. \"Let's put some more on you,\" she instructed.\n\n\"Ok, let me take this off,\" Anna stood up as she spoke and started to lift her vest up and over her head.\n\nHer breasts were smaller than Ellie's. They were very pert and stood out on her chest ready for some attention. She thrust her chest out and pushed her breasts forward in Ellie's direction.\n\nEllie uncapped the bottle and squirted a two or three globs onto Anna's collar bone. Anna lifted both her hands and slowly collected up the oil. She moved it over her chest and then down to her pert breasts. She used both hands to cup her breasts and rub the oil into the soft skin. Her hands moved down to the underside of her breasts and then enveloped the pert, round globe. She pushed her hand all the way over her breasts to the top of them.\n\nJack saw her skin glisten as she continued to rub the oil into her breasts. He also noticed her nipples starting to stiffen. She focused on her nipple area and her fingers danced around the area before gently pinching her nipples, making them more erect.\n\n\"Ohhhh,\" Anna moaned, \"the tingling is soooo good, hmmmm. Oh my god, look at how erect my nipples are!\"\n\nEllie had watched every second of the sexy self-massage and was just as transfixed as Jack was.\n\n\"Ohhh fuck,\" Anna groaned aloud, \"it's like my breasts are continually being massaged, shit. It's so nice Ellie!\"\n\nEllie smiled, \"glad you like it. That oil looks like a keeper then.\"\n\nAnna hadn't stopped stroking the oil into her breasts, \"fffuck yes it is! Jack can you help pull my shorts down I want to try the oil somewhere else. I don't want to stain my clothes.\"\n\nJack instantly jumped into action. He moved round to where the women stood and dropped down to his knees in between the sexy beauties. Jack looked up at Anna and her glistening body. He raised his hands to the waistband of her shorts.\n\nAnna looked down at him, \"shorts down please Jack,\" she instructed.\n\nHe nodded and slowly drew the elastic over the hips. His fingers brushed against her soft skin as he pulled them down. He could see she wasn't wearing any panties and the line of neatly trimmed pubic hair was showing as he lowered the front of her shorts. The shorts stopped as they reached her round arse. Jack moved in closer to her crotch to reach his hands round and slide then down over her cheeks. He could feel the heat coming from her pussy. His mouth was extremely close to her mound.\n\nAnna looked down at how close Jack's mouth was to her pussy. She was aroused after the attention to her breasts and the tingling that was still happening. She inadvertently started to sway her hips and Jack felt her soft pubic hair on her pussy brush his lips.\n\nJacks cock was erect as he kneeled down and pulled Anna's shorts down over her sexy legs. The brush of her soft pubic hair against his lips had caused his cock to pulse against his own shorts.\n\n\"I really need to try that oil on my pussy Ellie, can I have some more please,\" Anna begged.\n\nEllie looked at her friend and considered making her beg for it but Ellie wanted to see more. She squirted a liberal amount into Anna's hands.\n\nAnna scooped the oil into her hands and and placed them onto her naked stomach. The oil started to dribble down over the thin strip of hair above her pussy. Her hand started to stroke around the inside of her legs at the top of her thighs. She quivered from the touch. \n\nJack was exactly eye level with her pussy and he could see her pussy lips. She slowly moved her hand down to her pussy and used the oil to massage all around her beautiful lips. Her fingers touched the outside first.\n\n\"Hmmmm, that's...ohhh...fucking good!\" she moaned.\n\nAnna continued to rub the oil into her pussy. She was shaking as she did it and every now and then her hips jerked from the touch.\n\n\"Oooohhh ffffuck...that's ssssoo gooood.\" Anna groaned.\n\nJack was very close to her pussy and he could see Anna's glistening fingers as they rubbed her pussy lips. Her fingers stroked up and down each lip, teasing her hole as she went. Every now and then she concentrated her circles directly around her clit. Jack could see it was protruding now.\n\nShe was really getting into it now and her fingers were starting to move faster and faster. Anna's breathing was getting shorter.\n\nEllie moved around passed Jack and behind Anna. She moved up behind her and pressed her breasts into Anna's back. She moved her head close up to Anna's ear.\n\n\"Is that good Anna? Does the oil feel nice?\" Ellie whispered. \"Are you going to cum?\"\n\nAnna groaned out loud with the soft whispering in her ear and she closed her eyes.\n\nEllie started to grind her hip into Anna's naked arse. Every time she ground her hips forward, Anna's hips were matching Ellie's thrusts.\n\n\"Ffffuck me, it feels incredible...Jack, I'm sooo close. Ohhhhhh!\" Anna groaned.\n\nEllie suddenly reached up and grabbed Anna's bunched up hair. She pulled her head back and gently but Anna's ear. She kept her head pulled backwards, \"you need to try my dildo Anna. You can cum but you need to carry on afterwards. Do you need to cum now?\" \n\nAnna nodded and moaned through gritted teeth.\n\n\"Ok, keep rubbing and then you can cum.\" Ellie looked down at Jack on his knees in front of the women. She tugged Anna's hair back one more time. \"Cum for me,\" Ellie whispered, \"cum HARD for me!\"\n\nEllie thrust forward again and pushed her hips into Anna's arse. Anna's fingers were rubbing faster.\n\n\"I'M CUMMING...OHHHHH...NNNNGGGGG!\" She screamed whilst bucking her hips forward into her hand.\n\nJack watched her pussy pulse as her fingers brushed over her clit. She was shaking. Jack's cock was rock hard as he knelt in front of Anna and watched the orgasm wash over her.\n\n\"Ohhhh, fuck that was intense. The tingling is incredible,\" Anna sighed and looked down at Jack, \"so...phew...what's next?\"\n\nEllie moved away from Anna and picked up the feeldoe dildo. She handed it to Anna with the short side first, \"you place that end in your pussy so that the other end sticks out...like you have a cock.\"\n\nAnna looked at the shorter but thicker end of the dildo. She used the remaining oil on her slick hand to oil the dildo. \n\nJack - still on his knees in front of Anna - watched as Anna's expert hands oiled the end that Anna was about to use. She then lowered it down towards her pussy.\n\n\"I'm so wet down there Jack, can you see?\" Anna asked. \"I think I need this now.\"\n\nShe placed the dildo next to the opening in her pussy. There wasn't any resistance as she pushed it up into herself. \n\n\"Hmmmm...wow...it feels thicker than it looks...oooohh, god...god...it's good,\" Anna moaned.\n\nJack watched the dildo disappear inside Anna's wet pussy. Her lips enveloped the dildo and she had to use the ends of her fingers to push it in fully. \n\n\"Ohhhh fffuck. The oil is tingling. Mmmmm...god it's filled me. Ohhhh, fuck it feels good.\"\n\nAnna had the dildo inside herself and the end stuck out in front of her. She looked like she had a cock. A thin black cock. She was moving her hips.\n\n\"Ohhh god. It's tight but I have to...mmmm...clench to keep it inside. Ffffuck.\" Anna was moaning. \"Stand Up Jack, let me see your cock against this one.\"\n\nJack stood and removed his clothes so he was naked too. His cock pointed directly up at Anna. His cock was thicker and had pre-cum gathering at the head.\n\nEllie saw the two of them facing each other with their cocks pointing upwards and smiled, \"hmmmmm, that looks so sexy,\" she said.\n\nAnna grabbed the end of the dildo that looked like a fake cock and wrapped her hand around it. She stroked it down and then back up, the oil made the cock very slick and slippery.\n\nAs soon as Anna stroked the cock end, it made the other part of the dildo - inside Anna - move in her pussy.\n\n\"Ohhh my goddd! Shiiit, this feels good.\" Anna was moving her hips and groaning.\n\nAnna had one hand stroking the fake cock up and down. She moved her other hand to her clit and started circling.\n\n\"Fffffuuuck! I'm going to cum again...oh god, it's so goood Ellie.\"\n\nJack watched her stroking herself and looked up at Anna as her second orgasm started to build again.\n\nAt that moment Ellie dropped to her knees and grabbed Anna's fake cock in her nimble hand. Ellie started to stroke it up and down rigorously. Anna was thrusting her hips as Ellie stroked the cock.\n\n\"Nnnnnngggg, Ellie. You're going to...to...make me cum. Oh god, oh god, oh fffffuuuuck! AHHHHH!\"\n\nAnna had sped up the assault on her clit and her orgasm passed over her.\n\n\"OHHH FUCK YES!\" She yelled. \"Wow! Hmmmm. Oh my god. Fucking hell. Wow. That oil is incredible Ellie!\"\n\nEllie looked up at Anna and then at Jack. His cock was pulsing and dribbling with pre-cum. He needed to cum.\n\nEllie got up and turned to face Jack. She stood in front of him and unclasped the button on the neck collar. She let the mini dress fall to the floor. ",
        "Ellie was naked on the top half of her body and her nipples were very erect. She was wearing pull up dark suspenders that gripped the top of her thighs and a black g-string. She spun around and faced Anna. Ellie placed her fingers in the bands of her g-string and slowly bent over to lower them down her legs.\n\nJack watched as she bent over. He could see her full round arse in front of him. As she bent further, Jack could make out her little tight arsehole. She stood up and looked back at Jack.\n\n\"Somebody in the room,\" Ellie said whilst looking at Anna and Jack, \"somebody needs to fuck me NOW! I'm wet and need to cum!\"\n\nEllie got up onto the dining table and lay back on her elbows. She parted her legs and Jack could see that her pussy was very wet.\n\nAnna stepped forward with her fake cock bobbing in front of her. She took Jack's hand and guided him towards Ellie in between her legs.\n\n\"Jack,\" Anna instructed, \"I need you to make sure that Ellie's pussy is ready to be fucked by me. Rub your cock over her pussy lips.\"\n\nEllie, still looking down whilst on her elbows, smiled.\n\nJack grabbed the head of his cock and the sensation caused it to jerk in his hand. He placed the head of his cock against Ellie's clit above her pussy lips.\n\nAnna moved to the side to get a better view. \"Now, rub that cock and get her nice and wet Jack.\"\n\nJack moved the head of his cock over Ellie's clit.\n\n\"Mmmm, that feels good Jack, just there,\" Ellie moaned.\n\nJack used the head of his cock to stroke Ellie's clit, he was using the base of the head. His cock was straining and pulsing for some attention. He was moving it side to side over her clit. Ellie was beginning to move hips to help gather the momentum she needed. Jack's cock was so close to fucking this wet pussy and he was ready for it.\n\n\"Now use up and down strokes Jack,\" Anna instructed, \"Ellie likes that, don't you?\" She had bent over slightly for a better look.\n\nEllie stared down at Jack's cock rubbing against her clit and nodded.\n\nJack changed the direction of his stroke. He moved the head of his cock over Ellie's clit and then moved it down so it brushed the opening of her pussy. He repeated the movement, thinking he was so close to fucking her now. His cock was leaking pre-cum and her pussy was now very wet from the attention.\n\n\"Oooooh Jack, that's sooo nice,\" Ellie moaned, \"keep doing that...mmmm.\"\n\nJack kept the up and down stroking action. He kept the same, steady pace and now he had moved his hips forwards to apply more pressure. This forced the head of his cock well into Ellie's pussy lips and brushed the opening of her pussy.\n\nJack groaned out loud and, even though he wasn't stroking his shaft, he was so aroused. He knew that this would make him cum. He thought about driving his cock into Ellie's tight pussy. He thought he'd get it in just once, but it would be enough stimulation. He lowered the head of his cock to the opening to her pussy and whilst stroking it up he thrust forward.\n\n\"Na-ah, Jack,\" Anna said and she used her hand to push his chest backwards, \"you don't get to fuck her, that's my job.\"\n\nJack groaned in frustration and it sounded like Ellie did too.\n\nJack stepped away and Anna stood in his place. She lowered the cock head and it made Anna groan because the end of the dildo buried in her pussy shifted up. Anna slowly eased the cock into her friend's tight pussy.\n\n\"Ahhhhh, that's what I need,\" Ellie groaned in satisfaction, \"mmmm...yes that's it.\"\n\nAnna slowly thrust the cock into Ellie so the hairs on their pussy were touching each other. Anna then eased it out so Jack could see the base of the head reappear. She repeated this slow fucking action relentlessly.\n\n\"Ohhhh god,\" Anna moaned, \"every time I thrust it in, it pushes up inside me. Fffffuck it feels so good.\"\n\n\"Just fuck me faster please,\" Ellie begged, \"I need to cum hard now.\"\n\nEllie took her hand and started to rub her clit whilst Anna continued her slow fucking.\n\nJack grasped his cock but Anna looked at him and shook her head. \"Get up on the table Jack,\" she instructed, \"I want to see that cock.\"\n\nJack climbed onto the table and knelt by Ellie's head. His cock was wet from her juices and it was dripping with his pre cum. He watched Anna driving the feeldoe dildo hard into Ellie.\n\n\"Ohhh fffuck Jack,\" Anna groaned, \"every time I thrust...hmmmm...it pushes into my cunt...sssshiiit. I think...I think...I'm going to cum again.\"\n\nEllie started to grind her hips into each thrust from Anna.\n\n\"Hmmmm...I'm starting...to get close Anna...please don't stop,\" Ellie moaned, \"oooooh Jack climb up here.\" Ellie patted her chest.\n\n\"F - F - Face me though Jack,\" Anna instructed through her shortening breaths, \"I want to see you stroke that hard cock.\"\n\nJack kneeled up and sat across Ellie: with one leg on either side of Ellie's chest. He was facing Anna and Ellie could see his arse.\n\n\"Ffffuck Jack that's sexy,\" Ellie groaned. She was grinding her hips and her hand was furiously rubbing her clit. Jack could tell she was getting close now. He looked down at his cock and grasped it in his fist. He just held it tightly, feeling the tight grip and the pulsing.\n\n\"Ooooh god Jack,\" Anna groaned as she thrust in and out. She was really driving the dildo in deep now. Anna had used a hand to lift up her pussy lips and it made her clit protrude so that every thrust against Ellie caused friction on Anna's pussy. \"Shiiiiiit. Stroke that cock Jack, oh god...stroke it slowly for me.\"\n\nJack started his slow strokes. He pulled his skin back and then kept a tight grip as he let his hand move up his shaft and over the head of his cock. He felt that familiar ache in his balls. He looked directly below him and watched Ellie's fingers rub her clit. The dildo was very wet and easily sliding in and out of Ellie's tight pussy. Jack saw the fake head appear and then disappear into her pussy lips. Ellie was bucking her hips up and down to meet each thrust and her legs started to quiver.\n\n\"Oh fffffuck, I'm going to cum. Oh god, don't stop, don't stop, oooooo. AHHHH...NNNNNGGGGG!\" Ellie screamed.\n\nJack thrust his cock in his hand as the feeldoe thrust into Ellie one more time. He felt his cock explode. Cum shot out and spattered over Anna's pussy as she drove it into her friend. Jack pulled back for another slow stroke and Anna left her dildo deep inside Ellie. She started shaking.\n\n\"OHHHH...FFFFUCK. SSSSHHHIIIIIT! UGGGGHHHH!\"\n\nJack brought his hand back up for another stroke and more cum dribbled over the fake cock onto Ellie's fingers and pussy. Jack milked it one more time and his cum dribbled down and a long strand stuck to the head of his cock.\n\n\"Fucking hell,\" Anna groaned through her shortened breaths, \"oh god. That was so intense.\"\n\nEllie was giggling behind Jack. She was slowly rubbing Jack's cum into her pussy. Her hips were jerking a little still, she was obviously very tender.\n\nJack spun round off Ellie and kneeled up to look down at her body.\n\n\"There's a lot of cum Jack,\" Anna said, \"I'll take one of each of those new things Ellie please.\"\n\nEllie smiled, \"sold, to you my friend. Just make sure you invite me round every time you get it out.\"\n\nBoth of the women laughed out loud.\n\n\"Deal!\" Anna said whilst smiling at Jack."
    ],
    "authorname": "EnglishTongue",
    "tags": [
        "dildo",
        "feeldoe",
        "ffm",
        "masturbation",
        "cum on pussy",
        "multiple orgasm",
        "threesome",
        "dirty talk",
        "mutual masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/anna-experiments-with-a-new-toy"
}