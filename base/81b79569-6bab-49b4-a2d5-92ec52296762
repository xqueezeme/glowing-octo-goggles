{
    "title": "Night of the Nude Succubus Orgy",
    "pages": [
        "Smout Hall was a dilapidated ruin on the outskirts of the village. It had been built in the early 1800s by Obediah Smout, a shrewd businessman who'd made his fortune during the cotton boom. Obediah had lofty aspirations to elevate his family up into the upper echelons of rural country gentry. Unfortunately for him, the lords and wealthy landowners of the area cared little for money. Birth was the only quality that mattered. To them, poor Obediah and his family were little more than upstarts with ideas above their station. Which made the fact his fortune was greater than all theirs combined rankle even more.\n\nThe Smout family was shunned. The lavish garden parties Obediah threw were empty affairs attended by only the family and their servants. Obediah couldn't understand it. He had wealth. In his eyes that was all that mattered. Victoria Smout, his wife, who had a much better understanding of the cruel politics of human nature, understood only too well, and she passed her bitterness down to her children.\n\nObediah Smout was liked and respected as a tough but fair businessman who'd benefitted his community greatly with generous contributions. His son, grandson and great-grandson, however, were not. They were caught between two worlds\u2014two strata\u2014and belonged to none. They grew up to be dilettantes and ne'er-do-wells, each more shifty and debauched than the last. The worst of them all was Willis Smout, the last of the line.\n\nWillis Smout had an unsavoury reputation even for the Smout family. Dark rumours\u2014of sexual depravity, drug addiction and even devil worship\u2014followed him around like a cloud of malodorous flies. The parties he threw at Smout Hall were attended by all sorts of queer folk\u2014folk that dressed all in black and never came out when the sun was up, painted jezebels with no respect for polite decorum, weird foreign types with dark skins and swarthy complexions. Even, though no-one was ever able to establish for certain, the Beast himself, Aleister Crowley.\n\nThe village was rife with gossip. It came as no surprise and a sort of relief when a scandal over a missing girl and Willis's subsequent drug overdose in prison finally put an end to the strange goings on at Smout Hall.\n\nAfter Willis Smout's death, Smout Hall and grounds had fallen into disuse and disrepair. Initially it had been its cursed reputation that had put off potential buyers. Then, in more sceptical times, the eye-watering cost of the repairs needed.\n\nSeduced by ever-increasing UK property prices and hoodwinked by unscrupulous estate agents, Smout Hall was eventually bought by a Texan entrepreneur at the end of the nineties. He'd flown over, taken one look at the 'charming secluded country manor', and promptly sued the estate agents into oblivion. The Texan entrepreneur was a stubborn man who refused to take a loss on any investment, and so Smout Hall was left to moulder until such time as the land became valuable enough for something else. As the Texan entrepreneur was a rich man with many other similar properties, he could afford to buy Smout Hall and then simply forget it existed. Which, after suing the estate agents into oblivion, he did.\n\nAnd so, owned but not maintained, Smout Hall was left to rot and fall apart on the outskirts of the village. It is said some houses go mad, either through years of neglect, or through the horrors witnessed by their walls. Smout Hall quietly mouldered away in peace, as if embarrassed at being built in the first place.\n\nThe three young men making their way to Smout Hall through a gap in the broken wall encompassing the grounds felt equally embarrassed.\n\n\"I can't believe we're doing this,\" Kris Hatton said. \"No-one comes out to Smout Hall at night.\"\n\n\"Why?\" Jase Wilcox asked.\n\nJase hadn't grown up here. His mother had moved back a couple of years ago and Jase hadn't been at an age where he had any say in where he lived. To be honest, he wasn't sure what that age was. He had thought it was something that happened when you hit eighteen or so, but he'd already passed that milestone and didn't think he'd be moving out of his bedroom in his mother's little cottage any time soon.\n\n\"Because it's something you do when you're a dumb kid and don't know any better,\" Kris Hatton said.\n\n\"It's a tradition around here. Every Halloween the kids sneak out to the hall and try to scare the shit out of each other,\" Donnie Hatton said.\n\n\"Until they grow up and realise how fucking stupid it is,\" Kris said.\n\nDonnie and Kris were brothers, and cousins to Jase. Their mother was Jase's mother's sister. Jase had grown up not knowing much about this side of his family. They had disapproved of his mother's choice of husband, which had led to her estrangement and moving out of the area. This had ended with Jase's father's untimely death from an accident at work two and a half years ago. That loss had mended the rift in the family and his mother had moved back to the village to be closer to her sister. Jase had had no say in the matter, but at least he'd discovered a couple of cousins his own age he'd been unaware had previously existed. Donnie and Kris were fine even if they were a pair of giant idiots half of the time. Kris was into heavy metal, same as Jase. Donnie liked black metal and fancied himself as some kind of latter-day black magician.\n\nJase and Kris took the piss out of him mercilessly for it, as you should.\n\nIt had been Donnie's idea to come out to Smout Hall this night.\n\nThey fought their way along an overgrown path. A bramble snagged at Kris's leg and he kicked it away in frustration.\n\n\"I can't believe I'm fucking doing this,\" he said. \"I should have stayed at the pub. A few more drinks and I reckon I'd have gone home with Emma Beddoes.\"\n\n\"Bro, everyone's gone home with Emma Beddoes at some point,\" Donnie said. \"Half the village has had a bounce on that trampoline.\"\n\n\"That pussy has seen so much use you wouldn't even touch the sides,\" Jase added.\n\nYeah, but it's still sex,\" Kris said. \"Better than pissing about Smout Hall like a bunch of ten-year-olds trying to fool each other into thinking it's haunted.\"\n\n\"Is it haunted?\" Jase asked.\n\n\"There have been rumours,\" Donnie said. \"Strange noises. Lights. Hints of otherworldly presences.\"\n\n\"Bullshit!\" Kris said, thrashing a low hanging branch out of the way.\n\n\"Willis Smout performed a lot of bad juju a century ago. It leaves a mark,\" Jase said.\n\nThey walked out into an open area and saw the ruins of Smout Hall for the first time.\n\n\"What a shithole,\" Kris said.\n\nSmout Hall was less a hall and more a house that had once had delusions of grandeur. Smout Hall was not impressive. It had never been impressive, even during the days it was lived in. Obediah Smout had been an incredibly astute businessman, but he hadn't had a shred of imagination about him and that was reflected in the building that bore his name. Now, broken and crumbling to ruin, it squatted on the land as if embarrassed to be there. As supposed haunted houses went, it was singularly unprepossessing.\n\n\"Think of the succubi, gentlemen,\" Donnie said. \"Think of those hot and ever so sexy devil chicks wanting to satisfy your every sexual desire.\"\n\n\"You're fucking nuts,\" Kris said. \"And I'm fucking nuts for letting you drag me out here.\"\n\n\"I'm just here to laugh at you when we find nothing,\" Jase said.\n\n\"There are more things on this Earth than can be explained by mere science,\" Donnie said.\n\nKris shook his head.\n\nTheir feet crunched on gravel as they walked across the open area to the main building. The front entrance had been busted open and trampled down by successive years of intruders. One door had fallen from its hinges and lay flat on the hallway floor. The other hung grimly on at a skewed angle.\n\n\"We're looking for the summoning chamber near the back of the house,\" Donnie said.\n\nHe shone his torch through the entrance. Dust motes were caught and sparkled in the beam. The hallway beyond was dilapidated. The walls were blemished with dark patches of mould and the floor was covered in various bits of detritus.\n\n\"I know that room,\" Kris said. \"It's at the back of the house, down some steps. It's the one with stone pillars and weird shit carved into the walls and floor.\"\n\n\"That's the one,\" Donnie said. \"It was added to the mansion in 1919, to highly specific astrophysical requirements. It was in that room that Willis Smout held his black masses and carried out unspeakable rites.\"\n\n\"That room is fucked up. Do you remember that year we got Lucy Brown so scared she pissed herself?\"\n\n\"Oh yes. I told her about how the cult used to sacrifice virgins and suggested she should lose her virginity in order to avoid a similar ghastly fate,\" Donnie said.\n\n\"With you, I presume,\" Jase said.\n\n\"I did offer to help her out with this task,\" Donnie said.\n\n\"And how did that go?\" Jase asked.\n\n\"About as well as you might expect,\" Kris answered for him with a raucous chuckle.\n\nThey picked their way through long corridors. Obediah Smout might not have been the most imaginative of gentlemen, but he had a good grasp of practicality, reliability and solidity. Despite its age and neglect, Smout Hall had not yet fallen into the state where it was unsafe to enter and explore.\n\n\"So where do the hot demon chicks come in?\" Jase asked.\n\n\"Back in the early twenties, under the influence of Grand Magus Edvard Licht and Pontifex Capella, Willis Smout performed a rite so foul it ripped a permanent opening between this world and hell itself. But only on one night of the year, and only between the hours of midnight and dawn. Succubi, the most alluring and debauched creatures of hell, came through and entered our world. That first night Willis Smout and his cabal engaged in an orgy with their demonic guests that would have entered legend had not all the participants swore a blood oath of secrecy.\n\n\"The following year surpassed even that high point of depravity. Rumour has it the Beast himself, Aleister Crowley, was present and what he witnessed was so shocking, so transgressive of all standards of moral decency, he refused to speak of it again.\n\n\"Unfortunately, or perhaps fortunately, the world never got to see what Willis Smout had planned for his third hellish orgy. He was arrested and later died of an overdose in prison. However, the portal is still open. And every year, on this particular night, succubi are free to enter the summoning chamber at the back of the house. Anyone lucky enough to find themselves within their presence will be subjected to erotic pleasures beyond their wildest imaginings.\"\n\n\"Where did you find all this out?\" Jase asked. He was staggered and a little bit impressed, even if he would never openly admit it.\n\n\"He read it on 4chan,\" Kris said.\n\n\"I was carrying out some personal research on how to summon a succubus,\" Donnie said.\n\n\"On 4chan,\" Kris said.\n\n\"Wait, aren't all those threads on 4chan about succubus summoning just trolls trying to get idiots to drink their own cum and other gross stuff like that?\" Jase said.\n\n\"I did tell him,\" Kris said.\n\nDonnie walked on ahead of them and carried on with his exposition.\n\n\"There is information\u2014plenty of information\u2014freely available on black magic and summoning rituals. Unfortunately, most of it is false and misleading. The high-level practitioners of the black arts guard their secrets well, by burying them in mountains of lies and falsehoods. Oh, some of the rituals and texts look genuine enough, but most of them have deliberate errors subtly inserted so that the uninitiated would never be able to get them to work.\"\n\n\"So did he?\" Jase asked Kris.\n\nKris didn't answer, just pulled a grin.\n\nJase pulled a face. \"Euw.\"\n\n\"I was struggling with the same problem all prospective neophytes face\u2014how to distinguish the real from the fake. Then, by happy happenstance, I came across a fellow delver into the mysteries of the occult.\"\n\n\"On 4chan,\" Kris said.\n\nDonnie ignored him.\n\n\"He found out I lived close to Smout Hall and gave me the full history of the mansion and the Smout family. I mean, I knew some of it, had heard the rumours, but I'd never realised just how deeply Willis Smout had explored the dark arts.\n\n\"Crowley was here! Imagine that. The Beast himself actually came to our little village.\"\n\nJase didn't know who Crowley was or why he should be excited that he'd visited here. Wasn't he a character in an old Ozzy Osbourne song? Jase didn't listen to the older classic rock that much. He preferred newer metal\u2014more energy, more aggression.\n\nThey picked their way through rubble-choked rooms and hallways. Anything of value had been stripped out long ago. Now there was nothing more than bricks, plaster, spider webs and dust.\n\n\"So, in this room we're going to find a bunch of demonic pussy all eager to fuck our brains out?\" Jase said.\n\n\"Yes. And they're complete experts\u2014masters\u2014of the sensual arts. They know everything there is to know about pleasure.\" Donnie's eyes shone almost as bright as his torch.\n\n\"It sounds fucking amazing,\" Jase said. \"But that's where I have a problem. If it's that amazing, how come nobody else knows about it? Willis Smout, whatever his name is, did this ritual years and years ago. How come nobody came back for this extra-special night, or stumbled in on it by accident. If I stumbled on something as amazing as this you can bet I'd be back again and again every year. Word would get out. Every year you'd see a plague of horny dudes descend on this place for a piece of super-hot demonic pussy.\"\n\n\"It's more unlikely than you'd think,\" Donnie countered. \"First, they would have to be here on the right night between the hours of midnight and sunrise. Second, they would have to enter the summoning chamber at the back of the mansion. This one is more unlikely than the first. You see, the demonic realm gives off negative vibrations we sense on a primal level and seek to avoid unconsciously. If someone did manage to seek shelter in Smout Hall on this night, they would not enter the summoning chamber unless they were actively searching for it. They would avoid it without even realising they were avoiding it.\"\n\n\"That room is creepy as fuck,\" Kris said.\n\n\"Yeah, but what about the people that would be actively looking for it. You found out about it. Others must know about it too.\"\n\n\"Ah, but they'd be looking for it on the wrong date,\" Donnie said. He looked at them craftily and tapped his nose. \"It's very hard to pin down the exact date of the original ritual. Willis Smout was a complete animal. Practically every night had a wild party or orgy.\n\n\"However, according to rumour, Aleister Crowley attended the second demonic orgy in 1922, the year before Willis Smout died of his overdose in prison. Now, for most of 1922 Crowley was living on his commune in Sicily. This is a well-documented fact. Crowley was in Britain for the funeral of Edvard Licht in February 1922 and then returned to his Abbey of Thelema on Sicily for the rest of the year. As a result, anyone looking into Smout Hall mistakenly assumes that the ritual took place sometime in the second week of February. That's the time they visit to investigate the ruins. And still do. Kris, you remember that Swedish black metal band that passed through a couple of years ago.\"\n\n\"Aye, right bunch of pretentious knobs,\" Kris said.\n\n\"They would have found nothing, same as everyone else, because Willis Smout didn't perform the ritual in February. You see, what most people don't know is that around this time Crowley was experimenting with having a body double. The attentions his activities were drawing from authorities were becoming intolerable, so he found a simple peasant man with a similar appearance to him, improved the resemblance with plastic surgery and then hypnotised him into thinking he was the real Crowley. Then, while the fake Crowley was engaged in ridiculous feats of hedonism at the Abbey of Thelema, the real Crowley was abroad in Britain and practising more morally dubious black arts out of sight of prying eyes.\"\n\n\"How do you know all this shit?\" Kris demanded.\n\n\"My contact is a highly knowledgeable individual,\" Donnie said.\n\n\"This is the contact you met online?\" Jase asked.\n\n\"Yes.\"\n\n\"On 4chan?\"\n\n\"Yes.\"\n\nBoth Jase and Kris rolled their eyes. Donnie paid no attention.\n\n\"The question then is, what night did the real Aleister Crowley stop at the village? My contact didn't know this, so I had to do a little sleuthing myself. Back in 1922, the only place any visitors could stop at the village was at the Foresters Arms. While carrying out some bar work there last autumn I was able to obtain their log book pertaining to the year 1922. While going through it I was able to determine that a Mr Arthur Grimble checked in on the 14th July for one night. This is one of Crowley's known aliases. I took a picture of the signature and my contact was able to verify the handwriting is identical to Crowley's. That meant he had to be here at Smout Hall on the night of July 14th.\"\n\nDonnie turned to them with his face lit up with triumph.\n\n\"Therefore this has to be the night of the famed succubus orgy. It can be no other.\"\n\nJase was moderately impressed. The tragedy of it all was that if his cousin actually bothered to put the same amount of dedication into everyday normie stuff he might not be the seen as the weirdo loser everyone in the village thought he was.\n\nStill, it couldn't be true. Could it?\n\nThey went deeper into Smout Hall. These were the extensions added by Willis Smout and were far more chaotic than Obediah's staid vision. After carefully clambering over some fallen beams\u2014this part of Smout Hall was the most wrecked despite its more recent construction\u2014they came to a flight of steps. The steps looked like they led to some kind of cellar, except the door at the bottom was metal and embossed with various outlandish occult designs. The door radiated cold dark energy. The door gave off such bad vibes Jase actually wondered if there was something in Donnie's crazy tale of demonic pussy.\n\n\"Spooky, eh?\" Kris said.\n\nJase stared down the steps. Another reason for why no-one had ever confirmed the existence of the succubus orgy had come to him, and it was not a pleasant one.\n\n\"Wait a minute,\" he said. \"Let's just say there is a harem of sexy succubi waiting for us in there. What's to stop them ripping our hearts out and drinking our souls or whatever shit demons like to do to people for shits'n'giggles. It could be the real reason we never hear about this crazy sexy succubus orgy is because the stupid idiots like us who stumble in on it get totally fucked up and sent to hell in little bloody pieces.\"\n\nDonnie tapped his nose again. \"Safeguards,\" he said. \"There are wards carved into the walls, floor and ceiling. Think of the room beyond as like foreign embassy territory. The demons can enter, but they can't go any further and they have to obey a strict set of rules while they're here. They can't harm anyone in there. People might have thought Willis Smout was a crazy hedonist, but he was thorough and careful. You don't fuck demons, even super sexy ones, without a lot of careful foreplanning.\"\n\nThey walked down the steps. To Jase it felt like the waves of dark energy were growing stronger the closer they got to the door. They'd come here to have a laugh at Donnie after he made a right tit of himself when the room turned out to be empty, but now he was wondering if the only fool they'd laugh at was him for turning tail and running back up the steps like a scared kid. And even then he was wondering if that was preferable to actually opening that door.\n\nNo way. He was letting Donnie's spooky black magic nonsense get to him. Maybe that was the whole point after all, Donnie and Kris giving their stupid cousin a good scare. Whatever, he wasn't going to fall for it, even if his senses were currently screaming at him that something wrong and not of this world was beyond that evil-looking door.",
        "It was just his imagination playing silly buggers on him.\n\nWasn't it?\n\nDonnie paused at the threshold.\n\n\"Well gentlemen, are you ready?\"\n\nHis showmanship was upstaged by the door, which appeared to be stuck in the frame and stubbornly resisted Donnie's flamboyant attempt to throw it open.\n\n\"It's stuck,\" he said. \"I need some help.\"\n\nJase and Kris added their weight to Donnie's. The door didn't appear to be locked, but the frame had warped over the years and the door was wedged shut. The boys pushed and pushed and just when they were starting to think it wouldn't budge, the door gave with a suddenness that caused all three to burst into the room on the other side...\n\n...and onto a scene right out of their wildest dreams.\n\nGirls! Girls everywhere and all as nude as the day they were born. And all fit enough to turn the hottest glamour models green with envy. Long long legs. Big round asses. Big round tits. Bodies to turn cocks to iron while melting everything else to a warm puddle. Fuck, Jase didn't see girls like this walking around the village, that was for sure! He wondered if anywhere did. It was like walking in on the set of a big-budget porno. The floor was even carpeted in glowing pink mist, like a back stage tech had got a little too over-enthusiastic with the dry ice machine.\n\nWhat the girls were doing to each other definitely belonged in a big budget porno. One girl stood with her legs apart against one of the stone pillars. Two other girls groped her big tits while a third was down between her legs and eating her out. Somewhere else, two girls were down in the mist and lapping at each other's pussies in an intimate 69. Beyond them a pile of pink limbs and jiggling boobs was engaged in something so complex Jase couldn't even tell how many participants were involved.\n\nHe was looking at a nude lesbian orgy. No, he was standing in the same room as a nude lesbian orgy, and that was a whole lot better. He didn't even know where to look. There was so much awesome happening everywhere. The room was filled with sensual moans and gasps as Jase and his cousins looked on in wide-eyed wonderment.\n\nA nude lesbian orgy!\n\nNot quite nude. They still had bits of cosplay costumes on\u2014horns, black devil tails with spaded tips, dainty little bat wings emerging from their backs.\n\nThis wasn't cosplay. They were actual succubi with horns, wings and tails.\n\nThey'd bust in on a nude succubus orgy. A nude succubus orgy! Fucking hell, Donnie was right. Jase couldn't believe it.\n\nA nude succubus orgy!\n\nThe orgy stopped abruptly as the sexy girls turned as one to see who'd interrupted them. There was a brief, awkward\u2014extremely awkward\u2014pause. Then the succubi were standing in front of them in a loose line of gorgeous, wondrously supple bodies. Jase didn't even remember them walking over. It was like a jump cut\u2014one minute lesbian porn, the next a line of hot bodies facing them. Jase tried to look at their faces, but his gaze kept getting dragged down. Faces, even extraordinarily pretty faces, was something he saw a lot. Lovely round boobs with perky little nipples, not so much. And there were so many he didn't know where to look.\n\n\"Finally,\" one of the girls said.\n\nShe and a friend lunged forwards to grab Kris's arms. They pulled him over to the back of the room with two other cute devil girls following behind. Kris was too surprised to resist. Jase was also surprised. He'd never seen anyone or anything stun his cousin into silence before.\n\nDonnie was next. He was grinning from ear to ear and had the smug look of someone who'd dropped a grand on the rank outsider and watched it romp home in first with a furlong to spare.\n\nFair play, you probably deserve it, Jase thought.\n\nSo that left... ulp.\n\nJase turned and looked up, and looked up. The succubus standing in front of him was gigantic. A real amazon. The other succubi looked like hot girls in cute monster girl cosplay. This one looked like a proper demon\u2014right down to her blood-red skin. First off, she was tall, really tall. Easily over six foot. Maybe over six foot and a half. Her horns were massive and curled up out of her long black hair like the horns of a bull. She was as muscular as a bodybuilder. Underneath her massive tits her abdomen resembled a washboard. Jase reckoned you could slug her full in the gut with a sledgehammer and all you'd achieve was a broken hammer.\n\nDespite this she wasn't unattractive, just really really intimidating. Imposing didn't even begin to cover it. Jase reckoned she could break Arnold Schwarzenegger\u2014peak action-film Arnie at that\u2014over her knee and not even break a sweat. Jase was a piece of paper compared to Arnie. This succubus looked like she could pop him in her mouth and chew him like a piece of gum.\n\nJase gulped.\n\nShe fixed Hellraiser-black eyes on him and asked, \"Where are the rest of you?\"\n\nJase quailed. \"There are no others,\" he answered. \"It's just us three.\"\n\nThe succubus to the left of the demon amazon\u2014shorter, cuter, not quite so intimidating\u2014gasped in shock. \"Only three. And callow youths at that. It's almost as bad as if none had shown up at all.\"\n\n\"They're young and vital,\" the big red demoness said. \"I'm sure we'll be able to squeeze plenty out of them.\"\n\nThe gesture she made with her hand made it clear which part of Jase's anatomy she would be squeezing. Normally Jase would be okay with this, but then he saw the way her bicep flexed and was overtaken with the sudden fear she might crush his pride and joy, or even tear it off.\n\nAnd with that, Jase's boner was gone.\n\nThe red demoness was reaching down to get a good grip when a commotion broke out amongst the succubi who'd taken Donnie away. Jase heard a lot of excited murmurs and giggles. He heard \"virgin\" mentioned a couple of times in breathless excitement.\n\nThat was enough for the big red succubus. The corner of her mouth turned up in a vulpine smile and she licked her lips. She stalked off without giving Jase a second glance. Her shorter companion fluttered along in her wake.\n\nThey left Jase alone with two curious succubi. The pair put their arms around him and poked and prodded as if checking to see if he was real.\n\n\"Are you a virgin?\" the succubus to his right asked.\n\nShe had long straight hair and big sleepy eyes. Two dinky little horns poked up through her glossy black hair. Her skin was pale pink and silky smooth. Jase felt a little shudder of pleasure whenever her naked breasts rubbed against him.\n\nThe other succubus answered for him.\n\n\"No he isn't. You should be able to tell that yourself,\" she said, although her tone was gentle.\n\nShe was... wow!... really sexy. Jase turned to look at her and drank in the voluptuous curves of her body. She had really massive tits, yet there was no sag to them. And she wasn't fat either. Her stomach and legs were just as toned as the other succubi. She had big wavy black hair and a set of elaborate horns curling down behind her ears. She reminded Jase of the MILF stereotype from pornos\u2014an older woman with a filthy mind and a shit-ton of experience in bed. A lot of Jase's sweatiest, stickiest fantasies had involved letting a woman like that do whatever she wanted to him in the bedroom with the lights off. And now that fantasy was standing right next to him, in the flesh.\n\nJase's Adam's apple worked overtime.\n\nThe other succubus leant forwards and her nostrils dilated as she took a sniff of him.\n\n\"Oh yes,\" she said. She sounded disappointed. \"I was hoping he was too, like his friend. I've never had sex with a virgin.\"\n\n\"It's very pleasant,\" the milfy succubus said. \"You can practically feel their semen crackle and fizz with energy as it enters you. It's really nice.\"\n\nHer hand went down to Jase's butt cheek and gave it a cheeky squeeze.\n\nThere was a ruckus over in the group surrounding Donnie. Jase heard voices raised in an alien language he didn't recognise.\n\n\"I'd really like to fuck a virgin someday,\" the sleepy-eyed succubus said. Her hand roamed all over his body and her touch crackled like static electricity.\n\n\"It's a big responsibility,\" the other succubus said. \"It's their only time, so you have to make it really special. It should be the most fantastically wonderful experience they'll ever have.\"\n\nThe conflict over Donnie appeared to be resolved. Three new succubi walked over to Jase. They didn't seem too thrilled about it.\n\n\"Curse that Veltra,\" the middle one said. Her horns were short and dainty and emerged from a mass of spiky red hair. \"Who does she think she is?\"\n\n\"The La\u010derti have always been uncouth barbarians,\" the succubus to her left said. She had long slender horns and her silky black hair fell on her shoulder in a cascade of regal curves. \"There is no finesse to their erotic skills at all. It's all brute force and pump pump pump.\"\n\nThe third succubus, who had the palest skin of all of them, had a shock of frizzy white hair. Her eyes were surrounded by thick black eyeliner. She looked like a goth pin-up. She said nothing and looked at Jase with hungry dark eyes.\n\n\"So what do we have here?\" the spiky-haired succubus said. She stood in front of Jase and struck a pose with one hand on a shapely hip.\n\nJase gave her a weak smile. \"Hi, I'm\u2014\"\n\nHe didn't get a chance to finish. The spiky-haired demoness placed a hand on his chest and shoved him back against the wall. Her other hand slammed into the stonework next to Jase's head.\n\n\"I don't care,\" she said. \"96 years. That's how long we've been coming back year after year. Every year we come here, hoping to find some good hard cock, and every year you worthless maggot dicks fail to show and we have to amuse ourselves with each other. Then, after 96 years of you withered puss sacks failing to show, you three clot heads turn up and somehow think you'll be able to satisfy all eleven of us.\"\n\n\"We didn't know,\" Jase babbled. She might have been shorter than him\u2014and a girl, with lovely round tits with perfect little nipples\u2014but her intensity scared him almost as much as the big red demoness.\n\n\"Shut up!\" the spiky-haired succubus said, punctuating it by slamming her hand against the wall to the right of Jase's head. \"I'm not interested in hearing what pathetic little sexual foibles you'd like to have satisfied. You've fucked us around for 96 years and now you tease us by bringing only three cocks to a succubus orgy. Tonight you're going to shut your mouth and let us fuck that cock of yours over and over until we're all completely satisfied.\"\n\nJase mumbled an okay as the spiky-haired demon backed off.\n\n\"Now get those clothes off and let's see what you've got,\" she demanded.\n\nIt was an order Jase didn't need to follow as the other succubi were already all over him. Hands found the bottom of his T-shirt and pulled it up over his head. Other hands undid his trousers and pulled both them and his underwear down to his ankles.\n\nThe spiky-haired succubus looked down at his flaccid member.\n\n\"Really? Are you fucking kidding me?\"\n\nShe pushed out her chest, flaunting the perfect round hemispheres of her boobs.\n\n\"Are these not good enough for you?\"\n\nShe hooked a hand behind Jase's head and thudded his face into her chest as if her breasts were a pair of airbags.\n\n\"Are you some kind of faggot?\"\n\nShe rubbed her silky smooth tits against Jase's face. Normally, having two big soft boobs pressed into his face would have had Jase harder than a steel bar. Unfortunately he was currently trying really hard not to piss himself out of pure terror.\n\n\"Now Lappa, you know how intimidating Veltra can be for certain young men,\" the milfy succubus said. \"Let's give our young gentleman here a chance to relax and compose himself. Then I'm sure we'll see his little man perk up again.\"\n\n\"I'm not having a human look at my naked body with a limp dick,\" Lappa said. \"It's insulting.\"\n\nShe reached down between his legs. She didn't grab his cock, at least not directly. Some kind of gloopy green gel welled up in the palm of her hand and engulfed his cock. It was warm and felt like some kind of extra-soft, almost liquid, masturbation toy. Lappa wanked him off with it. The warm blob pressed around and rippled against his cock. He was hard in seconds, and throbbing right after that.\n\nOh fuck, that felt so good. He was going to...\n\nThe warm green glob dissipated to nothingness. Lappa gave him a slap on the cheek that rattled his teeth.\n\n\"Don't you dare even think about wasting your seed by spurting it in my hand,\" she said. \"If you do I'll rip your cock and balls off and shove them down your throat.\"\n\n\"Oh Lappa,\" the milfy succubus said. \"You've let Veltra aggravate you and now you're taking it out on this poor gentleman here.\"\n\nShe put an arm around the other succubus and steered her away.\n\n\"We need you to be a little... softer,\" the milfy succubus said.\n\nLappa tried to protest, but the milfy succubus put a hand down between the other succubus's legs and her eyes glazed over.\n\nThe milfy succubus turned back to Jase and the other succubi.\n\n\"Get started with making our young guest comfortable. We'll rejoin you as soon as I have Lappa in a more sensual frame of mind.\"\n\nShe wrapped her arms around the other succubus and their boobs squashed together in a sapphic embrace.\n\nThe other three succubus went straight for Jase. They pressed their hot bodies right up against him and exhaled scented air into his face. Their hands roamed all over him. He felt them squeeze his ass, fondle his balls, stroke his cock, lots of stroking his cock, enough stroking to take him\u2014trembling\u2014right to the edge. But never enough to tip him over. They were skilled enough to know exactly where his limit was and always let go of his penis right when he was in danger of boiling over.\n\n\"One of us had better get his cock inside them,\" the posh-looking succubus with the regal curls said. \"He's starting to leak.\"\n\nThey dragged Jase away from the wall and into the centre of the room.\n\n\"This hard stone floor doesn't look very comfortable,\" the goth succubus with frizzy white hair said. \"Wouldn't it be better if we had a nice soft bed to lie on?\"\n\n\"Okay, you can create one of your beds, Pampanne,\" the posh succubus said.\n\n\"Oh yes,\" the sleepy-eyed succubus said. \"One of your big soft beds would be lovely.\"\n\n\"As you wish,\" the goth succubus said.\n\nShe stepped behind Jase. He didn't see what she did. The other two succubi crowded in close to Jase. A little too close. Legs tangled and then Jase was toppling backwards. He felt certain his night of unimaginable sexual pleasures was about to be cut short by a date with a hard stone floor and a cracked skull. He fell into a big floppy air mattress instead. The white surface billowed up around him and Jase sank right into it with the two succubi entwined around him.\n\n\"Did you have to make it this soft?\" the posh succubus complained.\n\nThey'd sank deep into the centre of a big air-filled cushion.\n\n\"He looks nervous,\" the goth succubus said. \"I didn't want him slithering away and making a run for it.\" She lay behind him and rested his head in her lap.\n\n\"Oh, he has no chance of escaping,\" the posh succubus said. She wrapped a hand tightly around Jase's cock and pumped up and down.\n\n\"I don't think he wants to escape,\" the sleepy-eyed succubus said.\n\nShe descended on Jase for a long deep kiss.\n\n\"I'm Momo,\" she said after finishing their kiss. \"She's Eroculupyga,\" she said referring to the posh succubus lying on the other side of Jase who was currently jerking him off. \"Pampanne is the one who blew up this lovely big bed for us to play on. And you are?\"\n\n\"He's fuck toy,\" Eroculupyga said. \"He's nothing more than a good hard cock for us to fuck all night long.\"\n\nShe squeezed Jase's cock hard enough to set him gasping and writhing.\n\n\"Stop being so horrible, Erocu,\" Momo said. \"These boys are far too young to have been part of the original agreement. They must have found us by accident.\"\n\nEroculupyga pinched Jase's nipple. \"Yes, fuck toy, how did you just so happen to blunder into this room on this of all nights?\"\n\n\"Donnie,\" Jase wheezed. \"It was his\u2014\"\n\nHe was interrupted by a high-pitched ululating cry from elsewhere in the room. He couldn't work out who or even what it was, or whether he should be wincing in sympathy or feeling envy. Either someone had just snagged their nuts on barbed wire or just got off in a truly epic orgasm. Jase couldn't tell which.\n\nEroculupyga rolled her eyes. \"Absolutely no finesse at all.\"\n\n\"That was a very quick pump pump pump,\" Pampanne said.\n\n\"On a virgin as well,\" Eroculupyga said.\n\n\"Not a virgin now,\" Momo said, disappointed.\n\nHe'll be losing both his virginities before the night is through,\" Eroculupyga said.\n\nShe indicated what she meant by slithering a hand underneath Jase's ass cheeks and giving his anus a little prod. Jase bucked involuntarily. Eroculupyga pumped his erection hard with her other hand.\n\n\"This one is too inexperienced,\" she sniffed.\n\n\"Hey\u2014\" Jase started to complain.\n\nEroculupyga shut him up with a hard squeeze of his cock that sent pleasurable convulsions running through his body.\n\n\"He's already on a hair trigger. If we play with him too hard he's just going to break and make a mess everywhere.\"\n\nAnother squeeze. This one sharp enough to force all the air out of Jase's lungs and make his eyes water.\n\n\"We should move straight to fucking,\" Pampanne suggested.\n\n\"Can I go first?\" Momo asked.\n\n\"If you want,\" Pampanne said.\n\nMomo and her shifted position. Jase ended up being cradled between Pampanne and Eroculupyga with Momo straddling his upper thighs. The shiny white surface of the bed\u2014it looked like latex, but felt more like smooth skin\u2014billowed up around them. There was no way Jase would be able to climb out of this. It would be difficult enough even if the succubi weren't here.\n\nHe looked up at Momo's fantasy-figure curves as she sat astride him.\n\nHe didn't really want to climb out, to be fair.\n\nMomo smiled shyly at him while she gently stroked his erection and kept it hard. Jase didn't really care about the horns he saw poking up through her hair. The rest of her was sexy perfection wrapped up in silky smooth skin.\n\nMomo wriggled up and pressed his erection flat against the exposed folds of her pussy. She stroked him and pressed him against the warmth of her sex.\n\nOh wow, he was going to fuck her. A girl this amazingly gorgeous and he was actually going to have sex with her.\n\nMomo rose up, pulled his erection down and then smothered it with the dripping folds of her sex. She slowly lowered herself down. Jase watched enrapt as his erection was swallowed up out of sight inside her vagina.\n\nFuck. Not only did she look incredible. She felt incredible as well. Warm. Tight. Soft. So very soft. It felt like billowing silk whispering up his shaft and sliding across his swollen glans.\n\n\"Don't you just love the faces they pull when we have them in our pussies,\" Eroculupyga said.\n\nShe and Pampanne pressed their naked boobs against the side of Jase's head.\n\n\"Do you think he likes boobs?\" Pampanne said.\n\n\"He's a healthy young man,\" Eroculupyga replied. \"They think of nothing but sex and boobs. And now you're getting both,\" she said to Jase. \"How lucky.\"\n\nJase's head was completely wedged between their bosoms. His nose was filled with the sweet tang of their scent. Momo continued to bounce airily in his lap. Her featherlight pussy stroked up and down his cock.\n\nHe supposed he could consider himself lucky. A bit.\n\n\"Don't leave us out,\" Eroculupyga said.\n\nShe and Pampanne clamped their thighs around Jase's hands, trapping them in the moist hot space between their legs. His fingers came up against the soft folds of vagina. He gave both of them an experimental stroke. Then an even more experimental prod as he dipped his middle fingers between their labias. He searched for the openings to their vaginas and instead was found by them.",
        "Eroculupyga and Pampanne gave a little giggle and a flex. Both of Jase's fingers were drawn into extremely tight vaginas and held there with powerful fleshy suction.\n\nEroculupyga tweaked one of Jase's nipples. Playful, but still hard enough to hurt.\n\n\"If we weren't in this room you'd be in quite the predicament right now,\" Eroculupyga said.\n\n\"Shh, spoilers,\" Pampanne said.\n\nEroculupyga laughed. \"Of course. It's so much fun teasing you fragile little humans.\"\n\nShe gave Jase's nipple another sharp tweak. The pain barely registered through the pleasure of Momo's wondrously silken pussy sliding up and down his cock.\n\n\"I don't think he's going to hold on much longer,\" Eroculupyga said to the succubus riding Jase. \"I think it's time you gave him a nice big suck, Momo.\"\n\n\"Not yet,\" Momo replied.\n\nShe stopped bouncing up and down and settled in his lap with a little wriggle to make sure his cock was all the way inside her and nice and snug.\n\n\"I want to give him my special kiss first.\"\n\nJase wondered how she was going to do that. Currently he was lying flat on the airbed (with his head wedged between two pairs of tits). She was sitting upright on his cock. As lovely and kissable as her lips were, they were currently miles away from his.\n\nThen he felt the opening of her vagina swell and give the base of his cock a good smooch.\n\nOh.\n\nIt felt like a pair of soft and supple lips had just wrapped around the base of his cock and given it a good kiss. Not just one either. Right above them another band of vaginal muscle contracted and it felt like another pair of lips kissing him. And then another, and another. Each higher than the previous. A wave of gentle pressure travelled up his shaft in a series of wet kisses.\n\nIt wasn't the only thing travelling up his shaft. As Momo gave him her special vaginal kiss, he fancied he could feel his cum slowly rising up the inside of his shaft, rising like mercury in a thermometer. Until...\n\nMomo stared right at him with her big sleepy eyes. She pouted her full lips, put a hand to her mouth and blew him a big scented kiss. At the same time he felt another pair of sensual lips, deep within her vagina, close around the swollen head of his cock and give it a sloppy big kiss.\n\nThat kiss turned into a big suck and Jase shuddered in ecstasy as he finally boiled over and jetted cum inside her. Momo tipped her head back, clutched her breasts and sighed with pleasure.\n\nAt first it was a gush. The biggest orgasm Jase had ever felt. If Momo hadn't been sitting astride him he felt sure the geyser would have made it all the way to the ceiling. Then her inner lips fastened around the throbbing head of his cock and started sucking. It stopped being Jase spurting inside her and became more her sucking up his semen like his cock was some kind of thick fleshy straw. She sucked with some force as well. He felt it all the way down in his balls and it felt like she was pulling out some of his strength along with his cum.\n\n\"Remember to leave some for the rest of us, Momo,\" Eroculupyga said.\n\nAnd then the pressure, that irresistible sucking force, relented. Momo relaxed her vagina and Jase's cock spat out the last little dregs before finally ceasing with its throbbing convulsions.\n\nJase let out a big gasp. Eroculupyga smothered it in her tit.\n\n\"That was lovely,\" Momo said. \"So much energy and vitality. I feel tingly all over.\" There was a glow to her and her hair frizzed up as if filled with static. She gave her cute little bat wings a little flap.\n\nJase sagged back on the soft air mattress. Momo climbed off him and his flaccid cock flopped down on his balls. If the succubi thought they were going to share him this evening they'd cocked up. Jase was done. His balls were completely dry. There was no more spank in the tank. He just wanted to sink into the soft bed and sleep all the way to morning. Or maybe midday.\n\nHe was capital D done.\n\nMomo cradled his testicles in her hands. He felt a surge of energy. It felt like static electricity, but stickier, if that made sense. His body responded. Fluids trickled, then flooded down into his balls. They filled back up and didn't stop there. They kept swelling and swelling, like a pair of overripe plums. Jase was too young and fond of masturbation to ever have experienced blue balls, but this was what he got, a severe case of the blue balls\u2014the fullness, the tightness, the overwhelming urge to come just to relieve the pressure.\n\n\"You're not done until we decide you're done,\" Eroculupyga said.\n\nMomo fondled Jase's depleted cock with her other hand. More tingly static crackled. Jase's cock became not quite so depleted. Blood surged back into it. She playfully patted the head as it swelled back up to a throbbing erection. Then, when Jase's cock was back to full hardness, she gave the glans a little peck of a kiss.\n\n\"All done,\" she said. \"He's ready for whoever wants to go next.\"\n\n\"I'll go,\" Pampanne said.\n\nShe moved down, lifted a long long leg over Jase and straddled him. Then she made shooing gestures to the other succubi.\n\n\"You're going to do it weird, aren't you,\" Eroculupyga said.\n\nPampanne nodded. Her dark eyes shone with sultry mischief.\n\n\"He's a healthy young man,\" Eroculupyga said. \"He's not like the usual old fart warlocks that run out of breath and the ability to move after the first spurt. He can buck. He can thrust. Why not take advantage of that. We fuck plenty of corpse imitators as it is.\"\n\nPampanne's grin turned wolf-like as she stared down at Jase.\n\n\"Ah, but you don't understand,\" Pampanne said. \"That's the best part. They're young. They're vital. They're strong. They buck. They thrust. They struggle.\"\n\nJase wasn't entirely sure he liked the gleam in Pampanne's eye.\n\n\"Hey what?\" he started.\n\nPampanne sat down and impaled herself on Jase's erection. Her vagina was just as warm, tight and soft as Momo's. She drove Jase deeper down into the air-filled mattress.\n\n\"Weirdo,\" Eroculupyga said.\n\nShe hopped off the bed and the sides billowed up around Jase like a balloon. Pampanne placed her palms flat on the swelling surface, which had now risen up higher than Jase on either side.\n\n\"You never let me do this to any of you,\" Pampanne said.\n\n\"Because it's weird,\" Eroculupyga said.\n\n\"Go and play with Momo for a while,\" Pampanne said.\n\nShe moved her hands across the billowing surface of the air mattress as if she was a DJ or conductor. The bed\u2014balloon, cushion, whatever\u2014Jase was lying in swelled up even further. Then he sank so deep the bed folded over him. He was completely enveloped in a bulging air bladder aside from a small window around his face.\n\n\"It's been so long since I've been able to do this to anyone,\" Pampanne said.\n\nShe hunched over Jase and pressed her hands into the swollen white surface.\n\n\"I adore wrapping someone up and giving them a good squeeze,\" she said.\n\nJase felt pressure all around his body. It was just air in some kind of rubber bladder, and yet his arms were pinned to his sides, his legs were pinned together. He couldn't move at all. The pressure on his chest was even making it hard for him to draw breath.\n\nMomo peered in over the top.\n\n\"Don't worry. She's not allowed to pump all your juices out,\" she said, smiling brightly. \"So just relax and enjoy it.\"\n\nShe blew perfumed breath into Jase's face. His fears melted away and suddenly he felt very relaxed. The air cushion was incredibly comfortable, even if he currently couldn't move. The pressure of Pampanne's vagina all around his cock even more so.\n\nMomo moved away and he heard her sighs mixed in with Eroculupyga's as they did some down'n'dirty lesbian thing to each other.\n\n\"This is how I like all my men... and women,\" Pampanne said. \"All wrapped up and completely helpless. Now let's add a little heat...\"\n\nConcentric waves of colour flowed out from where her palms touched the air mattress. The soft elastic surface surrounding Jase started to grow warmer. It grew closer to skin temperature and then surpassed that. Jase started to sweat from the humidity. The heat seemed to sink into him and transmute into heat of a more sexual nature. Jase started burning up with lust.\n\n\"...and motion...\" Pampanne said.\n\nShe started slowly rocking on top of Jase. Her movements were transmitted through the air mattress. She rose up and down on Jase's cock and the whole air bladder throbbed around him with the same rhythm. He felt like he was in the centre of a great beating heart. Then her vagina started throbbing around Jase's cock and he let out an involuntary cry of pleasure.\n\nThere was no urgency to Pampanne's movements. There was enough to stoke Jase's arousal, but not enough to take him to orgasm. Just slow, steady, pleasurable, sensual, maddening throbs. Jase couldn't move. He couldn't buck his hips to get that last burst of friction to trigger the release he craved. He could only lie there while her slow bouncing throbs ratchetted his arousal up higher... and higher... and higher... and higher, always keeping that final burst of release just out of reach until Jase started to wonder if he'd go mad from the denial.\n\n\"...and finally a nice big squeeze.\"\n\nShe pressed her hands into the bulging surface. The elastic pressure grew and grew around Jase. There was only one way to alleviate it. Pampanne fluttered her vaginal walls against Jase's swollen glans and gave him the stimulation he needed. He let out his own silly orgasmic cry of release (but not as silly as Donnie's, he hoped) and spurted thick ropes of semen inside her.\n\nAs with Momo the flow was hijacked until it became Pampanne pumping the semen out of him. She skilfully manipulated the air bladder so it felt to Jase like his whole body was being pumped. Pumped. And pumped. And pumped. Like a blow-up doll having all the air pumped out of it. And Jase didn't doubt Pampanne could do it to him. She could pump and pump until he was just a shrivelled and deflated thing.\n\nIf she wanted.\n\nWhich, fortunately for Jase, she did not. She took her share and then released him with a satisfied sigh.\n\n\"Mmm. You do taste nice. You're lucky I have to leave enough for the others.\"\n\nThe pressure lessened around Jase. The big air mattress started to deflate.\n\n\"Or maybe not so lucky,\" Pampanne said. \"My other squeeze toys all looked like they really enjoyed it at the end. I can't give you that experience.\"\n\nJase took in great lungfuls of air now that he was able to do so. He tried not to dwell too much on what that 'experience' might feel like. It was a dangerous path to contemplate.\n\n\"Mmm, it feels good to give someone a bloody good squeeze after all this time.\" Pampanne stood up and stretched.\n\nJase didn't. He was still stuck in the deflating bed. He lay there and took the opportunity to get his breath back as the bed deflated right down until he was lying on the floor.\n\n\"You'd better not have fucked all the energy out of him.\" The spiky-haired succubus, Lappa, had returned. \"We're all supposed to get a turn on his cock.\"\n\nJase saw various shapely ankles arranged around him.\n\n\"I thought he was supposed to be young and healthy,\" Momo said. \"He looks done already.\"\n\n\"Young men are lazy,\" Eroculupyga said. \"They need the right encouragement.\"\n\nShe plonked her shapely ass right on Jase's face and ground her wet pussy against him. Jase was assailed by the sharp tang of her sex and the slightly sour smell of her sweat. It had a similar effect to smelling salts, though through raising Jase's excitement rather than revulsion.\n\nHe was not done. Nowhere near done. The succubi wouldn't allow him to be done.\n\nThey descended on his prone body. Their hands were everywhere\u2014groping, squeezing caressing, even straying perilously close to his ass. It's didn't matter how much Jase squirmed and writhed. One of them always had a hand on his cock or balls.\n\nThey helped him to his feet in a bewildering mass of tits, ass, kisses and lascivious hands. Jase didn't even know which of them had hold of him. When he lifted his head he saw Lappa standing in front of him with a hungry look on her face.\n\n\"I don't understand you, Pampanne,\" she said. \"We finally get our hands on a virile young man and you bundle him up like an adult baby.\"\n\n\"It's fun to squeeze them that way,\" Pampanne said. She gave Jase a strong hug and shoved his face into the side of her tit.\n\nLappa shook her head. Then she turned her attentions back to Jase.\n\n\"That's enough having it easy, fuck toy,\" she said.\n\nShe turned around, placed her hands against one of the stone pillars and stood with her legs splayed apart. She had a dancer's physique with wonderfully toned legs muscles and a lovely peach of a bum. And it was all on display for Jase.\n\nShe glanced over her shoulder at Jase. Her eyes burned. \"Now get over her and fuck me from behind.\"\n\nJase was walking over to her with his dick in his hand before he even had a chance to process her request and decide that, yes, he really would like to fuck her from behind. This was not a request to be mulled over. It was a command sent directly to his nerves and synapses and it moved his limbs as if they were on puppet strings.\n\nJase placed both hands on her lovely rump.\n\nThere was a brief pause as Jase's brain finally got around to acknowledging the dainty little bat wings emerging from her back and the tail hanging down between her legs. The tail wasn't really possible to miss or mistake for cosplay. As Jase put his hands on her ass the tail flicked up and wound around Jase's right arm like a snake.\n\nHer devilish features were acknowledged and then dismissed. Why care when the rest of her looked this good?\n\nJase thrust upwards and plunged his cock deep into her velvet warmth. Fuck. What was it about succubus pussies? They all felt so damn perfect.\n\nAs soon as he felt the fleshy warmth of her vagina around him it was like he lost complete control of his hips. They disconnected and started pounding back and forth of their own accord.\n\n\"Harder! Faster!\" Lappa barked.\n\nJase wasn't sure if she was talking to him, or directly to his legs and hips. His body responded without Jase's input. He gripped her buttocks tighter and pounded her harder. Fuck. It felt so good sliding between her tight vaginal walls. So tight. And she gave her pussy a little clench with each thrust that left him weak at the knees.\n\nThe other succubi weren't standing idly by and watching. Beyond Lappa, Jase saw Eroculupyga sitting down in the glowing pink mist. She caught Jase's gaze and once she'd captured him, she held him there. She sucked on a finger, opened her legs and\u2014while staring seductively at Jase\u2014inserted her finger into her sex. Momo joined in and started lapping away at the other girl's clit. Pampanne sat down next to Eroculupyga and they shared a passionate kiss.\n\nBeyond them Jase saw a confusing tangle of limbs and thrusting bodies. Was Kris somewhere in the middle of that? Jase couldn't see Donnie, but he assumed he was the one making those strange high-pitched yipping sounds.\n\n\"Pay attention!\" Lappa ordered.\n\nHer tail unwound from his arm and whipped round to give him a slap on the cheek.\n\nTwo could play at that game, Jase thought. He gave her butt cheek a slap as he drove his cock inside her.\n\nLappa turned back and gave him a smile that showed off her pointed incisors. It chilled Jase's blood.\n\nMistake! We've made a mistake.\n\n\"That's more like it,\" Lappa said.\n\nHer vagina clenched and powerful waves of muscular contraction sucked on Jase's cock. He suddenly felt weak at the knees as if she'd sucked the strength right out of them.\n\nHe might have fallen if the milfy succubus hadn't stepped in behind him and put her arms around him.\n\n\"You look like you need a little help,\" she whispered in his ear. Her scented breath tickled his nostrils.\n\n\"That's it, hold him there, Yuemuma,\" Lappa said. \"We'll fuck him together.\"\n\nThe milfy succubus, Yuemuma, pressed up tight to him and he felt her big breasts squash against his back like a pair of soft pillows. Her crotch pressed up against Jase's buttocks and he had the sudden fear Lappa wasn't the only one about to get a good fucking from behind. Yuemuma laughed at his attempts to twist his ass out of the way.\n\n\"I'm not that type of succubus,\" she said. \"None of us are.\"\n\nLappa braced against the pillar and thrust back at Jase. Yuemuma started humping against him from behind. She found the same rhythm as Lappa, until it seemed like they were the ones fucking and Jase was just the toy between them.\n\nYuemuma's arms wrapped around Jase's chest and she played with his nipples. Her boobs were so big they overflowed around Jase's sides.\n\n\"Give her ass a good slap,\" Yuemuma whispered in Jase's ear. \"Turn it red. She likes that.\"\n\nJase did. Not so hard at first, but then growing in both force and confidence as each slap was rewarded with a cry of delight and a delicious clench of her tight pussy.\n\nYuemuma slithered down Jase's back, leaving a trail of wet kisses. She crouched down behind him and parted his buttocks.\n\nWhat was she doing?\n\nThen... Ohhh... as she started probing his anus with her moist tongue.\n\n\"Give me your cum,\" Lappa growled.\n\nHer vagina clenched around Jase's cock and started to suck. At the same time Yuemuma pushed her tongue deep into Jase's ass and waggled it. He came. He thought. It was like with Momo and Pampanne. Lappa tensed her legs and lovely ass, and it felt like her whole body was sucking on him like a vacuum. Oh fuck, so much incredible suction. He poured semen\u2014and maybe something else\u2014into her.\n\nFuck.\n\nHe felt like he was emptying out in a great torrent of ecstasy. His knees gave out and he would have fallen had Yuemuma not caught him and gently lowered him to the floor.\n\nIntense.\n\nAt least someone had put down some kind of rubber mat, so Jase didn't feel like he was lying directly on the cold stone floor. He was breathing heavily again. Fuck, who knew fucking was so much hard work. His cock\u2014still rock hard\u2014was flexing and throbbing, but nothing was coming out. Lappa had already sucked it all out.\n\nLappa turned around and looked down at him. She was smiling and seemed to be glowing with vitality.\n\n\"That was... adequate,\" she said.\n\n\"It's a good job you aren't one of those old and dried-up cultists,\" Yuemuma said. \"I think you'd be done about now and that would not be a good thing... for all concerned.\"\n\n\"But he isn't,\" Eroculupyga said. \"So that makes it...\"\n\nShe squatted down on Jase and stretched out her long lithe legs, showing off every inch of their perfection.\n\n\"...my turn.\"\n\nWhat? Again? Jase thought. Succubi were monsters. Until now Jase hadn't thought it possible to have too much sex.\n\nEroculupyga stretched a leg over Jase and rubbed her toes in Jase's face.\n\n\"Don't you dare fall asleep,\" she said. \"You still have Yuemuma and I to fuck.\"\n\nShe reached behind her and took hold of Jase's dick. It was still hard, even after Jase's epic ejaculation inside Lappa.\n\n\"And I'm definitely not letting this go to sleep.\"\n\nJase felt pinpricks of pain as the succubus dug her sharp fingernails into his cock. Then he felt a euphoric blast of pleasure. His cock swelled up even further and started throbbing.\n\n\"Good,\" Eroculupyga said. \"I need you to be really hard for what I want to do with you. You see, you might think I'm a good little girl...\"\n\nJase had no idea why she might have thought he thought that. She was clearly a devil girl. The horns and tail were a bit of a giveaway.\n\n\"...but I'm a bad girl with filthy filthy appetites. And now you're going to fuck me in the ass to satisfy those filthy filthy appetites.\"\n\nShe lifted her butt up over Jase's twitching erection and sat down slowly. Jase felt some resistance from her sphincter, and then he was inside her. She let out erotic grunts and moans as she slowly descended until Jase's rampant erection was all the way inside her ass.",
        "She leant back with her hands resting on Jase's thighs. She splayed her legs apart and gave Jase full view of her gaping sex. The pink interior was wet and dripping.\n\n\"Oof,\" Eroculupyga said. \"I love the feel of a big hard cock inside my ass. It's been so long.\"\n\nShe wriggled to find the best fit and her movements sent rockets of pleasure firing up Jase's cock. So tight. And muscular. It felt like multiple hands wrapped around and squeezing him.\n\nThe other succubi joined in. Jase felt the soft pressure of Yuemuma's tits rest against the top of his head. She blew scented breaths into his face. Momo lay down next to him and started to kiss and suck his nipple. Pampanne took his arm on the other side and sent his fingers back up into the warm space between her legs. Lappa sucked his toes.\n\nJase was completely overwhelmed. He wondered if the roof had fallen in on him and this was, in fact, heaven.\n\nBut with devils rather than angels.\n\nOr angels that really looked like devils.\n\nAngels that let you fuck them up the ass.\n\nNo, that didn't make sense at all.\n\nThen he felt an extreme tightening around his cock that derailed his thoughts and caused him to take a sharp intake of breath.\n\n\"What's the matter?\" Eroculupyga said. \"Too tight?\"\n\nShe flexed... something... and the muscular walls of her ass applied pressure all around Jase's cock. It wasn't just pressure, there was movement too\u2014twists, bends, rubs. Eroculupyga's eyes glittered as she flexed her ass and caused the walls to pulse against Jase's cock with muscular contractions.\n\n\"Coming,\" Jase gasped.\n\nNo-one could hold out against such sinful tightness.\n\n\"No,\" Eroculupyga said, as sweet as poisoned honey.\n\nShe relaxed the muscles of her ass and stopped moving. Denied stimulation, Jase's arousal crashed back down, leaving him squirming in hapless discomfort.\n\n\"You are now a slave of my ass,\" Eroculupyga said. \"You will not come until I allow you to come.\"\n\n\"Oh Erocu, are you being mean again?\" Momo said.\n\n\"Human filth should know their place. My lovely ass will squeeze him into submission.\"\n\nHer ass flexed and pulsed. Oh yes, this time. But no. Again she took him right to the edge and abandoned him, leaving him unfulfilled and unsatisfied.\n\n\"He's been pretty submissive all night,\" Momo said. \"I think he prefers it that way.\"\n\n\"He'll be jelly when I'm finished with him,\" Eroculupyga said.\n\nShe flexed and squeezed her ass, starting another wave of contractions that ramped Jase's arousal higher and higher. He squirmed beneath her, wanting, but not able to reach that desired release.\n\n\"Ooh yes, keep wriggling like that,\" Eroculupyga said. She brought a hand around and rubbed it against her clit. Her pussy sprayed juices over Jase's stomach and the air was filled with the stink of her sex.\n\nFlex and squeeze. Like two hands around his cock, but always stopping right before he attained climax.\n\n\"Please,\" Jase begged.\n\nEroculupyga laughed.\n\nFlex. Squeeze. Tease.\n\nEven the other succubi weren't any help. They played perfectly in tune with Eroculupyga, always stopping their kissing and sucking at the exact same time. They were careful not to give him that last little bit of extra stimulation to trigger the ejaculation he craved.\n\nFlex. Squeeze. Tease.\n\nJase didn't know how long she kept it going for. He felt like he'd been flopping on the edge for eternity. How could she control him so thoroughly?\n\n\"This is so much fun,\" Eroculupyga said. \"I could keep doing this all night.\"\n\n\"Unfortunately, we don't have all night,\" Yuemuma said. \"Momo.\"\n\nThe other succubus switched her attentions to Eroculupyga. She went up on her knees and pressed her lips against Eroculupyga's in a kiss. Her hand went down between Eroculupyga's legs and her fingers found their way into the other succubus's pussy.\n\nYuemuma got up and sat down on Jase's face. She rubbed her vagina against Jase and flooded him with the pungent perfume of her sex.\n\nSurprised by Momo, Eroculupyga clenched a little tighter and harder this time. With the extra stimulation of Yuemuma's pussy in his face, this was enough to finally catapult Jase to the release he craved. He moaned into Yuemuma's smothering sex and his body thrashed and bucked as a massive orgasm ripped through him. Eroculupyga gave a surprised sigh as Jase's semen jetted into her. She was so surprised, Jase even got to have a regular climax this time. It didn't last long. The flow was just starting to subside when Eroculupyga's ass contracted all around him and her body hijacked his ejaculation.\n\nFuck. It felt like gulping. It felt like her ass was gulping on him. Jase came again... and again... and again, each gulp drawing another bolt of cum out of him. And another... and another... and another, while Jase writhed in helpless ecstasy.\n\nThis one went on for longer than the others. Jase's heart laboured in his chest and he wondered if she'd finished with his cum and had moved on to other bodily fluids.\n\nThen Eroculupyga stopped suddenly and jumped up with a cry. Her look of mortification was a complete contrast to her earlier seductive aloofness.\n\n\"The surprise... I lost control,\" she said. \"I'm sorry, Yuemuma, I think I took too much.\"\n\nJase would agree with that. He lay on the floor and couldn't move. He felt drained. And wrecked. Properly drained and wrecked.\n\n\"It's okay,\" Yuemuma said. \"I thought this might happen. That's why I decided to go last.\"\n\n\"It's not fair,\" Momo said. \"You should have a fuck and a feed too.\"\n\n\"Maybe one of the other two?\" Pampanne suggested.\n\nLappa shook her head. Glissamani and her friends are done with theirs. Veltra finished hers off over an hour ago. Papeelia is keeping her occupied now.\n\n\"I'm not done,\" Jase said. \"I can do more.\"\n\nHe wasn't sure where that had come from. It was probably stupid. But out of the five of them, the one he'd most wanted to have sex with was Yuemuma. It had been from the moment he'd first clapped eyes on her. And now it sounded like she wasn't going to have sex with him because she didn't think he was up to it.\n\nThat rankled with Jase.\n\nIt always had when someone had thought he was done, whether it be sports, tests, or anything else. People did say he was a bit of a stubborn cunt, and as good as the others had been, Jase didn't want to finish the night without fucking the gorgeous milf succubus with massive tits.\n\n\"Hmm,\" Yuemuma said. \"Let's see you get back to your feet.\"\n\nNo problem, Jase thought.\n\nHe turned over, tucked his knees under him, pushed up...\n\n...and didn't really get anywhere. It felt like someone had replaced his kneecaps with wobbly jelly.\n\nOkay. Some problems.\n\nNothing Jase couldn't handle. It was time for a bit of that trademark Wilcox doggedness. He might not be the strongest, fastest, or smartest, but he was scrappy. He didn't like to give up.\n\nThis time he got his knees to lock into place and he stood up. There was a nervous moment when his legs trembled alarmingly, but he was able to weather it and stay on his feet. He looked defiantly at Yuemuma.\n\n\"It's not your desires, you know,\" she said.\n\nShe was no longer standing and instead appeared to be lounging seductively on thin air. Jase couldn't tell if she was hovering or sitting on some kind of invisible cushion.\n\n\"We've soaked you in our sexual fluids and filled your lungs with our pheromones. You might think you want to have sex with me, but that's only because you have been enthralled. If we were allowed to, we could ask you gnaw off your own cock and balls, and you'd do it thinking you wanted nothing more in the whole world.\"\n\nJase rocked unsteadily. What did he really want? His head was lost in a perfumed fog.\n\nHe looked at Yuemuma. She was fucking gorgeous. Everything about her was so alluring\u2014her eyes, her smile, that body, her lovely big breasts. He couldn't look away. He knew he'd be seeing her again in his deepest, most erotic dreams.\n\nMomo leant next to Yuemuma and whispered something in her ear. The other succubus smiled and nodded her head. She glanced back at Jase.\n\n\"Yes, I think he does,\" she said. \"Hmm, and it would be nice to have his cock in my pussy, even for a short while, and even if he can't come.\"\n\nLanguidly, she uncrossed her long legs and gave Jase a perfect view of the plump, hairless folds of her sex. She extended a hand and beckoned seductively to Jase.\n\n\"Young man. Come,\"\n\nIt felt like a rush of heat emanating from her body. The edges of Jase's vision wobbled and blurred until the only thing that existed was Yuemuma. Her voluptuous body lay back for him in alluring repose. His heart pounded in his chest. Blood rushed to his head like steam. He wanted her like he wanted nothing more in the whole world.\n\nHe stumble-stepped forwards and fell into her arms. Her breasts felt like the softest pillows. Jase couldn't stop himself from putting his hands on them and kneading and squeezing the warm flesh. He marvelled at their smoothness, their elasticity. Yuemuma reached down, took his erection and steered it down inside her while her long legs rose up and wrapped around Jase's waist.\n\nJase stopped pawing at her boobs as another sensation inundated and drowned him. He sank deep into her lusciously soft vagina and felt pleasure well up all around his body. She was so delectably pliant down there Jase couldn't tell if he'd entered a tunnel of flesh or plunged his cock directly into warm soft jelly.\n\nYuemuma put one hand under his chin and another behind his head as she brought his lips to hers for a long dreamy kiss. One hand stayed behind his head while the other moved down to hug him close to her. Her vagina bubbled around his erection and stimulated all the pleasure receptors in his penis with feathery little kisses.\n\nYuemuma moved her arm and Jase felt a weight settle on his back as Momo straddled him. She lay down and he felt her tits against his back as she leaned close to whisper in his ear.\n\n\"Let all the tension melt out of you. Yuemuma will give you a nice relaxing fuck to finish you off.\"\n\nShe sat up and gently kneaded the taut muscles of his neck and shoulders in a relaxing massage. Another succubus, Jase didn't know which, dabbed at the sensitive spot of skin between his balls and anus with a wet tongue. They licked up and started to circle the ring of his anus.\n\nYuemuma broke off the kiss and looked up at Jase. Her dark eyes looked like deep pools.\n\n\"Time to make you mine,\" she said.\n\nShe gave a soft little grunt. Her soft vagina pressed all around Jase's cock... pressed until it seemed to merge with him. Jase's arms dropped limp as he was lost to an overwhelming sensation of bliss.\n\n\"This will feel strange at first, then pleasant,\" she said to him.\n\nHer vagina puffed up and did something strange. He felt a pleasant trickling sensation, like he was leaking into her.\n\n\"You're too depleted. You don't have enough left to give me a full ejaculation, so I'll draw it from you in little sips.\"\n\nThe trickling sensation continued. Jase had felt nothing like it before. It was like coming, but so much slower and drawn out, like an orgasm stretched out for hours... days.\n\n\"Doesn't that feel nice,\" Yuemuma said.\n\nThe other succubi pulled away, leaving Yuemuma alone with Donnie. Her great bat wings unfurled and she wrapped them around Jase. He sank into Yuemuma's embrace and lost himself within her.\n\n\"So many seeking the pleasures of our flesh end up this way,\" Yuemuma said. \"Spent and helpless while we draw the last fluids from their body, lost in erotic bliss and sensual ecstasy as we drain the last of their energy. You should be very careful in your dealings with succubi. Like the man who constructed this room.\"\n\nYuemuma squeezed Jase with her thighs and gripped him tighter.\n\n\"Mmm. I think I underestimated how much you have left. I think we can get away with letting you have a little spurt.\"\n\nHer soft pussy bunched up around the base of Jase's cock and stretched out his shaft in a gentle tug. Jase shuddered in ecstasy. His cock throbbed and released a little puff of semen\u2014all he had left\u2014into her smothering sex. If felt like it was reflected back as a bigger puff of pleasure billowing through his body.\n\n\"Good boy,\" Yuemuma said. \"You've done well. It's been a long night. Now sleep.\"\n\nEntwined in her warm body, Jase sank gratefully down into comfortable darkness.\n\n* * *\n\nJase woke, blinking, to a piercing shaft of sunlight. He felt proper terrible. What the fuck had he done last night? Got totally blasted by the feel of it. He felt like he had one of those wretched summer hangovers where you drink too much in the hot sun and forget to take on any water before passing out.\n\nOw ow. His head. His... everywhere. He felt stiff and achy all over.\n\nThen he felt the cold stone underneath him and remembered where he was... remembered what had happened.\n\nThe summoning chamber looked a little more ordinary in daytime. Sunlight shone down from a single high window in the far wall. It was just a plain stone room with some weird shit carved on the walls and a ton of dust.\n\nHe heard groans from other parts of the room as Donnie and Kris began to stir.\n\n\"Oh my fucking god!\" Donnie said. \"How fucking awesome\u2014ow\u2014was that!\"\n\n\"My dick,\" Kris complained. \"I think it's broken.\"\n\n\"I feel like I've been hit by a truck,\" Jase said.\n\n\"Me too,\" Donnie said. \"But wasn't it worth it? It was incredible. She stuck her tail in my ass.\"\n\n\"Huh? How did that feel?\"\n\n\"Amazing!\" Donnie said.\n\n\"I think they broke my fucking dick,\" Kris said.\n\nThere was a white card lying on the ground next to Jase. He picked it up and read the elegant handwriting written on the reverse.\n\nBring more friends next year. We will.\n\n\u2014Yuemuma xxxx\n\n* * *\n\nLater, online:\n\nblackmage667: OMG! It was amazing. They were there, just like you said they would be. They totally fucked our brains out. Succubi are incredible.\n\nanovafera: I see. That must mean the protective wards are still in place and functional.\n\nblackmage667: Yeah\n\nblackmage667: I guess so.\n\nblackmage667: I mean I'm here talking to you.\n\nanovafera: Very good. That is all I wanted to know. I will be there in person next year.\n\nTHE END "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "black magic",
        "occult",
        "anal sex",
        "femdom",
        "demoness",
        "group sex"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/night-of-the-nude-succubus-orgy"
}