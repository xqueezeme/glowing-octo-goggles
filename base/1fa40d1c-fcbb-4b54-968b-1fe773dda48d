{
    "title": "An Angel at My Door Ch. 01",
    "pages": [
        "Hi all!\n\nSo this one is kind of a reboot for the Danny-Holly characters. My first series is done, but I loved the characters, so I decided to use them again for this story, with some ever-so-slight alterations.\n\nThis one is a little raunchier than my last series, a little kinkier. It doesn't quite go all the way that I plan to go in this chapter, but it will get crazier as it goes on!\n\nEnjoy!\n\n****************************************\n\nI didn't think anything of it when I hung up the phone. I went about my day as usual, finished up a delicious Thai curry for dinner, played a quick game of Civilization VI, then went to bed.\n\nMy sister's friend was going to arrive tomorrow evening after I got home from work, just looking for a place to crash until she could lock down somewhere of her own. I decided that I could get the spare room ready when I got home. As it were, I had an early day tomorrow, and sleep came quickly.\n\nI got to the studio right on time, bouncing up the steps towards the front doors. I work at a Graphic Design studio called Canvas Digital. It's about a thirty minute walk from the little house I rent, just south of Palo Alto, California. Being 22 years old and fresh out of my art school course, I was still very new here, both to the city and my job, but so far, I was loving it. My life was really starting to come together, and that made me really happy.\n\nExcept for that one thing that was still off.\n\nSee, recently I've come the conclusion that my problem is that I haven't been in a serious relationship- well, hell, any kind of relationship I guess, since Grade 11. I had been dating Beth for seven months when she broke things off. I never got a reason why, and I haven't dated since.\n\nNow don't go thinking I'm some introverted loser now, scarred by a traumatic breakup or something. It's not so much that Beth's sudden departure had made some huge, glaring mark on my psyche, just that I had always been very comfortable with being alone. And after she left, I simply went back to being alone. I had my friends, and I was still on the baseball team, even though I wasn't great. Life just sorta... moved on.\n\nI still have tons of friends, and even though I only moved to San Francisco six months ago, I've already made some good friends here at work.\n\nMy issue is that I guess I just stopped caring. I finished High School not caring if I was with anyone, and that attitude kinda seemed to follow me through my Graphic Design course. It's not that I was avoiding a relationship, but I certainly wasn't looking for one. I suppose I probably missed an opportunity here or there because of it, too. At the time, that didn't matter to me either.\n\nBut just a couple months ago now, I realized that, even though things were going so well, there was something gnawing at me. And of course, it had only got worse over time. So now here I am, living out my childhood dreams, in a city that I loved, at my perfect job, the early-summer sun shining through the windows... and no one to share it with.\n\nAnd that's the kicker, isn't it? You could have the best friends in the world, but it simply can't compare with having someone to share your life with, someone to love... at least so I've heard. I honestly don't know if I've ever been in love. I may have glossed over some tears that were shed here or there after Beth left, but even though I was kinda heartbroken, I don't think I can say that I was in love with her. But this feeling that I'm currently struggling with definitely has an air of loneliness about it. And since I have good friends here that I see pretty regularly, I'm going to assume that the lack of a romantic element in my life is starting to catch up with me.\n\nI considered this little conundrum of mine on the walk back home. Of course, there really wasn't anything to consider. I needed to meet someone who I clicked with, it was simple as that. Granted, getting a little action might help tide me over, but I'd never been particularly good at that sort of thing. Friends had tried to hook me up a few times over the years, and ever so rarely did it actually work. And of course, I just wasn't really into that sort of thing.\n\nI set my backpack down on the bench by the front door and headed upstairs toward my bedroom. Even though it was a little cool out considering it was early summertime, I still got a bit sweaty on the walk to and from work. As I stripped and headed toward the shower, I stopped at the mirror.\n\nI'm a pretty decent looking dude, I like to think. About 5'11\", and in pretty decent shape. There's no real definition on me anywhere, but I'm not flabby or anything. 'Comfortably average' fits me pretty well. I have a good jawline, which I think is probably my best feature. Light brown hair that I like to keep on the shorter side, brown eyes, Sagittarius, likes long walks on the beach, blah, blah, blah...\n\nI got tired of staring at myself, so I got in the shower. Always feels nice to wash the days' grime away. After I got out and toweled off, I started making plans for dinner, mentally cataloguing the ingredients I had left, scattered around the kitchen.\n\nKnock knock knock\n\nNow that's a new one... don't hear that around here too often. My friends don't usually come over unless I invite them, so I wonder-\n\nShit. SHIT! Emma's friend was here! That had to be who it was. Shit, I'd totally forgot about her!\n\nMy towel wrapped around my waist, I hobbled over to the door, holding the towel closed with one hand as I reached for the door with the other. I prepared my defence statement quickly, cursing myself for not remembering. I hadn't even got her room ready! I opened the door, and my mouth.\n\n*Click*\n\nYup. There it was. That didn't take long.\n\nShe was a vision. Around 5'6\", her wavy, dark brown hair hung down just below her shoulders, but it was the contrast of her ice-blue eyes that drew me in. A dusting of freckles resting on top of high cheekbones framed the eyes that had me trapped in their gaze, and I had to forcibly pull my attention away to see the gorgeous smiling girl looking up at me on my front porch expectantly. I closed my mouth again.\n\n\"Hi,\" she chirped.\n\nI raised my eyebrows a little and did a bit of a head-tilt. This was kind of a deer-in-the-headlights moment for me.\n\n\"Hello,\" I replied.\n\n\"I'm Holly!\" She beamed at me and held out her hand. Her voice had this captivating little lilt to it.\n\n\"Oh yeah, uh,\" I reached with the hand that had been on the doorknob, \"Danny!\"\n\n\"Yeah you are,\" Holly quipped. I smiled and tilted my head again. My disorientation was not helping me navigate this situation as well as I would have liked.\n\nI stepped aside and allowed her in.\n\n\"Do you need me to carry anything...?\" I asked.\n\n\"Oh it's alright, I've only got these two.\" She looked at her bags and hefted them a little. \"Not like you're in any state to be lifting things.\"\n\nShe winked at me and moved past me inside. I closed the door, and gave my head a quick shake.\n\n\"Okay just one sec, I'm gonna go get dressed and then I'll show you where your room is!\"\n\nShe plopped down on a barstool behind the kitchen island, and dropped her bags by her feet.\n\n\"I'll be waitin'!\" She gave me a smirk.\n\nI went upstairs and quickly threw on some clothes. I also took that time to gather myself. Wow, okay... she was beautiful. Like, seriously beautiful. All of a sudden, I was a little nervous about going back downstairs... I gave my head another shake. Come on, you can salvage this!\n\nI made my way back downstairs, now dressed in a T-shirt and some shorts. Holly was sitting on the barstool still, fiddling with her phone.\n\n\"Hey, sorry! Alright, good to go!\"\n\n\"Woah, who the hell are you!?\" Holly gaped. \"You can't be Danny, Danny doesn't wear clothes!\"\n\nI stared at her. Then I started laughing. I didn't even know why. It wasn't even that funny, but for some reason it caught me way off guard! I liked it.\n\n\"Alright, I like you good,\" I nodded at her, still chuckling. \"Come on, I'll show you your room.\"\n\nShe hopped out of her chair, picked up her bags and scampered after me. I led her down the hall beside the staircase and through the second door on the left. We entered the spare bedroom, which was essentially a mattress on a frame with a nightstand beside it. A lamp sat on the nightstand.\n\n\"Alright so it's not much, and I'm real sorry I didn't get the bedding on there for you, I kinda forgot you were coming today. Closet's over there, you can put your stuff away if you want while I go grab the bedding!\"\n\n\"Roger!\" She gave me a little two-finger salute as I left the room to the linen closet under the stairs, and I grabbed the only spare blanket, pillow, and sheets that I had.\n\nAs I re-entered the room, Holly was hanging her clothes. I dumped the bedding on the bed and began sorting it all out, setting it up for her.\n\n\"I was just about to make dinner, did you have anything in mind?\" I asked.\n\n\"Nope, surprise me Master Chef, I'm not picky!\"\n\n\"Alright, I'll go see what I've got then.\"\n\nI made my way back to the kitchen, and checked the freezer. Bingo! Still had that salmon fillet. Cut that in half and it would be the perfect meal for two.\n\nMy mom always used to make this maple ginger salmon, it was one of my favourite meals growing up and so I'd made sure to grab the recipe when I'd left home. I pulled it out, and started gathering up the things I'd need as Holly sauntered back in to the kitchen, settling herself back into the barstool.\n\n\"Whatcha makin'?\" She asked, her chin resting on her hands and a smile curling at her lips.\n\nI looked over at her. \"I'm making a maple ginger salmon fillet, with some rice and some broccoli.\"\n\n\"Ooooh!\" She groaned. \"Lucky me!\"\n\n\"I don't make this for all the girls you know,\" was my immediate response... Fuck. I'm pretty sure I outwardly cringed at that one.\n\n\"Oh you don't, do ya?\" Holly shot back. \"That means I'm special then?\" There was a gleam in her eye that caught my attention.\n\n\"This is hush money. So you don't tell Emma you saw me naked on your first day here!\"\n\n\"Oh come on now, I haven't seen ya naked yet!\"\n\nYet. Yeah, that definitely caught my attention. My cooler head prevailed, however.\n\n\"So, Holly, my sister didn't actually tell me what brought you out this way.\"\n\n\"I'm out here doing a work placement for my course. It starts in a week, but I figured I'd get out here early and start looking for a place to live so I can get settled before I start.\"\n\n\"Smart. So, what's your course?\"\n\n\"Computer Science. I'm a programming major!\"\n\n\"Wait... computer programming?\"\n\n\"That surprises you?\"\n\nI laughed a little. \"Yeah actually!\"\n\n\"And why is that?\" She asked playfully.\n\n\"You're different than most people in that line of work, a lot more...-\"\n\n\"Pretty?\" She batted her eyes at me.\n\nThat made me laugh a lot. \"No! Well, yes! But I was going to say more energetic.\"\n\n\"Well I can see why you'd think that, especially if you knew some of my classmates.\"\n\n\"So, how did you get into programming then?\" I asked.\n\n\"Well, it started with a crippling addiction to Cheetos and Mountain Dew, but then one day I realized I could harness my powers for the good of mankind!\"\n\nWe both had a good laugh at that. Holly was really interesting, and incredibly funny. We chatted as I prepared dinner, swapping stories and getting to know each other. She was actually doing her Computer Science course at UCLA, which I assumed is where she met my sister since she goes there as well, and working up here in the Bay Area for a big tech firm had always been a dream of hers. I shared some of my life too, regaling her with tales of my move here and the things I'd seen and people I'd met. Then I got into the stories of my sister as a kid, the real juicy ones too. Holly lapped those up, and that was the icebreaker that really sent us down the rabbit hole.\n\nI'd poured us a glass of wine with dinner, and after we finished, we retired to the couch. As the liquor kept flowing, so did the stories. The discussion went on for hours; I'm very lucky it was Friday and I wasn't working the next day, because I totally forgot to even think about that. Holly had a sarcastic wit that kept our conversations interesting no matter what, but as the night wore on, I was happy to find out that she was also quite sensitive when the situation called for it. As we kept drinking, we got deeper into each others pasts. I was amazed at how much I had shared already.\n\n\"-and then after all that, I dropped the glass too!\"\n\nHolly just continued laughing hysterically.\n\n\"Oh man, I swear to God I was so embarrassed, I'm glad I wasn't on a date or something, because that would've been like... game over, I swear...\" I slurred.\n\n\"So... there isn't a Mrs. Danny, then...?\" Holly lurched forward and raised her eyebrows.\n\nI scoffed. \"I'm not married if... that's what you're asking.\"\n\nHolly laughed, harder than was probably necessary. \"No, that's not what I was asking!\" She slurred out.\n\n\"What!? If I was dating someone they wouldn't be... Mrs... fucking, no, that's not how that works!\"\n\n\"No, come on, you're not seeing someone? Really??\"\n\n\"Pfft. Pfffffft... No! I haven't dated anyone since *hic* High School!\"\n\nSober, and in hindsight, I would've rather had a bus come through my front window and kill me before I said that then have let that out.\n\n\"WHAT!?\" Holly shrieked. \"Danny! What!? How- how old are you, like... 26 or something?\"\n\n\"I'm 22 you doofus!\"\n\nHolly giggled. \"You're so young!\"\n\n\"You're only 20!\"\n\n\"What!? How did you know that?\"\n\n\"I... Well I just assume you're the same age as my- as Emma is.\"\n\n\"Well... Yeah I am, so... suck it.\"\n\n\"Ha! I knew it, one point to me!\"\n\n\"Hey, stop changing the *hic* subject, Mr. I Haven't Dated Since High School!\"\n\n\"What? There's nothing more to say, I mean... yeah, that's pretty much it.\"\n\nHolly half-scooched, half-fell over near me. \"So like... you haven't kissed anyone, or like... anything? Since High School?\"\n\n\"No! No, I've... done it since High School. A couple times...\"\n\n\"You've had sex twice in the last four years?\" Holly looked at me incredulously.\n\n\"Well... yeah, I mean... I'm just not the kind of person to like, go about hav-\"\n\nI was cut off quite abruptly as Holly closed the remaining distance between us and drunkenly planted her lips on mine. I didn't respond for what was probably a little too long, before I kissed her back. I was a bit too inebriated to hold us up and I fell backward, Holly landing on top of me, giggling. Our lips were still locked together.\n\nWe must have stayed that way for at least another minute or so. I don't have full recollection of that moment, but I definitely remember her body pressed against mine. Her eyes had commanded my attention at the door, and her clothes had kinda hid her body, but there was no doubt right then and there that she had some spectacular curves going on under that hoodie. That loneliness feeling from before? This was making great strides in helping fix that.\n\nI extricated myself from our little tangle for a moment.\n\n\"Mm... maybe we should try this once more when we're sober,\" I chuckled. Wasn't quite sure where that came from, but I'm pretty sure the mental beating I gave myself right after would ensure it never happens again.\n\n\"Mmmm... yeah, you might be right,\" she giggled.\n\nWe lay there together for a few more moments, looking at each other. I knew she was gorgeous before, but the beer goggles were only making her a hundred times hotter. It was hard to pull myself away from those eyes. Thankfully, I didn't have to.\n\n\"It's late, and I'm sleepy,\" Holly stated, slowly rolling off me.\n\n\"Right,\" I grunted as I heaved myself up off the couch. \"To bed with you then. Tomorrow we can help you look for places and I can show you the city.\"\n\nHolly stumbled to her feet, facing me. \"We're gonna hang out tomorrow? Don't you work?\"\n\nI had a momentary panic attack before I remembered Friday.\n\n\"Nope! Tomorrow's Friday, I'm free,\" I smiled at her.\n\n\"Ahhh good shit then!\" She beamed.\n\nHolly swung her arm over my shoulder, and together, we hobbled over to the staircase, and down the hall toward her room. I moved her blanket out of the way and laid her down in bed, pulling the blanket up over her once she was down. I had a momentary stroke of drunken genius and grabbed the garbage can out of the bathroom, putting it down beside her bed, and I got her a large glass of water for her nightstand. As I placed it next to her, Holly looked up at me.\n\n\"Aww... you're sweet. Thank you, Danny...\" she said in that melodic little tone of hers. She bit her lip before smiling at me.\n\nThere was no way I was resisting that move. I leaned down to plant one more kiss on her, before straightening up. I smiled at her as I looked back from the doorway.\n\n\"Night Holly. Sleep tight.\"\n\n\"Night...\"\n\nI stumbled upstairs and flopped into bed. I lay there for a few beats, before chuckling to myself. That was unexpected. But man, oh man, was it ever welcome. A small part of me worried how tomorrow would play out. Maybe Holly was just a flirty drunk. But a much, much larger part was content to just... be. However it all played out, Holly was a great girl, and tonight was something I desperately needed. I drifted off quickly, head spinning, with a smile on my face...\n\nThe Next Day\n\nAt ten thirty am I managed to stumble out of bed, donning a pair of sweatpants and an old T-shirt before heading downstairs. I got to the bottom to find Holly sitting at her barstool, slowly working through a bowl of cereal. She turned as I walked past her toward the kitchen.\n\n\"I didn't know what you had so I made cereal.\" She stated deadpan, staring at me bleary-eyed.\n\nI had to chuckle at that. I gave her a thumbs-up.\n\n\"Hey, good on you for showing initiative,\" I groaned back. \"I think I can whip us up something decent though if you're still up for it.\"\n\n\"You won't catch me saying no.\" Holly cracked a little smile.\n\nI went to the fridge to grab the eggs and milk, and took the bread out of the breadbasket. A frying pan on the stove had me ready to go.\n\n\"French toast?\" I asked over my shoulder.\n\n\"My hero,\" Holly fake swooned.\n\nWe shared a laugh as I poured the ingredients into a bowl and broke the egg in. I reached for the whisk.\n\n\"So, last night. That was... something.\" I think that came out a little more standoffish than I wanted it to, but lucky for me, Holly didn't seem to take it that way.\n\n\"Oh God, no kidding! I felt like death this morning. Totally worth it though, that's probably the most fun I've had in a while!\" Holly beamed a smile at me that made me flush.\n\n\"That's not incredibly sad, is it?\" She scrunched her mouth up.\n\n\"Well, in defense of myself here, I'm going to say no. No, it's not,\" I smiled, as I plated the first finished piece of French toast.\n\nHolly laughed. \"You're right, you were pretty great,\" she winked at me.\n\nAn action like that should probably have thrown me off, or made me nervous, but with Holly, these things only seemed to embolden me. It was a nice change for me.\n\n\"Yeah, for a guy who hasn't kissed anyone in a year and a half, I think I did alright,\" I winked back.\n\n\"A year and a half!? Jesus Christ Danny, we need to get you laid!\"\n\n\"Ha! That sounds like a proposition to me!\"\n\n\"Mmm... you make more food like this and you can have whatever you want,\" Holly moaned, her mouth full of her first bite.\n\nI finished making my share of the breakfast and sat down next to Holly. We finished our food mostly in peace, making small talk here and there. After we were done, we started talking about the day's activities; specifically, we talked about places to live. Holly was doing her work placement at the head offices of some random little company called LinkedIn, I think I might have heard of it before. She wanted somewhere that was close by, but I had to warn her that it might be difficult. Rent around Palo Alto is pretty crazy. I barely get by living as close as I can, and it's still a thirty minute walk to my studio that's on the outskirts of the city.",
        "Regardless, we decided to see what we could find. We checked craigslist, some realty sites, and a bunch of other local rent listings. We made a list of everything that seemed at least halfway reasonable and made some calls to see who was available. Being a Saturday, it seems that some of the places were booked solid for viewing appointments, so we promised to come around to the few places that we could, and we were out the door by one in the afternoon.\n\nThe first place that we got to was a condo not far from my house. The landlord was a bit sleazy looking, though I guess that pretty much means 'average' in terms of landlords. He met us at the door, ushering us inside and to the elevator that would take us up to the rental. I think both Holly and I were decently impressed when we entered. The pictures on the ad actually didn't quite do it justice: there was an impressive amount of open space, and it was very bright. It was also quite new-looking.\n\n\"Yeah, the refurbish was done a few years back, after some old tenants moved out,\" the landlord said with a slight nasal twinge in his voice. \"Came out real nice, even got some new piping with it all!\"\n\n\"It's beautiful...\" Holly murmured, gazing wide-eyed around the place, flitting from one part of the condo to another.\n\n\"Yeah, yeah... yeah there's a, uh... a couple's discount too, if you guys are together, ya know?\"\n\nDing, dong!\n\nOh hey, there's those alarm bells. I was wondering where I'd left them.\n\n\"Oh we're not a c-\"\n\n\"A couple's discount! That sounds wonderful, doesn't it sweets!\" Holly grabbed my arm and yanked me toward her.\n\n\"Uh... sure, yeah, totally... that sounds super...\" I gave Holly a side-eye, but she just winked and pulled me further in, toward the balcony.\n\nI wasn't quite sure where she was going with this, but I figured it was harmless to let it play out. Holly was a mystery that I was quite curious to unravel, bit by fascinating bit.\n\nWe finished our tour of the place after about forty five minutes, getting the rundown on the bills and responsibilities, and a tour of the facilities in the building. The landlord gave us some contact info should we choose to pursue, and Holly held on to me the whole time, grabbing my arm as we headed out the building. We waved goodbye one more time down the entryway path and turned on to the sidewalk.\n\n\"You know his 'couples discount' is because he probably has some shit installed in there to spy on us -you- right?\"\n\n\"Yup! But come on, if you weren't living there there's nothing he could do. As soon as I sign the lease the rent is set, and he gets zilch in the way of amateur porn. Devious, ain't it?\" Holly giggled, a mischievous twinkle in her eye as she nudged me.\n\n\"Yeah, that's pretty good, I'll admit.\" I smiled back. \"What if he has a shower cam or something?\" I joked.\n\n\"Ooo then I guess he is gettin' a show!\" Holly laughed.\n\nHolly and I finished up our rounds for the day, heading around to the other places on our list and meeting with landlords and ladies. None of the other places were quite as nice as the first one though, even though it was a little more expensive.\n\nBy the time we were done with all of our appointments, it was starting to get late. We were about a twenty minute bus ride from my place, so I had a thought.\n\n\"Hey, while we're out, wanna grab dinner?\"\n\n\"Why, Danny, are you asking me on a date?\" Her voice once again took on that melodic tone. She batted her eyelashes at me in mocking.\n\n\"What? No!\"\n\n\"Oh, so you're not asking me on a date?\"\n\nI stared at her. \"Why are you so mean to me?\"\n\nHolly just laughed and skipped down the sidewalk.\n\n\"Come on, let's go find somewhere that looks good!\"\n\nOur last place that we'd looked at had situated us right near a cluster of restaurants, so we chose a cool little seafood place and went inside. The hostess sat us near the window; our table was bathed in the orange light as the sun started to set and the day began to close.\n\nI was acutely aware of the setting being almost oppressively romantic. After the day we'd spent together, it was hard for me not to believe that Holly wasn't also seeing the significance of all this, and I actually started to get nervous as we settled ourselves in and picked up our menus. The fact that we hadn't sorted out if this was a date or not before was prominent in my mind. Lucky for me, Holly seemed to be completely impervious to the concept of awkwardness.\n\n\"This is romantic. Glad to see you made up your mind whether this was a date or not,\" she winked.\n\nMaybe less 'impervious' and more 'oblivious'.\n\n\"Little presumptuous of you, isn't it?\" I answered her with a small smirk. I was putting on a brave front, but I was definitely squirming inside.\n\n\"Am I wrong?\"\n\nI actually had to think about that. I knew my immediate answer was no, she wasn't wrong. This was a date, and I found myself happy about that. But despite the strong flirty vibe she was giving off, having the ball in my court on this whole situation wasn't helping me make decisions. But my gut said this was a date, so I just dived straight in.\n\n\"No, you're not wrong.\" I smiled and quickly diverted attention again to my menu. Then I mentally smacked myself for being a child, and looked back up at her.\n\nHolly was smiling at me. Not unexpected, I guess. But there was something there... something behind her eyes, a glint of something that caught me a little off-guard. It was there for a second, and the more I looked for it, the more it eluded me...\n\n\"Well, you did good, Danny. This is nice.\" Her smile was adorable, managing to be both sincere and smug at the same time. I got lost in it for a bit, before I managed to pull myself out.\n\nThe 'date' went really well. I worked all my nervousness out early on, so it was pretty smooth sailing after that. We chatted some more, and had a few good laughs. We talked about the places we'd seen today, and did some brainstorming on where we should look tomorrow. We even ordered dessert, before we paid and left, walking out into the cool night air toward the bus that would take us home, as the last vestiges of the day's light left the sky.\n\nWe got home just before ten, stumbling through the door in a fit of laughter.\n\n\"I'm gonna go get comfy!\" Holly announced as she headed to her room, still chuckling.\n\n\"Alright, I'll pour some drinks. What did you want?\"\n\n\"Some wine would be exquisite!\" Holly giggled from the hallway.\n\nI grabbed two glasses and set them on the counter, when I heard Holly shout. It was loud and sudden, and followed by a few expletives that nearly made me blush. Immediately, I ran out to the hall and down to her room, entering just as she skidded to a halt beside her window and slammed it shut. Then the smell hit me. Unfortunately, I already knew what happened.\n\n\"Oh god, you left your window open!\"\n\n\"Yeah,\" Holly said panting slightly, a shocked look on her face.\n\n\"Alright, quick, grab anything of yours and get it out of here, I'll get the bedding to the washing machine.\"\n\nYeah, I'd done this before. I had learned the disgustingly hard way to never leave your windows open when you left the house here, a tidbit I had neglected to mention to Holly. The neighbor's cat was a horrifying little menace, and I guess it thought this was part of its turf. It would pretty much piss and shit on whatever it could if you let it in. Thankfully, all it had managed to get to was Holly's bedding, but there was no way that smell was going away any time soon.\n\nHolly dumped all her clothes in the hall as I finished gathering up the duvet cover, pillow cases and sheets, and ran them to the washing machine, stuffing them inside as I exhaled a huge, pent up breath. I put in the soap and turned the machine on, then went back to Holly's room, finding her outside the door sorting through her clothes.\n\n\"I don't think it got to anything in the closet... does this happen often?\" she asked with a sigh.\n\nI chuckled. \"No, but I had to learn the hard way too. The neighbors cat is... very territorial. Sorry, I should have told you, I forgot. Just let me know if anything's ruined, I'll help you replace it.\"\n\nIt was Holly's turn to laugh.\n\n\"Come on man, I'm not gonna let you pay for my stuff, it was an accident! You've done so much already, besides, my stuff is fine!\" She patted her stacks of clothing. \"No need.\"\n\nI helped her carry her stuff out to the living room, piling it up on the coffee table.\n\n\"Hey, you go grab those glasses of wine and I'll go grab a sheet for the couch,\" Holly said as she turned and began to walk toward the hallway.\n\nI'm not entirely sure where this bold little sentence came from, though.\n\n\"Hey, why don't you just sleep with me tonight?\"\n\nHolly just stopped, turning back toward me, her head cocked and a crooked little grin on her face.\n\n\"Oh yeah? Now who's propositioning?\" She smirked at me.\n\nI didn't reply to that. My face must've looked hilarious though, as I stared at her wide-eyed, mortified by the implication of what I just said. I really liked Holly, and it had been far too long to this point since I'd had any meaningful interaction with the opposite sex, and while I was quite happy with how well I'd done to this point, I was still terrified that at some point, I'd say or do something stupid and cock it all up. It was very much in my head that that point was now.\n\nOf course, if I'd spent less time running around my own head and actually took a second to gauge Holly's reaction, I'd be feeling a lot better. I hadn't even noticed her moving toward me until she was hovering right in front of me.\n\nHolly got on her tip-toes and pressed her lips up against mine, a hand eventually placing itself on my left cheek. My brain played emergency catch-up, putting an arm around her and pulling her close, while I matched her kiss with one of my own. It was passionate, but not frantic. We were both savouring a moment that I was confident we'd both been waiting for for a while now.\n\nThe kiss only lasted for a few seconds, but it did a lot of work in that little amount of time. As we parted, Holly slipped her other arm around my waist so we were both holding each other. We looked each other in the eye, smiling.\n\n\"Bedtime?\" Holly squeaked out, biting the corner of her bottom lip. Well, this is only going to end one way, now.\n\n\"Yeah, I think that'd be good,\" I replied breathily.\n\nHolly pulled me along as we hurried toward the staircase, bounding up the stairs. A small part of the back of my mind complained that I'd left wine sitting out in the kitchen.\n\nAs we burst into my room I grabbed Holly, pulling her into a deep kiss which she sunk into as well. Eventually I pulled us apart and threw her onto the bed, her wavy brown locks spilling out onto the blanket beneath her. She squealed as she fell back, then she pushed herself up to a sitting position, looking at me with hungry eyes.\n\nWe both grabbed at our shirts and pulled. Luckily I got mine off first, so I got to see her shirt catch on the underside of her bra, pulling her breasts up as it came over her head. They bounced once, stunningly perky and firm-looking, even partially covered by that sexy little bra. Holly reached behind her, keeping eye contact with me the whole time as she unclipped her bra and dumped it beside the bed. She looked at me amused, as I just stared at those impossibly perfect tits.\n\nI came to, realizing I was right in the middle of undoing my jeans. I quickly finished unbuttoning and tore them off, throwing myself at Holly who was now in just a skirt. She giggled as I landed on her, which quickly turned into a moan as I once again planted my lips on hers. We stayed that way for a couple minutes, her rubbing up and down my outer thighs with her legs, and me, relishing the feeling of her amazing chest on mine.\n\nEventually, my hands moved down to her ass, kneading the soft, pliant cheeks beneath her skirt. It must have reminded Holly that she was still partly clothed, because she immediately broke the kiss and began to fumble with her skirt. I rolled off her and dealt with my own underwear, pulling them off along with my socks just as she shed her skirt.\n\nAnd she wasn't wearing any underwear. Suddenly the whole day flashed before my eyes, but from the perspective of looking up her skirt. My dick was so hard right now that it hurt. Holly threw her skirt to the side and jumped up on her knees beside me.\n\nNo surprise, she was a fine piece below as well as up top. Her pussy was completely bald and glistening wet, her outer labia almost hiding the inner folds, and her curvy hips sashayed hypnotically as she moved toward me. She threw a leg over me, straddling me as she pushed me back on the bed. She leaned in to me and gave me a quick kiss.\n\n\"So, I know it's been a little while. You can cum wherever, okay? We have all night...\"\n\nI just about came right there. I smiled at her, just nodding as she got back up on her knees and grabbed my cock, sitting herself down perfectly aligned with my dick. I groaned as I slid inside her, her smooth, tight little tunnel sucking me in inch by inch. Holly released a melodic little moan, her gorgeous tits jutting out into the air as her back arched, her hand placed on my thighs.\n\nShe began to move up and down on my dick, quickly increasing the pace. Her little pants and moans were driving me wild, and watching my cock spear her little pussy was only making it better. I ran my hands around her thighs for a bit, before moving my way up her torso to feel her perky tits in my hand. Her taut nipples rubbed my hand as she bounced enthusiastically on my rod, and she gave a lusty moan at the extra sensation.\n\nI moved my hands down to her ass next. It occurred to me (in the little brain space I had left for rational thought) that I hadn't seen her ass yet. But feeling it in my palms was the next best thing. It felt round and firm; I could barely fit a cheek in my hand! I squeezed her ass, savouring the sensation as I guided her along my cock. The sticky slapping sounds coming from her fucking me were really starting to get me going; she was leaking so much juice that the bottom half of my hands we already slippery with it, and it was coating her ass as well. I don't recall ever being this turned on. Until my hand moved between her ass cheeks.\n\n\"Oh fuck, Danny finger my ass, please!\"\n\nI acted on instinct, immediately putting my finger at her rear entrance. I felt it slick with her cum, and I slowly pushed it in. I was overcome with a totally new feeling, her ass gripping my finger being something unlike anything I'd ever felt before. Emboldened by this new sensation, and how easily my finger was sliding into her, I pushed deeper, only stopping when my index finger was nearly completely embedded inside this gorgeous nymph's little ass.\n\nHolly moaned, a lust-filled cry that nearly pushed me over the edge.\n\n\"Oh fuck Danny, finger my slutty little asshole while I fuck your dick, yes! God, so good, fucking fill me up, Danny! Fuck, yes, fuck!\"\n\n\"Oh shit!\" I mumbled, as I ripped my finger out of her ass, my body falling back against the bed as I came hard, shooting thick ropes into her snatch.\n\nAs soon as the first spurt landed inside her I felt Holly tense up. Her body slowly shaking harder and harder as she too came, gushing her cum around my dick. I could feel the powerful squirts trying to push my cock out of her, and I subconsciously tried to pull myself out. But Holly wasn't having it. She had my entire dick buried inside her as I continued to cum into her, and she was periodically twitching, jerking downwards to try and force it even deeper. Her eyes snapped open and she took a deep breath before giving one final shake and collapsing on top of me.\n\nWe both lay there for a few moments, catching our breath, my dick still hard and buried inside Holly.\n\n\"Shit... no one's ever made me cum that quick!\" Holly panted.\n\n\"Or that hard?\" I asked, curious about her squirting. It was seriously hot.\n\n\"Oh no, I do that all the time,\" she grinned at me, understanding what I was referencing. \"I did cum really hard though. Fuck...\" She flopped back down on top of me.\n\n\"Speaking of hard...\" I whispered in her ear.\n\nHolly began to grind on me a little bit as she lifted herself up, obviously trying to make sure I stayed hard.\n\n\"I have a favour to ask,\" she said with a small smirk creeping onto her face.\n\n\"What's that?\"\n\n\"I need you to fuck my ass.\" She broke into a wide grin that was both adorably excited, and painfully horny.\n\nThis was not something I had done before. Not that I didn't want to, I definitely did. My cock jumped when she said that, making her squeal with delight. But I was a little nervous. The contention must have showed on my face, because Holly looked at me, concerned.\n\n\"Is that... okay?\"\n\n\"Oh, no, yes it's more than okay! I just uh... I've never done that before, I don't really know how.\"\n\n\"How? Take me from behind, push your dick in my ass, and once I've loosened up a little, plough me like a thirsty little whore.\" Holly eye's sparkled with some savage delight at her impending reaming.\n\n\"Don't worry,\" she said, some compassion creeping into her voice. \"You'll know what to do once you're in there, and I'll guide you.\"\n\nShe got up off me, both of us sighing as we left each other, and moved up so she was just behind my head near the pillows. I sat up and followed, positioning myself behind her as she got down on her elbows, her back arched and her ass stuck up in the air lewdly. Any hardness I had lost had just come right back.\n\n\"Don't we need lube?\" I asked. Holly giggled.\n\n\"Look at your cock.\"\n\nI realized that I was soaked in her creamy cum, all the way up to the bottom of my pecs, and her cum was coating both my cock and her ass generously. I quickly grabbed my dick, preparing for my first anal fuck.\n\n\"Once you're in and I'm good, don't let up, okay?\"\n\n\"Once I'm in and you're good, I don't think that'll be a problem I'll have to work around.\"\n\nThat actually made Holly moan a little. I put my cock at the entrance to her ass, and began to push in.\n\nNow that is a feeling I had not felt before, nor is it one I could describe. Holly's ass was tighter, but it was just as pliant, and as I sunk deeper and deeper into her best fuck-hole, my mind blanked out everything except the amazing sensation. Holly groaned, deep and throaty. I'd always heard that girls who liked anal liked the mix of pain and pleasure, but that groan didn't sound like there was any pain there. The way her ass was contracting around my cock felt almost like when she had cum earlier.\n\nShe put up no resistance as I made my way in, but I was surprised when I eventually bottomed out. I'm not huge, but I have more there than I assumed her ass could handle. I guess I was wrong about that. I pulled my dick out slowly, easing it back in before I left her completely. I did this a few more times, feeling Holly's asshole loosen perceptibly each time, and drinking in her incredibly sexy moans.\n\nAfter a minute or so I was confident that she was ready. I started to pick up the pace, grabbing her at the hips and pushing myself deep and then repeating. Before long I was fucking her ass, her cum acting as an incredible lubricant with my cock sliding into her delectable asshole over and over.\n\n\"Fuck Danny, that's so fucking awesome, fuck my ass! Fuck my slutty asshole Danny, fuck me like a dirty little fucking whore... rail my ass so fucking deep Danny, make me your little anal slut!\"\n\nJesus Christ, did she expect me to last any respectable amount of time talking like that? On a whim, I spanked her.\n\n\"Oh fuck yes, harder!\"\n\nI was happy to oblige. I smacked her other cheek harder, but she just asked for it harder again. I spanked her twice more, my hand making a loud crack as it landed sharply on her ass. Holly squealed with unrestrained delight.",
        "\"Pull my hair!\" Holly yelled.\n\nI grabbed as much of her hair as I could, and yanked back hard. I was rewarded with a sharp hiss and low, throaty moan.\n\n\"Yeeessssss!\" Holly laughed through gritted teeth.\n\nThis girl was all kinds of kinky and I found that I was really, really into it. It was the kind of thing I'd always seen and enjoyed in porn, but had honestly never even considered doing in real life. But while I fucked this adorable, gorgeous hottie in her ass, one hand full of her hair and the other spanking her mercilessly, I knew I'd hit a turning point in my sex life that, until now, had been essentially non-existent.\n\n\"Jesus, yes, fucking abuse me, fuck my ass hard! I wanna cum so fucking hard Danny, make my horny little pussy cum so fucking hard! Spank me like dirty fucking slut, make me cum, punish me for being a naughty little whore!\" Holly squealed out, excitement and lust dueling in her voice.\n\nI went all in, yanking on her hair so her body was almost flush with mine, and increasing my pace in her ass so my thrusts came hard and fast, pounding her exquisite little asshole recklessly. Holly screamed and groaned incoherently as I reached around and mauled one of her tits, and my cock started to feel the pressure as she came, her ass contracting around my dick, nearly forcing me out entirely.\n\nHolly came in torrents. I could hear her squirts drenching my bed, and her high-pitched moans combined with her spasming asshole caused me to cum as well, my second load of the night shooting deep in her ass. My cock spraying her insides caused another little peak in her orgasm as she shot out a few more torrents of cum, and her voice squeaked into the range of barely audible, before finally shuddering and nearly going limp, my cock almost spent inside her wonderful ass.\n\nFinally, she collapsed, falling forward onto the bed. I fell forward beside her, our legs entwined and my arm around her as she shuddered from her aftershocks. She lifted her face out of the blanket and turned it to look at me. Her ice-blue eyes her positively glowing.\n\n\"Holy. Fucking. Shit,\" she moaned through a small smile.\n\n\"Yeah... yeah that's about it...\" I panted.\n\nShe laughed, and then I laughed. Then I pulled her toward me and we pressed ourselves together, gently kissing as we both came down from the most incredible orgasms.\n\n\"I met you yesterday,\" I stated as I pulled away.\n\n\"Yeah,\" Holly smiled. \"What a great day!\"\n\n\"I love how you cum...\" I laughed. \"And damn, that was kinky! You are seriously nasty, I loved that!\"\n\n\"Yeah, I can get a little... carried away I guess,\" she said sheepishly. \"I've always been pretty kinky, I'm pretty sure I was 12 when I started tying myself up to masturbate!\"\n\nShe laughed as I looked at her incredulously. If I weren't so utterly spent that would've had me hard again in an instant. Even now, I could feel my cock stirring.\n\n\"Sorry I soaked your bed.\" It was a cheeky apology. She wasn't sorry.\n\n\"Don't be,\" I replied. \"You squirting was crazy hot. That was probably the hottest sex I'll ever have.\"\n\n\"I've got a couple more tricks up my sleeve, so don't count your chickens just yet,\" she purred, her hand running down my arm.\n\n\"Oh, so there's more of this for me?\" I quipped.\n\n\"Plenty more. If you want it of course,\" she shrugged, noncommittally.\n\nI grabbed her head and kissed her deeply.\n\n\"You got me hooked now, there's no way I'm backing out!\"\n\n\"Don't pull out either,\" she winked at me. \"I love that feeling.\"\n\n\"Speaking of-\"\n\n\"It's fine,\" she smiled. \"Trust me, we're good.\"\n\nI kissed her again. When we broke it, Holly flipped herself over, curling up in front of me as the little spoon. I got the blanket out from under us and draped it over our sweaty, cum-soaked bodies. Holly's cum and our general sex smell filled the air. I was in danger of getting hard again, but I was way too tired to do anything about it.\n\n\"So, about looking for places tomorrow...\" I started.\n\n\"Yeah, I was thinking about that,\" she mumbled back. \"What if I just... didn't move out.\"\n\nShe looked back at me with a little smirk on her face. I could see it in her though, she wasn't at all kidding. She actually seemed almost a little nervous; I could tell she really wanted to stay. Not that I minded at all. After tonight, I desperately wanted her to stay too.\n\n\"I think that's for the best,\" I smirked knowingly.\n\nHolly turned a little more to kiss me. Then she turned back around, and snuggled herself closer to me.\n\n\"I met you yesterday...\" I mused again.\n\n\"Isn't it magical how quickly things can change?\" Holly chimed back.\n\n\"Yeah,\" I agreed. \"Yeah, it really is...\"\n\nWe both settled in to each other. I might have thought that after years of sleeping alone, sleeping with someone else in the same bed might have been difficult or distracting. Especially someone who was as naked and hot and kinky and smelling of sex as Holly was. But it was surprisingly easy. In fact, it was probably the fastest I've ever fallen asleep.\n\nJust as we were both drifting off, my mind once again recapped the last day and a half. I knew I felt the click when I saw her there at the door, but I hadn't realized just how fast or how hard I would fall for her. I met this girl yesterday, and already she seemed so important to my life, so much my other half, it was nearly impossible to grasp the scale of the whole thing in the timeframe we'd had.\n\nOne last thought entered my head, though, before I fell into a peaceful sleep: I hadn't put the bedding in the dryer.\n\n****************************************\n\nPlease be sure to RATE and COMMENT, it would be very much appreciated! Hope you all enjoyed it!"
    ],
    "authorname": "Darnuses",
    "tags": [
        "danny",
        "holly",
        "anal",
        "cute",
        "squirt",
        "squirting",
        "creampie",
        "college",
        "teen",
        "young"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/an-angel-at-my-door-ch-01"
}