{
    "title": "Home for Horny Monsters Ch. 77",
    "pages": [
        "Hi there! Annabelle here with the next exciting installment of Home for Horny Monsters!\n\nNew reader? Go to the beginning, we'll wait for you. No, really, everyone will just sit here until you come back. All caught up now? Great!\n\nReturning readers, happy holidays! Tis the season for monster beatdowns, and this chapter is no exception. I realized when I went to post this that I have one hundred submissions to Lit. ONE. FUCKING. HUNDRED. Wow!\n\nFor anyone wondering how I was able to write so many chapters, I'll flat out say that's it's because of the readers here. Without your enthusiasm and support, this story wouldn't exist. So make sure you leave those comments, tap those stars, and show any author you appreciate some love, because you never know what world you may help give birth to next!\n\nDon't forget that I put schedule in my bio if you're dying to know when the next part launches. I try to upload early enough in the week to hit by Friday night, but I'm not the boss of Literotica, so results may vary. Also, apologies to Tobey Maguire and his family. Apparently some close friends of his were upset that I misspelled his name last chapter. I blame the multiverse.\n\nBut enough about my life, let's see what's about to go down in\n\nThe Coming Apocalypse\n\nEulalie threw a rock in the air and watched in delight as the enchanted mace zoomed through the sky to swat the stone into the forest behind the house. The rock ricocheted off a tree and vanished into the weeds, startling a pair of birds and a rabbit out into the open.\n\n\"Twenty points,\" she declared, then threw another rock in a different direction. The mace spiraled through the air and hit it hard enough that the rock broke in two. One piece bounced off the house while another passed through Naia's watery body and splashed into the fountain.\n\n\"Maybe it's time we tone it down a little.\" Naia held out her hand and the rock reappeared in her palm. She tossed the offending stone out of the fountain. \"For so many reasons.\"\n\n\"Yeah, sorry.\" Eulalie whistled, and the mace flew down by her side. \"We'll play later,\" she told it while wiping some dust off of its head.\n\nIt was late afternoon. Eulalie had left Murray's home shortly after the police had come by to perform a wellness check. She had hidden away from the windows as they circled the house, then put away everything she could before they entered. Lucky for her, she had been keeping the place clean and their cursory sweep was for Murray or his body, not for the magical portal she had hidden by pulling the couch against the wall as she backed through it.\n\nOnce the police were gone, she and the rats moved everything back into the Library. The mace had become restless indoors, so she had brought it over to the house to let it fly around the backyard. The sky was overcast with the potential for storms, so she figured that the mace was unlikely to be spotted.\n\nThe back door banged open and Suly came walking into the backyard with Cyrus in tow. \"Company,\" he declared while leading the mage over to the fountain. Cyrus had a much nicer bag on his head, one that Zel had brought yesterday from her village.\n\n\"This is a surprise.\" Eulalie frowned at Sofia, who was soaking her feet in the fountain. \"I didn't expect you until tonight.\"\n\nCyrus shrugged. \"I found out that the local police stopped by your neighbor's house and came to see if I could be of any help.\"\n\n\"Ah.\" As helpful as Cyrus had been the last few days, it didn't surprise her. On the one hand, she wanted to be suspicious of his motives. On the other hand, maybe he really was just trying to help, do some good for others with his golden years. \"We should have that sorted, but thank you.\"\n\n\"Not quite,\" Cyrus replied, then turned his head vaguely toward Suly.\n\n\"This one jus' spent the last hour scrubbin' yer prints out of yer rental.\" Suly winked at Eulalie. \"Had me come with 'cause I be thinkin' he wants a trophy fer it.\"\n\nEulalie slapped her forehead. She hadn't even considered potential forensic investigations of Murray's home. If he never returned to his job, they would definitely do more than just drop by and knock. It wasn't like her actual prints were on file, but the last thing they needed was a police investigation right next door.\n\n\"I don't want a trophy,\" Cyrus declared from inside his hood. \"However, I do think I've demonstrated that I am an ally and can be trusted.\"\n\nEulalie narrowed her eyes. \"You want us to take the hood off, don't you?\"\n\nCyrus nodded. \"I've already seen plenty. To be honest, I've noticed that the only one I have to wear it around is you and I want to know why.\"\n\nEulalie looked at Naia, who just shrugged. Amymone was no help. She had her nose buried in a book.\n\nCyrus had proven himself several times over, but it was still a big gamble. Other then tossing a fireball at Sofia, he hadn't reacted poorly to any of the others. Maybe now that he knew everyone better, it would be okay.\n\nSofia looked dubious, but said nothing as Eulalie reached out to undo the drawstrings holding the bag shut at the bottom.\n\nDeciding to just rip off the bandaid, she tensed her arm to yank the bag free, but was stopped at the last moment by Sofia. The cyclops had grabbed Eulalie's wrist with both of her hands, her purple iris ablaze with magic. Eulalie had questioned the cyclops at length about her unique precognitive ability, and was under the impression that seeing such a thing meant that personal injury was in Sofia's immediate future.\n\nEulalie arched an eyebrow and looked at Sofia.\n\nSeriously? she mouthed.\n\nSofia nodded. Very bad idea, she mouthed back.\n\nEulalie made a mental note to ask Sofia later what she had seen. It was concerning to know that Cyrus, despite all his talk, would freak out bad enough to harm the others.\n\n\"Um, is everything okay?\" Cyrus reached for the rim of his bag, but Eulalie deftly re-tied it before he could even touch the hem,\n\n\"I had a change of heart,\" she declared. \"Queen's prerogative. I'm like an internet troll. Prefer to remain anonymous.\"\n\nCyrus groaned, then took a step back. \"Can someone at least help me sit, then?\" he asked. \"My knees hurt from scrubbing rat prints off the baseboards.\"\n\nSuly guided the mage over to the fountain where Naia helped him sit and then started massaging his shoulders. Cyrus let out a sigh, but sat like a scorned child.\n\n\"So what now?\" he asked. \"I'm already here, may as well stay. I'm happy to assist with keeping the police away for another couple of days, or maybe you need a night watchman?\"\n\n\"Yer too eager,\" Suly said.\n\n\"I'll do whatever if it means I don't have to wear this hood,\" Cyrus replied.\n\n\"I can find other stuff to do so that the others can let you out to play,\" Eulalie offered. If nothing else, she could look at some of the research in the Library and see if she could learn more about the magical mace she had found. Or maybe even try to find more info on dimensional rifts. She already had dozens of books set aside for when the current crisis was over; the Library was an absolute treasure trove of information.\n\nNaia froze in place, her hands squeezing Cyrus' shoulders. Her blue eyes flashed brightly as she turned her head toward the house. Amymone nearly dropped her book in a similar reaction, and Sofia gasped, her hand going to her belly.\n\n\"Is that him?\" asked the cyclops.\n\nNaia smiled and nodded.\n\nMoments later, they heard the sound of a car shrieking to a halt out in front of the house. Eulalie desperately wanted to climb on the roof and see what was happening, but that was a great way to scare the shit out of anyone who might be looking.\n\n\"Hello?\" Mike's voice carried over the house.\n\n\"We're back here!\" Amymone tucked her book into a nook in her tree and stood, her hands clasped to her chest. \"Do you feel that?\" she asked her sister.\n\n\"I do.\" Naia frowned. \"But there's something else.\"\n\nMoments later, Mike appeared through the back door. His hair was wild and somehow noticeably longer than when he had left. Stubble had formed along his chin, and he tossed his bag on the ground as he ran across the yard and nearly knocked Cyrus into the water as he stepped into the fountain and threw himself into Naia's arms.\n\nNaia squeezed him, tears filling her eyes. Eulalie noticed that one of Mike's arms was in a splint, his fingers discolored like they had been bruised.\n\n\"Oh, Mike, I'm so sorry,\" she said as she squeezed him.\n\n\"What's happening?\" asked Cyrus, turning his head uselessly. \"Is it him? The caretaker guy?\"\n\n\"Cyrus?\" Dana stood on the back porch, a look of disbelief on her face. \"Is that you? Why are you wearing that bag on your head?\"\n\n\"Dana!\" Relief filled Cyrus' voice. \"I honestly don't know!\"\n\nDana looked at Eulalie, then back at Cyrus. Understanding crossed her features, and she stepped off of the porch as Yuki followed her.\n\n\"Damn, this is weird,\" Yuki said as she turned to look back at the house. \"This is the one from the Underworld, isn't it?\"\n\n\"We have so much to tell you,\" Sofia added, but Mike held up his good hand and just sobbed into Naia's shoulders for a minute longer.\n\nSheesh, what happened to this guy? Eulalie paced while Mike had his breakdown. Impatient, she pulled out a piece of webbing and twisted it around in her hands like a piece of string.\n\n\"Sorry, sorry everyone.\" Mike took a deep breath and surveyed the scene. \"A lot has happened and there's still plenty to do. I've been in contact with the house and...who the fuck are you?\" He was looking at Cyrus.\n\nMike's body language shifted dramatically, and Eulalie felt the wind shift around her. Naia put a calming hand on his shoulder, and the wind died down.\n\n\"That's Cyrus,\" Dana replied. \"He's the guy Lily and I met when we were in Hawaii.\"\n\n\"Yes, pleasure to make your acquaintance.\" Cyrus stood and offered his right hand for Mike to shake. \"I've been looking forward to this meeting for some time.\"\n\n\"Not to be rude, but I can't shake hands right now. I have an injury.\" Mike looked from the hood to Eulalie, then nodded knowingly. \"Are you aware of our situation?\"\n\n\"That the house behind us isn't your actual house and members of your family are trapped there, including Lily? Yes, I am.\" Cyrus lowered his hand. \"I came to investigate and kind of fell in with this crowd.\"\n\n\"Then we're glad to have you.\" Mike pulled away from Naia. \"There's a lot we have to discuss, but there's something that can't wait.\" He reached into his pocket and pulled something out. \"Eulalie, I...um...\"\n\nWhen he spoke, the words became so much buzzing in her ears as he handed over her father's dog tags. Each word was like a drop of rain on hot steel, sizzling loudly before evaporating into the air to be forgotten. The world dropped out from beneath Eulalie, and she stood in silence for several moments, contemplating the cold metal in her hands.\n\nWithout a word, she turned from the group and fled into the house.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nMike watched Eulalie as she disappeared, then let out a sigh. He had spent the last several hours trying to figure out what to say, how to break the news to someone that a loved one had died.\n\nIn the end, he stumbled over his words, eventually spitting out that Velvet was gone. He wasn't even entirely sure what all he had said as his brain had rushed to fill the silence with words that had garnered no reaction. It could have gone way better, and he hoped that Eulalie wouldn't hate him for it. As bad as he felt about Velvet's death, it paled in comparison to what she must be feeling.\n\nBoth Sofia and Dana went into the house together, presumably to find Eulalie.\n\n\"I'm sorry, someone died?\" Cyrus shifted back and forth on the fountain as if uncomfortable. \"I would excuse myself, but...\"\n\n\"One of our own crossed over.\" Suly put a hand on Mike's shoulder. \"I'm not as sensitive as this lot, but I can feel yer grief. Ye have me condolences.\"\n\n\"Thank you.\" Mike sighed again. \"I wish I had time for condolences, but we simply don't.\"\n\nHe spent several minutes explaining what had happened to the house, only to be interrupted by the surprise arrival of Asterion carrying Ratu. The naga greeted him with a kiss on the cheek and declared that she had sensed his arrival and wanted him to tell her everything. He helped her sit on the edge of the fountain as he started over from the beginning. He told them about the horsemen, the angel, and then Nesferisfet.\n\nWhen he finished, he looked over at Ratu. \"So I need to know what we can do to find the house and take out this priestess and the angel. And potentially the horsemen, if that's even possible.\"\n\nThe naga laughed. \"To think I've spent the last few days lounging when the end times have been upon us. I would have worn something prettier.\" She waved her hand and summoned a silver goblet. \"The answer to your question is that we've been busy here, trying to account for all possibilities. Our guest here has been a big help.\"\n\n\"Even with this damned bag on my head,\" Cyrus grumbled. \"Your rat queen has insisted I wear it to protect sensitive information, but I know she's just doing it to hide her identity.\"\n\n\"Sorry.\" Mike looked at Naia, who gave him a nod. He reached over and undid the straps and removed the hood.\n\nThe old man beneath had a scarred face, his mouth falling open upon seeing Mike.\n\n\"Better?\" Mike asked.\n\nCyrus looked like a fish out of water, his mouth opening and closing rapidly. He cleared his throat and sat up straight.\n\n\"I apologize for asking, but...you are a human, right?\"\n\nMike nodded. \"I'm supposed to be, but it's very complicated.\"\n\n\"What happened to your arm? That looks bad.\"\n\n\"Got into a fight with the Jersey Devil.\" Mike frowned. Dana claimed Cyrus was okay, but he wasn't about to go into more detail about Oregon with a stranger.\n\n\"Leeds, huh?\" Cyrus shook his head. \"That one is a real bastard. Hope you gave him hell, he's slippery. We've been trying to pin that one down for a bit, but he's been far too quiet lately, so fell to the bottom of our list.\"\n\nMike set his jaw. \"Chances are good you'll never hear from him again. Ratu says you can help us?\"\n\nCyrus waggled his hand. \"I'm afraid I am of limited use in what you need to accomplish. I determined some time ago that your home was taken by stretching a dimensional gateway over it.\" He turned and pointed at the back gate. \"Wherever that goes is where you will find your house and your people.\"\n\n\"That's easy enough. Naia? Gonna need that key in a minute.\" He turned his attention back to Ratu. \"That's one problem down. What else do you have for me?\"\n\nThe naga grinned. \"I've got a magic sword that will cut through almost anything. That will be of some use.\"\n\nMike held up his broken arm. \"I'm right handed,\" he said. \"Afraid someone else will have to use it.\"\n\n\"Oh.\" The smile on Ratu's face faded. \"I'm sure someone else can use it.\"\n\n\"Probably. Speaking of, I need to know who's going with me. If this fails...\" Mike sighed. It wasn't just about the house anymore. The whole world was at stake, and all because some crusty bitch in a sarcophagus tattled on Death.\n\n\"We also have this.\" Ratu pointed to the spot near where Eulalie had been sitting. A large mace lifted off the ground and came to hover in front of them.\n\n\"Wait, I recognize this.\" Mike moved closer and held out his hand to touch it. The mace moved away from his fingers. \"This was in the tower, right?\"\n\n\"It was. The story about how and why it's here doesn't matter, but it is sentient and, I think, wishes to help.\" She tried to touch it, but it dodged away from her fingertips. \"Hey, look, I'm sorry I didn't set you free last year. I didn't know.\"\n\n\"Ah, shit, that's right. I'm sorry, too.\" Mike held his palm out as if waiting for a dog to sniff it. \"Do you wanna come with me and smash up some bad guys? Maybe save the world, rescue the princess? Princesses?\" He just hoped there would be somebody to save once they got there.\n\nThe mace tilted forward and pressed its head into his hands, like a cat rubbing against its owner. He liked how the metal felt in his hands, and he gave it a squeeze.\n\n\"I think it likes you,\" Suly said. \"I'm with ye, by the by. Can't have me favorite girl wonderin' why ye've come alone.\"\n\n\"I wish to come as well.\" Asterion's rumbling voice surprised Mike. Despite the minotaur's imposing size, it was easy to forget that he was there.\n\n\"I would assist as well, but am far from mobile.\" Ratu shook her head. \"And if you are all passing through the Underworld, small and fast will be better. Those demons are likely to still be hanging around.\"\n\n\"Excuse me, demons? Underworld?\" Cyrus looked gobsmacked. \"What the hell have you gotten yourselves into?\"\n\n\"You coming?\" Mike asked. \"Sounds like you know some things. You could be the Merlin to my Arthur.\"\n\nCyrus shook his head vehemently. \"I lack the proper preparations to simply tag along where you plan to go. And if you must travel some distance, my stamina is not what it used to be and I may become a burden.\"\n\n\"Oh.\" Mike shrugged. \"No big deal. It's just the end of the world is all.\"\n\n\"If I could do anything to help, I would,\" Cyrus protested. \"But a large-scale battle against an angel is beyond me.\"\n\n\"How about dealing with a stolen car?\" Mike pulled some keys out of his pocket and tossed them to Cyrus. \"Won't bore you with the details, but our shortcut ran out of juice about twenty miles from here. Nobody plants the right trees in this neighborhood.\"\n\n\"Trees?\" Cyrus looked confused, but Yuki stood behind him now, her hand on his shoulder.\n\n\"It would be immensely helpful if you could drop that car off somewhere else,\" she told him as she walked him toward the back door. \"You do know how to drive, right?\"\n\n\"I do,\" he replied. \"But I'm sure that--\"\n\n\"Oh, and you know how to remove fingerprints,\" Amymone added. \"That means you can remove the evidence!\"\n\n\"Yes, but--\"\n\n\"Cyrus.\" Mike stared at the man. \"Do this for me and I'll be happy to sit down with you sometime and we can just talk. I'm sure you have questions, and maybe I have answers to give.\"\n\nCyrus paused, conflict in his eyes. Finally, he nodded and held up the keys.\n\n\"It's a deal,\" he said. He turned to Yuki and gave her a small bow. \"I know my way out, thank you.\"\n\nWith that, he disappeared into the house. Mike waited until he heard the car being started before letting out a sigh of relief. He half expected screams of fright followed by lightning or fire. Even in grieving, Eulalie had made sure to hide herself away.\n\n\"Didn't want him around?\" asked Ratu. \"He seems friendly enough.\"\n\n\"He's not family.\" Mike looked at the others. \"He's an ally, but he's not one of us. I know it sounds strange to say it like that, but I feel it in my gut.\"\n\nHis feelings about Cyrus were severely mixed, as if his own senses were ambivalent on what he should do. The last thing he needed right now was another complication, so had erred on the side of caution.\n\nThey spoke at length, comparing notes on what they knew. Naia seemed to think that Mike would be able to use his connection with the house to open the gate to the Underworld. Sofia eventually returned, then sat and listened as Mike detailed what they would be facing if they could get back to the house.\n\n\"Apophis, really?\" Sofia shook her head in disgust at the mention of the priestess. \"Doomsday cults are a dime a dozen, but this one was backed by an actual deity.\"\n\nRatu nodded. \"The Great Serpent was infamous among my people, for obvious reasons. His fights with Ra were the stuff of legend, but his followers were the absolute worst. Their desire for chaos was largely what led to their own demise as a religion. Pretty much self-destructed right after Apophis was killed, but it sounds like one of them actually had long term plans.\"\n\n\"And a magic cock, apparently.\" Mike shifted his arm and winced. It was throbbing now.",
        "\"Ah, yes. The phallus of Osiris. I won't bore you with the details, but it was lost a long time ago. If Isis was still around, she would probably grant you a huge boon if you could return it to her.\"\n\nMike lifted an eyebrow. \"Why would Isis care?\"\n\n\"Osiris was her husband. He was the god of fertility, agriculture, the underworld...\" Ratu waved her hand dismissively. \"So not just any magic cock. Divine magical cock. And right now, with them being in the Underworld, that thing has what you would call the home court advantage. It would also explain how this priestess was able to subjugate an angel. By combining her soul with Murray, it allowed her a direct connection to the angel. The cock of Osiris would give her the strength to control it. However, if you take away the artifact, you may weaken or break that connection.\"\n\nAs they continued to discuss options, the skies up above darkened. Looking up at the sky, he was filled with an inexplicable dread.\n\n\"Naia? Can I get that key?\" He held out his hand and Naia handed it over. Everyone stopped talking as he walked over to the wrought-iron gate at the back of the property.\n\nWhen he slipped the key in and turned it, the gate opened, only revealing the forest behind his house. There was no sign of Cerberus or the Underworld.\n\n\"Figured it wouldn't be so easy,\" he muttered, then closed the gate again. He took a deep breath and closed his eyes, summoning the magic. It manifested weakly at first, as if reluctant.\n\nHe put his hand on the gate and closed his eyes. The world around him went quiet as he spread his consciousness wide, hoping to grab onto a thread of magic. There were whispers of it shifting around beneath the soil, and it took a few tries before he was able to latch onto one.\n\nA jolt of power raced through him, and he opened his eyes to gaze upon a beautiful garden. His hand was wrapped around an iron pole with an unlit lamp up above.\n\n\"This...is not what I expected.\" He looked down at his feet and realized that he was in his own body. A quick survey of the place revealed that this was definitely the magical gardens where he often met the house. He had only ever been there in her body, and he was all alone.\n\n\"Hello?\" He walked around, curious if his body was still in the real world. If he had teleported here, it had probably scared the shit out of everyone. The most likely idea was that it was just his consciousness that had made the trip.\n\nI see you've met my sister. The voice was coy and carried by the breeze. You carry her scent.\n\n\"I have,\" he replied, recognizing the house's voice. \"I'm trying to open up the Underworld so I can come find you. Well, your Earth body. My house. Any advice on that?\"\n\nThe voice laughed, and he felt a soft breeze caress his body.\n\nI'm never more than a thought away, Caretaker. The presence tickled the back of his neck and tousled his hair. They say that home is where your heart is. So come find me.\n\n\"That's very cryptic, thanks for your...\" he was suddenly back in his yard. \"Help,\" he finished.\n\nIt was frustrating never being given a direct answer, but he knew that the house, in her own way, had somehow given him the answer without violating whatever rules had been set forth. Now he just needed to dissect the words and figure out how much was metaphor and how much was literal.\n\n\"Mike? Is everything okay?\" Naia's voice was filled with concern. \"It looked like you passed out for a second there.\"\n\n\"Might have,\" he replied, then turned to look at her.\n\nNaia. She smiled at him, her thick locks being tugged by the stormy weather that had formed overhead. Though he had loved Velvet fiercely, Naia had been the first love of his new life, the woman who had captured his heart and bound him to this place. He had missed her, but those emotions had been set aside by his short, passionate affair with Velvet.\n\nWhy was that? The attraction had been intense, but mutual. Had his magic reacted to Velvet's own desires? Or had it been something else?\n\nVelvet. He touched the envelope in his pocket and let out a groan. Eulalie had run off so fast that he had forgotten about Abella's letter!\n\n\"Excuse me, I have to take care of something important.\" He looked up at the sky and grimaced. \"Will just take me a few minutes, then we can try to figure out what to do next.\"\n\nNaia shrugged, her whole body rippling. It was a familiar gesture that brought a small smile to his face.\n\nWhen he walked inside the house, he paused. When he had first come home, he had practically run through here without a second glance. Now that he had a moment, he could tell that this was definitely the version of the house that usually resided in the Underworld. Meant to be a placeholder for when the true house rested, this building was much smaller.\n\nThat made it easier to find Eulalie and Dana sitting in what was normally his room. The Arachne was sitting on the bed, her legs sprawled out around her. Her cheeks were flushed, and she stared helplessly at the floor.\n\n\"She isn't saying anything,\" Dana told him. Her face was shining with tears, but her features were placid, as if watching a boring video. He wondered if she was even aware of the tears. \"I don't know that she wants to talk to anyone right now.\"\n\n\"None of us have the luxury of time, but I'm the one who will be doing all the talking anyway.\" He walked over to the bed and sat next to Dana. \"Also, I wanted to tell you that when I go into the Underworld, you have to stay here. If something happens to Beth and me...\"\n\n\"I become the new Caretaker and inherit Lily.\" Dana's lip twitched, and then she smiled. \"Well, and everything else. But mostly Lily.\"\n\n\"Not if I can't find them.\"\n\n\"Oh. Right.\" Dana frowned.\n\n\"Do you mind if I speak with her alone for a minute?\" Mike glanced at the door. \"It won't be long, I promise.\"\n\n\"Call if you need me.\" Dana put a hand on one of Eulalie's glossy legs. The Arachne didn't react. With a nod to Mike, Dana left.\n\nMike sat next to Eulalie and let out a weary sigh. \"I'm not good at this,\" he began. \"I wish I had words of comfort or something other than the fact that I'm sorry. Did Dana tell you what happened?\"\n\nEulalie stared intently at the wall for several seconds before she nodded.\n\n\"She did.\" She looked at Mike. \"I...only remember parts of what she said. All I could think about was how I'm all alone now. My mother was the last of her kind until she had us, and now I am the last of my kind. It feels like the whole world is pressing against me and I can't breathe.\"\n\nMike swallowed the lump in his throat. \"I guess I can't speak to all of that. Your sister and I had something special. It was brief, but devastating. I almost lost myself in my own grief, and I want to make sure you don't do the same.\" He pulled the envelope from his pocket and handed it over. \"Abella wrote this. She was with Velvet at the end, and said it couldn't wait. I wanted to make sure you had it before I go after the others.\"\n\nEulalie took the envelope, but didn't open it. \"I was planning to come with you, but now I don't know. This will sound dumb, but up until you came back, this whole thing felt like a giant game. Now I realize it isn't.\"\n\nI wouldn't go that far, Mike thought, but kept that to himself. \"You should know that I loved your sister very much. Well, I think I did. I'm still not entirely sure how to define my feelings for her other than that, it's not something I've ever felt so intensely before. I know you feel like you're all alone, but...\" He reached over and took her by the hand. \"As long as you have us, you will only be alone as you want to be.\"\n\nTears shimmered in Eulalie's eyes, and she wiped them away. She squeezed Mike's hand, then held up the envelope. \"Do you mind staying while I read this? I'm not very good with strong emotions and wouldn't mind a friend.\"\n\n\"I can make a few minutes. I'm sorry I can't do more.\"\n\n\"Appreciated.\" Eulalie opened the envelope and scanned the letter. Her face was unreadable, and when she was finished, she folded the letter up and stuck it in her skirt pocket.\n\n\"Are you okay?\" he asked.\n\n\"There's a lot to think about.\" She gestured to his arm. \"Can I see that?\"\n\n\"I guess, but I'm not sure--\" he froze in place as she opened her mouth and sank her fangs into his forearm. His body hadn't warned him of an assault, so this had to be something else.\n\nThe pressure faded first, followed by the pain. The swelling in his fingers decreased as Eulalie drank his blood and he sighed in relief as he flexed his fingers.\n\n\"Did you just heal me?\" he asked when she pulled her mouth away.\n\n\"Hardly. I drained some of the excess blood and then gave you something for the pain. Your blood didn't taste very good. You should definitely see a doctor about that arm. My bite also has an anticoagulant, so that helped get your blood flowing again and you won't have to worry about clots. I thought I was going to help with whatever came next, but this is the best I can do for now.\" Her front legs spread wide and she reached under her skirt and pulled out a long silken thread. \"Take off that brace, I can make you something better. I'm not a doctor, but you definitely shouldn't be using that arm for anything.\"\n\n\"Yes, ma'am.\"\n\nHe waited while she dismantled the makeshift brace and then wrapped his arm in spider silk. She applied it to his arm like a compression bandage, and he could actually make a fist now with that hand. It was fascinating to watch her weave the accompanying sling, and he thanked her as she placed the final loop over his neck.\n\n\"I have to go home,\" she replied. \"There are some things I need to see to right away. Try to make sure you're still alive when I return.\"\n\n\"I'll do my best.\" He stood and walked toward the door. \"And again...I'm really sorry.\"\n\n\"I know.\" She stood and gestured to the door. \"The others are waiting for you.\"\n\n\"They are. Now if only I knew what to do next.\" He chuckled. \"I wanted to speak with you before I left, but I'm not certain how to go about leaving.\"\n\n\"I thought you just needed to go to the Underworld? Through the gate?\"\n\nMike sighed. \"It's disconnected. This place is a copy of the real one, which gets locked away until a new Caretaker inherits the place and summons it. I thought I could open it by using magic, but it didn't work.\"\n\n\"How did you summon the house the first time? Can't you just do that?\"\n\n\"I...\" His jaw flexed as his thoughts turned to Naia. She had appeared in his bathtub and fucked him, using her magic to bond him to the house. She was the guardian of the house, linked to the entity that controlled it, and the first woman to capture his heart. \"I suppose I can.\"\n\n\"Then go do it.\" She reached into her pocket and pulled out the dog tags and threw them to him. \"And take these.\"\n\nHe caught the dog tags. \"I don't understand. I thought you would want them.\"\n\n\"Oh, I do.\" She smiled sadly, a single tear sliding down her face. \"Consider them on loan, for luck. I want them back.\"\n\n\"Thank you.\" He slid them around his neck, the cool metal resting against his skin. \"If you'll excuse me, I need to do one of the two things I'm well known for.\"\n\nEulalie nodded. \"Sounds like you're getting lucky either way.\"\n\nOutside the room, he ran past a small group of rats that were waiting out in the hallway, then slid down the railing of the stairs. Now on the landing, he hopped down, feeling a distant ache in his arm on impact.\n\nOut back, everyone was just standing around talking. Despite the stormy weather overhead, which he assumed was related to the horsemen, they seemed calm. It may as well have been a regular day with a storm blowing in, rather than the end of the world.\n\nMaybe it was optimism, or just a delusion, but he wondered if they were calm because they believed in him. No matter what trouble blew their way, he could be relied on to handle it. And if he couldn't do it alone, they were there to help.\n\nPower hummed through the core of his body, and his magic came alive and spread out, sending sparks along his legs and into the ground. Gone was the destructive force that had powered it in Oregon. Instead, his magic briefly touched everyone as if making sure they were there, and his senses expanded to take in the scene. Different magic flowed through everyone, creating a kaleidoscope of colors in his backyard. Suly's was a ghastly hue of green that looked like mist, while Ratu's was red and black like lava. Amymone's magic flowed into the ground and spread out like roots, touching all of the plants in the yard.\n\nAnd then there was Naia. Her magic flowed into the ground, deep beneath where her spring lay. In the center of her body was a core made of blinding light that spun like a tiny star.\n\nNaia smiled at him and stuck her chest out as he vaulted the edge of the fountain and grabbed her around the waist with his good arm.\n\n\"Hello, lover.\" Her voice was a purr as his magic danced along the water in the fountain. \"This is a surprise.\"\n\n\"I need you to connect me with the house, like you did before.\" His magic unfurled around him, and he heard Ratu scrambling away with Asterion's help. \"Like on that first day. But mainly with the back yard. I need the gate to properly reappear so I can open it.\"\n\nShe cocked her head and laughed. \"I guess we can try. I'm not certain what will happen, though.\" She moved in close, her breath cool against his neck. \"We also have quite the audience,\" she whispered.\n\n\"It's fine. Apparently everyone has seen my butthole already.\" He pressed his lips to her, his magic causing the fountain to swell and overflow. The wind shifted upward, sending a spray of water toward the storm clouds up above. As her tongue wrestled with his, her magic seeped up his legs and into his groin. His cock was rock hard now, and she teased it through his pants.\n\n\"Anyone who isn't interested in getting seriously horny should head inside right now.\" Ratu spoke from the back door, a quirky grin on her face. \"It's about to get really wet out here.\"\n\nEveryone else ran for the door, except for Amymone, who couldn't.\n\n\"Eh. Trees like rain anyway.\" She licked her lips hungrily. \"I just hope you're ready to share.\"\n\nNaia broke the kiss and smirked at her sister. \"I suppose I can make room for my sister. We're gonna need some serious--OH!\" The water beneath her rushed up and swirled around her body, obeying Mike's whims. He mentally commanded the water to move up her legs and tease her Nymph's Pearl, causing her to gasp in pleasure.\n\n\"Looks like lover boy has learned some new tricks. But just to play Devil's advocate, is now the time for this?\" The dryad put her hands on her hips and cocked them outward. \"I thought you were going to the Underworld?\"\n\nMike turned his attention to Amymone and beckoned her toward them with a crooked finger. \"Yes,\" he replied, answering both her questions.\n\n\"Hey, say no more.\" She hopped into the fountain, the leaves of her skirt floating on the surface of the water. \"I'm sure I'll figure it out later.\"\n\nAmymone pressed her hips into Mike from behind, as if steadying him. Strong hands moved around his body and settled on his crotch, stroking him through the fabric of his pants.\n\nThere was a temporary pang of guilt as he thought of Velvet. Though her loss was still fresh in his mind, he was about to have sex with at least one of the women here, if not both.\n\nHe closed his eyes and let Naia and Amymone attend to him, the sensations of their hands and mouths on his body flowing through his very soul. Naia kissed him on the mouth as Amymone sucked on his neck, her hands pushing aside his clothes. If not for the fact that he had planted his grief in the forests of Oregon, there was no way he would even be able to function right now.\n\n\"Lover, are you okay?\" Naia's voice was full of concern. She and Amymone stopped what they were doing, and he let out a sigh.\n\n\"No.\" When he opened his eyes, he was staring into the beautiful azure depths of Naia's eyes. There was nothing but love and light for him in the windows to her soul, and he gratefully submerged himself in their calming waters. \"But I will be.\"\n\nShe kissed him again, her lips aggressive against his. Amymone had pushed his shirt up, and he could feel her long fingers sliding beneath the waist-band of his pants and teasing the delicate skin of his cock.\n\nHe hardened at her touch, and the air around them became thick with magic.\n\n\"Holy shit,\" Amymone muttered, sounding breathless. \"This feels way different from last time. Is it...bigger?\"\n\n\"Might be.\" Naia caressed Mike's cheek as her dress melted away, revealing her bare breasts. \"He's a different man now. But he's still very much our Caretaker.\"\n\nHe and Naia continued kissing, his hands exploring her body as Amymone pulled down his pants and started sucking on his cock. The fountain sprayed water into the air that hovered in place in the shape of a dome around them. Above, the stormy weather rolled in and threatened them with thunder that sounded like distant explosions.\n\n\"I don't think we have much time,\" he told the women after breaking his kiss with Naia. \"I need to get that gate open.\"\n\nNaia nodded, then knelt down by her sister. The two of them tag-teamed his cock, and the hovering drops of water sizzled as his magic leapt between them. Through one of the windows of the house, he noticed Suly's face pressed against the glass.\n\nThe dullahan gave him a smile and a double-thumbs up. Mike looked away, afraid to see who else was watching him.\n\nAmymone got on her hands and knees as Naia sat on her back, her legs wrapping around Mike's waist to pull him in. When the head of his cock brushed against her labia, a jolt passed between them that had both of them gasping for air.\n\n\"Even I felt that.\" Amymone's dress split apart, revealing her bare behind, She was fingering herself as the sparks from their bodies fell into the fountain and gathered around her legs. \"Oh, gods, it feels like I'm wired directly to a leyline or something.\"\n\n\"We'll teach you how to control the intensity of your magic later,\" Naia told him. \"But for now, I just want you to fuck--ME!\"\n\nMike slid into her before she was done speaking. Her vaginal walls were swirling around his shaft, but his magic encountered her own and it spiraled outward in a devastating combination. The overflowing water in the fountain consolidated into giant spheres that hovered around them, scattering purple energy that turned into streamers of light.\n\nNaia howled in pleasure, her eyes glowing from within as Mike fucked her with abandon. Beneath them, Amymone cried out her own pleasure as the magic in the water attempted to move through her to get up to her sister. Tiny flowers blossomed along her skin, making her look like a living wreath.\n\nOh, lover. Naia's voice was in the water now. What am I going to do with you?\n\nHe couldn't respond. Her magic was now beating inside his chest, and whenever he pressed his throbbing shaft to its maximum length inside of her, it almost felt like they were merging. Her magic and his own weren't so different, and the feedback loop had already soaked the backyard in water and magic. The grass and flowers around the fountain leaned toward them as if bowing in reverence, and even Amymone's tree creaked as it tried to move closer by bending.\n\nMike babbled incoherently as the magic filled him with light. That burning desire to come and fill Naia with his seed had consumed his thoughts, placing him in a mindless state of bliss. Here there was no pain, no fear, no grief.\n\nOnly Naia.\n\nThat's right, lover, it's just me. Always me.\n\nHe saw glimpses of her now, moments they had shared in the tub and the fountain. Memories of kissing with their limbs tangled as they fought to discover pleasurable new positions. The times he had bathed with her and Tink, that time he had tried to start a water fight with her and gotten blasted out of the fountain, all of the moments when he had stared into her eyes as she came for him over, and over, and over...",
        "The memories broke, and Mike was floating in a field of stars. Glittering light flowed like water, and he saw Naia across from him, his hands in hers. The runes on her torso blazed with an intensity that was painful to look at as they shifted around beneath his gaze.\n\n\"Your magic is all over the place, lover.\" She grabbed his face with her hands and pulled him close. Nebulous clouds of red and purple floated ominously in the distance as if watching them. \"Let's see if we can't set you right again.\"\n\nAnd when she pressed herself into him, he felt their souls mix and spin. It was new, yet familiar, and the distant clouds broke apart into stars that doubled in number the ones he could already see. Each one sparkled as if polished anew, and his soul filled with light.\n\nMike arched his back as he groaned, then came hard inside of Naia. A magical wave of light radiated outward, scattering the levitating water droplets. The resulting spray soaked everything around them as it was carried along by both his magic and Naia's. The swirling core in the center of Naia's body unleashed a beam of light in the direction of the wrought-iron gate. It glowed briefly, then faded back to normal.\n\nThe ground around the fountain vibrated as he caught his breath, his limp body being squeezed between Naia's legs as she held him close against her skin. Below them, Amymone was gasping for air, her arms shaking.\n\n\"That was hot and all,\" Amymone said, breaking the silence. \"But after that orgasm, I'm tired of being your furniture.\"\n\n\"You have the personality for it.\" Naia laughed as she slapped her sister on the ass, causing Amymone to squawk. \"Maybe I'll have Mike polish you later.\"\n\n\"Holy shit,\" Mike muttered, gasping for air. His heart pounded as he slid out of Naia and fell into the remaining water of the fountain. Amymone stood, causing Naia to tumble over and transform back into water on impact with the ground.\n\n\"Here, let me help.\" The dryad pulled Mike to his feet and helped him to the edge of the fountain. He thanked her and got out, his legs shaking beneath him. \"Do you think it worked?\" she asked as Naia reformed behind her.\n\n\"I really hope so.\"\n\nHe walked toward the edge of his yard as the others came out of the house behind him. Up above, the clouds were building up into a massive thunderhead, one that Quetzalli would have been proud to spend hours detailing to him.\n\nOnce at the gate, he touched the bars again and stared through them, willing the land beyond to change.\n\nHis senses expanded once again, but this time, he felt the magic wrap itself around the stone fence as the forest beyond filled with fog. A shape moved among the trees, and the three-headed human form of Cerberus emerged.\n\n\"You are back,\" they said, each of them looking hesitantly out into the fog. \"Things are wrong in here.\"\n\n\"How so?\" he asked as he pulled open the door.\n\n\"The gate was gone,\" they told him as they walked forward and pressed against his body. He could hear them inhaling his scent, and then a triple sigh of contentment followed. \"The demons were chased away. It has been too quiet.\"\n\nAs he held them, he felt a presence deep in the fog of the Underworld. It was a sensation similar to waking up to an imaginary sound, or thinking someone had called his name. When he concentrated on it, he had no doubts that it was the house he was feeling. His magic practically sang now, his whole body vibrating in anticipation.\n\nEven though it was some distance away, he could feel the house approaching. Up above, the gloomy skies of the Underworld had become stormy like the clouds over his house. The horsemen were coming, and it was time to stop them. If they managed to make it back to Earth, it was game over.\n\n\"Well?\" Yuki stood behind him now, her face serious.\n\n\"I can feel it,\" he replied, then pointed. Asterion and Sulyvahn appeared, the latter astride his dark horse. The dullahan's spinal-column whip was coiled up in his hands and Asterion's axe was strapped to his back. They all looked at each other, and Mike nodded. \"It's time to go.\"\n\nCerberus transformed back into their animal form and both Mike and Yuki mounted her. Mike used his fingers to blow a piercing whistle. He wasn't certain where the mace had been hiding, but it shot toward him from over the roof and landed in his outstretched hand.\n\n\"We need to stick together,\" he told the others. \"This place is dangerous.\"\n\n\"I've got this 'un's back,\" Sulyvahn replied, then patted Asterion's shoulder. \"Ye just need to lead the way to our girl. Don't wait on us.\"\n\n\"Will do.\" He stared into the mists and scowled at the dark shapes that flitted within them. Anything that tried to stop them was about to have a very bad day.\n\n\"Wait!\" Ratu stood at the gate with a scowl. \"Don't forget this!\"\n\nShe held up Harpe, which had been wrapped in a thick blanket. Mike took it from her, then contemplated the blade. He couldn't use it, and nobody else seemed that interested in it.\n\n\"Suly? Can you carry that?\" he asked.\n\n\"Don't know that I'm much fer the sword,\" Suly grumbled in reply.\n\n\"I'm out of hands is all. Maybe someone at the house can use it?\"\n\nSuly laughed so hard that the seam in his neck spilled black smoke. \"Oh, I be likin' that plan, I do!\" He grabbed the blade with his free hand and tucked it under his arm. \"I'll try not teh fall on it.\"\n\nMike nodded, then looked over at Yuki. She was clutching Cerberus' fur tightly in her fists.\n\n\"Ready to be my weapon?\" he asked her.\n\n\"Fuck yeah,\" she responded with a grin that showed all her teeth. Her features became feral, her face elongating slightly as Cerberus dashed forward into the fog.\n\nTogether, the group disappeared into the mist.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\n\"Well?\" Beth stepped back from Opal, a roll of duct tape in one hand and a pair of scissors in the other.\n\n\"That still doesn't look right.\" Reggie stroked his chin as he contemplated Opal's jiggling body. The slime stood in the living room wearing a pair of leggings and boots. The boots had been duct-taped to the leggings to keep them from sliding free when Opal took a step.\n\n\"I'm doing my best here.\" Beth frowned at Opal's legs. They unwound a bunch of metal hangers and bundled them together to make a skeletal structure for Opal's body to adhere to. However, her feet kept popping out of the boots whenever she walked, so Beth had improvised.\n\n\"C'mon, like this.\" Lily was leaning off the back of the couch, her face inches from Opal's. She wore Beth's face, only patches of it were translucent like Opal's. \"You need to set that bottom layer, otherwise you look like a porcelain doll.\"\n\nOpal's face rippled as one layer turned pink while the other turned white. Lily had been using Opal's color shifting to replicate Beth's skin tone.\n\n\"Good, now harden that outer layer.\" Lily held up Beth's makeup palette. \"Now are we thinking some fall colors, or full blown whore?\"\n\nOpal gave Lily the finger.\n\n\"They're being weird again.\" Kisa was keeping watch through the front window.\n\nLily groaned in exasperation and held the palette against her chest. \"Is it a circle jerk?\" she asked.\n\nKisa snorted. \"Nah, they're spreading out and looking into the fog.\"\n\n\"I really could have used five more minutes.\" Lily pulled a pair of sunglasses out of her cleavage and stuck them to Opal's face. \"You're the kind of girl who is hot, but only from a distance.\"\n\n\"That's still my face,\" Beth protested.\n\n\"I've always liked you better from behind.\" Lily winked. \"You pack ass like a goddess. A couple hundred years ago, your butt would have had its own religion.\"\n\nBeth's cheeks felt hot as she took a step away from Opal. The slime's butt looked fantastic in leggings, though she was wearing three pairs. One pair by themselves had been too porous, causing Opal to ooze outward. Luckily, Opal's control of her upper body was much better, meaning she was able to wear a shirt and sweater combo.\n\n\"Uh...\" Kisa pressed her face against the window and turned it sideways. \"Those fuckers are up to something. They're at the sides of the house now. The fog out there looks like it may be thinning.\"\n\n\"Then we might be out of time.\" Beth pulled Opal's sweater down. On close inspection, it was clear that Opal was not human at all. However, she was betting on the fact that the horsemen would be out for blood and would kill first, ask questions later.\n\n\"So run this by me again?\" Lily turned into Beth, only her butt was unusually large. \"Because I'm still not sure how I don't get blasted into dust.\"\n\n\"They don't know that Opal is still with us.\" Beth picked up a book they had drastically altered to look like the Grimoire and handed it to Lily. \"Her shape shifting capabilities are an unknown quantity. So when they see two of me, they will assume one of them is you.\"\n\n\"But one of them is me.\" Lily pouted.\n\n\"Right. They know you can't hurt Murray or the angel, so you aren't a threat. So one of you two must be me, and therefore both of you will be taken out with extreme prejudice. But Mehkhkahrel's busy holding Death down with those blasts. If Murray, or Neferisfet, or whatever the fuck they're calling themselves doesn't want an ass-beating, they can't call off the angel to disintegrate you.\"\n\n\"I hate this plan.\"\n\n\"You don't have to like it.\" Beth slapped Lily's ass, causing it to pop into her normal shape. She handed another fake Grimoire to Opal. \"You can handle a stabbing or two, but I can't.\"\n\nLily rolled her eyes. \"Size queen here is worried about being stabbed,\" she muttered under her breath.\n\n\"Look, you two will be a diversion, and I will blast the fucker with the Grimoire.\" She had dug through so many spells until she had found one that was intended to disrupt dimensional shifts. It took almost twenty seconds to cast, and that was if she didn't screw up the pronunciations. \"If the book is right, this place will become dimensionally locked for at least a few hours, which should buy Mike more time.\"\n\n\"Romeo better come through,\" Lily said, licking her lips. \"If he does, I'm gonna blow him until he can't see straight.\"\n\n\"You and me both,\" Kisa added, then flushed. \"I...didn't mean to say that out loud.\"\n\n\"Ah, it's okay, kitten.\" Lily moved next to Kisa and stroked her cheek with the back of a finger. \"We could make it a team effort. Do that thing where our tongues run across each other, it'll be hot.\"\n\nBeth cleared her throat. \"If you are done distracting everyone, we should get to it. Opal, you ready?\"\n\nThe slime held up a thumb, then stumbled forward. Beth caught her and held her up.\n\n\"Kisa, grab Tick Tock.\"\n\n\"On it.\" She picked up the mimic and slung it over her shoulders. Beth walked behind her and stuffed the duct-tape and scissors into the bag. She doubted she would need them, but if she was walking into the end of the world, she wanted access to duct-tape.\n\nBesides, it wasn't the only weird thing she had tossed into Tick Tock for their fight. She didn't know if the mimic minded the eclectic mix of objects she had fed him, but it was hard to know what they might end up needing.\n\n\"Reggie, you're our backup for when everything goes wrong.\"\n\n\"I know my role.\" The rat king bowed his head. \"I genuinely hope that my services are not needed.\"\n\n\"I know.\" She patted Reggie on the head, then picked up Jenny who stood nearby. \"And you've got my back?\n\nJenny giggled. Your packed ass is protected.\n\nBeth frowned, but knew better than to state how much she disliked that term. \"All right, so let's do this. Plugs and places!\"\n\nAs one, everyone but Opal stuffed cotton plugs into their ears. Kisa stood by the door, her hand on the latch. Reggie moved to the window and picked up a pair of binoculars. Lily stood at the door, followed by Opal.\n\n\"I would like to go on record--\" Lily began.\n\n\"Noted.\" Beth nodded at Kisa, who opened the door.\n\nThe hideous shrieking was diminished by the cotton, and Lily burst out of the house first, holding up the Grimoire. She pointed at Murray dramatically and started shouting.\n\n\"There once was a man from Nantuck--\" Lily was cut off when War threw his sword, spearing her though the side and sending her sprawling across the ground.\n\nOpal got further into the yard, her whole body wobbling dramatically. Pestilence flew through the air in an attempt to keep up.\n\nBeth crouched down and walked along the deck until she had a good view of Murray. Opening the Grimoire, she began reading the incantation, feeling her entire body knot up in pain. The foreign magic she summoned coated her like glue, then spread outward along the ground. Unseen by Murray, it honed in on him and latched onto whatever magic he was using to move them back to Earth. Her magic sniffed out the boundaries of Murray's spell and sank into place.\n\n\"Aargh!\" Lily squirted blood dramatically while holding her stomach. War strolled casually over, a shit-eating grin on his serpentine face.\n\n\"That was stupid,\" he told her once he was close. Over his shoulder, Pestilence had gotten a hold of Opal and carried her up into the air. Opal's body stretched dramatically, but the slime held it together as they disappeared into the mist.\n\nDoing her best to ignore the others, Beth continued the recitation. The hair on her arms stood on end as she summoned primal forces that would lock the house in one location.\n\n\"Dumb bitch.\" War pulled his sword out of Lily, then picked her up. \"I've been looking forward to this.\"\n\n\"Me, too.\" Lily's eyes lit up and her tail appeared. It darted forward and buried itself in War's eye.\n\nThe horseman let out a scream as he tried to push Lily away from him. She held on tight, her tail withdrawing and stabbing again. War turned his face away, sparing his remaining eye, then slammed Lily into the ground. The succubus let out a grunt of pain, and then cried out when War smashed her into the ground.\n\n\"Shit!\" He gave her a kick, which sent her sliding across the ground. She tumbled dramatically, transforming back into her usual form. When she tried to stand, Famine stepped from the gloom and smashed her in the face with his heavy scales. Moments later, Opal fell out of the sky and exploded on impact with the ground. The sound was akin to a bag of soup striking concrete.\n\nBeth finished the chant, and the ground lurched beneath her. The whole house creaked and groaned overhead and everyone but Murray fell to the ground. Death slid out of the angel's golden beam, and was almost to his feet before the light came crashing down on him again.\n\nMurray's face twisted into a mask of anger as he dropped his attention to the house. Spotting Beth, he lifted a hand and pointed at her.\n\n\"She's there!\"\n\nBeth slammed the Grimoire shut and tossed it to the side where Kisa waited. The catgirl slid the book into Tick Tock as Beth went running sideways along the front porch. She felt powerful magic swirling in her hands as she chanted a series of words that condensed the air around her into a hot ball of energy.\n\nPestilence appeared from above, their body surrounded by black insects that swirled around them.\n\n\"Fireball, motherfucker!\" Beth hurled the energy, willing it to ignite. The ball of fire caught Pestilence by surprise, and they fell onto the ground and rolled back and forth to smother the flames.\n\nWar smashed through the lattice of the porch, his sword left behind. He was almost upon her when Beth pulled Jenny out of her hiding place inside her sweater and threw her.\n\nPLAY WITH ME!\n\nJenny smacked War in the face, causing him to backpedal in terror. He swatted the doll away, but she hovered in mid-air, a sickly aura surrounding her body as wooden planks and siding ripped free of the ground and smashed into the horseman.\n\nDistracted, War didn't notice Kisa come from behind and unleash Tick Tock. Bladed arms slashed into War's legs, toppling him.\n\nA void formed in Beth's gut and she clutched her belly in agony. A thick hand grabbed her by the hair and pulled her over the edge of the railing and onto the ground.\n\n\"You like that?\" Famine asked. \"That's what true hunger feels like. It isn't when you just miss a snack or a meal. We're talking days on end, a sensation that consumes your every thought.\"\n\nKisa came running up behind Famine, the scissors in her hand. Famine stepped aside at the last second and brought his hand down on the back of her head. Kisa let out a yowl as she hit the ground and went still.\n\nTick Tock sprouted metal legs, causing Famine to step away from Kisa. The mimic carried her away as Famine grabbed Beth by the collar and tossed her toward Murray.\n\n\"You have only delayed the inevitable.\" Murray shook his head. \"I'm not sure what is sadder. The fact that you could have been my vessel, or the fact that mankind will never know you bought them an additional two hours of peace.\"\n\n\"I liked it better when you were a table,\" Beth said, then summoned another fireball and threw it.\n\nThe blast caught Murray in the face, scorching skin and hair. He cried out in pain, and Mehkhkahrel stopped blasting Death and turned its attention toward Beth.\n\n\"YE HAVE BEEN JUDGED,\" it declared, then lit up with golden fire.\n\n\"No!\" Murray stepped between Beth and the angel. \"Keep him down!\"\n\nDeath was already on his feet, his dark cloak forming around him as he dashed toward Murray. Less than ten feet away, the Grim Reaper was blasted into the ground.\n\n\"That was close,\" Famine declared. Behind him, Pestilence rose from the ground, their hazmat suit covered in soot.\n\n\"Die! Die! Die!\" War had grabbed onto Jenny and was busy smashing her into the ground with his foot. He stuck his hand out and his sword flew through the air and into his palm with a meaty thwack. Raising the blade high, tip pointed down, he laughed in glee.\n\nReggie bolted out of the door and climbed up the horseman's leg from behind. He disappeared under the loincloth and War dropped the sword, barely missing Jenny, then clutched his groin.\n\nAs War yelled in agony, Reggie fell to the ground and scrambled to retrieve Jenny. He disappeared between the splintered boards of the porch, dragging the doll to safety.\n\n\"I am so tired of this fucking house!\" War declared, then lifted his sword and slammed it into the siding. His blade splintered the siding, but did little damage otherwise.\n\n\"Soon, brother.\" Famine grabbed Beth from behind and pulled the cotton from her ears before pushing her to the ground. That gnawing pain filled her again as the strength was leached from her body. \"Time to die, little girl.\"\n\n\"Wait!\" Murray put out a hand and landed on the ground. \"Don't kill her yet.\"\n\n\"Why?\" War had stepped off of the porch, dragging his sword behind him. \"We don't need her. And don't you dare tell me you want her to watch as the end of the world comes. That's fucking amateur hour bullshit.\"\n\n\"It isn't that.\" Murray's eyes gleamed as he knelt down to scoop up some soil. He licked it with an abnormally long tongue. \"Oh, you are a clever one.\"\n\nBeth groaned. She had figured out long ago that they were in a pocket dimension, and the spell she had chosen didn't just anchor the house in place. It anchored the house and the land around them to her very soul. If she died, there was a good chance that the horsemen would be cast into the Underworld, or wherever she was destined to go. The Grimoire hadn't been clear on what would happen, but the spell had explicitly warned about the dangers of tethering a location to a living being and then slaying it.\n\n\"If you kill her, it will be days before we return, if not weeks.\" Murray's eyes narrowed until they became angry slits. \"It can be undone in hours while she lives, so don't harm her.\"\n\n\"Can we kill the others?\" War glared at Lily with his remaining eye. \"The human is off-limits, but what about that demonic bitch?\"\n\nLily spread her wings and took to the sky, only to be tackled by Pestilence. She fought back, slashing with dagger-like nails, but Pestilence didn't seem to care.",
        "\"The human lives until I say otherwise. The others belong to you.\" Murray's jaw unhinged and he lifted into the air to sing his song of damnation once more.\n\nPain wracked Beth's body as she felt the spell she had cast being undone. The scream seemed to worm its way through her bones, vibrating her whole body.\n\nThe horsemen held a debate that she couldn't hear, and then War started shouting at Mehkhkahrel.\n\n\"Stop smiting him!\" He yelled, holding his hands to his mouth. \"Hey! Stop for a moment! We need you to do something else!\"\n\nMehkhkahrel ignored them as Murray continued to scream. War waved his hands in frustration, but Beth couldn't follow what was being said. Between Murray's spell and Famine's magical hunger, she couldn't concentrate on anything other than breathing. Pestilence and Lily were trapped in a wrestling match where neither had the upper hand.\n\nEvery minute that passed felt like an hour. Beth felt the breath ripped from her as Murray finally undid her spell. The ground rumbled violently and Famine finally released her, tossing her to the ground.\n\n\"Hey, we need to borrow your angel for a second,\" Famine yelled at Murray. \"To smite the demon over there.\"\n\nMurray's eyes barely registered recognition as his scream took on a different pitch. However, Mehkhkahrel stopped blasting Death, allowing War to lift his sword and shove it down through his brother's rib cage. This pinned him to the ground, and the fire in Death's eyes blazed hot.\n\n\"I have decided that I am adopted,\" he declared loudly.\n\n\"Nobody cares, you skinny little shit,\" War replied.\n\nBeth struggled to her feet, but Murray's eerie shriek had her so dizzy now that she was dry heaving. She raised her hand and tried to summon another ball of fire to assist Lily, but was pushed from behind by Famine.\n\n\"You bit off more than you could chew,\" Famine told her. \"Made a pretty big show at the end. But now you're going to pay for it. When we get back, I'm going to hunt down anyone you've ever loved and personally devour them.\"\n\n\"You're free to smite the others, now,\" War said, his missing eye swollen shut. He pointed at Lily. \"Start with that bitch.\"\n\nLily fought even harder, but Pestilence was unaffected by her efforts. The angel's eyes blinked out of order, as if malfunctioning.\n\n\"Fucker is all messed up now,\" War muttered. \"Hey! Mehkhkahrel! That's a succubus right over there, she's a demon! Angels smite demons!\"\n\nThe angel didn't move. Instead, it shifted, as if reality warped around it. It's baleful center eye was now looking at Lily, who crumpled under its golden gaze.\n\n\"DEMON SPAWN,\" it declared, and the air around it shifted. \"YE HAVE BEEN JUDGED.\"\n\n\"Suck my dick!\" Lily cried, smoke rising from her body. She cried out in agony as sparkling lights danced around her, like sadistic fireflies.\n\nWhen the beam of light burst from Mehkhkahrel, Beth closed her eyes and screamed. Hot liquid sprayed across her body and she fell to the ground in shock. When she opened her eyes, she saw that she was covered in Opal's blue slime.\n\nOpal, or what was left of her, lay melted on top of Lily. The crystalline decanter lay on its side, slowly dripping ooze onto the ground.\n\nMurray stopped screaming and looked down at himself in shock. Not only was he coated in Opal's remains, but it had been sprayed everywhere. Bits of the slime girl had sprayed across the three horsemen, as well as Mehkhkahrel.\n\n\"YE HAVE BEEN...YE HAVE BEEN...\" Golden light sparked across the Mehkhkahrel's wings, and then it fired a beam of light into Pestilence. The whirling mass twisted aimlessly, the eyes blinking rapidly and out of sync. A sound like static filled the air as the angel spoke over itself.\n\nPestilence raised their hands in defence and then exploded into a cloud of angry insects that dispersed into the gloom. Ashes drifted across the ground.\n\n\"What the hell?\" War covered his head and managed to narrowly avoid a random blast of light.\n\n\"He attacked the wrong person!\" Murray held up the dick of Osiris and summoned a magical shield just in time to block an attack. \"That girl didn't attack me or him, so it violated its own protocols! My control is slipping!\"\n\nMehkhkahrel let out a scream that caused Murray and the horsemen to stumble and fall. The mists around the house curled inward like fingers and scratched at the exterior, taking away paint and wood. Beth was lying flat on the ground now, terrified of what the mist would do if it touched her.\n\nMurray sent a green beam of light into Mehkhkahrel's core, sweat beading up on his brow. Mehkhkahrel's wings stopped spinning as it let out a groan that sounded like fatigued metal.\n\nThere was a flash of light, and then everyone standing was knocked off their feet. Up above, the angel's wings started to char around the edges and turn black.\n\n\"No, no, no!\" Murray held up his hands and tried to bind Mehkhkahrel once again.\n\n\"ENOUGH!\" Mehkhkahrel's voice felt like a bomb inside of Beth's gut, and she curled into the fetal position. The air filled with an ominous ticking noise that she realized was coming from the angel above. It stared down with angry eyes, and she saw that several of them were looking right at her. One by one, their gaze turned toward Lily, who lay smoldering on the ground.\n\n\"Fuck you,\" Lily whispered, then grabbed Opal's vessel and flung it far away from her own body to protect it from the coming blast.\n\n\"HELLSPAWN.\" Energy crackled around Mehkhkahrel's wings as it prepared to smite the succubus. \"I SMITE THEE IN HIS GLORIOUS NAME.\"\n\nLily shrieked defiantly at the angel, but then stopped, her jaw dropping in surprise.\n\nWhen the beam of light burst forth from Mehkhkahrel, Lily vanished in a cloud of smoke just before it reached her. The beam scoured the ground, sending molten rock through the air as it tried to find her.\n\nThe mists swirled around the house, then coiled upward as if being pushed from below. A dark figure approached through the gloom, blue eyes glowing with an intensity that made Beth squint.\n\nThe mists parted, revealing a male figure with his arm in a sling. It was Mike, and he glared angrily at the angel above. An aura of blue and green light surrounded him, pushing the mists away from where he stood and radiating outward through the ground. Where he walked, grass and tiny blue flowers burst through the sterile soil and she could feel the ground beneath her beating like a drum.\n\n\"Are you the one who took my house?\" He sounded calm, but there was a dangerous edge to his voice that made Beth think of a sheathed blade. \"The one who hurt my family? The one who just tried to kill my Lily?\"\n\n\"BE NOT AFRAID.\" Mehkhkahrel's voice flattened Beth into the ground so hard that she couldn't breathe. Her hair whipped around her head as if she was caught in a storm. Nearby, she heard Murray cry out in rage as he, too, was flattened. Whatever malfunction the angel was experiencing had either scrambled its circuits completely or pissed it off.\n\nThe wave of force that burst forth from the angel traveled across the ground and washed over Mike. He barely flinched, his face twisting into an angry mask as he lifted his good arm and pointed at Mehkhkahrel.\n\n\"Cerberus.\" Mike's voice thrummed with power, and Beth watched in awe as three pairs of blazing red lights formed just above and behind him as the hell hound stepped out of the mists. Their teeth were bared and hackles raised as each head growled in a different tone, filling the air with a malevolent melody.\n\nMike twisted his hand around to make a gun out of it with two fingers for the barrel. When he parted his lips to speak, his teeth were pressed tightly together in barely suppressed rage. \"Fetch.\"\n\nWith a triple howl, Cerberus bounded forward and tackled Mehkhkahrel out of the sky. Feathers scattered everywhere as the powerful force crushing Beth suddenly vanished and she was able to rise. Mehkhkahrel and Cerberus tumbled out of sight into the mist, but the air filled with blasts of light and fire as the two battled in the fog.\n\n\"Caretaker!\" Murray hissed in surprise as he held up his magical dick like a protective talisman. \"How are you here?\"\n\nMike didn't answer. Instead, Lily stepped from behind him, her tail wrapping coyly around Mike's torso, the stinger resting gently against his neck.\n\n\"Daddy's home,\" she announced with glee. \"And he is pissed.\" She planted a kiss on his cheek and then disappeared in a puff of smoke.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nMike is finally home. It's time to take out the trash.\n\nNext chapter will be the conclusion of Book Five (but not the whole series), so buckle up as the house comes together to put the hurt on the Apocalypse!\n\nI couldn't be here without you all. Thank you so much for reading my story, and I will see you soon. Don't forget to leave me some stars on your way out, and I will keep working hard to write the story you all deserve.\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monstergirl harem",
        "homecoming",
        "sex magic",
        "biblical",
        "the apocalypse",
        "ballroom blitz",
        "fighting the angel",
        "grief and loss",
        "threesome where one girl is a table",
        "ye have been judged"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-77"
}