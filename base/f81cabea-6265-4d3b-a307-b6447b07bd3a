{
    "title": "Gillian Anderson: Skintight Shoot",
    "pages": [
        "This story is entirely fictional and is in no way connected with the subject. This story contains adult material and is only suitable for people over the age of 18. If you are under 18 please stop reading now. All characters appearing in this work are fictitious. Any resemblance to real persons, living, dead, or undead, is purely coincidental. All characters portrayed in this story are over 18. Do not use this without my permission. (c) Copyright Viper_Noj 2002 onwards. Now, on with the story!\n\n______________________\n\nGillian Anderson sat by lamplight in her front room, a chick flick, and drinking a favourite wine of hers, red naturally. She'd already polished off a bottle and opened another, sipping the end of her first glass from it. She liked a good drink now and then, and since she was feeling a bit down she figured why not now. The problem was men, or rather the lack of them. Well&hellip;that wasn't strictly true. It was the lack of a specific man, someone who wanted her for who she was, not who they thought she was. She had plenty of men come onto her, all hoping to try their luck, and sure some of them were hot but too many of them were far too aware of it and seemed to think she'd just bend over for them, which wasn't the way.<br/> <br/> She enjoyed casual sex now and then, and her looks and fame had helped her indulge that and live a full and adventurous sex life, however right now she wanted more of a keeper, or at least someone that would take her, Gillian Anderson to bed, and not go to bed with some image of Agent Scully as a personal play thing, breaking past the business suit as it were. She gave a sigh, reading through a magazine as she sipped at her red wine.\n\n\"I hate being single,\" she said aloud, despite being alone. She knew she could be enjoying a romp, with some young stud too, however she just didn't want to. They either didn't know who she was really, unaware of how big she'd been when on the X-files, which was something she did get off on she had to admit, or they did know and wanted to fuck Scully, not her. Gillian read through the magazine, all the various articles, interviews, fashion, problem pages and stuff about the newest sex toys out, which caught her eye briefly, though she was happy with the ones she had already. She reached the adverts, which took up around half of the magazine like every other these days. Unlike most people who closed it and wondered where most of their money went, she kept reading through it, picking up on a small advert hidden away under modelling.\n\n\"Wanted: Female model for student photography project. Ideally slim but, anyone considered.\"\n\nIt was very vague, and seemed very low-key as well, as stated something for a course with little money involved. All about the artistic merit as it were. She pondered for a moment, tempted by it, even though it was just someone using her for what she looked like, nothing long term. However they wouldn't know it was her coming, so wouldn't get any ideas about Dana Scully. She downed the rest of her glass, giving a satisfied sigh, feeling a little shiver run through her, the wine well and truly loosening her up.\n\n\"Oh the hell with it, why not,\" she said, putting down her glass and picking up the nearby phone, quickly dialling the number in the advert. She knew it was late, but had to do it right then. Being sober she'd never do it, it was a spur of the moment thing. It rang for a minute and then was answered by a tentative voice.\n\n\"Hello?\" said a male voice, just as she'd figured it would be.\n\n\"Hi there, I'm calling about this advert you placed, wanting a model?\" she purred, well at least she tried. She might just as well have slurred, being a little inebriated.\n\n\"Oh right&hellip;yes I'm still looking, you interested?\" he said a little disjointedly, clearly not used to dealing with people, or perhaps she was purring really nice she figured. She was indeed purring nicely, and her American accent wasn't helping to keep him cool, since the fact a woman had decided to model for him was one thing, but she also seemed rather keen.\n\n\"I just have a few questions though, if you don't mind?\" she said, pausing for him.\n\n\"Um sure, what you wanna know?\" he said, a little concerned sounding, as if he was worried he'd lose his model before they'd even started.\n\n\"Well, would it show my face?\" she said a little hesitantly, since she didn't really want to get recognised in some less then professional photo shoot. It would make her look rather easy and give even more guys ideas about getting her between the sheets for a quickie.\n\n\"Well, I hadn't thought about it, but if you don't want to we can work around that, it won't really affect the shoot I guess,\" he said, thinking about it for a moment. \n\n\"Cool, and is there anyone else coming?\" she said, since she didn't need someone else there who'd blab about it. She was pretty sure she could convince him not to tell anyone who modelled for him.\n\n\"No&hellip;no just you, nobody else has called,\" he said quickly, making her smile a little, able to hear his heavy breathing over the phone.\n\n\"Good, nice to not feel part of a line of ladies waiting for you,\" she said with a smile, her voice taking a smooth tone as she did, hearing him give a stuttering breath.\n\n\"Nope, just you and me, have you all to myself,\" he said, almost groaning to himself at the end of the phone at the line he'd used, just because this woman happened to have a sultry voice.\n\n\"Good. Is there anything you'd like me to wear particularly, since I guess you don't have wardrobe being a student thing?\" she asked, pondering what she could do.\n\n\"No I don't&hellip;it's sposed to be light and dark, using shadows, reflections, contrasts&hellip;stuff like that,\" he said, explaining his objective so at least she had some idea. Gillian pondered a moment, and then grinned to herself as a naughty thought crossed her mind.\n\n\"Well&hellip;I have a skin-tight black latex rubber catsuit, almost mirror shine. Perhaps that would work?\" she teased, practically hearing his heart stop over the phone, which it almost did, before squeezing into a rapid pumping motion. He let out a heavy breath which barely refrained from a groan, something she'd heard from men countless times, usually not over the phone though, and couldn't help but give a slight giggle.\n\n\"Yeah that'd be just&hellip;wow&hellip;couldn't be better really,\" he breathed, his mind rushing with the mental image of this woman that he'd built up from her voice alone, wrapped in a black catsuit, moving at his whim.\n\n\"Excellent, I'll bring that along then. Anything else?\" she said, making sure it was all settled.\n\n\"Um&hellip;yeah&hellip;.what size are you? I mean like height, build and stuff you know,\" he quickly added, realising how rude he was to ask. She just smiled, surprising him with her bold answer.\n\n\"I'm five-foot-three, 34C, 25, 35, red hair, size seven feet,\" she said with a little laugh.\n\n\"Thanks,\" he said after a pause, \"I didn't mean to be so rude,\" he quickly added, wanting to make sure she knew he wasn't like that.\n\n\"It's fine, so where is it and when would you like me?\" she purred. After a bit more panicked and hasty breathing and fumbling of words he gave her the address and asked her to show up around six in the evening, which pleased her as it gave her more time to sober up and do something with her day.\n\n\"Excellent, I'll see you tomorrow then,\" she purred.\n\n\"Yeah, see you soon, can't wait to get you here&hellip;I mean get started,\" he fumbled, again almost groaning to himself at the pathetic line.\n\n\"It'll be soon enough, goodnight,\" she said with a giggle in her sultry tone, blowing a kiss down the phone and then hanging up. She laughed out loud to herself after she did, settling into a giggling fit as she poured herself another glass of wine, thinking of what was to come after her teasing of him over the phone, which she realised had got her more than a little turned on. Her nipples were stiff and pointing through her light top since she wasn't wearing a bra, and her pussy felt a little damp as well. The wine and her little phone fun had helped to get her going, and she pondered how she might deal with it, thinking to her trusty sex toys, which had never let her down when she was single. They'd certainly be getting a little run tonight&hellip;  \n\nDressed in a simple pair of jeans and a top, her red hair down round her face and wearing sunglasses, Gillian strutted on a pair of black high heels to the door of the address she'd been given, a simple suburban flat. She pressed the bell, then stood back and waited, glancing around briefly till she glanced a shape through the glass of the door, which soon swung open to a guy in his early twenties. He had to be over a decade her junior with ease, taking him in from behind her dark glasses as he looked her over with wide eyes, taking her in.\n\n\"Hi I'm here for this photo shoot thing?\" she said with a smile.\n\n\"Um&hellip;oh yes of course, come in,\" he said, directing her up the stairs, a little surprised at this older woman coming to do it, rather than some young wannabe, though she was still smoking hot. He hadn't recognised her, though she did seem very familiar to him, something that was kind of sidelined as he followed her up the stares, taking in her arse through her tight jeans. They got into his flat, closing the door and leading her through to his front room and offering her a seat with a wave of his hand.\n\n\"Um&hellip;can I get you something to drink? Tea, coffee?\" he said, being polite and once again trying to work out why she seemed so familiar to him.\n\n\"No I'm fine thanks,\" she said, just looking to get on with it really. She was sober now and had to hold her nerve.\n\n\"Ok, then we should uh&hellip;just get down to it I spose?\" he said, grimacing internally at his phrase as soon as he finished speaking.\n\n\"Sounds good,\" she said, ignoring any innuendo he'd created.<br/> <br/> \"Ok then, it's just through here,\" he said, indicating she should follow and leading her to one of the bedrooms, which had been set-up as a mini studio, with lights and a background.<br/> <br/> \"Not bad, pretty professional for a student project if you ask me, you must be pretty good at your course,\" she complimented, buttering him up a little.\n\n\"Yeah well&hellip;I guess, not if I don't get this assignment done,\" he said, glancing to her.\n\n\"Well that's what I'm here for,\" she said, pulling her dark glasses off and flicking her red hair back a bit, letting him see her properly, where it immediately fell into place.\n\n\"Oh&hellip;my&hellip;god&hellip;\" he breathed, his eyes practically bulging as he stared at her, as she smiled back before extending a hand.\n\n\"Hi, I'm Gillian Anderson,\" she purred soothingly with a grin. He stared at her in disbelief for a moment before he quickly took her hand and shook it, allowing her to pull herself forward and peck him on the cheek.\n\n\"I can't believe you're&hellip;that you&hellip;I mean wow. What are you doing here?\" he spluttered, trying not to fall over his tongue. <br/> <br/> \"You needed a model, I was curious, so here I am. Hope I'm good enough for you,\" she teased.\n\n\"You're perfect, better than I could ever&hellip;he fumbled\n\n\"Glad to please, where can I change?\" she said, holding up her bag.\n\n\"Oh er&hellip;the screen, behind the screen,\" he stumbled, pointing to it, which at a glance looked like part of the reflecting scenery.\n\n\"Thanks,\" she said, giving him a grin sure to stiffen him up before stepping behind. Knowing he was going to be watching, trying to see through the screen, she made a movie-style show of it. Peeling her top off, she threw it over the top of the screen to hang it, so he could see it and his mind could work with the image of her with no top. She wondered if he'd imagine her with a bra or not, though she was wearing one, a simple black one, which she kept on for now as she kicked the heels off and unbuttoned her jeans. Wiggling her hips, she pushed them down to her ankles, which was visible below the screens bottom edge, before stepping out of them and throwing them over the screen as well. Now she unhooked her bra, slipping it quickly off and throwing it over the top of the screen, before reaching down for her knickers. She could probably keep the black thong on under the suit, only a thong because she liked wearing them and it matched her bra, but she was looking to tease him and realistically after a fuck, so decided to do away with it. Pushing it down, she kicked it off her foot, deliberately under the side of the screen so he could see it, hearing his breath catch a little, making her smile.\n\n\"So you all ready for pics, what camera you got?\" she asked, standing totally naked behind the screen, reaching down to run her fingers over her completely shaven pussy, bumping her clit, sending a thrill through her that made her bite her lip. Broken from his daze of imagining Gillian Anderson naked, he quickly worked out what she'd said.\n\n\"Nikon digital SLR, fifteen megapixel,\" he said, looking up at her bra hanging over the top of the screen.\n\n\"Pretty fancy, must've cost a packet,\" she said, undoing her bag and retrieving her black rubber catsuit. She'd bought it for an old boyfriend, he'd wanted to see her in it after she did a photo shoot in a latex suit, and she'd happily obliged. It'd led to some fantastic sex, especially when she'd said she'd only do it if he ate her pussy really well afterwards, which he'd done.\n\n\"Yeah, well I got this grant and then a loan as well, covered it, figured I might as well get something good. Need to capture beauties like you in very high detail,\" he said, putting himself out there a bit. It was just what she wanted. He was certainly up for it, and a young guy like him would be nice and energetic for her, however he would still have to work to get in her knickers.\n\n\"Hard to get models then?\" she said, undoing the suit and pushing it down to step into it. It was full body, including her feet, leaving only her face revealed, though the rest of her was completely shown by the way it hugged her curves, and it was not unknown for her nipples to show through when they stiffened up.\n\n\"Yeah, lots of girls just don't want to do it unless they're getting on the cover of Vogue or something,\" he said, fiddling with his camera as she pushed her feet into the snug rubber, working it onto her feet. Once they were in, she rolled the legs up, the tight rubber stretching round her slender legs as she rolled it up, grasping the sides and pulling it up, the crotch pulling onto her bald pussy, which she'd shaved just that morning in the shower in readiness. She gave a little gasp, which she knew he could hear, then worked her arm into the tight black latex rubber, squeezing it in. Gillian refrained from cursing as it pulled at her skin a bit before sliding properly, pushing her hand out the sleeve. Turning her attention to the other side, she forced her left arm in as well, which pulled the suit together over her body, only it didn't. The suit was tight, and that meant it had to squeeze her body just like the rest of her limbs, and right now it was on the outsides of her breasts pushing them in, up and out, which was something she was sure he'd love if he saw her this way.\n\n<br/> \"Nearly ready?\" he asked tentatively.\n\n<br/> \"Not quite, gotta squeeze myself in,\" she purred, giving a little giggle as she reached up and pulled the suit over her breasts as best she could, leaving her with a very exposed cleavage as she reached down to find the zip. Well, there were two. This was a kinky suit, and it had one zip but two pullers, one from each end, meaning it could be opened just between her legs for obvious reasons, or pulled down at the top. Finding the highest one, she pulled it up, pushing the other one down to completely seal the suit and keep her concealed, then stood up and pulled the zip up, pressing her breasts down as she pulled it up to let it shut, stretching over her 34Cs as she pulled it up to her neck, reaching down to cup her breasts, giving a quick squeeze to thrill herself and then pull at the rubber to settle it. Stood in the corner was a mirror, which he'd had the foresight to put in so his models would be satisfied. Stepping over to it, she saw herself in it, just about holding back from giving a little happy cry as she saw herself in the suit for the first time in years, and looking just as hot. Gillian couldn't help but run her hands over her silky smooth body, brushing her hair forward so it hung down round her face. Quickly finding her bag, she added some deep red lipstick and a quick flick of some more mascara to finish her \"look\" off, then stepped back into her black heels.\n\n<br/> \"Ok I'm ready,\" she called. He picked up his camera and didn't even dare to blink, not wanting to miss a thing as she revealed herself. He almost dropped his camera again as she stepped out, revealing her slender, diminutive curves hugged skin-tight by the shiny black rubber, accentuating all the important parts. She stood for him to take in, to match to his dream of her, her cute face with its foxy make-up, the skin-tight rubber bulging over her ample breasts, running down to hug her waist and out over her hips, round over her pussy, the zip running in line with where he'd love to slip into her, and then hugging her legs all the way down to her toes in her black high-heels.\n\n\"Goddamn&hellip;\" he breathed, staring at her without even pretending not to.\n\n\"Well guys always seem to like this, and I'm thinking it reflects light for all your light and dark type objectives huh?\" she said, turning round to show off her ass, hearing him draw breath. Standing straight at first, she gave him a second and then arched her back, pushing it out, before putting a hand on her hip and twisting up towards him a bit, before really going for it and bending right over in front to just touch her toes, giving him a glance at her hot ass and the bulge of her pussy between her encased thighs before she stood up.\n\n\"Well, let's get going huh?\" she purred, smiling as she strutted out on her heels to his photographic area, which had a desk and chair at one side. He glanced at her bright red nails quickly, loving the contrast with her suit.\n\n\"Um&hellip;sure, sure,\" he said quickly, turning the camera on, the whirr of it powering it up cutting the intense atmosphere.\n\n\"How do you want me? Remember no headshots,\" she said, striking a pose with a smile as he flicked on his lighting.\n\n\"Of course, well need to do some basic shots first, just get this dialled in and all,\" he said, \"so if you could just stand there against the plain background we'll do some simple shots and get it all sorted,\" he said, managing to be quite professional despite the semi he was concealing in his jeans as she stepped into place, facing him as she stood against the background. Holding her arms out slightly and spreading her legs a bit more offered his camera a view at every little curve of her body, which was quickly captured by the beep as he took the first picture.\n\n\"How's that?\" she asked as he checked it on the screen. Carefully studying it for a second, he started adjusting some things.\n\n\"ISO's a bit high, it's almost spot on though,\" he said, changing the settings a bit.\n\n\"Good stuff,\" she said, ready to pose.\n\n<br/> \"Yeah, if I could just take a couple more test shots&hellip;\" he said, holding it up.\n\n\"Sure, just tell me how you want me,\" she giggled, standing back again as she had been. He took another picture, same as his first, to check it was how he wanted.\n\n\"Turn around,\" he said with a slightly shaky voice. She did as asked, arching her back a little so he got a good look at her ass, which she knew he wanted. She heard the beep of the camera.\n\n\"Now to your left, arms at your sides, deep breath,\" he said quietly, just barely able to push it through his nerves. She knew exactly what he wanted, which was a side-profile of her, with her tits pushed out, though he didn't say it. With a smile, she turned to her left, pulled herself up straight, arched her back and breathed in deeply, pushing her chest out, and with it her tightly squeezed breasts. He positioned it so her head wasn't in shot and took the photo, the distinctive beep as he did. She turned back as he checked them on the screen, looking at them a bit longer than she was sure he really needed to, smiling as he did, glancing at the slight bulge in his trousers as he flicked through them.",
        "\"Seems to have captured your&hellip;I mean captured the image just perfect now, so we can&hellip;continue&hellip;\" he said.\n\n\"Ok then, sounds good, we can get down to business&hellip;so to speak,\" she purred, smiling again with just the hint of her tongue over her lips.\n\n\"Yeah, all ready to go now I guess,\" he said, holding the camera up again to aim it at her rubber clad body.\n\n\"So, why you want to get into photography?\" she said, turning and striking a pose for him.\n\n\"Well&hellip;I can be artistic with it. I don't write or anything, and I'd really like to try and do something new in a genre kind of thing,\" he said, taking a shot of her as she posed. She changed to another pose, a leg raised to rub her heel on the inside of her other thigh as she gave him a \"Really?\" glance.\n\n\"Ok and so I get to look at hot girls all day,\" he said with a smile, unable to resist her charm.\n\n\"I knew it,\" she said with a giggle as he snapped her, turning and pressing her arms against the background, arching her back and spreading her legs provocatively for him, making him hesitate at her boldness for a moment.\n\n\"Well&hellip;it's already working isn't it,\" he said, his heart pounding as he took the picture, loving how she looked that way, just imagining her like that but naked, wanting to be taken.\n\n\"I guess so,\" she purred, turning back, now getting a little turned on herself showing off for him, feeling her nipples screw themselves up inside the hot suit, pressing against it, sure to be showing through. They were, just slightly, little points through the skin-tight rubber, not unnoticed by him, making him pause and look straight at them. She played along, holding her hands up and pressing her fingers over them, showing off her bright red nail polish, making him blush at being caught.\n\n\"It's ok, take it,\" she said softly, squeezing her legs together tightly to give her body an accentuated profile, so she went in and out in just the right places, up to her full breasts, covered by her soft hands with their dazzling nails. He took the picture, catching a sneaky glance at the way her thighs squeezed together at her crotch so perfectly.\n\n\"Ok&hellip;I think that's enough basic shots there,\" he said, standing up from the crouched position he'd adopted, seeing her stand at ease again, relaxing as she waited to see what he wanted to do with her next.\n\n\"Ok, what you got in mind from here?\" she said, just waiting for him to take control.\n\n\"Well it's about light and all that, so I'll turn some on and off, but I think some more poses where it's not just you and a background, maybe on that desk and chair?\" he said, pointing to them.\n\n\"I knew they were here for a reason,\" she replied with a smile, \"want to move them over here?\"\n\n\"No I've got them, thanks though,\" he said, laying his camera down and moving to shift the furniture, trying to hide the bulge in his jeans from her, and failing. She did move the chair however as he got the desk, just cheekily brushing up against him to let him feel the smooth rubber slide over his skin, seeing him give a little shudder before he stepped away again.\n\n\"Anything in mind?\" she said, running her fingers along the wooden desktop.\n\n\"Well&hellip;perhaps some sort of&hellip;office type shots, as it you're at work?\" he said with a slightly optimistic smile.\n\n\"I think I can manage that,\" she said, slipping into the chair, turning to face him slightly, crossing her legs and leaning on the edge of the desk, a fingertip in her mouth, even though he wasn't shooting any pictures with her face in.\n\n\"Oh that's perfect, that'd be one saucy secretary,\" he said, taking pictures as she altered her poses slightly, putting feet up on the desk, trailing a pencil down her front, leaning down to a bottom draw, where shadows from the desk hid parts of her dark suited body and made other areas appear more prominent.\n\n\"Perfect, if I ever need a secretary I hope she's like that&hellip;\" he breathed, unable to hold it back now.\n\n<br/> \"Yeah, Maggie Gyllenhaal's got nothing on me,\" Gillian giggled, striking another saucy pose. He paused quickly to turn off the lights on front of her, back lighting her and showing her silhouette, so sleek and strokable, the light glowing round her like a halo on a solar eclipse. Leaning back in the chair, she lifted her feet to rest on the desk itself, leaning back casually as he snapped some more backlit shots, picking the best poses for outlines and shadows to make the most of the light. Climbing off the chair, she pulled herself right onto the desk on all fours, sinking her back and pushing her ass out, for a great side-on shot.\n\n\"So ah..Gillian, what you working on at the moment?\" he asked as he photographed her. They'd both settled into their roles and she just did a pose and he snapped it. It's the way it was in photo shoots, and he seemed to have that side of the profession down.\n\n\"Oh various things, a new movie and reading into some more stage work, I enjoy that,\" she said casually as she posed on the desk, creating the silhouette images for him.\n\n\"Sounds good, you're good, so people should be snapping you up,\" he commented, unable to disguise his heavy breathing through his nerves. She gave a smile as he stood up, a clear bulge in his trousers from staring at her rubber-clad figure.\n\n\"That'll do for backlit, now for front lit,\" he said, switching the lights, making her squint.\n\n<br/> \"Sorry about that,\" he said, though he was now sort of backlit, hiding his erection from her view.\n\n\"No it's fine, I'll manage,\" she said with a cute smile, which was enough to affect him since he was so on edge, pausing before he continued. He carried on, shooting the same position only front lit this time, and she resumed moving through different poses as they talked.\n\n\"So, you got a girlfriend right now?\" she purred as she sat up on the desk, sitting with her legs crossed over the side, the light reflecting strongly off her thighs. He was a little taken aback by the question, struggling for an answer at first.\n\n<br/> \"Not right now,\" he said quietly, concentrating on snapping her, picking out a particular shine on her shoulder and breast.\n\n\"Really? Girls always like the art types, intellectual and sensitive,\" she purred with a pout of her full lips.\n\n\"Could've fooled me,\" he said as she slipped back into the chair for more direct shots. Legs over the arm, crossed once more and so on.\n\n\"I do,\" she purred slyly, giving a smile as she drew her legs up and clutched them to herself on the chair for an innocent looking pose.\n\n\"That's all that matters then,\" he said with am smile, eyeing her as she stood up, capturing various shots of her as she moved.\n\n\"Seems so doesn't it,\" she teased, turning away from him.\n\n<br/> \"So&hellip;are you seeing anyone right now?\" he asked tentatively as she pouted back over her shoulder, despite the fact he wasn't using her head in the photos, which was making taking them slower.\n\n\"Not right now, I'm single and looking,\" she said softly, bending straight over the desk in front of him. He was trying to chat her up, there was no doubt about that. He wasn't quite as subtle as he thought, being more a quiet type that kept to himself, but he interested her so she played along. He certainly seemed like he'd be good for a fuck, there was no doubt about that. He practically groaned as she bent over, showing off her fine ass and thighs in the skin-tight rubber, arching her back up so he could see her shoulders over the top of it for another picture.\n\n\"How's that?\" she cooed, glancing back to him as he ogled her.\n\n\"Spread your legs,\" he said without even thinking, realising how much he was asking for. However, she didn't protest, she just did it, stepping her feet apart to reveal the bulge of her sweet pussy between her legs.\n\n\"Like this?\" she purred as he just stared, unable to even raise his camera.\n\n\"Just like that, damn&hellip;\" he breathed, finally lifting his camera and taking the picture with the distinctive beep. She stood up, then posed turned towards him, before moving to bend over onto the chair for another side profile, but different this time.\n\n\"Good photos? For your project that is?\" she said with a smirk, knowing full well he'd be using a lot of these for something other than his project.\n\n\"Yeah, just need to adjust something here,\" he said, reaching up to move one of the lights a bit. Standing facing him, she crossed her arms under her breasts, pulling them up a little for him, her nipples showing through the rubber fully now, stiff and tight from her arousal.\n\n\"That's great, arch your back, push your chest out,\" he said. She did as he asked, knowing full well she was doing it for his pleasure, but that was the aim right now.\n\n\"How about you&hellip;put your arms down, sort of push your ti&hellip;I mean breasts together?\" he asked quietly, pushing his luck. She glanced to the bulge under his denim as she lowered her arms, before tensing them and pulling them in to push her breasts together and up tightly.\n\n<br/> \"Like this?\" she asked with a seductive smile.\n\n\"Yeah that's just&hellip;yeah just like that,\" he mumbled as he used his camera, his hands shaking a bit, worrying him the image would blur, but he got away with it as he snapped the stunning Anderson.\n\n\"Anything else?\" she purred, just letting him have run of her body almost.\n\n\"Spread your legs some more,\" he murmured.\n\n\"You already saw that,\" she teased, but still did it.\n\n<br/> \"Well it's a sort of power stance, looks great, and you just suit it so well&hellip;\" he trailed off, glancing to her pussy through the rubber. She just gave a dirty little giggle as he did, still pushing her breasts up for him.\n\n\"You're a great model you know, just perfect,\" he said as he photographed her, picking out some specific reflections, shadows and contrasts for his college work so he got that done at the very least.\n\n\"I could be better,\" she said with a sultry glance, leaning forward a bit.\n\n\"Really? How?\" he said, since she was willing and sexily dressed, he couldn't ask for anything more really.\n\n\"Well, I could show a little skin&hellip;\" she said, sliding her hands back up and taking hold of her zip. He stopped dead, not even breathing as he just gaped at her pulling the zip down her suit, the tight rubber peeling open to reveal her pale skin. Holding it at the top so it didn't slide off her ample breasts, she pulled the zip down to her stomach, then reached up and took hold of both sides with her hands at her breasts, using the heels of her hands to push her breasts together and create a great cleavage.\n\n\"There, better?\" she said with a teasing smile and flick of her eyebrow.\n\n\"Oh my god&hellip;\" he breathed, still staring.\n\n\"Come on, chop chop, back to business,\" she said, startling him out of his stupor.\n\n\"Sorry sorry, it's just that, you know&hellip;\" he said, raising his camera and photographing her.\n\n\"It's fine,\" she said, leaning forward to offer a great shot down between her firm breasts. He took a few more photos of her as she wiggled and posed for him, letting him get a good look at her breasts and the revealed strip down her middle. He had to pause to change his memory card as the first one was full, but then they continued, with Gillian pausing to pull the zip further down. There was no point her turning around, so they did a mixture of shots of her standing in front and behind the desk, leaning against it, over it, on and around the chair, edging the zip further and further down. The edges of the suit barely covered her nipples, revealing her ripe breasts almost entirely as they pushed the boundaries, her zip dropping until it was just above her pussy, barely hiding what he lusted after, well one of the things. Allowing him to get some saucy pictures, and making it clear she was a very willing subject, she let him have his eyeful before she pulled the zip back up to conceal herself, delighting him with how she struggled to pull it past her ample breasts, but disappointing him as she concealed herself.\n\n\"That's enough of that&hellip;for now,\" she said with a smile as she posed again, tamer without the skin on show, but in just as provocative positions, bending over the desk, laying along it, her leg extended into the air, doing stretches and all variety of other things. He took the time now, managing to control his hormones and resist his urges to just push on with things, moving and changing lights, adding shadows and different things here and there, doing some close-up shots of reflections and so on, getting some real good stuff for his project. How could a model be any better when she was completely shiny and he was doing photos involving light. After doing a few shots with her slumped down in front of the desk, a glass in hand, also adding to refractions and shine, and giving the pictures some feel and story as it were, she had to have a rest.<br/> <br/> \"I need a break, I'm getting too hot in this thing,\" she said, indicating the latex rubber catsuit, which she was cooking inside, especially under the lights.\n\n\"Sure thing,\" he said, moving forward to quickly offer her a hand to stand up. She took it, letting him pull her to her feet with a smile.\n\n<br/> \"Thanks,\" she giggled, leaning up to peck him on the cheek. Without another word, she grasped the zip and pulled it straight down. The tightness of the suit meant it couldn't contain her breasts, and without her holding it over them it just split open and slid off her ample rack to reveal them, slowly at first before suddenly giving way, slipping off them to their sides, pushing them up slightly, showing off her nipples to him for the first time, erect and proud since she was turned on. Time seemed to slow to a crawl as he just stared wide-eyed, but she didn't stop there, pulling the zip right down, all the way under between her legs to reveal her pussy as well, the zip deafeningly loud as the stretchy rubber peeling back to reveal her waxed smooth mound, puffy and ready as well.\n\n\"Jesus Christ&hellip;.\" He breathed, staring at her as she showed off her most intimate areas, her C-cups pushed together a bit by the suit, sporting rock hard nipples, and her completely bald pussy on show, which drew his attention.\n\n\"There, much better,\" she said casually, as if unconcerned she may as well be naked for him, stretching and pushing her hair back. She walked around a little, just comfortably cooling down as he stared, itching to get his camera and photograph her, but he imagined that would really piss her off.\n\n<br/> \"So how long you been on this course, when do you complete it?\" she asked, turning back to him, just smiling as she saw him drinking in her body.\n\n\"Oh um&hellip;this is the second year of it, two year course. Got about four months left of it now,\" he murmured, unable to draw his eyes from body, except to meet hers, which only seemed to tell him to enjoy her frontal display. She'd clearly done it for him, because he couldn't imagine she showed off the goods for every photographer she met, though he couldn't work out why she was doing it for him, or what she was even doing there.\n\n\"What do you normally photograph? Models, objects?\" she asked, just keeping a normal kind of conversation going with him.\n\n\"Well&hellip;it's usually some kind of effect. It could be&hellip;reflections on water, or shadows or something like that, so we just go out and find things to photograph. This is a very open one, and I wanted to do something different,\" he said, looking to her once more and her shiny black suit. She sat down in the chair as they talked, making no move to cover herself at all.\n\n\"So this is the first time you've used a model?\" she asked.\n\n\"Well, privately yes. We did some general shots of people and as part of the course but that wasn't anything like this,\" he said, indicating the private studio they were in, well as best he could make it.\n\n\"So am I good enough as a model?\" she giggled, leaning back and eyeing him, especially the full mast in his trousers, which he'd long since given up trying to hide from her, which was fair enough given she was showing off for him.\n\n\"You're brilliant, so professional, getting the job done here,\" he said with a smile, which was true, it was flowing along perfectly for getting photos with minimal trouble.\n\n\"And what about me, personally?\" she said with a sexy sideways smile, egging him on.\n\n\"You're fantastic. Smart, gorgeous, sexy&hellip;willing&hellip;\" he said, casting an eye down to her pussy.\n\n\"So if you could have me&hellip;helping with your projects&hellip;\" she said slowly.\n\n\"I wouldn't say no,\" he said, catching her gaze.\n\n\"Who says I'm offering?\" she said quietly, giving a little wiggle of her eyebrows and standing up, reaching down for the zip, pulling it swiftly up to her stomach, where she paused to ease her breasts into the black rubber, before sliding it right to the top, concealing her sexy body once more. He tried not to outwardly show his disappointment, but he really thought he'd blown it as she stood up and got professional again, thinking she'd simply wanted to tease him, or offered him the opportunity which he'd missed out on.\n\n\"So, is there anything specific you'd like to do?\" she asked, stepping back towards the desk, glancing over her shoulder at him, taking him back a little at the rather open question.\n\n\"Umm what do you mean?\" he said with a slight frown, not wanting to put his foot in it.\n\n\"Well maybe something a little kinkier?\" she purred, turning to lean against the desk, holding onto its edge as she looked at him sweetly. He paused, holding back his gasp and keeping far more composure now, his mind racing with possibilities, though he couldn't hold back a hesitant sound.\n\n\"Umm&hellip;well&hellip;how about&hellip;\" he attempted, trying to build up the nerve to tell some kind of risqu&eacute; idea to the foxy redhead.\n\n\"Well, how about something with handcuffs?\" she said, holding out a hand as if she were offering them right there.\n\n\"Yeah&hellip;yeah that'd be good, and a blindfold perhaps?\" he asked carefully, checking the way as it were.\n\n\"Yeah that'd be good, suit the look,\" she said with a smile. \n\n\"I'll just go find them,\" he said, quickly heading out of the room. It took him mere seconds to locate them and return to the waiting Anderson, who smiled as he passed her the blindfold and handcuffs.\n\n\"Do I want to know why you have these?\" she said with a giggle, putting the cuffs down and taking the blindfold in her hands, ready to put it on.\n\n\"Well&hellip;I think you get the idea,\" he said with a smile, finding his camera again.\n\n\"Yeah, well I've had more than the idea of them before,\" she said with a little smirk. The idea of not using her head or face in any shots seemed to have been forgotten, by both of them, with him taking a series of photos of her holding the blindfold and a sexy smile, then putting it on, tying it behind her head and then in it, a further series of shots of her wearing it. Pouting, pointing to it, acting casually, and a collection of poses, such as peeking out underneath it as he snapped away, filling another memory card.\n\n\"This ok?\" she asked, playing innocent as he swapped the memory card over, pushing the blindfold to her forehead.\n\n\"Perfect,\" he said, before she picked up the handcuffs.\n\n\"Moving on,\" she purred, waving them a little at him with a dirty grin.\n\n\"Sounds good,\" he said, returning her smile as she slipped them onto her wrists.\n\n\"Ever think your little assignment would turn out this way?\" she teased as she locked her wrists together.\n\n\"Not in a million years,\" he said as she pulled the blindfold back down.\n\n\"Sometimes you get lucky huh?\" she said with a smile, turning to pout as he started to take more pictures of her with her cuffs on, in various places and positions, including a great shot of her kneeling down with her tongue out, holding up her cuffed wrists as if begging. He didn't know why she offered him such a shot, but he wasn't complaining.",
        "\"Very lucky,\" he murmured, snapping away as she continued to pose, arching and bending her body for him, playing the shackled submissive for the camera. He continued to photo her as she unlocked the cuffs, zooming in for some shots of her hands and the cuffs, the light glinting off them and the sleeves of her catsuit for some nice artistic type shots. Standing up fully, she put her hands behind her back and clipped the handcuffs shut again to lock her hands behind her back, above her snugly rubber coated rear. Turning round, she arched her back and wiggled it slightly for him, his camera going off plenty as he photographed her from various angles, high and low, turning lights on and off to change the effects over her reflective black body. She made his breath catch as she bent over the desk, laying on the wooden top and spreading her legs without being asked, pulling at her cuffs to look helpless and willing for a fuck. A few more shots of her pouting later, with her hands cuffed behind her back were enough to make any man eager, and his hardon was clearly visible in his jeans. A few shots of her arse later and he was fit to burst, but he had to be patient, since he was sure she was just playing with him. Why would she do anything more? He was privileged just to have her here for this photoshoot in the first place, let alone being willing to do a range of kinky stuff in a rubber catsuit.\n\n\"Damn that's good,\" he breathed as she stood up, unable to unlock herself.\n\n<br/> \"Want to cuff me up, like to the furniture or anything?\" she said with a playful smile, stepping back towards him a bit.\n\n\"Really? Yeah that'd be great, if you don't mind?\" he said, his voice almost cracking.\n\n\"Might as well go the whole hog now huh? If you uncuff me that is,\" she said with a laugh, turning away from him, inviting him to put his hands tantalisingly close to her smooth, firm rear. With shaking hands, he laid his camera down and stepped forwards, unlocking the cuffs with the key she had clutched in her hand, freeing one of her wrists, unable to resist and sliding his hand down over her bum. She simply glanced back and didn't say a word, knowing she was tempting it and quite happy to let him grope her.\n\n\"So where do you want me?\" she purred, offering herself with arms out a little, the cuffs dangling from one wrist. He managed to resist the urge to say something like 'any way you'll let me have you'.\n\n\"Um&hellip;well&hellip;how about&hellip;\" he trailed off, walking around the desk, Gillian turning round to keep facing him.\n\n\"Yes?\" she cooed softly, just smiling politely, waiting to be ordered around, something that was an exceptional turn on.\n\n\"How about you&hellip;bend over the desk, and I handcuff you to the drawer handle here?\" he said, pointing with a trembling finger.\n\n\"Sounds good, certainly give some nice&hellip;reflections,\" she teased, smiling seductively as she slowly bent over the desk under his entranced gaze. He didn't say another word, taking her wrists in his unstable hands, hoping she didn't notice how hot they were through her rubber suit as he guided them down, urging her to lean a bit further over to reach the next handle down. This meant that her feet were only just on the floor, pulling her body nice and tight, leaving her vulnerable and inviting as he looped the cuffs through the handle and secured her free wrist, hearing her give a satisfied little murmur.\n\n\"There, secure,\" he said, standing up and looking down over her back in her prone position, unable to stop his hand just teasing through her soft red hair.\n\n\"Can't escape you now, so go for it,\" she breathed, meaning the photography, but her words were just so heavily loaded. In a near daze he went back to his camera, picked it up, turned it on again and raised it to snap her firm rear in the tight suit. Moving round slightly each way, he got different angles and different shadows and lights, switching a few on and off, moving them about a bit to enhance and hide certain parts of her, getting another couple of backlit side on profile shots of her bent over the desk in her sexy suit. He didn't know what came over him, well&hellip;them. The atmosphere was so hot and tense, just leading towards what they knew was going to happen. Approaching her prone form, he reached out and placed his hand on her ass, without any protest from her. Sliding it up, he stroked up the back of her smooth black suit, taking in the pinch of her waist before slipping back down to her rear, stroking down the cleft of her rubber encased cheeks, bolding pushing his fingers right down and onto the bulge of her pussy.\n\n<br/> She didn't complain, just standing over the desk obediently, letting his hands roam. Lightly running his fingers over the warm, soft bulge, he let them find the zip. The suit was double zipped for access from both ends, and he put that to use now, pulling it a little for a moment before he slid the zip up, the sound of the zip opening scything through the air cleanly as he reached under her to push the zipper forwards up her groin, the tight rubber peeling aside so her smoothly shaven cameltoe pressed into his wrist as he did. He immediately gasped as the warm, soft lips pressed into him, accompanying Gillian's gasp as she was stimulated slightly by the pressure to her labia. Pushing the zip up, he eased the rubber open a little more with shaking hands and heavy breathing so she was completely exposed, her delicate inner lips peeking out, before he stepped away and got his camera once more. Gillian Anderson never uttered a word throughout this as he started to take snaps once more, photographing her as a whole exposed, and then focussing on her exposed pussy. They didn't need to talk about it. They knew these pictures wouldn't be entering his college assignment. \n\nHe took a good series of photos and then walked back to her, still holding his camera. Moving round in front of her, he crouched down, tentatively raising the camera to aim at her face, where she immediately posed accordingly. He smiled as she pouted and licked for the camera, sliding her tongue over her lips, blowing kisses, smiling seductively, cocking an eyebrow and so on, looking so delightfully enticing, just giving him the come on loud and clear, at least that's how she played it for the camera. Standing up, he let the camera hang down on the neck strap, reaching down to once again brush his fingers through her soft red hair, then down onto her suit, stroking over her shoulders and off her side, before sliding them back. \n\nBarely able to think straight, his cock absolutely rock hard in his jeans, he slid his fingers back over her shoulder and then across her cheek slowly to her mouth, tracing her full, moist lips carefully before slipping two fingers into her mouth, pushing them slowly into the hot, succulent haven, where they were immediately greeted by her tongue and a light sucking. She was very willing it seemed, starting to show off a little at what she could do, moving her head a bit, her tongue curling between and round his fingers whilst she sucked firmly.\n\n\"Hm&hellip;you need something else to suck,\" he teased, reaching down with his other hand to push some hair back from her pretty face.\n\n\"As long as it's not a lolly I'm fine,\" she mumbled round his fingers. There was no more teasing now, it was obvious where they were. Sliding his fingers out of her mouth, he reached down and undid his jeans, trying not to seem too eager as he did so, freeing his rock hard erection, which sprung up in front of her. He reached down and hooked his fingers into her blindfold, slipping it up onto her forehead to show her his cock, twitching with his heartbeat as he offered it to her. Gillian eyed it lustily, taking in the decent seven-inch cock throbbing before her, before obediently opening her mouth, since she was restrained. He pushed it down a bit, resting his spare hand on her head as he slipped it into her mouth, groaning deeply as he slid over half of it into her waiting mouth, her tongue lifting so he glided over it. She gave an appreciative murmur, moving her head as best she could to bob lightly on him, sucking quite firmly as her tongue went to work on him, her moist, ruby lips sealing perfectly round him as he started to lightly thrust into her mouth, just holding her head lightly and thrusting his hips to pump his cock slowly in and out of her talented mouth.\n\n\"Fuck that's good,\" he breathed, finally getting his cock into her mouth, and the fact he was getting blown by Gillian Anderson, he was just living the dream. She kept at it, moving her head steadily as she sucked him off, his hands sliding into her soft red hair, fingers slipping through the warm strands as he took a slight grip on her head and started to hump her mouth, not going too hard or fast so as to annoy her, just helping her out, which she didn't mind, not protesting, simply using the extra movement to give a better blowjob. There was no need to change anything, aside from pushing a little more into her mouth, which she swallowed with ease, especially with the position, letting him get into her throat. They both just enjoyed it, eyes closed, Gillian enjoying wrapping her lips round a cock again, and him just loving her technique, unable to hold back from pressing him cock all the way into her till his balls were against her chin, again not hearing a single protest, simply a light moan of pleasure. He kept sliding in and out of her mouth for another couple of minutes, then pulled slowly back and out of her mouth, his cock even harder than before it'd gone in, making her give a little disappointed sound.\n\n\"You're missing out,\" she purred with a wry smile.<br/> <br/> \"I'll be the judge of that,\" he said with a smile, reaching down to tug her blindfold back over her eyes, his heart racing as he stepped away from her front, kicking his jeans and shorts off, his throbbing hardon leading him round the desk to her prone rear. Sliding his hand down her back, she shivered a little as he ran it over her ass, giving a positive squeeze to the firm cheek as he got behind her, letting that hand slide down between her legs, which she spread a bit more for him. Sliding over the edges of the suit, his fingers roamed over her soft pussy, stroking her smoothly waxed lips, letting his finger slip between them to feel her arousal, so hot and wet. Pushing his fingers up, he brushed over her rock hard clit, which had clearly been begging for a touch for ages, as she tensed up and whined in pleasure as the strong, almost unbearable sensation surged through her. Pulling back, he teasingly stroked up her slippery entrance, making her shuffle over the desk a little impatiently, before he just slipped his fingertips into her, stroking a little before he swapped to his thumb. He pressed his thumb to her snug entrance, then quite simply sunk it into her, making her gasp and arch tightly, using his other fingers to reach under her for her clit, massaging it firmly through its thin hood, pushing a loud groan of pleasure from her.\n\nHe rubbed at her for a minute or so, pulling back to delve two fingers into her, feeling her squeeze round him, clearly wanting it to be something else. Pulling them away, he stepped up behind her, which she could feel as he bumped her rubber coated legs, standing close to her and pressing his cock down to her dripping slit, just nudging the head in a little so he spread the puffy lips. He slid up and down with her abundant juices, his bulbous purple head just threatening to slip in, which he desperately wanted to do, but was trying to tease her. He couldn't resist any more as she shifted impatiently once more, pushing forward to just slip the head into her, past her entrance, both of them gasping as he initially penetrated her.\n\n\"Mmm that's nice,\" she murmured, squeezing at him as his hands slid over her ass, then down to her asshole. He'd read in an interview years earlier that she enjoyed anal sex, and couldn't resist testing it out. Running a finger round her ring, she wiggled a little with a throaty groan, trying to push back and take more of him in, before he pressed firmly at her anus with a finger, feeling her resist a moment before she relaxed, his finger sliding slowly into her ass, right to the knuckle as she sighed heavily. Pulling back, he thrust it into her a bit, making her squeeze him, her firm ass clenching and relaxing, inviting him to spank it with his spare hand, barely able to refrain from just driving his erection into the American redhead. He pressed his finger into her ass again, pushing a deep groan from her.\n\n\"You like that?\" he teased, carefully fingering her backdoor.\n\n\"Uh huh&hellip;do you?\" she shot back, playful attitude clear in her voice. She was basically offering herself, and whilst anal sex hadn't been the first thing she was intending to do with him, he was up for it and it'd be good fun, nice and naughty.\n\n\"Can I?\" he said after a pause, since whilst she might be less than subtly hinting, he wasn't going to try and fuck Gillian Anderson up the ass without her making it clear she wanted him to.\n\n\"I dunno, can you?,\" she replied matter of factly, laying prone over the desk, her juicy pussy still wrapped round the head of his cock. He couldn't resist her pussy right then however, and pressed forward, sliding his full seven inches into her slick haven, feeling her squeeze and contract on him as he pressed almost all the way into her, both of them groaning.\n\n\"Why don't you just fuck me?\" she gasped, sweating a bit in her suit now, and being turned on wasn't helping, and the fact his cock was buried in her.\n\n<br/> \"Because I want your ass,\" he said, resisting the urge to thrust and start pumping her, slowly sliding back out of her.\n\n\"Is my pussy not good enough for you then?\" she asked.\n\n\"Well of course it is, but this is your ass, it's special and I just can't turn that down,\" he said, as his head popped out of her, her inner labia clinging to it momentarily.\n\n\"What makes you think I'll let you fuck me later after you've finished with my ass?\" she said moodily as he moved up to position himself.\n\n\"You'll want it just as much then as you do now,\" he said, pressing forward a bit, feeling her immediately resist him. Reaching under her, he fumbled to her pussy and found her stiff clit, rubbing her firmly, immediately feeling her shiver.\n\n\"You're probably right,\" she breathed, moaning deeply as he rubbed her button. He pressed again, her tight ring just beginning to yield slowly, and dryly beyond a bit of her own juices.\n\n\"If you're gonna fuck me in the ass at least use the lube I brought with me, so you can do me nice and hard,\" she said with a devilish grin, turned on and making it clear how she wanted him to fuck her. He pulled back from her, a tense pause before he delivered a hard spank to her rubber ass, making her squeal and clench, worrying her he wasn't going to listen and just do her hard anyway. He wasn't though, just asserting himself, since she was the one handcuffed and bent over. He stepped over and found her bag, rummaging through it briefly before he located the little tube of lubricant she'd mentioned, uncapping it and returning to her. He squeezed plenty into his hand and spread it over his cock, making sure to get plenty round the head to penetrate her with, then put the tube to her ass, squeezing out a good blob. She hissed at the cold jelly, then mumbled in pleasure as he spread it round her tight ring, pressing a finger in to get it in her as well, then pulled back, leaving them both well prepared.\n\n\"I'm waiting big boy,\" she teased, trying to glance back though she was still blindfolded. He wasted no more time, stepping close and pressing his raging erection to her tight arsehole once more, pressing firmly. At first he slipped off her and up between her cheeks a little, before resetting himself and guiding his cock with his hand, pressing against her resistance, being rewarded as she relaxed and the head of his cock just glided nicely into her, stretching her easily and sliding through her muscled ring to lock the head in her with a little gasp from the lady herself. Taking hold of her hips, he pushed into her, sliding slowly all the way into her, quite impressed as her ass just swallowed his full seven inches till his hips pressed against her peachy rear. She gave a squeeze round the base of his cock, feeling it jump inside her, knowing he was raring to go.\n\nHowever he took his time, slowly sliding back full length, then slowly back in, just getting them both into it. For a couple of minutes he just slowly worked back and forth, not getting drawn in by the desire to pound her, Gillian a little impatient to get fucked, since she was so turned on. Her shoving back on him finally had enough affect to spur him on a bit and he picked up the pace, fairly tripling it from what it was, making both of them groan as he started to steadily pump in and out of her ass with just over half his cock. He made sure she took it balls deep each time though as he pumped at her, loving how her tight ass hugged him, and just enjoying the incredible view of redhead Gillian Anderson, encased in a black rubber catsuit, bent over before him with a cock up her ass. However, all this meant that he soon felt the rising of his climax. Having had a stiffy from the moment she emerged in her suit, he wasn't going to last long, and knew it was coming.\n\nGillian gave a gasp, her breath catching as he suddenly increased the pace, just stepping up to fairly pound on her ass, his hips slapping into her ass hard as he pumped in and out. She knew exactly what it meant, which was that he was about to come, and she decided she was going to help him out with that. He'd had an erection for far too long and needed some relief. Squeezing lightly, she tightened her ass a bit as he banged her over the desk, hearing him groan in return. Pumping into her, he was at the brink when she suddenly squeezed tightly, almost stopping his movement, immediately ramping up the stimulation to his cock as he plowed in. He managed to give her a couple more strained thrusts, before yanking out of her ass, leaving her gaping as she gave a little grunt of pain at the sudden withdrawal, gritting her teeth as he grabbed his cock and stroked himself fast, lasting only a few seconds before he burst, shooting a huge load of come up her back. Groaning loudly and shuddering, he pulled on his cock as it spurted over her back, the load unusually large because he was so horny, shooting his thick come up the black rubber suit, the first couple of shots landing almost in her hair on her shoulders. As he finished, giving a groan of relief and satisfaction, squeezing the last bit out onto her suit, the come stretched right down her back from her shoulders to her ass.\n\nGillian gave a giggle, having not come but not been expecting to really, she'd still enjoyed it, especially how she'd got him off. It wasn't every day she had an energetic young stud ass fucking her over a desk, so she'd enjoyed every minute of it.  \n\n\"Damn, that was fucking great&hellip;\" he breathed, his hand resting on her ass.\n\n\"Glad I could oblige, you were pretty good,\" she purred, pushing up into his hand a little.\n\n\"Thanks Gillian,\" he said, using her name for perhaps the first time before delivering a slap to her ass and stepping away, his breathing still heavy as she laid and waited for him to return to her, catching her own breath. He picked up his camera again, the whir and beeps telling her he had, and that he intended to photograph this moment, something that she'd never done before, but it was alright, it was all part of their&hellip;bond. She heard it beep as he photographed her from behind, taking in her unzipped suit, wet pussy and relaxed asshole in the process. Taking some other shots showed the come shot up her back, from various angles, before he moved round to her face again.",
        "<br/> \"Smile Gillian,\" he said, aiming it down at her in such a way as to see her face and the come down her back. Even though she was blindfolded, she lifted her head and flashed a dazzling smile, basically smiling at being a slut if anyone saw the picture, her cuffed hands also visible in the image. Having taken his photos, he turned the camera off, just thinking a second before he knelt down in front of her, then leaned forward and kissed her. Gillian was a little taken aback for a moment, a tad surprised he would, then melted into it, their tongues entwining as their lips locked, sharing a pleasant kiss before they broke apart as she gave a ragged breath. Standing up, he stepped round behind her again, running his hands over her smooth ass, before he reached down and took hold of her thighs firmly, lifting her and rolling her over on the desk as she gave a squeal.\n\n\"What are you doing?\" she asked quickly as he rolled her over, the handcuffs twisting as he put her on her back on the desktop.\n\n\"Returning the favour,\" he said simply, referring to the orgasm she'd given him, when she hadn't had one herself. She arched her back as he stood up next to her, running his hands over her smooth, shiny suit, over the swell of her breasts and smooth stomach, down to where the zip was already up to expose her pussy. Sliding his hands back up, he took hold of the top zip, pulling it down past her breasts, the rubber suit immediately sliding off them once more and then pushing them back together, her stiff nipples screwed up and eager to be touched. Pulling the zipper down to just below her ribs exposed her full C-cups completely, Gillian smiling as the fresh air spread over her skin, right before his hands did, immediately grasping her breasts. She gave a low moan as he squeezed her rack firmly, her stiff nipples pressing into his palms, which his fingers quickly located, giving them the squeeze she'd been dying for.\n\n\"Oh yeah that's good,\" she breathed, pulling at her cuffs as he lightly pinched and tweaked her hard nipples, groping her breasts fully again before he leaned down to her chest, breathing warmly over her to tease her, making her squirm before he made contact with her soft body. Kissing her soft breast, he planted a relentless series of soft, moist kisses over her inviting breasts, avoiding both her nipples, which he continued to play with, just brushing them teasingly as he pulled off, right before he put his mouth on one.\n\n\"Goddamn like that,\" she growled as he sucked firmly at her nipple, squeezing carefully with his teeth and attacking with his tongue, suddenly pulling off to assault the other one, leaving the first cooling in the air, making her gasp.\n\n\"Fuck yeah, just like that,\" she groaned, her body arching tighter as he squeezed her breasts up to attack them better. Tonguing all over them thoroughly, he massaging at her nipples and tasted her soft, smooth skin, running up her chest, sliding his tongue up her smooth neck, hotly along her jaw and then onto her mouth, where he delved it into her mouth and kissed her, which she eagerly returned with a moan of pleasure and her ruby lips. Pulling away from her, she lie breathing heavily as he grabbed his camera, turning it back on again, willing it to hurry up as the half naked Anderson lay before him. Focussing it in, he snapped some photos, the beep breaking their breathing as he took a range of photos quickly of her naked chest and pussy through the gaps in the suit. Discarding the camera once more, he got back to her, immediately squeezing her breasts, though only with one hand, as his other went straight to her pussy, rubbing over it, his middle finger sliding across her sensitive clit, making her writhe and whine.\n\nHis fingers found the lower zip once more, drawing it up to join the other one below her ribs, leaving her smooth tummy exposed. Moving round between her legs, he leaned down and kissed her smooth, pale stomach, sliding his tongue down her and round her bellybutton, before he continued south towards her crotch, waxed smooth and waiting for him. He wasted no more time, sliding straight onto it, attaching his lips to her clit for a quick suck, his tongue flicking at her hood and dabbing directly at the button itself to make her breath catch in her throat.\n\n<br/> \"I had that thing waxed for a reason, this is it,\" she purred as he slid his tongue down her slit, delving it straight into her juicy haven, feeling her walls squeeze in on his powerful, wiggling muscle. He wasn't sure if that meant specifically for today or in general, but he didn't care right then as he tasted her slippery pussy. Delving his tongue as deep as he could, he reached up to rub at her clit with his free hands as his other caressed her thigh, refraining from helping himself as his cock was now absolutely rock hard again. Pulling his tongue out, letting her muscles force him out, he moved right down to the bottom of her entrance, then dragged his tongue flatly up her soft labia, the lips yielding beneath it as he moved to the top, then dragged back down with the soft underside of his tongue, making her groan once more.\n\n\"Oh god don't hold out on me, lick my fucking pussy!\" she shouted, wanting her clit paid proper attention. He didn't disappoint her, immediately locating it and giving it a suck, causing her to buck her hips. Her thighs tensed and she let out a long groan as he started nibbling at the delicate nub, attacking it with his tongue as he held onto her legs to keep her from kicking as he knelt between them. She was almost as bad as him, and after being turned on so long she just couldn't hold off any longer, her orgasm bursting through her body as he brushed her clit with his teeth, his tongue still attacking her briskly. She let out a piercing squeal of ecstasy, almost hurting his ears as he worked at her, tongue and jaw aching, her body giving a tremendous shudder, her back arching tighter as he orgasm flowed through her, a tingle racing up her spine to her brain as her squeal went too high to be heard by anything but dogs.\n\n\"Oh god&hellip;\" she groaned through heavy breaths as her climax passed, her body hot and sensitive, almost to the air from her good hard orgasm, a big smile on her face from the peak. Standing up, he smiled as he took hold of her ankles, easily holding the grippy black rubber as he lifted her legs up, using them to lift her hips and position her perfectly at the edge of the desk so he could fuck her. Holding her legs, he wasted no time sliding in between them, his cock standing erect over her pussy. As he released a leg to position himself, she lowered it to his waist and hooked it round him, just holding off as he released her other one and pressed his cock down to her waiting snatch, pressing the bulbous head at the slick entrance to her pussy. Her legs tensed round him, pulling him into her, which he let her do, just thrusting a little to drive into her juicy haven once again, only this time he was going to fuck her, and hard.<br/> <br/> \"Don't you dare fucking hesitate on me this time!\" she almost snapped, gritting her teeth as he thrust into her balls deep for the first time.\n\n\"Shut up and let me fuck you,\" he responded, equally gritting his teeth as he plunged himself into her squeezing cunt. They were both well into it, Gillian lifting her hips to meet him, pulling him hard into her with her powerful legs, wrapped around his arse, her ankles crossed behind him as he thrust into her, not waiting and immediately building up a good fast rhythm, stroking in and out of her as she clenched and writhed, grunting and groaning beneath him as she pulled at her handcuffs. She was positively loving this, as not only had she not had her pussy filled by anything other than a toy for a while, but he was also fucking her because he wanted her. Not Agent Scully, a hormone-fuelled fantasy for so many men that they expected of her in bed, but her, Gillian Anderson.\n\nHe looked down to watch his cock thumping in and out of her smooth pussy, the lips hugging every contour of his shaft her powerfully pumped in and out, giving it to her full depth every time, his head bumping her cervix and making him mumble with pleasure as he banged her C-spot, which made her contract on him every time, pushing an equal groan from himself. Holding her rubber coated thighs, he pulled himself into her powerfully, her pussy just so delightful, making fucking Gillian Anderson even better than he ever hoped. Of course he'd seen the X-files. She was downright hot in it, but it was her behind the character and that's what he'd always lusted for. Sliding his hands up her smooth, rubbery sides, he took in her waist, pulling down against her hips to thrust into her, pushing a throaty grunt from her, her breasts bouncing invitingly.\n\n\"Harder,\" she growled as he pumped into her pussy, her hips rolling and jerking to try and help him get everything into her he could. He allowed the natural friction from her suit, which was transmitting everything to the shaking, creaking desk that was never designed for a hot women to get fucked on its top, to hold her in place and slid his hands up to her chest, taking in her ribs as he slid them to her ample breasts, firmly grabbing both her jugs and giving a good squeeze, making her back arch further as she gave a deep, guttural groan, her body shivering, pussy squeezing, sending a reminder that he wouldn't have long in her hot pussy before she made him come. She however was much closer, enjoying herself thoroughly as his fingers sent little lightning bolts to her soul through her nipples as he pinched them, the hardest he had at any time, and it was the right time, just before he lowered his hands again. Taking her left leg, he lifted it up and hauled her knee over his shoulder, grasping her thigh strongly as he started to pump her intensely.\n\n\"That fucking hard enough?\" he gasped, sweating hard as he fucked her, her other leg slipping from him and hanging limply off the desk as her body swam in pleasure.\n\n\"Yeah&hellip;don't&hellip;stop,\" she whined, his spare hand finding her pussy and stiff clit, which made her yelp as he touched it, her body shuddering it was so sensitive. Rubbing firmly, he ignored her attempted protests about it being too much, ramming into her hard, the desk rocking wildly as he briskly stimulated her clit, his fingers a blur over the intimate nub, which was far too much to take, her body stiffening on the desk, her pelvic muscles clenching tightly round his cock. She let out a scream of pleasure, her hips bucking powerfully on his cock as her muscles set about milking at his cock, taking him to the brink, especially as they squeezed his swollen head just right. Her climax fading, she breathed heavily, sweat causing her make-up to run slightly.\n\n\"Want that fucking blowjob now?\" she growled. He didn't need asking twice, yanking out of her pussy sharply, close to coming as he quickly got round to her head, which she turned over to greet him, opening her mouth. He slid straight in, not being polite now as he grabbed her hair, thrusting quickly in and out of her mouth as she sucked and tongued him expertly. It only took around ten seconds of her technique and the thrusting into her hot mouth to finish him off, which he did with a flourish, pulling out of her mouth but at the same time letting go of her head, ripping her blindfold off with it. She blinked in the sudden light as he grabbed his cock, jerking off rapidly for a moment before he came hard, Gillian closing her eyes in the split second she realised what he was doing, right before his first spurt landed across her face, across her cheek and into her luxurious red hair as she gave a surprised gasp. She turned her head up straight, letting him have his moment as he unloaded on her, further spurts streaking her nose, forehead and lips as he gave her an impromptu facial. He stepped away from her, both of them just gasping for a minute or so after the energetic sex, his cock softening, blood flowing back to his brain and making him wonder quite how to handle this, till she answered it for him.\n\n\"Get your camera,\" she breathed simply, knowing he wanted to, and she kind of wanted him to as well, since she'd gone this far. He pulled himself together, pulling his shorts on from where they'd been discarded on the floor, then found his camera after a confused moment, having forgotten where it'd gone in all the exuberance. Turning it on, he took a deep breath and calmed down a moment, then got closer and started taking photos once more, of her legs hanging over the edge of the desk, her wet, smooth pussy, exposed body and breasts, pert nipples standing up still, her cuffed profile over the desk from the end, and of course of her face, and the mess he'd left on it. She spiced it up as she posed for those, with eyes closed, smiling, winking, pouting, and finally licking it from her lips, which was practically enough to induce another stiffy. With the photos taken, he put the camera down and unlocked her, Gillian sitting up on the desk, rubbing her wrists and then her aching back, strained by the position she'd been in.\n\n\"You ok?\" he asked tentatively, unsure how she'd be after what had transpired.\n\n\"Yeah. I think we should do another photoshoot sometime,\" she purred, slipping off the desk onto her feet with a stretch.\n\n\"Really, wow that'd be great, you're such a good model,\" he gushed, smiling excitedly at the thought of any kind of repeat performance.\n\n\"Yeah I can help you out, and perhaps a friend of yours needing a model,\" she said with a quick wink. His heart missed a beat and he felt a rush of nerves and excitement in his chest at what he thought she'd just implied, which she didn't expand on, just giving a teasing, playful smile and walking past him towards the bathroom to clean herself up. He found his jeans and got them back on, then reviewed a load of the most recent photos on his camera as he waited for her to wash up, which took a few minutes as she washed her face off and stripped out of her black suit, since she wanted to put the clothes back on that she'd worn in the first place. He heard the door and looked up, his breath catching and then turning into a ragged sigh as she walked completely naked from the bathroom carrying her black rubber suit. He just stared as she stopped, smiling and then striking a pose, hands behind her head as she arched her back to show off her nudity.\n\n\"Don't you want a picture of me like this then to go with the rest?\" she giggled, spurring him into action and raising his camera, quickly taking a photo. She played the good model and went through a few poses, acting coy and shy in a couple of them, more brash in others, letting him take her in completely in her purest form.\n\n\"There, all the pictures you need I think,\" she said, walking back to the screen to find her clothing from earlier. \n\n\"More than I could ever hope for,\" he said, putting his camera aside as she picked up her little black thong and slid into it.\n\n\"Well I'm glad I could do my bit for your assignment,\" she said with a sly smile as she slipped her bra on, hooking it up and taking her jeans from the screen.\n\n\"Oh these will get my assignment done for sure, that suit really did work the light great,\" he said, genuinely meaning the ones that were suitable for his college work as she pulled her snug jeans up.\n\n\"Good, just make sure you don't let any&hellip;private research get in there huh?\" she said as she did her jeans up, meaning the hundreds of photos he'd taken of her.\n\n\"Oh of course not, I'll keep them for&hellip;personal reflections,\" he said with a smile as she pulled her top over her head, hiding her nice breasts from view in their supported state, smoothing her hair out.\n\n\"Good boy,\" she said, kicking her shoes over and stepping into them by the desk, before finding her bag. Stuffing the black suit back into it, she found a card with her details on and turned to hand it to him.\n\n<br/> \"Thanks, I'll definitely be wanting that,\" he said with a smile, \"always be needing my number one model.\"\n\n\"Number one, only one,\" she laughed, stepping over, then leaning up and giving him a good firm kiss, her tongue delving deeply into his mouth before she pulled away and he showed her to the door.\n\n\"Until next time,\" she said, turning and stepping out the door, glancing back with a grin as he cheekily reached out to pinch her bum as she started to walk away&hellip;\n\n______________________\n\nTo be continued&hellip;\n\nBig thanks to Ghost for helping create, plan, check and edit this story.<br/> <br/> As usual, E-mail me with any responses and thoughts. I like reading your feedback and suggestions, so Please let me know whatcha think!"
    ],
    "authorname": "Noj",
    "tags": [
        "gillian",
        "anderson",
        "catsuit",
        "photoshoot",
        "latex",
        "rubber",
        "leather",
        "kinky",
        "anal",
        "x-files"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/gillian-anderson-skintight-shoot"
}