{
    "title": "Sounds Good Ch. 03",
    "pages": [
        "I checked my computer (in the game). Inventory. \n\nHeather - In Love \n\nWow - talk about progress. We'd skipped from boyfriend/girlfriend (with a question mark) to full-blown lovers. Oops. I only realized afterwards that I'd made an unintentional pun. A bad one. \n\nUnfortunately, my next date with Heather was a crushing disappointment. It was an identical repeat of our last date - right down to the oral sex ... and the moaning. \n\nI had the feeling, then, that I'd reached the end of the content for Heather in this version of the game. Maybe I should've expected it. \n\nI thought about starting over, to pursue one or more of the other girls, but decided to just keep playing. After all, I'd accumulated a bit of money, and my relationships with Michelle and Nalani were reasonably well-advanced. Why not just carry on? \n\nThe next time I spoke to Nalani, she asked me straight out - just as Michelle had - \n\nHow are things with you and Heather? \n\nMy options were: \n\nWe're dating \n\nHeather who? \n\nWe're just good friends \n\nI think I'm in love \n\nI don't think it will work out between us \n\nIf I'd had the rest of a completed game ahead of me, I'd have chosen the fourth reply. Heather was a nice, sweet girl (who'd given me my first handjob, and my first blowjob). She didn't deserve to have me deny my interest in her. \n\nA bird in the hand, and all that. \n\nBut given that I couldn't make any more progress with her until the next release, I clicked on the last option (though the 3rd made some sense, too). \n\n- That's too bad. said Nalani. I liked you two together. \n\nRemarkable. I saved the game, and called it quits for the day. But I'd be lying if I said that I didn't think about what had just happened for a long time afterwards. \n\n*** \n\nWhen I went back to the game, I discovered that all of the roommates knew that Heather and I had ... been intimate. \n\nHad they heard us, through paper-thin walls? Or was there some sort of psychic telegraph, that immediately informed the other girls when one of them had sex? \n\nI decided to gradually move Michelle and Nalani to the same level - Intrigued - one step past 'Close Friend'. I would also wait - to find out how long I could ignore Heather before our relationship dropped from 'Girlfriend' - would it go back to 'Intrigued'? \n\nNo - not realistic at all. But I had a few suspicions about the mechanics of this unusual game, and I was very curious to see if I was right. \n\nI was already impressed by the replay potential of the Apartment: 5 very different girls, with 5 separate occupations for each one - not to mention the 4 other occupations I could have chosen for Tristan. \n\nNalani, it turned out, loved gifts - any gifts. Her Thank you!, and OhmyGod - thankyouthankyouthankyou were a delight to listen to. Her voice was smooth, almost silky. She also enunciated every word extra carefully, just as someone who had learned a second language might do. \n\nHeather had only liked certain gifts. Michelle didn't seem to care, one way or the other. I tried a few different gifts on her, without success. When I gave her the perfume, there was a funny illustration of her walking away from me, looking back over her shoulder. \n\nI could clearly hear her, singing softly into my headphones: Can't buy me lo-ove ... \n\nAdmittedly, I didn't have all the information. Would Michelle's attitude to gifts change if we were boyfriend / girlfriend? Or was she simply that rare kind of individual - a non-materialist? At this point, I was the one who was intrigued. \n\nTwo weeks of game time. That's was how long it took for Heather's relationship status with me to drop back to 'Intrigued'. In that same period, Laura and I had progressed to 'Close Friend', while Ronnie and I were still relative strangers. \n\nBut both Michelle and Nalani were 'Intrigued'. \n\n*** \n\nReal life \n\nI had a series of online tests, and a paper due at the same time. Far too much of college and university education seems to consist of stress and ridiculous deadline pressure. \n\nDeadlines make sense, of course. I understand that. But does every job involve dealing with near nervous breakdowns? My own stress wasn't out of control, but I'd had friends who'd gone through incredible pressure two or three times a semester. If this was all in aid of preparing for us for a 'real' job ... well, I wasn't sure that I wanted that kind of work. \n\nThe steroids make me hyper, as I think I mentioned. That's not the best way to handle pressure and stress. I got the work done, but it came with a cost. \n\nFor a couple of weeks, I had to stay away from the game almost entirely. I did send Mike and his friends an audio critique, with a few observations (and several more compliments). I also apologized for what I knew was coming. \n\nI may not be able to play much for the next week or so. Sorry about that - it's no reflection on your excellent game. \n\nPatience responded the next day: No need to apologize, Cyrano. Real life takes precedence - always. Good luck with your tests and your paper. \n\nMike replied a couple of days later. No worries. Do what you gorra do. \n\n*** \n\nWhen I returned to the game, I was looking forward to dating Michelle and Nalani. \n\nWell, you win some, and you lose some. \n\nNalani needed help again. Her computer was on the fritz, and she had a paper due (Hah! That, I could relate to). I offered to lend her my computer, for her assignment, while I tried to figure out what was wrong with hers. \n\nTurning it on and off again didn't work (you'd be surprised how often that's all it takes). She might have picked up a virus, so I ran a diagnostic, which took a hell of a long time. Maybe she just had too much garbage on her computer, or insufficient memory. \n\nI checked her browser history, to see if she'd downloaded something nasty. There were travel locations, family photos ... and quite a few searches of ... my name. \n\nShe'd googled me repeatedly. \n\nIn the end, I discovered that she just needed a re-frag, and a re-boot. Meanwhile, she'd managed to complete her paper on my computer. \n\n- You're a lifesaver. she said. \n\n- It wasn't that hard. I explained her computer issues to her, and advised her to delete a few unnecessary programs from her hard drive. \n\n- My hero. How can I possibly reward you? \n\n- Umm ... a coffee? And maybe a bagel? \n\n- Done. she said. Snogg came through with a wonderful illustration of Nalani, smiling. \n\nWe agreed on Saturday at midday. \n\nNalani was tiny - 5', or possibly 5'1\". She was adorable, though, with perfectly-proportioned little curves. Her make-up was always perfect. She also had a tiny diamond stud in her nostril. \n\nNice to look at, for sure - and her voice sounded good to me, as well. \n\nMy options, for that first date, were very similar to the choices I'd had with Heather; I went with asking Nalani about herself, and how she'd come to be studying here. \n\n- I was in a long-term relationship. she said, softly. My family chose him for me. \n\n- Oh? You didn't have a choice? \n\n- No - but it wasn't like ... whatever you were thinking. He wasn't cruel, or mean to me, or anything. I was in love. I thought we would be together forever. Marriage, children ... \n\n- What happened? \n\n- He cheated on me. Two months before the wedding. My parents told me to get over it; it was too late to cancel everything, anyway. They would lose their deposit. \n\nBesides, they said, I should understand - men have certain needs. \n\n- That's awful! I said. Is that why you came here? \n\n- Yes. \n\nSnogg's next illustration showed Nalani bravely smiling through her tears. It was really quite touching. I immediately saved a screenshot. \n\n- Can we talk about something else for a bit? she asked. \n\nI asked about her classes, and she told me what was going on at school. Not in detail - there was a box of script that informed me that Nalani talked about her classes. \n\nNot at all what I'd expected for a first date. The game had thrown me a curve again. But I wasn't disappointed. I was impressed. \n\n*** \n\nReal Life \n\n- \"Mom ... I can go by myself.\" \n\n- \"I know you can. I just want to make sure that you get home safely.\" \n\n- \"I'm not a little kid anymore.\" \n\n- \"I never said you were. But I would much rather have you underestimate how much you can do, than overestimate it.\" \n\nDamn. It was hard to argue with her when she was so rational and sensible about everything. \n\n- \"I understand.\" I said. \"But how about this? You drop me off, and I'll call you when we're done, to let you know that I'm on my way home.\" \n\nShe didn't immediately say No. Instead, she thought about it for a minute. \n\n- \"Alright, Daniel. We can try that.\" \n\nA partial victory, then. \n\nI could order her gifts online; I could even have a cake delivered. But I just wanted to get out on my own and buy her a traditional birthday card, for a change. \n\n*** \n\nMy second date with Nalani was not at all like Heather's. Sometimes, the choices in this game weren't difficult at all. If you were paying attention, there was no need to guess. \n\nNalani had already told me that she didn't drink - asking to her to go to the pub with me didn't make any sense. \n\nWe went to the museum. She loved it. There was a lovely illustration of little Nalani pointing at a huge painting, looking back towards me with a huge grin on her face. \n\nShe'd been here before. In fact, she was more than qualified to be my private tour guide, telling me interesting anecdotes about the various exhibits. \n\nAnd she giggled. Now, I wouldn't have thought that I would like the sound of a feminine giggle. There had been a few gigglers at the school Mike and I attended. Maybe I didn't like the way they sounded because I suspected that they were laughing at me, or my braces. \n\nBut Nalani was different. I'm not saying that I wouldn't have tired of her giggle after ten or twenty years ... but in the short run, it brought a smile to my face. \n\n- You're an awesome tour guide. I told her. \n\n- You make a pretty good tour group. she replied. \n\n- What's next? \n\n- You're not tired of me, yet? \n\n- Hardly. \n\n- Okay. I have one more thing to show you, then. \n\nNalani took me back to our apartment - and to her room. \n\nMy only complaint - if I'd had one - was that this happened so quickly. Two clicks, and we were back in the apartment. \n\nIn real life - what would it have been like to walk home together? Hoping - or maybe even anticipating - that we were going to be ... intimate. Something I couldn't do in real life, but which this game was allowing me to experience, vicariously. \n\nNalani's room was very girlish, with pillows and plushies and frilly things. But the next screen showed a close-up of her face. The little diamond stud in her nostril was sparkling. \n\nHer dark brown hair partially obscured one eye, but she was looking towards me. Her lips were moist - lip gloss? Her mouth slightly open ... it was a lovely portrait of a beautiful woman, showing ... lust? \n\n- I wanted to show you ... this. \n\nThe next render nearly blew my mind. Nalani had undone the buttons on her black silk shirt. She wasn't wearing a bra. \n\nHer breasts were small, but her little brown nipples were hard, and prominent. She was looking away, as if too shy to meet my gaze - or perhaps she was letting me gaze my fill, without feeling shy or embarrassed myself. \n\nYou step closer, and take her in your arms. Nalani buries her head against your chest. \n\nYou tilt her head up, so that you can taste her lips. She is soft, and moist, and yielding ... she lies back on her bed, and you follow. \n\nThe script took over, again. I had no choices - but did I really need them? Nalani's eyes were clouded - with arousal, I assumed. Her lips were parted - I noted that her teeth were bright white, but Snogg had gone to the trouble of showing that they weren't perfectly aligned. \n\nIf anyone could appreciate imperfections, it would be me. Her little breasts and delightful nipples were exposed to my gaze. So was her flat stomach, and her pierced navel - she had another small diamond stud there. \n\nPatience's description took over. I kissed Nalani, and sucked on her tongue. I fondled her breasts, and kissed her erect nipples. \n\nThen I slid my hand over her smooth skin, and under the edge of her lacy black panties. I ran my finger over her moist slit, discovering that she was wet ... aroused. \n\nThere were no options - only description. I teased Nalani with my fingers, while she moaned softly. \n\n- Ah ... ah ... ahh \n\nI teased her. I frigged her. I inserted a finger into her pussy, and then a second. My thumb rubbed lightly over her clit. \n\nNalani's orgasm was quiet, but intense. \n\nAnd that was that. \n\nWow. I was impressed again, by the visual and audio components of the scene. I was also pleased to see that the progression (for lack of a better word) with each girl was quite different. \n\nHeather had given me a handjob. But it was me who brought Nalani off ... manually. Perhaps I'd been afraid that each girl would follow a predictable, identical sequence of intimacies. The variety was excellent. \n\nAnd I had no complaints about Nalani's scene. Hot. Very hot. \n\n*** \n\nI composed another audio review. I had more praise for Snogg, as always. But I told Patience that I was really pleased with the story line, and emphasized how glad I was that the sexual scenes didn't all follow the same predictable pattern. \n\nThe girls had different personalities and preferences (from their taste in gifts to their favourite spots for a date). It was also very interesting that they knew about the player's relationship status with their roommates. \n\nTrying to have sex with multiple girls was likely to backfire. The player would be well-advised to concentrate on a single love interest - exclusively. A bird in the hand, apparently, was worth more than two in the bush. \n\nFinally, I suggested that they seriously reconsider their title. In my opinion it didn't say much about what type of game this was. 'The Apartment' was just too generic. \n\nIn the meantime, I continued to woo Nalani. I discovered that she was a bit 'clingy' - she liked to touch me, or hold my hand. She also wanted to be told that I liked her, or that I found her attractive. \n\nI didn't mind the touching. After all, I was only reading about it. I'd never had a real girlfriend (or even a near approximation); maybe I would like to experience frequent physical contact. As for her apparent insecurity ... well, everyone needs reassurance, now and then. \n\nThere was another surprise in store for me: I'd accumulated more than enough money to take Nalani on a restaurant date - all I was waiting for was the conversational option to ask her out again. \n\nI got the option to ask - what I didn't see was the usual choices: museum, cafe, pub, restaurant. That's because Nalani had something else up her sleeve. \n\n- Of course I want to go out with you, Tristan. she said (well, everything except the name). But ... there's a special performance in the park this Saturday. Would you be interested in going to the concert with me? \n\nWhat a wonderful idea. \n\nLaura and Ronnie were working, but Michelle and Heather were also going to the park. There was nice illustration of Nalani sitting on the grass, hugging her knees, with a shy smile. \n\n- Isn't this wonderful? she asked. \n\nIt was. She was so sweet, so pretty. Nalani had a cute little smile, but I think that I preferred illustrations that showed her in profile, when she was looking elsewhere, rather than directly at me. \n\nAfter the concert, she suggested that we go back to the apartment. Then, she followed me to my room, and closed the door behind us. After that, though, she let me take the lead. \n\nThere was a bit of text, describing how I unbuttoned her shirt, and removed it, along with her lacy little bra. We kissed, and kissed some more as my hands roamed over her small breasts and their hard little nipples. \n\nShe was moaning softly in my ear, which was very ... encouraging. \n\nThen I was presented with a choice. That was odd - it broke the immersion rather suddenly. One moment I was caressing Nalani's breasts, the next, I was wondering why the game had been set up this way. \n\nBasically, I was offered the option of dropping my pants, and guiding her hand to my erection, or gently removing her pants, and going to one knee in front of her. \n\nOf course, I was metagaming. Sometimes, that simply means that a player is using information which their character wouldn't have. But it can also apply to thinking about the game as a game, and wondering about the rules and limits, instead of just role-playing and doing whatever felt most natural. \n\nIt was unlikely, I thought, that this scene with Nalani would lead to intercourse. It was probably - just like the scene with Heather - limited to oral sex (not that there's anything wrong with that). \n\nSo I was probably being given the choice between sticking my dick in her face and hoping that she would get the message, or going down on her. In this case, role-playing and metagaming were in near-perfect alignment: the second option was the best. \n\nI was rewarded with a truly lovely illustration of Nalani on her back, her wide-open shirt still wrapped about her upper arms and shoulders. Her breasts and belly were bare ... and so was something else. \n\nShe had one leg slightly raised, with her panties still clinging to her ankle. \n\nThat was, hands down, one of the best pieces by Snogg that I'd seen so far. It had anticipation. The prospect of pleasure, and intimate sharing. So much potential ... \n\nOf course, that was how I imagined it. I had no actual experience of anything at all like this. I'd seen plenty of porn, of course. I knew what naked women looked like - and I was well aware that there was great variety in female bodies. \n\nBut how it felt ... or smelled, or sounded? Reading, watching porn and a vivid imagination can only take you so far. \n\nStill, Nalani's scene felt realistic enough. I think. \n\nThe text described my painstaking oral attentions, and her rapturous enjoyment of said attentions. Nalani had a highly satisfactory orgasm - judging by her vocal reactions. \n\nShe then repaid the favor, going down on me. She was a little more tentative, almost hesitant. But she seemed determined to give me as much pleasure as I'd given her. \n\nSnogg's render of Nalani performing oral sex on Tristan was very good. But I didn't masturbate to that scene. \n\nIn fact, I didn't even save at that point. \n\n*** \n\nWhat I did was shut my computer off, and then make my way to the bathroom. \n\nI can't speak for others, of course, but one thing that steroids do to me, is to play havoc with my moods. The doctors gave me chapter and verse about the potential side-effects of corticosteroids; they were all, without exception, physical symptoms. \n\nBut I knew that I was on steroids. Maybe it was some kind of placebo effect, but I felt different. That played tricks with my head. \n\nAnd then there was just ... my situation. It wasn't going to change - not for the better, anyway. It doesn't prey on my mind, on a daily basis, but sometimes the realization comes crashing down, all at once. \n\nMy sister had had a friend who suffered from severe mood swings. A chemical imbalance, they called it. The girl had described what it was like for her. ",
        "Elation and exuberance are great; but when you go in the opposite direction, you get depression. After a while, you grow accustomed to a certain cycle of ups and downs - and that's even worse. \n\nThink of a roller-coaster: as you approach the highest point - the peak - you know what's coming next. The long drop, that sick feeling in your stomach as you plunge downwards. \n\nThe odd thing is, when you're all the way down, at the bottom of the well, you aren't thinking that you'll soon be back on the way up, or that things will get better. Instead, you think further ahead - after a brief moment on top of the world, you'll be dropping like a stone again, into the black depths of depression. \n\nNo, I'm not suicidal. Far from it. But that's not to say that I don't have a little bit of understanding for those that feel that way. \n\nMom can always tell when I start to get down. She can see it in my face, or hear it in my voice. \n\nThat's when she performs a mini-intervention. She'll make me watch a movie with her: Shawshank Redemption, The Usual Suspects, or Lord of the Rings (sometimes all 3 films). She knows, from experience, that beautiful, well-crafted art cheers me up. \n\nBut I was having more trouble than usual. \n\nBecause beautiful, well-crafted art was causing my sadness. \n\nThe Apartment was just a game. But it was well done, compared to many flawed or shoddy games in the same vein. Snogg's art was superior. Patience had a good feel for believable dialogue. And the voice actresses were excellent. \n\nAll that did, though, was remind me that I'd never caressed a breast, or ... licked a pussy. I'd certainly never had my cock sucked. \n\nAnd in all likelihood, I never would. \n\nThe beauty of The Apartment, and the skill behind it, were inspirational. But to be so poignantly reminded that I'd never enjoy the intimate connection that Tristan could have with his roommates ... that was hard to take. \n\nWhich came first? Did women want to have sex with men that they found attractive? Or were they attracted to men they wanted to have sex with? \n\nI'd begun to classify the girls in the game. \n\nHeather was the once-damaged girl, whose friends supported her. Nalani was the high-maintenance romantic. Both had been dealt a shitty hand in life, and were working to overcome it. \n\nWhy I had chosen to pursue those two first? \n\nLaura was the party girl, boisterous and fun. Michelle was everybody's confidante, the den-mother, in a way. As for Ronnie, I still wasn't sure. The mystery girl? The recluse? \n\nIn real life, would any of them spare me a second look? I probably needed more than two looks anyway. Four? Five? \n\n- \"Lord of the Rings.\" said Mom. \"Extended edition.\" \n\n- \"You don't have to -\" \n\n- \"I'll make the popcorn.\" \n\n*** \n\nMike responded to my audio review first. \n\nAwesome review, Dan - even if it probably means more work for me. I never liked the tile either. Neither did Patience - she's already a few arguments with Snog about it. \n\nKeep up the good wprk! \n\nWait. She? \n\nI re-read Mike's email several times. Missing letters, a missing word ... typical Mike. But was that extra 's' a typo? Or was Patience ... female? \n\nDid it matter? \n\nPatience responded to my critique later that same day. \n\nHey Cyrano \n\nSorry it took me so long to get back to you. I really liked what you had to say. \n\nSnogg and I have had a running battle about the title from Day One. That's in addition to our disagreements about the opening screen, and the music. Mike agrees with me (I think), but he doesn't want to come between us, so he keeps quiet, for the most part. \n\nYour comment was especially effective because you've been so generous in your praise of Snogg's renders - he thinks you're great. \n\nI was also pleased that you recognized the absence of a predictable pattern in the girls' sexual behavior. Last thing I wanted was a repetitive formula: get to 200 points - handjob. 300 points - blowjob, and so on. \n\nI'm so very glad that you approve. I tried hard to make the girls different. \n\nKeep up the critiques - we've all benefited from your observations. \n\nAll the best, \n\nPatience \n\nThere was absolutely nothing different about this message. Patience had already sent me four or five emails which were virtually the same. \n\nExcept ... was Patience a girl? \n\nI was curious. I mean, she wrote well, both in terms of grammar and spelling, but also in the sense of crafting a good story. She seemed like a nice person, too: her emails were always polite and considerate. \n\nDid it make a difference if she was female? It did, I suppose - and it didn't. \n\nI sent Mike an email: \n\nHey Mike \n\nHope things are going well for you, with the coding, and with Angie. \n\nJust curious: is Patience a girl? \n\n*** \n\nI'd seen all of Nalani's content - for this version of the game, at least. It was time to try another girl's path. \n\nLaura and Michelle had diametrically opposed schedules. I could gradually make progress with both of them while I worked to accumulate more money. Truth be told, I wasn't entirely sure which girl to concentrate on. I liked them both. \n\nMichelle was 5'7\" or so, with caramel-coloured skin and black hair. She must have been going to the salon stylist daily: in some illustrations she had straight hair, but in others she had tight curls. \n\nHer facial features were striking, too, but I also liked her voice: it was warm, and a little deeper than the other girls. She had a throaty sort of chuckle which I found very appealing. \n\nLaura was a little shorter, but her black hair was longer - halfway down her back, at least. She had creamy skin, dark eyes, and ... well, just about every picture of Laura emphasized her rather large ... bosom. \n\nI thought that she had a very pretty face, and an exceptional smile. Still, it was hard to ignore her most obvious features. \n\nI liked her voice, too - especially when she said her own name. La-ow-ra. \n\nThe two girls were very different. Michelle liked to stay in, and watch old movies. Laura loved to go out. Michelle generally spoke softly; Laura could often be heard from across the apartment. \n\nI was having a conversation with Michelle, who asked me if I could run to the grocery store to pick up a few items. \n\n- Milk. Butter. Eggs. Michelle was slightly bent over, looking into the fridge, enumerating the items we needed. Her back was to me, so that I could examine her form (and especially her shapely backside) at my leisure. \n\nThat's when I heard Laura's voice in my headphones, as if she was shouting from the other side of the apartment. \n\n- Tell him we need cream for the coffee, too! \n\nI had to smile. I could see why Mike had told me that the voice actresses enjoyed recording their lines. They must have had fun with a few of their scenes. \n\nIn the next illustration, Michelle had turned around, and was looking directly at me. \n\n- Were you checking me out, Tristan? she asked (without my name, of course). Or just my ass? \n\n- I'm only human, Michelle. was the best option for my reply. \n\nLaura also asked me to go the store - but only for her. \n\n- We're having an engagement party for one of the girls at work. I forgot to pick up a bottle of wine. Would you mind ... getting one for me? Then she worked that wonderful smile on me. It seemed to suggest that if I did her this favour, that we'd be friends for life. \n\nLittle did she know ... I'd have done it just to hear her say Thank you. \n\nI got her a medium-priced bottle of wine (about $25). Laura thanked me, and gave me a kiss on the cheek. \n\n- You're a sweetheart! she said. Then she handed me $20. \n\nI had the option to tell her that the wine had cost more than that. \n\nNot likely. Five dollars - versus a kiss on the cheek and her lovely Thank you? I was well ahead on that deal. \n\nThe next day, I was surprised when Laura came to find me in the afternoon. \n\n- My friend Katrina was really pleased with the wine. She's had it before. And guess what else she knew: it sells for $25. \n\n- Oh? \n\n- Oh, my ass. Why didn't you tell me it cost more than I gave you? \n\nI had some interesting choices: \n\nIt was only five dollars \n\nIt was on sale. I got it for 20 \n\nFor you, Laura ... anything \n\nI've always been pretty bad at math \n\nI liked the last option best. So did Laura. She laughed. \n\n- The hell you have! \n\nThen she leaned forward, to tuck a $5 bill in my shirt pocket. She leaned further, so that her lips were next to my ear. \n\nYou're an even bigger sweetheart than I thought. she whispered. \n\nI made a note to commend Patience (again) for her writing, and the voice actresses for their work. Here I was, trying to seduce (and, to be crude - seduce and fuck) these girls, and the game made me feel like a decent guy while I did it! \n\nThat may not seem like a big deal to you, but there are other games out there, where the player gets into the girl's pants by deception, or even by outright blackmail. Then there are the mind control games, or the magical powers ... \n\nMaybe I'm a bit of a romantic (says the guy playing porn games ...), but I prefer the older type of stories, where the knight errant does valiant deeds to earn the esteem of the lady fair. Slaying dragons, rescuing her from leering villains - instead of being the leering villain. \n\nChivalry doesn't have to be dead. Maybe my Mom was right, and I was 'an old soul', as she sometimes called me. \n\nBut there was something about this game that struck a chord with me. \n\nThe girls were well-developed characters, each one with a personal history, and some idiosyncratic behaviour and personality traits. \n\nThe way to win their hearts was simple: be honest, and do nice things for them. Maybe a feminist would be unhappy with that type of scenario. But it sounded a thousand times better to me than deceiving a girl so that you could take her to bed. \n\nI got some of those ideas into my next audio critique. \n\n*** \n\nMike responded to my email (before I'd sent my audio review) \n\nHey Dan \n\nThings are good. Busy. \n\nListen - plaese don't ask Patience about her gender. Yes, she's female, but you didn't hear it from me, ok? She doesn't want people - specially players - t kow. \n\nT kow? Ah - to know. Mike's unintentional shorthand. I sent him a quick reply, to reassure him that I wasn't going to spill the beans. He must've been worried: he'd called me Dan, instead of Cyrano. \n\nI went back to the game. \n\nIt was simply too difficult to choose between Michelle and Laura. Both of them were at the 'Intrigued' stage. I resolved to let the Fates decide. If I got the opportunity to ask one of them out, I would take it. \n\nIt happened two game days later. Laura was out with friends, Heather was at swimming practice, Ronnie was working (as always), and Nalani was at night school. \n\nMichelle was in the living room. I clicked on her. \n\n- Oh - you're home? she said. I thought I was all alone. I was going to watch 'Cool Hand Luke'. Want to watch it with me? \n\n- I'll make the popcorn. That was my best option, by far. \n\nSnogg provided a nice illustration of the two of us sitting on the sofa, from an angle where you could see Michelle, with the bowl of popcorn between her legs, but you couldn't see my face (so that I could preserve the illusion that Tristan was me). \n\n- Thanks for inviting me. I said. \n\n- Great film, good company. What's not to like? \n\nAfter a bit, Michelle paused the movie. \n\nI'm a little cold. she said. I'm just going to grab a sweater. Be right back. \n\nShe returned with a blanket. \n\n- I didn't know if you were chilly, too. Thought this might work for both of us. \n\nMichelle spread the blanket over the two of us, and then re-started the movie. \n\nThe script at the bottom of the screen began to change. \n\nMichelle snuggles a little closer to you. \n\nMichelle adjusts the blanket. When she finishes doing that, you realize that her hand is still on your thigh. \n\nShe rests her head on your shoulder. (new illustration by Snogg) \n\nMichelle adjusts the blanket again (even though it really isn't necessary). When she's done, her hand is a little higher up on your thigh. \n\n- Have you seen this film before? she asked. \n\nI chose to respond with Yes, it's awesome. \n\n- I think so, too. I've seen it 5 times. \n\nMichelle's hand seems to be creeping up your thigh. \n\nI was given the option to stretch a bit, and put my arm across the back of the sofa - and around her shoulders, at the same time. \n\n- Mmm ... that's nice. said Michelle. There was a great illustration of Michelle's face, as her head turned to whisper in my ear. Her lips were moist, and parted ... her heavy lidded-eyes half closed ... \n\nMichelle's hand brushes over your package. \n\nWhat? \n\nShe reaches for the zipper on your pants, and deftly pulls it down. She also opens the button, before reaching into your underwear, and taking hold of your swiftly-growing erection. \n\nWow. Absolutely right about that last part. I was completely hard, imagining Michelle's hand in my pants. \n\n- What do we have here? she said. \n\n- It's not a 'failure to communicate'. I replied. \n\n- You have seen this movie before. she chuckled. \n\nI had the option to turn my head, and kiss her. Michelle continued to stroke my cock, under the blanket, as she inserted her tongue into my mouth. \n\nI'm not wearing a bra. she breathed into my ear. \n\nI slid my hand under her shirt, and found a beautifully-shaped breast. Firm, but soft. Not too small; not too big. A C-, or a B+. \n\nThe combination was obviously too much, as I spewed cum all over her hand. \n\n- Mmm ... she said. Quite a climax for this film. \n\n*** \n\nThe next day (in the game), at lunch, Laura spoke to me in the kitchen. \n\n- Did you enjoy the movie last night? \n\nThat was surprising. How did she know? She hadn't been home at the time. \n\n- Michelle told you? \n\n- 'Cool Hand Luke' she said. But I bet that Michelle's hand was warm. This statement was accompanied by an illustration that showed that Laura was - quite clearly - winking at me. \n\n- You're not ...? \n\nI had options here: \n\nUpset \n\nJealous \n\nSurprised \n\nDisappointed \n\nThe third option seemed to stick out a bit. Besides, the expression on Laura's face didn't look at all like the other three. \n\n- Me? No - Michelle told me that she might have a bit of fun with you. Did you enjoy it? You must have. \n\n- I ... \n\n- Don't worry, Tristan. I'm not the jealous type. As long as you save some of that sweetness for me ... \n\nI was stunned. I must have sat there for a full minute, looking at the words on my computer screen. I'd heard them, too - spoken by Laura (or, by the voice actress playing the part of Laura). \n\nMichelle had told her that she was going to 'have some fun' with me. Laura didn't mind; on the contrary, her only concern seemed to be reminding me not to forget her. \n\nI had come to the conclusion that this game didn't have a harem option. Michelle wasn't going to go out with me if I was dating Heather - or Nalani. But now I got the distinct impression that she wasn't averse to sharing me with Laura. \n\nBut ... hadn't Patience assured me that there was no harem feature in this game? I hunted up her email response to one of my audio reviews. \n\nAnd there it was: \n\nYou're right: there is no harem feature. That was part of our intent from the very beginning. The girls are aware, to a certain degree, of your status with the other roommates. They generally won't mess around with you if you're getting serious with one of their friends. \n\nAh. I'd missed that one word. Generally. \n\nPatience had managed to avoid spoiling the story for me. Clever. \n\nSo the girls truly were different. Heather lacked confidence; she was looking for a guy who would treat her right. Nalani was a romantic. But Michelle was only looking for 'a bit of fun'. And Laura was still 'Intrigued', even if her roommate and the guy she was interested in had gotten frisky on the sofa. \n\nWhen I finally remembered what I'd been doing, and returned to the game, I got another surprise - or, perhaps, confirmation that I'd been thinking along the right lines. \n\nI got the option to ask Laura out on a date. \n\nThis was a good point to stop and save. \n\nI put all of these impressions into a lengthy audio critique. I remembered to praise Snogg, of course, but I had more positive comments for Patience. Not only for her dialogue, the story, the interactions with the roommates ... but also for not spoiling the surprise for me. \n\nNow I was wondering even more about the replay value in this game. I knew that Michelle wouldn't 'cut in' on Heather or Nalani. But would Laura? \n\nAnd what if I changed the roles? What would Laura look like in a bikini, if she was the athlete, at swimming practice? \n\nYowza. \n\n*** \n\nWhen I reloaded the game, I decided to see how Michelle would respond if I got closer to Laura. I asked Laura out. The options were the usual suspects: \n\nMuseum \n\nCafe \n\nPub \n\nRestaurant \n\nI doubted that Laura would want to go on a date to the place where she worked. It was also - probably - too soon for the restaurant. Just for laughs, I clicked on the first choice. \n\n- That's a great idea! You know, I always wanted to go there. Let's do it! \n\nI smiled again. Laura was pretty, exuberant, and had massive breasts. Naturally, I'd assumed that she wouldn't be interested in anything remotely intellectual. And here was Patience, smacking me in the face for making such a stupid assumption. \n\nLaura wore black jeans, and a brightly-coloured striped shirt (horizontal stripes). Wow. Her lipstick was just a tad too loud. But that was the only complaint I could find. \n\nSnogg's illustrations of Laura bending over slightly, to read the inscription on a sculpture, was absolutely perfect. The first one showed her frowning in concentration. In the second, her head was turned towards me, and she was grinning, as if to say 'I know you're checking me out.' \n\nLaura had questions - some of which I was able to answer because I'd been to the museum before. But she was curious - not ignorant. \n\n- That was awesome! she said, on our way home. \n\n- I'm glad you enjoyed it. \n\n- Did you enjoy it, too? \n\n- Of course I did. \n\n- As much as last night? \n\nI was spared the need to answer, because my headphones were suddenly filled with the sound of Laura laughing. Loudly. She wasn't shy. \n\n- I'm hungry. she said. Let's get a snack. \n\nLaura led the way to our kitchen. I barely registered the fact that none of our roommates seemed to be at home. That was unusual. \n\nI didn't have to be told (by Patience's script) that I was watching Laura's every move. I'd yet to see a render by Snogg that made her look anything less than absolutely fantastic. She had the body to start a serious pagan religious cult. \n\n- Do you like me, Tristan? she asked. \n\n- How could I not? seemed like the most honest response. \n\n- I like you. I don't want you to think that I'm trying to ... steal you away. I just want to show you that ... I'm interested. ",
        "With those words, Laura pushed me into one of our kitchen chairs. She dropped to her knees, between my legs, and swiftly undid the button on my pants. \n\nBefore I could do anything, she'd found my semi-erect cock, and pulled it out. \n\n- I knew you liked me. she said, just before she took the head of my erection into her mouth. \n\nShe was sucking my cock. In the kitchen. \n\nThen she drew back, to slide the straps of her striped shirt off her shoulders, exposing her amazing breasts. She pushed the shirt down to her waist. \n\n- You can touch them - if you want. \n\nThey were glorious. I was fascinated by their size, their roundness, but also by her nipples. She had very large aureolas, dark pink in colour, covered with tiny little bumps. Her nipples were light brown - the colour difference made them stand out. \n\nThe next illustration showed Laura going down on me, her long hair draped over my thigh, while my hand tried to encompass one of her breasts, as if to weigh or help support it. \n\n*** \n\nI replayed Laura's scene that same night (in real life). It was still pretty spectacular, even though I knew what was coming next. \n\nOnce again, Patience had surprised me. Once Laura agreed to go out with me, I'd been expecting a scene. But not in the kitchen. And when she reached into my pants ... well, I thought 'Cool - a handjob in the kitchen!'. \n\nI was still surprised that Laura's first scene was oral. I mean ... what would she do after the second date? \n\nThere was no rigid pattern, with each girl following the same predictable path, with similar sex scenes. Michelle, on the couch ... it wasn't even a date, really. And then Laura in the kitchen. Wow. \n\nI made myself a note to include those observations in my next audio review. \n\nThe next day (real life, again), I received an email from Patience. \n\nHey Cyrano, \n\nMike admitted that he spilled the beans about my gender. I really don't mind you knowing. It was just that I didn't want everyone else to know, once the game goes public. \n\nI'll be the one answering most of the queries, and dealing with complaints and suggestions. I just thought it would be easier if nobody knew that I was female. \n\nI used to belong to a gaming forum, and played a couple of MMOs with Snogg and some other friends. Most of it was fine, but a few guys found out that I was a girl - and then things changed. Significantly. \n\nThey no longer seemed to take what I was saying seriously. I'd critique a rule, or the latest patch, and they'd say things like 'Listen to her go - just like a real gamer', or 'Don't worry your pretty little head about it, darlin'. \n\nIt made me so mad, I wanted to spit. Especially if some guy said the same thing I had, and they took him seriously. \n\nBut that was only part of it. Guys started hitting on me all over the place. Asking for pics, asking where I lived ... it got really tiresome. \n\nOops. Sorry for going on and on about it. Just wanted you to know why I wasn't advertising my gender. \n\nThe real reason I emailed you - okay, the second reason - was to thank you for another excellent critique. Glad you enjoyed Michelle's 1st scene. It's one of my favourites so far. \n\nI had to laugh when you talked about the absence of a harem feature. I didn't want to spoil the surprise for you. If you hadn't discovered the Michelle-Laura connection for yourself, I would've told you about it ... eventually. \n\nAs always, we appreciate all the work you're putting into the game on our behalf. Could I ask just one more favour? When you get to the end (or close to the end) of the content in this version, could you send me a saved game? I'm really interested to see which choices you made, and the paths you followed. \n\nThanks in advance, \n\nPatience \n\nI replied right away. \n\nHey Patience, \n\nYour secret is safe. I understand completely. \n\nMy mother works from home, and deals with people online. She uses her initials with her last name, rather than her first name. Nobody seems to mind. \n\nThen, months later, she may end up talking to them on the phone, or even meeting them in person. Most people - like 9 out of 10 - are surprised when they find out that she's female. \n\nAnd in about half of those cases, they begin to treat her differently, online. Some will start to question her 'opinion' (previously, they would have accepted her expertise). A few will ask to work with someone who's 'more experienced'. \n\nShe says that women do it, too - not just men. It's really disheartening. And yes, she does get a few creeps who hit on her. Not as many, I suppose, because she knows where their money is. \n\nI will gladly send you a saved game. \n\nSincerely, \n\nCyrano \n\n*** \n\nI told my Mom about Patience, and her experiences with concealing her gender online. Mom understood immediately. \n\n- \"Sounds familiar.\" she said. \"But it's probably worse for your friend. She has no leverage on these guys, like I do. I know where they live and work.\" \n\n- \"True.\" \n\n- \"Have you started studying for your exams, yet?\" \n\n- \"I will, Mom. They're not for a couple of weeks yet.\" \n\n- \"Alright. I just don't want you too distracted by that game. It'll still be there after your exams are over.\" \n\nShe was right, of course. But I wasn't ready to hit the books just yet. And I was very eager to see Laura's next scene. \n\nBut when I returned to the game, Michelle initiated a conversation with me. \n\n- In the kitchen? When any of us could have walked in? Wow - I don't know if I can compete with that. \n\nLaura had told her? Michelle was grinning, though - she didn't seem any more upset than Laura had been. She sounded amused. If there was a competition between these two, it was pretty darn friendly. \n\nPlus, the opportunity came up for me to ask her out. Why not? \n\n- Sure. said Michelle. That sounds good. Hey - why don't you take me to the pub? That way I can flaunt you in front of Laura and her friends. \n\nInteresting. This was the second time that Michelle had made the choice for our dates. It was her idea to watch a movie (and get frisky on the couch), and now she'd chosen the pub. Plus, she didn't mind that her roommate had gone down on me in the kitchen. \n\nMichelle was not at all like the others - well, Heather and Nalani. And I was having a great time exploring those differences. \n\nSnogg's next illustration caught me off guard. When Michelle got 'all dolled up', the results were amazing. \n\nHer hair framed her face perfectly. Her skin was flawless, her lips were glossy, and she'd accentuated her dark eyes. The dress she'd chosen complimented her skin tone, and left part of her shoulders bare. \n\nWow! \n\nEgad! \n\nGadzooks! \n\nYou look great! \n\nThose were the responses I had to choose from (I went with the first one). \n\n- Why thank you, kind sir. she replied. Shall we? \n\nThe pub was just a short walk away. It was crowded, and busy, and surprisingly loud. The sound effect were realistic (I think), but I turned down the sound anyway. \n\n- NO WAY! \n\nLaura's voice cut through the sound effects. \n\nThere was a visual of our roommate, in a bright dress, with a good three inches of cleavage showing. It wasn't indecent, or anything like that, but I'm sure that it didn't hurt her tips. \n\nLaura came over to greet us. \n\n- You stealing my man away? she said. But her tone, and the fact that the illustration showed her smiling, made me realize that she was just playing with Michelle. \n\n- Stealing him back, you mean. said my date. If there was a competition going on here, it was a very friendly one. I found that I quite liked being the focus of their attentions. \n\n- Girl, you look good enough to eat. said Laura - loud enough for me to hear. I could only agree. In fact, I had hopes that this evening might end up with something very much like that. \n\n- Mmm ... said Michelle. I sure hope so. \n\n- Hi, Tristan. said Laura. She leaned in close to kiss me on the cheek, briefly pressing her heroic breasts against my chest. \n\n- Hey - no fair using the boobs on him! said Michelle. \n\n- He's all yours tonight, sweetie. And your first round's on me. What will you have? \n\nMichelle and I got our drinks. Getting a table was out of the question, but we found a spot near the end of the bar where we could stand close together. \n\n- She's something else, that one. said Michelle. \n\n- She sure is. I have to admit, though - I don't quite understand your ... relationship. \n\n- Laura and me? Or did you mean 'Our' relationship - as in you and me? \n\n- Both, I guess. I said. \n\n- Let me ask you a question: did you enjoy watching the movie with me the other night? \n\n- You know I did. \n\n- So you wouldn't be opposed to watching another with me, some time? \n\n- Of course not. \n\n- What if Laura needed your help in the kitchen again? \n\n- My help? Ahh ... \n\n- Listen, sweetie. I like you. I really like you. So does Laura. As long as you don't call me by the wrong name when you're with me, why would I mind if you're spending time with my friend as well? \n\n- I guess ... I just didn't expect something like this. \n\nMichelle smiled. Hey - if you and Laura decide that you want to be exclusive, I would gladly take a step back. I like both of you, and I'd want you to be happy. \n\nIf, on the other hand, you wanted to be exclusive with me ... well, I'd have to think about that. And probably talk it over with Laura. \n\nIn the meantime, why can't we all have fun? Like I said: I enjoy being with you. Where's the harm? \n\n- That's very open-minded. \n\n- Realistic. said Michelle. \n\nAt that point, I had to click to advance the dialogue. Instead of a new option, I got a new screen. With a new illustration. \n\nSome enormous brute in a Philadelphia Eagles jersey was standing next to Michelle. He looked like a complete lout - as if the Australopithecus had escaped from the anthropology museum. \n\n- Hey Babe. Why don't you ditch this loser, and hang out with a real man? The voice sounded like a very bad combination of Rambo and Jeff Spiccoli. \n\nI had mixed emotions about this. \n\nFirst, I was disappointed. The standard 'asshole accosts your date' event? So I would have to stand up to the bully, and get the shit kicked out of me, in order to impress my girl? Lame - done so many times that it was almost a clich\u00e9. \n\nOn the other hand - what an interesting choice. Michelle had just finished telling me that she was perfectly happy sharing me with her roommate. What if I just backed off, and shared her with this hominoid? \n\nNo, I couldn't do that. Chivalry, again. \n\nBut I couldn't take the scene quite so seriously as it probably deserved. The reason for that was because the voice of the brute was all too familiar to me. \n\nIt was my friend Mike. SBD. \n\nSo I had to back away from the computer, and have a good laugh. No doubt that scene would work fine with 99% of players. I just couldn't take it seriously, because of the person doing the voice acting. \n\nFight? Get thumped? Embarrass myself in front of Michelle? What if I'd chosen the athlete instead of the IT specialist? Ah, well, there was nothing for it: I chose valour over discretion. \n\nI was bracing myself for a beating, when I heard a familiar voice - a loud voice. \n\n- Back off, idiot! shouted Laura. Back off, or I swear I'll have you barred for life! \n\nWhat the fuck is wrong with you? These are my roommates - and it's their first date! \n\n- Uh - I didn't know. bleated the embarrassed brute (my friend Mike). Sorry. \n\nGenius. I made a note to congratulate Patience. I hadn't been beaten up, a bully was humiliated, Michelle was impressed by my courage (at least, I hoped so), and I'd seen a really cool side of Laura. \n\nPlus I had a good reason for laughing at my friend Mike for months to come. \n\nLaura hustled the offending Neanderthal away, while Michelle took hold of my arm. \n\n- Were you really going to fight him? \n\n- What choice did I have? Clever Patience - truer words were never spoken. \n\n- I don't know about you, but this has ... kind of spoiled the mood. Do you want to go home? \n\nI didn't get an option. But that was fine: I was quite eager to see where this would lead. \n\nBack at our apartment, Michelle looked thoughtful. I don't really want our evening to end, just because of that ass. How about we watch a movie? \n\n- Sounds good. Should I get the blanket? I wouldn't want you to get a chill. Okay, that was a bit bold for me, but the other options were too shy, or completely inappropriate. \n\n- Mmm ... I'll do that. You make the popcorn. \n\n- What are we watching? \n\n- American Werewolf in London. said Michelle. \n\n- Classic. \n\n- Damn straight. I had no idea that there was any such movie. It didn't matter. \n\nI wasn't prepared to wait for Michelle to repeat her moves from the last time we'd been on the couch. I chose the most aggressive options available, every time. \n\nWe snuggled together under the blanket. I wasted no time putting my arm around her and drawing her close. \n\n- You know, Tristan ... it was very brave of you to stand up to that guy back there. \n\n- It wasn't, really. That was by far the most honest of the options I had to choose from. If anyone had been risking a beating, it was Tristan, not me. \n\n- Well, I think it was. And I might have fibbed a bit when I said that it spoiled the mood ... in fact, it really put me in a completely different mood ... \n\nEven I couldn't miss an invitation that broad. With my free hand, I reached under the blanket. \n\nMichelle hadn't just gone to get the blanket; somewhere along the way she'd lost her bra. I fondled her bare breasts for a while, and then my hand drifted south. \n\nSomehow, Michelle had ditched her panties, too. Or maybe she hadn't worn any from the very beginning - intriguing thought. Her skin was warm and smooth, and she seemed quite happy when I caressed the full globes of her ass. \n\nShe reached for the button on my pants again. This time, though, I had the option to slide my hand into the juncture between her thighs. She was almost completely hairless, except for a narrow landing strip. \n\nMichelle didn't moan; she sighed. It sounded great, and immediately created a tent in my track pants. \n\nShe released my erection from my pants, and began to stroke it, while I lightly ran my fingers over her pussy lips. She was already wet; I spread some of that moisture with my fingertips. \n\nShe sighed again when I slipped a finger inside her. Oh! she said, when I inserted a second finger. Ooh ... she crooned, as I begin to draw circles around her clit with my thumb. \n\nMichelle panted several times, and then sighed deeply. \n\n- Oh, damn ... that was good. \n\nThen she released her grip on my erection temporarily, as she slid off the couch, to her knees. She adjusted the blanket, so that it still covered me, but also her, as she lowered her head into my lap. \n\nShe took me into her mouth. \n\nThat was an exceptional image. Not a great visual: Snogg merely showed a couch and a blanket, spread like a tent. He left Tristan's face out of the picture, but you could clearly see where Michelle's head was. \n\nMichelle slurped and sucked - until we both heard a loud sound: the door to the apartment opened. \n\n- Hey, Tristan. said Laura. \n\nWhat was she doing home? The pub couldn't have closed by this time. But did that really matter? It was quite exciting to have Laura coming home while Michelle was going down on me in the living room. \n\n- Hey, Laura. I said, feigning nonchalance while my date tried even harder to bring me off. \n\nThere was an illustration of Laura in her tight dress, with a side view of the couch and the blanket, with a prominent bump between Tristan's legs. \n\n- Where's Michelle? \n\n- Ah - she's ... busy with something right now. \n\n- Is she? Well, I'm going to grab a shower. Say hi to her when you see her. \n\n- Hey - Laura? Thank you - for what you did ... at the pub. \n\n- I'm sure you could've handled it. But I didn't want your date to be spoiled. \n\n- It wasn't. It isn't. \n\nMichelle redoubled her efforts to bring me off. She had her hand wrapped around the base on my cock, and several inches in her mouth, as she furiously bobbed her head up and down. Laura had to be able to see the blanket moving. \n\n- That's good. Okay - I'm going to shower. Goodnight, Tristan. \n\n- 'Night, Laura. \n\nThe next illustration was of Laura walking away - looking back at me over her shoulder - as she winked. \n\nMichelle must have felt me relax, just a little. \n\n- She's gone? \n\n- Yes. \n\n- Damn! Let's go to my room. I'm about ready to explode. \n\nThere was an amusing illustration of us running to her bedroom, bare-assed, with Michelle carrying the blanket under her arm. \n\nI quickly closed the door behind us. Then I was given a curious choice: \n\nLock the door \n\nLeave it unlocked \n\nThat was really quite odd. So naturally, I took the strange one, and left it unlocked. \n\nThe next illustration was absolutely brilliant. Michelle was kneeling on her bedspread, naked, with her shapely ass resting on her heels. She looked incredible - I took a screenshot. She looked utterly desirable, with her back arched, and her lovely breasts thrust forward like a couple of sweet gumdrops. \n\n- Get over here! she demanded. \n\nShe immediately went down on me again. Tristan couldn't resist any longer, and came in her mouth (I wouldn't have lasted past the opening credits of the film). \n\nNo good deed goes unpunished, they say. I put Michelle on her back, and kissed my way to her pussy. \n\n- Oh - like that. Yes, please! Oh ... we should've gone out so much sooner. \n\nHeather and Nalani had moaned. Heather sighed, or she talked. \n\nRight there. That's - aah ... that's the spot. \n\nSnogg's illustration was quite different, here. Tristan wasn't in the illustration at all. Michelle was lying back, resting on one elbow. Her legs were spread, and raised; between them, I had a commanding view of her shaved pussy, her flat stomach, her breasts, and her face. \n\nMichelle's eyes were partially closed, and her mouth was partly open. It was a very sexy picture - except for one detail: she was wearing large hoop earrings, which she hadn't had on when we went to the pub. \n\nIt didn't exactly spoil the moment for me. It was what a movie buff would've called a 'continuity error'. I simply stopped, made a note of it, and grabbed a tissue (for what I suspected, or hoped, might come next). \n\nWhile I did that, Michelle continued to sigh and talk into my headphones, telling me how close she was. \n\n- Oh ... what? Now? Aww ... really? \n\nThat came out louder than her previous comments. She stopped sighing altogether. What the heck was going on? \n\nWhen I clicked on the screen, I got a surprise: the next illustration showed Laura - standing in the open doorway, wearing only a towel. \n\n- Bad timing? \n\n- You think? said Michelle. I was this close ... \n\n- Sorry - but you said ... ",
        "- I know what I said. Shut up and come in - and close the door! \n\nI heard the sound of a door closing, followed by Laura giggling. Hey, Tristan! she said. \n\n- I get to fuck him first, though. said Michelle. It's still our date. \n\n- I know. Sorry for interrupting. \n\n- No, you're not. Turn over, Tristan. \n\nI had my mouth open at this point. Tristan, though, allowed himself to be flipped onto his back, so that Michelle could straddle his legs, and then move up. She took hold of his - my - cock, and sat down on it. \n\nShe let out a long sigh. Ah ... that's nice ... \n\nThe illustration was very similar to the one I'd seen earlier, of Michelle sitting on her heels on the bed - only, this time, she was sitting on my erection. \n\n- Wow. said Laura. That looks so ... hot. \n\n- Lose the towel. said Michelle. \n\nLaura did. \n\nThe illustration showed her standing next to the bed, naked. Her head was down, her eyes veiled, as if she was studying her own navel. I was busily studying everything else. \n\nMother of mercy ... \n\nMichelle was sexy woman - presently riding me. But Laura (as depicted by Snogg) was a force of nature. I could imagine men leaving their brides at the altar if Laura winked at them. \n\nIt wasn't just that she had a body built for sin. Laura had a pretty face, and a couple of expressions that made me think of growing old with her (and having eighteen or nineteen children). \n\n- Sorry. she said - to me. Hope I didn't spoil your date. \n\nShe leaned over to kiss me. \n\nI scrambled for the tissue as I came in my pants. \n\n*** \n\nThe next day (of real life), I sheepishly re-loaded the game. I re-played my date with Michelle, lingering over Mike's intervention, and then the blankets scenes in the living room, including Laura's entrance while Michelle was going down on me. \n\nI also stopped to admire the render of Michelle kneeling on her bed - it really was spectacular. The picture of her lying back while I went down on her was also excellent (except for the earrings). \n\nBut Laura kept stealing the show. \n\nAfter she kissed me, she leaned a little further, and dangled a stupendous breast over my face. How could I not take her nipple in my mouth? \n\n- Ahh! said Laura - quite loud. \n\n- You have no idea, girl. said Michelle. \n\n- I hope that I will. \n\n- Not 'till I'm done with him. \n\n- We can share. \n\nThe next illustration blew my mind. \n\nMichelle was straddling my cock, shifting her hips as she rode me. Laura was sitting on my face, holding her breasts in her hand - and pinching one of her own nipples. \n\nMichelle came on my cock. Laura came on my tongue. The accompanying vocals were ... rather startling. I don't know why, but I was suddenly imagining the voice actors recording these highly intimate sounds, with Patience supervising. \n\n- Oh, damn. said Michelle. He's still hard. \n\nLaura spoke up. I could ... \n\n- Oh, go ahead. You aren't going to stop 'till you get what you came for. \n\nThen Laura spoke a wonderful, a lovely, an immortal line: \n\n- If you don't mind, Tristan ... I'd really like to fuck you ... \n\n- Go ahead, sweetie. said Michelle. I'd like to watch. \n\nWhat followed was arguably the best render by Snogg so far. \n\nLaura lay back, and I followed. She guided my erection - wet with Michelle's secretions - into her pussy. \n\n- Oh, Mama. \n\nLaura's eyes were closed, her mouth was open, as she roughly pinched her own nipple. Her other hand was between her legs, as she rubbed her clit. You could still see my engorged cock, though, as it plunged into her. \n\nI'm not ashamed to admit that I needed another Kleenex, at that point. \n\nI came, Laura came again, and Michelle sighed some more. \n\n- Oh, wow. said Michelle. \n\n- Thank you. said Laura. \n\n- Thank you. said Michelle. \n\nLaura left us alone. \n\nThere was one more render: Michelle on her hands and knees, facing away from me. \n\n- Any chance you have a little more gas in the tank? she said. \n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "games",
        "gaming",
        "playtesting",
        "shut-in",
        "virgin"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/sounds-good-ch-03"
}