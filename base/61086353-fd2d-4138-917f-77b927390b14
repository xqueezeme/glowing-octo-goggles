{
    "title": "Mismatched",
    "pages": [
        "This is just a harmless male fantasy. I wrote this story more or less in one go for my own amusement. Don\u00b4t expect any serious emotions, problems or realism in this one.\n\nUseful feedback with a return address is always welcome. I have replied to each one so far. I probably won\u00b4t reply much in the public comment section, although I usually read it and appreciate useful comments.\n\nThanks to SexyGeek for helping me by editing my mess and honing the story flow. \n\nxxxx\n\n22. That was the magical number. 22. I was 22 years old. Not a problem in itself. Only if you took into consideration the fact that I was still a virgin. Not that I really suffered because of it; I had two healthy hands. But it somehow didn\u00b4t feel right. And avoiding the issue when I talked with my buddies became more and more tedious. I just hoped they didn\u00b4t have a clue about my stigma.\n\nBut the clue hinting at the fact was obvious enough. It was right at the front of my head and was commonly known as a face. My mother in her sometimes less than loving ways had assured me that I was ugly right when I started my difficult journey into puberty. Her observation matched my own one pretty well, so the fact was never really in question.\n\nOf course, I avoided contact with the mysterious species called \"girls\" as much as I could from then on. No need to bother them with the ungainly sight of my face or the sudden ineloquence that befell me in their presence.\n\nSo I watched my way more handsome buddies making their first experiences, having their first relationships, having their first fights and breakups. It all was quite interesting, but my main problem was to keep the fact I was totally inexperienced a secret. Actually, it turned out nobody suspected that I hadn\u00b4t even kissed a girl or nobody gave a shit while being busy with their own little dramas.\n\nThe situation even got worse when I began to study at a university that turned out to have almost no female students.\n\nSo there I was, at one of the campus parties. I guessed that several hundred boys and a few girls were present. The exact number was impossible to tell. But one exact number was quite easy to tell. One. There surely was exactly one virgin present. Me.\n\nOkay, over there were my buddies. Right at the bar. I had enough reason and opportunity to get royally hammered. And that was exactly what I did.\n\nxx\n\nRinging. Pain. Cotton in my mouth. Pain in my head. Have I mentioned the pain? And that damn ringing again. This shitty old phone ringtone almost every iPhone used. Please... not now. This pain... oh my God.\n\n\"Stop this damn ringing!\" was what I wanted to shout in a loud and assertive voice. A muffled \"Hmmmbbmmm...\" was what escaped my mouth. Finally my brain cleared enough to make me realize that it was my own phone that nearly killed me acoustically.\n\n\"Anything you want to do about it?\" someone asked me.\n\nHey, that voice was definitely female. And, well, I couldn\u00b4t deny the fact that I was in somebody\u00b4s bed. There were white mice printed on a light blue background so I could safely assume that this was not my own bed, which showed some cool Star Wars scenes. And another fact was quite obvious - I had one hell of an hangover.\n\nOkay, the first priority was to save my few remaining brain cells - silence the damn phone. I refused to look around, afraid to fully perceive the situation and its implications. I had no idea what had happened during the last few hours and I wasn\u00b4t sure if I wanted to find out. So my right hand gingerly moved in the general direction of the torturing sound and I was relieved to find my phone lying on a surface that confusingly felt like plush. No, I definitely wasn\u00b4t at home. No plush nightstands to be found there, not a single one.\n\nWith the phone silenced, the most urgent problem was solved. It gave me a little time to tackle the next one. I figured it was time to lift my eyes and take in the surroundings. But I decided to approach the task cautiously. Opening one eye to a slit would have to be enough. No sense in overdosing reality at this point.\n\nThere were more white mice everywhere. Beneath them was what felt suspiciously like my totally nude body. Okay man, these are some facts I can work with, I thought.\n\n#1 - I was naked.\n\n#2 - I was in a bed obviously belonging to a female. No self-respecting male would own bedsheets with white mice.\n\n#3 - My phone was present and still charged.\n\nOkay, fact #3 led me to believe that I hadn\u00b4t missed much time. This was probably the morning after the party. Good.\n\nFacts #1 and #2 somehow led me to the impression that I might have gotten laid last night. Which led me to the conclusion that the girl in question must be overwhelmingly ugly to put up with someone like me. The thing was - I might have been ugly. But I still disliked ugly girls. Hypocrite? Yes. So this led me to:\n\n#4 - I didn\u00b4t really want to look at the female that was obviously present in this room.\n\nWhat was seen coudn\u00b4t be unseen. So could I somehow sneak out without looking at her? And maybe pretend afterwards that she was totally hot? No, unlikely. Not as thoroughly undressed as I was.\n\nAnd boy, if I really had been laid, I had no memory of it. Oh, shit...\n\n\"Coffee? Water? Aspirin?\"\n\nUh, she was near. Very near. Maybe about one meter to my left. Her voice was pleasant enough, but I knew from experience that the ugliest girls were quite often very friendly, had a nice voice and looked very promising from behind. Okay, man, get over with it. So I finally shifted my eyes towards her.\n\nHey, not bad. Okay, she was no supermodel. But she was thoroughly out of my league nonetheless. Okay, that was no big deal. But she was really quite pretty. More than I ever had hoped to achieve. She was small, had straight, long brunette hair and a cute face. And she looked friendly, which seemed a little odd. A pretty girl was not supposed to look friendly upon finding me lying naked in her bed.\n\n\"Ugh, um.\" Come on, you\u00b4ve fucked her. Maybe. Hopefully. Okay, you\u00b4ve possibly fucked her. Now talk to her. How hard can it be? \"Yes, thanks.\" Good, I\u00b4m turning into some kind of womanizer.\n\n\"Okay.\" She smiled and lifted her butt from the bed she was sitting on. She turned around and I saw that all she wore was a T-shirt. Not a huge male T-Shirt covering her petite body. No, this one ended right at her waist. I was actually looking at a girl\u00b4s nude butt. A cute butt, to be more precise. Okay, I\u00b4ve seen them before while entertaining my right hand with the more relevant half of the internet. But I had never seen one live and this close. Okay, this increased the probability of us really having had intercourse. Damn, and I still didn\u00b4t have the slightest idea about it.\n\nShe came back and handed me the pill, water and the liquid energizer. I gulped it all down.\n\n\"Bad hangover?\"\n\n\"Uh, yeah. Terrible.\"\n\n\"Peter, I want to thank you for last night.\"\n\n\"What?\" What the hell was she talking about? Had I maybe just fixed her computer and nothing else had happened? This was usually the only reason why females ever thanked me. She would certainly not thank me for participating in the process of losing my virginity. So she was obviously talking about something else.\n\n\"You were marvelous,\" she went on.\n\n\"Uh, thanks.\"\n\n\"Was it okay for you too?\" Shit, what was she talking about? Baking a cake? Having wild sex? Watching Mr. Bean? Painting the kitchen?\n\n\"Oh, yeah.\" Don\u00b4t be too specific as long as it isn\u00b4t clear what we\u00b4re talking about.\n\n\"I\u00b4m glad, Peter.\" Damn. She knew my name. She was at a distinctive advantage.\n\n\"It\u00b4s just a shame that you fell asleep while doing it.\"\n\nShit. Fell asleep while doing what? Certainly not while I lost my virginity? My life was shitty, but hopefully not THAT shitty. But probably also not while knitting a sock. I could rule that one out at least, I had no idea about knitting.\n\n\"Maybe we can continue, now that I\u00b4m awake?\" That was a safe route. Whatever we had done last night, she seemed to have liked it. Proposing to continue was certainly a good way to get some information about the process.\n\n\"You would? I mean, it must have been painful for you.\"\n\nWhat? Painful? Had we tried some hard s/m stuff with me on the receiving side? And I had just foolishly proposed to do it again? Apart from my headache I seemed to be unharmed, but these things might be done without lasting damage.\n\n\"No, not really.\" Well, the only manly thing to say, right? I just hoped I hadn\u00b4t held the nails while she learned how to use a hammer last night.\n\n\"Okay, today it\u00b4s my turn. You started last night and it was marvelous, just a dream.\" Seriously? Something I had done was \"like a dream\" for a female being? I furiously racked my brain what that might have been. I could rule out sex by now. Sex performed by a virgin couldn\u00b4t have been marvelous. Okay, I had read a lot about the issue to be prepared for the unlikely event. But still, without any practice there was not a chance that I had suddenly turned into Casanova.\n\n\"Go ahead.\" I said, still keeping my cards closely to my chest.\n\n\"No pun intended, huh?\" Pun? What was she talking about? She just laughed, ripped the sheets away and plunged her mouth onto my semi-erect dick.\n\nWait, wait, wait. This couldn\u00b4t really happen. Hey, stop, space-time continuum. This is Peter, not Brad Pitt. A reasonably pretty girl is not supposed to suck my dick. Which, by the way, had a totally different opinion about the matter. It soon felt like I could have punched holes into the walls with it. Assuming the need for this arose for this nameless girl. Which seemed unlikely.\n\nAnyway, my dick wasn\u00b4t used to being touched by anything but my own hands and was enthusiastically agreeing with the surprising turn of events. And I knew the damn thing, it would stay this way for quite some time. Maybe I was desensitized by all the wanking, but it was always the same. It was like a curse. My dick would get hard in no time and it was hard work and took quite a while to pursuade it to change this status again. I really had to think of extremely erotic things to overcome that hurdle. And even then it took 30 or up to 60 minutes, which had always limited my relief options whenever I had a short break between lectures in my small apartment. So the nameless girl had unwittingly dedicated herself to a hard piece of work and I would have pitied her if I hadn\u00b4t been that surprised still. My mind wasn\u00b4t foggy with passion or anything like it. It never was, that was another side effect of my less than sensitive reproductive organ. Wanking was never a big experience for me, it was a mere duty to find some relief. Somehow this didn\u00b4t match the stories the other guys exchanged about the subject.\n\nShe looked up at me now and took my little bastard out of her mouth.\n\n\"May I?\" Oh, shit, now comes the painful part? But I still nodded bravely, assuming that I could stop things any time. At least in case she didn\u00b4t plan to tie me up.\n\n\"Thank you,\" she said, which didn\u00b4t alleviate my apprehension. Did she need my dick hard for whatever she had in mind with it?\n\nIt turned out that that was exactly the case. She straddled me, inserted my dick into her pussy (unbelievable - it finally happened while I was awake), doffed her T-shirt and started to ride me.\n\nThe sensation on my dick wasn\u00b4t bad. Actually, it was quite nice, even a little nicer than the feeling caused my my own ministrations. But the view was what really stunned me. Apart from some sneak peeks into generous cleavages I had never seen nude boobs live. And here I was - under a girl openly showing me hers. Okay, she wouldn\u00b4t have qualified for a Russ Meyer movie. But that didn\u00b4t matter. I had no specific taste in boobs anyway and was just thankful for the opportunity to watch some. They were rather small, but very pretty. I even dared to lift my hands towards them, boldly toying with the idea to actually touch them. She caught my movement, smiled and pushed her chest downwards into my hands. Wow. Boobs. In my hands. I felt like I finally had become a man. Years of embarrassing situations while trying to avoid talking about the subject were now a thing of the past.\n\nOkay, as I have explained, my own mind wasn\u00b4t exactly crazy with lust at the time, despite the unfamiliar sensations. So I started to take things over, slowed her movements down and started to grind her clit on the root of my cock. I had spent a lot of research and time on the matter because I wanted to make things right in the unlikely case that I ever got laid.\n\n\"Peter, you don\u00b4t...\"\n\nSurprised, I stopped the movement. \"What\u00b4s wrong? Have I hurt you?\"\n\n\"No, quite the opposite. Peter, you\u00b4ve brought me to four orgasms last night this way. Just for your information, I\u00b4ve only had one before with a man and that was a small one. And then you come along and totally fuck my brains out. And then you fall asleep without having your own. I felt so bad. Please, let me bring you off, okay?\"\n\nOh, that shed a whole new light on the \"painful\" remark and on last night\u00b4s events. That didn\u00b4t sound too bad, actually. I certainly hadn\u00b4t suffered from the blue balls symptom while I was asleep.\n\n\"Okay,\" I simply said, knowing which kind of task lay ahead of her. She started to ride my dick in earnest now, using long strokes. Sure enough, these were the right ones to bring me off. I just hoped she had no other plans for the coming half or full hour.\n\nAs it turned out, she hadn\u00b4t. And even while applying the long strokes, she came to another climax after about half an hour. I knew that because I could see the alarm clock while I thought about the things I needed to do that day. As I said, my brain was generally quite unimpressed by my cock\u00b4s actions. Maybe I was some kind of male frigid.\n\nAfter 45 minutes I felt that things became tiring and it might be time to come to a conclusion. So I thought about various erotic things, looked at her boobs, played with them and finally came to my own, slightly less than overwhelming climax.\n\nAfter the sex I wanted to cuddle a little when it occured me that we had never actually kissed. Those things were what I really craved. Intimacy with a girl, affection, some tenderness.\n\nBut the girl without a name jumped out of the bed immediately, maybe sensing my plans and ran straight into her shower. I remained in bed slightly disappointed and watched my dick slowly starting to deflate. I knew that this process could take quite some time.\n\n\"You know that you\u00b4re quite big, right?\" she asked while entering the room again. She was still naked and was towelling her hair.\n\n\"I\u00b4m about 1.75 meters.\"\n\nShe laughed. \"No, I mean your dick.\"\n\n\"Oh. You think so?\" I had never deemed that important.\n\n\"The biggest I\u00b4ve seen so far.\"\n\n\"Oh, really?\" But the news didn\u00b4t excite me overly. It was obviously working fine and that was enough for me.\n\n\"Yes. I don\u00b4t know if it results from it, but sex with you is marvelous. A totally different league than with the other guys.\"\n\n\"Oh, thank you.\" Wow, that sounded like she had chosen complete losers only until now. And as a certified member of that group it explained why I was in her bed as well.\n\nShe just smiled.\n\n\"Um, I\u00b4d like to ask something.\"\n\n\"Go ahead, Peter. Feel free to ask.\"\n\n\"What\u00b4s your name?\" I just hoped she wouldn\u00b4t get angry. But in fact, she just looked dazzled and then started to laugh like crazy. I joined in a little, more out of politeness.\n\n\"Julia,\" she said after having calmed down a little, wiping the tears from her eyes.\n\n\"Thanks. Ah, Julia, I really like you.\"\n\nShe suddenly turned serious. \"Peter, I\u00b4m not looking for a relationship. But if you want to have sex, just call me, okay?\"\n\n\"Okay.\" I tried not to let her know how disappointed I was. Okay, it was to be expected, I was just too ugly to be kissed or seen with in public. The sad thing was, I was certain that it would take me at least another 22 years until I would get my second chance to find a girl. But hey, at least I was no virgin any more. That was as unexpected as it was welcome.\n\nxx\n\nThe 22 year prediction turned out to be not exactly true.\n\nI was hanging around on campus when I spotted Julia passing by, chatting with another girl. The other one was nice and pleasant to look at as well. The kind of girl that wouldn\u00b4t give me the time of the day under usual circumstances. She was a little bigger than Julia in every direction and had blond hair just reaching her shoulders. While she was no raving beauty, she certainly was pretty.\n\nJulia pointed me out and left for another building. The other girl advanced me straight and waved a little. I quickly turned around to check if anyone of interest stood behind me, but there was just a brick wall. Assuming I was at least slightly more interesting than the wall, I dared to wave back. The girl was laughing.\n\n\"Hey, I\u00b4m Emmy,\" she said, extending her hand.\n\n\"Um, Peter,\" I said while shaking it in disbelief. What was going on here? A nice girl was not supposed to address me. I quickly had the urge to check if I hadn\u00b4t mistakenly put on a George Clooney mask in the morning.\n\n\"Nice to meet you, Peter. You have any lectures this afternoon?\"\n\n\"Yeah, one. But it\u00b4s not important.\"\n\n\"Good, You can skip it?\"\n\n\"Well, I could maybe.\"\n\n\"Great. I live right over there.\"\n\nInteresting information. But why was it given at this time? What was going on here?\n\n\"Let\u00b4s go,\" she just said, taking my hand and pulling me along.\n\nxx\n\nI would have to consider to start smoking, I thought. I hated it, but here I was, lying in the bed of a girl I hardly knew. Just having had sex with her after having met her only minutes before. She was lying by my side, still quivering in a weird way and playing leisurely with her pussy. I had licked her to two orgasms and fucked her to three more. The process had taken almost an hour and had left me throughly exhausted. As usual, I had problems to come myself and wasn\u00b4t exactly swept away with the experience when it finally happened. But it was sure nice to watch her quite large boobs shake and her face distorted in ecstasy. What could be a more appropriate time for a cigarette than this?\n\nShe was still in lala land. I had to recognize that my fucking skills had improved since my first time with Julia. And I wondered if more buzz marketing would happen after today and more strange girls would pull me into their beds. Well, why not? Worse things were thinkable. And maybe one day one of them would even not be too repulsed by me to avoid my need for kisses and closeness. I omitted to ask Emmy for our long-term relationship prospects, just used her shower and left her small apartment.\n\nxx\n\nIt turned out that Julia and Emmy also had a close friend named Maria. Like her friends she was way too pretty for me and generally looked like her name led me to expect. Dark, long, wavy hair, full lips and a nice body. Maria was graciously taken into the group that had access to the human dildo named Peter under the condition of total confidence. Needless to say, none of them wanted to be seen with me in public or kiss me. But they had worked out a very professional looking schedule regarding my usage. They even traded slots for small favors. I was just glad that at least no money was involved. I felt bad enough about being some merchandise for the girls. Being a whore and them being my pimps would have been too much.\n\nSo for a few months my nights were quite busy. In fact, there was not a single night that I didn\u00b4t have sex with one of them. Sadly, all those nights ended alone in my own bed. None of them wanted to spend a whole night with me. At one time one of my shifts with Maria was given to Julia, who needed some consolation because of trouble with her boyfriend. Shit. Of course, I did it. I would have been an idiot not to. But it still felt bad that they used me to cheat on their boyfriends. Well, at least one boyfriend, I had been unable to determine if Maria and Emmy were in a relationship. Which was what I craved to be in myself. Yeah, I know that I should have stepped up and stopped the charade, but what would I have gained? I would have joined the endless mass of un-laid, wanking students again. So I continued to endure being forced to have sex with three pretty girls all the time, even though the situation was less than perfect. Quite bizarre, huh?",
        "Being seen with me in public obviously still was some kind of nightmare to them and had to be avoided under any circumstances. I could understand that from a rational point of view, but it hurt nonetheless. The same for the fact that all I had ever got were some small pecks, but no real kisses. I complained about it a lot and got the answer that I should be happy for what I had, which even made some sense to me.\n\nxx\n\nAfter a lot of negotiation I managed to take this night off from my human dildo duties to go on a party with some friends. Maria and Emmy were present, but of course pretended not to know me to avoid embarrassment. Did this cause me to sit in a corner, whine around and question myself? Hell, was I a man or a little girl? So of course it did, with the exception of sitting in a corner. Instead I decided on the bar to be the right place to contemplate my weird life. I faced the serious decision if getting hammered was the right thing to do - again. The last time had made my life a lot better, but there was still some room for improvement.\n\nYes, hammer time.\n\nSo I approached the bar again and pondered my poison for the night.\n\nI had just communicated my chosen ethanol carrier to the bartender when an assertive female voice cut in.\n\n\"Put that on my tab.\"\n\nI turned around and was immediately blinded by something that was not supposed to exist in these surroundings. Sure, such things existed at the news stand around the corner, in the middle of a Playboy magazine. But here? No way. Yet, the phenomenon was undeniably talking to me. Long, wavy blonde hair, a stunningly beautiful face and if I had dared to look at it, I would surely have seen a beautiful body too.\n\n\"Cat got your tongue, buster?\"\n\nAnd she did it in a surprsingly mundane way.\n\n\"Cheers,\" she said. Responding to that was highly automated in my brain. The process helped to break my mental barrier to even dare to talk to such a cracker. Usually there would be no need to gain any communication ability while around a beautiful woman. But for some mysterious reason this one seemed to wish to talk to me. This was a shock - to me and to the bystanding male students.\n\n\"Cheers.\" And I gulped down my drink quickly in the hope of gaining some courage.\n\nI the corner of my eye I caught Emmy and Maria staring. No, staring is not the word. Glaring. Yes, that\u00b4s it. Could they be jealous? It almost seemed that way. As I wasn\u00b4t in a relationship with any of them, their jealousy could only mean that they feared to lose the toy they assumed to own.\n\n\"Peter,\" the Playboy-girl said. \"my name is Anna.\" She offered her hand and I gingerly took it, still unsure what all of this might meant. \"I\u00b4ve heard a lot about you.\"\n\n\"What? Me? You\u00b4re sure you\u00b4re not confusing me with someone?\"\n\n\"No, I\u00b4m quite sure.\" She laughed and I was totally captivated. Wow. The Emmy/Julia/Maria team was out of my league. But this one was out of my planet. Why was she even talking to me?\n\n\"Peter, quite frankly - I\u00b4d like to have sex with you.\"\n\nIt was a close thing. I was just barely able to jerk my head around while I coughed the remnants of my drink out, thus avoiding to redecorate her dress. \n\nThen the cold reality hit me. Why was I even so surprised? The undeniable fact was - I was ugly. As usual I decided to sum up the facts.\n\n#1 - I was an embarrassment.\n\n#2 - I seemed to have a nice cock. \n\n#3 - Women obviously were under the impresssion that I knew how to use it.\n\n#4 - A total scorcher was chatting me up and asking me bluntly for sex.\n\nThe conclusion: I was about to be used as some sex object again. Which meant getting near a woman whose exhaled air I usually wouldn\u00b4t be allowed to breathe in. But it also meant never getting near her enough to gain anything of relevance for me. Sex - yes. Intimacy or a relationship - no way.\n\nThis was totally wrong. I needed a girlfriend, not another female coldly using me. So what did I answer?\n\n\"Okay, let\u00b4s go.\" But I at least had the decency to hate me a little for it.\n\nHer apartment was nice and tidy. She seemed to be better off than the other students I had contact with. But I noticed this only briefly because she had begun to shed her clothes as soon as the door was closed behind her. Well, that was a girl that went straight down to business. She obviously knew what she wanted and she was used to take it. I found out that a gaping mouth is something that might stop a man from removing his clothes. She was tanned without any visible panty lines, her body was well toned from obviously working out a lot. Her boobs were a little on the small side, but still looked fantastic. In the likely case she was a narcissist, she had any reason to.\n\n\"Come on, Peter. I\u00b4m curious. Show me the famous tool.\"\n\nFamous? Tool? Ah... So I shed the last of my clothes, trying not to be too embarrassed about the total absence of muscles. I needn\u00b4t have worried, the only muscle she showed any interest in was standing at full attention between my legs.\n\n\"Not bad at all. Interesting curve.\" I had heard the curve remark quite a lot until then and I really began to wonder if other cocks were straight when being erect. My homophobia had always led me to ignore the cocks shown in porn movies. But now that I considered it, they looked quite straight indeed.\n\nAnna led me into her bedroom and wasted no time in positioning herself on her back with her legs widely spread. There I was. An ugly nerd in front of a beautiful woman, with her shaved pussy on full display. It was an almost complete turn-off. Why? Beause she craved no intimacy. No need for closeness. No need for kisses or foreplay, for getting into the mood. She was barely interested in me at all. If my tongue and my cock were available without the rest of my body, she would have surely preferred this.\n\nSo what did I do? Of course, I complied and started my task, but not without some internal protest note. Anna didn\u00b4t care about any subtleties and was just enjoying what my tongue and fingers did to her. She was quite receptive, but didn\u00b4t have an actual orgasm during foreplay, which was a little unusual for me. She seemed definitely less sensitive or receptive to my technique than my other three users. But that didn\u00b4t put me off, it just piqued my curiosity and my ambition.\n\nAfter a while I gave up the foreplay, a little miffled because I had failed to bring her off with it. Sex was some kind of service for women to me. The only chance I had to get near them and therefore a thing I took very seriously, still without deriving much pleasure for myself. So I started my task to fuck this walking dream and I gave everything I had. This was turning into a question of honor quickly. I couldn\u00b4t risk my reputation being tainted by a less than completely satisfied customer.\n\nSo I opened my bag of tricks widely, using all the experience I had gained recently. As despicable as Julia\u00b4s, Emmy\u00b4s and Maria\u00b4s exploit of my person had been, it had sure helped honing my sexual prowess to damn near perfection. I soon got into a nice rhythm and had the opportunity to think about that damn thermodynamics problem I still had to solve, about her very nice body, about Andy really sucking big time at our current gaming addiction \"Counter Strike\" and about the sad fact that I wouldn\u00b4t be able to buy a pizza later if this went on for much longer.\n\nMy sexual services were obviously unaffected by my less than totally focused attention. I could safely assume that, based on Anna\u00b4s facial expression. She had tried to keep it particularly bored in the beginning. Afterwards her face had begun to soften a bit, followed by a slight frown. Now she was showing open confusion and consternation. Her eyes were wide open and she looked like she wanted to ask me a very important question, but had momentarily lost her ability to speak. And then she suddenly found it again. Well, sort of.\n\n\"AAAAAAAAAAAAAAAAAAAAHHHHHHHHHHHHHHH!\"\n\nHer body tensed under mine and her previously indifferent posture turned into a clamping grasp that put any gorilla to shame. Not that I had ever been hugged by a gorilla, mind you. Her pussy muscles were still convulsing while the rest of her body became very still. Damn, that was surely a big one. My reputation as the ugly bringer of guaranteed orgasms was saved and I felt good in a professional way.\n\nI was tempted to just get off and walk away. It would save me from the tedious task of getting my own orgasm, which I expected to be much harder to achieve than hers. And I still wanted that pizza... But courtesy and professionalism ruled that out. Somehow I knew that my own one was exptected by my female customers. Okay, then...\n\n\"Peter?\" she whispered softly. That surprised me. She actually acknowledged that there was a person attached to that marvelous cock.\n\n\"Yeah?\"\n\n\"Thank you.\" It shocked me to see tears forming in the eyes of the arrogant bitch. She really seemed quite overwhelmed by the recent events. That felt good. A nobody like me had been able to make an impact on such a woman.\n\n\"Why? What\u00b4s the matter?\"\n\n\"Peter, that was my first. It was marvelous.\"\n\nWhat? This was her first orgasm? I couldn\u00b4t believe that I was ahead of her in any aspect. And then she did the unthinkable. She grabbed me and kissed me. No, not a small peck on the cheek. Which would have been surprising in itself. No, a full blown kiss on the lips. Open-mouthed even. With her tongue exploring my mouth. The other girls had all more or less fled the bed at this point and had politely pointed out the location of the apartment door.\n\nIf I hadn\u00b4t been so occupied, I would have screamed out and tried to prevent her from soiling her beauty by kissing an ugly toad like me. But she was determined to go ahead and I had no choice but to follow. And to even get aroused a little, which surprised the hell out of me. Automatically, I started to move my hips again. And I stopped thinking about thermodynamics or shopping lists this time. This was really getting good and I tried not to think about the future either. I was just fucking a dream woman and she wasn\u00b4t even repulsed by me. She had even kissed me tenderly. This was exactly what I needed and I really started to enjoy it.\n\nAnd so did she. After her initial rather cool attitude towards fucking, she was coming around quite nicely, even enthusiastically so. Two of her climaxes and one of my own later we were lying in bed and I had time to appreciate that her bedsheets were totally free of printed mice, other animals or any of the cute stuff the girls usually liked. Of course, it didn\u00b4t show any cool tech stuff either. We were both totally content and she even tried to snuggle onto my shoulder until she found out that my bony body was just too uncomfortable. Again, I vowed to start lifting weights soon and again I already knew that nothing of the sort was actually about to happen. Not that it would make any difference. I assumed that my body was immune to any form of masculinity anyway.\n\nI continued to look around and it again struck me how wrong all of this was. The apartment was too expensive, too classy and too tidy to contain anything like me. I was the only flaw in here. And the woman lying beside my was just some kind of fate\u00b4s cruel joke. It was just wrong that she was within a radius of 50 meters around me. And just to prevent to become too attached, I decided to clarify some things right away. Be a man about it. Cry later. The whole thing...\n\n\"So what have you planned?\" I asked, bracing myself for the inevitable humiliation.\n\n\"Well, I definitely plan to continue this.\"\n\nOkay, not too bad. At least I would see her from time to time. Sex with her wasn\u00b4t exactly the dream the other guys always talked about, but it was still better than with Emmy, Julia and Maria. There was at least some degree of tenderness and emotion involved. She didn\u00b4t just treat me like the lump of flesh coincidentally connected to their favorite cock.\n\n\"So you\u00b4d like to use my sexual services from time to time?\"\n\n\"Indeed. I can assume you have no objections?\" Wow, a woman was asking for my consent? That was surely unexpected after having to deal with the three pretty dictators for so long.\n\n\"Um, yes, that would be okay. How often do you want to meet me?\"\n\n\"As often as I can, honey.\" Honey? Seriously? She had just called me honey?\n\n\"Really?\"\n\n\"Sure. But I expect you to stay away from other girls. You\u00b4re mine now. I know the three bitches won\u00b4t be happy about that. But they had their chances to stake their claims and they fucked it up.\"\n\n\"Wow. Yeah, true enough.\" Now what? So far, so unbelievable. Still unconsciously suspecting a prank and looking around for hidden cameras, I began to ponder the unthinkable. Did she really want to hint at some kind of relationship? I mean, come on... The sex might have been great, but it would never be enough to found a relationship on. Not as mismatched as we were.\n\nSomehow my whole life recently felt like I was being led through a totally improbable series of events by my cock. He and the girls seemed to negotiate all the relevant details and I was just tagging along because I was happen to be attached to it. Did I like it? Hell, what do you think? What did I think? To be honest, I had no idea how I thought about it.\n\nBut I decided to man up and take things into my own hands for a change.\n\n\"Um, ah, Anna?\" Well, not the most assertive way to start this talk.\n\n\"Yes, sweetheart?\" Come on, she called me sweetheart? After one fuck? What was going on here? But it still sounded great.\n\n\"Ah, what kind of relationship will be have?\"\n\n\"What kind? Are there different kinds? We will be boyfriend and girlfriend. As I said, you will stay away from the other girls.\"\n\n\"Ah, okay. Good.\" Did this sound a little one-sided to my ears only? \"And what about you?\"\n\nShe seemed to ponder the question longer than I was comfortable with. Much longer, actually. I was certainly no relationship expert as I had never been part of one even for a single second. But shouldn\u00b4t the answer be quite obvious if she really intended a classical boy/girlfriend relationship?\n\n\"Well, I certainly will keep going out. Parties, dancing and so on.\"\n\n\"Okay.\" Why did she tell me this?\n\n\"And you are probably not interested in such stuff at all.\"\n\nBoy, that hurt. So she didn\u00b4t want to be seen with me in public either. She planned to use the famous \"Peter\u00b4s total cock service\" like the others did. With the exception that she intended to use it exclusively.\n\n\"So you\u00b4re going to see other guys?\"\n\n\"Oh, honey. Sure, I don\u00b4t want to go to parties alone. I need someone to dance with me, to buy me drinks. You can\u00b4t dance, right?\"\n\n\"Umm, yeah.\"\n\n\"And you\u00b4re too short on cash for exclusive clubs anyway?\"\n\n\"Yes, sadly.\"\n\n\"So you will understand that I need to date other guys. And honey, I will also dance with them and kiss them. But I won\u00b4t have sex with any of them. My pussy is yours from now on.\"\n\nShe tried to sweeten the deal a little, that much was clear. Was it good enough for me? Why did I even think about it? Was I able to deny the request of such a hot woman anyway? No, probably not. Not a chance in hell, to be more precise. It was quite simple, I would agree to whatever conditions she chose to determine.\n\n\"So you\u00b4re going to have two boyfriends?\"\n\n\"No, only you. I will not become attached to any of my dance partners.\"\n\nOkay, that sounded acceptable enough. \"Okay.\" To be honest, it sounded better than anything I had hoped for. It was still humiliating, but I was used to this meanwhile. To the feeling of being an ugly and unwanted attachment to a beautiful and irresistable reproductive organ. I had visions of my cock being clad in a miniature tuxedo, standing in front of a priest, exchanging vows with Anna while I stood crying in the last row.\n\nBut on the bright side, I finally had what I always wanted the most - a steady girlfriend. A walking dream, but one I could never brag about. Could be worse...\n\nxx\n\nAs expected, Anna wanted our strange relationship to stay secret. I was beyond being too disappointed by such stuff meanwhile and the lengthy sex sessions we had about every other day helped greatly to heal my wounds. She still was way more affectionate during sex than any other girl had been, which improved the experience a lot for me. I knew that she didn\u00b4t love me one bit and that I didn\u00b4t love her either. But I received a lot of badly needed tenderness nonetheless. And I loved her body like she loved my cock. None of us had any reason to seek the moral high ground. I would just have wished to spend more time with her.\n\nAs expected, Emmy, Julia and Maria didn\u00b4t take my rejection very well.\n\n\"Why can\u00b4t we fuck any more, Peter? I miss you,\" Emmy asked me loudly and a little accusative one day on campus, which caused some orthopaedic problems in the neck area for some of the fellow students near enough to hear it. I could also almost hear the jaws dropping. Since this was a mainly technical university, the gender distribution was quite uneven and almost all of the guys were seriously underfucked and had no hope to change that any time soon.\n\n\"It\u00b4s just not right for me any more.\" Now I could almost hear groans of anguish around me. A pretty girl was asking an ugly dude for sex? Unheard of. And worst of all - he refused? I almost sensed the forming tears of rage und frustration.\n\n\"It\u00b4s just me or don\u00b4t you want Maria and Julia any more as well?\"\n\nThis was starting to get almost dangerous. The open mouths gaping in our direction from all sides were completely ignored by Emmy. Questions were surely forming in overworked brains. Pick-up lines, offers for sold souls, whatever. And the big question: how does this guy do it?\n\n\"It\u00b4s not just you. I don\u00b4t think it\u00b4s the right thing to do with Maria and Julia as well.\"\n\nNothing changed. The situation still looked like in a zombie movie. The hero and a pretty girl were surrounded by numerous barely moving guys with drool escaping their open mouths.\n\n\"You\u00b4re fucking other girls? You\u00b4re too exhausted maybe? Baby, I would be very gentle. I would massage you. And I would be content with just one orgasm. And I would blow you real good. Here, take a look at my titties. They will convince you.\" She pulled her top forward, so I could peek into it a little.\n\nOkay, the groaning was getting audible now. I just hoped the situation would not lead to violence. Or to visible spontaneous ejaculations, which would be even worse. Sweat was forming on the foreheads around us.\n\n\"No, thanks. Not right now. It\u00b4s just not right at the moment.\" I didn\u00b4t expect the \"thing\" with Anna to last. So I tried to leave the door a little open and avoided to end things with Emmy for good. But my answer caused some tortured sighs around us.\n\n\"It is that Anna bitch, right?\"\n\nDon\u00b4t do this, Emmy, I thought. Everybody here knows Anna and has wet dreams about her. Don\u00b4t torture these poor guys even more.\n\n\"I don\u00b4t want to talk about it.\"\n\n\"Okay, Peter. I get it. You fuck Anna too much to have energy left for me. If you change your mind, let me know, okay? I will be available.\"\n\n\"Yes, promised.\"\n\nAnd with that she left towards her lecture without even noticing the mental cruelties she had inflicted on my poor fellow students. As soon as she was gone, I decided it was about time to leave as well. I felt like John Travolta and Samuel L. Jackson leaving the restaurant in the closing scene of Pulp Fiction. Trying to inconspicuously leave the scene of a crime, in this case a psychological one. Trying to look like all of this didn\u00b4t concern me. At least I had my pants still on and I had my wallet.\n\nxx\n\nOf course, that wasn\u00b4t the end of it. Julia, Emmy and Maria didn\u00b4t plan to let their instant orgasm provider get away that easily. They had discovered my abilities and they were fighting for their property.",
        "\"You know that she is seeing someone else, right?\" Maria asked me on the phone a few days later.\n\n\"Who is seeing someone?\"\n\n\"Come on, don\u00b4t act as dumb as you are, okay?\"\n\n\"That\u00b4s okay. We have agreed on something like that.\"\n\n\"So you\u00b4re her affair?\"\n\n\"No, I\u00b4m her man. But she can see other guys for partying and dancing. I\u00b4m not that much into such stuff, you know?\"\n\n\"Yes, I know. But she\u00b4s making a fool of you. She\u00b4s just using you.\"\n\n\"Unlike you?\"\n\n\"Okay, touch\u00e9. But she\u00b4s seeing the same guy all the time. They look pretty close. They kiss all the time. No one else dances with her.\"\n\n\"Hmmm.\" I somehow knew she told me the truth, ulterior motives or not. But I didn\u00b4t know what to make of it. I sure didn\u00b4t love Anna and I knew that she was manipulating me just like the others had. But she was better at doing it and her body was plain irresistable anyway.\n\n\"People have told me they are a couple.\"\n\n\"What?\" Shit. That one hurt me somehow. I had never believed that we could be a couple in the classical way. But hearing that I was just some affair hurt nonetheless.\n\n\"Sorry, Peter. Remember, if you need me, I\u00b4m here.\"\n\n\"Yeah, sure. To use me like Anna does.\"\n\n\"Probably, yes. Sorry. You know how it is...\"\n\n\"Yeah, I know. I\u00b4m the freak with the miracle cock.\"\n\n\"Take care.\" I was almost glad she didn\u00b4t even try to deny it and lie to me.\n\nxx\n\nI was now completely convinced. Covinced that I didn\u00b4t have a single clue what was going on with Anna. I felt like a puppet on strings, which four women pulled at. They were all manipulating me for their entertainment, regardless of the emotional fallout dropping on me.\n\nSo I decided to use the only weapon I had at my disposal - time. Because of the semester break I had plenty of that. Instead of using it for excessive Counter Strike gaming sessions and sex, I decided to use it on some kind of amateur investigation. And sex. Yeah, call me weak. But I was under no illusion about what would happen if Anna wanted some.\n\nSo I tried to follow her around, which turned out to be not easy beacuse her BMW was so much faster than my old rusty bicycle. But after a few days I was able to anticipate her preferred locations. The problem was - whenever I saw her, she was accompanied by a guy. Always the same guy. A quite handsome guy, I had to admit. Big, muscular, manly features, good manners. Probably didn\u00b4t fart in bed, too, was a hell of a dancer and put down the toilet lid. Yeah, buddy, but you\u00b4re no good in bed. Otherwise she wouldn\u00b4t keep seeing me. But somehow this thought didn\u00b4t make me feel better. It was clear which one of us would get her in the end. But did I really envy him for this lying, manipulating cheater? I had visions of his future life with her and they were not pleasant for him. Anyway, on our next date I would confront her.\n\nxx\n\nOf course, I wasn\u00b4t brain dead. The confrontation was planned after a huge, final, monumental sex session. I totally drove her up the walls this time. She was screaming and scratching my back, totally losing control. I had to smile and made no effort to hide it. She wouldn\u00b4t understand it anyway, even if she was capable of seeing it. Which she wasn\u00b4t, being busy in lala land.\n\n\"Anna, I don\u00b4t want to continue this.\"\n\n\"What?\" She was just coming down from her high, enjoying the relaxed post-coital bliss. This was an unexpected interruption for sure.\n\n\"I want to end it, Anna.\"\n\n\"What?\" Clearly she wasn\u00b4t used to being dumped. Maybe this was even the first time it had ever happened to her. \"You\u00b4re dumping me?\"\n\n\"That\u00b4s about the size of it.\"\n\n\"But why? We have a lot of fun together.\"\n\n\"Because you\u00b4re cheating.\"\n\n\"Oh, you\u00b4re jealous? How cute.\"\n\n\"Anna, you\u00b4re not cheating on me. You\u00b4re cheating on your boyfriend.\"\n\n\"Oh.\"\n\n\"Yes, oh.\"\n\n\"Come on, this doesn\u00b4t hurt either of you.\" And that was the extent of her contriteness about hurting me and lying to me.\n\n\"No, it hurts me now. It will hurt him when he inevitably finds out. I know it\u00b4s quite convenient for you, but you\u00b4re acting just a tad too selfish for my taste.\" Wow, had I just said that? Had I somehow miraculously grown a set of brass balls? One thing was certain, my self-confidence was a lot better than it had been a few months ago. I certainly still was no level 90 wizard, but I wasn\u00b4t a level 1 noob either.\n\n\"You\u00b4re sure about this? You\u00b4re never going to get near a woman like me. You know that, don\u00b4t you?\" she asked softly.\n\n\"Yes, I know.\" She was right and my sadness about the fact was clearly audible.\n\n\"Okay, I understand. I\u00b4m sorry, but I respect your decision.\"\n\nAnd with that I just left her bed, showered, dressed and left her apartment. Neither of us said another word. It felt good. I had done the right thing, she was just using me. It felt bad. Because I had stupidly done the right thing.\n\nxx\n\nI managed to stay away from Emmy, Julia and Maria either. I was just a toy for them as well. I even finally started my workout sessions, beginning with my right arm.\n\nAnd of course, things were never that easy. I was an easy prey and the four women were determined and skilled hunters. While I lay in bed with Julia, I vowed that this was a one-time slip. And on the next day I cursed myself for giving in to Maria as well. This had to stop. I felt like I owed Emmy one, but after that this chapter had to be closed.\n\nAnd I was successful until I practically ran to my apartment two weeks later because of a case of screaming hornies. I needed some relief, but without Anna\u00b4s added stimulation I would have to schedule at least 30 minutes for the task \"at hand\".\n\nI almost stumbled across Anna sitting in front of my door. I ignored one of my neighbors staring at her in awe and just helped her to her feet.\n\n\"Anna.\"\n\n\"Pater. You have a few minutes for me?\"\n\n\"Um, I was in a hurry. I have another lecture in about an hour.\"\n\n\"And you needed some relief? Use me instead.\"\n\n\"Aaahhh, shit.\" That was my neighbor Tom. He stood there, clenching his fists, his face was contorted.\n\n\"Anna, I don\u00b4t know. Seriously.\"\n\nTom stared at me in amazement. \"Peter! Are you completely braindead?\"\n\n\"Tom, shut up. This is not that easy.\"\n\n\"Come on, look at her. If you don\u00b4t say yes, I\u00b4ll have to kill you as a matter of principle.\"\n\nAnna just laughed. \"Thank you, Tom. Peter, he\u00b4s right.\"\n\n\"Okay, come in then.\"\n\n\"Oh God, you asshole. Lucky bastard,\" moaned Tom.\n\n\"Tom, shut up, okay?\" I said in a good-humored way. His right hand would be as busy as my cock soon. And he would never look at me the same way. And neither will I. Because I already hated me for being weak again.\n\nWe had a nice, short sex session of about half an hour, which gave us the time to use my miniscule shower.\n\n\"Can we repeat this from time to time, Peter?\"\n\n\"Ah, I don\u00b4t know. You love him?\"\n\n\"Don\u00b4t ask please.\"\n\n\"I need to know.\"\n\n\"Yes, I think I love him. He\u00b4s so handsome, charming, well built. But the sex is bad. No, not actually bad. He\u00b4s nice and caring enough. It\u00b4s, well... maybe it\u00b4s a little boring.\"\n\n\"And with me it\u00b4s the other way around? Good sex, boring guy?\"\n\nShe just looked away. \n\nAmong the group of mostly un-laid and inexperienced nerdy guys that I still regarded myself belonging to, there was this theorem. Of course, it was not proven by much first-hand experience for obvious reasons. But it said that with a woman\u00b4s beauty, her self-centeredness and bitchiness increased proportionally. To stay away from those women and so on. I always regarded that as bull. It was like the advice not to jump to the moon because the atmosphere was too thin.\n\nBut suddenly I was exactly in the situation that rule applied to. I had attempted to jump to the moon and to my surprise it even worked. And yes, the atmosphere here was unhealthy.\n\nIt seemed that Anna didn\u00b4t really want either of her men. She just wanted to pick the best traits and combine them somehow. She hurt both of us in the process, but it didn\u00b4t seem to be a relevant aspect for her.\n\nOkay, Peter. Time to jump back to Earth, where you belong to. It might be boring, but definitely more healthy.\n\n\"So you planned to keep me on the side, as your affair?\"\n\n\"More or less, yes. But please don\u00b4t take that personally. I would really hate to lose you.\"\n\n\"You\u00b4re going to marry him?\"\n\n\"Peter, I want to come clean. We are already married.\"\n\n\"Oh. How long?\" It was getting even worse. She had lied to me about being a couple. She had cheated on her husband and I had unknowingly cuckolded him. Damn, this had to end.\n\n\"About a year. But that doesn\u00b4t have to stop us.\"\n\n\"You\u00b4re using me to commit adultery. That\u00b4s not right.\"\n\n\"Right, wrong. Who cares? He will never know.\"\n\n\"Everybody wins, huh?\"\n\n\"Exactly.\"\n\n\"Apart from him, of course. He gets cheated on. And apart from me. I will never have some kind of relationship this way. You want to keep me as your exclusive spare cock. So who wins? Ah, yes. You.\"\n\nShe had the decency to at least look pensive at me.\n\n\"Not a chance?\" she whispered.\n\n\"No. It just isn\u00b4t right.\"\n\n\"You\u00b4re a good guy, you know?\"\n\n\"Sure, that\u00b4s why I lose all the time.\"\n\n\"I think you won\u00b4t, in the long run. Take care.\"\n\n\"Sure.\" And with that she just left my apartment. I was glad she did. No, seriously, it broke my heart to see that fabulous ass and long, wavy mane leaving. But it had to be done, this was hopeless and humiliating.\n\nxx\n\nIt turned out that there was one parting gift from Anna still waiting for me. No, not a sexual transmitted disease. It came in the form of that big, gentle and well mannered husband of hers, waiting at my doorstep.\n\nLuckily my memory of the following events hadn\u00b4t survived. So the next thing I knew was that I woke up in a hospital bed. It seemed that he had expressed his concerns about my relations with his spouse in a very upfront manner. Based on my concussion and the various bruises, I didn\u00b4t have the chance to entirely explain things from my point of view.\n\nThe thing is - I couldn\u00b4t even blame him. I would have probably acted the same way. Well, assuming I would have been physically able to do it, of course. Lucky me, a woman like Anna would never marry me, so at least that situation I would have been spared from.\n\nWhich meant that several witnesses would never watch me beating someone up like they had in this case. And that I would never be arrested shortly afterwards like this Martin guy turned out to be. Puh, sometimes being lanky and unattractive had its advantages.\n\nxx\n\nOf course, Anna didn\u00b4t visit me to inspect the result of her brilliant little game. I was released soon afterwards and immediately tried to stop the prosecution against this guy. I just didn\u00b4t see the sense in it. It was just a guy, hurt by an uncaring and too beautiful bitch. I felt like we were in the same boat. And I was partially to blame for her adultery as I had already suspected that she was in some kind of relationship, so I felt like we were even with this beating. Stopping the arm of the law turned out to be not that easy, but I had at least tried.\n\nxx\n\nAbout two months of right-hand workout later - I had managed to stay away from Emmy, Maria and Julia - she sat on my doorstep again. Anna, in all her glory. The evening sun conspired with her by illuminating her fantastic hair in a magical glow. Her face was almost unworldly beautiful. She looked just irresistable. So what did I do? Right.\n\nI wordlessly stepped over her and just entered my apartment.\n\n\"Hey, you can not...\" was all I could hear before the closing door cut her indignant speech off. Damn, that felt good. I think the manipulative bitch needed such a grounding urgently and I needed the boost. Yeah, yeah, it was cheap. But it felt good nonetheless.\n\nxx\n\nI was leaving my modest apartment a few weeks later - well, if you were kind enough to describe my accomodation cave that way. I had to admit that the girls had good reason to insist on using their apartments for my human dildo services during my active period. Theirs were definitely habitable, while you could debate that when you saw mine. It was mainly a collection of study material, SciFi merchandise and empty junk food packagings. I wasn\u00b4t ashamed of it though. I was a geek and living in a geek apartment seemed only appropriate. Tidiness was overrated anyway, my buddies and me totally agreed on that.\n\nI was just jumping down the stairs in some kind of juvenile mood, being dressed appropriately. Hell, I was a nerd, a student and I had no money. What do you expect? I was clad in my second best hoodie, which had only one hole and was quite cool, showing Chewbacca on the front. I could even remember when I had last washed it, which was more than could be said about my jeans. I was a little late on my way to Andy. We planned to test the new Linux kernel together.\n\nI stopped dead in my tracks as I saw a new white Range Rover approaching the apartment block. This was totally wrong. Such a car wasn\u00b4t supposed to stop here. This felt like the Queen\u00b4s coach, pulled by white horses and appearing in a Brazilian slum unexpectedly.\n\nThe door opened and a woman with long, wavy dark hair exited... No, wrong. She didn\u00b4t just exit. She glided out of the car gracefully. The car seemed preposterously huge compared to her, but she handled the situation with perfect elegance. Her beautiful face, perfect body and stylish clothes made her look like she had freshly stepped out of a fashion catalogue. She took off her oversized sunglasses and looked around.\n\nI was still frozen in shock. If Gandhi had just appeared and asked C-3PO for directions to the wrestling match, I wouldn\u00b4t have been more surprised.\n\nThen the unthinkable, dreadful thing happened. She spotted me and, to make things worse, she approached me.\n\n\"Hi,\" she chirped in a pleasant voice, \"I\u00b4m looking for Peter. Do you know him?\"\n\n\"Uh...\" was what I managed to contribute to the conversation.\n\n\"Ooookayyy. I\u00b4m looking for a lanky guy. Star Wars fan.\" She looked at Chewbacca now. \"Quite unkempt. Old clothes. Shy. Dark hair.\" She stuck her manicured forefinger into my chest. I didn\u00b4t mind. I wouldn\u00b4t have minded anything this being did to me, even if I had been able of coherent speech at the moment.\n\nI mean, come on, what was going on here? Each one of my initial stable of sexual abusers was already way too attractive for me. I had been ridiculously mismatched with all of them, especially Anna. Okay, none of them had really put up with me, they just started a relationship with my cock. But this one - I couldn\u00b4t say she was more beautiful than Anna. They were about in the same league. But this one oozed a self-confidence that bordered on arrogance. She was dressed more stylish, moved more elegant, she exuded a sex-appeal that even Anna just couldn\u00b4t match.\n\nSo she was supposed to not even look at me, let alone talk to me. She waited patiently while I finished my complicated line of thought. And then the unthinkable happened - she even started to smile.\n\nThe thing is - even Anna was not supposed to happen in my life. As unsatisfying as our relationship had been - she wasn\u00b4t supposed to be even in my close vicinity. And now the second specimen of that mythical species called dream women was approaching me? Reality was obviously undergoing a series of severe glitches at the moment. This wasn\u00b4t meant to happen outside of my fantasies or internet sex stories.\n\n\"Okay, I\u00b4ll try to make this simple for you. You just have to nod, okay?\"\n\nI nodded, still surprised that I had apparently only lost my shyness around the four notorious cock abusers. The knowledge that I was just a noninvolved observer of their relationship with my cock had maybe relaxed me somehow.\n\n\"Good boy. Now, is your name Peter?\" She didn\u00b4t seem arrogant while asking this. She surprised me by just being friendly and cordial.\n\nAgain, I nodded in confirmation.\n\n\"Great. We\u00b4re making progress, I feel some real chemistry building here.\" She laughed and it looked and sounded marvelous. \"Do you know why Anna approached you?\"\n\nOh, wow. I had never thought about that. No, I didn\u00b4t, come to think about it. I wasn\u00b4t even aware that this stunner knew Anna at all.\n\nSo I shook my head.\n\n\"Well, some girl named Emmy seems to have been quite drunk one day. And she let some interesting information slip out about your abilities in bed.\"\n\n\"Ah.\"\n\n\"Look, Jim, it can speak.\" I had to laugh about that fake Star Trek quote. Marvelous. How did she know how to handle me so well? \"Can we go to your apartment?\"\n\n\"Umm, you know...\"\n\n\"Yeah, I know exactly what to expect. I have two small brothers.\"\n\n\"Ah... Okay. Take a deep breath before you enter.\" She just smiled and of course she looked marvelous while she did it. I bet she even looked marvelous while she took a crap.\n\nSo we sat on my unmade bed and I had nothing to offer such a lady apart from the orange juice bottle I had drunken from during the night. I thought it might be wise to omit this courtesy, not that she did seem to mind at all.\n\n\"Okay, Peter. Why am I here?\"\n\n\"You want sex?\" Yes, that\u00b4s what I should have asked. And you know what? I actually did, surprising myself. Of course, to any observer the question would have sounded ridiculous. But I just couldn\u00b4t think of any other reason she might be here. It was unlikely that she was enticed by my eloquence, nor did she seem to be in need of a freshly compiled Linux kernel or my vast SciFi collection. And she definitely wasn\u00b4t here because she was enticed by my looks. So the only rational explanation was that she had heard of my somewhat weird sexual relationship with the four women that had used me in the past.\n\nAlthough it was the most logical explanation, I still embraced myself for the grandmother of all slaps across the face. But it didn\u00b4t happen.\n\n\"Smart boy. You\u00b4re exactly right, I want to have sex. With you, to be more specific.\"\n\n\"Uh...\" was all that excaped my mouth. This was plain bizarre, but I was almost used to be in such situations meanwhile.\n\n\"Good question. I\u00b4m glad that you mention it and I\u00b4ll explain that later.\" I liked her humor. \"First, how have I heard of you? I had a talk with my friend Anna. She had a problem and I had one. And as it is the norm with two girlfriends, we had a lengthy talk about it.\n\n\"Her problem is that she has cheated on her beloved husband. And that he is quite upset about it, has attacked Anna\u00b4s lover, is facing legal problems because of it and doesn\u00b4t believe that she will remain faithful from now on. She has no idea how she can convince him of that, mainly because she isn\u00b4t all that convinced herself. You see, she doesn\u00b4t like her lover particularly or finds him overly attractive. But she\u00b4s addicted to his cock and his abilities in bed. So she needs to come up with a plan to stay away from him and convince Martin that she has ended it for good.\n\n\"My problem is quite different. My fianc\u00e9e has dropped me because he thinks that I\u00b4m frigid. And I\u00b4m terribly afraid he might be right. I\u00b4ve never had an orgasm with a man in my whole life. Yes, you don\u00b4t have to ask, I\u00b4ve tried sex with girls and with dildos. The overall sensation with another girl is slightly better, but unfortunately I\u00b4m not gay.\" I sat there with my jaw resting firmly on my knees. This was some kind of super-model, I still didn\u00b4t know her name, but I knew her sexual preferences and problems. How bizarre is that? \"Dildos just don\u00b4t cut the mustard too. You know, this \"frigid\" thing has to be clarified, I\u00b4m not tending towards self-doubts.\" \n\nI just nodded. \n\n\"Hey, you were not supposed to agree at this point!\" But she laughed and gently jabbed me in the ribs. Boy, what a great woman. She wasn\u00b4t arrogant at all, this was just self-confidence. She was extremely nice, in fact. And did she mention anything about us having sex earlier? I started to wonder when I was going to wake up.",
        "\"Anyway, the solution to Anna\u00b4s problem and my problem is the same.\" She looked at me expectantly, but I was still clueless and I\u00b4m afraid my face showed it quite clearly.\n\n\"You.\" And there it was again, the perfectly manicured forefinger, stabbing Chewbacca\u00b4s head.\n\n\"Me?\"\n\n\"Exactly. You need to disapppear from the market to reassure Martin. The thing is - she told me the sex with you is marvelous. Out of this world. Unbelievable. But that she can barely stand your presence.\"\n\nOuch, that hurt. Although I had always suspected it. To hear it spoken like that clearly did hurt. A lot.\n\n\"That hurt, didn\u00b4t it?\" She looked genuinely sympathetic. I just nodded, being close to tears.\n\n\"Peter, I know that I\u00b4m beautiful. No sense to beat about the bush. And Anna is beautiful as well. I know that attractive women can be bitches. I really like Anna, she\u00b4s one of my best and oldest friends. But she\u00b4s a cruel and selfish bitch when it comes to men. Martin is just suffering because of the same reason. She has cheated on him, but he loves her and is unable to dump her.\n\n\"But Peter, just beacuse some beautiful girls are bitches, not all of them have to be. I\u00b4m not.\"\n\nI looked up in surprise.\n\n\"And Peter, you\u00b4re not that bad. Really. You have potential. You just need some attention.\"\n\n\"Attention?\" At least I wasn\u00b4t annoying her by being overly talkative.\n\n\"Okay, let\u00b4s make a deal. I don\u00b4t want to have sex here. Sorry, I don\u00b4t want to come across bitchy, but this is just too filthy.\"\n\n\"Okay.\" Finally I registered that it was about to happen. She really planned to have sex with me. I could hardly wait to touch this goddess. But the prospect of sex in itself didn\u00b4t thrill me, as usual. It was just some kind of sport with a little satisfaction and almost no emotions. And I dreaded the emotional fallout if I started something with this woman, a fallout that seemed inevitable.\n\n\"So, in exchange for the sex, I will give you a complete make-over. New clothes, new hair styling, one year for free with my personal trainer, contact lenses. I will be your style advisor and I will pay for everything.\"\n\n\"Wow. All of that for fucking me once?\"\n\nShe laughed and it caused me to stare in awe. \"You want to get rid of me that quickly? Well, let\u00b4s say at least one time, okay. And I\u00b4m not going to fuck you. You\u00b4re going to fuck me. You\u00b4re the expert here and I need you to lead the way.\"\n\n\"Wow. That certainly sounds quite... well, acceptable to me. But what do you get out of it?\"\n\n\"An important answer. Am I frigid or not? I\u00b4m not daring to hope for an orgasm. I\u00b4d be happy to just get some nice feelings from it. If I don\u00b4t, I can finally align my life appropriately. Which means no men, no sex, no frills.\"\n\n\"Oh, wow. That\u00b4s going to be some kind of challenge for me.\"\n\n\"It is?\"\n\n\"Yes. You now that you\u00b4re some kind of dream-woman, right? Silly, of course you know. And even though I know that I have no chance to enjoy your presence in the long run, it would be a shame if you turned into some kind of nun. It just doesn\u00b4t seem right. So, yes, I gladly accept. I\u00b4d probably give my little finger to have sex with you. What you\u00b4ve proposed is really more than fair. We have a deal.\"\n\nShe said nothing, just took my hand and inspected my little finger. And then she surprised me. No, she didn\u00b4t cut it off. She actually looked into my eyes, took it in her mouth and sucked on it, which shocked me even more. My cock was not shocked at all and immediately sprung to attention.\n\n\"Let\u00b4s go,\" it said, using my mouth. \n\nShe smiled impishly and just nodded. \"I\u00b4m glad that I was able to convince you. You\u00b4re driving a hard bargain.\" We both had to laugh.\n\nWell, a nice car, this Range Rover. I felt like I was sitting on some kind of tower while being driven around and talking to Andy on the phone to cancel our Linux session.\n\n\"You\u00b4re going to get laid again, aren\u00b4t you?\"\n\n\"Yeah, Andy, it might happen.\"\n\n\"How the hell do you do this? I wish I\u00b4d get half of the girls you get.\"\n\n\"Don\u00b4t ask me. But it\u00b4s not as rosy as it might seem. See you...\"\n\nAnd I hung up.\n\n\"It might,\" she said.\n\n\"It might?\"\n\n\"Yes.\"\n\n\"Good.\" I had no idea what we were talking about.\n\n\"You\u00b4ll see.\"\n\n\"Good. I\u00b4m glad we talk about it that openly.\"\n\nWe both laughed.\n\n\"It might be rosy this time. That\u00b4s what I wanted to tell you.\"\n\n\"It might?\"\n\n\"Yes. I might be frigid. The jury is still out on this one. But that doesn\u00b4t mean that I don\u00b4t know how to be good to my man.\"\n\n\"Oh.\"\n\n\"Exactly.\"\n\nAfter a while we had reached the better parts of the city. I had never been here as my presence would have been as appropriate as a cave man entering a dinner party. Porsche Cayenne, BMW X5, Range Rover and 911 convertibles seemed to be the standard form of transportation here, like the rusty bicycles were in my part of town.\n\nWe stopped at what could only be described as a mansion and she parked in front of the door.\n\n\"Seriously?\"\n\n\"What?\"\n\n\"You live here?\"\n\n\"Yes. You don\u00b4t like it?\"\n\n\"Oh, I like it all right. You live here alone?\"\n\n\"Oh, I see. Relax. I live here alone. No jealous guy is going to beat you up. It\u00b4s one of the main advantages of this house.\"\n\n\"That\u00b4s why you\u00b4ve bought it?\"\n\n\"Exactly. You\u00b4d like to have a quick tour? So you don\u00b4t get lost if you have to pee in the night?\" She asked while unlocking the front door.\n\n\"Oh, I\u00b4m going to stay the night?\"\n\n\"Sure, if you want to. And I just can\u00b4t have you peeing in some dark corner, right?\"\n\nWe laughed and the quick tour turned out to be not so quick as the house was just too big. There seemed to be at least five bedrooms. The rest of the vast interior space was used for a gigantic living room, a sports and spa section and... I have no idea. We stopped the tour at the spa bath. I showed an interest in the thing and to my delight, she started to strip immediately as soon as she noticed it. I watched her in amazement. Again, things were happening in my life that were totally unrealistic. Her body was just as perfect as her face. I started to lose my rags as quickly as my numb brain allowed me to.\n\n\"Ah, would it be inappropriate to ask for your name even before we have fucked once?\"\n\nShe laughed heartily, which made her moderately sized, but beautiful boobs sway in a very enticing way.\n\n\"No, I think that might be appropriate. We\u00b4re determined to have sex later anyway, so I think we are already close enough to exchange names. My name is Danni.\"\n\n\"My pleasure. Peter,\" I said while I formally bowed to kiss her hand.\n\n\"Nice to meet you, Peter.\" She responded by grabbing my cock. \"Uh, that\u00b4s a nice one. Interesting curve and quite big.\"\n\nAlthough I might have conceived her remark this way, I didn\u00b4t feel like a piece of meat this time. She liked me, I knew it and she had this lightness about her. A nice sense of humor and a general friendliness. She tried to make me feel at ease and I appreciated it. \"We\u00b4re going to have fun, Danni. I\u00b4m going to give you all I have.\"\n\n\"Thank you.\"\n\nAnd she sounded as sincere as I had been. I really was determined to give her everything. Not because I wanted to convince her to start some kind of relationship, that was out of the question anyway. But because I liked her. I really, really liked her. A lot.\n\nWe fooled around in the tub for a while, fondled each other and had fun. She shocked me again by kissing me. Not the small pecks I had received from time to time by Emmy, Julia and Maria. But I received real, hot, open-mouthed kisses. And that turned me on more than I had ever been. For the first time in my life I was really hot, completely aroused. This turned out to be exactly the stimulation I needed.\n\n\"Where\u00b4s your bed? I mean one of your beds, any one will do.\"\n\n\"Come on.\"\n\nSo - did I feel used, like a human dildo again? Yes, a little, although in a much nicer way. Did I know that nothing serious would ever arise from this? Yes, unfortunately. Did I complain? Are you fucking kidding? This woman was a dream come true.\n\nWe both didn\u00b4t bother to towel ourselves and just ran through the house, almost connecting our asses to the stone floor in a slippery corner, laughing like mad.\n\nRidiculous, ain\u00b4t it? Here I was, the scrubby poor student. Running through an enormous mansion. Nude. Chasing a dream-woman. Equally nude. Almost dropping to our asses. Laughing. About to have sex. Come on... seriously? Yet it happened. \"Hey, Danni, this is unrealistic! It\u00b4s not supposed to happen! Let\u00b4s stop this right now!\" was what I should have shouted at the time. But somehow I didn\u00b4t.\n\nInstead I jumped into the enormous bed right after her. We giggled and fooled around for a short while before I got down to business. And that was to start the slow process of licking and caressing her pussy. It meant a sharp decrease in the speed of activity, but I decided that I might have only one shot and I was determined to make it perfect. Timing was crucial and rushing things was certainly not the way to go.\n\nShe was almost completely shaved, just as I liked it because it made my task of gently caressing and licking her outer labia so much easier. I took my time with it and finally changed my tongue\u00b4s attention to her clit. This was the point where the touches her labia received became much more forceful, to contrast the very gentle licking of her clit.\n\n\"Uh...\" I took that as a good sign, she had started to respond. Her goal had been to derive at least some amount of pleasure from this. An orgasm was not scheduled for today, but I was determined to try anayway. I sped up my tongue movements, but kept them extremely light and the treatment her pussy received from my fingers became even more forceful. \n\n\"Ahh...\" No, that wasn\u00b4t an orgasm, I thought. But she seemed to enjoy it, so I continued. I had all the time in the world. I distended her lips quite a bit with my fingers while applying the slightest stimulation with my tongue.\n\n\"Ahhh.... Oh God.\" She shuddered a little. Frigid? Seriously? We were just a few minutes into it and she had already achieved a small one. Her perfect tanned body was covered by a light sheen of sweat meanwhile and looked absolutely marvelous. At that point I desperately wished that there was a slight opportunity of something arising from this. It was really sad that I was in bed with this dream and she was still totally out of my reach.\n\nI took my time to bring her to two more small climaxes until I decided it was time to start with the main course. I lifted my totally wet face from her pussy and tried to wipe it dry on the bed sheets unobtrusively.\n\n\"Oh, sorry, I\u00b4ve been that wet?\"\n\n\"Don\u00b4t worry. I take that as a good sign.\"\n\n\"You bet. This was already far more than I had hoped to achieve. I think there might be hope for me after all.\"\n\n\"Definitely. You reacted quite nicely even with an ugly guy like me. Whoever said you are frigid doesn\u00b4t have a clue.\"\n\n\"Ugly? Who said you\u00b4re ugly?\"\n\n\"My mom, among others.\"\n\n\"Peter, you\u00b4re unkempt, insecure and lanky. All of that can be fixed easily. But you can bet you wouldn\u00b4t be here with me right now if you were even slightly ugly.\"\n\nI was confused. \"Well, but why should my mom lie about this?\"\n\n\"Some mothers do such things. They want to keep their little boys. They are subconsciously reluctant to let them go, to give them away to some girls. Don\u00b4t you ever believe this shit, you\u00b4re not ugly. In fact, after your make-over you\u00b4re not going to be Brad Pitt, but you\u00b4re going to be rather handsome.\"\n\n\"What?\"\n\n\"Well, in case you manage to acquire some muscles, you might be quite a catch. But that will require some work.\"\n\n\"You\u00b4re really kind, Danni. I think our session might have fogged your mind a little.\"\n\n\"Why have we stopped anyway?\"\n\n\"Stopped? Who has stopped?\" And with that I pushed her back onto the mattress and started to insert my cock into her while I licked her nipples.\n\n\"Kiss me while you do it, Peter. Kiss me, please.\"\n\n\"WHAT? ARE YOU COMPLETELY NUTS, GIRL?\" yelled my surprised brain, but my mouth kept wisely shut and did as she requested.\n\nWe kept fucking and kissing in various positions while I again made sure that her clit was kept busy all the time. The kissing and the general intimacy drove her totally crazy. I was certain that I had never been as aroused in my whole life and I even actively had to start thinking about the upcoming exams to keep me from finishing too early. We were merely 20 minutes into it, I estimated. That was unheard of, usually it took me far longer to get really aroused. \n\nWhile I was gently twisting her nipple and kept gently grinding my dick on her clit, she suddenly bucked under me with surprising force and almost threw me off. Visions of bull riders holding on for their dear life sprang into my mind as she eloquently yelled \"Aaaaaaaaaaaaaaaaaaa\". She suddenly relaxed completely for a few seconds and I began to question her health for a short, but terrifying moment.\n\nShe dispelled these fears by suddenly clamping her arms around me viciously.\n\n\"You\u00b4re mine.\"\n\n\"Oh.\"\n\n\"You\u00b4re mine. Understand?\"\n\n\"Uh, yes.\" What was happening here?\n\n\"Say it.\"\n\n\"I\u00b4m yours?\"\n\n\"Don\u00b4t ask it. Say it. Please. I need to hear it.\"\n\n\"I\u00b4m yours, Danni. I\u00b4m yours.\" Come on, what was going on here? What did she mean? What had I embarked myself on?\n\n\"Thank you.\"\n\n\"So I\u00b4m yours. And you?\"\n\n\"I\u00b4m yours too. I\u00b4m your girl now.\"\n\n\"What?\" I jerked upwards, unbelieving. Anna had said about the same thing, but I hadn\u00b4t believed it even at the time. But Danni was completely different.\n\n\"What\u00b4s the matter?\"\n\n\"You\u00b4re serious?\"\n\n\"Of course I am. Come on, I\u00b4ll explain later. We talk too much during sex, that will have to change. I see you\u00b4re still hard. Come on, get your rocks off, cowboy. Use me. Have fun.\"\n\n\"Uh...\" That seemed to be my standard answer around her, I thought as I continued to move again. And I felt good. This was not about me being used, she actually cared about me. She was concerned if I had fun too. Hell, she was far too nice for such a beautiful woman, her behavior was not right somehow. She was supposed to be bitchy and self-serving, crushing men for her entertainment. But she wasn\u00b4t, she was actually building me up in a nice and gentle way. And she was even nice enough to make me believe something serious was happening here. Like we had a mutual future. I had my doubts about that, but I was still thankful for her effort. She was definitely about to disprove our nerdy beauty/bitch theorem.\n\nAs I started to screw her for my own pleasure, it took her only a few minutes to reach another climax. That seemed rather unusual to me, given the nature of my movements. Now that she had the blockade out of her brain, she obviously had become quite a natural. She clamped me tight once more for a while before she reluctantly released me again but kept kissing me. And then another surprise hit me like a ton of bricks. She suddenly became vocal. And not exactly in a way I had expected.\n\n\"Yes, yes, fuck your slut, make me yours forever.\" Come on, such a woman says she is my slut and that wants me to make her mine? I reacted in the only responsible way - I immediately came. For the first time I reached a climax without having to work for it in my head. For the first time I came spontaneously, even surprisingly. \n\n\"Yes, yes, you did it. I\u00b4m yours now, Peter.\"\n\nI was still panting and pleasurable waves rushed through my body. Hell, this was the best orgasm I had ever had. I\u00b4m afraid I was just grunting incoherently and had just slumped onto her like a sack of potatoes. My whole 65 kilos, to be more precise. I have mentioned that I was lanky, right? Anyway, she had no problems to handle my weight. And as she suddenly threw me off her and onto the mattress, I had the disturbing impression that she might actually be stronger than me. In contrast to me, she looked like she was working out regularly.\n\n\"You\u00b4re right, I have to work out.\"\n\n\"That would be nice. It\u00b4s not necessary, but I\u00b4d be happy if you did it.\"\n\n\"Okay, I will do that for you.\"\n\nThen she suddenly moved around, dropped her head into my lap and started to suck my dick. The view was unbelievable. Such a beauty, busy on sucking lowly Peter\u00b4s weird curve-cock? It felt great, but I had just fucked her for quite a while and did not feel up to the task.\n\n\"Ah, Danni, I might need a little rest.\"\n\n\"Don\u00b4t worry, this is not to get you hard.\"\n\n\"It\u00b4s not?\"\n\n\"My man\u00b4s dick is unclean. I can\u00b4t have that, right? Get used to it. You\u00b4re mine now and I will take care of you. That\u00b4s the way things are going to be from now on. Just lie back and enjoy.\"\n\nUn-fucking-believable. But nice. Definitely nice. More than nice. Some kind of male dream, actually. My abilities in bed had kind of - well - convinced her. Did it irritate me that I was able to win her over just by fucking her once? No, not at the time. It would have if my brain had enough blood at its disposal.\n\nAfter a while she seemed to be satisfied with the result of her cleaning effort.\n\n\"Let\u00b4s go to the shower, Peter.\"\n\nI laughed a little. \"Danni, you\u00b4ve just cleaned me thoroughly.\"\n\n\"Not to get clean, to get dirty, to mark property.\"\n\n\"What?\"\n\n\"You\u00b4ll see. Come on.\"\n\n\"Okay, now pee on me. Just a little. And please not in my face,\" she said as soon as we were in the big shower. To say I was stunned would have been more than slightly inadequate.\n\n\"Danni, seriously?\"\n\n\"Go ahead, I want it.\"\n\n\"Okay.\"\n\nSo I managed to release just a few drops that fell onto her left boob.\n\n\"Yeeees. You\u00b4ve done it. I\u00b4m yours now.\"\n\n\"Wow, you\u00b4re quite kinky.\"\n\n\"Nice, huh?\" she asked, winking. \"I\u00b4m not into watersports, but I\u00b4ve once read about this as some kind of ritual in whatever culture. It\u00b4s like a dog marking his tree. It somehow felt good. And I think you\u00b4ve liked it too,\" she said, pointing at my increasingly erect dick.\n\n\"Yeah, it a was nice gesture somehow. But I agree, we don\u00b4t have to do this regularly. Okay, now the other way around.\"\n\n\"Don\u00b4t be silly, the prey doesn\u00b4t mark the hunter.\"\n\n\"Huh? What?\" Boy, what a woman, I thought as we showered together. I made a mental note to never underestimate the effect of great sex on a woman. Or the effect of saving one from thinking she is frigid. Whatever the reason, the effect on Danni was overwhelming. She had probably carried that problem around for some time. It might have seriously bothered her, at least I couldn\u00b4t explain her sudden enthusiasm towards me any other way.\n\nxx\n\nA few hours later, we were leisurely lounging on a preposterously large sofa in front of an equally preposterously large TV while I had very enticing visions of connecting my gaming consoles to it. She was busy with being all over me all the time. She was more or less lying upon me in various positions as if she were afraid that I somehow escaped her. I had no plan to, not a single thought. The situation was absolutely perfect. Well, apart from the missing gaming console of course. And the crappy reality soap that filled the screen instead. \n\n\"Say, you don\u00b4t have a gaming console by chance, do you?\"\n\n\"There are an Xbox, a Playstation and a Wii under the TV. Why?\"\n\nThat\u00b4s it, I thought. Now it\u00b4s getting completely unrealistic. Okay, one last question, just to confirm if this was some kind of altered reality and Morpheus will offer me red and blue pills in a few moments.\n\n\"You like Star Wars?\"\n\n\"The new ones? No, sorry. Totally boring and corny. I think I even fell asleep while trying to watch one. And the old ones just look outdated.\"\n\n\"Puh, I\u00b4m glad.\"\n\n\"Oh, why? You\u00b4re not disappointed? You\u00b4re obviously a Star Wars fan.\"\n\n\"It\u00b4s okay. Everything would have just been too perfect. It was just getting unrealistic. I\u00b4m glad Morpheus doesn\u00b4t have to appear.\"\n\nShe laughed. \"No problem as long as you don\u00b4t choose the wrong pill. You stay in this reality, boy.\" We both had to laugh. And I was still amazed that she had understood my Matrix reference. \"Come on, get it.\"",
        "\"Get what?\"\n\n\"The console. You want it.\"\n\nAnd we had some serious fun afterwards. Surprisingly, she even cleaned my clock in some games. I was totally fascinated with her. If she had asked me to tattoo her name on my forehead, I would probably have done it gladly. Well, I would have seriously considered it at least.\n\nAnnoyingly, the door bell interrupted us just as I was about to wipe her out in Mario Kart.\n\n\"Wait, I\u00b4ll get it,\" she said. Luckily we were clad in loose sweaters at the time.\n\n\"You don\u00b4t have a butler for such mundane tasks?\"\n\n\"Asshole,\" she laughed, punching me a little.\n\nShe returned into the room with - well, how can I describe it? With some kind of human mountain. Short cropped blonde hair, deeply tanned, blindingly white teeth that were constantly on display, a handsome and manly face, at least 2 meters tall and wide as my grandma\u00b4s big wardrobe. He looked like a nordic god and I was just glad the he omitted to carry around a large hammer. Overall, he was exactly like me. Only the other way around.\n\nHe walked into the room like he owned it, busy with oozing self-confidence and holding Danni by her waist. He spotted me, grinned and approached me.\n\n\"Hi, I\u00b4m Tom. I\u00b4m the guy responsible for the muscles.\"\n\n\"Hi. Peter.\" I reluctantly offered my hand, doubting if I had any chance to get it back in one piece. His handshake didn\u00b4t inflict any damage on my hand, but the way he acted around Danni did some to my limited new-found self-confidence.\n\n\"Hey, Danni, forgot our workout time?\" He even had the audacity to wink into my direction and to touch Danni\u00b4s waist again like he owned her and wanted to let me know it.\n\n\"Ah, not today, Tom. I\u00b4ve had plenty of workout today with Peter.\"\n\nHaha, touch\u00e9. He looked a little stupid for a millisecond and a half before regaining his composure.\n\n\"Not a chance, sweetie. Just because you played a few video games with some nerd, you\u00b4re not going to miss your workout.\"\n\n\"Video games? In your dreams, Tom. Why don\u00b4t you go to the gym with my lover. He wants to work on his muscles. I\u00b4ll just watch you two.\"\n\n\"Huh?\" He was obviously stunned, probably because of the \"lover\" remark. \"Okay, boy, let\u00b4s go.\"\n\nBoy? Such an asshole.\n\nWe went to her fully equipped gym and he was nice enough while showing me all the machines, working out a training plan and recommending nutrition supplements. It was mostly fun and I had problems listening to him while Danni was toying around with the other machines with a cat-like elegance. Damn, so sexy.\n\n\"You listening, buddy?\"\n\n\"Yeah, yeah. Not too much weight on this one or I\u00b4ll have back problems soon.\"\n\n\"Right. You can ogle her some more later. Lucky bastard.\" He laughed, but not in an entirely nice way.\n\nHe was showing off constantly. He was adjusting the machines to weight levels that I couldn\u00b4t possibly handle and watching me failing to do it and readjusting the devices. After a while it turned out that Danni wasn\u00b4t going to have any of that.\n\n\"Ah, Tom, honey...,\" she cooed after she had suddenly turned up behind us. Honey? I was a little confused.\n\n\"It must hurt you that Peter is so much better than you in bed, Tom.\" Her voice was still sweet like honey.\n\n\"WHAT?\" Tom asked as both of our heads snapped around.\n\n\"Stop flirting with me and stop demeaning Peter in your subtle way.\" Her tone had suddenly turned ice cold. It was interesting and I was just glad not to be on the receiving end of this. \"You\u00b4re not here to show off your muscles, you\u00b4re paid to help Peter acquiring some. You think you\u00b4re up to the task without annoying any of us?\"\n\n\"Uh?\" He was more than stunned. His face was turning red in record time.\n\n\"I\u00b4m Peter\u00b4s woman now, Tom. If you can\u00b4t handle that, we need a new trainer. Make up your mind.\"\n\n\"Uh. Ah, sorry, Danni. I didn\u00b4t mean to... Sorry if I\u00b4ve acted inappropriate.\"\n\n\"Don\u00b4t apologize to me.\"\n\n\"Uh? Okay, sorry, Peter.\"\n\n\"It\u00b4s okay.\" He offered his hand and I took it.\n\nFinally, after Tom had left, I looked at her questioningly.\n\n\"Peter, I am a beautiful woman. I think we can safely assume that.\"\n\n\"Quite safely, yes.\"\n\n\"Thank you. But I\u00b4m yours. I have promised you that and I meant it.\"\n\n\"Thank you.\" I kissed her again.\n\n\"If I have my way we will stay together for quite a while. And all the time men will hit on me.\"\n\n\"I see.\"\n\n\"Everywhere. The personal trainer will, as you\u00b4ve seen. If I fire him and hire another, he will do the same. If I fire that one too and hire a woman, she might do the same. If she won\u00b4t, nothing much will be gained. If we buy groceries, it will happen. If we go to a restaurant. If we take a walk. If we go to a party. This is a constant factor in my life and believe me, it\u00b4s no fun.\"\n\n\"Okay. I understand.\"\n\n\"I\u00b4ve had sex with Tom in the past. He\u00b4s an attractive man.\"\n\n\"I\u00b4ve seen that.\"\n\n\"Yeah, but he\u00b4s a prick. He\u00b4s self-centered and he\u00b4s lousy in bed. Hell, none of them can hold a candle against you in bed, you\u00b4re some kind of miracle man. And you\u00b4re just so nice, kind and sensitive. Be relaxed, you\u00b4re my man, the others don\u00b4t stand a chance. Believe me, I have tried dozens. Big ones, small ones, athletic ones, intellectual ones. Not because I\u00b4m a slut, but out of desperation, because it felt so hollow with all of them. I hoped that there had to be more, but there never was. With you everything suddenly was just right. I feel at home, I\u00b4m completely satisfied, I enjoy every second we are together, I need to look at you all the time. I have never loved somebody, not even my family. So could what I feel be described as falling in love? I don\u00b4t know, but I suspect it might.\"\n\n\"Wow.\" I was deeply moved by her speech. \"I feel the same. A few women have used my cock in the past. But I\u00b4ve never felt much and never derived a lot of pleasure from it. But with you I have an intimacy I\u00b4ve never experienced before. I still can\u00b4t believe what is happening here, but I think I\u00b4m falling in love too.\"\n\n\"Oh, Peter.\" she shouted and jumped into my arms, smothering me with kisses. \"You know, I hadn\u00b4t expected this. Anna told me about your miracle-dick at a time I had already given up on men. I didn\u00b4t want to live with one I felt no intimacy and no sexual satisfaction with. So I decided to try you out, just to see if I was theoretically able to have an orgasm. I haven\u00b4t expected something to come from this, but I\u00b4m so glad it did.\"\n\n\"So am I, Danni. So am I.\"\n\n\"Of course, you will have to move in here.\"\n\n\"Oh. I will?\" My tummy was tingling. She seemed to be serious about all of this.\n\n\"Yes. Either that or I will move into your apartment.\"\n\n\"Oh, I think we will take mine then.\" We both laughed. \"Danni, I can\u00b4t. I\u00b4m still a student.\"\n\n\"So am I. So what?\"\n\n\"How will I get to the university?\"\n\n\"There are these special things with a wheel at each corner.\"\n\n\"A shopping cart?\" I said jokingly.\n\n\"Smartass. Either we drive together or you will take one of my cars.\"\n\n\"Oh, you have more than one?\"\n\n\"Ah, Peter, I don\u00b4t want to ruin what we have. Or to burden you or to lessen you. But we will have to talk about this sooner or later. I\u00b4m rich.\"\n\n\"Yeah, I have already noticed subtle hints pointing towards that.\"\n\n\"I\u00b4ve inherited it.\"\n\n\"No surprise there. How are we going to do it?\"\n\n\"You live here, this will be our house for all practical purposes, not just mine. If you want to make some changes to it, let\u00b4s talk about it. If you want to invite your friends, go ahead. You use the cars however you want. You will get a credit card and use it however you want. When we go to a restaurant, you will pay with our card. If either of us wants to buy something big, we talk about it and decide it together. The money is mine and it will stay that way, at least until we might decide to marry. But we will try to use it as if it is ours. What do you think?\"\n\n\"Okay, sounds good. Marry?\"\n\n\"Well, a girl can dream, can she?\"\n\n\"Oh, my.\" And I just had to kiss her again. Just to confirm that this was actually happening. Of course, I booked all of that under a sudden and maybe temporary infatuation beacuse of me saving her from the perils of frigidity.\n\nxx\n\nA few months later we were both nearing graduation and to my surprise, our relationship was still going strong. Her re-invention of Peter was starting to show results. My wardrobe was completely replaced, apart from some favorite sweaters that she mostly claimed for herself. My ungainly glasses were replaced by contacts, my hair styling was now existant and not just some random thing, guided by whatever force of nature had decided to play with it. I was slightly tanned now, partially from the nice holiday at the Mediterranean we had enjoyed. My workout had started to show some results too. I was not showing a sixpack too prominently yet, but my body fat was down to 12 percent and my muscles were growing constantly.\n\nOverall, I was hardly recognizable any more. Of course, my buddies were still the same. They had observed my transformation in awe, but had not yet decided to follow my example. Danni\u00b4s first appearances as my girlfriend had caused several cardiac problems among them. But they had gotten used to it eventually, greatly helped by her relaxed way to handle shy nerds. One difference was that we played our games mainly at our house, not at their modest one-room apartments. The TV was just so much nicer. And Danni never failed to mercilessly tease us all by serving snacks in low-cut tops, hot pants or too short skirts. My opponents seemed to lose some of their concentration at these times for some reason and I scored some easy wins. Danni and I laughed a lot about it afterwards and exchanged some high-fives.\n\nxx\n\nDue to our graduations we had not gone to parties recently. But today we both felt like we needed some time to wind down and have fun. So we took a taxi to Anna\u00b4s party. I felt a little apprehensive about it, keeping in mind the history Anna and I had of cheating on her husband Martin. He was a big guy and had cleaned my clock thoroughly once because of it. I had been able to stop the legal fallout on him after some struggling with the authorities, so I felt that we were even. He knew that Danni and I were a couple and that we were invited, but probably had no say in it.\n\nWe were greeted by Anna, who hugged me especially thoroughly, closely supervised by Danni. Interesting, a goddess like Danni can be jealous? It made me feel great, believe me.\n\nThe girls went to do some womanly thing or other and after a few minutes of standing around alone awkwardly, the dreaded confrontation with Martin became inevitable.\n\n\"Hi Peter.\"\n\n\"Martin.\"\n\n\"Um... Thanks.\"\n\n\"What?\"\n\n\"Well, you stopped the prosecution against me.\"\n\n\"Yeah, yeah. No problem. For a while it looked like I had no say in it. But they finally relented.\"\n\n\"Yeah. So I\u00b4ve heard. Thanks.\"\n\nI turned around to face him properly.\n\n\"Martin, I\u00b4ve fucked your wife. You had every right to rough me up. I think we\u00b4re about even now. So it was only fair to stop this nonsense.\"\n\n\"Um, Peter. You weren\u00b4t even aware at the time that she was married, right?\"\n\n\"No, I learned that later. But I suspected that she was keeping two men. But the status of her men was quite unclear.\"\n\n\"Then it was wrong to beat you up.\"\n\n\"Sure, violence is always wrong. But I never held that against you. I suspected that she was in some relationship and I had sex with her nonetheless.\"\n\n\"Yeah, but you didn\u00b4t have much of a choice, right?\"\n\n\"At the time I was too weak to fend her off. Later I learned how to do it.\"\n\nWe were silent for a few minutes.\n\n\"I envy you,\" he said.\n\n\"What? Why?\"\n\n\"Danni. She\u00b4s not the bitch Anna is. Danni would never cheat on me.\"\n\n\"Martin, you\u00b4re a handsome guy. Leave her.\"\n\n\"I can\u00b4t. She\u00b4s a cheating, lying, manipulating bitch but I can\u00b4t live without her. I can\u00b4t live with her.\" And he looked incredibly sad.\n\n\"Is she cheating again?\"\n\n\"All the time.\"\n\n\"What are you doing?\"\n\n\"Hoping that she will change some day. I just can\u00b4t leave her, I love her too much. It\u00b4s destroying me.\"\n\n\"You\u00b4re still smashing guys up?\"\n\nHe laughed. \"No, I\u00b4ve beaten that habit. No sense in doing it anyway, it won\u00b4t stop her. And the guys are not the problem, she is.\"\n\n\"Poor guy.\"\n\n\"Yes.\"\n\nSilence again. We were watching Danni and Anna dance, like every other guy in the room did. It was quite spectacular. And I had to agree, I really had gotten the much longer straw.\n\n\"You know why she keeps cheating?\" he finally asked.\n\n\"Anna? No.\"\n\n\"Because of you. That\u00b4s all I know about it.\"\n\n\"What?\"\n\n\"Seriously. Could you tell me why?\"\n\nI thought about it for a while. Danni had recognized my weaknesses and had built me up in a very gentle and nice way. She had transferred some of her strengths - styling, taste and self-confidence - to me.\n\nI knew where Martin\u00b4s weaknesses were. I couldn\u00b4t change his cock, but I could theoretically teach him a thing or two about how to please a woman in bed. Anna was obviously still cheating because she was looking for a another curve cock that could satisfy her.\n\nBut why should I help Martin by improving his sexual ablities? There was no reason - just me being a nice guy.\n\nCould it harm me in the long run? Maybe, if he set his sights on Danni at some time. He had already told me that he liked her and that he evied me for her. He was a good-looking guy and with improved sexual skills, who knew? Could he endanger me and Danni? Unlikely, but not impossible.\n\nWould it be fun to teach him? No. It would include watching him having sex with Anna. It would be awkward in the extreme as I would be the one she wanted in her bed and the three of us would know it. Maybe it would even be a little gross. I was not proud about my homophobia, but it was undeniable. The prospect of seeing another man naked didn\u00b4t excite me in the least.\n\nAnother problem was, would it even be possible to train him? My tips would be quite common stuff anyway. \"Take in her mood and her needs. Be sensitive, try to notice her subtle reactions to what you\u00b4re doing. Give her plenty of foreplay. Think about her pleasure before yours. Stroke slowly and pay attention to her clit.\" Stuff like that. Could I make someone a better lover by telling him such commonplace things? Was he maybe too handsome to change anyway? Maybe it was time for a new theorem, this time for the beautiful part of the male population. So what should I do to help the poor bastard?\n\n\"I have no idea, Martin.\"\n\nYeah, yeah, call me an asshole. But it just wasn\u00b4t worth it. I mean, he had hit my ass up. And if he was too insensitive to please his woman, that wasn\u00b4t my problem.\n\n\"No idea at all, sorry.\" And I went to my beautiful fianc\u00e9e, smiling at Anna and at the Emmy/Julia/Maria trio that had most conveniently shown up to watch us with gaping mouths.\n\n23. Also a magical number. I was 23 years old. I had the most beautiful girl in the world, was about marry her, my graduation was almost done, I had no financial worries. 23 is good. Way better than 22."
    ],
    "authorname": "stev2244",
    "tags": [
        "nerd",
        "dream women",
        "miracle cock"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/mismatched"
}