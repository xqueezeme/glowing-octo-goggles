{
    "title": "There and Back Again Ch. 105-106",
    "pages": [
        "Chapter One Hundred Five: Waiting Game\n\n After a bit more discussion, Theron put his helmet back on and disappeared back into the Barracks. Nathaniel followed him because, despite his status as an Arl, he wasn't willing to evict any of the current occupants from their rooms, especially the women. I suspected he was trying to avoid Kallian entirely, and while I couldn't blame him, it was going to be awkward eventually.  Might as well get it over with now.\n\nAfter that, waiting several days for the Landsmeet was...really, epically, boring. We went out to the taverns and estates of sympathetic nobles so Aedan and Alistair could meet with them again, with several of us posing as guards. Alistair, Aedan, Duncan, Theron, Nathaniel, and Eamon met several times to iron out their plans. In contrast to their first official tavern visit, Alistair remained largely sober, to my relief. \n\nOghren, Bel, and Faren asked permission to leave Denerim and head to the Calenhad docks; I was surprised the ginger dwarf had convinced his fellows to go along with it, but perhaps they were just bored, or being supportive friends. Despite their initial dislike for the Casteless dwarf, Bel and Gorim had actually become friends with him; Faren was such a good-natured guy, it was hard not to like him. And Oghren had never cared about Faren's social status, only whether he could swing a sword. Once Faren understood he'd been accepted, his bitterness receded and a solid friendship developed.\n\nI contemplated warning Oghren off of Felsi, but wondered if having a child wouldn't actually be good for him. His drinking had moderated to some extent, so he wasn't so often passing-out-drunk, but I still doubted he was stable emotionally. I did, however, threaten him to within an inch of his life before he left.\n\n\"Listen, Oghren. You go and impregnate that girl and then leave her, I'll personally kick your short ass from here to Orzammar and back. If I hear about a little dwarven baby with no father near Lake Calenhad, you'd better hope you can run faster scared than I can mad.\"\n\nHe laughed loudly and belched in my general direction, but I saw Zevran hand him a suspiciously familiar little vial of contraceptive powder before he left, and I hoped that meant he'd at least thought about it.\n\nAnora stayed stubbornly in her room, apparently angry with Aedan and unwilling to face us, the unwashed masses. Zevran tailed Erlina, and was quite convinced that she was using a drop site to pass messages, but he wasn't able to intercept any of them.\n\n\"She's good,\" he stated, almost looking impressed. \"I can't be sure exactly where the drop happens, and all of the possible locations are protected from snooping.\"\n\n\"She's a bard,\" Leliana agreed. \"Well-trained. The thing I don't know is whether she is working for Anora, or against her.\"\n\n\"I'd hope Anora would vet her inner circle well enough at least to be sure she isn't working for Orlais,\" Aedan mused. \n\nTheron just glowered.\n\nShe did call me in to talk to her a couple of days into the wait. I went in determined to act the meek, unassuming, stupid noblewoman, while simultaneously sidestepping any direct questions and avoiding anything resembling the truth. The invitation was for me alone, so I wouldn't even have Aedan there to help out. Eamon was positively piddling in his drawers, convinced I'd mess up and give away everything. \n\nLeliana helped me dress up as a proper noblewoman, in a dress with a corset \u2013 which I hated \u2013 and my hair braided in an ornate style. I took Kallian with me as my 'handmaiden', after double-checking with her that she didn't mind the ruse; I hoped she could help me if I ended up in too much trouble. Just having a friendly face around would hopefully help, and Kallian seemed to hold no deep respect for the Queen after her experience with Fereldan nobility, which couldn't hurt.\n\nIt was with significant trepidation that I knocked on the door to Anora's room. Erlina answered and ushered us in, and I stepped inside and then curtseyed to the best of my ability \u2013 which admittedly wasn't much. Erlina frowned, but Anora seemed to ignore my fumbling attempt at courtesy. She held out her hand, which I briefly touched without squeezing, as Leliana had shown me.\n\n\"Lady Cousland,\" Anora murmured. \"Thank you for joining me.\"\n\n\"Your Majesty. It is my honour. Please, call me Sierra. Lady Cousland is how I think of my mother.\"\n\nI kept my head down, avoiding eye contact, instead glancing around the room. Anora's room was larger than the one I theoretically shared with Solona, even bigger than Alistair's. Somewhere she'd found two small tables and some chairs, and there was tea set up at both \u2013 a fancy set at one table, which also boasted a silk tablecloth with a beautiful floral centerpiece, and a plainer set at the smaller table clearly meant for 'the help'. I stifled my grimace and turned my attention back to Anora, who was watching me closely.\n\n\"Yes, your mother. Dear Eleanor. She and I were friends, did you know that? She helped me greatly after I came to Denerim as a girl. I was very sad to learn about her...\"\n\n\"Murder?\" Anora flinched, and I winced. \"Sorry. It's a touchy subject, your Majesty. I never got to meet my parents before they died.\"\n\n\"So you said.\" She gestured to the table, and we both sat down while Erlina and Kallian fussed with our dresses and poured us tea. \"I admit, I'm curious how that came to be?\"\n\n\"I don't honestly know, your Majesty. The people who raised me either didn't know, or never said. I only knew I was the Cousland's daughter and that I had a twin brother.\" I took a small sip of tea as an excuse to keep avoiding eye contact.\n\n\"And do you have proof of this bloodline?\"\n\n\"No. Not that it matters for Aedan or me.\"\n\nShe gave me a strange look, but changed the subject anyway. \"And where were you raised, did you say?\"\n\nI wasn't fooled; Anora knew I hadn't said, but was hoping to catch me in a lie. \"I didn't say. Far away from here. I'm afraid I'm not at liberty to say exactly where.\"\n\n\"Not at liberty to say? Why ever not?\"\n\n\"The people who raised me would prefer to remain unknown. It could be dangerous for them if someone sought to use them \u2013 or me \u2013 against my brother or, since he joined, the Grey Wardens.\"  I wonder if she has any idea that I'm lying through my teeth? Hopefully she puts it down to evading her questions.\n\n\"Or Alistair.\"\n\nI glanced up, surprised she was so forward, but looked away quickly. \"Yes, your Majesty.\" I cursed internally as I felt my cheeks flush.\n\n\"Theirin men can be charming, no? So handsome, so sweet.\"\n\nI looked up again to see Anora watching me with a hint of amusement behind a predatory smile. \"As you say, your Majesty.\"\n\n\"My Cailan was like that, as was Maric. They could charm the birds from the trees when they put their minds to it. Though Cailan preferred charming the smalls from young, vulnerable women instead. A trait it seems he and Alistair share?\"\n\nI opened my mouth to deliver a scorching reply, but stopped at a panicked look from Kallian. I closed my mouth again and hummed noncommittally. \n\nAnora chuckled. \"Oh, ho, it seems he was more successful than I assumed! Could it be you actually care for him?\"\n\n\"I do, yes.\" It wasn't like she couldn't tell; admitting it didn't really hurt me.\n\n\"And yet, Aedan insists you have no interest in being his Queen.\"\n\n\"I would be terrifically unsuited to it, your Majesty.\"\n\n\"Interesting. Some may not believe that to be true \u2013 if you are, as you say, the only daughter of the Teyrn of Highever, some may think just your bloodline would make you quite suitable.\"\n\n\"I'm not much for believing in the power of blood. I think we should earn positions of power by proving our ability.\"\n\n\"And glad I am to hear that! As such, I'm sure you can see the benefit to supporting me. My bloodline may not be what traditionalists such as Eamon believe to be necessary, but clearly it would be a better bet than placing poor Alistair on the throne, unprepared and untried?\"\n\nI was taken aback by her blatant campaigning for my support. She'd been blunt in game, of course, but I thought they couldn't possibly have portrayed her right. It was almost laughable. \"I don't-\"\n\nShe cut me off. \"And there are benefits for yourself, as well, of course. If he were safely removed from the succession, Alistair would be free to be with you, instead of giving you up for the Crown. Surely you can see I am the better option.\"\n\nI tried, somewhat unsuccessfully, to hide my grin. Kallian, worried that I would give myself away, ostentatiously spilled her tea, causing Erlina to cry out and scurry for towels to soak up the hot liquid. By the time that was cleaned up, I'd managed to control my expression.\n\n\"I could not oppose my brother, your Majesty. I believe he knows what is best. If he thinks a Theirin should be King, I'll not disagree with him.\"\n\n\"Even to your own detriment? Even given a better alternative? You seem an educated woman, Sierra. Do you truly believe it takes a man to rule a country? That some mythical connection to Calenhad and dragon blood makes a good leader? My husband had the same bloodline, but he was a well-meaning fool. This country does not need more well-meaning fools. Platitudes will not drive Ferelden to recover.\"\n\nI was getting angry at her constant disparaging of Cailan and Alistair. I shouldn't have been surprised \u2013 I recalled her in game saying something about Alistair being 'biddable' but essentially useless \u2013 but the audacity of saying so in front of someone who'd already admitted to having genuine feelings for the man was more than stupid. And I really, really couldn't leave her with the delusion that I thought she was unsuitable because she was female.\n\n\"I think you didn't hear my entire statement from earlier, your Majesty. I do not believe men are better suited than women. I do not believe an accident of parenting defines who will be good at a job. I judge people based on their own merits \u2013 their accomplishments, and their abilities.\"\n\nShe opened her mouth to interject, and I held up one finger to forestall her. \"Please, let me finish. I cannot judge Cailan's actions, given that I wasn't present to see them for myself. I have, however, seen both your actions and Alistair's. In the few months I've known him, Alistair has distinguished himself in battle, helped gather the armies that will defeat the darkspawn threatening this country, has befriended the Queen of Orzammar, and earned the friendship and loyalty of all of those around him. He has proven himself a man of action, someone who will suffer great personal risk and loss for his loved ones and his country.\"\n\nI stood, stepping away from the table slightly, putting my cup down gently on the saucer. \"During that same period of time, with many times more power and influence than the 'unprepared, untried bastard' you've been complaining about, you have allowed Rendon Howe to slaughter my parents in their home and then take over the Arling of Denerim, not only tacitly allowing his treason but rewarding him for it. You allowed the son of the former Arl of Denerim to kidnap, rape, torture, and kill dozens of citizens from your city, and then allowed him to be captured in turn and killed in his own dungeon. \n\n\"You watched as your father abandoned your husband on the battle field, watched again as he began a civil war to grab for power, weakening Ferelden's defenses against the Blight, watched as he hunted and tried to kill the last remaining Grey Wardens in Ferelden. You watched him close the borders to the other Wardens, poison any political figures who could challenge his power, and in the end, you betrayed those who tried to rescue you when your inaction failed to keep you safe from either Howe or your father.\n\n\"In what way have any of your actions shown any ability, whatsoever, to lead? To be the Queen this country needs? You have no accomplishments to boast of, beyond that the administrative functions of the government ran well during Cailan's reign. This country does not need an administrator, your Majesty. You say you could stop none of what happened \u2013 but with your power, your influence, how could you not? Ferelden will need a strong hand, some serious reforms, and a leader willing not only to get her hands dirty, but also to stand up for her citizens and protect them from within and without. And I'm afraid you just don't have a record of proving you're capable of or willing to do any of that.\"\n\nAnora stood, face flushed with anger, eyes flashing. Her voice was surprisingly level when she replied; I almost expected her to screech in her rage.\n\n\"And you think you are capable of doing what you believe I have not?\"\n\n\"No, your Majesty. I told you. I know I'm not. Which is why I will never be the Queen of Ferelden. This isn't about power, not for me. I grew up without any, and I don't want it now. The only thing I want is for the country I have come to love to be free from the Blight. For its citizens to be protected from anyone who wishes to harm them, be they Orlesians, darkspawn, or entitled nobility who see them only as pawns to be used for personal gain. Power isn't what's important.\"\n\n\"Power is always what is important.\"\n\n\"And that's why you don't deserve it.\" I turned away, and then turned back, repeating my awkward curtsey from earlier. \"Your Majesty, with your permission, I find myself feeling quite tired. I believe I shall go have a rest.\"\n\nShe nodded stiffly, and I turned and walked out the door, Kallian at my heels. Before I got two steps down the hallway, she hurled an insult at my back. \"Enjoy that 'nap' with your bastard while you can. Even without the throne getting between you, it's only a matter of time before he tires of you anyway.\"\n\nI paused, briefly, before resuming my walk. The door slammed behind me, and I heard a muffled scream, followed by the crashing sound of china being thrown. I heard a chuckle from behind me, and whirled to see Zevran emerge from the shadows in a corner.\n\n\"Ah, cara mia, I'm not sure Eamon will be so thrilled with your little monologue to our illustrious Queen, but I found it enjoyable. It seems the tea set may have taken it personally, however.\"\n\nI laughed. \"I hope she threw the cheap one, not the fancy one. Isolde isn't going to be happy if Anora wrecked her favourite tea pot.\" Kallian snickered, and then excused herself and walked away, leaving me with the Antivan.\n\n\"Are you all right?\"\n\nI sighed. \"I should have known better than to lose my temper. You have to give me credit, though, for not spilling too much truth about my origin or what I know...she just really pushed my buttons.\"\n\n\"Your...what?\"\n\n\"I mean she just poked at me until I was so angry I lost it. Do you really think she believed I would side with her?\"\n\n\"I don't think she discounted the possibility, Bellissima, but no, I don't think that was her goal.\"\n\n\"Then what? What would she gain from pissing me off?\"\n\n\"People who are angry often reveal more than they intend. I suspect she hoped to learn more about you, as well as Eamon's \u2013 or Aedan's \u2013 strategy for the Landsmeet.\"\n\n\"All she had to do was ask for that. I'd have told her \u2013 totally discredit Loghain, and her, if she betrays us. It's not rocket science.\" \n\n\"Rocket...?\"\n\n\"Apparently when I'm upset I revert to Earth jargon. I mean that it isn't complicated.\"\n\n\"Everything is complicated for a politician, my dear.\"\n\nI sighed. \"I suppose. Now I'm going to go take a bath. I feel icky after that conversation.\"\n\n\"You certain you don't need someone to wash your back, bella donna?\" He winked at me.\n\nI giggled. \"I sure do. Have you seen Alistair anywhere?\"\n\nZevran groaned and theatrically clutched his chest in mock pain, and I chuckled all the way to the dining room, where I found Alistair and dragged him away from his card game amidst good-natured ribbing.\n\nWhen Aedan and Eamon questioned me later about our meeting, with Theron in the room, I thought Theron would choke, he was so angry. \"A well-meaning fool?\" He paced back and forth, running his hands through his long blond locks in agitation. \"I shouldn't be surprised, I suppose, because it's what she needs everyone to believe in order to take the throne alone. But isn't there supposed to be some sort of prohibition about speaking ill of the dead?\"\n\nNone of us had any answer for that.\n\nEamon was unimpressed about my rant, as predicted, but Aedan brushed it off. \"Anora knew I had no intention of supporting her at the Landsmeet. She may not know our true plans, but that doesn't change anything. If Sierra's correct, she was going to betray us from the moment I refused to support her. Nothing that Sierra said will affect any of that.\"\n\nI was relieved he wasn't angry, even if Eamon still hadn't said anything pleasant or looked at me with anything more than a disdainful frown on his face since my wedding.\n\nNo one but the servants saw Anora again until just before the Landsmeet\n\nTwo days before the Landsmeet, Riordan, Dougal, and Conrad returned from scouting. They thought they had located two Deep Roads exits the darkspawn were using in the Korcari Wilds, and had seen some of the horde massing south of Lothering. The town had been razed and then abandoned, and while there were roving raiding parties into the bannorn \u2013 presumably stealing women to turn into broodmothers \u2013 most of the horde had spread out in the Wilds and to the southwest of Redcliffe. There had been no sign of the Archdemon.\n\nWith Duncan, the Wardens had chosen an area in the Southern Bannorn to face the might of the horde as it marched on Denerim. A contingent would be left outside of Redcliffe to defend the town and castle from the feint, but the rest of the combined armies would amass on the plains, completely blocking the main Imperial Highway \u2013 the only decent pass leading to Denerim that wouldn't require several days extra travel to go through the Brecilian Forest. A group of Dalish would scout to the East, however, to send for reinforcements in case the Brecilian was targeted. And Theron planned to evacuate Denerim anyway, just in case the horde broke through.\n\nThe three men blended quite seamlessly with our group, settling into bunks in the barracks without complaint and spending most of their time training, sparring with each other or Eamon's soldiers, or playing guard like the rest of us. Dougal, by far the oldest in the group even including Eamon and Duncan, became the unofficial grandfather, good-naturedly teasing everyone and sitting with Wynne to talk about 'the old days' and complain about the young'uns. Conrad picked up where he'd left off flirting with Morrigan, Leliana, Solona, Erlina, and anyone else who caught his eye, though I noticed he left both Kallian and me strictly alone. I was grateful, not wanting to have to deal with a jealous Alistair, and I wondered whether he was clever enough to realise any advances towards Kallian would be unwelcome, or if someone had warned him off. Either way, I was pleased, though Anders was less so when he caught the red-headed Warden hitting on Solona.\n\nAnders and Solona seemed to have worked something out between them; I didn't think they were sleeping together, but the two were inseparable during the day. Anders' hovering had become actual interaction, and the two were sickeningly cute, staring at each other all day long, all moon-eyes and sighs. Apparently almost getting killed really is the key to forgiveness. I thought of Aedan and Zevran, who were equally besotted, and smiled.\n\nKallian tried hard to seem unobtrusive as much as possible at the estate, constantly around Wulf or at least one of the women. She acted subservient when anyone else was around, but came out of her shell in small groups of familiar people, and I thought she might eventually be okay. She avoided spending time with any of the human men, though Theron did manage to pull her into a long discussion about the conditions in the Alienage and what could be done to improve the lives of its residents. I was happy to see her animated responses as she made suggestions, gesturing widely as she made a point. I wonder if she knows who she's talking to like they're equals. I certainly wasn't going to tell her.",
        "Wulf spent all his time broodily watching Kallian with his startling, mismatched eyes. I hope that doesn't end badly.\n\nI went to the Chantry, taking Leliana and Kallian with me, and met with Mother Boann. She was younger than I thought she'd be, and refreshingly forward, asking straight up what we wanted with her, specifically. Kallian thanked her for trying to intervene during her kidnapping in the Alienage, and then I explained that from what I'd heard, she was one of a very few in the Chantry who cared for the well-being of the elves, even if she was limited in what she could do for them.\n\nI asked if she would consider establishing a school for the children of the elves. My plan was for her to accept those of any age and begin with learning to read, then basic math, and perhaps a little bit of history and culture. And possibly even provide a meal each day to ensure the children were at least occasionally well-fed.\n\n\"If you didn't want to do it, you could hire someone to teach,\" I told her. \"I am willing to cover expenses for supplies for a while, and would consider paying someone to teach. And I think at least the Hahren, and maybe some of the better educated elves, should be encouraged to be involved, teaching their own histories.\"\n\nMother Boann was taken aback, but flattered that we had come to her; she felt she could probably teach the basics, though she may need help later on, but was unsure if she could convince the Grand Cleric of the importance of the project. I encouraged her to remind the Grand Cleric that she could teach some of the Chantry's history as well, encouraging the elves to be more devout \u2013 and to tell her that I would offer the Chantry a 'donation' for the running of the school.\n\nThe Mother told me she would discuss it with the Grand Cleric and let me know after the Blight was ended.\n\nBlake became Theron's eyes and ears, for the most part. He would have been a formidable spy; everyone ignored him when he was in the room. He openly eavesdropped on Eamon, Teagan, and Anora, and while he hadn't overheard anything too startling, he certainly had unfettered access to the entire estate. I spent a bit of time with him making sure he was settled, and he was still having reading lessons with Theron daily. He'd taken to everything \u2013 the reading, his responsibilities helping Theron, the spying (and certainly the food) \u2013 with alacrity. I was impressed at how quickly he learned, once he no longer lived in constant fear. The job as Theron's manservant, which started out as only a way to get him out of Redcliffe, became an enjoyable challenge, and I wondered in the end which of Blake and Theron would end up having helped the other more.\n\nMorrigan spent most of her time flying outside of the city; she had agreed, with some encouragement from me and Aedan, to teach Dariel to shapeshift into a bird \u2013 we all knew we could use one more aerial scout.\n\nAs the Landsmeet loomed, Alistair and I made love every night, and not infrequently even more often than that. I couldn't have said why we were both nervous \u2013 he was not to be King, and I knew at least roughly how things would end \u2013 but the closer we got to the day, the more desperate and insatiable we both were.\n\nI justified it to myself that Anora would see it as normal, at least \u2013 the two of us clinging together before we had to be separated by duty.\n\nThe day of the Landsmeet, we got up early, everyone bathing and getting cleaned up, dressing up in our most formal armour. The Wardens wore their tabards, except for Alistair; his dragonbone had been polished to a shine, his hair freshly trimmed by Leliana, his face freshly shaved. The rest of us wore our own tabards over our armour, the ones that identified us as companions. Theron wore plain but good quality armour, and Leliana also freshened up his haircut.\n\nZevran came to inform us that Anora and Erlina were already gone. They'd left earlier, or possibly even in the night. Everyone else was uptight at the revelation; I couldn't even be surprised. She had to find herself someplace to hide, after all, so she could make her grand entrance. I snorted in disgust and encouraged everyone else not to worry about it.\n\nThe dwarves had not yet returned, and we planned to leave Sten, Shale, and the mages outside of the Landsmeet chamber, and Wulf and Kallian at Eamon's; that left thirteen of us actually attending the Landsmeet. Zevran, Leliana, Riordan, Conrad, Dougal, Duncan, and I were to spread out throughout the chamber, alert and armed but not part of the proceedings; Eamon and Teagan would leave early to take their places among the other nobles. The rest: Alistair, Aedan, Nathaniel, and Theron, would enter together and stay on the floor, the likely centre of attention. Theron would keep his helmet on, as would the Orlesian Wardens, Zev, Leli, and I, so as to make it less conspicuous.\n\nBefore we left, I covered the process again with the group, reminding them that we would likely face Cauthrien on our way in, but trusting Aedan to talk her down; once inside, we needed to let Anora and Loghain talk long enough to hang themselves before we intervened. The only one I was truly concerned about was Theron; I hoped he'd learned the control that would be necessary to listen to the things Anora and Loghain said without revealing himself. \n\nHe isn't the man he was before the Blight, right? He can keep it together for the sake of Ferelden. I hope...\n\nWith one last deep breath, and one last sweet kiss from Alistair, I jammed my helmet on my head and set out, with the others, for the Landsmeet.\n\nChapter One Hundred Six: Landsmeet\n\nIt was a long walk across the city to the Landsmeet, and we'd had to get up way too early. I cursed the lack of technology again. I miss cars. And traffic lights. Who'd ever have thought I'd miss traffic lights? Denerim could definitely use them, with people, wagons, carriages, and beasts of burden everywhere, as there were. While we could have taken a carriage, given the crowded, narrow streets of Denerim, it wouldn't have been much faster. \n\nI was used to the walking \u2013 spending months on foot traversing Ferelden ensured my level of fitness could take it \u2013 but trying to get anywhere quickly was nigh-impossible. I sighed and just kept going.\n\nThe Landsmeet chamber was attached to, but separate from, the Palace. Everyone had to enter through the main doors \u2013 there was no favouritism for the reigning monarch, so no special entrances, and every noble house held a vote in the Landsmeet, though as I understood it, the minor nobility and non-landowners usually gave their proxy to their respective liege lords. Still, there were always expected to be dozens of nobles present, more for such an unusual circumstance as a debate over who would take the throne. \n\nTeagan and Eamon separated from us, leaving their guards outside with the other nobles' guards in a post designed just for that purpose. The rest of us waited a few minutes, until it began to sleet, the late winter weather unpredictable and uncomfortable, and as a group we surged toward the doors. Once inside, those who were to remain outside of the chamber in case we needed backup peeled off and found themselves an alcove in the foyer. The rest of us, shaking off the water, headed toward the ornate doors leading to the Landsmeet chamber itself. Aedan, Alistair, and Nathaniel led the way; I stood at the back of our group, and could not hear the conversation when Cauthrien stepped out of her own alcove and confronted us. She spoke with Aedan for a while, finally bowing formally and stepping back to let us pass.\n\nI felt sorry for her; whether Loghain was her father or not, he was her liege, her hero, and in less than a year she'd watched him fall from a man to be respected, even revered, to a treasonous, obsessive, insane reflection of who he had been. It couldn't have been easy.\n\nFinally the doors opened, and we filed in. As we'd agreed, most of us spread out and headed into the crowd of lower nobility on the floor, those without the standing to have a dais or alcove for themselves. The remaining four \u2013 Alistair, Aedan, Nathaniel, and Theron \u2013 walked through the crowd, which slowly parted in curiosity to let them through.\n\nI headed left, leaning against the wall below the empty alcove that had evidently belonged to my parents. It gave me a good view of Eamon and Teagan, the Grand Cleric \u2013 a wrinkled prune of a woman I immediately was sure I'd hate \u2013 Elemena, Arl Bryland, Bann Alfstanna, and the others who would be critical in the upcoming discussion. Duncan was opposite me, below Eamon's balcony; the others were scattered throughout the room as well. The floor was far more crowded than it had been in game, and I wondered if it was more to do with the game's details being vague, or whether it was because of the number of nobles who'd survived, that hadn't in game. It was clear, based on the many derisive looks being shot at Loghain, that there was far more enmity towards him than the game would have led me to believe.\n\nEamon was saying the line I expected from the game \u2013 disparaging Loghain, of course \u2013 his impassioned speech drawing some cheers and a bunch of chatter on the floor. Loghain had the temerity to be standing in Cailan's spot right in front of the throne up on the royal dais. Hardly surprising, but I wasn't the only person who noticed the placement \u2013 I saw several nobles gesturing to him and whispering amongst themselves, overhearing a few words, like 'King Loghain' said in a scornful voice. He stepped down, perhaps in response, responding sarcastically to Eamon's accusations, when he noticed Aedan, Alistair, Nathaniel, and Theron pushing their way to the front of the crowd.\n\nWhen he hit the bottom of the stairs, Loghain called out, \"Ah! And here, we have the puppeteer. Tell us, Warden, how will the Orlesians take our nation from us? Will they deign to send their troops, or simply issue their commands through this would-be prince? What did they offer you? How much is the price of Ferelden honour now?\"\n\nAlistair stepped forward before Aedan could, and responded, \"The Blight is the real threat here, Teyrn Loghain, not Orlais.\" The scorn placed on Loghain's title was obvious, but he kept a straight face. I was immensely proud, and for one minute, a stupid grin plastered itself to my face.\n\nAlfstanna and Wulff jumped in, agreeing vehemently, and then Loghain began to reply, confirming the Blight but questioning whether Wardens were needed to end it.\n\n\nAedan interrupted him, going completely off script, which amused me for some dark reason \u2013 I'd always wanted free reign to shout at Loghain in game, and finally Aedan had it.\n\nMy brother knew how to speak in public, his education as a noble's son obvious; he stepped forward, pitching his voice loud so it practically reverberated through the room; for the first time since we'd entered, all of the nobles stopped whispering amongst themselves and listened.\n\n\"You don't know the answer to that question, Loghain, because you never bothered to ask, or to listen. The truth is, Lords and Ladies, that Grey Wardens are the only ones who can kill the Archdemon. Cailan knew that.\" A little white lie, I supposed, that wouldn't hurt. \"So in effect, Loghain sending the Wardens to their deaths at Ostagar, and sending assassins after the remaining two who survived his betrayal, almost ended any chance Ferelden had at defeating the Blight.\n\n\"And all this so he could try to seize power before anyone could oppose him; he even sent his men around the country, declaring him King Loghain to anyone who would listen.\"\n\nLoghain tried to respond, but angry muttering which started out quietly soon became a roar of furious shouting. Aedan was able to raise his voice further, booming out over the noise, and they quieted again.\n\n\"And we know you were working with Rendon Howe, Loghain. He was many things, but he was not stupid; unless he knew in advance that King Cailan would not be coming home, he would not have felt secure in attacking Highever, massacring my family, or in taking over the Arling of Denerim and killing Vaughn Kendalls, the rightful heir, never mind torturing nobles and templars in his dungeon.\"\n\nBann Sighard shouted out, confirming that his son had been tortured; the angry muttering increased in volume again, and Loghain actually took a nervous step back from the seething crowd.\n\nLoghain, trying to regain control, replied, \"Howe was responsible for himself. He will answer to the Maker for any wrongs committed in this life, as must we all. But you know that \u2013 you were the one who murdered him. Whatever Howe may have done, he should have been brought before the Seneschal. There is no justice in butchering a man in his home.\"\n\nNathaniel stepped forward, and as one, the crowd fell silent. \"Actually, I killed him, Loghain.\" Nate turned and faced the crowd. \"I am Nathaniel Howe. I was warned that my father had gone mad, and I returned from the Free Marches to see the truth for myself. When my father realised that I opposed his actions, he captured me, torturing me just as he did Oswyn.\" He nodded to Bann Sighard. \"I am sorry for his actions with your son, my Lord. \n\n\"I was forced to endure, while my father gloated how he had Loghain in his pocket, how once he had broken me, he would force Anora to marry me and then a Howe would be King. When the Grey Wardens rescued me from captivity, I accompanied them to the dungeon, and it was I who put him down like the rabid dog he had become.\n\n\"Justice would not have been served by bringing him to your Seneschal, when he was undoubtedly in on the whole thing. When an animal develops a taste for human flesh, it must be killed, and my father was just such an animal, at the end. He deserved no other outcome, and neither do you.\"\n\nThere were assorted indignant cries at the revealed information, and someone at the back actually threw something at Loghain \u2013 I thought it might be a prune, or perhaps a small plum \u2013 he dodged, and it landed wetly on the floor behind him. The crowd surged forward, and it seemed they might actually be angry enough to rip the man apart with their bare hands. I caught Zevran's eye \u2013 he was fingering his daggers, working his way towards a scowling, pock-faced man who had gripped his sword and looked to be debating pulling it to defend Loghain.\n\nAedan shouted out again and the crowd paused to listen once more. \"Besides, Loghain, you would speak of justice? What justice was there in sending a blood mage to poison Arl Eamon, the one noble other than my father most likely to stand up against you? Are we expected to believe it was a happy accident for you that both of the families who could oppose you were conveniently out of the way? What justice was there in trying to have the Grey Wardens assassinated? In fomenting rebellion within the Circle?\"\n\nLoghain sneered and replied, \"I assure you Warden, if I were going to send someone to poison a noble, it would be my own soldiers. I would not trust to the discretion of an apostate. Nor would I consort with hired assassins or Circle Mages.\"\n\nAlfstanna stepped forward again. \"Indeed? My brother tells a very different tale. He says you snatched a blood mage from the Chantry's justice. Coincidence?\"\n\n\"Do not think the Chantry will overlook this, Teyrn Loghain. Interference in a Templar's sacred duties is an offense against the Maker,\" the wrinkled prune shouted, and there was more unhappy murmuring from the crowd.\n\nAedan followed that up with his own reply. \"I have the maleficar you hired, as well as the assassin; They can testify, if the Landsmeet feels that to be necessary.\"\n\nOne again, people started arguing amongst themselves, the noise rising to almost unbearable levels, when Loghain let out a wordless roar. \"Enough!\" he shouted, when everyone stopped to look at him. \"Whatever I have done, I will answer for later. At the moment, however, I wish to know what this Warden has done with my daughter?\"\n\nAlistair actually laughed. \"What have we done? We protected her from you, from torture at Rendon Howe's hands, from a forced sham marriage that would have given Rendon Howe complete control over the throne. She hadn't been seen since long before we came to town, Loghain.\"\n\n\"You took my daughter, our Queen, by force, killing her guards in the process. What arts have you employed to keep her? Does she even still live?\"\n\n\"I believe I can speak for myself. Lords and Ladies of Ferelden, hear me. This Warden has slandered and defamed Ferelden's greatest hero in a bid to put an imposter on Maric's throne.\"\n\nTheron stiffened, then I saw him irritably rub at his helmet with his hand, the closest to a face-palm he could manage through the metal face shield. Aedan looked at Anora, where she emerged from her hiding place, his excellent acting skills evident as he stared open-mouthed in disbelief. Alistair's lips moved, and I knew he'd be muttering something about not being surprised she'd betrayed us again. The entire Landsmeet seemed to gasp in shock...or, looking at the outrage on the faces of many of the nobles, perhaps it was disbelief.\n\nAedan scoffed. \"Perhaps, instead of being rescued, you'd have preferred being killed by your father's lackey or forced into a marriage allowing Rendon Howe to be the real power behind the throne?\"\n\n\"I know my father. He would never do less than his utmost for the sake of his country, but I needed to know your mind, Warden. You could have proven yourself an ally of Ferelden. It is unfortunate for all of us that you did not.\"\n\n\"And here I thought you might have some dedication to preserving Cailan's legacy, Anora,\" Alistair drawled, a sneer on his face. \"All we have done is to protect my brother's country from your father's madness!\"\n\n\"Cailan was nothing but a fool, a man-sized child. Just because someone means well, does not make him fit to lead, any more than you are!\" \n\nAngry muttering was the result of her poorly thought-out comment; I face-palmed as Theron twitched again. Stupid move, Anora. How many times will it take before you realise that bad-mouthing Cailan won't benefit you? \n\nI knew this farce wouldn't continue much longer.\n\nLoghain shouted over the grumbling. \"Who here can say that Anora is not fit to rule this land? And who can say that this Alistair is? We know nothing of him, save that he may have royal blood. For five years, Anora has been queen...\"\n\nTheron finally stepped forward, interrupting Loghain with an outstretched hand. He reached up to remove his helmet even as he began to speak.\n\n\"I believe I can answer that question.\" He shook his hair out, golden strands falling into place in his signature style; he handed his helmet to Alistair, who took it without hesitation, and immediately knelt. Aedan and Nathaniel also knelt; the rest of us watched, seeing if anyone would make a move towards Cailan. \"I am, after all, the king.\"\n\nI almost cheered as Anora's mouth fell open, her face blanching in shock \u2013 or horror. Loghain just looked sour, like he smelled something bad. Both continued staring at Cailan, apparently too surprised to react in any other way.\n\n\"Lords and Ladies of the Landsmeet. I was rescued at Ostagar by a loyal Fereldan who witnessed Loghain's withdrawal and came to my aid. I have hidden, ever since, at first to recover from my injuries, and then because I feared for Ferelden should Teyrn Loghain learn of my survival and make another attempt on my life. Alistair, who is indeed Maric's son and my half-brother, permitted this deception of trying to take the throne to allow me to hide and survive long enough to reach here and speak to you now.\"\n\nSlowly at first, but then faster and faster, nobles standing in the Landsmeet began falling to their knees, kneeling to welcome home their reigning monarch. A few, with angry scowls on their faces, looked to Loghain for direction, before reluctantly kneeling. Even the soldiers scattered throughout the crowd, clearly on Loghain's payroll, slowly took their hands off their weapon hilts before kneeling; finally, relieved, the rest of our party followed suit.",
        "Cailan stepped up beside Anora, shooting her a sardonic smile. \"Please stand. I thank you for your welcome home!\" The crowd chuckled, and Cailan smiled. \"As Loghain said, for five years, Anora has been queen, and a capable administrator she appeared to be. But at the first sign of trouble, before the impact of our loss at Ostagar could even be evaluated, she required a regent to ensure the country remained functional, a regent who immediately began a civil war. A regent who attempted to seize the throne for himself, while Anora did nothing.\" \n\nHe turned to Anora sadly. \"Once, I trusted you. Once, I believed you were infinitely more capable, more deserving of the throne than I ever could be. I'm sorry that you proved me wrong.\"\n\nAnora's face paled even further, if that was possible, and I wondered if she was replaying everything she had said in front of 'Theron' back at Eamon's estate. \n\nShe reached her hand out toward him, voice shaky. \"Cailan, I-\" \n\nHe shrugged her hand off his arm, effectively silencing her. He turned back to the crowd. \"I am back to regain my Father's throne, and to rectify the mistakes that have been made in my absence. Do I have the support of the Landsmeet to begin again, to fight for Ferelden?\" \n\nThere was an overwhelming roar of approval from the Landsmeet, and no one thought to call a proper vote given how clear the support for Cailan was. I wondered how much of that enthusiasm was simple relief that anyone other than Loghain would be in power; it didn't matter, as long as they'd follow him.\n\nWhen the noise died down, Cailan turned back to his father-in-law. \"Teyrn Loghain, I may have been able to rationalise your withdrawal at Ostagar \u2013 losing the entire army to save the King, as I recall, was something my father explicitly forbade you from repeating \u2013 though as one woman proved, all was not nearly as hopeless at Ostagar as you seemed to believe. I can overlook that mistake. However, the other things you have done, before and since \u2013 allowing Rendon Howe to perpetrate his atrocities, rewarding him for them, poisoning Eamon Guerrin, fomenting rebellion in the Circle of Magi, beginning a civil war, trying to have the remaining Wardens assassinated \u2013 those I cannot conscience.\n\n\"My Lords and Ladies, the Teyrn has perpetrated treason against the entirety of Ferelden. In light of my prolonged absence, I would ask your support in declaring him guilty, and sentencing him to be hung by the neck until dead at dawn tomorrow.\"\n\nAnora gasped and recoiled, while Loghain, mouth still agape at Cailan's unveiling, looked around the room for support, and, not seeing any, slowly slumped to his knees in defeat. The Landsmeet, now all back on their feet, muttered amongst themselves, but it was easy to see that, at least in this matter, Cailan would not lack support. Alfstanna was the first to speak.\n\n\"I, for one, agree wholeheartedly with the sentence. Waking Sea votes guilty. And may I say: welcome home, Your Majesty.\"\n\nCailan smiled and nodded, blushing slightly. The rest of the nobles began hurriedly adding in their agreement, none of them wanting to be seen as colluding with Loghain. Even Ceorlic, the snake I knew was attached firmly by the lips to Loghain's ass, voted guilty. Loghain slumped even further, not even deigning to make his speech from the game, seeming to understand that not even his own men stood with him.\n\nWhen the last vote was cast, Cailan glanced around, sharing nods with Aedan and Alistair, before turning back to Loghain.\n\n\"Very well. Loghain, by decree of this Landsmeet, your title and lands have been stripped, your property forfeit to the Crown. You will be held in Fort Drakon overnight, and at dawn, hung from the city gates until dead.\"\n\n\"No!\" cried Anora, but Cailan waved her off again as she rushed over to her father.\n\n\"Your Majesty,\" a voice rang out, and everyone shuffled to look around as Duncan stepped forward. \"If I may? I have a suggestion.\"\n\nCailan nodded, as Duncan knelt in front of the dais Cailan shared with a thunderstruck Anora and a defeated Loghain. \"I am Duncan, Commander of Ferelden's Grey Wardens,\" he announced, for the benefit of those who might not know. \"The Blight is the gravest threat in Ferelden at present, and will require everything that we Wardens and our allies can throw at it. It seems a waste to sentence this man, once a brilliant general and a capable soldier, to death, when his skills could be used to combat the Blight.\"\n\n\"What exactly do you propose, Warden Commander?\" Cailan was doing an admirable job of looking surprised and disapproving. Aedan and Alistair were also demonstrating their acting abilities, looking incensed as though they hadn't known this very thing would happen.\n\n\"Allow him to join the Grey Wardens, your Majesty. There, his expertise can be put to good use, and there are... compelling reasons to have as many Grey Wardens in Ferelden as possible.\"\n\n\"Yes!\" Anora cried. \"Use his skills, Cailan. The Joining itself can be fatal, can it not? And if he survives, a life spent dedicated to fighting darkspawn would be a better purpose than hanging. Surely even your need for revenge would be satisfied by that?\"\n\nCailan stared at Duncan for a few moments, then shifted his gaze to Loghain. For his part, the disgraced former Teyrn knelt upright, meeting Cailan's eyes for the first time, acceptance written on his face. He was sure, I suspected, that nothing would sway Cailan from his justice, and he accepted his pending death with grace. I have to respect him for that, even if only a little.\n\nCailan turned back to Duncan, gesturing for him to stand. \"Warden Commander, I will acquiesce to your request on two conditions.\"\n\nNow my interest was piqued; this hadn't been what we'd discussed at all. I was only aware of one. What other condition could Cailan possibly want to impose? I stepped forward unconsciously, watching as Aedan and Alistair exchanged confused glances.\n\n\"Name them, your Majesty, and if they are within my power, they will be done.\" Duncan smirked slightly, and it was clear he had at least guessed, if not known, what would be said.\n\n\"I will not tolerate this traitor in my country, Grey Warden or no. So my first condition is that, should he survive the Blight, Loghain will be transferred out of Ferelden, and never allowed to return. If he lives through the Blight, which I very much hope he does not,\" he said this with a glare sent Loghain's way, and the former Teyrn winced, \"your order will remove him from my borders.\"\n\nRiordan stepped forward, removing his helmet. \"I am Riordan, Grey Warden of Jader, your Majesty.\" Cailan nodded. \"I pledge that, should he survive, I will take Loghain back to Jader when I leave, where he can live the rest of his life protecting Orlesians from darkspawn.\"\n\nThere was a muffled gasp followed by some outright laughter, as Loghain stirred himself to object; he took one look at Cailan's face, and settled again, scowling.\n\n\"That seems most fitting, Riordan, thank you.\" Cailan smirked, then turned back to Duncan. \"My second condition is that, regardless of whether your new recruit survives, when the Blight is over, you, or other members of your order, will escort my former wife outside of Ferelden's borders, ensuring she arrives safely at her new home. Somewhere in Nevarra, I should think, or possibly even the Anderfels \u2013 we can make arrangements for the location once the Blight has ended. I cannot trust the men formerly under Loghain's command until they have been evaluated, and I would not have her slip away to cause more difficulty.\"\n\nDuncan nodded, reluctantly; there was a pregnant pause as everyone seemed to be watching the drama with bated breath. Anora stepped towards Cailan again, arms out, expression devastated, one tear artfully flowing down her cheek. \"Cailan, no. With you back, both of us together...we can fix this. We can make Ferelden strong again. You need me! I can-\"\n\n\"No, Anora. You had your chance. You have shown me, clearly, how I have failed Ferelden and my father's memory; I will work to fix my own mistakes. I thank you for your service to Ferelden for the five years before the Blight, but we are through.\" Cailan turned back to the crown again, looking up toward the little balcony where the withered prune stood.\n\n\"Grand Cleric, your Grace, I, Cailan Theirin, the King of Ferelden, petition you to allow me to put aside Anora Mac Tir, and eventually, Maker-willing, find another queen to rule at my side.\"\n\n\"On what charge do you make your petition, your Majesty?\"\n\n\"That she is barren, your Grace. Ferelden will need a royal heir.\" Anora gasped, but no one else even looked surprised.\n\n\"And do you have a new bride chosen at this time?\"\n\n\"No, your Grace. The Blight is my priority.\"\n\n\"Then I suggest you choose one soon, your Majesty. Very well, your petition is granted. Cailan Theirin, Anora Mac Tir, your marriage is now annulled. Your Majesty, please attend me at the Cathedral as soon as possible to sign the requisite documents.\"\n\n\"No! This cannot happen!\" Anora shouted. \"I am the Queen! You need me, Cailan!\"\n\nCailan nodded to the Grand Cleric, then turned to Riordan. \"Could I ask you and some of your Wardens to escort the former Queen to her chambers? She will be kept under house arrest until her departure.\"\n\nRiordan nodded, and between him, Dougal, and Conrad, they attempted to grab the sobbing woman, but Anora, pulling herself together, shook off their hands and, spine straight, posture stiff, strode out of the chamber. Loghain followed, dejectedly.\n\nCailan waited until the doors swung shut behind her before turning back to the Landsmeet and clapping his hands.\n\n\"Now, to the other business. Lords and Ladies, in the absence of a royal heir, I would like to begin with the matter of the succession....\"\n\nBy the end of the Landsmeet, Alistair had been recognised as a Prince of Ferelden, worthy of the title 'your Highness', even though he was a Grey Warden; Cailan requested Duncan's approval, and vowed to speak with the First Warden in the Anderfels after the Blight to smooth the waters. As an extension of that, I was recognised as Alistair's wife, with Cailan as a witness to the marriage. It made me a princess, much to my horror, and the laughter of those near enough to hear my outraged denial at the announcement. Alistair was named as Cailan's heir, until such a time as Cailan had heirs of his own, with Fergus Cousland next in line should both Theirins die during the Blight.\n\nHighever was formally returned to the Cousland family, but would be held in trust by the Crown until such a time as Fergus was found, as Aedan declared himself too busy to function as temporary Teyrn. The Arling of Denerim was left vacant, for now, to be administered by the Crown as well, and the Arling of Amaranthine was officially granted to Nathaniel Howe.\n\nIn light of the empty Teyrnir of Gwaren and the destruction of so much land in the south by darkspawn, Gallagher Wulff, former Arl of West Hills, was granted the Teyrnir. Two of his sons had already perished, but he yet had a daughter and a third son, so his succession was secure.\n\nSoldier's Peak was formally given by the Grey Wardens to the Crown, Duncan declaring that it was in recompense for the Wardens taking part in the rebellion in the time of Sophia Dryden; Cailan immediately leased it back for their use, though he pledged Crown money to ensure it was renovated as befitted a major military installation inside Ferelden. His condition for the Wardens being allowed to use it was that it would be administrated by a member of the Ferelden nobility \u2013 someone with business experience, but no land of their own, someone related to the King.\n\nI was completely stunned when he turned to me, and named me as the Steward of Soldier's Peak. He assured me that after the Blight would be soon enough to take up those responsibilities, and that help would be found to allow me to learn my role. He assured me that I would not have to issue judgements or sentences for criminals or the like, that I would swear fealty to the Teyrn of Highever, and that any judgements needed would be the responsibility of the Teyrn.\n\nAlistair looked as thunderstruck as I, but Aedan just smirked. I'm going to kill him. Later.\n\nHe also informed the Landsmeet that, after the Blight, the Wardens would be stationed in and around Amaranthine, with Nathaniel's approval, until Soldier's Peak was ready for occupation.\n\nIn many ways, it was like watching Sereda manage the Assembly in Orzammar. He used everyone's shock and relief that someone was taking charge to his advantage, managing to pass motions that otherwise would likely have taken days or months to debate. I was intensely proud of Cailan; he had clearly been plotting for a long time what he would do when he took back the throne."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-105-106"
}