{
    "title": "The Porn Star and the Prostitute",
    "pages": [
        "Chapter One\n\nDylan\n\n\"Alright my lovelies! You know how much I hate to disappoint all my cherished viewers, but I haven't had a weekend off in months! So after I finish up here, you're just going to have to satisfy yourselves with watching my videos until I come back online. Sorry! I'll miss you all as much as you miss me, I promise!\"\n\nThe comments that popped up after my explanation all assured me that not only would I be missed, but that they wished me a happy weekend. They also assured me that I deserved time off too and that they were happy that I was taking care of myself so that I didn't get sick. I know it's all artificial and superficial, but it genuinely made me happy that my fans expressed such concern for me.\n\nStupidly, this probably made me glow as I finished up giving them what they wanted, and then blew them all kisses before signing off. All I needed now was to take a quick shower and then I'd be able to get dressed and head off to a drinking session/party with my buddies. With them in college and me working odd hours, we hadn't had a chance to meet up in ages.\n\nI entered Anthony's apartment like a conquering hero. My friends all roared with enthusiastic cheers that I'd managed to show up. Several of them pounded me on the back and babbled things like:\n\n\"Dylan! So happy to see you again, man! How've you been?\"\n\n\"I'm good,\" I assured them with a grin. \"Working like a dog and raking in the dough! I've got nothing to complain about. What about you guys?\"\n\nThis set off a rumbling groan that circled the room. \"Studying so much we can't see straight!\"\n\nAlcohol was freely available on the kitchen counter, so I helped myself.\n\n\"Hey Dylan, what did you say you do again?\" Rob asked.\n\n\"I post videos on YouTube,\" I lied smoothly.\n\n\"Really, how come I've never seen anything by you?\" Anthony wondered with a frown.\n\nI waved that away by flapping my hand. \"That's not weird. I basically just ramble on and don't have much of an audience. I've never gone viral or anything.\"\n\n\"Oh... well still, you'll have to send me a link,\" he insisted.\n\nI shrugged. \"Alright, when I get home.\" I was already planning to claim I got so drunk I forgot -- should he remember to ask me about it later.\n\nWe all relaxed and played card games and the like that gave us an excuse to drink, but hopefully pace ourselves so that we didn't pass out or kill ourselves in the first hour. After a while, more guys showed up. Most of them were guys I'd never met before.\n\n\"I'm so happy you could make it!\" Anthony greeted them. \"Everyone, these are some guys I met in college. I told them that I was having a party for my buddies from high school, and they got a bit depressed because they're all from other states and can't hang out with their buddies all that often, so I invited them over.\"\n\n\"Ugh! You don't have to say it like that! It makes us sound pathetic!\" One of the guys protested with a groan.\n\nWe all laughed and changed card games so that everyone could play. After a while, we were all so drunk that I have no idea what game we were playing or who was winning. All I know is that hours had passed with us all laughing our asses off and we were all in that stage where we were sort of wound down towards passing out, but also not quite ready for the night to end.\n\n\"Hey, we should go swimming in the outdoor pool!\" Anthony suggested abruptly.\n\nI was sobered up just enough to realize that this was a bad idea. \"Naw man! You're so drunk that you'd probably hit your head and drown!\"\n\n\"Oh this is bad!\" Someone cried out suddenly, grabbing all our attention. \"Luka looks like he's about to puke and his best friend already passed out on the couch! I'm not going to hold his hair for him!\"\n\nI snorted in amusement even as I shook my head in disbelief that some guys could be so insensitive. What was so bad about helping a guy out when he was puking. I stood up and pulled Luka's arm over my shoulder.\n\n\"Don't worry, I got you,\" I promised him, helping him to the bathroom. Once there, he groaned pathetically over the toilet for a good two minutes before just shoving two of his fingers down his throat to speed up the process. When he was finished, I handed him a glass of water and rubbed his back as he rinsed his mouth out and spit the water into the toilet.\n\n\"Feeling better?\" I asked sympathetically.\n\n\"Yeah, now I just wish I could lay down for a bit,\" Luka groaned.\n\nSounds from Anthony's bedroom confirmed my suspicion that his girlfriend had arrived in the last couple of minutes and his bed was no longer free for guests to pass out in. The couch was already taken, and the chairs were not exactly the most comfortable place to pass out.\n\n\"Hmm... well, do you live far from here?\"\n\n\"I've been crashing on my friend's couch until I can find a place to live, so even though it's only a couple of miles from here, I can't go there while he's passed out here,\" Luka explained.\n\n\"Ah. Then I'll just take you back to my place. It's only a couple of blocks from here anyway,\" I informed him.\n\n\"Okay,\" he accepted in a faraway voice that let me know he was focused on his urge to pass out.\n\nOnce again slinging his arm over my shoulder, I let the others know that I was bringing him to my place so that he could pass out and sleep it off. Those that were still awake and coherent enough to understand me waved goodbye. They also promised to tell Luka's friend when he woke up that Luka was being taken care of.\n\nAt that point, it was easy enough to get Luka in my car and drive him to my place. The hard part was getting him back out of my car and into my apartment -- especially since it was on the third floor. Eventually, I realized that I had no other productive choice but to scoop him into my arms and carry him all the way to my bedroom. Then I set him on the edge of the bed and tugged his puke-stained shirt off him. Finally, I was able to tuck him in on the 'guest' side of the bed.\n\nMy bed was king-sized -- which made my relatively small room a bit cramped, but I felt I deserved the luxury and comfort and space this mattress provided, so why not? In any case, there was more than plenty of room and we wouldn't even be near each other. So, I stripped down to my boxers and slid into my side of the bed. Sighing happily since I'd had a fun night of much needed bonding with my friends, I stretched out, and then curled onto my side and fell asleep.\n\nIn the morning, Luka tapped on my shoulder. \"Hey, um... dude?\"\n\nI cracked my eyes open to squint at him. Ugh! It may not be the worst hangover in the world, but I was definitely NOT in one of those lucky euphoric pain-free states.\n\n\"Yeah?\" I asked.\n\n\"Couple questions: First, did we have sex?\"\n\n\"Nope,\" I replied with a shake of my head.\n\n\"Alright, second, why am I in your bed?\"\n\n\"You got sick and I brought you home to sleep it off,\" I explained.\n\n\"That part I vaguely remember, I just mean, why am I in your bed? Why not on your couch? Did you expect me to repay you with sex this morning?\" Luka asked in a tone like he thought this was a perfectly reasonable expectation.\n\nI snorted in amusement. \"Actually, as much as I am not opposed to the suggestion, I can't have sex for the next couple of days, and so, no. I simply figured that my bed was big enough for the two of us, and that we were both going to be passed out anyway, so why not?\"\n\n\"Oh. Thanks! This bed is REALLY nice! I'm sort of glad you didn't make me sleep on the couch,\" Luka said with a smile, then winced as he clutched his head. \"Alright, last question, what's your name again?\"\n\n\"Dylan,\" I informed him with a soft smile. \"Listen, I have a rare couple of days off, so I want to go back to sleep. But you can feel free to make yourself something to eat. I know you said you were staying with your friend, but if he takes a while to wake up, or if he's busy or something, you can feel free to stay here. Take a shower since you reek of puke!\"\n\nLuka laughed, which made his rich chocolate eyes sparkle merrily. \"Thanks man, I think I will.\"\n\nI rolled over and went back to sleep. Until the smell of bacon and coffee was so powerful that I couldn't help but wake back up. I trudged out to my kitchen to find that Luka had made breakfast, and since his hair was wet and he was wearing some of my clothes, I could only assume that he had already taken his shower.\n\n\"Good morning,\" Luka greeted cheerfully. \"I made a full breakfast.\" He pointed at the bacon, sausage, eggs, hashbrowns, and toast -- which were all on a plate set on one of the burners on low to keep it warm. \"I dished me up but didn't know how long you were going to sleep.\"\n\nAs good as the coffee smelled, I didn't drink coffee all that often because it gave me headaches and I was already hungover. So, I looked in my fridge and opted for orange juice instead. Plus a glass of water to hopefully rehydrate me and banish my hangover.\n\n\"Thanks,\" I murmured gratefully as I dished up.\n\n\"I was a bit shocked you had a fully stocked kitchen, to be honest. My friend usually only has the basics of boxed and canned food, and even though I do grocery shop, I don't usually have time to cook, so I just buy more of the same processed crap,\" Luka told me, probably just to make conversation.\n\nI shrugged. \"I usually do have time to cook and I actually sort of like doing it. You're one of Anthony's friends from college, right?\"\n\nHe tilted his head side to side a couple of times. \"Well yes and no. We do go to the same college, but I'm actually a friend of a friend. My friend that I'm staying with is one of Anthony's classmates and was invited to the party. I was basically asked to tag along, and I had fun -- before drinking too much and getting sick -- so I'm glad I went.\"\n\n\"What are you studying?\" I wondered, curious and not sure why.\n\nHe winced sheepishly. \"A bit of this and that. I know it's stupid! I've already been in college for six years and I've already gotten pretty much all of my generals and even a couple of degrees -- such as my AAS and a general accounting degree -- but nothing appeals to me, so I just keep taking classes, hoping that I'll eventually know what I want to do with my life. Currently, I'm majoring in business.\"\n\n\"Oh... well even that's respectable. I didn't even want to try college. I mean it was important to my parents, so I DID go for a year, but then I quit because it just wasn't for me,\" I told him.\n\n\"So... then did you just get a part time job or something? If so, that must be SOME part time job, because this place looks like you got some serious money,\" Luka observed, looking around at the actual quality of my furniture.\n\nI shrugged. \"More like I found a small niche that just so happens to work out well for me.\"\n\n\"Ah, well, good for you man! At least you're living a pretty good life,\" Luka complimented.\n\nI frowned. \"If you already have a couple of degrees, then why continue to go to school and rack up debt? Why not just get an accounting job and start saving up for your retirement -- or at the very least, something to live off of when you DO figure out what you want to do with your life.\"\n\nHe shrugged. \"Actually, I'm not racking up debt. I also have a decently good paying part time job and am able to pay all my expenses. The only reason I'm not living in my own place is that I was just kicked out of my apartment and am looking for a new one. And it's... surprisingly harder than I thought it'd be.\"\n\nI stroked my chin in thought. I didn't actually need a roommate, but I kinda liked Luka for some reason. \"I suppose you could actually just move in here. I don't have a spare room and I work odd hours, but my place is big enough that even if you crashed on my couch, you'd probably feel better than where you're currently staying, and like I said, my bed is huge, so I don't mind sharing. Just don't think I'm asking you to date me or even have sex with me. I'm not...\"\n\n\"Not gay?\" He finished with a laugh. \"Yeah, you don't give me vibes that suggest you're gay.\"\n\nI chuckled. \"Actually, I was going to say that I'm not looking for a relationship or sex, but since you're making assumptions, I'm actually Bi.\"\n\n\"Oh! Me too! I don't often find Bi men because it seems like everyone is against those of us who identify as Bi. I think that it's okay for women because they can form triads and the like, but with men, I think we just find it easier to claim to be the orientation of our partners for the duration. If we date a man, we claim to be gay, and then if we date a women, we say straight.\"\n\nI gave him a look of disbelief. \"That's actually messed up, you know that, right? After all, we live in a time when we should ALL be inclusive to the entire spectrum.\" Then I sighed sadly. \"But it does seem like there's less love for Bi men than all the other sexual orientations.\"\n\n\"Anyway, I'm glad for the offer. I also don't want a relationship and while I'm not opposed to sex, I'm actually glad that you're not expecting it. Most of the other people I know -- aside from my friend Cory that I'm crashing with -- sort of expect that if they let me stay with them, I should pay for it with some sex in addition to helping out with bills and chores and the like. And it's fun and all, but I dunno, I guess I think that it should be separate, you know?\"\n\nI chuckled because he was clearly babbling almost nonsensically. \"Yeah, I do.\"\n\n\"Great! Then if you're serious, I really wouldn't mind staying here. It'll save me a LOT of trouble!\" Luka agreed with a relieved grin.\n\nI glanced at the clock and realized that even though I had assumed that it was morning, it was actually well into the afternoon. \"Huh! It's later than I thought. I should probably go grocery shopping while I have time. Anything you feel like having for dinner?\"\n\n\"I wouldn't mind seafood alfredo,\" Luka answered without any hesitation. \"It's been a while since I've had a real dinner and I've been obsessing over alfredo for days!\"\n\n\"Alright, I could go for that,\" I agreed with a small smile.\n\nSuddenly, a phone rang and the ringer wasn't mine. Luka jumped up and raced to the bathroom so that he could grab his phone from his discarded pants pocket. I couldn't help but hear his conversation.\n\n\"Luka here! ... Oh, um... In about two hours? Yeah, I can do that! See you then!\"\n\nHe then ran back out to the kitchen. \"I've got a date in a couple of hours and I need to stop by Cory's and get some of my stuff and my car first. Will you be home tonight, or will I need to wait for you to come back and let me in when I return?\"\n\n\"Oh, actually...\" I trailed off as I stood up and walked over to one of the drawers near the door. I pulled it open and grabbed the spare key out of it. Then I tossed it at him. \"Here! If you're moving in, then you'll need a key anyway, so you might as well just take it now.\"\n\n\"Thanks man!\" Luka gushed with a happy grin, kissing me on the cheek before running off.\n\n\"He's got a lot of energy, I'll give him that,\" I mumbled to myself as he left the apartment and presumably ran out the building and down the block. If he had waited just two more minutes for me to finish up eating and put the dishes in the washer, I would have given him a ride, but whatever. He was probably going to Anthony's to check up on Cory, and Cory would probably give him a ride from there.\n\nWith not much else to do, I cleaned up a bit and headed out to shop like I'd said I should.\n\n***\n\n\"Oh wow! I didn't expect you home!\" Luka exclaimed as he burst into the apartment. \"I just came back between classes for lunch since I forgot to pack something to bring and I'm not a fan of the cafeteria food. Anyway, I thought you'd be working.\"\n\n\"I told you, I work odd hours, but yes, I'm actually about to head out in a few minutes. I just needed to finish showering and the like,\" I explained.\n\n\"Oh, so that's why you're dripping on the floor while you towel your hair,\" he remarked with a flirty smirk. \"Well, in case you come home before me, I have another date tonight and I don't know how long it'll take me, so I might not be home until really late.\"\n\nI frowned in concern. \"Won't that interfere with your studying?\"\n\nHe shrugged. \"You'd be surprised. I have a rather lazy attitude towards homework, but since I generally do well on tests, the teachers put up with me.\"\n\n\"Alright,\" I murmured since it was none of my concern.\n\nHe busied himself making a sandwich even as I went and got dressed. I only pulled on a tight pair of jeans and a clingy tee shirt, then I waved goodbye to him as I walked out the door. I had time to think while I was driving about my new roommate and came to the conclusion that his generally cheerful attitude had sparked an interest in me, because I KNEW with all certainty that it was fake, and... I wanted to eventually learn why.\n\nAbout a half an hour later, I pulled up to a pretty fancy hotel and went to the room listed in the text from the Director. As expected, the room was already set up and ready to go. I looked around with a happy nod because it was a fairly posh room and had a lot of space to work with. Not to mention a hot tub.\n\n\"I'm ready!\" I stated once the door was shut.\n\n\"We're still waiting for the actress,\" the Director informed me. \"But I can certainly explain what today's movie is about. You're going to be playing this guy's best friend.\"\n\n\"Hi I'm Rick, nice to meet you,\" he introduced himself.\n\n\"I'm Dylan, and you can call me Dylan, but my porn name is Digg Johnsinner,\" I informed him but he almost certainly knew that already.\n\n\"Oh! I'm sort of new to this, so I keep forgetting that we're supposed to go by fake names! My porn name is Real Hung!\"\n\nI laughed, eyeing his tan and muscular body up and down. He had golden blond hair and blue eyes, and sure enough, there was a telltale bulge in his tight jeans. \"I guess that just means it has to be true, otherwise you wouldn't make it far in the business.\"\n\nHe laughed too even as we shook hands.\n\n\"As I was saying, the two of you are best friends, and once the actress gets here, she's playing Real's wife. Real and his wife have invited you over for lunch and you all get to chatting about how hot you are and how much they've been wanting to invite you to bed with them. Simple, yeah?\"\n\n\"Yep!\" I agreed with a nod. I'd probably done this scenario a half dozen times already. It was one of my favorites because it was not only popular, but it also happened to be a lot of fun.\n\n\"Who's the actress?\" I asked because there was a busty blonde named Ashley that worked with me from time to time that was also very popular and tended to increase sales.\n\n\"Um, for this video, I really wanted to work the innocent angle of this being the married couple's first time doing anything like this, so I asked Miki to do it,\" the Director answered.\n\n\"Ah. Nice!\" I murmured in appreciation, then turned to Rick. \"She's a petite Asian woman, and as such, everything about her is small, making her feel nice and tight. You'll like her.\"\n\n\"Mmm,\" Rick hummed in anticipation.\n\nA knock on the door was answered by the crewman currently in charge of the door. He was a lighting specialist once the work started, but would also have the responsibility of intervening if anyone should happen to come to the door while we were filming. The crewman opened to door to let Miki in.\n\n\"Sorry I'm late! Traffic was terrible!\" She apologized profusely.\n\nJust like I'd been asked to wear something casual and comfortable with a hint of sex appeal, she was wearing something that made her look like a school librarian -- in other words, innocent. And probably shy.\n\nShe lightly ran over and hugged me. \"I'm so excited to work with you again! I haven't seen you since that gang rape scene about... three months ago?\"\n\nI nodded in agreement, giving her a kiss on the cheek. \"Sounds about right to me.\" Then I gestured to Rick. \"This is some newer talent named Real Hung.\"",
        "\"Newer huh? I guess I'll have to be real gentle with him,\" she purred with a mischievous smirk while ruffling his hair.\n\n\"You're going to be his wife,\" the Director explained the entire scenario to her and she nodded happily. \"Yes! Does this mean I get to be in the middle of a sandwich?!\"\n\n\"Yep! But also, we're going to be doing at least one scene in which Digg is in the middle of the sandwich -- since the two of you as a married couple want to fuck him into your bed.\"\n\n\"Oh!\" Rick blushed and looked away. \"I guess I hadn't realized that part yet!\"\n\nI gave him a concerned look. \"Is that breaking a hard limit for you?\"\n\nHe shook his head. \"No, it's just that I've only done two movies so far, and both were with women. When I was asked to do this one, I guess I just assumed that it would be us teaming up to fuck her. It didn't occur to me until just now that it'd be me fucking you. It'll be a first, but I'll give it my all!\"\n\nI patted him on the shoulder sympathetically. \"The irony of this industry is that since the majority of the viewers are men, they are either straight men who want to watch straight sex, or they are gay men who want to watch gay sex. Thus, the women get paid more for straight videos and men get paid more for gay videos. I'm NOT saying that you have to do them if you don't want to, but that you'll earn more if you are at least flexible enough to do some from time to time.\"\n\n\"Yeah, I've heard that before. I'm just glad I lucked into a production company that seems to value its actors. I've heard horror stories from the others that there are production companies that ply their actors with alcohol and drugs and basically treat them as expendable commodities.\"\n\nI nodded since I couldn't argue. \"I take it that being new talent, you're choosing to stay in the company house?\"\n\n\"Hell yeah! That place is NICE!\" Rick gushed happily. \"And everyone there has treated me like family so far.\"\n\nI grinned. \"I look back on my time in the house fondly. It just so happens that I've gotten popular enough that I could buy my own mansion if I wanted, but I'm happy to just have a place to call my own that my family can visit if they want.\"\n\n\"Alright, enough talking!\" The Director called out. \"We're going to start with the fully clothed scene at the table on the balcony. Everything is already set up and ready to go, and I'm hoping that you'll all be able to get this scene done in one take!\"\n\n\"Hey Real,\" Miki purred as she rubbed herself against him. \"Remember if you get nervous, that I'm just your horny little wife and I'm up for anything. There's nothing to be nervous about. We're all friends here and we're just going to chat like friends -- while eating lunch. But... take small and infrequent bites, and only take tiny sips of the wine.\"\n\n\"Yeah,\" I agreed. \"We've all done extensive body care to prepare for today, and so, we don't want to risk an upset stomach during filming. If you think of this scene more like a friendly chat that happens to have food to nibble on, you should be fine.\"\n\nRick nodded. \"Got it! I already feel like we're all friends, so this should be easy.\"\n\nThe Director gave him a stern look. \"Good. Keep that attitude, but also try to remember that we strive to provide a certain quality that not every video has. In fact, most of them have TERRIBLE acting! But our company chooses those who have at least a decent talent for genuine acting, so don't think that you can just blurt out your lines and say cheesy things -- just because this is a porn!\"\n\n\"No I know!\" Rick assured him, waving his hands just a bit for emphasis.\n\n\"Alright then!\"\n\nAnd with that, the three of us sat at the expensive and tastefully decorated glass table on the balcony so that we could start chatting about this and that. We started with real-ish things as we got into our characters and were able to form responses that were in character. Then suddenly, almost like magic, we were in character enough that the lines (that we made up on the spot) were real enough that anyone watching would believe that we actually were a married couple and their friend discussing sex over lunch.\n\nA good sign that we were doing a great job was when the Director not only didn't cut and have us redo anything, but also gestured for the cameras to follow smoothly when our group decided that it was time to stop pretend eating and head over to the couch to start things off.\n\nMiki's character was shy and innocent -- more or less -- and so timid. This meant that she got on her knees and pretended to be hesitant as she unzipped my jeans -- looking over at her 'husband' uncertainly when she discovered that I wasn't wearing any sort of underwear and that I was blatantly ready to go.\n\nRick nodded at her encouragingly, stroking her silky black hair in a comforting gesture and murmuring that she could do whatever she wanted and he wouldn't get mad. This set Miki at ease so that she could get to work giving me a blowjob. Damn! I'd forgotten how good her tiny mouth felt!\n\nThe thing about making Adult Videos was that I LOVED my job! I got so turned on just watching an actress or actor giving me head. And at times like this, when the angle was first time and hesitant, it was even better because there would be more time spent on foreplay things -- such as running her hands up and down my abdomen. Licking my hip at random. Stopping to kiss me when her character got up the courage to add a little romance to spice things up.\n\nA gesture from the Director encouraged Rick to get in on things and he decided to start by running his hands up and down her back before kissing and licking it. Then he had us adjust our positions just a little to make it easier for him to eat her while she was blowing me.\n\nThis scene was allowed to keep going since we were all so into it, until we came to a silent agreement to change positions again and moved from more or less kneeling on the softly carpeted floor to the plushly cushioned couch. I sat in the middle with my legs spread wide to not only give the camera an excellent view, but also to support Miki as she straddled me, facing away. My hands were on her hips to help her impale herself on me, which pulled sounds from her that sounded startled and slightly distressed -- but it was definitely an act for the viewers since her inner muscles squeezed me greedily.\n\nAfter letting the camera get a few minutes of this position, Rick knelt in front of us and resumed eating Miki. Her cries went from sounding alright to sounding really into it. When I got close, I pulled Miki off me and gestured for Rick to take my place on the couch so that I could take his place. Of course, I had to give the camera time to get good views of their sex for a few minutes, and to be honest, I was enjoying the scene of his well hung member utterly filling her tiny hole. It made her visibly swollen and puffy as he moved and she really did sound like it might just be too much for her, but she continually assured us all that it was:\n\n\"So good, baby, SO GOOD!\"\n\nThat scene culminated in her having a couple of actual orgasms before we all moved to the bedroom area of the suite. This was where the more complicated actions -- such as those sandwiches -- took place. Miki was clearly in heaven when it was her turn to be in the middle. She squealed and squirted until she needed a bit of a break, letting us know by suddenly insisting:\n\n\"Baby, baby! You want to try your friend, right? You want him bad, right? Show me how you fuck your friend, baby!\"\n\n\"Yes Ma'am!\" Rick said, sounding more cheesy than the Director usually liked, but since he was from the south and had a southern accent, the Director must have decided that it was in character and let it go.\n\nI grabbed my favorite lube off the bedside table and handed it to Rick so that he'd hopefully understand that he needed to use it. Miki also realized that he might need some helpful instruction, because now that her character had reached the absolute slut portion of the video, she was ordering him about almost like a Domme.\n\n\"That's right, baby! Lube up your fingers and stick them in there! Check how tight he is! Is he tight, baby? Are you picturing yourself fucking that tight hole?\"\n\nRick was groaning in a way that let us all know that he definitely was picturing it and couldn't wait to try it. I wiggled my ass in a clear invitation even as Miki used a handful of lube to rub his shaft. Burying my face in the bed, I moaned as I wondered if this was the biggest shaft I'd had in me. If not, it was certainly close, and the last one had been a few months ago, at the very least. I grabbed Miki's hand and had her stroke my shaft as Rick got busy trying to fit inside me.\n\nMoaning, I took a moment to thank myself for being diligent in my body care. For not only cleaning it out so well back there that there shouldn't be any problems or need for the scene to end in order to clean up things that no one wants to see on camera, but for ALSO spending my morning bath with a nice big toy to soften and stretch my muscles a bit. Followed by a plug that I'd left in for a good half an hour.\n\nAll in all, I was ready, able, and eager to put my all into this scene. I had even reached the state where chanting embarrassing things was only natural. \"Oh fuck yes! Like that! Fuck my hole, fuck it good!\"\n\nThat part of the scene didn't last too long since Rick clearly got close within just a few short minutes. He pulled out, gave me a rough kiss, and practically tossed me onto Miki. We took a few minutes to back down to a more romantic pace, kissing and fucking leisurely because she still needed a bit of recovery time and there was no need for me to damage my stamina yet.\n\nThen Rick was ready to join in, pressing me into Miki as he fingered me and prepared to fuck me once more. I groaned as this sensation -- my absolute favorite of all -- proved to be almost enough to set me off. Goddamn! I LOVE being deep inside someone when someone else is fucking me good and hard! I could do this for DAYS!\n\n\"Oh God! I'm gonna cum!\" Rick announced with a groan of pure pleasure only a few minutes later.\n\nThe Director, knowing that his voice shouldn't be picked up by the mic right above us, but that if it was, could easily be edited out of the movie, called out: \"Digg! Are you alright with a creampie finish?\"\n\nSince I WOULD be picked up by the mic, I couldn't answer him directly, but I COULD adlib it into the scene. \"That's right! Fuck me! Fill me up with your cum! Make me burst with it!\"\n\nRick groaned and gripped my hips as he pounded me extra hard a couple of times. \"Uh! Uh! Uh!\" He roared out as I felt his hot cum flood me.\n\n\"Yeah baby! Just like that!\" I cried out, feeling happy enough to kiss him if he was anywhere near my face, but since he wasn't, I kissed Miki -- who was clamping her inner muscles down on me to really give me a good time.\n\nAfter Rick finished, he flopped to the side of the bed to watch us finish up the movie. At that point, it was up to me to pound Miki into the bed until I was ready to cum too. I well knew that the camera would be focused on my ass for the the money making shot of Rick's cum leaking out, so I flexed my ass cheeks with each ramming thrust.\n\n\"Ah! Ah! Ah!\" Miki was crying out with each thrust.\n\nI looked over at Rick to find him grinning even as he lazily stroked his half deflated shaft. Then I looked down to see Miki so flushed with passion that her face was glowing a vibrant red. It was so beautiful that I was pushed over to the very edge.\n\n\"I'm so close!\" I announced, waiting for the Director to tell me what shot he wanted to end with.\n\n\"I think I want another creampie!\" He announced quickly, which was fine by me since I'm not certain I could have stopped to pull out and get a face shot anyway.\n\nWith the go ahead, I REALLY rammed Miki into the bed, pumping her full with some guttural gasps. To up the passion of the scene, Miki grabbed the bars of the headboard and used them to brace herself as she arched up into me and squealed like she was cumming too. I don't think she actually was, but she was rippling her inner muscles rhythmically to simulate it fairly convincingly. This made me sigh with bliss as I finished off.\n\nI rolled off her so that they could get the money shot of her squeezing my cum back out of her, and it was a nice thick white since I'd abstained as expected for the last three or four days.\n\n\"Alright, CUT!\" The Director called out. \"Damn Digg! I know I said try to get it all in one take, but I didn't really think the three of you could pull it off! And Real! Great job on your first time doing Anal with a man! Miki! Perfect as always!\"\n\n\"I agree,\" I murmured, giving her an affectionate kiss. \"I especially appreciated the simulated orgasm at the end.\"\n\nShe grinned and returned my kiss. \"I do Kegals all the time so that I can control it like that! I'm so happy that you like it!\"\n\nI got out of bed to go wash up a bit and use the toilet, which allowed Rick to snuggle up to Miki and give her affectionate kisses too.\n\n\"Perfect! Roll the cameras! We should end with the married couple talking about what happened, all snuggled up and romantic!\" The Director called out.\n\nLaughing softly since we were lucky to have a Director who cared about such things, I listened as Rick and Miki had a quick but surprisingly intimate conversation talking about how much fun they'd had and how they wanted to do it again sometime, but that they still loved each other and were determined to NOT let this ruin their marriage. I even popped back out of the bathroom for a minute to watch them give each other kisses so loving that they almost looked real -- meaning between a real married couple. I smiled at them both fondly, knowing that at least one camera was filming my reaction too, just in case.\n\nAfter the shoot was officially over, I hopped into my car and headed over to my own little studio. It was basically a second apartment that I had permanently set up with cameras, a really nice computer, and a large variety of costumes and toys. This was so that I could log onto a certain website and play with myself on a live stream for paying fans. They would give me suggestions as I went, so -- for example -- if I was playing with a toy and the angle was bad or there was embarrassing leakage, they could tell me to move a little or take a break to clean up. Or conversely, I occasionally had a couple of viewers who liked the rare leakage and asked me to play with it a little. Which a little was okay, but not much more than that because it quickly grossed me out.\n\nBut I always tried to accept and accommodate fan requests whenever possible. Which meant that there was never any sort of judgment from my mouth. I always turned my hangups into positive phrases like: \"Oh you like that, do you? Well aren't you just deliciously kinky?! Unfortunately, I'm not comfortable doing that at this time.\"\n\nMy viewers were very happy to find that I was able to go nice and slow tonight, considering that I'd spent all afternoon and a good portion of the evening fucking, it was definitely one of those 'tease and frustrate the fans for as long as possible' nights. But nearing midnight, I was finally recovered and ready to stop teasing myself so that I could get off and go home.\n\nAfter saying goodnight to my viewers and quickly checking the stats -- I'd done pretty well for a Monday night -- I drove home. Interestingly enough, Luka was just pulling up when I parked. I decided to stand in front of the building and wait for him to get out of his car and join me.\n\n\"Have fun on your date?\" I wondered with a knowing smirk.\n\n\"Always!\" Luka replied with a flirty grin. \"This one was a woman in her 40s and she was so grateful to get laid that I probably could have fucked her all night just to blow her mind, but I got class in the morning, so -- sadly -- I had to call it quits after a couple of hours and leave her panting in astonishment.\"\n\nI ruffled his soft brown hair before opening the door and holding it for him. \"I had a feeling you were going to say something like that. You have this deliciously rumpled look that just screams 'fresh from a good fuck!'\"\n\nHe frowned at me. \"You sort of do too, but it's... muddled. Like you fucked, took a shower, and then sort of lightly played around after that.\"\n\nI roared with laughter. \"You are astonishingly perceptive! That's almost exactly what I did!\"\n\nHe galloped a bit like a little kid once the elevator opened to let us out on the third floor, which made him arrive at our apartment door before me. He unlocked it and held the door open for me. \"I was that one annoying kid in school that could always guess which of my friends and classmates were having sex just by looking at them.\"\n\nI chuckled. \"I wasn't like that in school, but I've sort of developed the ability over the last few years.\"\n\n\"So...\" Luka asked once we were in our apartment with the door shut and locked. \"How was yours?\"\n\nI shrugged. \"It was really good. I had a threesome with a couple, and the guy had never done a guy before, but he was fucking hung! So I'm a bit sore, to be honest.\"\n\n\"Ooo! You're the bottom??? I would have guessed the top!\"\n\nI gave him a sexy smirk. \"Once again, you're making assumptions. I'll do it all. SO -- if you think we're ever going to fuck -- don't automatically assume that you'll be the one to top me.\"\n\nHe laughed. \"Yeah, no, as we both said, I'm not really looking for that. Especially not tonight. I'm a bit worn out and need to get some sleep before class.\"\n\nI nodded. \"Good! I'm also worn out and already took my shower, so you can feel free.\"\n\nHe sniffed himself. \"Yeah, I probably should...\"\n\nRuffling his hair again, I kissed his cheek before walking to my room and stripping off. I wasn't thinking about the fact that I didn't have any underwear on, nor the fact that I should probably put on some boxers since I had a nonsexual bedmate now. All I was capable of thinking about at that moment was the fact that that I was tired as fuck and normally slept naked. So I tossed my clothes at the hamper and slipped into bed so I could pass out.\n\n\"Damn!\" Luka swore appreciatively. \"Too bad I'm so tired! After seeing the entire package, I could almost be persuaded to try and get it back up again! As it is, I don't even think I can manage to stay awake for a quick rinse, sigh!\"\n\nI watched him as he finished stripping off, tossed his clothes on the hamper as well, and then crawled into the other side of the bed. \"Mmm! You've got a nice package as well. Now please try to shut up and go to sleep.\"\n\n\"No problem there,\" he slurred before yawning and drifting off.\n\nHappy that he wasn't planning to chat my ear off all night, I also fell asleep.\n\nChapter Two\n\nLuka\n\nIt had already been two months since I moved in with Dylan and things were going surprisingly well. At first, I was really paranoid that he would ask me a bunch of questions that I couldn't answer, but he had a lovely don't ask don't tell policy. Funnily enough, he didn't like to talk about his work either, so, never asked prying questions about mine. This meant that when we did talk about things, it tended to be more obscure things like our favorite classes as little kids, what we thought about kids in general, and which breed of dog was the fluffiest.\n\nTo my delight, we got along really well. He didn't seem to mind when I chattered on like a yappy puppy, and I knew that he needed times when he didn't have to talk. I respected that, after all, it was much more rare, but I had times like that too. He might be embarrassed to realize it, but he had a sort of faraway look come over him whenever he just needed to stop talking and zone out for a bit, and at those times, I would shut up and do something else. I had SO MUCH to do that I was never idle -- much to my dismay. I'd actually love to be idle more often, but unfortunately, between homework, my share of the chores, and working out, I was never still for long.",
        "Speaking of working out, that may actually be the best part of living with Dylan. He not only had some basic equipment in our apartment, but the building itself was in a slightly spendier part of town and had a full gym for the residents to use whenever they wanted. It was something I did before moving in -- working out whenever I could -- but since moving in, we often went together. I'd spot for him when needed, and he'd spot for me.\n\nLastly, if he REALLY needed some alone time, I could go for a nice long run. I actually did that every morning, running the four miles to school and catching a ride home with Anthony each afternoon. All in all, life was surprisingly good for me.\n\nA glance at Dylan showed that he was probably asleep in the lay-z-boy. His blue eyes were sealed shut and his dirty blond hair was just messy enough to suggest that he'd been napping a while. As much as I really wanted to just generally chat with him on my lunch break, I didn't want to wake him. After all, whatever he did for a living, his odd hours usually kept him out until at least midnight each night, and last night in particular, I think he was out past 2 AM. He probably needed his sleep.\n\nPersonally, I had to practically inhale caffeine on an hourly basis just to keep going through all my classes, my homework when I deigned to do it, and my job.\n\nMy phone rang just then, and since I'd been checking the time, I managed to answer it before it could wake Dylan. \"Luka here!\" I sang out softly.\n\n\"Are you free tonight?\" Asked a semi-regular client.\n\n\"That depends on how long you want me for. I'm already booked from 8PM on,\" I informed him.\n\n\"Damnit! I'm not free until after 9!\" He lamented, then sighed. \"What about tomorrow?\"\n\n\"I'm almost always free on Thursdays -- for some reason. So yes,\" I replied.\n\n\"Great! I'm hoping to take advantage of my wife being out of town, so how's 9 to midnight sound?\" He asked in excitement.\n\n\"Sounds good to me. Anything in particular you want?\" I wondered, since this client often liked to get kinky with me.\n\n\"Definitely! I'm going to lock you up in a predicament harness and use you quite thoroughly!\"\n\nI laughed. \"No problem, just remember that predicament play costs extra and that if you put any sort of gag in my mouth, you had better leave my eyes uncovered so that I can blink three times if I need to use my safeword.\"\n\n\"Don't worry about that, I have other uses for your mouth in mind!\"\n\n\"I'll bet!\" I exclaimed with a laugh. \"I'm quite looking forward to it. I'll see you tomorrow at 9 and remember to have enough cash on hand, otherwise I can't play with you.\"\n\n\"I will,\" he promised before hanging up the phone. I hummed happily as I made myself a nice thick ham sandwich on sourdough rye.\n\n\"You know, I wondered,\" Dylan murmured, startling me. \"It just seemed like there was a reason that you had a date with someone different every night, but I wasn't sure until just now. So you're a prostitute, huh?\"\n\n\"Um...\" I droned in hesitation. After all, I can't exactly confess that to most people.\n\n\"Do you have a bodyguard to ensure your safety during predicament play?\" Dylan asked rather than press me for confirmation.\n\nI shook my head. \"No, but I don't even let that become an option until I know I can trust a person. This guy's... mostly harmless. He thinks he likes it rough -- and that's why he goes for bondage. But in actuality, he just wants to pretend he's forcing some poor schmuck to give him hour long blowjobs. It's nothing really.\"\n\n\"Alright, so long as you think you'll be safe. But maybe you should text me your general location just in case something goes wrong.\"\n\n\"Huh! You're taking this pretty well,\" I observed, feeling like I should be shocked but more blas\u00e9 than anything.\n\nHe shrugged. \"I can't exactly judge since I'm a porn star and a sex operator for a website.\"\n\n\"Sex operator?\" I questioned in confusion.\n\n\"Bad word, sorry. Performer,\" he clarified. \"I perform sexual acts on camera for clients on a website. I guess the only real difference between our jobs is that half the time I don't interact directly with my clients, and the other half I'm interacting directly with other paid actors.\"\n\n\"Whoa...\" I exhaled in awe. Then I stroked my chin in thought. \"Huh! That must make you a lot of money, since you were able to afford this place all on your own and have it well furnished.\"\n\nHe shrugged again. \"I got lucky. I have a large following of avid and generous fans. Not everyone can make a decent living in this industry.\"\n\nI nodded in agreement. \"I tried it once, but I didn't really have what it takes to do it on camera in front of a bunch of people. Plus, what I was asked to do -- basic gangbang fucking, I guess -- turned me off. I much prefer to give my clients one on one attention where I give them exactly what they need, and very often, all they really want is my mouth and hands anyway. I mean don't get me wrong, it's full on fucking at least half the time, so it's not like I never do, but when all they want is a nice long oral orgasm, then that's what I'm happy to give them.\"\n\n\"I understand,\" he stated with a nod. \"In fact, in many ways, that sounds really nice. I'm mostly asked for group scenes like threesomes, gangbangs, orgies, things like that.\"\n\nI flicked my hand out to point at him. \"Oh! NO WONDER you're always talking about threesomes and orgies! I was actually wondering why your dates were never with just a woman or a man instead of both. That makes sense now! And here I was beginning to think one on one sex just didn't do it for you.\"\n\nHe laughed. \"Whereas last night, I actually did have just a single client. One of my fans paid rather a lot for a private session starting at midnight, and so, I was playing with myself for him via webchat until he was satisfied.\"\n\nI couldn't help but laugh so hard that I doubled over from it. \"THAT EXPLAINS EVERYTHING!\" I roared. \"No wonder neither of us ever wants to fuck the other!\"\n\nDylan winked at me flirtily. \"Well I wouldn't say I never WANT it, but I'm saving it for my fans and movies.\"\n\nI nodded in agreement. \"Exactly! And I'm saving it for my paying clients! So... how many movies have you done?\"\n\nHe shrugged. \"I don't know, I've lost count at some point. An average of one a week for the last several years. Minus major holiday weeks. And sometimes the shoot can actually last several days because things go wrong during a take. It's actually very rare to get it all filmed in one take. The chemistry between the actors has to be just right, and even then, all the stars have to align and God himself has to be into it.\"\n\nI laughed. \"I'm glad I don't have to deal with that part! All I have to do is show up at the hotel room and give my client exactly what he or she wants. I'm lucky in that my clients are pretty evenly split between the genders -- which is exactly what my little Bi heart wants.\"\n\n\"Do you ever have Trans clients?\" Dylan wondered, clearly curious.\n\n\"Not that I know of. I mean if they are, they haven't told me -- although I don't know that it would make a difference for me,\" I replied after a moment of thought.\n\nDylan nodded in understanding. \"There's a whole niche fetish market for shemales -- which I understand to be different from Trans in that they would be M2F but they just have breast implants and leave it at that. At least until they decide to finish the transition. Anyway, I'm not sure why, but they're one of my hard limits. I once told you that I'll do it ALL, but that...\" he shook his head. \"I just can't wrap my head around having sex with one person who has both genders at the same time. I'd probably be fine if they had actually transitioned one way or the other, and I don't really know what it is about them that turns me off, but I am fortunate in that the company I work for respects hard limits.\"\n\nI grinned. \"That's another good thing about my line of work. I ALWAYS choose my clients -- or at least, if I don't like something about a person, I can choose NOT to take them on. I started with one very ideal client who gave me a lot of word of mouth references. ALL my clients come to me via recommendation, and so, I feel like those that truly like me -- my regulars -- have my back by not recommending me to anyone they don't trust. I'm sure it probably doesn't work that way for everyone.\"\n\nDylan looked speculative now. \"Alright, but you still have to be concerned with your personal safety. For example, do you always use protection and how often to you get tested?\"\n\nI smiled at him. \"I always use protection with new clients until they can show me proof that they tested clean, and even then we generally use protection. After all, a lot of them are married and don't want to get caught by giving their spouses something caught from me. So it's in their best interest to keep me clean. And I get tested once a month. So far, never caught anything more than minor infections -- which is why there's Monistat in the bathroom closet.\"\n\nDylan nodded in understanding. \"Yeah, that happens to me sometimes too. But since I work with a company concerned for safety, none of the actors or actresses are allowed to work without current test results, so I also get tested monthly. How much do you get paid -- if you don't mind my asking?\"\n\nI tilted my head side to side. \"It depends on things like what they want and how long they want me. Something quick and basic is about a hundred dollars, and the predicament play I have scheduled tomorrow will probably earn me at least a thousand. It really will depend on what exactly he wants to do.\"\n\n\"That's not bad for a night's work!\" He complimented.\n\n\"What about you?\" I asked curiously.\n\n\"I average a couple thousand per movie -- but keep in mind that I've made it in the industry, so I get paid more than other actors. The REAL money comes from that website since that has the viewers paying me directly in various amounts. Depending on how many are watching and how generous they're being, I can easily make a thousand or two a day.\"\n\nI was fascinated now and didn't even care that I was so late for my next class that I basically had to skip it at this point. \"So what do you do with all that money? Clearly you're not filling this place with tons of expensive bling, so... are you sending it to your sick mother or paying off debts or something?\"\n\nHe gave me a probing look for a long moment, and then shrugged. \"I'm mostly just putting it in a bank account and letting it earn interest.\"\n\nThat excited me. \"You should hire an Investment Banker! Did you know that they have people whose JOB is to invest money for others so that they EARN a lot of money off their money?! It's like letting your money fuck like bunnies and watching it just grow and grow!\" I ended in a mildly frustrated sigh. \"Unfortunately, even though I'm doing well, I'm not truly making enough to hand it over to the bank to invest for me yet.\"\n\nHe stood up and walked over so that he could lightly bonk my head with his fist. \"If you're that damn excited by it, why don't you use your accounting degree to get a job AS an Investment Banker?\"\n\nI snorted in amusement. \"Banks don't generally like to hire people who cannot explain how they've been earning an income for the last several years.\"\n\n\"Ah,\" he stated, knowing full well that I was right and that putting 'prostitute' on a resume would more than likely get me referred to the police.\n\nMy phone rang again. \"Luka here!\"\n\n\"Hey, since you're skipping class, can you meet me somewhere for a chat?\" Cory asked.\n\n\"Why aren't you in class? And more importantly, what's wrong?\" I asked with a concerned frown.\n\nHe sighed morosely. \"I think my girlfriend is cheating on me.\"\n\n\"Alright Cory, I'll meet you at the Olive Garden. My treat.\" And even though I wasn't hungry -- having just eaten a sandwich -- I could go for some dessert, so it wouldn't be a waste to meet there. Plus, at this time of day, it would be a relative quiet place to talk.\n\n\"Say hi to Cory for me,\" Dylan murmured.\n\n\"See ya later!\" I sang out just before I kissed him on the cheek and took off.\n\nCory was so upset about the possibility of his girlfriend cheating on him that I couldn't get a word in edgewise and basically got to sit there savoring a delicious strawberry cheesecake as he rambled on and on about every little thing she'd done to make him suspicious. Eventually, he had practically dumped her in his mind and buried his face in his arms so that he could try not to cry over this fact.\n\nI sighed and rubbed his back comfortingly. \"You know, and don't hate me for this, but maybe you should ask her about some of this before you jump to the conclusion that she's cheating on you. None of what you said was: I caught her in the act -- so maybe she's innocent?\"\n\n\"You think?\" He asked hopefully.\n\nHonestly, the evidence he presented was shaky at best, but if he suspected something, there was probably a reason to be suspicious. So I shrugged. \"Well, convicting her in your mind before she's even had a chance to defend herself is a bit unfair -- to say the least. And the way you are now, you've basically ended things in your mind. Would you REALLY be better if you broke up with her and then found out that you were wrong?\"\n\nCory sighed miserably. \"All my girlfriends have cheated on me and I have no idea what I'm doing wrong.\"\n\n\"Not communicating with them properly would be my guess, but before you go blaming everything on yourself, THEY are the ones in the wrong if they're cheating. Even if you are an asshole and piss them off until they feel they are driven to it -- and I'm not saying that you are, you're actually a decent guy -- but even if you were, they would STILL hold a good half or more of the blame for cheating on you rather than picking a fight over your shitty behavior or just breaking up with you,\" I pointed out.\n\nHe snorted derisively. \"That's a bit rich, coming from you!\"\n\nI raised a brow, not quite sure what he was getting at.\n\n\"You never have a girlfriend! You go on dates with a LOT of different women and I'm willing to bet that you don't tell them about each other, so, what? Half? Of them probably think they're dating you -- in which case you'd be cheating on them! How can YOU tell me to communicate more?!\" Cory asked with a light glare.\n\nI rolled my eyes. \"First of all,\" I held up my pointer finger. \"I'm Bi, so half the people I sleep with are men. Second,\" I added my middle finger, forming a narrow vee shape. \"NONE of them think we're in any sort of committed relationship because YES I DO talk to them and lay out clear rules and boundaries. And third,\" I added my ring finger to form a W. \"The people I sleep with sometimes ARE cheating on their partners and they tell me all about it. Know what I tell them? I tell them to fucking TALK to their partners and try to fix the underlying problem! But even so, it's none of my business -- I'm just there to fuck.\"\n\nCory sat back with an expression of shock. \"I... I knew that you were sleeping around, but I never thought you were so heartless as to help people cheat!\"\n\nI was tempted to smack him. \"Cory, the only reason they TELL me that they are cheating is because I don't judge them. I listen to them and even offer advice. Even if I decided not to fuck them out of a sense of moral obligation, they'd still cheat, they just wouldn't tell that person what they were doing. So my point about communication still stands!\"\n\nHe narrowed his eyes at me angrily. \"Have you ever fucked any of my girlfriends?\"\n\nI rolled my eyes at that. \"NO! Why would I do that when I NEVER have less than 5 people who want to fuck me each night?\" And besides, what I couldn't tell him is that I wouldn't because I couldn't charge them and risk them telling HIM that I was a prostitute, and at this point, I didn't need to have sex unless it was with a client. I got so much of it at work that I just didn't need it when not at work.\n\nHe pursed his lips and must have thought about how none of his girlfriends who had cheated on him had ever even mentioned me as a possibility. Eventually he sighed in acceptance.\n\n\"Fine, but man! You really shouldn't be the homewrecker like that!\"\n\nI sighed. \"That's the completely wrong attitude to have about it. Think about it this way, if you were married and knew for a fact that your wife never cheated on you and YOU were hit on by a woman, is it the oblivious woman's fault for not knowing you're married? Is it you're wife's fault? No! If someone hits on you and YOU neglect to mention that you are married and take her up on the offer, then it's YOUR fault for cheating. Where my morality differs from yours is that I'm willing to accept that you might have a valid reason for doing so. I'm not saying it is a GOOD reason, but it's valid to you. YOU are trying to tell me that not only would the woman you are cheating with be at fault as a homewrecker, but that there are NO valid reasons for doing so. So I stand by my original advice: Go fucking TALK to your girlfriend!\"\n\nHe growled a long sigh before nodding. \"Alright Luka, you're right in that nothing good can happen if I don't know the truth. And strangely, I feel a little better about my love life now that I've heard more about yours.\"\n\nI laughed. \"No, you haven't heard about my love life at all! You've heard about my sex life, there's a BIG difference!\"\n\nHe suddenly looked very worried about me. \"Hey... why DON'T you have a love life?\"\n\nI took a deep breath as I thought this over. It was a very fine line of what I could tell him without telling him things I couldn't. \"Well... mostly I don't WANT one. I like my sex life and I've never found any single person I thought I could love.\"\n\n\"WAIT!!!\" He blurted out much too loudly. Luckily, there was only one other couple on the other side of the room and they barely glanced at us. \"Wait wait wait! YOU DO have a love life! I just realized it! You said you're Bi! That means that you like guys too, right?! So that means that you moved in with Dylan because you're DATING!!!\"\n\n\"Oh God! What?! NO!!!\" I practically shouted. \"You've got it all wrong!\"\n\n\"Oh come on! I've been to his place when I drove you home from school and the like, and I KNOW that it's only a one bedroom apartment! I just thought you were crashing on the couch like at my place, but you're SLEEPING with him!\" He exclaimed in all certainty.\n\nI was at a loss for words for a moment and stroked my chin as I thought this over. \"Huh... you know, if you look at it that way, this IS the longest I've slept in the same bed with the same person in my life! BUT! You're still wrong. I one hundred percent guarantee you that I have not had sex with Dylan, and so, we don't HAVE a love life.\"\n\n\"Well why not?\" Cory wondered, sounding curious more than anything.\n\nI shrugged. \"Neither of us want to be in a relationship, and we both have plenty of sex with others. At this point, I consider him just a really good friend.\"\n\nCory got a sly expression on his face. \"Maybe you should try it. Who knows? MAYBE you'd both like it!\"\n\nI rolled my eyes at him. \"Maybe when I'm old enough to retire.\" I checked my watch and sighed. \"Look, now that I've missed my last class of the day too, I should really get back and do my homework before my date tonight.\"\n\n\"Oh? Who are you going on a date with?\"\n\nI smirked at him. \"Just some bored housewife. I see her about once a month when her husband goes out of town on business. The hilarious thing is that he always SAYS he's going for a day longer than he really is and then comes to see me on that day before he has to go home.\"\n\n\"So... you're seeing them BOTH?\" Cory asked with wide eyes.\n\n\"Yep!\" I confirmed, blowing him a kiss as I tossed enough money on the table to cover the bill plus a generous tip. \"But like I said, I've got to go!\"\n\nMy client that night was normal. As I said, a bored housewife that just wanted a little romance and special attention. She wanted someone to make love to her like her husband used to when they were first married. Specifically: lots of oral foreplay and only a little actual penetration. It was -- perhaps shockingly -- my favorite type of encounter. I got to use my skills to make her feel good. To pamper her a bit and remind her that she's still a goddess. Then I got to fuck her until I'd had my fun too. All in all, my specialty.",
        "The next night was my kinky client -- which wasn't the woman's husband. As he said, he put me in a harness that restricted my movement. My hands were bound to my sides and my legs were bound to themselves so that I could not close them nor stretch them out. He spent the first half an hour or so giving me general punishment -- striking me with a little crop as he vented frustrations about his employees and the like. The crop stung but didn't truly hurt, so I put up with it.\n\nIt's not my kink. I don't mind it on occasion, but my kink is... huh! At this point, I'm going to have to go with pampering others. Next time, I'm going to have to ask one of my female clients to let me start by bathing her and brushing her hair. Maybe shaving her and painting her nails. Damn I have a weird kink!\n\nAnyway, after he finally got out all of his frustrations, my client basically fucked my face for a couple of hours. I have a lot of practice at this, so I was able to relax and just let it happen. Oral always gets me hot, so I was definitely hard. At one point, he stopped, turned around, and saw how much I was leaking.\n\n\"Oh? What's this? Is my fucking your face making you horny and desperate?\" He emphasized his question by stroking my shaft with the little crop.\n\nI knew better than to laugh. \"Yes Master!\" I gave him a perfect little pout. \"I want it so bad. Fuck me please?\"\n\nHe groaned happily. \"How can I say no when you beg so prettily?\"\n\nI groaned rather happily myself when he wasted no time and simply grabbed the lube so that he could prepare me for entry as quickly as possible. I kept up the little pleading whimpers I knew he wanted to hear until he was ready to bury himself deep.\n\n\"Yes Master!\" I cried out in encouragement. \"Fuck me! Fuck me hard! PLEASE???\"\n\nFuck! He found my prostate almost the moment he entered me, and he made it his mission to hit it as much as possible. Mmmmm.... I couldn't move much, but I could still curl my toes and arch my back a little. Fuck that feels so good!\n\n\"Oh yes! Oh yes! Oh yes!\" I chanted, getting closer and closer to cumming.\n\nMeanwhile, he was shouting: \"Ah! Ah! Ah!\" So loud that he almost sounded like he was barking, but it strangely added to my excitement. The sensation of him orgasming -- a sort of rippling sensation that would be accompanied by a soothing hot wetness if he wasn't wearing a condom -- was that little bit I needed to get me oh so close.\n\n\"May I please cum, Master?!\"\n\n\"Yes, you gorgeous little beggar, cum for me, cum for me NOW!\"\n\nHaving permission, I surrendered to the glorious climax that burst through my body, feeling my cum spurt all over my chest. Had I not had so much practice at staying awake long enough to get back home, I would almost certainly have passed out. As it was, the bliss was wonderful enough that I was able to drift on it long enough for him to undo the harness and take it completely off me.\n\nThen he took his responsibility seriously by checking my wrists and legs. Massaging them to make sure that circulation had not been cut off completely and that it was flowing again properly after having been a little compressed for so long. What brought me back to full reality was when he helped me sit up just a little and offered me some water.\n\n\"You did so well, my little beggar,\" he praised in a soft and tender voice.\n\n\"Thank you Master,\" I replied almost automatically in an equally soft voice.\n\nHe pressed kisses to my temple. \"I know I don't get to see you as often as I'd like, but I have good news. My wife is going to be gone every Thursday for the next several months. Will you book them all for me?\"\n\n\"Of course!\" I accepted with a happy smile. He had just promised to be my best client for the foreseeable future. It really did make me happy. I snuggled into him, nuzzling his neck. \"I look forward to it.\"\n\nKissing my temple again, he reached over to the bedside table and opened the drawer. \"I saw this the other day and thought of you.\" He held up a nice black leather collar with a gold pendant carefully sewn over the throat area. The pendant contained the initial D in a bold and fancy script.\n\n\"Master?\" I questioned curiously.\n\n\"It's the first initial of my real name. Maybe I'll tell you what it is sometime.\"\n\nI currently called him George -- or rather I called him Master and he called himself George when he needed to use a name -- so this was a bit of a surprise.\n\n\"I'm honored!\"\n\nLooking like a kid in a candy store on Christmas, he slipped the collar on my neck and made sure to buckle it so that it wasn't too tight nor too loose. \"Perfect! Now just rest there for a few minutes so that I can admire it while I get dressed and leave.\"\n\n\"Yes Master,\" I murmured softly. For the first time, I nearly fell asleep in the hotel room. Fortunately, Dylan texted me (You okay?) at about 10 after midnight and woke me (Just fine.) back up enough to go home.\n\nChapter Three\n\nDylan\n\nWhen Luka had been living with me for about eight months, I realized that we got along better than I'd ever gotten along with anyone in my life. I mean I still had a best friend that I considered like a brother, and I still had family that I loved to chat and bicker with, but Luka... we just sort of... clicked.\n\nThis realization came as I was watching him sleep in on a Saturday morning. We had fallen into the habit at some point of curling up as we slept. It was probably a natural instinct as fall faded into winter -- a sort of biological tendency to seek out warmth for survival (even though our apartment was nice and warm). Thus, I was currently holding him in my arms as he slept and extremely reluctant to move and wake him.\n\nAs I watched him sleep, I couldn't help but think about how Christmas was coming up and how my parents usually came over the day before Christmas to spend the night so that we could all drive together to my sister's house -- which was about an hour away from here but more than two hours from our parents' house. I was in the middle, and so, a perfect place to stop and break up a trip. Not to mention, my parents and my younger brother would spend Christmas night at Deanna's, so spending Christmas Eve with me gave them a bit more time with me. One on one. It worked out well.\n\nBut how was I going to explain Luka to them? I mean if I was dating him, that would be one thing: Hey this is my boyfriend.\n\nThey'd probably be overjoyed that I was finally settling down at the ripe old age of 24. It didn't seem to be enough for any of them that Deanna had three kids -- being the oldest at 28 -- which matched my parents' kid count and SHOULD be enough. Nope! They wanted me to get married and have or adopt more grandkids for them. I'm almost certain that they were practically holding their breath for Dion to turn 21 so that they could start pestering him to settle down and get married too.\n\nAlthough, in his case, he was going to college to be a Anesthesiologist, so they might give him a lot more leeway. With me, they knew that I was not in school and not doing anything important. They hoped that a wife (or husband, they weren't judgy) would settle me down and give my life purpose.\n\nBut... I didn't know how to tell them that I felt like my life HAD purpose, just... just not a normal one that had any sort of room in it for a spouse and kids. Imagine! Kids, daddy has to go to work and have sex with five guys and three women! Wish daddy fun!\n\nActually! That would be hilarious!\n\nLuka must have felt me shake with silent laughter. He opened his eyes and looked at me curiously. I grinned at him.\n\n\"Sorry to wake you, I was just wondering what it would be like if I did what my parents wanted and got married and had kids, and then taught my kids to wish me happy sex at work each day.\"\n\nLuka laughed. \"Definitely do that! We'll teach them to call me Uncle Luka and they can wish it to me too!\"\n\nI grinned and lightly pushed on his nose. \"Let's just hope my wife has a sense of humor about it! Now can you get off my arm? I've been dying to go to the bathroom for about 20 minutes now!\"\n\n\"Oh! Sure,\" he said as he rolled over and snuggled with his pillow.\n\nAfter I came back from the bathroom, I sat on the edge of the bed next to him. \"Hey Luka, do you have plans to go back to your family or anywhere for Christmas?\"\n\nHe shrugged. \"Not really.\"\n\n\"Why not?\" I asked in concern.\n\n\"I just went to my parents for Thanksgiving and so they're going to go visit my twin sisters in Hawaii for Christmas. I didn't really feel like spending that kind of money to go with them,\" he explained.\n\n\"Alright, so, since you were gone for Thanksgiving, you weren't here when my parents stopped by to pick me up on the way to my sister's. I mean I could easily drive myself, but they insist. Anyway, for Christmas, they actually come to spend the night.\"\n\n\"Alright... So are you asking me to find a different place to stay for the night?\" Luka wondered, puzzled.\n\nI shook my head. \"Nah, I told them I had a roommate and they'd love to meet you. No, what I'm really struggling with is what to tell them about you. I already told them that you needed a place to crash originally and it's just worked out really well for both of us, but I think they assume that you sleep on the couch. You might not realize that my couch is a really expensive pull out bed because this has been a tradition ever since I moved in here. Anyway, once they're here and realize that you actually sleep in bed with me, they going to want to know if we're dating and I have no idea how to explain our weird non relationship to them.\"\n\nLuka snorted a laugh. \"Are you saying you just want to let them think we're dating?\"\n\n\"Actually, I was wondering if you had any ideas on how to explain it,\" I clarified.\n\nHe chuckled this time. \"Cory is convinced that we're dating and just won't admit it for some reason. I'm pretty sure Anthony is too. Maybe it's just easier to let them all think whatever they want. After all, what does it matter what other people think?\"\n\n\"Yeah but these are my parents,\" I protested. \"I don't want to lie to them about this. I mean I never wanted to lie to them about the porn thing either, but thankfully, YouTube is a big enough thing that the first time they asked -- when I was a coward and told them that I was a YouTuber -- they accepted this and never asked me again. Although I do think they wonder how big a YouTuber I am that I can afford such nice things. Lucky for me, they don't really watch a lot of YouTube.\"\n\nLuka pulled his head out of his pillow to look at me. \"Stop babbling, Dylan. I don't care what you tell your parents. Tell them the truth if you want, that you're a porn star and I'm a prostitute and we aren't dating because what would be the point? Maybe they'll understand?\"\n\n\"Oh God! That's HUGE!\" I mildly freaked out at the prospect. Then it hit me. \"Wait! That's actually a good point! We both have demanding jobs, and even though we live together and sleep together, we're just not interested being together.\"\n\n\"They're not going to see a difference,\" Luka muttered with a laugh, snuggling into his pillow again already.\n\nI sighed. \"True, but the important thing will be that I didn't lie to them. They can believe whatever they want. ... Hey... If you're not going anywhere for Christmas, then what ARE you doing?\"\n\nHe yawned and shrugged. \"Enjoying some time off. The only client that wants to book with me during such a family oriented time of year is my regular Thursday client, and since Christmas is on Wednesday, I have that day off.\"\n\n\"What would you think about coming with me to my sister's?\" I wondered.\n\nThat made him snort again. \"Really Dylan? If I'm going to officially meet your entire family, then we probably ARE dating.\"\n\nI gave this some thought, then shrugged. \"Platonic life-partners?\"\n\nLuka sat up and gave me an incredulous look. \"That's... BRILLIANT!!! The next time Cory accuses me of dating you, THAT'S what I'm going to tell him!\"\n\nHappy to finally have a definition that made sense -- more or less -- I gave him a quick kiss. \"Great, now that that's settled, I think I'll take a shower. You want to make breakfast? Or go back to sleep?\"\n\nHe groaned and snuggled up again. \"Sleep.\"\n\n\"Alright, I'll make breakfast, but then YOU have to do the dishes!\"\n\n\"Meh!\" Luka muttered, waving me away.\n\nThe weeks 'til Christmas Eve Day passed in the blink of an eye, and suddenly, I found myself opening the door to let my parents into our apartment.\n\n\"Dylan!\" My mother greeted me happily, giving me a tight hug and a kiss on the cheek. To my surprise, my brother Dion was already with them. He -- being on the other side of my sister from me and our parents -- usually just drove to her house from his dorm.\n\n\"Hi mom, dad, Dion...\"\n\nHe laughed. \"Yeah, I know, it's way out of my way to go home first, but this semester was so rough that I actually went home the moment it ended so that I could veg out in my old room and play video games.\"\n\n\"Ah,\" I stated in understanding as I finished up hugging dad and shifted to hug Dion. Then I shifted to gesture toward Luka. \"This is Luka. Luka, this is my mom Ginger, my dad Rodney, and my younger brother Dion.\"\n\n\"Oh, what a handsome young man!\" My mom complimented, taking Luka's hands in hers and giving him a kiss on the cheek.\n\nHe gave her a flirty grin. \"You have excellent taste!\"\n\n\"How long have you been living with my brother?\" Dion asked him with interest.\n\n\"Hmm... I think I moved in right around spring break, so... huh! Nine months already!\" Luka stated with an impressed nod.\n\n\"Spring break? Do you mean you're a college student?\" Dion questioned.\n\n\"Well I was, but once I got my degree in business management, I decided that three degrees was enough and quit. Nothing appealed to me anyway, and I'd rather be an accountant than a businessman. Except I DO like being by own boss!\" Luka explained.\n\n\"What DO you do?\" My father asked, probably wondering if he was financially supporting me or mooching off me.\n\n\"I give my clients whatever they need,\" Luka stated with a friendly grin.\n\n\"Oh, like a personal assistant!\" My mother exclaimed with a nod.\n\n\"Sure!\" Luka agreed cheerfully\n\nI laughed and gestured toward the couch. \"You should put your luggage in the corner and relax. I'll get you something to drink. What would you like?\" My mom wanted a bottle of Evian, my dad wanted hot water for his favorite drink called Dandy Blend -- a caffeine free coffee substitute -- and my brother wanted a pop but took a bottle of water since I didn't have any pop.\n\nLuka sat on the armchair across from the couch -- one of two, the other being occupied by my brother while my parents sat on the couch. \"That mouthwatering smell in the air is the lasagna that Dylan made. He's such a good cook that I'm getting fat while living here! Did he learn that from you?\"\n\n\"Uh, no,\" mom denied with a shake of her head. \"I mean I can cook well enough, but I never really thought to teach my kids anything beyond the basics.\"\n\nI ruffled Luka's auburn hair after I finished passing out the drinks, and then sat on the arm of the chair he was sitting in. \"Didn't I ever tell you before? I basically had a little free time and a strong urge to not starve after I moved in here, so I watched YouTube Tutorials on how to cook. Some of them were really informative!\"\n\nLuka laughed. \"You can find practically everything on YouTube!\"\n\n\"Except porn,\" Dion muttered with a chuckle.\n\n\"Dion!\" Mom gasped, clearly scandalized.\n\n\"What?!\" Dion asked with a harassed sounding tone. \"It's TRUE!\"\n\n\"We AGREED to never bring that up!\" Mom growled at him.\n\n\"Uh...\" I droned suspiciously.\n\nDion flushed and looked away. \"I wasn't actually talking about that...\"\n\n\"Uh...\" I narrowed my eyes and peered at him.\n\nMy dad sighed and decided to be the mature one. \"Dion found a DVD in a store one day and bought it to show to us -- about two years ago now.\"\n\n\"Oh...\" I said because what could I say? No wonder they never asked me to show them any of my YouTube videos! I really wish I'd KNOWN that! I wouldn't have agonized over it so much.\n\nLuka chuckled and shook his head, looking up at me with mischievous chocolate eyes. \"You have a healthy younger brother and it honestly NEVER occurred to you that he'd find one?\"\n\nI grumbled and rubbed the back of my neck. \"No... I guess I never quite wrapped my head around the fact that he's old enough to be interested in that.\"\n\nDion looked shocked. \"Wait, you KNOW my brother has been in a porn and you're dating him anyway?!\"\n\nLuka roared with laughter, even bending over with it for a moment. \"I TOLD you that everyone thinks that!\" Then he shook his head. \"No, we agreed that we're not dating. We're platonic life-partners instead.\"\n\n\"Wait, what does that mean?\" My father asked in confusion.\n\n\"Life-partner is one of the terms that gay people used to describe getting married before they legally could,\" Dion explained. \"So... I guess they're married?\"\n\nI chuckled and shook my head. \"Nope. Platonic. No need for marriage. Just... we get along really well and want to stay like this.\"\n\n\"Well maybe he'd WANT to marry you if you stopped doing... those movies...\" My mother suggested.\n\n\"God no!\" Luka blurted out. \"If he did that, then I'd have to give up my clients, and THEN how would we make all this money?\"\n\nOut of the blue, that reminded me of something. \"Oh hey! You know when you mentioned Investing and I basically told you to give it a try? Did you happen to see my bank statement that just came in the mail the other day?\"\n\n\"No, why?\" Luka asked curiously.\n\nI laughed. \"Just if you hated me when you saw my balance before, then you're going to LOATHE me now!\"\n\nHe snorted. \"I believe it! The little bit of my money that I invested in things performed well enough that yours must be growing like weeds!\"\n\nI shrugged. \"I could retire to Fiji when I turn 60 -- or buy my own island somewhere -- and live out the rest of my life in paradise.\"\n\n\"That sounds like an excellent plan!\" Luka agreed.\n\nThe timer on the oven went off just then, letting me know that the Lasagna was done. I stood up to attend to it. \"Are you hungry right now, or do you want to wait until closer to actual dinner time?\"\n\n\"Now's good,\" mom answered for everyone. \"We didn't eat lunch because we knew you'd have something.\"\n\nLuka gestured an invitation to the dining table -- which had already been expanded to fit six people. However, it had only been set for four and one of the extra chairs had to be brought out from my bedroom so all five of us could sit. Luka grabbed the chair while my mom searched out another plate to finish setting the table.\n\nDinner (late lunch?) was more about chatting than truly eating. Mom and dad talked about their retirement plans, and Dion talked about his stressful classes. In that way, it was actually dinner time when we all wanted dessert. I pulled out the cherry cheesecake that I'd made at Luka's request and dished everyone up.\n\n\"So, Luka, tell us a little about yourself,\" mom pressed when we reached a lull. \"I want to know more about my 'confusing sort of' son in law.\"\n\nLuka chuckled. \"Well, I'm 25, a Scorpio, and I spent the last several years in college unable to decide what I wanted to do with my life. I kept getting degrees -- ones that only took a year or two to obtain -- that are basically useless because I'm not passionate about anything like I'm passionate about my clients.\"\n\n\"Except investing,\" I interrupted to point out.\n\n\"Mmm,\" he neither agreed nor disagreed. \"Both of my parents are still alive and are currently visiting my twin sisters in Hawaii. They're two years older than me and were apparently such a handful that my parents didn't want any more kids but oops! I happened anyway.\"",
        "Now that my mother had wrapped her head around what he had been referring to as his job, she frowned at him in concern. \"And... did they treat you like you were unwanted? Is THAT why you...\" she squinted and waved her hand as if saying: you know?\n\nHe laughed softly. \"Not at all. My parents were loving and supportive. They couldn't afford to pay for all the college I wanted, and I didn't want to be left with a bunch of student debt when I already knew that I had no idea what I wanted to do with my life. So I had an opportunity shortly after I entered college and I took it. I loved it and was so good that I quickly had a bunch of referrals.\"\n\nI focused on my wine cup so that I didn't have to look anyone in the eyes. \"It was basically the same for me. You wanted me to go to college and I didn't like any of my classes. I remember telling you over and over that I didn't want to go to college, but I had no idea what else to do either. Well, once in college, I came across an ad for good looking students who wanted to earn extra money making movies. I was pretty sure that they were Adult Videos but I just couldn't stop wondering how much money I COULD make if I tried it. I got very lucky because I responded to that ad rather than any of the others, and the company that hired me is very ethical and pays their actors well. Not many of the other companies can say the same. Anyway, I tried it, I loved it, and I decided that I was going to stay in the industry as long as I could.\"\n\nMy parents both sighed, only sounding a little disappointed. \"Well,\" my mother began. \"I can't say that I LIKE what you're doing, but I know you're taking care of yourself. Your place is always clean when we visit and it's not the hastily cleaned place most bachelors have, but genuinely and continually cleaned. I've never suspected you of doing drugs, so I hope that means you don't do them. If you're clean and safe and happy, what more can I want?\"\n\nDad chuckled. \"Aside from getting married and giving us grandchildren.\"\n\nMom nodded in agreement.\n\n\"That's what Deanna and Dion are for!\" I reminded her with a grin. Then something else important occurred to me, making me turn to glare at Luka. \"Wait! You're a Scorpio?! That means you just had your birthday in November, and you didn't tell me!\"\n\n\"I didn't?\" Luka questioned, and then hummed in thought. \"Oh! That's probably because it happened that weekend that one of my clients took me on a three day trip to Vegas and I was having a blast with all the high rollers. I don't even think I remembered that it was my birthday until just now. No wait, I celebrated it with my parents at Thanksgiving and then forgot about it again.\"\n\n\"Ah, that explains it,\" I accepted with a shrug. \"To be fair, I suppose I never mentioned when my birthday was either. I'm a Gemini.\"\n\nLuka pondered this for a second before nodding. \"That sort of explains why you're so willing to go with the flow in just about anything, and yet, when you need your space or some alone time -- or just some sleep! -- You can be like a completely different person.\"\n\n\"Mmm,\" I neither agreed nor disagreed.\n\nLuka told us all a little more about himself, including that he was on the track team in high school. All in all, I was fairly surprised at how well the day went. Not ONLY did I find that out that my parents knew about and had quietly accepted my career, but they took my weird half relationship with Luka in stride. Hell! My mom had even called him her son in law!\n\nAt 8 PM, my parents wanted to go to bed, which meant that the rest of us had to go to my bedroom so that they could get comfortable on the pull out couch bed and not be disturbed by our chitchat. That was when Dion gathered up the courage to quietly ask me a few questions he must have been dying to ask for years.\n\n\"I've got to ask, Dyl, what's it like to MAKE a porno? Like... do you all really just show up and have sex? Or do you talk about it first? Do you rehearse it first? What happens if you hate one of the other actors?\"\n\nI chuckled, deciding that before I answered, I had a question of my own. \"Which one did you find?\"\n\n\"It's called Weekend at Randy's and is about an orgy party -- as far as I could tell.\"\n\nI nodded. \"That one is actually one I remember clearly because it was popular enough and sold well enough to become a DVD. Not all of them do, you know? Most of them are just offered on our company website with edited shorter clips being posted on all the various sites like YouPorn, Pornhub, and Fuq.com -- which are all places that offer a lot of content for free to entice viewers to visit the better pay sites.\"\n\n\"I sort of figured that part out for myself, because when I did an internet search for your porno name, a LOT of videos popped up, but only about a dozen were DVDs.\"\n\n\"Sounds about right,\" I stated in agreement.\n\nLuka burst out an incredulous sound. \"Ah! I can't BELIEVE that I didn't think to look you up and watch some of your videos!\"\n\nI chuckled and basically ignored him. \"Well, to answer your questions, making the movies can be a lot of fun, but there are also days when it's kind of annoying too. For example, if a new guy doesn't take the instructions to clean himself out properly seriously, it can cause things that are NOT meant to go in the movie to happen, and then we all have to stop and wait for him to go follow instructions. Sometimes a scene just doesn't flow for whatever reason and we all have to stop and listen to the Director try to figure out what's wrong and how to fix it. There can be a lot of: Hold that position and let us get a really close up shot of it! And yes, there have been times when a new actor comes in swaggering like he owns the place and pisses me off to the point that I don't really want to work with him, but...\"\n\nI trailed off with a shrug.\n\n\"What?\" Luka asked curiously even as Dion nodded that he wanted to know too.\n\n\"Once it becomes apparent that the chemistry is hostile, the Director usually wants to harness that by having us fight a bit until the fight turns into fucking angrily, and at those times, I generally refuse to lose to a shitty new guy who thinks the world revolves around him, so I turn into a bit of a bad guy. And while that's not my favorite performances, I do end up having fun with the experience.\"\n\nDion looked down at his hands in his lap. \"Mom cried when she first found out. I felt like an asshole for telling her because she kept asking where she'd failed as a mother. And the weird thing is that I wasn't actually upset myself by it. I was just surprised. I thought it was actually just a really remarkable lookalike, but apparently you have a fairly recognizable mole on your ass that tipped mom off that it was actually you.\"\n\nI subtly tried to look at my own ass to see it for myself (not that I could while dressed), but I didn't really need to. After having so many videos showing me fucking someone, my ass was a pretty familiar sight to me. Not to mention that some of my web fans have mentioned how sexy they find that mole -- which always baffles me.\n\nDion continued even as Luka smirked and pinched my jeans pocket right about where the mole was. \"And after a bit of arguing, it was agreed that we'd just never say anything about it. I guess they must have thought about it and maybe even looked you up online from time to time, because they seem a hell of a lot calmer and more accepting about it now than they were.\"\n\nI gave him a small smile. \"I'm glad about that, but I actually wish you HAD told me that they knew. I've been agonizing for AGES trying to figure out how to tell them in a way they'd understand. Something more tactful than: Hey mom and dad! I fuck other people in movies for a living and I really love it!\" I wiped a hand over my face. \"Or worse! A flippant: Wanna see?\" I groaned. \"I HOPE they haven't actually watched any of it. I mean I don't really care who sees me after all this time, but that's just something that makes me cringe when I picture mom watching me have sex. Like what the hell would be the interest for her?! Would she be critiquing my technique or something???\"\n\nLuka quietly roared with laughter, trying his best not to disturb my parents. \"That's one good thing about my side of the profession. None of what I do is on camera. Or well, I suppose some of it might have been on camera but it's never been posted online because my CLIENTS would be far more damaged than I would be if they posted it. Anyway, I don't have to run the risk that my parents or sisters might just randomly watch me fucking in a video -- and maybe not even realize that it was me until I switched position or something! Ugh!\"\n\n\"Do they know?\" Dion wondered.\n\nLuka shrugged. \"They might. I haven't exactly been Fort Knox about it. I say things like I have regular clients and that I meet their needs and I've also referred to going out on a LOT of dates. I think they probably put two and two together because they stopped asking me questions about how I earn my money a long time ago. Or I suppose that they could just assume that I was taking out a massive amount of student loans to live off of while in college.\"\n\nDion ran a hand through his hair in frustration. \"I'm in college level anatomy classes and the like and I can't help but be a little mad at mom and dad for how they reacted. I mean okay fine, react however at first, but once they thought about it and it wasn't such a shock anymore, WHY didn't they just ask you about it?! Why didn't they ask you if you were being safe? Apparently she assumed that you were because you were always fairly responsible, but she must have worried.\"\n\nOur conversation continued on for a few hours, and it was strangely cool to be able to have such a long and in depth adult conversation with my little brother. He's already 20, but I still think of him as a 15 year old virgin that was too timid to ask me if I'd ever touched a boob before. Especially since that was the year I moved out and tried college, so I didn't get to finish watching him grow up.\n\nEventually, I had to kick him off my bed. \"Sleep on the floor! There're extra pillows and blankets in the closet.\"\n\n\"Yeah, alright,\" he grumbled, probably not looking forward to sleeping on the floor after lounging on my plush bed with us for the last several hours. \"But if you two have sex while I'm in the room, I'm stabbing you with a steak knife in your sleep!\"\n\nI laughed so hard at that. \"No worries! I've never had sex with Luka and I can assure you that if I decided to do so for the first time, NOW would NOT be my ideal!\"\n\nLuka snorted and grinned at me. \"I don't know, I find it weirdly hot to think that there's a little brother RIGHT THERE and he might hear us! We'll have to be quiet! Maybe you'll have to cover my mouth with your hand to stop me from squealing when I cum. MAYBE you'll have to bite on my shoulder to stop yourself from groaning loud enough to wake the neighbors.\"\n\nI laughed and pushed him onto his side of the bed. \"Stop that! I don't want to get horny until I go to my studio on Thursday!\"\n\nLuka sat up and looked over at Dion, who was still busy piling up extra blankets for cushioning on the floor. \"I really hope you're not shy, because aside from when I'm so drunk that I pass out, I just CAN'T sleep with clothes on. I sleep naked or I can't sleep.\"\n\nDion gave him a bit of a sarcastic look. \"Even so, you still sleep under the blankets, right? So what would it matter if I'm shy? I wouldn't really see anything anyway. And I already told you, I'm in med classes. Nudity -- to a point -- is sort of part of the territory.\"\n\n\"Good!\" Luka stated as he stood up and stripped off all his clothes. I took this as permission to do the same.\n\n\"Just remember, I will stab you!\" Dion warned us, making us chuckle again.\n\n\"Yeah yeah,\" I muttered in agreement as I got comfortable in bed. Yawning, I pulled Luka into my side and drifted off to the sound of him breathing.\n\nChapter Four\n\nLuka\n\nA little over a year after I met Dylan's parents, my twin sisters insisted that I go visit them the moment they had their babies -- having planned it with their husbands so that they both got pregnant at almost the same time and would be having their babies at the same time. At least, that was their plan and they were actually hoping that Mother Nature would cooperate since they were due on the same day, but that was no guarantee.\n\nIn any case, they were due the first week of February and wanted me to visit over Valentine's so that I could hopefully meet the babies, and if they weren't born yet, maybe even be there when they gave birth. Alright, I suppose that I could watch two tiny humans be passed out two completely unsexy vaginas -- and that would hopefully cure ANY possible future thoughts of having kids someday.\n\n\"Hey Dylan? What do you think about taking a bit of a vacation in February?\"\n\n\"What sort of vacation?\" Dylan wondered curiously.\n\nI chuckled. \"My twin sisters managed to conceive babies at nearly the same moment and are due in February. They want me to be there to meet them or see them be born and I just thought that if I'm going to be in Hawaii on the very ironic date of Valentine's day, maybe you want to go all out and come with me.\"\n\n\"Hawaii huh? This is probably a stupid question, but why did your sisters move to Hawaii?\" Dylan asked.\n\nI laughed. \"Well, it actually happened on a family vacation. They had just turned 18 in May, and then graduated. It wasn't a graduation present so much as a long overdue family vacation that just so happened to coincide with that event. So there we were in Hawaii when my sisters met a pair of twins that were born and raised in Hawaii. As they tell it, it was love at first sight and they eloped. Sort of. That part's a bit complicated, but basically they refused to come back home and have been living there with their husbands ever since. I actually always found it strange that they haven't had kids before now. I guess I figured that they just didn't want kids, but now suddenly -- BAM!\"\n\nDylan finished getting undressed and slipped into bed with me, pressing a kiss to my shoulder. \"I suppose that I wouldn't mind taking a vacation. All I'd need to do is let my company know that I'll be unavailable for those weeks -- it'd be a shame to go on vacation and NOT be gone at least two weeks. Anyway, let them know and also post a warning on my website for my fans.\"\n\nI pulled him close and lay my head on his shoulder. \"Alright then! I'll let my clients know that I'm going on vacation and will also be unavailable during those weeks.\"\n\n\"I'm not sure I've EVER taken a vacation!\" Dylan exclaimed. \"I never felt like I was working too much and needed one -- to be honest. I have easy hours and can basically take days off whenever I need to.\"\n\nI laughed and kissed his cheek. \"Same here. I mean my job is basically one or two clients a night and I control when I book them, so if I need a night off, I just don't book anyone that night. Ever since I stopped going to college, I haven't felt anywhere near as stressed or over worked. Never really needed a vacation from work. SCHOOL -- on the other hand...\" I trailed off with another laugh.\n\nHe absently ran his hand up and down my arm. \"Now I'm really looking forward to it!\"\n\n\"Me too,\" I murmured, already drifting off to sleep.\n\nThe weeks until our vacation seemed to pass by at a snail's pace, but at the same time, I also feel like I barely blinked and suddenly we were in Hawaii. Dylan had really taken the concept of vacation to heart and had booked us a gorgeous villa at a resort that in and of itself was breathtaking. The first thing we did upon arrival was check in to our villa, but then we went to visit my sisters.\n\nTo my surprise, my parents were there too. I guess I assumed that since they had just come here for Christmas, they'd not be able to do so again so soon. My mom was the one to answer the door when we knocked.\n\n\"Luka! I'm so happy to see you here! Maybe you'll finally get a tan and put a bit of color on your cheeks!\"\n\n\"Mom! You're here!\" I blurted out in astonishment.\n\n\"Of course I am! I have to see my grandbabies! And actually, your father and I had decided to just finally move here so that we can be on hand to babysit day or night!\" She emphasized her sentences with repeated hugs and kisses to my cheeks.\n\nHappy to see her, I pulled free from her clingy arms so that I could indicate Dylan. \"Mom, this is Dylan.\"\n\n\"So happy to finally meet you!\" Mom gushed, attacking him with hugs and kisses to the cheeks too. Then she grabbed us both by the hands and dragged us toward the living room. \"You've got excellent timing! The girls gave birth this morning and so you get to meet your nieces and nephews. Those little stinkers! Your sisters kept it a surprise that they were both having TWINS!!! They each had a boy girl set, and so, you've got two nieces and two nephews!\" She stopped talking when we arrived in front of a crib containing all four babies -- who were currently sleeping.\n\nDylan laughed softly and squeezed my hand in his. \"So THAT'S where you get it from!\"\n\n\"Get what?\" I wondered in confusion.\n\nHe grinned at me. \"The way you talk, and how you often act like a giddy little kid.\"\n\n\"I... what?\" I asked, having no idea what he was talking about.\n\nHe just laughed again and kissed me.\n\n\"So when are you getting married already?\" Lia asked.\n\n\"Why does everyone ask us that?\" I questioned because while it had been funny at first, it was starting to get a little annoying.\n\n\"Because we all just want you to be happy,\" Gia answered. \"We've been more than a little worried about you because you NEVER seemed to have a boyfriend or girlfriend, and then for the longest time, all you'd say about Dylan is that he's your roommate -- You must be Dylan, lovely to meet you.\"\n\nDylan went around and shook everyone's hands. He happened to end with Lia's husband, who was frowning at him like he was trying to solve a mystery.\n\n\"Hmm... I'd SWEAR I've seen you somewhere before.\"\n\nDylan turned to me with a playful smirk. \"You can tell them however much you want, I don't mind either way.\"\n\nI chuckled weakly. \"Does this REALLY have to be the first conversation we have upon arrival?\"\n\n\"No Ailo is right, we've seen him somewhere before!\" His twin brother Liho said, now looking like he was also wracking his brains to figure out the mystery.\n\n\"Ooo...\" Lia and Gia purred in unison. \"Now that you mention it, yeah. So familiar!\"\n\nI sighed in defeat. \"Alright, fine, if you MUST know, Dylan's a porn star, so that's where you've seen him.\"\n\nAll four of them reacted in a nearly identical way, which went something along the lines of: \"Haha, yeah right! Like you'd admit that seriously if it was true! WAIT!!! Damn... I think it IS true!\"\n\n\"That's why I thought I'd seen him with a blonde woman!\" Ailo exclaimed.\n\n\"No no, it was a little Asian woman.\" Liho argued.\n\n\"No, you're both wrong! It was a gangbang,\" Lia insisted.\n\n\"And HE was the one being banged!\" Gia added.\n\nI turned to Dylan. \"I have really GOT to watch some of these videos.\"\n\nDylan shrugged. \"I've done so many at this point that it would be a massive waste of time to try to watch them all. I could recommend a couple of my favorites if you want.\"\n\n\"Don't you go by Digg Johnsinner?\" My mom asked, now pinching her chin in thought as she looked Dylan up and down.\n\n\"Oh my God!\" I exclaimed, feeling a rare moment of being squicked out. \"Does EVERYONE in this family watch porn?!\"\n\nWithout missing a beat, my dad said: \"Not the babies, they were just born.\"\n\nDylan laughed and put an arm around my shoulder. \"I like your family.\" Then he lightly pushed on my nose. \"And YOU don't watch porn.\"\n\nI shrugged. \"Don't really need to.\"\n\nMy dad frowned. \"You know, I couldn't help but notice that you tried to avoid telling us for a moment. Does that mean that you are ashamed of his work?\"",
        "I looked at my dad in surprise. \"Not at all. I just actually thought that none of you would take it this well and I didn't want to start this family gathering with a fight.\"\n\n\"Yeah, well, once we figured out what it is that YOU do, we sort of had to do a lot of thinking about it and come to the conclusion that so long as you weren't doing it to support a drug habit, it really didn't matter to us what you did,\" dad informed me.\n\nI was speechless.\n\nLia snorted a laugh. \"It actually was ME that figured it out and told them. But at some point, it became really obvious that you referred to your clients and dates interchangeably, which meant that your dates ARE your clients, thus...\"\n\n\"Whore!\" Gia finished in a singsong voice.\n\nI glared at her a little. \"I don't like that word. Please use prostitute instead.\"\n\n\"I thought the PC term these days was sex worker,\" my mom pointed out.\n\n\"Well it is, I just think that sounds a little too clinical,\" I explained.\n\nJust then, one of the babies made a soft grunting noise, which prompted Gia to pick him or her up and thrust him in my arms. I sat staring at the tiny creature in a combination of fascination and horror.\n\n\"We had a homebirth in a special birthing tub. It was really peaceful and wonderful,\" Gia told me.\n\n\"And it's really too bad that you weren't here to see it,\" Lia added.\n\n\"I'm quite happy I wasn't,\" I grumbled, still just staring at the baby. \"I'm just not the baby type.\"\n\nPerhaps he sensed my discomfort, or perhaps he was just used to being an uncle, but Dylan took the baby from me and held him or her up. \"Aww, such a cutie! I only got to see my nieces and nephew when they were this size once each. They grow up so fast.\"\n\nShe started to fuss and my sister held out her hands. \"Here, give her back to me so I can feed her.\"\n\nDylan gave the baby a kiss on the cheek and handed her over. \"I have a question: what are the best hiking areas around here, and are there any running paths.\"\n\n\"Oh definitely!\" My sister confirmed as she whipped off her top and held her baby to her left breast.\n\n\"Oh God!\" I burst out in horror, looking away and holding up a hand to block my view.\n\nDylan roared with laughter. \"YOU have a problem seeing tits?!\"\n\n\"It's not the tits -- not even that they belong to my sister -- it's having a baby attached to them! That's so wrong!\" I wailed.\n\n\"Hey!!!\" My sisters both objected. \"This is what they're MADE for!!!\"\n\n\"I KNOW!!!\" I wailed. \"I just can't!\"\n\nDylan placed himself between me and my sisters. \"Where did you say that running path is? I'll take Luka for a run until he calms down.\"\n\n\"I'm not sure there's a running path long enough!\" I cried out dramatically.\n\nMy sisters gave us quick directions, and soon, we were running on a beautiful path. To my surprise, I calmed down a lot faster than I thought I would. On the way, we found an interesting farmers' market -- which naturally prompted Dylan to stop and inspect every inch of it.\n\nSomething weird happened that we had never really run into before. A handful of people seemed to recognize Dylan. Not so many that we were mobbed by them, but enough that we definitely noticed them doing double takes and staring as they tried to figure out why they knew him. I had to laugh, softly under my breath, because where we lived, everyone was so used to seeing Dylan around the neighborhood -- grocery shopping and the like -- that even if they recognized him as a porn star, they didn't really do anything about it. In fact, they probably even told themselves that he was just a lookalike.\n\nBut here, these people didn't know Dylan, and so they had no reason not to stare and maybe work up the courage to come talk to him. I could see that Dylan was not certain about how to handle the attention. He wasn't the type to shy away from attention -- unless he just wasn't in the mood for it -- but I don't think he wanted to turn our vacation into a self-promotion tour. So, I linked my arm through his and gave him an adoring look.\n\n\"Just ignore them and keep doing what you're doing. Maybe they'll take a hint and stay back,\" I suggested.\n\nHe smiled at me and ruffled my hair. \"I don't really mind the attention, I just don't want them to make me work when I'm having some rare time off.\"\n\nI nodded in understanding and gave him a light kiss. Ironically, this seemed to do the trick. A glance around showed me that people where having whispered discussions that probably went along the lines of: \"He's with a lover, what if his lover doesn't know? We can't out him like that!\"\n\nThus happily, we were able to finish up our shopping in peace. We bought a good two weeks worth of food, and since we actually planned to do a lot of eating out while here, it wasn't exactly in our favor to bring it back to our villa. So, we brought it to my sisters' house.\n\n\"We come bearing gifts,\" I announced when we let ourselves in.\n\nAilo came over to re-welcome us. \"Mahalo!\" He took one of the full reusable market bags we'd bought and led us to the kitchen. Being a house that two married couples lived in, it was a big one with a spacious kitchen. Ailo made frequent happy noises as he put the bounty away. Dylan kept a hold of the bag slung over his shoulder.\n\n\"Actually, would you mind if I cooked dinner tonight?\"\n\n\"Go right ahead!\" Ailo exclaimed joyously, sweeping his arms out wide. \"Feel free to use anything we got! There's even a grill on the patio.\" Dylan looked out the sliding glass door where Ailo pointed and saw that there wasn't just a grill, but something that looked a lot like an outdoor kitchen radiating out from the grill.\"\n\n\"Perfect!\" Dylan cheered.\n\nThat night we had a minor feast! I ate WAY too much! After I was stuffed and felt like I might need to be rolled to a corner to sleep it off, I looked over to find Dylan handing one of the babies over to my mother, who was already cooing at him or her happily. I managed to stand up and waddle my way over to Dylan, who was sitting on a reclining lounge chair that had a nice thick cushion for comfort.\n\n\"Have I ever mention that I love it that you can cook?\"\n\nHe chuckled and tugged on my hand so that I'd sit on the lounge chair with him, between his legs and reclining against him. I snuggled into his arms and listened to his heart beating.\n\n\"You have, but I love hearing it. I still can't believe it when all I do is follow a recipe and people rave like I just created the nectar of the Gods,\" he murmured.\n\n\"I'm looking forward to hiking tomorrow,\" I said, feeling sleepy and happy with life in general at the moment.\n\n\"Me too,\" he said in return.\n\nMy mom suddenly purred, catching my attention. \"Aww! How sweet! You two look like you're about to drop. Must be jetlag. Why don't you go back to your hotel? Or would you prefer to just crash here tonight?\"\n\nDylan yawned. \"I think we should go back to our villa. We have plans for tomorrow, but we'll definitely be back around dinner time.\"\n\n\"Have fun!\" Mom bade as we got to our feet and trudged to our rental car.\n\n\"Are you awake enough to drive?\" I asked because I was pretty sure I was going to pass out in the car.\n\n\"Yeah, no problem,\" he confirmed, giving me a quick kiss as he held the passenger door open for me.\n\nThe next thing I knew, it was morning and I was awake before Dylan. I watched him sleep for a bit before getting out of bed and making a trip to the bathroom. Then -- since I was too awake to go back to sleep -- I decided to run (literally) to the nearest market and pick up some basic breakfast supplies so that I could make Dylan breakfast in bed.\n\nHe grinned so happily when he woke up to find me entering the room with a tray. \"I love when you make me breakfast!\"\n\nSince he was usually up before me AND a better cook, he tended to make most of our meals. This was sort of a rare occurrence. I smiled at him and gave him a quick kiss.\n\n\"I was in the mood for sausages,\" I deflected.\n\nAfter we ate, we went on a hike through a beautiful jungle-like area. The next day, we went running along a beach at dawn -- when it was nearly empty. Then we took a tour of the area on a bus with a guide. The next day, Dylan nudged me with his shoulder as we were cooling down from our run.\n\n\"Hey, we should find a nude beach and work on a nice tan.\"\n\nI shook my head. \"No thank you! I LIKE my complexion just the way it is!\"\n\n\"Yeah but, we're probably going to get a bit of a tan while we're here anyway, so we might as well strip off and even it out,\" Dylan pressed.\n\nI pouted. \"But I burn like a lobster!\"\n\n\"So we take it slowly. Just 20 minutes each day, and then we cover up almost completely while we explore this paradise,\" he bargained.\n\nI pursed my lips as I thought this over. \"Alright, I suppose I could try it.\"\n\n\"Excellent!\" He crowed, grabbing me by the hand and dragging me along even as he called Ailo or Liho and asked where the nearest nude beach was. As it turned out, it was a good drive to a less populated part of the island, but it was actually perfect for us as it was less crowded and no one cared that a drop dead gorgeous porn star was strutting his stuff over to a clear spot to set up our blanket.\n\nAlright, it was probably a stretch to think that no one cared, but they were extremely respectful and just let us have our quick tan in peace. Also, as I relaxed into the sun, I didn't realize that Dylan timed it so that we actually had 15 minutes of sun on our backs and 15 on our fronts. Even so, it turned out to be almost perfect because I was only very slightly pink all over when we stood up and packed to leave.\n\nThat was when someone finally got brave enough to approach us. She actually waited until we'd gotten back to our rental car, tossed our stuff in the back, and got dressed. Then she timidly yet bravely cleared her throat.\n\n\"Um e-excuse me? Are you Digg Johnsinner?\"\n\nDylan aimed a smile at her that was brighter than the sun. \"Yes I am.\"\n\nShe squealed happily. \"Eee! I thought it was you! I actually saw you in person at the AVN awards in January! I stood in line for an autograph, but you actually had to leave before I could get one.\"\n\n\"Oh, sorry! That must have been when I had to leave for my flight,\" Dylan apologized. He turned to look at me, probably to see how I was reacting to this.\n\nI grinned and held out a set of Sharpies that I kept in my bag for some reason. And no, my bag was NOT a purse! And the Sharpies came in handy surprisingly often.\n\nDylan took the markers with another grin and returned his attention to her. \"Would you like me to sign something now?\"\n\nShe giggled since -- considering that we were at a nude beach and she had literally nothing on her -- she clearly didn't have anything to sign. Then she blushed shyly and looked away. \"Could you sign me here?\" She asked, tracing a path along her left breast with a finger.\n\n\"Actually, if you don't mind being marked up for a few days, I could do better than that,\" Dylan offered.\n\n\"Anything,\" she permitted with a soft tone that was hard to describe. She was still shy, but also definitely hoping for a whole lot more than a simple autograph.\n\nDylan grabbed the blanket we'd tossed in the back seat and quickly folded it into padding for cushioning as he knelt in front of her -- which made sense as he was a good foot taller than her to begin with and he was going to be drawing on her chest. I opened the top of the convertible, and then got comfortable inside it while resting my arms on the door (the windows were rolled down), so that I could watch without just standing there like an obedient dog.\n\nHe started by sucking on her right nipple for a couple of seconds, making her moan and squirm, before shifting to suck a nice dark bruise a inch or so above her areola. He circled the bruise with a red Sharpie in the shape of a heart.\n\n\"What's your name sweetie?\" He asked.\n\n\"Tanya,\" she replied, which surprised me since she looked like a native and I expected a name like Ailo.\n\nSwitching to a blue Sharpie, Dylan wrote across her chest in an impressively beautiful script: Digg loves the ladies, but Tanya is the best!\n\nBefore he finished, he sucked on her left nipple for a couple of seconds, and then made sure that the dot of the exclamation point was drawn on her nipple -- after he'd blown it dry. By this point, I was getting rather turned on. Hmm... Maybe drawing is another kink of mine? I wonder if I could talk a client (an unmarried one) into letting me draw pictures on her back?\n\nSpeaking of, Dylan turned Tanya around and gently bit her butt cheeks in several random places. \"Do you mind if I draw a mildly graphic picture on your back?\"\n\n\"Not at all!\" She exhaled in a dreamy and reverent tone that left no doubt she pictured him saying something like: Do you mind if I take you back to my hotel room and screw you into my bed?\n\nThinking about that exact scenario quickly had me purring rather dreamily myself. To my fascination, Dylan was able to quickly draw a picture of him standing with her legs wrapped around him. The drawing was basic enough to not take forever to draw, but detailed enough that he was recognizable as him and she was also recognizable. It was also easy to see what the couple was doing in the drawing. He even went so far as to give her accurate looking breasts and a tiny autograph on them. I couldn't help but laugh.\n\n\"I love it!\"\n\nChuckling, he fished his phone out of his pocket and handed it to me. \"Take a few pictures of us.\"\n\nI got the camera ready just as he finished standing up. I waited for him to decide how he wanted them to pose, and then took a picture of him holding her in front of him so that her front was pressed against him and he was cupping her butt in his hands. This left a good view of the drawing. Then he turned her around and kissed her cheek as he covered her neatly groomed vagina with one hand -- presumably to preserve her modesty since he hadn't asked for permission to have fully nude pictures. The last picture was of him licking the nipple under the heart circled hickey he'd given her.\n\nShe was clearly floating on cloud nine by this point.\n\n\"Can I post these pictures on my site? Either way, I'll email them to you if you give me your email address,\" he told her.\n\nShe took the Sharpie he gave her -- a purple one -- and wrote her email on the inside of his forearm. \"And yes, you can post the pictures anywhere you want.\"\n\nHe took the Sharpie back and gave her a kiss on the cheek followed by a light smack on the ass before he walked around the the other side of the car. \"It was nice meeting you, Tanya! I hope you have a wonderful day after this.\"\n\n\"You too!\" She purred as she floated off in the direction of the beach.\n\n\"That was surprisingly hot,\" I remarked as I shifted to sit in my seat properly.\n\nHe shrugged as he started the car. \"I don't know. I guess I'm used to things like that at this point. I don't accept it as often as I could -- because I'm actually a homebody -- but I could travel a lot if I wanted and go to industry events and such. I don't because I don't really want to, but I have gone to the AVN awards for the last five years because I'm usually nominated for something. Haven't won anything yet, but it's still nice to nominated. And I'll go to the gay version in March because I actually got nominated for an award this year. Did I tell you that yet?\"\n\nI nodded. \"I'd vote for you if it was a voting type of thing.\"\n\nHe laughed. \"You haven't even SEEN any of my movies!\"\n\n\"Still!\"\n\nLaughing, we headed off to find a place to eat.\n\nThe next several days followed a heavenly pattern of us running in the morning followed by tanning for a half an hour or so at the nude beach (including other fans approaching him as we were leaving for autographs). Then we'd grab lunch somewhere before exploring or doing some other touristy thing. We'd end by going to dinner at my sisters' before returning to our villa and snuggling up in bed.\n\nOn the seventh day of our vacation, as we were winding down toward sleep, a thought occurred to me that just wouldn't let go. \"Ever wondered what it would be like?\"\n\nHe shifted to look me in the eye. \"Once or twice.\"\n\n\"It's just that I'm normally sated. I don't think I've gone longer than three days without sex since shortly after losing my virginity,\" I explained. \"I'm not sure I actually know what it's like to be horny!\"\n\nHe chuckled. \"Same. Even on days when I have to abstain before a shoot, I still usually play with and edge myself on camera for fans. It helps build anticipation for the shoot, but I can't say that I've felt true horniness.\"\n\nI took a deep breath. \"So here's the thing, if I were to say: I'm horny for the first time in possibly ever and I'm curious to know what it would be like between us -- would that create the expectation that we'd have to try to impress each other with our professional skills, or would we just have a quick fuck and go to sleep?\"\n\nHe laughed. \"I don't know about you, but I'm not sure I COULD have a quick fuck! Wait. Are you nervous? Do you think that I must be better than you because I've made it in the porn industry?\"\n\nI shrugged. \"Not that, exactly. I guess, I don't know. Maybe it's more like I wonder what normal sex is like. The type where a couple knows so much about each other's bodies that they can just come together and get off. Also, if we went into this with you thinking that you were shooting a movie and needed to last at least three or four hours, and I had it in my head that you were a client and I needed to give you exactly what you want -- then what the fuck does that leave us?! Trying our best for the next three days until we put each other in the hospital?!\"\n\nHe laughed softly. \"I never thought I'd say this, but you're overthinking this. Just... stop thinking and see what happens.\"\n\nThis time when he kissed me, it was different than all the other kisses. The others (and there'd been a lot of them in the nearly two years we'd been living together) were mostly just simple tokens of affection. This one...\n\nThis one held passion in it.\n\nI moaned and surrendered completely. The first hour was probably just the two of us kissing and caressing. My hands couldn't get enough of his body! I wanted to touch him everywhere all at the same time.\n\nJust when I was starting to feel drunk even though I hadn't had a drop of alcohol all day, he shifted to kiss a path down my chest and stomach. But rather than moving his whole body down, he turned it so that when he was where he wanted to be, he was still laying comfortably next to me, only now he was teasing my shaft with his mouth. Rather than whimper or protest or even straight up insist that he get to it already, I decided that two could play that game. After all, giving head was a good two-thirds of my job. I was SO fucking good at it!\n\nI don't know if he thought of it as a bit of a contest or if he really was just lost in the moment, but it only took probably 20 minutes before my legs were quaking and I was hovering right on the edge. I pulled my mouth off his shaft to ask:\n\n\"I'm close. How do you want this to go? Should we change positions or do you just want me to go off so that you can top me?\"\n\nHe pulled off but continued to stroke me with his hand. \"We both know very well why we'd need to do a lot of self care and body prep before either of us could top the other. I actually thought that we'd just keep doing this for tonight, and then tomorrow -- if you're still interested -- we can perform the proper body care and continue on the right way.\"\n\nI laughed softly. \"I wasn't even thinking about that, but you're right. Neither of us can afford to be careless about this. And besides, this is REALLY good!\"\n\nHe grinned at me. \"I agree.\"\n\nWith the semi-responsible stuff out of the way for the moment, I focused on doing my best. 69 wasn't a position that I was in all that often and I was enjoying it a lot more than I thought I would. Happily, the short break had renewed my stamina a little and I was able to enjoy it for a bit longer.",
        "But eventually, his sheer skill won me over. I pumped his mouth full, gasping in surprise when he swallowed it all. I hadn't expected that since porn stars were expected to do facials about 90 percent of the time, so I thought he'd sort of habitually pull off and let me cum all over his face and chest. But DAMN! He made my toes curl!\n\nPurring blissfully, I took a small break to enjoy the moment before turning to work on him more directly. Which means that I insisted that he get comfortable on the bed, got myself comfortable, and then poured every ounce of concentration into my task. His breathing got rough and ragged, which made me far happier than it probably should have.\n\nEven though his legs were vibrating slightly and his breathing was heavy, I got a little self conscious because he wasn't really making any noise. \"Is something wrong?\" I asked before I could drive myself crazy wondering.\n\n\"No!\" He gasped out, petting my head reassuringly.\n\nI narrowed my eyes and looked at him. \"Yes there is. What is it?\"\n\nHe gave me a look that told me he didn't appreciate having to talk about it. \"Alright, fine. I'm having a weird moment where I'm not sure if I should be making all the same sounds I would be if I was acting, because if I do, will you think I'm just acting? And also, I really want to yank on your hair and be a little rough with you, but you probably have a lot of clients do that and you already said that you just wanted to have normal sex.\"\n\nI sighed in relief. \"Oh! God I thought it was more along the lines of the fact that every movie starts with about 10 to 20 minutes of blowjobs by professionals, and so maybe you're a little numb to them by this point.\"\n\nHe laughed. \"Now we're BOTH overthinking this!\"\n\nI pulled him into a C shape so that I could give him a kiss. \"To answer your questions, I don't mind if you pull on my hair. It's all part of the fun. My pleasure IS your pleasure, so knowing that you're enjoying yourself makes it all the better for me. Therefore, while I don't want you to act -- please just tell me if it's not doing it for you -- I actually do want you to make whatever sounds you want. And if you really don't want to, just tell me that. I'll understand.\"\n\nHe smiled and kissed me before relaxing back onto the pillows. \"Just keep on doing what you're doing. Actually, I can tell you've done it a lot since you're really good at it. Just try to be patient with me because -- as you said -- I've had it done a lot and it IS a little hard to convince the part of me that's been trained to keep on going for hours that I can end things a little quicker than usual.\"\n\nSmiling at him, I gave him a flirty wink. \"I can certainly do that!\"\n\nThis time as I gave him my all, he grabbed my hair and helped out by thrusting a little. To my delight, his legs started quivering again fairly quickly. Also, he didn't make a lot of noise, but the little ones he made were all encouraging. All in all, I was actually having a lot of fun.\n\nBest of all, even though it did take him quite a while, when he finally came, I was able to return the favor of swallowing to the melodic sounds of him crying obscenely. One might even call it... pornographically, hahaha!\n\nGrinning, I kissed my way up his abdomen and chest, and then kissed him tenderly before snuggling up with him. His hand was absently stroking my arm and he sounded like he was a little out of it. Then he sighed happily and shifted us both so that we could go to sleep.\n\nThe next morning, we had breakfast and went for our run as usual, but then we skipped our other activities so that we could return to our villa and have a quick talk.\n\n\"So...\" Dylan began as I was refilling my water bottle for a drink. \"Are you still interested in having more sex with me?\"\n\n\"Of course I am!\" I blurted out, a little incredulous that he had to ask.\n\n\"Alright, so, here's what I think. I think that we should take turns showering and performing body prep,\" he suggested.\n\n\"Wait, I didn't bring my enema kit with me,\" I pointed out. \"I wasn't exactly thinking that I'd need it.\"\n\n\"I brought mine out of sheer habit, I suppose,\" he said. \"I don't mind if you use it too. But as I was saying, I think we should do this part separately to preserve some of the romance of the situation. But then when we're ready, we'll actually have a lot of options available to us.\"\n\nI tilted my head as I looked at him. \"You once said that just because you bottom in your movies, it doesn't mean that you would if we ever had sex,\" I reminded him.\n\nHe shrugged. \"And I meant that at the time, but now... We're going into this as equals. From what I gather, we've both done both and don't really have a preference. So, once again, let's just prepare for anything and see what happens?\"\n\nI smiled at him. \"I can live with that.\"\n\nUnexpectedly, he pulled me into him and gave me a lengthy kiss. It wasn't hot and passionate, intended to start things here and now, but rather lazy and sensual. When he pulled back, it was to press a tiny kiss to the tip of my nose.\n\n\"You want to shower first, or should I?\" He asked.\n\n\"You can,\" I said, nudging him toward the bathroom.\n\nThis was solely so that I wouldn't be the one all ready to go and have to wait for him. If I was, I'd drive myself crazy thinking about what to do while he was in the shower. This way, I could just get out of the shower and jump right into bed with him.\n\n\"Alright, but wait a second,\" he insisted. \"I think we should have a quick talk about condoms. Because our company insists on regular testing for all of us and birth control for the actresses, we actually don't use condoms, so I don't even own any.\"\n\n\"Dylan, I didn't exactly think I'd need any either,\" I reminded him. \"And since I ALSO get tested regularly and am clean, I will leave that up to you to decide. Do you want me to go buy some while you're in the shower?\"\n\nHe shook his head. \"While I do actually worry about you catching something from one of your clients, if you say you're clean, then I'll trust you.\"\n\nI laughed. \"I'm not just saying it. My last test was a week before we came here. I'll show you.\" I grabbed my bag off the counter and quickly located the most recent test results.\n\nHe looked it over with an amused grin. \"This makes me feel better. Give me a minute and I'll show you mine.\"\n\n\"Mmm!\" I purred lecherously as I looked him up and down.\n\nHe laughed and grabbed his wallet out of his back pocket so that he could pull out his most recent results. His was dated the day before we left. I smiled as I handed it back.\n\n\"We're both clean. I think we're okay without condoms.\"\n\nNodding in agreement, he gave me a quick smooch before running off to the bathroom. I bit my lip and wondered what it would be like to be normal. Normal couples didn't have to go through all this preparation and hassle just to have sex. They could do it spontaneously and without having to think about it. Although, to be fair, we are both men. Even normal gay couples DO have to worry about adequate preparation and body care. Maybe I'm just overthinking it again.\n\nWell, since I'm overthinking things anyway, maybe I should come up with a plan. After all, he may have a lot of sex, but it all follows a sort of basic formula. Warm up with a long blowjob, maybe give the woman some oral, switch to fucking and keep on switching partners and positions until there's enough footage for an hour and a half. What can I do to be different?\n\nActually... when I really think about it, I probably have more experience with kink than he does. My clients offer me a nice variety. I have everything from gentle sex to hardcore BDSM. This mini mental challenge kept me occupied all through my shower, until I finally had a good answer.\n\nAfter drying off a bit, I exited the bathroom to find him sprawled out on the bed with his hands behind his head. Naked, mmm... I would have thought he'd fallen asleep if not for the fact that his thoughts were apparently interesting enough to have him fully erect and pointing at the ceiling near the wall above his head. Grinning, I climbed into bed and kissed my way up his body from his toes to his neck. When he grabbed me by the back of my neck and kissed me possessively, I moaned and let him for three or four heartbeats before shaking my head and pulling away.\n\nSomething I DID actually have on hand in case I felt like masturbating, was a bottle of high quality massage oil. I grabbed it out of the drawer in the table next to my side of the bed. Then I poured some in my hands and warmed it up before spreading it on him.\n\nSee, the conclusion I'd come to was that he probably had almost no experience with the romance aspect of sex. Also, he'd actually mentioned trying to preserve the romance a bit. So... this.\n\nI wasn't trained in it, but I'd like to think based on his soft moans of enjoyment that I was doing a nice job. I massaged his chest, shoulders, and abdomen -- nearly in heaven at not just the visual of his fantastic body, but also the tactile delight of touching him everywhere.\n\nRather than move onto his legs, I had him turn over so that I could focus on his back for a while. When I reached his absolutely gorgeous ass, I wiped my hands off on a hand towel and physically positioned him over a stack of pillows so that I had a good angle to comfortably worship his ass for hours. To my surprise, he very quickly devolved into a quivering begging mess.\n\n\"Please!\"\n\nI pulled my tongue out of him and replaced it with my fingers. \"Please what?\"\n\nHe took a deep breath in order to calm down a little. \"If your goal is to get me ready for you, I'm ready! Please stop teasing me and get to it!\"\n\nI laughed and it sounded a bit evil for some reason. \"Actually, my goal is NOT to just get you ready, but to pleasure you as much as possible.\" And with that, I had my tongue join my fingers in my quest to stimulate his prostate -- maybe even to orgasm. To my delight, he was crying and babbling into the bed, and even clutching the sheets with both hands.\n\nEncouraged, I could keep this up all day. Eventually, his begging was cut short by a sharp gasp. \"Oh God! I'm gonna cum and I didn't think that was possible like this!\" And then there was a full body shudder that triggered a loud squeal into the bedding, that was quickly muffled just a little as he attempted to shove the bedding in his mouth. I gentled my touch and only kept up the stimulation until his cries changed tone from astonishment to a little overwhelmed.\n\nNot touching him in any way, I gave him a moment to process his orgasm. Well, I couldn't stop myself from caressing his ass and even kissing it once or twice, but I wasn't actively trying to get him off again. When he sounded calmer, I handed him a drink of water (I'd thought ahead while he was in the shower).\n\n\"Now, what would you like next?\" I asked with a smirk.\n\nHe shifted to look me in the eye even as he was still draped over the pillows. \"I have no complaints -- BELIEVE ME, I'm not complaining! But I can't help but wonder if you're in prostitute mode, trying to give me what I need as a client.\"\n\nI bit my lip in thought. \"Maybe I am, a little bit. But I told you that your pleasure IS my pleasure. I'm NOT focusing on your needs over my own because that's what I get paid to do. I'm actually indulging myself in all the things I like to do. Fulfilling my kinks to pamper and worship and touch. And pleasure.\"\n\nHe nodded in acceptance. \"Alright then, what I actually want most at the moment is to feel you inside me. Once I truly thought about it, I realized that I've been dying for it for the longest time. And I'll warn you now that if we're indulging ourselves in what we each want, then what I want most -- later, after I've recovered -- is to fuck you for HOURS! So... you're probably going to be sore tomorrow.\"\n\nI smirked at him. \"I look forward to it!\" Still smiling, I kissed a path up his spine, across his cheek, and over to his lips. Then I straightened up and used more massage oil to properly lubricate him, lubricate myself, and mentally prepare myself.\n\nThis inexplicably felt like a pretty big step. I mean... we were already lovers in every way but physically. We lived together and slept in the same bed -- naked. We shared all aspects of our lives with each other and were completely honest. I trusted him more than anybody and was suddenly nervous that this might change things between us. RUIN things!\n\nDylan sighed. \"Stop overthinking again and just get on with it!\"\n\nI chuckled wryly, half happy and half annoyed that he knew me so well. Pushing into him, I was surprised to feel so... good! It was a feeling I was determined to experience fully, experimenting with both speed and power until I found the one that felt the best. Mmm...\n\nI think I could lose myself in him.\n\nUnlike him, I wasn't usually expected to last a long time. In fact, sometimes I wasn't even expected to get off at all and the experience ended when the client achieved orgasm. This meant I had stamina (or maybe patience) when it came to using my hands and mouth, but not so much when it came to the actual fucking portion. Thus, it didn't take me long at all -- 20 minutes if I was damn lucky -- before I was pumping him full.\n\nI sighed in bliss as I melted onto the bed next to him. A tiny part of my mind neurotically became obsessed with if he was disappointed that I couldn't last as long as his co-stars. I actually rolled over and hugged a pillow to me because I was almost panicking now.\n\nHe moaned happily and cuddled up to my back, pressing kisses to my neck and shoulder. \"You know, maybe everyone is right. Maybe we SHOULD get married.\"\n\nI felt like my mind exploded even as a laugh exploded from my mouth. \"We have sex ONE time and you want to get married?!?!\"\n\nHe pressed his lips to my shoulder for a moment before sighing. \"I think... maybe we already are.\" Then he forced me to roll over so that I was under him and he could look me in the eyes. \"Look, it has nothing to do with the sex. And actually, as utterly fantastic as this is, I sort of like the fact that we don't need to have sex to have a full relationship. We call ourselves life-partners because on some level, we both decided to be in this for life. So why not get married?\"\n\nIt was my turn to sigh. \"How would that even work? We both have jobs that we love and don't plan to give up anytime soon.\"\n\nDylan shrugged. \"I think it would work exactly the way it has been. We've built a life together that is fun and rich and accepts the fact that we're both sex workers in different ways. The only real change I think we should make is to commit to taking a week off every other month -- or maybe two weeks off every 4-6 months -- so that we can do what we're doing here; exploring the world and spending time together.\"\n\n\"And it really wouldn't bother you to be married to an active whore?\" I questioned, being crude specifically because it was the crude attitude of others that he'd have to deal with if he married me.\n\n\"Prostitute,\" he corrected with a cute smirk, then kissed the tip of my nose. \"And why would it bother me? You said it yourself, we both have jobs we love, and neither of us plan to give them up any time soon. And if you really want to compare reasons to be bothered, I've definitely had sex -- directly and indirectly -- with a LOT more people than you have. As far as I can tell since the majority of your clients are regulars. Or are you saying that being married to a porn star would bother YOU?\"\n\nI had to think this over. Honestly, it had never bothered me before and I couldn't see it starting now. I shook my head. \"No... When I think about it, I get turned on. Take that girl the other day, for example. I didn't feel upset or jealous in the slightest even though she was interrupting our time together. I simply watched you tease the fuck out of her and...\" I laughed. \"And I actually wondered what it would be like if you granted her wish for a good fuck right there in front of me. My very own private porno to watch!\"\n\nHe frowned at me suspiciously. \"You say that, but if it really doesn't bother you, then WHY haven't you ever watched any of my videos?\"\n\nI gave him a look that said: DUH! \"If I did that, I'd be all over you!\"\n\nThis made him smirk rather smugly. \"Speaking of, I think it's my turn to be all over you!\"\n\nSurrendering to his touch, I purred as he kissed me everywhere. He clearly wasn't planning to take as long as I had, but he still opted NOT to skip straight to the end. With me on my back, it was a good thing I was flexible. He pushed my legs up until my knees were near my ears, and then licked my pucker until I was crying obscenely and begging him to get on with it -- ironically enough.\n\nAlso rather ironic, I was a little torn between being happy that he listened to me, and bummed that he hadn't insisted on torturing me until I had two or three orgasms. Fortunately, my mind soon went utterly blank as he rammed me into the bed for hours. Sometimes it was fast. Sometimes it was slower and more gentle. But it was ALWAYS powerful! It quite took my breath away.\n\nAt some point, I was not only hard again, but I was actually close to orgasm. For some reason, this triggered a bit of a shock for Dylan.\n\n\"Please Master! I've been so good for you! Please let me cum!\"\n\nHe faltered and looked at my face. I can only imagine that it was utterly flushed. Probably looked frantic and desperate.\n\n\"Please! Please Master? I'll make you feel so good if you let me cum! You'll feel me milking your shaft with my ass,\" I continued.\n\n\"Um... am I actually supposed to give you permission? If you want to cum, just cum,\" Dylan said.\n\nThis confirmed his lack of experience with this kink, but I was firmly in sub mode at the moment, so I took that as permission.\n\n\"Thank you Master! You won't regret giving me permission. I'll feel so good getting tighter on your shaft as you ram me into the bed!\"\n\nHe nodded, understanding that I needed him to continue what he was doing before he faltered. His moans got louder and full of pleasure as I got tighter and tighter. I didn't realize it at the time, but I had slipped my hands under my back to simulate having them bound in a harness, which also had the bonus of raising me up just a bit.\n\nThis seemed to enhance Dylan's pleasure. \"So fucking tight!\"\n\n\"Here I cum!\" I announced, arching my back and gasping because it felt like it hit me with the force of a tidal wave.\n\n\"Oh God!\" Dylan cried out, which turned into a roar. Pure bliss filled me as he bathed my insides with his hotness.\n\nPurring and sighing, I melted into the mattress. Sort of. To me it felt like I'd just melted into a puddle of goo, but apparently my body hadn't quite done that.\n\n\"Um... Are you okay?\" Dylan asked from somewhere next to me.\n\n\"Perfect Master,\" I assured him with a happy sigh.\n\n\"Then why are you still curled in a ball?\"\n\n\"Master hasn't released the harness,\" I answered automatically, and then it hit me. \"Oh, heh heh! Sorry.\" Taking stock of my situation, I realized that I was still bent the way he had bent me -- my knees next to my ears -- with my hands under my back so they wouldn't be in my Master's way. Slowly, I pulled my hands out from under me, and then took deep and purposeful breaths as I uncurled and straightened out.\n\n\"Will you explain this to me?\" Dylan asked with a curious frown.\n\nI nodded, pointing at the glass of water. But before he could hand it to me, my currently subby self noticed something important. \"Oh no! This little beggar made a mess all over himself and Master! Should I clean it with my tongue or does Master wish to punish me with the crop?\"\n\nDylan sighed and rubbed his forehead before using that hand and arm to lift me up a bit so that I could drink the water he now held. \"I have no idea how to deal with this, and you're currently not making a lot of sense.\"",
        "The drinking helped, since that was one of the things I was used to as a signal to end sub mode. I finished off the water in the glass like a good boy, and then snuggled into Dylan.\n\n\"Sorry, I didn't think to warn you because I didn't realize it would happen without... trying...\" I began. \"Basically, my Thursday night regular that I've been seeing for over a year, he always puts me in my harness and dominates me however he likes. I honestly just thought that I was only playing along, even though I do often experience what is called subspace. But being a submissive is not my kink. Not like that anyway. I guess I didn't realize that it had gone from roleplaying on my part to real submissiveness. And before you think that I was replacing you with him in my mind, please understand that I was fully aware and happy that it was YOU. If anything, I think I've replace HIM with you in my mind often enough that... yeah...\"\n\nDylan kissed me. \"Alright, if it's normal for you, then I'm not so worried. But is there anything I should know for future reference?\"\n\nI nodded. \"Just if it happens again, all you have to do is finish out the scene, meaning straighten out my limbs and giving me a drink... and... praising me for doing a good job.\"\n\n\"I can do that. Not so different from doing what the Director tells me to do,\" he murmured, kissing me again and stroking my hair.\n\nI placed a hand over his heart, which my ear was also over. \"Were you serious?\"\n\n\"About?\" A slight catch in his breath let me know that he probably knew exactly what I was referring to.\n\n\"Can you really accept a husband that has weird quirks like accidentally slipping into sub mode in the middle of sex?\" I nearly whispered.\n\nHe chuckled. \"Well, so far, this has been pretty damn interesting. You've managed to both impress and surprise me -- and I didn't think that was possible anymore. ... and yes, I'm very serious.\"\n\nTaking a deep breath, I once again surrendered to his will. \"Then... Then yes. I'll marry you.\"\n\nLaughing so emotionally that he almost sounded like he was crying, he cradled me in his arms and rocked me. \"I'm so happy right now!\"\n\nRelieved to hear that, I smiled at him. \"Me too.\"\n\nEpilogue\n\nDylan\n\nThe moment Luka accepted my proposal, I wanted nothing more than to drag him to the nearest place to elope, but he pointed out something that made so much sense that I couldn't argue with him. We were ALREADY more or less married. SO, what was the actual point of getting legally married? For us, it was to make it official.\n\nBut it was ALSO to let us have the pomp and ceremony that went along with getting married. To make a statement to the world that we loved each other and wanted to spend the rest of our lives together. In order to do that, we couldn't just elope; we needed to have an actual wedding and invite all our family and friends.\n\nAfter he said all that, I couldn't help but get excited by it. I couldn't help but WANT that. So, I suggested a date at the end of June -- that just so happened to be a hair more than four months after our engagement and would hopefully set a precedent for my suggestion of taking a vacation together every 4-6 months.\n\nSo, here it was, Saturday June 27<sup>th</sup> and I was still a bit hungover from my bachelor party last night. Anthony had taken charge beautifully and thrown a party to be proud of. It was a bit clich\u00e9 in that it revolved around a bunch of female strippers, but it still managed to shock all my friends because...\n\nOne of the strippers was an actress that I had worked with before. A lot!\n\n\"Ashley Fate!\" I greeted joyously. She leapt into my arms, wrapped her legs around my waist, and gave me a thorough kiss.\n\n\"Digg! I heard you were getting married, honey, but I didn't believe it because we're scheduled to star in a movie together in like three weeks!\"\n\nI groped her cushy ass, kneading it like it was bread dough. \"Oh don't worry, we still are. I'll be back from my honeymoon by then.\"\n\nThis led to all the other strippers gathering around me and touching me in any way they could.\n\n\"It's Digg Johnsinner!\"\n\n\"Oh my God, I LOVE you!\"\n\n\"Can I have your autograph?\"\n\nI held my arms out in a position of surrender. \"Ladies, we have all night. We can do anything and EVERYTHING you want.\" Especially since we were in one of my friends' house and didn't have to worry about offending anyone.\n\nAshley giggled and pressed her hands to her cheeks to feign being scandalized. \"Oh my! It boggles the mind to think about what two porn stars, a half dozen strippers, and all these horny men can get up to when the cameras AREN'T rolling and the goal is to have as much fun as possible!\"\n\nI laughed and put an arm around her. \"Probably all the same things as in College Orgy -- all 12 of them!\"\n\n\"I've seen those!\" One of the strippers squealed.\n\nThe one that had claimed to love me bounced happily. \"We should play some of the movies the two of you have starred in together!\"\n\nAshley and I both shrugged as neither of us minded.\n\n\"WAIT!!!\" Anthony exclaimed when he could get a word in edgewise. \"Are you all being serious?! PORN STAR!!!\"\n\nI looked around at all my friends. \"I'm honestly shocked that none of you knew.\" Just one chuckled and looked away to let me know that he knew.\n\n\"I just thought it was a guy that looked remarkably like you...\" another mumbled.\n\nI laughed. \"That's what my brother said!\" Then I gave Ashley a quick kiss before addressing all my friends. \"It sounds like these ladies are not opposed to having a wild night; any objections?\"\n\nThe ones that were single were all like: \"Hell no! No objections here!\" And the ones that were in relationships were like: \"I can't play, but I sure as hell want to watch!\"\n\nAnd with that lovely agreement in place, I had a rather strenuous night and found out that adding alcohol to the mix does actually change things, and not necessarily for the better. Still, I was in better shape than Anthony, hahaha!\n\nSpeaking of, he was bleary eyed and very rough looking, which meant that his hangover HAD to be way worse than mine. Looking up from trying to figure out his tie, he noticed me watching him. \"Hey, you know, this has been bugging me all night,\" he began, looking even more confused than he had been by the tie. \"I know that porn names are often cheesy, but Ashley picked a relative nice sounding name. Why the hell did you pick Digg Johnsinner?\"\n\nI laughed. \"Half the reason that porn names are cheesy is that it's hard to pick aliases that sound good without them already being taken or without them sounding like real people who could get in trouble if their employers thought THEY were in the porn industry. So, when it came time to think up a name for myself, I couldn't come up with ANYTHING creative and not even MORE cheesy. So, I remembered that some of my favorite shirts were from the Big Johnson line. Well I couldn't use that because of copyrights and trademarks, so I decided to change it to my initial: D -- Dig Johnson. But even that was iffy, so I changed it to Dig Johnsin, and then I felt it was a bit plain, so I spiced it up by adding a g and changing sin to sinner. Thus Digg Johnsinner.\"\n\n\"Alright, that's fair,\" Anthony accepted, and then groaned and clutched his head. I chuckled and fixed his tie for him since I'm pretty sure he'd never figure it out on his own. He pouted a little. \"You know, I can understand why you wouldn't want to go around telling EVERYONE that you're a porn star, but I'm your best friend. Or at least I thought I was.\"\n\nI sighed. \"Listen, it had nothing to do with you. Well at least not like you think. You probably think I didn't trust you enough or something, but it really wasn't that. I just didn't want to put that burden on you -- of worrying about me and things like: Am I being safe? Am I emotionally damaged? Do I have massive gambling debts to pay off and that's why I do it? ... I guess I would rather be seen as the unemployed slacker friend than the messed up loser friend with bad habits and too much debt.\"\n\nHe pressed his lips together in thought for a moment. \"Alright... So if you AREN'T damaged, on drugs, and paying off a debt, then why DO you do it?\"\n\n\"Because I love sex and get paid a LOOOOOT of money!\" I replied, and honestly, if a person didn't love sex, they probably shouldn't be in the industry.\n\nAnthony chuckled. \"You know, that actually does explain why you always look, hmm... hard to explain, but it looks like you put a lot of effort into looking sexy, but at the same time, are sort of careless about your appearance so that you look like you just sort of HAPPEN to be sexy.\"\n\nI gave him a hearty laugh. \"That's actually what I'm going for!\"\n\nThis made Anthony hum in thought. \"And you know, Luka is sort of the opposite. He puts a lot of care and attention into how he looks, and also seems to put a lot of effort into remaining a bit scrawny... but with some definition to his muscles.\"\n\nI grinned. \"Or in other words, you think he puts a lot of effort into looking sexy too, only he's not trying to make it look like an accidental occurrence.\"\n\n\"Exactly!\"\n\nI nodded in confirmation. \"Actually, you might be surprised to know just how much he spends on clothes! He gets his hair done regularly, and he has products in our bathroom that I don't even KNOW what they're for or what they do!\"\n\nNow that his tie was fixed, he looked me over, even smoothing out my suit shoulders with his hands. Then he smiled. \"Whereas today, you look like you WANT to look sexy and put a LOT of effort into it. You look really good.\"\n\nI smirked at him. \"That's because I went to a salon and got my hair done while you were still passed out this morning. I even had them put a little makeup on me!\" I held up my hands so that he could see the very basic manicure. \"Nails too.\"\n\nMy dad popped into the room. \"It's almost time. Ready?\"\n\n\"Definitely!\" I exclaimed, suddenly so excited that I almost danced on the spot.\n\nWe had rented out a good portion of a beautiful hotel for this. There were plenty of rooms for our family and friends to stay in for the next couple of days -- which also gave us both rooms to get ready in -- and also (most importantly) a really nice event room to get married in. Not to mention, a gorgeous yard to take pictures in and for the guests to explore when they needed a break from the dancing which would take place later on.\n\nAs planned, dad led me and Anthony to the side entrance for the event room. We entered and took our places at the Altar with the woman who was officiating. She had dyed red hair that looked surprisingly natural on her, was in her 40s, and radiated an air of love and kindness.\n\n\"So, does this make Luka the wife?\" Anthony asked curiously.\n\nI laughed. \"He probably won't care if you call him that, but nope. We both identify as very male, and so, we're both husbands.\"\n\n\"Then why didn't you both walk down the aisle?\" Anthony wondered.\n\nI shrugged. \"I don't really know. It's what I suggested, but Luka insisted that he get to walk down the aisle to a waiting me, and I can't say no to that gorgeous face of his.\"\n\nJust then, the music that had been playing softly in the background changed to be louder and bolder. The main entrance doors were opened to reveal Cory looking like he wanted to crawl in a hole and die. He stood there in a fairly basic suit -- consisting of a white jacket over black pants -- looking decently handsome as he held onto a small bouquet of blue flowers. I could see a hand reach out and give him a little push, which made him start walking down the aisle. When he reached us, he stood off to the side where the 'maid of honor' was supposed to stand.\n\nAfter making sure that Cory didn't burst into flames of embarrassment and burn to a crisp, I turned to look back at the entrance. After a pause that seemed like an eternity, Luka and his father appeared and began that extremely long walk toward me. I felt my breath catch and maybe even stop completely.\n\nLuka. Was. Gorgeous!\n\nHis shortish auburn hair had been styled so that it curled ever so slightly and pretended to be a bit of a mess, but was oh so sexy. His makeup had been done to make him look handsome with a flawless complexion, but not womanly. His chocolate eyes were radiant with his emotions, making me wish I could run over and kiss them.\n\nAs much as I personally would not have cared if he was utterly naked (we could have had a nudist wedding, and I'd be every bit as happy), he was breathtaking in an expensive and intricately embroidered white tuxedo. I know he didn't identify as a bride, so when he said that I got the black tux and he got the white one, I didn't really think anything of it. Now I see that he was actually going for the pure white 'virginal' feel that brides favored -- NOT because he actually was, but because it was a symbol he had embraced and made his own.\n\nThe entire package was completed by an enormous bouquet he held. It was made up of blue flowers of all kinds, even a few roses (that must be dyed or something), and must weight quite a lot. He held it in both hands even though one of his arms was linked with his dad's.\n\nGOD DAMN!!! I was highly tempted to skip the entire ceremony, throw him over my shoulder, and run off with him to our bedroom!\n\nIt was baffling -- even to me -- just how our relationship worked. We were perfect for each other and I CLEARLY lusted after him every bit as much as I loved him, but for the most part, what I loved the most about us was that we did everything else together. We slept together (actual sleep), we worked out together, we ran together, we snuggled up and talked about every little thing that crossed our minds. All in all, actual sex between us was fairly rare, but that didn't mean we weren't attracted to each other.\n\nIn fact, I was so fucking attracted to him right now that I I think I might actually be drooling! God! I gotta get it together! I can't be so besotted that I can't even remember my vows!\n\nMy brother and sister oh so helpfully threw little bouncy balls at me to knock my mind back into place. I looked over at them -- at first because I was curious as to what had happened -- only to see them both very overtly wipe the corner of their mouths. Right. Message received. Close my mouth and stop drooling!\n\nEven though I tried my best to pay attention, the moment his bouquet was handed over to Cory (who looked more embarrassed than ever, poor guy) and Luka's hands were placed in mine, I had absolutely NO capacity to do anything but stare at him. Fortunately, I'm pretty sure the same could be said for him as he met my eyes the entire time.\n\nStrangely, we must have had an autopilot on somewhere inside us, because even though I don't remember doing so, I somehow managed to get through my vows and the entire ceremony. And I don't recall Luka actually saying anything, but he did too. Unless we both just stared at each other so intently that the Officiant took that as our vows and kept right on going without us, hahaha!\n\nDespite not remembering a moment of the ceremony, the kiss to make it official stands out in my mind as the best kiss of my life. And it wasn't even all that skillful! It was just slightly more than a pressing of the lips and only lasted maybe three seconds, but it somehow managed to send an electric thrill up and down my spine and throughout my entire body.\n\nWhen the ceremony was over, we were all led outside by our hired photographer to take pictures while the event room was quickly changed from an aisle and altar to a banquet hall fit for a king. The reception itself was fun and even though we were both just a little clumsy and had no idea what we were doing, we managed to dance well enough to not injure anyone. Hours passed with fun being had by all, but eventually, we actually had to leave to check in for our 2am flight to Machu Picchu.\n\nWe were able to sleep snuggled up on the plane, and so, felt like no time at all had passed when we woke up to find that we were arriving. Apparently the fact that we were still in our wedding clothes, wearing matching wedding bands, and looked fresh from a party tipped off the other passengers that we were newlyweds. We know this because a lot of them had left us little notes of congratulations along with little presents such as extra packets of nuts and bottles of water. A couple of anonymous people had even left us envelopes containing money. Nothing much, mostly 20s, but it was touching all the same.\n\nOur ride to the hotel was still a bit sleepy, even though we were awake. We snuggled in the back of the cab and talked. Plus kissed every minute or so -- just because.\n\n\"How was your bachelor party?\" Luka asked, pressing a kiss to my neck.\n\nI laughed. \"I shocked all my friends because one of my co-stars was hired as a stripper and she and all the other strippers were so happy to see me. So, not only was I outed to my friends, but they then suggested an orgy and most of the guys were more than happy to agree.\"\n\nLuka laughed. \"Not so different from mine. One of my wealthier clients was so impressed that I had the balls to get married despite my line of work, that he actually hired a bunch of other prostitutes he occasionally frequented to help him throw me a party. The only friend I like enough to invite to my bachelor party is Cory, and since he's currently single, he was a little freaked out but not adverse at all to being fussed over by professionals.\"\n\nI raised a brow at him. \"You were working during your party?\"\n\nHe shook his head. \"Not at all. I was actually being pampered to my little heart's content.\"\n\nI kissed him. \"I bet you loved that.\"\n\n\"I so did!\" He exclaimed with a grin. \"I didn't have to lift a finger for anything all night.\"\n\nI laughed, finding it so not funny that it was hilarious. \"Ha! A porno party for the porn star and a prostitute party for the prostitute! Perhaps we should have switched halfway through, just to see what would happen!\"\n\nHe chuckled softly and kissed me. \"Let's save that for our anniversary.\"\n\n\"Deal!\"\n\nA thought sobered me up rather abruptly. \"Hmm, you know, one of the things that first attracted me to you -- shortly after we met -- was that I could tell your smiles were fake. I didn't want to pry, but I really wanted to know why. I think I assumed that you had a shitty childhood or something. But as I've gotten to know you, I've learned that you had a normal childhood and no particular reason to hide behind fake smiles. So... I've gotta ask...\"\n\nHe kissed me, giving me a warm and real smile. \"I bet you can't say the same anymore. See, the reason my smiles were fake was because I didn't have anybody in my whole life that I felt I could be completely honest with. That I could trust with EVERY aspect of me. I was actually getting a bit depressed over getting kicked out of my apartment because the landlord figured out what I was... well, it simply reinforced the fact that I had to lead a double life -- like a superhero, but way more fun and nowhere near as glamorous. But then I met you and... all my smiles are real now...\"\n\n\"Aww!\" That made me melt and kiss him all the rest of the way to the hotel.\n\nAfter checking in, we tossed our luggage on the bed and looked through a guide book. \"Should we get breakfast and go for a run, or should we just head on up the mountain?\" I wondered.\n\nHe pushed me onto the bed so that I was flat on my back. \"First, I'm going to consummate you so hard that you'll be feeling me for days!\"\n\n\"Mmm,\" I moaned in happy agreement.\n\n\"Then we're probably going to have to recover a while before taking a shower,\" he continued, already unbuttoning my suit jacket and shirt. \"THEN we'll get something to eat. I'll leave our plans after that up to you.\"\n\n\"Mmm...\" I moaned again, thoroughly enjoying the way he was making love to my neck. As a general rule, neither of us marked the other because -- well -- our jobs. Today was clearly an exception and the feel of him sucking bruises onto my neck made my blood run so hot that I couldn't think straight if my life depended on it.",
        "\"So fucking sexy!\" Luka informed me as he licked what I could only assume was a nice bruise on my neck. But then he shifted to kiss my chest. \"So SO fucking sexy!\"\n\nOh wait, he meant me! I gave him a smoldering grin. \"Well, I try.\"\n\nHe laughed softly and nipped my left nipple. \"Which I definitely appreciate.\"\n\nTo my dismay, he pulled some Velcro straps out of his bag and bound my hands together behind my head. I opened my mouth to protest, but then I realized that I trusted him with every part of my body. If he wanted to tie me up and torture me, I would let him.\n\nOr so I thought.\n\n\"No wait! Stop, what are you doing?!\" I questioned when he pulled a feather out of his bag and stroked my chest with it.\n\n\"Hush... I don't plan to do anything bad, but if it really does get to be too much for you, say red. I'll ask for a color from time to time, and at that point, green means keep going, yellow means give me a moment to decide how I'm feeling, and red means nope, stop, I can't handle that!\" He explained.\n\n\"Alright...\" I agreed hesitantly. Damn it! This is out of my realm of expertise. But... But I'm also a little curious...\n\nRather than get right to the tickle torture, Luka grabbed a vibrating butt plug and lubed it up very well. Now this I could handle! In fact, I always enjoyed those. Between the butt plug, the feather, and lots and lots of kisses all over my body, I was soon a babbling, incoherent mess. Then Luka put his mouth on my shaft and I squealed.\n\n\"Purple! Purple!\"\n\nAfter he finished swallowing, he pulled off and laughed. \"What does purple mean?\"\n\nI was panting almost too much to speak. \"It... means... that... I think... my mind... exploded!\"\n\nStill laughing, he shifted to kiss me again. \"Hey, I know how important thorough preparation is, but I want to know, do you want me to let you go so that you can shower and prepare, or do you want to stick with just this for now and maybe just have me fuck your face a bit?\"\n\nI was still panting but managed to speak more or less clearly. \"I actually... don't mind... just this once. I know you'll... be careful not to... damage me.\"\n\nHe looked like he melted. Purring happily, he kissed me and kept on kissing me for so long that I got a bit frustrated that my hands were still bound and I couldn't hold him. Then -- while still kissing me -- he removed the plug and used his fingers and plenty of lube to perform the absolute minimum amount of prep required, and since my body was used to this sort of thing, I relaxed and opened up fairly quickly.\n\nWhen he sank into me, I sighed. A soft and sort of embarrassing sigh that probably made me sound like a lovestruck idiot, but I couldn't help it! I AM a lovestruck idiot! Him inside me? It felt like home. Like perfection. Like forever.\n\n\"Yellow! Red! Whatever! Just let my hands go because I NEED to hold you!\" I cried out.\n\nPausing, he pulled the Velcro straps off me, and then resumed his thrusting. His pace was slow and peppered with plenty of kisses, which was perfect because it allowed me to hold him and return every single kiss.\n\nWhen he pumped me full, he habitually tried to roll to the side to let us both recover, but I wouldn't let him. \"Stay,\" I murmured, wrapping my legs a bit tighter and squeezing him to me with my arms.\n\nHe made a wheezing sound. \"Too tight!\"\n\nLaughing, I lessened the force of my embrace and moaned happily when he settled onto me for a quick nap.\n\n\"Love you,\" I informed him. I mean we both knew that we were in love by this point, and even though I didn't remember saying them, it was in my vows. Still, this was the first time that I had said it out loud directly to him.\n\nHe hummed happily, sounding half asleep already. \"I love you too.\""
    ],
    "authorname": "ladyroxanne21",
    "tags": [
        "kink",
        "mild bdsm",
        "mmf threesome",
        "slow build",
        "two men one woman",
        "threesome",
        "roommates",
        "bisexual male"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-porn-star-and-the-prostitute"
}