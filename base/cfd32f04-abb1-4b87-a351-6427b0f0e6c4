{
    "title": "A Dance with The Devil",
    "pages": [
        "Author's Note: This is my entry into Literotica's 2015 April Fool's Day contest. This is a short story that I hope you enjoy reading it as much as I did writing it. If you like this story, or even if you don't, please take the time to comment and vote.\n\nThis story is dedicated to AMoveableBeast, who is the inspiration behind this story as well as being a wonderful and supportive friend. :)\n\nAll sexual activities are performed by consenting adults over the age of 18. Enjoy!\n\nThe devil lives. I knew the demon was sitting dormant, waiting for the perfect opportunity to escape from its prison. It was a prison that I've desperately tried to keep secure for many years now, even long before I had gotten married. Never would I allow it to be freed, for it threatened to consume all that I hold most sacred.\n\nIt was a futile endeavor however. Despite my best efforts I knew I couldn't contain it forever. Who knew that in the end it would be the person I loved most, my husband, who had the key to unlocking the devil from its cage? By the time I realized he had released the demon it was too late. I only caught a glimpse of its long blonde hair and cruel smile before it trapped me within the confines of my own mirror. How ironic that now I was a helpless prisoner forced to endure whatever chaos the devil would bring.\n\nOn the night of the devil's escape, it wasted no time preparing a trap for my husband when he returned home from a long night at the office. It had removed everything from our bedroom; the king sized bed, the dressers, the nightstands, even the curtains that draped over the bay window. All that remained was my vanity which held the large mirror I had been imprisoned in. Once the room was cleared of undesirables, the devil brought in a small wooden chair and a CD player from the dining room, lit several candles upon the vanity and corners of the room, then erected a tall chrome pole that bolted to the hardwood floor and extended to the ceiling. The devil made sure I had a front row seat for whatever it had planned for my husband.\n\nThe trap had been set and not a moment too soon. My husband had just walked through the front door as the devil finished preparing. I could hear him walking up the stairs, calling my name.\n\n\"Run! It's a trap!\" I shouted as I pounded against the glass of the mirror. \"There's a monster in here!\"\n\nHe couldn't hear me; the devil made sure of that. The moment he entered the room the demon leapt from behind the door and gently wrapped a blindfold around his eyes, blackening his vision to his new surroundings.\n\n\"Um, what are you up to?\" he inquired with a slight smile across his face.\n\n\"It's not me! It's the devil! Run while you still can!\"\n\nThe devil only giggled with the voice of a little girl. It slowly rubbed up and down his chest before unbuttoning his shirt for him then sliding it down his arms. Again it rubbed against him, sliding its fingers through the small hairs on his muscular chest and then grazing his nipples. Its right hand went further south, cupping my husband's genitals while the other hand tugged at his belt. After freeing his pants from the tightness of his belt, the devil knelt behind him, pulling his pants down as it descended. My husband's thick cock sprung to full attention while the devil finished fully undressing him.\n\nStanding, the devil grabbed ahold of my husband's erect cock and pulled, urging him to step forward. It lead him to the wooden chair then sat him down with a slight nudge. Standing behind him, the devil grabbed each of his arms and brought them behind him, tying them together with the rope conveniently placed on the floor. After securing his wrists tightly, the devil removed the blindfold. My husband took in his surroundings as the devil walked to the bay window, staring at the full moon that illuminated the bedroom along with the dim candles.\n\nI knew what this cursed being was, but not my husband. It had him under its spell. He was absolutely powerless to look away from its impressive womanly figure. The devil's hair was golden blonde and so long it dangled down to its shapely round bottom even with it all bound in a tight ponytail. The heels of its black thigh-high leather boots clacked against the hardwood floor as it sashayed from the window towards him. I watched his eyes widen as the creature stepped closer to him, no doubt taking in the full extent of its magnificent plump breasts that were spilling out of the cupless black corset. The black leather gloves that extended to the devil's elbows completed the devil's evil dominatrix look. As his eyes descended lower toward the bareness of the devil's sex, I felt a twinge of jealousy racing through me that burned my very soul.\n\nPutting its leather covered hands on his shoulders, the devil lowered its head, looking my husband directly in the eyes. A sultry smile stretched across its face while licking its hungry red lips, appraising him like one would a juicy steak at a butcher's shop.\n\n\"You're a fine specimen,\" the beast spoke, running its long index finger down my husband's hairy chest.\n\n\"What is all this?\" my husband asked as he struggled to free himself of the fibered rope that tore at his tender wrists. \"What are you planning to do?\"\n\nThe devil ignored his inquiry. Its fingers trailed lower, running across his toned stomach down to his pubic line. He was its plaything now, restrained and helpless. The demon walked behind him, tightly gripped the back of the chair, then dragged him across the floor toward the center of the room. The legs on the chair screeched loudly and left gouges in the hardwood floor in its wake. The noise stopped when the devil positioned him a few feet in front of the steel pole, facing it.\n\nThe devil withdrew from him, walking towards me. It gazed wickedly at me with cold brown eyes full of evil intent. The creature pressed \"play\" on the small CD player sitting on the vanity next to me then slowly walked back to the steel pole in the center of the room. The beast gripped the pole with its right hand and spun slowly as the intro to the song \"Christian Woman\" by Type O' Negative played.\n\nOnce the hard electric guitar riff started, the devil faced my husband while gripping the pole above its head with both hands. Its body moved with the fluidity of the ocean to the beat of the music, bucking against the open air. I watched helplessly as my husband smiled at the devil performing its dance of seduction -- his thick cock going from mildly hard to full mast.\n\n\"No! You must resist it!\" I cried out over the loud music.\n\nThe devil was in complete control, my husband now at its mercy. Vaulting itself into the air, the devil climbed to the top of the pole. It then leaned outward, holding only by one hand and its locked ankles, and ground its bare sex against the pole. My husband's head looked up at the gyrating creature, unable to turn his gaze away. Smiling, it clutched the pole with its thighs then hung inverted. With its hands now free, it played with its pussy that was now eye level with my husband. Its hungry eyes locked onto him like a fierce predator, reveling in teasing him, taunting him.\n\nDescending down the pole in a spiral of gymnastics, the demon's heels slammed against the floor with a loud thud, its perfect ass barely grazing my husband's knees. It leaned its back against his chest, its arms wrapping around the back of his neck. Its blonde hair tickled his nose as it ground its bare ass against his full erection that was nestled between its curved cheeks. The devil moaned sweet nothings into his ear as his cock slid between the luscious valley of its ass, hoping to erase all traces of me within his mind.\n\nA teasing giggle escaped its lips before returning to its feet. The demon faced him with its back against the pole, its arms extended high. Again it jumped into the air, holding the pole with its hands and spreading its legs wide. I saw my husband wet his lips as he starred at the creature's inviting pussy that was suspended in the air in front of him, beckoning him to touch it. The demon then braced its heels against his shoulders, digging them in as it humped against the open air. His eyes never left the demon's inviting pussy that had a hint of moistness which shimmered in the candlelight.\n\nGracefully dropping its feet back to the floor, the devil strolled over to the candles, singing softly to itself the words to the song blaring from the stereo. After grabbing the small silver basin with a burning candle at its center, it walked back to my husband, spun the chair with its back against the pole and straddled his waist.\n\n\"Wha-what are you going to do with that?\" my husband stuttered.\n\nThe devil just smiled as it poured the hot oil pooled in the basin down its front. I watched as beads of thick oil trailed down the demon's perfect tits, across its erect protruding nipples, down its flat stomach, and finally stopping where its bare pussy met my husband's waist with his cock sandwiched between the devil and himself. The hot oil left trails of red skin in its wake. The devil was unfazed, but I could see the discomfort on my husband's face as more and more of the hot oil reached his genitals.\n\nThe devil leaned forward, its lips attaching to the side of his neck; kissing, suckling, biting. It pressed its slick breasts against his body and smeared the warm oil all across his chest. Gripping its breasts, the devil massaged his chest with its tits like they were heavy soft sponges. My heart sank when I heard him let out a soft groan followed by a hissing \"Yes\". He was enjoying everything the devil was doing to him.\n\n\"You could at least pretend you don't like this, you bastard!\" I screamed.\n\nThe devil only smirked at my contempt. It grabbed his straining cock that protruded between its inner thighs and stroked it with its oily leather covered hand. His head leaned back as the creature stroked him with increasing speed, all while rubbing its slick tits up and down his body.\n\n\"No! Stop it!\" I shouted, beating against the glass of the mirror once more. \"He loves me, not you!\"\n\nThe devil stood. It attempted to pull off the tight elbow length gloves, but the oil made the patent leather too slick. It managed to peel just an inch off the index finger on both hands.\n\n\"Bite down,\" the devil commanded, holding the piece of fabric to his lips. My husband obeyed, biting down hard as it pulled each glove off one by one. \"Good boy!\" the devil praised my obedient husband.\n\nMoving behind him, the devil climbed up the pole then spun around so that the back of its thighs rested on his shoulders, its pussy grazing his nose. I watched in absolute shock as my husband eagerly tongued the devil's wet pussy directly in his face without hesitation or being instructed. The devil looked at me with a victorious smile, so smug with the knowledge that every moment of this tormented me.\n\n\"No! This can't be what you want!! I loved you! How could you?! After all these years?!\"\n\nGripping the pole with one hand and a fist full of my husband's hair in the other, the devil rode my husband's face as if he were a bull burned with a fresh brand. I could vaguely hear my husband's muffled voice over the echoing orgasmic sounds coming from the demon's mouth as he pleasured the devil. He showed no sign of wanting it to stop, and neither did the devil. The more the devil covered his face in its unholy nectar the more he enthusiastically drank of the demon. Each time the devil came it cried out in complete ecstasy, screeching its pleasure into my ears.\n\nI looked upon my husband when the devil finally climbed off him. He was covered in a mess of sweat, massage oil, and that demon's cum. He breathed heavily as if he had just ran a hundred miles and the smile on his face suggested he loved every step. A love with something that wasn't me.\n\nThe devil squatted between his legs, perching on its heels. It smiled as it gripped his slick swollen cock and rubbed the tip across its cheeks. \"I bet you'd love to cum all over my face, wouldn't you?\" the temptress asked in a sultry tone.\n\n\"Yes,\" he hissed.\n\n\"Yes?!\" I cried. \"That's disgusting! Why would you ever do that? What the fuck is wrong with you?!\"\n\nThe devil licked up and down his veiny shaft, teasing and toying with him. It didn't seem to mind the oily taste, especially after my husband voiced his approval with a soft \"Oh\". Its eyes gazed into his as it sucked in just the head of his cock, applying pressure with its lips and tonguing the underside. The demon firmly gripped the base then stroked him to meet its mouth. The lewd sloppy sucking sounds the devil made with it's mouth was audible even over the loud music. My husband moaned even louder when the devil removed its hand and took his cock into its mouth all the way to the base. As it retreated, the devil left a trail of saliva from the tip of his cock to its lips which then dribbled down its chin.\n\nThe devil stood, then straddled my husband's lap once again. It reached between its thighs and pointed his thick cock towards the slick folds of its dripping pussy. He whimpered as the heat of its sex teased the tip of his throbbing cock.\n\n\"Do you want me?\" the devil mewled.\n\n\"Say no, damn you!\" I yelled against the glass.\n\n\"Yes!\" he hissed.\n\n\"You want to be inside my tight pussy?\"\n\n\"Say no! Please!\" I sobbed.\n\n\"Yes!\" he frustratingly said.\n\n\"Let me hear you say it.\"\n\n\"No... I... I can't bear to hear him say it.\"\n\n\"I want to be inside your pussy!\" he declared.\n\nHis words sent daggers straight to my heart. I thought I was the woman he has always wanted. I tried to be the best wife I could, but I have failed him, just as I failed to contain this demon.\n\nThe devil rose. My husband pouted as it walked over to the vanity and grabbed a sharp steel knife sitting on top next to the other candles. The devil's ritual was almost complete.\n\n\"What the... What are you doing with that?!\" he shouted.\n\nThe devil crisscrossed its legs as it slowly walked back to him. Leaning down, it placed the blade against his chin. \"If you want inside my pussy,\" the demon bent down and severed the roped that bound his wrists, \"Come over here and fuck me!\" The devil tossed the knife on the floor and walked back to the vanity. It bent over, placing its elbows on top and arching its back. It wiggled its ass teasingly, waiting for him to plunge himself inside.\n\n\"Now is your chance! Your hands are free! Show this bitch our marriage still means something!\"\n\nMy husband stood from the chair, examining his raw wrists. He stepped forward, the knife at his feet.\n\n\"Yes! That's it! Just grab it and-\"\n\nHe walked past the knife, grabbing ahold of the devil by its hips.\n\n\"No! You don't understand! Don't do this!\"\n\nIt was too late. Desperate for release, my husband poised the tip of his cock to the devil's nether lips and thrust himself inside. He enthusiastically rammed his stiff cock deep inside the demon with the speed and vigor of a sex crazed madman. He groaned his pleasure as sweat beaded across his forehead the more he fucked the devil's wet pussy. The room became filled with the sounds of their mutual pleasure and their sexes slapping together.\n\nThe devil glared at me in the mirror of the vanity. Its blissful eyes sent a chill down my spine as my husband continued his assault on its pussy. \"This body never belonged to you,\" the devil whispered. \"All these years trying to contain me, being all prim and proper, has failed you at last. You cannot deny who you really are; a horny little slut! One who loves to have her body worshiped, and filled with a nice hard cock!\"\n\n\"No! It isn't true! That isn't me at all!\"\n\n\"Oh really? Look between your thighs and tell me this doesn't feel good.\"\n\nJust then all the sexual buildup came rushing through my mind all at once. My dripping pussy was on fire! I could feel every inch of my husband's thick cock sliding in and out of me. The immense pleasure fogged my mind. I couldn't think!\n\n\"That's what I thought, you slut!\"\n\n\"But, he isn't like this! You're making him do this!\"\n\n\"Exactly! You think he's not a sex deprived man with his own devil inside, dying for the piece of ass you won't give him? Allow me to change your perspective.\" The devil turned its head over its shoulder, \"Spank my ass!\"\n\nWithout hesitation, my husband swatted the devil's ass with his right hand.\n\n\"Harder!\"\n\nAgain he smacked the devil's luscious ass, leaving a stinging red handprint.\n\n\"Again!\"\n\nEach time he swatted I felt a twinge of pleasure deep inside my pussy. The devil was right. Each swat on my ass felt so good as my husband fucked us, and he was enjoying it just as much.\n\n\"All these years of denying me, your dark sexual desires, and for what? So you wouldn't feel embarrassed?\"\n\n\"I... I didn't want to drive him away!\"\n\n\"Drive him away? From this? Look how much he enjoys fucking us! Do you really think he'd run from this? He probably would have run away if I hadn't stepped in.\"\n\nFrom the mirror, I gazed at my husband's face. The look in his eyes was one of deep sexual need. Sweat dripped from his forehead as he enthusiastically drove himself inside the devil's molten hot pussy again and again. He no longer cared about the real me. All that concerned him was filling the devil with his stiff eager cock.\n\n\"Submit yourself to me, you little slut! Submit, and become one with your lustful desires!\"\n\nThe devil was right. I caged my desires for fear of ridicule, denying myself of who I really am. The devil had my husband completely under its control, and what was so wrong about it? He enjoyed what I thought no one else would. I love dressing slutty, modeling my sexy body, dancing seductively, having my ass spanked, and most of all; being fucked over and over again.\n\nThe devil had won.\n\n\"I submit,\" I said with a deep sigh.\n\nThe devil looked at me and smiled, \"You submit to what?\"\n\n\"I submit to my dark sexual desires! The ones dormant within me! No longer will I be afraid of my own sexuality! If that makes me a dirty, cock-loving slut then so be it!\"\n\nWith a devilish smile, the devil within me reached for the mirror on the vanity. Grabbing ahold, it yanked it off and threw it across the room, shattering it on the floor. My past self was no more, disintegrated among the shards of glass. The instant the shards of broken glass scattered across the floor I regained control of my body. I was different now however, reborn in sexual fury.\n\nMy husband stopped, shocked by my actions. \"What the hell did you do that for, babe?\"\n\nReality set in. The stinging of my battered ass and the pleasure coming from my cock stuffed pussy pulsed through me like electric shocks. I hungered for more.\n\n\"I didn't say stop! Fuck me! Make me cum over and over again!\"\n\nMy husband lost interest in my display of crazy. I could feel my pussy stretch as he sheathed himself inside me to the hilt. He fucked me with long blissful strokes, his balls slapping hard against my burning clit. I was lost in his sexual intensity, moaning blissfully as he brought me ever closer to orgasm.\n\n\"Yes! Oh God yes! Pull my hair! Make it hurt!\"\n\nI felt my husband grab a fist full of my pony tail and yank my head towards him. The erotic pain streaming from my skull sent chills down my arched spine all the way to my pussy. This newly created angle made the tip of his cock trigger a orgasmic eruption within me. I cried his name amongst a string of unintelligible obscenities as I came with the fury of a hurricane, my pussy juices flowing over his cock like a natural spring.\n\nMy husband became possessed, as if his own devil had been released. He spun me around and kissed me with a deep primal need, his tongue fighting for dominance with my own. He grabbed me behind the knees and lifted me off the ground. Carrying me away from the shards of glass spilled across the hardwood floor, he pinned my back against the flat surface of a nearby wall.",
        "Our bodies pressed tightly together as our lust intensified, my legs wrapped around his waist and my arms around his neck. His hard cock found its way home, penetrating the wet folds of my pussy once more. I pulled on his neck, forcing his mouth to the tops of my tits that pressed against his collar bone as he fucked me with wanton abandon. His muscles tensed and flexed, reaching the point of no return. With a beastly roar, he plunged deep within me and I felt him fill me with his hot sticky seed.\n\nWe breathed heavily as we came down from our sexual high, taking in the satisfying smell of scented massage oil, sweat, and raw sex. My legs slowly descended to the floor, shaking after the most intense sex I've ever had.\n\n\"Jesus,\" my husband panted. \"That was incredible! I wanted us to become more sexual, try new things, but I had no idea you had this in you!\"\n\nI smiled at him, staring into his dark eyes. \"That's what happens when you dance with the devil.\"\n\nThank you for reading! Please let me know what you thought of this story by voting (only once) and in the comments section. "
    ],
    "authorname": "Rozalin_0123",
    "tags": [
        "female demon",
        "pole dancing",
        "devil",
        "massage oil",
        "bondage",
        "unreliable narrator",
        "seduction",
        "thigh high boots",
        "leather lingerie",
        "twist ending"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-dance-with-the-devil-3"
}