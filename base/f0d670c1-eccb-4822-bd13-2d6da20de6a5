{
    "title": "Reaching Out Ch. 03",
    "pages": [
        "++I know that there has been a considerable wait for this story. I am truly sorry about that. I am fairly nervous about posting this, as the conditions it was written under were starkly different than the conditions the others were written under. I hope that it is worth the wait, and if it isn't, I understand. For what it is worth, here it is. There will be a note at the end with a little more explanation about why it took so long. Thanks for taking the time to read my work, and thank you for waiting so long for this story to pick up again++ \n\n***** \n\nJames went to Dana's room and knocked lightly. She called him in and he sat on her bed while she fixed her hair, sitting at her little desk. She watched him in the mirror, her little smile clear as he sat. James couldn't help but smile as well. He knew that his little vacation was coming to its end, and that he may have to stay in his current home for a while. But the thought that he would most likely be living around here soon, with Dana, was euphoric. He was constantly thinking about having her to himself around the house, the two of them able to be together without hiding, without trying to remain inconspicuous; the two of them living together as the couple he so desperately wanted them to be. It was enough to set his stomach to fluttering with anticipation. He wondered if Dana felt the same way. \n\n\"Will you wait to get a loan and everything until you get an okay from your office about working from home?\" Dana asked, finishing her hair and turning to him. \n\n\"Yeah. I wouldn't want to get a huge home loan and then not be able to use it to get a home. I want to have everything lined up and ready to go, though. So, I'll see what all I can find today, and when you get back from work we can go through it and see what we like.\" James explained as she sat next to him to pull on her shoes. \n\n\"Okay. I would like that. How are we going to talk to mom and dad about me moving in with you? Do you have any ideas on how to go about that, yet?\" She asked. She looked calm, but her voice was a bit tight. She was still rather worried about this. James knew she was, and honestly, he was as well. He thought they would have to be careful about how they went about it. \n\n\"I've been trying to think about it, but I don't think I have anything solid yet. I'm getting the feeling it's going to be a simple, straightforward thing. We are just going to sit down and talk to mom and dad and tell them that we're thinking of having you move in with me to see how it helps. Just put it out there plain like that, but, you know, carefully. I don't know. I guess I'll keep thinking about it. If you get any ideas, please let me know. I am shooting in the dark on this.\" He said, chuckling a bit as he finished. Dana leaned against him and wrapped her arm around his waist, giving him a brief squeeze. \n\n\"Of course I will. But for now, I need to get to work. I have a lot of pieces to get done. I'll see you soon enough. I love you, James.\" She said. She said the last softly, but there was a clear emphasis all the same. James smiled and gave her a light kiss. \n\n\"I love you too, Dana.\" He answered, his words clear and deliberate, answering her emphasis with his own. His eyes held her steadily, his smile unfaltering. He could declare his love with no hesitation and with complete conviction. He was in love with her. It was as simple as that, and he wanted her to know. She smiled wide and looked like she was close to tears. James pulled her close and held her tight. He whispered in her ear that he loved her again and felt her tears wet the side of his neck. \n\n\"Thank you James. I love you so much. I thought I was going to be all alone forever. Now I know I will have someone to share my life with.\" She said, her voice a little rough. James could feel her breathing start to even out again as she regained control of herself. She relaxed her tight grip and leaned back from him, wiping her eyes. Her smile was still present , and James was glad to see it. \n\n\"We'll talk when you get back.\" He said as she stood up. \n\n-- \n\nJames called a couple real estate offices in town and went to pick up a few listing catalogs, then sat down at home to go through them to see what he could find on the internet in the area. His head was a spinning mess of square footage numbers and room listings by the time Dana walked in. James had a new idea forming in his mind, an idea that he figured was inevitable considering what he was planning to do with Dana. He was letting it rest in the back of his mind for the time being, though. He had more immediate things to work on. He smiled as Dana walked over, and happily set his computer and the booklet he had been checking aside. \n\n\"Hello, James.\" She said softly as she sat down next to him. \n\n\"Hello, Dana.\" He answered, kissing her lightly. \n\n\"Anything good so far?\" she asked, glancing down to the booklets. \n\n\"Some good ones, yeah. My head is numb though. I've been going through this all day. I could use a break.\" He said as he stretched his arms up, wincing at the small crackle along his spine. \n\n\"Would you like to bring this stuff up to my room? Go over it there after your break? I need to get changed and would like to relax a bit as well.\" Dana said, smiling a bit. James couldn't pick up much in her voice, she was getting to where it was rather smooth and clear when she wasn't scared, unlike when he had first started trying to analyze everything the way she did. He could, however, see the look in her eye and the knowing little smile. She was leaning forward a bit, and looked a little anxious. James thought he had an idea of what kind of relaxation she might have in mind. He thought that kind of relaxation might be just what the doctor ordered. \n\n\"That sounds like a wonderful idea.\" James said, smiling wider. \n\nHe gathered the few booklets and the laptop and followed Dana up the stairs. With her door closed, James set the computer and booklets on her desk and sat on her bed. He was finding himself feeling more and more at home here, in her room, on her bed. \n\nDana stood facing her closet, her back to James. She unbuttoned her shirt and slid it off. She undid the clasp of her bra and let it fall as well. She looked over her shoulder a bit, a small smile on her face, and looked in his general direction as she undid her pants. She let them fall. James waited until her panties joined her pants before pulling his shirt up and off. He had not wanted to miss any part of her little show. Dana turned to face him, her face hidden a bit by her hair, her cheeks a little red. James could see some tension in her face, could see that she was standing a bit more rigid than she usually did. He stood up and let his own pants fall, stepping out of them towards her. She relaxed a bit as his clothes came off. When he stood naked before her, she looked calm again. She looked up to him, her eyes soft and happy, her smile easy and natural. James let his hands rest on her hips, pulling her a bit closer. The head of his dick pressed lightly on her stomach. Dana slid her arms around James' waist and held him, just watching his face. \n\n\"If we move into a house together, how will it work? How will we act?\" She whispered, her smile fading a bit. He could see that she was a little afraid as she said it. She was a little tense, her hands a bit stiff on his back. He could feel her pulse and breathing were a bit faster than normal. \n\n\"We'll act like ourselves. Like we do in here. Like we feel, that's all.\" He said quietly, enjoying the sight and feel of her face and body relaxing and shifting from caution and worry to calm and happiness. It was a transition that he liked to see. He leaned forward and kissed her, deciding that actions were probably more eloquent than any words he could speak at the moment. He relished the feeling of her lips and tongue, the taste of her mouth, the increase of her pulse while the rest of her body remained calm and relaxed. Dana pressed tightly to him, trapping his hard dick between them. She was moaning softly deep in the back of her throat, her emotions overtaking her mind. James was feeling about the same. When he finally pulled back a little, Dana walked to the bed, leading James by the hand. She lay down and watched him, watched his face as his eyes played about her body. She saw lust in his eyes, and excited tension in his body in abundance, but she also saw a large amount of soft caring and love in his face. She found that the mix was delightful. To know that he was so clearly attracted to her, that she made his body react so strongly, and to know that beyond that simple desire was a deep and full love was a powerful knowledge that made her blood rush in her body. She smiled wide as she studied him, unable to help herself. Her own body was churning with lust as well. James may not have thought much of his body, but Dana certainly did. She had the same thought again that had popped up so many times in the last few days: that James was perfect for her. He was everything she wanted. She wanted to be with him for the rest of her life. Everything else was secondary to that fact. \n\nJames stretched out next to her, his hand on her hip, and kissed her gently again. He wasn't quite sure how far she wanted to go, but however far it was, he was going to go with her. He would go anywhere with her. He felt as she did, that this was the person he wanted to be with for the rest of his life. He couldn't believe that he had finally found his match, and he couldn't believe that it had been Dana all along. He had gone through a handful of relationships, some good, a few bad, and some just plain. No one he had been with before had made his heart stir the way Dana did. No one had made his mind come to a screeching halt to take her in and appreciate her the way Dana did. No one had made him feel like his life had a clear and definable purpose as Dana did. It was as if she had woken him up from a long, shallow nap. Like he had been slightly dozing, just on the edge of sleep for years, just wandering through life because it was there. Now Dana had stepped into his life, and suddenly he was awake. Everything was clear. He knew what he was going to work towards in life. What his goal was. His purpose. It was to make Dana happy, to provide for her in every way he could, to give her the love that she deserved and that he felt so deeply for her. \n\nJames kissed her gently, letting his lips linger, his hands running up and down her back slowly. Dana was tracing her small circles on his chest with her fingertips again. She was a little scared of what she wanted to do, but was she was excited far more than she was scared. She put her leg over his, drawing him closer to her. She could feel the base of his shaft pressing against her slit, the way it had when she was laying on top of him. She felt his pulse, fast and strong, in the rhythmic pulsing of his dick. His breathing was getting a little raspy, as was hers. Dana paused a moment, looking at where she was, who she was here with, and made her decision. She rolled over to her back, pulling James over onto her, and put her hand on his cheek, looking into his eyes steadily. James was a little surprised by this, but was not complaining about holding himself above this wonderful woman on his elbows. When Dana spoke, her voice was very quiet but very sure. There was no hesitation, no waver, just a hushed and simple statement. \n\n\"Love me.\" \n\nJames was still a moment, unsure of what she meant. Dana rolled her hips a little when he did not respond after a moment, and James figured it out. \n\n\"Are you sure? This is what you want?\" James asked. His voice was unsteady. He was excited and nervous, not quite daring to believe that Dana was asking him to make love to her. Dana nodded and smiled. She looked completely relaxed now, her fear gone. James kissed her, holding her tight. Just as he broke the kiss, they heard it. The front door opening. \n\nThey both went wide eyed and bounced up. Dana did a far better job of getting dressed silently than James did. Where her movements were fluid and graceful in her haste, his were jerky and spastic. Dana was into her bra, shirt, and pants in a matter of a few seconds with only the rustle of the clothes. James clumped about trying to get his foot through the leg of his pants, clumsy and frantic. He finally finished getting dressed, feeling like he had taken forever. It felt like minutes, but had only been seconds. They heard footsteps on the stairs, slow and heavy. Their father. Dana and James sat back on the bed, trying like hell to get their breathing under control and to appear calm and normal. \n\nThere was a slight knock on the door, and James called for dad to come in. \n\n\"Hey. I thought I heard something moving around up here. I was going to grab pizza for dinner tonight so your mom doesn't have to cook. Did either of you guys want anything special on it?\" He asked. \n\nJames noticed that Dana was right. Dad did not come in. He leaned in the doorway, on the frame, but his feet did not cross the doorway. Even if he wasn't specifically trying to stay out of the room and was just standing there by chance, it still seemed that he was less than inclined to enter Dana's room. James wondered if that would mean anything once he and Dana were living in their own home, where the entire home would be her sanctuary. He put the thought aside and said anything on the pizza would be fine for him. He felt Dana take his hand just before she answered. He looked to her and saw she was looking dad in the eye, and she was speaking clearly and without her usual hesitations. It was the first time she had done so since she was a small child. James was glad to see it. Glad to see her face without a fall of her dark hair hiding part or all of it, glad to hear her voice speaking with confidence, even if it simply spoke about pizza. \n\n\"Whatever you and mom like is fine with me. I'm not picky, dad.\" Dana said. Her hand was a bit tight on James', and he could see the lines of tension in her neck, but he did not see the mass of fear that would usually color a simple interaction like this with their father. She was not looking away or fidgeting; she was not stuttering or whispering. It was amazing for her. James felt like doing cartwheels and somersaults when he saw Dana like this. \n\nDad saw it as well. He stood a moment, eyebrows raised, silent, and simply looking at Dana. The surprise was clear and understandable. After a moment he nodded, smiled, and found his tongue again. \n\n\"Okay, thanks. I guess I'll leave you two too it, then. See you around dinner.\" He said, sounding a little off, but not in a bad way. When the door closed, Dana let out a shuddery breath and wrapped her arms around James, clinging tight to him, her face pressed into his chest. James held her a moment, letting her calm down a bit, before asking her how she was. \n\n\"I'll be okay, I guess. I don't know what came over me. I was feeling, I don't know, I was feeling something. I think it was from what we were doing before he came in. Some of the relaxation and excitement was still there, I think. I don't know. But I just felt okay talking to him. As soon as he left though, I realized what happened. Now I feel shaky.\" She said. Her voice was indeed shaky, and James could feel the trembling that shook her body. He let his hands make their small, slow circles on her back, soothing her as best he could. \n\n\"I was worried he would know we were, you know, fooling around.\" James said carefully. He didn't want to scare Dana, but he was now considering just how risky their behavior in the house over the past few days had been. \n\n\"Are you sorry we were? Do you regret doing that?\" She asked quietly. Her face was still held tightly to him, but he had felt her whole body stiffen as he had spoken. He was quick to reassure her. \n\n\"God no! No Dana, I just think we might be taking more risks than we should. I don't regret any of the things we've done, though. I don't regret being with you, and I am not sorry about it. Alright?\" He said, holding her tight. \n\nDana relaxed a bit and nodded. She looked up to him and smiled a little. \n\n\"Okay. I don't regret it either. I love it when we can touch each other. Besides giving mom or dad a hug, you are the only other person I have ever touched.\" She said softly before kissing him lightly and leaning against his chest again. James thought she meant sexually at first, but quickly realized that she probably meant that mom, dad, and James himself were the only people she had touched at all, in any way. He thought about that for a moment, considering that she preferred to sit on his lap when they were together, or at least lean on his shoulder or chest. That she wanted at least to hold his hand when they were together outside the room, or have his arm around her when they were alone in her room. He could certainly understand why she would be hungry for physical contact if she had never had it beyond simple affections from the family. James held her a little tighter and moved his head down to nuzzle her neck, getting a small giggle and a happy little sigh out her. They stayed that way for a while, just enjoying the quiet and each other's company. \n\n-- \n\nThey sat down to a pizza dinner, and everyone seemed rather relaxed. Dad had left work early (much to Dana and James' surprise) because there was simply nothing to do in the office for the last couple of hours. Mom had spent the afternoon catching up on what little paperwork the shop needed, as it was a slow day. Dana and James, after their little scare, had spent a few hours going through catalogs and websites, just kind of looking around, not really scanning very deeply. Everyone was now in a good mood, and felt at ease. They sat and joked around the table, enjoying the simple dinner. \n\nDana held James' hand as she ate, and was looking around the table instead of at her plate like she usually did. James paid close attention to her, but took care to keep from being obvious about it. He noted when her grip on his hand tightened and when it loosened, watched for her smile and for the muscles in her jaw to tighten. He thought that overall she was not relaxed, but not very scared either. It was a huge leap for her. He wondered what it was from exactly. The talking without judgment? The relationship they were building? Their now almost constant physical contact when in the same room together? He wasn't sure about how much of each it was, precisely, but figured it was a combination of all of them, and likely other factors he was unaware of. \n\nDad asked Dana how things were going down at the shop. James watched her carefully without showing it. Dana tensed for a moment, her hand squeezing tight, the muscle in her jaw visibly clenching, her back going stiff. It was clear, but brief, only lasting a second. She relaxed again; all but her grip on James' hand, which stayed rather firm. \n\n\"It's going well. I like working on the bigger stuff, the wall pieces and bags. I have more leeway to try new things with them. But the smaller stuff is fun as well. Bracelets and watchbands are like puzzles. I have to figure out what will fit and still look good. The new scabbard things for the knife guy are new designs for me to work on, from the drawings he sent, so I am looking forward to seeing what I can do with them.\" She spoke evenly and calmly. Her eyes held dad's for a moment, then would bounce around her plate a moment before rising to his again. Her cheeks went a deep red, but her voice did not falter or hush. She sounded like anyone else would in a conversation. James could see her breathing was a little faster than normal, and knew she was quite nervous. He was deeply proud of her for her effort and her courage. He knew that talking at dinner was a simple matter for most people, done without even thinking about it, but Dana was not most people. For her, this was quite an accomplishment. Their parents knew it too. Dad was smiling wide and mom looked incredibly proud, her own smile shaking a little around the corners of her mouth. ",
        "\"That sounds nice. I'm glad you get to work with something new, it can get a little dull just doing the same things over and over again.\" Dad said, his voice light and casual. James could plainly see that his father was feeling anything but light and casual right now, and knew that Dana would see it as well. Dad was tense and rigid, his face set in its bright smile. The smile was sincere, but static; he couldn't stop it if he tried. His back was as ramrod straight as Dana's tended to get when she was scared, a trait of excitement that they shared that James had to smile about himself. \n\n\"I don't know, I like working on all the things I usually work on. I am always putting a new image on them, so it's not really the same thing. Now, I will just have more options for what I have to put all the designs on is all. I like that.\" She answered. It was a normal dialogue, a simple conversation, something that last week their parents would have said was impossible. James thought his fingers might break under Dana's iron grip, but he would not say or do anything about it. He did not want her to think that she should let go of her reassurance for any reason. Not while she was building this fragile courage. James never would have guessed that she could clamp her hand down with such force, but in thinking about what she did all day, he was really not all that surprised. Hammering designs into leather all day had to build up your hands up, even if you took your time and went lightly where you could. He thought of all the time she must have spent swinging a mallet at a metal stamp, pulling a swivel knife across the surface of tough leather, cutting thick hunks of hide into the shapes she needed, and the times when she did some of the stitching for the smaller sections before it went to mom for final construction. It was really not surprising, then, that she had hands that could crush his fingers and grate the bones in his palm. He wouldn't let on that she was hurting his hand though. Not for anything. He would rather she smash his hand to bits if it made her feel better than to tell her it hurt and risk taking a source of confidence from her. \n\n\"What's your favorite item to work with?\" Dad asked, his voice still light and chatty. James was grateful that dad was keeping the momentum going. This was the kind of interaction that James had been talking to mom about. The kind of simple conversation that Dana so desperately needed. \n\n\"Anything big is fun. I like it when I get to do a backpack, or a wall hanger. Those have a lot of surface area and I can do a lot with them. But I think my favorite so far would be jackets. I've been able to do two jackets. Both of them special orders by customers to be designed. Those were really fun. Challenging and simple at the same time. I really liked working on them.\" Dana's whole face was bright red, and she was beginning to look more at her plate than her father, but she was smiling. James gave her a little squeeze with his crushed hand as best he could. She squeezed back and loosened a bit, to James' great relief. \n\n\"Well, I can get a few patterns for jackets and start making them regularly. I always thought they were a bit complex for me, but I have some experience with them now, and I would be willing to try to do them regularly, if you would like.\" Mom said, her voice quiet and a little uneven. It was very unlike her normal tone of voice. Dana looked up and smiled wide. She could see and hear that her mother was getting a little emotional, and Dana wanted to reassure her a little. She was very aware of the reversal of roles, and wondered just how much of this change was permanent, and how much would disappear when she lost her nerve, as she was quickly doing. \n\n\"That would be great. If you're okay with trying to put them together, I would love to tool them.\" Dana said. She kept her eyes on mom until she finished, then looked down to her plate and went back to eating. James filled the tense silence that tried to form with a question for mom. \n\n\"With the complexity being an issue, would it help if Dana went over the pattern and how it all fits together with you? I mean, with her precision detail kind of focus, would it help for the two of you to go at it together until you get the hang of how it all fits together?\" He asked, looking from mom to Dana. He didn't want to presume upon Dana, but he didn't think that she would mind in this matter. \n\n\"Well, if you were okay with that, I would love to have your eye for detail to help me see how it all fits a bit better, Dana.\" Mom said carefully. She was clearly a little tense about it, but the set of her shoulders and the tightness of her words spoke more of hope and excitement than anxiety. Dana looked up to mom, then James, her hand tightening on James' again. She was smiling though, and she nodded. \n\n\"I would be happy to. Knowing the pattern and how all the pieces fit would make it a lot easier to know what I could put on it design-wise, as well. Just let me know when you want to start on it, and I'll take a look.\" Dana said, still smiling. She was looking more at her plate now, and her grip on James' hand was vise-like again, but James could see genuine interest in her. It was clear despite the tightness in her jaw and the rigid set of her spine. \n\n-- \n\nAfter dinner, James and Dana gathered the plates and set to washing them. It only took a couple minutes, as there were no pots or pans to worry about. Mom had gone to the store to pick up a few things and dad had gone up to the office to grind away at paperwork, leaving them the kitchen to themselves. \n\n\"I didn't mean to spring the idea with the jacket on you like that, but you looked like you were starting to get a little nervous, so I thought that maybe changing the direction of the topic would help to change how you were feeling. I don't know why I thought it might work; it was something that just kind of popped into my head and out of my mouth in the moment.\" James said as he handed the first plate to Dana for her to dry. \n\n\"It's alright. I was still losing my nerve, but I think it helped to keep me from losing it completely. I think it was kind of like a distracting sort of thing. It made me change gears. I think that helped. I will have to talk to Mom while we work on the jackets, but I think I can do that easier now.\" Dana said, speaking slowly, weighing her words. James could see that she was thinking over how the conversation had gone in her head and her emotions during it. He thought that she was right, that she was far better equipped for interacting with their mother as in depth as such a project would require than she was before he had started to work with her, before they had found each other the way they had. \n\n\"I think you can do that now as well. You're doing much better in conversations. You've been talking more the last couple days than I've seen you talk the last couple years, you know?\" James said with a chuckle. \n\n\"Having someone safe to talk to has been a whole new world for me.\" She said after a moment of thought, her voice quiet and a little sad. She put the last plate away and turned to James, a small smile on her face. He could see that the smile was both happy and sad. \"I wish I had talked to you earlier. I feel like I have lost years to being alone when I could have had someone. But I'm happy I have someone now.\" She said, her voice not quite even. Her body was relaxed and calm, her breathing even, but she looked like she was close to crying. \n\n\"Well, let's go talk. We still have a lot of catching up to do.\" James said, reaching out to give her hand a squeeze. She returned the squeeze and nodded before leading him out of the kitchen, still holding his hand. \n\nThey settled on her bed, as they usually did. Dana didn't straddle James, knowing that mom would be back from the store soon, and may pop her head in. With the scare that dad had given them earlier, they were both willing to wait to until after their parents went to bed to do anything serious or easily misconstrued. \n\n\"How do think this will work long term, if your request is granted and you can get a home here?\" Dana asked, her cheek resting against James' arm, her hands toying with his. She sounded more scared than curious, making James wonder what she was thinking about that had gotten her worried. \n\n\"What do you mean? How it will work with us, or with work, or the house?\" He asked, pulling his hand from her grasp to put it around her. He wanted to reassure her, to let her know that whatever her worry was, he intended to put it to rest. \n\n\"Us. Mom and dad. Will we just say that I am living with you forever so that I feel better? How will it work?\" She asked, her arms going around his waist. She was getting tense, her muscles growing jumpy, her hold on him tight. James had to admit that they couldn't exactly say it like that. \n\n\"Well, I figure we can tell them that you are moving in with me so that we can work on your shyness as we have been, and just go from there. As time goes by, we can just say that living together works out for both of us, and that we really don't have a reason for either of us to move out. That neither of us has met anyone, that we don't see any reason for us to each own a house when we're comfortable living together in one place, stuff like that. I think that eventually it will just be, I don't know, accepted as normal, I guess. At least, that's the way I've been thinking about it.\" James said, frowning. He didn't know if this was a good plan or not, how plausible it was or if it stood any chance of working. He thought that it could work, if they were careful. \n\nDana relaxed a little after thinking about it for a couple minutes, though she didn't relax her grip on him. James was fine with that though. She was quiet for a while before talking again. \n\n\"I think that could actually work alright, but we would have do it just right.\" She said, nearly echoing James' thoughts. She didn't sound terribly confident, but she did sound like she was she wanted to try. That was the important part for James. That she was willing to try. He didn't want her to do anything she didn't want to do. He would feel terrible if he made her do something against her will. \n\n\"Do you still want to try? Do you still want to see if we can?\" He asked quietly, trying to keep his voice even, but not quite succeeding. Dana straightened up and looked him in the eye, her face set and determined. Her hold on him grew even tighter, emphasizing her answer. \n\n\"Yes. I don't care how small the chance is for us to do this, I want to try. Please tell me you want to try as well, James.\" She said, her gaze the hard and piercing focus that now drew him to her where just a few days before it had made him nervous. She looked terrified that he may be having second thoughts, her breathing shallow and fast, her pulse a lighting flutter under his hands on her back. \n\n\"More than anything. Don't worry about that, Dana. I just wanted to make sure you weren't doing anything you didn't want to, that's all. I still want to try to have a life with you; I don't want to try to have any other kind of life.\" James said, pulling her to him so he could kiss her. He wanted to let her know that everything would be alright. He hadn't meant to scare her, and he felt bad for doing so. \n\n\"Me too. I can't imagine not trying. All I want is a life with you. We just have to figure out how to make that work.\" She said, letting a shaky sigh out when she could speak again. They heard the front door and released each other, going to the door to see if mom needed help with the bags from the store. \n\n-- \n\nAfter a while, James thought about checking his emails. He hadn't checked in a few days, and figured he had a few from work about stuff to do when his vacation was over. He pulled up his mailbox while Dana pulled out her sketchpad. There were indeed a bundle of emails from work; nine in all. James started to go through them, marking them for his folder of things to do, until he got to the fifth one. The fifth one had a bunch of links for the company website in it that talked about additional duties and places that he would have to start checking into every week. Confused, James marked the email as 'to do' and went to the next. It was another one like the fifth one, with a lot of stuff that he would have to start doing every week on a couple of pages on the company website. Frowning, James filed this one as well and opened the next email. This one explained the last two that had gotten him so confused. \n\nIn the seventh email, James found six pages of instructions on how to go about making the change to working from home, what was expected of him, and who he could contact in any given event. It also contained a few contact lists for info about making the change itself, if he had any questions that weren't covered by the emails he had received. A quick glance confirmed that the remaining emails were follow-ups that contained more information on what he needed to do, and how to go about doing it. \n\nJames had been expecting a phone call about this, not an email. He was also expecting to be contacted in another week or so. He checked the dates, and saw that he had been sitting on the news since yesterday without even knowing it. He stared at the screen for a moment, calling himself every form of idiot that he could think of for not thinking to check his email while he waited to find out about this. He should have known to check. Even if he had been told to expect a phone call in a week, he should have been checking his email anyways, just in case his phone missed the call or the news came early. He was an idiot of the highest caliber, in his opinion at the moment. \n\n\"James, are you alright? You look like you have to poop.\" Dana said, pausing in her work with her pencil. She was frowning, worried. James' face was tight and red, the vein in his neck was pulsing, his lips were tightly pursed and turning whitish from the pressure. His hands were gripping the edges of the laptop very tightly. \n\nHe jumped a little when she spoke, and turned to look at her, his face relaxing a little. He still looked pretty keyed up, but he was breathing again, at least. That was good. She was still worried, as he still looked like something was very wrong, but he was starting to smile. James spun the computer around to show her the screen, his hands holding it a little unsteadily. Dana saw a wall of text, and as she started to read it, James blurted out what it amounted to. \n\n\"It went through! They granted it, I'm going to be working from home, from our home! It went through Dana. I'm an idiot and I didn't check my email and it went through.\" He said in a rush, struggling to keep his voice low, not wanting to shout. It wasn't easy, but he managed it. It felt so good to say 'our home' to Dana that he could barely stand it. \n\nDana's eyes lit up and she smiled wide, her face looking the way James felt, a bright and cheery grin of pure happiness. She dropped the notepad on the bed and launched herself over to him, cinching her arms around his neck and bowling him over onto his back. James managed to set the laptop aside just before she made impact, and held her tight while she kissed him fiercely. She pulled back and looked him in the eye a moment, her smile still beaming. \n\n\"Our home.\" She said quietly. \n\n\"Our home.\" He agreed with a small nod. \n\n-- \n\nJames read through the email quickly, wanting to know when he would could start packing and when his last day in the office was. He was happy to discover that he only needed to show up for two days after his vacation, and after that he was effectively a free man. He was basically on his own schedule, checking in on Mondays, Wednesdays, and Fridays in the afternoon with his supervisor, and once a month with his manager. All of those were to be done as videoconferences, so he didn't have to worry about going into the office building at all. The only exception was in the event of certain meetings or special occasions, which would be rare for him. \n\nJames closed the computer and gave Dana a quick kiss before the two of them left the room to tell their parents the news. They got themselves calmed down a bit then went and spread the word. Mom was sitting in the office with dad, looking over some stuff on their computer, when James and Dana came in smiling. As soon as James told them what they were smiling about, mom and dad were smiling as well. \n\n\"You're kidding! Congratulations! So when does the work from home thing start, do you know yet? How does it work? What did they say?\" Mom was close to babbling. She was as excited as the kids, happy that James would be able to keep working with Dana and would be closer to home again. \n\nJames explained what the email said, grinning like an idiot the whole time. While mom and James talked about all the details, Dana simply stood by James, holding his hand. \n\n\"You must be thrilled as well dear, now that James will be close by to keep talking with you.\" Mom said to Dana after getting all the schedule info from James. \n\n\"Yes. You don't know how happy I am to hear about this, mom.\" Dana said softly, giving James' hand a squeeze. James could hear how strained Dana's voice was, and knew she was doing her best to keep from crying. He couldn't blame her. Mom looked like she was close to tears as well. Even dad was grinning ear to ear, like James was. \n\n\"I think this is a real chance for you to make a positive change in your life, Dana. Whatever you need to make it happen, to make it easier, just let us know. We'll make sure that you can make the best of it to spend as much time as you need working with your brother, okay?\" Dad said, his voice surprisingly soft and gentle. He wasn't normally gruff or anything, but he wasn't normally this tender when he spoke. Dana and James could both see and hear the sincere, deep concern and caring in his statement, and it was very touching to them. Dad wasn't one for sentimental or emotional displays, and this felt like both. \n\n\"Thank you dad. I'm sure James and I will be spending a lot of time together. I'm glad to have you guys supporting us with it.\" Dana said, her voice catching a little on James' name. She wasn't sure when they were going to spring the news about moving in with James on them, but she wasn't worried about that right now. Right now she was simply concerned with making it through this conversation, which was hard enough with all the emotions stampeding through her. She released James' hand and stepped over to give her dad a hug, the tears she had fought to hold back finally winning out. \n\n\"Don't worry, I'll have plenty of time to dedicate to Dana. She's my top priority.\" James said, having a hard time keeping his eyes off of her. He didn't know he could feel so deeply for a person, not until now. Knowing that their plan now had the chance to happen, that they had a shot at being together, only seemed to magnify what he was feeling for her. He felt like if he was pricked with a needle he would simply burst from the pressure of the emotions welling in him. \n\n-- \n\nJames closed the door behind them as they walked into Dana's room. It was just after nine, mom and dad had just said their goodnights, and the house was dark once again. Dana reached past James and quietly locked the door, taking James' hand as hers left the knob. She led him to the bed and turned off the lamp, leaving them in the dim light from the nearly finished sunset. They undressed without speaking, not needing to talk to know what the other was feeling. Dana slid under the covers and James followed her. \n\nAs soon as he was in the bed, Dana was against him, her arms around him, her legs straddling his waist. She held him tight and kissed him hard, soft moans vibrating deep in her throat. James let one of his hands rub circles on her back, the other cupping the cheek of her ass. Dana broke the kiss and nuzzled against his neck, nipping lightly here and there, tugging lightly at the lobe of his ear. ",
        "\"Our home.\" She whispered to him, her voice nearly silent. \n\n\"Our home.\" James agreed, tightening his hands on her for emphasis. \n\n\"James?\" Her voice was still that near silent husk. \n\n\"Yes?\" He answered, his voice rough as his breathing was growing uneven. \n\n\"Love me.\" She said, her voice stronger, clearer. James could feel her body tensing as she said his name and he answered, her breathing getting faster and her pulse starting to gallop. When she gave her demand her arms clenched on him, her legs clamped around his; her whole body tightened on his. \n\n\"Yes.\" He said flatly, his body responding just as much as his word. Dana moaned a little again as his hand gave her ass another squeeze and his dick throbbed against her mound. James rolled them over gently but firmly, taking control. She relaxed and moved with him, the tension and thrumming in her muscles turning to a liquid grace in the space of a heartbeat. She kissed him again as he adjusted himself above her, their lips parting with a gasp when the head of his dick nestled against her slit. He could feel some of the tension return; not much, but it was there, a nervous jumping of the body that spelled out her concern as clearly as any words could. \n\n\"Are you sure Dana?\" He whispered in her ear, his voice low. \n\n\"Yes James. Love me. Keep me. Make me safe.\" She said, her face buried where his neck and shoulder met the way she liked it. He could feel her tension even as she kissed and bit at the skin there, even as she pulled him tighter with her arms and legs, even as she rocked her hip to bring them closer together. \n\n\"I love you Dana.\" He said quietly in her ear as he pushed his way in. She clenched against him with her hands, her arms, her legs, and her slit as she took a sharp breath and held it. James stayed still a moment, wanting to give her a chance to adjust, to stretch. \n\n\"I love you James.\" She said after a second, her voice strained and rough. She didn't sound like she was in much pain, but she certainly didn't sound calm, and James was worried that she was scared. \n\n\"Are you okay?\" He asked, being careful not to move. \n\nIn reply, Dana started to slowly rock her hips, back and forth, her breathing starting to tremble as she fought to keep from moaning too loudly. Her fingers dug into the skin on James' back and neck, her short nails biting hard. Her heels ground into the backs of his thighs, looking for traction. James shuddered a bit and started to move with her, having all the answer he needed. His mouth found hers, and they kissed passionately, stopping only long enough to breathe as James set a slow pace to their love making. \n\nHe wanted this to last, for this to go on as long as it could. He did not want this to end. James took long, slow thrusts as deeply into Dana as he could, turning his hips up at the end of each thrust, grinding deep. Dana rolled her hips up as he did, giving him the best angle she could to do the same. They moved as one, relishing the sensations that they were getting from each other, and the sensations that they were giving each other. James wanted to give Dana something special, to make her feel wonderful, to make her feel desired and fulfilled. Dana wanted to make James feel complete, to feel like he could have everything of her. \n\nDana had been afraid of this moment, had been afraid of the pain, of the stretching that James would cause, afraid of the sensations that this would bring. But now that the moment was here, now that she knew how much pain it actually was, and what the sensations felt like, she felt foolish for being afraid. This was nothing to fear. This was something to celebrate. To know that she could share this with James was the most powerful feeling she had ever known, far more powerful than her fears. The pain had been sharp, but small compared to the feelings that followed it. Now she felt the nearly overwhelming force of her love for James, and the freight train of desire that had been building in her was crashing through her in a bond with James that she knew could never be severed. The physical sensations were potent, wild, and wonderful, but they were nothing compared to what this was doing with her emotions, with her love. Had she known this was what would happen, she would have never hesitated. The night that James had first offered to use his mouth, she would have pulled him up and demanded this. \n\nJames had been through a few relationships, and sex was nothing new to him. But this was not just sex. This was something different. This was love. It was something new for him, and it was something he knew he could not go without. Not after this. He may have thought he had been in love once or twice before, but he had clearly been wrong. This was love, and this was what happened when you were intimate with the one you loved. He could never look at Dana the same after this, there was no going back, no walking away, and he was glad. He wouldn't want to change this. This was what was right for him. \n\nDana felt James start to speed up with his thrusts a little, his hips moving with a little more urgency, his dick growing even harder in her. It was a wonderful sensation down there, one among many. They were both breathing in ragged, heavy gasps. The graceful and fluid movements that she had shown earlier were gone. They both moved in deliberate, strong motions; no grace, just power. Dana matched James as he went, her hips moving with more force, meeting his with more impact each time he buried himself in her. James' hands had clamped down behind her, on back of her shoulders, holding her to him as he held himself up on his elbows and forearms, pulling her towards him as he thrust forward. Dana felt his dick start to throb in a steadily increasing rhythm inside her when he whispered in her ear. \n\n\"I'm going to cum Dana.\" His voice was rough, jagged, like he had just gone for a long run up a steep hill. Dana clamped her heels tighter on his legs, clamped her hands tighter on his back, his neck. \n\n\"So am I James. Make me cum.\" She said, her voice as ragged as his. \n\n\"I need to pull out.\" He said, his voice sounding worried. \n\n\"Don't you dare.\" She said forcefully, pulling him to her, feeling herself speeding to the brink of her orgasm as he throbbed harder in her. James didn't argue, he simply increased the strength of his thrusts, making Dana gasp with each stroke. She could feel his dick bucking wildly inside her. Between that and his increased hammering, she couldn't take any more. She felt her body start to spasm as everything inside her felt like it was a wildly uncoiling spring. When her walls started to clench and release, clench and release, she felt James' whole body tense harshly as his thrusts went wild, and then she felt it. The hot release inside her, filling her, making the feeling of an uncoiling spring go berserk. She gasped in a hitching, uneven breath as James hammered into her and stayed there, his dick jumping as it filled her with heat. He gave a few short, hard, grinding thrusts as he finished, each causing a crashing wave of fresh pleasure to smash against her. \n\nThey were still a while, just panting as they caught their breath. James stayed where he was, the two of them simply enjoying the feeling of him resting in her while they kissed and calmed down. Dana rolled her hips from time to time, sending thrills of pleasure through them in the afterglow of their love. James didn't know what the future may hold for them, but he knew that he wanted to face it with her, like this, together. They kissed at each other's necks slowly as they lay there, both feeling James' dick slowly deflating. When it finally slipped free of Dana, James eased over next to her on the bed and pulled her into his arms where he could keep kissing at her. \n\n\"This is where I'm supposed to be. This is where I am safe. This is where I want to stay.\" Dana said firmly, kissing James lightly between sentences. \n\n\"Then stay. This is where I want to be. This is where I want you to be.\" James replied, smiling in the dark. He kissed her, his hands rubbing slow circles on her back, feeling her body the most relaxed he had felt it yet. He was exhausted, he was pretty sure he would be sore when he woke up, and this was the happiest he had ever been. \n\n-- \n\nJames woke up to the dim light of the lamp. He saw Dana leaning against the wall, her sketch pad on her knees, drawing. When her eyes darted up to him and saw his were open, she smiled. \n\n\"Sorry. I woke up and I wanted to draw you. You were smiling a little in your sleep. You looked beautiful.\" She said. James chuckled, enjoying his view of her. She was still naked, sitting with her feet and knees together, her back against the wall, her hair a little ruffled but hand brushed, with an innocent look on her face like a little girl caught trying to sneak a cookie out of the jar. \n\n\"You look pretty beautiful yourself. How do you feel?\" He asked, sitting up a little. The clock said five forty, and the sunlight was just starting to come in through the window. He had been right; his hips, thighs, and forearms were tight and sore, but he couldn't be happier. Well, he could, but they really didn't have time right then, and he didn't know if Dana would be up for it. \n\n\"A little sore, but I feel great. You made me feel great. You make me feel great. I can hardly believe I was scared of that.\" She said, setting the sketch pad aside. She stretched out next to him slowly, moving a little stiff, but the smile never left her face. She kissed him, taking her time with it. James held her, letting his hands tell him about her body. She was still relaxed, like she was when he held her afterward, but she was definitely stiff. There was no fear or anxiety or nervousness to it though. \n\nShe broke the kiss and let her fingers trail along his chin and neck, looking at his face with no trace of worry. Whatever tension she had felt about being with him before was gone now. They had solved that. Now she seemed to be completely at ease with James. \n\n\"That was something special James. I can't live without you now. You know that, right?\" She said, her smile fading a little. He felt some of her tension returning, but he was quick to banish it before it could take hold. \n\n\"It was special for me as well. I can't live without you either. You don't have to worry about that though. We'll be together. No matter what, we'll find a way. It'll work, because we'll make it work.\" He said, taking her hand in his and kissing her fingertips. Dana sighed and her smile returned, her fear evaporating under James' confidence. She leaned forward and kissed him again before getting out of the bed. She didn't want to, but their parents would be up soon. Time to start the day. \n\n-- \n\nJames was sitting at the table when mom came down, cup of coffee in his hand. Dana was sitting with him. She didn't like coffee, but had a mug of warm tea. James poured mom some coffee while she sat down and asked what the plan for the day was. \n\n\"I think James was going to be house hunting today. I'm going to help.\" Dana answered, looking at her tea. She was smiling a little, knowing that the house they picked was going to be theirs, not just James'. \n\n\"Well that's good, your father can help with that if he ever drags himself out of bed.\" Mom said with a sunny smile. \n\n\"I heard that.\" Dad said from the hall upstairs. He came clumping down a moment later, taking the cup of coffee that James held out for him. \"Did you know what you had in mind, or are you starting from scratch?\" Dad asked, blinking owlishly as he tried to wake up. James chuckled at the thought of dad trying to sort through listings and properties while still half asleep. \n\n\"Give it a little while, dad. Let that coffee work before we get into it. I know you guys have both been working a long week, and you look like you aren't really awake yet.\" James said with a smile. Dad smiled a little in return and nodded, lifting the cup a little and taking a sip. James watched him a moment, trying to see him the way Dana would. He saw a man in his forties, not fat but with a bit of a stomach pushing his shirt out. His eyes were still a bit puffy from sleep, a bit bloodshot as well. He moved slow and deliberate, clearly not wanting to be clumsy and taking care to avoid any spills with the coffee by keeping his movements steady and unhurried. His breathing was still very slow, his posture was very slumped, very un-alert. James knew that Dad spent twenty minutes or so in bed after he woke up, not getting up or out of bed, but just lying there, working up the steam to get moving. He would drift in and out of sleep as he slowly started his engine for the day. Dad was about as far from a morning person as it got. He didn't climb out of bed; it was more accurate to say he oozed out of bed. \n\n\"Yeah, sorry we've had a long week for your vacation, we hadn't planned on it, and it just kind of worked out that way, honey.\" Mom said, sipping on her coffee. \n\n\"Don't worry about it, that's just the way things work out sometimes. Besides, we've been able to enjoy the evenings together, and Dana and I have been able to spend the afternoons and later evening s together, so I would say it's worked out.\" James answered, thinking that he was actually pretty fortunate that his parents had been working all week. It had given him and Dana more time alone together in the afternoons to discover each other than they would have had otherwise. \n\nJames looked over is mom real quick, the way he had with his dad. He saw a woman who was a couple years older than his dad, wide awake and alert. Her eyes were the same slate grey that Dana had, and just as sharp. She was less laid back than dad, leaning forward in her seat. She was already looking a little fidgety, a little anxious. Her half-finished coffee was already filling her with excess energy. She didn't need coffee in the mornings, but enjoyed a cup all the same. James was sure if he put a hand to her neck, he would feel a rushing pulse. \n\n\"We all have today and tomorrow off, so we'll be able to spend plenty of time together. We could make the house hunting a family thing.\" Dana said softly, her hand finding James' under the table. She looked from her tea to James' face for a moment, smiling a little and blushing. Her voice was steady but quiet, though she was making good progress in contributing to the conversation. Mom, dad and James all noticed it and were happy. For her to involve herself in the discussion voluntarily was great to hear. James was happy to hear it, and was pretty sure he knew what part of the reason was. He just hoped that this was a sign of her growing bolder in general, and not just with the family. He thought it was, but he couldn't be sure. Not without seeing her give it a shot out in the world. \n\nHe knew that Dana was far more comfortable with just him, he had seen that last night and this morning. He knew that she was doing much better with their parents, as was evidenced by her involvement in conversation last night and today, but he still needed to know how she would do in general. He supposed that it was something he would see in time, when the chance presented itself. He assumed he would find out when Dana and mom went back in to the leather shop on Monday, provided Dana was confronted with a customer that wanted to know more about the design work. \n\n\"Well that sounds like a fun idea, what do you think James? I know too many cooks can spoil the broth, but I have to admit I'm curious as to what kind of place you are looking for.\" Mom was saying. James snapped out of his little train of thought and looked over to her, nodding. \n\n\"No, that sounds good. I can use all the help I can get. I want to make sure I get something close so that Dana doesn't have too far to go between here, work, and my new place.\" James said, stammering a little over his words. He found that he had almost said 'we can use all the help we can get' instead, and had to change mental gears to keep himself on track with what he wanted to say. He made a mental note to be more cautious about how he phrased things during the house hunt. He really did want something close by, so that Dana wouldn't have a long commute to and from work every day, but he wasn't really worried about her driving between the new place and here much since the end goal was having her move in with him. But he couldn't exactly say that outright just yet, and would have to be careful about it for now. He was starting to realize that this was going to be more complex than his simple plan had first appeared. He felt the gentle and reassuring squeeze of Dana's hand on his just under the table, and looked over to her. She was smiling at him, just a hint of a blush in her cheeks. He smiled and gave just the barest tip of a nod to her. He was acutely aware of the fact that the tables had turned, and she was the one now providing the moral support. Looking at her, seeing her smile and her subtle assurance that she was with him no matter the obstacles ahead, he felt like anything was possible. Like he could rise to any challenge with confidence. He had the love of a wonderful woman to support him, and knowing that made a world of difference. It made every obstacle look a bit smaller, a bit less daunting, and lot more worth the effort to overcome. \n\n\"I figure if I'm close by, then it'll make it easier on everyone, and I'll be able to visit more, help around the house here more if you guys need a hand with anything. It'll be good to be close to the family again. I don't think I realized how much I missed you guys while I was away until I came back for a while, you know?\" James said, squeezing Dana's hand in return to let her know what he realized he had missed in his family most of all. She turned a little redder, but James didn't think that mom and dad were catching on to much, if any, of the unspoken communication between them. James didn't see any reaction or recognition in them as they talked; they seemed to be completely oblivious to the by-play between their kids. \n\nDana was easy enough for James to read, for the most part. He was sure that soon he would be much better at reading her, as he fully intended to continue to focus on observing everything about her, the way she observed people. He wanted to see the world the way she did, to understand the way she saw people so that he could understand her better. He wanted his world to be Dana, and knowing how she saw everything would be a key part of that. \n\nDana could read James like a book, and knew what he was doing the entire conversation. She had seen how he stuttered and thought that he had probably almost talked about the house as theirs instead of his (something she herself was consciously and carefully monitoring her own speech for), as well as catching his glances at her and seeing how closely he was watching their parents. She saw that he was still pretty obvious in how he went about watching them, but she didn't think that mom or dad saw it. They seemed to be fairly blind to a lot of it. She was forever amazed at how little they saw when talking to people. She wondered how they talked to each other; to other people in general at all, seeing as little as they did. Dana was always amazed that mom could haggle as well as she did with her limited observations. Mom seemed to pick up on a fair bit when she was negotiating, but as soon as a deal was struck it was as if she put a pair of blinders back on. Dana never understood it, but it was simply another item in a long list of things she did not understand about people. \n\nDana watched how James watched the three of them, making mental notes of what to talk to him about later. She wanted to see what he was seeing. She was starting to grow more and more interested in James' evolving sense of perception, now that he was starting to actually watch people. She thought it was really sweet that he was taking the time to try to see things the way she did. He hadn't told her he was trying to, but it was clear to see that he was trying very hard to see more, and she was touched that he would put so much effort into something like that. It was a little thing, perhaps even unconscious, though she doubted that, given the effort he was putting into it, but she was happy to see it all the same. She wanted to know more about what he was seeing, and what was driving it. She knew she would soon have plenty of time to talk to him about it, and she was thrilled by the idea. ",
        "The thought that she had been scared to talk to him just a few days ago now seemed distant and almost alien to her. Now she couldn't imagine not talking with him. She wanted to share everything with James, all of her hopes and fears, all of her dreams and ideas. Mostly she just wanted to talk to him, to know that she could talk to him. The idea that she had someone that she could speak to freely was like being able to breathe after being trapped underwater until she thought she would drown. \n\nShe thought that she could talk with people a bit more now, that James' efforts to draw her out a bit had helped with that. That his gentle and judgment free gesture had given her a bit of confidence and courage in the last few days that she would not have had otherwise. Certainly finding love had played a large role, and what they had done last night had shattered a lot of barriers for her. How could she be so afraid if she could do that with someone? If she could find love, and if she had the courage to pull her lover to her, then she could certainly find the courage to try to carry a conversation. \n\n-- \n\nAfter coffee, and once Dad had woken up a bit more, they took James' laptop into the office and pulled up chairs. There wasn't room on the desk for Dana to put up her little netbook as well, but they figured between the desktop, James' computer, and Dad's mountain of real estate booklets and binders of properties and listing, they could certainly find what they were looking for. \n\nAfter some initial talk about general ideas, how many bedrooms, how many floors, big yard or small, stuff like that, they started to pull up listings. James held Dana's hand the whole time, and watched her as closely yet as subtly as he could. She squeezed his hand, one for yes, two for no, and three for I don't know or it's up to you. It was their way of having them both in the conversation for the house hunt without mom and dad knowing that it was both of them deciding instead of just James. They chatted and joked around as they looked, having fun as they went about it. They were taking the search seriously, but they were having fun while they did it. Dana surprised them all by staying in the conversation for the most part without being forced or prompted. She was still rather nervous, and she still didn't like to look anyone in the eye except James, but she wasn't the silent outsider that she usually was. It felt good for all of them to simply sit around and have a fun morning laughing and joking together as a family. It felt normal, it felt simple. \n\nAround noon, mom got up and asked what everyone wanted from the sub shop, offering to go pick up a light lunch. They gave her the list and she took off. The three of them kept looking for a moment before dad turned to James and Dana. \n\n\"I was wondering something, if it's okay to ask. Your mom said you guys talk about stuff, but that James agreed not to say what it is that you talk about. I was just wondering what kind of stuff it is, and why the secrecy? I mean, if it's alright to ask. If you don't want to tell me, that's perfectly fine, I'll understand. I'm not trying to pry, I'm just curious.\" Dad said, looking from James to Dana and back again. James and Dana could both see the concern and curiosity on him clearly. It wasn't hidden or easy to miss at all. James was thinking about how to answer without sounding rude or dismissive when Dana spoke up. \n\n\"It's okay dad. We just talk about stuff like work, stuff that I'm afraid of, and how to deal with it. James doesn't talk about what we talk about because it's, I don't know, private, I guess. He's like my safe zone. Like my bedroom is. He's a safe person to talk to, that won't tell anyone what I say, so I can say anything to him. It makes it easier to talk to him that way. That's all.\" She said. She was quiet, and her voice was a bit hesitant, but she didn't falter much as she spoke. She looked her father in the eye for the most part as she explained it, only glancing down to his chest a couple times. Her grip on James' hand was tight but not crushing. \n\n\"Okay. I was just curious was all. I guess because James said he couldn't talk about it more than anything. You know how that is, if someone tells you they can't tell you about something, you just want to know about it more.\" Dad said, turning back to the computer. He was trying to look casual, but it was clear he was not. He was just as surprised as James that Dana had fielded the question. \n\nThey went back to the house hunt, looking again at the houses they had found in the area south of mom and dad's house. They had four places that they were really looking at currently, all of them rather nice. Three of them were three bedroom, one of them was two bedroom. James was focusing on the three bedroom homes, stating that he was thinking of having an office and a spare bedroom for guests. In reality he was thinking of having an office for him and a drawing room for Dana. He couldn't figure out how to convey that to Dana, but she seemed to be on board with the three bedroom idea all the same, so he was okay there. \n\nMom came back with a bag full of sandwiches and they all sat back to eat, letting the houses wait. James was happy to have the break, as he was quickly getting swamped with the whole house hunting thing. He hadn't exactly liked it when he was looking for a place to rent when he first moved out. He still didn't understand how dad found the whole real estate thing so fascinating. Dana seemed to be enjoying it, though, and mom appeared to be having almost as much fun as dad. James supposed it was just something he was never going to understand. \n\nAfter their break, they fell back into it with a renewed vigor. James had expected them to be a little sluggish about it, feeling a little roly-poly after their meal and taking it slow. It would seem that he was mistaken, though. Everyone was focused and raring to go, and James was surprised to find that he himself was getting into it a bit more as well. The more they looked, the more James and Dana 'discussed' options through their hand squeezes and innocently framed comments about the places they looked at, the more it seemed to sink in that they were looking for their home. That they were looking for the house where he and Dana would make their life together. The more that feeling set in, the more James' head swam with the knowledge that this was going to work, that they were going to be able to do it, that they were going to be able to have their chance to be together. \n\nWhen they saw the little house on the corner, Dana squeezed his hand tightly, almost crushing it. James immediately squeezed back, agreeing in an instant. It looked perfect. The page that dad had brought up in the listing website showed the front of the house, obviously, but it also had a few pictures of the interior right under it. It showed a home that was, to them, perfect. \n\nIt was a simple, humble little place, not too far from mom and dad's house, not too far from mom's shop. The front yard wrapped around the corner with a huge sycamore in the middle of it, throwing shade across the garage and driveway. It was painted a pale shade of blue with trim so faintly green it appeared almost white. It was well kept, with neatly trimmed hedges under the windows and a small gravel path along the side leading to the gate that let into the back yard. The living room was spacious, the kitchen as well. It had three bedrooms, the master bedroom having its own bathroom. One of the bedrooms had a large bay window that looked out onto the back yard, which James pegged instantly for Dana's drawing room. \n\n\"Are there more pictures for that one dad?\" Dana asked, leaning forward. Dad glanced at her a moment before clicking onto the gallery tab. They looked through it, commenting on what they liked. \n\n\"Oh look at those counters, is that real marble?\" Mom said as they looked through the kitchen and bathroom pictures, getting a little excited. \n\n\"I'm pretty sure it is. I remember this one, I think.\" Dad said, double checking the information tab. \n\n\"How about the back yard? Any pictures of that?\" James asked, hoping that there would be a nice view for Dana. The pictures that dad brought up of the yard were great. Whoever was selling the house had obviously put a lot of time into the place. The lawn was green and lush, with a small brick path winding through it to the little bird bath that stood in the middle. Around the bath was a neat ring of gravel, bound by small bricks that matched the path nicely. In the corners were brick flower gardens, about a foot and a half high, full of a riot of different blooms. On one side was a small shed, in the shape of a miniature barn, painted fire engine red with white trim, completing the look. \n\n\"That looks pretty. I like that.\" Dana said softly, squeezing James' hand again. James squeezed back, almost certain that this was the place they were going to buy. \n\n\"I do too. Is it in, uh, my price range?\" James asked, catching himself. He had almost said 'is it in our price range' in his excitement. He could have played it off, sure, but he chided himself for his continued carelessness all the same. \n\n\"Yeah, looks like it. I'm sure you could even get it a little lower as well, with a little haggling. The place is in great shape, I remember now, I've shown that one. It's only about six years old.\" Dad said, looking through the listing information again. After a quick glance to Dana while mom and dad were staring at the screen and a couple more hand squeezes, James said that he'd take it. \n\n\"Just like that? You don't want to go look at it first?\" Dad asked, a little surprised. \n\n\"Don't have to. I like what I see.\" James said, saying what Dana couldn't. He agreed with her, it was exactly what they were looking for, and it was exactly what they wanted. \n\n\"Okay, I'll make the calls tomorrow if you want. I can get it all set up on this end while you talk to the bank and get the loan all set up. Are you sure your credit is good enough that you'll qualify for a loan like this?\" Dad asked. \n\n\"I should, I don't have anything against me on my credit. I pay all my bills on time or early, I always have. My car's paid off; I knocked that down well ahead of schedule, paying way over the monthly minimum payment. I have a great credit score.\" James said with a shrug, aware of the fact people typically have the loan lined up before getting the house part settled. \n\n\"Well, talk to the bank, find out about the loan, and I'll call about the house. It may take a couple days to find out about the loan. Once you have that in hand, we can move forward on the house.\" Dad said, bookmarking the page. \n\n\"No time like the present. I'll head out and get the loan started now, and I guess I'll be back by dinner.\" James said, standing up. \n\n\"I'll go with you, if you don't mind.\" Dana said, standing as well. She was looking at James' hands, smiling, her cheeks a bit red. \n\n\"I don't mind at all, some company would be nice. I guess we'll be back in a bit.\" James said with a smile. Mom and dad looked surprised, but they just said okay and went with it. They were happy to see her willing to go out and about without being forced, without being coerced into doing so. James could see that she was nervous, but she was also clearly excited. He couldn't blame her, he was excited as well. He was also happy that he would have the chance to talk to her about everything on their way to the bank and back. \n\nThey gathered what they needed and hopped into his car, hitting the road. \n\n\"James, the house is beautiful.\" Dana said as soon as they shut the doors. \n\n\"Isn't it? It looks perfect for us. I was thinking that the bedroom with the big bay widow would be great for a drawing room for you. You could look out onto the yard, see the birds flying around; what do you think?\" He asked, starting the car and pulling out into the street. \n\n\"Really? That would be wonderful. James, is this actually happening? Are we actually going to do this, for real?\" She said, her voice getting quiet and hesitant as she asked the questions. He glanced over at her, seeing her anxiety. \n\n\"Only if you want to. If you want to, then yes. Yes, we are.\" He answered, his voice calm, steady, confident. He felt her hand on his leg and took it in his, her grip tight. \n\n\"Yes. I want to. You know I do. It just feels, I don't know.\" She said, shaking her head a little. He could still hear a bit of tension in her voice; something that wasn't quite fear. \n\n\"It feels like a dream. Like it isn't quite real.\" He said softly. It was a feeling he had been having most of the morning. \n\n\"Yes!\" She said brightly, before getting quiet again. \"I think. I don't know. It is like that, but it also is not like that. I can't quite explain it. I can't quite believe that we actually get the chance to be free.\" She said, her voice still hushed and sounding a little lost, a little almost-afraid. \n\n\"I know. But I have to believe it, because it's the chance we have. Whatever opportunity we have, I'm going for it. I'm not losing the chance to have you, Dana.\" James said, sounding determined. Dana watched him while he spoke, watched the set of his jaw and how his brow furrowed just slightly. She saw that he meant it, and meant it entirely. He wasn't about to let anything stop him now that they were going for it. \n\n\"You already have me, James.\" She whispered, leaning over to lay her head on his shoulder, closing her eyes and smiling. Seeing and hearing his conviction to keep her made her feel safer than she had ever felt before, like nothing could ever get to her with him around. Like she had no reason to fear anything if she was with James. It was a wonderful, breathtaking, door opening feeling for her. She thought the whole world looked a bit brighter now, knowing that she finally stood a chance in it. \n\n-- \n\nThey walked into the bank and found it mostly empty. James was glad to see it, as he really didn't want to make an appointment with the loan officer and have to wait a couple days or anything like that. They walked up to the front desk, Dana holding his hand tightly. James was curious to see how this would work out. He had expected Dana to wait in the car, not to want to join him in the bank, but she had said that she wanted to come in with him, so here she was. She was clearly scared, but she was smiling all the same. The man at the desk directed them to a smaller desk in the back of the large lobby where an older woman was seated at her computer, going through files. They walked over to introduce themselves, James simply hoping that everything would go smoothly. \n\n\"Hi, I'm Marjorie, how can I help you folks today?\" The woman at the desk asked brightly, standing and offering her hand. \n\n\"Hello, I'm James, this is\" \n\n\"I'm Dana.\" She said, taking Marjorie's hand and surprising James. Dana didn't look Marjorie in the face, but he thought that she was showing incredible courage all the same. \n\n\"Well, what can I do for you?\" Marjorie asked as they sat. James took a deep breath and started laying out the plan. \n\n-- \n\nJames and Dana sat in the car and closed the doors, silent a moment, just looking at each other. She reached over and took his hand, pulling it over into her lap. He could feel her whole body trembling, and was glad that he had a bench seat in his car. He scooted over a bit and pulled her the rest of the way, meeting her in the middle to wrap his arms around her. Dana quickly put her arms around him, clinging to him like a life raft, her breathing shaking as much as her body. James could feel her racing pulse as he rubbed her back. \n\n\"James. Oh my god, James, I talked so much.\" She whispered, her lips tickling his neck. \n\n\"I know, Dana, I'm so proud of you. How did you do that? You were talking to her like it was nothing.\" He said, the awe in his voice readily apparent. \n\n\"I, I don't know. You were with me, and you held my hand, and it wasn't as scary as it always has been.\" She whispered, her voice getting a jagged edge to it. At first James thought she was starting to cry, but quickly realized that she was close to laughing. \n\n\"Dana, are you all right?\" He asked softly, pulling back enough to look at her. She was smiling ear to ear, her face a deep red, her eyes bright and dancing. \n\n\"I, I, yes. I think so. I don't know. I will be when we move in, I know that.\" She said, fighting to keep from laughing, her hands gripping his shirt tightly, pulling him in to kiss her. He went gladly, kissing her happily, the copy of the loan paperwork crinkling a little in his hand. \n\n\"We'll both feel better when we move in. We're gonna make it happen, Dana, we're getting a home together.\" James whispered in her ear, smiling widely, when she finally let him breathe. Her whole body shuddered when he said it, and her arms went around him again. She gave a short, jangling little laugh that was almost a gasp. James could feel moisture on his neck and figured that now she was crying. He could understand that. He almost felt like crying himself. \n\nThey got themselves under control a bit and drove home, Dana sitting in the middle of the seat so that she could lean up against him. Neither of them could stop smiling, and Dana giggled a little from time to time as they talked. \n\n\"So I was thinking, after I get things settled with work, I'll be moving my stuff as soon as the house is cleared and I have the keys. We can have you help me move, take a couple days off work. When we get close to being done with that, the last day or so of the move, we could sit down with mom and dad. Tell them that while we were moving, we talked about it, and figured that you moving in with me could be good for you. That it might help, be a stepping stone towards independence, all that stuff. How does that sound? I know it's fast, but I really don't want to wait to have you with me.\" James said, enjoying the feeling of her leaning against him. Her hand was on his stomach, her head laid on his shoulder, her warmth filling him with delight. \n\n\"That sounds pretty good. I think that would work out just right. I don't want to wait either. I can't wait. I wouldn't be able to bear it. When we were talking about it earlier, it sounded like the idea was to wait a couple weeks before I moved in. I did not like that part of the idea. I couldn't wait that long. Especially not now. I know I couldn't.\" She said, her hand toying idly with his shirt. \n\n\"I don't think I could either. I would go nuts. So we do it this way then? Talk to them at the end of moving my stuff? Jump right in to moving yours?\" James asked, one hand dropping from the wheel to take hers. \n\n\"Yes. I don't have much; it won't take long to move me in. Then what do we do?\" She asked, squeezing his hand. James chuckled a little at that, as he knew that this question would probably come up many more times in their future. He didn't mind though, he was more than happy to answer it for her, in as many situations as it came up. \n\n\"We live our lives. Our life. It won't always be easy, but it never is for anyone, really. We deal with what comes along like everyone else. That's all.\" He said, giving her hand a squeeze back. He could feel her giggling, even though she kept her voice low enough that he didn't hear it. He could feel her relaxing more, her body soft against his side. He hoped it was something that he could feel often, and figured it would be. \n\n-- \n\nThey walked into the house, both still grinning. Mom saw them and started smiling herself, figuring the news was good. She had expected him to get a loan, but she had been worried about Dana going with him. Apparently, things had gone smoothly, much to her relief. \n\n\"Good news?\" Mom asked, walking over. \n\n\"Good news. I got the loan, no problem. Mom, you would have been so proud of Dana. She went in with me, and she talked with the loan officer like it was perfectly natural.\" James said, looking over at Dana, his face beaming with pride. ",
        "\"I just, I don't know mom. I just talked. It was scary, but I did it. I asked questions, and I answered questions, and I just, just talked.\" Dana said quietly, looking mom's hands, smiling wide, her cheeks still red. \n\n\"Oh honey, that's wonderful! I'm so proud of you! See, it's not so hard, is it? It can be scary, but it's not impossible. Come here.\" Mom said, grinning madly, holding her arms out. Dana gave her a big hug, her smile still splitting her face. \n\n\"Your father called about the house, it's all being set up now. I guess he's off to get things going down at the office. Whatever paperwork needs signed for it, I still don't know how all of it works. But if you have the loan ready, it shouldn't take too long to get you moving in. Oh, both of my babies in town again, no more waiting and waiting for visits; this is going to be wonderful. And you two will get to keep working together too; it's just all so great.\" Mom said, giddy with excitement. Her whole body was tense and rigid, her hands jumpy and moving quickly. James could see her excitement just as clearly as he could hear it. He knew that if he was to put his hand on her shoulder or neck, he would be able to feel it as well. \n\n\"Yeah, it should work out pretty well. Dana can visit after work or on the weekends, or I can come over here, however it works out best.\" James said, his voice a little uneven. He hoped mom didn't notice it, and could tell that Dana picked up on his tension as he spoke in the way she glanced over at him. He was worried that the grey area between lie and truth in his deceptive words would leak through enough for mom to catch on that something was amiss, but she seemed to be completely oblivious. It seemed that she wasn't as good a lie detector as he had always thought when he was younger. At least, not now that he was watching people in their entirety more. \n\n\"I would like to go and talk, if it's all right.\" Dana said, looking to James again. She didn't hesitate to make eye contact with him, didn't sound scared or nervous at all, she seemed completely in control and confident. It was marvelous to James' eye. \n\n\"Sure, I'd like that.\" James said softly with a small nod. Mom said okay, though James could see that she still had a few more questions. He would see about that later, though. For now, he was focused on Dana. They excused themselves as went up the stairs, both of them moving up the steps without producing any creaks. James found that he was doing so without thinking now. \n\nAs soon as he shut the door behind them, James felt Dana's hands on his shoulders. He turned around and she was kissing him, her mouth hungry on his, her hands quick to slip around his back, holding him tight. His own hands went around her waist, his body drawing in all the sensations of hers, his senses taking in everything she offered. His hands went to her back, rubbing in circles the way she liked. Dana reached over and turned the lock on the door, then began tugging at him, pulling him towards her bed, and James went. She sat down, her hands trailing down his chest as she sat, ending on his hips. She looked up at him, a small smile on her face, her bottom lip caught in her teeth lightly. He thought she looked a little apprehensive, like she was nervous about something she wanted to say, perhaps embarrassed or nervous. He thought she wanted to do something specific, but was having trouble figuring out how to ask. \n\n\"What is it?\" James asked, smiling a little. He liked being able to see so much more of a person, the way she did. He felt like he was finally seeing all of her. \n\n\"I want to. Taste you again.\" She said, hesitating to actually say it. She was blushing madly, and her eyes dropped from his, focusing instead on his chest. James felt his dick start to get hard at the idea, and not just because of what she wanted. It was the way she blushed and looked away, the way she caught her words and couldn't bring herself to say something as simple as I want to suck your dick again or even just I want to suck you again. She looked so cute and innocent, so shy and reserved. It drove him wild. \n\n\"Of course, any way you want. No judgment.\" He said softly. Dana giggled a little and smiled wider, her hands reaching for his belt. James didn't know if this was a good idea, being the middle of the afternoon. He was still acutely aware of their previous scare, but the risk did add to the excitement. And besides, if she wanted to he was hard pressed to say no. \n\nDana undid his belt and his pants, her eyes locked on his crotch. When she was ready to pull his pants open she paused, her head cocked to the side slightly. It only took James a second to figure out what she was doing. She was listening. He turned his head so that his ear was facing the door and tried to listen as well, wanting to know where mom was. It sounded like she might be moving around downstairs, but he wasn't sure. \n\nJames' attention snapped back to Dana in a hurry when he felt her pull his pants down enough to let his dick out of his boxers. She was looking up at him, shy and red cheeked, as her hands slid slowly up and down on his stomach over his shirt. \n\n\"Mom is in the kitchen. I have wanted to do this since we walked out of the bank.\" She said slowly, her voice almost a whisper, her hands slipping under his shirt and rubbing across his skin. \n\n\"Take off your pants, Dana. I'd like to taste you as well.\" James said, stepping out of his shoes. He wanted to make sure that it wasn't just him getting something, that she had the chance to feel good as well. Dana smiled and sat back, unbuttoning her jeans while she scooted back on the bed. James got onto the bed with her, positioning himself in front of her and helping to pull her jeans and panties down to her ankles so that she could open her legs. They laid on their sides and looked at each other a moment before James leaned forward and kissed the top of her slit softly, letting his lips linger while his hand cupped her ass and pulled her to him gently. Dana sighed softly, happily, as her hand wrapped around his shaft and she kissed his head. She started licking him, going at it slowly and serenely. \n\nJames matched her pace, taking his time and enjoying her. She had her legs bent, the lifted one resting easy and upright where it wouldn't get tired, so he wasn't rushed. He ran his tongue the length of her slit, letting it dip into her a little, before working his way back with a wiggle in his tongue. He could feel the vibrations in her mouth when she moaned at his ministrations, and it gave him no end of pleasure. \n\nDana took him into her mouth, a little at first, but soon gathering steam and getting more and more of him. She was still a little inexperienced with it, but there really wasn't a bad way to suck a dick short of biting, in James' opinion. The way she moved her mouth on his cock and worked her tongue on him felt wonderful. He was having a hard time concentrating on keeping his end up with all the pleasure she was pouring into him. \n\nHe kept at it the best he could though, picking up the pace and intensity a bit. He dug in a little more, working a little deeper, getting a bit more aggressive. He was rewarded with more moans around his dick and her hand tightening on his shaft. James started working a couple fingers into her as he went, moving them slowly in time with his mouth, getting them deeper a little at a time. Soon he was easing his fingers in and out, sawing at her in long, smooth strokes. He could feel her breathing heavily as he did, and he loved it. He started focusing on her body more, on how every part of her reacted to what he was doing to just the one place. \n\nShe was tensed and relaxed at once, keyed up and moving around with a laid back ease. Her muscles were tight and rigid along her stomach and sides, but her legs were completely relaxed. Her breathing was heavy and fast, almost ragged, but her body moved with a sensual grace that was intoxicating to be next to, hypnotic to hold in his hands. He could feel her pulse in his hands and in his mouth. He felt incredibly alive, and to him she felt incredibly alive. It was simply amazing, something he had never experienced with a woman before. Something he never would have guessed was possible. It brought a whole new level to intimacy for him that threatened to overwhelm him. \n\nDana was moaning almost constantly, her hips swaying in time with his hand and tongue and lips. She sucked harder and harder at him, almost painfully so. She was getting so turned on that she was having a hard time controlling herself. She moved further and further onto his dick, until his head was pushing on the back of her throat. She gagged a little a few times but she kept going, the desire to have more of him in her mouth an almost tangible thing, and certainly an insatiable one. Her hips shifted steadily from swaying and rocking to thrusting and bucking. Her body became more and more tense. James could feel her getting ready to cum clearly and he pushed her towards it eagerly, his mouth devouring her greedily. \n\nDana fought to keep her moans and sighs quiet, but it was a challenge. She wanted more than anything to cry out, to shout his name, to yell for more, to demand more at the top of her lungs. James gave her more, even without her shouting for it. She was quickly thrashing her hips against his face, her hand reaching down to scramble for a good hold his head, clutching at the back of his neck, pressing him tightly to her. James reveled in the gush that washed his mouth and face as she came, lapping up all that he could. \n\nAs she mellowed again, her hips no longer raging against him, James slipped his fingers from her, eased back on his mouth, settling for soft kisses on her lips and clit. Dana released his head and pushed gently on his hip, rolling him onto his back. Leaning over him, she began sucking his dick in earnest again, picking up where she had left off when her orgasm had taken her. With all of her attention focused on him, it didn't take long for James to reach his own orgasm. He gave her a quiet warning that he was about to cum, but that only made her speed up and suck harder. When his dick started jumping in her mouth, Dana eased back to just suck on his head and stroked him with her hand, milking him until he came. \n\nShe kept on milking him until she had every last drop out of him, swallowing everything she could get her mouth on. She kept sucking after he had finished, taking almost all of his dick into her mouth again, searching for anything she might have missed. She sucked gently and slowly on his cock until it started to soften before finally releasing it. \n\nThey lay on the bed head to toe for a moment, catching their breath. After a minute or two, Dana sat up and turned around so that she was lying next to him where she could kiss him. James wrapped his arms around her, kissing her slowly and passionately, one hand rubbing circles on her back, the other cupping her ass; simply enjoying the feeling of her pulse slowly winding down and her muscles relaxing under his hands. \n\n\"I love you, James.\" She whispered in his ear when she finally took her mouth from his. \n\n\"I love you too, Dana.\" He answered, squeezing her tightly. After a moment more of simply holing each other, they got up to get dressed again. They hadn't done much to listen for what Mom was doing, and didn't want to get caught after the fact, no matter how good it felt to simply lay together and hold each other. \n\n-- \n\nJames stepped out of the bathroom from taking a shower, and Dana went right in after him. They decided that he should probably go first, since his face was kind of covered. Dana could pull her pants up and mask most of the evidence of what they had been up to, but James really couldn't. Simply washing his face wouldn't do much either, as he had worked up quite a sweat during their little playtime as well. So they figured they would just jump in the shower one after the other and play it off as wanting to get theirs in before dinner so that mom and dad weren't rushed before bed. \n\nAfter James got done, he went downstairs to talk with mom again, see what else she had wanted to ask about the trip to the bank. He knew that she was probably brimming with questions about Dana and how it had gone. He couldn't blame her. He had been pretty floored himself by her boldness. \n\nJames walked downstairs to see dad was home and talking with mom on the couch. He walked over and sat with them, ready to see what news dad had. \n\n\"So I hear that Dana was quite the social butterfly at the bank?\" Dad asked as James sat. \n\n\"Yeah, pretty much. She talked with the loan officer pretty easily, fairly naturally. The lady looked at her a little funny a couple times when Dana stared at her chest instead of making eye contact, but overall it was amazing for Dana. I was blown away. You wouldn't have believed it, dad. She was asking questions and getting into the conversation all on her own, it was, it was great.\" James said, smiling. He couldn't help but feel a deep swelling of pride thinking about it, thinking about her taking charge of herself. \n\n\"She just, just talked? Huh. So I guess you've been helping her quite a bit then with your little speaking sessions. James, I can't begin to tell you how happy I am to know that it's helping, I really can't. I know she looks up to you an awful lot, but I hadn't dreamed that you would be able to have such a powerful impact on her simply by talking.\" Dad said, smiling a little. \n\n\"I didn't think I'd be able to help this much either, but she's made it real easy to work with her. Once we started talking, really talking, it all just kind of happened. It was, I don't know, it just felt right. It just felt like it was something we should have done a long time ago.\" James said, his voice getting a little quiet. He was speaking more about Dana and him getting together than simply talking, but he knew that mom and dad didn't know that. They didn't know that James and Dana's relationship was a big part of her gaining so much confidence; they only knew that James and Dana 'talking' was helping. \n\n\"Whatever it is about you two sitting down together, keep doing it. I want to see her able to live a normal, happy life. Not one stuck in that room up there, closed away from the world, with no one to interact with.\" Dad said, sounding a little sad, a little hopeful. James could see the hope written all over him. \n\n\"I do too, dad. It's what I'm working towards. It's what we're working towards. I think she'll be able to get there, eventually. It won't be easy, and it won't be quick, but I think it'll happen.\" James said. \n\n-- \n\nThey sat down to dinner, all excited and tired by the recent events and news. They were all a bit down though, knowing that James was leaving the next morning. James could see in how everyone sat, spoke, and carried themselves. He wasn't going away forever, and would be back in town soon enough, but he was still leaving for a little while. They ate and chatted, talking quietly. Dana spoke up more, joining in the conversation more frequently. Dad and mom noticed it, and were clearly excited to see it. They didn't put a spotlight on her though, just acted like it was normal, for which James was thankful. Dana seemed happy about it as well. \n\nAfter they ate, Dana and James cleaned up, taking care of the dishes like they had been. They washed and dried in silence, simply watching each other's body language and faces. After the dishes were done, they headed up to her room to talk. They had some planning yet to do. James watched Dana walk as they headed up the stairs, enjoying her body in motion. He wanted to see the grace of her movements that allowed her to move so silently, so efficiently up the stairs. It was difficult, as his eye was drawn to simply watching her ass sway in front of him, the snug fit of her jeans showing off the swell of her hips and her round, perfectly grabbable cheeks. The flex and flow of her thighs as she took the steps was hypnotic. James had to shake his head a little when they got to the top of the stairs, forcing himself to get back on track. It wouldn't help to be stuck on her body while trying to figure out what they needed to do in the coming weeks. \n\nDana shut the door behind them as James sat on her bed. She walked over to him, smiling a little, and put her hands on his shoulders, just looking down at him a moment. Unable to help it, James smiled back up at her, his hands on the hips he had just been staring at on their way up. \n\n\"We probably should not have done what we did today.\" She said, her smile widening. \n\n\"Yeah, we took a bit of a risk with that. I should have known better.\" James chuckled, knowing that it was much more than just 'a risk' that they were talking about. \n\n\"It isn't just you who gets the blame for things, James. I wanted to do it, too. It's my fault more than yours. I just, I wanted to make you feel good. I couldn't help it.\" She said, shrugging a little. \n\n\"I know. I wanted to please you as well. Soon, we won't have to worry about taking risks as much. It'll be great. For now, for tonight, we have to be more careful though. We could have lost everything today. I've been thinking about that off and on since I got in the shower. I don't know, I just couldn't help myself when we got going.\" He said, shaking his head a little and losing his smile at the thought of their life together ending before it had the chance to start. \n\n\"We will not lose anything. Please, don't say stuff like that. Things like that scare me.\" Dana said softly, her hands gripping James' shoulders tightly. James looked up and saw the fear on her face, the tightness in the muscles of her neck, the tension in her shoulders. He slipped his arms around her waist and pulled her to him, the side of his face pressed to her stomach, holding her tight. \n\n\"Don't be afraid, Dana. I'm not about to let anything pull us apart, okay? I won't let it happen. I'm just saying we have to be careful is all. I won't let us lose our chance, not for anything.\" James said quickly, his hand reaching up to rub her back. Dana's hand held his head tight to her stomach, her other hand sliding down to his back, her fingers scratching lightly there. \n\n\"Okay. I just don't like to hear about that kind of thing.\" She said. James could hear the tension in her voice fading, and could feel her body relaxing against his. It felt good, though he felt bad that he had scared her at all. \n\n\"All right, I'll keep that in mind.\" James said as she stepped over to sit next to him on the bed, her hand never leaving his back. James didn't mind, he liked having her hands on him. It was relaxing and reassuring, knowing that she was holding on to him in one fashion or another. \"Now, I was thinking about the coming weeks. I'll be back in my place for the time being, getting everything packed up a little at a time, mostly. I was wondering if you wanted to talk to mom about helping me move, or if you wanted me to call her.\" He said, his hand on her hip. \n\n\"I can ask her. I can see about taking a day or two off, and if you move on a weekend then it will give me four days to help. That should be plenty of time, shouldn't it?\" She said with a little shrug. James didn't know if she realized just how much she was progressing, how far such a simple offer was from where she had been when he had first gotten here for his vacation. To offer to talk to mom instead of having James do it, just like it was nothing, made James very happy to see. \n\n\"If you want to, that would be great. I'll start the move the Friday after I know about the house. That way, I can get over here with a load, pick you up after work, and we can go from there. If we end up needing the extra two days, we have them. I don't know how long it'll actually take to move all my stuff if I have it all packed up and ready to go when we actually start moving. But we'll have the extra two days to get you moved as well, so that'll work.\" James said, nodding. ",
        "\"That should work fine. When we get you almost finished moving, we can talk to mom and dad, and start on moving me. Then, we start. Oh James, I'm so excited! It feels like a fairytale.\" Dana said, wrapping her arms around him when her excitement got to be too much to contain. She was grinning wide and he could feel her pulse racing when she squeezed him. \n\n\"I know. We're so close.\" He whispered, kissing her temple, holding her tight. \"We have our plan, we have everything in motion, all we have to do now is go for it.\" He said, rocking her gently. \n\n-- \n\nJames went into her room after their parents went to bed, closing the door silently behind him. Dana was waiting for him on her bed, sitting in her translucent shirt and a pair of panties, her drawing pad on her lap and a pencil in hand. When he came in, she smiled and set the pad and pencil on the desk, watching him. James walked over, shedding his shirt and sweatpants as he did, and sat next to her. Dana straddled him, taking her seat on his lap, and kissed him, her arms around his neck holding him tight, her mouth moving slowly and happily on his. James put an arm around her waist and one around her hips, holding on to her ass, pulling her hips to him. \n\nThey kissed slowly and gently, simply happy to have the moment to do so. They let the kiss stretch out, all the concerns and worries of the future and the world fading quietly away while they just enjoyed each other. James felt every inch of Dana, his hands moving across her back lazily and gently, taking in the flow of her body. Dana held tight to James, one hand on his back, fingers scratching lightly, the other in his hair, holding his head to hers. \n\nDana pulled away just enough to catch her breath, her lips still close to his when she spoke. \n\n\"When are you leaving tomorrow?\" She sounded sad, and James couldn't blame her. He was pretty sad about having to leave himself. \n\n\"Around ten. I'll be starting to pack as soon as I get back to my place. I'm gonna miss you, you know that? I'm gonna miss you a lot.\" He said quietly, his eyes still closed. \n\n\"I know. I'll miss you too. I don't know how well I will do in the shop while you're packing up and waiting to hear about the house. I'll call you though. I'll talk to you every night, just like we do now. I want to hear you every night.\" She said, nodding a little, her forehead touching his. James could hear a slight hitch in her voice, could feel the hitch in his hands on her back. She was fighting to remain calm, but he could feel that she was close to tears. He opened his eyes as the first one slipped down her cheek and fell between them. \n\n\"Don't cry Dana. I won't be gone long, and I'll be on the phone every night, just as long as you want to talk. Okay? Pretty soon, we'll be talking every night in our bed before we go to sleep.\" James said, reaching up to wipe away her tears. \n\n\"I know. But I don't like to be alone. After having you here, after having you, alone is going to be so much worse.\" She said, her voice a little uneven. \n\n\"Yeah, I know. I know.\" James whispered, feeling about the same. \n\n\"James?\" She asked, smiling a little as her voice evened out. \n\n\"Yeah?\" He answered, glad to see her smiling again, glad to hear and feel her relaxing without effort again. \n\n\"Love me.\" She whispered, leaning forward to nuzzle his neck as she did. James smiled as he ran his hands down to slide under her shirt, lifting it up. She raised her arms for him, letting the shirt be pulled from her and tossed aside. His arms went around her waist, holding her close, while hers went around his neck. He kissed her before leaning back quickly, pulling her with him. She gasped when he did, caught by surprise, but started giggling after that, swatting at his chest playfully. \n\nShe kissed him briefly before they scooted up to lay completely in the bed, pulling the blanket over them. Dana straddled him to reach over and turn off the lamp, and James grabbed her hips, keeping her from climbing off of him again. She ran her hands across his shoulders, leaning down to kiss him, letting him pull her panties down. She shifted long enough for him to get them off of her, then climbed onto him again. His boxers were easier to get rid of, and she was quickly sitting with the base of his shaft pressing against her slit. \n\nShe rolled her hips, sliding up and down his shaft, moaning softly as she did, her heart racing as his hands slid up her sides and around to her back. James could feel her hair brushing his chest as she lowered her head, her breathing getting faster, her pace picking up speed. She slid forward further, until his head was resting just under her clit, and paused there, her face right over his. \n\n\"Now.\" She whispered, her voice tight and rough. James shifted his hips so that his dick slid from her clit to her entrance and pulled her down by her shoulders, rocking himself up into her at the same time. Dana stifled a cry of pleasure, her hands gripping the sheets tightly. She started easing herself up and down, riding him slowly, taking her time and relishing the joy of having him deep within her. James shifted his hands down to wrap is arms around her waist, sitting up a little to take her nipple into his mouth, toying with it with his tongue, biting lightly to keep it where he could get at it. Dana gave a shuddering moan when he did, one hand releasing the sheets to grab the back of his head, holding him tight to her. \n\n\"Yes James. Please, more, please.\" She whispered, her voice tight and strained. He could feel her pulse racing in his hands, her muscles tightening and relaxing in waves down her body as she rode him, her hips rocking forward with each thrust to get as much of him in as she could. James struggled to keep from moaning, knowing that if he got started, it would be difficult for him to keep quiet. As it was, his breathing was heavy and ragged, and sounded very loud in his own ears. \n\nHe could feel her body tensing more, getting more rigid and strained with each thrust, with her quickly speeding up their pace. She started slamming down on him harder, her hand tightening in his hair as she started letting out small, whimpering little cries in the middle of her long, low, quiet moans. James knew she was close, as was he. It was impossible for him not to be with her holding onto him the way she was, moaning and crying softly just above his head, hammering at his hips for all she was worth, her body hot and soft against him so tightly. \n\nJames felt her whole body start jerking, her stomach and back tensing relaxing harshly, as she clamped on his cock rhythmically. She cried out softly, her voice light and serene in a strange contrast to her strained and rigid body. Her hand moved from his head to his back, her fingers, strong from working leather, digging into the flesh there almost painfully. If she wanted to, he was sure she could actually hurt him doing that. \n\nShe slowed again, but not much. Her muscles lost the frantic tensing and hard rigidity, but she was still far from relaxed, and she was still riding him like a woman possessed. James couldn't take it any longer, couldn't hold out any more. She was too much for him like this, overriding his chances of keeping himself going. \n\n\"I'm close.\" He whispered, his voice a hoarse husk. \n\n\"Yes, cum for me James.\" She whispered back, her voice uneven, her pace picking up again. James knew he would, but he didn't want to be in her when he did. He knew that they had already gambled once, and didn't want to change their chances any further. \n\n\"Not inside, Dana.\" He whispered, moving his hands down to her ass, lifting her. She slid off of him, but reluctantly, with a playful little groan. She climbed off of him and moved straight to his cock, taking it in hand and stroking him while her mouth closed over his head, her tongue swiping around it in fast circles. James laid back and groaned while he let it all out. Dana got everything out of him that she could, sucking and swallowing greedily, stroking him lightly, while her other hand rubbed gently and lovingly across his chest, her fingers making their small circles. \n\nWhen he was done, Dana crawled up to lay with him, her face nuzzled into the side of his neck, kissing lightly while her hand toyed with his hair, her leg laid across his. James held her, his hands rubbing her back slowly. He felt like the king of the world, the luckiest man on Earth. He had the woman he loved laying on him, holding onto him while he held her, both of them tired and exhilarated. \n\n\"I love you. I want you. I want you to keep me.\" Dana said softly, her lips brushing his neck as she did. \n\n\"I love you too. You have me. I'll keep you forever.\" James answered quietly, squeezing her tightly. He meant every word. \n\n-- \n\nJames woke up to the feeling of Dana moving against him. She was sliding up onto his chest, her face above his, her hair hanging down around their heads, leaving them in a little space that was just them looking at each other, with nothing else in the world. \n\n\"Hello James.\" She whispered with a little smile. \n\n\"Hello Dana.\" He whispered back, grinning. She gave him a little peck on the lips and sat up, straddling him with her hands on his chest. With her hair gone, he could see that he sun was starting to brighten the horizon. He would need to get into the living room soon, much as he would rather stay where he was. \n\n\"I have to go to work soon. I won't be here when you leave.\" She said, her smile fading a little. \n\n\"I know. I'll call you tonight though. You know I will.\" He said, rubbing her thigh lightly. He knew it wasn't much of a consolation, but he couldn't change the way things were for now. \n\n\"I know. You need to get in the shower though. We smell like. Um.\" She said hesitantly, her cheeks turning red. \n\n\"We smell like sex?\" James asked with a little smile, his eyebrows raised. \n\n\"Yes.\" She said with a little giggle as she leaned down again. \"I like it. I like when you smell like this. I want to make you smell like this a lot.\" She whispered in his ear, her voice unsteady. James was surprised by this; both by the lascivious statement itself and her boldness in being able to make it. \n\n\"Really? Wow, I, Dana, I didn't expect something like that. Moving day can't come soon enough. You can make me smell however you want.\" He said with a chuckle, sliding his hands up her thighs. One stopped on her ass, the other went up to her back, holding her tight for a moment. \n\n\"Get your shower, so I can get mine please. I don't think mom and dad need to smell us like this.\" She whispered, her face still next to his. \n\n\"Yeah, that's true. You want me to make you some tea while you get cleaned up?\" He asked while she climbed off of him. \n\n\"Yes please.\" She said, her fingers trailing down his back as he stood up from the bed. \n\n-- \n\nJames was sitting at the table with his coffee when mom came down. Dana was right behind her. James got up to fix mom a cup a coffee as she sat, and handed the tea he had made to Dana when she walked over. \n\n\"So, what do you have planned for today? Just going to relax before you take off?\" Mom asked, sipping at her mug. \n\n\"More or less, I think. I was going to ask dad about the house, maybe call the office, but I don't think I had anything else planned. I was going to head out about ten.\" James said. \n\n\"Okay. Well it's been wonderful having you back at the house again, I can tell you that. This little visit has really been something special with everything that's happened, you know? All the wonderful progress you've made with Dana, the news about working from home, it's all been great.\" Mom said, smiling happily. \n\n\"I know, I would never have thought that things could change so much from one little vacation. I know I learned a lot in the last nine or ten days. I thought I knew about Dana before, but I certainly learned a lot in the last week about her.\" James said, chuckling a little and looking over at her with a small smile. He thought about how little he had realized was going on with his little sister before this trip home. He had just absently thought 'she's shy; painfully so, and she doesn't really have friends, but she'll grow out of it.' Now, however, he knew that he had grossly underestimated the extent of the problem, and knew that if he hadn't talked to her, hadn't reached out to her the way he had, as a perfectly safe person who would never judge her, that she most likely have remained the way she was. That she would have never developed the fledgling confidence that was now blossoming in her, that she would never have found a real reason to try to interact with the outside world more. The thought of that was heartbreaking. The idea that she was so close to being locked away from the world, alone and imprisoned in her fear and uncertainty for the rest of her life. James couldn't bear to think of that anymore, not now that he understood her more and realized how close to a reality it was. \n\n\"I think I've learned a lot about me as well. More than I thought I could know.\" Dana said, reaching over to take James' hand, a small smile on her lips as well. She was looking down at the table, and the smile was a little sad, but James thought that she was pretty happy with the things she had learned. \n\n\"I'm so happy you two were able to figure all this out so well. Why couldn't the doctors we took you to do what James did, I wonder? Was it really so hard to simply talk to you, Dana?\" Mom asked softly, genuinely confused as to why James could help and trained professionals couldn't. \n\n\"It's, it's different mom. James isn't a doctor. He isn't asking me a bunch of questions and pressuring me to answer. He didn't really ask many questions at all. Really, he asked if I had questions and let me talk. When I talked, he made sure I could talk safely. It isn't the same.\" Dana said, shaking her head and frowning, trying to figure out how to describe the disparity in the two approaches accurately. \n\n\"You would think one of the therapists would have thought to do it that way.\" Mom said, shaking her head as dad walked down the stairs. \n\n\"One of them did, but he was a stranger. How could I talk to a stranger safely? He said I could say anything, but I didn't know him. I couldn't say anything I wanted to someone I don't know. It's just different with James, that's all. James is safe and he keeps me safe.\" Dana said, looking at James while she spoke. Mom thought Dana was looking at him like she usually did, looking up to her big brother the way a little sister does, with a good dose of gratitude thrown in now. She didn't realize that Dana was looking with eyes of a lover, completely devoted to James and absolutely enamored of him. \n\n\"I guess that's what a big brother is for. I'm just glad that you're finally getting past your shyness after all this time, honey.\" Mom said with a chuckle as dad poured his coffee. \n\n\"We're both really happy about that, sweetie. It's great to talk to you, to really be able to talk to you. I was afraid you would keep yourself cut off from everyone forever.\" Dad said as he sat down, echoing James' thoughts. \n\n\"I still feel, I don't know, afraid and awkward and everything. I just know that I can live with it now. James showed me that. He's shown me a lot of things.\" Dana said, giving James a knowing little grin. James thought that her boldness was growing quite a bit more than he ever could have hoped for, and he loved it. \n\n\"I'm glad. I hope he can keep it up once he's settled nearby.\" Dad said with a smile. \n\n\"About that, I wanted to ask about the house.\" James said, sipping from his coffee. \n\n-- \n\nEveryone was gone from the house but James. He sat on the couch and thought. He had a plan in mind and wanted to go through with it. He had his stuff from the vacation packed up, he just wasn't really looking forward to leaving. He knew that as soon as he walked out the door, then he wouldn't see Dana for a while, and that feeling was terrible. He walked upstairs, dragging his feet, not caring if he made noise now. He walked into her room, pulled a blank sheet of paper from her desk, and sat down to write her a note. He couldn't leave without giving a goodbye that was just for her. He wouldn't feel right if he didn't. He thought a moment before picking up one of the pens in the little cup by her lamp and started writing in his blocky but clear cursive. \n\n'Dana, \n\nI know you miss me. I know that because I miss you. I tried to keep from thinking about you after you and Mom left for work, because I thought it would help. It didn't. I couldn't even do it. No matter how hard I try, you're always right there in the middle of my mind, unavoidable and impossible to ignore. I gave up trying pretty quick. I think I'd rather think about you and know I'll be with you soon than try to not think about you anyways. If I don't hear from you this evening, I'll give you a call. \n\nLove, James' \n\nWith his note written, he folded it once and stuck it in the crack of the closet door where she would have to notice it when she changed out of her work clothes. He walked back downstairs and loaded his car, getting ready to leave. \n\nHe wasn't headed straight back to his house, though. He was making a stop on the way. He had looked up the place he wanted to stop at after everyone left, and was on his way there. It only took him about thirty minutes to find it. \n\nJames parked at Breller Brothers Jewelry and went in, feeling a little nervous. He was greeted at the counter by a young lady with thick glasses and a wide smile. \n\n\"Hi, can I help you find something?\" She asked, sounding chipper. \n\n\"Um, yeah. I'm looking a ring. I have a specific kind in mind, and I'm hoping you have one or can make it.\" James said, smiling a little. \n\n-- \n\nWhen the big day arrived, James had everything packed up. He had been ready to move for a couple weeks, living out of boxes and just waiting for the go-ahead on the house. This morning, he had the keys in hand and was ready to start moving. He had been talking to Dana every night before going to sleep, the two of them spending a few hours on the phone while lying in bed. Now, they started the process to end that. Mom had already told Dana that whenever he started moving, she could take however long she wanted off from work to help out. James grabbed his phone called the moving truck place he had talked to a few days ago and told them he would be in shortly to get one of the big trucks. \n\nForty minutes later he was filling the back of it with stuff, moving as fast as he could, wanting to get on the road and get to Dana. After a couple hours of rushed packing, he had the truck full and ready to go. He pulled his phone out again and called Dana. \n\n\"Hi.\" Dana said, her voice happy and bouncy, the way it always was when she answered his calls. \"It's barely even noon. You couldn't wait to talk?\" She asked, chuckling a little. \n\n\"No, I couldn't. Not when I'm holding the keys to our home.\" James said softly. Dana was quiet a moment before replying to that. \n\n\"You got it? You're moving? It's really happening?\" She said, sounding both excited and like she didn't quite believe it. \n\n\"It's really happening. I'm bringing the first load now, and I'll be picking you up when I get there. I love you, Dana.\" James said, smiling wide. \n\n\"Oh my god, I love you too. I, I'll be ready. I'll head to the house shortly.\" She said, speaking in a low whisper. She sounded like she was about to cry with joy. \n\n-- \n\nJames pulled into the driveway, smiling. Dana was standing by the door, her hands held in front her, bouncing on the balls of her feet in her excitement. She trotted over to jump into the passenger seat and grabbed him by the back of the neck, pulling him over to kiss her. She pulled roughly but kissed tenderly, moaning softly when he brushed her cheek with his hand. They just sat in the idling truck for a while kissing like they were trying to make up for lost time. When Dana finally sat back, she was blushing and tears were starting to spill down her cheeks. ",
        "\"It's really happening.\" She whispered. \n\n\"Yes it is. We have a home. Soon, we'll be moving your stuff into it as well.\" James answered, nodding. She beamed at him, her smile wide and rapturous. \n\n\"Let's get to work then. I'm done waiting.\" She said, her voice hitching a little. James nodded and put the truck in gear, heading to their new home. \n\nIt was a thirty minute drive across town to get to the new house. The drive from the new place to mom's shop would only be about twenty minutes for Dana, about the same as it was from mom and dad's place. On the way over, Dana sat right next to James, holding onto his arm. She used the crappy lap belt in the middle of the seat even though it didn't tighten very well and the seat was a little uncomfortable there. None of that mattered to her, she simply had to keep a hold of him, had to stay as close to him as she could after the time they had spent apart. \n\nThey pulled up to the house and parked in the driveway. They just sat in the truck for a moment, looking at the place. James felt Dana shaking a little and realized she was crying before he turned to her. She was smiling wide as the tears rolled down her cheeks, her breathing broken by little hitches and gasps. She looked over at James, her eyes bright in the tears, her face a glowing mask of unrestrained happiness. \n\n\"James, we are home.\" She whispered, her voice rough. \n\n\"Yes we are. We're home.\" He answered, wiping her tears away and smiling back. \n\nThey got out and opened the house up, walking through the rooms they had both studied countless times in pictures. They walked through the house holding hands, not speaking, just looking at each room in turn. It was better than the pictures had looked, more spacious and open. When they got to the room that would be Dana's drawing room, they walked up to the window and looked out. The backyard was large and neat, with two small birds frolicking in the birdbath. James and Dana just watched them for a moment, silent and happy, as the birds hopped about and splashed around. When one of the birds flew off into the gray sky, they continued their little tour. \n\nThe last room they checked out was the bedroom they would be sharing. They walked through it slowly, stopping in the middle. Dana looked around, figuring the bed would sit right in the middle of the room, the headboard up against the wall with no window. The closet was large with two doors that slid sideways, and there was a large bathroom with two side by side sinks. It was perfect. \n\n\"What do you think? Will this work as your new sanctuary?\" James asked, his voice low. \n\n\"Yes. Our sanctuary.\" She corrected, squeezing his hand. James chuckled a little and nodded. \n\n\"Ours. Let's get to it then, so that we can start living in it.\" He said, kissing her cheek lightly. \n\nThey got the truck unloaded rather quickly with both of them working at it, moving the boxes easily enough. They were all marked, and went straight to the rooms they belonged in. When the truck was empty, they jumped in and hit the road to get the next load. \n\n\"Dana, I wanted to talk to you about something. I didn't want to do it over the phone, because it just felt like something we should talk about face to face.\" James said once they were rolling. \n\n\"What is it?\" She asked, leaning on his shoulder again, her eyes closed. \n\n\"Well, it's about before, when we were in your room. When we were, you know, making love.\" He said, feeling a little awkward talking about it. He didn't know why it made him feel odd, considering the things they had discussed and the things they had done, he just knew that he felt a bit embarrassed discussing it, about addressing it as frankly as he was about to. \n\n\"What about it? Is something wrong?\" She asked, looking up at him. James could feel her tense up, could feel her apprehension even though he was focusing mostly on the road. \n\n\"No, not really. I was just thinking about the first time. If we're going to be doing it that way, with me, you know, finishing like that, then we're going to have to take precautions. It'd be pretty hard to explain to mom and dad how you got pregnant, if it happened. Know what I mean?\" James said quickly, wanting to reassure her. Dana relaxed and giggled a little, laying her head back on James' shoulder. \n\n\"Yes, I know. I already thought of that. I already took precautions.\" She said, her voice sounding a little proud. \n\n\"You did? What do you mean?\" James asked, surprised. \n\n\"Well, after the second time, I knew that I liked the way we did it the first time better. So on the way home from work I stopped at the pharmacy and got birth control pills. I've been on them since then. Problem solved.\" She said, squeezing his arm. \n\n\"You did? That's great, I was thinking of getting condoms, but if you're doing that, then I guess we don't need them.\" James said, smiling. \n\n\"No condoms, I want to feel you, not some piece of plastic. I want to feel us together.\" She said, her voice quiet and sounding a little shy. \n\n\"You don't even know what condoms feel like, though.\" James chuckled, glancing down at her. \n\n\"I don't need to. I know that they'll be something between you and me. I know I don't want that. I want to feel you, just you.\" She said simply, her hand moving to rest on his stomach, her fingers scratching lightly on his shirt. \n\n\"Yeah, I can live with that. I'm not a real big fan of condoms, I just sort of got used to them. I always had to use them with the other girls I was with, so it was get used to them or don't have sex. Guess which one I chose.\" James said, nodding and smiling. Dana giggled when he said that and patted his stomach lightly. \n\n\"You don't have to worry about that anymore. What about, what about later, though?\" She asked, her voice getting a little more serious. He could feel her tensing again, and could hear the apprehension in her voice. He thought he might understand what she was asking, but he needed to be sure about it. \n\n\"What do you mean?\" He asked, his smile fading a little. \n\n\"I mean later. What about further down the road? Do you think that there might be a way that one day, you and I could think about, maybe, getting pregnant?\" Dana asked, her voice hesitant and soft, sounding very shy and nervous. Her hand on his stomach was still, her body was rigid against him, and James realized she was terrified in asking the question. To her, she was risking a lot in bringing it up, in asking him about it as a real possibility. \n\n\"Dana, that's, that's something we would have to think about real hard, and not just because it would be hard to explain. That's a huge step. Would you really want to have a kid with me?\" James said, stuttering a little. He was feeling like they were venturing into dangerous territory, as if they hadn't already. He could feel her start to relax a little, but not much. \n\n\"Of course I would, James. There isn't anyone else I would want to have a family with. You are my family. You're my only family. You're the only family I want. I only want you. If I ever have a child, I don't want one with anyone but you. But I can't do that unless you want to as well.\" Dana said softly, slipping her hand from his stomach to circle his waist, holding onto him tightly. Her other arm tightened its grip on his arm and she leaned up to kissed his neck softly, a gentle little peck that lingered a moment and was gone. She rested her head on his shoulder again while she waited for his answer. \n\n\"If, if, we figure that out, then yes, of course I would want to raise a family with you. But that's something that we would have to figure out very carefully. That would take a lot of planning, a lot of caution. We can think about that once we've gotten ourselves set up and started our lives.\" James said slowly, nodding. The thought of raising a kid or two with Dana, starting a family with her, living a complete life like that; it all made James' head spin with joy, fear, desire, tension, and wonder. \n\n\"Okay. Thank you James. I'll think on it.\" She said happily, holding him tight. \n\n-- \n\nThey got the next load and filled the truck, talking about where everything would go and what they thought would be the easiest way to go about it. When the truck was full, James took a look around his place to see what they had left. It looked like one more trip would do it, and they might be finished by sundown. Pretty quick, all told. He was happy he had decided to spring for the bigger sized truck instead of one of the smaller ones he had been looking at. With it, it would probably only take a single trip to move Dana's stuff to the house. \n\n\"Do you want to call mom on the way over to the house? Ask her about moving in? I think we'll be done by tonight with my stuff, and be ready for yours in the morning. Then I can drop the truck off and have you drive me over to get my car.\" James said as they started back to the new house. \n\n\"Yes, I can do that.\" Dana said, pulling her phone from her pocket. She just looked at it a moment as James drove, not dialing or anything. \n\n\"James?\" She asked, her voice small and scared. \n\n\"What's wrong?\" He asked, getting worried. \n\n\"I'm, I'm scared. What if she, I don't know, what if she thinks it's a bad idea? What if, if she gets mad? James, I don't know if I can do this.\" She said, her voice uneven. She was still sitting in the middle seat, right up next to James, so he put his arm around her, pulling her over to lean on him, and put his hand on her hip where she liked it once she was there. The truck was an automatic, so he didn't have to worry about shifting, which he was very thankful for at that moment. \n\n\"You can do this, Dana. I'm right here with you, I've got my arm around you, you can hold onto me like you usually do when you talk to her, you aren't doing this alone. You can put the phone on speaker if you want to, and we can both talk to her if that will make you feel better.\" James said in a soothing tone of voice, squeezing her gently, his hand rubbing on her hip lightly. He thought it would be good for Dana to do this, a big step for her. That not only would it be a big part of them starting their lives together, but that making this call would be a big stepping stone for her personally. That it would give her a chance to really assert her independence and prove to herself that she could make big changes in her life. \n\n\"Okay. Okay, I can do this. I'm scared James, but I can do this, right?\" She said, her voice shaking a little, looking up at him. He could feel her trembling against him a little, could feel the tension thrumming through her like an electric charge. \n\n\"Of course you can. I'm right here with you. You can do this. I know you can.\" He said confidently, giving her a reassuring smile. \n\n\"Okay. I'll try.\" She said, nearly whispering. Dana hesitated a moment longer before calling mom. She didn't put the phone on speaker, which James was happy to see. He wanted her to do this on her own as much as she could. \n\n\"Hi mom. No, we're on the road. We were talking about the move while we were loading the truck, and we sort of had an idea.\" Dana said, her voice surprisingly even and light. Her body was anything but. She was tense and stiff against James, her free hand clamped onto his thigh. \n\n\"No, actually, it was an idea about the move. We were thinking that maybe, um, it might be good for me to try living with James for a while, in one of the extra bedrooms he has now. That it might be more like living on my own with a roommate, and that it could be a good way for me to get a feeling for living on my own a little.\" Dana said after a pause to listen to their mom. She was wincing quite a bit while she spoke and her hand tightened almost painfully on James' thigh, terribly afraid of how mom would react. She listened for a moment before her hand loosened a little, much to James' relief, and her face eased. \n\n\"Yeah, that's what we were thinking, more or less. Less like living with you guys, and more like living on my own. With James, it would be closer to splitting a rented house with a roommate, you know? Except the rent is actually James paying off the house, I guess. Yes. Well, I suppose tomorrow, since he has a moving truck now for his stuff and we should be done with his stuff tonight. I mean, it won't take long to get my stuff together. I know. I know. I love you too, mom. Yes, we'll talk more about it tonight. Okay, bye mom.\" Dana hung up the phone and dropped it in her lap, turning quickly to bury her face in James' arm, her hand going to his chest. She let out a jagged, nervous laugh that sounded slightly hectic to James. \n\n\"James, she thought it was a good idea! She doesn't like that it's so sudden, and she wants to talk to me about it tonight, but she thinks it would be good for me. She likes the idea of me and you staying together because we'll be able to talk more. James, this is going to work. Oh my god, I actually talked to her about it, I actually did it.\" She said in a rush, her voice muffled by James' arm. James smiled and squeezed her tight, very proud of her for going through with it. \n\n\"See, I knew you could. That wasn't so hard, was it?\" He asked quietly, his heart racing at the news that they would be moving her in the morning. \n\n\"Are you kidding? That was terrible! I'm so glad I did it though. She said it was a good idea! I'm moving tomorrow, James!\" She almost shouted, looking up at him with a wide grin. \n\n\"Yeah, yeah you are. We'll have your stuff home by the evening, and we'll spend our first night together.\" James said softly, still smiling. \n\n\"Home.\" Dana whispered, reaching up to run her thumb along the line of his jaw. \n\n\"Home.\" James said, nodding. \n\n-- \n\nThe truck rolled up to the curb at their parent's house. Dana and James got out, both stretching their backs. They had moved the couch and bed with the last load, and were exhausted. Dana waited for James to walk around the front of truck and took his hand while they walked to the house. They walked in to the smell of lasagna and the sound of mom and dad talking in the direction of the kitchen. \n\n\"Hey mom, we're here.\" James called as they walked over. \n\n\"Just in time. So, you guys had an idea huh? I have to say, it's a doozy.\" Dad said, sitting at the table. He had a small smile on his face and looked pretty relaxed, his body not tensed or stiff at all. James thought that perhaps mom and dad might actually be on board with the idea pretty well, and that they wouldn't really need any extra convincing. \n\nHe had thought that he and Dana would have to do some talking to get dad to see their point, to get him to go along with the idea, but it appeared that he wasn't gearing up for any kind of argument about it. James let hope flutter to life in his chest, his mind already turning to how quickly they could get Dana moved over to the house. \n\n\"Yeah, I guess so. We were just thinking that with Dana living with me, it could help in a couple of ways. It would give her a chance to try living in a place that wasn't with parents, a little more independent, and that it would give us plenty of time to talk. Keep working together the way we have been. We've made good progress so far, and we'd like to see if we can, you know, keep the ball rolling.\" James said as he and Dana sat down at the table. Dad thought about a moment, nodding a little. \n\n\"I suppose I can see that. It's pretty sudden, though. I mean, that's a big step to take all at once, and to decide in one afternoon.\" Dad said, looking at Dana. \n\n\"I know daddy, but James has the truck now, so we thought we should use it while he does, make everything easier while we could. I don't have much to move, but we can do it all in one trip with the truck instead of two or three trips with a car.\" Dana said, squeezing James' hand under the table. She looked at her father for the most part while talking to him, but she still looked like she would rather be silent. \n\n\"We wouldn't be a couple towns over either, like I was before. She would only be moving across town, so it isn't very far. I think just the change itself would be good for Dana. We both do. It's sudden, yeah, but I really don't see much reason to wait on it either.\" James said with a shrug. Dad considered it, nodding a little. While he did, mom declared dinner finished, calling out from the kitchen. Dana went to help her in the kitchen, and dad took the moment to speak to James without her in the room. \n\n\"You really think this will help her? That this will make a difference worth the effort of moving her and having her live with you?\" Dad asked in a low voice, leaning forward and watching James closely. His body was a little tenser than it was before, James could see, a little more focused. Dad's jaw was tight, his shoulders set, and his face was a little wary. \n\n\"Yeah, I do. I think something like this is exactly what Dana needs. If it helps her, then it's certainly worth the effort. I don't mind having her live with me, that's not an issue at all. I'm fine with her staying with me for as long as she wants, as long as it helps her with her fears.\" James said earnestly, speaking low as well. Dad smiled and sat back, his body easing. He looked like he was proud, like he was happy to hear James' reasons for the decision. \n\n\"Okay. You're doing a good thing, you know that? Most people would just say to send her to another doctor, or say to let her work through it on her own. Me and your mom were in the doctor camp for a long time. Having you find out that you could get through too her, it's been a blessing. To know that you're willing to share your home with her and make such big changes in your life to help her out, it really makes me proud of you James. Your mom is very proud as well. I'll be here tomorrow to help Dana finish pack up and help you guys load the truck, and we'll get her moved on over to your place so you can get the truck turned in.\" Dad said, finishing as mom and Dana came in with plates and dinner in hand. \n\nThey ate and talked, mostly about the move and how it would work. Mom asked about a housewarming party, but James declined, knowing that Dana wouldn't feel very comfortable with such fanfare even if it was just the family. They decided on James staying at the new house for the night to set up the bed while Dana stayed at mom and dad's to get an early start on packing. James and Dana weren't wild about spending another night apart, but it made sense. \n\nWhen dinner was done James and Dana gathered the dishes and took them to the sink, washing and drying as they had during James' vacation. It was a wonderful return to something they had discovered together, smiling and glancing at each other as they worked, standing close enough together that their arms kept constant contact with each other. When the dishes were done, James took a quick look to make sure that the kitchen and dining room were empty, and saw that they were. He gave Dana a quick kiss and whispered a quick 'I love you' in her ear, getting a smile and a giggle out of her. \n\n\"I want to do the dishes together in our home. I like this.\" She said, speaking softly, her hand resting lightly on his arm. \n\n\"I'd like that. I'd like that an awful lot. I've got to get going though, we have a busy day tomorrow, and I want to get an early jump on it.\" James said, his hand rubbing her side gently. Dana nodded and gave him a light peck on his lips before they left the kitchen. \n\n-- \n\nJames sat in the bedroom, sweat pouring from his body. The bed was finished, in place, and the sheets and blanket on it. He was exhausted and sore. It was close to midnight, but he was happy he had decided to go ahead and make the bed as well as put it together. One less thing to do tomorrow after the move. Looking at it, he decided that he really didn't want to sleep in it alone. No, he would wait until tomorrow to sleep in the bed. He would wait for Dana. He grabbed the spare blanket from one of the boxes and a pillow and walked out to the living room. With a heavy sigh, he flopped down on the couch. It was a little more comfortable than mom and dad's couch, but not much. ",
        "He set the alarm on his phone and set it on the floor next to the couch, settling down to call it a day. He was just about to slip off to sleep when he heard the phone ring. The alarm tone was the same as his ring tone, so at first he thought he had simply set the alarm wrong. With an irritated frown, he picked it up to reset the alarm. When he saw the picture of Dana, smiling shyly as she looked off to the side of the camera, her hair covering most of her face, he smiled as well and answered. \n\n\"Hello Dana.\" James said quietly, chuckling a little. \n\n\"Hello James.\" She answered, speaking in a low voice. \n\n\"I got the bed set up, and I got the sheets and stuff on it. I'm pooped. I'm sleeping on the couch tonight though. It didn't feel right to sleep in the bed without you here.\" He said, feeling a little foolish about it, feeling like she might laugh at him for being silly. When she answered, she surprised him, but he figured he should have realized how she would feel about it. \n\n\"Aw, that is so sweet. I hope your couch is better than the one here, though. I hate to think of you trying to move my junk with you all twisted up like a pretzel.\" She said, sounding like she just saw a puppy playing with a kitten when telling him it was sweet. \n\n\"This one is a fair bit better than mom's, I'll be fine. You don't have to worry about that. We'll have you moved tomorrow no matter how I feel. I don't care if I couldn't walk, I'd still be crawling out to the truck with a box roped to my back, I can promise you that.\" James said, knowing he would be sore for the first couple hours after waking up. It wouldn't be anything terrible, he had certainly worked through worse, but it wouldn't be pleasant. \n\n\"Okay, I would prefer you didn't do anything like that, but I am glad to hear it.\" She giggled. \n\n\"Once we get your stuff loaded, follow me over with your car so I can take the truck back. I'll need a ride back to my old place to get my car, then we can come home.\" James said, stretching out a little on the couch. His eyes were starting to feel heavy, and he knew he wouldn't be able to stay up much longer after the already long day. \n\n\"Of course.\" She said, with the sounds of her moving around clear through the phone. \"I just wanted to call to say goodnight. I'm laying down now; I'm pretty tired as well.\" She continued. \n\n\"I'm glad you did. Goodnight Dana, I love you.\" James said, smiling. \n\n\"I love you too.\" \n\n-- \n\nIt only took about four hours to load all of Dana's belongings. It took the longest to disassemble her bed and load it. James had caught himself at the last second before saying that they didn't need it, realizing that they would have to take it to keep their parents from wondering where she would be sleeping in the new house. He had come very close to slipping and tipping their hand, and he made a mental note to himself to be more careful about how they went about things in the future. They had been careful so far, and he thought that they had covered all the bases that they could, but something as simple as the bed had almost risked it all. \n\nWith dad helping, it went a lot easier than if it had been just James and Dana. Dana and mom had gotten most of her clothes and artwork packed the night before. James, Dana, and dad got everything else packed in the morning before turning to the furniture. It was just bed, dresser, desk, and nightstand, but it was still a lot of work. Dad and James focused on the furniture once everything was boxed while Dana started moving the boxes out to the truck. It gave dad and James time to talk while they worked. \n\n\"So how has it been working out? The whole work from home thing?\" Dad asked while they took the drawers out of the dresser and lifted it, making their way out the door carefully. \n\n\"Actually, it's working out really well. I'm usually ahead of schedule; I get all my stuff done well before my deadlines, which my supervisor loves about me. Now though, I'm way ahead of schedule. Since I don't have to deal with the two slackers on my floor trying to stop by my desk a few times a day to get me to help them meet their own deadlines, I'm just blowing through the stuff I have to get done.\" James said, smiling as he back down the hallway towards the stairs. \n\n\"Watch out, you're right at the first step. That's good, I'm glad it's working for you. I was worried that once you had some more freedom you would slack off a bit, get a little behind. I know I probably would. I'd end up spending most of the day in my underwear on the couch, and try to sprint through everything in the evenings. I don't think it would be a good idea for me to work from home, no matter how appealing it may be to me.\" Dad said with a chuckle as they walked down the stairs, taking it one slow step at a time with the heavy dresser. \n\n\"Dad, you have no idea how tempting it is to do exactly that. The first two days, I just wandered through the house, not doing anything. I was a slug. I cleaned and packed, but I didn't do much else, and I didn't exactly work my ass off. Once I realized that I was getting behind though, I jumped all over the stuff I had to do. I started forcing myself to wake up at the same time I always did for work. I wake up, I shower, I shave, I get ready like I have to go into the office. I mean, I don't dress in slacks and a button shirt, and I certainly don't wear a tie, but I get ready and I get dressed. Then I get some coffee and I get straight to work. I break at noon, then I would work on packing for a couple hours. After that, I would put in a few more hours working on accounts, then back to packing. I've gotten into a bit of a routine with it, and it's easy to stay on task now. I have a lot less distractions than I did in the office, so now that I'm not slacking off it's easy to keep up with it. I got a hold of the cable company that I used at the old place, and should have internet access at the new house by the day after tomorrow, so I'll have a day off. I let the office know, and they said it was fine, but I gotta say it's gonna feel a little weird after getting my routine down.\" James said as they walked up the ramp into the back of the truck, Dana standing by the bumper and watching to make sure they didn't trip over anything. \n\n\"Well that's great, I'm glad to hear you've picked up your mother's work ethic instead of mine. If you'd have gotten mine, you'd be screwed right about now.\" Dad chuckled as they set the dresser down and stretched their backs. \n\n\"Are you two all right? You look tired.\" Dana said, leaning over the ramp. Her face was concerned, and was looking at James, but dad answered. \n\n\"We're fine sweetie, your old man just isn't used to doing actual work. I've been stuck at a desk and walking around houses to show them for a long time. It's been a while since I bent my back to actual labor is all. How are you holding up, James?\" Dad said, his spine crackling a little as he finished stretching. \n\n\"I'm good, yesterday is just catching up to me is all. We'll get the rest of the big stuff loaded and take five. That should be all I need before we unload it all at the house. After we get the truck turned in, we can take our time getting everything set up. We aren't on any kind of schedule once the truck is done with.\" James said, his hands on his hips as he smiled at Dana. \n\n\"Okay. Just don't hurt yourselves. I would feel terrible if either of you did that while trying to help me, so don't do it.\" She said, relaxing a little, her frown easing. \n\n\"We'll be fine.\" Dad said, smiling as he walked down the ramp. \n\n-- \n\nWhen the truck was loaded, Dana gave dad a hug and a smile, looking like she might be trying not to cry. She had known that she was moving in with James for a while now, but the full realization that she was moving out of mom and dad's house was finally sinking in, and it had her a little shaken. \n\n\"Well, I guess this is goodbye for now, daddy. I'll call you and mom when we get back from turning the truck in. Thank you for helping us today, I really appreciate it. And thank you for understanding about the move, and for supporting me with it. It really means a lot to me.\" She said quietly, holding tightly to her dad. \n\n\"You're very welcome, honey. You know your mom and me just want to help you however we can, and that we'll always be right there at your back. If this helps you, then we understand and we're totally okay with it. I'm gonna miss having you around the house, but we'll be sure to visit and call often. Let us know how things are going once you and James get settled, okay?\" Dad said, stepping back from her, rubbing her arms, looking a little reluctant to let her go entirely. James could see the tightness in dad's neck, the twitches in his arms and hands, the way he leaned forward a little while talking; could hear the slight roughness and tiny, almost imperceptible hitches in his words, and figured that dad was close to tears as well. \n\nJames wondered briefly if dad had ever really expected Dana to move out, thinking about it while seeing dad like this. Dad had to have thought about it at some point, knowing the way Dana was. Did he think that Dana would simply remain at home, hiding in her room for the rest of her life? Or did he really think that she would one day begin to overcome her fears and insecurities on her own, and eventually move out of her own accord? James didn't know, and didn't think he could ever really make anything like an accurate guess in one direction or the other. He thought he might ask dad about it sometime, once things had started getting into a regular routine and settled down. \n\n\"I will. Tell mom that I love her and that I'll talk to her soon, if you see her before I call tonight. I love you daddy.\" Dana said, her eyes steady on dad's. \n\n\"I'll tell her. I love you too, sweetie.\" Dad said, smiling. James gave his dad a brief hug and said goodbye before climbing into the truck. Dana got into her car to follow him and they were off. \n\nThey got to the house and started unloading. Dana and James were excited, moving fast and working hard. When all the boxes were in, they moved the furniture. It was a little slower going with Dana helping instead of dad, but it went quickly enough with no stairs to contend with. Once they had everything inside, they took a break. James plopped down on the couch with a heavy sigh, Dana sitting next to him with a bit more grace and less flopping. James put his arms around her and held her tight, closing his eyes and burying his face in her hair at her neck. Dana gave a happy little sigh as he did, her hand on his chest. \n\n\"It feels good to be home.\" James whispered, his hands rubbing gently on her back. \n\n\"Yes. It feels very good. This is right, this is where I belong. This is where we belong.\" She said, her hand sliding up to his neck. James pulled away from her enough to look into her eyes. \n\n\"Exactly where we belong. Dana, I have something for you. I picked it up while I was waiting for the house to go through. Wait here a minute.\" He said, smiling. Dana nodded, wondering what he would have gotten her. \n\n\"You didn't have to get me anything James, I have everything I need now. You know that.\" She said as he walked into the hall. He returned from the bedroom a moment later, his smile wider, and stood before her, holding his hand out to her. She reached out and took it, looking a little confused, and stood up. She could see that he was very nervous despite his smile, that he was tense all over, that his neck and shoulders were tight as a drum. Dana got a little nervous as well, wondering what had gotten him so worked up so quickly. James just looked at her a moment, mulling over how to go about what he wanted to do before he spoke. \n\n\"Dana, you know I love you. I love you more than anything. We have our home now, we're starting our life together, and we're going to be with each other forever. I know that it can't be official for anyone else, that no one else can even know, but we know, and I want it to be official for us.\" He said, his voice wavering a little. James got down on one knee before her and pulled a ring from his pocket, holding it out to her. It was a white gold band with a small, round ruby set in it, surrounded by small swirls of cunningly twirled yellow gold. \n\nWhen James knelt down, holding her hand, Dana gasped as she realized what he was doing. Her eyes went a little wide and the hand that wasn't holding his went to her mouth, covering her shocked smile. As he spoke, a few tears of absolute joy slipped down her cheeks. \n\n\"Dana, will you be my wife?\" James asked quietly, watching her face closely, his hand holding hers tightly. Dana nodded immediately, squeezing his hand back fiercely. \n\n\"Yes, yes James, of course I will.\" She said when she could speak again, her voice rough with emotion, her words broken by a small laugh of happiness. James took her right hand and slid the ring on her finger. She looked a little confused, but James explained. \n\n\"I figured it was best to put it on your right, that way it didn't look like a wedding band to others. I thought a ruby would be more fitting than a diamond for us as well, since blood is thicker than water and all that.\" He said quietly as he stood up. Dana wrapped her arms around him kissed him, holding on to him tight and kissing hard. James held her and let his tension and anxiety over asking her just float away. He had been afraid of the moment since he first had the idea, and it had only grown when he had bought the ring. Now that the moment had come, all of his fear was gone, replaced with bliss. \n\nWhen Dana pulled away from him, she kept her face close to his, smiling and resting her forehead against his. \n\n\"It is official, you know. To all the people that matter, it is. I'm yours, James. I always will be.\" She said, pecking at his lips between sentences. James smiled wide at that. \n\n\"And I'm yours, for the rest of time.\" He said, his hands rubbing in slow circles on her back. \n\n\"James?\" Dana said quietly, her hands grabbing onto his shirt lightly, pulling him a little closer to her. \n\n\"Yeah?\" \n\n\"Love me.\" She whispered, tugging at him. James kissed her, his hands pulling her as close to him as they could. She moaned softly as one of his hands slid lower down her back, pulling her hips to his. He stepped back from her and took her hand, and the two of them walked to the bedroom, looking at nothing but each other. \n\nDana stepped into the bedroom and turned around, watching James close the door. She was excited, her heart racing. She had James in their own bedroom, with no fear of anyone walking in on them, with no fear of being interrupted or judged. They were free to do as they wished, however they wanted to. They were free. \n\nJames stepped up to her and put his hands on her hips, kissing her as she tugged at his shirt. They undressed each other, taking their time, enjoying it. Their lips only parted to let their shirts be pulled over their heads. When they were done, Dana pulled on James' hips, leading him to the bed behind her. She sat down, looking up at him with a smile, the corner of her lip caught in her teeth. \n\n\"You're beautiful. You're perfect, Dana.\" James whispered, leaning down to kiss her. Her hands slid up his sides slowly, making their way to his back. James cupper her cheek gently, his fingers sliding into the hair at her temple, his thumb rubbing lightly just under her eye. Her fingers tensed and she dragged her nails down his back lightly, not enough to hurt but enough to make his muscles tighten back there. James smiled and straightened up, climbing onto the bed while Dana slid back onto the bed completely, laying on her back for him. She held her arms up, welcoming him into her embrace as he kissed her again, wrapping his own arms around her. Her legs wrapped around his, holding him tight to her. She could feel him against her mound, stiff and ready, and it made her smile. \n\n\"Love me James. Make me yours.\" She whispered in his ear, rolling her hips against him. James moaned softly at that, kissing her neck and nibbling at her ear. He lifted his hips enough to line himself up and stopped, his head just starting to part her. \n\n\"Stay with me, please.\" He whispered in her ear, kissing her neck again. \n\n\"I will. I always will.\" She promised, her arms tightening around him. James pushed in slowly, taking the time to savor every last bit the feeling of entering her. Dana moaned as he did, no longer concerned about keeping her voice down or worried about anyone hearing them. They started a slow pace together, Dana matching James' movements with her own, her moans coming in steady waves. She pushed them into a faster pace, urging James on with her hips and her legs, pulling him to her with her heels in his thighs, using her body to demand that he hammer into her harder. James obliged happily, giving her everything she wanted. His mouth moved from her neck to her mouth, needing to kiss her, needing to taste her. Dana wrapped an arm around the back of his neck, locking his head to hers, her other hand still on his back, her nails digging into his flesh hard. Their breathing grew more and more ragged, their kissing breaking up as they started panting. The pace had turned almost manic, James pistoning into her hard and fast, Dana meeting him in each thrust with a small whimper of pleasure and purpose. She could feel his cock getting harder, and he could feel her muscles starting to spasm. James started to give small moans and grunts, his body unable to continue giving and receiving the intense pleasure for much longer. Dana's whimper turned to long moans and sighs as her own thrusts became harsher, more erratic. She started calling James' name over and over, her voice rough and uneven, as her climax overtook her. As soon her slit started clamping down on his dick, James couldn't hold out any longer. He gave a short, gasping grunt and thrust hard into her one more time, his dick jumping and bucking as he came. Dana almost shouted when he did, her legs and arms clamping down on him as she felt the warmth fill her. \n\nThey lay together as James finished, both of them gasping, Dana kissing at his neck and biting at his ear. She worked her way to his mouth and kissed him hard, her mouth hungry and passionate, her hips still rolling slowly against him. James didn't think it was possible to feel better than he did in that moment. When she released his mouth and let her head drop back down to the pillow, she was smiling wide. James smiled back, still feeling a little out of breath. \n\n\"That's what I want. I want that every day please.\" Dana said softly, her hands rubbing along his sides gently, a sharp contrast to the digging nails and death-grip like clamping that had been holding on to him moments ago. \n\n\"I'll give you whatever you want, whenever you want it.\" James said with a little chuckle, pecking at her lips. He slid off of her, lying next to her and pulling her into his arms. \n\nDana lay against James, her fingers making their slow circles on his chest. She paused to look at the ring now on her finger, studying it carefully. She used her thumb to nudge it a little, rolling it side to side on her finger. After a moment, she looked up at James. \n\n\"What about you? Are we going to get a ring for you?\" She asked, her fingers going back to their circles. \n\n\"I was thinking about it. Maybe a simple band, something plain. I didn't know if you wanted to look with me or not, so I decided to wait. I didn't know how you would react to your ring, much less one for me.\" He said. \n\n\"You actually thought I wouldn't be happy about it?\" She asked, frowning a little. \n\n\"Well, it's a big thing, you know? I didn't know if you might freak out or something if I asked you to marry me. I was pretty scared about it, Dana. I didn't want to frighten you with something so big, so soon after the move, but I really couldn't wait either. I don't know, I was excited and nervous and everything all at once.\" He said, trying to explain the conflict of emotions that had rolled around in him since he had started thinking about it all. ",
        "\"I'm not afraid when I have you. You know that. You don't frighten me. You take my fears away, James. Giving me this; the ring and everything it means, it doesn't scare me. It makes me free. It makes me know that I have you, and if I have you, then I'm free. That isn't scary, that is wonderful.\" She said softly, reaching up to touch his cheek gently, her fingers light as a feather on his skin. James smiled at that, happy to hear it. \n\n\"Good. Then we'll go find me a ring together. We can go out tomorrow, if you like. I would love to have a match for yours.\" He said, rubbing her back slowly. Dana smiled, nodding. \n\n\"I'd like that.\" She said, climbing up to straddle him, leaning down to kiss him softly. The kiss lingered, growing from a small peck to a longer, more intimate kiss. His hands rested lightly on her waist, loving the feeling of having her on him and in his hands. She sat up a little and smiled at him, her hands on his chest. \n\n\"No judgment, right?\" She asked, her smile fading a little. \n\n\"No judgment. Not now, not ever. I'll never judge you Dana. I love you, you're safe with me.\" James said. He was worried that she might be scared about something, judging by the way she had tensed up a little on him. Her hands had gone still, her legs holding tight to him on his waist, her breathing a little rough and sharp. Her neck was tight and her shoulders stiff. \n\n\"James, I, I don't,\" She whispered, her hands starting to shake a little on his chest. He could see that she was close to tears, but he couldn't figure out why. He pulled her back down and wrapped his arms around her, holding her tight. He felt the first tears on his neck as he rubbed her back. \n\n\"What is it Dana? Whatever is wrong, we can take care of it together, I promise.\" He whispered in her ear, running a hand through her hair. She was quiet for a moment, just crying silently while he held her and waited. \n\n\"James, I'm scared. We're all alone now. We're all alone and I'm scared and I don't understand. I thought that I wanted exactly this, but it scares me. I don't know what to do, I don't know what I'm supposed to do.\" She finally said, one hand slipping to the side of his neck, pulling him closer to her. \n\n\"You only have to do what you feel. That's all. We aren't alone, we're together, just like you said. I have you, and you have me. It may feel different than when we were at mom and dad's place, but you'll get used to it in time. All we have to do here is be ourselves, how we feel. That's all. I just want you to be you. That's all. All I want is you.\" He said, his voice quiet and soothing as he ran his hands along her back and through her hair. He thought that moments like this were bound to pop up here and there, that they would be unavoidable. He would just have to be there for her, to give her the reassurance she needed to get through them. It was something he fully intended to do for her, to make sure that she was okay with everything going on. \n\n\"Is it that easy? It can't be. There has to be more to it than that.\" She said in a rough whisper, her lips tickling his neck. She could feel how relaxed he was; his slow pulse and his slow hands doing a lot to calm her down. Her fear was deep and gripped her tightly, but it was having a hard time standing up to the influence James had on her. Especially now, the way they were. With him holding her, soothing her, his hands moving in a hypnotic and relaxing pace on her body, it was hard for the fear to remain the way it was. \n\n\"It is that easy. You'll see. Trust me. I'll be here with you the whole time. You can hold my hand, put your arms around me, kiss me, talk to me; anything you want to make you feel better whenever you want it or need it.\" He said, smiling a little. She turned to look at him, her gaze sharp and focused, her eyes searching his. She saw only truth and sincerity in his face, and love. Plenty of love. Dana gave him a little smile, feeling a bit better about everything. \n\n\"Okay. I'm going to want to hold onto you a lot. You know that, right?\" She said, her finger s rubbing lightly on his neck as she spoke. \n\n\"I know, and I want you to. I want you to hold me whenever you can.\" James said, squeezing her tight. Dana giggled a little and kissed him, happy all over again. James thought about her previous lack of physical contact again, about how it must have been going so long without anyone touching her. He still couldn't imagine what it must have been like, not really. He knew that dad wasn't one much for hugs normally, and that mom tried to give Dana her space, tried to be nonintrusive. Dana was starved for physical contact, and had only started getting it regularly since they had begun their more intimate relationship. He would see that she had all the contact, all the touching, all the holding, all the hugging, all the kissing, all the everything she needed or wanted. He would make up for the deprivation as best he could. \n\nDana just held him, her face in the crook of his neck, kissing lightly there, her hand still rubbing lightly on the other side of his neck. James kept his hands moving on her, letting her know that he was there for her and always would be with just his hands. \n\nDana slid off of him and curled up next to him, pulling his arms around her. James held her, his chest against her back, his hands on her stomach. He buried his face in her hair, enveloping himself in the smell of her, his legs tangling up in hers, as he felt every inch of her and the way her body responded to his. She gave a soft, slow sigh as her hands ran down his forearms to rest on top of his hands. A happy, contented sigh that mirrored the relaxation he felt throughout her body. He felt like he did back when they had first spooned like this, showing her what it felt like to lay with someone. He looked forward to many, many nights spent sleeping like this. \n\n\"James?\" She asked softly, smiling a little. \n\n\"Yeah?\" \n\n\"We're free now.\" She said, squeezing his hands and pressing against him a little tighter. \n\n\"Yeah.\" He answered, smiling as well. \n\n***** \n\n++After some trouble with medications not playing nice together, there were some problems with seizures and some other, just as unpleasant side effects. It took quite a while to find a combination of medications that did what needed to be done without leaving me any more of a wreck than I already am. Now, I have a nearly completely revamped medicine cabinet and am still learning how all of it makes me operate throughout the day. I am also dealing with how it affects my concentration, my focus on writing, and how well I can sit and create make-believe worlds while trying to remember to take the damn things. Getting back into a story as involved as RO (you wouldn't believe the amount of pages of notes I have written about how Dana and James are built as characters) wasn't easy, and that didn't help. It took a lot of trial and error to find out how Dana and James acted again in writing them (if I even have, they still feel blocky and strange to me now, when I write them), but I wanted to see this one through to the end and get what I had in mind out and posted. I didn't want this to languish unfinished, and I didn't want to leave everyone that enjoyed the story to wonder what might have been. So, here it is, in the form it took due to time, circumstance, and need. The storyline is the original framework; the way it is built is the construct of circumstance. I will try to continue to write; I don't think I could stop that now if I tried, really. I don't know how much I will be writing, or if it will all be erotica, but I will continue to write. You have all made sure of that, due to the feedback I receive here, on Lit. Writing has been an off and on hobby of mine for a long time, but nothing I ever took seriously or showed to anyone before I started posting here. When I saw that people actually liked to read what I write, it made me realize that perhaps I am capable of writing something that means more than just an idle story to entertain myself, alone. True, I had only begun writing erotica since I started here, but it gave me a lot of confidence in writing in a lot of other areas since then. So it was all of you who made me find something that keeps me going. Whether you know it or not, you've made my life far more livable simply by reading. For that, I could never thank you enough. wD++"
    ],
    "authorname": "wakingDown",
    "tags": [
        "brother",
        "sister",
        "shy",
        "fear"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/reaching-out-ch-03"
}