{
    "title": "An Appointment with Dr. Cooper",
    "pages": [
        "This story contains themes of: medical fetish, piss, anal, FFM threesome, lactation. I will be continuing my other story series, but I wanted to write something about something else that I like, medical fetishes. Enjoy!\n\n______\n\n\"Hello, Specialty Medical Associates, how can I help you?\" a friendly woman's voice said to Jessica on the other side of the line. \n\n\"Uh, yes, hello, I would like to make an appointment please,\" she said, nervously. \n\n\"Sure, hon, are you a new patient?\"\n\n\"Uh, yes, yes I am.\"\n\n\"Okay, well who would you like to see and what are we seeing you for?\" Jessica heard the fast clacking of a computer keyboard in the background.\n\n\"Well, umm, my name is Jessica Porter and I'd like to see Dr. Cooper please,\" she replied. \n\n\"Ahh, okay, Dr. Cooper is booked out for at least a month or so, can I ask what you are seeing him for?\" the woman said. \n\n\"Um, it's for, uh, well... I need a special, um, a special\" she paused, suddenly wanting to abandon her quest, her nerves getting the best of her. \n\n\"Are you calling about a special pelvic adjustment?\" the woman asked, with a knowing tone in her voice. \n\n\"Uh, yes, actually, yes I am. Is this the right Dr. Cooper?\" Jessica said, in absolute shock that the woman knew what she was looking for. \n\n\"Hah, yes, yes this is the right Dr. Cooper, hon. Give me a second - that'll be in another appointment book. Are you okay with evenings or a weekend?\" she said. \n\n\"Yes, yes absolutely. That works better actually, um, yes.\" she stammered, still in shock. \n\n\"Okay hon, how about this Thursday at 7pm?\" she asked.\n\n\"Oh, wow, um, yes, please, yes that will work,\" Jessica said. She couldn't believe it was happening so fast.\n\n\"Okay, well I've got you down Miss Porter. Can I get an email? Dr. Cooper has very specific home prep instructions for this kind of visit. You must adhere to them strictly, or you'll be turned away. He's a busy man and doesn't have time for anyone messing around, okay?\" the woman said, sternly but still with a knowing tone to her voice. She was clearly in on it and Jessica found this sort of exciting. She gave the woman her email, feeling her heart beat faster as she did. \n\n\"Got it. Check that email and we'll see you on Thursday. Bye hon,\" she said, sort of sweetly. \n\nAs she hung up the phone, Jessica's heart was pounding even faster and her pussy throbbed. What she had just managed to do was score an appointment with perhaps the most exclusive sex fetish doctor in the state. She was new in town and had just gotten into the local scene - she started visiting some BDSM bars and had gotten invites to a few local fetish play parties. She had been having fun and pretty soon heard about a doctor who, if you called and asked for the right thing, would fulfill any medical fantasy of your choice - within reason of course. She had always had a medical fetish, but was always disappointed in her play partners. Jessica was a nurse and could never, ever get over how cheesy the play was. No one used the correct terminology and no one really had the stern bedside manner she had been looking for. She wanted something that felt absolutely real, but was all about sex. \n\nJessica heard about Dr. Cooper from a woman she had just slept with after meeting at a club. Her name was Claire and they had fucked for a few hours and were up eating midnight snacks and her place (to fuel up for more fun) and they started asking each other about their fantasies and fetishes. They found out they both had a thing for doctors - which was one of the reasons Claire went home with Jessica in the first place. She told her all about how she had found out about a code word to give to this doctor's office and he would bring you in after hours to do whatever you wanted. For her, she said was having \"severe gag reflex issues,\" and she scored an appointment with Dr. Cooper. At her appointment, or really her play session, he thoroughly examined her throat with his fingers and then fucked her face with his huge cock for hours. It sounded really hot. Jessica was so turned on and so interested, she grilled Claire more about it, which is how she heard about the \"special pelvic adjustment\" option. Apparently, a friend went in for that before Claire visited. It all seemed like a special, sexy game of telephone to get an appointment with him, where you had to hear the right thing from the right person to know how to get in to see the doctor. She was assured that he was sexy and a total professional, so Jessica decided to go for it. \n\nEven though she was a bit nervous, hearing that her date had a good and safe time with the guy gave her a sense of confidence in the matter. She started to fantasize what it would be like when she heard the notification for her email and sure enough, it was her pre-appointment instructions. She eagerly opened the email and downloaded the attachment:\n\n\"Good evening Miss Porter -\n\nWe are happy to have you as a new patient at Specialty Medical Associates. For your appointment with Dr. Cooper, it has been requested that you do the following at home prior to coming in:\n\n- Patient must arrive showered and clean. \n\n- Pubic area must be freshly free of all hair (this includes around the patient's anus).\n\n- Patient must arrive with a full bladder, if not the appointment will be delayed in order for the patient to drink enough fluids to induce expression of a large amount of urine. \n\n- Patient must perform at least two full enemas at home. Failure to do so would incur an additional charge for in-office administered enemas. \n\n- Patient must inform the receptionist of any allergies (specifically to lubricants or latex) or special concerns upon arrival. \n\nAfter hours parking is available in the lot behind the building. Thank you and we look forward to seeing you Thursday at 7pm.\"\n\nJessica's pussy throbbed almost uncontrollably at the site of the email. THIS is what she had wanted for so long, something real and official and medical. She rushed off to the bathroom to shave her pussy even though the appointment was two days from then. \n\n______________________\n\nThe day of her appointment had finally arrived and Jessica practically sprinted out of work at 5pm, not stopping to say goodbye to anyone. She got a midday shift and was able to request to come in for an overnight the next day to allow for plenty of play time this evening. She sped home and tore her clothes off as soon as she arrived to her apartment. She jumped immediately into the shower and began to scrub herself down. Her pussy had been smooth for days, but she touched up her bikini line just in case. After she felt clean, she turned off the water and stepped out. After she toweled herself off, she began to fumble around with her enema kit. She hadn't used it in ages because she hadn't gotten fucked in the ass in awhile. She had only really been sleeping with women since she moved to town and hadn't really thought about it much. As she filled the bag with warm water, she could feel her pussy begin to drool between her legs. She was so fucking horny already, she couldn't believe it. \n\nAfter the bag was full, she attached the rubber hose and hung the bag from a hook on the shower rod. She hadn't done this in so long and she forgot how hot the whole process was. The bathroom was still warm and steamy from her shower and her pussy was already on fire. She squirted a small glob of lube onto her fingers and rubbed it generously over the nozzle of the hose. She bent over and as she stuffed the slippery nozzle into her asshole she let out a small moan of pleasure. Her ass was no stranger to invasion - she absolutely loved getting fucked in the ass and anal play. She shoved it in a few inches and clenched it with her sphincter muscles to savor the feeling of the small rubbed invader. Satisfied that it was secure, she reached up to let the water flow into the tube. \n\nShe laid down on the floor of her bathroom, a top a fresh towel, on her side with her legs up to her chest. She began to feel the water invade her bowels and stretch her insides. It was warm and she loved the feeling. It moved slow and she felt it start to slosh around as she adjusted her body to allow the rest of the water enter her. She was beginning to feel the familiar cramping as the bag emptied. She reached behind herself and pulled the nozzle out with a wet pop. She clenched her anus tight and laid for a few minutes. She began to caress her engorged belly, feeling the stretch of the water in her bowels. She was thrilled that it was requested of her to do this because it meant that her rectum was fair game for examination by Dr. Cooper. She held it for a good few minutes before she let it out in the toilet and repeated the process for the second enema. On the second enema, she laid on her back and savored the bump in her belly - she was positively pregnant with water and she smiled as she realized if she were lucky to score a follow up appointment, she would definitely be \"forgetting\" to do these at home. The thought of feeling this way while up on an examination table, underneath a dressing gown made her pussy throb harder than it had in ages. With a loud moan, she let out the second enema into the toilet and smiled. She felt clean and ready to go and began getting ready for her appointment. \n\nShe wasn't too concerned with what she was going to wear because, hopefully, she wouldn't be dressed long. She focused more on applying just a little bit more makeup that she usually would and doing her hair nicely. Even though she knew it wasn't, it still felt like a date. She wanted to look nice, especially if the doctor ended up being as sexy as her new friend said he was. She was sure that he saw many \"patients,\" but she wanted him to remember her as someone special, if at least just one of the hotter ones. She put on a simple pair of jeans and a tight top with a deep v-neck. She was a solid C cup and wanted her cleavage to look good. As she got ready, she drank cup after cup of water and hot tea, heeding her other request to arrive bladder full. She was also into water sports, so she hoped that this what that was about. She looked at the clock and it was already 6:30, so she ran out the door eager to arrive early. \n\nAs she pulled up to the building, it was nearly dark. She pulled into a spot under the street light, assuming she would be leaving pretty late. She followed the side walk around the side of the building and was startled to see a woman waiting at the door for her. She opened it to let her in and said, \"Miss Porter, I presume?\" in a sultry voice she recognized from the phone. \n\n\"Uh, yes, that's me,\" she answered, taking in the sexy brunette in front of her. She was wearing tight jeans and a low scoop neck top, not exactly business casual, but this wasn't an actual appointment after all. \n\n\"Right this way. I'm Alexa, I'll be assisting Dr. Cooper tonight. Follow me.\" \n\nJessica's heart leaped into her throat at the thought of this sexy woman helping the doctor with her exam. She followed her closely and couldn't keep her eyes off her perfect ass in her tight jeans. Her pussy was getting wet just watching her. Of all the things she liked about herself, Jessica loved the fact that she was into both men and women the most. She got the best of both worlds and loved that she was able to find pleasure in so many different kinds of bodies. \n\n\"Take a seat and fill out the forms on the clipboard,\" Alexa said, pointing to the small couch in the waiting area. She took a seat and looked at the forms. She picked up a pen and began to fill it out as she heard Alexa pick up the phone and say, \"Dr. Cooper, your seven o'clock is here to see you.\"\n\nThe forms were surprisingly standard, until she got to the second page. The questions and [Jessicas answers] read: \n\nAre you satisfied with the capacity of your vagina? Y/N [NO]\n\nDo you wish to be able to accommodate more in your vagina during intercourse? Y/N [YES]\n\nHave you had anal intercourse? Y/N [YES]\n\nIf so, are you satisfied with the capacity of your anus and rectum? Y/N [NO]\n\nDo you wish to be able to accommodate more in your anal canal during intercourse? Y/N [YES]\n\nDo you enjoy rough intercourse? Y/N [YES]\n\nDo you prefer vaginal or anal intercourse and why? [ANAL because it feels more forbidden and nothing feels as good as my anus being stretched to its limits]\n\nDo you enjoy your breasts being touched during intercourse? Y/N [YES]\n\nDo your breasts lactate? Y/N [NO]\n\nIf no, are you interested in inducing lactation for the purposes increased pleasure during sexual play and intercourse? Y/N [YES]\n\nDo you enjoy receiving oral sex? Y/N [YES]\n\nDo you enjoy giving oral sex to a man? Y/N [YES]\n\nDo you enjoy giving oral sex to a woman? Y/N [YES]\n\nDo you have any hard boundaries during intercourse? [YES - scat play and anything too violent]\n\nDo you have a safe word you use with partners during intercourse? [Not officially, but I will tell someone to STOP if I am uncomfortable]\n\nShe couldn't believe it. It was EXACTLY what she was looking for, and then some! She had never considered getting her breasts to lactate. She had watched plenty of porn about it before, but she was excited about the possibility of it all, so it was a welcome surprise. \n\nShe finished the forms and brought the clipboard up to Alexa. She smiled as she took the forms from her and said, \"perfect, follow me,\" as she gestured to the door. She followed her down a hallway and entered a dimly lit room on at the end on the left. Mood lighting - how perfect. She was excited about an exam, but not for the florescent lighting that usually comes along with that in a doctor's office. She gets enough of that at work.\n\n\"Miss Porter, please remove all of your clothing and put on the gown on the table. Take a seat and Dr. Cooper will be right with you.\" she said, with a smile and wink as she closed the door behind her. \n\nJessica began to remove her clothes. She felt her pussy begin to throb as she slipped out of her jeans and panties. She tucked her shoes and bag away, putting her jeans and shirt on top of them. She unhooked her bra and lightly massaged her breasts, rubbing her hard nipples thinking about them maybe lactating soon. Imagining her breasts swollen with milk actually got her pretty horny. She slipped into the gown - it was all black, how incredible! Not white or printed like a regular gown. If it wasn't already before, it was pretty obvious what this particular room was designated for. Along with the lighting, it was plenty warm so she didn't feel cold, which just increased her arousal. She perched on the edge of the table and eagerly awaited her exam. \n\nShe heard a light knock on the door and the door slowly opened. \"Miss Porter?\" said a deep, sexy voice. Dr. Cooper entered the room and she took him in: he wasn't as tall as expected but he was devastatingly handsome, and probably about 45. He wore black glasses, had a trimmed dark beard with slight flecks of grey, the same on his temples with a full head of hair. He was wearing a white coat, blue collared shirt, black tie, and tight tan slacks. He was definitely a real doctor, she could tell, and this made Jessica go even more wild with arousal. He had some muscle too - he clearly worked out and she could not believe the absolute jackpot she just hit with how hot this man was. \n\n\"Uhh, yes, hello, Dr. Cooper, right?\" she said, picking her jaw up off of the floor. \n\nHe smiled and reached his hand out to shake hers and said, \"yes, that's me. Dr. Benjamin Cooper. How are you this evening?\"\n\n\"Oh, good, uh, fantastic actually,\" she said, stammering with excitement. \n\n\"Good, nothing bothering you? No pain you need to tell me about?\"\n\n\"Nope, I'm allllll good,\" she said, feeling like a dork. \n\n\"Good. Let's take a look at your chart,\" he said, sitting down. He rolled his chair closer to her and peered down at her forms. \n\n\"Hmmmmmm, okay, 32 and healthy, you work out, which I can already tell by looking at you. You're a nurse? Well, it's nice to have another healthcare professional in the room!\" he said, smiling as he looked up at her over his glasses, taking her in. \"Looks like you're sexually active, which is, of course, great. Interested in working on both vaginal and anal capacity, very good. Enjoys oral, excellent, and interested in perhaps inducing lactation. Did you have any questions about that? I know this is a pelvic appointment, but I've found that often patients are interested in breast exams at the same time, so I've started to include that on the forms.\"\n\n\"Oh, yes, I mean... I've always wondered how that works. I mean, I know how it works medically, but just not, well, like that. I've been, uh, interested in it for a bit, but just, well, I don't get how it could work without, you know, being pregnant or taking a bunch of hormones, I guess? I mean, I'm a nurse and understand that lactation can be induced, but never thought about it for this purpose.\" she responded. She was thrilled at his utter professionalism. It was such a huge turn on - absolutely no cheese or porn acting, just the real thing. THIS is what got her off. \n\n\"Of course, yes, well I've actually sort of devised my own method that I've found quite successful. In fact, we could even have you dropping your first small amounts of milk by the end of this session if you'd like. It's a combination of a mild hormone cream and mechanical pump stimulation of the breasts and nipples.\" He said, standing up and moving toward her. \n\n\"Oh, wow, well, yes, of course. Any side effects?\" she asked, feeling her breath quicken as he moved closer. \n\n\"Only mild irritation from the cream has been reported and, of course, soreness from the pumping, which is to be expected. That soreness, however, is usually enjoyed by patients experiencing it. You can continue lactating as long as you like, as long as you continue the regime of pumping and expressing regularly to encourage your body to keep up milk production. If that is the case, we can book you a follow up appointment to handle that if you are letting down more milk than expected and you are unable to find a suitable outlet. Does that sound okay, Miss Porter?\"\n\n\"Oh, yes, yes, that would be amazing, please, yes,\" she said with excitement, feeling herself getting breathy with arousal. \n\n\"Great, well, let's get started with the exam shall we? Please lay back on the table Jessica, is that okay if I call you Jessica?\"\n\n\"Yes, please, doctor, Jessica is just fine,\" she said as she laid back on the table. She heard the crinkle of the paper beneath her and her pussy began to throb harder. \n\n\"Great, Jessica, go ahead and move your buttocks down to the edge of the table and I will get your feet up into the stirrups,\" he said, as he pulled them out of the sides of table, latching them into place. She obeyed the request and felt a slight breeze on her sopping wet pussy as she spread her legs to rest in the stirrups. They were covered in black velvet for comfort, another tell tale sign that this was Dr. Cooper's special examination room. \n\n\"Okay, since we are inducing lactation, I will start with that cream to get the process started,\" he said as he rummaged through the cupboard to find it. He reached for a box of black gloves and pulled them onto his large hands with a slight snap. He set the pump bottle of hormone cream onto a rolling table and brought it with him to the left side of Jessica as she lay on the table. She was spread eagle in the stirrups in her black gown. \"Alright, I will need to exam your breasts before application,\" he said as he slowly pulled her gown down, folding it over her waste to reveal perfect, perky C cups. Her nipples were rock hard, eager for his touch. \n\n\"Excellent shape, perfect areola. I'll need to massage them before the cream is applied. This allows for better absorption and begins to stimulate your milk glands, as well as checks for any abnormalities or lumps,\" he said. Jessica nodded and felt her pussy nearly explode as he started to gently massage and palpate her breasts. With his right hand, he began to sensually squeeze and rub at her left breast, firmly palpating the entire globe of flesh. He tweaked her nipple and began to firmly squeeze it with his gloved hand, at which she let out an involuntary moan of pleasure, \"Goooood, good, your nipple is nice and responsive\" he said as he listened to her moan. He palpated the entire breast a few more times before moving on to her right. He began the process again and Jessica moaned as he pinched her other nipple firmly. ",
        "\"Excellent, your breasts feel good. No abnormalities and I will be surprised if we aren't able to see your first milk by the end of tonight.\" He said, as he began to pump cream into his hands. He rubbed it generously over each of her breasts, massaging them as he did so. \"I need to massage this in for at least three minutes, Jessica, to ensure proper absorption,\" he said. He began a sensuous routine of palpating and squeezing and nipple tweaking. He had both hands on her breasts and she was more aroused than she had been in years. She always loved having her beasts played with, especially her nipples, but it had never been done so methodically. She began to moan louder as he continued his process. He massaged and rubbed and massaged, lulling her into a sense of warmth and security. She wondered if her pussy was actually dripping onto the floor as he concluded his breast exam. \n\n\"Excellent, that should start working right away. You might feel a slight tingling and slight soreness as your breasts begin to swell with milk, which is all norma,\" Dr. Cooper said as he pulled off his cream covered gloves. He walked over to her chart and scribbled something down. Jessica was breathing heavily and her breasts started to tingle as expected, especially her nipples. It was incredible and she couldn't wait to be milked later on.\n\n\"Perfect, let us proceed with your pelvic examination,\" Dr. Cooper said as he took off his white coat, hanging it on the back of the door before he rolled up his sleeves. He pulled on a fresh pair of gloves and sat down on his rolling chair, positioning himself between Jessica's legs, still spread eagle in the stirrups. \"Are you comfortable If I remove your gown now, Jessica?\" he asked. \n\n\"Mmmmm, yes doctor,\" she moaned. Her breasts were on fire with tingling pleasure and her body was electrified in arousal. Being naked in front of this perfectly gorgeous man was what she wanted most in that moment.\n\nHe smiled as he pulled her gown off and tossed it aside. Her pussy was before him, perfectly hairless and glistening with arousal. Spread apart, Dr. Cooper could see the folds of her labia and her engorged clitoris, as well as the pinkness of the opening of her vagina. He could also see the perfect pucker of her perfectly shaved clean asshole. \n\n\"Alright Jessica, I'll be starting with your pussy - is that okay if I refer to it as such?\" he asked. \n\nSurprised, she responded, \"Oh, yes, call it whatever you want, doctor.\" She was actually happy at this, because vagina was almost too clinical, especially when she was so aroused. \n\n\"Perfect, I'll start my outer exam first,\" he said as he began to slowly caress the folds of her labia with this gloved hands. He gripped the sides of her pussy lips firmly with his hands as he began to rhythmically palpate the flesh between her legs. \n\nJessica began to lightly moan as she felt his large, strong hands on her. He then began to run his first two fingers of his right hand up and down her sopping slit, slowly massaging the hood of her clitoris, up and down, up and down. \"Ohhhhh doctor,\" she found herself saying. \n\n\"Very good, Jessica. Everything feels excellent so far, just relax,\" he said as he continued to massage her wet pussy slit. He then swirled his index finger in light circles around the tip of her clit. It was rock hard with arousal and Jessica's legs began to shake at this stimulation. \n\n\"Ohhh, doctor!\" she said. She felt electricity shoot from between her legs, radiating throughout her body. She found herself starting to massage her breasts, feeling how they had already began to swell from the cream. \n\n\"Very good Jessica, keep massaging your breasts, that will help awaken your glands,\" Dr. Cooper said as he continued to massage her clit. \"Everything feels good externally, time to move inside. It looks like there is little need for lubricant just yet, so remain relaxed.\" \n\nWith firm pressure, her pushed his index finger inside of her throbbing cunt. Jessica moaned loudly as she felt his thick, strong finger invade her vaginal canal. He pushed in firmly until the entirety of his finger was enveloped by her wetness. He then pushed up and began massaging, searching for her G spot.\n\n\"Ohhhhhh my god!\" she nearly shouted, indicating that the doctor had located it. \n\n\"Excellent,\" he said as he pulled his finger out. \"Now let's begin to work on your capacity, Jessica.\" Dr. Cooper began to slowly push two fingers inside of her. The slipped in with ease as he began to slowly saw them in and out of her fuck hole. \"Perfect, you handle two fingers with ease, let's increase the stretch,\" he said as he pulled out to add a third finger. \n\nHe pushed three fingers inside of her, feeling her stretch slightly more. \"Ohhhhh fuuuuck\" Jessica said quietly, enjoying the feeling of being more full. He sawed in and out, fucking her cunt with three thick fingers for a few minutes. He pulled out of her with a wet pop and said, \"It looks like you can easily accommodate a girth of about 3 and half inches. Let's see if we can push you a bit further to meet your goal of taking more.\" \n\nHe stood up and walked over to another rolling table. Jessica hadn't seen it when she walked in, but she noticed it was full of various instruments and a large pump bottle of what had to be lube. He heart raced and her pussy throbbed at the site of it. He rolled the table over to her and remained standing, looking down at her, naked, legs spread in stirrups, breasts engorged, nipples erect, chest heaving up and down in arousal. She was as sight to behold, Dr. Cooper thought to himself. \n\n\"We'll begin with a medium sized dilator, Jessica,\" he said. He grabbed the dilator from the table, pumping a small dollop of lube on the shaft. He rubbed the lube around and placed the tip at the opening of her precious fuck hole. Jessica breathed in at the cold invader. It was medical grade steel and had a bulbous head, emulating the contours of an erect penis. He pushed the shaft into her welcoming pussy, enjoying her moans as her pussy stretched. \n\n\"Very good Jessica, very good,\" he said as he began to work the dilator in and out, fucking her slowly but firmly. \"I see your breasts are beginning to engorge, please massage them firmly,\" he instructed. \n\nJessica headed the request and began to sensuously rub her tits and play with her hard nipples. They had never been so sensitive before and it actually felt like that were bigger. She couldn't believe it and she was so excited to be milked for the first time. As she began to massage her tits, she closed her eyes and felt the metal dilator fucking her in and out. She suddenly became aware of her aching bladder. She had followed her instructions and now had to desperately pee. \n\nAs if sensing her desperation, Dr. Cooper removed the metal phallus from her cunt. She could tell her pussy was already starting to gape as she felt the cool air on her freshly fucked hole. Dr. Cooper slipped off his lube covered gloves, tossing them in the can to her right and began to massage her abdomen with his bare hands. He felt her swollen bladder and began to push, testing her continence. \n\n\"Ohh!\" she squealed, surprised she didn't piss all over him. \n\n\"Excellent bladder control,\" Dr. Cooper said as he kept firm pressure on her swollen bladder. Jessica couldn't believe her control. \"Okay, I'm sure you've got to go, hold it for just a little while longer, Jessica,\" he said in a calming voice. He reached down to the tray and pulled up a metal speculum. He squirted a generous amount of lube all over the sides and placed the cold metal at the opening of her vagina. Jessica took a deep breath as she felt it push inside of her with ease, thanks to Dr. Cooper fucking her with the dilator moments ago. \n\nHe had positioned the sides to open her horizontally towards her thighs. Jessica's heart started to pound as she felt him begin to turn the key to spread open her sopping went fuck hole. \"Very good, keep breathing Jessica, I want to get a good look inside of you\" he said in his deep, professional voice. He turned it a few more times until she was spread open about three inches. She felt stretched to her limits and began to moan slightly as he made his final turn, spreading her about four inches wide. \"Good, good. I've got you already passed your first limit Jessica, you're doing great\" he said calmly as he clicked on a small flashlight he grabbed from his tray. \n\nDr. Cooper took a seat on the wheeling chair as he stared inside her gaping cunt. Jessica was naked and her pussy was spread four inches wide. The deep pink and red of her swollen, sopping wet fuck hole was a sight to behold. \"Everything looks good here, Jessica. No abnormalities or lesions. Very healthy red color, very moist from your arousal. Your pussy is in excellent health,\" he said as he got up to walk to the cabinets behind him. \n\nJessica breathed and began to massage her tits again. They were beginning to ache and swell even more. Was she really ready to be milked already? She couldn't believe it! He returned with a large plastic container, for which she could surmise its purpose. He popped it open and said, \"Okay, Jessica. I need to collect a large urine sample from you, please. I know it's strange to do it like this, but I need a good view of the opening of your urethra to ensure it is functioning properly,\" he said as he positioned the open container below her gaping vagina. \n\nShe had never pissed like this before and was nervous she wouldn't be able to do it, but she took a deep breath and pushed down. Her bladder was shy and Dr. Cooper could tell what was going on, so he reached up with his hand to push down on her bladder again. The firm pressure was all she needed and she began to piss. She couldn't believe it! Pee sprayed out from her open cunt - a steady stream arching from her piss hole and her spread wide vagina. \"Very good!\" Dr. Cooper said with a smile as he adjusted the container to catch the stream of fresh, hot golden piss. \n\nJessica moaned loudly as she eagerly emptied her bladder right into the air, in front of the sexy Dr. Cooper as he caught it in the container. She pissed and pissed and pissed, all the while moaning at the sweet relief of letting go. Her cunt began to throb around the open speculum. She couldn't believe she was pissing so well with it stretched so wide! With a grunt she pushed out a final spurt of pee. \n\n\"Excellent, Jessica, absolutely excellent,\" Dr. Cooper said as he sealed up the container. He placed it on the counter behind him and walked back to his patient, spread wide in multiple ways on the table in front of him. \"How are we doing?\" he asked looking down. \n\n\"Oh doctor, I feel much better now, thank you,\" she said, getting breathy in her continued arousal. \"My breasts though, doctor, they are beginning to get sore and swollen,\" she said. \n\nAt this, the doctor reached down with his hands to feel. He massaged them firmly and then gave both nipples a dreadfully hard squeeze. \"Ohhhh!\" Jessica yelped as she watched a thin stream of milk erupt from each breast. She couldn't believe it! Her first milk arced into the air and splashed all over Dr. Cooper's bright blue shirt. \n\n\"Oh my!\" he said with a smile. \"That cream certainly worked its wonders! I've never seen it work so fast on a patient before, that's excellent. Your breasts are very health, Miss Porter. We will have to get you hooked up to our pumps right away to encourage more production and relieve that swelling,\" he said, seemingly unfazed by the splash of milk across his broad chest and tie. Jessica felt her face get red and hot out of embarrassment. \n\nThe doctor walked to the door, popping his head into the hallway. He called down to the office, \"Alexa! Could you please bring the pumping machine to room 4 and one of my spare shirts, please!\" Jessica was so thankful to be there after hours. She could feel her pussy positively throbbing against the spreading arms of the speculum at the thought of her breasts being milked, as well as the possibility of seeing Dr. Cooper change his shirt. \n\nHe walked back over to his patient and began to turn the key to close the speculum that was still stretching her cunt. She moaned as he pulled it from the clutches of her pulsing inside. \"It will take Alexa a few minutes to get everything assembled, so no sense wasting time, I still have plenty left to examine\" he said as he grabbed a larger dilator from the tray. Jessica's head swam as she heard him squirt more lubricant onto the metal wand. This one must have been four and a half inches wide, with a bulbous head slightly larger. \n\n\"Okay Jessica, this will be a stretch, but it's the work we need to do for you to increase your capacity in your pussy, as you desired,\" he said calmly and professionally. She felt the cold steel on the opening of her pussy, trembling in anticipation. \"Breath and push out to accommodate the girth,\" the doctor said as he began to push the head of the dilator into her. \n\n\"Ohhhhhhhh doctor!\" she moaned as she felt it stretch her cunt wide. She continued to moan she felt the shaft of the metal push into her, stretching her open wider than she had ever been before. There was pressure but no pain because she was so aroused. She had never felt so FULL in her cunt! She had been with men with large cocks before, but never this wide. It was incredible and she thought her head might explode from the pleasure of being stretched so wide. \n\n\"Excellent Jessica, this girth is perfect for your size. Not too small, not too big, just right,\" he said with a devilish grin as he began to fuck her stretched cunt with firm, hard strokes. She moaned each time she felt the fullness of the shaft push into her, feeling the strong knuckles of the doctor as he gripped the dilator firmly in his large hands. \"Good, good. Now to properly simulate intercourse, Miss Porter, keep breathing,\" he said as he began to fuck her faster and harder. \n\n\"Ohh, ohh, ohh, ohh!\" she moaned as he violated her cunt over and over with the girth of the metal dilator. He probed in and out, in and out, picking up the pace as a lover might. She closed her eyes and imagined it was the doctor's big fat cock, reaming her pussy hard and firm. She felt a quaking inside of her - she was close to orgasm! But at that second, she heard a knock at the door and the doctor pulled the dilator out of her with a wet pop. He placed it onto another tray of used instruments and walked to the door. \n\nJessica could feel the warm air of the room. Her cunt must have been gaping open at least two inches. That was the widest thing she had ever been fucked with and she was so fucking hot and aroused, she felt as if she might explode. She had never been edged so intensely as she just had been either. She watched as the doctor opened the door to allow Alexa to wheel in fairly large machine on a cart with wheels. There were several tubes and a decent size tank on the bottom of the cart, for her milk to collect she guessed. \n\nAlexa, now in black scrubs, pushed it over to the table. She smiled as she gazed upon the sight of Jessica, spread eagle on the table, tits swollen with milk, legs in stirrups and sopping wet pussy gaping wide. Jessica smiled up at her, no longer sheepish. She communicated her lust with her eyes and Alexa was happy to reciprocate the visual advance, feeling her own pussy quiver inside of her scrubs. She always had fun assisting Dr. Cooper on this play nights, but she had never been so attracted to a patient before. \n\n\"Here you are doctor,\" Alexa said, securing the cart a few feet away from the table. \"Shall I get the chair?\" she asked while handing the doctor another shirt, this one white. \n\n\"Yes, that would be an excellent idea Alexa, thank you. We are ready to move on to anal examination and that would be the perfect position to continue,\" he said with a smile. \n\nJessica's heart raced and pussy quivered at the mention of anal. She looked up at her medical care takers in amazement. She watched lustfully as Dr. Cooper pulled off his tie and soiled shirt. Her mouth opened and practically watered at the sight of his muscled chest. He was sweating a bit, so his chest hair glistened in the soft light of the room. He must have been turned on too, she thought. I mean, of course he was, why else would he do this? \n\nHe buttoned his fresh shirt, carefully tucking the tails into his tight slacks. As she watched, Jessica noticed the obvious bulge in his pants, confirming her earlier assessment. It looked decently large and she was desperately hoping the hard cock beneath would be unleashed soon. It must take extreme willpower, she thought, to be able to resist pulling it out and shoving it in any or all of her willing holes. She'd suck him dry or beg him to ream her pussy and ass if he wanted to right then and there. He kept his collar loose and didn't bother with a new tie as he rolled his sleeves back up. \n\nAlexa returned with what looked like a sit down massage chair. She assembled it in the middle of the room and the doctor lifted Jessica's legs out of the stirrups. She sighed as she sat up, safely assuming she would be relocated to the chair in front of her. Her head swam as the doctor pulled her up to standing and led her to the contraption in front of her. \n\n\"Okay, this is a special chair for the next portion of your exam. Place your knees here and you can rest your head against this headrest here,\" he instructed. She positioned herself and she was now kneeling with her ass up in the air, her face against a headrest, and her tits drooping downward toward the floor. It was comfortable and vulnerable at the same time. It was clearly a specially modified sitting back massage chair for the purposes of milking someone's breasts, which was very exciting to her. \n\n\"Excellent. Alexa, that will be all for now. I will call you back when I need you for further preparations,\" Dr. Cooper said. Jessica was sad to see her go, but hopeful for future encounters. \"Okay, hold tight, I will need to raise you slightly to reach everything that I need,\" he said. She heard loud clicking and realized there was a pumping mechanism on the bottom of the chair, like a dental or barber set up. He pumped with his foot several times and she was raised about three feet higher into the air. \n\nShe looked up and saw that her face was about level with his belly button and she felt almost as if she was elevated on all fours, as if ready to be taken doggy style from behind. She positioned her head back into the head rest and watched as the doctor came around and began to lightly caress her engorged breasts. \n\n\"Mmmm yes, very nice,\" he said sensually. \"Miss Porter, since this is your first lactation, it is actually better if we begin slightly, uh, more naturally than to put you directly onto the pump,\" he said. \"This would involve oral suckling, Miss Porter. Would you be okay with that?\" he asked.\n\n\"Oh, doctor, yes, whatever you think is right to do,\" she said with excitement. \n\n\"Excellent, if you could sit up on your knees for me, you will find you are fully supported. Grab the bars to your side for balance and support,\" he said as he walked over to her left side.\n\nJessica hoisted herself up and was on her knees. Her head was slightly above the doctor's and she noticed that her breasts were perfectly at face level for him. Her heart was pounding in excitement at the prospect of Dr. Cooper suckling at her engorged tits. \n\n\"Excellent, now this might feel strange at first, but just relax. This is the best way to continue to encourage your breasts to keep lactating, as you desire,\" he said. He looked up and smiled as he positioned his face against her swollen breast. Jessica moaned as she felt the doctor pull her erect nipple into his warm mouth. He began to suck, licking and biting softly at her engorged flesh. \n\n\"Ohhhhhhhhhh!\" she moaned loudly as she felt him begin to drain milk from her left tit. He hungrily slurped and sucked at her breast, licking sensuously as he fed on her first ever milk. She looked down at the sight of a grown man, a professional doctor sucking milk from her tits. She looked down to see his crotch twitch, evidence that he was hard as a rock in his pants as he drained the milk from her tit. With a last swallow, he pulled back and looked up at her. ",
        "Dr. Cooper's eyes looked slightly wild with lust as he said, \"very, very good, Your first milk is positively perfect, Miss Porter. The taste and nutrition are optimal, your breasts are in perfect health,\" he concluded as we wiped his mouth clean. He walked with heavy steps to her other side, facing her right breast engorged with milk. \"Ready for the other one?\" he asked.\n\n\"Yes doctor!\" she nearly shouted out of excitement. He smashed his face into her tit and began to suck, more ravenously than before. He bit firmly down on her nipple and Jessica moaned as she felt her milk begin to flow into his mouth. He sucked and slurped with abandon, licking at her full breast, stimulating her erect nipple in between nibbles and slurps of milk. He sucked and sucked and sucked.\n\nDr. Cooper pulled up, gasping for air and wiping his mouth. \"Very, very good, Miss Porter. Milk from this breast is slightly sweeter,\" he said with a smile. \"Please return to your previous position. I need to hook you to the pump system to drain remaining milk and encourage further production,\" he said as he walked over to the cabinet. \n\nShe settled back down into the chair and realized she was positively trembling in arousal. Her pussy was dripping down her legs and her breasts were tingling with desire. The doctor walked back over and she felt the coolness of a medical wipe on her areola. He wiped them sensuously clean and tossed the wipe aside. He pulled on a fresh pair of gloves as he began to mess with the pump machine to her right. He attached the first suction cup to her right breast. It felt awkward at first, but she then enjoyed the sucking pressure of the cup and tube as it hung down. He attached the second and Jessica marveled at the sight of her pendulous breasts sagging beneath her, cups and tubing attached to her nipples ready to pump more milk from the still engorged sacks. \n\nShe heard the doctor fiddling with the machine before she heard the soft whir of the pump as it was turned on. She moaned as she began to feel the sucking pressure of the pump. It gently palpated each nipple, alternating between left and right breasts as it began to pull the fresh milk from them. She was being milked! She was literally being milked! Jessica moaned in pleasure at the feeling and sight of it. \n\n\"Excellent, Jessica, excellent. Let me know if the pressure becomes uncomfortable and we can take a break from milking,\" Dr. Cooper said calmly. \"Now it's time for your anal exam,\" he said as he moved behind her. He began to massage her plump ass cheeks with his gloved hand. She relaxed and moaned as he did so. He spread apart her cheeks to examine her ass crack and anus. \"Very good, no hair as requested,\" he said with a grin. \"I am going to examine you externally first, Jessica,\" he said as he began to gently caress her ass crack with his left hand while holding her cheeks open with his left hand. \n\nJessica moaned as she felt his large finger tips drag across the closed pucker of her anus. She hadn't had anyone play with her ass in ages and she was beyond excited for it. As the milking machine continued to pump her breasts, left and right, left and right, sucking her nipples with firm pressure, she felt a cold glob of lube touch the outside of her anus. She moaned. \n\n\"Just relax, Jessica. I am going to gently move inside for your internal examination, but first I need to open your cheeks wider. For this, I will be using a small amount of medical tape on your buttocks. I assure you it will not hurt to remove, I just need to be able to maneuver freely with both hands for your exam, is this alright?\" he asked. \n\n\"Yes doctor, of course,\" she answered, breathy from the arousal of his touch and the continued milking of her full breasts, dangling heavily from her position up in the milking chair. \n\nShe heard him walk to the counter and return with another rolling table, rattling full of instruments for her anal exam. The doctor pulled her right cheek aside and secured it open with a small length of medical tape. He repeated the process for he left cheek and marveled at the site of her ass spread wide open in front of him. He reached down with his full finger to massage the dollop of lube around the pucker of her anus. \n\n\"Ohhhhhh doctor!\" Jessica moaned as she felt his finger begin to massage the opening of her anus. He moved back and forth and then in small, firm circles. He then began to push his index finger into her anus pushing in slightly and then letting her sphincter push it back out, as if ringing a doorbell. She moaned loudly as she felt his digit invade her anal canal, poking into her hole, over and over again. \n\n\"Good, good, just relax, Miss Porter. I need to be able to feel inside for any abnormalities or obstructions. You are all cleaned out, correct?\" he asked.\n\n\"Yes, of course doctor. Two enemas as instructed,\" she answered with pride. \n\n\"Excellent,\" he said as he plunged his finger deeper inside. He bottomed out to his last knuckle and pulled out with a sloppy popping noise. He pumped more lube onto his finger and began to push two fingers inside this time. \"So, you have had anal intercourse before, as indicated on your chart. Have you had other objects inserted into your rectum before, besides a partner's penis or fingers, Miss Porter?\" he asked.\n\n\"Mmmmmm yes, doctor, yes. Butt plugs and dildos, doctor,\" she said in between moans.\n\n\"Good, and do you always use proper lubrication?\" he said as he began to slowly fuck her ass in and out with his two thick fingers, feeling her anus stretching to accommodate his gloved hand. \n\n\"Ohhhhhh, of course doctor, yes, mmmm\" she said, moaning louder. \n\n\"Excellent, it is always essential to have proper lubrication when introducing anything into your rectum, Miss Porter,\" he said as he pulled out of her anus with a wet pop. He pumped another generous glob of lube onto his finger and proceeded to stuff it inside her now slightly gaping hole, preparing her chute for further invasion. She moaned as she felt him do this. \"Okay, now that your sphincter muscle is warmed up, I am going to begin the internal exam. I will be feeling with my fingers for any internal hemorrhoids or obstructions or lesions. How long has it been since your last episode of anal sex?\" he asked.\n\n\"Oh, um, probably at least six months, doctor,\" she said, hotly anticipating his invading fingers again, precisely for that reason. \n\n\"Okay, this explains your tightness,\" he said. He pushed two fingers of his right hand back into her slick hole and began to feel around the soft walls of her delicate rectum. Using gentle pressure he stretched up toward the ceiling, then down toward the floor. He then wiggled his fingers strongly up and down to test the elasticity of her colon, running them around the walls as if rubbing the inside of an open tube.\n\n\"Ohhhhhh!\" she moaned as she felt him moving inside of her. \n\n\"Perfect, Miss Porter. I feel no lesions or hemorrhoids or obstructions. Your rectum is elastic and soft and warm. Your anus is tight, but that is clearly due to lack of recent exercise, as you can clearly accommodate some girth without difficulty. Overall, I would say that your ass is in perfect health,\" he said with a smile, pulling his fingers out of her. She could feel that her hole was already gaping slightly, so she pushed it out and sucked it in, winking her anus at him while she moaned. \"Ahh, I see your anus appears to be eager for more,\" he said with a sensual tone.\n\n\"Mmmm yes doctor, it needs to be stretched open, wide!\" she demanded, her horniness beginning to take over. \n\n\"Very well, Miss Porter, we will move on to dilation,\" the doctor said, reaching for the first metal rod on his examination table. \"This is a medium girth, relax and push out to let it inside,\" he instructed. \n\nJessica felt the cool metal of the smooth steel rod against the entrance of her anus. She was hungry for her ass to be stretched, so pushed out on her anus to let it inside. It glided in with ease and she moaned as she felt it invade her rectum. \"Ohhhhhhh yes!\" she said, forgetting her role as a patient. \n\n\"Very good, very easy, as expected\" the doctor said, sounding pleased. He began to slowly fuck the rod in and out of her wanting anus. They could both hear the sounds of the slick wetness of her lubed up canal as it eagerly swallowed the two inch wide metal rod. The slurping of her ass and the whir of her pumping breasts almost made Jessica explode in arousal. She couldn't believe she hadn't orgasmed yet. \n\nThe doctor pulled the rod out with wet pop. \"Okay, I think we've graduated to the large,\" he said as he applied lube to the larger dilator. It was about three and half inches wide. \"This is going to stretch you toward your goal, Jessica, so relax and breathe deeply,\" Dr. Cooper said as he started to push the rod inside of her. \n\nShe felt the cool metal slide inside of her and moaned as the soft, stretching walls of her rectum happily enveloped the girth of this new anal probe. \"Ohhhhhhhh!\" she moaned as the doctor firmly but slowly shoved it deeper inside. He paused with it about five inches deep, marveling at the site of his patient's stretched anus. \n\n\"It looks like your breasts are empty, Miss Porter. I will switch the machine to squeezing instead of sucking,\" Dr. Cooper said. Leaving the rod inside of her stretched anus, he walked around to change the setting on the pump machine. Jessica moaned as she felt the sucking cease and the cups begin to simply squeeze firmly at her nipples, alternating between left and right again. \n\n\"Excellent. You let a very large amount of milk down, very impressive for a first lactation, Miss Porter. I wouldn't be surprised if you kept producing milk for several weeks, should you perform the proper exercises at home and return for a follow up milking service in a few days,\" he said happily. Jessica's pussy throbbed at the thought of being milked by Dr. Cooper again, and so soon!\n\nThe doctor moved back behind her stretched ass and grabbed the probe. He pushed it an inch deeper before he began to fuck her slowly, in and out. Jessica began to moan louder as she felt the girth of the large metal cock fucking her in and out. It was a stretch, but she knew she could still take more. She closed her eyes and focused on relaxing, desperately wanting to take more up her chute for Dr. Cooper. \"Very good, Miss Porter. Your anus is doing so well, do you feel the stretch?\" he asked.\n\n\"MMmmmmmm yes doctor, yes!\" she said, panting and moaning. Her nipples of her dangling pendulous breasts were on fire as the machine continued to squeeze them. She had never been in such full body arousal in her entire adult life, she almost refused to believe this was as good as it was, thinking she must be dreaming. \n\n\"Good, I am going to pick up the pace to see just how much you can take, Miss Porter. Inform me of any pain immediately,\" Dr. Cooper instructed as he began to saw the metal rod in an out of Jessica's stretched anus faster and harder. She began to moan loudly with each plunge of the heavy metal, feeling the now warm steel deep in her stretched rectum. He fucked her in and out, in and out, in and out, the sound of the lube got louder as the metal slicked in and out of her poop chute with ease. This woman has a talented ass, Dr. Cooper thought to himself, as he marveled at the site of her stretched hole around the shiny metal. \n\n\"Okay Jessica, now I want to test the strength of your muscles overall. Being able to take more in your anal canal is not just about stretching the anus. It is about how each of your muscles are able to contract or relax in unison, so I'm going to get you to exercise your muscles deep inside,\" he said as he paused with the rod shoved about six inches deep in Jessica's butt. \n\n\"Yes doctor, I understand,\" she said, with hot anticipation. \n\n\"Okay, squeeze down on the dilator for me hard and hold the contraction for ten seconds. Go now,\" he instructed. Jessica breathed in and squeezed down on the rod as hard as she could. Her ass had never felt so stuffed! Her pussy drooled between her legs and she could feel her clit throbbing. She desperately wished it was Dr. Coopers cock she was squeezing and not the metal dilator. As she imagined this, she nearly orgasmed and began to tremble at the thought. \n\n\"Very good, relax. Okay, now I want you to do the same, but after you are done squeezing, I want you to push the dilator out, hard and fast, as if you are pushing out a bowel movement, Miss Porter, can you do that for me?\" he asked with a grin, excited for the show of it all. \n\n\"MMmmm yes doctor!\" she said with excitement. \n\n\"Okay, squeeze!\" he said. Jessica squeezed the rod even harder, feeling the fullness of it deep in her colon, again desperately wishing it was the rock hard cock of the sexy doctor stretching her ass and milking her tits. At the count of ten, she pushed out hard and Dr. Cooper watched as the metal rod erupted from her rectum. He caught the slippery thing and marveled at the beauty that was her stretched anus, gaping nearly two inches wide. This woman's ass was incredibly talented, he thought to himself. \n\n\"Excellent! Your muscles are very strong and you have incredible control. Let's repeat that a couple more times, Miss Porter,\" the doctor instructed, his hard cock twitching in anticipation on watching his patient's talented ass work wonders in front of him. He firmly shoved the metal rob back into Jessica's gaping anus. She moaned as the probe invaded her now stretched out sphincter. He fucked her in an out a few more times, enjoying the sight of the shining metal gliding easily in an out of her ass. \n\n\"Okay, Miss Porter, squeeze for ten seconds and then push,\" he instructed after he paused his fucking with the probe securing six inches deep inside his patient's rectum. Jessica squeezed, again relishing the feeling of fullness it gave her. She always loved anal play, but never realized her carnal hunger for a wider girth up her anal chute. After ten seconds of firm squeezing, she inhaled and pushed hard. With a guttural moan from Jessica, the probe rocketed again from her rectum. \n\n\"Ohhhhh doctor!\" she moaned as she felt the sensation of the three inch heavy metal probe exit her stretched anus with force. The doctor skillfully caught the lubed up rod in his gloved hands. She felt her hole gape and she squeezed and winked it over and over, hearing the sloppy sounds of her loose ass lips and air entering and exiting her gaping rectum as she did so. Dr. Cooper had never been so turned on by a patient's ass before. This woman's hole was truly talented and he couldn't wait for the chance to bury his cock inside to experience it himself. \n\n\"Very, very good, Jessica. Your muscle tone is excellent. How did that feel?\" he asked, eyes glued to the gaping asshole in front of him. \n\n\"Sooooo good, doctor!\" she moaned sexily. \n\n\"Are you ready for something bigger?\" he asked with sensuous tone.\n\n\"Yes, absolutely, yes doctor,\" she said, panting desperately. \n\nThe doctor dropped the large dilator on the tray of used instruments and grabbed the extra large dilator from the other tray. This one was silicone and had a bulbous head to emulate an erect penis and was nearly four and a half inches wide at its biggest girth. \n\n\"Okay, Jessica, this one will be a bit of a challenge, but that is why you are here today. In fact, I think I will relocate you to the other table to allow for enough room in your pelvis to accommodate the girth of this dilator,\" he said. He walked around to the milking machine, turned it off, and detached the suction cups from Jessica's still engorged tits. She moaned as they released her sensitive, puffy and hard nipples. She smiled as she felt a few drops of milk leak out, happy to feel that the treatment was working and her breasts were producing more milk. She hoped desperately Dr. Cooper would feed at them again before the end of their session. \n\n\"Okay, Jessica, carefully step down,\" he instructed. As she stepped down, she nearly fell over as she was so weak in her knees with arousal. The strong doctor caught her and walked over to the table. He pulled out side extensions on either side of the table and stowed the stirrups. \"Okay, using the steps please climb up and assume a position on all fours, with your knees on the side wings of the table please,\" he said. \n\nJessica climbed up and settled into position. She felt more stable and was happy to concentrate only on her ass now that her breasts were free from the machine. \"Okay, excellent. Now, for the purposes of accommodating such a large dilator, I am going to bring Alexa back in to perform manual stimulation of your labia and clitoris. Increasing, continual arousal will allow your body to remain relaxed enough to take the girth of the extra large dilator. Is that okay, Miss Porter?\" he asked, with a knowing smile. \n\n\"Oh, absolutely, yes doctor, yes, please,\" she said, practically begging in her excitement. \n\n\"Excellent,\" he said as he walked to the door. The doctor popped his head out and called for Alexa to return to the exam room. She sauntered back in, taking in the site of their patient up on the table on all fours. It had been so long since Dr. Cooper has had a patient able to reach the extra large dilation stage of the exam and she was thrilled at the opportunity to assist, especially with a patient as sexy as Jessica. \n\n\"Alexa, your assistance is needed for Miss Porter. We have reached extra large dilation and she requires manual stimulation of the clitoris and labia to maintain high arousal,\" he instructed. \n\n\"Absolutely Dr. Cooper, I am happy to help. Miss Porter, I am a trained professional nurse and, well, I think it's safe to say that I know what I'm doing when it comes to the female anatomy,\" she said with a slight giggle as she walked to the counter. She removed a pair of gloves from the dispenser and put them on her hands with a snap. She walked over to the right side of the table, feeling her pussy twitch, beginning to soak the crotch of her black panties beneath her scrubs as she took in the site of Jessica's curves, hanging engorged breasts, and gaping asshole. \"Miss Porter, will you require extra lubrication?\" she asked, already know the answer. \n\n\"Ohhh, no, I think I'll be just fine,\" Jessica said, panting in anticipation of the woman's touch. \n\n\"Very well, ready doctor?\" Alexa asked, looking up at the sexy doctor. \n\n\"Yes, please begin manual stimulation Alexa,\" he instructed, as he began to apply a generous amount of lube on the giant silicone dildo. Alexa reached her hand between Jessica's thighs and slowly began to caress the delicate, sopping wet softness of her pussy slit. Jessica moaned louder than she had before as she felt the woman's fingers make contact with her swollen, throbbing lips. Alexa began to work her wet folds slowly up and down, with slight pressure, being careful to stave off orgasm until the dilator had been successfully inserted into her ass. \n\n\"Very good, continue stimulation, Alexa. Relax and breath Jessica, here it comes,\" the doctor said. He positioned the bulbous head of the dilator on the puckered opening of Jessica's anus. The lips of her hole were beginning to swell slightly from her previous exercises. He was hoping to see them as engorged as her puffy nipples or even her pussy lips by the end of the session. He began to apply slight pressure as he said, \"now push out to let the dilator inside, Jessica.\"\n\nAs she felt Alexa slowly stroking her throbbing wetness, she pushed out to allow the new anal invader entry to her anal canal. She felt the slick silicone head pushing against her sopping wet anus and braced for the stretch. She moaned as she felt her sphincter spread around it, \"ohhhhhhhhhhh!\" The doctor applied firm pressure to get bulb of the probe inside. With a wet pop, her anus snapped around the head and she moaned even louder, \"ohhhhhhhh doctor!\"",
        "Alexa now began to swirl small circles around her engorged, throbbing clit, careful not to make direct contact to avoid triggering an orgasm. Jessica's eyes rolled back into her head as she surrendered to the will of the doctor and nurse. This was the peak of any fantasy should could have ever imagined. She let out a guttural, primal moan as she felt the dilator begin to invade the depths of her bowels, stretching her nearly four inches wide. \n\n\"Excellent, you're doing very well Jessica, keep breathing. Your ass is doing fantastic,\" he said as he continued to push the giant probe inside of her stretched anus. Inch by inch, the doctor marveled at how his patient's anus stretched beautifully around the giant girth of the dilator. After he successfully shoved it about six inches deep, he paused to marvel at the talent of Jessica's asshole. He had never seen a hole so hungry, so willing to stretch, so wanting to be stuffed. He was in awe and perhaps maybe even a bit in love with it. \n\n\"How does that feel, Miss Porter?\" he asked, feeling the pressure of his throbbing erection pushing against his tight pants. \n\n\"Incredible!\" she nearly screamed. \n\n\"Good. At this time, I believe it would be beneficial to bring you to sexual climax. For the purposes of examining the strength of your vaginal contractions, I will be inserting several fingers into your vagina. Is that okay, Miss Porter?\"\n\n\"Yes doctor, yes please!\" she said, desperate to cum, desperate to be stuffed even more. \n\n\"Okay, Alexa, please increase manual stimulation with the purpose of inducing sexual climax,\" the doctor said cooly.\n\n\"Yes doctor,\" the nurse said, sensually and excited that she will get to witness and play a pivotal role in it all. The nurse began to circle their patient's clit, while making firm contact. As she did, she felt Jessica's body begin to tremble. \n\n\"Oohhhhhhhhhh, ohhhhh, ohhhh!\" Jessica moaned as the nurse's nimble fingers began to artfully work her sloppy wet pussy. She felt her ass begin to tighten around the gigantic silicone probe in her ass. She had never had so much stuffed inside of her ass before, she couldn't believe it! It felt absolutely incredible. \n\nJessica felt a jolt of electricity as she felt two of the doctor's thick fingers slide into her sloppy, swollen cunt with ease. He shoved them in to his knuckle and applied slight pressure onto her g-spot. He began to massage it slightly and she felt as if her head my explode at this. \n\n\"Oohhhhhhh my god doctor! Oh god! Oh doctor!\" she began to pant and shout. She was seconds away from exploding, she could feel it. \n\nAlexa took the cue and began to quickly circle her clit with two fingers, applying even more pressure. Jessica couldn't believe what was happening. She had never, ever in her life ever been sexually pleasured or serviced in such a way in her life. It was mind blowing!\n\n\"Ohhhhh my goooooddd!\" she shouted as she felt the electricity of her orgasm begin to explode deep within her. He pussy began to contract on the doctor's fingers and she felt him grasp firmly on the probe plugging her ass. She nearly screamed when she felt him quickly yank it out of her ass with a very loud, wet pop, which immediately triggered her climax. \n\n\"Ohhhhhhhhhhh!!!!!\" she screamed as her orgasm exploded hard as she felt the girth exit her ass. The stretch of the bulb pulling out of her was enough to put her over the edge to one of the absolute, most incredible and hardest orgasms of her life. She came over and over and over, soaking the doctor' and nurse's hands with her juices. She felt her pussy squirt the remaining piss from her bladder, hearing it splash down onto the paper covering the exam table. \n\nAs the waves subsided, Alexa withdrew her hand while the doctor left his fingers in place, continuing to count the contractions of her vaginal walls. Her ass gaped open wide, at least two and a half inches and she felt herself flexing her anus open and shut as she came down from her high. As she winked her hole, she heard air escaping, which made her smile. Before she had always been embarrassed when that happened, but now it was just evidence of how far her ass had stretched and how much she had been able to take stuffed inside. \n\nJessica opened her eyes to see the sexy nurse now in front of her face with her gloved hand dripping in her sex juices and piss. The nurse smiled and looked at her with lust in her eyes. Sensing what she wanted, Jessica obediently opened her mouth and welcomed the nurse's fingers inside. She eagerly sucked them clean as the nurse thrust her fingers deep into her mouth and throat, dominantly massaging her tongue and throat. When they were clean, she stepped back and removed her glove, tossing it into the can, her work finished. She walked over to the counter and began scribbling something down on Jessica's chart. \n\n\"Absolutely tremendous,\" the doctor said as he gently slid his thick fingers out of Jessica's sucking pussy. She felt her climax subsiding and still couldn't believe the strength of it all. She had never had her ass and pussy simultaneously pleasured in such a way, so well in her entire life. Her head was swimming and her body was trembling as she struggled to hold herself up on all fours on the now soiled exam table. \n\nDr. Cooper pulled his gloves off with a snap and tossed them into the trash. He walked over to Jessica's chart and scribbled something else down. \"Okay, Miss Porter, let's get you cleaned up and into our recovery room across the hall,\" he said as he pulled out several wet wipes from the cabinet above him. He walked over to Jessica's trembling body and began to softly wipe her dripping pussy clean. He saw as her eyes closed and she moaned lightly at this touch. With the other wipe, he wiped the outside of her anus and ass crack as best as he could and removed the medical tape that had been spreading her cheeks apart. Her hole was still stretched even though it had closed, shutting into a stretched inch wide slit. It looked like a second pussy, it was so hot, it was the ideal way an asshole should be, he thought. He couldn't wait to feel how easily his cock would slide inside now. He desperately wanted to fuck her in that beautiful loose ass slit, beat it like the second pussy it now was. \n\n\"Okay, Miss Porter, let me help you down,\" the doctor said, as he grabbed Jessica's hand to help her step off the table. She stood in the room, naked and slightly sweaty, head still swimming from her intense orgasm. The doctor reached over and grabbed her gown to wrap back around her for the journey across the hall. \"Perfect, now the recovery room is right across the hall, Jessica. Alexa will be waiting for you over there,\" he said as he pointed to the door. \n\nJessica walked over and let herself out and sauntered across the hall, the back of her gown wide open. She could feel how loose her ass still was, feeling small dribbles of lube leaking out of the stretched slit and she smiled in amazement. She remembered when she had gone months with her hole stretched like this when she was getting up her ass regularly and she hoped it would stay the same for awhile now, thanks to Dr. Cooper and his beautiful nurse. \n\nShe opened the other door to find another dimly lit room. It was warm and there was soft music playing. There was a small couch in the corner and a much larger exam table in the middle of the room with pillows at the head. She took that as a cue to lay down and climbed up, letting her weary body rest. It was surprisingly comfortable and she laid back and closed her eyes to relax.\n\nAfter a few minutes, she heard a soft knock on the door and looked up to see the sexy nurse enter the room. Alexa was still in her scrubs, but had let her hair down. She walked over to Jessica's table and said, \"how are you feeling, Miss Porter?\"\n\n\"Absolutely incredible!\" she said with a huge smile on her face. \n\n\"Excellent, Miss Porter. We're almost done. Based on your chart, Dr. Cooper has prescribed a very special ending treatment. Are you interested in that?\" she asked. \n\n\"Oh, yes, please. Whatever the doctor has ordered, please,\" she said with excitement that the session wasn't done. \n\n\"Okay, perfect. I will bring him in for your final procedure,\" Alexa said with a smile. She walked out closing the door quietly behind her. Jessica laid back, closing her eyes imagining what could possible be in store for next. She listened to the music and noticed that it definitely sounded like the cheesy background music of a lot of porn. She smiled and giggled at the realization, trusting that it was a knowing joke by the doctor. I mean, that is basically what she just lived through, might as well lean into it, she thought. \n\nThere was another knock and the door and Jessica sat up on the table, eager to see what was next. Dr. Cooper and Alexa entered the room one after the other. \"Miss Porter, how are we feeling?\" the doctor asked with a smile. \n\n\"Very, very good, Dr. Cooper, thank you\" she said with a sultry smile, eyeing his body up and down. She noticed the bulge was still large and strong in his pants as he sat down on the couch. \n\n\"Excellent, well I've got one last treatment for you Miss Porter, then you're free to go home, until your follow up appointment, of course,\" he said with a smile. Jessica's heart leapt into her throat at the excitement of returning to Dr. Cooper's office. \"Would you mind if Alexa assisted with this final procedure?\"\n\n\"Oh, of course not. Yes, please, nurse, stay,\" she said, her eyes wide with excitement. \n\n\"Perfect. Because of the incredible progress we were able to make in your anal exam, I've prescribed at least six CCs of semen to be administered directly into your rectum, Miss Porter. I believe this prescription will help maintain your ability to stretch and accommodate more girth during both masturbation and intercourse. I will be injecting directly from my own cock as deep as possible into your rectum, to ensure adequate coating of the walls of your anal canal. In order to reach your goals, I believe this should be an ongoing treatment, because the more often the anal canal is adequately pumped full of copious amounts of semen, the more your anus and rectum will become accommodated to hosting it, both the cum and the cock responsible for its injection. You see, it's my goal to essentially train your asshole to become a sort of regular cum repository, ready to stretch to its limits to continually host as much semen as possible. How does that sound, Miss Porter?\" he said with a devilish grin. \n\nJessica's eyes widened and her pussy throbbed. She couldn't believe what she was hearing and was so excited at the prospect of Dr. Cooper fucking her in the ass, on the regular! \"Oh doctor, yes please, whatever you prescribe!\" she said, practically giddy. \n\n\"Excellent. Let's get started. Please remove your gown. Alexa, please adjust the table so our patient can sit comfortably facing the couch,\" he instructed. Jessica practically threw off her gown, happy to finally be naked again in front of her doctor and nurse. Alexa adjusted the table with a button, making the table fold up like a reclining chair so she was able to sit up slightly. The nurse also pulled up stirrups from the side of the table. Jessica took the cue and positioned her feet into them, both covered in black velvet as in the other exam room. \n\n\"Miss Porter, if you could please, begin manually stimulating your pussy. Masturbate with the goal of increasing your arousal, but do not bring yourself to climax yet. Alexa will be occupied with another task, so your assistance is needed in this,\" he instructed. Jessica's heart raced and her pussy began to drool. Dr. Cooper wanted to watch her play with herself, spread eagle on the table! \n\n\"Yes doctor!\" she said with excitement. Using her right hand, she began to rub herself, just as she did during her daily masturbation routine, careful to avoid the head of her clit so as to not trigger another orgasm. She began moaning lightly, rubbing the wet folds of her pussy as she stared right at the doctor. Her lips were still so swollen and her clit was hard as a rock, standing at attention, poking slightly out of the folds of her pussy, all throbbing and bright red. \n\n\"Perfect, perfect,\" he said, eyes glued on his patient. He noticed that her breasts were engorged with milk again. \"Play with your breasts and squeeze your nipples Miss Porter. I believe you have more milk to let down. Alexa, please begin standard procedure prep,\" he instructed. \n\nAt this, Jessica reached up to her tits and began to fondle her breasts. They were aching and she could tell they were full of milk again. She slowly began to rub and squeeze them, moaning as she did so. They were extra sensitive, but she couldn't tell if it was from her intense arousal or from the fact that they were now lactating. Either way, it had never felt so good to play with them. She watched as Alexa walked over to the doctor and kneeled in front of him on the couch. Jessica couldn't believe her eyes as she watched the sexy nurse unbuckle the doctor's belt and pull his tight slacks and boxer briefs down. The doctor kicked off his shoes and socks and allowed his pants and underwear to be removed. He unbuttoned his shirt, still staring at his patient playing with her breasts in front of him, legs spread wide with her sopping pussy exposed on the table. \n\nThrough his open shirt, Jessica marveled at Dr. Cooper's glistening, muscled, hairy chest. Good lord this man was gorgeous! She began to tweak and squeeze her nipples and she giggled and moaned as she felt small spurts of milk now streaming out, spilling out on to her swollen breasts and tummy. Then her jaw nearly dropped to the floor when she caught sight of Dr. Cooper's rock hard cock. It must have been seven inches long and at least three inches wide. His pubes were shaved from his balls and only a neat, tidy patch remained above it. He was circumcised and the head of his cock was wide and bulging. Jessica couldn't wait to feel it fucking in and out of her swollen anus, plumbing the depths of her bowels!\n\nDr. Cooper noticed that his patient had caught sight of his throbbing rod. He grabbed it with his fist and stroked it up and down a few times. Looking down at the sexy nurse in front of him, he gently slapped his rock hard man meat on the side of her face. Alexa smiled as he did this. She loved this part and hadn't had Dr. Cooper's cock in her mouth in weeks. She opened her mouth obediently, eager to have the doctor inside of it. She felt the bulging head enter and she savored the salty, sweet taste of his sweat and precum. She began to suck eagerly and hungrily, slurping as she did so. There was no need for polite ceremony - she was almost as aroused as their patient and from the throbbing stiffness of the member she was working in and out of her hot mouth, Dr. Cooper was too. \n\nJessica marveled at the scene in front of her, squeezing harder at her milky breasts, squirting milk faster and harder out of them as she watched the sexy nurse take the doctor's cock eagerly into her mouth. \"Ohhh fuck, thank you nurse,\" he said, rolling his eyes into the back of his head as he reveled in the pleasure of Alexa's hot, wet mouth. She was an absolute professional with blow jobs and he was hoping that he wouldn't blow his load into her mouth instead of up his patient's waiting ass. He relaxed into the rhythm of Alexa sucking his head and pumping his thick shaft. He knew she could take him in his throat, but he was happy that she knew better than to do it now, so as to not waste his cum. \n\nDr. Cooper looked up at Jessica and said, \"Miss Porter, suck on those gorgeous tits. Take one in your mouth, suck that milk out.\" Jessica immediately obliged and stared him in the eyes as she bent over and took the nipple of her right breast into her mouth. Her tits were large enough, especially while swollen with so much milk, that she could take them into her own mouth, something she hadn't done in ages. She licked her nipple and began to bite down and suckle her own breast. She was shocked at the sensation of her own sweet milk squirting into her mouth. She stared at the doctor while she began to suck harder, desperately slurping her soft engorged tit in her mouth, sucking and sucking on her nipple. \n\n\"Fuck yeah, suck those tits, get the other one,\" he said as Alexa picked up the pace, bobbing her head harder and faster up and down on the doctor's fat cock. Jessica switched breasts and hungrily sucked and bit at her left nipple. It was so hot, she couldn't believe it! She slurped and sucked as she watched the nurse sucking on the doctor's cock. \n\n\"Oh fuuuuck, thank you Alexa, I think I am ready for the procedure now,\" the doctor said, panting heavily, desperate as to not blow his load right there onto Alexa's gorgeous face. She popped his cock out and smiled, giving the head a final kiss and shaft a final squeezing stroke with her hand. She loved Dr. Cooper's cock, it was her absolute favorite cock she got to play with on the regular. She stood up and turned around, looking at Jessica as she sucked at her own tits. Normally, she would exit the room, but she wasn't about to let Dr. Cooper have this one all to himself. She could tell their patient wanted her to stay too, by the wild look in her eyes as she made eye contact with the woman spread eagle in the stirrups. I mean, she had already seen her chart and knew she was into women too, so we was definitely not leaving now. \n\nAlexa walked over to the table, removing her scrub top as she did. She had a black bra on, unclipped it and tossed it aside, exposing perky C-cup breasts. Jessica paused and stared, her pussy throbbing at the sight of the undressing nurse. Alexa walked over to Jessica to the right of the table. She leaned down and began to passionately kiss the woman, shoving her tongue deep into her mouth and throat. Jessica moaned into the nurse's throat and hungrily made out with her, feeling her full lips against hers. \n\nThe doctor stood up from the couch, tossed his shirt aside and began stroking his hard cock at the sight of the women kissing. He was so thrilled at Alexa's move and even more thrilled at Jessica's love for it. It had been awhile since he got to play with a patient with Alexa involved. The last few women who had booked appointments were strictly into men, and the last man who he had seen wasn't into women either, so he had had his other nurse Jeremy come in to help that day. Jeremy was hot in his own way, but Alexa was a special sight, especially when locking lips with another woman. Sometimes Dr. Cooper was amazed that he was able to find two incredible and eager to please bisexual nurses in his employment, especially ones willing to help after hours. \n\nAlexa and Jessica continued to kiss as the nurse slowly reached down to feel the wetness between her legs. Jessica began to pant and moan as she felt the contact of the nurse's ungloved hand. Alexa stroked her clit lightly, up and down, up and down, careful not to linger on the throbbing head of her clit too long. \"Ohhhhhhhhhh!\" Jessica moaned as she felt the soft stimulation of the nurse's fingers. Her pussy was on fire and she needed to get fucked so badly. She also desperately needed Dr. Coopers cock and to feel the wetness that was surely soaking the nurse's panties under her scrubs. \n\n\"Thank you, Alexa. If you could please bring me the bottle of lubricant,\" the doctor requested, as he continued to alternate between stroking and bouncing his rock hard cock up and down. He liked the feeling of his swollen member and balls swinging up and down, especially when so aroused. The nurse walked to the counter in the room and rolled over another tray with various bottles and instruments on top.\n\n\"Thank you, nurse. If you could please prepare the patient for injection. I think the procedure would be best with her face down, to ensure maximum depth of penetration,\" the doctor requested with a smile. ",
        "\"Yes doctor,\" she said with a smile. She walked over to Jessica on the table, as her naked tits bounced up and down. She guided her legs out of the stirrups and stored them to the side. She then pressed the button to bring the table back to flat. Jessica was marveling at the technical sophistication of this exam table - had it been made special just for fucking? It had to have been. The nurse then walked to the head of the table and pulled out more wings on the side, locking them in place, increasing the size and sturdiness of the table. She repeated the process at the foot of the table, so Jessica could comfortably lay down on the table, legs stretched out. \n\n\"Miss Porter, if you could please roll over,\" she instructed. Jessica obliged, suddenly feeling very vulnerable, face down and ass up in the room. \"Lift your arms and lean over this,\" Alexa said as she brought over a wedge shaped leather pillow that fit perfectly underneath her arms so she could hug it and comfortably lay her head down. \"And now lift your hips up and position yourself comfortably on this pillow, Miss Porter,\" the nurse said as she wedged another special leather pillow underneath the bend in her waste. This perfectly positioned the patient's ass, elevating it slightly for easy access. \n\n\"Excellent, thank you nurse. If you could please prepare the patient's anus for insertion,\" he instructed, as he continued to stroke and bounce his cock lightly. Jessica's heart raced in anticipation as she clutched the pillow underneath her tight. She could feel the wetness of her pussy beginning to drip all over her legs and the pillow below as she heard the nurse snap on a fresh pair of gloves. \n\nAlexa pumped several globs of viscous lube into her hand and positioned herself over the patient. With her left hand, she spread Jessica's cheeks wide and marveled at the swollen pucker of her anus. She had already taken so much, her ass was now an inch wide closed slit, as if she had a second pussy in the back. It was so hot - she had never seen one stretched so perfectly before. She found herself wishing her own ass had been so stretched. \n\nThe nurse began to slowly massage the puckered slit of Jessica's asshole. The patient began to moan at her touch. She began to slick the thick, jelly lube on the outside of her anus. The lube was extra thick, specially designed for anal insertion and hard, long fucking. The nurse felt the wetness of her pussy beneath her scrubs, desperate to touch herself, as she began to insert globs of lube into Jessica's ass. She shoved a large glob inside with two fingers, knowing that the stretched slit of her patient's asshole would easily take it inside. The walls of her anal canal felt smooth as silk as she rubbed her fingers around, as if rubbing the inside of a tube. Her ass was truly talented, she though as she continued to pump lube into her patient's hungry asshole. \n\n\"That looks good, nurse. Please prepare the procedure instrument now,\" the doctor instructed with a huge smile on his face. Alexa pulled out of Jessica's ass with a wet pop, eliciting a high pitched, \"oh!\" from her. She squirted another generous glob of lube into her gloved hand and walked over to Dr. Cooper standing behind the table. She looked up and smiled, maintaining eye contact as she began to slowly stroke his cock, spreading lube generously over his head and shaft. She jerked him slowly up and down, making slick sounds as she did. The doctor felt his balls begin to quiver as the nurse sensuously worked his cock, lubing him up for Jessica's waiting ass. Alexa was devastatingly hot when she did this, he was shocked he had never blown a load too soon, but she always knew when to stop. The nurse let the doctor's cock go and smiled as she watched it bounce up and down, slapping up at his abs with a wet smack. \n\n\"Excellent, thank you nurse. Please feel free to relax and watch the procedure. I will let know when we need your assistance again,\" the doctor said with a smile and wink. The nurse smiled and pulled down her scrubs and panties, revealing a bald pussy. She walked over to the couch and sat down, spreading her legs ready to pleasure herself as she watched the scene in front of her unfold. Her pussy was positively drooling and she was eager to get some relief. \"Okay Miss Porter, are you ready for the procedure?\" the doctor asked walking over to the table. \n\n\"Yes doctor!\" she practically shouted as she pushed her ass upwards, begging for the doctor to shove his hard, fat, perfect cock inside of it. She hadn't had her ass properly fucked in ages and she was desperate for it, desperate to feel her insides sprayed with cum, deep inside. \n\nThe doctor pulled himself up on the table. He was now on his knees, straddling Jessica's naked body below him. The soft padding of the exam table made it comfortable for him to fuck like this, just as he designed it. There had never been a better investment he made in his practice, he thought to himself as he marveled at the sight of his patient's waiting ass in front of him. He had done this many times before, but he was particularly excited to feel Jessica's talented hole wrapped around his cock. \n\n\"Okay Jessica, please just relax and let me know if you feel any pain or pressure,\" the doctor said softly. He parted her cheeks with both hands and began to position his cock at the closed slit of her ass. Pushing it forward, he began to rub the head of his throbbing, hard cock on the slicked up entrance of her hole. \"Ohhhhh doctor!\" Jessica moaned as she savored the first contact of his cock head with her hungry asshole. He began to poke it in and out slowly, gently probing at the entrance, all the while holding her cheeks wide apart. He did this for a minute or so before he was ready to enter her fully. \n\n\"Okay Jessica, take a deep breath and push out to allow my cock inside,\" he said calmly as he gripped the shaft of his hard seven inches, positioning it at the opening of her hole. She took a deep breath and pushed out. The doctor watched as the stretched slit of her hole began to open slightly and with a swift solid motion he shoved all seven inches inside. \n\n\"Oohhhhhhh my god!\" Jessica shouted. \"Ohhhhh doctor!\" she moaned as she began to pant in pleasure, savoring the sudden invasion of her rectum. She was so lubed up and stretched out from her play before that her hungry ass eagerly swallowed every inch of the doctor's fat cock inside of her. She felt so full and so stuffed - she had never been so stuffed full of cock before, not in her ass at least. \n\n\"Ohh fuck, very good, very good, Miss Porter,\" the doctor said, panting already. Her hole was so warm and wet and he had never had a patient take him so easily inside. He knew that her ass could take it all in one stroke, so he went for it. \"Okay relax and take this cock, Miss Porter, take this fat cock up that stretched ass cunt of yours,\" he said, grunting as he began to slowly pump in and out of her wanting ass. \n\n\"Ohhhh, ohhh, ohh!\" Jessica moaned with each stroke inside. The doctor's fat cock felt incredible, stretching her three inches wide as it easily glided in and out of her. She felt his weight as he laid down on top of her and moaned, \"ohhhhh doctor, yes, fuck me!\" He had fully mounted her and began to slam his cock in and out harder, in and out, in and out with wet sounds as he buried all seven inches to his balls inside each time. \n\nDr. Cooper worked Jessica's ass in a steady rhythm. He gripped the sides of the table as he slammed his swollen member deep into her stretched ass cunt - which is exactly what it was now. A swollen stretched slit, perfect to take a pounding from his cock. He ass was her second, dirty pussy, just for his pleasure. \n\n\"Ohh, ohh, ohh!\" Jessica moaned. She had never been fucked like this before. She savored the pleasure of the doctor's cock invading and plumbing in and out of her wanting rectum. She never wanted him to stop. Her pussy was on fire as she savored the feeling of his hard slams, in and out of her stretched, lubed, sloppy asshole. She loved getting fucked in all of her holes, but her ass had always been her favorite. It was indeed her new cunt, as Dr. Cooper proclaimed, as he shoved himself deep inside of it, over and over again. \n\n\"Ohhh fuuuuck, Miss Porter, your ass is incredible,\" the doctor said through panting. He wasn't kidding, he thought to himself, this was the best ass he had ever been inside of. \"Show me how strong your muscles are, squeeze my cock,\" he demanded. \n\n\"Ohhhhh doctor!\" Jessica said as she barred down, squeezing her doctor's cock on his out strokes. \n\n\"Oh fuck!\" he said as he felt his patient's strong muscles beginning to milk his cock as he pulled out of her. He had never had such pleasure from fucking anyone's ass before - this woman was incredible! He picked up the pace, feeling the quiver in his balls that let him know he was close. He pulled himself tighter against Jessica's naked body and put an arm beneath her neck and shoulders to pull her close. \n\nJessica smiled and moaned as she felt this. \"Yes doctor, fuck me, fuck my ass cunt! Fuck my dirty ass cunt!\" she practically screamed. The doctor picked up the pace and was fucking the absolute shit out of her, slamming hard and fast into her stretched ass. Jessica continued to squeeze his cock as best as she could, savoring the feeling of being stuffed so hard and well. \"Yes, fuck that ass cunt, fuck that ass pussy, doctor,\" she said, feeling dirtier than she ever had before. \n\nDr. Cooper felt his balls tingle as he heard his patient's nasty talk. It was so fucking hot and he wanted to play along. \"Ohhh fuck yeah, that's my ass, that's my ass cunt, feel my cock up that ass pussy of yours, that's what its for now, to serve cock!\" he said breathing hard as he continued to work her hole. Slamming in and out and in and out, he was fully mounted in heated passion. He couldn't believe he hadn't cum yet, but he could feel it coming. He was going to pump her full of so much cum, spraying deep inside her bowels, there was going to be so much of his hot seed.\n\nOn the couch, Alexa furiously rubbed her rock hard, wet clit as she took in the sight in front of her. She had never seen Dr. Cooper fuck a patient's ass so passionately. This woman really was something else. Feeling excluded, the nurse found herself standing up and walking over to the table. She went around to Jessica's face and knelt down to kiss her. \n\nJessica looked up and marveled at the sight of the sexy naked nurse in front of her. She eagerly lifted her head up to receive her kiss and moaned into her mouth as the doctor continued to pound her not sloppy, loose asshole. The nurse pulled away and continued to play with her clit, looking down and asking, \"do you like it? Do you like it when the doctor pounds your ass like that?\"\n\nJessica, a woman possessed by passion replied, \"fuck yes! I fucking love his cock shoved up my ass cunt! Now shove those tits in my mouth, nurse!\"\n\nHer eyes widening with shockingly pleasure, the nurse knelt down and shoved her left tit into the mouth of her patient. Jessica sucked the flesh inside and began to eagerly suck and lick at her nipple. As she bit harder, she was met with the pleasant surprise of milk. Alexa was lactating too! She looked up and locked eyes with the nurse as she tasted her sweet milk, eagerly sucking harder to get more into her mouth. \"You're not the only one who needs a good milking, hon,\" she said with a giggle. \n\n\"Fuck yes, suck those tits, suck those milky tits,\" the doctor grunted as he settled into a more sensual pattern of longer, firm strokes into Jessica's hungry ass. He lifted his weight up onto his hands so he could look down and watch as the seven inches of his shaft glided in and out of her ass slit with ease, the sounds of slopping lube now filled the room. \n\nAlexa moaned as she felt Jessica drain the milk from her tit. She popped the left one out and shoved the right one in with force, grabbing the woman's hair as she did. The nurse rarely took so much charge with a patient, but she could tell that this is exactly what the woman wanted - total dominance by a man and a woman. It was so fucking hot! Jessica moaned as she took in the overwhelming pleasure of suckling the nurse's engorged breast and the doctor's thick hard cock continuing to plumb her rectum, slow and hard. \n\nWith a final deep suck, Jessica drank the last of the milk from the nurses beautiful tit. The nurse popped it from her mouth and leaned down to shove her tongue deep into the woman's mouth. They eagerly sucked at each other's faces and moaned into each others mouths. The nurse pulled away and backed away, so as to give their patient a better view of her sopping wet pussy as she furiously pleasured herself. \n\nOut of instinct, Jessica reached out to feel the silky wetness of the nurses engorged pussy lips. \"Ohhhhhhhh fuuuuck!\" the woman moaned as she felt her patient's fingers begin to caress the wet folds of her cunt. Jessica looked up at the nurse as she began to deftly work her pussy, swirling firm circles around her hard clit. \"Ooooooooh fuuuuck yes, fuck yes!\" she said, starting to pant as she surrendered to the pleasure of the other woman's hand. \n\nDr. Cooper slowed his pace as he watched the scene in front of him. It was so fucking hot, he wanted to stave off bursting at the sight of it. \"Fuck yes, play with her cunt, make her cum Jessica, Alexa has earned it, make her cum,\" he said, as he slowly maintained a pace of in and out, in and out of her still slick, loose ass cunt. \n\n\"Yes doctor,\" Jessica responded with a smile. She looked up at Alexa as she deftly shoved two fingers inside of her wanting fuck hole. \n\n\"Ohhhhhhh fuck!\" the nurse said, as she savored the invasion of the other woman's fingers. Jessica began to expertly work her g-spot, immediately locating it, massaging it up and down while slightly fucking in and out of her. Alexa felt like her head was spinning - she had never had a woman work her pussy so good in this office before. A lot of the other women she had the opportunity to fuck in here clearly didn't regularly hook up with other women, so their nerves got the best of them and she got some heavy petting and making out at best. Jessica was the first to truly fuck her and work her pussy. \n\n\"Yes, fuck yes, oh your pussy is soooooo gooood!\" Jessica practically shouted. She had never in her life been able to pleasure a woman while also getting fucked by a man before. It felt like this couldn't possible be real, so she leaned in and let her lust truly take over her. \"Yes, that pussy is so good, so so so good,\" she said, grunting with primal pleasure. \n\nAlexa was overwhelmed and just moaned loudly as she heard this. This woman was a fucking animal and she loved it. She would absolutely be working overtime every time she came back to Dr. Cooper's office. \"Mmmmmmm oooohh yes, oh yes, work that pussy, work my pussy, I want to cum all over your hand,\" she said, panting. \n\n\"Oh yes, fuck, cum for me baby, cum all over mommy's hand, cum for me baby, I want to feel you cum,\" she said, possessed by the pleasure of the scene. The doctor began to fuck Jessica's ass harder at this, unable to contain himself any longer. Jessica furiously by rhythmically worked Alexa's g-spot, in and out, in and out of her pussy. Feeling her cunt begin to tighten, she reached up with her thumb and began to furiously rub her clit in tiny circles. \n\nThis was enough to put Alexa over the edge. \"Ohhh my goddd! Yes!!! Yes mommy!\" she screamed, as she felt the waves of her orgasm explode. \"Fuuuuuuuuuck yes!\" she screamed as she writhed in pleasure, riding Jessicas hand, reaching down with her own to shover her deeper inside of her cunt to feel it contract and cum all over her hand as she promised. \n\n\"Ohhhh fuuuuuck! Fuck yes!\" Jessica said, panting as she felt the doctor pick up the pace on her ass. \"Yes fuck, yes, fuck me doctor, I just made your nurse cum so hard, reward me with your hot load deep in my ass please, I need that treatment!\" she demanded, feeling cocky. \n\nAlexa's final shudder of her orgasm subsided and she pulled the other woman's hand out of her crotch. Jessica smiled as she hungrily shoved her fingers deep inside of her mouth as she made eye contact with the nurse. She moaned as she eagerly swallowed every bit of wet stickiness from Alexa's cum. It was sweet and perfect and she couldn't wait to eat that pussy someday soon. Alexa's eyes rolled back into her head at the sight and she reached down to plant a final kiss on her lover's mouth. \"Thank you mommy,\" she said with a smile as she pulled away and retired to the couch, exhausted. \n\n\"Atta girl,\" the doctor said with a wink as she walked by. \n\n\"She's all your doc, give her what she needs!\" she said with a smile. \n\n\"Yes, fuck me doctor, fuck my ass cunt,\" Jessica said with a grunt. \n\n\"Doctor's orders!\" he said with his own grunt as he began to pound her ass hard, with the goal of cumming deep inside. \n\n\"Ohh, oohh, ohh, ohh!\" Jessica moaned excitedly as she felt the doctor's cock rape her hole harder and harder. It was absolute exctasy and she could feel another orgasm building, from pleasuring Alexa and getting her ass so thoroughly reamed. \n\n\"Yes, take it, take it, take this cock in your ass pussy\" he said, breathing heavy. \"That ass pussy is all mine, take it.\"\n\nThe doctor lowered his weight on top and began furiously humping in and out, slamming his cock in and out of her wanting rectum with brute force. He felt his balls begin to tighten and he needed release. In and out, in and out, in and out, he slammed into Jessica's hungry ass over and over. \n\n\"Here it comes, your prescription is ready,\" he said and with a last hard stroke he slammed as deep inside of Jessica's ass as he could, holding all seven inches deep inside of her as he felt his cock explode. \"Oohhhhh fuuuuuuck!\" he yelled, as spasm after spasm after spasm of cum shot from his dick, spraying the hot, wet, warm walls of Jessica's stretched rectum. \n\n\"Oohhhh fuuuuuuck yes!\" Jessica yelled back as she squeezed his pulsing cock with her anal muscles as tight as she could. She ground her pussy mound into the leather pillow below her as she did this and felt another orgasm begin to take over. \"Oohhhhhhh fuuuuuck!\" she yelled as she erupted into another orgasm. Her body convulsed - her ass muscles and her vagina pulsed hard as waves pleasure took over her body. \n\nThe doctor, now sweaty and panting heavily, rested his weight on top of Jessica. He savored the feeling of his still rock hard cock enveloped in the warm, pulsing ass of his patient. He had never fucked a patient so hard and so intensely before, nor had he enjoyed fucking a patient of his so much before. This woman was special and he found himself desperately hoping that she book more appointments with him. \n\n\"Excellent, excellent,\" the doctor said while catching his breath. \"I believe your prescription was injected successfully,\" he said as he slowly pulled his softening cock out of Jessica's now distended anus. There was a wet squishing sound as he did this and he looked down to marvel at his work. The lips of her anus were now puffy and swollen and it was gaping at least an inch and a half wide. He could see the milky white of his cum sitting in her rectum and he marveled at how much he was able to spew inside of her. \n\nHe stood up, regaining his composure, and walked over to the cabinets on the other side of the room. Jessica could feel her asshole gaping and she could actually feel how full of cum she was, it was incredible. She heard the doctor open the door of the cabinet and pull something out. She gasped as she felt rounded, cold steel against her now sore anus lips. \"Oh, doctor!\" she said. \n\n\"Sorry for the coldness, just relax. This is a plug to keep your prescription inside as long as possible, Miss Porter. For maximum effectiveness, I will need you to hold as much of it inside as possible for at least ten to fifteen minutes,\" the doctor said as he forced the bulb of the steel bulbous butt plug into her still gaping asshole. It was a solid two and a half inches wide at it's biggest girth. ",
        "\"Ohhhh!\" Jessica moaned happily as she felt the steel plug snap into place as her anus grabbed it tightly. The doctor gave it one last push to feel it sink into place and stepped back to take in the sight. Her puffy ass lips gripped the cold, hard steel eagerly. Had he not just emptied his balls, his cock would be rock hard at attention again at the the sight of Jessica in such a vulnerable position - ass up on the table, swollen anus plugged tightly. \n\n\"Excellent, just relax Miss Porter while your medicine settles,\" the doctor said as he walked over to Alexa sitting on the couch. He smiled as he brought his cock to her lips. Knowing what he wanted, the nurse happily began to suck the juices and cum off of his soft cock. She moaned as she savored the taste and expertly cleaned him as best she could. \"Mmmmmmm fuck, thank you nurse,\" he said with a smile. \n\nThe doctor sat down beside Alexa on the couch and took a deep breath. The doctor and the nurse relaxed and took in the sight of their patient up on the table in front of them. \n\n___\n\nTo be continued...\n\n \n"
    ],
    "authorname": "DirkDaggler",
    "tags": [
        "anal",
        "doctor",
        "exam",
        "ffm threesome",
        "lactation",
        "medical",
        "nurse",
        "oral",
        "piss"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/an-appointment-with-dr-cooper"
}