{
    "title": "Raw Ch. 04",
    "pages": [
        "I wanted to kill him, but first I would have to allow myself in his presence again.\n\nBrian Hughes had turned my life upside down in the short span of three weeks. I had believed him when he'd said our botched sexual relationship wouldn't affect his exclusive interview with my nom de plume, Drake Alexander. That he'd already submitted his article before picking me up that pivotal Saturday afternoon. But printed words did not lie.\n\nThe problem? I hadn't read them yet. I didn't have the guts. I just assumed the worst.\n\n\"Becca, take a deep breath. And another...\" Malcolm's voice was soft in my ear, but it was far from calm. He struggled to keep control, evidenced by the tightening of his hands on my shoulders as he attempted to relax me.\n\nIt seemed odd to me that Malcolm\u2014someone I'd only met twenty-one days ago\u2014would be as tense as I was about what had been published. I mean, this was about me, my life, not his. If Brian had gone back on his word\u2014his non-disclosure agreement about revealing my identity or even the fact that Drake Alexander was female\u2014Malcolm wouldn't be affected. I, on the other hand, risked a raid from the paparazzi and the sudden scrutiny of every critic within the city of Chicago, not to mention the rest of the country.\n\n\"Becca. Relax your shoulders, dammit.\"\n\n\"Malcolm, I don't think a massage is going to solve\u2014\"\n\n\"It will if you let it. Getting anxious about what you don't know is definitely not going to help. You need a clear head.\"\n\nI tried to stand up, but he held me to the chair at the kitchen island. \"Leave me alone, and give me the damn phone.\"\n\n\"No.\"\n\n\"I'm not calling him, I'm calling Sue. I can't read it. She can tell me the truth. At least if it's bad or good.\"\n\n\"The answer is still no.\"\n\n\"Take your hands off me, Malcolm!\"\n\n\"No. You are not yourself. Sit. Relax.\"\n\n\"Dammit! I don't want to relax!\" I tried once more to stand. This time, he let me, but I gasped as he gripped my hand and tugged me towards the stairs leading up to his room.\n\nI closed my eyes. As much as I struggled to grasp how close we'd become in such a short time, I couldn't imagine myself without him. If it weren't for Malcolm's presence in my life right now, I probably would have thought I was having a bad dream. I had grabbed my mail from the office on Friday after work and headed to Malcolm's house in Wheaton for the weekend. We'd spent most of the time in the basement on the solitary ladder-backed chair practicing how not to top from the bottom, or up in the bedroom having sex\u2014both in and out of scenes\u2014breaking only for food and sleep every few hours.\n\nIt wasn't until Sunday morning when I'd figured out how to check my voicemail on my new iPhone\u2014too much confusing technology in one little glass box if you asked me\u2014that I'd discovered the disaster that plagued me now. Sue, my agent and editor, was having a panic attack by the sound of her unusually rushed and high-pitched voice:\n\n\"Have you read the article? Call me as soon as you get this. I mean it!\"\n\nI had proceeded to dump my duffle bag out on the kitchen table to sift through the contents for the rubber-banded stack of mail. The \"Lit Wild\" magazine was sealed in a clear, plastic bag between a flyer from Target and an ad from a writing school on how to become a successful writer. I'd snorted at the latter and ripped open the bag.\n\nBut I hadn't gotten any further than staring at the front cover. One of the promos was titled, \"The truth about the enigmatic author behind the Dex Knightly Mysteries.\"\n\nMalcolm had stood back, not asking any questions despite not knowing what was going on. I'd shoved the unopened magazine across the counter and slowly stood to stare out the window. My brain had rushed in a million different directions like a computer circuit board on full capacity. Did I want to read the article? What if it had my real name listed? No one had my new cell number yet, and no one knew my landline number or home address, but that wouldn't stop people from trying to find out...or camping out at the office. Should I set up a press conference to come out to my readers?\n\nI guess he'd tried to talk to me for five minutes, but I kept brushing his hand away. I couldn't think straight when he was touching me. He was all I could think about; what he was doing with his hands, what I wanted him to do with other body parts. I didn't want him distracting me. But he'd been insistent and eventually led me back to my chair at the counter where he proceeded to massage my shoulders.\n\nBut now? Now we were upstairs and he was pulling my clothes off me faster than I'd ever seen. That was saying a lot since Friday night had left a trail of clothes from the front door all the way up the stairs in less than a minute. We'd been separated a week, and our hormone levels had spiked the moment we'd seen each other. This was all moving so fast, and yet it seemed so natural, too.\n\nHe remained clothed now, though. Without a word, he dragged me through the long shadowy room to the dresser and removed something from a drawer. He sat down on the edge of the mattress, pulling me with him, and promptly laid me face-first across his left knee. His right leg closed over the back of my calves, and his left arm leaned on my upper back, both pinning me in place. I could feel his chest moving rapidly against my side as he breathed.\n\nI wiggled, trying to get loose. It didn't work. \"Malcolm?\"\n\n\"Say the safe word when you can't take any more.\"\n\nMy body went rigid. I trusted him, but for a moment...\n\n\"Start counting.\"\n\n\"Why?\"\n\nSomething hard that wasn't his hand smacked my left butt cheek. I screeched and flinched.\n\n\"Shit, Malcolm! Can't we talk about this?\"\n\n\"You had your chance to talk before. Count, Lady Becca. No other words, unless you want me to stop.\"\n\nSomething had irked him. I had not seen this side of him, and I wasn't sure if I liked it. The title he'd chosen to call me told me he had moved into a scene. He was in his element. He was\u2014\n\n\"I'm waiting, Lady Becca.\"\n\nI gulped. \"One.\"\n\nAfter ten more smacks on both butt cheeks with what I figured must be the back of a hairbrush\u2014and me cringing and counting after each one\u2014he spoke again.\n\n\"I was not trying to be mean.\" His breathing was slower now. In time with his spanking. \"You needed to calm down. To think rationally.\"\n\n\"Fifteen.\" My ass stung. My jaw hurt from clenching my teeth. I had to grip the sheets tighter and tighter with each new swat. I would hold out as long as I could. He'd spanked me one day last week. I'd only been able to take his hand, and I hadn't been able to sit for an hour afterwards. This time seemed different, though. As if it was a punishment.\n\n\"It was for your own good,\" he said. \"You need to trust me on that, too. Not just in the bedroom or in a scene.\"\n\n\"Twenty.\" Tears streaked my cheeks now. \"Twenty-one.\"\n\n\"I care for you, Lady Becca. More than just as a sexual, kinky partner. I hope you know that.\"\n\nI let out a strangled cry as he laid another smack across my raw ass. I had hoped, but I hadn't wanted to assume he felt the same as I did. I tried to sit up to look at him, but I screamed as he hit me even harder.\n\nHe tightened his hold on me, ceasing my wiggling. \"Keep counting.\"\n\n\"Um...twenty-two.\"\n\n\"I'm serious. I didn't have any expectations going into this.\"\n\n\"Twenty-three.\"\n\n\"Your brother asked me to help. He's a good, close friend. It was the least I could do. I was okay with us parting ways after that week of training. But after you'd left? I felt something was missing. And when Drake called me to say you needed backup for that meeting? That he trusted me enough to take his place? I didn't even hesitate. I know what it is now. You've gotten under my skin. In the best possible way, though. I want you. I need you. I have this unexplainable desire to protect you.\"\n\nI buried my head in the sheet, our combined scent from our earlier lovemaking infiltrating my head. My chest felt tight. My ass burned from his attempt to relax and punish me at the same time. I could feel the fiery tingle. I didn't want to imagine what it looked like. I'd seen pictures online. The bruising some girls had as a result scared me a little.\n\n\"I know we rushed into this. I'm sorry if I'm pushing you too fast. It's just I've never felt like this before with a partner. It's all new for me. To want more than just to train you.\"\n\n\"Twenty-four.\" If I wasn't imagining it, he suddenly wasn't hitting as hard. \"Twenty-five.\"\n\n\"I know you're confused, possibly mad at that man. I'm not sure I understand the situation, but I want you to explain it to me when you're ready.\"\n\n\"Twenty-eight.\" Oh! That was his hand now. It wasn't as firm, and it was warm.\n\n\"I need you to trust me, Lady Becca. Can you do that? Will you do that?\"\n\n\"Thirty.\" It came out as a sob, because of his words and because his hand rested on my ass now after the last spank, gently rubbing.\n\n\"You can answer.\"\n\nI gasped for breath as his hand slowly slid down and brushed against the inside of my thigh. On the outside of my thigh, I felt his arousal press against his jeans. \"Yes, Sir Malcolm. I want to trust you.\"\n\n\"Am I moving too fast?\" His fingers stroked up the crack of my ass, and for once, I did not flinch as he moved over the one area I forbade him to touch. Instead, I moaned.\n\n\"May I speak freely?\"\n\n\"Of course.\" He stroked again, moving a little further down where I knew I was swollen and wet, and a shudder swept through my body as I stifled a moan against my arm.\n\nHe had accomplished his goal: he'd calmed me down. I was no longer as edgy, but a new frustration was setting in. And that would not do.\n\n\"I agree, we've moved quite quickly into this relationship. But I'm not complaining.\" I paused to swallow heavily. Then I heard some sort of sound that was a mix between a moan and a cry when his fingers played at my clit. Oh my! I was making that noise! \"Except at the moment, Sir, you're not moving fast enough.\"\n\nHis hand stilled, and I heard his sharp intake of breath. I held my own breath, waiting for the smack of his hand or the hairbrush for being so bold.\n\nSuddenly, he released me so I was laying flat on my stomach, my legs dangling off the side of the mattress. He gripped my hips, yanking me back and up so my knees were on the bed now. I resisted the urge to glance back as I heard the soft clank as he unbuckled his belt; the metallic scrape as he lowered his zipper; and the soft swish and plop as his jeans fell the floor.\n\nHis cock pressed at my entrance. He paused for just a moment before he penetrated in a hard thrust. I bit my lip to silence my scream and tasted blood. His fingers wrapped around my wrists, pulling my arms behind my back. He adjusted to hold both wrists in one large hand, and then he gripped my hair.\n\n\"Is that better, Lady Becca?\" His voice was a deep growl in my ear.\n\n\"Oh, God, yes!\" I cringed as he pumped his hips once against my ass. Then I screamed at the sudden jolt of pain as his belly rubbed against my overly-sensitized buttocks.\n\nHis cock jerked deep inside of me. It felt so good, and the pain receded as he stroked twice, slower, more gently. I moaned, long and deep, relaxing beneath him.\n\n\"Good girl.\"\n\nHe said no more, but he was far from silent. His groans combined with my cries. He sped up, hitting hard and deep, and despite the lingering uncomfortable feeling in my nether region, I was enjoying the moment. It was a much-needed respite from what had thrown our morning into a whirlwind.\n\nI concentrated on breathing. On feeling him move inside of me. On his grip on my hands and hair, the latter which he pulled occasionally. I closed my eyes and rode the gentle waves of an orgasm, wishing for more but thankful I'd received something.\n\nEventually, he withdrew, and I felt the hot stream of his ejaculation on my lower back. He released my hands but not my hair, reached around with his free hand, and proceeded to stroke me\u2014inside and out\u2014with his fingers. I came hard, screaming his name.\n\nI lay still for several minutes, my knees pulled up under me now, my face buried in my arms and the sheets. Malcolm disappeared but returned a moment later with a warm washcloth and cleaned my back. Then he turned me onto my side and climbed into bed behind me, pulling the covers over us.\n\n\"Sleep, Lady Becca.\" Malcolm's warm breath brushed my neck as he planted a kiss there. \"We can talk more when you wake.\"\n\nI mumbled something and snuggled back against him, flinching when his softening cock touched my tender ass. Then I slipped into a dreamless sleep.\n\n###\n\n\"Read it to me.\"\n\nI raised my eyebrows and stared at Malcolm over my glass of wine Sunday evening as we lounged in the Star Wars den. \"Is that a question or a command?\"\n\n\"Will you please read the article to me?\"\n\nI hesitated, merely because I didn't really want to ruin the tranquil mood that had set in since this morning's session.\n\nI'd slept most of the afternoon, which had partly to do with my own exhaustion and partly because a thunderstorm had rolled in while he, Master Malcolm, was making me, Lady Becca, relax. The day had been useless outside of bed after that. Now, I had a full belly from take out Thai food, and I didn't want to think about my real life I had to go back to tomorrow. I needed to start cranking out a couple of chapters of my new book before Sue wrote me off as a has-been author. And bringing up the sore subject of the interview and the resulting article just reminded me of what was waiting for me outside this house. Not to mention the fact that I had yet to read said article.\n\nBut I obliged and went to retrieve the magazine that had been forgotten in the kitchen. When I returned and sat down again, I clutched it to my chest. \"Are you sure about this?\"\n\nMalcolm stared at me, his eyes warm and his smile soft. Both were comforting, although they did little to ease the tension in my shoulders now. \"I'm serious. Or don't you want me to read it? I can leave you alone to read it first, if you want.\"\n\n\"It's not that...\"\n\n\"I want to be here for you. To support you. But I can't help you if you don't trust me.\"\n\n\"I do trust you. And I do want you here. But what if it's, you know, bad?\"\n\n\"Becca, sweetie, surely you've had negative reviews before. You've been a best-selling author for over a decade. Not everyone is going to like your books. He's just a critic.\"\n\nI frowned. \"Not anymore.\"\n\n\"Just read it to me.\"\n\n\"Fine.\"\n\nI checked the table of contents then flipped through the glossy pages of adult-themed advertisements and articles to page forty-two. I snorted softly. Apparently I wasn't that important or popular to be bestowed a location near the front of the magazine. Would there be a metaphorical knife buried just as deeply in my back from his words?\n\n***** His words have the ability to create a mental picture of the epitome of Mr. Tall-Dark-And-Handsome. To make you feel like you are there beside his characters, experiencing every word, every action. To have you reliving scenes in your head long after the last page has been turned.\n\nWho is this magician who has invaded the cars, bedrooms, and locked bathrooms of women across the country without actually stepping foot inside? He is of course Drake Alexander, author of the seven best-selling novels in the \"Dex Knightly Mysteries\" series. While his stories aren't on the scale of the widely popular \"Fifty Shades\" trilogy that has infected the minds of more adult women than teenage girls who have swooned over Edward and Jacob in the \"Twilight\" saga, Mr. Alexander has carved his own niche into the world of erotic literature while still remaining on the safe side of mainstream writing.\n\nDex Knightly may be every woman's dream come true, but ladies, hold onto to your corsets, handcuffs, and whips: Drake Alexander is far from who you might imagine him to be.\n\nHe is most definitely not a superhuman savior for damsels in distress. Your Dashing Drake is anything but. In fact, I would say he is more...strikingly beautiful. Which, yes, is an odd choice to describe a man. But that is because is he no mere man. In fact, you may have passed him on the street, sat beside him in a restaurant, or stood behind him in line for coffee yesterday morning and never known it.\n\nSome may say that's quite brash for me to say in a magazine such as this where we review and discuss every kinky book known to the underground and even to those vanilla wannabe folks above. Every fictional manuscript\u2014whether a short story or a novel\u2014is full of exaggerated characters and storylines. But what does one do when it is the author who is just as fictional as his hero is?\n\nI have had the exclusive privilege of meeting and interviewing the author behind the illustrious \"Dex Knightly Mysteries.\" If I had to describe him in one word? Enigmatic. As if he was ripped right out of the pages of one of Mr. Knightly's escapades. He is one of those clients with a private past who remains in the shadows for the duration of the novel, never quite revealing his identity and yet never drawing attention to himself.\n\nFluent in writing style and creative in thought process, Drake Alexander embodies what a successful author should be. He ceases to amaze his readers, as the best-seller lists continue to prove. But do we ever really know our favorite authors? Don't we just assume the picture on the jacket is the true representation of the genius mind cranking out pages upon pages of words that instill excitement, fear, hope, desperation, lust, and a hunger for more in each reader?\n\nJust as covert as his protagonist\u2014depicted as a faceless silhouette in a leather jacket, fedora, and sunglasses on the front cover\u2014Drake Alexander fails to provide an actual picture of himself on the back of his books. Instead, we are treated to an equally elusive side-profile of a shadowy figure in a high-back chair by a blazing fire holding a book. A picture that \u2014regardless of what he looks like\u2014imparts the desire to, \"Come sit with me. I'll tell you a story.\"\n\nNo, Drake Alexander does not actually exist. He is in fact, the alter ego of another widely known author. Whom that author is, I am not at liberty to say as I've been sworn to secrecy. But not knowing the truth can be just as arousing as that first experience with a new toy or the first step into the world of BDSM with a trusted partner. The lack of knowledge can be quite the aphrodisiac.\n\nIt is my pleasure to share with you my question and answer session with Drake Alexander. Quite possibly, it will only make you more curious about his identity. Hopefully, though, you will be enlightened and will thoroughly enjoy the brief but profound journey into the mind of a writer I can only be left in awe of and give my highest praise to. *****\n\nI admit it; I got choked up a couple of times while reading. When I was done, I heard Malcolm let out a long, deep breath. Yeah. That had not been what I'd been expecting, either. I'd been prepared for Brian to have outted me to the public...and to have to call my lawyer to sue for breach of contract. \n\nI was pleasantly surprised. The fan mail would be flowing again soon, and I'd have to figure out if and how to answer it. I half wondered if Brian had contacted Sue to try to reach me for a comment.\n\n\"Becca?\" Malcolm's hand on mine made me look up.\n\n\"Hmm?\"\n\n\"Are you okay?\"\n\nI lowered the magazine and closed my eyes, leaning my head back against the couch. \"Yes.\"\n\n\"But?\"\n\n\"There is no 'but.' I'm fine.\"\n\n\"Trust me. I may have only known you for three weeks, but I can tell when you're hesitating. I'm attuned to you. It's my nature as a Dom, but with you it's even stronger. I can't explain it. But I know there's something you're not saying.\"\n\nI felt a shiver slither up my back. I had noticed the same thing the last few days, especially when we weren't in a scene. A little touch here, a simple word there. We clicked as I never had with another guy. ",
        "He took the magazine out of my hands, and then he pulled me toward him, onto his lap. \"You're thinking about him, aren't you? Wishing you'd stayed?\"\n\nMy eyes flew open at that. \"No! I do not want to go back to him.\"\n\nWhen I tried to pull away, Malcolm tightened his embrace. I finally relented and stopped struggling.\n\n\"That's not what I asked.\"\n\nI glared up at him. \"I don't want him. I want you.\"\n\n\"But you were thinking about him?\"\n\n\"Only that the man who wrote that article was not the man in the restaurant. Not the man in the bedroom.\"\n\nMalcolm brushed my hair back from my forehead. \"Do you want to talk about it?\"\n\nI started to shake my head, but I leaned into his touch instead, sighing. \"I told you before. He was cold, unemotional. I was in a never-ending scene. It's like he was able to shut himself off with a switch.\"\n\n\"Was he mean to you?\"\n\nI thought back to those several hours I'd spent in Brian's bedroom. \"No. He was actually quite gentle, although very much in control. As if he had an agenda and wanted to show me everything he knew how to do. But I had no say in what we did except to tell him to stop.\"\n\nMalcolm said nothing but continued to stroke my hair. It wasn't anything he hadn't heard before from me. I felt like I was becoming a CD stuck on repeat.\n\n\"He had been polite and professional during the interview. But he didn't talk much during lunch or the time in the car. And when we reached his place, whatever he did say was in commands.\n\n\"Well, he is a Dominant.\"\n\nI lightly punched Malcolm in the chest. \"You know what I mean. He didn't ask me questions. Did I like this? Was that too rough? Did I want more? You know? To find out what I could tolerate. It was either take it like he dealt it, or end it and leave.\"\n\nMalcolm had pressed his cheek to my head, and I felt him nod.\n\n\"Obviously he didn't turn me off to the idea of submission, but I just wanted more from him. The only way I can describe it is, I felt like he didn't care about what I thought or felt. He didn't really act like he wanted to get to know me. We had an interview for a few hours the night before, but that was more about my writing, not about me as a person. I don't know if he'd planned to take me back to his place when he first called the next day, but his overall lack of conversation just rubbed me the wrong way. It was a disconnection.\"\n\n\"You want a relationship, not just a fuck buddy. He apparently wanted the latter, disguised as a live-in slave.\"\n\nI snorted. \"As awful as that sounds, I think you hit it right on the head. Do you think I was just looking for a fling, though? A one-night stand? I mean, I barely knew him and I let him take me home and screw me senseless! What kind of person does that? Geesh. I really can't believe I did that.\"\n\n\"Becca, I don't think any less of you for going after something you desired. Maybe you didn't do it in the best way possible, but that's how you learn. Granted we kind of dove in head first ourselves. But we did get to know each other a bit beforehand. And we're backtracking, taking that effort now.\"\n\n\"Yeah.\" I snuggled against his chest. I felt content when I was with Malcolm. Never rushed, never forced. I sighed deeply, though, unable to shake a thought.\n\n\"What?\"\n\n\"Nothing.\"\n\n\"Liar. Don't hide from me. Please. Tell me?\"\n\n\"Now that I've read his article? To see he could write with such depth? To hint that although Drake Alexander was not all he claimed to be, not knowing the truth might be a good thing? It shows he did care, on some level. He didn't violate my privacy. He held true to our contract. It just bothers me that I didn't see that part of him at all during the time we were together.\"\n\n\"And if you had?\"\n\nI turned my head to look up at Malcolm. \"It doesn't matter. Although he wrote a great article that will probably increase book sales and my fan base, I can see through him. It's just another fa\u00e7ade he puts on to impress people. That's his game. And I want no part of it.\"\n\n\"Good answer.\" Malcolm pressed his lips to mine. He held my chin in place and stared into my eyes. \"And a very wise answer, too.\"\n\nI smiled and reached my hand up behind his neck to pull him back to me. Our lips touched briefly, then again with more intensity. I moaned and heard him echo my reaction.\n\nWe maneuvered so that we were laying side-by-side on the couch, our legs intertwined as we proceeded to make out like school kids. It was absolutely wonderful.\n\n###\n\n\"What time is our reservation?\" I tucked the end of my towel in above my breasts and tried to comb through my hair while keeping my phone wedge between my shoulder and ear.\n\n\"Six-thirty. We're almost to the city. What did you decide to wear?\" Malcolm asked from the other end. \n\n\"Not a chance. If I told you it would no longer be a surprise. And if you're driving, I don't want you to have an accident.\"\n\n\"Your brother is driving. And you are a tease.\"\n\n\"So you've told me before. I have to finish getting ready.\"\n\n\"See you soon. Bye.\"\n\nI shook my head and set the phone down so I could dry my hair.\n\nIn the bathroom mirror, as the fog from the hot shower cleared, I could see my bed behind me and the outfit I'd laid on it. I could also see the door to my closet. What I had really wanted to wear was buried in the depths of the shadows: that little blue and black dress, my \"just in case\" outfit I'd thrown in when I'd stayed at the hotel over a month ago after my interview. I loved that dress. But...\n\nIt was also what I had worn for my lunch date with Brian. A date that had turned into something exciting but bizarre and had shaken my world like an earthquake that only I had felt. I hadn't worn stockings or a garter belt, either, since that meeting. Malcolm had asked me once to wear them for a scene, but it just reminded me too much of my time with Brian. I know that Malcolm had said he'd understood. And I loved him for that. I wanted to wear them again, I really did. I felt extra sexy when I dressed like that. I just wasn't ready yet.\n\nI blew out my breath along with the thoughts of Brian. He was gone, out of my life. Sue had not received any more calls from him after I had abruptly ended our dinner. That seemed so long ago. Malcolm had saved the day and my sanity. We'd been together ever since. But this was the first time he was coming to hang out on my turf.\n\nMy brother, Drake, had suggested we get together in the city soon, but I kept making excuses. I had spent the last two weekends\u2014along with several days during the week\u2014at Malcolm's house. My work was slacking, and Sue was insistent on at least three chapters by the end of the summer. It was already September next week, and I barely had one chapter completed.\n\nWhen Drake had called to go out tonight, I'd declined. But Drake wouldn't take no for an answer. He said he was bringing Daphne and Malcolm, and they would kidnap me if necessary.\n\nSo here I was, fretting over my clothes and my hair, worried yet excited about what they had planned for the evening. I tripped down the stairs while trying to walk and put on my shoes.\n\n\"You look good enough to eat,\" Malcolm said after I opened the door. He stepped into the foyer, slid a hand around my waist, and pulled me close to nuzzle my neck below my ear. \"And smell like it, too.\"\n\nI laughed and tried to push him away. \"I don't think my brother could wait that long. Unless you think he'd be willing to change his plans?\"\n\n\"No ma'am, sorry.\" Malcolm kissed my neck, nipping it lightly. \"But I've got ideas for later.\"\n\n\"So you like?\" I stepped back and twirled around once. My black, knee-length skirt flared out as I turned. I grinned as I saw Malcolm's eyes widen and his tongue dart out to lick his lips in the mirror above the entry table.\n\n\"Do that again, but faster.\"\n\nI obeyed, and he let out a deep growl.\n\n\"I like how that skirt comes all the way up. And I love the black thong. You are a tease. I might have to punish you for that. But not right now, because your brother would throttle me for delaying any longer.\"\n\nI felt the wetness gathering between my legs. \"A spanking for wearing a thong?\"\n\n\"Who said anything about a spanking? Punishment comes in many forms.\"\n\nOh my.\n\n\"Grab your purse and keys. Let's go.\" Malcolm turned away from me, but I could still see his reflection.\n\nHis eyes closed briefly, and his shoulders shook a little under his black sports jacket. I lowered my gaze to where the jacket hid his ass that I knew looked mighty fine in those dark jeans. My eyes rose up again to stare at the boat-neck of his gray and green graphic T-shirt just as he swallowed. I growled myself now as I saw his Adam's apple bob, and wished we had time to play.\n\nI hid my smile and locked up the condo as we stepped out onto the front stoop. A cool breeze swept past, making my nipples harden against the cups of the dark-red boustier with spaghetti straps I chosen to wear. I was glad I'd thrown a black mini-cardigan over top. I would have been freezing without it. For late August in the city, the nights were getting cooler, reminding us that autumn was on the way.\n\nI exchanged greetings with my brother and his girlfriend-slash-sub, Daphne, as I opened the backseat passenger-side door to Drake's car that was idling at the curb. Malcolm slid in beside me, and then we were off.\n\n\"So where are we going after we eat?\" I sighed softly as Malcolm took my hand and caressed his fingers over my skin.\n\n\"It's a surprise. Not far.\" Drake winked at me in the rearview mirror and turned up the radio.\n\nI stuck my tongue out at him and turned to smile at Malcolm. \"I've missed you.\"\n\n\"Same, here. How's the story going?\"\n\n\"It's a whole new genre for me. I'm not used to writing explicit sex scenes, or having my stories revolve around a sexual relationship. I've been writing mysteries for five years now. It's fun, just different.\"\n\n\"I think you'll do fine. Are you going to publish under your own name?\"\n\n\"I haven't decided yet.\"\n\n\"Any backlash from the article?\" He said it slowly, his voice quieter.\n\nI shook my head. \"I don't want to think about that, tonight.\"\n\n\"I understand.\" He put his arm around my shoulders and kissed the top of my head. \"I'm sorry I brought it up.\"\n\n\"It's okay.\"\n\nWe arrived at the restaurant and let the valet park the car. Once we were seated inside, the guys mostly talked to each other, and Daphne talked to me about a vacation she and Drake were planning Labor Day weekend. I made a mental note to talk to Malcolm about doing something ourselves. If I could work non-stop for the next two weeks, I could crank out three rough chapters and then break for the long holiday as a reward. Yeah, it was doable.\n\nOur meals came, and talking pretty much ceased as we ate. We had chosen to split a bottle of wine between the four of us, and I was feeling pretty good by the time the waitress cleared our empty plates. Drake insisted on picking up the check, so Daphne and I thought we'd hit the ladies' room before we moved on to the next part of the night.\n\nI pushed my chair back to stand and dropped my napkin on the floor. As I was leaning down to pick it up, Malcolm touched my hand to stop me. I raised my eyes to his, not moving.\n\n\"I want you to remove the thong, Lady Becca,\" he whispered.\n\nI gasped and flinched. He was going to do a scene? Right here? In public?\n\nHis grip tightened ever so slightly as I tried to sit up. \"Do you trust me?\"\n\nI blinked. My heart was thumping in my ears. I was nervous. But suddenly, I was damn horny.\n\n\"Take a deep breath.\"\n\nI just nodded.\n\n\"Lady Becca, take a deep breath.\" Malcolm's hot breath brushed my ear.\n\nThis time I breathed in deeply then let it out slowly.\n\n\"You'll be fine. Go to the restroom with Daphne, and bring me back your thong. Do not tell her what you are doing.\"\n\n\"Becca, did you change your mind?\" Daphne said from my other side.\n\nI swiped up my napkin as soon as Malcolm released my hand, and I turned back to her. \"No, let's go.\"\n\nI have no idea how I managed to walk and not run to the back of the restaurant. There was only one toilet, so we had to take turns. I went first, afraid I'd chicken out if I didn't. When I was done and had tucked my panties into my purse, I stood outside the door and waited for Daphne.\n\n\"Well, hello there Ms. Rockland. Or should I say, Drake Alexander?\"\n\nI froze and slowly turned from the poster of various pastas I had been reading on the wall. Of all the places to run into Brian...\n\nHe whistled low, and I pushed my shoulders back, standing up straighter.\n\n\"Ms. Rockland, or Becca, will do fine.\"\n\nHe nodded and his eyes did a very slow sweep from my feet up. Unlike the last time we had met, I felt nothing in the way of arousal as he checked me out...or as I glanced at him in his ever-present suit and tie. Maybe I was over him. That would be wonderful. My head could be at peace now whenever I did something with Malcolm that I had done with Brian. I could wear my favorite dress again. And stockings!\n\n\"Did you get your copy of the article?\"\n\nI let a soft smile escape. \"Yes, I did. Thank you.\"\n\nBrian gave a barely noticeable nod. \"I take it you liked it?\"\n\nI shifted my clutch purse to under my left arm and suddenly remembered I had no panties on. I must have blushed, because he chuckled.\n\n\"You were surprised, weren't you?\"\n\n\"I was.\" I couldn't think of anything else to say, especially since I realized Daphne was still in the restroom. Did Malcolm and Drake wonder why we hadn't returned yet?\n\n\"Have you had a lot of responses? Questioning fans? Irate ones that didn't know their hero, their fantastic mystery writer, didn't really exist?\"\n\nI frowned. \"Yes, no thanks to you. But I've gotten quite a few letters from those who felt the same way as you do...that not knowing my true identity added onto the whole mystery. It's all part of being a writer. At the end of the day, the good outweighs the bad.\"\n\n\"Darling, just because I wrote something doesn't mean that's how I feel.\" He reached up and tucked a strand of my hair behind my ear. \"I had a job to do. And you limited me, so I spun it a different way. That's all.\"\n\nI flinched and stepped back, right into the wall. \"I figured as much. You were callous during the interview and especially after, then you write what could only be called a complimentary article. But I see the truth now. Under the surface of all that glamorous 'I promised not to tell' fa\u00e7ade, you've intentionally planted doubt in my readers. You may be the most calculating man I have ever met. How I could have even thought\u2014\"\n\n\"Really? You've thought of me?\" His rare grin widened.\n\nFor the first time, I saw an evilness lurking behind his eyes. I scoffed. \"You look like a normal business man in an Armani suit. But you're really a diabolical monster who gets a thrill out of bringing innocent women to their knees with your false charms and amazing cock. Except when you don't get your way.\"\n\n\"Amazing cock? Wow. You know,\" he stepped toward me, making me press harder against the wall, \"if I didn't know you better, I'd think you were sorry you left. You want me to take you home, Becca? To show you what it's really like to be chased?\"\n\nMy hand clenched in a fist. And I started to raise it, but he stopped it with his own hand. His strong fingers wrapped around mine, but I refused to release my tension.\n\nHe clicked his tongue at me. \"Now, now, Becca. You don't want to cause a scene.\"\n\n\"Let go of me.\" It came out as a growl. Partly because I couldn't understand what was taking Daphne so long.\n\n\"I think we could work on this animosity you have towards me. Maybe introduce you to a whip or a flogger. I mean, I could have outted you, but I was a gentleman. And this is how you repay me?\"\n\n\"We have a contract. I would have sued you.\"\n\n\"That would have been fun in court. I have more money than God does, darling. You're not the first person who wanted an NDA. I have great lawyers. When you get right down to it, I'm a journalist. I just write for a prestigious, erotic magazine.\"\n\n\"You're an asshole!\"\n\n\"Now there's something we haven't tried yet. I can rectify that. But first, I think I should write a follow-up piece for the September issue. Now that I've stirred up the pot a bit, I should tell them all about the true Drake Alexander. How she was just a has-been romance writer and had to change her name to sell her books. You can hide out at my place until the frenzy dies down, and we'll work on those things I told you about.\"\n\n\"You wouldn't\u2014\"\n\nHe kissed me suddenly, and I did the first thing I could think of. I kneed him in the groin.\n\nBrian dropped my hand and let out a gurgle of a groan. As he stepped back and turned away, a fist came out of nowhere and punched him square in the jaw.\n\nI looked up and saw Malcolm standing there, shaking his hand.\n\n\"The lady said to let her go.\"\n\nMy legs gave out, and Malcolm was there to catch me. A door opened beside me, and I blinked through the sudden tears in my eyes. Daphne started to crouch down next to me, but Malcolm shooed her off.\n\n\"Are you okay, Becca?\" He helped me stand, then he pulled a handkerchief out of his back pocket and dabbed it at my cheeks. \"Hold it in until we get out of here, okay? You can cry in the car.\"\n\nI nodded and sniffled once. \"I'm fine. Just a little rattled.\"\n\nWe turned to exit the hallway only to find ourselves facing a police officer and the owner of the restaurant.\n\n\"Ma'am, are you okay?\" The officer looked at me and then at Brian who was still on the floor but had managed to sit up and brace his back against the wall. \"Is this the man who assaulted you?\"\n\nI started to shake my head; I didn't want to make an issue of this. But then I saw Daphne standing behind the officer, subtly waving her iPhone back and forth. I clamped my mouth shut, took a deep breath, and then nodded.\n\n\"Yes, Sir, I was waiting for my friend who was in the restroom when he grabbed my hand, shoved me against the wall and forced himself on me. When he kissed me, I kneed him.\"\n\n\"Do you know him?\"\n\n\"Only in passing.\" I clamped my mouth shut before I let too much spill. Now was not the time or the place, if ever.\n\n\"Did you punch him?\" The corner of the officer's mouth twitched. The restaurant owner's eyes widened.\n\n\"No, Sir. That was my boyfriend. He showed up right after.\"\n\n\"Would you like to press charges, ma'am?\"\n\nI hesitated only a second. Without even blinking\u2014but forcing myself not to smile\u2014I nodded.\n\nWhich is how the four of us found ourselves at the police station filing a complaint instead of going wherever the boys had planned after dinner. I knew Drake would never let me live this one down.\n\nThey divided us up to get our own versions of the altercation, and I was able to talk to a woman detective. When she asked me if I knew Brian and why he would have attacked me, I was resistant. But she eventually convinced me it was better to be upfront, so I told her everything. Who I was, who Drake Alexander was, and who Brian Hughes was. I didn't go into the kinky details, but now one more person knew my secret. She didn't show much of a reaction except the occasional sympathetic smile.\n\nWhen we were done, she asked if I wanted to see a paramedic. I said no, the ice they had given me for my knee was fine. I also declined a restraining order. I waited in the lobby with Drake while the police talked to Malcolm and Daphne, and I finally got the other side of what had been happening while Brian accosted me.\n\n\"So Daphne was in the bathroom the whole time taping it?\" I snorted and leaned my head on my brother's shoulder. \"I thought maybe she had fallen in.\"\n\nDrake chuckled. \"She said she was opening the door to leave when she heard someone talking to you. She sent a text to me, saying you were talking about some article. I knew it had to be Brian. I told her to video tape it. We were thinking blackmail, you know?\"",
        "\"She's a good sub, isn't she?\" I smiled up at him, and he put his arm around me.\n\n\"She's the best, sis. And a whole lot more.\"\n\n\"How did the cop get involved?\"\n\n\"One of the cooks heard the commotion and called the owner who was up front. The cop had gotten off duty and was picking up food to go. Just perfect timing.\"\n\nI shook my head. \"I'll say.\"\n\nMalcolm and Daphne joined us fifteen minutes later. An officer took us back to the restaurant to get Drake's car. None of us said anything until we were back on the road. Suddenly, Daphne started laughing. Then Drake. Then Malcolm, who pulled me into his arms and kissed my forehead. Finally, I joined in.\n\n\"I'm so sorry guys. I know you had this whole night planned. Just what were we going to do?\"\n\nDrake pulled over into a rare parking spot and let the car idle as he turned to face us in the backseat. \"It was a play party someone I know was hosting. You didn't have to participate, but we thought you'd like to see some other things that are out there in the world of kinkiness.\"\n\n\"That's so sweet. Thank you Drake. Is the party over already?\"\n\n\"No, but they lock the doors after a certain time for privacy and the security of the participants.\"\n\n\"Well, damn.\"\n\n\"Do you want us to take you home, Becca?\" Malcolm held my hand now, his thumb brushing back and forth over the top.\n\n\"I don't know\u2014\"\n\n\"We could go to a club,\" Daphne said. She turned in her seat as well. \"I mean, we're all dressed up, and it's Friday night in the city.\"\n\n\"I'm up for that,\" I shrugged. \"But I don't know where to go. I can think of only Excalibur, but\u2014\"\n\n\"Malcolm?\" Drake said. \"Are you thinking what I'm thinking?\"\n\nMalcolm glanced at me then nodded. \"Do you remember how to get there?\"\n\nDrake just smiled and pulled the car back out into traffic.\n\n\"Where are we going?\" I tried to look outside, but Malcolm grasped my chin and turned me back to him.\n\n\"It's a surprise.\" He kissed me softly.\n\nTwenty minutes later, we were still in the city. Yet, like that first lunch date I'd had with Brian, it was a part of the city I had never been to before. It looked like the old meatpacking district on the south side. But in the darkness?\n\nDrake parked in a lot with at least thirty other cars, and we crossed the street to what looked like an abandoned warehouse. The front door was metal and squealed as he opened it. Once we were inside, we went down a dimly lit hallway just a couple of feet before we reached another door. Malcolm pressed a button on the wall, and a buzzing sound echoed in the narrow room. A moment later, a little window in the door opened.\n\n\"Can I help you?\" A deep voice asked, but I could see no one there.\n\nMalcolm held up his driver's license and another card to the window. The window closed suddenly. We were back in silence.\n\n\"Um, what is this place?\" I shivered a little and moved closer to Malcolm. \"And who was that?\"\n\n\"Shh, it's okay.\" Malcolm rubbed his hand up and down my bare arm.\n\nI turned to see Daphne casually leaning against Drake, as if she didn't have a care in the world except that she was with him. Okay, if they weren't concerned, I shouldn't be either, right?\n\nJust when I figured we'd wasted our time, the door buzzed again and then opened.\n\n\"After you, Master Malcolm,\" Drake chuckled.\n\nI tried to glance at my brother, but Malcolm led me through the door. A dark man sat at a small desk just inside. On the desk was a phone and a clipboard. The only light was a small lamp, and I could see the man's black hands playing a game on an iPhone. Malcolm ushered me past and down another dark corridor, this one lined with white rope lights in wavy designs on the walls.\n\nMy heels and Daphne's clicked on the cement floor. I let out a nervous giggle, thinking about what had transpired thus far tonight. What else would the night bring?\n\nAt the end of the hall was yet another door. Malcolm opened it, and loud music blared out. As we stepped through the doorway, I saw the place was lit up by throbbing and dancing neon lights, most of them situated over a stage at the far side of the room where it looked like a DJ was set up. The floor was covered with people dancing.\n\n\"Is it just a club?\" I gripped Malcolm's hand, afraid we'd be separated.\n\n\"Sort of.\" Drake stepped up beside us, and I noticed Daphne was grinning and rocking on her feet.\n\n\"Okay, what am I missing?\" I looked around again. It was just regular old dance club to me, albeit in an abandoned building and you needed a secret password or handshake to enter.\n\nDaphne reached out and grabbed my hand. \"It's a BDSM club, Becca. You can just dance and chat, or find an empty room and well, you know.\"\n\nI spun around to stare at Malcolm. \"Is she serious?\"\n\nMalcolm scratched his head. \"Um, yeah. Are you too freaked out?\"\n\nI slowly glanced around the spacious room again. \"No, it looks normal enough to me.\"\n\n\"How about we get a seat and some drinks?\" Drake pointed to a wall of tables off to our right.\n\nWe got situated at a square table with a black tablecloth that seemed to melt right into the floor. Drake took our orders and walked off to a brightly lit bar near the stage.\n\n\"This is where I first met Drake. Malcolm, too,\" Daphne said. She kept looking around, bouncing a little in her chair. \"God, I miss coming here.\"\n\n\"Really?\" I smiled at Malcolm. This was his old stomping grounds? I felt privileged. \"I didn't know you used to live in the city.\"\n\n\"It's been a long time. I lived in a different suburb. I used to go to munches all the time. Sometimes we'd come here afterwards to relax. First time I met your brother, it was at a munch in Downer's Grove. After about the third one, he came with us here. I introduced him to a couple of girls. He just didn't hit it off with anyone though.\"\n\nDaphne giggled. \"Not until you introduced him to me.\"\n\n\"How right you are.\" Malcolm gave her a smile and turned back to me. \"We couldn't take you to the play party, so this is the next best thing. You can't watch anyone in a scene, but you can relax and enjoy the music. Dance if you like. Just be warned, this isn't for the faint of heart. People really bump and grind out there. It's a place where they can feel free to let loose of their inhibitions.\"\n\n\"Here we go,\" Drake said, setting a tray on the tabletop with two martini glasses of a neon blue liquid and two bottles of beer. There were also four glow-in-the-dark red circles on the tray.\n\n\"What are those for?\" I picked up one circle and realized it was a rubber bracelet.\n\n\"Put it on.\" Malcolm grabbed one and put it on his left wrist. Daphne and Drake did the same. \"It's an indicator that you are taken. Green means you are open for a partner or connection, and yellow means you are just visiting or looking. Helps people know in the dark if you're approachable or not.\"\n\n\"Oh, gotcha.\" I sipped my tropical-flavored martini\u2014something Daphne had suggested but I couldn't remember the name\u2014and sat back, letting the beat of the music invade my head.\n\n\"I want to dance,\" Daphne said, taking Drake's hand.\n\nDrake took a swig of his beer and stood. \"As you wish, my lady.\"\n\nI laughed and waved as they headed to the dance floor.\n\nMalcolm scooted his chair around the table so he was next to mine. From where we sat, we could see the stage, but a wall to my left blocked the entrance. The tables to the right of us were empty. Not that anyone could see anything it was so dark. The flashing lights were mostly centered on the dance floor, but occasionally they bounced our way. The only constant lighting near us were the dull glow from rope lights along the baseboard.\n\nHe took my left hand his hand, and his thumb caressed my skin. \"Are you really okay with this?\"\n\n\"Yes, I am.\" I took another drink. \"I might even get up and dance with you.\"\n\n\"Might you now?\"\n\nI just grinned.\n\nFor the next half hour, we listened to the music or chatted with Daphne and Drake when they chose to join us again. I had never known my brother to be so into dancing. Then again, what guy wouldn't if he had Daphne beside him?\n\nShe'd worn a blue, sleeveless, corseted top that emphasized her eyes and white jeans and heels with a white denim jacket to finish it off. She'd ditched the latter as soon as we'd entered the club, but she was quite noticeable out on the dance floor, especially when the blacklights came on. Drake, on the other hand, blended in, but he was just as easy on eyes in his jeans and dark T-shirt with an open dress-shirt over top as a jacket. I'd never paid much attention to his style before. It was very much like Malcolm's, but still his own. If I hadn't thought so before, Drake and Daphne made an excellent couple.\n\nMalcolm offered to get the next round of drinks. While he was gone, I got the dance bug as a modified version of a familiar tune thumped through the speakers somewhere above us. As soon as he put the tray of drinks down, I stood and removed my sweater. I rounded the table and walked backwards to the dance floor, curling my finger at him with a wink. He shucked off his jacket and met me, taking my hand and leading me the rest of the way.\n\nWe started on the edge of the crowd, just kind of swaying to the beat in our own way. But as the crowd moved, so did we. Soon, we found ourselves in the middle of the mass of bodies that pressed together in ways that made Baby's first glimpse of the worker's hangout in \"Dirty Dancing\" look like junior prom.\n\nAt first, I had seen a couple of yellow bracelets when we were on the outskirts of the dance area. But now, buried in the throng of dancers, it was like a Christmas tree. Hands were everywhere, rubbing and teasing\u2014on asses and breasts and groins mixed with holding hair and hips and other hands\u2014all accentuated by the swirling glow of red and green bracelets. I was entranced by the beauty of it all. The \"I don't care who sees me\" attitude by most everyone.\n\nThe song changed to something slower but still with a heavy beat. I got lost in the rhythm. When Malcolm wrapped an arm around my waist and pulled me against him, I closed my eyes. His thigh slid between mine, and I moaned. With one arm around his neck, I slowly humped his leg.\n\nHe kissed me, his tongue teasing my lips before pressing for entrance. I opened to him, felt his tongue flick against mine. One hand pressed against my back, supporting me, while the other caressed my ass over my skirt.\n\nThe hand on my ass eventually slid up my side and cupped my breast. Through the material, I felt his thumb skim over my nipple. I cried out, arching away from him. But his body followed mine, arching into me, and he sucked on my lower lip, gently biting as if to keep hold of me.\n\nWhen we weren't kissing, I was watching a couple over his shoulder. The woman had her back to her male partner and appeared to be grinding her ass against his crotch. One of his hands was down the front of her pants. She had her head flung back against his shoulder, and his head was bent forward, nuzzled against her neck. She gripped his arm that he had wrapped around her chest. Her other hand was occupied with her breast as she groped herself through her shirt.\n\nMalcolm continued to tease and arouse me as the music pulsed on and the dancers pressed in around us. I continued to watch the couple. And as my boyfriend touched me in ways I would never have previously allowed in public, I experienced another breakthrough moment in the realm of kinkdom.\n\nIn the middle of a dance floor of a secret BDSM club in downtown Chicago, I had an orgasm. And no one could hear my screams of pleasure.\n\nMalcolm held me close as I rode out the waves. It wasn't nearly as strong as skin-to-skin contact or having intercourse, but it left me shaking and my knees weak.\n\nWhen I'd calmed down, he led me back to our table and pushed my drink towards me. The shadows and lights played across his features, and I suddenly envisioned him as Dex Knightly. Dark and debonair, yet not overly so. And I wanted to be one of his conquests like I'd dreamed up in the seven different plots I'd created for him.\n\nNo, wait. I wanted to be his only conquest. The ultimate one.\n\nHe sipped his beer and stared at me.\n\nI giggled. \"What?\"\n\n\"Can I see your purse?\"\n\nI slowly lowered my glass, remembering what I had done at the restaurant. \"Why?\"\n\nHe tilted his head down, and I didn't need the lights to know he had raised an eyebrow. \"Lady Becca?\"\n\nI gulped. Then I gave him my small clutch. I held my breath while he opened the snap closure and stuck his hand inside. Ever so slowly, he pulled out my black thong. The lights on the dance floor flashed away from our area, and all I could see was his red bracelet rising from the table up to his face. I moaned softly then. He was sniffing my panties.\n\n\"Very good, Lady Becca.\" His voice was low and rough when he leaned toward me.\n\nAn idea suddenly hit me. I don't know where it came from, and I didn't take the time to second-guess it. Not caring if anyone could see me, I quickly slid under the table, making sure the tablecloth covered my feet. I heard Malcolm call my name, but I didn't answer. I was too busy folding my sweater and placing it between my knees and the cement floor.\n\nI put my hands on his thighs, and his hands met mine. Our fingers laced together for a brief moment. I skipped any preliminaries and quickly undid his belt and zipper. He adjusted his hips a little until I was able to pull his cock free.\n\nI wrapped one hand around my boyfriend's\u2014my Master's\u2014cock and slid the crown into my mouth.\n\nI squeezed my hand tight as I pumped, bobbing my head as I sucked, thankful that the table was tall and I didn't hit my head. I thought of Malcolm and how he had danced with me. How he'd brought me to climax out there amongst all those strangers.\n\nI poured out my gratitude into worshipping his cock. Slowly caressing, sucking, and licking. Sometimes just part of his cock, sometimes as much of his thick shaft that I could fit into my mouth.\n\nWhen he tried to grab my hair and guide me, I pushed his hands away. No, not this time. This time it was all me. He could punish me later for topping, but I owed him this. He needed to know what his presence made me want to do to him.\n\nThe more I pleasured him, the more aroused I became. The more I realized that this was a club for kinky people like me\u2014like us. That yes, we had done some racy dancing, but this was different. This was borderline taboo. Granted I was hiding beneath a tablecloth, but we were still in public, and I was giving him a blowjob!\n\nHe knew it. I knew it. And God, it made me horny.\n\nAs I stroked, I watched my bracelet move in the darkness, pumping the air as I pumped Malcolm's glorious cock. I rested my arms on his thighs, felt the powerful muscles flexing as he tried not to take over and rock his hips into my face.\n\nThe music changed to a new song, and I paused as I heard Daphne and Drake talking. I smiled and returned to teasing the eye of Malcolm's cock with the tip of my tongue, licking up the precum. I heard them ask where I was, and Malcolm lied. I don't know how he did it with such an even tone. He said I had gone to the restroom. Daphne joked and wanted to know if she needed to go rescue me with her phone again. They all laughed, and then Drake and Daphne said they'd be back in a bit, for the two of us to have fun.\n\nI had just slid his cock fully into my mouth again when Malcolm's hands gently pushed my face away from him. He grasped one of my hands and tugged. I groaned in disappointment as I watched him put his cock away. I wiped the back of my hand against my mouth and retrieved my sweater.\n\nMalcolm was standing when I emerged from under the table. He gestured to my drink, and I downed it, unable to keep my eyes off his clenched jaw that the flashing lights kept highlighting. Without a word, he handed me my purse and took my hand.\n\nI flinched. I was in trouble. For good or bad remained to be seen.\n\nI gasped as he weaved his way through the dancers to a red-lit doorway on the far wall instead of toward the exit as I had expected. Red crystal-like beads hung down creating a curtain, and he roughly pushed them aside. They tinkled as they fell back into place behind us. There was a flight of stairs on the other side, and he ascended with me in tow.\n\nI didn't try to speak. I was still a little in shock about what I had done; what we had done. And a little miffed that he hadn't let me bring him to release as he had for me. He must really be mad. This surely couldn't be all about his earlier promise to punish me for wearing the thong. Especially since said thong was no longer on my body. I hoped he hadn't left it at our table.\n\nAt the top of the winding stairs was a long corridor filled with more red-lit doorways. However, these had doors. Most were closed, and Malcolm proceeded down the hall until he came to an open one. With a grunt, he pulled me inside and closed the door, locking it.\n\nThe base of the music was a dull thump beneath our feet. The room looked gray until I heard a soft click and dim, yellow light lit up around the borders of the ceiling. I could see the outline of a bed at the far end of the room. The room itself was small but also held a couch and a long narrow table as well as a bench similar to what Brian had concocted. On the wall behind Malcolm, there was a rack with a variety of whips, floggers, and paddles.\n\n\"You do have my panties, right?\" I asked, shuddering. I turned around to see him unbuttoning his pants.\n\n\"Yes. Now, shh, Lady Becca.\"\n\nI moaned, not sure if he could hear me, or if that counted as 'not being quiet.' I started to unhook my boustier, but he slapped my hand away.\n\n\"No, leave it on.\"\n\nI didn't have a chance to question him as he suddenly rushed me and slammed my back against the wall, knocking the breath out of me despite the thin padding I felt there. His teeth, lips, and tongue assaulted my mouth. It was delicious.\n\nHis hands yanked my skirt up, wrapped around my thighs, and lifted my body, spreading my legs wide.\n\nI whimpered as cool air teased my bared sex.\n\n\"Mine,\" was all he said as he broke the kiss and lowered me hard and fast onto his cock.\n\nI screamed and instantly came while trying to grip him with my arms around his neck and my legs around his waist. Somehow, I managed to ride out the wave and hold on for dear life as he fucked me against the wall.\n\nWhen he was done, when we'd both come together, he carried me over to the bed, still joined. I curled into his body, shaking, and he massaged and caressed my back and shoulders as I crashed. I'd had scenes with him where I'd been worse than this, like the first time we'd had a scene at my place. But this was different. The whole thing at the restaurant and with the police. The dance with the resulting orgasm. Sucking his cock under the table. Being drug through dark halls and unceremoniously screwed in a public room.\n\nI'd had surge after surge of adrenaline, and I was coming down. Fast.\n\nI cried. He soothed. And when I could talk again, I asked him what had just happened.\n\n\"You.\" He kissed my jaw. \"You obeyed and gave me the panties. You trusted me, even though I could see the fear in your eyes. You held your ground and fought back when it came to dealing with Brian. You let me dance with you. Really dance. And then you got under that table...\"\n\n\"I'm sorry if I shouldn't have done that. I just wanted to thank you. For rescuing me. Again. And for that dance. My brother couldn't see me, could he? They didn't know I was there, right?\"\n\nMalcolm shook his head.\n\n\"Oh, thank God.\"\n\n\"There's nothing to be sorry about.\" He kissed me softly. \"And I was thanking you.\"\n\nI let out a tired laugh. \"Oh, is that what that was?\"\n\n\"Maybe I didn't make myself clear,\" he said with a growl.\n\nHe kissed me a little deeper, and I felt his cock thicken against my thigh. His hand slid under my skirt and rubbed my clit. I mewled like a kitten. He swallowed my cry as he pressed his cock up into my waiting pussy. I felt a shudder as we connected fully once more, then I relaxed around him.",
        "Slowly, gently, he made me come again and again until I said I understood what he had been telling me.\n\nTo be honest, I had heard him the first time. But he had called me a tease. I couldn't disappoint him now, could I?\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "spanking",
        "exhibitionism"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/raw-ch-04"
}