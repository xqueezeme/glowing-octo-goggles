{
    "title": "Organism X Ch. 03",
    "pages": [
        "Molly smeared a dollop of the sample onto the microscope slide and slipped it under the lens. The image started out blurry, but Molly was adept with the tool and pretty soon, she got a clearer picture. \n\nMolly gazed down and gasped at what she saw. Millions of little objects wiggled about in the protoplasm, their bodies covered in cilia. If she had to guess, Molly might have called these things cells, but there were issue with that.\n\nFirst of all, they didn't seem to have even a malleable single form. Instead, the gelatinous blobs reshaped constantly, something sprouting little tentacles, other times inflating, sometimes splitting apart and coming back together. To her knowledge, nothing terrestrial worked like this. \n\n\"Babe,\" Molly said. \"Come see this.\"\n\nHunter walked over and took a leak through the lens. He seemed equally shocked.\n\n\"It has to be contamination. I mean it happens all the time. Meteorite lands in water or mud, maybe it has organic compounds in it, maybe it just has surface area. Either way, it's covered in less than a second.\"\n\n\"I considered that, but the behavior of these guys is off the charts. Hunter, we've seen countless samples from the water here. Look me in the eyes and tell me with a straight face that you've seen organisms do this kind of thing.\"\n\nHunter broke into a smile. \n\n\"I haven't,\" he said.\n\n\"This is unreal,\" Molly giggled. \"Aliens. Hunter, we found aliens!\"\n\n\"We found something,\" he said, desperately trying to keep his expectations low.\n\n***\n\nMegan burst through the door and into the room, already launching into a tirade. She had something to say and now, finally, she had someone who would listen. \n\nLeah simply watched the girl with hungry eyes. \n\n\"Can we talk? Thanks, Leah, you're the best! So you won't believe what I saw Brad do. Wait, I should back up.\"\n\nMegan stepped into a small puddle of slime and yelped.\n\n\"Hey, what is this stuff? Jessie and I were wondering. It's pretty gross.\"\n\n\"I had a lava lamp explode,\" Leah whispered quietly as she closed the door and moved closer to Megan. \n\n\"It's icky. Why haven't you cleaned it up?\"\n\n\"Had an assignment due, took priority,\" Leah said tonelessly. Megan just accepted this.\n\n\"Brad is totally giving me the cold shoulder and I'm done. All we ever do is board game nights and movie nights, always with his friends. Never any private time. And then today, guess what? He lied to me!\"\n\n\"Oh, I'm sorry,\" Leah cooed. She came up to stand next to Megan by her bed and stared closeness at the girl, feeling the rising need inside. Something was shifting, waking up. It needed let out.\n\n\"I've been waiting all day to talk to you. Jessie is just a jerk about this, don't tell her I said that, and Emily just doesn't care.\"\n\n\"I care,\" Leah said.\n\n\"See! You're the sweetest. I knew you would listen! Hey, can we go by Jessie's bed, it's pretty gross over here.\"\n\nAs Megan crossed the room, her back turned, Leah reached between her legs and covered her fingers in the slime that now seemed to endlessly leak from her burning pussy. Megan never noticed.\n\n\"So I need your advice,\" Megan said. \"Let me lay everything out in full.\"\n\nThe girl launched into a rambling rant about this, that, and the other. Leah pretended to listen, but the excitement was hard to contain. She desperately craved the prattling brunette that had been her friend. \n\nStill, the mishap with Jessie had proven the need for subtlety, so Leah struggled to contain herself.\n\nShe sidled up next to Megan, making sure to get in close. With Jessie, this would have sent up red flags, but Megan was hopelessly clingy and very touchy.\n\n\"So it seems like Brad doesn't like me, but I like him. Should I try to move on? I feel like that's gonna be painful, but better in the long run.\"\n\n\"Definitely move on,\" Leah said softly.\n\n\"Oh yeah?\"\n\n\"There are much bigger and better things.\" \n\nLeah took the opportunity to wrap her arms around the girl. Megan, ever the oblivious sweetheart, welcomed the hug. With delicate care, Leah gently rubbed her slimy fingers across Megan's exposed back, rubbing some of the slime into the pretty brunette's soft flesh. \n\nMegan gasped slightly, but did not break away. She gazed into Leah's eyes, looking so very sad and desperate. \n\nWhat a poor, hopeless girl, Leah thought. There had been so many hours and so many boys. So many relationships that never worked out. Leah had listened to Megan through all of them. \n\n\"Do you really think there's someone out there for me?\"\n\n\"I know there is,\" Leah said, her lips breaking into a wicked smile. \n\n\"Who?\" Megan asked, her eyes starting to water. \n\n\"Me.\" Leah said.\n\n\"What?\"\n\nLeah made her move. She brought her lips in and planted a soft, wet kiss on the pretty, nervous brunette. \n\nMegan squealed through the kiss and pushed back against Leah, but with far less force than Jessie had used. The slime was starting to work into Megan's system, clouding her thoughts.\n\nLeah pushed harder, snaking her tongue into Megan's mouth, allowing her corrupt saliva to gush in with every mouthy kiss. She felt Megan's muscles loosen in her grip. \n\nPulling back, allowing a trail of green-tinted saliva to link their mouths, Leah inspected her new ward. Megan was bright red and looked as if she were going to faint. Leah stroked the girl's hair, taking in her simple girl-next-door looks and her cute, slender body. \n\nHow had she never liked girls before this point? They were so soft and pretty. Leah ran a gentle hand up from Megan's belly to her small breast, working her fingers under the push-up bra the girl had worn to impress so many boys. \n\nWithin Leah's womb, something stirred, desperate for release. Leah suddenly felt giddy as she felt the voice within again. She was about to get a sister! \n\nStill, Leah wanted to have fun with her prey. She squeezed Megan's small tit, taking time to caress and pinch the girl's little pink nipple. Then she went in for another wet kiss. \n\nMegan was like jello in Leah's arms now. The saliva and slime had performed their dual purpose of subduing the girl and awakening her lust. Leah could even feel Megan kissing her back now. \n\n\"Leah,\" Megan whimpered. \"I-I don't know if.\" \n\nThe girl trailed off, tears streaming down her cherry red cheeks. \n\n\"What?\" Leah giggled, cupping Megan's face in her hand. \n\n\"I'm not-I'm not into girls.\"\n\n\"You don't seem certain.\" \n\nLeah took the opportunity to take off the sweatshirt, revealing her flawless body to Megan. \n\n\"Maybe this can convince you,\" Leah crooned.\n\nShe pulled Megan into another deep kiss and with her right hand, harvested some of the copious slime from her snatch. Megan blubbered, but did not fight back, the chemicals having drained her will completely. \n\nNext, Leah jammed her fingers down the hem of Megan's shorts and under her panties. She smeared the goo onto Megan's glistening pussy lips, reveling in the softness of the girl's crotch. \n\nThe reaction was immediate. Megan arched her back and let out a loud yelp as Leah felt a gush of fluid on her fingers. Before long, Megan was involuntarily bucking her hips against Leah's slime covered fingers. \n\n\"No. No!\" Megan whined. \"What's happening to me?\"\n\n\"Something wonderful,\" Leah whispered. \n\n\"Please, get off of me. I don't want this.\" \n\n\"You're saying that,\" Leah said. \"But your body is saying something different.\" \n\n\"Leah, please! This is wrong. I can't-I-OH!\" Megan was cut off as Leah picked up her pace on her crotch, expertly rubbing the girl's clit. \n\n\"Cum for me, Megan,\" Leah said through heavy panting. \"Cum for me!\" \n\n\"No!\" \n\n\"Yes!\" \n\nWith that, Leah pulled Megan into another deep kiss and began to rub the girl's crotch faster and faster. Megan thrust her hips against Leah's fingers to match the pace of the fingering. Suddenly, Leah felt the girl's entire body go rigid. Megan proceeded to cum against Leah's fingers intensely, soaking Leah's fingers and her panties in girl-honey. \n\nLeah felt the girl go slack in her arms. Megan was still conscious, but only barely. Taking extra care, Leah lowered her friend to the floor of the dorm-room and straddled her. \n\nNext, Leah inched Megan's shorts and panties down, exposing her wet pussy to the world. All the while, Megan gaped at Leah with terrified eyes, blubbering incoherently. \n\nLeah could feel herself rapidly approaching a climax like no other. Her body ached with a need strangely both alien and familiar. The need to reproduce, as old as humankind, now manifested in an entirely new light. Leah could feel in her very bones that soon she would not be alone. \n\nShe thrust her crotch down onto Megan's, making sure to spread as much slime to the girl as possible. It felt incredible to rub her pussy lips against Megan's own, burning her mind with the awesome pleasure. \n\nLeah just wanted to feel Megan. To smell her and hold her. To experience this whimpering, quivering young woman to the fullest. However, the sudden, painful lurching in Leah's crotch cut this off. \n\nNow it was Leah's turn to yelp as she suddenly felt something large and wet fill her pussy, inching down from her womb. \n\n\"Leah,\" Megan cried. \"I can't take this. Stop!\" \n\nLeah was incapable of responding. A second later, a thick, bulbous green head of tentacle flesh emerged from her pussy, dripping slime. It snaked out of Leah's pussy and seemed to sense the air, almost like a snake. \n\nThen it turned towards Megan's exposed pussy and the reaction was immediate. It shot at Megan's pussy, crushing up against her tight lips. \n\nLeah watched in shocked bliss as her-her child-struggled against Megan's womanhood. She heard a tearing, followed by Megan's horrified scream, and the tentacle plunged into Megan's pussy. \n\nIt was different than the one that changed Leah. It was larger, thicker, and of a slightly different shape. It had a thick head and a ribbed shaft not unlike a male penis. The color was also darker-a greenish black. \n\nThe wet squelching of the creature slipping into Megan inch by inch was music to Leah's ears. She watched in awe as this hideous creature made Megan like her. \n\nLeah thrust her hips against Megan's, helping push the creature deeper. Megan could only make small cries and whimpers as the monstrous girth made her its host. \n\nWith an audible 'schlick' sound, the creature exited Leah's vagina. Leah gazed in wonder as the last few inches slipped into Megan's pussy. There was blood dripping onto the floor from the girl's torn hymen. So she was a virgin? Perfect, Leah thought. \n\nFinally, the monstrous appendage disappeared within Megan's nether lips, it's tail flicking through the air before pulling all the way in. Megan arched her back and bucked her hips instinctually as the creature moved deeper, working its way to her womb. \n\nLeah stood and admired her new sister. Megan would make a wonderful host and Leah could not wait to watch Megan change. \n\nShe reached down and lifted brunette up, a feat that was now much easier. Leah carried Megan, who was rapidly losing consciousness, over to her bed and placed the girl under the covers. Next, Leah turned off the light and slipped under the covers herself, spooning Megan. She wanted to be there to feel every moment of Megan's transformation. \n\n***\n\n\"Jesus, she tried to kiss you?\" Nina asked.\n\n\"She tried to rape me Nina. I'm telling you, it was terrifying. It's like she's demonically possessed.\" \n\n\"Well you can stay here tonight if you want,\" Emma said. \n\nJessie had ended up at the dorm room of the captain and co-captain of the Hornettes, the rather unfortunately named cheerleader team for the small college. Jessie was not a member, but it seemed like the majority of her friends were. \n\n\"Thanks,\" Jessie said. \"I really appreciate this, you guys.\" \n\n\"No problem!\" Nina said. \"But what are you going to do?\"\n\nJessie shrugged. She had no idea. She felt scared and worse than that, helpless. \n\n\"I'll probably go to public safety tomorrow morning. I just don't want to ruin her life or anything. It's just, I need to get back into my room.\"\n\n\"I think you're right to do this,\" Emmy said, swiping her curly black hair out of her eyes. \n\n\"Thanks. And make sure to watch your backs around her. Something is up with Leah, something really bad.\" \n\nNina and Emmy nodded somberly. \n\n***\n\nMegan was panting heavily. Her whole body ached and tingled. Somehow, at some point, she had lost the rest of her clothes. \n\nThe room was dark and she was under the covers and someone was spooning her. Megan thought the soft, full-figured form nestled against her back felt incredible. \n\nA soft hand reached down and lightly brushed Megan's pussy, sending shocking tingles up her spine. Megan moaned, loving the feeling. \n\nWhat is this? The girl wondered. Fragmented memories occasionally shot through her mind, reminding her of the events leading up to this, but Megan could not make a coherent thread out of it. \n\n\"You're awake,\" a voice said. It was Leah Bardot's voice. \n\n\"Leah. Leah, I feel,\" Megan cooed softly. \n\nLeah giggled and brought a hand up to Megan's chest. Megan was shocked by the sensation. Her breasts were hypersensitive, but that was not what caught her off guard. There was just so much of them. She must of have grown by two cup sizes at least! \n\nMegan looked down and gazed in wonder at her breasts. They were now nearly the size of large grapefruits! \n\n\"What's happening to me?\" Megan asked. \n\n\"You're changing, Megan. Doesn't it feel amazing?\"\n\n\"Yes,\" Megan cooed softly. \"I love it.\" \n\n\"It's only going to get better, sister.\""
    ],
    "authorname": "DevilBookCorruptions",
    "tags": [
        "corruption",
        "girl-on-girl",
        "tentacle",
        "transformation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/organism-x-ch-03"
}