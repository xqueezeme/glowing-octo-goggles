{
    "title": "Flowers for Jill Ch. 07",
    "pages": [
        "Author's Note: \n\nFirst things first, I'm soooo sorry about the long wait. I feel terrible about slacking off like this, but I've had some of the busiest months at work, add hockey season and traveling to that, and you have a verrry busy girl. I meant to finish this earlier, but I had to go to D.C. for the Winter Classic and spent some time there. If you were at the game and you ran across a tall, slim brunette in a Toews t-shirt, then you probably ran across me, and you should've said hi. :P \n\nAnyhow, this is the last chapter of this story. I promised the readers who took the time to email me and make me feel super special to finish and post it before February, and I kept my promise! \n\nI hope you enjoy it! \n\nLet me know if you want me to work on future projects. \n\nGinger \n\n***** \n\n\"How can you hate something if you've never tried it?\" Jillian added for emphasis, \"If you refuse to try it?\" \n\n\"Jillian, no.\" Simone, Jillian's best friend, focused her golden gaze on her, \"I'm not playing food bully with you.\" \n\nSwallowing a gulp of her lemon water, Jillian said, \"It's not just about food -even though food is the most fitting thing for this theory; you take a bite, and that's it! Tried it, judge it!\" \n\nThe other woman sat back in her chair, \"How do you feel about cannibalism?\" \n\nCatching her friend's drift, Jillian argued \"It's not the same thing, humans aren't food.\" \n\n\"I saw a documentary about cannibalism once, and they said humans taste just like chicken.\" \n\nShe snorted, \"They always say that 'oh it tastes like chicken', but it never does. If it's not chicken then it doesn't taste like chicken. I've tried a lot of weird ass food that I was told tasted like chicken, but it never did.\" \n\n\"Well, I'm not eating any asparagus,\" her friend insisted, \"Even its name is yucky; it sounds like Asperger's, and I have a rule against food that sounds like mental disorders or diseases.\" \n\nTamara, the third musketeer at their table started to laugh, \"Ass burgers!\" \n\n\"No, it's Asperger's.\" Simone corrected as Jillian started talking again, \"That's ridiculous, you have to keep an open mind. I can't believe you won't try it.\" \n\n\"Stop pressuring me. I don't. Want. To.\" \n\n\"Oh, just shut up. The both of you!\" Tamara cried plucking a stem of grilled asparagus from the serving plate, and dripped it in Jillian's half-boiled egg before biting the tip off, \"Here, nothing to it, Simone.\" \n\n\"You're daring me to try it, is that it?\" Simone reached for the plate and Jillian shook her head, \"No, never mind.\" \n\n\"Oh, screw it.\" the woman said repeating the same dipping routine Tamara did then tasted the asparagus. \n\nThe three women were loud, their mere conversation bordered on causing a scene, but that didn't bother them. The day was surprisingly nice for early February in Chicago. No snow hindered the traffic, and the sun was generous with its warm rays; hence the three friends decided to luxuriate in taking advantage of the opportunity and hang out together all day Friday. In the low forties, it was actually warm enough for them to sit outside the restaurant, and they did Simone's appetizer sampler idea where they ordered a variety of appetizers to share. \n\nSimone chewed thoughtfully, and the other two stared at her expectantly until she declared, \"It's not bad.\" \n\n\"See? No need to call me a bully.\" \n\nUnder her breath, the hairstylist murmured, \"Even when you're being bitchy?\" \n\nIn agreement, Simone observed, \"You're not yourself lately.\" And Tamara backed up the claim, \"Yeah, J.Z. what's up?\" \n\nShe laughed, \"J.Z.?\" \n\n\"Don't change the subject, ever since you and that guy from the party broke up, you've been...discombobulated.\" \n\nSimone almost shrieked, \"A guy? Wait, wait, hold up, what guy?\" \n\nSpeaking simultaneously, Jillian and Tamara said in turn \"No one.\" And \"Her boss.\" \n\n\"I didn't know you were dating anyone, not to mention your boss.\" Simone was from the Cayman Islands, and had a light melodious Caribbean accent that she didn't always remember to hide, \"I thought we were cl\u00f3ser dan dis.\" \n\nShe was being reprimanded by her best friend, that should've got her to defend her situation, but Jillian merely shook her head frowning and trying not to cry. Tamara, on the other hand, was already on her phone pulling out \u00c9lsi Dussant's instagram account and scrolling for pictures from the Christmas party. \n\n\"This yummy hunk o' man meat!\" She presented Simone with a picture in which Marc had his arm around Jillian's waist and was saying something that had her complete attention. \n\nShe couldn't remember what it was, and wished she could conjure the conversation that must've been important enough to distract them from the obtrusive camera guy. \n\n\"That's your boss? He's gorgeous!\" Simone was attuned to Jillian's moods, and had the tact that Tamara lacked. Hence, after her loud exclamation, she caught herself and enquired softly, \"What happened with him?\" \n\nJillian blinked then swallowed \"He wants to see other people, and it's all my fault.\" \n\n\"The jerk! How could he blame this on you?\" \n\nBut he wasn't a jerk; he made his intentions clear and offered her an option while giving her complete freedom to decide. \n\n\"No, no, it's not like that,\" she shook her head resolutely, \"he's the sweetest, most considerate guy I know, and I just...I don't have the guts to...\" she looked away, eyes falling on a lanky guy across the street who was struggling to hold on to the handful of birthday balloons and large bag he was holding and press the walk button. \"To try to keep everything together while diving in for a chance to...cross.\" Fearing that what she said only made sense in her own head, she added, \"Once I find my comfort zone, it's hard for me to leave it, and he wants me to do just that.\" She didn't mention that he suggested she speak with someone about her anxiety which she tried to deny. \n\nThe man across the street lost one of his balloons, its string slipped out of his fingers and the bright pink heart went up, up flying in a squiggly line. The guy gave it a quick glance, before crossing with a grimace and a snort. \n\n\"It takes sacrifice.\" She found herself saying before she turned to look at her companions' bewildered expressions. She then glanced up at the soaring balloon then dropped her gaze to the guy that lost it who was looking up too, and had started to laugh. \n\nClearing her throat, she turned back to her food, \"I don't wanna talk about it.\" but it was a fib, because somewhere deep inside her, she did want to discuss it with someone. To touch up on the things she's scared of, and why she always found a safe corner and backed herself into it until she couldn't bear the monotony of her choice, and just forced herself to pretend it's fine. And what would she do if she went back? She signed a twelve-month lease for her apartment here, and her old position was already filled by her competent prot\u00e9g\u00e9 Ryan -whom Helga called Adam Lambert. \n\nAfter a period of silence, she said out of nowhere, \"I mean, I can break the lease -there's a fine or something that I'd have to pay- I can probably find another apartment in New York, but my job situation-\" she caught herself as a wild plan started to plant its seeds in her head, and she waved a hand dismissively, \"Never mind, I'm just thinking out loud.\" \n\nAfter lunch, she declined a ride home from Tamara deciding to walk and window-shop since she didn't have a particular thing to do. That's why she didn't take off-days, because she never really made plans beyond a meal, a game, or some sort of musical event. She didn't need to buy anything, not really, any purchase she'd make would be born of boredom and thus, a waste of money, so she just looked at things with slight interest. \n\nIndecisiveness plagued her as she stared unseeingly at a Valentine's Day store display. She was so scared of talking to someone about her problems and inner struggles. That mental hurdle that slowed her down like a ball and chain that she had to drag behind her everywhere she went. When did it get that bad? She asked herself meeting the glassy eyes of a smiling plush bear with a huge heart in its lap, and realized that it's been building and growing unnoticed -or more like ignored by her until Marc wormed his way into her mind and heart breaking her inner dams and releasing the floods that swept her. \n\nThe details of that last night with him were tattooed on the walls of her memory. The finality of their situation made him infinitely amorous, desperate even in a way that mirrored everything she was feeling then. \n\nThey barely talked, choosing to communicate their affection and need for each other physically. No words uttered, she took his hand and guided him to the bed pushing him down then prompting him to pull back as she crawled closer until his back hit the headboard. \n\nHe was hard, the velvety skin stretched tight over his straining solid erection, but she wanted him harder, thicker, and pulsing in her hand. Wrapping her fingers around his dick, she stroked him, giving his beautiful cock a number of tight tugs and pumps that made his breath come out in short fast gasps. She didn't want to stop; the feeling was addictive, the sight hypnotic. They both watched her dainty fingers manipulate the thick shaft rolling his foreskin up and down the steely hardness, and she felt her pussy cream at the mere feel of his cock in her hand. \n\nHe mumbled something unintelligible and she tightened her hold on him sliding his foreskin up and around the head until it formed a little cup where his copious precome gathered like clear syrup. Wanting -needing a taste, she inched her body backwards then leaned down pressing her pursed lips to the slick tip and just moved her head in a circle smearing his precome on her mouth. Looking up, she met his gaze and pulled his foreskin down before taking his engorged glans in her mouth without breaking eye-contact. \n\nMarc cupped her cheek with his right hand. His fingers fanned over her ear and into her damp hair as his thumb stroked her cheekbone absently. She sucked sharply, her lips making a lewd wet noise on his cock, and his thumb stilled for a minute pressing under her eye before he seemed to notice what he was doing and went back to caressing her. \n\nShe wasn't the devious sort, otherwise she would've used this to press what he would be missing once he got back to New York, but she did give him everything just like she always had and always will. Jillian focused her attention on the tip of his dick, licking around it and suckling it, and slurping every drop of pre-ejaculate he gave her waiting tongue while keeping her gaze trained on his face. She pulled back to kiss his frenulum and lap at the sensitive bundle of nerves making him moan before swiping her mouth over his leaking tip again. \n\nHis fingers tightened in her hair urging her to take his cock in her mouth, but she wanted him in her dripping pussy so she rose slowly, clear lines of precome stretching between his penis and her lips that she had to cant her chin forward breaking the two thin strands on her skin. The slippery, slightly salty fluid dripped between her breasts, and she took his hand from her face, kissed the palm then pressed it to the left side of her chest as if to say, I keep you right here. \n\nHe smeared his essence on her twirling it around one of her nipples while she straddled his hips and grasped his cock by the root. His erection was so rigid, the tip a dark angry shade of reddish purple, the balm to her sex's moist swollen folds. He inched his hips up indicating his impatience, but she hummed soothingly while rubbing the mushroom head along her slit. Her clit was engorged and throbbing, and it sent a jolt of electricity along her legs everytime his cock touched the distended nub making her squeeze her eyes shut letting out ragged, choppy exhales that matched his. \n\n\"Please.\" She heard him whisper difficultly, and when she opened her eyes to look at him she thought she imagined it as his expression was the same -tormented and on edge, but the same. Her thumb pressed under the head of his cock, and his eyes shot open to meet hers, \"Jill...\" he breathed, and she couldn't keep him hanging. \n\nSpreading her legs farther apart, they both looked at the parted petals of her sex, dark pink and glistening with her juices and his. She parted them with the head of his cock before sinking low and popping the tumescent tip into her cunt. They both groaned, and she felt his left thigh jerk and shudder under her as he schooled it still. She felt his heartbeats pulsing wildly along his thick veined shaft as she impaled herself on him, and took her sweet time, letting his girth stretch her softness inch by agonizing inch. \n\nShe wanted to tell him how good her felt inside her, how right it was for them to be together, and how they fit perfectly, then beg him to consider her proposal, but didn't want to ruin the moment. She couldn't risk poking the matter, the beast in the room and rousing it bringing forth another argument, so she just showed him. Taking him all the way inside her, the deepest of penetration, she squeezed her cunt around his dick rhythmically in long pussy kisses that made his hips jerk and sent his hands to the tops of her thighs holding them and digging his long fingers in them. \n\nYet, she wanted him wilder, out of his mind. Spreading her thighs wider still, she burrowed closer to him, his hairy thighs scraping against the inside of her soft ones, his pubic hair rubbing against her bald pussy. He mumbled something again, and swallowed banging his head back against the headboard in frustration before slapping her on the ass to urge her to move. The look he gave her was pained, and she grinned at him teasingly, leaning forward to kiss his lips, her movement sliding her pussy up over his cock. He was quick to tighten his hold on her thighs and press her down ramming his cock deep inside her and eliciting a cry from her that he was quick to muffle with moist kisses. \n\nHis hands slithered around her thighs to hold her by the ass cheeks spreading them and digging the tips of his fingers in that sensitive area around her anus. Up and down he moved her, fucking his cock with her pussy like she was his personal sex toy, only she was responsive and feisty instead of placid and passive. She let him use her body and enjoyed it as much as he did, biting back as she sucked at his lower lip bruising it, and tweaking his flat nipples until he groaned and writhed, his back sliding a little lower on the headboard. \n\nSomewhere in the room, the automatic air freshener went off sending a Christmassy scent through the air to fill the room, and she pulled back a little looking at his face. His golden hair was damp and looking silvery blonde in the dim light that escaped the half-open bathroom door and the combination of streetlights and moonlight that streamed through the big window. She plunged her fingers in it, combing through it as she whispered, \"My Christmas Dussant.\" and kissed him on the lips, on both cheeks, on his eyes, then his forehead. \n\n\"Oh, baby.\" He ground out, and she hugged his head to her chest rising on her knees. \n\n\"Nutcrackers, reindeer, hot cocoa, and Marc.\" She rubbed her right breast against his mouth enticingly, touching the nipple to his lips then withdrawing when he opened his mouth to suckle it, \"Santa Claus, wrapped gifts, snow dusted wreathes, and Marc.\" She pressed her thumbs on his cheeks prompting him to open his mouth and stuffed her pebble-hard nipple in it, \"Candy canes, decorated trees, snow angels, and Marc...\"she moaned throwing her head back when he started to suck on her tit, \"My Marc.\" She heard her voice declare before she could stop herself. \n\nHis mouth stilled momentarily as his fingers squeezed her ass almost painfully, and she had to wriggle her hips to get him to ease his grasp on her. He was hers though. She knew it as she rolled her head on her shoulders and studied him through half-lidded eyes. His lips parted around her nipple and pressed into her puckered areola, sucking and licking the velvety nub as his eyes moved under his closed lids that squeezed tighter everytime he suckled harder. The alarms in her head -those vexing flashes of reality that popped out of nowhere during the most inconvenient of times- bugged her about how he was the perfect guy for her, and how she was going to have to find a substitute since she was losing him after that night. No one compares, no one's as good as he is. The nagging voice of wisdom in her head prodded her, and she swore she was going to make every second count, every sound, every touch worth their -hopefully temporary- farewell. \n\nShe placed her hands on the headboard over his head and followed the movement of his hands, slamming her pussy down on him everytime he urged her down. When he moved his mouth to her other breast, she started to move faster, her body smacking against his in loud slaps that sounded like moist little spanks. Slack, slurk, slack, their sweaty thighs smacked and clapped together while his teeth tugged at her nipple digging into it when she moved up or slammed down in her frenzied fuck dance. \n\nAnd it was just like Marc to slide his fingers along her pussy lips from behind, pressing the wet folds that spread around his thick penis. She cried out an \"Oh God!\" and he started to massage them slithering his fingers back and forth aided by her slick juice that lubricated his ministrations. \n\nJust like the first time she learned his name, it was stuck on her lips, a mantra that she repeated ceaselessly and incoherently each time his cock stroked inside her and bumped the entrance of her cervix. \n\nFingers massaging her labia, cock sliding in and out of her, and mouth suckling alternately on her nipples, she was so close to exploding in a massive orgasm and dissolving into a pile of need all over him. But she didn't want to come so early, she wanted an agonizing buildup until they both could climax together. Sliding up, she dug her fingers into the headboard keeping only the tip of his cock in her cunt, her tightness holding and squeezing the large spongy head. He murmured something and tugged her nipple with his teeth rather harshly, and she cried out jerking which caused his teeth to clamp tighter onto her breast. \n\n\"I need a minute, Marc.\" She entreated sitting back on his dick and wiggling her hips slightly to feel his cum-laden balls against her ass. \n\n\"And I need you.\" He kissed her throbbing tormented nipple then spread wet kisses along the inside curve of her breast over to the second one, and encased her other nipple in his mouth rolling it with his tongue and teeth, \"I need all of you, Jill.\" \n\n\"You already have me.\" she whispered holding his head with both hands and stroking his thick hair, \"Never doubt that.\" \n\nHe didn't fuck her though, with his cock seated to the hilt in her sex, he reached for her asshole and inserted his middle finger into the tight opening. Despite it being slathered with her juices, his finger still felt big, the delicious invasion that she's come to anticipate and crave made her head roll back on her shoulders. \n\nHe was slow and deliberate, even more so than earlier that night, his ministrations making her pussy soak his cock with yet more moisture. He pulled his finger out to gather some of her wetness onto the tip then circled her anus with it, pressing the puckered star and relaxing her before sliding in again. \n\nThe next time he inserted his middle finger it was joined by his index, liberally lubricated with her essence, gentle yet relentless. The sensation was too much when his fingers stopped, second-knuckle deep, and just stretched her back hole for a few seconds. She whimpered and he wriggled them in response. ",
        "\"Oh Go-uuhhh...\" her words morphed into a moan when he pulled out. She didn't know if she was relieved or disappointed to feel a sudden emptiness in a place that she was never used to getting filled. \n\nHis left hand grabbed her ass cheek and pulled it open while he spat on his right then returned to her ass. And it occurred to her that he was preparing her for...she couldn't complete the thought when he nudged her anus with three fingers this time, and paused at the entrance with just his fingertips moving in small circles that stretched and relaxed her tightness. \n\n\"Relax for me.\" he ordered in a silky voice, and she gulped, stupefied for a moment as she hung between reality and the mischievousness of her desires. His fingers dug in her ass cheeks prompting her, and she blinked focusing on him, and staring straight into his eyes. \n\n\"That's it,\" he encouraged, his fingers slipping deeper and deeper, aided by his saliva and her cunt juice, \"open up for me, baby.\" \n\nIt hurt, but he was patient and diligent in his pursuit, keeping his throbbing hard dick lodged deep in her pussy and laving her nipples with his tongue everytime she whimpered a little protest. The strange pain began to mix with pleasure that grew and grew until it encompassed the aches and was the dominant feeling that coursed through her making her want more. \n\nHis fingers started moving faster, and she wanted to move against him, but he held her in place everytime she wriggled up. He finally slipped his fingers out and gave her rear a smack urging her to her knees, \"Up, up, up.\" \n\nDetermined to bite back, she squeezed her pussy tighter around his cock on the upward slide and watched his eyes blink faster in sheer torment until his hardness was released and flopped flagrantly between them. It was begging for attention, coated with her clear musk from the weeping tip to the dark golden hairs that surrounded the thick base. \n\nWrapping his fingers around the shaft he demanded, \"Spit on it.\" \n\nJillian met his eyes for a second then stared down at his penis and swallowed. He stroked it a couple of times, \"Do it, Jill.\" and she found herself complying, a long line of saliva dropped from between her kiss-swollen lips and slithered over the engorged head and down the broad shaft. \n\n\"Again.\" he commanded, and she moistened her lips and spat once more, almost missing the head. \n\nGesturing with his head to the attach\u00e9 case on the nightstand, he said \"Open that suitcase for me.\" \n\nShe had to contort her body and lean to the side to flap the bag open and was greeted with a heap of stacked papers and files, the top ones carried his signature green correction pen that slashed and added numbers and words everywhere. \n\nShe started to ask \"What am I looking at?\" when he said, \"The mesh pocket.\" \n\nIt took her a moment of staring, but she finally comprehended that she was looking at a black tube of lube. He didn't press her or hurry her, giving her all the time in the world to say no and steer their sex play into a different direction. But she wanted him, she wanted this, and she wasn't going to back out or deny herself the chance of giving him something of her that no one else was privileged to take before. \n\nArmed with the lubricant, she loomed over him again, but failed to find the courage to proceed. \n\n\"Open it.\" he supplied, and she cranked the top open and stared at the aluminum seal which indicated that he bought it just for her, that he came to Chicago with the goal of stamping her, yet in another place. \n\nJillian wanted to tease him with a comment like \"You're a dirty bastard.\" Or something, but she was too wired to crack a joke or try to lighten the sultry, sex infused air that surrounded them. Somehow it felt sacred to her, this interaction, this exchange between them was so intimate, so personal that it felt like the inviolable bond between them was not to be disturbed by silly remarks. \n\nBefore he asked her to, she turned the bottle upside down and squirted the clear jell on his erection after scratching the seal off. They both watched his hand stroke up and down his length warming the gel until his fingers stopped under the crown and gave it a squeeze coaxing more pre-come to ooze from the tiny slit. \n\n\"Come closer.\" He murmured in a husky voice, and she inched towards him, still on her knees. She knew what was about to come, and faced it with both trepidation and anticipation. \n\n\"Relax for me.\" he repeated, and she nodded muttering something unintelligible as his slick cock came in contact with her anus. \n\nHe held his dick with his right hand and ran his left up and down the back of her thigh to assuage her reticence. Closing her eyes, she focused on the feel of him probing her back entrance, flirting with her tightness and lathering the puckered hole with their combined moisture, the lube, and her saliva. \n\n\"Marc?\" she heard herself whispering, and he replied \"I want all of you, Jillian.\" \n\nShe swallowed and nodded keeping her eyes closed. \n\n\"It's gonna be a tight fit,\" he rasped, \"but you can take me. I want you to open your eyes and look at me while I'm going in.\" he tapped the rosette until she met his gaze and clung to it then he pushed experimentally in. \n\nHis cock was barely in, but she felt the slow invasion everywhere. It was ironic how an act so crude and lewd could feel so delicate, but Marc made it feel right. His beautiful eyes had an intent look that communicated how deeply he cared about making this -the final physical barrier between them- as perfect and as exquisite as everything else their bodies translated to one another. \n\nHe slipped deeper in, the fat head spreading the tight ring to its limit, and she took a deep breath; he's done this before with his fingers, he's even finger fucked her ass with a touch of roughness -she can take this. She bit her lower lip taking him millimeter by millimeter as he advanced at a snail-pace helping her adjust to him. There wasn't a lot of pain, just an alien sensation that was a mixture of slight discomfort and wanton satisfaction. She wanted more, yet she wanted him to halt his possession. She felt this intense urge to just slam her hips down and take him all in, yet was leery about what's coming next. \n\nThe moment the whole head popped into her ass, she felt a sharp twinge of pain and her eyes fell closed as her teeth clamped down on her lower lip with bruising force. She didn't realize that she was whimpering until she heard his voice shushing her and cajoling her with soft words, \"Easy, baby, relax for me. You're too nervous, too tight, open up for me, sweetheart. Let me take your beautiful tight ass, baby.\" \n\nAgain, he managed to turn something so uncouth into love words; talking about fucking her ass shouldn't sound like a love poem, yet it did to her. Right there under his gentle yet possessive touch, sweat rolling off her lithe body and dripping onto his as the hours raced closer to Christmas morning. She paused over him and drank his words like brandy-laced eggnog; thick with decadence, smooth, and wicked in a way that did funny things to her insides. \n\n\"I've wanted to bury my cock into that pretty little ass for a long time now,\" he moved further in, \"and I know you've thought of me there, telling you what a beautiful cum slut you are, fucking you raw, and filling your snug ass with cum. Relax and take me, Jill, take all of me just like I'm taking you.\" \n\nHer trembling hands moved between his shoulders and wide chest, never quite settling on a location, and she nodded again wishing he'd keep talking to her like that. \n\nHer little anus burned as it opened further with his advancement, and she felt the sting down to her toes, prying her loose, it was so intense she wanted to sob. \n\n\"More...\" she whispered and tentatively moved her hips lower, but she was too fast and her movement caused him to thrust more than half of his dick inside her making her cry out and shut her eyes again. \n\n\"Shhh...\" he adulated her pulling his cock out of her ass and sliding it against her juicy pussy, flicking her clit with it several times to rekindle her passion, \"You're so impatient.\" \n\n\"I want...\" she swallowed and looked into his eyes, \"I want...\" \n\n\"What do you want, tart?\" he tapped his dick against her clitoris making her jerk and buck slightly. \n\n\"I don't know.\" she shook her head digging her fingers into his chest and feeling the crinkly hairs under her nails as she pushed into his sweat slickened skin. \n\n\"Tell me what you want and I'll give it to you. Anything.\" \n\n\"I want...you.\" She touched her nose to his breathing in his breaths, \"I want Marc.\" \n\nHe canted his chin up to kiss her briefly on the lips, \"Do you want me in your ass again, baby? I'll stop if you ask me to.\" \n\n\"I don't even know why you stopped.\" She licked her lips touching his in the process. \n\nThat drew a chuckle out of him, it developed into a strained gruff laugh, \"Jesus Christ, Jill!\" \n\n\"What?\" she teased with a weak, lopsided grin regaining her sass. \n\n\"I'm trying to make love to you here.\" \n\n\"You're trying to fuck my ass, Marc!\" \n\n\"Potato, potah-to.\" \n\nIt was her turn to laugh and kiss his lips, \"You're ornery.\" She whispered into his mouth and sucked his lower lip between hers. Her asshole was hot and throbbing, and she felt the lube around the flesh ring and inside her too keenly. \n\n\"You insult me then shut me up with kisses, who's ornery now?\" he smiled against her mouth and kissed her back. \n\n\"You ate an employee's pussy at a Christmas party, Mr. Dussant, you tell me.\" \n\n\"It's a badge I wear with pride!\" he grinned then sobered up a moment later, \"Do you want to try again?\" \n\nShe started to nod, but ended up taking a gulp of air. Trying again, she murmured, \"Yes.\" She clenched her anus experimentally as if to check if he can fit his penis in there again. \n\n\"I don't want to hurt you.\" He positioned his cock at her asshole again after swiping it along her wet slit. \n\n\"You won't.\" she reassured him and spread her legs as wide as they permitted in her position straddling his hips. The cotton sheets clung to her legs and knees, damp with the remnants of the shower water and her perspiration. \n\nHis glans caught at her entrance again and he squeezed in, the feeling more familiar now -still challenging with his girth- but she was ready for it. \n\n\"Take me as slow as you want,\" he placed his left hand on her waist, his thumb resting over her hipbone, \"don't hurt yourself, I'm not in a hurry, I want every moment of this to go on forever.\" \n\nHis right hand's thumb was slick with lube and the feel of it rubbing and sliding against her clit made her legs tremble as a lascivious heat coursed through them. \n\nShe met his eyes and started to lower herself on his cock as he encouraged her to continue. He was big, hot, and thick, but she glided with deliberation adjusting to the alien fullness of the penetration with every inch her ass swallowed. It wasn't easy, but it wasn't the imposing, painful obtrusion she was led to believe it would be. His patience and gentleness played a big role in making her body adapt to his, and the expert way he manipulated her sex pearl with was making her dizzy with arousal. \n\nHer right hand slid from his shoulder and she felt his hard nipple on her palm and rubbed it with the heel of her hand as her ass took the last inch of his penis and she found herself seated in his lap impaled on his cock. \n\nThey both groaned and looked down at their joining point. Marc had a better view though, their positions providing each of them with a different advantage. \n\n\"You feel so good.\" He praised pinching her clit and pulling it from her cunt lips to send a shocking torrent of desire through her. \n\n\"I can't believe I'm doing this.\" She said as she slid her ass up then sat down again giving their anal fucking a test run. \n\n\"Me neither, I've never pegged you for a naughty girl, Ms. Zahra.\" There was a playful smirk on his face as he canted his head to the side and studied her. \n\nShe giggled, \"Shut up, you big Canadian oaf!\" \n\n\"All these insults on my birthday, thank you very much.\" \n\nHer face softened and she leaned forward, her movement sliding half of his cock out of her. They both sighed as she kissed his lips, \"Happy Birthday, Marc.\" \n\n\"Very happy.\" He mumbled thrusting his hips up slowly then pulling down creating a leisurely rhythm as she continued to kiss him. \n\n\"I love your beard.\" She whispered cupping his cheek with one hand while the other one stayed splayed on his chest, fingers combed through his chest hair as her palm sat over his heart absorbing its steady pulse. \n\n\"I love your lips, your voice, your pussy, your ass, your neurotic work emails, your weird jokes, your tits, your OCD, your eyes...\" he trailed off squeezing his eyes shut as she started to fuck her ass faster with his dick, gliding up and down smoothly now. \n\nShe wanted to list the things she loved about him, but her tongue felt thick as her emotions took over making her inarticulate and threatening to spill out in rambling babble if she even attempted to say them. Instead, she showed him with her body. The fit was still snug, he was too thick, too huge for her virgin ass that was on fire that was kept ablaze with every stroke in or out of her tunnel, but the discomfort and the slight pain mixed with all that wicked pleasure made her want to go for more. It made her want to push her limits expanding them to dimensions she never thought she'd reach. \n\nSitting up, she grasped her own derriere with both hands spreading the cheeks open and continued to fuck herself on him with zeal. Her pussy begged for the attention of his fingers that strayed to her waist again, it felt too empty against the fullness of her ass yet it throbbed as if she were about to orgasm. \n\nIt kept building to no avail, she wanted desperately to touch her clit or have him strum the pebble-hard center to release her. Building, building, building...her ears buzzed, and she whimpered bouncing on him and basking in the delicious aching stretch his cock gave her ass. \n\nHer frenzied quest for orgasm was driving Marc to lunacy. His brows furrowed and his eyes squinted and he finally growled like a wild animal, tightened his hold on her waist and threw her on her back pulling his cock from her ass. Getting to his knees, he grasped her feet by the ankles and rested them against his shoulders then blindly patted the bed for the lube unable to take his eyes off of her. \n\nWrenching the top off indelicately, he squirted more than a generous amount of the cool gel all over her ass that it started to glide down along her crack to drip on the bed sheet. Guiding his cock to her well lubricated anus, he warmed the gel by swirling it around with his glans dipping the flared head in then popping it out with a wet sucking noise. \n\n\"Marc...more...\" she entreated writhing. Liquid fire ran under her skin and seeped out of the pores, she needed more of him, everything he had to give. \n\n\"You want my cock in your ass, Jill?\" he tapped the shrinking rosette of her ass with his cock. \n\n\"God, yes, all of it. Don't make me beg.\" \n\n\"I won't.\" eager to possess her again, he surged into her ass again after pushing her left leg forward indicating for her to hold it bent against her chest. \n\nHe fucked her ass with a bit of roughness, his prior delicate flirtation now transforming into a desperate quest to claim release. She cried out and begged him to touch her clit, \"I need to come, Marc, please, God, please!\" and he answered her pleas by thrusting two fingers into her sopping cunt and fingering her without slowing down on her ass. \n\nHis thumb brushed her clit with his movements, his other hand tightened around her ankle when her legs trembled and slipped lower. It was too much, yet it was exactly what she needed -what they both needed. \n\nOverfilled and completely possessed by this man, she grasped her breasts and tweaked her nipples pinching them until they hurt, but the sensation didn't take away from the focus of his claiming, the myriad of dark pleasure and voluptuous pain mingled, mixed, and danced around until she couldn't even close her eyes and just had to keep her gaze locked with his. \n\n\"Come, Jillian,\" he rasped savagely, \"come with my dick all the way in your ass, and my fingers fucking your cunt, come all over me,\" \n\nMarc pistoned in and out of her, balls slapping against her ass cheeks and fingers curling up to stimulate her g-spot while his thumb rubbed her clitoris, and she screamed her orgasm almost kicking him off of her. \n\nHer ass contracted in tune with her pussy, spasming and clenching his tool in a way that felt like multiple orgasms hitting her all at once. It was the single most bizarre climax she's ever had. Every point in her body screamed and shattered, and her brain lost its grasp on everything but the pleasure that invaded her and drowned her. \n\nHer wild released triggered his, and he rammed himself deep into her ass and shuddered blasting a hot stream of cum into her. His lips trembled, and his eyes shot open looking everywhere. He stared at the ceiling groaning ear-scorching curses before dropping his gaze to her and staring at her with eyes glassy with fulfillment. \n\nThey were both breathing harshly as they came down from the euphoria that encompassed them. She wanted to lower her legs that felt cramped and bloodless, but couldn't even bring herself to wriggle her toes. His fingers stilled in her pussy, and his cock was still lodged in her ass surrounded by the cream he deposited in there. \n\n\"God Almighty!\" he exclaimed at length and pressed his fingers into her ankle, \"Can you move?\" \n\nShe moaned and failed to form words so she conceded with a headshake. \n\n\"I don't think I can either...wait...\" he ran his tongue on his lips and cleared his voice, \"try to relax.\" Slipping his fingers free from her pussy with a smooching pop, he pulled his hand away slowly dragging a clear line of cunt juice across her inner thigh and along her leg. He settled his hand on her other ankle and smoothed her legs down. \n\nJillian winced at the movement, but felt relieved when her numb feet hit the soft sheets. He was still crammed deep into her ass, and had to pull out tenderly so as not to hurt her. \n\nThe second his cock left her, she felt a warm stream of cum dribble from her spasming hole as it closed up again. It felt raw with use, and he must've known that because he massaged it sympathetically with his thumb soothing her used hole by spreading his jizz on it. \n\n\"I can't believe I just did that.\" She croaked weakly as he hefted his body next to hers. \n\n\"I can't believe I waited this long to deflower that sweet ass of yours.\" He straightened his legs and they came in contact with hers. \n\n\"I've wondered what it would be like since you started fingering my...\" she bit her words feeling a sudden, out of place timidity. \n\nHe smirked arrogantly kissing her shoulder, \"Have you fantasized about me pumping your ass full of semen?\" \n\n\"Jeez, you're so boorish!\" she slapped his chest fighting a giggle, \"At least try to restrain your filthy mouth on Christmas Day, is that too much to ask?\" \n\n\"What's the use? We've been up all night, Santa won't come if you're awake, you know.\" \n\nShe slipped her legs between his tangling her smooth limbs with his hairy, muscled ones, \"I must've been a good girl this year, though, I got exactly what I wanted.\" \n\n\"Oh baby, you're on the X-Rated Naughty list, that's why they sent me to deliver your gift.\" He stroked her feet with his burrowing them under the pillows as they lied chatting with their heads on the wrong side of the bed. \n\n\"I beg to differ; Santa sent me everything on my list.\" \n\nHe chuckled and pressed his lips to her cheek nuzzling her skin and kissing her tiredly. ",
        "\"Thanks for my birthday gift.\" He murmured at length. \n\nThere was a stretch of silence before she asked, \"Marc, are you still awake?\" \n\n\"Umm...\" his voice was hoarse and sleepy, \"You okay, baby? I didn't hurt you, did I?\" he was struggling to stay awake and be considerate and attentive. \n\nAside from a pulsating, anomalous sensation that she wantonly basked in, she was fine, \"I'm okay.\" \n\nShe was exhausted and wanted nothing more than surrender to the slumber that beckoned her, but she had to say this, \"I know we haven't talked about this before, and it might sound fractional and late, but I want you to know that I'm on the pill.\"  \n\nShe felt him stir into attention, and continued, \"I mean, you came inside me several times in the past, and I just wanted you to know that I'm protected...and clean.\" \n\nPropping himself on his elbow he looked at her with dilated eyes that were forced to focus, \"I've never doubted that you're clean, Jillian. As to the...other thing...the protection...I...that first time I took your pussy I wasn't sure, but I completely forgot about the condom -more like, didn't plan for things to progress that far, then reckoned that you were protected so I never bothered with one afterwards. I mean, you didn't say anything so I just...guessed. That's not the reason why I wanted to come in your ass though...or on your tits or in your mouth, I just...I wanted to take you everywhere.\" \n\nShe touched his cheek with her finger tips drawing imaginary circles in the bristly beard, \"You can't just assume that a woman is on birth control, Marc, some women like to trap men into marriage by having an unplanned baby. Not all women are like that, but there are people with low self-esteem out there who do desperate things. Men do it to women, too. When I worked for the city I ran across a lot of cases where one partner practically fooled the other one into a relationship with unplanned pregnancy, guys poking holes into condoms and women lying about contraceptions. You have to be careful.\" \n\nHe clasped her hand in his and printed tiny kisses on her fingers, \"I know that, and I promise, I don't go around having unprotected sex with women, you're just different...special.\" He smiled, \"Did you think I was trying to trick you into getting pregnant?\" \n\nFlushing, she averted her gaze, \"No, I was just trying to get that whole protection speech out of the way.\" \n\n\"Better late than never?\" he observed with amusement. \n\n\"I guess.\" She felt silly to the roots of her hair. \n\n\"For what it's worth, I'm clean, too. Routine checkups and everything, clean bill of health, scouts honor.\" \n\n\"You were never a boy scout!\" she argued with a small smile, and he shrugged, \"Well, I could've been. How hard could it be?\" \n\nThey settled down again, and she laid her head against his chest and armpit as her gathered her to him. \n\nShe was just about to sleep when he said, \"I wouldn't have minded if you got pregnant by me.\" he hastily added, \"I didn't set out to do it, but if you'd wanted it, it wouldn't have been a bad thing. I don't feel that way about other women that's why I always pack my own condoms when I'm with someone else.\" \n\nHis statement choked her with an influx of emotions that rose to her throat. She had succeeded in pushing away thoughts of him with other women almost all night until he said that. She now faced the fact that he was going back to New York to resume his life and she was expected to live hers...separate from each other. \n\nInstead of bringing up the subject of a long distant relationship again to rouse a barren suggestion and create another argument, she feigned sleep until it claimed her tired mind. \n\n***** \n\nBy the time she got home, the events of that night had been played in perfect detail in her head yet again, and she sagged against a chair throwing herself in it and trying to banish the distracting memory. \n\nHer gloomy mood shadowed her for a few days, but she managed to cheer herself up with positive thoughts convinced that she can turn him around and bring him to his senses if she tried. \n\nFebruary the 12<sup>th</sup> was their anniversary -if what they had qualified for one. Jillian didn't know if he was going to remember or not, but she had a wild wish that he'd remember and call. She didn't want to push it and hope for a surprise visit from him, but she was ready to drop everything and go to him if he even vaguely suggested it. \n\nHer work day ended without even an email from him. \n\nDeciding to give him time to get home from work and decompress, she got her grocery shopping out of the way, and loaded the laundry in the machine. Calling herself a good housewife, she didn't order in and negate the whole point of buying groceries, and set her butt in the kitchen to cook quinoa and vegetables. She even went the extra mile and made a salad and juiced a mango. \n\nBy 7:15 she had despaired of getting that call, yet, halfway through her dinner, she turned the volume down on the hockey game she was watching and picked up the phone. \n\n\"I'm reaching out for him, is what I'm doing.\" She told her birds who didn't really show any emotions unless she had food for them. \n\nHis phone rang and rang then right before it went to voice mail. He picked up, his voice breathy and distant, \"Hullaw?\" \n\nThat was out of character. He normally said \"Dussant speaking.\" \n\n\"Marc, it's Jill.\" she used the nickname because it was a part of the bond they had. \n\n\"Yeah, oh, hey Jillian.\" Do you need something?\" \n\nHe didn't remember. Moreover, he was obviously in the middle of doing something completely unrelated to her. \n\n\"I just...\" She flat-lined. \n\n\"Is it work? Can you email it to me?\" he sounded impatient. There was some rustling and shuffling on his end of the line. Did she hear glasses clanking? Was he eating? \n\n\"I'm sorry, are you having dinner?\" \n\nHe paused, \"I ah...no.\" laconic, still in a hurry to hang up it seemed. \n\n\"Can you talk?\" her fingers were gripping the phone too tightly against the tremors that ran along them. Silly. \n\n\"Is it about work?\" he repeated. \n\nShe didn't care if it made her sound desperate or clingy, she opened her mouth to remind him what day it was, but a woman's voice bled through the line, \"Oh c'mon, Marc! You said you won't work tonight! Meg is pouring the margaritas, get off the phoooone!\" \n\n\"Just a second, Sheila.\" His voice sounded muffled like he was pressing the phone against his chest. \n\n\"No seconds!\" \n\n\"One second, sweetie.\" He cajoled the woman. \n\nIt sounded like they were joined by a second woman as Jillian heard a different unclear voice and managed to pick up fragmented sections of what she was saying, \"My panties,\" and \"We'll do body shots on-\" and \"Hella fun.\" \n\nHeart thudding, Jillian pronounced, \"Am I interrupting something?\" \n\nSimultaneously, Marc and the first woman -Sheila?- said \"This isn't a good time, Jillian.\" And \"She can join if she's game. I'm game! Meg?\" \n\nMarc cursed and grumbled, \"Jesus. Can you hang back a sec?\" \n\n\"Noooo, no secoooonds!\" Sheila whined. \n\n\"I'm sorry I bothered you, it was nothing.\" Jillian murmured and hung up. She was so bewildered she felt she might hurl any minute. \n\nTears stung her eyes and she blinked rapidly staring at the phone in her hand. As if by magic, it started to ring, and she had to focus her eyes and jumpstart her shocked brain to comprehend the name on the screen; Marc calling her back. \n\nTaking a deep breath, she tried to fake a smile hoping it would make her voice sound pleasant and unaffected, \"Yes?\" \n\n\"Jillian...\" he started and took a long breath, \"I...\" \n\n\"It's alright, I see that you're busy.\" It was killing her to talk to him pretending to be unperturbed. She was burning inside, \"I didn't want to interrupt...anything.\" \n\n\"Jillian, you must-\" \n\nBut she did interrupt him, \"It was nothing I can't take care of.\" Like always, she had herself and herself only. \n\n\"Would you let me speak?\" he cried, and one of the women with him called his name. He snapped at her, \"I said give me a second, for fuck's sake!\" \n\nJillian heard a door slam before Marc came back on the line, \"We agreed to see other people.\" \n\n\"I know. I didn't say anything.\" \n\n\"You can't make me feel guilty for living my life, Jillian, you didn't want to give me one hundred percent and we agreed to go on living our lives.\" \n\nShe caught her reflection in the stark white ice rink on the TV screen for two seconds before the cameraman zoomed in on Eric Staal who was arguing with a linesman. The television was muted and he didn't have a mic, but she could almost hear the player yelling, and imagined shouting in the phone at Marc just like the athlete was doing on her screen. \n\n\"I didn't say anything, Marc.\" She repeated collectedly, \"I just had a question and automatically thought of calling you.\" Good, she sounded balanced, \"I certainly didn't insinuate that you should feel guilty,\" her frayed nerves started to take over, \"you can fuck whomever you want. I don't care if you have a threesome every single night of the week. I have my own life, Mr. Dussant, so you can feel perfectly comfortable going back to your orgy!\" she tapped her phone screen ending the call then turned her cell off. \n\nShe hadn't meant for that explosion at the end to blast out of her mind. She felt mortified, but, strangely enough, she didn't feel any remorse for going off like that. \n\nHer eyes found the television again. The Hurricanes' captain was in the penalty box, and The Ducks were dominating with the power-play advantage. Her dinner sat neglected on the table, no longer an appetizing feast. \n\n\"Oh God!\" she whimpered, her lower lip trembling and her eyes stinging. Her legs felt too weak to stand on, so she sat down and turned the TV off staring at the dark screen for a long time. \n\nShe wasn't going to cry. Not this time. \n\nArmed with resolve despite her desolation, she stashed the food leftovers in the fridge and threw away anything that wouldn't survive overnight. She then grabbed her car keys and left to the office. \n\nThere wasn't much that she hadn't finished doing during the day, and what little she wanted to busy herself with couldn't snap her mind from its distracted state. She just sat there breathing in and out, and making out a melody of the sounds around her; her breathing, the ticking desk and wall clocks, the whoosh of the thermostat kicking in and out, and the tapping of the drizzling freezing rain against the windows. \n\nShe brought herself back to reality with a blink and a jerk. Still wallowing in daydreams and unfit to look intelligently at any of the printouts on her desk, she pulled out her old email address and started going through old messages. Forgotten funny conversations, university assignments, online orders...all useless now. \n\nThe cursor stopped on an email that contained some modeling shots the magazine decided not to use, but she got from the photographer because she liked them. It was like looking at a different person. She was a different woman now; heavily altered from who she was at that time, yet still very much the same. Still stubborn, goal oriented, and boasting that paradox of self-confidence that went along with a fistful of discordant insecurities. \n\nShe stared at a picture of herself that Keith took of her during their time together. She wore underwear that she had designed and sewn during her creative era when she dabbled with modeling. Her muses had been hyper in the period of her life, and had rioted in her head making her fill three sketch pads with lingerie designs. She executed two or three projects before her breakup with Keith then just filed everything away dismissing it as a distraction. \n\nThe portfolios were still tucked in her closet, along with her old modeling files, sewing patterns, measured designs, and a variety of detailed drawings. \n\nAfter a cup of coffee that was dark as tar and equally thick, and bitter as her mood, Jillian shifted her mind towards work and buried herself in it until midmorning. \n\nShe left when she concluded the last of a series of quick meetings with some department heads. Clad in skinny cargo jeans and a Marilyn Manson t-shirt, she didn't even look like a customer who shops at \u00c9lsi's exclusive boutiques, not to mention a manager for the company, but she carried it well. Boss Lady never relents. \n\nA few steps out of the elevator put her in front o Max who was fumbling with his phone and frowning. \n\n\"Morning!\" she smiled. \n\nHis head snapped up and he mirrored her smile, \"We need to stop meeting like this!\" \n\n\"We do!\" on a whim, or maybe a spark of spontaneity, she suggested, \"I think we should meet for dinner instead, at...say, my apartment maybe?\" \n\nIt was easy, now that the words were out she couldn't take them back, and all she had to do was look at him expectantly. \n\n\"Oh...\" he lowered his eyebrows again for a second while a grin pulled at the corners of his mouth, \"It's long due, isn't it?\" \n\nShe couldn't admit to him that she'd been avoiding him -was avoiding him, but won't be any longer- \"I just haven't seen you in a long time.\" \n\nNodding, he gave her a rueful look, \"My life's been hectic, Jillian. Work then more work on top of work. I had to travel a lot, too, spent two weeks in Italy and about a week in Greece. I only got back two nights ago.\" \n\n\"You poor thing, Italy and Greece? What torture! How dare they send you to Godforsaken places like that?!\" she razzed him and he started to laugh, \"I did only work related stuff, well, mostly.\" \n\n\"I see that, your tan look better than ever, it must've been hell!\" \n\nScratching his cheekbone, he winced, \"I'm still jetlagged. Anything? Sympathy?\" \n\nIt shouldn't have taken any convincing for her to reach for his arm and establish contact with a brief touch, but it did, and it was silly. As handsome as she found him to be, she should've been eager to touch him, not reluctant. \n\nHer touch made him smile, \"Tonight?\" \n\n\"Why not?\" \n\n\"Where do you want to go?\" \n\nShe told herself that it wasn't payback, that she wasn't using Maxime to prove that she can move on. That she wanted him for him and not because Marc was doing his own thing and binging on sex back home. \n\n\"I was thinking you should come to my house. I'll cook.\" \n\nShe wanted to kiss him, didn't she? Those perfectly sculpted lips beckoned her, glistening as he moistened them with his tongue and smiled again accepting her invitation. \n\nYes, she wanted to press her mouth to his, her body against his, sliding her golden skin against his sun-bronzed perfection. She was going to banish all hesitation, all thoughts of Marc away when she gave herself to Max, and by God, she will enjoy it! \n\nTheir plans shot to hell later that afternoon though, he called to postpone as his ex-wife dropped off his son unannounced, and he welcomed the chance to see his little boy. \n\n\"I can see about a babysitter if you want me t-\" he started halfheartedly, but she interjected, \"No, you need time with your son, it's okay.\" \n\nShe reassured herself that it was disappointment she felt and not a touch of relief at the halting of their date plans. \n\n\"I've missed him so much.\" He breathed. \n\nYet, she had to move forward, had to make an effort, \"I have two tickets to The Blackhawks game on the 18<sup>th</sup>. I can scramble a third one and all three of us can go.\" \n\nIt sounded like he was grinning, \"I'm not really a hockey fan, but I'll go with you. Caleb flies back to California on Monday morning; his mom just wanted Valentine's weekend free.\" \n\nHer hand absently ran over her neck and around it to massage her nape, \"I can set up some snacks and a light dinner if you want to bring him over tomorrow night. I'd love to spend time with the both of you.\" she meant it; Max was a magnificent parent, and a sweet man. He was a step in the right direction, no more self-imposed road blocks. \n\n\"You're very considerate. Have I ever told you how amazingly wonderful you are, Jillian?\" his voice shook slightly, and it made her feel precious...special. \n\n***** \n\nShe loved kids, and they loved her back, so preparing an evening that included a little boy wasn't difficult. She baked a strawberry shortcake, and cooked a dinner entirely comprised of finger food that would be both filling and fun to eat. \n\nNot knowing how hyper Caleb was, or how he behaved in other people's homes, she opted to stay on the safe side and move any breakable antique pieces or crystal figurines off the coffee table, or the accessible surfaces and arrange them on the higher shelves of her book displays, and out of the kid's reach. \n\nIt was almost seven o'clock, and she hit the record button on her machine to record The Avalanche game she was bound to miss when her dinner guests arrived. As if on cue, the doorbell rang as soon as she set the time taking in account the possibility of overtime. \n\n\"Greetings, greetings!\" Maxime boomed holding a box of chocolates as his son held a large bouquet of red roses. \n\n\"For you!\" the boy, who's permanent teeth had came out since the last time she saw him, said smiling up at her. \n\n\"Oh, you shouldn't have!\" she accepted the flowers, and felt like steering her thoughts away from all the floral gifts Marc had given her in the past was like driving a semi truck on slushy snow. \n\n\"Happy Valentine!\" the father said when she met his eyes. \n\n\"I completely forgot what day it was!\" She blushed dropping her gaze to the big, elaborate box of chocolate he presented her with. \n\n\"I'm glad you invited us, I didn't want to be dateless on Valentine's Day.\" \n\n\"Hey! You're the Christhmath lady!\" Caleb exclaimed wanting the attention back on him. \n\nChuckling, she dropped to a squat in front of him, \"And you're the pirate captain, aren't you?\" \n\nShaking his head he declared, \"I'm Ironman!\" and drew her gaze to his Marvel t-shirt. \n\n\"Ironman is his flavor of the month.\" His dad clarified scratching the back of his head and still holding the box of chocolate braced against his chest with his other hand. \n\n\"That's cool! I like Ironman, too!\" turning to the kid again she asked, \"How's your puppy, Monster?\" \n\n\"You know my puppy?\" his eyes lit up and he yanked at his father's pants leg, \"Chrithmath Lady knowth Monthter!\" his light lisp was less noticeable now that his upper teeth grew out, but still there. \n\n\"Christmas Lady, I though get new business cards with my new title now.\" She smiled leading them to the living room. \n\nUnlike her old loft, this one had a living room that extended to include a dining area two steps lower and overlooking Lake Michigan. Her kitchen was completely separated. \n\n\"I gotta say, you got a great place here, Christmas Lady.\" Max whistled stuffing both hands in his pockets and rocking back and forth on his heels. \n\n\"Thanks. Hardly anyone visits me here.\" She shrugged lamenting the fact that only Simone and Tamara come to her house regularly. \n\n\"Most of your friends still live in New York City.\" He stated factually, but she shook her head, \"No, not really, I'm just not your typical social butterfly; I don't get close to a lot of people.\" She set the chocolate on the dinner table, \"I like people from afar, I guess, because I like being around people in public places, at work, anywhere actually, I just...don't bring a lot of people into...\" she searched for the words to explain it, and he supplemented, \"Your personal space is sacred to you.\" \n\n\"Yes, yes!\" she nodded enthusiastically, \"I just don't welcome outside interference into my personal business; so I have a strict screening process, if you will.\" \n\nNoticing the keen look in his eyes that made them seem more green than hazel, she changed the subject swiftly, \"I wanted us to have a fun meal, so I made a bunch of stuff that are quick to eat and easy to handle. I don't have any video games, but I have board games, cards, and classic Looney Tunes DVDs that we can all watch.\" ",
        "Max's hand was warm and felt too big when he cupped her shoulder, \"I appreciate it, it really means a lot to me.\" his thumb swiped back and forth, his touch reassuring through the light wool fabric of her knit sweater. \n\nLaughing nervously, she glanced at him from under her lashes as she arranged the flowers in a vase, \"You like board games that much, Maxime?\" \n\nHer comment made him laugh and tighten his fingers around the ball of her shoulder before sliding his hand to her elbow where the sleeves bunched up in the roll she put them in. Direct skin contact. \n\n\"For welcoming me and Caleb into your home; your sanctuary, Jillian.\" \n\n\"Oh.\" She met his eyes, and for the first time felt a stirring in her tummy. It wasn't the combustible dynamite desire that Marc ignited, but it was warm and definite, sudden yet familiar while still being exciting. \n\n\"You're welcome.\" She mumbled keeping her eyes on his. \n\nShe had to kiss him. The urge came out of the blue, nudging her forward, and prompting her to cant her head up and part her lips in a soft inhale. \n\nAnd he knew. He just knew that she was ready. He'd waited for her to come to him, she saw it in his eyes; his consideration, hesitation, his deep attraction, and the manners that kept him in check. \n\nWhile Marc went for what he wanted, rash and intrepid, Max waited for it to come to him as he bided his time and seduces with subtlety and courtesy. Marc's seduction came like the molten lava of an erupted volcano that encompassed and overtook everything in its way, no limits, no barriers, no excuses. Max gave her the time and space that Marc didn't, and she was thankful for that. She must be, isn't that how it should be? \n\nUnfortunately for Jillian, it was too late for a crash course in relationship Dos &amp; Don'ts. Her brain chastised her to stop comparing the two men, and she obeyed the minute his full, sensuous lips pressed against hers. She banished Marc's suggestion that she might suffer from some degree of anxiety that made her stick to an extreme of either stagnant safe routines, or flighty impetuousness. Dropping him as the Model Man to hold against every potential partner, she followed his advice and stopped over thinking things and just surrendered to the novel feeling of experimenting without any expectations. \n\nMax's mouth had a pleasant spicy taste of cinnamon gum, and she reveled in exploring his taste, his touch, and his warmth. Taking his cue from her, Max sent his hands to clasp her waist getting bolder as his kiss grew more intimate. She wore leggings and a sexy slouchy sweater for comfort, and his fingers crept under the hem of the sweater to caress her skin. It didn't take long after that for the heat to seep into her and spread under her skin and along her limbs. Their teeth clanked against one another's and she rotated to the side, twisting her lips for a better fit against his when he was about to pull back shyly. \n\nSex was a messy business. Not just the act itself, but everything that came with it including foreplay. Savagely graceful, if that was a thing, elemental and base. You didn't pause to cater for timidity or any awkwardness you might feel; the sudden halting of a groove chases the momentum away. Jillian knew when to slow down and resume with a different strategy without pulling to a complete stop, and she communicated it to Maxime with every touch, every brush of her breasts against his, and every swipe her tongue took of his mouth and lips. Her attitude either shocked or thrilled him...maybe both, for his hands stilled for a moment as he seemed uncertain before groaning and taking her lips just the way she offered them. \n\nNeeding air, she pulled back momentarily and caught the aroused look in the mossy pools of his eyes that encouraged her to give him a little saucy smile before brushing her lips against his chin and the corner of his mouth until settling on his lips and canting her face to the right this time. She had a hand cupping the back of his head as she tasted him from every angle. Her fingeres threaded in the curling waves at his nape as her other hand settled on his chest and contracted on the flannel of his shirt when a little voice crept into her ears. \n\nPulling back, she swallowed and focused her gaze on little Caleb who was tugging on his dad's pants leg again with a wrinkled nose and an adorable expression on his innocent face, \"Dad! Gross!\" \n\nWith an embarrassed laugh, Max pulled back wiping his mouth with a shaky thumb, \"Grownup stuff, buddy, you're not supposed to watch.\" \n\nJillian thought that she must be shameless because she didn't even blush peering back at Maxime as he tucked his shirttail back in his jeans and tugged at the legs. A bulge had started to form at the crotch of his pants after a mere kiss and a few caresses, and she had to fight the urge to smile smugly. \n\nThere were two reasons for her to smile; his prompt arousal after touching her, and her overcoming her hesitation with him. She was ready to share herself with him. It didn't take a miracle worker to get her to take that step, no lightning bolts struck her on her way home, no burning bushes appeared in her kitchen, and she didn't hear a chorus singing Hallelujah either. The realization made her admit that she still preferred Marc, but had to be realistic. The hurdle, the lump in her throat that she couldn't swallow when she loved Curt wouldn't stay lodged in her esophagus; Marc had made it go away. And even when a different kind of pain, a desperate yearning lingered inside her after everything that's happened with him, Marc still helped her unearth her resilience and ability to adapt and change...to live her life when the world around her went up in flames. \n\nSure, she was thinking of him again while chatting with her guests and offering them some snacks in her den, but she wasn't lamenting what could have been or speculating on whom he might be bedding that night. \n\n\"No sir, not me.\" she hummed an extension of her thoughts. \n\n\"What was that?\" Max asked her and she realized that she'd said that out loud. \n\n\"Nothing,\" she shook her head changing the direction of her thoughts and the conversation, \"I have a bunch of fun activities planned, but I can pop a cartoon video as background...um...TV, you know, background!\" \n\nMax chuckled at her klutzy little declaration as his son chirped, \"The Kings are playing tonight!\" and hopped to the console to snatch the remote. \n\nTsking, his dad frowned, \"Is that the behavior of a gentleman at a friend's house?\" then to her, he shrugged, \"Hockey is another new flavor of the month for him -or has been since The Kings won The Stanley Cup last summer.\" \n\n\"That's absolutely fine,\" she smiled, \"I was watching The Avalanche game, but The Kings are fine with me.\" \n\nMax obviously struggled to focus on the game as he made a dozen excuses to touch her with liberal familiarity, now that the ice hadn't just gotten broken, but was completely melted by their steamy kiss earlier. At one point, he had his fingers laced with hers and compressed her hand slightly to get her attention and whisper, \"You taste better than I imagined.\" \n\nBurrowing closer to him on the sofa, she murmured, \"Does that mean you had dirty fantasies about me?\" \n\n\"You'd be shocked to know just how dirty they are!\" he wiggled his eyebrows, and she had to fight the urge to say, \"I wouldn't bet on it.\" as her mind recalled the nature of the activities she and Marc had crammed into their various sexual marathons. And no, she wasn't thinking about Marc again, and it wasn't difficult to keep him locked outside of her head everytime the commentators mentioned the results from The Canadiens' game earlier that night. \n\n\"I read somewhere that hockey was supposed to be organized chaos, but so far all I see is chaos, I'm not following anything,\" Max griped as his son started to cheer, \"What's icing?\" \n\nShe started to explain it to him when her cell phone started to ring, and she excused herself, \"I won't be long, I'll just see who it is, and get us some gelato from the kitchen while I'm at it.\" \n\nHer sure steps faltered when she slipped the phone from its cover to see Marc's name on her screen. She picked up the phone without a \"yes\" or a \"hello\". \n\n\"Jillian?\" Was all he said and silence followed for a good half minute. \n\n\"Yeah?\" she glanced back at her date and his son as they both pointed at the screen, the man asking questions and the boy explaining the happenings to him. Max looked up and smiled at her, and she gave him a shaky smile before entering the kitchen. She was being ridiculous, there was no reason for her to be nervous. \n\n\"I'm kind of busy right now, what can I do for you?\" she opened her freezer and stared unseeingly at the ice cream tubs. \n\n\"You watching the game?\" he ventured in a smooth voice that was too low to be his characteristic tone, \"I heard your TV earlier.\" \n\n\"I have some people over.\" She placed the three containers of ice cream on her table and went looking for her tall ice cream glasses. \n\n\"Oh...\" he cleared his throat, \"Are you on a date?\" \n\n\"Marc!\" she began and shook her head not knowing how to proceed, \"Marc,\" she repeated lamely. \n\n\"About the other night, I...I...you have to understand...it wasn't...I've missed you, and...\" \n\nHer hand stilled on the counter door as she squeezed her eyes shut trying not to lash out on him again after supposedly putting that whole mess behind her. \n\n\"Marc, it's okay, I was being difficult and I had no right to intrude on your life or speak to you like that.\" She told herself that she meant it. \n\n\"No, Jillian, it's me, of course you have the right to be-\" \n\nShe interrupted, \"Be nothing. It doesn't affect or bother me, believe me. We had an agreement, and as long as I'm in Chicago -which is where I'm staying- we lead separate lives. It took me a while to digest that thought, I guess, but now I'm completely okay with it. You don't need to worry. I hope I didn't ruin your evening.\" \n\n\"All my evenings get ruined when you're not with me.\" \n\nHer legs started to shake, and she wanted to sit down badly, but she shook her head again as if he was looking at her, \"Please don't.\" \n\n\"For almost two months now, I've tried to drown the sense of loss and desperation by forcing myself to indulge into pleasure, but it's not working, Jillian, I'm failing miserably, and you need to know that. I need you to know it.\" \n\n\"Why? Why? Why?\" she repeated waving her hand and not knowing how to proceed with the question. \n\n\"Because you're not doing anything towards solving the issues you have. You know you can ask me for help, I'm here for you. I'll listen, offer advice, and even help you find someone to talk to-\" \n\n\"A shrink? I'm not crazy, Marc.\" \n\n\"I didn't say you were, we all have our down moments and need to talk to someone.\" \n\n\"Talk to a professional.\" She gave up looking for the glasses and set a trio of ramekins on the table. \n\n\"Yeah, a professional, what's wrong with that?\" he reasoned. \n\n\"Nothing, only I don't need to, I'm perfectly fine -mentally, professionally, and now socially, I assure you.\" \n\n\"You miss me.\" he took another shot from a different direction making her halt speechlessly. \n\n\"I know you do, because I miss you, and I want you to be happy, you know that. We always end up arguing about something, and I know I'm not the most accommodating, easiest man in the world, but I also know that it's not impossible to work things out with me, you just don't want to because you're incredibly stubborn, and so set in your ways. We always end up arguing because you're afraid that-\" \n\nBut he was accommodating and sensitive to her needs. She interrupted him when alarms started to ring in her head warning her that he might be right, \"We always end up arguing, yes, maybe because we just need to stay away from each other.\" She didn't mean it, and it sounded like nails being dragged across a blackboard even to her ears. \n\nHe uttered a foul curse then said forcefully, \"I'll pretend you didn't just say that.\" \n\n\"Pretend whatever you want, buddy boy, in the meantime, I have guests I need to tend to.\" She couldn't tell him that she was spending the evening with a man, despite the fact that things wouldn't progress beyond kissing and petting with Caleb being there. \n\nYet, he didn't relent confirming it, \"You're on a date.\" He said, \"Okay, I can respect that, but whoever he is, you don't want to be with that bozo,\" He decided on a low blow, \"he's not the one you want to take into your pussy, your mouth, your ass, Jill, but me. I bet I've been on your mind all evening. I bet you compared him to me ever since he stepped foot in your house, and that he came out lacking. You won't admit it to me, but I know I'm right.\" \n\nThis was a more abrasive side of Marc that she wasn't acquainted with. Sure, he's always been persistent and used crafty tactics to get her to bend to his will, but this was just blatant and insolent. He must've been running out of patience. \n\nInstead of an angry reply that put him in his place, she took a deep breath and a small lick of strawberry gelato then said, \"I think you're the one with anxiety, not me, and you probably suffer from delusions brought on by your narcissism.\" \n\nShe could just see him smirking triumphantly when he countered silkily, \"You haven't fucked him yet, have you? I bet you haven't even kissed him.\" \n\n\"That's when you're wrong, Dussant,\" she started to embellish a little story when Max knocked on the kitchen door which she left slightly open, then poked his head in, \"Can I help with something?\" \n\nNot what's taking so long, he wasn't a pushy, arrogant smartass like the man on her phone. \n\n\"It's just work,\" she scrunched her nose and signaled the phone, \"My boss back in New York has me mistaken for an IT tech.\" \n\n\"IT tech, huh?\" Marc chuckled in her ear as Max nodded sympathetically, \"Everyone in my office treats me like I should be some sort of computer wizard.\" \n\n\"Does he know I'm the reason why you're not fucking him?\" Marc taunted, and she felt her cheeks flush with fury and an unnamed sensation that she shouldn't dwell upon. \n\nHoping to shut him up, she scrambled for a generic answer, \"The fastest solution would be to press Control, ALT, and Delete and close the tasks that are lagging if you don't want to reboot and risk losing your work.\" \n\n\"Does he know that he's just a poor attempt at a rebound?\" \n\nMaxime started scooping the ice cream into the ramekins and she had to take a step back pretending to look in the pantry for something because Marc's voice grew intentionally louder, \"Does he know I'm the reason he's never gonna get a taste of that pussy? Does he know that you won't touch him because you want me and no one else? Does he know where I've been? How I've taken you everywhere until-\" \n\nFlustered, she managed to construct a candy coated retort and delivered it in a false saccharine tone, \"Mr. Dussant, your problem sounds serious, I suggest you call someone in town to help you. Try Sheila, or Meg, they should be readily available. You might even need them both to try to tend to it since your situation seems to be grave.\" \n\nHis voice lost the wily teasing taking on a penitent tone, \"I meant to explain to you about that-\" \n\nBut her small victory had her on a roll, and a stroke of genius made her ask Maxime without taking the phone away from her mouth, \"Does Caleb like sprinkles?\" \n\n\"He probably does, I know I do! Let me check for you.\" Max opened the door and called out for his son. \n\nShe knew she scored big when Marc let out a short gasp and stuttered, \"Two guys, Jillian? That's how you get back at me? Two fucking guys?\" \n\n\"You can look up some numbers in the phonebook, too, if you need a pro to help you.\" She went on, smiling at her use of the word \"pro\". \n\n\"Jillian, this isn't you, you need to stop before it's too late.\" \n\nHer moment in the sun was short lived, though, cut short when Caleb came sprinted into the kitchen chanting, \"Daddy! Daddy! The Kings scored!\" \n\n\"That would be a 'yes' to the sprinkles!\" Maxime grinned. \n\nIt took Marc a moment, but he started to chuckle and it turned into loud laughter that made her slide the volume down on her phone, \"It's a kid? He brought his kid over on a date?\" \n\nMax gave his son a bowl of gelato, then grabbed the remaining two toasting them to her with a smile and signaled that he'd wait for her in the living room before following the boy back out. \n\n\"If you'll excuse me, Mr. Dussant, I'm celebrating Valentine's Day with my boyfriend and his son. I don't think I can be of much help to you tonight.\" as an after though, she added, \"Or any other night, considering that we live in two different states.\" \n\n\"You were the one who told me that what's between us is more than just good sex, and that we're great together,\" he insisted, \"You were the one who told me she didn't want another man, and didn't do what you did on your knees for any other man but me, Jillian. I want you to open up, to stop being so afraid of believing that you deserve a good relationship, I want you to be brave, Jillian. I want you to be truly brave for yourself.\" \n\nShe started to shake her head vehemently sinking into a well of denial, \"It was different back then,\" she watched the door to make sure Maxime and his son weren't coming back, and couldn't overhear her, \"Whatever it was, I don't want it anymore.\" Then hung up and turned her phone off before he could say anything else. For a lie that big, she thought that something should fall from the sky to smite her for her dishonesty. \n\nThe phone call was a guaranteed mood ruiner, Jillian surmised with a sinking feeling as she joined Max back on the sofa. He had to remind her to pick up her ice cream bowl in which the three sweet balls were melting and mixing into each other. She knew he was privy to the subtle negative shift in her mood, but he kept his observations to himself, and gentled his tone with her. \n\nBurrowing closer to him, she whispered in his ear, \"I'm inviting you to a more private dinner here after Caleb goes back to his mother.\" She was trying, God knows she was trying. \n\n\"Where do I RSVP?\" he smiled softly dropping his eyes to her lips. \n\n\"Right here.\" She replied pressing her mouth to his. \n\nBut the moment was gone. The earlier success shrunk back and regressed to that uncertain feeling that made her wish she was miles away with a certain ornery blue-eyed Canadian, or just alone...working. She even felt a huge sense of relief when Max and Caleb left after the boy dozed off with his face pressed against her coffee table. \n\nThere were two voice mails from Marc on her phone when she turned it on in the morning, but she deleted both messages without even listening to them. No use chewing the same bite over and over again when she just needed to swallow it and be done with it. \n\nHer date with Max on Monday night didn't sound as promising as she built it in her mind to be after all. But she went all in wearing a spaghetti strap, brushed silk Alexander Wang dress that looked more like a shift than an outer garment, and told herself she wasn't trying too hard. She didn't bother with a strapless bra or a background music pick for the dinner she didn't bother cooking, dragging out the evening might make her balk and end the date just like every one of their previous ones. \n\nHe was a few minutes early, and armed with another bouquet of generic date red roses, but she smiled and expressed how she loved them before putting them in a vase on top of a sideboard across the room from the roses he brought her on Valentine. \n\n\"Something smells really good.\" He said following her into the kitchen when she went in for the screw-pull wine opener she forgot to set on the table with the chilled wine bottle and glasses. He must've been nervous because it was clear there wasn't anything cooking on either the stove or in the oven, and the only thing he was smelling was her potting spicy herbs, and the coffee she ground earlier that day. ",
        "\"I...didn't cook.\" She tucked a strand of hair behind her ear. \n\n\"Yeah, I can see.\" He grinned flushing slightly. \n\n\"I thought that...that we might...\" she shrugged looking for a subtle way to say it, but caught his eyes on her chest and stole a peek at the silky material that stuck and hugged the full globes of her breasts outlining her nipples. \n\n\"I'd rather...you know, than eat.\" He met her eyes momentarily before dropping his gaze to her breasts once more. \n\nWith Marc, she would have slipped the straps off her shoulders one by one seductively, so why did her hands protest and freeze rigidly when she wanted to do that exact thing now? The answer was simple, because Marc wouldn't refer to sex by \"you know\". And he'd probably say something like \"Then we'll have to fuck for dinner\" or \"I came here to eat your sweet peach anyway\" prodding her to bite back saucily. She needed that push when she hesitated like she was doing now, she needed a nudge in the right direction. The space that Max gave her did absolutely nothing for her. Fuck consideration, come here and get me, she thought looking at him, how did he expect to feast on a fruit that he wouldn't pluck from the tree? \n\nStifling a sigh, she walked past him exiting the kitchen and he followed her wordlessly until she offered him some wine, \"Can you help me open the bottle?\" she didn't want her shaking hands to embarrass her, but his had a worse tremor. \n\n\"Can I just kiss you instead?\" he asked at last, and she licked her lips nodding her assent. \n\nShe was so nervous that she barely felt his kisses, and instead of feeling slick dew moistening her pussy lips, her eyes started to grow misty, and she blinked repeatedly feeling so perturbed and restive. She was so agitated that she wanted to slap his hands or push him away when he started to take her dress off, but she commanded her instincts to stay put while the silky material slid down her body to pool around her ankles leaving her feeling exposed and jumpy in a pair of frilly panties and nothing else. \n\nIn an uncharacteristic show of timidity, she rushed to cover her breasts with her hands, and hoped he thought she was trying to be seductive instead of convince herself to accept his touch by listing the reasons why sleeping with him didn't count as rebound sex. \n\n\"You look gorgeous, Jillian.\" He whispered trailing his fingers gently from her shoulders to her elbows, caressing her arms until he reached her hands and started to peel her fingers away from her breasts. \n\nShe prayed she didn't feel as stiff to him as she imagined she was. He pressed his lips in a kiss on her right palm, then the left before setting her hands on his shoulders. \n\nShe licked her lips finding herself staring at the tip of his nose when she couldn't meet his eyes. A wild laugh threatened to burst out of her when she contemplated how she was acting more bashfully now than she did the very first time she had sex at seventeen. She barely recognized this modest reticent woman as herself; she never shied away from sex, never said no to a much needed exchange of pleasure even when the man she was with was just a temporary solution, a place filler for the one she really wanted. \n\n\"Touch me.\" he breathed onto her skin distributing small kisses around her temple and cheek bone, and slowly dragged her closer to him until she was pressed against the front of his fully clothed body. \n\nThe cable knit sweater he wore felt pleasant against her nipples, and gave her a little boost that had her spider-crawling her fingers up his shoulders to wind around his neck. \n\nHe kissed her lips again, letting his hands roam the small of her back and cup her buttocks in his first display of boldness. It felt good, and she didn't want him to do all the work, she didn't want to take him inside her when she wasn't fully ready and end up faking an orgasm. So she stepped out of her shoes losing the three inches they added to her height just to feel his sweater brush her nipples again bringing them to attention. She then broke the kiss and rolled her head to the side offering her neck for him to taste. \n\nThankfully, Maxime wasn't a dolt who needed more than a hint to follow the smooth flow, and caught on by placing a wet kiss under her ear. Their slow progress helped her regain her spunk -or a watered down version of her usual sassiness- and she cupped his head leading him to kiss all the places that normally set her off. \n\nHe was so quiet during moments where a lascivious remark would've been preferable, and his laconic attitude discouraged any sexy comment she might've made. Besides, she figured that a lewd suggestion would be out of place since she's been diffident since they started. \n\nMax pulled back licking his lips and giving her one of his cover-boy smiles and peeled his sweater off. He was lean and fit, like the models on the pages of the fitness magazine he edited. Groomed to perfection, there wasn't a hair on his chest nor a trail of hair down his midsection. And she compromised that though she preferred a man with a little hair on his body, she was completely turned off by overly hair guys, and would rather run her hands on a smooth body than that of a bear with hair covering every inch of his skin. \n\nWhen he took her hands in his and placed them on his chest, she smiled up at him while thinking that she can suggest he stop shaving his chest in the future. Yes, the future. She told herself, you have a future with this guy. And she let her fingers explore the contours of his well defined body until she reached his waistband. \n\n\"Unbuckle my belt?\" he entreated in a low, husky voice. \n\nDismissing how unsure of himself he sounded, and how it was really unexpected from a guy as handsome as he, she focused on how good his taste in clothing was and how his Lacoste belt was from their newest collection. And as safe as it was to go with a Vince sweater and pants by the same designer, he knew how to put the outfit together and look casual yet dressy at the same time. \n\n\"You have good fashion sense.\" She praised running the pad of her thumb around the embossed button of his corduroys. \n\n\"I'm ready, I came prepared for the fashion police.\" He joked. \n\nShe hated that show where a bunch of idiots judged people by how they dressed when they themselves needed a serious wardrobe advice, and some manners, but she smiled nevertheless, \"The only way you can be completely safe is if you don't risk wearing anything at all.\" \n\nHe coughed and laughed at the same time, \"Wow, yeah, okay!\" he ran his hand through his hair flushing slightly, \"Care to help with that?\" \n\nShe touched her upper lip with the tip of her tongue, \"Like this?\" and slipped his pants button loose. \n\nTaking a swift inhale, he nodded closing his eyes. It took him a moment to find his voice and whisper a strangled, \"Keep going.\" \n\nHis zipper wasn't easy to slide down with his bulging penis pushing the front of boxers against it, and she had to slip her fingers inside his trousers to open it, brushing against his caged erection in the process. He took another harsh pull of air into his lungs and exhaled it in a long, \"God yes.\" And finally embraced the brazen route their encounter needed, and carried her, with her ass cupped in both his hands and covered the distance from their standing spot to the couch in a few steps. \n\nJillian braced herself against him, holding on and finding a comfortable position as he sat her astride him and held her in place with his hands spanning her ribcage. Her nipples were extra sensitive and touching them always gave her a rush of pleasure, but he merely caressed the undersides of her breasts with his thumbs. \n\nTurning slightly to offer her right breast, she cleared her throat \"Kiss me here.\" she beseeched, anxious for a little stimulation. \n\nHe glanced at her face then her breast before touching his lips to the poking tip and circling it with a closed mouth. His full lips were made to suckle a woman's breast, and she braced the heels of her hands on the couch's back behind him throwing her head back to savor the sensation. \n\nThe longer he teased, the harder her nails dug into the fabric of the sofa, he wasn't satisfied until she moaned deep in her throat, and he finally opened his mouth encasing his nipple into the hot recess. He sucked at her alternating between slow deep pulls and short licks, and her mood started to shift acceptably. \n\nAs she relaxed, Jillian seated herself lower on him, but the feel on his erection against her crotch made her want to jump up. They were both wearing their underwear still, and he pulled his pants lower but not completely off, yet she felt the need for a little more time to adjust. Thankfully, he switched to her other breast when she placed her right hand on his chest in a subtle suggestion, and she had a hard time stifling a laugh when her mind cruelly suggested that his chest was so smooth her hand would've slid off of it had he been a little sweaty. \n\nTo mask her laughter, she moaned, \"This feels good, Max.\" and he pulled back smiling at her. \n\n\"Everything about your body feels good, Jillian.\" \n\nTheir eyes met, and his smile didn't falter. He stroked the small of her back and slipped the tips of his fingers into her panties for a second before moving to the front and pressing his index finger along the seam of her crotch. Her toes curled painfully, and she blinked against the urge to jerk away. What was wrong with her? \n\nHe stole a finger inside the leg of her panties and traced her bare labia, and she swallowed closing her eyes. He must've thought she was enjoying it, because he cooed \"Mmmm...\" and moved his other hand to pull the crotch of her panties to the side allowing himself better access. \n\nShe opened her eyes and watched his hand, tan and perfect, caress her pussy and felt his middle finger flirt with her tight opening. What are you doing? Her mind rebuked, and she jumped up, \"I can't. I can't.\" she found herself babbling, \"I can't,\" she snatched the closes thing she could get her hands on, a knit throw from a chair, and held it against her chest, \"I'm in love with someone else!\" \n\nHer words shocked her more than they did him, and he just sat there with a wide-eyed stare while she came close to hyperventilating with the quick shallow breaths she took. What did she just told him? Love? Marc? Sure she had an intoxicating, extraordinary connection with him, but she didn't love him, did she? \n\nShe drew in a shaky breath covering the side of her face with her left hand, \"Oh my God, Oh my God! Oh goodness, no!\" \n\nMax was still silent, and she couldn't decide if it was a good or a bad thing since she was coming apart in a bemusing show of frayed nerves. \n\n\"Jesus, I love him. I love him? Oh hell, I love him. I love him. That's why...\" she ventured a peek at Max who pulled his pants up adjusting them around his waist. She didn't dare look at his lap and his arousal that she had so callously walked -jumped away from. \n\n\"I'm so sorry.\" She apologized feeling the pressure of hot tears tickle the inside of her lower eyelids. \n\n\"I'm confused,\" He said at length, and his voice had a touch of unaccommodating anger, \"I thought you said you haven't dated anyone else in years.\" \n\n\"I didn't lie; I haven't had a boyfriend in years.\" \n\nHe shot up from his seat, \"Then who, pray tell, is this other guy you're spazzing about?\" \n\nTaking an instinctive step back, she swallowed, \"I'm not even supposed to...he's...\" she wrapped the throw around her torso clumsily still fighting tears, \"He and I aren't...we weren't supposed to...it just...we weren't even supposed to...\" \n\nSensing her loss of words, he supplied with a frown, \"Was it the guy that called the other day? The dude you told me was your boss? Were you covering with the oldest excuse in the book? Oh, it's just work.\" He scoffed. \n\nJillian rushed to explain, \"No, that guy was -is my boss, I didn't lie about that.\" \n\nSnatching his sweater from the floor, he shook it impatiently, \"Then who is this other guy?\" \n\nShe gulped, \"My boss.\" \n\n\"Yeah, I got that part, you didn't lie about your boss calling, who's the oth\u2014Oooh...\" comprehension dawned, and he froze midsentence blinking at her, \"You're sleeping with your boss?\" \n\nHer eyes were blurry with unshed tears, she could barely see him, and she nodded then shook her head, but he went on, \"Is that why you left New York?\" his tone grew softer gaining an understanding quality, and she nodded. \n\nHe took a couple of steps in her direction, then remembered he was shirtless, and pulled his sweater on before enquiring, \"Were you trying to end it? Was he...?\" he shook his head, \"I don't understand, I mean, why did you leave if you're in love with the guy?\" \n\nShe wiped at her eye, \"It's complicated.\" \n\n\"Did he make you leave? Was he the one who put an end to things? I don't understand,\" he repeated once more, \"I mean he called you yesterday, so he obviously still wants something. I don't understand.\" \n\n\"I'm not asking you to understand,\" she shook her head, \"all I want is to beg for your forgiveness. I didn't mean to drag you into my personal mess. This is my own hell to dwell in.\" the second she finished talking, the gates of tears opened, and she was left with twin rivers running down her cheeks, \"I love him, and now I can't stay and work for him anymore.\" \n\nHer weeping must've disconcerted him, because his face fell, and he murmured her name, but she shook her head again, \"I'm sorry.\" \n\n\"Claptrap!\" he held her by the shoulders digging his fingers firmly into her skin when she shrunk back, \"I'm not gonna walk out on you now, not when you obviously need someone. Is this guy trying to blackmail you? Use you? Why did he call? You were so upset after talking to him. Is he threatening to fire you? Talk to me, Jillian, I can see that you're not the kind of woman that gets herself in a tight situation by choice.\" \n\nHe was taking it in stride, and she mentally applauded him for his standup attitude, but shook her head, \"It's very complicated. And you're right, I didn't walk into it by choice, but I didn't stop it either, and I'm paying for it now.\" \n\nPresuming, he said, \"If there's no hope for anything with this guy then why do you agonize over him? I'm here, and I want you. You can open up to me.\" \n\nEyes wide and bleary with tears, she faced him, \"That's where you don't understand the situation.\" \n\n\"Then make me understand it, daggammit!\" He used substitute curse words eve when he was angry and serious, and Jillian didn't know why it ticked her off so much. \n\n\"It's a long story.\" She started but he pushed her down on a chair and sat on the coffee table in front of her. \n\n\"I have time.\" \n\nAbbreviating as much as possible, she recited the synopsis of her ongoing saga with Marc omitting all the private sexual information, and Marc's threesome from the other day. But she recounted the Christmas meeting -sans sex details- to press the fact that Max had every right to be angry, and can leave without a backward glance. \n\nAnd he did latch on to that fact, \"You saw him while we were dating?\" \n\nShe nodded wiping the remnants of mascara from under her eyes, and he asked hesitantly, \"Were you intimate with him?\" \n\nWe fucked like nymphs, \"That's what I'm trying to tell you; I spent the night in his hotel room.\" \n\nHe looked at her in that way where his eyes stare at each one of hers in turn like strict teachers do to little children trying to intimidate them, and succeeding, \"What made you decide to, you know, with me now?\" \n\nWhen she didn't answer, he added, \"I know we didn't get far, but I know you intended for us to.\" \n\nSince truth was the best policy and all that jazz, she shrugged, \"I've been trying to move on since before my Christmas...relapse, and since we parted ways, he and I that is, I thought I can do it. I wanted to do it. I didn't mean for you to be put in a situation like this.\" \n\n\"So what's going to happen now?\" \n\nSilence stretched, and she wanted to tell him that she wished she knew, but kept her words since she managed to stop crying. \n\n\"You're going to talk to someone about your anxiety?\" \n\nShe didn't like that he brought it up, too, and cleared her throat, but couldn't come up with an answer so she shook her head instead. \n\n\"You want me to leave.\" It wasn't a question. \n\n\"I'm sorry.\" \n\n\"It's okay.\" He rubbed his hands on his thighs, then scowled and licked the side of his mouth, \"Actually, it's not okay, but I think I understand now. Finally.\" \n\nAnother apology would've been lame, so she merely stood up thinking that he was about to rise, too. It felt awkward when he remained seated and looked up at her taking in her barely concealed body. It appeared as if she wanted to kick him out when she meant to usher him out nicely. \n\n\"It's a shame.\" He murmured getting to his feet at length without taking his eyes off her. \n\nNever really losing her bravado, she challenged, \"Do you want me to apologize again?\" she was growing weary of having to explain herself. \n\nHis eyes softened as he touched her cheek briefly, \"What I meant was, it's a shame you don't want to be my lady; I'd tread you like a princess.\" \n\n\"You need a relationship, not a project, Maxime.\" \n\n\"Huh,\" he snorted then laughed ruefully, \"You think you can make me un-want you by calling yourself a project?\" \n\nA fresh tear escape the corner of her eye, and she blotted it with the edge of the throw as he said, \"That's what you truly think of yourself, isn't it?\" he looked up exhaling and fisted his hands squeezing them closed a few times before he stuffed them in his pockets, \"It might help to talk to someone, because you're a wonderful woman, and you shouldn't be putting yourself through all this mental strain for nothing.\" \n\n\"I just might do that, Max, thanks.\" \n\nAs she escorted him to the door, barefooted and half naked, she realized that she didn't just say that to make him stop and leave. She actually meant it. For once in her life, her job wasn't filling the void inside of her, a void that stretched open and gaped at her with a dark toothy inside that she didn't know how to fill. The strong woman who knew how to take care of herself and everyone in her employ has been reduced to a weepy mass of emotions and couldn't stand her ground anymore. \n\nInstead of the crisp white Moscato she'd picked for her date, she grabbed a bottle of 2008 Malbec that she's been saving for a special occasion a few years down the road since she liked her wine a good eight or ten years old, and headed to the bathroom. Halting her step, she realized that if she attacked that bottle, she'd drink the whole thing, and not wanting to turn into an alcoholic, she went back to the kitchen and poured herself a generous glass. Sure it was three quarters full, but it was still one glass. \n\nShe took a small sip savoring the smooth marriage of sweet, tangy, and bitterness of the grape in her wine and strolled to the bathroom. Her bedroom's free-standing mirror caught her reflection and threw it in her face; she looked like a nightmare. Her hair looked limp and frizzy at the ends, her makeup smudged face was sallow, and the throw she still held like a shapeless strapless dress made her look like a hobo. \n\nAnother sip of wine had her releasing the tucked end of the blanket, and she stood still staring at her naked reflection. Well, she wasn't naked yet. She stepped out of her panties without taking her eyes off her reflection, and straightened again meeting her own eyes in the mirror. \n\n\"I'm sorry I let you down.\" She addressed the woman in her mirror with a clear voice that rang against the walls of her room, \"I love him, and I walked away because I'm afraid, and I'm sorry it hurt you.\" ",
        "Glancing at her wine glass, she swirled the inky velvet red around, \"Shit must be working, I'm talking to my fucking self.\" The smile she gave her reflection was dolorous, and she took another drink just to take it away. \n\nThe most fun part about taking a hot bath was pouring in the salts after she stepped into the tub, and she indulged in swirling the fragrant beads on her skin between sips of wine. By the time her water cooled, and glass got drained, she felt completely relaxed, and had a plan of action. She pulled out all of her modeling portfolios, and design sketches when she left the bathroom, and went through her works picking her favorites, and improving others with a few strokes and swipes. Before she knew it, it was after four in the morning, and she had a stack of designs, old and new, on her desk. \n\nShe went online and booked a flight to New York. Having a choice between a crappy seat, and a crappier seat, she picked an economy class spot by the window which wasn't really the worst thing in the world. If she was going to be spontaneous, she had to make small sacrifices along the way. It was quite inconvenient though that she couldn't find a direct flight on such short notice, and had to settle for something with a five-hour layover in Charlotte North Carolina. \n\nShe was too wound up to sleep yet, when slumber claimed her, she slept a solid three hours and woke up feeling like she had a full seven-hour sleep. A quick email to her assistant explained that she was going to New York, and she didn't mention when she was coming back to work because she didn't know. \n\nSkinny Joe's jeans, a tight red turtle neck sweater, and an ivory funnel neck coat made her outfit. She didn't think she needed a lot of clothes for what she travelled for. She might've needed a suitcase, a small carry-on at the least, but she didn't pack one and threw a bunch of stuff in a Dooney and Bourke shopper tote that was big enough for her new design portfolio, and stepped outside to wait for her Uber to the airport. \n\nShe napped throughout the first flight, drank two cups of burnt coffee at a coffee shop in Douglas airport because the barista was too lazy to brew her regular blonde roast. The slob didn't raise one complaint about the complicated orders the other customers threw at him, yet read her a sob story about how hard it was to drag the drip-brew stand and pour hot water on coffee grinds for her. She should've read him the riot act, but settled for a old Pike Place roast both times, because it didn't really matter what the details of her trip were since the outcome would give her peace. \n\nA banana and a bag of crackers tied her up before she took another nap on the second plane, and she woke up in The Big Apple in no time. She Uber-ed from LaGuardia to Marc's townhouse, and arrived a little after 5 pm. \n\n\"Ring the doorbell.\" She breathed to herself when she stood in the street staring at the door like the gates of a Grimm's magical kingdom. But he wasn't home, and was either stuck in traffic or putting in a long work day -she refused to think that he might be with a woman somewhere. \n\nJeans were the wrong thing to wear, she surmised after about twenty minutes of sitting on the cold brick step in front of his house. If her mind was functioning properly, she might've done something reasonable like sit in a caf\u00e9 or a restaurant somewhere for an hour or so, but her brain was going down a one-way road with blinders on its eyes. By 7:15 pm, her feet felt frozen in her booties, and she lost the feeling in her fingers. Her nose was running as if in a competition with her eyes that were tearing up constantly; who can give Jillian the most trouble? \n\nShe'd exhausted all of her Kleenex, and contemplated using her moisturized makeup remover napkins instead when the twin beams of an approaching car scalded her tired eyes, and had her look up from her opened purse. \n\nFrom the shape of the car's lights, she guessed it was Marc's 2013 Escalade, and her heart tripped. She swallowed and tried to get up, but her legs didn't cooperate. Cold and unused for close to two hours, her knees buckled and bent when she pushed up, and she plopped back down with a muffled thud. \n\n\"Hell, crap, fuck!\" she cursed slinging her purse on her shoulder and freeing her hands to press against the ground on either side to give herself a boost. \n\nJust like his neighbors, Marc parked by the sidewalk, but was rather hasty that his front tire rolled up the curb, and he had to back up sloppily before putting the SUV in park. \n\nJillian was up, but her legs felt like two stilts made of bagged popsicle juice; frozen yet fragile. And it wasn't just the outside elements' effect, but what she was embarking on as well. She met his eyes through the windshield and held his gaze. \n\n\"Oh god, I love him.\" she whispered, her trembling lips too chilled to form the words. She hadn't really thought of it since it tumbled out of her mouth in front of Maxime, and now it felt real and alive. \n\nThat was the explanation she sought. That peculiar warmth that overtook her when she was around him, the way she felt too agitated and wanted to get out of her skin, to claw it off until the humming stopped. She loved him, that's why she felt happy, yet terrified everytime they established any sort of contact...The elation, completion, and combustible passion that coated her skin and glided over it like honeyed syrup. Love. And it wasn't like anything she's ever felt when she loved other people; loving Marc almost had a taste that the mere thought of him evoked. A mixture of his sweet minty kisses, the taste of his skin, and even his salty cum, all the things that only a woman that's been with him would know. \n\n\"Jillian.\" He stepped out of the car and stood still for a second staring at her. \n\nHer was dressed in workout gear, white running shorts and a navy windbreaker over a navy t-shirt. He looked haggard, and his sweat was still drying on his clothes. The lawn light exaggerated the shadows under his eyes, and his thick stubble made his face look a tad gaunt in the dark. \n\n\"Hi Marc.\" Her voice came out raspy and high-pitched, \"I...\" she cleared her throat and tried to remember the opening sentence she worded together in the tub last night, but planning has proved to be easier than doing. She was still charging her courage to look him in the eye. Facing him had never been so difficult. \n\n\"Oh God, what am I thinking?\" he smacked his palm against his forehead, \"You're shivering, Jesus!\" he jogged up the few steps leading to the house and took his windbreaker off with every step, \"Here, it's not much but...\" he stopped himself, \"Shit, I'm sorry, I'm all sweaty and you're wearing white.\" His tone dropped to a mumble when he reached her. She knew she didn't look her best with a red nose, sensitized from all the times she had to blow it. Her lips must've had a purplish tinge from the cold, and they felt cold and dry when she ran her tongue on them. Yet, he looked at her like he always did, if not with some yearning in his eyes now. \n\nHis mouth opened and he began to say something then wet his lips and shifted his feet, \"Here's the key.\" He dug in his pockets and took her chilled hand in his placing his keychain with its load of key FOB and keys into her palm. His hand was so warm it throbbed, and she wanted to clasp it with both hands and press it against her cheek. \n\n\"It's this one.\" He whispered feeling for the appropriate key without taking his eyes off hers, \"The security alarm pad will be on your right hand when you enter, the code is 207019. There's a light switch right next to it.\" \n\n\"Okay.\" She muttered, hypnotized by her proximity to his body, and the way his smell invaded her senses. Even his sweat smelled masculine and delicious making her want to demand his jacket just to wrap herself with his essence. \n\n\"I'll get your luggage.\" \n\n\"Okay.\" \n\n\"Where is your luggage?\" he looked searched the ground around her shaking her from her reverie. \n\nEmbarrassed, she declared, \"I didn't bring more than a purse.\" \n\nHe eyed her with a scrutinizing look for a long second and seemed to want to ask her if she was okay, but didn't, \"207019.\" He repeated turning back to his car. \n\nShe clutched at his forearm instinctively drawing his windbreaker into her hand. \n\n\"I'm just going to get my gym bag.\" He clarified, but she shook her head, \"I'm cold.\" \n\nIt was unnecessary since she was gonna be inside within the next 30 seconds or so, but she really wanted to wear a piece of his clothing, sweat or not. \n\nMarc must've understood, for he draped it around her shoulders and pulled the lapels around her neck, \"Better?\" \n\nHe was so close, so intimidating as he towered over her, big, solid, and warm when she felt small, shaky, and cold. \n\n\"I can't focus on anything when you're looking at me like that, Jillian.\" His voice came out strangled, and she blinked and whispered, \"Like what?\" \n\n\"The code is 207019, Jill.\" he evaded the question cupping both of her shoulders and giving her a fortifying little shake. \n\nWalking proved to be a challenge, and her teeth started to chatter adding further embarrassment to her situation, yet she surmised that she didn't have the sense to feel discomfited anymore. It was all new to her, this spontaneity and all the accessories it dragged along with it. Besides, she wasn't venturing into a jungle in the middle of nowhere Indiana Jones-style or slinging down the side of a mountain or something despite her perfect Lara Croft French braid. \n\nShe smiled to herself as she disabled the alarm, and mumbled, \"I'm hilarious.\" Distracting herself from the fact that Marc was going to enter the house any second now. \n\n\"Would you lock the car, if you please?\" he stepped in before she completed her thought, and she gaped at him and blinked several times before catching on and pressing the lock button on his FOB. \n\nSeeing him in better lighting revealed the circles under his eyes that attested to how exhausted he must've been. It appeared that he had shaved his Christmas beard off then just forgot to shave again, because his stubble was thick and not tended to. His hair, when he took off his Habs cap, was still longish and wet with sweat, and he had to run a hand through it to shake off the hat's compression. \n\nHe looked tired and rode-hard, and she's never found him more handsome. Maybe it was the time they spent apart and her trying to force intimacy with someone else, or maybe it was her admitting to herself her love for him. She now saw him with the light of the love she felt for him, and he didn't need to be in one of his swanky designer suits and looking fresh as a crisp fall apple for her to appreciate how attractive he was. \n\n\"Are you alright? How long have you waited outside?\" he enquired. \n\n\"Um, since five...ish.\" She shrugged, \"I didn't realize you'd gone to the gym after work.\" \n\n\"Is your luggage at the hotel?\" \n\n\"This is all I brought with me.\" she flashed her tote without telling him that she didn't check into a hotel, and wasn't planning to. She wanted to finger-comb the stray hairs of his side burns then run her fingers down to his mid-ear where they didn't really stop, but turned lighter and thinner as they blended with his stubble. \n\n\"Are you cold? I'll turn up the thermostat.\" He almost hopped to the corridor where the regulator box was and fiddled with it, \"Do you need a blanket or something?\" \n\n\"I just need to use your bathroom, please.\" \n\n\"Sure, sure,\" he waved her into the vestibule and pointed at a closed door, \"there's the powder room, unless you need to shower.\" \n\n\"I could use a quick rinse in hot water, if you don't mind.\" \n\nHe swallowed and nodded more than necessary, \"Yeah, no, I don't mind, use the one in my bedroom.\" \n\nShe stepped towards him and stood in place looking at him. After a minute of silence, she explained, \"I don't know where your bedroom is, Marc.\" \n\n\"Oh damn, of course, I'm sorry,\" he scratched his forehead with the back of his thumbnail, \"Can I take your coat or purse?\" \n\n\"I'll take my purse with me because I have a t-shirt I can change into,\" she didn't tell him that she wanted to reapply her mascara and moisturize her face after her shower, and shrugged out of her coat and his windbreaker, \"Here's this, though, thank you.\" \n\n\"No problem.\" He led her up a flight of stairs with a wide, vintage cherry banister that was shined to perfection. \n\nIn any other situation, she would've spent her time admiring the elegantly decorated home, and demanded an extended tour, but interior design was the last thing on her mind as she walked up the stairs feeling his eyes on her backside. She knew he was admiring her derriere in the tight jeans, he loved her ass, and she put an extra sway in her hips amazing herself by how his presence can twist her cables hotwiring them even when she was slightly jetlagged, hungry, and very cold. \n\nHe opened the bathroom door for her and flicked the lights on turning the dark room into a celebration of exuberant lights. The bathroom was big enough to be a modest-sized living room, and was walled with mirrors that had intricate frames made of small shards of more mirrors. His double sink vanity had a slight crescent bend to it, and two outer triangular-prism-shaped counters. The silver speckled black marble tops gave out a look of opulence that should've made her want to plan on redoing her bathroom the minute she got home had she been thinking normally. \n\n\"I can run you a bath if you wish.\" He indicated the large hot tub that had its own section and was mounted on a two-step high pedestal. \n\nShe glanced at him trying to decipher his features to see if he meant to join her or not, but his expression was bemused yet closed up. Shaking her head, she bent her knee up and unzipped her left bootie, \"I won't trouble you, I'll just take a shower.\" \n\n\"It's no trouble if you want it.\" \n\n\"No, I'm fine.\" \n\n\"I have clean towels in here.\" He opened a wall cabinet then pointed the glass shower stall, \"The hot water comes on pretty quickly.\" And then he was gone. \n\nShe twisted her hair braid around securing it at her nape, and scrambled through her shower not wanting to dally. The hot water felt divine, and she wiggled her toes and fingers regaining the feeling back in them sparing herself another minute under the heavy spray before stepping out and back into the fairyland bathroom. \n\nMarc had left the towel cabinet door open, but she spotted his personal towel hanging from a round towel rack and had it wrapped around herself before she could remind herself to stop acting like a frisky teenager. She then spread a thin layer of moisturizer on her face, cake batter Chapstick on her lips, and coated her lashes with a generous layer of doll-eyes mascara. She had another pair of the same panties in her bag that she changed into after washing her used underwear and socks in the sink. The burnout white t-shirt she had the savvy to bring saved her having to pull her turtleneck back on her damp skin, a struggle that she only went through with her jeans. Eschewing her boots, she treaded out in socked feet and followed the lights downstairs that led her to his kitchen. He was mixing something in a mug, and she stood at the door rubbing a hand up and down the opposite arm and unsure of what to say. \n\n\"Feel better?\" he asked without looking at her as if the hot liquid he was swirling in the cup was the most important thing in the world, and she nodded, then cleared her throat, \"Yeah.\" \n\n\"Good.\" Her turned to face her, \"Made you some hot cocoa.\" \n\n\"Thanks.\" She accepted the plain white mug with the steaming chocolate drink and smiled weakly, \"You have a beautiful home, Marc.\" \n\n\"I guess.\" He shrugged scratching the bridge of his nose then wiping the front of his face with his hand, \"It's too big for me.\" \n\nHe was studying her with that examining look again and it made her feel self conscious so she took a sip of the cocoa and burned her mouth, but masked her faux pas by taking a smaller sip. Her tongue pounded with pain, but the stuff was good, \"Almont milk?\" she raised her eyes to his. \n\n\"Vanilla almond,\" he scratched his right eyebrow. He was still sweaty and looked a bit impatient, as if he wanted to excuse himself and run out to spend the night somewhere else until she left. \n\n\"It's delicious.\" \n\n\"Yeah, it's good, I like it.\" \n\nInane chatter, she didn't want to waste her breath on insignificant formalities, yet couldn't bring herself to launch into her speech about why she came to see him. \n\n\"Hey, listen, I gotta hit the shower, I stink,\" he flapped his arms indicating his state, \"There's some sandwich stuff in the fridge, help yourself to anything you want to eat. I'm guessing you haven't had lunch.\" \n\nRaising a shaky hand to her cheek, she questioned, \"Do I look that bad?\" \n\nHe pinned her with that blue flame stare of his, \"You never look bad, Jill, not to me.\" and before she could give him a lame thanks, he smacked the table top and walked off. \n\nShe needed to eat, but wasn't really hungry. Opening the refrigerator didn't provoke her appetite, despite its generous load. She settled with a small pack of raspberries, and spent more time picking the tiny seeds from between her teeth than actually eating the stuff. She couldn't even finish her cocoa as she tried to bring her mind to focus on what she wanted to tell him, and construct it in a decent way. \n\nHis clearing his throat alerted her to his presence, and she looked up from her cup where she was swirling a raspberry in the remaining chocolate. \n\nHe was dressed in a pair of worn -very roughly worn- jeans, and a large gray sweatshirt, \"Toss me an apple, will ya?\" he leaned against the doorframe, \"So what do I owe this visit to?\" \n\nThere was a crystal footed fruit bowl in the middle of the table, and she picked a completely red Jonathan apple and threw it in, what she hoped was, an elegant way that didn't look like she was hurling the fruit at him. \n\n\"I wanted to talk to you.\" \n\n\"Do I have to take my clothes off for this talk?\" he grasped the hem of his sweatshirt with both hands lifting up a little. She knew that he meant to offend her because he was expecting the worse, and tried not to let it shake her. And as much as she ached to take him up on his offer and assuage her body's hunger for him, she wanted to get the talk out of the way first since the last time they had sex before talking ended up with a misunderstanding and an argument that left her miserable. \n\nHe didn't give her the chance to talk though, he brought the apple to his mouth, then as an afterthought, lowered it again, \"I mean you gotta know that this is wildly unexpected. You hang up on me one day, telling me that you want to focus on that dude you're dating, and refuse to answer my calls. Then show up unexpected at my doorstep, sit on the curb and wait outside in the freezing cold for a good two hours, then just simply say that you want to talk. Huh,\" he snorted, \"If you wanted to talk you could've talked on the phone. Again, I don't want to be presumptuous, but you see my point.\" He wiped the apple on his shirtfront nonchalantly then took a large bite breathing through his nose as he chewed and glared at her. \n\nShe opened her mouth to speak, but he held his apple hand up pointing a finger at her while keeping the others wrapped around the fruit, \"And for your information, I didn't fuck those two models that day you called me. I was going to do everything in my power to erase your memory from my mind, yet everytime I started to do something, I saw your face, heard your voice, and stopped. When I finally took a leap and said \"fuck it\" you called me and claimed my sanity again. Not that you care one bit, I mean, you have that guy with the kid to go home to, Caden, Dickbag, whatever his name is.\" "
    ],
    "authorname": "Ginger_Martin",
    "tags": [
        "romace",
        "tit fuck",
        "anal",
        "pussy licking",
        "love",
        "oral",
        "boss and employee",
        "one on one",
        "woman on top",
        "kitchen sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/flowers-for-jill-ch-07"
}