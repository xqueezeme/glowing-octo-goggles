{
    "title": "Bent, Not Broken",
    "pages": [
        "Author's Note: I've had the idea for this one for months before I started writing, and I originally envisioned something shorter. When I outlined it, I noticed that it would have to be a longer work to do it proper justice. This story comes in at just over 52K words with a lot of heat in the middle. I had originally thought to put it in the First Time category but seeing as the romance really defines the story, I ultimately chose to put it there. Enjoy!\n\n*****\n\n\"Here you go, man. 136 Midland St, right?\"\n\nKyle Patterson snapped out of his reverie, not realizing that the cab had stopped in front of his childhood home. It was a hot, muggy day in the second week of August, and the heat was already so oppressive that he found his shirt sticking to his back. He hazarded a glance over to the house he'd grown up in, finding it both a familiar and strange sight at the same time.\n\n\"Yeah, this is it. How much do I owe you?\"\n\n\"$15.65,\" said the driver while reaching his hand behind him. Kyle grabbed some money from his pocket and deposited it in the man's hand. Finding the total all there plus tip, he popped the trunk so Kyle could grab his belongings. Two small duffel bags contained his entire life for the past five years, and Kyle couldn't help but notice how small they seemed on the sidewalk. Placing a strap over each shoulder, he stepped up to the front door.\n\nNot much had changed at the house since he'd left. He was glad to see his dad finally gave her a fresh paint job so the house didn't look so dated anymore. Even with the new exterior look, the deck still creaked at just the right spot, and his mother's flowers still struggled to grow, a fact he always chalked up to a lack of a green thumb on her part. It hadn't been home in a long time but it was for now. At least, it had to be.\n\nBefore his hand even touched the door, it swung open erratically, and his mother's face appeared with a look of joyous excitement.\n\n\"There's my baby!\" his mother squealed, wrapping him up in a hug that only a mother could give. \"I'm so glad you're home!\"\n\nKyle clung onto her tightly as a stream of happy tears cascaded down her face. It had felt like ages since he'd seen her last. Of course to her, he'd always be her baby as the youngest child. Even if he was all of twenty-three now with a whole lot of battle experience behind him. \n\nShe pulled away and really looked at him. \"You have no idea how happy I am to see your face again.\"\n\nKyle saw the deeper meaning behind her words. There had been one too many close calls in the last five years. Incidents and fights that might have prevented the reunion with his family. She knew it too, the implied meaning hiding behind the spoken words.\n\nKyle managed a brief smile and a nod. \"Glad to see you too, mom,\" he said quietly before she shuffled him into the house. As soon as he was inside, the familiar smell of the house hit him immediately. Kyle swore that every house had its own distinct aroma, sometimes good but often bad, yet the house brought back a flood of memories. The smell was just another reminder he was home.\n\n\"There's my guy,\" said his father, looking up from the television set and quickly rushing to his feet. \"How's my ex-marine doing now?\"\n\nKyle managed a chuckle. \"It's former marine, dad. Don't you know you never say ex-marine?\"\n\nHis father could only grin. \"I learn something new everyday. So how's my former marine doing?\"\n\n\"Not too bad. Glad to be home,\" said Kyle before looking around. It wasn't exactly a lie, but it wasn't the honest truth either. The house seemed a lot emptier than he remembered it. Of course, it was only his parents living there now. Both of his older brothers were long since out of the house, even if they were still there before he left to join the marines. \n\nGrabbing his duffel bags, he walked up the stairs to his room, finding the white, wooden door closed. Jiggling the knob, he stepped into what felt like a time capsule. His bed was just the way he left it, slightly disheveled in a way that would never pass inspection now. The football ribbons and trophies hung off the wall, a reminder of his time in high school and days long since past\u2014a gateway into his life before enlisting in the Marine Corps at the tender age of eighteen.\n\nAt the time, it had seemed like the right thing to do. At that point in his life, he was in the best shape he'd ever been, thanks to football. Not to mention, he had no idea what to do after school. College didn't seem quite his style. He had trouble staying interested in his high school work so signing up for another four years sounded like a form of torture. In comparison, the chance to play hero and see exotic places around the globe intrigued him. He was probably the easiest sell the recruiter ever had, but it meant that while his high school friends were preparing to move into dorm rooms, he was in boot camp.\n\nOnce he was in, it opened up a different world for him. For a guy who'd barely ever left his own county, suddenly he was all over the place. Japan, Iraq, Afghanistan just to name a few. Destinations that he'd only read about in newspapers before. He spent the most amount of time in Afghanistan, over two tours' worth, finding that was enough for a lifetime.\n\nEven when he wasn't patrolling the middle of nowhere, Afghanistan, Kyle learned to rely on his friends. All of them\u2014Leroy, Smitty, Urkel, Garza, Newman, K-Top\u2014members of his platoon. Most of them were just as lost as he was when they signed up at a young age. Yet there was something about combat that had a way of maturing them, molding them into the men they were meant to be. At least, that was what the brochure had said. For Kyle, he felt not quite right after enough time serving. Like there was something missing. The feeling really exacerbated when Garza got blown to bits by a Taliban mortar. \n\nThere were other casualties as well. They lost Smitty to enemy fire and Newman to a sniper. Kyle learned quickly to shield his emotions as the best protection against losing a friend in such an environment. In doing so, it buried the loss far below into his core, where he couldn't dwell on it or let it prevent him from completing a mission. But as his core of friends dropped one by one, he found pieces of who he was dying with them.\n\nIt was still a dangerous time in that part of the world, despite the nightly news long since having moved off that godforsaken country. But just because there was no coverage of their firefights, it didn't mean the body count didn't still rack up day by day. Kyle eventually had enough, and when he was asked to reenlist again, he answered with two middle fingers. He was tired of watching friends die. \n\nStepping back into civilian life was almost like another deployment for him. It's a different feeling to know that people aren't trying to kill you from the moment you wake up in the morning, and it takes a while to adjust back into normal life. There were still things that made him jump. He particularly hated garbage day. There was something about the loud trash vehicles that made his heart race. He'd been warned in advance that the fourth of July would be tough too, but thankfully he had almost a full year before he had to experience that. \n\nKyle sat down against his bed after grabbing a picture from the wall. It was a picture of his homecoming game from senior year, when they had crushed Dayton 52-10. He stared back at the youthful, more innocent version of himself. Part of him wondered what that kid would say to him now. He also wondered what he would say to him in return? Don't enlist and watch your friends die. Don't leave pieces of yourself in Afghanistan. All of that was better said than done.\n\nThere was a subtle knock at the door as his father stepped in. \"You doing all right, Kyle? You seem a little quiet since you got home.\"\n\nKyle put the picture down on his desk quickly. \"Yeah, I'm doing okay, I guess. It's just different being back home. I'm still adjusting to all of it.\"\n\n\"Your mother and I couldn't be happier that you're here again. Some of your calls from over there worried us to pieces,\" his father admitted. \"I'm glad it's all behind us now.\"\n\nKyle nodded quietly without saying anything.\n\n\"So do you have any idea what you want to do now? Any plans for a job or maybe go see a girlfriend for a bit?\"\n\n\"I'm not sure. I haven't really thought much about it,\" said Kyle with honesty. \"No girlfriend in sight. Not much on the job prospect front either. I guess I'm a little lost.\" In more ways than one. \n\nHis father put a comforting hand against his back. \"You don't have to figure out everything right away. Take some time to enjoy yourself. Relax a little. I'm sure the last five years weren't easy, and getting back into normal life will take some getting used to. Don't put pressure on yourself, and just take it one day at a time.\"\n\nKyle started to nod. \"I should start looking for jobs though. I will need something to do. After all, I can't exactly live in my childhood bedroom forever.\"\n\nHis father grinned. \"Do it on your own time though. When you're ready. And if you need some help, let me know. I have a lot of connections that could use the help of a veteran. If you need help lining up a job interview, just let me know. Do you have any interests in that matter? Any idea where you might want me to start?\"\n\nKyle took a deep breath and then shrugged. \"I don't know. I'm still trying to get used to not being a marine.\"\n\nHis father nodded. \"Take your time. We're glad to have you home, son.\"\n\nKyle nodded his head, finding no response appropriate enough to say out loud. He could see the unspoken words lined up on his father's lips. The nervousness and the worry about the person who'd just returned home. Kyle didn't have to wonder if his father sensed the change in him\u2014his apprehensive gaze already confirmed it silently. \n\n\"You should take time to see some of your friends as well,\" his father started as he walked back to the door. \"I'm sure they'd be happy to see you. It has been a long time.\"\n\n\"Yeah, maybe. I wonder who'd even still be here right now. I bet a bunch of them have moved away,\" said Kyle.\n\n\"Some probably have but I bet others haven't. Your mother said she ran into Leslie Butler at the grocery store. I guess Ryan is back for the summer before he goes off to school. I bet he'd like to see you again.\"\n\nRyan Butler had been his best friend back in high school. They had both played on the same football team together. Ryan was a big kid even back then, over two-hundred fifty pounds of pure muscle. He made opposing quarterbacks sweat just by looking at them.\n\n\"Maybe I'll give him a call,\" said Kyle dismissively. He hadn't talked to Ryan since he left. He wasn't sure he'd be good company for conversation even if Ryan wanted to see him.\n\nHis father gave him one more smile as he tapped the door frame. Before he knew it, he was already gone. As he slipped the duffel bags off the bed, Kyle laid down on it and stared up at the ceiling. He'd heard returning back to civilian life was a tough adjustment. The marines had provided so much structure to his life that he wasn't sure what to do now that he was truly out. The prospect of having unlimited time in front of him was slightly scary. \n\nWhat the hell am I going to do now?\n\n*****\n\nKyle had the nagging suspicion that his old friend was \"nudged\" to reach out to him. It was late in the afternoon that day when his phone started buzzing with a familiar number. Seeing Ryan's name light up on the screen, Kyle decided to answer it.\n\n\"Ryan, how are you man?\"\n\n\"Well, if it isn't the king in the north himself. Finally back home after the longest time!\"\n\nKyle started to chuckle. That old personal joke went all the way back to high school, back when Game of Thrones was still running on television. Kyle's pale complexion and dark, black hair with just the right amount of curl at the tips made him resemble the actor who played Robb Stark. It was a joke that picked up in the locker room after a game and just stuck. \n\n\"Not so much king in the north with this marine haircut,\" said Kyle. \"Those curls are long since gone.\"\n\n\"And yet you'll always be the king to me. How've you been? I heard you just got back into town.\"\n\n\"I take it your mom told you about it? I heard my mom ran into yours.\"\n\nRyan laughed. \"Nothing gets by you.\"\n\n\"Not anymore at least. I'm not too bad, I guess. Just surviving,\" said Kyle quietly.\n\n\"Just surviving? That sounds terrible. When did you get back?\"\n\n\"It was only just this morning. I spent all yesterday flying so it still hasn't hit me yet.\"\n\n\"I can understand that. I bet it's good to be home though, right?\"\n\nKyle waited a moment before responding. Was it good to be home? \"In a way, it is. Although I have no idea what to do with myself now.\"\n\n\"What do you mean?\"\n\n\"I mean, I really should start looking for a job now. You know, join the workforce,\" said Kyle. \"It might be a little hard. I think I might scare people off if I list my main skill as killing people.\"\n\nSurprisingly, Ryan started to laugh. \"You should still do that. Or just bring it up during the interview. Might make for some funny reactions.\"\n\n\"I'm trying to get a job, not reactions,\" said Kyle with a chuckle.\n\n\"Still though! It might be funny.\" There was a moment of silence when Kyle didn't know how to respond. Ryan kept going though. \"So what was it like over there? I mean, what was it really like?\"\n\nIt took Kyle a minute to collect his thoughts. It was the question he always dreaded to hear and one he didn't know how to answer. There were a lot of people who treated him like he was now different for having been there. That he was some kind of war hero. That he should be thanked for his service. Kyle always found that a little ironic, especially given some of the missions. Much of what he had to do made him feel the opposite of a hero. Most of it he didn't want to talk about it again. A good portion he wasn't even allowed to talk about. He wished he could forget all of it, a five year long nightmare that he'd only just woken from.\n\n\"You still there, man?\" asked Ryan after a moment.\n\n\"Yeah, sorry. I was just thinking about it. That's all. It was a crazy time.\"\n\n\"I'm sure you have a lot of stories to tell. You've probably been all over.\"\n\nKyle took a deep breath. \"Yeah, it's been a ride. One that I'm glad it's over.\"\n\nRyan seemed to finally sense it was a road that Kyle didn't want to go down. Thankfully, he changed the subject right after. \"Well, listen, we have to catch up while we're both in town. I head back to State in a couple weeks so I won't be around for much longer.\"\n\n\"Back to State? I thought you would've graduated already?\"\n\nRyan chuckled. \"I did. This is for my masters. In business too. Just wanting to try to get all this knowledge so I can start my own business someday.\"\n\n\"Cool, when you do, you can hire me,\" said Kyle. \n\n\"It's a deal. But are you free to hang tomorrow? I'm not working my summer job tomorrow so I'll be around the house all day.\"\n\n\"Eh, tomorrow?\" Kyle pursed his lips. It was one thing to catch up over the phone, but another to go hang out during the day. Part of him wondered if he was up to it. If he would even be good company.\n\nThankfully, Ryan must have sensed it from him already, and he was determined to railroad it. \"Come on, man. I haven't seen you in years. Come on over and hang for a little bit.\"\n\n\"I don't know, Ry. I really should start looking for a job.\"\n\n\"So shoot out a few resumes in the morning and then come chill in the afternoon. I tell you what, I'll even make sure Annoying Amy stays away.\"\n\nKyle started laughing right away at a nickname he hadn't heard in years. Annoying Amy was Ryan's little sister. When they were in school, she always wanted to tag along no matter what they were doing. Football? Great, she wanted to be their cheerleader. Biking in the woods? No problem, she'd put her doll in the basket of her own bike. Swimming? Count her in, she wants to jump off the diving board nonstop.\n\nShe was always underfoot so much that she earned the nickname Annoying Amy. Of course, it wasn't said to her face. She was too sensitive, and the one time it slipped out of Ryan's mouth when they were young, she left in tears. Yet it was a secret code between them, a private joke over the way she never left them alone.\n\nAt one point, Ryan swore it was because she had a crush on Kyle. Yet, she was never on his radar. For one, she was four years younger than him and when you're in high school, four years might as well be four decades. And if anyone so personally defined awkward teenage years, it was Amy Butler. Glasses, braces, long, lanky arms that didn't match the rest of her, poor Amy wasn't on anyone's radar. It was probably for that reason that they let her tag along\u2014too ashamed to turn her down and hurt her feelings. \n\n\"I almost forgot all about Amy,\" said Kyle finally. \"How's she been?\"\n\n\"Oh, you know, as bratty as ever,\" said Ryan. \"She's already got a year of college under her belt though. Can you believe it?\"\n\n\"A year already? No, I can't. Time flies,\" said Kyle.\n\n\"It sure does. All the more reason for you to come over tomorrow. No more excuses man. Come hang out for a few hours and let's catch up. If not, I'll come over to your house and show you why some quarterbacks still flinch at hearing my name.\"\n\nKyle smirked at that one. \"You know, the Marines have been good for me too. I've put on some more muscle since you last saw me. You might be surprised when you see me.\"\n\n\"Good. That way, I won't feel so bad when I level you,\" bragged Ryan.\n\n\"Fine, I'll come over. I can tell you'll be a pain in the ass until I say yes anyway.\"\n\n\"You know I will. Okay, cool. Just text me when you're on your way over, okay?\"\n\n\"For sure. See you then, Ry,\" said Kyle.\n\nHe ended the call and tossed his phone back on his desk. So he was hanging out with Ryan tomorrow. It had been such a long time since he'd ever thought about his old friend, let alone looked at the prospect of hanging out with him. But maybe then again, some socialization would be good for him. Hopefully it could do a little more to bring him out of his funk. \n\nAt least, he hoped it could. \n\n*****\n\n\"There he is! The king in the north!\" Ryan opened the door with an excited yell and reached out to wrap a hand around Kyle's back.\n\nKyle just shook his head. \"Not with this hair. Although I think I might grow it out again.\" He ran his fingers through the prickly tips on his scalp. \n\n\"It might take some time until you get those curls back. Come on in. I'm glad you came over,\" said Ryan as he gestured him inside. \"I thought I'd have to go over there and drag your ass to the house.\"\n\nKyle followed his friend inside to the living room, taking a seat on one side of a large sectional couch that had seen better days. Ryan took the other, spreading out to get comfortable right away. In all the years since he'd last seen his friend, Ryan wasn't as big as he remembered. Perhaps it was because they were no longer playing football and actively working out like they used to, but he almost seemed narrower, smaller than before. They were now quite a match in size even if Ryan dominated him back in high school.\n\n\"I can't believe it's been five years!\" started Ryan while he slapped his leg. \"It feels like only yesterday we were crushing through that regional championship game against Ellsworth.\"\n\nKyle smiled at the memory. \"That was a good game, wasn't it? I remember you lighting up that quarterback so bad that we all thought he had a concussion.\"\n\n\"In my defense, he missed out on the cardinal rule\u2014don't stand on the tracks when the train is coming through!\"\n\nKyle chuckled to himself. Ryan hadn't changed much in the last few years. He was still the same cocky but fun guy, the type of friend that everyone has at least one of in their lives. It was a familiar feeling to be near him again, and a comforting one at that.",
        "\"Those were the good ol' days,\" said Kyle finally. \"Back when the only thing that mattered was making sure we didn't piss off coach.\"\n\n\"Or making sure our grades stayed above passing,\" added Ryan with a laugh. \"It's funny enough now when I go back to think about it. Can you believe I'm chasing my masters now?\"\n\n\"I'll admit, you stunned me a bit on that. The guy who could barely pass English now going for an advanced degree? You surprise me, Ry.\"\n\nRyan grinned and shrugged. \"I had to get my act together at some point, I suppose. I couldn't play football forever. It was actually my mom's idea to pursue business, and I figured maybe one day it'll help me open up a chain of football camps for kids. Something like that.\"\n\n\"That's a good combination, although I don't know if I'd send my kid to your football camp,\" joked Kyle.\n\nRyan grabbed a pillow and launched it at his friend. \"Who says I'd let you? My camp isn't for scrubs!\"\n\nThe two of them chuckled to themselves before Ryan hopped off the couch. \"You want a beer or anything? I have a case in the fridge.\"\n\nKyle put his hands up. \"No, that's okay. Still a bit too early for that. I'm not much for drinking these days anyway.\"\n\n\"Soda or something then?\"\n\n\"Sure, why not.\"\n\nRyan disappeared for a moment while Kyle looked around the house. So many memories in this old house. He remembered getting ready for prom here in this living room, waiting for the limo to pull up front. He also remembered Amy looking at his date with daggers in her eyes, that is, before her mother forced her to go back upstairs. That thought brought a smile to his lips. So much of his life had been spent in this house that it was almost like a second home to him.\n\n\"Incoming,\" said Ryan as he slipped back in the room and tossed a can of soda his way. Kyle caught it and popped the top, taking a drink of the cool beverage.\n\n\"So what else has been going on? You been seeing any girls around?\" asked Ryan as he sat back down in his spot.\n\n\"Nah, nobody lately,\" said Kyle quietly. \"I doubt I'd be good company anyway. Besides there's not a lot of girls who are eager to start a long distance relationship during my time overseas, so I was just waiting it out. What about you? Still with Cassidy?\"\n\n\"God no,\" said Ryan with a laugh. \"I haven't spoken to her since the summer before freshman year. Lost track of her too. I dated my way around college for the first few years. The last couple years I've been with the same girl though. She's a senior this year, and her name is Kayla. Great girl, all around and pretty too.\"\n\n\"Oh yeah? Getting serious then?\"\n\nRyan shrugged. \"I'm not sure. Hell, I'm only twenty-three. A bit too soon to be thinking marriage at any point. But I want to hang onto her. I like the kind of person she is. She's got a single cousin by the way. She's awfully cute too. Maybe I should get her number for you?\" \n\nKyle nodded silently while he listened. Despite thinking that a girlfriend would be a bad idea during the past five years, it didn't mean he wasn't lonely. Hell, he would have killed to have someone there to talk to at the very least, someone who could let him unload his feelings or help remind him that another world existed back home. It just felt unfair to keep a relationship while he was thousands of miles away, and he couldn't imagine asking that of someone. It would be hard enough that he put his life on the line every day, but asking someone else to stick with him during that time of separation didn't seem quite right.\n\n\"You still okay over there? You got really quiet on me again,\" said Ryan, waving his hand in front of him.\n\n\"Sorry, Ry, just thinking. Any more, it seems I'm in my head a lot these days.\"\n\n\"I noticed,\" said Ryan quietly. \"Anything you want to talk about? You don't seem like your normal talkative self very much lately.\"\n\nSo many things, thought Kyle. But how to say them? And how can I do it without getting choked up?\n\n\"Nah, it's not something I want to dwell on,\" muttered Kyle. \n\n\"Well, you know you can tell me if you want to talk about it. I can't imagine what happened over there but I'll be here to listen if you need to get something off your chest.\"\n\nKyle closed his eyes briefly at the words. He appreciated the gesture, he really did but it was hard to explain what it was like to someone who hadn't been there. Someone who didn't know the feeling in your stomach before going into a fight. Someone who had to bury a friend because they weren't able to save them.\n\nKyle hated those thoughts, especially when they crept into his brain when he least expected them. They were hard to recover from, and the majority of the time, it soured his mood for the next few hours. Meanwhile, the memories were making his body respond. He found his hand fidgeting, and he could feel his heart beating in his chest. He needed a moment to himself.\n\n\"Do you think I could use your bathroom?\" asked Kyle to a confused-looking Ryan.\n\n\"Oh yeah, totally. Just go to the one upstairs,\" said Ryan as he pointed over to the staircase. \"The one on this floor has been backing up so it's just safer this way.\"\n\n\"Cool, I'll be right back,\" Kyle practically hopped off the couch and took the stairs quickly. He knew Ryan was probably watching him the entire time, and that he probably looked a little strange acting the way he did, but sometimes just having a moment to himself was the best solution. Time to collect his thoughts. At least, that explanation didn't make him feel so bad.\n\nHe went down the long hallway that contained all the bedrooms of the Butler house, with the main bathroom only on the very opposite end. It was a layout he knew well from all his time there in the past, only taking a moment to look into Ryan's room along the way. It was clean and tidy for the most part with no clothing on the ground nor papers scattered on his desk. It was a lot cleaner from how he remembered it back in school, another indicator that Ryan seemed to have grown up while he was away.\n\nPassing Ryan's parents' room next, Kyle barely gave it notice until he came to the last room before reaching the relief of the bathroom. The last room was of course Annoying Amy's room. And despite the door being cracked slightly, he could hear a voice inside. Was Amy home? \n\nKyle wasn't sure why but he stopped making as much noise on the way to the bathroom and trekked silently to her door, stopping just outside. He could now hear the basics of a one-sided conversation and a sweet-sounding, feminine voice on the other side, guessing that Amy was talking to someone over the phone. And the conversation sounded interesting to say the least.\n\n\"Yeah, but you know how I feel about that,\" came Amy's voice just on the other side of the door. It was similar to how he remembered it, but it was smoother if that was possible. More sweet-sounding than when she was younger. While Kyle couldn't see her, the sound of her voice carried clearly through the short gap between the frame. \"I don't want it to just be some guy.\"\n\nSome guy? What's she talking about? Kyle stepped closer to the door, waiting for whoever she was on the phone with to stop speaking.\n\n\"Well, that might have worked for you, but I don't want to do that. It should be special,\" said Amy, much to the annoyance of her friend on the phone. He heard her voice raise to a higher octave the next time she spoke.\n\n\"That's not fair at all, Brittany. Just because I haven't done it yet doesn't make me any less experienced. I just don't think the first time should be with just anyone.\"\n\nJust based on the snippets of conversation he could make out, Kyle could only guess what she was talking about. And his guess didn't leave much to the imagination. If money were on the line, and he only had one answer to give, he would have guessed she was talking about sex. And just like that, for the first time in his life, he thought of Ryan's little sister and sex in the same thought. It was a discomforting feeling, especially the way he remembered her. It wasn't saying that she couldn't have grown up in the five years he'd been gone, but he'd have a hard time seeing her as anything but the slightly awkward teenager she was when he left.\n\n\"Fine then, whatever. I'll . . . work on it, I guess,\" said Amy finally, her tone more reserved and defeated than before. \"I said I'll work on it, all right?\"\n\nKyle felt himself getting angrier the longer she spoke. Despite not being close to her, whichever \"friend\" of hers that was on the other line seemed to be pressuring her to do something she wasn't ready for. And this was still Amy he was talking about. Even considering how she pestered them growing up, he couldn't say that he didn't have a fond spot for her deep inside. She had just wanted to be accepted by them, and it really rubbed him the wrong way to see someone pressuring her in this manner.\n\nHe leaned closer still but it sounded like they changed subjects at that moment because Amy went off on another line of conversation regarding school. The moment seemed to have passed, and Kyle took a step away from the door on his way to the bathroom, except that he forgot one little thing about the Butler house.\n\nThe floor just outside Amy's door squeaked whenever someone walked by. Worse still, when you went slowly, it really creaked loudly. Enough to catch someone's attention. \n\n\"Ryan, is that you?\" came Amy's voice as Kyle heard shuffling behind the door. He felt frozen in his tracks, certainly feeling guilty about having eavesdropped on her conversation, but also knowing there was no easy way to explain his presence, especially when he hadn't seen her in years. Did she even know he was coming over today? He watched as the door swung open and found himself looking into a familiar pair of honey-brown eyes. \n\nExcept the rest of her wasn't the same way he remembered. Long gone was the awkward teenage girl with braces, glasses, and arms just a smidge too long for her body. What greeted him was the sight of pure femininity, a beauty that made his heart race with a long pent-up desire. Gone were the blonde ponytails and bangs that covered half of her face. Her blonde hair was long, almost to the middle of her back and lustrous in quality, falling in cascading waves past her shoulders. The glasses were nowhere in sight, no doubt replaced by contacts, and it let her brown eyes shine with more luminosity than before.\n\nThe braces were gone, having done their purpose by giving her the perfectly formed, pearly white teeth that smiled upon sight of him. She was taller than he remembered, having gained several inches from her very tiny girlish self and seemingly having grown into her arms, which now only tickled her thighs in length.\n\nThe thing that hit him the most was that Amy now had a body\u2014a woman's body. He wasn't sure when she developed boobs, but she did that exceptionally well, two perfect handfuls teasing him from behind her tank top. Following his gaze down, it landed on her perfectly taut tummy before flaring out into a wide pair of childbearing hips. The girl had turned into a woman.\n\nAnnoying Amy had become Amazingly Sexy Amy and the thought left Kyle too tongue-tied to form a proper sentence. \n\nAlways her best feature, her honey-brown eyes locked on him, both surprisal and excitement evident deep within them and soon joined by a big smile on her face. She looked ready to tackle him with all of her joy, something that he wouldn't have minded in the slightest. Maybe he should have paid closer attention to her when she still had that crush on him?\n\n\"Kyle? Kyle Patterson, what are you doing here?\" said Amy with an excited smile. Before he could answer, she put the phone back to her ear. \"Britt, I'll call you right back.\"\n\nHe could barely mutter a coherent response. Not that it mattered as Amy rushed in to hug him almost instantly as soon as the call had ended. His nose nuzzled against her blonde hair, inhaling its sweet scent. The smell of coconut. His arms encircled her and pulled her close, feeling the pleasant softness of her skin under his fingertips. \n\n\"It's so good to see you again,\" whispered Amy against him before she pulled away. \n\n\"It's been such a long time,\" he said finally. \"I'm sorry, I didn't mean to scare you or anything. I was just on my way to the bathroom.\"\n\n\"Oh,\" said Amy with a dismissive wave. \"No worries. I was wondering if I'd get to see you. Ryan couldn't shut up about it earlier,\" she said with a giggle.\n\nKyle smiled. \"Yeah, he's really been on me to come over.\"\n\nHe watched as her eyes traveled over his body, taking in every part of him. It made him feel warm inside as she silently evaluated him. When her eyes met his next, he detected something underneath. Desire? There was a burning there that hadn't been present before, and he quite liked the way it made him feel.\n\n\"You've certainly changed,\" said Amy while gesturing to his chest. \"You're fuller now. Bigger. More developed.\" She turned away from him as her cheeks went red. He guessed the words sounded a lot more forward in speech than in her head.\n\n\"I could say the same thing about you,\" said Kyle. \"When I left, you were still just a girl. But you've turned into a woman.\" It was the understatement of the year. With Amy's honey-brown eyes and soft curves, she could put models to shame. \n\nShe tucked a stray strand of hair behind her ear. \"Thank you. I guess we've both grown up in a way. It's been so long after all.\"\n\n\"So very long,\" he agreed. \"How have you been? Ryan said you already have a year of college under your belt?\"\n\nAmy nodded excitedly. \"Yeah, and I'm about to head back in a couple weeks. I was just talking with one of my friends from school on the phone about going back.\" She looked away awkwardly after that, as if remembering the true nature of that conversation.\n\n\"That's got to be really exciting. Which college are you going to?\"\n\nWhen she gave the name of a little college on the other side of the state, Kyle's jaw nearly dropped. \"That's like six hours away. I don't know how your family copes with you being gone for that long.\"\n\nAmy giggled. \"They cope as best they can. Mom and dad had a hard time with it at the beginning, but I think they've accepted it now. Of course, Ryan wanted me to go further away.\" She rolled her eyes. \n\n\"That sounds like your brother. Always trying to get away from you, and you were always trying to stay attached,\" said Kyle with a small chuckle.\n\n\"Always trying to stay attached to you both,\" corrected Amy. \"You were there almost as much as he was.\"\n\n\"You're right. I was thinking about that earlier. Looking back on it, I wished we would've just let you tag along. You just wanted to hang with us.\"\n\n\"Yep, I did,\" said Amy with a haughty look. \"And you never wanted to hang out with your best friend's little sister,\" she teased.\n\nShe was being playful, and he was enjoying every minute of it. It hit him like a thunderclap to see the woman she'd become, but to also still see snippets of the same playful Amy underneath all of it made the moment that much sweeter. \n\n\"If I could go back and do it over again, I'd have let you come with us all you wanted,\" said Kyle quietly.\n\nAmy smiled while her gaze flickered from his eyes to his chest. For the first time in a long while, he felt something every time he looked in her eyes. Something in his chest. Something that felt deep, maybe even profound. It was like a tension between them\u2014a longing that was there stirring just below the surface. It made his heart race, and judging by her fidgety reactions, she was feeling it too.\n\n\"So how long are you in town for?\" asked Amy finally. \"Are you back for good?\"\n\nHe nodded. \"For now at least. Until I get a job, but I don't have any other plans on the horizon.\"\n\n\"Well, that's a relief. I don't leave for another two weeks so I hope you have a lot more plans of hanging around here until then,\" she said while giving him her prettiest smile.\n\n\"How could I possibly turn that request down? I have a feeling if you smiled at me, you could make me do just about anything.\"\n\nAmy started to laugh and swatted at his chest. \"Don't tease me like that. You're being mean!\"\n\nKyle arched an eyebrow. \"How do you figure that?\"\n\n\"Like my smile could get you to do anything,\" she said while she turned her attention to one of her nails.\n\n\"Uh, Amy, have you looked in the mirror lately? Does your dad have to beat the guys away from you every night when you get home?\"\n\n\"No, he doesn't,\" said Amy dismissively, but he could tell a tiny part of her was really enjoying where this conversation was going. Even though Amy had turned into the swan, her brain was still stuck on duckling. It was a deadly combination for any man, and he found himself instantly swooned by it.\n\n\"So what are you and my brother talking about? Are you reliving the old football days?\" she asked after another moment.\n\n\"Somewhat. When we can. We still have a lot to go over but catching up on old memories,\" said Kyle before he started to chuckle. \"We talked about our prom when we got ready here. Do you remember that?\"\n\nAmy started to giggle immediately. \"You mean when I got pushed away by mom for bugging you both, even though I just wanted to see how you looked in your tux?\"\n\nKyle laughed harder. \"It was so cute, you kept trying to take a picture of all of us with your little camera.\"\n\n\"No, really just you,\" said Amy, while turning red. \"Not that girlfriend of yours at the time though. Which, I hope she's out of the picture. She was totally not for you.\"\n\n\"Long gone, I promise you that. Really no one is in the picture right now. Just me.\"\n\n\"Just you?\" she asked with a sense of curiosity. \"That's a little sad. Why aren't you with anyone?\" \n\n\"I just . . . haven't had the time. Plus I just got back. I'm still trying to figure out what's going on with me at this point,\" he said quietly.\n\n\"Well, maybe you'll find someone worth asking out now that you have some free time on your hands,\" she said mysteriously. He could tell by her tone and the way her eyes searched out his that there was a lot more to the meaning beyond her initial words.\n\n\"Hopefully. I mean, that would be really nice,\" he said.\n\n\"Yeah, I think so too,\" said Amy with a slight giggle.\n\nThey stared at each other for a moment, just riding the silent tension between them when another voice broke them out of their fog.\n\n\"Yo, Kyle, did you fall in or something? What's taking so long in the bathroom?\" yelled Ryan from the first floor.\n\nAmy rolled her eyes. \"As you can see, he hasn't changed much.\"\n\n\"Only in some ways,\" said Kyle with a laugh. \"Be right back down,\" he yelled down to Ryan. \"I should probably hurry up and get back to him before he bursts a blood vessel.\"\n\n\"As if that would be a bad thing,\" said Amy with a giggle. She then grabbed some of her hair and pulled it around her shoulder while her expression turned more serious. \"So if you're going to be in town, do you think maybe I could get your number? You know, if you don't mind. I'd like to catch up with you too. As long as that's okay?\"\n\n\"Yeah, of course,\" said Kyle quickly. \"I'd really like that too. We have a lot to catch up on.\"\n\nAmy beamed a thousand watt smile. \"Perfect, let me grab my phone.\"\n\nShe grabbed her phone in a rush, and her smile never dropped as she programmed his number into her phone. \"Okay, I sent you a text just so you have mine too.\"\n\nKyle felt his phone vibrate in his pocket. \"Just got it. Cool, well, hopefully we'll talk soon then?\"\n\n\"Yeah, I hope so too,\" said Amy shyly. She then pressed in for another hug. The smell of sweet coconut hit his nose again, and Kyle found himself longing to smell it as long as he could. In his mind, it became her scent. Amy's scent.\n\n\"See you soon then,\" she whispered in his ear. Before he knew it, she slipped out of his arms and went back into her room. One last smile was on her lips before she closed the door. ",
        "Kyle tried to snap back to reality, but he found a similar smile on his lips as he went into the bathroom. The funny thing about all of it was that he'd been more excited to see Amy than he was to see her brother. What had been a rock of his earlier life had been flipped over on its head. It was nothing against Ryan, and he would always be one of his closest friends, but now there was a new contender for his time. Somehow, Amy had slipped into his thoughts and showed no signs of vacating them anytime soon. \n\nNot that he cared in the slightest. What had once seemed like a chore to entertain Annoying Amy now seemed like the most fun he could have with another person. Part of him wondered if they'd really get a chance to hang out like she'd requested. He hoped it was more than just words on her part, and that the sentiment ran deep. He'd meant every word, but the only question was\u2014did she?\n\n\"Finally, man, that took forever,\" said Ryan as Kyle hit the last step. \"Did you drop a deuce in there or something?\"\n\nKyle tried hard to look normal and quickly looked for an excuse. He knew the real reason for his delay was unlikely to fly with Ryan for very long, and he desperately searched for any excuse that wouldn't set his friend off on him for flirting with his little sister. Unfortunately, his silence seemed to confirm Ryan's suspicions.\n\n\"Gross, man, you did.\" He fanned his face like they did when they were back in high school.\n\n\"Yeah, don't go in there after me,\" said Kyle, deciding to run with that excuse. He couldn't help but smile. Not at the joke but rather at the thought of spending more time with Amy. Just the mention of it seemed to have perked him right up, something that Ryan picked up on right away.\n\n\"At least that deuce seemed to be just what you needed. You don't look so crabby anymore,\" joked his friend before grabbing a handful of snacks. Kyle noticed while he was away, Ryan must have brought in the bag of pretzels. \n\n\"By the way, did you see Amy while you were up there? I bet she'd be so psyched to see you too,\" asked Ryan as he started munching.\n\nKyle opened his mouth to respond but then shut it right away. He needed to be careful with that answer. \"You know, her door was mostly shut, but I did see her and waved briefly. She was on the phone.\"\n\n\"I'm expecting her to turn into Annoying Amy any second then,\" said Ryan with a quick roll of the eyes. \"Thankfully, at least we're legal now, and we can drink. That's one place we can go if she decides to tag along all the time.\"\n\n\"It can't be that bad. She seems different now,\" said Kyle. \"More grown up.\"\n\nRyan shrugged. \"She'll still always be my bratty sister to me. Maybe when we're forty that'll change. Until then, no way.\"\n\nUpon hearing that answer, Kyle decided to go fishing for information. \"Well, maybe she won't. Maybe she'll be spending time with her boyfriend or something so she won't have time to spend with us.\"\n\nRyan nearly doubled over laughing. \"Boyfriend? I don't think she's ever had a date. At least not when she's home. If you ask me, she's probably still got that crush on you.\"\n\n\"Nah, that was a long time ago,\" said Kyle as he felt the joy in his chest. \"I'm sure she's over that now.\"\n\nRyan didn't seem to register that and kept going on with the same line of thinking. \"Besides it's for the best. I don't want any dudes here sniffing around my little sister. I'd be liable to crack some skulls. She may be annoying, but she's at least family.\"\n\n\"I'm sure it wouldn't be that bad. Especially if some guy just wanted to treat her right,\" said Kyle, not liking where the conversation was leading.\n\nRyan shook his head. \"Treat her right? What nineteen year old dude do you know that's not all about trying to fuck anything that moves? I was that way, and I'm sure you were that way too. No, she can date when she's out of college. Otherwise, I'll be digging out my old game tapes for any guy that tries to get too frisky with Amy.\"\n\nThat last sentence caused Kyle to look over his friend, quickly appraising his chances in a fight against him. That very thought almost caused him to laugh out loud. Not even an hour ago, he barely registered that Amy still existed. Now he was conjuring up thoughts of fighting her brother for the right to date her. What's wrong with me right now?\n\nEspecially when he thought about the way they used to treat her. It didn't seem like she held any grudges, but he was definitely prone to teasing right alongside Ryan. Some of those memories still stuck with him and brought his mood down a notch. It was something he'd want to address with her should they get to hang out like she mentioned.\n\nThe two of them talked for another couple of hours before running out of things to talk about. It was a good time spent catching up, and the second half of it went much smoother than the first half. Even as he was leaving and saying bye to Ryan, Kyle still thought the highlight of the day was the less than five minutes he spent outside Amy's door. And with Ryan still wanting to hang out in the coming days, he was likely to see her again. \n\nHe just hoped it wouldn't be too long until those honey-brown eyes were on his once more.\n\n*****\n\n\"What the hell, bitch? Why'd you just hang up on me?\"\n\nAmy flinched as soon as Brittany answered the phone. She did have a right to be mad at how quickly she ended the call, but it still rankled her every time she called her bitch. She had no idea why that was so popular right now, but it persisted nonetheless.\n\n\"Sorry, I just saw someone I hadn't seen in a long time,\" explained Amy. \"I wanted to make sure I said hi to him.\"\n\nBrittany caught her breath. \"Oh, a him, is it? Details, spill it!\"\n\nAmy started to giggle. \"No, it's just my brother's best friend. Well, old best friend. I haven't seen him in years so it was just a surprise when he showed up.\"\n\n\"Wait a second,\" interrupted Brittany. \"Didn't you mention something before about a crush on your brother's best friend? I remember you saying something about that at one point. Same guy?\"\n\nAmy could feel her face turning red. \"Y-yeah that's the one. Same guy.\"\n\nBrittany continued her interrogation. \"And he's back now? For good?\"\n\n\"Well, for the time being, I guess. I'm not sure how long\u2014\"\n\n\"This is perfect,\" said Brittany, cutting her off. \"Your old crush just so happens to walk back into your life after all this time. Did he still look as hunky as you remembered?\"\n\n\"Even more so than I remembered,\" admitted Amy. \n\n\"That's perfect! He could be the perfect guy to lose that pesky virginity of yours with.\"\n\n\"Britt! I don't want to talk about that anymore! Besides, like he'd give me a second look anyway. He probably only remembers all that stuff I did as a kid. I doubt he'd see me like that.\"\n\n\"Face it, Ames, you're hot. And if he saw you, I'd bet he's thinking about you. Give yourself some more credit.\"\n\nAmy didn't say anything, not sure how to respond to that. It wasn't the first time she'd heard such a sentiment from Brittany, but she had a hard time believing it. Girls that were actually hot didn't struggle to get dates. \n\n\"I still don't know,\" said Amy quietly. \n\n\"You're so lucky you have me as your friend, Ames,\" said Brittany in a condescending tone. \"You have the kind of look guys would kill each other for, but you don't know how to use it. I'm sure it would be nothing to get this guy wrapped around your finger. Then one night, you slip into his bed, do the deed and bam! You're not a virgin anymore.\"\n\nAmy pursed her lips. \"You make it sound too easy.\"\n\n\"That's because it is easy. Why you don't see that, I have no idea, but here's the thing, Ames. You will lose your virginity before we go back to school. There's no way we're going to be able to pledge to Kappa if they know you're a virgin.\"\n\n\"Okay, fine, then they won't accept me, but at least they'll let you in. You're far from being a virgin,\" said Amy, feeling upset at the change in her friend's tone.\n\n\"No way, especially not if they associate me with you. I'll be tarred with the same brush! No, you have to do this if we stand a chance. It's the hottest sorority at school, and they have the best parties. Besides, it's worth doing this just to make your new best friend happy, right?\"\n\nAmy didn't answer that directly. The truth was, girls like Brittany never would have associated with Amy back in high school. Brittany was the type that guys drooled over endlessly. A cheerleader nearly her entire life, Brittany had a tight body and pouty lips, a deadly combination that meant there were always boys going in and out of her dorm room. She was the type of girl that would have made fun of Amy back in school, usually calling her all sorts of names or making fun of her glasses.\n\nBut the last couple years, she'd really come out of her shell. She ditched the glasses, lost the braces and found a lot of her baby fat melting off. She still had a hard time recognizing the new version of herself in the mirror, but it brought along a new set of problems to the ones it solved. Mostly, she had to learn how to handle new \"friends\" like Brittany, where relationships seemed more transactional rather than based in shared interests.\n\nThankfully, Brittany didn't expect a true answer to that question and continued right along. \"Can you imagine what will happen when we're both Kappas? There's going to be so many guys hitting on us that we are going to have our pick. No reason to settle down either. We can just have our fun and live it up with the best of them. I tell you, Ames, it's going to be the best part of school. But first, we have to get in. So you need to get a move on this, okay?\"\n\n\"Okay, okay,\" said Amy quietly. \"I'll see what I can do.\"\n\n\"See, that wasn't so hard, right? Oh, I got to go, Derek is here. Love you, bitch!\"\n\n\"Bye,\" said Amy before setting her phone down too hard on the table beside her. Weren't conversations with your friends supposed to make you feel better about yourself, not worse? Brittany seemed to think the simple fact that she hadn't had sex yet made her completely radioactive, especially as far as their social life was concerned. There were several times that Amy wanted to just tell her off or force her to hang out with someone new, but the words always caught in her throat. It wasn't that long ago that girls like Brittany wouldn't be caught dead with her. In a small way, it felt nice to be part of the popular crowd for once.\n\nWhich brought her back to her current predicament. It's not that she didn't want to lose her virginity. The status of virgin in college was almost like that of a pariah. Nor did she ever want her own personal life to affect the lives of others, even as silly as she found that notion. But sex was supposed to mean something, at least that's what she was always raised to believe. You just didn't go around having sex with just anyone. It was meant to be special.\n\nAnd there were few men as special as Kyle Patterson. Her heart fluttered at the very mention of his name. Seeing him in the flesh just a little bit ago, very much alive with those scorching blue eyes and chiseled jaw was nearly enough to make her squirm. He was fuller than she remembered, his long, athletic body having filled out due to his time in the marines. He looked solid, with a chest that she just ached to rake her fingers along. If there was ever such a man that she wanted to lose it with, it was Kyle.\n\nMaybe there was a way she could have her cake and eat it too. With Kyle being back in town, there was a whole host of possibilities that it opened up. Especially now that she had his number. But how to approach that conversation? Hey Kyle, do you mind if we hook up together so I can pledge a sorority in a few weeks? Thanks so much! No, she'd have to be a bit more creative with how she brought this up. Especially knowing Kyle as long as she did, there was no saying he'd even be interested.\n\nWell, that wasn't entirely true. She did see the look he gave her outside her door. The spark of desire in his bright-blue eyes when he saw her for the first time after all these years. It was the best feeling she'd had in weeks. That of all people, Kyle Patterson found her desirable was like getting hot chocolate and wearing her favorite sweater next to a roaring fire\u2014comfort and heat at the same time. \n\nPerhaps there was a way to do this after all? But first, she'd have to talk with him. And that made her heart flutter once more.\n\n*****\n\n\"And the Pirates have a runner on third, and look who's coming to the plate now. If I were that pitcher, I'd start sweating.\"\n\nKyle's attention turned back to the game on the television that evening, long after finding his own mind wandering like it often did. It was a warm, early evening, and like many times in the past, he spent the night watching a ballgame with his father, who was seated not far away on the family recliner. Despite his father being a huge Pirates fan (and used to being disappointed), Kyle only watched the games with minimal interest. It was a good way to spend time, but he often found his attention waning after enough time. \n\nAnd after today's events, he'd found a suitable subject to think about. Try as hard as he could, he still couldn't get the image of Amy Butler out of his head. With her golden blonde hair and honey-brown eyes, he'd thought of little else since their encounter this afternoon. Especially the interesting conversation he overheard before she'd noticed him. The part that sounded awfully suspicious when it became obvious she was trying to lose something. Something that sounded like her virginity. Was Amy still a virgin? He couldn't imagine that she had much experience in the guy department, and his opinion was similar to that of Ryan's. \n\nIn all honesty, the thought excited him. If the sweet and now sexy Amy was looking for a willing partner, he'd quickly volunteer himself. The only question would be how to do it without Ryan finding out? The last thing he'd want to do was willingly insert drama into a longstanding friendship with Ryan by hooking up with his own sister. That was the last thing you did to someone who was one of your oldest friends. Hell, he half wanted to kick his own ass for even having the thought. \n\nAs he watched the Pirates blow yet another lead, he felt his phone vibrating in his pocket. Kyle grabbed it, smiling right away when he saw the only name he wanted to see light up the screen.\n\nAmy: Heyyy! It was so good to see you today. I'm really happy you're home.\n\nShe ended it with a smiley face, the very same expression that now filled his own. It answered a question for him\u2014whether she would actually reach out or whether it was just an empty promise. Yet as his fingers texted back a response, a world of opportunity now opened up to him.\n\nKyle: Me too. Really great to see you. It was just like old times again.\n\nIt wasn't much more than a minute or two later when she got back to him.\n\nAmy: Hopefully not exactly like old times! Some things have changed after all.\n\nKyle: Yeah, they definitely have. You've grown up for one. I'm trying not to think about you as just my friend's little sister anymore.\n\nAmy: Well, what are you thinking of me as now?\n\nKyle smiled when he read that yet he knew if he gave her the honest answer, there was a chance she'd stop responding, or worse, tell her brother. He had to play this one cool so he thought about his next response for a moment before hitting send.\n\nKyle: I'm not sure you really want the real answer to that one.\n\nAmy: Maybe I do. Maybe you should tell me.\n\nKyle: I'll think about it.\n\nAmy: Haha, you're just messing with me, aren't you? \n\nKyle: No, definitely not. I'm 100% serious. In a way, seeing you today was kind of a highlight of my day.\n\nAmy took a moment longer to write back than she did before. He was worried he'd been a little too forward and he might have scared her off. He found himself racing to read her response once she did write him back.\n\nAmy: Aww, do you really mean that? I haven't stopped smiling since I saw you today.\n\nKyle's heart started to race and his smile grew wider, if that was even possible.\n\n\"Who are you talking to? Someone making you really happy over there?\" asked his father, giving him a suspicious eyebrow raise. \n\n\"Just an old friend,\" said Kyle cryptically. \"Catching up a little bit, that's all.\"\n\n\"Well, glad to see you're reconnecting with your old friends,\" said his father before returning his attention back to the game. \n\n\"Me too,\" answered Kyle as he turned his attention back to his phone. He could see that Amy was already typing something new and he waited for her next response.\n\nAmy: I hope this isn't weird but do you feel like talking? I was thinking I might call you if you have time to talk?\n\nKyle: Not weird at all. Give me a couple minutes and then call me?\n\nAmy: Okay, perfect!\n\nKyle got up from the couch and headed toward the back deck. As excited as he was about having a conversation with Amy, he didn't want to do it in front of his father in the living room or his mother still hanging out in the kitchen. This was something he wanted some privacy for. And as he stretched out on the back deck on the warm, summer night, he felt his heart rate spike when he saw that Amy was calling him.\n\n\"Hey Kyle,\" she said somewhat awkwardly at first. \"Sorry, I just didn't feel like texting anymore.\"\n\n\"No problem here,\" he said with a chuckle. \"I'm not much for texting either.\"\n\n\"I figured why continue that when we could just talk,\" said Amy before her voice dipped lower. \"I like talking with you.\"\n\n\"I'm glad you do. I liked talking with you too today,\" answered Kyle in a matching quiet tone.\n\nHe listened to the sound of her breathing on the other end of the line. This was new ground for them. Of all the thousands of times he'd interacted with Amy before today, it had always been more cursory, with much less expectations. Friendly but brief. Yet there was now an underlying tenseness between them. Something that excited and scared him at the same time. And judging by Amy's breathlessness, she was feeling the same way.\n\n\"You don't have to worry you know,\" said Amy making his heart stop for a brief moment. \"Ryan's not even home, and I'm locked up in my room. He'll never know that we're talking like this.\"\n\n\"That's a relief. It would be hard to explain why I'm talking to his sister,\" said Kyle with a chuckle. \n\nAmy giggled. \"Yeah, I didn't want to put you in a bad spot. Not that I don't think you couldn't teach him a lesson if you tried.\"\n\n\"You think so, huh? I remember a time in high school when he still had a lot of size on me.\"\n\n\"Oh, how times have changed. You're a lot bigger now,\" said Amy. \"Lots of muscles and a thick chest.\" Her voice assumed a more dreamlike quality to it, and Kyle realized she'd really been checking him out that afternoon.\n\n\"You were looking then? And you . . . liked what you saw?\"\n\n\"Mm-hmm,\" murmured Amy. \"I mean, don't get me wrong. You were always in good shape. But now you're even better. You're going to have to beat the girls off with a stick now that you're back home.\"\n\nKyle started to laugh. \"That's kind of the least of my worries right now.\"\n\nAmy's tone changed. \"What do you mean by that?\" she asked fearfully.\n\n\"I mean, I don't really have eyes for anyone else. I mean anyone,\" he corrected, the slip coming out too quickly for him to reel it back in.\n\nAmy caught it almost immediately. \"So you have eyes for someone then?\"\n\nHe opened his mouth to respond but the words caught in his throat. What the hell. Go for it. \"Yeah, I kind of do. Someone that surprised me. This girl that I hadn't seen in a long time.\"\n\nAmy started to giggle. \"She sounds like a winner to me. Maybe you should make a move on her.\" ",
        "Kyle laughed. He could tell by her words that she was wearing a big smile. \"Maybe I will. You know, assuming she likes me back.\"\n\n\"I bet she does,\" she interrupted. \"I bet she's been thinking the same thing as you.\"\n\n\"Really?\" teased Kyle. \"And just how would you know?\"\n\n\"Call it womanly intuition? We just know this kind of thing, Kyle,\" said Amy with a laugh.\n\n\"Well, I'm glad I have you around to tell me these kinds of things.\"\n\n\"Me too. Someone had to enlighten you on it. It might as well be me,\" joked Amy.\n\n\"You've become a lot of fun lately. We really should have let you spend more time with us growing up.\"\n\n\"Uh huh,\" said Amy. \"But nooo, you were too busy trying to get away from Annoying Amy.\"\n\n\"You still remember that, huh?\" asked Kyle, the smile dropping from his face.\n\nShe giggled. \"Chill, Kyle, I'm just messing with you. Yes, it sucked not getting to spend as much time as I wanted with you but I get it. I just hope things are different now, right?\"\n\n\"Very different,\" he agreed. \"And for the record, I'm sorry about that. If I could go back and do it over again, I'd have let you tag along.\"\n\n\"So we can finally let that old nickname die?\" she teased.\n\n\"Yes, it's dead and buried at this point.\"\n\n\"And please don't give me any new nicknames,\" Amy said with a laugh.\n\nKyle didn't respond right away, his mind still remembering the thought of Amazingly Sexy Amy, but he kept that one quiet. She wasn't quite ready to hear that one just yet.\n\n\"So what are you doing right now? I didn't interrupt you from anything, did I?\" asked Amy after a moment.\n\n\"No, not at all. I was just watching the ballgame with my dad, but I wasn't really paying attention. I moved to the back deck to talk with you. It's a nice night to be out here.\"\n\n\"Maybe I should do the same thing, especially if it's so nice out,\" she said. \"My room can get old at times.\"\n\n\"Or lonely possibly,\" he added.\n\n\"Well, that's what I have you for, right? I don't feel lonely when I'm talking with you.\"\n\nKyle smiled. \"Same here actually. I still haven't felt right since I've been home. But it's been best during the moments I'm with you.\"\n\nHe heard her breath catch over the phone. \"Really? I'm so happy to hear that. I mean, that you feel better when you're with me, not that you haven't felt right,\" she said with an awkward giggle. \"Crap, I'm putting my foot in my mouth, aren't I?\"\n\n\"No, no, you're fine,\" he said with a laugh. \"Trust me, you make it a lot better.\"\n\n\"Good. I really like that,\" she said quietly. \"I imagine it's been tough on you these last few years. I don't even want to think about what you've seen.\"\n\nHe found himself at a loss for words. How could he even describe some of the things he'd seen to someone as innocent as Amy. \"Yeah, it's been . . . rough. It was never easy. And I found myself praying to come home often.\"\n\n\"Do you want to talk about it at all? I'm here for you in case you ever just needed to talk. Or get things off your chest. I can't say I know what you're going through, but I'll always listen.\"\n\n\"I really appreciate it, Amy. I do. It's still hard for me to talk about it. It seems like everyone's been trying to get me to talk since I got home.\"\n\n\"Oh, I'm sorry then. I didn't mean to add on to that,\" she said quickly.\n\n\"No, no, I don't mind,\" he interrupted. \"I mean, it's just really hard for me. But I do feel like I could talk to you. It might be hard for me to get started, and I might need some time still.\"\n\n\"Whenever you're ready,\" she said. \"But I am here for you.\"\n\nHis lips started to turn up into a smile. \"I never thought we'd be having this type of conversation.\"\n\nAmy started to giggle. \"It's so wild, right? I wasn't sure when I'd ever see you again and now you're here. I'm going to take advantage of this as much as possible. All the time that I can. I hope you don't mind.\"\n\n\"Not at all. I'd really like that. But I want to talk about you too. I want to hear about your life. For example, tell me more about your first year at college? I really want to hear about that.\"\n\nAmy took a deep breath. \"It wasn't too bad.\"\n\n\"That hardly sounds like a ringing endorsement,\" he teased.\n\nAmy giggled. \"I don't know. It's just school, you know? Lots of hard classes. My grades struggled a little my first semester but recovered during the second. It's a lot different from high school.\"\n\n\"Have you made friends there? I'm sure you've got a small circle of people you can talk to, right?\"\n\nAmy's tone changed quickly. \"I mean, sort of? I have a few friends, but it can be tough in a completely new environment. I feel like I struggle with that sometimes.\"\n\n\"What do you mean?\"\n\nShe took a moment to respond. \"I just feel like the friends I have in college are different than the ones I had in high school. Does that make sense?\"\n\n\"Sure it does. Like different interests?\"\n\n\"Yeah. And just different people overall,\" she said. \"I get doubts about it sometimes. That I don't fit in or maybe that I'm just not cool enough to hang out with them. I guess that can be the hardest part. Not knowing if they're genuine friendships or just really superficial.\"\n\n\"That has to be tough on you,\" said Kyle. \"You shouldn't have to worry whether your friends are really going to be your friends.\"\n\n\"I guess I'm still just navigating through it,\" she said quietly. \"Maybe I made it sound worse than it is.\"\n\n\"I don't want you to think that you don't have someone to talk to. A real friend like that though,\" he said. \"I'm sure being away from home and not knowing who you can trust can really wear on you at times.\"\n\n\"I can always talk to you though, right? If I'm feeling upset, or if something is wrong, I can call you, right Kyle?\"\n\n\"Absolutely,\" he answered quickly. \"I'll always be here for you.\"\n\nAmy giggled softly. \"See? You already made me feel a lot better.\"\n\n\"So easily? I must have quite the touch then,\" he said with a smile forming on his face.\n\n\"I wouldn't know about that. Your touch, that is,\" she whispered.\n\nHis breath caught in his chest as the tension came roaring back. As much as his body responded to the tension, it was addicting in a way. It was like they were dancing around the line of friendship and something more. One of them would stick their toe over the line to see what would happen, waiting for the other to respond. It produced an intoxicating feeling, and Kyle found himself constantly trying to push over that line. \n\n\"Too much?\" she asked fearfully after she realized he hadn't responded to her question.\n\n\"No, no,\" he said quickly. \"Sorry, I was just thinking.\"\n\n\"About how lame I am?\" she asked.\n\n\"No, not at all. The exact opposite, I promise. You're incredible, Amy.\"\n\nIt was her turn to stammer with her words. \"Do you really think that, Kyle? All jokes aside.\"\n\n\"God yes. You haven't been off my mind this entire afternoon.\"\n\nAmy practically whimpered into the phone. \"Well, I guess that makes two of us,\" she said with a small giggle. \n\nFor the next hour, they talked and flirted until long after the sun went down. It was just like their time that afternoon, except filled with more laughing, more emotions, and a whole lot of honesty. Amy filled him in on some fun times she had in college and what she'd been doing over the summer, while he reminisced about memories from the time when they were kids. It was to the point when he was counting lightning bugs that Amy suddenly got quiet. He could tell by her responses that she was thinking about something, even if she wouldn't come right out and say it. His subtle efforts of getting it out of her were having no such luck either.\n\nFinally, she started to open up to him. \"So, I was thinking about something. Something that I wanted to ask you. Um, it might be a little weird, but I've made up my mind, and I want to ask you to help me with this.\"\n\n\"Okay,\" he said with a chuckle. \"That sounds a little vague. Can you fill me in here with this question?\"\n\n\"Not right now,\" she said. \"This is something I want to ask you in person. I don't think doing it over the phone would be the right way, you know? It's kind of important.\"\n\n\"Are you asking for my hand in marriage?\" teased Kyle. She was being so awkward with the question that it was rather cute. He couldn't help but tease her.\n\n\"Nooo,\" she said quickly. \"It's just something that's important. So maybe we could meet up tomorrow or something? I don't have to work my summer job tomorrow so I could meet up with you somewhere to talk about it.\"\n\n\"You make it sound like you're asking me to go on a secret mission. You're not in trouble with the mob or anything, are you?\"\n\nAmy giggled. \"No, it's not like that, I swear! It's just . . . uh, how can I say this properly without sounding weird?\"\n\n\"You're already sounding weird to me,\" he teased.\n\n\"Oh, shush,\" she said with a laugh. \"It'll make sense when we talk about it. I really can't say anything more right now or I'll give it away.\"\n\n\"Okay, okay, fine. You've convinced me. I can meet with you tomorrow. The good thing about just being home is that I don't have any plans,\" said Kyle. \"Do you want me to come over to your house?\"\n\n\"No, that's not a good idea,\" she said quickly. \"I mean, Ryan will be home tomorrow, and I don't want him to hear this request.\"\n\nKyle raised an eyebrow. \"You've got me really curious on what this is.\"\n\n\"Maybe we could meet up at the park tomorrow? Then we could get some fresh air and talk about it together. Would that be all right?\"\n\n\"Of course, the park works just fine,\" he said. \"What time?\"\n\n\"Want to meet at eleven?\"\n\n\"Sure, that's fine. Now I'm just going to spend the whole night wondering what you're trying to ask me,\" he said with a chuckle.\n\n\"Oh, you'll probably never guess this,\" said Amy as her voice trailed off. \n\nWhen she said that, his own mind started to wander. What on earth could she possibly want to ask him that was so important, she wanted to do it in person? Then, all of a sudden, it clicked. His thoughts drifted back to this afternoon and the conversation he overheard before Amy saw him. She was talking about her first time. Could that be what she wanted to ask? \n\nHis heart started to pound in his chest. What were the chances she wanted to ask him to be her first? Could that even be such a thing? Was he totally off base or did he have this one pegged? \n\nSo many thoughts swirled around his brain as he tried to figure out what she could possibly be talking about. But all of them went back to the one thing he suspected the most. If she asked him, would he take her virginity?\n\n\"Still there? You didn't fall asleep on me, did you?\"\n\n\"Sorry, just lost in thoughts,\" he said quickly, trying to banish the thought of her honey-brown eyes under him, while she begged him to make her a woman. His body responded to that thought instantly, and he had to adjust his shorts to prevent himself from carving a hole right through them.\n\nAmy started to yawn, oblivious to his predicament. \"I should probably start getting ready for bed. I still want to hop in the shower before I do.\"\n\nAgain, his mind reacted, picturing her fingertips trailing lines of soap along her soft, smooth skin. Even throwing her head back as the hot spray of water concentrated below her waist. The situation in his pants grew worse.\n\n\"Earth to Kyle,\" said Amy with a giggle. \"Are you distracted?\"\n\n\"I'm seriously distracted by that last statement,\" he said honestly. \n\n\"What? Me taking a shower?\"\n\n\"Oh yeah.\"\n\nShe giggled again. \"Well, good. I'm glad I can be stuck in your thoughts.\"\n\n\"You haven't had any issues with that, trust me.\"\n\n\"Good. Think about that until you see me tomorrow, okay?\"\n\nHe chuckled. \"That won't be a problem at all. Although I might need my own shower here soon. A frigid one.\"\n\nAmy started to laugh. \"I'm sorry. Well, I am but I'm not in the same sense, you know?\"\n\n\"Perfect sense,\" he answered. \"I think we're on the same page.\"\n\nAmy let out a sweet-sounding sigh. \"I'm so happy you're back. I know I keep saying that, but it's only because I'm so very happy.\"\n\n\"I'm happy too, Amy. I really am.\"\n\n\"Perfect. Well, I should probably get going. See you tomorrow then?\"\n\n\"Of course. Wouldn't miss it.\"\n\n\"Me neither. Night, Kyle. Sweet dreams.\"\n\n\"Night, Amy.\"\n\nHe ended the call and stared at his phone for a minute. They'd been talking so long that he was stiff from the deck chair beneath him. Standing up for a long stretch, he made his way back into the house, locking the door behind him. By this time, his mother was sitting in the living room, a crossword puzzle in her lap. She looked up and smiled at him as soon as he hit the couch.\n\n\"There you are. I was beginning to think we might have to drag you back inside,\" she said. \"Who were you talking to?\"\n\n\"Just an old friend,\" he answered quietly. He still wasn't completely sure if he wanted to be honest that he was talking to Amy. Not that he felt bad about it, it's just his mother could be a bit of a gossip, and he didn't want word getting around on something that still wasn't defined just yet. After all, they were just talking, right? \n\n\"Well, whoever it was, you should keep talking to them. I haven't seen you smile and laugh like that in a long time,\" she said before turning her attention back to her puzzle. \n\nIn a way, it made him smile again. Amy made him feel more like himself than he had in ages. More like normal, like he was human again. It was something he lost in the distant and inhumane field of combat, and just a few hours spent with her made him feel like he recovered a piece of himself. \n\nAs much as it helped, it was only one piece though. Yet, he got the feeling that the path to healing laid through Amy. If that was the case, he'd do all that he could to spend as much time with her as possible.\n\nHe went to bed that night eager with thoughts of what tomorrow could bring.\n\n*****\n\nThe next morning, Kyle felt like he couldn't stop watching the clock, counting down the minutes until it was close enough to eleven to leave the house. The park that Amy had selected was in walking distance of both of their houses, a small fifteen acre area dominated by a large pond right in the middle. Walking and biking trails surrounded the pond and the heavy foliage meant that it was a great place to spend a warm, summer day.\n\nAnd for mid-August, it was going to be hot. Possibly even scorching, so Kyle put on a fresh pair of shorts and a simple, gray shirt and left the house ten minutes to eleven. He arrived right on time, finding an open bench that overlooked the quiet pond and waiting for Amy to arrive. He was glad they were meeting here and not at one of their houses. If he was being honest with himself, he still felt a bit weird about meeting up with her behind Ryan's back, and the last thing he wanted was for word to get back to him before he was ready. \n\nAmy's flirting last night had left little doubt about her intentions, and he'd responded in kind. It was a dangerous road for him to take, so right now, he appreciated the privacy that meeting on neutral territory could bring. Especially knowing that she had something important to ask of him. \n\nHe was looking forward to seeing her, and there wasn't much that could dampen that. His mood took a small hit when one of his marine friends called him to vent that morning, talking about how hard it was to acclimate back to civilian life. It was a feeling he knew well, and for just a moment, it reminded him of his current situation. Not even the thought of seeing Amy could shake that dark moment from his brain, not like he didn't try.\n\n\"Hey stranger. Good morning,\" said Amy as she walked nervously up to him.\n\nKyle's eyes bulged when he caught sight of her and what she was wearing. She looked impeccably beautiful, and he had to catch his mouth from falling open at her mere presence. Amy was wearing a stunning red sundress that was lined with white lace and dotted with tiny white polka dots. It rested right at her knees and left her sleeveless, exposing a good portion of skin and cleavage. The dress was cut to carefully frame her chest, showing just the right amount of her breasts to be suggestive without being too uncovered. \n\nAmy's golden blonde hair hung down in delicate curls, cascading down her tanned shoulders and running to the middle of her back. She smiled as soon as she saw him, a vision of femininity and beauty that took his breath away. Yet, even as stunning as she looked right now, he could tell she was nervous. She couldn't quite figure out what to do with her hands, and they toyed with one another just in front of her dress.\n\n\"Wow. You look just . . . wow,\" stammered Kyle as she pressed her way in for a hug. He wrapped his arms around her and inhaled that sweet smell of coconut. How he'd missed it even just from the day before. The dress was cut low in the back and his fingertips trailed across her bare skin, feeling the softness underneath, which had the effect of putting some serious hardness in his shorts. Thankfully, she pulled away before she had the chance to realize what she did to him.\n\n\"I was hoping you'd like this. I got this a few weeks ago and hadn't had the excuse to wear it just yet,\" said Amy as she grabbed the hem and made it dance. \"I thought this would be a good occasion to wear it.\"\n\n\"You could have shown up wearing a paper bag as a dress, and I still would have been just fine,\" said Kyle with a laugh.\n\nShe swatted at his arm. \"I'll remember that for next time. Beautiful day, isn't it?\" she asked while gesturing to the pond.\n\n\"It sure is. I'm glad you picked this place. I'd almost forgotten how great it is here.\" For a late summer day, the park was as busy as one could expect. On the trails around the pond, he counted several couples biking together, two men jogging, an old couple walking a dog, and even several kids playing some ball in one of the open fields. There wasn't a cloud in the sky, which meant that at this time of day, it was already strikingly warm.\n\nKyle turned his attention back to her. \"Beautiful everything today, really.\"\n\nAmy blushed a rosy-red color. \"You're just saying that.\"\n\n\"No, I'm really not. You look stunning, Amy. I'm not sure if you noticed, but I could barely keep my tongue in my mouth just now when you walked up.\"\n\nAmy started to giggle. \"You don't look so bad yourself.\" She reached over and grabbed his arm, squeezing at the muscle. \"Not bad at all.\"\n\n\"That's what so many years of carrying a football and then a rifle will do to you,\" said Kyle with a small smirk. \n\n\"Well, I like the result. I really do, Kyle,\" said Amy behind her delicate eyelashes. \n\nHe looked at her without responding, mostly because he was still too enamored with her appearance to find the proper words to say. A small moment of silence descended upon them, both unsure of what to say or do. While the connection between them was getting stronger, it was still too early for them to be comfortable with the silence.\n\n\"You're a little quiet this morning,\" said Amy as she turned to face him. \"Is something on your mind?\"\n\nWhat isn't on my mind? That was a better question. Between thoughts of Amy, being home finally, getting a job, and his conversation from this morning, he had enough topics to mull over. Yet, Amy deserved his honesty, and he wasn't afraid to try to open up to her, even if it meant making himself vulnerable.\n\n\"Not much. I just talked with a friend of mine this morning. Another marine who just got home with me. I mean, he's from South Dakota so a good distance away,\" said Kyle. \"I guess he's just having a hard time adjusting to being back home.\"\n\nAmy's eyes shimmered with concern. \"Is he going to be okay? Are you worried about him?\"\n\nKyle pursed his lips. \"Nah, he'll be all right. He's a good marine after all. Someone who I'd trust with my life if necessary. I think it's just a big transition to go from a place where everyone is shooting at you and coming back to all of this.\"",
        "Amy slid closer to him. \"I couldn't imagine that it was that tough. You're safe now. There's nothing that will happen to you here in your own hometown.\"\n\n\"I know that mentally,\" started Kyle. \"It's just hard to adjust. It's not a switch you can just turn off when you get back home. It's kind of like your own survival mechanism. It becomes ingrained in who you are as a person. Spending all your time thinking a certain way doesn't become something that's easy to turn back off.\"\n\nAmy slid closer still. \"I really can't imagine what you've seen in all that time. Was it really awful?\"\n\nIt was more awful than he cared to admit. If he was being honest with himself, he never wanted to go back into a war zone ever again. The sounds of bullets overhead, the whistle of an incoming mortar, the distant sound of departing helicopters and being truly alone\u2014all of it alone was enough to keep his blood pressure elevated for the rest of his life. \n\n\"Let's just say I don't ever want to go back,\" said Kyle in a near whisper.\n\n\"At least it's done now. No one will ever ask you to go back. You can start a new life now back here,\" said Amy softly. \n\nKyle nodded quietly. Sure, he could have the chance to start a new life, but what about Garza, Smitty, and Newman? Were they doomed for eternity to languish in a military cemetery without the chance to see what was on the other side of their time in the service? It was a place he hated to go, a dark spot in his brain where those kind of thoughts attempted to drown his subconscious and take over the rest of who he was. It was a daily struggle, one he didn't know would truly ever go away. \n\n\"Kyle,\" Amy whispered. \"Are you okay?\"\n\nHe was gripping the bench so hard that his knuckles had long since turned white. She clung to his arm softly, a tender presence that helped to beat away the darkness. \n\n\"I'm sorry,\" he said finally before turning away. \"It's just sometimes I go to that place, and I can't help but let it take over.\"\n\n\"It's okay,\" she said, pulling him into her. Kyle let himself be dragged against her as she enclosed her arms around him. She rubbed his shoulder lovingly as he opened up to her care. It was comforting, more comforting than he thought it would be. For some reason, Amy's presence and care made his troubles seem to melt back into the darkness from which they emerged.\n\n\"I'm sorry, I didn't mean for this to happen,\" he said after a few minutes. \"I really wanted to have a good time with you today. Not for it to start like this.\"\n\n\"It's not your fault,\" she said softly. \"But I want you to know that I'm always here for you. Whatever you need, I'll be here for you, okay?\"\n\n\"Even if I need you to tell me to stop acting crazy?\" he asked with a small smile.\n\nAmy giggled. \"Even then. Just tell me what you need, and I'll do my best.\"\n\n\"You've already been so great. You're the best part of being home,\" he said quietly.\n\nAmy's gaze flickered to his lips before returning to his eyes. \"I rather like you being home too.\"\n\nAfter another minute, Kyle straightened and sat upright, feeling the moment of weakness pass. Luckily for him, Amy followed along, her arm still wrapped around his body and now pressed tightly against his side. It was a couple's position, and one that he wasn't likely to pull away from any time soon. It felt just right when she was against him, like she was made to fit against his body\u2014the other half of his jigsaw puzzle. Every so often, that scent of coconut would drift by his nose, making him enjoy the feeling even more.\n\n\"Feeling any better now?\" she asked after another few moments. \n\n\"Much, thank you,\" he answered honestly. \"I should keep you with me all the time. Nothing makes these moments pass away quicker than your presence.\"\n\nAmy smiled. \"I'm glad. And I'll stay near you as long as I can.\"\n\nKyle chuckled. \"I appreciate that.\"\n\nA strange look passed on Amy's face for a moment before it turned neutral once again. It wasn't short enough that it escaped his notice though. \"Are you okay now?\"\n\n\"Oh, yeah,\" she said, waving her hand. \"I'm all right. I was just wondering if I should just wait to ask you what I was going to. Maybe wait for a better moment or something?\"\n\n\"No, no, I'd feel bad to come out here just to miss it,\" said Kyle before turning toward her. \"Let's talk about it. I'm all ears. If I can do something for you like you just did to help me, I'll gladly do so.\"\n\nAmy took several deep breaths. Whatever was on her mind was clearly looming large in her thoughts, making even the simplest of words catch in her throat. All of it made him wonder if his suspicion was correct.\n\n\"Okay,\" said Amy finally after a long breath. \"Promise me that this stays between us? No matter what?\"\n\n\"Of course. Whatever you need to say won't go further than me,\" he promised.\n\n\"Okay, I guess I should start from the beginning. Just let me get everything out before you jump in, all right? I don't know if I'll be able to do this if you start asking too many questions.\"\n\nKyle chuckled. \"I'm all ears. Go ahead.\"\n\n\"Just to start this whole thing off, the only reason why I'm going to ask you this is because I trust you,\" she started. \"I trust you more than most because I've known you for so long. And you've always been a good person. A really great person, to be honest. So that's why I feel so comfortable with asking you this.\"\n\n\"Well, thank you for that,\" said Kyle. \"We do go way back. In a way, I trust you just as much.\"\n\nAmy smiled. \"Do you remember how I told you yesterday about making new friends at school and about the difference in high school and college?\"\n\n\"Yeah, of course. How it's hard to know which friendships are truly genuine and which aren't.\"\n\n\"Exactly. Well, I'm probably closest with my friend Brittany at school. She's really . . . cool. Definitely attractive and she's always got boys around her all the time. Which is just funny because I don't think a girl like her would even talk to me in high school, but it is what it is.\"\n\n\"So are you trying to figure out how to become better friends with her?\" he asked.\n\nShe swatted his stomach gently. \"No interruptions, remember? Let me get this out.\"\n\nKyle chuckled. \"Sorry, continue!\"\n\n\"Well, hanging out with Brittany has been fun. And she's introduced me to a lot of new people but mostly to this new sorority called the Kappas, who all seem like really nice girls. I mean, they have one of the hottest houses on campus, and it's just the place to be.\"\n\n\"Okay, I'm with you so far. Keep going.\"\n\n\"And well, we're really thinking about pledging in the fall. Brittany thinks we can get in because she's really close with a sister there who she had economics with in the spring. So she thinks we can get in but there's just one problem.\"\n\n\"And that is?\"\n\nAmy took a deep breath. \"You see, Brittany thinks that there's some criteria we'd have to meet in order to get in. I mean, this is the coolest sorority in the entire college. And she doesn't think they'd accept a . . . accept a vi . . . What I'm trying to say is she doesn't think somebody can pledge who hasn't . . . you know, had sex before.\"\n\n\"Oh, I see,\" said Kyle, feeling his heart rate spike. \n\n\"It's so stupid,\" said Amy with a nervous laugh. \"I mean, I don't know why that would matter but Britt is convinced of it.\"\n\n\"And I take it Britt probably has her fair share of experience in that department?\"\n\nAmy nodded. \"Yeah. Like I said, she's always got guys around her. I've even heard her through the door once before. She's got enough experience.\"\n\n\"So,\" started Kyle. \"That means you're the one that hasn't done it before.\"\n\nAmy's cheeks turned red. \"I mean, it's not a bad thing, right? I just thought it was something special so I wasn't rushing to do it.\"\n\n\"No, you're not wrong. It is supposed to be special,\" he said.\n\n\"I mean, I guess. But maybe it could be just sex, you know? Maybe I could just get it out of the way, and then it won't be a big deal.\"\n\n\"Can I ask you something though?\" said Kyle. \"Why does it make a difference what these people think? I mean, so what if you're a virgin, Amy. Does that change a thing about who you are?\"\n\nAmy turned away from him. \"No. I mean, I don't know. It's complicated, you know? I mean, for the first time in my life, I feel like I'm with a crowd of people who aren't . . .\"\n\n\"Aren't what?\"\n\n\"Aren't losers,\" she said quietly. \"That's kind of how I felt during most of school. I'm well aware of how I looked during my time in high school. I wasn't pretty, and I wasn't popular. In the last couple years, I guess things have started to change.\"\n\n\"They really have. You're just gorgeous now,\" he whispered.\n\nAmy smiled at him. \"And for that reason, I feel like I have friends now. Friends who wouldn't look at me twice before. I know it might be a little shallow, but I want to enjoy that while I can. I guess I feel if I get into this sorority, at least I'll have a family of sisters for life. Real friends.\" Amy took a deep sigh. \"That probably sounds really stupid, doesn't it?\"\n\nKyle shook his head. \"No, I can understand wanting to fit in. I just don't want you to compromise who you are just to do that.\"\n\n\"I don't think I will. Like I said, it's just sex. I mean, everyone does it eventually, right? Why not just get it out of the way and be done with it?\"\n\n\"If that's what you really want,\" said Kyle. \"So how do I figure into all of this?\"\n\nAmy turned bright red and started stammering. \"You see, t-that's the thing. You remember how I said you were the one person I could really trust more than most? I wanted you to help me with that. You know, losing it.\"\n\n\"Oh, so you want . . .\"\n\n\"Yeah, I do. God, I hope that's not weird. You think I'm totally weird, don't you?\" she asked.\n\nKyle started to chuckle. \"No, no, I don't. You want me to help you lose your virginity,\" he said quietly.\n\n\"Yeah, I do. I mean, like together,\" said Amy softly. \"Me and you.\"\n\n\"Me and you,\" he repeated. \"You want to lose it to me?\"\n\n\"Yeah,\" she said, looking everywhere but his eyes. \"I just trust you, Kyle. Like I said, I've known you forever, and I don't know of a single person who has a bad thing to say about you. And not to mention you look so . . . good since you came home. I mean, you looked good before but you look really great now. Those arms and that smile, oh gosh,\" Amy turned away from him.\n\n\"It's okay,\" he said with a laugh. \"Thank you.\"\n\n\"I just don't want to be some one night stand to some random guy. Something that didn't mean anything, and then never see them again. I don't want to be cast aside and forgotten, and I would only want to do this with someone who would treat me with respect. Like you already do.\"\n\n\"I guess I understand that,\" he said. \"So like, how would we do this?\"\n\n\"Well if we're being totally honest, I don't have a ton of experience,\" said Amy with more embarrassment. \"Very little.\"\n\n\"How far have you gotten?\"\n\n\"Do you remember Scott Ellis from high school? I kissed him once, on a dare during a high school party,\" admitted Amy. \"That's the farthest I've been.\"\n\n\"Wow, I didn't have any idea,\" said Kyle. \"I mean, I thought you might have done something, but you haven't done anything.\"\n\n\"No, so this is all new ground for me. So that's why I was hoping you might be able to like teach me things. Maybe be my coach? Like how to kiss or to kiss other parts.\" Amy turned away from him.\n\n\"So like oral?\"\n\nShe nodded while he started to chuckle. \"You don't need to be embarrassed, Amy. It's just me.\"\n\n\"Yeah, no reason whatsoever,\" she said with a heavy degree of sarcasm. \"'Hey guy I've known for ever, teach me how to have sex because I'm a virgin.' No embarrassment there!\"\n\nHe couldn't help but laugh at how ridiculous it sounded, so much so that even she started to giggle. \"Stop laughing at me and my life,\" she said playfully.\n\n\"I'm not laughing at you, I promise,\" he said, wrapping an arm around her. \"I find it really sweet to be honest. That you would even think to ask me. I'm kind of honored in a way. That you think that much of me to want to do this.\"\n\n\"You're the best person I know,\" she whispered against his shoulder. \"How could it be anyone else?\"\n\n\"And then what do we do?\" he asked. \"I mean, after we have . . . sex? Do we just go back to normal or what?\"\n\nAmy gulped while frantically playing with her nails. \"I mean, it could be whatever you want. I don't expect us to just jump in a relationship if that's what you're thinking. I'm not stupid, I know guys can separate sex and emotion. We can keep this platonic and just do what we need to do. Then I'll go back to school, you can go back to your life and we can just be friends.\"\n\nAmy remained incredibly stiff while she talked, her body showcasing a fear that was hiding deep inside. He thought he knew the reason for it, but he wouldn't ask why to save her the embarrassment. \n\nThe only question that remained for him was could he have sex with Amy and still expect them to remain platonic friends? They were already blurring the lines between friendship and something more, and they'd barely even touched, let alone kissed. If they had sex, what would that do to them? Especially knowing that it was already August, and Amy would be going back to school six hours away. Would that make things much harder?\n\n\"What are you thinking about?\" Amy asked quietly. She tugged gently at his arm. \n\n\"I'm just thinking about how this would work is all,\" he admitted.\n\n\"It won't damage our friendship, I can promise you that,\" said Amy quickly. \"I can keep this platonic, and I don't want that to be the part that scares you off.\"\n\n\"It's not, I promise you that,\" said Kyle. \"I just want to know that it's what you really want? Do you really want to lose your virginity to me? To have sex with me?\"\n\nAmy nodded. \"I really do, Kyle. I think this will really help me when I go back to school. I get to do this on my own terms and with someone I really trust. Then I don't have to deal with all the pressure from my friends. Which, yeah, I realize it's peer pressure but they do have a point. It just needs to happen, so why don't I decide how it does.\"\n\nKyle nodded as he listened, taking it all in. She seemed to be sure of her decision, and her plan did have a certain merit to it. \n\n\"I can understand if you don't want to,\" said Amy after he didn't respond. \"I mean, if you're not like attracted to me or something. If that's the case, we don't have to\u2014\"\n\n\"No, trust me, that's not the case. You're gorgeous, Amy,\" he interrupted. \"Listen, I'll do this with you. As long as that's what you want, I'll do it with you. I'll do it on your own terms, but let's just set a couple ground rules before we do.\"\n\nAmy started to nod her head excitedly. \"Okay, sure! What should we set?\"\n\n\"Well, rule number one. Anytime someone gets uncomfortable, we stop. No matter what. If we're about to do it, and you decide you don't want to anymore, it's done. No exceptions. Sound good?\"\n\nAmy smiled. \"This is why I knew you'd be perfect for this. Yes, I accept that rule although trust me, you won't have anything to worry about on that front.\"\n\nKyle grinned. \"Good. Rule number two, we have to keep this from your brother. He'd definitely try to kick my ass if he even suspected this of going on.\"\n\n\"I won't tell him, I promise,\" said Amy. \"I won't tell anyone. It stays just between you and me.\"\n\n\"Good. Last rule is we start with baby steps. I don't think it would be right if we just dive in without testing the water first. So let's start small and work our way up to it.\"\n\nAmy nodded quickly. \"Start small, I like that. So like what's starting small?\"\n\n\"Well, since you don't have much experience, maybe we should just start with a kiss?\" he suggested. \"We can work our way up from there. Maybe doing a make out or trying oral from there.\"\n\n\"A kiss sounds really great,\" said Amy as she eyed his lips. \"That's a really good starting point.\"\n\n\"Okay, well when should we start this?\"\n\nAmy's eyes went back to his lips again. \"If you're okay with it, there's really no time like the present.\"\n\n\"You want me to kiss you now?\" he asked with a chuckle.\n\nAmy nodded. \"I mean, yeah. We might as well start. We don't have all the time in the world. Only like a couple weeks before I leave.\"\n\n\"Okay, let's kiss then. Are you ready?\"\n\nShe grinned and then closed her eyes, sticking out her lips. Kyle could only chuckle at the sight, finding nothing more adorable than Amy Butler expecting a kiss from him. Even though the sight was cute, when coupled with what she was wearing and the deal they'd just struck, he was again finding himself totally hard.\n\nAnd she wants you to have sex with her.\n\nShaking the thought from his head, he concentrated on the woman in front of him. He inched his face closer until the smell of coconut hit him. He was close enough to her lips that he could almost feel them. All he needed to do was close the distance.\n\nHis lips pressed against hers, and in that moment, Kyle nearly forgot his own name. His heart took off as he tasted Amy for the first time, feeling her arms wrap around his neck and hold him in place. Her lips were impossibly soft, yielding to his and creating just enough pressure to keep him hooked. As good as her lips were, her tongue was even better. Amy's mouth slipped open and invited him to explore, his tongue greeting hers for the very first time. She sought it out and caressed it with her own, moaning against his mouth, and she pulled him even tighter against her lips. It was such a simple moment to any outsider, but for Kyle, that first kiss with Amy was one of the most erotic moments of his life. \n\nThey broke the kiss with an excited breath as both of their eyes popped open at the same time. Amy wore a demure yet satisfied look as she licked her lips, her eyes already showing a degree of arousal.\n\n\"Wow,\" she whispered while she gazed at him.\n\n\"Was that a good start?\"\n\n\"That was much better than Scott Ellis,\" she said with a giggle.\n\nKyle started to laugh. \"I'm glad I didn't disappoint you.\"\n\n\"I don't think you could if you tried. Can we do it one more time?\"\n\nKyle nodded and slipped his hand behind her head, pulling her into another long, simmering kiss. This one had considerable more heat to it as Amy willingly melted against his side, pressing her body and her breasts into his chest as their tongues dueled together. \n\nKyle's world spun as she kissed him, the incredible taste of her lips like no one else's. There was something serious about her kiss, a suggestion of more to come and an emotion of tenderness that he'd never experienced before. It was sensual and chaste at the same time, a reminder of her inexperience but a promise of the future. In short, he never wanted to be parted from her lips again.\n\n\"If we don't stop soon, we're going to end up doing it on this park bench,\" he said when the kiss broke, causing Amy to explode into a fit of giggles.\n\n\"I don't think those little kids over there would like that very much.\"\n\nKyle shrugged. \"They can look away then.\"\n\nAmy raised her hand to softly caress his face. \"Thank you. That kiss, all of those kisses, was perfect. I worried so much of what you might say to this, but you made this perfect.\"\n\n\"Amy, you had nothing to worry about. You're so beautiful, not only on the outside but on the inside as well. I'd do just about anything you'd ask me to.\"\n\nShe leaned in and kissed him again. \"This is just perfect. I really can't wait to get started on this more.\"\n\n\"Me too. When do you want to do more?\"\n\nAmy thought about it for a moment. \"How about tomorrow? I don't have to work during the day, and my parents will be working. Ryan too. You can come over to the house.\"\n\n\"As long as Ryan won't be there, I will be.\"\n\n\"Yeah, don't worry. He works his summer job during most of the daytime. It'll just be me and you,\" assured Amy.",
        "\"Good, count me in then.\"\n\nAmy kissed him again. \"One more thing before we go. Make sure you bring your trunks. We'll go swimming.\"\n\nRyan gulped heavily. Amy in a sundress was enough to set his blood on fire. What would happen when he saw her in a swimsuit?\n\n*****\n\nAmy's face still felt like it was on fire as she walked back to her house after her meeting with Kyle. She couldn't believe she actually did it. She asked Kyle to take her virginity and he said yes! It was like the culmination of all of her fantasies throughout the years. To know that he agreed to be intimate with her in such a way, to truly be her first, had her on cloud nine even despite the embarrassment.\n\nHer mind raced with all the possibilities. What it would be like tomorrow when he came over? What would they do? Surely they would make out, but where would it go from then? She bit her lip at the thought of losing clothing, at seeing him without his. At letting him see her without hers. She remembered his body from when he was in high school when he had those lean muscles and tight chest. He was so much better even now that she couldn't wait to get his shirt off and get him into the pool tomorrow. \n\nShe felt like skipping on the way home, a bright smile plastered to her face as she greeted everyone that crossed her path. There was nothing that could rain on her parade that day. Not even when a giant doberman barked at her and scared her half to death on her way back to the house. It was just too good of a day. \n\nAs she arrived home and shut herself in her room, part of her had to wonder what would happen when they did cross that final line. When her and Kyle had sex. Would it just truly be platonic? She seemed to convince him that she could do it without developing feelings even if she knew that was futile. She'd had feelings for him since she was in the sixth grade. There was no way she could hope to hold those at bay now, especially with what was to come.\n\nBut what would he think? Would they just part at the end of summer? Would she go off to college with the experience but no relationship? Was that what she even wanted at this point? \n\nThere were too many questions without answers that it wasn't smart to dwell on them. She just needed to take this one step at time. He seemed to be doing the same thing since he arrived home. Why couldn't she?\n\nPart of her still ached at the depth of his pain from his time in the marines. She'd seen the look in his eyes, the vulnerability that those memories produced. It was heartbreaking. She wanted to cling to him and never let him go. She knew that time had to have been hard on him but until now, she'd had no idea just how difficult it was. He was more withdrawn than she remembered, but shades of the old Kyle emerged every time they talked. In that moment, she resolved to do everything she could to make him forget about those horrible years. To bring back who he was at the core. To laugh with him again and make him see that life could be bright once more.\n\nAmy paced around her room with endless energy. There were just too many possibilities that she'd be on edge until tomorrow. \n\nI just have to play it cool. It's just sex. No reason to get all worked up about it.\n\nYet it was sex with Kyle Patterson. And her heart thumped in her chest at the very thought of it. \n\nYou can do this. He wants to do it and so do you. Just play it cool.\n\nIt was easier said than done.\n\n*****\n\n\"I hope you're ready to go swimming!\"\n\nAmy opened the door with a wide smile and beckoned him inside. It was close to lunchtime on the following day and he'd been trying not to appear too eager to go over to the Butler house that morning. That was easier said than done. Even since his conversation with her the previous day, Kyle found himself close to obsessing about what today might bring. \n\nTheir deal to help Amy lose her virginity would pick up some serious steam today, and the very thought of getting her undressed made his heart beat rapidly. Even though they'd only shared a few kisses yesterday, the thought of continuing that today had Amy on his brain the last twenty-four hours.\n\nFor his own part, he kept up the simplicity of his clothing, only wearing a pair of board shorts and a dark blue v-neck. Amy looked adorably cute in her little jean shorts and yellow tank top, her golden blonde mane draped across one shoulder. He was already eager for her lips once more.\n\nThankfully, she seemed to read his mind. As soon as the door was closed, she wormed her way into his arms and sneaked the first kiss against his lips.\n\n\"Mmm, what was that for?\" he said with a smile as soon as she pulled away.\n\n\"I'm just happy to see you,\" she said with a giggle. \"I'm happy you're here.\"\n\n\"Me too. I can't wait to go swimming with you.\" \n\nAmy's expression turned to one of mischief. \"I have a surprise for you.\"\n\n\"Oh, what's that?\"\n\n\"Well, very recently I picked up two new swimsuits,\" she said with a Cheshire grin. \"My old ones didn't fit very well anymore.\" She reached up to grab her boobs, the meaning already implied. \"I was hoping you could be my sounding board and tell me which one you liked best?\"\n\n\"Of course, I'd love to do that,\" he said. \"When do I get to see?\"\n\n\"Does right now work for you?\" She led him by the hand into the living room, sitting him down on the couch while she dashed upstairs to get changed. Apart from Amy, the house was eerily quiet, with none of the other members of the Butler family home. Even still, it made him a little fidgety. Knowing the true reason why he was here made him nervous that anyone could decide to come home at any moment and figure out what they were up to. He knew it was silly, but the mind went to some weird places when it knew you were doing something you really weren't supposed to. And hooking up with his best friend's little sister was quite high on that list.\n\n\"Are you ready for suit number one?\" called out Amy from the top of the stairs.\n\n\"Bring it on,\" he said with a chuckle. He still couldn't see her, and he was really anxious to see what she'd come up with. Kyle wasn't sure what to expect from her. He'd remembered times from when they were kids and she'd gone swimming with them, wearing a girlish one-piece but that was back then. What would she wear now?\n\nHe had his answer soon enough when his jaw dropped to the floor as soon as she reached the bottom step. He could have sworn that Amy's smile was bigger than the two pieces of fabric that covered up the rest of her body. \n\n\"Do you like it?\" she breathed as his eyes raked over her body. The swimsuit was many different shades of blue, going from a deep, dark color to the lightest of sky-blues. It showed off a great expense of her cleavage, Kyle getting the first ever generous view of her breasts and what a feast that was. Those rolling hills tucked away gently in those soft blue cups, a hidden prize that taunted and teased him in the same breath. \n\nHis eyes trailed down over her taut tummy to the little blue bottom piece which was doing a great job hiding the rest of her private bits. Yet, it was still just a small strip of fabric, and he could have sworn he saw the traces of blonde hair underneath.\n\n\"Oh my god,\" he said while sucking his breath in. \"That's so . . . holy crap.\"\n\n\"Is it too revealing?\" Amy bit her lip and tried to cover herself with her hands.\n\n\"No, no, no, don't you dare,\" he said while hopping out of his chair. \"You're gorgeous. God, Amy, you could kill a man looking like that.\"\n\nShe finally looked up to him and smiled. \"You're being serious? You're not teasing me, are you?\" Her nervousness was so cute, and he knew the perfect way to cast it aside.\n\nHe pulled her into his arms and kissed her soundly. Amy moaned against his lips and pressed into him, her hands wrapping around his shoulders and surrendering to the kiss. Her tongue slipped into his mouth first, eager for a caress and aching for affection that he was all too ready to give. \n\n\"Does that answer your question?\" he asked breathlessly when he pulled away from her lips.\n\n\"I might need more convincing,\" she said with a giggle. \n\nKyle started to laugh. \"If you keep kissing me, I'll show you in other ways how much you excite me.\"\n\nHer eyes flickered down to his crotch. \"Now this is getting interesting!\"\n\n\"That is what I'm here for, right?\"\n\n\"Yes, exactly,\" she beamed. \"To be my own personal sex coach.\"\n\nHe nearly doubled over with laughter, causing her to do the same. He'd almost forgotten about the sexually-charged moment. Almost.\n\nAmy kissed him one more time before bounding out of his arms. \"I'm glad you like this one, but I have another one to show you. Be right back, okay?\"\n\n\"Okay, I can't wait.\"\n\nFive more minutes later, she reappeared at the bottom of the stairs. This suit was just as sexy, but it was a little more reserved in a different way. For one, it was flesh-colored, and he almost bugged out when he first glanced at her\u2014his first thought was that she was naked. Upon closer inspection, he could see where the fabric ended and Amy began, but it still didn't help his elevated heart rate. The upper piece was like a halter top, encircling around her neck instead of her shoulders, with strips of openings going across the front and showing off a decent amount of cleavage.\n\nThe bottoms had the same cut of strips along the sides as well. While it wasn't as revealing as the first suit, it was still sexy in its own way. Or maybe that was just Amy. \n\n\"I bought this one because I thought it would be easier to wear around family,\" said Amy with a grin. \"I could definitely see my mom being upset about the first one.\"\n\n\"Yeah, this one doesn't quite show as much,\" noted Kyle. \"But you're still killing it. I think I like them both just as much.\"\n\nShe did a playful bow. \"Well, if you don't mind, the fashion show is now over. I'll keep wearing this one and wear the first one for you next time. Sound good to you?\"\n\n\"Sounds perfect. Now let's get to the pool!\" \n\nAmy grabbed his hand and pulled him through the living room to the back deck where the rest of the yard opened up to the pool area. Growing up, Kyle had spent countless hours in the pool back here and several memories hit him all at once. From playing friendly games of couples volleyball back in high school with his and Ryan's girlfriends to playing monkey in the middle with Amy when she was still a kid, this pool had seen a lot of life. The only difference now was that Amy had long since grown up from the little distraction she used to be as the perpetual monkey in the middle. \n\nNow she was the main show.\n\nKyle pulled off his tank top without any words while she dipped her foot in the water.\n\n\"Perfect temperature right now. I hope you don't mind spending all day in here,\" she said with a giggle.\n\nHe grinned. \"With you, I think that sounds like a great idea.\"\n\nKyle was the first to slip into the pool, loving the way the soft waves provided instant relief from the heat of the day. It was so refreshing to be in the Butler pool once again, but it was different in another way as well. Watching Amy as she took measured steps into the pool, her eyes locked on him as the waves dampened her suit, was an intense experience. She slipped by him closely as part of her hair got wet, and he couldn't help but admire the soft beads of water that slipped over her breasts.\n\n\"You're staring at me,\" she teased, as she splashed some water his way.\n\n\"It's hard not to sometimes. I feel like I could stare at you all day,\" he said almost too honestly. \"I probably shouldn't have said that out loud.\"\n\nAmy grinned and swam closer to him. \"Why not? It's just what I wanted to hear.\"\n\nShe was close enough now that they were almost sharing the same breath. Wordlessly, her soft and wet arms slipped out of the water and enclosed around his shoulders, just as her stomach brushed against his. She was close enough now that he could make out the stunning complexion of her honey-brown eyes as well as watch her lips curl into a teasing smile.\n\n\"Is this okay?\" she asked as a secondary thought, long after the action had been completed. \n\n\"It's more than okay,\" he whispered. \"I mean, we have to get used to touching each other if we're going to go all the way, right?\"\n\nAmy nodded slowly. \"And we'll have to practice that kissing too. You know, since my experience is so limited.\"\n\n\"I don't know, the way you just kissed me earlier seems like you already have that under wraps,\" he said with a smirk.\n\nAmy shrugged playfully. \"Humor me, will you? Maybe you can teach me something new? Something more . . . sexy?\"\n\n\"Like making out? Because that was close to what we did in your living room.\"\n\n\"Yeah, exactly like that,\" said Amy with a nod. \"Just more of it!\"\n\nKyle chuckled. \"At least no one will say you're not an enthusiastic learner.\"\n\nAmy then gave him the sultriest look he'd ever seen from her. Her lips pursed together, and her eyes narrowed slightly, in a combination that was all sex and all woman. \"I think you'll be surprised how enthusiastic I can be.\"\n\nKyle gulped hard and nodded, feeling his trunks suddenly become very restricting. His mind started to wander at that point. Had this version of Amy always existed behind the mild-mannered little sister persona he'd always known? Or was this something new? Something that had developed alongside the rest of her in the last few years? Whatever it was, it had him begging to find out more. \n\nHe wanted another kiss, and this one didn't have to end any time soon.\n\nShe seemed to read his thoughts, and she pressed in closer, their lips connecting once more. Kyle inhaled as soon as she made contact, wanting this version to last as long as possible. In response, Amy pressed harder as if she was trying to make his face accept all of hers. Once again her tongue slipped into his mouth, finding a warm invitation on the other side as he rushed to caress her. This time his hands were far from idle as his fingers made a gentle trek down her body, only resting against her hips to pull her lower body against his.\n\nAmy moaned softly, and her eyes flashed with passion, no doubt feeling his hardness pressing against her lower half. She wrapped her legs around his torso, using the buoyancy of the water to keep them afloat. He let himself be pushed back against the edge of the pool as her tongue continued to invade his mouth. While it was only somewhat obvious she didn't have the experience in kissing, he still found her enthusiasm and passion incredibly arousing. \n\n\"Am I doing okay?\" she asked, pulling away to take a deep breath.\n\n\"You're incredible,\" he breathed slowly. \"Take a break from trying to explore my mouth though. A good kiss lets each partner have time to seek out the other. Let me have my turn, okay?\"\n\nAmy reddened slightly. \"I'm sorry. I guess I was being a little overeager. Just over ten years of wanting to do that all coming to a head at once.\"\n\nKyle chuckled. \"I could kiss you all day, trust me. But now I want to explore you a little.\"\n\nAmy smiled. \"Explore away.\" She then pressed her lips in again.\n\nThis time, she waited for him to slide his tongue in her mouth, only meeting him with a tentative response once he was inside. He pressed in with a little more urgency, wanting her to know it was okay to be passionate. She was a quick learner, and Amy seemed to get the hang of it after a while, their kisses leaving him with a permanent state of hardness for most of the afternoon.\n\nIt wasn't always about the desperate passion that it started off with. They experimented with tender kissing, full of emotion if not the full-on emotion of before. There were longing kisses as well where they only both separated with long gasps of air. There were even short pecks along the way too, more reminiscent of couples greeting after a long day in the office. \n\nEvery which way Kyle could think of to kiss her, he did, and as the afternoon wore on, his mouth was almost tied from the nonstop kissing.\n\nAmy separated after that last kiss and smiled at him coyly. \"I think if I could go back in time and tell my sixteen year old self what we'd be doing right now, high school would have been a lot more bearable.\"\n\nKyle started to laugh. \"That good, huh? I was half-afraid you might have expected too much from me as your personal sex coach.\"\n\nAmy shook her head. \"There's no one else I'd rather do this with.\"\n\n\"Why, Amy, it almost sounds like you're not being so clinical about this as you originally stated,\" he teased.\n\nTo his surprise, she blushed a rosy-red color and pulled away slightly. \"Sorry, I guess I just got really into this. That's okay, right? I didn't think you'd be mad at all, I just\u2014\"\n\n\"I'm just teasing you,\" he interrupted, pulling her back to him. Amy gave him an innocent smile before her lips crushed against his once more. Truthfully, he liked this open and vulnerable side of her. He knew she'd had a crush on him forever, and the very fact that she tried to make this as platonic as possible seemed to be the only flaw in her plan. Kyle could only wonder how long that pretense could hold up the further they went with this. Could they still be friends after they had sex? Would he even want that? \n\nNot really said the small voice in his head. He wasn't sure how he'd be only allowed to have one taste of Amy only to swear it away for good. To let her go back to school and try out all she'd learned with someone else. The very thought made his blood boil. Was he already losing the platonic pretense?\n\nHe wasn't sure if she was thinking the same thing, but upon the next kiss, Amy moaned extra loudly and wiggled her lower half against his still concealed erection. When she pulled away to lock eyes on him, her glazed over eyes were once more seductive.\n\n\"I think . . . you should . . . kiss me other places . . . besides my lips,\" she breathed out softly while her finger pointed to the small of her neck. \n\n\"If it's kisses you want, you've come to the right place,\" he growled while pressing his face against the delicate skin near her throat. Amy let out another delightful moan as he kissed her flesh, making his own trail that initially went up to her ear before going right back down to her shoulder. In the process, his lips trailed over the strap of her flesh-colored top.\n\n\"Stupid top is in the way,\" he said playfully, never expecting what she then said next.\n\n\"Why don't I take it off then?\"\n\nHis eyes searched hers, trying to see if she was just playing with him or if she really meant it. Amy's face seemed to be very serious though, her eyes almost resolute in her meaning. \n\n\"Do you want me to take it off, Kyle?\" she whispered once more as her hands grabbed the hem.\n\nHis eyes flickered down to the top, where her wet breasts were encased in the damp, constricting material. The top looked even more like her own flesh once it was wet and his glances down to it once again served to put more steel in his erection. With a subtle nod of the head, he signaled his intent.\n\nAmy's lips parted into a thin smile as she reached with one smooth motion and lifted it above her head, her tits coming into view for the first time. Kyle felt his mouth drop open at the sight, especially as she pulled her hair out of the opening and laid the top along the exterior of the pool.\n\nNot too big or too small, Amy's tits had just the right size to them, perfect cups that would have filled his entire hand. The flesh was without blemish and they hung off her body with just the right amount of perkiness and bouncy. She had the most adorable, pink nipples to cap off each breast, with only a slightly more abundant area for her areolas to cover.\n\nIn short, she was perfect in just about every way, and Kyle found himself stammering to offer any kind of response to such a sight.\n\n\"Do you like them?\" she whispered finally, her nervousness clearly showing on her face as she stood so exposed to his view."
    ],
    "authorname": "CJMcCormick",
    "tags": [
        "best friend",
        "drama",
        "first time",
        "love",
        "marines",
        "oral",
        "romance",
        "romantic",
        "sister",
        "virgin"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/bent-not-broken"
}