{
    "title": "The Master and the Ring Ch. 08",
    "pages": [
        "Henri and the two witches arrived at his capital city days later. He was recovering from his head injury most of the journey and during the nights was too weary for pleasure with them. He was feeling much better when he first saw his capital in the distance and began formulating a plan upon his arrival. As they neared the gates, he left the main road, needing to speak with the women before he entered.\n\n\"I need you to enter the city well after me. Once inside, inquire of lodging at The Rusted Pot Inn, the guards should know of it and give you directions. Procure lodging there and I will come to you when I am able.\"\n\n\"The Rusted Pot? This does not sound worthy of daughters of Mentula,\" Arianna said.\n\n\"You are not daughters of Mentula anymore, besides, despite the name it is a fine inn. Wait for me there, I will come as soon as I have secured my throne and talked with certain individuals.\"\n\n\"Certain 'ladies',\" Heather stated with emphasis on the ladies.\n\n\"Yes, if you must know. I do not know what I will tell them, not as of yet.\"\n\n\"You'll think of something, my lord... we will do as you ask and eagerly await your coming,\" Heather said.\n\nHe left them and rode into the city alone to the delight of most but some who wished him dead set plan into motion as word arrived that the king had returned.\n\n**\n\nNews traveled quickly. Yvonne and Serena got word Henri was in the capital the very hour he had arrived. Serena wanted to go to him but the older, wiser sister calmed the younger and bade her patience.\n\n\"He will call on us or he will request our presence at the palace. We must be ready,\" Yvonne said.\n\n\"Now that he is here I can scarcely contain my impatience,\" Serena said, pacing back and forth in their families large sitting room.\n\n\"You must. I'm afraid he will be occupied with business, possible for a few days before we hear from him.\"\n\n\"Do you really think so? Won't he be eager to see us?\" Serena asked.\n\n\"I'm sure he will, but he is king, sister... as much as he would like to come to us he is duty bound to country and custom,\" Yvonne stated.\n\n\"I can't see Henri bound to custom, I can't see him as past kings at all.\"\n\n\"That is because you have seen him naked, sister, and it is all you can think about,\" Yvonne said, giggling.\n\n\"Perhaps,\" Serena smiled, \"I hope you are wrong and he breaks customs and visits us tonight.\"\n\n\"How scandalous, my sister,\" Yvonne said, suppressing her smile.\n\n\"Yes, how very... you know you wish the same,\" Serena said, grinning.\n\n**\n\nUpon his return, Henri did not immediately go to the palace; instead, he rode to see General Sharis, a man he trusted. He knew the guards at the gate would quickly pass word of his return throughout the city. He needed to talk with Sharis and grow accustomed to the politics and mood of the country.\n\n\"I did not expect you to return in this form, my king. Are the rumors true? Is the power you possessed gone?\" Sharis asked him once they were alone.\n\n\"Yes, the evil had to be destroyed,\" Henri responded.\n\n\"Evil? I did not see evil in you, only power and a sense of honor and duty to your country.\"\n\n\"Power of this magnitude can have a corrupting effect, my friend... it had to be destroyed.\"\n\n\"'It', you speak of the power as something tangible.\"\n\n\"You may have seen it during our battles. The Ring around my manhood? This was the source of my power and it has been destroyed.\"\n\n\"I see,\" Sharis said, looking concerned and walking around a large square table with several maps and parchments upon it.\n\n\"Is there something the matter, general?\"\n\n\"Yes, I'm afraid there is, and on more than one front. Rumors abound, my king... rumors of the Ring you have just confirmed and rumors of your power being removed. This presents several problems for us.\"\n\n\"Go on.\"\n\n\"As you know, in your absence several families have bitterly waged a war of words that almost came to actual war over who should sit on the throne. The only reason there was a respite in the storm was because you sent word of your survival. We all assumed you held the power you once possessed and thereby no one dared question your authority. Now that the rumors are true and the power is no more your very life is in danger. House Granvas and Lord Byron have undoubtedly learned of your apparent lack of power and possibly have seen to your undoing already. Not to mention your own house conspiring against you.\"\n\n\"My own house and House Granvas?\" Henri asked.\n\n\"Yes, the two were the foremost in contending for the throne. Your cousins and house were pitted on the battlefield against them.\"\n\nHenri smiled.\n\n\"What is humorous, my lord? What are you not telling me?\"\n\n\"The Lady Yvonne, which I gave you the letter to give to; she is of House Granvas. I wish her to be my queen. This will merge our two families.\"\n\n\"That is all well and good, my king... if you actually survive long enough to wed. Even then I fear you have many enemies, the like of which I have just scratched the surface. If you wed Lady Yvonne and bring your two houses together in peace, there is still the threat from outside.\"\n\n\"Meaning other countries?\"\n\n\"Yes, when they learn 'the Master' for lack of a better description, is no longer king we will be attacked possibly the same hour. We suffered too much loss trying to defend against the other Master months past. We, I'm afraid, could not gather a sufficient army to defend ourselves again. Without the power this Ring possessed, we will unavoidably be defeated.\"\n\n\"How long could we hold out, General?\" Henri asked.\n\n\"That depends on who and how many attack, my king.\"\n\n\"But we vanquished the old Master's forces and country; surely they are worse off than we?\"\n\n\"Yes, they are not who concerns me. It is our southern border, Garigasia of where you have returned. The letter Lady Yvonne read to me spoke of a treaty you went to procure. I have a feeling this was not entirely accurate.\"\n\nHenri looked away from the big general's eyes, giving his deception away. \"Yes, you are correct, general. I did not travel there to make treaty with them, but to find the source of the power I wielded.\"\n\n\"And in so doing have destroyed it,\" General Sharis said, shaking his head. \"If the source was in Garigasia and you have destroyed the source, shouldn't we expect retaliation?\"\n\n\"I do not know... I don't think so. The source was not with the rulers of Garigasia but with the Daughters of Mentula.\"\n\n\"Daughters of Mentula? The women who worshiped the Master? How is this possible?\"\n\n\"It is a long story but know this. Four witches formed the Ring for a terrible purpose and used the Daughters as things of naught for selfish desires. They were the source and I destroyed them when I destroyed the Ring.\"\n\nThe general placed his two large hands on the table in front of him, bent his head and said, \"I fear the loss of which, will be our destruction as well.\"\n\n**\n\nLord Byron was thrusting his cock repeatedly into the young maid before him, when the knock sounded on the door. He ignored it, he was approaching climax and for a man of his age did not want to start again, he worried his cock would lose its arousal. The young maid was new, and this was his first time with her, increasing his pleasure and stimulation. She was quite beautiful, for a commoner, with large almond eyes, hair of gold and the tight young body he had come to crave over women nearer his age. Her small breasts were round and perky, wonderful to look upon as she laid on her back with him on his knees, thrusting vigorously into her tight sex. She made small sounds, with each penetration. He knew not if they were of pain or pleasure, nor did he care.\n\nHe recognized whoever had interrupted him would not enter until he called for them to do so. Continuing, he increased his speed and depth, driving the entire length he could muster into the young maiden until even her small breasts were wholly moving on her chest from the force. Sweat dripped from his balding head, cascading down upon the lovely tight stomach of the maiden, her legs spread and in his hands. The sweet pleasure increased and peaked as the knock sounded again. Holding himself deep, Lord Byron erupted, filling the young woman's womb with his seed. The pleasure was very satisfying and he felt his cock convulse several times, ejaculating his potent seed forth. She would not be the first maid he had impregnated or the last if a child is the result, but this did not matter to him. Many have been sent away to have their bastard child from an unknown father. He had no idea how many children he actually had. The two sons from his proper wife were all that mattered to him.\n\nPulling his spent cock from the maid's body, he stood off the bed, told her to leave and clothed himself with a robe. Once the maid was gone out the back, he called to the person outside his door.\n\n\"My lord, urgent news... the king has returned,\" a servant said, after entering.\n\n\"Has he? Very well, send for my sons... I want them here immediately.\"\n\n\"As you wish,\" the squirrely servant said, turning quickly to leave.\n\n**\n\nThe Rusted Pot was nicer than both Arianna and Heather expected. That wasn't to say they didn't get ogled and cat called by the men in the common room, but that was predictable. The inn owner, a tall grey haired older man, took their money and showed them to a single room with two beds one floor above the large room where meals were served, music played and men drank, hassling the pretty bar maids and any other woman who happened in.\n\nHeather sat down on her bed with her small sack of belongings. \"I expect we shall just wait here now, or do you want to look around the city?\" she asked Arianna.\n\n\"It is almost sun down; we should eat and stay in for the night. I don't imagine Henri coming to collect us for some time, possibly days.\"\n\n\"I'm of the same opinion, but he will come, this I know. He is the most honorable man I have ever known. He spared my life as the Master, when I tried to accept Mentula into my body and was unable. I cannot know what resistance that must have taken but if he could do that in possession of the Ring he is a man of unsurpassed integrity and fortitude.\"\n\n\"I know. You do not need to convince me, sister. He also spared my life, we have much in common.\"\n\n\"Yes, we both crave him. It is our training that enhances our desires for him and willingness to please him at all cost. We shall keep him very happy and find good lives, even if they are not what we once wanted.\"\n\n\"It is well for us to live and please then to have died. Do you think he will have trouble convincing the two ladies he spoke of in accepting us?\" Arianna asked.\n\n\"Of course, they are women after all... you know how jealous we can be.\"\n\n\"If anyone can do it, Henri can.\"\n\n**\n\nIt was night before Henri left General Sharis. He had come home to a plethora of problems; the chief among them was the threat on his very life. He did not dare go to the palace, knowing full well his enemies would expect that. Sharis more or less told him he couldn't even trust the palace guards or anyone for that matter. Henri asked him what he could do and the only suggestion the general had was to have not destroyed the ring. Short of that, it didn't look likely he would survive a week. Henri had only one option, and he didn't even know if it was possible.\n\nLeaving his horse, he took his pack and headed toward the Rusted Pot, keeping to the alleyways and paths he knew well from his time before becoming king. The inn was one of his favorite places to visit. The bar maids were the prettiest and most of them knew Henri very well. He also knew a way into the inn that didn't involve the front door. He thought about going to Yvonne and Serena but they could not help him with what he needed most. Staying alive was paramount.\n\nGaining access to the kitchen from the back of the inn, Henri used the back stairs to reach the second floor where the guest rooms were. He was spotted by a maid he had had relations with several times before he had checked a single room.\n\n\"Henri? Is that you?\" Mary asked.\n\n\"Yes, it is me.\"\n\n\"What are you doing here? Are you not the king?\"\n\n\"I am, but I don't know for how long with my enemies about. I need your help, Mary.\"\n\n\"What can I do, my king?\" she asked, bowing.\n\n\"Two women came to this inn earlier in the day for lodging. Do you know of whom I speak?\"\n\n\"Yes, they attracted much attention from the men; very beautiful and exotic.\"\n\n\"Yes, that is them. Of which room did they procure?\" he asked.\n\n\"I will show you?\" she said, leading him down the darkened hallway with a candle.\n\nMary knocked softly on the door she led Henri to and it was opened soon after with Heather at the door and Arianna standing behind her. They both saw Henri at the same time and he saw the surprise and excitement on their faces.\n\n\"Thank you, Mary; I trust you can keep my presence here a secret? I'll make it up to you.\"\n\n\"Anything for you, my king and I have just the thing you can do to show your gratitude,\" she said, placing her hand on his strong chest and kissing his cheek.\n\nShe left him and he walked into the room with the witches.\n\n\"We know now why you picked this inn,\" Heather said.\n\n\"Yes... before I was king I frequented this place.\"\n\n\"We did not expect you so soon,\" Arianna added. \"Are we already going to the palace to serve you?\"\n\n\"Not yet, there are complications and I need your assistance with something,\" he said walking to one of the beds and placing his pack onto it.\n\nHe began rummaging through it and to the surprise of both women, pulled out the large leather bound spell book he had taken from the temple of Mentula.\n\n\"I thought you destroyed that,\" Heather said.\n\n\"I was going to but now I'm glad I did not. I've discovered that without the Ring and the power it gives me I'm a dead man. I have too many enemies from within in and armies without. I need you two to find a way to fix the ring and restore its power or all is lost.\"\n\nBoth women were stunned. Both had accepted the fact that they would never again take the path toward the Mothers. It was once their life and only goal. Having come to terms, in not gaining the power they sought, wasn't easy to cope with. Now Henri was asking them to take it up again.\n\n\"We cannot! It feeds on the life of innocence. You know this, my lord,\" Arianna said.\n\n\"Only if I give into the temptations. I resisted before... I can do it again.\"\n\n\"We are far from strong enough to cast such a spell. We are unlearned,\" Heather added.\n\n\"The Mothers may have been as well and is why they needed four. I'm only asking for you to try. It is the only thing that can save my nation... save me,\" Henri said, holding the large book out to the women.\n\n\"We are only two, we cannot dare to possess enough power,\" Arianna said, shrinking away from the book.\n\n\"Please just read and learn. I must go but I will be back to see what you have discovered,\" he said, forcing the book into Heather's arms. \n\nHe left them with stunned looks, Heather holding the large book stiffly in her arms afraid to move. He hoped they would acquiesce and open it because he could see no other way, short of abandoning his country, Yvonne and Serena and the witches and flee, to keep his life.\n\n**\n\n\"You look exhausted, Serena,\" Yvonne said as Serena tried to keep her eyes open. \"Go to bed... I don't think Henri is coming to see us tonight.\"\n\n\"He has to. He's been away for so long,\" Serena argued.\n\n\"If he comes I'll awake you.\"\n\n\"Do you promise? I don't care how late the hour, you must promise to awaken me.\"\n\n\"I will,\" Yvonne said, smiling at her worried sister.\n\nHaving convinced her, Yvonne watched her sister leave to her bedchamber. Yvonne sat again with her hands in her lap, wondering if Henri had forgotten her. The hour was late, but both sisters had stayed awake long after their normal time in anticipation of Henri's visit. They both believed he would surely come and see them.\n\nYvonne stayed several moments longer before she found herself asleep in the chair. She shook awake as her body fell to the side. She stood to retire to her own bed when Henri appeared. Forgetting all custom and manners, she ran to him, embracing him with no reservations.\n\n\"I knew you would come,\" she said kissing him all over his face and neck.\n\nIt was then she noticed the smell. He smelled horrendous as if he had not bathed for weeks, which was accurate. He saw the look of concern on her gorgeous face and backed away from her.\n\n\"I'm sorry I have come in such a state. I have not yet bathed or even been to the palace.\"\n\n\"Why not, my king?\" she asked, getting back some of her lady like manners.\n\n\"I fear for my life. Reports abound, my lady... many seek my throne and I find myself alone and powerless.\"\n\n\"So the rumors are true. You've lost the power of the Ring.\"\n\n\"Yes, I was forced to destroy it to save many lives.\"\n\n\"I see. So what are you to do?\" she asked.\n\n\"I was hoping you would be my queen and this would quell the animosity House Granvas has toward me and my house.\"\n\n\"Is this a proposal then, my king?\" she asked, taken aback.\n\n\"Not a very proper one, my lady. I'm all out of sorts, I'm afraid. I'm exhausted, fifthly and running for my life it seems.\"\n\n\"Well, come with me... I will draw a bath and you shall rest. I really should awaken Serena, I told her I would if you came. Perhaps after your bath.\"\n\n\"I thank you, Yvonne, and I have missed you.\"\n\n\"I have missed you, my king,\" she said, holding her hand out to him and leading him to her chambers.\n\nShe left him standing in her room and she went to fetch hot water.\n\nSeveral trips later, she had a steaming bath for him and he began to remove his pungent clothing. She did not turn away, but watched with eagerness as the man she loved discarded his attire and stood before her naked once again. Her heart raced, she felt her loins flutter and her sex moisten from the arousal his naked form spurred within her. His long flaccid member hung between his legs a remarkable sight and something she has yearned to see and have again. She held her hand out and led him to the warm bath. He climbed in and she sat on a stool next to the bed, lathering soap in her hands to wash him.\n\n\"You don't have to wash me, you are not my servant?\" he said.\n\n\"I wish to, my lord.\"\n\nShe began with his chest, lathering up his strong muscles and neck, washing his arms and moving lower to his abdomen. She was not surprised when his cock rose from the soapy water and preceded fully erect before her eyes. Her hand shook in anticipation as she grasp his shaft and began lathering the exposed head and length with soap, moving under the water to find his large orbs. He moaned at her touch and her arousal increased as the sensations of his manhood in her grasp surged to her loins.\n\nReluctantly she let go of his throbbing shaft, washed his legs, feet and forced him to wet his hair so she could wash it before she finally was able to return to his cock.\n\n\"How much have you missed me, my lord?\" she asked, softly caressing his member as the water cooled.\n\n\"More than I can say, Yvonne. I thought of you daily... I'm fortunate to even be here.\"\n\n\"I have so yearned for your return. I have not known another in your absence. I must have you now?\" she said.\n\n\"What of Serena?\" he asked, enjoying her hands.\n\n\"We will awaken her after. She will want you as well and I must tell you of the agreement I have made with her. But not now,\" she said standing up.\n\nShe began removing her clothing and soon stood naked before her king, her love. She saw the pleasure on his face; saw his manhood surging with the blood of his arousal. He had missed her. Holding her hand out, Henri stood, stepping out of the grey water and took her in his arms. She did not mind the wet man's flesh; she only felt heat between them and an overwhelming desire to join with him. Suddenly he lifted her into his arms and carried her to the large feather bed, adorned with tall posts on each corner. She gasped with pleasure as he fell on top of her naked body and their flesh met again. His large shaft pinned between their bodies.",
        "They kissed powerfully, hands exploring, desire rising until neither could stand the anticipation for the sweet bliss of penetration. Both cried out in ecstasy as Henri's massive shaft spread her sex open, descending deep into her body. Words cannot describe the bliss Yvonne felt as the man she loved with all her body and soul was again within her. How she had missed his width and length, his touch and heat. She never wanted to be without him again. They stared in to each other's eyes for several moments without moving. His cock buried deep within her, as they basked in the renewed emotions and connection they shared.\n\nHis hands found her voluptuous breasts, sending electric jolts through them to her core. He began to slowly withdrawal before thrusting back into her, repeating this slow love making over and over. She felt light, almost if she was floating from the pleasure washing over her. It had been months, the longest she had ever gone without having a man since her virginity was taken. This moment was as if she was a newly taken lady, she even felt tight around his shaft and wondered if this was due to the repair the doctor had to perform after the Master violated her. She contemplated this as Henri continued making love to her, gently driving his cock in deep and fondling her aroused breasts. As she pondered her new tightness, her mind turned to the forbidden act and she questioned whether she would be able to take him in this manner after her injury.\n\nThey kissed, touched and Henri kept a steady rhythm of thrusts into her body. Time passed in sweet bliss but the thought would not leave her mind even as she climaxed. She needed to know if all the preparation he had labored to perform was for naught. She knew Serena would still be able to accept his width with ease and she did not want this to be something she could not give him as his wife. Even in fear and trepidations she spoke.\n\n\"Take me as if you were preparing me for the Master... I desire to feel you inside my forbidden orifice.\"\n\nHenri froze as she spoke these words. He was seconds away from his own blissful release. He looked into her eyes and she smiled and nodded for him to do as she asked. He must have perceived why because he looked concerned and spoke.\n\n\"Are you sure, what of your injury? What if I harm you again?\"\n\n\"This is why I must try. I must know if I can please you in this manner after all the time we spent in preparation.\"\n\n\"There is no need; the Master is not to have you again.\"\n\n\"I know... I confess I felt great pleasure in the forbidden act. I know you did as well. I wish to know if I am able to feel this again.\"\n\n\"If you wish, my love.\"\n\nHe sat back on his knees, his wet, throbbing member coming free of her sex. She was well prepared for him, having sufficient secretions running to her puckered orifice as well as coating his extensive shaft. He ran his finger down her sex, inserting his digit into her hot tunnel before proceeding lower. He prodded her tight ring, gently circling, and spreading her creamy juices around before trying to penetrate her. His finger easily entered her. She had not forgotten what she had learned and her muscles obeyed her as if she was never injured. He added another finger, moving in and out slowly before gaining speed and simulating rather rapid thrusts. She felt wonderful, nothing but pleasure returned from his digits and she was confident she would have no ill effects from the Master's violation.\n\n\"Are you ready?\" he asked.\n\n\"Yes! Take me now,\" she breathed in flushed anticipation.\n\nPositioning himself close to her body, Henri took hold of his ragging cock, bending it down with much force, until the purple bulbous head was at the entrance to her slightly opened anus. She felt the heat from his blood-engorged member, felt the head make contact and the pressure begin as he moved slowly forward. She remembered her preparations and opened to him as he moved on. She was tighter than she remembered and she felt a strange tug on the upper part of her snug ring where the flesh had been sown back in place, but it was nothing to concern her. His massive cock slid into her easily enough and she gasped in pleasure as he filled her with the pleasure she had hoped for. He descended into her depths, fully buried to his orbs, holding himself there as they gazed upon one another.\n\n\"You seem to have healed well,\" he said.\n\n\"Yes, it is wonderful... my worries were unfounded,\" she said in return.\n\n\"I'm happy of this.\"\n\nHe began to slide himself from her body, the sensation of emptiness was soon replaced by his width as Henri thrust himself deep once again. He again took hold of her breasts, something he never did enough of during the days in captivity. His hands felt like heaven upon them, increasing her emotional bond she had. She held her own legs, bent and wide by the knees. His thrusts became faster, his breathing increased and she saw the familiar look on his face as he approached his climax. She had grown fond and aware of his sounds and signs of nearing his peak. She was well acquainted with his body. She felt his shaft widen within her as he continued to thrust his wonderful manhood deep within her bowels. With Serena missing, she did not expect him to withdraw upon his climax, but to ejaculate deep within her.\n\nOne hand left her knee, finding her engorged clitoris. She circled it with two fingers, grinding down upon the center of her pleasure, wanting to climax as he did. Her pleasure increased exceedingly as she played with her fingers, she felt her juices flowing out of her sex to meet his moving shaft, keeping the friction between her forbidden orifice and his shaft perfect. He was nearing the end; she worked faster on her clitoris and hurried to meet his eruption with her own.\n\nHis grip increased on her breasts, his breathing was labored and he thrust hard and fast until suddenly he held himself deep within her and she felt his cock expand in its ejaculating convulsions, spewing his seed into her depths. She was at her peak a second later. Her climax overwhelmed her, clenching her muscles and convulsing in a rhythmic cadence. She felt her tight anal muscles involuntarily grip his shaft, constricting without her control. They both called out in ecstasy as they climaxed together until Henri fell onto her, both panting for air.\n\n**\n\n\"Is it done?\" Lord Byron asked as his sons returned.\n\n\"No, my lord,\" the eldest said.\n\n\"No! Why not!?\" Byron bellowed.\n\n\"The king has disappeared. He never arrived at the palace; no one has seen him since he entered the city.\"\n\n\"Someone has warned him... he hides like a rat!\"\n\n\"What do you want us to do?\" the younger son asked.\n\n\"Keep vigilant, have the assassins watching and listening for signs of him. We'll find him. The people will demand their king, and when he appears he will die.\"\n\n**\n\nHeather and Arianna remained awake late into the night reading the text of the Mothers. Hundreds of spells collected over centuries existed in the large book. They read things they never imagined possible before, things they had never dreamed of, as they became daughters of Mentula. They both shook with excitement and nervousness as the large pages turned in their fingers. In time, they found the spell they were looking for: 'Immortality'. This was the spell that had created the ring and bound it to the four smaller the Mother's had worn. Lust and desire fueled the bond. Pleasure and power beyond anything they had fathomed awaited them if they were successful. It was the greatest spell the Mothers had ever cast.\n\n\"He does not comprehend what he is asking?\" Heather said, after finishing the reading.\n\n\"No, I don't think we do either. He only wishes to save his life and knows no other way,\" Arianna added.\n\n\"The Ring controls the Master. The men were meant to be expendable. The change in his form will eventually kill him. The immortality was only for the Mothers,\" Heather said.\n\n\"Yes, they used them and us. We have to tell him.\"\n\n\"No... We must do as he asks for now. Once all is well and he has control we will discuss the dangers.\"\n\n\"If we proceed we need two more.\"\n\n\"Yes, but whom?\"\n\n**\n\nHenri's cock eased its climatic contractions before Yvonne's climax had ended. He could feel her body squeezing his shaft as she continued to convulse beneath him. The pleasure of his climax was great, enhance by his love for this woman and the days he had gone without ejaculation. He waited until her body relaxed under him before moving.\n\n\"Oh, Henri, my king... I love thee immeasurably,\" she said holding him tight to her body with his cock still deep within her.\n\n\"And I thee,\" he returned.\n\n\"Should we announce our engagement?\"\n\n\"Yes, we must. This may ease the contention among the houses. Give them something else to ponder on.\"\n\n\"I so desire to be your queen. I knew you would return and propose.\"\n\n\"You were correct, my lady. But what of Serena?\"\n\n\"She loves you greatly. We have discussed what must be done. She has accepted the reality that I shall be your queen as I am the eldest. She wishes to be with you so much she was willing to become my handmaid and servant to have access to you.\"\n\n\"What did you say to her?\" Henri asked in shock.\n\n\"I was surprised as you are now. Once I gathered my thoughts I told her she could never be my handmaiden or servant but remain a lady of House Granvas.\"\n\nHenri could feel his spent penis shrinking inside Yvonne's ass. Her natural muscles pushing him from her body as his shaft softened. He moved back, removing himself from her and listened to the agreement the sisters had made concerning him.\n\n\"I told her I would share you, as we did before. She is to have access to you when she wishes and you to her.\"\n\n\"I'm sure this was not an easy decision to make,\" Henri said.\n\n\"No, but she loves you. I could not deny her. What say you of this arrangement?\" Yvonne asked.\n\n\"You are an amazing woman, Yvonne. I don't know another woman who would be willing to do this. I will accept her as a second wife as if she were married to me as well, if it is what you want.\"\n\n\"It is, and she will be most pleased. I should wake her now and tell her,\" she said.\n\nHenri let her up and she used the bedpan before donning a robe.\n\n\"What should I put on?\" Henri asked.\n\n\"Definitely not those dirty clothes, they should be burned. I think my mother kept some of my father's things after he died. I will find you something.\"\n\nHenri washed his cock off in the cold bathwater and then waited on the bed until Yvonne returned with a very fine robe, which he put on.\n\n\"I will wake Serena now.\"\n\nNot long after, the door burst open and Serena ran toward Henri with all the glee and jubilance she had. She practically jumped into his arms as he stood from the bed.\n\n\"I knew you would come... I told Yvonne it would be so!\" she called out, kissing Henri and hugging him.\n\n\"It is good to see you, my lady,\" Henri said as they embraced.\n\n\"Yvonne tells me you've had a bath and have proposed!\"\n\n\"Yes, and she has told me of your arrangement.\"\n\n\"And have you accepted it?\" Serena asked.\n\n\"Yes, as if you were my wife as well.\"\n\nSerena squealed like a little girl upon hearing this and renewed her embrace and kisses. \"I have dreamed about you almost every night since I watched you revenge our nation with the Ring. I have prayed to the ancients for your safe return.\"\n\n\"I have returned safe, my lady but my life is in danger as of yet. My marriage to your sister will hopefully quell some of the danger and animosity but we are in peril as a country from others.\"\n\n\"We can discuss this later. I have so yearned for your return, my king... my very essence and soul desires to be with you as we have before. I am not ashamed to say at this very moment my body is aroused and stimulated in desires,\" she said, kissing him and pushing him backward until he fell on Yvonne's bed.\n\nHis robe was soon opened and Serena clawed at his chest and body, kissing his neck, chest and working her way down his body to his growing cock. She took hold of it with such force her grip was bordering on painful. This was soon overlooked as the young woman opened her mouth and descended onto his cock. He was grateful he had washed himself in the cold tub before Yvonne returned with the robe.\n\nHot, wet velvet encapsulated his head, working its way down his shaft until Serena had half of his long member in her mouth, sucking intensely on the head as she withdrew. He looked up at Yvonne who was watching and grinning. She mouthed the words, \"I told you.\" He only nodded and dropped his head back on the bed as the sucking and oral delight continued.\n\nThe young woman was voracious, sucking and stroking his cock as if her life depended on it. If he hadn't had just climaxed with Yvonne he would have in Serena's mouth. But with his pent up load expelled, he was able to lay back and enjoy the intense sensations of Serena's talented mouth and hands. She soon ended her oral pleasures and began removing her bedclothes in a rush to have him. She straddled him once naked, prepared to take him from on top. He could see she had maintained her personal grooming, as her sex was smooth and glistening with her arousal. He didn't know what to expect. Would she take him in the proper way or the forbidden? After he had taken her virginity they never again enjoyed this pleasure, focusing on preparation and the Master's coming.\n\nHer desires became apparent when she began fingering her sex and lubricating her forbidden hole as if she was still in captivity. He kept quiet, letting her stay in control. If this was what she desired he would not question it. When she was sufficiently prepared, she rose up high on her knees, grabbed his throbbing shaft behind her and pulled him vertical. Easing down onto his bulbous head, she easily opened and took his wide cock into her bowels as if he had never left.\n\nEcstasy enthralled his cock from head to balls. Her tight ass gripped the whole of his length as she descended onto him. She moaned in pleasure, grabbed both of her breasts and squeezed them as her bottom made contact with his body in full penetration. She looked amazing, her young tight body aroused and stimulated, her dark hair braided for sleeping. She began moving up and down his extensive length almost as aggressively as she had sucked him. She continued to fondle her own breasts so Henri went for her young, tight sex and stimulated clitoris. She screamed in rapture as he fingered her and ran his thumb up and over her nub several times, as she rode him.\n\nShe had not lost any of her preparations, taking him fast and deep as if no time had passed from the day the Master had arrived. He knew she would desire his semen in her mouth, probably had been craving it as much as what she was doing then. Henri watched this young beauty work his shaft in and out of her body with much enjoyment. He knew what she wanted and he was most willing to help her. Suddenly Yvonne appeared at the bedside and sat down on the edge next to them. She placed her hand on Henri's chest and together they watched Serena labor in her goal.\n\nAll the anticipation and time she had waited, made her climax burst forth quickly. He knew she was in the grips of a powerful orgasm when he felt her body constrict and clench upon his cock. She suppressed her scream of ecstasy and then began laughing as if she had done something humorous. Yvonne was giggling as well. Henri meant to ask them why but he was overcome with pleasure as Serena's constricting ass, milked his cock with exquisite perfection.\n\n\"You stopped yourself from screaming,\" Yvonne said laughing.\n\n\"I know... I didn't want to wake myself if this was a dream,\" Serena giggled back.\n\n\"This is not a dream, sister. Henri is here... enjoy him.\"\n\n\"Oh, I am, sister... I most assuredly am,\" Serena said, as she continued to climax and ride Henri, making up for lost time.\n\nPleasure was increasing in Henri's shaft. Even having ejaculated not long before, Serena's aggressive movements and convulsing ass were doing wonders to his cock. His fingers were coated with her secretions and as she would rise off him, he lathered his shaft with them. His large orbs grew tight among his firm shaft as he began to near climax. Serena continued to rapidly move up and down, building her pleasure up once again. He watched her pinch her nipples, tugging them away from her exquisite breasts before fondling them with her palms. A light sheen of perspiration appeared on the beautiful young woman in her efforts and Henri's pleasure increased to a heightened state.\n\nShe had to work longer and harder to gain orgasm but she did so as the night began to be called dawn. Her body gave in to the pleasure and her climax overwhelmed her this time, forcing her to fall forward onto Henri's chest, shaking and convulsing upon his almost climaxing cock. He was on the verge and almost came inside her but held out knowing she would most likely want him to supply her with his effluent in her favorite way. He rolled her over, maintaining his penetration into her tight ass and sat back onto his knees, lifting her legs in the same motion.\n\nHe began to thrust into her before her climax had ended. She could not suppress her screams this time and began panting and calling out loudly in pure delight of passion. His cock expanded with in her, his pleasure peaked. He held his muscles tight, pulling out of her quivering ass and as he did, she reacted as he knew she would. Sitting up, the young Serena reached forward, taking hold of his cock and pulling him to her open mouth, just as his muscles gave in and the first torrent of semen sprayed from his purple head. She caught it perfectly in her mouth, stroking him for another and opening her mouth as wide as she could. The next burst splattered off her upper teeth and she lowered him as she stroked the next burst down across her tongue. Several more filled her mouth as she pulled him closer and sucked the remaining load in to her mouth. Releasing him with an audible pop, she swallowed the extent of his plentiful load and licked her lips for the remains.\n\n\"Oh, by the ancients I have missed that!\" she called out, almost vibrating with pleasure and glee.\n\n\"It was good I remembered to withdraw upon my climax,\" Henri said.\n\n\"Oh yes, my lord, very well indeed. But I'm afraid I've spent you and now. Yvonne will have to wait to have you for herself.\"\n\n\"I can wait, sister,\" Yvonne said, giving Henri a half grin.\n\n\"Dawn is upon us,\" Henri said, falling over on the bed.\n\n\"You should sleep, you must be exhausted from your travels and now no sleep,\" Yvonne said. \"You rest; Serena and I will take care of everything.\"\n\nHenri was overcome with fatigue and was out before she had spoken the last word. "
    ],
    "authorname": "jasliz",
    "tags": [
        "fantasy adventure",
        "drama",
        "witches",
        "supernatural"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-master-and-the-ring-ch-08"
}